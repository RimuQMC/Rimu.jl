var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(fs\"|1 1 1 1 1 1‚ü©\"; u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndœÑ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dœÑ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ¬± $(r.œÉ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ¬± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ¬± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ¬± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ¬± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ¬± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ¬± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ¬± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ¬± 0.13748856752861724\n   Replica 2: -3.974753826250174 ¬± 0.12466355058904417\n   Replica 3: -4.011054302602586 ¬± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(fs\"|1 1 1 1 1 1‚ü©\"; u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1‚ü©\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(fs\"|1 1 1 1 1 1‚ü©\"; u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1‚ü©\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0‚ü©\"=>-14.1421, fs\"|0 2 1 1 1 1‚ü©\"=>-14.1421, fs\"|1 1 1 1 0 2‚ü©\"=>-14.1421, fs\"|1 2 0 1 1 1‚ü©\"=>-14.1421, fs\"|2 0 1 1 1 1‚ü©\"=>-14.1421, fs\"|1 1 1 2 0 1‚ü©\"=>-14.1421, fs\"|1 1 2 0 1 1‚ü©\"=>-14.1421, fs\"|1 1 0 2 1 1‚ü©\"=>-14.1421, fs\"|1 1 1 0 2 1‚ü©\"=>-14.1421, fs\"|1 0 2 1 1 1‚ü©\"=>-14.1421, fs\"|2 1 1 1 1 0‚ü©\"=>-14.1421, fs\"|0 1 1 1 1 2‚ü©\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    targetwalkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip790\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip790)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip791\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip790)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip792\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip792)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip792)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip792)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip792)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip790)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1248.87 1391.71 L1248.87 1397.25 Q1246.38 1395.98 1243.71 1395.34 Q1241.04 1394.71 1238.17 1394.71 Q1233.81 1394.71 1231.62 1396.04 Q1229.45 1397.38 1229.45 1400.05 Q1229.45 1402.09 1231.01 1403.27 Q1232.57 1404.41 1237.28 1405.46 L1239.29 1405.91 Q1245.52 1407.25 1248.13 1409.7 Q1250.78 1412.12 1250.78 1416.48 Q1250.78 1421.44 1246.83 1424.34 Q1242.91 1427.23 1236.04 1427.23 Q1233.17 1427.23 1230.06 1426.66 Q1226.97 1426.12 1223.53 1425.01 L1223.53 1418.96 Q1226.78 1420.65 1229.93 1421.51 Q1233.08 1422.33 1236.17 1422.33 Q1240.3 1422.33 1242.53 1420.93 Q1244.76 1419.5 1244.76 1416.92 Q1244.76 1414.54 1243.14 1413.26 Q1241.55 1411.99 1236.1 1410.81 L1234.07 1410.33 Q1228.62 1409.19 1226.2 1406.83 Q1223.79 1404.45 1223.79 1400.31 Q1223.79 1395.28 1227.35 1392.54 Q1230.91 1389.8 1237.47 1389.8 Q1240.72 1389.8 1243.58 1390.28 Q1246.45 1390.76 1248.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1265.89 1380.54 L1265.89 1390.66 L1277.96 1390.66 L1277.96 1395.22 L1265.89 1395.22 L1265.89 1414.57 Q1265.89 1418.93 1267.07 1420.17 Q1268.28 1421.41 1271.94 1421.41 L1277.96 1421.41 L1277.96 1426.31 L1271.94 1426.31 Q1265.16 1426.31 1262.58 1423.8 Q1260.01 1421.25 1260.01 1414.57 L1260.01 1395.22 L1255.71 1395.22 L1255.71 1390.66 L1260.01 1390.66 L1260.01 1380.54 L1265.89 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1316.15 1407.02 L1316.15 1409.89 L1289.22 1409.89 Q1289.61 1415.94 1292.85 1419.12 Q1296.13 1422.27 1301.96 1422.27 Q1305.33 1422.27 1308.48 1421.44 Q1311.66 1420.61 1314.78 1418.96 L1314.78 1424.5 Q1311.63 1425.83 1308.32 1426.53 Q1305.01 1427.23 1301.61 1427.23 Q1293.08 1427.23 1288.08 1422.27 Q1283.11 1417.3 1283.11 1408.84 Q1283.11 1400.08 1287.82 1394.96 Q1292.57 1389.8 1300.59 1389.8 Q1307.78 1389.8 1311.95 1394.45 Q1316.15 1399.07 1316.15 1407.02 M1310.3 1405.3 Q1310.23 1400.5 1307.59 1397.63 Q1304.98 1394.77 1300.65 1394.77 Q1295.75 1394.77 1292.79 1397.54 Q1289.86 1400.31 1289.42 1405.34 L1310.3 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1331.43 1420.96 L1331.43 1439.87 L1325.54 1439.87 L1325.54 1390.66 L1331.43 1390.66 L1331.43 1396.07 Q1333.28 1392.89 1336.08 1391.36 Q1338.91 1389.8 1342.82 1389.8 Q1349.32 1389.8 1353.36 1394.96 Q1357.43 1400.12 1357.43 1408.52 Q1357.43 1416.92 1353.36 1422.08 Q1349.32 1427.23 1342.82 1427.23 Q1338.91 1427.23 1336.08 1425.71 Q1333.28 1424.15 1331.43 1420.96 M1351.35 1408.52 Q1351.35 1402.06 1348.68 1398.4 Q1346.04 1394.71 1341.39 1394.71 Q1336.74 1394.71 1334.07 1398.4 Q1331.43 1402.06 1331.43 1408.52 Q1331.43 1414.98 1334.07 1418.67 Q1336.74 1422.33 1341.39 1422.33 Q1346.04 1422.33 1348.68 1418.67 Q1351.35 1414.98 1351.35 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1389.87 1391.71 L1389.87 1397.25 Q1387.38 1395.98 1384.71 1395.34 Q1382.04 1394.71 1379.17 1394.71 Q1374.81 1394.71 1372.62 1396.04 Q1370.45 1397.38 1370.45 1400.05 Q1370.45 1402.09 1372.01 1403.27 Q1373.57 1404.41 1378.28 1405.46 L1380.29 1405.91 Q1386.52 1407.25 1389.13 1409.7 Q1391.78 1412.12 1391.78 1416.48 Q1391.78 1421.44 1387.83 1424.34 Q1383.91 1427.23 1377.04 1427.23 Q1374.18 1427.23 1371.06 1426.66 Q1367.97 1426.12 1364.53 1425.01 L1364.53 1418.96 Q1367.78 1420.65 1370.93 1421.51 Q1374.08 1422.33 1377.17 1422.33 Q1381.3 1422.33 1383.53 1420.93 Q1385.76 1419.5 1385.76 1416.92 Q1385.76 1414.54 1384.14 1413.26 Q1382.55 1411.99 1377.1 1410.81 L1375.07 1410.33 Q1369.62 1409.19 1367.2 1406.83 Q1364.79 1404.45 1364.79 1400.31 Q1364.79 1395.28 1368.35 1392.54 Q1371.92 1389.8 1378.47 1389.8 Q1381.72 1389.8 1384.58 1390.28 Q1387.45 1390.76 1389.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip792)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1260.83 2211.02,1260.83 \"/>\n<polyline clip-path=\"url(#clip792)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1003.2 2211.02,1003.2 \"/>\n<polyline clip-path=\"url(#clip792)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,745.574 2211.02,745.574 \"/>\n<polyline clip-path=\"url(#clip792)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,487.944 2211.02,487.944 \"/>\n<polyline clip-path=\"url(#clip792)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,230.314 2211.02,230.314 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1260.83 423.181,1260.83 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1003.2 423.181,1003.2 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,745.574 423.181,745.574 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,487.944 423.181,487.944 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,230.314 423.181,230.314 \"/>\n<path clip-path=\"url(#clip790)\" d=\"M356.339 1246.63 Q352.728 1246.63 350.899 1250.2 Q349.094 1253.74 349.094 1260.87 Q349.094 1267.97 350.899 1271.54 Q352.728 1275.08 356.339 1275.08 Q359.973 1275.08 361.779 1271.54 Q363.608 1267.97 363.608 1260.87 Q363.608 1253.74 361.779 1250.2 Q359.973 1246.63 356.339 1246.63 M356.339 1242.93 Q362.149 1242.93 365.205 1247.54 Q368.284 1252.12 368.284 1260.87 Q368.284 1269.6 365.205 1274.2 Q362.149 1278.79 356.339 1278.79 Q350.529 1278.79 347.45 1274.2 Q344.395 1269.6 344.395 1260.87 Q344.395 1252.12 347.45 1247.54 Q350.529 1242.93 356.339 1242.93 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M290.043 1016.55 L306.363 1016.55 L306.363 1020.48 L284.418 1020.48 L284.418 1016.55 Q287.08 1013.79 291.664 1009.16 Q296.27 1004.51 297.451 1003.17 Q299.696 1000.65 300.576 998.91 Q301.478 997.151 301.478 995.461 Q301.478 992.706 299.534 990.97 Q297.613 989.234 294.511 989.234 Q292.312 989.234 289.858 989.998 Q287.427 990.762 284.65 992.313 L284.65 987.59 Q287.474 986.456 289.927 985.878 Q292.381 985.299 294.418 985.299 Q299.789 985.299 302.983 987.984 Q306.177 990.669 306.177 995.16 Q306.177 997.289 305.367 999.211 Q304.58 1001.11 302.474 1003.7 Q301.895 1004.37 298.793 1007.59 Q295.691 1010.78 290.043 1016.55 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M316.224 985.924 L334.58 985.924 L334.58 989.859 L320.506 989.859 L320.506 998.331 Q321.524 997.984 322.543 997.822 Q323.562 997.637 324.58 997.637 Q330.367 997.637 333.747 1000.81 Q337.126 1003.98 337.126 1009.4 Q337.126 1014.97 333.654 1018.08 Q330.182 1021.16 323.862 1021.16 Q321.687 1021.16 319.418 1020.78 Q317.173 1020.41 314.765 1019.67 L314.765 1014.97 Q316.849 1016.11 319.071 1016.66 Q321.293 1017.22 323.77 1017.22 Q327.774 1017.22 330.112 1015.11 Q332.45 1013.01 332.45 1009.4 Q332.45 1005.78 330.112 1003.68 Q327.774 1001.57 323.77 1001.57 Q321.895 1001.57 320.02 1001.99 Q318.168 1002.41 316.224 1003.28 L316.224 985.924 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M356.339 989.002 Q352.728 989.002 350.899 992.567 Q349.094 996.109 349.094 1003.24 Q349.094 1010.34 350.899 1013.91 Q352.728 1017.45 356.339 1017.45 Q359.973 1017.45 361.779 1013.91 Q363.608 1010.34 363.608 1003.24 Q363.608 996.109 361.779 992.567 Q359.973 989.002 356.339 989.002 M356.339 985.299 Q362.149 985.299 365.205 989.905 Q368.284 994.489 368.284 1003.24 Q368.284 1011.97 365.205 1016.57 Q362.149 1021.16 356.339 1021.16 Q350.529 1021.16 347.45 1016.57 Q344.395 1011.97 344.395 1003.24 Q344.395 994.489 347.45 989.905 Q350.529 985.299 356.339 985.299 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M286.062 728.294 L304.418 728.294 L304.418 732.229 L290.344 732.229 L290.344 740.701 Q291.363 740.354 292.381 740.192 Q293.4 740.007 294.418 740.007 Q300.205 740.007 303.585 743.178 Q306.964 746.349 306.964 751.766 Q306.964 757.345 303.492 760.446 Q300.02 763.525 293.701 763.525 Q291.525 763.525 289.256 763.155 Q287.011 762.784 284.603 762.044 L284.603 757.345 Q286.687 758.479 288.909 759.034 Q291.131 759.59 293.608 759.59 Q297.613 759.59 299.951 757.484 Q302.288 755.377 302.288 751.766 Q302.288 748.155 299.951 746.048 Q297.613 743.942 293.608 743.942 Q291.733 743.942 289.858 744.359 Q288.006 744.775 286.062 745.655 L286.062 728.294 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M326.177 731.373 Q322.566 731.373 320.737 734.937 Q318.932 738.479 318.932 745.609 Q318.932 752.715 320.737 756.28 Q322.566 759.821 326.177 759.821 Q329.811 759.821 331.617 756.28 Q333.446 752.715 333.446 745.609 Q333.446 738.479 331.617 734.937 Q329.811 731.373 326.177 731.373 M326.177 727.669 Q331.987 727.669 335.043 732.275 Q338.122 736.859 338.122 745.609 Q338.122 754.335 335.043 758.942 Q331.987 763.525 326.177 763.525 Q320.367 763.525 317.288 758.942 Q314.233 754.335 314.233 745.609 Q314.233 736.859 317.288 732.275 Q320.367 727.669 326.177 727.669 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M356.339 731.373 Q352.728 731.373 350.899 734.937 Q349.094 738.479 349.094 745.609 Q349.094 752.715 350.899 756.28 Q352.728 759.821 356.339 759.821 Q359.973 759.821 361.779 756.28 Q363.608 752.715 363.608 745.609 Q363.608 738.479 361.779 734.937 Q359.973 731.373 356.339 731.373 M356.339 727.669 Q362.149 727.669 365.205 732.275 Q368.284 736.859 368.284 745.609 Q368.284 754.335 365.205 758.942 Q362.149 763.525 356.339 763.525 Q350.529 763.525 347.45 758.942 Q344.395 754.335 344.395 745.609 Q344.395 736.859 347.45 732.275 Q350.529 727.669 356.339 727.669 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M284.835 470.664 L307.057 470.664 L307.057 472.655 L294.511 505.224 L289.627 505.224 L301.432 474.599 L284.835 474.599 L284.835 470.664 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M316.224 470.664 L334.58 470.664 L334.58 474.599 L320.506 474.599 L320.506 483.071 Q321.524 482.724 322.543 482.562 Q323.562 482.377 324.58 482.377 Q330.367 482.377 333.747 485.548 Q337.126 488.719 337.126 494.136 Q337.126 499.715 333.654 502.816 Q330.182 505.895 323.862 505.895 Q321.687 505.895 319.418 505.525 Q317.173 505.154 314.765 504.414 L314.765 499.715 Q316.849 500.849 319.071 501.404 Q321.293 501.96 323.77 501.96 Q327.774 501.96 330.112 499.854 Q332.45 497.747 332.45 494.136 Q332.45 490.525 330.112 488.418 Q327.774 486.312 323.77 486.312 Q321.895 486.312 320.02 486.729 Q318.168 487.145 316.224 488.025 L316.224 470.664 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M356.339 473.743 Q352.728 473.743 350.899 477.307 Q349.094 480.849 349.094 487.979 Q349.094 495.085 350.899 498.65 Q352.728 502.191 356.339 502.191 Q359.973 502.191 361.779 498.65 Q363.608 495.085 363.608 487.979 Q363.608 480.849 361.779 477.307 Q359.973 473.743 356.339 473.743 M356.339 470.039 Q362.149 470.039 365.205 474.645 Q368.284 479.229 368.284 487.979 Q368.284 496.705 365.205 501.312 Q362.149 505.895 356.339 505.895 Q350.529 505.895 347.45 501.312 Q344.395 496.705 344.395 487.979 Q344.395 479.229 347.45 474.645 Q350.529 470.039 356.339 470.039 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M256.664 243.659 L264.303 243.659 L264.303 217.293 L255.992 218.96 L255.992 214.701 L264.256 213.034 L268.932 213.034 L268.932 243.659 L276.571 243.659 L276.571 247.594 L256.664 247.594 L256.664 243.659 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M296.015 216.113 Q292.404 216.113 290.576 219.677 Q288.77 223.219 288.77 230.349 Q288.77 237.455 290.576 241.02 Q292.404 244.562 296.015 244.562 Q299.65 244.562 301.455 241.02 Q303.284 237.455 303.284 230.349 Q303.284 223.219 301.455 219.677 Q299.65 216.113 296.015 216.113 M296.015 212.409 Q301.826 212.409 304.881 217.015 Q307.96 221.599 307.96 230.349 Q307.96 239.075 304.881 243.682 Q301.826 248.265 296.015 248.265 Q290.205 248.265 287.127 243.682 Q284.071 239.075 284.071 230.349 Q284.071 221.599 287.127 217.015 Q290.205 212.409 296.015 212.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M326.177 216.113 Q322.566 216.113 320.737 219.677 Q318.932 223.219 318.932 230.349 Q318.932 237.455 320.737 241.02 Q322.566 244.562 326.177 244.562 Q329.811 244.562 331.617 241.02 Q333.446 237.455 333.446 230.349 Q333.446 223.219 331.617 219.677 Q329.811 216.113 326.177 216.113 M326.177 212.409 Q331.987 212.409 335.043 217.015 Q338.122 221.599 338.122 230.349 Q338.122 239.075 335.043 243.682 Q331.987 248.265 326.177 248.265 Q320.367 248.265 317.288 243.682 Q314.233 239.075 314.233 230.349 Q314.233 221.599 317.288 217.015 Q320.367 212.409 326.177 212.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M356.339 216.113 Q352.728 216.113 350.899 219.677 Q349.094 223.219 349.094 230.349 Q349.094 237.455 350.899 241.02 Q352.728 244.562 356.339 244.562 Q359.973 244.562 361.779 241.02 Q363.608 237.455 363.608 230.349 Q363.608 223.219 361.779 219.677 Q359.973 216.113 356.339 216.113 M356.339 212.409 Q362.149 212.409 365.205 217.015 Q368.284 221.599 368.284 230.349 Q368.284 239.075 365.205 243.682 Q362.149 248.265 356.339 248.265 Q350.529 248.265 347.45 243.682 Q344.395 239.075 344.395 230.349 Q344.395 221.599 347.45 217.015 Q350.529 212.409 356.339 212.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip792)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,230.314 4017.76,230.314 \"/>\n<polyline clip-path=\"url(#clip792)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1250.45 456.554,1250.31 457.123,1250.09 457.691,1249.81 458.259,1249.47 458.828,1249.06 459.396,1248.58 459.964,1248.04 460.533,1247.43 461.101,1246.75 461.669,1245.99 462.238,1245.15 462.806,1244.23 463.375,1243.22 463.943,1241.08 464.511,1238.85 465.08,1237.52 465.648,1236.08 466.216,1234.55 466.785,1231.87 467.353,1230.08 467.921,1228.14 468.49,1226.07 469.058,1222.83 469.626,1220.38 470.195,1216.81 470.763,1214.06 471.331,1211.15 471.9,1207.02 472.468,1203.67 473.036,1200.14 473.605,1196.46 474.173,1192.55 474.741,1186.4 475.31,1182.01 475.878,1176.42 476.446,1170.57 477.015,1164.52 477.583,1159.22 478.152,1153.68 478.72,1147.91 479.288,1141.96 479.857,1135.67 480.425,1128.21 480.993,1120.43 481.562,1112.47 482.13,1104.35 482.698,1096.06 483.267,1087.66 483.835,1079.99 484.403,1069.09 484.972,1060.85 485.54,1052.53 486.108,1040.87 486.677,1029.06 487.245,1019.43 487.813,1010.62 488.382,1000.63 488.95,990.645 489.518,981.516 490.087,971.304 490.655,959.916 491.224,950.58 491.792,939.191 492.36,928.745 492.929,917.351 493.497,906.865 494.065,896.395 494.634,884.759 495.202,874.205 495.77,864.662 496.339,855.13 496.907,843.447 497.475,829.826 498.044,817.309 498.612,806.987 499.18,797.738 499.749,786.289 500.317,774.032 500.885,758.604 501.454,748.633 502.022,738.774 502.59,730.076 503.159,718.312 503.727,708.944 504.295,701.528 504.864,692.202 505.432,681.804 506.001,671.578 506.569,663.432 507.137,654.434 507.706,644.537 508.274,636.919 508.842,629.224 509.411,618.536 509.979,611.189 510.547,601.836 511.116,592.694 511.684,581.623 512.252,574.98 512.821,566.579 513.389,559.232 513.957,551.942 514.526,544.807 515.094,537.637 515.662,530.8 516.231,522.896 516.799,516.084 517.367,508.572 517.936,502.119 518.504,494.874 519.072,489.808 519.641,481.788 520.209,474.734 520.778,469.111 521.346,461.495 521.914,457.328 522.483,453.886 523.051,448.407 523.619,443.959 524.188,437.742 524.756,431.631 525.324,424.851 525.893,419.195 526.461,414.522 527.029,407.172 527.598,405.065 528.166,401.952 528.734,394.589 529.303,390.736 529.871,387.95 530.439,384.158 531.008,382.574 531.576,380.903 532.144,377.33 532.713,372.577 533.281,369.182 533.85,366.652 534.418,363.285 534.986,360.876 535.555,356.603 536.123,353.487 536.691,351.641 537.26,349.614 537.828,345.721 538.396,344.947 538.965,344.154 539.533,336.958 540.101,335.175 540.67,335.317 541.238,333.424 541.806,330.467 542.375,327.828 542.943,325.087 543.511,322.576 544.08,318.913 544.648,315.364 545.216,314.355 545.785,313.345 546.353,311.248 546.921,311.153 547.49,309.811 548.058,308.394 548.627,306.192 549.195,302.709 549.763,301.706 550.332,299.714 550.9,296.858 551.468,294.901 552.037,294.203 552.605,293.521 553.173,290.961 553.742,289.273 554.31,288.698 554.878,288.06 555.447,287.34 556.015,285.892 556.583,283.065 557.152,283.615 557.72,284.275 558.288,281.573 558.857,279.965 559.425,277.403 559.993,275.029 560.562,272.645 561.13,272.387 561.698,273.272 562.267,273.128 562.835,270.791 563.404,269.583 563.972,271.645 564.54,269.236 565.109,268.096 565.677,266.966 566.245,267.975 566.814,268.01 567.382,266.582 567.95,266.41 568.519,262.157 569.087,263.103 569.655,261.914 570.224,259.836 570.792,260.043 571.36,260.167 571.929,260.133 572.497,261.358 573.065,260.215 573.634,260.096 574.202,258.935 574.77,258.816 575.339,257.631 575.907,257.547 576.476,255.512 577.044,256.653 577.612,258.855 578.181,258.772 578.749,257.616 579.317,257.373 579.886,257.097 580.454,259.06 581.022,259.865 581.591,258.543 582.159,256.281 582.727,256.096 583.296,255.981 583.864,256.779 584.432,256.516 585.001,255.215 585.569,253.051 586.137,252.001 586.706,252.816 587.274,252.747 587.842,251.5 588.411,251.508 588.979,251.459 589.547,254.516 590.116,254.026 590.684,252.579 591.253,251.261 591.821,252.149 592.389,251.709 592.958,251.555 593.526,252.4 594.094,250.244 594.663,250.054 595.231,248.842 595.799,247.729 596.368,246.558 596.936,244.371 597.504,245.463 598.073,245.444 598.641,244.385 599.209,243.433 599.778,243.506 600.346,242.729 600.914,243.15 601.483,244.454 602.051,243.754 602.619,243.278 603.188,243.483 603.756,242.693 604.325,242.892 604.893,242.03 605.461,242.311 606.03,242.199 606.598,241.181 607.166,241.292 607.735,241.645 608.303,242.834 608.871,244.152 609.44,243.143 610.008,242.018 610.576,243.083 611.145,242.173 611.713,245.115 612.281,244.146 612.85,244.146 613.418,244.171 613.986,243.798 614.555,242.818 615.123,241.775 615.691,240.622 616.26,239.849 616.828,241.098 617.396,242.406 617.965,240.405 618.533,237.175 619.102,237.593 619.67,237.964 620.238,236.121 620.807,232.221 621.375,234.04 621.943,235.527 622.512,234.153 623.08,234.973 623.648,236.5 624.217,235.855 624.785,237.283 625.353,235.551 625.922,234.999 626.49,234.511 627.058,235.041 627.627,234.263 628.195,233.566 628.763,234.192 629.332,234.686 629.9,235.228 630.468,235.667 631.037,236.289 631.605,234.494 632.173,234.989 632.742,236.551 633.31,234.708 633.879,238.089 634.447,237.506 635.015,236.797 635.584,236.073 636.152,237.445 636.72,238.776 637.289,237.718 637.857,233.881 638.425,234.365 638.994,234.944 639.562,234.162 640.13,233.451 640.699,233.91 641.267,234.347 641.835,233.914 642.404,234.579 642.972,233.879 643.54,233.354 644.109,232.735 644.677,236.642 645.245,235.988 645.814,236.479 646.382,240.076 646.951,237.969 647.519,238.192 648.087,238.404 648.656,238.811 649.224,238.961 649.792,236.021 650.361,234.31 650.929,235.791 651.497,237.069 652.066,238.294 652.634,237.435 653.202,238.351 653.771,239.469 654.339,238.432 654.907,239.534 655.476,241.407 656.044,243.55 656.612,242.11 657.181,243.683 657.749,243.299 658.317,243.95 658.886,243.516 659.454,245.285 660.022,244.879 660.591,240.307 661.159,240.077 661.728,238.974 662.296,238.787 662.864,238.431 663.433,239.282 664.001,240.338 664.569,239.062 665.138,241.962 665.706,239.399 666.274,238.239 666.843,238.155 667.411,237.832 667.979,238.753 668.548,237.625 669.116,237.443 669.684,239.396 670.253,239.228 670.821,237.951 671.389,238.875 671.958,237.524 672.526,237.262 673.094,235.058 673.663,236.166 674.231,235.191 674.799,233.386 675.368,233.416 675.936,232.692 676.505,232.794 677.073,232.845 677.641,231.949 678.21,231.244 678.778,232.53 679.346,231.918 679.915,231.168 680.483,231.344 681.051,231.771 681.62,232.916 682.188,234.226 682.756,235.26 683.325,238.175 683.893,238.017 684.461,236.752 685.03,235.721 685.598,233.689 686.166,232.694 686.735,231.82 687.303,231.977 687.871,229.967 688.44,230.276 689.008,232.556 689.577,235.006 690.145,232.798 690.713,233.072 691.282,232.227 691.85,230.256 692.418,229.573 692.987,228.844 693.555,229.365 694.123,229.807 694.692,228.928 695.26,229.462 695.828,229.822 696.397,231.201 696.965,231.546 697.533,232.765 698.102,232.869 698.67,234.042 699.238,234.076 699.807,233.932 700.375,233.827 700.943,231.71 701.512,233.028 702.08,233.223 702.648,233.45 703.217,234.586 703.785,234.472 704.354,234.729 704.922,233.55 705.49,232.65 706.059,232.924 706.627,233.042 707.195,230.248 707.764,228.671 708.332,228.034 708.9,228.333 709.469,228.811 710.037,229.209 710.605,228.567 711.174,227.837 711.742,228.141 712.31,229.619 712.879,231.065 713.447,230.454 714.015,229.894 714.584,228.322 715.152,228.975 715.72,231.328 716.289,229.681 716.857,230.156 717.425,230.477 717.994,231.837 718.562,232.122 719.131,233.509 719.699,232.601 720.267,232.74 720.836,232.916 721.404,232.985 721.972,234.357 722.541,232.455 723.109,234.502 723.677,234.722 724.246,235.876 724.814,236.731 725.382,236.702 725.951,236.719 726.519,237.504 727.087,236.345 727.656,238.271 728.224,236.819 728.792,235.569 729.361,237.673 729.929,234.185 730.497,233.124 731.066,233.266 731.634,234.371 732.203,234.319 732.771,233.217 733.339,233.287 733.908,235.553 734.476,234.714 735.044,235.509 735.613,238.388 736.181,237.838 736.749,238.781 737.318,237.397 737.886,236.29 738.454,236.894 739.023,234.396 739.591,234.135 740.159,232.973 740.728,232.772 741.296,233.716 741.864,232.572 742.433,232.533 743.001,230.614 743.569,229.816 744.138,228.189 744.706,228.786 745.274,229.198 745.843,231.665 746.411,231.796 746.98,234.063 747.548,236.122 748.116,236.792 748.685,236.486 749.253,237.377 749.821,237.172 750.39,233.754 750.958,233.853 751.526,234.832 752.095,235.559 752.663,236.205 753.231,237.048 753.8,234.654 754.368,233.307 754.936,231.32 755.505,230.407 756.073,232.512 756.641,231.617 757.21,231.508 757.778,232.444 758.346,234.418 758.915,234.215 759.483,235.1 760.052,235.947 760.62,235.782 761.188,234.331 761.757,233.189 762.325,233.098 762.893,233.127 763.462,233.807 764.03,232.449 764.598,231.238 765.167,233.543 765.735,233.568 766.303,234.299 766.872,235.251 767.44,231.886 768.008,230.75 768.577,232.999 769.145,233.062 769.713,230.932 770.282,229.73 770.85,229.649 771.418,229.743 771.987,229.709 772.555,227.937 773.123,227.092 773.692,224.476 774.26,226.922 774.829,227.155 775.397,226.366 775.965,227.918 776.534,227.201 777.102,228.443 777.67,227.81 778.239,226.047 778.807,226.534 779.375,228.019 779.944,228.646 780.512,228.075 781.08,229.306 781.649,230.708 782.217,231.867 782.785,232.019 783.354,232.13 783.922,232.245 784.49,235.303 785.059,236.147 785.627,237.881 786.195,235.289 786.764,233.966 787.332,232.596 787.9,232.784 788.469,231.737 789.037,230.884 789.606,226.73 790.174,226.98 790.742,225.218 791.311,225.857 791.879,226.307 792.447,223.438 793.016,226.16 793.584,226.679 794.152,227.148 794.721,226.483 795.289,227.059 795.857,227.416 796.426,229.653 796.994,228.643 797.562,230.926 798.131,231.164 798.699,230.281 799.267,232.431 799.836,231.545 800.404,232.933 800.972,233.865 801.541,233.835 802.109,234.725 802.678,233.563 803.246,231.663 803.814,232.971 804.383,233.83 804.951,233.909 805.519,231.679 806.088,233.848 806.656,234.884 807.224,234.832 807.793,234.658 808.361,234.482 808.929,233.482 809.498,232.41 810.066,231.29 810.634,230.377 811.203,229.51 811.771,229.684 812.339,230.067 812.908,229.259 813.476,231.489 814.044,230.626 814.613,228.651 815.181,227.914 815.749,228.307 816.318,228.54 816.886,228.607 817.455,228.061 818.023,228.286 818.591,228.756 819.16,229.143 819.728,230.593 820.296,233.905 820.865,233.949 821.433,234.741 822.001,234.694 822.57,233.493 823.138,234.336 823.706,235.102 824.275,231.878 824.843,230.855 825.411,231.895 825.98,231.978 826.548,234.011 827.116,231.908 827.685,230.898 828.253,234.029 828.821,232.761 829.39,229.768 829.958,229.831 830.526,230.962 831.095,231.055 831.663,231.065 832.232,230.177 832.8,229.116 833.368,228.347 833.937,229.754 834.505,232.003 835.073,231.954 835.642,232.997 836.21,234.918 836.778,236.972 837.347,234.83 837.915,235.569 838.483,234.383 839.052,235.34 839.62,233.766 840.188,233.856 840.757,235.743 841.325,235.496 841.893,238.3 842.462,237.943 843.03,238.298 843.598,236.765 844.167,237.402 844.735,236.862 845.304,236.851 845.872,237.515 846.44,233.955 847.009,235.725 847.577,236.525 848.145,238.224 848.714,237.553 849.282,234.998 849.85,233.839 850.419,233.435 850.987,233.129 851.555,233.909 852.124,232.895 852.692,229.626 853.26,229.619 853.829,230.831 854.397,230.874 854.965,231.652 855.534,231.592 856.102,231.626 856.67,231.509 857.239,230.346 857.807,230.248 858.375,231.021 858.944,231.901 859.512,230.555 860.081,232.628 860.649,231.494 861.217,229.133 861.786,230.11 862.354,228.883 862.922,228.78 863.491,230.644 864.059,230.778 864.627,229.719 865.196,230.798 865.764,231.688 866.332,232.703 866.901,233.604 867.469,235.616 868.037,235.188 868.606,234.909 869.174,233.508 869.742,233.288 870.311,231.815 870.879,230.656 871.447,229.491 872.016,229.278 872.584,228.329 873.152,228.566 873.721,230.553 874.289,231.432 874.858,229.504 875.426,229.521 875.994,227.37 876.563,226.551 877.131,225.943 877.699,225.298 878.268,224.689 878.836,226.134 879.404,227.554 879.973,227.796 880.541,227.047 881.109,226.387 881.678,223.713 882.246,225.328 882.814,225.564 883.383,225.892 883.951,226.22 884.519,224.402 885.088,224.887 885.656,225.178 886.224,225.688 886.793,226.18 887.361,224.601 887.93,222.949 888.498,222.579 889.066,225.389 889.635,225.664 890.203,225.209 890.771,225.795 891.34,228.233 891.908,228.649 892.476,226.899 893.045,225.226 893.613,225.85 894.181,227.256 894.75,227.806 895.318,230.325 895.886,228.404 896.455,225.572 897.023,226.948 897.591,226.44 898.16,227.124 898.728,230.968 899.296,232.247 899.865,234.211 900.433,236.197 901.001,235.13 901.57,234.816 902.138,233.686 902.707,230.492 903.275,231.714 903.843,232.719 904.412,231.649 904.98,230.813 905.548,234.073 906.117,233.975 906.685,231.804 907.253,231.788 907.822,230.867 908.39,230.863 908.958,230.971 909.527,231.21 910.095,231.179 910.663,231.207 911.232,231.316 911.8,232.448 912.368,232.381 912.937,232.241 913.505,232.237 914.073,231.257 914.642,234.297 915.21,233.091 915.779,233.007 916.347,233.949 916.915,235.861 917.484,235.477 918.052,234.12 918.62,233.768 919.189,234.685 919.757,235.395 920.325,234.367 920.894,233.864 921.462,233.692 922.03,234.406 922.599,233.196 923.167,235.01 923.735,233.589 924.304,234.21 924.872,236.257 925.44,235.981 926.009,234.562 926.577,233.284 927.145,234.026 927.714,234.793 928.282,235.548 928.85,235.031 929.419,236.596 929.987,237.998 930.556,238.423 931.124,239.917 931.692,235.116 932.261,235.559 932.829,234.236 933.397,233.912 933.966,231.676 934.534,233.772 935.102,233.416 935.671,231.085 936.239,233.092 936.807,234.749 937.376,237.09 937.944,236.404 938.512,234.761 939.081,234.139 939.649,233.909 940.217,231.476 940.786,227.326 941.354,226.562 941.922,228.545 942.491,228.398 943.059,228.383 943.627,227.633 944.196,226.672 944.764,227.03 945.333,226.43 945.901,225.601 946.469,228.096 947.038,229.278 947.606,228.146 948.174,228.213 948.743,228.38 949.311,231.023 949.879,231.942 950.448,232.094 951.016,231.769 951.584,230.718 952.153,231.761 952.721,229.471 953.289,229.616 953.858,229.675 954.426,229.555 954.994,229.555 955.563,227.551 956.131,226.678 956.699,225.79 957.268,227.13 957.836,227.339 958.405,224.38 958.973,225.954 959.541,228.217 960.11,228.367 960.678,227.319 961.246,228.542 961.815,228.777 962.383,230.835 962.951,230.978 963.52,229.003 964.088,229.987 964.656,230.912 965.225,229.642 965.793,226.555 966.361,227.038 966.93,227.384 967.498,225.555 968.066,224.906 968.635,224.419 969.203,224.788 969.771,225.163 970.34,224.722 970.908,225.977 971.476,227.372 972.045,227.611 972.613,225.893 973.182,226.51 973.75,225.836 974.318,229.274 974.887,228.375 975.455,230.643 976.023,228.482 976.592,227.711 977.16,227.183 977.728,227.387 978.297,226.668 978.865,226.982 979.433,226.352 980.002,225.675 980.57,226.099 981.138,224.504 981.707,224.894 982.275,223.462 982.843,224.231 983.412,224.875 983.98,223.422 984.548,226.213 985.117,224.652 985.685,225.259 986.253,224.789 986.822,226.384 987.39,226.849 987.959,227.183 988.527,227.794 989.095,227.037 989.664,227.461 990.232,226.806 990.8,228.21 991.369,227.609 991.937,229.123 992.505,231.441 993.074,232.642 993.642,232.683 994.21,232.636 994.779,229.673 995.347,233.162 995.915,233.064 996.484,233.024 997.052,233.951 997.62,234.064 998.189,234.14 998.757,235.101 999.325,235.979 999.894,236.733 1000.46,234.445 1001.03,236.121 1001.6,236.001 1002.17,237.97 1002.74,240.509 1003.3,242.071 1003.87,244.48 1004.44,246.618 1005.01,247.573 1005.58,245.343 1006.15,245.319 1006.71,242.197 1007.28,240.591 1007.85,240.807 1008.42,238.18 1008.99,236.839 1009.56,237.321 1010.12,236.784 1010.69,237.174 1011.26,235.454 1011.83,236.36 1012.4,237.846 1012.97,240.462 1013.53,238.529 1014.1,240.973 1014.67,238.157 1015.24,236.379 1015.81,234.95 1016.38,235.648 1016.94,235.955 1017.51,234.294 1018.08,235.107 1018.65,232.514 1019.22,233.169 1019.79,233.987 1020.35,233.654 1020.92,234.464 1021.49,234.918 1022.06,234.368 1022.63,232.787 1023.2,231.315 1023.76,228.896 1024.33,228.952 1024.9,228.033 1025.47,228.161 1026.04,228.318 1026.61,228.326 1027.17,226.226 1027.74,228.378 1028.31,228.338 1028.88,231.385 1029.45,230.982 1030.02,229.618 1030.58,228.594 1031.15,229.819 1031.72,227.571 1032.29,227.622 1032.86,225.777 1033.43,225.908 1033.99,226.055 1034.56,225.305 1035.13,225.632 1035.7,226.011 1036.27,225.289 1036.84,225.425 1037.4,226.657 1037.97,228.231 1038.54,229.335 1039.11,229.372 1039.68,228.424 1040.25,230.617 1040.81,227.462 1041.38,227.547 1041.95,228.801 1042.52,228.711 1043.09,228.789 1043.66,226.603 1044.22,226.915 1044.79,228.188 1045.36,229.453 1045.93,228.441 1046.5,229.629 1047.07,229.873 1047.63,228.864 1048.2,230.963 1048.77,229.846 1049.34,228.795 1049.91,228.717 1050.48,231.802 1051.05,231.635 1051.61,230.409 1052.18,232.385 1052.75,231.318 1053.32,230.988 1053.89,225.66 1054.46,221.632 1055.02,223.207 1055.59,225.652 1056.16,223.805 1056.73,226.152 1057.3,224.37 1057.87,225.905 1058.43,230.291 1059,231.383 1059.57,228.27 1060.14,228.563 1060.71,229.457 1061.28,231.553 1061.84,231.548 1062.41,230.431 1062.98,230.807 1063.55,229.776 1064.12,230.843 1064.69,235.954 1065.25,234.573 1065.82,234.201 1066.39,233.859 1066.96,232.513 1067.53,233.281 1068.1,232.957 1068.66,232.819 1069.23,234.582 1069.8,234.277 1070.37,234.982 1070.94,232.708 1071.51,234.452 1072.07,235.157 1072.64,234.701 1073.21,233.205 1073.78,235.009 1074.35,235.646 1074.92,233.162 1075.48,233.902 1076.05,235.684 1076.62,234.277 1077.19,232.789 1077.76,230.359 1078.33,230.298 1078.89,230.344 1079.46,230.297 1080.03,227.042 1080.6,226.275 1081.17,225.315 1081.74,226.449 1082.3,227.77 1082.87,228.033 1083.44,229.154 1084.01,230.443 1084.58,230.357 1085.15,231.155 1085.71,230.039 1086.28,228.097 1086.85,228.174 1087.42,229.416 1087.99,230.415 1088.56,230.245 1089.12,230.034 1089.69,228.884 1090.26,229.095 1090.83,231.208 1091.4,231.181 1091.97,230.908 1092.53,228.721 1093.1,230.866 1093.67,228.834 1094.24,230.829 1094.81,230.761 1095.38,231.568 1095.94,230.424 1096.51,229.332 1097.08,230.22 1097.65,230.263 1098.22,231.39 1098.79,230.154 1099.35,227.938 1099.92,228.109 1100.49,226.993 1101.06,227.276 1101.63,226.403 1102.2,227.745 1102.76,225.922 1103.33,227.645 1103.9,227.881 1104.47,227.874 1105.04,226.757 1105.61,228.058 1106.17,227.901 1106.74,229.084 1107.31,229.231 1107.88,228.333 1108.45,225.452 1109.02,226.841 1109.58,227.148 1110.15,228.188 1110.72,228.213 1111.29,228.714 1111.86,228.861 1112.43,228.778 1112.99,228.069 1113.56,229.066 1114.13,229.064 1114.7,229.245 1115.27,228.371 1115.84,229.707 1116.4,232.026 1116.97,232.044 1117.54,230.018 1118.11,232.116 1118.68,230.999 1119.25,232.892 1119.81,233.534 1120.38,233.558 1120.95,232.328 1121.52,233.387 1122.09,232.061 1122.66,231.008 1123.23,229.723 1123.79,231.93 1124.36,230.758 1124.93,229.693 1125.5,230.92 1126.07,230.821 1126.64,228.771 1127.2,228.974 1127.77,230.057 1128.34,229.112 1128.91,229.163 1129.48,229.194 1130.05,228.28 1130.61,230.569 1131.18,231.52 1131.75,231.392 1132.32,229.22 1132.89,226.241 1133.46,223.649 1134.02,224.239 1134.59,225.676 1135.16,227.107 1135.73,226.649 1136.3,227.065 1136.87,227.505 1137.43,228.837 1138,227.866 1138.57,229.241 1139.14,231.267 1139.71,230.289 1140.28,228.184 1140.84,229.555 1141.41,230.671 1141.98,231.842 1142.55,234.938 1143.12,235.572 1143.69,234.135 1144.25,233.782 1144.82,234.792 1145.39,231.531 1145.96,232.474 1146.53,233.586 1147.1,232.179 1147.66,231.194 1148.23,230.477 1148.8,230.706 1149.37,231.658 1149.94,231.376 1150.51,229.278 1151.07,230.361 1151.64,231.16 1152.21,230.19 1152.78,227.902 1153.35,229.187 1153.92,230.278 1154.48,228.454 1155.05,226.653 1155.62,224.086 1156.19,224.435 1156.76,224.971 1157.33,226.244 1157.89,225.822 1158.46,228.359 1159.03,228.341 1159.6,228.53 1160.17,228.586 1160.74,226.546 1161.3,228.985 1161.87,228.165 1162.44,227.283 1163.01,227.537 1163.58,227.553 1164.15,227.966 1164.71,227.273 1165.28,229.728 1165.85,230.812 1166.42,231.968 1166.99,231.624 1167.56,229.642 1168.12,228.746 1168.69,231.023 1169.26,233.033 1169.83,236.005 1170.4,233.735 1170.97,231.681 1171.53,234.599 1172.1,234.449 1172.67,233.153 1173.24,234.178 1173.81,234.225 1174.38,234.072 1174.94,235.978 1175.51,235.629 1176.08,235.458 1176.65,232.03 1177.22,232.937 1177.79,231.648 1178.35,231.308 1178.92,233.5 1179.49,233.386 1180.06,234.237 1180.63,235.037 1181.2,234.494 1181.76,233.913 1182.33,233.733 1182.9,233.121 1183.47,232.919 1184.04,230.38 1184.61,233.449 1185.17,231.154 1185.74,233.114 1186.31,232.817 1186.88,233.635 1187.45,234.248 1188.02,231.811 1188.58,231.707 1189.15,232.454 1189.72,230.275 1190.29,231.246 1190.86,232.193 1191.43,231.137 1192,231.09 1192.56,231.949 1193.13,230.7 1193.7,230.551 1194.27,229.378 1194.84,230.244 1195.41,229.23 1195.97,229.266 1196.54,230.356 1197.11,229.075 1197.68,231.173 1198.25,231.899 1198.82,230.814 1199.38,232.624 1199.95,233.418 1200.52,234.12 1201.09,233.553 1201.66,233.119 1202.23,232.852 1202.79,233.707 1203.36,234.297 1203.93,232.953 1204.5,234.778 1205.07,233.384 1205.64,231.987 1206.2,230.531 1206.77,230.577 1207.34,231.647 1207.91,230.223 1208.48,230.315 1209.05,231.212 1209.61,231.208 1210.18,229.889 1210.75,228.009 1211.32,226.084 1211.89,227.048 1212.46,224.046 1213.02,222.477 1213.59,221.922 1214.16,222.122 1214.73,224.86 1215.3,225.329 1215.87,226.718 1216.43,225.499 1217,224.701 1217.57,227.089 1218.14,227.277 1218.71,227.475 1219.28,226.547 1219.84,225.667 1220.41,226.087 1220.98,226.433 1221.55,226.813 1222.12,226.872 1222.69,226.105 1223.25,227.808 1223.82,228.877 1224.39,229.104 1224.96,229.19 1225.53,228.287 1226.1,228.308 1226.66,229.57 1227.23,227.579 1227.8,228.627 1228.37,227.524 1228.94,225.743 1229.51,228.29 1230.07,228.204 1230.64,230.347 1231.21,229.273 1231.78,230.552 1232.35,230.515 1232.92,228.755 1233.48,228.086 1234.05,228.253 1234.62,227.638 1235.19,228.995 1235.76,228.121 1236.33,227.427 1236.89,226.636 1237.46,228.251 1238.03,228.446 1238.6,226.772 1239.17,227.078 1239.74,228.349 1240.3,229.578 1240.87,231.969 1241.44,233.846 1242.01,232.726 1242.58,230.646 1243.15,229.697 1243.71,229.725 1244.28,230.48 1244.85,228.494 1245.42,228.637 1245.99,229.74 1246.56,228.96 1247.12,230.202 1247.69,229.134 1248.26,232.34 1248.83,233.327 1249.4,232.381 1249.97,232.334 1250.53,232.532 1251.1,232.339 1251.67,233.286 1252.24,231.302 1252.81,230.267 1253.38,229.606 1253.94,230.849 1254.51,230.967 1255.08,232.073 1255.65,237.094 1256.22,237.871 1256.79,238.361 1257.35,237.813 1257.92,238.278 1258.49,238.746 1259.06,237.061 1259.63,237.632 1260.2,236.976 1260.76,237.377 1261.33,236.805 1261.9,235.28 1262.47,234.925 1263.04,233.513 1263.61,236.405 1264.18,234.756 1264.74,234.457 1265.31,232.017 1265.88,234.944 1266.45,234.477 1267.02,234.014 1267.59,233.819 1268.15,231.566 1268.72,228.297 1269.29,227.534 1269.86,226.659 1270.43,228.689 1271,229.902 1271.56,230.988 1272.13,230.77 1272.7,231.773 1273.27,230.631 1273.84,230.483 1274.41,233.107 1274.97,233.838 1275.54,232.466 1276.11,231.467 1276.68,230.193 1277.25,230.14 1277.82,227.968 1278.38,226.003 1278.95,227.214 1279.52,227.419 1280.09,228.592 1280.66,229.544 1281.23,228.658 1281.79,229.757 1282.36,230.923 1282.93,228.99 1283.5,230.059 1284.07,233.254 1284.64,230.847 1285.2,229.624 1285.77,228.694 1286.34,227.75 1286.91,228.836 1287.48,228.669 1288.05,227.625 1288.61,227.957 1289.18,229.996 1289.75,228.091 1290.32,228.356 1290.89,227.58 1291.46,227.767 1292.02,226.714 1292.59,228.312 1293.16,226.683 1293.73,228.994 1294.3,232.109 1294.87,230.902 1295.43,229.746 1296,230.639 1296.57,230.278 1297.14,230.16 1297.71,232.181 1298.28,231.926 1298.84,231.931 1299.41,231.806 1299.98,231.717 1300.55,232.635 1301.12,233.549 1301.69,235.396 1302.25,234.02 1302.82,234.62 1303.39,233.441 1303.96,233.184 1304.53,232.943 1305.1,231.724 1305.66,231.623 1306.23,232.33 1306.8,232.041 1307.37,231.716 1307.94,233.7 1308.51,233.361 1309.07,232.135 1309.64,231.944 1310.21,231.742 1310.78,230.51 1311.35,231.404 1311.92,231.522 1312.48,231.478 1313.05,231.277 1313.62,230.163 1314.19,231.385 1314.76,232.558 1315.33,230.233 1315.89,227.112 1316.46,227.214 1317.03,228.177 1317.6,228.225 1318.17,229.232 1318.74,226.918 1319.3,225.9 1319.87,226.203 1320.44,228.541 1321.01,227.687 1321.58,227.911 1322.15,226.025 1322.71,226.478 1323.28,226.658 1323.85,225.971 1324.42,228.081 1324.99,228.321 1325.56,226.471 1326.12,224.669 1326.69,227.038 1327.26,226.204 1327.83,224.47 1328.4,222.712 1328.97,225.506 1329.53,227.999 1330.1,228.117 1330.67,227.302 1331.24,226.599 1331.81,229.091 1332.38,228.312 1332.94,228.418 1333.51,228.605 1334.08,229.576 1334.65,229.602 1335.22,231.599 1335.79,232.434 1336.36,234.233 1336.92,233.016 1337.49,231.778 1338.06,231.643 1338.63,230.806 1339.2,230.807 1339.77,229.991 1340.33,228.934 1340.9,228.966 1341.47,230.139 1342.04,229.1 1342.61,228.456 1343.18,228.782 1343.74,227.745 1344.31,230.044 1344.88,230.173 1345.45,229.158 1346.02,231.538 1346.59,230.428 1347.15,230.466 1347.72,232.628 1348.29,234.478 1348.86,235.295 1349.43,232.93 1350,232.656 1350.56,231.672 1351.13,232.431 1351.7,233.301 1352.27,232.994 1352.84,233.759 1353.41,233.302 1353.97,231.893 1354.54,232.81 1355.11,232.719 1355.68,231.545 1356.25,230.357 1356.82,228.56 1357.38,230.946 1357.95,232.009 1358.52,231.794 1359.09,232.637 1359.66,230.476 1360.23,229.399 1360.79,227.459 1361.36,228.743 1361.93,224.82 1362.5,222.993 1363.07,223.614 1363.64,225.346 1364.2,225.901 1364.77,226.238 1365.34,226.495 1365.91,226.098 1366.48,224.41 1367.05,225.869 1367.61,224.229 1368.18,225.731 1368.75,226.17 1369.32,226.672 1369.89,226.018 1370.46,226.354 1371.02,226.615 1371.59,226.723 1372.16,228.169 1372.73,226.489 1373.3,228.08 1373.87,228.349 1374.43,232.051 1375,231.103 1375.57,231.363 1376.14,230.296 1376.71,232.282 1377.28,232.926 1377.84,232.893 1378.41,233.815 1378.98,232.756 1379.55,233.688 1380.12,234.462 1380.69,235.409 1381.25,233.156 1381.82,234.092 1382.39,232.818 1382.96,232.618 1383.53,230.409 1384.1,228.269 1384.66,229.442 1385.23,229.484 1385.8,229.599 1386.37,228.688 1386.94,227.9 1387.51,229.103 1388.07,230.327 1388.64,228.316 1389.21,232.839 1389.78,231.623 1390.35,230.439 1390.92,231.381 1391.48,233.545 1392.05,233.379 1392.62,233.067 1393.19,235.285 1393.76,234.149 1394.33,233.941 1394.89,235.677 1395.46,235.476 1396.03,236.319 1396.6,234.882 1397.17,235.847 1397.74,233.023 1398.3,232.708 1398.87,232.534 1399.44,232.223 1400.01,232.262 1400.58,233.012 1401.15,233.862 1401.71,234.633 1402.28,235.077 1402.85,235.747 1403.42,232.16 1403.99,230.074 1404.56,228.798 1405.13,229.926 1405.69,230.862 1406.26,230.751 1406.83,229.7 1407.4,227.619 1407.97,226.64 1408.54,227.969 1409.1,228.867 1409.67,229.642 1410.24,228.653 1410.81,230.801 1411.38,231.712 1411.95,231.759 1412.51,230.777 1413.08,229.605 1413.65,231.802 1414.22,230.62 1414.79,230.794 1415.36,232.886 1415.92,230.675 1416.49,231.827 1417.06,229.716 1417.63,231.715 1418.2,232.763 1418.77,230.526 1419.33,228.307 1419.9,228.61 1420.47,228.728 1421.04,228.834 1421.61,228.775 1422.18,228.582 1422.74,228.698 1423.31,228.744 1423.88,229.926 1424.45,231.963 1425.02,230.761 1425.59,230.841 1426.15,231.603 1426.72,229.553 1427.29,228.851 1427.86,230.872 1428.43,231.109 1429,231.018 1429.56,230.882 1430.13,229.904 1430.7,229.766 1431.27,231.793 1431.84,232.843 1432.41,233.804 1432.97,233.59 1433.54,234.138 1434.11,233.796 1434.68,233.387 1435.25,232.212 1435.82,231.073 1436.38,229.973 1436.95,229.046 1437.52,228.999 1438.09,230.19 1438.66,230.231 1439.23,228.254 1439.79,231.513 1440.36,230.55 1440.93,230.653 1441.5,229.489 1442.07,228.586 1442.64,229.547 1443.2,228.389 1443.77,227.363 1444.34,225.439 1444.91,225.914 1445.48,227.254 1446.05,226.456 1446.61,226.558 1447.18,226.778 1447.75,226.159 1448.32,226.322 1448.89,227.651 1449.46,230.973 1450.02,230.908 1450.59,230.904 1451.16,230.918 1451.73,229.803 1452.3,228.769 1452.87,228.907 1453.43,230.214 1454,230.353 1454.57,230.613 1455.14,229.663 1455.71,228.692 1456.28,227.667 1456.84,227.821 1457.41,229.157 1457.98,229.494 1458.55,230.61 1459.12,232.704 1459.69,234.82 1460.25,235.567 1460.82,233.295 1461.39,232.019 1461.96,229.776 1462.53,229.842 1463.1,231.906 1463.66,231.735 1464.23,231.761 1464.8,230.724 1465.37,230.81 1465.94,230.824 1466.51,229.735 1467.07,226.858 1467.64,225.084 1468.21,222.342 1468.78,223.12 1469.35,222.812 1469.92,223.459 1470.48,223.043 1471.05,223.514 1471.62,223.328 1472.19,225.014 1472.76,226.364 1473.33,227.886 1473.89,228.29 1474.46,229.501 1475.03,228.492 1475.6,230.692 1476.17,229.53 1476.74,231.723 1477.31,230.678 1477.87,230.354 1478.44,231.343 1479.01,231.327 1479.58,230.15 1480.15,231.119 1480.72,232.058 1481.28,232.092 1481.85,232.099 1482.42,232.141 1482.99,234.205 1483.56,233.978 1484.13,232.7 1484.69,232.407 1485.26,231.316 1485.83,232.199 1486.4,231.047 1486.97,230.784 1487.54,229.885 1488.1,231.956 1488.67,229.874 1489.24,231.937 1489.81,230.823 1490.38,228.703 1490.95,225.768 1491.51,225.092 1492.08,225.498 1492.65,225.724 1493.22,227.128 1493.79,226.286 1494.36,226.706 1494.92,228.269 1495.49,226.55 1496.06,228.11 1496.63,227.516 1497.2,227.69 1497.77,226.882 1498.33,229.328 1498.9,230.478 1499.47,231.617 1500.04,231.402 1500.61,230.484 1501.18,228.525 1501.74,228.772 1502.31,230.131 1502.88,230.123 1503.45,233.506 1504.02,234.544 1504.59,231.278 1505.15,230.285 1505.72,229.116 1506.29,229.525 1506.86,227.569 1507.43,228.644 1508,229.564 1508.56,229.551 1509.13,230.807 1509.7,233.162 1510.27,231.811 1510.84,231.664 1511.41,230.584 1511.97,232.654 1512.54,230.53 1513.11,232.693 1513.68,230.411 1514.25,231.51 1514.82,232.516 1515.38,230.486 1515.95,232.416 1516.52,232.321 1517.09,233.22 1517.66,232.986 1518.23,232.738 1518.79,233.586 1519.36,233.447 1519.93,231.376 1520.5,232.331 1521.07,234.562 1521.64,235.372 1522.2,230.955 1522.77,230.974 1523.34,228.828 1523.91,227.849 1524.48,229.088 1525.05,229.083 1525.61,228.295 1526.18,228.281 1526.75,228.425 1527.32,228.656 1527.89,229.9 1528.46,229.967 1529.02,230.947 1529.59,234.13 1530.16,234.916 1530.73,238.872 1531.3,239.411 1531.87,239.899 1532.43,238.123 1533,236.398 1533.57,237.919 1534.14,238.279 1534.71,239.73 1535.28,236.793 1535.84,237.092 1536.41,236.474 1536.98,235.944 1537.55,236.471 1538.12,235.874 1538.69,234.403 1539.25,235.19 1539.82,232.757 1540.39,232.496 1540.96,230.29 1541.53,231.146 1542.1,231.065 1542.66,229.776 1543.23,230.628 1543.8,227.534 1544.37,227.712 1544.94,227.472 1545.51,227.474 1546.08,227.614 1546.64,227.64 1547.21,227.747 1547.78,224.815 1548.35,224.179 1548.92,223.404 1549.49,223.699 1550.05,223.393 1550.62,226.987 1551.19,225.151 1551.76,224.323 1552.33,225.702 1552.9,226.944 1553.46,227.422 1554.03,228.751 1554.6,226.85 1555.17,226.124 1555.74,226.304 1556.31,227.765 1556.87,227.007 1557.44,225.261 1558.01,227.813 1558.58,228.967 1559.15,228.86 1559.72,230.018 1560.28,230.07 1560.85,231.029 1561.42,229.92 1561.99,229.823 1562.56,229.138 1563.13,228.007 1563.69,229.387 1564.26,228.597 1564.83,223.616 1565.4,224.014 1565.97,225.596 1566.54,227.014 1567.1,225.373 1567.67,226.715 1568.24,226.832 1568.81,228.348 1569.38,228.717 1569.95,230.018 1570.51,232.03 1571.08,233.973 1571.65,234.852 1572.22,234.791 1572.79,234.357 1573.36,233.222 1573.92,231.924 1574.49,231.04 1575.06,229.974 1575.63,229.943 1576.2,230.048 1576.77,231.094 1577.33,230.233 1577.9,229.214 1578.47,230.344 1579.04,230.315 1579.61,231.032 1580.18,231.003 1580.74,232.175 1581.31,234.04 1581.88,235.659 1582.45,239.198 1583.02,238.623 1583.59,237.964 1584.15,234.416 1584.72,234.127 1585.29,233.619 1585.86,233.445 1586.43,233.539 1587,233.418 1587.56,233.345 1588.13,236.361 1588.7,236.004 1589.27,236.648 1589.84,236.279 1590.41,234.689 1590.97,235.236 1591.54,232.714 1592.11,232.356 1592.68,232.173 1593.25,232.866 1593.82,231.604 1594.38,233.203 1594.95,234.069 1595.52,232.824 1596.09,231.595 1596.66,231.408 1597.23,229.983 1597.79,230.841 1598.36,229.752 1598.93,230.798 1599.5,231.773 1600.07,231.521 1600.64,232.479 1601.2,233.172 1601.77,232.804 1602.34,230.46 1602.91,229.336 1603.48,229.348 1604.05,230.232 1604.61,229.256 1605.18,228.035 1605.75,228.267 1606.32,226.449 1606.89,226.747 1607.46,227.762 1608.02,228.921 1608.59,230.882 1609.16,230.667 1609.73,229.618 1610.3,229.417 1610.87,229.418 1611.43,229.46 1612,230.185 1612.57,231.122 1613.14,233.126 1613.71,233.925 1614.28,231.669 1614.84,231.404 1615.41,232.115 1615.98,231.954 1616.55,232.694 1617.12,230.498 1617.69,231.533 1618.26,231.292 1618.82,230.149 1619.39,230.043 1619.96,228.901 1620.53,230.035 1621.1,230.919 1621.67,231.932 1622.23,230.812 1622.8,231.796 1623.37,232.683 1623.94,233.479 1624.51,231.973 1625.08,229.52 1625.64,229.529 1626.21,227.761 1626.78,226.847 1627.35,225.055 1627.92,224.352 1628.49,223.733 1629.05,225.155 1629.62,227.749 1630.19,228.845 1630.76,226.787 1631.33,227.921 1631.9,227.857 1632.46,227.671 1633.03,227.664 1633.6,227.665 1634.17,226.869 1634.74,226.987 1635.31,228.27 1635.87,229.26 1636.44,230.138 1637.01,227.934 1637.58,227.014 1638.15,227.146 1638.72,228.736 1639.28,228.921 1639.85,231.089 1640.42,231.153 1640.99,230.961 1641.56,230.812 1642.13,230.673 1642.69,232.931 1643.26,231.765 1643.83,231.295 1644.4,230.291 1644.97,230.237 1645.54,231.367 1646.1,230.408 1646.67,231.457 1647.24,231.295 1647.81,230.281 1648.38,229.652 1648.95,229.602 1649.51,228.583 1650.08,229.634 1650.65,229.598 1651.22,231.555 1651.79,229.518 1652.36,228.515 1652.92,226.941 1653.49,228.267 1654.06,230.466 1654.63,230.507 1655.2,229.366 1655.77,230.614 1656.33,230.562 1656.9,232.608 1657.47,233.543 1658.04,232.217 1658.61,232.267 1659.18,230.933 1659.74,229.797 1660.31,230.013 1660.88,227.955 1661.45,230.192 1662.02,229.274 1662.59,225.366 1663.15,224.651 1663.72,226.252 1664.29,226.424 1664.86,226.677 1665.43,224.876 1666,226.25 1666.56,227.634 1667.13,229.936 1667.7,228.217 1668.27,228.366 1668.84,228.489 1669.41,227.709 1669.97,227.783 1670.54,224.948 1671.11,226.136 1671.68,227.468 1672.25,228.89 1672.82,232.185 1673.38,231.947 1673.95,228.729 1674.52,229.795 1675.09,228.723 1675.66,228.705 1676.23,227.809 1676.79,228.919 1677.36,225.951 1677.93,225.29 1678.5,225.812 1679.07,228.549 1679.64,230.853 1680.2,229.865 1680.77,228.787 1681.34,227.861 1681.91,227.952 1682.48,227.074 1683.05,227.275 1683.61,227.557 1684.18,229.07 1684.75,229.177 1685.32,229.225 1685.89,228.668 1686.46,226.998 1687.02,228.347 1687.59,228.653 1688.16,229.975 1688.73,228.977 1689.3,231.085 1689.87,229.17 1690.44,230.359 1691,230.314 1691.57,230.539 1692.14,231.623 1692.71,231.811 1693.28,233.794 1693.85,233.714 1694.41,232.513 1694.98,231.464 1695.55,230.654 1696.12,229.52 1696.69,230.834 1697.26,233.99 1697.82,231.055 1698.39,230.066 1698.96,231.33 1699.53,231.556 1700.1,232.562 1700.67,232.442 1701.23,231.357 1701.8,231.378 1702.37,231.361 1702.94,232.704 1703.51,232.648 1704.08,233.777 1704.64,232.585 1705.21,234.525 1705.78,235.326 1706.35,236.026 1706.92,235.619 1707.49,235.258 1708.05,238.093 1708.62,235.554 1709.19,236.425 1709.76,237.133 1710.33,239.728 1710.9,241.283 1711.46,240.427 1712.03,239.738 1712.6,240.045 1713.17,239.359 1713.74,237.663 1714.31,236.226 1714.87,236.725 1715.44,235.109 1716.01,232.69 1716.58,231.221 1717.15,231.969 1717.72,231.874 1718.28,232.584 1718.85,232.22 1719.42,232.095 1719.99,231.084 1720.56,230.97 1721.13,227.637 1721.69,228.951 1722.26,228.907 1722.83,231.184 1723.4,235.159 1723.97,234.715 1724.54,237.473 1725.1,236.913 1725.67,236.081 1726.24,235.541 1726.81,235.191 1727.38,234.717 1727.95,234.306 1728.51,233.794 1729.08,233.488 1729.65,233.191 1730.22,233.817 1730.79,232.322 1731.36,232.23 1731.92,232.885 1732.49,232.437 1733.06,231.266 1733.63,231.22 1734.2,233.044 1734.77,231.568 1735.33,232.297 1735.9,231.863 1736.47,231.703 1737.04,231.333 1737.61,231.979 1738.18,231.619 1738.74,230.368 1739.31,230.051 1739.88,228.826 1740.45,227.539 1741.02,227.633 1741.59,228.552 1742.15,228.361 1742.72,226.205 1743.29,226.025 1743.86,227.224 1744.43,226.152 1745,225.986 1745.56,223.062 1746.13,224.589 1746.7,224.843 1747.27,225.119 1747.84,226.247 1748.41,224.265 1748.97,222.534 1749.54,225.101 1750.11,226.234 1750.68,226.297 1751.25,226.331 1751.82,227.782 1752.38,227.88 1752.95,226.761 1753.52,226.836 1754.09,228.147 1754.66,226.068 1755.23,228.129 1755.79,229.272 1756.36,230.362 1756.93,229.024 1757.5,229.102 1758.07,231.251 1758.64,231.105 1759.21,231.091 1759.77,232.054 1760.34,231.717 1760.91,232.311 1761.48,232.95 1762.05,232.726 1762.62,232.565 1763.18,231.353 1763.75,230.18 1764.32,230.079 1764.89,232.139 1765.46,233.067 1766.03,232.559 1766.59,232.056 1767.16,230.601 1767.73,230.612 1768.3,231.519 1768.87,231.366 1769.44,231.394 1770,232.156 1770.57,232.104 1771.14,230.714 1771.71,230.716 1772.28,231.65 1772.85,231.39 1773.41,231.506 1773.98,230.291 1774.55,228.181 1775.12,231.427 1775.69,233.114 1776.26,232.143 1776.82,232.751 1777.39,230.29 1777.96,230.19 1778.53,231.168 1779.1,231.082 1779.67,232.062 1780.23,231.961 1780.8,229.717 1781.37,229.592 1781.94,229.755 1782.51,231.88 1783.08,229.844 1783.64,229.686 1784.21,228.722 1784.78,227.885 1785.35,226.973 1785.92,227.047 1786.49,226.126 1787.05,229.459 1787.62,228.482 1788.19,228.522 1788.76,227.664 1789.33,226.833 1789.9,227.086 1790.46,229.377 1791.03,230.608 1791.6,228.572 1792.17,228.631 1792.74,228.63 1793.31,226.63 1793.87,228.094 1794.44,228.181 1795.01,228.292 1795.58,228.559 1796.15,228.482 1796.72,228.717 1797.28,229.987 1797.85,232.982 1798.42,230.481 1798.99,229.49 1799.56,227.3 1800.13,227.255 1800.69,230.481 1801.26,228.416 1801.83,228.511 1802.4,230.523 1802.97,230.454 1803.54,231.345 1804.1,231.121 1804.67,229.085 1805.24,228.148 1805.81,228.197 1806.38,228.095 1806.95,225.424 1807.51,226.899 1808.08,225.149 1808.65,227.395 1809.22,226.586 1809.79,229.083 1810.36,229.077 1810.92,228.288 1811.49,228.257 1812.06,228.273 1812.63,226.136 1813.2,225.483 1813.77,226.947 1814.33,226.23 1814.9,225.522 1815.47,224.865 1816.04,226.106 1816.61,226.313 1817.18,228.611 1817.74,227.567 1818.31,227.91 1818.88,227.034 1819.45,227.341 1820.02,225.547 1820.59,228.124 1821.15,228.38 1821.72,227.653 1822.29,227.741 1822.86,228.124 1823.43,227.472 1824,226.845 1824.56,226.139 1825.13,227.68 1825.7,228.929 1826.27,230.188 1826.84,230.266 1827.41,230.456 1827.97,231.554 1828.54,231.639 1829.11,232.51 1829.68,233.511 1830.25,234.324 1830.82,234.014 1831.39,234.75 1831.95,236.783 1832.52,235.387 1833.09,236.105 1833.66,235.778 1834.23,235.512 1834.8,234.232 1835.36,233.065 1835.93,231.819 1836.5,231.427 1837.07,231.41 1837.64,227.957 1838.21,229.971 1838.77,229.246 1839.34,226.428 1839.91,226.809 1840.48,229.277 1841.05,228.437 1841.62,228.334 1842.18,226.541 1842.75,227.657 1843.32,228.196 1843.89,227.389 1844.46,227.345 1845.03,229.798 1845.59,232.089 1846.16,231.999 1846.73,230.875 1847.3,230.718 1847.87,230.86 1848.44,228.858 1849,230.161 1849.57,230.266 1850.14,231.405 1850.71,230.147 1851.28,228.882 1851.85,229.127 1852.41,229.304 1852.98,228.452 1853.55,227.796 1854.12,230.155 1854.69,231.142 1855.26,234.351 1855.82,234.139 1856.39,233.887 1856.96,232.54 1857.53,232.423 1858.1,232.204 1858.67,233.259 1859.23,234.117 1859.8,233.916 1860.37,235.789 1860.94,232.485 1861.51,234.405 1862.08,234.172 1862.64,234.992 1863.21,234.851 1863.78,231.344 1864.35,232.23 1864.92,233.097 1865.49,232.909 1866.05,233.586 1866.62,229.133 1867.19,229.177 1867.76,228.333 1868.33,230.665 1868.9,231.575 1869.46,232.579 1870.03,231.531 1870.6,231.181 1871.17,230.919 1871.74,230.914 1872.31,230.594 1872.87,230.55 1873.44,230.495 1874.01,229.434 1874.58,230.474 1875.15,229.333 1875.72,230.3 1876.28,230.287 1876.85,229.258 1877.42,232.278 1877.99,235.018 1878.56,233.594 1879.13,233.325 1879.69,232.886 1880.26,231.911 1880.83,231.743 1881.4,231.656 1881.97,231.711 1882.54,229.673 1883.1,230.691 1883.67,230.54 1884.24,229.362 1884.81,228.234 1885.38,230.326 1885.95,228.378 1886.51,228.553 1887.08,228.556 1887.65,228.557 1888.22,228.709 1888.79,227.768 1889.36,226.131 1889.92,226.321 1890.49,226.489 1891.06,227.935 1891.63,228.101 1892.2,231.289 1892.77,231.247 1893.33,230.293 1893.9,229.949 1894.47,230.233 1895.04,228.033 1895.61,229.175 1896.18,227.186 1896.74,227.552 1897.31,226.679 1897.88,226.75 1898.45,228.084 1899.02,229.021 1899.59,229.193 1900.16,229.354 1900.72,227.374 1901.29,226.529 1901.86,225.778 1902.43,226.131 1903,225.428 1903.57,225.789 1904.13,227.158 1904.7,227.509 1905.27,227.823 1905.84,228.05 1906.41,227.082 1906.98,227.377 1907.54,226.788 1908.11,227.282 1908.68,226.581 1909.25,226.969 1909.82,229.571 1910.39,230.735 1910.95,230.662 1911.52,229.689 1912.09,231.922 1912.66,232.95 1913.23,231.807 1913.8,231.951 1914.36,232.028 1914.93,232.877 1915.5,233.947 1916.07,235.863 1916.64,234.323 1917.21,235.184 1917.77,234.92 1918.34,234.389 1918.91,231.824 1919.48,230.793 1920.05,231.831 1920.62,232.755 1921.18,232.25 1921.75,233.093 1922.32,233.938 1922.89,235.709 1923.46,235.484 1924.03,235.264 1924.59,235.093 1925.16,233.812 1925.73,231.579 1926.3,230.441 1926.87,227.365 1927.44,226.562 1928,227.905 1928.57,226.88 1929.14,229.21 1929.71,229.325 1930.28,230.439 1930.85,230.453 1931.41,230.367 1931.98,229.558 1932.55,230.891 1933.12,230.884 1933.69,230.636 1934.26,229.679 1934.82,229.811 1935.39,229.809 1935.96,229.861 1936.53,227.849 1937.1,227.156 1937.67,229.409 1938.23,229.242 1938.8,228.374 1939.37,227.222 1939.94,227.348 1940.51,226.531 1941.08,226 1941.64,224.273 1942.21,223.43 1942.78,225.044 1943.35,224.264 1943.92,225.856 1944.49,225.992 1945.05,226.288 1945.62,228.528 1946.19,227.626 1946.76,227.965 1947.33,230.079 1947.9,231.39 1948.46,232.325 1949.03,232.265 1949.6,232.447 1950.17,232.269 1950.74,232.301 1951.31,229.989 1951.87,230.081 1952.44,233.181 1953.01,231.922 1953.58,231.987 1954.15,233.035 1954.72,232.89 1955.28,233.682 1955.85,232.507 1956.42,233.48 1956.99,233.186 1957.56,234.228 1958.13,231.958 1958.69,231.813 1959.26,232.711 1959.83,231.589 1960.4,231.364 1960.97,231.071 1961.54,231.015 1962.1,233.059 1962.67,234.793 1963.24,231.377 1963.81,230.394 1964.38,232.642 1964.95,230.624 1965.51,231.775 1966.08,232.731 1966.65,229.481 1967.22,228.413 1967.79,229.396 1968.36,230.475 1968.92,229.642 1969.49,230.817 1970.06,231.766 1970.63,231.907 1971.2,230.84 1971.77,232.716 1972.34,232.592 1972.9,232.409 1973.47,233.224 1974.04,235.049 1974.61,234.794 1975.18,235.428 1975.75,237.213 1976.31,236.528 1976.88,235.297 1977.45,236.191 1978.02,237.844 1978.59,235.342 1979.16,236.061 1979.72,235.786 1980.29,234.541 1980.86,233.096 1981.43,232.67 1982,231.428 1982.57,231.22 1983.13,230.999 1983.7,231.823 1984.27,231.574 1984.84,230.389 1985.41,229.393 1985.98,228.361 1986.54,228.636 1987.11,227.767 1987.68,228.064 1988.25,228.159 1988.82,228.228 1989.39,226.08 1989.95,226.213 1990.52,225.442 1991.09,225.828 1991.66,228.118 1992.23,227.404 1992.8,224.443 1993.36,225.668 1993.93,224.959 1994.5,227.419 1995.07,226.667 1995.64,225.797 1996.21,228.122 1996.77,229.464 1997.34,230.382 1997.91,229.173 1998.48,229.001 1999.05,230.173 1999.62,226.975 2000.18,226.079 2000.75,227.486 2001.32,226.723 2001.89,227.952 2002.46,226.977 2003.03,227.562 2003.59,225.965 2004.16,224.211 2004.73,224.516 2005.3,226.905 2005.87,226.158 2006.44,226.613 2007,226.084 2007.57,224.551 2008.14,227.115 2008.71,227.567 2009.28,228.741 2009.85,228.748 2010.41,226.786 2010.98,228.151 2011.55,227.212 2012.12,228.604 2012.69,231.708 2013.26,232.63 2013.82,232.681 2014.39,231.59 2014.96,232.514 2015.53,233.355 2016.1,234.227 2016.67,234.339 2017.23,233.114 2017.8,234.036 2018.37,233.812 2018.94,233.642 2019.51,233.369 2020.08,230.979 2020.64,231.022 2021.21,231.156 2021.78,231.076 2022.35,231.991 2022.92,232.831 2023.49,232.84 2024.05,231.757 2024.62,230.726 2025.19,230.571 2025.76,232.596 2026.33,235.5 2026.9,232.943 2027.46,234.063 2028.03,234.53 2028.6,237.135 2029.17,233.759 2029.74,231.429 2030.31,232.232 2030.87,235.017 2031.44,234.568 2032.01,235.184 2032.58,235.977 2033.15,234.481 2033.72,233.224 2034.28,232.979 2034.85,231.574 2035.42,229.214 2035.99,229.181 2036.56,229.014 2037.13,228.913 2037.69,229.022 2038.26,231.225 2038.83,231.007 2039.4,231.056 2039.97,228.963 2040.54,230.16 2041.11,228.139 2041.67,228.406 2042.24,229.487 2042.81,229.499 2043.38,230.571 2043.95,229.514 2044.52,229.567 2045.08,230.587 2045.65,230.365 2046.22,230.407 2046.79,231.412 2047.36,231.135 2047.93,231.176 2048.49,232.068 2049.06,231.031 2049.63,231.906 2050.2,231.568 2050.77,230.374 2051.34,231.703 2051.9,230.714 2052.47,229.561 2053.04,229.553 2053.61,230.498 2054.18,229.529 2054.75,230.613 2055.31,229.537 2055.88,227.477 2056.45,227.752 2057.02,228.038 2057.59,226.16 2058.16,226.427 2058.72,227.773 2059.29,230.078 2059.86,230.106 2060.43,233.162 2061,227.95 2061.57,225.896 2062.13,226.271 2062.7,226.734 2063.27,226.057 2063.84,227.42 2064.41,227.573 2064.98,228.579 2065.54,228.798 2066.11,226.87 2066.68,226.873 2067.25,226.956 2067.82,227.542 2068.39,229.091 2068.95,227.939 2069.52,227.086 2070.09,225.296 2070.66,227.707 2071.23,229.098 2071.8,232.472 2072.36,231.238 2072.93,231.361 2073.5,233.424 2074.07,233.061 2074.64,234.033 2075.21,232.806 2075.77,231.456 2076.34,233.562 2076.91,234.472 2077.48,233.095 2078.05,234.02 2078.62,235.849 2079.18,233.268 2079.75,236.038 2080.32,232.665 2080.89,233.59 2081.46,234.25 2082.03,235.048 2082.59,234.728 2083.16,236.222 2083.73,236.804 2084.3,236.28 2084.87,233.732 2085.44,232.418 2086,234.362 2086.57,232.999 2087.14,231.537 2087.71,229.204 2088.28,230.531 2088.85,230.377 2089.41,229.322 2089.98,228.443 2090.55,229.62 2091.12,231.531 2091.69,232.475 2092.26,230.29 2092.82,230.124 2093.39,231.05 2093.96,229.793 2094.53,225.673 2095.1,224.033 2095.67,224.475 2096.23,224.065 2096.8,220.542 2097.37,220.194 2097.94,219.895 2098.51,222.853 2099.08,220.35 2099.64,222.851 2100.21,221.422 2100.78,222.168 2101.35,222.826 2101.92,222.458 2102.49,223.178 2103.05,224.851 2103.62,225.274 2104.19,225.545 2104.76,226.985 2105.33,230.546 2105.9,231.716 2106.46,231.939 2107.03,232.878 2107.6,233.707 2108.17,234.781 2108.74,234.549 2109.31,232.214 2109.87,229.381 2110.44,226.557 2111.01,223.586 2111.58,222.138 2112.15,222.943 2112.72,224.698 2113.29,225.267 2113.85,226.88 2114.42,227.081 2114.99,226.398 2115.56,223.594 2116.13,225.324 2116.7,226.848 2117.26,227.254 2117.83,226.526 2118.4,229.16 2118.97,229.412 2119.54,228.605 2120.11,229.874 2120.67,231.239 2121.24,231.374 2121.81,231.62 2122.38,231.648 2122.95,230.585 2123.52,233.164 2124.08,232.077 2124.65,229.112 2125.22,229.348 2125.79,229.326 2126.36,228.475 2126.93,230.668 2127.49,230.902 2128.06,229.892 2128.63,229.162 2129.2,233.62 2129.77,233.601 2130.34,233.452 2130.9,232.492 2131.47,231.538 2132.04,231.688 2132.61,229.589 2133.18,231.692 2133.75,232.911 2134.31,232.954 2134.88,232.036 2135.45,229.844 2136.02,230.068 2136.59,228.121 2137.16,229.503 2137.72,233.638 2138.29,231.449 2138.86,232.514 2139.43,230.467 2140,229.395 2140.57,229.466 2141.13,230.679 2141.7,230.816 2142.27,231.952 2142.84,232.13 2143.41,233.379 2143.98,234.256 2144.54,236.179 2145.11,236.964 2145.68,236.617 2146.25,236.174 2146.82,235.867 2147.39,238.501 2147.95,239.204 2148.52,239.87 2149.09,240.303 2149.66,238.748 2150.23,240.33 2150.8,241.958 2151.36,241.241 2151.93,241.525 2152.5,239.703 2153.07,237.957 2153.64,237.17 2154.21,235.45 2154.77,235.041 2155.34,234.713 2155.91,234.284 2156.48,231.959 2157.05,231.748 2157.62,234.651 2158.18,232.123 2158.75,231.65 2159.32,231.455 2159.89,231.382 \"/>\n<path clip-path=\"url(#clip790)\" d=\"M1649.46 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1649.46 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1649.46,1245.03 2150.8,1245.03 2150.8,1089.51 1649.46,1089.51 1649.46,1245.03 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1669.53,1141.35 1789.98,1141.35 \"/>\n<path clip-path=\"url(#clip790)\" d=\"M1817.46 1125.34 L1817.46 1132.71 L1826.23 1132.71 L1826.23 1136.02 L1817.46 1136.02 L1817.46 1150.09 Q1817.46 1153.26 1818.32 1154.16 Q1819.2 1155.07 1821.86 1155.07 L1826.23 1155.07 L1826.23 1158.63 L1821.86 1158.63 Q1816.93 1158.63 1815.05 1156.8 Q1813.18 1154.95 1813.18 1150.09 L1813.18 1136.02 L1810.05 1136.02 L1810.05 1132.71 L1813.18 1132.71 L1813.18 1125.34 L1817.46 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1843.62 1145.6 Q1838.46 1145.6 1836.47 1146.78 Q1834.48 1147.96 1834.48 1150.81 Q1834.48 1153.08 1835.96 1154.42 Q1837.46 1155.74 1840.03 1155.74 Q1843.57 1155.74 1845.7 1153.24 Q1847.86 1150.72 1847.86 1146.55 L1847.86 1145.6 L1843.62 1145.6 M1852.11 1143.84 L1852.11 1158.63 L1847.86 1158.63 L1847.86 1154.7 Q1846.4 1157.06 1844.22 1158.19 Q1842.05 1159.3 1838.9 1159.3 Q1834.92 1159.3 1832.55 1157.08 Q1830.22 1154.84 1830.22 1151.09 Q1830.22 1146.71 1833.13 1144.49 Q1836.07 1142.27 1841.88 1142.27 L1847.86 1142.27 L1847.86 1141.85 Q1847.86 1138.91 1845.91 1137.31 Q1843.99 1135.69 1840.49 1135.69 Q1838.27 1135.69 1836.17 1136.22 Q1834.06 1136.76 1832.11 1137.82 L1832.11 1133.89 Q1834.45 1132.98 1836.65 1132.54 Q1838.85 1132.08 1840.93 1132.08 Q1846.56 1132.08 1849.34 1135 Q1852.11 1137.91 1852.11 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1875.91 1136.69 Q1875.19 1136.27 1874.34 1136.09 Q1873.5 1135.88 1872.48 1135.88 Q1868.87 1135.88 1866.93 1138.24 Q1865.01 1140.58 1865.01 1144.97 L1865.01 1158.63 L1860.73 1158.63 L1860.73 1132.71 L1865.01 1132.71 L1865.01 1136.73 Q1866.35 1134.37 1868.5 1133.24 Q1870.66 1132.08 1873.73 1132.08 Q1874.17 1132.08 1874.71 1132.15 Q1875.24 1132.2 1875.89 1132.31 L1875.91 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1896.6 1145.37 Q1896.6 1140.74 1894.68 1138.19 Q1892.79 1135.65 1889.34 1135.65 Q1885.91 1135.65 1883.99 1138.19 Q1882.09 1140.74 1882.09 1145.37 Q1882.09 1149.97 1883.99 1152.52 Q1885.91 1155.07 1889.34 1155.07 Q1892.79 1155.07 1894.68 1152.52 Q1896.6 1149.97 1896.6 1145.37 M1900.86 1155.41 Q1900.86 1162.03 1897.92 1165.25 Q1894.98 1168.49 1888.92 1168.49 Q1886.67 1168.49 1884.68 1168.15 Q1882.69 1167.82 1880.82 1167.13 L1880.82 1162.98 Q1882.69 1164 1884.52 1164.49 Q1886.35 1164.97 1888.25 1164.97 Q1892.44 1164.97 1894.52 1162.78 Q1896.6 1160.6 1896.6 1156.18 L1896.6 1154.07 Q1895.29 1156.36 1893.23 1157.5 Q1891.17 1158.63 1888.29 1158.63 Q1883.53 1158.63 1880.61 1155 Q1877.69 1151.36 1877.69 1145.37 Q1877.69 1139.35 1880.61 1135.72 Q1883.53 1132.08 1888.29 1132.08 Q1891.17 1132.08 1893.23 1133.22 Q1895.29 1134.35 1896.6 1136.64 L1896.6 1132.71 L1900.86 1132.71 L1900.86 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1931.81 1144.6 L1931.81 1146.69 L1912.23 1146.69 Q1912.51 1151.09 1914.87 1153.4 Q1917.25 1155.69 1921.49 1155.69 Q1923.94 1155.69 1926.23 1155.09 Q1928.55 1154.49 1930.82 1153.28 L1930.82 1157.31 Q1928.53 1158.28 1926.12 1158.79 Q1923.71 1159.3 1921.23 1159.3 Q1915.03 1159.3 1911.4 1155.69 Q1907.79 1152.08 1907.79 1145.92 Q1907.79 1139.56 1911.21 1135.83 Q1914.66 1132.08 1920.49 1132.08 Q1925.73 1132.08 1928.76 1135.46 Q1931.81 1138.82 1931.81 1144.6 M1927.55 1143.35 Q1927.51 1139.86 1925.59 1137.78 Q1923.69 1135.69 1920.54 1135.69 Q1916.98 1135.69 1914.82 1137.71 Q1912.69 1139.72 1912.37 1143.38 L1927.55 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1943.02 1125.34 L1943.02 1132.71 L1951.79 1132.71 L1951.79 1136.02 L1943.02 1136.02 L1943.02 1150.09 Q1943.02 1153.26 1943.87 1154.16 Q1944.75 1155.07 1947.41 1155.07 L1951.79 1155.07 L1951.79 1158.63 L1947.41 1158.63 Q1942.48 1158.63 1940.61 1156.8 Q1938.73 1154.95 1938.73 1150.09 L1938.73 1136.02 L1935.61 1136.02 L1935.61 1132.71 L1938.73 1132.71 L1938.73 1125.34 L1943.02 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip790)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1669.53,1193.19 1789.98,1193.19 \"/>\n<path clip-path=\"url(#clip790)\" d=\"M1831.77 1194.82 L1831.77 1210.47 L1827.51 1210.47 L1827.51 1194.96 Q1827.51 1191.28 1826.07 1189.45 Q1824.64 1187.62 1821.77 1187.62 Q1818.32 1187.62 1816.33 1189.82 Q1814.34 1192.02 1814.34 1195.82 L1814.34 1210.47 L1810.05 1210.47 L1810.05 1184.55 L1814.34 1184.55 L1814.34 1188.57 Q1815.86 1186.24 1817.92 1185.08 Q1820.01 1183.92 1822.72 1183.92 Q1827.18 1183.92 1829.48 1186.7 Q1831.77 1189.45 1831.77 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1850.31 1187.53 Q1846.88 1187.53 1844.89 1190.22 Q1842.9 1192.88 1842.9 1197.53 Q1842.9 1202.18 1844.87 1204.87 Q1846.86 1207.53 1850.31 1207.53 Q1853.71 1207.53 1855.7 1204.85 Q1857.69 1202.16 1857.69 1197.53 Q1857.69 1192.93 1855.7 1190.24 Q1853.71 1187.53 1850.31 1187.53 M1850.31 1183.92 Q1855.86 1183.92 1859.04 1187.53 Q1862.21 1191.14 1862.21 1197.53 Q1862.21 1203.9 1859.04 1207.53 Q1855.86 1211.14 1850.31 1211.14 Q1844.73 1211.14 1841.56 1207.53 Q1838.41 1203.9 1838.41 1197.53 Q1838.41 1191.14 1841.56 1187.53 Q1844.73 1183.92 1850.31 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1884.29 1188.53 Q1883.57 1188.11 1882.72 1187.93 Q1881.88 1187.72 1880.86 1187.72 Q1877.25 1187.72 1875.31 1190.08 Q1873.39 1192.42 1873.39 1196.81 L1873.39 1210.47 L1869.11 1210.47 L1869.11 1184.55 L1873.39 1184.55 L1873.39 1188.57 Q1874.73 1186.21 1876.88 1185.08 Q1879.04 1183.92 1882.11 1183.92 Q1882.55 1183.92 1883.09 1183.99 Q1883.62 1184.04 1884.27 1184.15 L1884.29 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1908.11 1189.52 Q1909.71 1186.65 1911.93 1185.29 Q1914.15 1183.92 1917.16 1183.92 Q1921.21 1183.92 1923.41 1186.77 Q1925.61 1189.59 1925.61 1194.82 L1925.61 1210.47 L1921.33 1210.47 L1921.33 1194.96 Q1921.33 1191.24 1920.01 1189.43 Q1918.69 1187.62 1915.98 1187.62 Q1912.67 1187.62 1910.75 1189.82 Q1908.83 1192.02 1908.83 1195.82 L1908.83 1210.47 L1904.54 1210.47 L1904.54 1194.96 Q1904.54 1191.21 1903.23 1189.43 Q1901.91 1187.62 1899.15 1187.62 Q1895.89 1187.62 1893.97 1189.85 Q1892.04 1192.05 1892.04 1195.82 L1892.04 1210.47 L1887.76 1210.47 L1887.76 1184.55 L1892.04 1184.55 L1892.04 1188.57 Q1893.5 1186.19 1895.54 1185.06 Q1897.58 1183.92 1900.38 1183.92 Q1903.2 1183.92 1905.17 1185.36 Q1907.16 1186.79 1908.11 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.033 ¬± 0.022\n  with uncertainty of ¬± 0.001968702782343384\n  from 62 blocks after 5 transformations (k = 6).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01524 ¬± (0.00312146, 0.00321863) (MC)\n  95% confidence interval: [-4.02152, -4.0092]) (MC)\n  linear error propagation: -4.01576 ¬± 0.00324956\n  |Œ¥_y| = |0.00222569| (‚â§ 0.1 for normal approx)\n  Blocking successful with 15 blocks after 7 transformations (k = 8).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.015238553389317, val_l = 0.006280543190516852, val_u = 0.006036803929668544)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip820\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip820)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip821\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip820)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip822\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip822)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip822)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip822)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip822)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip820)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip820)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip820)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip820)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip820)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip820)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1220.15 1391.71 L1220.15 1397.25 Q1217.67 1395.98 1214.99 1395.34 Q1212.32 1394.71 1209.46 1394.71 Q1205.1 1394.71 1202.9 1396.04 Q1200.74 1397.38 1200.74 1400.05 Q1200.74 1402.09 1202.3 1403.27 Q1203.85 1404.41 1208.57 1405.46 L1210.57 1405.91 Q1216.81 1407.25 1219.42 1409.7 Q1222.06 1412.12 1222.06 1416.48 Q1222.06 1421.44 1218.11 1424.34 Q1214.2 1427.23 1207.32 1427.23 Q1204.46 1427.23 1201.34 1426.66 Q1198.25 1426.12 1194.82 1425.01 L1194.82 1418.96 Q1198.06 1420.65 1201.21 1421.51 Q1204.36 1422.33 1207.45 1422.33 Q1211.59 1422.33 1213.82 1420.93 Q1216.05 1419.5 1216.05 1416.92 Q1216.05 1414.54 1214.42 1413.26 Q1212.83 1411.99 1207.39 1410.81 L1205.35 1410.33 Q1199.91 1409.19 1197.49 1406.83 Q1195.07 1404.45 1195.07 1400.31 Q1195.07 1395.28 1198.64 1392.54 Q1202.2 1389.8 1208.76 1389.8 Q1212 1389.8 1214.87 1390.28 Q1217.73 1390.76 1220.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1237.18 1380.54 L1237.18 1390.66 L1249.24 1390.66 L1249.24 1395.22 L1237.18 1395.22 L1237.18 1414.57 Q1237.18 1418.93 1238.36 1420.17 Q1239.57 1421.41 1243.23 1421.41 L1249.24 1421.41 L1249.24 1426.31 L1243.23 1426.31 Q1236.45 1426.31 1233.87 1423.8 Q1231.29 1421.25 1231.29 1414.57 L1231.29 1395.22 L1226.99 1395.22 L1226.99 1390.66 L1231.29 1390.66 L1231.29 1380.54 L1237.18 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1287.44 1407.02 L1287.44 1409.89 L1260.51 1409.89 Q1260.89 1415.94 1264.14 1419.12 Q1267.42 1422.27 1273.24 1422.27 Q1276.61 1422.27 1279.77 1421.44 Q1282.95 1420.61 1286.07 1418.96 L1286.07 1424.5 Q1282.92 1425.83 1279.61 1426.53 Q1276.3 1427.23 1272.89 1427.23 Q1264.36 1427.23 1259.36 1422.27 Q1254.4 1417.3 1254.4 1408.84 Q1254.4 1400.08 1259.11 1394.96 Q1263.85 1389.8 1271.87 1389.8 Q1279.07 1389.8 1283.24 1394.45 Q1287.44 1399.07 1287.44 1407.02 M1281.58 1405.3 Q1281.52 1400.5 1278.87 1397.63 Q1276.26 1394.77 1271.94 1394.77 Q1267.03 1394.77 1264.07 1397.54 Q1261.15 1400.31 1260.7 1405.34 L1281.58 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1302.71 1420.96 L1302.71 1439.87 L1296.83 1439.87 L1296.83 1390.66 L1302.71 1390.66 L1302.71 1396.07 Q1304.56 1392.89 1307.36 1391.36 Q1310.19 1389.8 1314.11 1389.8 Q1320.6 1389.8 1324.64 1394.96 Q1328.72 1400.12 1328.72 1408.52 Q1328.72 1416.92 1324.64 1422.08 Q1320.6 1427.23 1314.11 1427.23 Q1310.19 1427.23 1307.36 1425.71 Q1304.56 1424.15 1302.71 1420.96 M1322.64 1408.52 Q1322.64 1402.06 1319.97 1398.4 Q1317.32 1394.71 1312.68 1394.71 Q1308.03 1394.71 1305.36 1398.4 Q1302.71 1402.06 1302.71 1408.52 Q1302.71 1414.98 1305.36 1418.67 Q1308.03 1422.33 1312.68 1422.33 Q1317.32 1422.33 1319.97 1418.67 Q1322.64 1414.98 1322.64 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1361.15 1391.71 L1361.15 1397.25 Q1358.67 1395.98 1356 1395.34 Q1353.32 1394.71 1350.46 1394.71 Q1346.1 1394.71 1343.9 1396.04 Q1341.74 1397.38 1341.74 1400.05 Q1341.74 1402.09 1343.3 1403.27 Q1344.86 1404.41 1349.57 1405.46 L1351.57 1405.91 Q1357.81 1407.25 1360.42 1409.7 Q1363.06 1412.12 1363.06 1416.48 Q1363.06 1421.44 1359.11 1424.34 Q1355.2 1427.23 1348.32 1427.23 Q1345.46 1427.23 1342.34 1426.66 Q1339.25 1426.12 1335.82 1425.01 L1335.82 1418.96 Q1339.06 1420.65 1342.21 1421.51 Q1345.36 1422.33 1348.45 1422.33 Q1352.59 1422.33 1354.82 1420.93 Q1357.05 1419.5 1357.05 1416.92 Q1357.05 1414.54 1355.42 1413.26 Q1353.83 1411.99 1348.39 1410.81 L1346.35 1410.33 Q1340.91 1409.19 1338.49 1406.83 Q1336.07 1404.45 1336.07 1400.31 Q1336.07 1395.28 1339.64 1392.54 Q1343.2 1389.8 1349.76 1389.8 Q1353 1389.8 1355.87 1390.28 Q1358.73 1390.76 1361.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip822)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1153.59 2211.02,1153.59 \"/>\n<polyline clip-path=\"url(#clip822)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1004.47 2211.02,1004.47 \"/>\n<polyline clip-path=\"url(#clip822)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,855.34 2211.02,855.34 \"/>\n<polyline clip-path=\"url(#clip822)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,706.213 2211.02,706.213 \"/>\n<polyline clip-path=\"url(#clip822)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,557.087 2211.02,557.087 \"/>\n<polyline clip-path=\"url(#clip822)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,407.96 2211.02,407.96 \"/>\n<polyline clip-path=\"url(#clip822)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,258.834 2211.02,258.834 \"/>\n<polyline clip-path=\"url(#clip820)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip820)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1153.59 365.751,1153.59 \"/>\n<polyline clip-path=\"url(#clip820)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1004.47 365.751,1004.47 \"/>\n<polyline clip-path=\"url(#clip820)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,855.34 365.751,855.34 \"/>\n<polyline clip-path=\"url(#clip820)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,706.213 365.751,706.213 \"/>\n<polyline clip-path=\"url(#clip820)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,557.087 365.751,557.087 \"/>\n<polyline clip-path=\"url(#clip820)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,407.96 365.751,407.96 \"/>\n<polyline clip-path=\"url(#clip820)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,258.834 365.751,258.834 \"/>\n<path clip-path=\"url(#clip820)\" d=\"M298.909 1139.39 Q295.298 1139.39 293.469 1142.96 Q291.664 1146.5 291.664 1153.63 Q291.664 1160.73 293.469 1164.3 Q295.298 1167.84 298.909 1167.84 Q302.543 1167.84 304.349 1164.3 Q306.177 1160.73 306.177 1153.63 Q306.177 1146.5 304.349 1142.96 Q302.543 1139.39 298.909 1139.39 M298.909 1135.69 Q304.719 1135.69 307.775 1140.29 Q310.853 1144.88 310.853 1153.63 Q310.853 1162.35 307.775 1166.96 Q304.719 1171.54 298.909 1171.54 Q293.099 1171.54 290.02 1166.96 Q286.964 1162.35 286.964 1153.63 Q286.964 1144.88 290.02 1140.29 Q293.099 1135.69 298.909 1135.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M259.557 1017.81 L267.196 1017.81 L267.196 991.446 L258.886 993.112 L258.886 988.853 L267.15 987.186 L271.826 987.186 L271.826 1017.81 L279.465 1017.81 L279.465 1021.75 L259.557 1021.75 L259.557 1017.81 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M298.909 990.265 Q295.298 990.265 293.469 993.83 Q291.664 997.371 291.664 1004.5 Q291.664 1011.61 293.469 1015.17 Q295.298 1018.71 298.909 1018.71 Q302.543 1018.71 304.349 1015.17 Q306.177 1011.61 306.177 1004.5 Q306.177 997.371 304.349 993.83 Q302.543 990.265 298.909 990.265 M298.909 986.561 Q304.719 986.561 307.775 991.168 Q310.853 995.751 310.853 1004.5 Q310.853 1013.23 307.775 1017.83 Q304.719 1022.42 298.909 1022.42 Q293.099 1022.42 290.02 1017.83 Q286.964 1013.23 286.964 1004.5 Q286.964 995.751 290.02 991.168 Q293.099 986.561 298.909 986.561 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M262.775 868.685 L279.094 868.685 L279.094 872.62 L257.15 872.62 L257.15 868.685 Q259.812 865.93 264.395 861.3 Q269.002 856.648 270.182 855.305 Q272.428 852.782 273.307 851.046 Q274.21 849.287 274.21 847.597 Q274.21 844.842 272.266 843.106 Q270.344 841.37 267.242 841.37 Q265.043 841.37 262.59 842.134 Q260.159 842.898 257.381 844.449 L257.381 839.726 Q260.205 838.592 262.659 838.014 Q265.113 837.435 267.15 837.435 Q272.52 837.435 275.715 840.12 Q278.909 842.805 278.909 847.296 Q278.909 849.426 278.099 851.347 Q277.312 853.245 275.205 855.838 Q274.627 856.509 271.525 859.726 Q268.423 862.921 262.775 868.685 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M298.909 841.139 Q295.298 841.139 293.469 844.703 Q291.664 848.245 291.664 855.375 Q291.664 862.481 293.469 866.046 Q295.298 869.587 298.909 869.587 Q302.543 869.587 304.349 866.046 Q306.177 862.481 306.177 855.375 Q306.177 848.245 304.349 844.703 Q302.543 841.139 298.909 841.139 M298.909 837.435 Q304.719 837.435 307.775 842.041 Q310.853 846.625 310.853 855.375 Q310.853 864.101 307.775 868.708 Q304.719 873.291 298.909 873.291 Q293.099 873.291 290.02 868.708 Q286.964 864.101 286.964 855.375 Q286.964 846.625 290.02 842.041 Q293.099 837.435 298.909 837.435 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M272.914 704.859 Q276.27 705.577 278.145 707.845 Q280.043 710.114 280.043 713.447 Q280.043 718.563 276.525 721.364 Q273.006 724.165 266.525 724.165 Q264.349 724.165 262.034 723.725 Q259.742 723.308 257.289 722.452 L257.289 717.938 Q259.233 719.072 261.548 719.651 Q263.863 720.229 266.386 720.229 Q270.784 720.229 273.076 718.493 Q275.39 716.757 275.39 713.447 Q275.39 710.391 273.238 708.679 Q271.108 706.942 267.289 706.942 L263.261 706.942 L263.261 703.1 L267.474 703.1 Q270.923 703.1 272.752 701.734 Q274.58 700.345 274.58 697.753 Q274.58 695.091 272.682 693.679 Q270.807 692.243 267.289 692.243 Q265.367 692.243 263.168 692.66 Q260.969 693.077 258.33 693.956 L258.33 689.79 Q260.992 689.049 263.307 688.679 Q265.645 688.308 267.705 688.308 Q273.029 688.308 276.131 690.739 Q279.233 693.146 279.233 697.267 Q279.233 700.137 277.59 702.128 Q275.946 704.095 272.914 704.859 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M298.909 692.012 Q295.298 692.012 293.469 695.577 Q291.664 699.118 291.664 706.248 Q291.664 713.354 293.469 716.919 Q295.298 720.461 298.909 720.461 Q302.543 720.461 304.349 716.919 Q306.177 713.354 306.177 706.248 Q306.177 699.118 304.349 695.577 Q302.543 692.012 298.909 692.012 M298.909 688.308 Q304.719 688.308 307.775 692.915 Q310.853 697.498 310.853 706.248 Q310.853 714.975 307.775 719.581 Q304.719 724.165 298.909 724.165 Q293.099 724.165 290.02 719.581 Q286.964 714.975 286.964 706.248 Q286.964 697.498 290.02 692.915 Q293.099 688.308 298.909 688.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M271.594 543.881 L259.789 562.33 L271.594 562.33 L271.594 543.881 M270.367 539.807 L276.247 539.807 L276.247 562.33 L281.177 562.33 L281.177 566.219 L276.247 566.219 L276.247 574.367 L271.594 574.367 L271.594 566.219 L255.992 566.219 L255.992 561.705 L270.367 539.807 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M298.909 542.885 Q295.298 542.885 293.469 546.45 Q291.664 549.992 291.664 557.121 Q291.664 564.228 293.469 567.793 Q295.298 571.334 298.909 571.334 Q302.543 571.334 304.349 567.793 Q306.177 564.228 306.177 557.121 Q306.177 549.992 304.349 546.45 Q302.543 542.885 298.909 542.885 M298.909 539.182 Q304.719 539.182 307.775 543.788 Q310.853 548.372 310.853 557.121 Q310.853 565.848 307.775 570.455 Q304.719 575.038 298.909 575.038 Q293.099 575.038 290.02 570.455 Q286.964 565.848 286.964 557.121 Q286.964 548.372 290.02 543.788 Q293.099 539.182 298.909 539.182 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M258.793 390.68 L277.15 390.68 L277.15 394.615 L263.076 394.615 L263.076 403.088 Q264.094 402.74 265.113 402.578 Q266.131 402.393 267.15 402.393 Q272.937 402.393 276.316 405.564 Q279.696 408.736 279.696 414.152 Q279.696 419.731 276.224 422.833 Q272.752 425.911 266.432 425.911 Q264.256 425.911 261.988 425.541 Q259.742 425.171 257.335 424.43 L257.335 419.731 Q259.418 420.865 261.641 421.421 Q263.863 421.976 266.34 421.976 Q270.344 421.976 272.682 419.87 Q275.02 417.763 275.02 414.152 Q275.02 410.541 272.682 408.435 Q270.344 406.328 266.34 406.328 Q264.465 406.328 262.59 406.745 Q260.738 407.162 258.793 408.041 L258.793 390.68 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M298.909 393.759 Q295.298 393.759 293.469 397.324 Q291.664 400.865 291.664 407.995 Q291.664 415.101 293.469 418.666 Q295.298 422.208 298.909 422.208 Q302.543 422.208 304.349 418.666 Q306.177 415.101 306.177 407.995 Q306.177 400.865 304.349 397.324 Q302.543 393.759 298.909 393.759 M298.909 390.055 Q304.719 390.055 307.775 394.662 Q310.853 399.245 310.853 407.995 Q310.853 416.722 307.775 421.328 Q304.719 425.911 298.909 425.911 Q293.099 425.911 290.02 421.328 Q286.964 416.722 286.964 407.995 Q286.964 399.245 290.02 394.662 Q293.099 390.055 298.909 390.055 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M269.326 256.97 Q266.178 256.97 264.326 259.123 Q262.497 261.276 262.497 265.026 Q262.497 268.753 264.326 270.929 Q266.178 273.081 269.326 273.081 Q272.474 273.081 274.303 270.929 Q276.154 268.753 276.154 265.026 Q276.154 261.276 274.303 259.123 Q272.474 256.97 269.326 256.97 M278.608 242.318 L278.608 246.577 Q276.849 245.743 275.043 245.304 Q273.261 244.864 271.502 244.864 Q266.872 244.864 264.418 247.989 Q261.988 251.114 261.641 257.433 Q263.006 255.419 265.066 254.355 Q267.127 253.267 269.603 253.267 Q274.812 253.267 277.821 256.438 Q280.853 259.586 280.853 265.026 Q280.853 270.35 277.705 273.567 Q274.557 276.785 269.326 276.785 Q263.33 276.785 260.159 272.202 Q256.988 267.595 256.988 258.868 Q256.988 250.674 260.877 245.813 Q264.766 240.929 271.316 240.929 Q273.076 240.929 274.858 241.276 Q276.664 241.623 278.608 242.318 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M298.909 244.632 Q295.298 244.632 293.469 248.197 Q291.664 251.739 291.664 258.868 Q291.664 265.975 293.469 269.54 Q295.298 273.081 298.909 273.081 Q302.543 273.081 304.349 269.54 Q306.177 265.975 306.177 258.868 Q306.177 251.739 304.349 248.197 Q302.543 244.632 298.909 244.632 M298.909 240.929 Q304.719 240.929 307.775 245.535 Q310.853 250.118 310.853 258.868 Q310.853 267.595 307.775 272.202 Q304.719 276.785 298.909 276.785 Q293.099 276.785 290.02 272.202 Q286.964 267.595 286.964 258.868 Q286.964 250.118 290.02 245.535 Q293.099 240.929 298.909 240.929 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip822)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1043.71 400.199,942.765 400.786,850.143 401.372,765.286 401.958,687.676 402.545,616.837 403.131,552.324 403.718,493.726 404.304,440.658 404.891,392.763 405.477,349.707 406.063,311.176 406.65,276.878 407.236,246.537 407.823,219.895 408.409,261.916 408.995,297.83 409.582,277.772 410.168,259.9 410.755,243.975 411.341,274.77 411.927,262.5 412.514,253.165 413.1,245.391 413.687,273.099 414.273,270.267 414.86,296.067 415.446,294.527 416.032,294.069 416.619,318.999 417.205,322.02 417.792,325.875 418.378,330.036 418.964,335.517 419.551,375.791 420.137,382.702 420.724,404.758 421.31,426.648 421.896,447.484 422.483,456.14 423.069,465.444 423.656,475.221 424.242,484.926 424.829,496.179 425.415,516.321 426.001,536.77 426.588,556.354 427.174,574.949 427.761,592.75 428.347,609.537 428.933,619.732 429.52,649.434 430.106,660.461 430.693,670.971 431.279,699.11 431.865,725.886 432.452,739.845 433.038,748.829 433.625,762.664 434.211,775.658 434.798,784.154 435.384,796.701 435.97,813.353 436.557,821.163 437.143,836.39 437.73,847.498 438.316,861.532 438.902,871.908 439.489,881.885 440.075,895.328 440.662,904.956 441.248,911.233 441.835,917.356 442.421,929.662 443.007,947.174 443.594,961.21 444.18,969.089 444.767,974.073 445.353,984.705 445.939,997.234 446.526,1017.31 447.112,1024.08 447.699,1030.6 448.285,1034.48 448.871,1045.33 449.458,1050.85 450.044,1052.19 450.631,1057.74 451.217,1065.6 451.804,1073.15 452.39,1076.52 452.976,1081.7 453.563,1088.75 454.149,1091.43 454.736,1094.37 455.322,1103.11 455.908,1105.67 456.495,1112.06 457.081,1118.16 457.668,1127.81 458.254,1129.71 458.84,1134.81 459.427,1138.2 460.013,1141.6 460.6,1144.86 461.186,1148.3 461.773,1151.3 462.359,1156.18 462.945,1159.39 463.532,1163.86 464.118,1166.74 464.705,1171 465.291,1171.94 465.877,1177.61 466.464,1181.91 467.05,1184.12 467.637,1189.48 468.223,1189.75 468.809,1189.01 469.396,1191.41 469.982,1192.38 470.569,1196.06 471.155,1199.7 471.742,1204.42 472.328,1207.64 472.914,1209.54 473.501,1215.37 474.087,1213.88 474.674,1213.86 475.26,1219.9 475.846,1221.16 476.433,1221.01 477.019,1222.32 477.606,1220.66 478.192,1219.16 478.778,1220.32 479.365,1223.18 479.951,1224.28 480.538,1224.27 481.124,1225.46 481.711,1225.42 482.297,1227.96 482.883,1229.02 483.47,1228.46 484.056,1228.18 484.643,1230.43 485.229,1228.63 485.815,1226.87 486.402,1233.59 486.988,1233.33 487.575,1230.58 488.161,1230.5 488.748,1231.86 489.334,1232.87 489.92,1234.07 490.507,1235.03 491.093,1237.53 491.68,1239.96 492.266,1239.2 492.852,1238.47 493.439,1239.16 494.025,1237.33 494.612,1237.1 495.198,1236.99 495.784,1237.92 496.371,1240.53 496.957,1240.06 497.544,1240.88 498.13,1242.82 498.717,1243.7 499.303,1243.03 499.889,1242.36 500.476,1244.07 501.062,1244.74 501.649,1244.05 502.235,1243.46 502.821,1242.98 503.408,1243.43 503.994,1245.64 504.581,1243.7 505.167,1241.61 505.753,1243.69 506.34,1244.47 506.926,1246.46 507.513,1248.28 508.099,1250.16 508.686,1249.48 509.272,1247.39 509.858,1246.55 510.445,1248.42 511.031,1248.95 511.618,1245.48 512.204,1247.47 512.79,1247.95 513.377,1248.44 513.963,1246.34 514.55,1245.41 515.136,1246.27 515.722,1245.63 516.309,1249.97 516.895,1248.06 517.482,1248.74 518.068,1250.53 518.655,1249.58 519.241,1248.73 519.827,1248.07 520.414,1245.88 521,1246.54 521.587,1245.99 522.173,1246.7 522.759,1246.17 523.346,1246.94 523.932,1246.4 524.519,1248.23 525.105,1246.25 525.691,1242.96 526.278,1242.4 526.864,1243.13 527.451,1242.78 528.037,1242.48 528.624,1239.47 529.21,1237.82 529.796,1238.73 530.383,1240.81 530.969,1240.43 531.556,1239.96 532.142,1238.39 532.728,1238.09 533.315,1239.05 533.901,1241.08 534.488,1241.82 535.074,1240.33 535.661,1239.89 536.247,1240.86 536.833,1240.36 537.42,1239.92 538.006,1235.74 538.593,1235.76 539.179,1236.95 539.765,1238.02 540.352,1236.46 540.938,1236.48 541.525,1236.17 542.111,1234.65 542.697,1236.73 543.284,1236.5 543.87,1237.49 544.457,1238.4 545.043,1239.4 545.63,1241.64 546.216,1240 546.802,1239.67 547.389,1240.59 547.975,1241.4 548.562,1241.01 549.148,1241.63 549.734,1240.83 550.321,1238.97 550.907,1239.48 551.494,1239.74 552.08,1239.19 552.666,1239.83 553.253,1239.3 553.839,1240.04 554.426,1239.43 555.012,1239.29 555.599,1240.22 556.185,1239.84 556.771,1239.16 557.358,1237.48 557.944,1235.61 558.531,1236.49 559.117,1237.54 559.703,1235.99 560.29,1236.78 560.876,1232.99 561.463,1233.8 562.049,1233.48 562.635,1233.13 563.222,1233.25 563.808,1234.11 564.395,1235.07 564.981,1236.17 565.568,1236.86 566.154,1235.15 566.74,1233.33 567.327,1235.44 567.913,1239.05 568.5,1238.39 569.086,1237.78 569.672,1239.8 570.259,1244.28 570.845,1242.09 571.432,1240.24 572.018,1241.74 572.605,1240.68 573.191,1238.76 573.777,1239.38 574.364,1237.56 574.95,1239.45 575.537,1239.99 576.123,1240.46 576.709,1239.73 577.296,1240.55 577.882,1241.28 578.469,1240.46 579.055,1239.79 579.641,1239.04 580.228,1238.41 580.814,1237.54 581.401,1239.54 581.987,1238.85 582.574,1236.89 583.16,1238.93 583.746,1234.81 584.333,1235.33 584.919,1236 585.506,1236.71 586.092,1234.95 586.678,1233.2 587.265,1234.26 587.851,1238.64 588.438,1237.99 589.024,1237.21 589.61,1238.03 590.197,1238.78 590.783,1238.16 591.37,1237.56 591.956,1237.98 592.543,1237.11 593.129,1237.84 593.715,1238.38 594.302,1239.04 594.888,1234.35 595.475,1234.98 596.061,1234.27 596.647,1229.84 597.234,1232.13 597.82,1231.68 598.407,1231.25 598.993,1230.58 599.579,1230.2 600.166,1233.49 600.752,1235.39 601.339,1233.54 601.925,1231.9 602.512,1230.28 603.098,1231.12 603.684,1229.86 604.271,1228.35 604.857,1229.37 605.444,1227.87 606.03,1225.42 606.616,1222.6 607.203,1224.01 607.789,1221.86 608.376,1222.01 608.962,1220.92 609.548,1221.12 610.135,1218.7 610.721,1218.84 611.308,1223.96 611.894,1224 612.481,1225.09 613.067,1225.11 613.653,1225.34 614.24,1224.14 614.826,1222.67 615.413,1223.96 615.999,1220.29 616.585,1223.08 617.172,1224.25 617.758,1224.17 618.345,1224.37 618.931,1223.1 619.518,1224.24 620.104,1224.29 620.69,1221.8 621.277,1221.79 621.863,1223.1 622.45,1221.82 623.036,1223.23 623.622,1223.38 624.209,1225.83 624.795,1224.41 625.382,1225.43 625.968,1227.46 626.554,1227.35 627.141,1228.13 627.727,1227.96 628.314,1227.84 628.9,1228.84 629.487,1229.64 630.073,1228.09 630.659,1228.77 631.246,1229.62 631.832,1229.39 632.419,1228.86 633.005,1227.47 633.591,1225.86 634.178,1224.54 634.764,1220.96 635.351,1220.97 635.937,1222.3 636.523,1223.37 637.11,1225.65 637.696,1226.75 638.283,1227.73 638.869,1227.51 639.456,1229.85 640.042,1229.49 640.628,1226.8 641.215,1223.84 641.801,1226.35 642.388,1225.97 642.974,1226.9 643.56,1229.19 644.147,1230 644.733,1230.87 645.32,1230.29 645.906,1229.79 646.492,1230.84 647.079,1230.24 647.665,1229.84 648.252,1228.22 648.838,1227.79 649.425,1226.32 650.011,1226.14 650.597,1224.7 651.184,1224.57 651.77,1224.65 652.357,1224.69 652.943,1227.12 653.529,1225.53 654.116,1225.23 654.702,1224.9 655.289,1223.48 655.875,1223.51 656.462,1223.11 657.048,1224.41 657.634,1225.4 658.221,1225.02 658.807,1224.82 659.394,1228.06 659.98,1229.92 660.566,1230.71 661.153,1230.41 661.739,1229.89 662.326,1229.46 662.912,1230.24 663.498,1231.14 664.085,1230.84 664.671,1229.15 665.258,1227.46 665.844,1228.16 666.431,1228.82 667.017,1230.68 667.603,1229.96 668.19,1227.21 668.776,1229.13 669.363,1228.59 669.949,1228.21 670.535,1226.6 671.122,1226.23 671.708,1224.54 672.295,1225.54 672.881,1225.33 673.467,1225.06 674.054,1224.92 674.64,1223.23 675.227,1225.39 675.813,1222.92 676.4,1222.56 676.986,1221.09 677.572,1219.94 678.159,1219.83 678.745,1219.66 679.332,1218.58 679.918,1219.79 680.504,1217.36 681.091,1218.9 681.677,1220.23 682.264,1217.61 682.85,1221.58 683.436,1222.75 684.023,1222.52 684.609,1221.14 685.196,1221.11 685.782,1222.32 686.369,1222.17 686.955,1219.41 687.541,1220.29 688.128,1219.24 688.714,1215.7 689.301,1216.17 689.887,1214.87 690.473,1216.32 691.06,1217.47 691.646,1216.61 692.233,1219.43 692.819,1219.64 693.405,1220.93 693.992,1221.1 694.578,1219.93 695.165,1221.21 695.751,1221.2 696.338,1223.42 696.924,1224.35 697.51,1226.28 698.097,1225.63 698.683,1225.18 699.27,1222.29 699.856,1222.1 700.442,1219.39 701.029,1216.86 701.615,1215.93 702.202,1216.14 702.788,1214.94 703.375,1215.02 703.961,1218.91 704.547,1218.72 705.134,1217.47 705.72,1216.51 706.307,1215.62 706.893,1214.48 707.479,1217.16 708.066,1218.66 708.652,1220.94 709.239,1222 709.825,1219.51 710.411,1220.51 710.998,1220.61 711.584,1219.48 712.171,1217.09 712.757,1217.24 713.344,1216.1 713.93,1214.98 714.516,1215.04 715.103,1216.64 715.689,1217.9 716.276,1217.94 716.862,1217.84 717.448,1216.97 718.035,1218.5 718.621,1219.88 719.208,1217.13 719.794,1217.03 720.38,1216.08 720.967,1214.86 721.553,1218.73 722.14,1220.04 722.726,1217.37 723.313,1217.23 723.899,1219.69 724.485,1221.1 725.072,1221.2 725.658,1221.11 726.245,1221.16 726.831,1223.27 727.417,1224.32 728.004,1227.47 728.59,1224.73 729.177,1224.53 729.763,1225.53 730.349,1223.79 730.936,1224.69 731.522,1223.3 732.109,1224.09 732.695,1226.23 733.282,1225.75 733.868,1224.09 734.454,1223.4 735.041,1224.12 735.627,1222.72 736.214,1221.08 736.8,1219.71 737.386,1219.49 737.973,1219.32 738.559,1219.14 739.146,1215.47 739.732,1214.36 740.318,1212.16 740.905,1215.06 741.491,1216.52 742.078,1218.05 742.664,1217.78 743.251,1218.96 743.837,1219.93 744.423,1224.82 745.01,1224.61 745.596,1226.76 746.183,1226.12 746.769,1225.7 747.355,1229.16 747.942,1226.12 748.528,1225.61 749.115,1225.14 749.701,1226 750.288,1225.41 750.874,1225.06 751.46,1222.49 752.047,1223.7 752.633,1221.04 753.22,1220.75 753.806,1221.77 754.392,1219.23 754.979,1220.23 755.565,1218.56 756.152,1217.39 756.738,1217.35 757.324,1216.21 757.911,1217.48 758.497,1219.66 759.084,1218.08 759.67,1217 760.257,1216.82 760.843,1219.38 761.429,1216.78 762.016,1215.47 762.602,1215.43 763.189,1215.53 763.775,1215.64 764.361,1216.73 764.948,1217.92 765.534,1219.2 766.121,1220.25 766.707,1221.28 767.293,1221.09 767.88,1220.65 768.466,1221.61 769.053,1219 769.639,1219.99 770.226,1222.32 770.812,1223.22 771.398,1222.82 771.985,1222.59 772.571,1222.55 773.158,1223.23 773.744,1223.02 774.33,1222.51 774.917,1222.09 775.503,1220.41 776.09,1216.48 776.676,1216.35 777.262,1215.32 777.849,1215.28 778.435,1216.6 779.022,1215.53 779.608,1214.53 780.195,1218.23 780.781,1219.41 781.367,1218.16 781.954,1218.03 782.54,1215.58 783.127,1217.99 783.713,1219.14 784.299,1215.43 784.886,1216.84 785.472,1220.32 786.059,1220.26 786.645,1218.94 787.232,1218.81 787.818,1218.78 788.404,1219.81 788.991,1221.07 789.577,1222 790.164,1220.39 790.75,1217.75 791.336,1217.76 791.923,1216.49 792.509,1214.15 793.096,1211.61 793.682,1214 794.268,1213.01 794.855,1214.3 795.441,1213.07 796.028,1214.82 796.614,1214.63 797.201,1212.31 797.787,1212.48 798.373,1209.03 798.96,1209.27 799.546,1208.67 800.133,1210.3 800.719,1209.4 801.305,1209.88 801.892,1209.74 802.478,1208.79 803.065,1212.85 803.651,1210.67 804.237,1209.59 804.824,1207.43 805.41,1208.04 805.997,1210.91 806.583,1212.18 807.17,1212.57 807.756,1212.86 808.342,1211.87 808.929,1212.99 809.515,1216.79 810.102,1216.82 810.688,1215.4 811.274,1215.34 811.861,1214.41 812.447,1214.45 813.034,1214.38 813.62,1214.49 814.206,1215.83 814.793,1215.95 815.379,1215.04 815.966,1213.98 816.552,1215.53 817.139,1213.08 817.725,1214.36 818.311,1217.13 818.898,1216 819.484,1217.45 820.071,1217.61 820.657,1215.44 821.243,1215.28 821.83,1216.52 822.416,1215.26 823.003,1214.19 823.589,1212.96 824.175,1211.84 824.762,1209.38 825.348,1209.76 825.935,1209.98 826.521,1211.53 827.108,1211.72 827.694,1213.39 828.28,1214.73 828.867,1216.1 829.453,1216.37 830.04,1217.51 830.626,1217.28 831.212,1214.97 831.799,1213.93 832.385,1216.18 832.972,1216.18 833.558,1218.73 834.145,1219.76 834.731,1220.57 835.317,1221.42 835.904,1222.26 836.49,1220.69 837.077,1219.11 837.663,1218.89 838.249,1219.83 838.836,1220.68 839.422,1223.92 840.009,1222.17 840.595,1222.01 841.181,1221.73 841.768,1221.45 842.354,1223.68 842.941,1223.25 843.527,1223.03 844.114,1222.55 844.7,1222.08 845.286,1224.03 845.873,1226.1 846.459,1226.71 847.046,1223.58 847.632,1223.38 848.218,1224.02 848.805,1223.45 849.391,1220.68 849.978,1220.24 850.564,1222.34 851.15,1224.39 851.737,1223.77 852.323,1222.22 852.91,1221.64 853.496,1218.73 854.083,1220.99 854.669,1224.37 855.255,1222.86 855.842,1223.54 856.428,1222.82 857.015,1218.36 857.601,1216.84 858.187,1214.47 858.774,1212.02 859.36,1213.15 859.947,1213.41 860.533,1214.65 861.119,1218.34 861.706,1216.9 862.292,1215.68 862.879,1216.88 863.465,1217.84 864.052,1213.97 864.638,1214 865.224,1216.49 865.811,1216.47 866.397,1217.53 866.984,1217.52 867.57,1217.38 868.156,1217.08 868.743,1217.1 869.329,1217.04 869.916,1216.89 870.502,1215.53 871.089,1215.56 871.675,1215.68 872.261,1215.64 872.848,1216.75 873.434,1213.13 874.021,1214.47 874.607,1214.5 875.193,1213.33 875.78,1210.97 876.366,1211.3 876.953,1212.79 877.539,1213.12 878.125,1211.95 878.712,1211.01 879.298,1212.11 879.885,1212.61 880.471,1212.73 881.058,1211.81 881.644,1213.15 882.23,1210.93 882.817,1212.51 883.403,1211.69 883.99,1209.18 884.576,1209.37 885.162,1210.92 885.749,1212.33 886.335,1211.39 886.922,1210.39 887.508,1209.39 888.094,1209.88 888.681,1207.91 889.267,1206.1 889.854,1205.42 890.44,1203.45 891.027,1208.94 891.613,1208.3 892.199,1209.75 892.786,1210.04 893.372,1212.6 893.959,1210.09 894.545,1210.43 895.131,1213.12 895.718,1210.73 896.304,1208.7 896.891,1205.81 897.477,1206.47 898.063,1208.28 898.65,1208.92 899.236,1209.1 899.823,1211.9 900.409,1216.77 900.996,1217.73 901.582,1215.48 902.168,1215.7 902.755,1215.76 903.341,1216.69 903.928,1217.88 904.514,1217.55 905.1,1218.33 905.687,1219.39 906.273,1216.56 906.86,1215.22 907.446,1216.58 908.032,1216.55 908.619,1216.4 909.205,1213.33 909.792,1212.23 910.378,1212.01 910.965,1212.35 911.551,1213.56 912.137,1212.32 912.724,1214.99 913.31,1214.84 913.897,1214.78 914.483,1214.94 915.069,1214.96 915.656,1217.34 916.242,1218.43 916.829,1219.56 917.415,1218.09 918.002,1217.91 918.588,1221.46 919.174,1219.75 919.761,1217.19 920.347,1217.06 920.934,1218.34 921.52,1216.97 922.106,1216.73 922.693,1214.34 923.279,1214.16 923.866,1216.47 924.452,1215.34 925.038,1214.26 925.625,1215.74 926.211,1219.4 926.798,1218.91 927.384,1218.58 927.971,1220.8 928.557,1221.67 929.143,1222.37 929.73,1222.07 930.316,1221.76 930.903,1222.4 931.489,1221.05 932.075,1219.51 932.662,1219.3 933.248,1221.38 933.835,1220.76 934.421,1221.64 935.007,1217.69 935.594,1218.78 936.18,1216.15 936.767,1218.69 937.353,1219.64 937.94,1220.32 938.526,1220.15 939.112,1221.07 939.699,1220.78 940.285,1221.6 940.872,1222.49 941.458,1222.1 942.044,1224.07 942.631,1223.74 943.217,1225.55 943.804,1224.81 944.39,1224.19 944.976,1226.02 945.563,1222.9 946.149,1224.83 946.736,1224.25 947.322,1224.92 947.909,1223.17 948.495,1222.71 949.081,1222.4 949.668,1221.75 950.254,1222.7 950.841,1222.28 951.427,1223.12 952.013,1221.55 952.6,1222.3 953.186,1220.58 953.773,1217.87 954.359,1216.42 954.945,1216.32 955.532,1216.32 956.118,1219.77 956.705,1215.66 957.291,1215.71 957.878,1215.69 958.464,1214.53 959.05,1214.31 959.637,1214.14 960.223,1212.91 960.81,1211.76 961.396,1210.73 961.982,1213.3 962.569,1211.21 963.155,1211.22 963.742,1208.75 964.328,1205.55 964.915,1203.44 965.501,1200.29 966.087,1197.4 966.674,1195.87 967.26,1198.14 967.847,1197.82 968.433,1201.21 969.019,1202.84 969.606,1202.35 970.192,1205.23 970.779,1206.65 971.365,1205.92 971.951,1206.4 972.538,1205.78 973.124,1207.67 973.711,1206.47 974.297,1204.56 974.884,1201.27 975.47,1203.34 976.056,1200.24 976.643,1203.34 977.229,1205.28 977.816,1206.83 978.402,1205.9 978.988,1205.41 979.575,1207.25 980.161,1206.19 980.748,1209.15 981.334,1208.32 981.92,1207.29 982.507,1207.6 983.093,1206.56 983.68,1205.93 984.266,1206.47 984.853,1208.25 985.439,1209.94 986.025,1212.77 986.612,1212.73 987.198,1213.85 987.785,1213.75 988.371,1213.62 988.957,1213.65 989.544,1216.17 990.13,1213.73 990.717,1213.82 991.303,1210.27 991.889,1210.72 992.476,1212.32 993.062,1213.54 993.649,1212.14 994.235,1214.8 994.822,1214.8 995.408,1217.04 995.994,1216.99 996.581,1216.92 997.167,1217.9 997.754,1217.63 998.34,1217.29 998.926,1218.24 999.513,1218.2 1000.1,1216.86 1000.69,1215.09 1001.27,1213.84 1001.86,1213.82 1002.44,1214.96 1003.03,1212.41 1003.62,1216.13 1004.2,1216.09 1004.79,1214.68 1005.38,1214.82 1005.96,1214.76 1006.55,1217.37 1007.14,1217.09 1007.72,1215.67 1008.31,1214.23 1008.9,1215.44 1009.48,1214.08 1010.07,1213.81 1010.65,1215.01 1011.24,1212.57 1011.83,1213.87 1012.41,1215.12 1013,1215.25 1013.59,1211.65 1014.17,1211.81 1014.76,1213.23 1015.35,1210.89 1015.93,1212.1 1016.52,1212.47 1017.11,1218.73 1017.69,1223.57 1018.28,1221.92 1018.86,1219.21 1019.45,1221.49 1020.04,1218.88 1020.62,1221.07 1021.21,1219.41 1021.8,1214.34 1022.38,1213.05 1022.97,1216.7 1023.56,1216.4 1024.14,1215.39 1024.73,1212.93 1025.32,1212.91 1025.9,1214.2 1026.49,1213.76 1027.07,1214.96 1027.66,1213.71 1028.25,1207.65 1028.83,1209.16 1029.42,1209.5 1030.01,1209.81 1030.59,1211.33 1031.18,1210.37 1031.77,1210.68 1032.35,1210.78 1032.94,1208.63 1033.52,1208.9 1034.11,1207.97 1034.7,1210.56 1035.28,1208.44 1035.87,1207.5 1036.46,1207.93 1037.04,1209.6 1037.63,1207.4 1038.22,1206.53 1038.8,1209.35 1039.39,1208.41 1039.98,1206.21 1040.56,1207.76 1041.15,1209.43 1041.73,1212.24 1042.32,1212.32 1042.91,1212.26 1043.49,1212.32 1044.08,1216.15 1044.67,1217.13 1045.25,1218.35 1045.84,1217.14 1046.43,1215.67 1047.01,1215.42 1047.6,1214.15 1048.19,1212.66 1048.77,1212.76 1049.36,1211.81 1049.94,1213.11 1050.53,1215.41 1051.12,1215.37 1051.7,1213.95 1052.29,1212.79 1052.88,1212.99 1053.46,1213.24 1054.05,1214.61 1054.64,1214.39 1055.22,1211.92 1055.81,1211.94 1056.39,1212.24 1056.98,1214.81 1057.57,1212.31 1058.15,1214.7 1058.74,1212.38 1059.33,1212.44 1059.91,1211.48 1060.5,1212.8 1061.09,1214.09 1061.67,1213.06 1062.26,1213.01 1062.85,1211.68 1063.43,1213.12 1064.02,1215.74 1064.6,1215.59 1065.19,1216.96 1065.78,1216.7 1066.36,1217.8 1066.95,1216.31 1067.54,1218.51 1068.12,1216.59 1068.71,1216.37 1069.3,1216.44 1069.88,1217.81 1070.47,1216.36 1071.06,1216.59 1071.64,1215.26 1072.23,1215.11 1072.81,1216.19 1073.4,1219.63 1073.99,1218.11 1074.57,1217.83 1075.16,1216.68 1075.75,1216.7 1076.33,1216.15 1076.92,1216.02 1077.51,1216.15 1078.09,1217.02 1078.68,1215.9 1079.26,1215.93 1079.85,1215.74 1080.44,1216.8 1081.02,1215.27 1081.61,1212.54 1082.2,1212.48 1082.78,1214.84 1083.37,1212.36 1083.96,1213.64 1084.54,1211.39 1085.13,1210.57 1085.72,1210.47 1086.3,1211.85 1086.89,1210.54 1087.47,1212.04 1088.06,1213.25 1088.65,1214.75 1089.23,1212.16 1089.82,1213.5 1090.41,1214.75 1090.99,1213.32 1091.58,1213.42 1092.17,1215.83 1092.75,1215.62 1093.34,1214.38 1093.93,1215.5 1094.51,1215.46 1095.1,1215.46 1095.68,1216.56 1096.27,1213.91 1096.86,1212.78 1097.44,1212.9 1098.03,1215.44 1098.62,1218.97 1099.2,1222.11 1099.79,1221.57 1100.38,1220.03 1100.96,1218.45 1101.55,1219.06 1102.14,1218.66 1102.72,1218.21 1103.31,1216.71 1103.89,1217.89 1104.48,1216.32 1105.07,1213.96 1105.65,1215.09 1106.24,1217.57 1106.83,1216.01 1107.41,1214.71 1108,1213.31 1108.59,1209.61 1109.17,1208.75 1109.76,1210.33 1110.34,1210.66 1110.93,1209.39 1111.52,1213.14 1112.1,1212 1112.69,1210.63 1113.28,1212.22 1113.86,1213.34 1114.45,1214.17 1115.04,1213.9 1115.62,1212.76 1116.21,1213.07 1116.8,1215.52 1117.38,1214.26 1117.97,1213.32 1118.55,1214.45 1119.14,1217.15 1119.73,1215.69 1120.31,1214.43 1120.9,1216.58 1121.49,1218.74 1122.07,1221.84 1122.66,1221.58 1123.25,1221.08 1123.83,1219.71 1124.42,1220.3 1125.01,1217.42 1125.59,1217.49 1126.18,1217.31 1126.76,1217.28 1127.35,1219.73 1127.94,1216.94 1128.52,1217.94 1129.11,1219.03 1129.7,1218.8 1130.28,1218.84 1130.87,1218.42 1131.46,1219.29 1132.04,1216.47 1132.63,1215.2 1133.21,1213.82 1133.8,1214.19 1134.39,1216.5 1134.97,1217.57 1135.56,1214.92 1136.15,1212.53 1136.73,1208.94 1137.32,1211.5 1137.91,1213.85 1138.49,1210.37 1139.08,1210.45 1139.67,1211.89 1140.25,1210.6 1140.84,1210.46 1141.42,1210.55 1142.01,1208.2 1142.6,1208.48 1143.18,1208.56 1143.77,1212.51 1144.36,1211.39 1144.94,1212.86 1145.53,1213.23 1146.12,1210.61 1146.7,1210.67 1147.29,1209.59 1147.88,1208.55 1148.46,1209.09 1149.05,1209.68 1149.63,1209.81 1150.22,1210.46 1150.81,1210.63 1151.39,1213.57 1151.98,1209.94 1152.57,1212.58 1153.15,1210.24 1153.74,1210.53 1154.33,1209.51 1154.91,1208.7 1155.5,1211.5 1156.09,1211.58 1156.67,1210.67 1157.26,1213.19 1157.84,1212.05 1158.43,1210.91 1159.02,1212.11 1159.6,1212.15 1160.19,1211.11 1160.78,1212.55 1161.36,1212.72 1161.95,1214.1 1162.54,1213.1 1163.12,1214.3 1163.71,1214.28 1164.29,1213.02 1164.88,1214.53 1165.47,1212.08 1166.05,1211.2 1166.64,1212.45 1167.23,1210.3 1167.81,1209.3 1168.4,1208.4 1168.99,1208.98 1169.57,1209.42 1170.16,1209.67 1170.75,1208.6 1171.33,1207.82 1171.92,1209.32 1172.5,1207.1 1173.09,1208.65 1173.68,1210.23 1174.26,1211.91 1174.85,1211.85 1175.44,1210.58 1176.02,1212.23 1176.61,1212.13 1177.2,1211.07 1177.78,1211.05 1178.37,1212.59 1178.96,1214.81 1179.54,1217.13 1180.13,1216.1 1180.71,1219.7 1181.3,1221.69 1181.89,1222.52 1182.47,1222.48 1183.06,1219.45 1183.65,1219.03 1184.23,1217.51 1184.82,1219.03 1185.41,1220.08 1185.99,1217.4 1186.58,1217.25 1187.16,1217.09 1187.75,1218.25 1188.34,1219.37 1188.92,1218.98 1189.51,1218.67 1190.1,1218.32 1190.68,1218.33 1191.27,1219.31 1191.86,1217.4 1192.44,1216.2 1193.03,1215.96 1193.62,1215.89 1194.2,1216.98 1194.79,1217 1195.37,1215.56 1195.96,1217.93 1196.55,1216.75 1197.13,1218.09 1197.72,1220.25 1198.31,1217.36 1198.89,1217.51 1199.48,1215.03 1200.07,1216.3 1200.65,1214.81 1201.24,1214.85 1201.83,1216.92 1202.41,1217.75 1203,1217.6 1203.58,1218.37 1204.17,1216.84 1204.76,1217.9 1205.34,1218.77 1205.93,1219.76 1206.52,1217.95 1207.1,1217.76 1207.69,1219.78 1208.28,1219.5 1208.86,1218.08 1209.45,1216.67 1210.03,1213.87 1210.62,1211.61 1211.21,1212.85 1211.79,1215.25 1212.38,1216.37 1212.97,1216.35 1213.55,1215.47 1214.14,1217.81 1214.73,1217.68 1215.31,1216.42 1215.9,1217.35 1216.49,1215.92 1217.07,1217.18 1217.66,1213.42 1218.24,1212.21 1218.83,1213.26 1219.42,1213.27 1220,1212.98 1220.59,1213.16 1221.18,1211.99 1221.76,1214.27 1222.35,1215.47 1222.94,1216.25 1223.52,1214.8 1224.11,1214.65 1224.7,1213.33 1225.28,1207.33 1225.87,1206.25 1226.45,1205.49 1227.04,1205.96 1227.63,1205.23 1228.21,1204.49 1228.8,1206.3 1229.39,1205.46 1229.97,1206.07 1230.56,1205.44 1231.15,1205.95 1231.73,1207.62 1232.32,1207.92 1232.91,1209.49 1233.49,1205.98 1234.08,1207.8 1234.66,1208.05 1235.25,1210.84 1235.84,1207.34 1236.42,1207.78 1237.01,1208.24 1237.6,1208.38 1238.18,1210.97 1238.77,1214.8 1239.36,1215.74 1239.94,1216.84 1240.53,1214.53 1241.11,1213.14 1241.7,1211.86 1242.29,1212.1 1242.87,1210.91 1243.46,1212.23 1244.05,1212.39 1244.63,1209.29 1245.22,1208.35 1245.81,1209.9 1246.39,1211.03 1246.98,1212.51 1247.57,1212.57 1248.15,1215.14 1248.74,1217.51 1249.32,1216.18 1249.91,1216.01 1250.5,1214.7 1251.08,1213.61 1251.67,1214.68 1252.26,1213.42 1252.84,1212.05 1253.43,1214.32 1254.02,1213.09 1254.6,1209.32 1255.19,1212.1 1255.78,1213.53 1256.36,1214.64 1256.95,1215.79 1257.53,1214.57 1258.12,1214.8 1258.71,1216.07 1259.29,1215.74 1259.88,1213.39 1260.47,1215.65 1261.05,1215.39 1261.64,1216.35 1262.23,1216.19 1262.81,1217.49 1263.4,1215.69 1263.98,1217.65 1264.57,1215.01 1265.16,1211.37 1265.74,1212.75 1266.33,1214.1 1266.92,1213.06 1267.5,1213.48 1268.09,1213.62 1268.68,1211.24 1269.26,1211.49 1269.85,1211.45 1270.44,1211.56 1271.02,1211.63 1271.61,1210.51 1272.19,1209.38 1272.78,1207.11 1273.37,1208.63 1273.95,1207.83 1274.54,1209.13 1275.13,1209.36 1275.71,1209.58 1276.3,1210.96 1276.89,1211.04 1277.47,1210.18 1278.06,1210.47 1278.65,1210.82 1279.23,1208.44 1279.82,1208.76 1280.4,1210.14 1280.99,1210.32 1281.58,1210.52 1282.16,1211.95 1282.75,1210.89 1283.34,1210.72 1283.92,1210.75 1284.51,1210.96 1285.1,1212.25 1285.68,1210.81 1286.27,1209.4 1286.86,1212.09 1287.44,1215.78 1288.03,1215.73 1288.61,1214.67 1289.2,1214.66 1289.79,1213.52 1290.37,1216.27 1290.96,1217.55 1291.55,1217.29 1292.13,1214.64 1292.72,1215.68 1293.31,1215.48 1293.89,1217.76 1294.48,1217.32 1295.06,1217.2 1295.65,1218.09 1296.24,1215.71 1296.82,1215.48 1297.41,1217.7 1298,1219.91 1298.58,1217.25 1299.17,1218.31 1299.76,1220.44 1300.34,1222.64 1300.93,1219.54 1301.52,1216.71 1302.1,1216.63 1302.69,1217.64 1303.27,1218.54 1303.86,1215.69 1304.45,1216.63 1305.03,1216.56 1305.62,1216.38 1306.21,1215.27 1306.79,1215.26 1307.38,1212.92 1307.97,1211.9 1308.55,1209.72 1309.14,1211.07 1309.73,1212.47 1310.31,1212.6 1310.9,1213.56 1311.48,1213.54 1312.07,1214.5 1312.66,1215.75 1313.24,1215.75 1313.83,1214.39 1314.42,1215.62 1315,1216.41 1315.59,1216.07 1316.18,1217.33 1316.76,1214.67 1317.35,1214.53 1317.93,1215.73 1318.52,1212.95 1319.11,1214.23 1319.69,1214.18 1320.28,1211.62 1320.87,1209.38 1321.45,1208.31 1322.04,1211 1322.63,1211.26 1323.21,1212.37 1323.8,1211.44 1324.39,1210.36 1324.97,1210.66 1325.56,1209.69 1326.14,1210.15 1326.73,1211.75 1327.32,1210.63 1327.9,1210.68 1328.49,1212.01 1329.08,1213.39 1329.66,1215.51 1330.25,1212.73 1330.84,1211.46 1331.42,1211.67 1332.01,1210.64 1332.6,1213.14 1333.18,1214.41 1333.77,1216.72 1334.35,1215.27 1334.94,1219.92 1335.53,1222.2 1336.11,1221.64 1336.7,1219.76 1337.29,1219.22 1337.87,1218.93 1338.46,1218.72 1339.05,1219.27 1339.63,1221.35 1340.22,1219.78 1340.8,1221.8 1341.39,1220.18 1341.98,1219.77 1342.56,1219.28 1343.15,1220.13 1343.74,1219.83 1344.32,1219.62 1344.91,1219.58 1345.5,1217.96 1346.08,1219.98 1346.67,1218.2 1347.26,1217.93 1347.84,1213.61 1348.43,1214.69 1349.01,1214.36 1349.6,1215.6 1350.19,1213.25 1350.77,1212.44 1351.36,1212.42 1351.95,1211.27 1352.53,1212.44 1353.12,1211.28 1353.71,1210.29 1354.29,1209.07 1354.88,1211.62 1355.47,1210.45 1356.05,1211.87 1356.64,1212.05 1357.22,1214.6 1357.81,1217.13 1358.4,1215.79 1358.98,1215.76 1359.57,1215.64 1360.16,1216.74 1360.74,1217.7 1361.33,1216.34 1361.92,1214.92 1362.5,1217.3 1363.09,1212 1363.68,1213.38 1364.26,1214.75 1364.85,1213.63 1365.43,1211.05 1366.02,1211.17 1366.61,1211.47 1367.19,1208.77 1367.78,1210.01 1368.37,1210.16 1368.95,1208.02 1369.54,1208.14 1370.13,1207.01 1370.71,1208.58 1371.3,1207.33 1371.88,1210.55 1372.47,1210.86 1373.06,1211.01 1373.64,1211.33 1374.23,1211.24 1374.82,1210.3 1375.4,1209.23 1375.99,1208.24 1376.58,1207.61 1377.16,1206.7 1377.75,1210.83 1378.34,1213.25 1378.92,1214.76 1379.51,1213.47 1380.09,1212.37 1380.68,1212.49 1381.27,1213.72 1381.85,1216.19 1382.44,1217.4 1383.03,1215.92 1383.61,1214.92 1384.2,1214.04 1384.79,1215.22 1385.37,1212.72 1385.96,1211.63 1386.55,1211.55 1387.13,1212.67 1387.72,1214.05 1388.3,1211.47 1388.89,1212.83 1389.48,1212.62 1390.06,1210.13 1390.65,1212.69 1391.24,1211.32 1391.82,1213.78 1392.41,1211.43 1393,1210.16 1393.58,1212.75 1394.17,1215.36 1394.75,1215.05 1395.34,1214.95 1395.93,1214.86 1396.51,1214.96 1397.1,1215.23 1397.69,1215.13 1398.27,1215.11 1398.86,1213.76 1399.45,1211.36 1400.03,1212.74 1400.62,1212.63 1401.21,1211.72 1401.79,1214.11 1402.38,1214.96 1402.96,1212.61 1403.55,1212.31 1404.14,1212.4 1404.72,1212.55 1405.31,1213.69 1405.9,1213.86 1406.48,1211.48 1407.07,1210.2 1407.66,1209.01 1408.24,1209.18 1408.83,1208.45 1409.42,1208.77 1410,1209.18 1410.59,1210.49 1411.17,1211.8 1411.76,1213.08 1412.35,1214.18 1412.93,1214.27 1413.52,1212.89 1414.11,1212.84 1414.69,1215.18 1415.28,1211.38 1415.87,1212.49 1416.45,1212.36 1417.04,1213.73 1417.63,1214.81 1418.21,1213.72 1418.8,1215.1 1419.38,1216.36 1419.97,1218.69 1420.56,1218.24 1421.14,1216.77 1421.73,1217.78 1422.32,1217.75 1422.9,1217.57 1423.49,1218.38 1424.08,1218.29 1424.66,1216.82 1425.25,1212.96 1425.83,1213.02 1426.42,1213.01 1427.01,1212.98 1427.59,1214.28 1428.18,1215.52 1428.77,1215.39 1429.35,1213.88 1429.94,1213.72 1430.53,1213.41 1431.11,1214.52 1431.7,1215.68 1432.29,1216.93 1432.87,1216.81 1433.46,1215.29 1434.04,1214.92 1434.63,1213.62 1435.22,1211.14 1435.8,1208.58 1436.39,1207.59 1436.98,1210.16 1437.56,1211.6 1438.15,1214.21 1438.74,1214.14 1439.32,1211.72 1439.91,1211.88 1440.5,1211.82 1441.08,1213.01 1441.67,1212.9 1442.25,1212.87 1442.84,1214.15 1443.43,1217.55 1444.01,1219.72 1444.6,1223.05 1445.19,1222.33 1445.77,1222.85 1446.36,1222.27 1446.95,1222.91 1447.53,1222.53 1448.12,1222.9 1448.7,1221.09 1449.29,1219.62 1449.88,1217.92 1450.46,1217.5 1451.05,1216.12 1451.64,1217.33 1452.22,1214.77 1452.81,1216.14 1453.4,1213.56 1453.98,1214.77 1454.57,1215.14 1455.16,1213.97 1455.74,1213.97 1456.33,1215.33 1456.91,1214.19 1457.5,1213.07 1458.09,1212.98 1458.67,1212.93 1459.26,1212.84 1459.85,1210.36 1460.43,1210.54 1461.02,1211.97 1461.61,1212.26 1462.19,1213.5 1462.78,1212.43 1463.37,1213.75 1463.95,1214.04 1464.54,1215.09 1465.12,1212.66 1465.71,1215.08 1466.3,1212.65 1466.88,1213.93 1467.47,1216.42 1468.06,1219.91 1468.64,1220.81 1469.23,1220.46 1469.82,1220.3 1470.4,1218.76 1470.99,1219.82 1471.57,1219.42 1472.16,1217.66 1472.75,1219.73 1473.33,1217.98 1473.92,1218.73 1474.51,1218.59 1475.09,1219.61 1475.68,1216.8 1476.27,1215.47 1476.85,1214.12 1477.44,1214.34 1478.03,1215.4 1478.61,1217.71 1479.2,1217.46 1479.78,1215.89 1480.37,1215.91 1480.96,1211.91 1481.54,1210.61 1482.13,1214.37 1482.72,1215.53 1483.3,1216.91 1483.89,1216.45 1484.48,1218.77 1485.06,1217.57 1485.65,1216.53 1486.24,1216.56 1486.82,1215.09 1487.41,1212.3 1487.99,1213.83 1488.58,1213.97 1489.17,1215.21 1489.75,1212.76 1490.34,1215.22 1490.93,1212.65 1491.51,1215.3 1492.1,1214 1492.69,1212.78 1493.27,1215.13 1493.86,1212.84 1494.45,1212.9 1495.03,1211.79 1495.62,1212 1496.2,1212.23 1496.79,1211.18 1497.38,1211.26 1497.96,1213.64 1498.55,1212.49 1499.14,1209.8 1499.72,1208.74 1500.31,1213.85 1500.9,1213.81 1501.48,1216.33 1502.07,1217.52 1502.65,1216.12 1503.24,1216.15 1503.83,1217.11 1504.41,1217.17 1505,1217.05 1505.59,1216.82 1506.17,1215.39 1506.76,1215.32 1507.35,1214.17 1507.93,1210.39 1508.52,1209.37 1509.11,1204.56 1509.69,1203.72 1510.28,1202.93 1510.86,1204.82 1511.45,1206.69 1512.04,1204.74 1512.62,1204.14 1513.21,1202.22 1513.8,1205.5 1514.38,1204.99 1514.97,1205.57 1515.56,1206.06 1516.14,1205.3 1516.73,1205.87 1517.32,1207.48 1517.9,1206.45 1518.49,1209.22 1519.07,1209.48 1519.66,1212.03 1520.25,1211.02 1520.83,1211.1 1521.42,1212.6 1522.01,1211.61 1522.59,1215.25 1523.18,1215.11 1523.77,1215.45 1524.35,1215.51 1524.94,1215.41 1525.52,1215.45 1526.11,1215.38 1526.7,1218.89 1527.28,1219.76 1527.87,1220.81 1528.46,1220.63 1529.04,1221.14 1529.63,1217.08 1530.22,1219.31 1530.8,1220.4 1531.39,1218.92 1531.98,1217.57 1532.56,1217.08 1533.15,1215.58 1533.73,1217.86 1534.32,1218.79 1534.91,1218.68 1535.49,1217.05 1536.08,1218 1536.67,1220.13 1537.25,1217.25 1537.84,1215.94 1538.43,1216.1 1539.01,1214.77 1539.6,1214.71 1540.19,1213.59 1540.77,1214.88 1541.36,1215 1541.94,1215.82 1542.53,1217.18 1543.12,1215.61 1543.7,1216.56 1544.29,1222.46 1544.88,1222.15 1545.46,1220.44 1546.05,1218.88 1546.64,1220.88 1547.22,1219.42 1547.81,1219.36 1548.4,1217.66 1548.98,1217.27 1549.57,1215.77 1550.15,1213.4 1550.74,1211.06 1551.33,1209.94 1551.91,1209.9 1552.5,1210.31 1553.09,1211.56 1553.67,1213.03 1554.26,1214.04 1554.85,1215.28 1555.43,1215.33 1556.02,1215.21 1556.6,1213.98 1557.19,1214.98 1557.78,1216.19 1558.36,1214.88 1558.95,1214.91 1559.54,1214.06 1560.12,1214.08 1560.71,1212.68 1561.3,1210.43 1561.88,1208.42 1562.47,1204.09 1563.06,1204.57 1563.64,1205.16 1564.23,1209.19 1564.81,1209.44 1565.4,1209.96 1565.99,1210.08 1566.57,1209.9 1567.16,1209.97 1567.75,1209.98 1568.33,1206.34 1568.92,1206.62 1569.51,1205.72 1570.09,1206.01 1570.68,1207.76 1571.27,1207.01 1571.85,1209.89 1572.44,1210.25 1573.02,1210.42 1573.61,1209.56 1574.2,1210.99 1574.78,1209.07 1575.37,1207.98 1575.96,1209.37 1576.54,1210.76 1577.13,1210.95 1577.72,1212.61 1578.3,1211.61 1578.89,1212.88 1579.47,1211.66 1580.06,1210.49 1580.65,1210.76 1581.23,1209.6 1581.82,1208.73 1582.41,1209.1 1582.99,1211.81 1583.58,1213.13 1584.17,1213.14 1584.75,1212.12 1585.34,1213.27 1585.93,1214.74 1586.51,1214.52 1587.1,1216.71 1587.68,1216.44 1588.27,1215.33 1588.86,1214.03 1589.44,1211.74 1590.03,1211.98 1590.62,1213.21 1591.2,1213.47 1591.79,1213.49 1592.38,1213.46 1592.96,1212.62 1593.55,1211.52 1594.14,1209.13 1594.72,1208.12 1595.31,1210.7 1595.89,1210.99 1596.48,1210.12 1597.07,1210.27 1597.65,1209.36 1598.24,1211.9 1598.83,1210.67 1599.41,1210.93 1600,1212.25 1600.59,1212.38 1601.17,1213.74 1601.76,1212.43 1602.34,1211.39 1602.93,1210.18 1603.52,1211.47 1604.1,1210.29 1604.69,1209.21 1605.28,1208.21 1605.86,1209.92 1606.45,1212.78 1607.04,1212.79 1607.62,1214.89 1608.21,1216.03 1608.8,1218.21 1609.38,1219.16 1609.97,1220.02 1610.55,1218.51 1611.14,1215.58 1611.73,1214.34 1612.31,1216.8 1612.9,1215.55 1613.49,1215.68 1614.07,1215.95 1614.66,1216.02 1615.25,1216.08 1615.83,1217.08 1616.42,1217.02 1617.01,1215.59 1617.59,1214.47 1618.18,1213.46 1618.76,1216.06 1619.35,1217.2 1619.94,1217.12 1620.52,1215.32 1621.11,1215.14 1621.7,1212.61 1622.28,1212.52 1622.87,1212.72 1623.46,1212.89 1624.04,1213.04 1624.63,1210.36 1625.22,1211.68 1625.8,1212.2 1626.39,1213.36 1626.97,1213.43 1627.56,1212.09 1628.15,1213.2 1628.73,1211.96 1629.32,1212.13 1629.91,1213.3 1630.49,1214.05 1631.08,1214.12 1631.67,1215.34 1632.25,1214.14 1632.84,1214.2 1633.42,1211.9 1634.01,1214.28 1634.6,1215.48 1635.18,1217.38 1635.77,1215.89 1636.36,1213.35 1636.94,1213.29 1637.53,1214.64 1638.12,1213.18 1638.7,1213.24 1639.29,1210.81 1639.88,1209.65 1640.46,1211.15 1641.05,1211.05 1641.63,1212.58 1642.22,1213.9 1642.81,1213.66 1643.39,1216.1 1643.98,1213.51 1644.57,1214.6 1645.15,1219.22 1645.74,1220.18 1646.33,1218.43 1646.91,1218.32 1647.5,1218.11 1648.09,1220.31 1648.67,1218.82 1649.26,1217.29 1649.84,1214.64 1650.43,1216.67 1651.02,1216.54 1651.6,1216.44 1652.19,1217.41 1652.78,1217.38 1653.36,1220.77 1653.95,1219.5 1654.54,1218.03 1655.12,1216.42 1655.71,1212.56 1656.29,1212.8 1656.88,1216.56 1657.47,1215.34 1658.05,1216.62 1658.64,1216.67 1659.23,1217.77 1659.81,1216.52 1660.4,1220.04 1660.99,1220.92 1661.57,1220.42 1662.16,1217.31 1662.75,1214.63 1663.33,1215.78 1663.92,1217.07 1664.5,1218.19 1665.09,1218.14 1665.68,1219.23 1666.26,1219.07 1666.85,1218.81 1667.44,1217.09 1668.02,1216.99 1668.61,1216.96 1669.2,1217.64 1669.78,1219.65 1670.37,1218.13 1670.96,1217.82 1671.54,1216.3 1672.13,1217.48 1672.71,1215.03 1673.3,1217.27 1673.89,1215.89 1674.47,1215.94 1675.06,1215.68 1675.65,1214.39 1676.23,1214.14 1676.82,1211.76 1677.41,1211.77 1677.99,1213.11 1678.58,1214.3 1679.17,1215.24 1679.75,1216.57 1680.34,1215.03 1680.92,1211.29 1681.51,1214.67 1682.1,1215.82 1682.68,1214.34 1683.27,1214.05 1683.86,1212.83 1684.44,1212.92 1685.03,1214.15 1685.62,1214.1 1686.2,1214.1 1686.79,1212.49 1687.37,1212.5 1687.96,1211.11 1688.55,1212.44 1689.13,1210.09 1689.72,1209.04 1690.31,1208.09 1690.89,1208.44 1691.48,1208.75 1692.07,1205.26 1692.65,1208.1 1693.24,1206.94 1693.83,1205.96 1694.41,1202.71 1695,1200.64 1695.58,1201.41 1696.17,1201.99 1696.76,1201.41 1697.34,1202 1697.93,1203.81 1698.52,1205.34 1699.1,1204.61 1699.69,1206.38 1700.28,1209.14 1700.86,1210.82 1701.45,1209.92 1702.04,1209.99 1702.62,1209.11 1703.21,1209.49 1703.79,1209.6 1704.38,1210.75 1704.97,1210.87 1705.55,1214.78 1706.14,1213.3 1706.73,1213.38 1707.31,1210.72 1707.9,1206 1708.49,1206.41 1709.07,1203.03 1709.66,1203.53 1710.24,1204.37 1710.83,1204.88 1711.42,1205.17 1712,1205.62 1712.59,1206 1713.18,1206.52 1713.76,1206.8 1714.35,1207.08 1714.94,1206.27 1715.52,1207.96 1716.11,1208.02 1716.7,1207.2 1717.28,1207.67 1717.87,1209.01 1718.45,1209.04 1719.04,1206.86 1719.63,1208.54 1720.21,1207.65 1720.8,1208.12 1721.39,1208.27 1721.97,1208.68 1722.56,1207.89 1723.15,1208.28 1723.73,1209.73 1724.32,1210.1 1724.91,1211.55 1725.49,1213.1 1726.08,1213.06 1726.66,1212.03 1727.25,1212.3 1727.84,1214.88 1728.42,1215.19 1729.01,1213.88 1729.6,1215.21 1730.18,1215.5 1730.77,1219.04 1731.36,1217.41 1731.94,1217.25 1732.53,1217.05 1733.11,1215.84 1733.7,1218.27 1734.29,1220.44 1734.87,1217.6 1735.46,1216.39 1736.05,1216.41 1736.63,1216.46 1737.22,1214.85 1737.81,1214.79 1738.39,1216.17 1738.98,1216.16 1739.57,1214.69 1740.15,1217.19 1740.74,1214.87 1741.32,1213.57 1741.91,1212.31 1742.5,1213.88 1743.08,1213.82 1743.67,1211.31 1744.26,1211.46 1744.84,1211.46 1745.43,1210.3 1746.02,1210.66 1746.6,1209.93 1747.19,1209.12 1747.78,1209.33 1748.36,1209.46 1748.95,1210.84 1749.53,1212.21 1750.12,1212.33 1750.71,1209.9 1751.29,1208.76 1751.88,1209.3 1752.47,1209.84 1753.05,1211.52 1753.64,1211.5 1754.23,1210.42 1754.81,1210.57 1755.4,1210.52 1755.99,1209.59 1756.57,1209.61 1757.16,1211.21 1757.74,1211.2 1758.33,1210.09 1758.92,1210.36 1759.5,1210.2 1760.09,1211.61 1760.68,1214.1 1761.26,1210.32 1761.85,1208.29 1762.44,1209.38 1763.02,1208.62 1763.61,1211.47 1764.19,1211.59 1764.78,1210.44 1765.37,1210.52 1765.95,1209.34 1766.54,1209.42 1767.13,1212.03 1767.71,1212.19 1768.3,1212.02 1768.89,1209.52 1769.47,1211.89 1770.06,1212.09 1770.65,1213.24 1771.23,1214.26 1771.82,1215.39 1772.4,1215.38 1772.99,1216.54 1773.58,1212.71 1774.16,1213.89 1774.75,1213.88 1775.34,1214.93 1775.92,1215.97 1776.51,1215.76 1777.1,1213.13 1777.68,1211.7 1778.27,1214.09 1778.86,1214.06 1779.44,1214.11 1780.03,1216.5 1780.61,1214.86 1781.2,1214.81 1781.79,1214.73 1782.37,1214.46 1782.96,1214.59 1783.55,1214.36 1784.13,1212.9 1784.72,1209.36 1785.31,1212.26 1785.89,1213.42 1786.48,1216.02 1787.06,1216.15 1787.65,1212.41 1788.24,1214.85 1788.82,1214.78 1789.41,1212.45 1790,1212.52 1790.58,1211.47 1791.17,1211.71 1791.76,1214.09 1792.34,1215.23 1792.93,1215.22 1793.52,1215.39 1794.1,1218.58 1794.69,1216.96 1795.27,1219.1 1795.86,1216.57 1796.45,1217.59 1797.03,1214.74 1797.62,1214.77 1798.21,1215.73 1798.79,1215.82 1799.38,1215.84 1799.97,1218.41 1800.55,1219.27 1801.14,1217.66 1801.73,1218.58 1802.31,1219.51 1802.9,1220.39 1803.48,1219.06 1804.07,1218.91 1804.66,1216.3 1805.24,1217.57 1805.83,1217.23 1806.42,1218.32 1807,1218.03 1807.59,1220.21 1808.18,1217.29 1808.76,1217.04 1809.35,1217.94 1809.94,1217.9 1810.52,1217.5 1811.11,1218.32 1811.69,1219.13 1812.28,1220.04 1812.87,1218.32 1813.45,1216.91 1814.04,1215.46 1814.63,1215.37 1815.21,1215.14 1815.8,1213.84 1816.39,1213.71 1816.97,1212.65 1817.56,1211.42 1818.14,1210.38 1818.73,1210.65 1819.32,1209.69 1819.9,1207.18 1820.49,1208.69 1821.08,1207.72 1821.66,1207.97 1822.25,1208.16 1822.84,1209.56 1823.42,1210.85 1824.01,1212.26 1824.6,1212.69 1825.18,1212.68 1825.77,1216.73 1826.35,1214.41 1826.94,1215.27 1827.53,1218.62 1828.11,1218.26 1828.7,1215.43 1829.29,1216.45 1829.87,1216.61 1830.46,1218.77 1831.05,1217.54 1831.63,1216.97 1832.22,1217.97 1832.81,1218.09 1833.39,1215.26 1833.98,1212.57 1834.56,1212.63 1835.15,1213.92 1835.74,1214.1 1836.32,1213.92 1836.91,1216.27 1837.5,1214.77 1838.08,1214.65 1838.67,1213.3 1839.26,1214.76 1839.84,1216.26 1840.43,1216 1841.01,1215.82 1841.6,1216.85 1842.19,1217.67 1842.77,1214.94 1843.36,1213.78 1843.95,1209.96 1844.53,1210.12 1845.12,1210.33 1845.71,1211.84 1846.29,1211.93 1846.88,1212.14 1847.47,1210.85 1848.05,1209.76 1848.64,1209.91 1849.22,1207.61 1849.81,1211.4 1850.4,1209.07 1850.98,1209.25 1851.57,1208.19 1852.16,1208.25 1852.74,1212.3 1853.33,1211.23 1853.92,1210.15 1854.5,1210.31 1855.09,1209.45 1855.68,1214.64 1856.26,1214.61 1856.85,1215.64 1857.43,1212.93 1858.02,1211.85 1858.61,1210.63 1859.19,1211.82 1859.78,1212.2 1860.37,1212.49 1860.95,1212.48 1861.54,1212.85 1862.13,1212.89 1862.71,1212.95 1863.3,1214.2 1863.88,1212.99 1864.47,1214.34 1865.06,1213.22 1865.64,1213.23 1866.23,1214.45 1866.82,1210.91 1867.4,1207.61 1867.99,1209.19 1868.58,1209.44 1869.16,1209.89 1869.75,1210.98 1870.34,1211.14 1870.92,1211.21 1871.51,1211.11 1872.09,1213.49 1872.68,1212.3 1873.27,1212.47 1873.85,1213.86 1874.44,1215.21 1875.03,1212.79 1875.61,1215.09 1876.2,1214.93 1876.79,1214.96 1877.37,1215 1877.96,1214.86 1878.55,1216.01 1879.13,1218 1879.72,1217.87 1880.3,1217.76 1880.89,1216.15 1881.48,1216.01 1882.06,1212.3 1882.65,1212.33 1883.24,1213.43 1883.82,1213.84 1884.41,1213.51 1885,1216.11 1885.58,1214.81 1886.17,1217.18 1886.76,1216.82 1887.34,1217.92 1887.93,1217.92 1888.51,1216.43 1889.1,1215.38 1889.69,1215.2 1890.27,1215.04 1890.86,1217.4 1891.45,1218.46 1892.03,1219.43 1892.62,1219.12 1893.21,1220.04 1893.79,1219.73 1894.38,1218.22 1894.96,1217.88 1895.55,1217.58 1896.14,1217.37 1896.72,1218.56 1897.31,1218.29 1897.9,1219.05 1898.48,1218.55 1899.07,1219.44 1899.66,1219.07 1900.24,1216.08 1900.83,1214.73 1901.42,1214.8 1902,1215.95 1902.59,1213.32 1903.17,1212.07 1903.76,1213.36 1904.35,1213.15 1904.93,1213.03 1905.52,1211.98 1906.11,1210.65 1906.69,1208.3 1907.28,1210 1907.87,1208.88 1908.45,1209.08 1909.04,1209.6 1909.63,1212.55 1910.21,1213.73 1910.8,1212.49 1911.38,1211.36 1911.97,1211.91 1912.56,1210.86 1913.14,1209.8 1913.73,1207.61 1914.32,1207.75 1914.9,1207.9 1915.49,1207.98 1916.08,1209.39 1916.66,1211.95 1917.25,1213.27 1917.83,1216.89 1918.42,1217.91 1919.01,1216.41 1919.59,1217.67 1920.18,1215.01 1920.77,1214.9 1921.35,1213.61 1921.94,1213.59 1922.53,1213.68 1923.11,1214.64 1923.7,1213.08 1924.29,1213.08 1924.87,1213.36 1925.46,1214.48 1926.04,1214.34 1926.63,1214.35 1927.22,1214.3 1927.8,1216.69 1928.39,1217.56 1928.98,1214.98 1929.56,1215.19 1930.15,1216.24 1930.74,1217.64 1931.32,1217.57 1931.91,1218.6 1932.5,1219.31 1933.08,1221.44 1933.67,1222.57 1934.25,1220.83 1934.84,1221.87 1935.43,1220.14 1936.01,1220.08 1936.6,1219.83 1937.19,1217.29 1937.77,1218.39 1938.36,1218.06 1938.95,1215.62 1939.53,1214.07 1940.12,1212.94 1940.71,1212.97 1941.29,1212.71 1941.88,1212.87 1942.46,1212.79 1943.05,1215.47 1943.64,1215.37 1944.22,1211.71 1944.81,1213.13 1945.4,1213.02 1945.98,1211.74 1946.57,1211.85 1947.16,1210.85 1947.74,1212.17 1948.33,1210.96 1948.91,1211.24 1949.5,1209.94 1950.09,1212.53 1950.67,1212.67 1951.26,1211.57 1951.85,1212.84 1952.43,1213.08 1953.02,1213.4 1953.61,1213.45 1954.19,1211.01 1954.78,1208.9 1955.37,1212.84 1955.95,1213.97 1956.54,1211.31 1957.12,1213.64 1957.71,1212.28 1958.3,1211.11 1958.88,1214.9 1959.47,1216.18 1960.06,1215.06 1960.64,1213.81 1961.23,1214.79 1961.82,1213.42 1962.4,1212.28 1962.99,1212.08 1963.58,1213.31 1964.16,1211.08 1964.75,1211.17 1965.33,1211.33 1965.92,1210.32 1966.51,1208.09 1967.09,1208.28 1967.68,1207.42 1968.27,1205.18 1968.85,1205.84 1969.44,1207.16 1970.03,1205.98 1970.61,1203.88 1971.2,1206.68 1971.78,1205.71 1972.37,1205.9 1972.96,1207.25 1973.54,1208.86 1974.13,1209.3 1974.72,1210.72 1975.3,1210.94 1975.89,1211.18 1976.48,1210.19 1977.06,1210.45 1977.65,1211.82 1978.24,1212.99 1978.82,1214.23 1979.41,1213.95 1979.99,1215.01 1980.58,1214.72 1981.17,1214.66 1981.75,1214.63 1982.34,1217.21 1982.93,1217.15 1983.51,1218.15 1984.1,1217.81 1984.69,1215.22 1985.27,1216.11 1985.86,1219.66 1986.45,1218.36 1987.03,1219.3 1987.62,1216.53 1988.2,1217.48 1988.79,1218.59 1989.38,1215.95 1989.96,1214.42 1990.55,1213.36 1991.14,1214.78 1991.72,1215.01 1992.31,1213.66 1992.9,1217.43 1993.48,1218.56 1994.07,1217.01 1994.65,1217.97 1995.24,1216.61 1995.83,1217.81 1996.41,1217.2 1997,1219.14 1997.59,1221.3 1998.17,1221.08 1998.76,1218.41 1999.35,1219.37 1999.93,1218.93 2000.52,1219.64 2001.11,1221.54 2001.69,1218.65 2002.28,1218.2 2002.86,1216.88 2003.45,1216.9 2004.04,1219.25 2004.62,1217.72 2005.21,1218.88 2005.8,1217.31 2006.38,1213.69 2006.97,1212.57 2007.56,1212.45 2008.14,1213.69 2008.73,1212.56 2009.32,1211.52 2009.9,1210.41 2010.49,1210.19 2011.07,1211.55 2011.66,1210.39 2012.25,1210.57 2012.83,1210.69 2013.42,1210.94 2014.01,1213.69 2014.59,1213.63 2015.18,1213.45 2015.77,1213.53 2016.35,1212.43 2016.94,1211.4 2017.53,1211.33 2018.11,1212.55 2018.7,1213.73 2019.28,1213.91 2019.87,1211.51 2020.46,1208.01 2021.04,1210.92 2021.63,1209.54 2022.22,1208.89 2022.8,1205.7 2023.39,1209.55 2023.98,1212.23 2024.56,1211.25 2025.15,1207.91 2025.73,1208.33 2026.32,1207.51 2026.91,1206.45 2027.49,1208.09 2028.08,1209.49 2028.67,1209.71 2029.25,1211.31 2029.84,1214.07 2030.43,1214.13 2031.01,1214.36 2031.6,1214.5 2032.19,1214.41 2032.77,1211.84 2033.36,1212.07 2033.94,1212 2034.53,1214.45 2035.12,1213.07 2035.7,1215.46 2036.29,1215.2 2036.88,1213.96 2037.46,1213.97 2038.05,1212.72 2038.64,1213.96 2039.22,1213.92 2039.81,1212.73 2040.4,1212.99 2040.98,1212.94 2041.57,1211.75 2042.15,1212.05 2042.74,1211.98 2043.33,1210.91 2043.91,1212.1 2044.5,1211.04 2045.09,1211.41 2045.67,1212.79 2046.26,1211.22 2046.85,1212.35 2047.43,1213.71 2048.02,1213.73 2048.6,1212.63 2049.19,1213.77 2049.78,1212.51 2050.36,1213.78 2050.95,1216.22 2051.54,1215.96 2052.12,1215.69 2052.71,1217.95 2053.3,1217.73 2053.88,1216.24 2054.47,1213.58 2055.06,1213.55 2055.64,1209.94 2056.23,1216.03 2056.81,1218.5 2057.4,1218.16 2057.99,1217.71 2058.57,1218.59 2059.16,1217.09 2059.75,1216.97 2060.33,1215.85 2060.92,1215.63 2061.51,1217.94 2062.09,1218.02 2062.68,1218 2063.27,1217.39 2063.85,1215.62 2064.44,1217.01 2065.02,1218.07 2065.61,1220.25 2066.2,1217.53 2066.78,1215.95 2067.37,1211.99 2067.96,1213.4 2068.54,1213.23 2069.13,1210.77 2069.72,1211.13 2070.3,1209.91 2070.89,1211.28 2071.48,1212.82 2072.06,1210.3 2072.65,1209.14 2073.23,1210.68 2073.82,1209.52 2074.41,1207.27 2074.99,1210.2 2075.58,1206.84 2076.17,1210.71 2076.75,1209.56 2077.34,1208.7 2077.93,1207.66 2078.51,1207.93 2079.1,1206.06 2079.68,1205.23 2080.27,1205.7 2080.86,1208.58 2081.44,1210.06 2082.03,1207.71 2082.62,1209.23 2083.2,1210.9 2083.79,1213.62 2084.38,1212.08 2084.96,1212.26 2085.55,1213.51 2086.14,1214.56 2086.72,1213.22 2087.31,1210.98 2087.89,1209.83 2088.48,1212.37 2089.07,1212.56 2089.65,1211.47 2090.24,1212.94 2090.83,1217.81 2091.41,1219.84 2092,1219.47 2092.59,1220.08 2093.17,1224.35 2093.76,1224.99 2094.35,1225.57 2094.93,1222.35 2095.52,1225.45 2096.1,1222.75 2096.69,1224.6 2097.28,1223.93 2097.86,1223.34 2098.45,1223.95 2099.04,1223.29 2099.62,1221.49 2100.21,1221.12 2100.8,1220.91 2101.38,1219.33 2101.97,1215.21 2102.55,1213.82 2103.14,1213.52 2103.73,1212.38 2104.31,1211.33 2104.9,1209.98 2105.49,1210.16 2106.07,1212.82 2106.66,1216.12 2107.25,1219.47 2107.83,1223.05 2108.42,1224.9 2109.01,1224.15 2109.59,1222.26 2110.18,1221.72 2110.76,1219.94 2111.35,1219.78 2111.94,1220.66 2112.52,1224.05 2113.11,1222.17 2113.7,1220.49 2114.28,1220.1 2114.87,1221.02 2115.46,1218.01 2116.04,1217.74 2116.63,1218.71 2117.22,1217.25 2117.8,1215.65 2118.39,1215.47 2118.97,1215.15 2119.56,1215.09 2120.15,1216.32 2120.73,1213.26 2121.32,1214.48 2121.91,1217.94 2122.49,1217.69 2123.08,1217.74 2123.67,1218.76 2124.25,1216.22 2124.84,1215.94 2125.42,1217.11 2126.01,1217.98 2126.6,1212.74 2127.18,1212.69 2127.77,1212.79 2128.36,1213.85 2128.94,1214.93 2129.53,1214.72 2130.12,1217.17 2130.7,1214.7 2131.29,1213.23 2131.88,1213.12 2132.46,1214.14 2133.05,1216.69 2133.63,1216.44 2134.22,1218.74 2134.81,1217.16 2135.39,1212.29 2135.98,1214.81 2136.57,1213.52 2137.15,1215.89 2137.74,1217.15 2138.33,1217.09 2138.91,1215.68 2139.5,1215.51 2140.09,1214.15 2140.67,1213.9 2141.26,1212.38 2141.84,1211.27 2142.43,1208.9 2143.02,1207.83 2143.6,1208.09 2144.19,1208.47 2144.78,1208.7 2145.36,1205.44 2145.95,1204.41 2146.54,1203.41 2147.12,1202.67 2147.71,1204.29 2148.3,1202.21 2148.88,1200.04 2149.47,1200.62 2150.05,1200.03 2150.64,1201.94 2151.23,1203.8 2151.81,1204.56 2152.4,1206.44 2152.99,1206.81 2153.57,1207.09 2154.16,1207.49 2154.75,1210.15 2155.33,1210.37 2155.92,1206.89 2156.5,1209.79 2157.09,1210.31 2157.68,1210.51 2158.26,1210.57 \"/>\n<path clip-path=\"url(#clip822)\" d=\"M986.025 1214.06 L986.612 1214.06 L987.198 1214.06 L987.785 1214.06 L988.371 1214.06 L988.957 1214.06 L989.544 1214.06 L990.13 1214.06 L990.717 1214.06 L991.303 1214.06 L991.889 1214.06 L992.476 1214.06 L993.062 1214.06 L993.649 1214.06 L994.235 1214.06 L994.822 1214.06 L995.408 1214.06 L995.994 1214.06 L996.581 1214.06 L997.167 1214.06 L997.754 1214.06 L998.34 1214.06 L998.926 1214.06 L999.513 1214.06 L1000.1 1214.06 L1000.69 1214.06 L1001.27 1214.06 L1001.86 1214.06 L1002.44 1214.06 L1003.03 1214.06 L1003.62 1214.06 L1004.2 1214.06 L1004.79 1214.06 L1005.38 1214.06 L1005.96 1214.06 L1006.55 1214.06 L1007.14 1214.06 L1007.72 1214.06 L1008.31 1214.06 L1008.9 1214.06 L1009.48 1214.06 L1010.07 1214.06 L1010.65 1214.06 L1011.24 1214.06 L1011.83 1214.06 L1012.41 1214.06 L1013 1214.06 L1013.59 1214.06 L1014.17 1214.06 L1014.76 1214.06 L1015.35 1214.06 L1015.93 1214.06 L1016.52 1214.06 L1017.11 1214.06 L1017.69 1214.06 L1018.28 1214.06 L1018.86 1214.06 L1019.45 1214.06 L1020.04 1214.06 L1020.62 1214.06 L1021.21 1214.06 L1021.8 1214.06 L1022.38 1214.06 L1022.97 1214.06 L1023.56 1214.06 L1024.14 1214.06 L1024.73 1214.06 L1025.32 1214.06 L1025.9 1214.06 L1026.49 1214.06 L1027.07 1214.06 L1027.66 1214.06 L1028.25 1214.06 L1028.83 1214.06 L1029.42 1214.06 L1030.01 1214.06 L1030.59 1214.06 L1031.18 1214.06 L1031.77 1214.06 L1032.35 1214.06 L1032.94 1214.06 L1033.52 1214.06 L1034.11 1214.06 L1034.7 1214.06 L1035.28 1214.06 L1035.87 1214.06 L1036.46 1214.06 L1037.04 1214.06 L1037.63 1214.06 L1038.22 1214.06 L1038.8 1214.06 L1039.39 1214.06 L1039.98 1214.06 L1040.56 1214.06 L1041.15 1214.06 L1041.73 1214.06 L1042.32 1214.06 L1042.91 1214.06 L1043.49 1214.06 L1044.08 1214.06 L1044.67 1214.06 L1045.25 1214.06 L1045.84 1214.06 L1046.43 1214.06 L1047.01 1214.06 L1047.6 1214.06 L1048.19 1214.06 L1048.77 1214.06 L1049.36 1214.06 L1049.94 1214.06 L1050.53 1214.06 L1051.12 1214.06 L1051.7 1214.06 L1052.29 1214.06 L1052.88 1214.06 L1053.46 1214.06 L1054.05 1214.06 L1054.64 1214.06 L1055.22 1214.06 L1055.81 1214.06 L1056.39 1214.06 L1056.98 1214.06 L1057.57 1214.06 L1058.15 1214.06 L1058.74 1214.06 L1059.33 1214.06 L1059.91 1214.06 L1060.5 1214.06 L1061.09 1214.06 L1061.67 1214.06 L1062.26 1214.06 L1062.85 1214.06 L1063.43 1214.06 L1064.02 1214.06 L1064.6 1214.06 L1065.19 1214.06 L1065.78 1214.06 L1066.36 1214.06 L1066.95 1214.06 L1067.54 1214.06 L1068.12 1214.06 L1068.71 1214.06 L1069.3 1214.06 L1069.88 1214.06 L1070.47 1214.06 L1071.06 1214.06 L1071.64 1214.06 L1072.23 1214.06 L1072.81 1214.06 L1073.4 1214.06 L1073.99 1214.06 L1074.57 1214.06 L1075.16 1214.06 L1075.75 1214.06 L1076.33 1214.06 L1076.92 1214.06 L1077.51 1214.06 L1078.09 1214.06 L1078.68 1214.06 L1079.26 1214.06 L1079.85 1214.06 L1080.44 1214.06 L1081.02 1214.06 L1081.61 1214.06 L1082.2 1214.06 L1082.78 1214.06 L1083.37 1214.06 L1083.96 1214.06 L1084.54 1214.06 L1085.13 1214.06 L1085.72 1214.06 L1086.3 1214.06 L1086.89 1214.06 L1087.47 1214.06 L1088.06 1214.06 L1088.65 1214.06 L1089.23 1214.06 L1089.82 1214.06 L1090.41 1214.06 L1090.99 1214.06 L1091.58 1214.06 L1092.17 1214.06 L1092.75 1214.06 L1093.34 1214.06 L1093.93 1214.06 L1094.51 1214.06 L1095.1 1214.06 L1095.68 1214.06 L1096.27 1214.06 L1096.86 1214.06 L1097.44 1214.06 L1098.03 1214.06 L1098.62 1214.06 L1099.2 1214.06 L1099.79 1214.06 L1100.38 1214.06 L1100.96 1214.06 L1101.55 1214.06 L1102.14 1214.06 L1102.72 1214.06 L1103.31 1214.06 L1103.89 1214.06 L1104.48 1214.06 L1105.07 1214.06 L1105.65 1214.06 L1106.24 1214.06 L1106.83 1214.06 L1107.41 1214.06 L1108 1214.06 L1108.59 1214.06 L1109.17 1214.06 L1109.76 1214.06 L1110.34 1214.06 L1110.93 1214.06 L1111.52 1214.06 L1112.1 1214.06 L1112.69 1214.06 L1113.28 1214.06 L1113.86 1214.06 L1114.45 1214.06 L1115.04 1214.06 L1115.62 1214.06 L1116.21 1214.06 L1116.8 1214.06 L1117.38 1214.06 L1117.97 1214.06 L1118.55 1214.06 L1119.14 1214.06 L1119.73 1214.06 L1120.31 1214.06 L1120.9 1214.06 L1121.49 1214.06 L1122.07 1214.06 L1122.66 1214.06 L1123.25 1214.06 L1123.83 1214.06 L1124.42 1214.06 L1125.01 1214.06 L1125.59 1214.06 L1126.18 1214.06 L1126.76 1214.06 L1127.35 1214.06 L1127.94 1214.06 L1128.52 1214.06 L1129.11 1214.06 L1129.7 1214.06 L1130.28 1214.06 L1130.87 1214.06 L1131.46 1214.06 L1132.04 1214.06 L1132.63 1214.06 L1133.21 1214.06 L1133.8 1214.06 L1134.39 1214.06 L1134.97 1214.06 L1135.56 1214.06 L1136.15 1214.06 L1136.73 1214.06 L1137.32 1214.06 L1137.91 1214.06 L1138.49 1214.06 L1139.08 1214.06 L1139.67 1214.06 L1140.25 1214.06 L1140.84 1214.06 L1141.42 1214.06 L1142.01 1214.06 L1142.6 1214.06 L1143.18 1214.06 L1143.77 1214.06 L1144.36 1214.06 L1144.94 1214.06 L1145.53 1214.06 L1146.12 1214.06 L1146.7 1214.06 L1147.29 1214.06 L1147.88 1214.06 L1148.46 1214.06 L1149.05 1214.06 L1149.63 1214.06 L1150.22 1214.06 L1150.81 1214.06 L1151.39 1214.06 L1151.98 1214.06 L1152.57 1214.06 L1153.15 1214.06 L1153.74 1214.06 L1154.33 1214.06 L1154.91 1214.06 L1155.5 1214.06 L1156.09 1214.06 L1156.67 1214.06 L1157.26 1214.06 L1157.84 1214.06 L1158.43 1214.06 L1159.02 1214.06 L1159.6 1214.06 L1160.19 1214.06 L1160.78 1214.06 L1161.36 1214.06 L1161.95 1214.06 L1162.54 1214.06 L1163.12 1214.06 L1163.71 1214.06 L1164.29 1214.06 L1164.88 1214.06 L1165.47 1214.06 L1166.05 1214.06 L1166.64 1214.06 L1167.23 1214.06 L1167.81 1214.06 L1168.4 1214.06 L1168.99 1214.06 L1169.57 1214.06 L1170.16 1214.06 L1170.75 1214.06 L1171.33 1214.06 L1171.92 1214.06 L1172.5 1214.06 L1173.09 1214.06 L1173.68 1214.06 L1174.26 1214.06 L1174.85 1214.06 L1175.44 1214.06 L1176.02 1214.06 L1176.61 1214.06 L1177.2 1214.06 L1177.78 1214.06 L1178.37 1214.06 L1178.96 1214.06 L1179.54 1214.06 L1180.13 1214.06 L1180.71 1214.06 L1181.3 1214.06 L1181.89 1214.06 L1182.47 1214.06 L1183.06 1214.06 L1183.65 1214.06 L1184.23 1214.06 L1184.82 1214.06 L1185.41 1214.06 L1185.99 1214.06 L1186.58 1214.06 L1187.16 1214.06 L1187.75 1214.06 L1188.34 1214.06 L1188.92 1214.06 L1189.51 1214.06 L1190.1 1214.06 L1190.68 1214.06 L1191.27 1214.06 L1191.86 1214.06 L1192.44 1214.06 L1193.03 1214.06 L1193.62 1214.06 L1194.2 1214.06 L1194.79 1214.06 L1195.37 1214.06 L1195.96 1214.06 L1196.55 1214.06 L1197.13 1214.06 L1197.72 1214.06 L1198.31 1214.06 L1198.89 1214.06 L1199.48 1214.06 L1200.07 1214.06 L1200.65 1214.06 L1201.24 1214.06 L1201.83 1214.06 L1202.41 1214.06 L1203 1214.06 L1203.58 1214.06 L1204.17 1214.06 L1204.76 1214.06 L1205.34 1214.06 L1205.93 1214.06 L1206.52 1214.06 L1207.1 1214.06 L1207.69 1214.06 L1208.28 1214.06 L1208.86 1214.06 L1209.45 1214.06 L1210.03 1214.06 L1210.62 1214.06 L1211.21 1214.06 L1211.79 1214.06 L1212.38 1214.06 L1212.97 1214.06 L1213.55 1214.06 L1214.14 1214.06 L1214.73 1214.06 L1215.31 1214.06 L1215.9 1214.06 L1216.49 1214.06 L1217.07 1214.06 L1217.66 1214.06 L1218.24 1214.06 L1218.83 1214.06 L1219.42 1214.06 L1220 1214.06 L1220.59 1214.06 L1221.18 1214.06 L1221.76 1214.06 L1222.35 1214.06 L1222.94 1214.06 L1223.52 1214.06 L1224.11 1214.06 L1224.7 1214.06 L1225.28 1214.06 L1225.87 1214.06 L1226.45 1214.06 L1227.04 1214.06 L1227.63 1214.06 L1228.21 1214.06 L1228.8 1214.06 L1229.39 1214.06 L1229.97 1214.06 L1230.56 1214.06 L1231.15 1214.06 L1231.73 1214.06 L1232.32 1214.06 L1232.91 1214.06 L1233.49 1214.06 L1234.08 1214.06 L1234.66 1214.06 L1235.25 1214.06 L1235.84 1214.06 L1236.42 1214.06 L1237.01 1214.06 L1237.6 1214.06 L1238.18 1214.06 L1238.77 1214.06 L1239.36 1214.06 L1239.94 1214.06 L1240.53 1214.06 L1241.11 1214.06 L1241.7 1214.06 L1242.29 1214.06 L1242.87 1214.06 L1243.46 1214.06 L1244.05 1214.06 L1244.63 1214.06 L1245.22 1214.06 L1245.81 1214.06 L1246.39 1214.06 L1246.98 1214.06 L1247.57 1214.06 L1248.15 1214.06 L1248.74 1214.06 L1249.32 1214.06 L1249.91 1214.06 L1250.5 1214.06 L1251.08 1214.06 L1251.67 1214.06 L1252.26 1214.06 L1252.84 1214.06 L1253.43 1214.06 L1254.02 1214.06 L1254.6 1214.06 L1255.19 1214.06 L1255.78 1214.06 L1256.36 1214.06 L1256.95 1214.06 L1257.53 1214.06 L1258.12 1214.06 L1258.71 1214.06 L1259.29 1214.06 L1259.88 1214.06 L1260.47 1214.06 L1261.05 1214.06 L1261.64 1214.06 L1262.23 1214.06 L1262.81 1214.06 L1263.4 1214.06 L1263.98 1214.06 L1264.57 1214.06 L1265.16 1214.06 L1265.74 1214.06 L1266.33 1214.06 L1266.92 1214.06 L1267.5 1214.06 L1268.09 1214.06 L1268.68 1214.06 L1269.26 1214.06 L1269.85 1214.06 L1270.44 1214.06 L1271.02 1214.06 L1271.61 1214.06 L1272.19 1214.06 L1272.78 1214.06 L1273.37 1214.06 L1273.95 1214.06 L1274.54 1214.06 L1275.13 1214.06 L1275.71 1214.06 L1276.3 1214.06 L1276.89 1214.06 L1277.47 1214.06 L1278.06 1214.06 L1278.65 1214.06 L1279.23 1214.06 L1279.82 1214.06 L1280.4 1214.06 L1280.99 1214.06 L1281.58 1214.06 L1282.16 1214.06 L1282.75 1214.06 L1283.34 1214.06 L1283.92 1214.06 L1284.51 1214.06 L1285.1 1214.06 L1285.68 1214.06 L1286.27 1214.06 L1286.86 1214.06 L1287.44 1214.06 L1288.03 1214.06 L1288.61 1214.06 L1289.2 1214.06 L1289.79 1214.06 L1290.37 1214.06 L1290.96 1214.06 L1291.55 1214.06 L1292.13 1214.06 L1292.72 1214.06 L1293.31 1214.06 L1293.89 1214.06 L1294.48 1214.06 L1295.06 1214.06 L1295.65 1214.06 L1296.24 1214.06 L1296.82 1214.06 L1297.41 1214.06 L1298 1214.06 L1298.58 1214.06 L1299.17 1214.06 L1299.76 1214.06 L1300.34 1214.06 L1300.93 1214.06 L1301.52 1214.06 L1302.1 1214.06 L1302.69 1214.06 L1303.27 1214.06 L1303.86 1214.06 L1304.45 1214.06 L1305.03 1214.06 L1305.62 1214.06 L1306.21 1214.06 L1306.79 1214.06 L1307.38 1214.06 L1307.97 1214.06 L1308.55 1214.06 L1309.14 1214.06 L1309.73 1214.06 L1310.31 1214.06 L1310.9 1214.06 L1311.48 1214.06 L1312.07 1214.06 L1312.66 1214.06 L1313.24 1214.06 L1313.83 1214.06 L1314.42 1214.06 L1315 1214.06 L1315.59 1214.06 L1316.18 1214.06 L1316.76 1214.06 L1317.35 1214.06 L1317.93 1214.06 L1318.52 1214.06 L1319.11 1214.06 L1319.69 1214.06 L1320.28 1214.06 L1320.87 1214.06 L1321.45 1214.06 L1322.04 1214.06 L1322.63 1214.06 L1323.21 1214.06 L1323.8 1214.06 L1324.39 1214.06 L1324.97 1214.06 L1325.56 1214.06 L1326.14 1214.06 L1326.73 1214.06 L1327.32 1214.06 L1327.9 1214.06 L1328.49 1214.06 L1329.08 1214.06 L1329.66 1214.06 L1330.25 1214.06 L1330.84 1214.06 L1331.42 1214.06 L1332.01 1214.06 L1332.6 1214.06 L1333.18 1214.06 L1333.77 1214.06 L1334.35 1214.06 L1334.94 1214.06 L1335.53 1214.06 L1336.11 1214.06 L1336.7 1214.06 L1337.29 1214.06 L1337.87 1214.06 L1338.46 1214.06 L1339.05 1214.06 L1339.63 1214.06 L1340.22 1214.06 L1340.8 1214.06 L1341.39 1214.06 L1341.98 1214.06 L1342.56 1214.06 L1343.15 1214.06 L1343.74 1214.06 L1344.32 1214.06 L1344.91 1214.06 L1345.5 1214.06 L1346.08 1214.06 L1346.67 1214.06 L1347.26 1214.06 L1347.84 1214.06 L1348.43 1214.06 L1349.01 1214.06 L1349.6 1214.06 L1350.19 1214.06 L1350.77 1214.06 L1351.36 1214.06 L1351.95 1214.06 L1352.53 1214.06 L1353.12 1214.06 L1353.71 1214.06 L1354.29 1214.06 L1354.88 1214.06 L1355.47 1214.06 L1356.05 1214.06 L1356.64 1214.06 L1357.22 1214.06 L1357.81 1214.06 L1358.4 1214.06 L1358.98 1214.06 L1359.57 1214.06 L1360.16 1214.06 L1360.74 1214.06 L1361.33 1214.06 L1361.92 1214.06 L1362.5 1214.06 L1363.09 1214.06 L1363.68 1214.06 L1364.26 1214.06 L1364.85 1214.06 L1365.43 1214.06 L1366.02 1214.06 L1366.61 1214.06 L1367.19 1214.06 L1367.78 1214.06 L1368.37 1214.06 L1368.95 1214.06 L1369.54 1214.06 L1370.13 1214.06 L1370.71 1214.06 L1371.3 1214.06 L1371.88 1214.06 L1372.47 1214.06 L1373.06 1214.06 L1373.64 1214.06 L1374.23 1214.06 L1374.82 1214.06 L1375.4 1214.06 L1375.99 1214.06 L1376.58 1214.06 L1377.16 1214.06 L1377.75 1214.06 L1378.34 1214.06 L1378.92 1214.06 L1379.51 1214.06 L1380.09 1214.06 L1380.68 1214.06 L1381.27 1214.06 L1381.85 1214.06 L1382.44 1214.06 L1383.03 1214.06 L1383.61 1214.06 L1384.2 1214.06 L1384.79 1214.06 L1385.37 1214.06 L1385.96 1214.06 L1386.55 1214.06 L1387.13 1214.06 L1387.72 1214.06 L1388.3 1214.06 L1388.89 1214.06 L1389.48 1214.06 L1390.06 1214.06 L1390.65 1214.06 L1391.24 1214.06 L1391.82 1214.06 L1392.41 1214.06 L1393 1214.06 L1393.58 1214.06 L1394.17 1214.06 L1394.75 1214.06 L1395.34 1214.06 L1395.93 1214.06 L1396.51 1214.06 L1397.1 1214.06 L1397.69 1214.06 L1398.27 1214.06 L1398.86 1214.06 L1399.45 1214.06 L1400.03 1214.06 L1400.62 1214.06 L1401.21 1214.06 L1401.79 1214.06 L1402.38 1214.06 L1402.96 1214.06 L1403.55 1214.06 L1404.14 1214.06 L1404.72 1214.06 L1405.31 1214.06 L1405.9 1214.06 L1406.48 1214.06 L1407.07 1214.06 L1407.66 1214.06 L1408.24 1214.06 L1408.83 1214.06 L1409.42 1214.06 L1410 1214.06 L1410.59 1214.06 L1411.17 1214.06 L1411.76 1214.06 L1412.35 1214.06 L1412.93 1214.06 L1413.52 1214.06 L1414.11 1214.06 L1414.69 1214.06 L1415.28 1214.06 L1415.87 1214.06 L1416.45 1214.06 L1417.04 1214.06 L1417.63 1214.06 L1418.21 1214.06 L1418.8 1214.06 L1419.38 1214.06 L1419.97 1214.06 L1420.56 1214.06 L1421.14 1214.06 L1421.73 1214.06 L1422.32 1214.06 L1422.9 1214.06 L1423.49 1214.06 L1424.08 1214.06 L1424.66 1214.06 L1425.25 1214.06 L1425.83 1214.06 L1426.42 1214.06 L1427.01 1214.06 L1427.59 1214.06 L1428.18 1214.06 L1428.77 1214.06 L1429.35 1214.06 L1429.94 1214.06 L1430.53 1214.06 L1431.11 1214.06 L1431.7 1214.06 L1432.29 1214.06 L1432.87 1214.06 L1433.46 1214.06 L1434.04 1214.06 L1434.63 1214.06 L1435.22 1214.06 L1435.8 1214.06 L1436.39 1214.06 L1436.98 1214.06 L1437.56 1214.06 L1438.15 1214.06 L1438.74 1214.06 L1439.32 1214.06 L1439.91 1214.06 L1440.5 1214.06 L1441.08 1214.06 L1441.67 1214.06 L1442.25 1214.06 L1442.84 1214.06 L1443.43 1214.06 L1444.01 1214.06 L1444.6 1214.06 L1445.19 1214.06 L1445.77 1214.06 L1446.36 1214.06 L1446.95 1214.06 L1447.53 1214.06 L1448.12 1214.06 L1448.7 1214.06 L1449.29 1214.06 L1449.88 1214.06 L1450.46 1214.06 L1451.05 1214.06 L1451.64 1214.06 L1452.22 1214.06 L1452.81 1214.06 L1453.4 1214.06 L1453.98 1214.06 L1454.57 1214.06 L1455.16 1214.06 L1455.74 1214.06 L1456.33 1214.06 L1456.91 1214.06 L1457.5 1214.06 L1458.09 1214.06 L1458.67 1214.06 L1459.26 1214.06 L1459.85 1214.06 L1460.43 1214.06 L1461.02 1214.06 L1461.61 1214.06 L1462.19 1214.06 L1462.78 1214.06 L1463.37 1214.06 L1463.95 1214.06 L1464.54 1214.06 L1465.12 1214.06 L1465.71 1214.06 L1466.3 1214.06 L1466.88 1214.06 L1467.47 1214.06 L1468.06 1214.06 L1468.64 1214.06 L1469.23 1214.06 L1469.82 1214.06 L1470.4 1214.06 L1470.99 1214.06 L1471.57 1214.06 L1472.16 1214.06 L1472.75 1214.06 L1473.33 1214.06 L1473.92 1214.06 L1474.51 1214.06 L1475.09 1214.06 L1475.68 1214.06 L1476.27 1214.06 L1476.85 1214.06 L1477.44 1214.06 L1478.03 1214.06 L1478.61 1214.06 L1479.2 1214.06 L1479.78 1214.06 L1480.37 1214.06 L1480.96 1214.06 L1481.54 1214.06 L1482.13 1214.06 L1482.72 1214.06 L1483.3 1214.06 L1483.89 1214.06 L1484.48 1214.06 L1485.06 1214.06 L1485.65 1214.06 L1486.24 1214.06 L1486.82 1214.06 L1487.41 1214.06 L1487.99 1214.06 L1488.58 1214.06 L1489.17 1214.06 L1489.75 1214.06 L1490.34 1214.06 L1490.93 1214.06 L1491.51 1214.06 L1492.1 1214.06 L1492.69 1214.06 L1493.27 1214.06 L1493.86 1214.06 L1494.45 1214.06 L1495.03 1214.06 L1495.62 1214.06 L1496.2 1214.06 L1496.79 1214.06 L1497.38 1214.06 L1497.96 1214.06 L1498.55 1214.06 L1499.14 1214.06 L1499.72 1214.06 L1500.31 1214.06 L1500.9 1214.06 L1501.48 1214.06 L1502.07 1214.06 L1502.65 1214.06 L1503.24 1214.06 L1503.83 1214.06 L1504.41 1214.06 L1505 1214.06 L1505.59 1214.06 L1506.17 1214.06 L1506.76 1214.06 L1507.35 1214.06 L1507.93 1214.06 L1508.52 1214.06 L1509.11 1214.06 L1509.69 1214.06 L1510.28 1214.06 L1510.86 1214.06 L1511.45 1214.06 L1512.04 1214.06 L1512.62 1214.06 L1513.21 1214.06 L1513.8 1214.06 L1514.38 1214.06 L1514.97 1214.06 L1515.56 1214.06 L1516.14 1214.06 L1516.73 1214.06 L1517.32 1214.06 L1517.9 1214.06 L1518.49 1214.06 L1519.07 1214.06 L1519.66 1214.06 L1520.25 1214.06 L1520.83 1214.06 L1521.42 1214.06 L1522.01 1214.06 L1522.59 1214.06 L1523.18 1214.06 L1523.77 1214.06 L1524.35 1214.06 L1524.94 1214.06 L1525.52 1214.06 L1526.11 1214.06 L1526.7 1214.06 L1527.28 1214.06 L1527.87 1214.06 L1528.46 1214.06 L1529.04 1214.06 L1529.63 1214.06 L1530.22 1214.06 L1530.8 1214.06 L1531.39 1214.06 L1531.98 1214.06 L1532.56 1214.06 L1533.15 1214.06 L1533.73 1214.06 L1534.32 1214.06 L1534.91 1214.06 L1535.49 1214.06 L1536.08 1214.06 L1536.67 1214.06 L1537.25 1214.06 L1537.84 1214.06 L1538.43 1214.06 L1539.01 1214.06 L1539.6 1214.06 L1540.19 1214.06 L1540.77 1214.06 L1541.36 1214.06 L1541.94 1214.06 L1542.53 1214.06 L1543.12 1214.06 L1543.7 1214.06 L1544.29 1214.06 L1544.88 1214.06 L1545.46 1214.06 L1546.05 1214.06 L1546.64 1214.06 L1547.22 1214.06 L1547.81 1214.06 L1548.4 1214.06 L1548.98 1214.06 L1549.57 1214.06 L1550.15 1214.06 L1550.74 1214.06 L1551.33 1214.06 L1551.91 1214.06 L1552.5 1214.06 L1553.09 1214.06 L1553.67 1214.06 L1554.26 1214.06 L1554.85 1214.06 L1555.43 1214.06 L1556.02 1214.06 L1556.6 1214.06 L1557.19 1214.06 L1557.78 1214.06 L1558.36 1214.06 L1558.95 1214.06 L1559.54 1214.06 L1560.12 1214.06 L1560.71 1214.06 L1561.3 1214.06 L1561.88 1214.06 L1562.47 1214.06 L1563.06 1214.06 L1563.64 1214.06 L1564.23 1214.06 L1564.81 1214.06 L1565.4 1214.06 L1565.99 1214.06 L1566.57 1214.06 L1567.16 1214.06 L1567.75 1214.06 L1568.33 1214.06 L1568.92 1214.06 L1569.51 1214.06 L1570.09 1214.06 L1570.68 1214.06 L1571.27 1214.06 L1571.85 1214.06 L1572.44 1214.06 L1573.02 1214.06 L1573.61 1214.06 L1574.2 1214.06 L1574.78 1214.06 L1575.37 1214.06 L1575.96 1214.06 L1576.54 1214.06 L1577.13 1214.06 L1577.72 1214.06 L1578.3 1214.06 L1578.89 1214.06 L1579.47 1214.06 L1580.06 1214.06 L1580.65 1214.06 L1581.23 1214.06 L1581.82 1214.06 L1582.41 1214.06 L1582.99 1214.06 L1583.58 1214.06 L1584.17 1214.06 L1584.75 1214.06 L1585.34 1214.06 L1585.93 1214.06 L1586.51 1214.06 L1587.1 1214.06 L1587.68 1214.06 L1588.27 1214.06 L1588.86 1214.06 L1589.44 1214.06 L1590.03 1214.06 L1590.62 1214.06 L1591.2 1214.06 L1591.79 1214.06 L1592.38 1214.06 L1592.96 1214.06 L1593.55 1214.06 L1594.14 1214.06 L1594.72 1214.06 L1595.31 1214.06 L1595.89 1214.06 L1596.48 1214.06 L1597.07 1214.06 L1597.65 1214.06 L1598.24 1214.06 L1598.83 1214.06 L1599.41 1214.06 L1600 1214.06 L1600.59 1214.06 L1601.17 1214.06 L1601.76 1214.06 L1602.34 1214.06 L1602.93 1214.06 L1603.52 1214.06 L1604.1 1214.06 L1604.69 1214.06 L1605.28 1214.06 L1605.86 1214.06 L1606.45 1214.06 L1607.04 1214.06 L1607.62 1214.06 L1608.21 1214.06 L1608.8 1214.06 L1609.38 1214.06 L1609.97 1214.06 L1610.55 1214.06 L1611.14 1214.06 L1611.73 1214.06 L1612.31 1214.06 L1612.9 1214.06 L1613.49 1214.06 L1614.07 1214.06 L1614.66 1214.06 L1615.25 1214.06 L1615.83 1214.06 L1616.42 1214.06 L1617.01 1214.06 L1617.59 1214.06 L1618.18 1214.06 L1618.76 1214.06 L1619.35 1214.06 L1619.94 1214.06 L1620.52 1214.06 L1621.11 1214.06 L1621.7 1214.06 L1622.28 1214.06 L1622.87 1214.06 L1623.46 1214.06 L1624.04 1214.06 L1624.63 1214.06 L1625.22 1214.06 L1625.8 1214.06 L1626.39 1214.06 L1626.97 1214.06 L1627.56 1214.06 L1628.15 1214.06 L1628.73 1214.06 L1629.32 1214.06 L1629.91 1214.06 L1630.49 1214.06 L1631.08 1214.06 L1631.67 1214.06 L1632.25 1214.06 L1632.84 1214.06 L1633.42 1214.06 L1634.01 1214.06 L1634.6 1214.06 L1635.18 1214.06 L1635.77 1214.06 L1636.36 1214.06 L1636.94 1214.06 L1637.53 1214.06 L1638.12 1214.06 L1638.7 1214.06 L1639.29 1214.06 L1639.88 1214.06 L1640.46 1214.06 L1641.05 1214.06 L1641.63 1214.06 L1642.22 1214.06 L1642.81 1214.06 L1643.39 1214.06 L1643.98 1214.06 L1644.57 1214.06 L1645.15 1214.06 L1645.74 1214.06 L1646.33 1214.06 L1646.91 1214.06 L1647.5 1214.06 L1648.09 1214.06 L1648.67 1214.06 L1649.26 1214.06 L1649.84 1214.06 L1650.43 1214.06 L1651.02 1214.06 L1651.6 1214.06 L1652.19 1214.06 L1652.78 1214.06 L1653.36 1214.06 L1653.95 1214.06 L1654.54 1214.06 L1655.12 1214.06 L1655.71 1214.06 L1656.29 1214.06 L1656.88 1214.06 L1657.47 1214.06 L1658.05 1214.06 L1658.64 1214.06 L1659.23 1214.06 L1659.81 1214.06 L1660.4 1214.06 L1660.99 1214.06 L1661.57 1214.06 L1662.16 1214.06 L1662.75 1214.06 L1663.33 1214.06 L1663.92 1214.06 L1664.5 1214.06 L1665.09 1214.06 L1665.68 1214.06 L1666.26 1214.06 L1666.85 1214.06 L1667.44 1214.06 L1668.02 1214.06 L1668.61 1214.06 L1669.2 1214.06 L1669.78 1214.06 L1670.37 1214.06 L1670.96 1214.06 L1671.54 1214.06 L1672.13 1214.06 L1672.71 1214.06 L1673.3 1214.06 L1673.89 1214.06 L1674.47 1214.06 L1675.06 1214.06 L1675.65 1214.06 L1676.23 1214.06 L1676.82 1214.06 L1677.41 1214.06 L1677.99 1214.06 L1678.58 1214.06 L1679.17 1214.06 L1679.75 1214.06 L1680.34 1214.06 L1680.92 1214.06 L1681.51 1214.06 L1682.1 1214.06 L1682.68 1214.06 L1683.27 1214.06 L1683.86 1214.06 L1684.44 1214.06 L1685.03 1214.06 L1685.62 1214.06 L1686.2 1214.06 L1686.79 1214.06 L1687.37 1214.06 L1687.96 1214.06 L1688.55 1214.06 L1689.13 1214.06 L1689.72 1214.06 L1690.31 1214.06 L1690.89 1214.06 L1691.48 1214.06 L1692.07 1214.06 L1692.65 1214.06 L1693.24 1214.06 L1693.83 1214.06 L1694.41 1214.06 L1695 1214.06 L1695.58 1214.06 L1696.17 1214.06 L1696.76 1214.06 L1697.34 1214.06 L1697.93 1214.06 L1698.52 1214.06 L1699.1 1214.06 L1699.69 1214.06 L1700.28 1214.06 L1700.86 1214.06 L1701.45 1214.06 L1702.04 1214.06 L1702.62 1214.06 L1703.21 1214.06 L1703.79 1214.06 L1704.38 1214.06 L1704.97 1214.06 L1705.55 1214.06 L1706.14 1214.06 L1706.73 1214.06 L1707.31 1214.06 L1707.9 1214.06 L1708.49 1214.06 L1709.07 1214.06 L1709.66 1214.06 L1710.24 1214.06 L1710.83 1214.06 L1711.42 1214.06 L1712 1214.06 L1712.59 1214.06 L1713.18 1214.06 L1713.76 1214.06 L1714.35 1214.06 L1714.94 1214.06 L1715.52 1214.06 L1716.11 1214.06 L1716.7 1214.06 L1717.28 1214.06 L1717.87 1214.06 L1718.45 1214.06 L1719.04 1214.06 L1719.63 1214.06 L1720.21 1214.06 L1720.8 1214.06 L1721.39 1214.06 L1721.97 1214.06 L1722.56 1214.06 L1723.15 1214.06 L1723.73 1214.06 L1724.32 1214.06 L1724.91 1214.06 L1725.49 1214.06 L1726.08 1214.06 L1726.66 1214.06 L1727.25 1214.06 L1727.84 1214.06 L1728.42 1214.06 L1729.01 1214.06 L1729.6 1214.06 L1730.18 1214.06 L1730.77 1214.06 L1731.36 1214.06 L1731.94 1214.06 L1732.53 1214.06 L1733.11 1214.06 L1733.7 1214.06 L1734.29 1214.06 L1734.87 1214.06 L1735.46 1214.06 L1736.05 1214.06 L1736.63 1214.06 L1737.22 1214.06 L1737.81 1214.06 L1738.39 1214.06 L1738.98 1214.06 L1739.57 1214.06 L1740.15 1214.06 L1740.74 1214.06 L1741.32 1214.06 L1741.91 1214.06 L1742.5 1214.06 L1743.08 1214.06 L1743.67 1214.06 L1744.26 1214.06 L1744.84 1214.06 L1745.43 1214.06 L1746.02 1214.06 L1746.6 1214.06 L1747.19 1214.06 L1747.78 1214.06 L1748.36 1214.06 L1748.95 1214.06 L1749.53 1214.06 L1750.12 1214.06 L1750.71 1214.06 L1751.29 1214.06 L1751.88 1214.06 L1752.47 1214.06 L1753.05 1214.06 L1753.64 1214.06 L1754.23 1214.06 L1754.81 1214.06 L1755.4 1214.06 L1755.99 1214.06 L1756.57 1214.06 L1757.16 1214.06 L1757.74 1214.06 L1758.33 1214.06 L1758.92 1214.06 L1759.5 1214.06 L1760.09 1214.06 L1760.68 1214.06 L1761.26 1214.06 L1761.85 1214.06 L1762.44 1214.06 L1763.02 1214.06 L1763.61 1214.06 L1764.19 1214.06 L1764.78 1214.06 L1765.37 1214.06 L1765.95 1214.06 L1766.54 1214.06 L1767.13 1214.06 L1767.71 1214.06 L1768.3 1214.06 L1768.89 1214.06 L1769.47 1214.06 L1770.06 1214.06 L1770.65 1214.06 L1771.23 1214.06 L1771.82 1214.06 L1772.4 1214.06 L1772.99 1214.06 L1773.58 1214.06 L1774.16 1214.06 L1774.75 1214.06 L1775.34 1214.06 L1775.92 1214.06 L1776.51 1214.06 L1777.1 1214.06 L1777.68 1214.06 L1778.27 1214.06 L1778.86 1214.06 L1779.44 1214.06 L1780.03 1214.06 L1780.61 1214.06 L1781.2 1214.06 L1781.79 1214.06 L1782.37 1214.06 L1782.96 1214.06 L1783.55 1214.06 L1784.13 1214.06 L1784.72 1214.06 L1785.31 1214.06 L1785.89 1214.06 L1786.48 1214.06 L1787.06 1214.06 L1787.65 1214.06 L1788.24 1214.06 L1788.82 1214.06 L1789.41 1214.06 L1790 1214.06 L1790.58 1214.06 L1791.17 1214.06 L1791.76 1214.06 L1792.34 1214.06 L1792.93 1214.06 L1793.52 1214.06 L1794.1 1214.06 L1794.69 1214.06 L1795.27 1214.06 L1795.86 1214.06 L1796.45 1214.06 L1797.03 1214.06 L1797.62 1214.06 L1798.21 1214.06 L1798.79 1214.06 L1799.38 1214.06 L1799.97 1214.06 L1800.55 1214.06 L1801.14 1214.06 L1801.73 1214.06 L1802.31 1214.06 L1802.9 1214.06 L1803.48 1214.06 L1804.07 1214.06 L1804.66 1214.06 L1805.24 1214.06 L1805.83 1214.06 L1806.42 1214.06 L1807 1214.06 L1807.59 1214.06 L1808.18 1214.06 L1808.76 1214.06 L1809.35 1214.06 L1809.94 1214.06 L1810.52 1214.06 L1811.11 1214.06 L1811.69 1214.06 L1812.28 1214.06 L1812.87 1214.06 L1813.45 1214.06 L1814.04 1214.06 L1814.63 1214.06 L1815.21 1214.06 L1815.8 1214.06 L1816.39 1214.06 L1816.97 1214.06 L1817.56 1214.06 L1818.14 1214.06 L1818.73 1214.06 L1819.32 1214.06 L1819.9 1214.06 L1820.49 1214.06 L1821.08 1214.06 L1821.66 1214.06 L1822.25 1214.06 L1822.84 1214.06 L1823.42 1214.06 L1824.01 1214.06 L1824.6 1214.06 L1825.18 1214.06 L1825.77 1214.06 L1826.35 1214.06 L1826.94 1214.06 L1827.53 1214.06 L1828.11 1214.06 L1828.7 1214.06 L1829.29 1214.06 L1829.87 1214.06 L1830.46 1214.06 L1831.05 1214.06 L1831.63 1214.06 L1832.22 1214.06 L1832.81 1214.06 L1833.39 1214.06 L1833.98 1214.06 L1834.56 1214.06 L1835.15 1214.06 L1835.74 1214.06 L1836.32 1214.06 L1836.91 1214.06 L1837.5 1214.06 L1838.08 1214.06 L1838.67 1214.06 L1839.26 1214.06 L1839.84 1214.06 L1840.43 1214.06 L1841.01 1214.06 L1841.6 1214.06 L1842.19 1214.06 L1842.77 1214.06 L1843.36 1214.06 L1843.95 1214.06 L1844.53 1214.06 L1845.12 1214.06 L1845.71 1214.06 L1846.29 1214.06 L1846.88 1214.06 L1847.47 1214.06 L1848.05 1214.06 L1848.64 1214.06 L1849.22 1214.06 L1849.81 1214.06 L1850.4 1214.06 L1850.98 1214.06 L1851.57 1214.06 L1852.16 1214.06 L1852.74 1214.06 L1853.33 1214.06 L1853.92 1214.06 L1854.5 1214.06 L1855.09 1214.06 L1855.68 1214.06 L1856.26 1214.06 L1856.85 1214.06 L1857.43 1214.06 L1858.02 1214.06 L1858.61 1214.06 L1859.19 1214.06 L1859.78 1214.06 L1860.37 1214.06 L1860.95 1214.06 L1861.54 1214.06 L1862.13 1214.06 L1862.71 1214.06 L1863.3 1214.06 L1863.88 1214.06 L1864.47 1214.06 L1865.06 1214.06 L1865.64 1214.06 L1866.23 1214.06 L1866.82 1214.06 L1867.4 1214.06 L1867.99 1214.06 L1868.58 1214.06 L1869.16 1214.06 L1869.75 1214.06 L1870.34 1214.06 L1870.92 1214.06 L1871.51 1214.06 L1872.09 1214.06 L1872.68 1214.06 L1873.27 1214.06 L1873.85 1214.06 L1874.44 1214.06 L1875.03 1214.06 L1875.61 1214.06 L1876.2 1214.06 L1876.79 1214.06 L1877.37 1214.06 L1877.96 1214.06 L1878.55 1214.06 L1879.13 1214.06 L1879.72 1214.06 L1880.3 1214.06 L1880.89 1214.06 L1881.48 1214.06 L1882.06 1214.06 L1882.65 1214.06 L1883.24 1214.06 L1883.82 1214.06 L1884.41 1214.06 L1885 1214.06 L1885.58 1214.06 L1886.17 1214.06 L1886.76 1214.06 L1887.34 1214.06 L1887.93 1214.06 L1888.51 1214.06 L1889.1 1214.06 L1889.69 1214.06 L1890.27 1214.06 L1890.86 1214.06 L1891.45 1214.06 L1892.03 1214.06 L1892.62 1214.06 L1893.21 1214.06 L1893.79 1214.06 L1894.38 1214.06 L1894.96 1214.06 L1895.55 1214.06 L1896.14 1214.06 L1896.72 1214.06 L1897.31 1214.06 L1897.9 1214.06 L1898.48 1214.06 L1899.07 1214.06 L1899.66 1214.06 L1900.24 1214.06 L1900.83 1214.06 L1901.42 1214.06 L1902 1214.06 L1902.59 1214.06 L1903.17 1214.06 L1903.76 1214.06 L1904.35 1214.06 L1904.93 1214.06 L1905.52 1214.06 L1906.11 1214.06 L1906.69 1214.06 L1907.28 1214.06 L1907.87 1214.06 L1908.45 1214.06 L1909.04 1214.06 L1909.63 1214.06 L1910.21 1214.06 L1910.8 1214.06 L1911.38 1214.06 L1911.97 1214.06 L1912.56 1214.06 L1913.14 1214.06 L1913.73 1214.06 L1914.32 1214.06 L1914.9 1214.06 L1915.49 1214.06 L1916.08 1214.06 L1916.66 1214.06 L1917.25 1214.06 L1917.83 1214.06 L1918.42 1214.06 L1919.01 1214.06 L1919.59 1214.06 L1920.18 1214.06 L1920.77 1214.06 L1921.35 1214.06 L1921.94 1214.06 L1922.53 1214.06 L1923.11 1214.06 L1923.7 1214.06 L1924.29 1214.06 L1924.87 1214.06 L1925.46 1214.06 L1926.04 1214.06 L1926.63 1214.06 L1927.22 1214.06 L1927.8 1214.06 L1928.39 1214.06 L1928.98 1214.06 L1929.56 1214.06 L1930.15 1214.06 L1930.74 1214.06 L1931.32 1214.06 L1931.91 1214.06 L1932.5 1214.06 L1933.08 1214.06 L1933.67 1214.06 L1934.25 1214.06 L1934.84 1214.06 L1935.43 1214.06 L1936.01 1214.06 L1936.6 1214.06 L1937.19 1214.06 L1937.77 1214.06 L1938.36 1214.06 L1938.95 1214.06 L1939.53 1214.06 L1940.12 1214.06 L1940.71 1214.06 L1941.29 1214.06 L1941.88 1214.06 L1942.46 1214.06 L1943.05 1214.06 L1943.64 1214.06 L1944.22 1214.06 L1944.81 1214.06 L1945.4 1214.06 L1945.98 1214.06 L1946.57 1214.06 L1947.16 1214.06 L1947.74 1214.06 L1948.33 1214.06 L1948.91 1214.06 L1949.5 1214.06 L1950.09 1214.06 L1950.67 1214.06 L1951.26 1214.06 L1951.85 1214.06 L1952.43 1214.06 L1953.02 1214.06 L1953.61 1214.06 L1954.19 1214.06 L1954.78 1214.06 L1955.37 1214.06 L1955.95 1214.06 L1956.54 1214.06 L1957.12 1214.06 L1957.71 1214.06 L1958.3 1214.06 L1958.88 1214.06 L1959.47 1214.06 L1960.06 1214.06 L1960.64 1214.06 L1961.23 1214.06 L1961.82 1214.06 L1962.4 1214.06 L1962.99 1214.06 L1963.58 1214.06 L1964.16 1214.06 L1964.75 1214.06 L1965.33 1214.06 L1965.92 1214.06 L1966.51 1214.06 L1967.09 1214.06 L1967.68 1214.06 L1968.27 1214.06 L1968.85 1214.06 L1969.44 1214.06 L1970.03 1214.06 L1970.61 1214.06 L1971.2 1214.06 L1971.78 1214.06 L1972.37 1214.06 L1972.96 1214.06 L1973.54 1214.06 L1974.13 1214.06 L1974.72 1214.06 L1975.3 1214.06 L1975.89 1214.06 L1976.48 1214.06 L1977.06 1214.06 L1977.65 1214.06 L1978.24 1214.06 L1978.82 1214.06 L1979.41 1214.06 L1979.99 1214.06 L1980.58 1214.06 L1981.17 1214.06 L1981.75 1214.06 L1982.34 1214.06 L1982.93 1214.06 L1983.51 1214.06 L1984.1 1214.06 L1984.69 1214.06 L1985.27 1214.06 L1985.86 1214.06 L1986.45 1214.06 L1987.03 1214.06 L1987.62 1214.06 L1988.2 1214.06 L1988.79 1214.06 L1989.38 1214.06 L1989.96 1214.06 L1990.55 1214.06 L1991.14 1214.06 L1991.72 1214.06 L1992.31 1214.06 L1992.9 1214.06 L1993.48 1214.06 L1994.07 1214.06 L1994.65 1214.06 L1995.24 1214.06 L1995.83 1214.06 L1996.41 1214.06 L1997 1214.06 L1997.59 1214.06 L1998.17 1214.06 L1998.76 1214.06 L1999.35 1214.06 L1999.93 1214.06 L2000.52 1214.06 L2001.11 1214.06 L2001.69 1214.06 L2002.28 1214.06 L2002.86 1214.06 L2003.45 1214.06 L2004.04 1214.06 L2004.62 1214.06 L2005.21 1214.06 L2005.8 1214.06 L2006.38 1214.06 L2006.97 1214.06 L2007.56 1214.06 L2008.14 1214.06 L2008.73 1214.06 L2009.32 1214.06 L2009.9 1214.06 L2010.49 1214.06 L2011.07 1214.06 L2011.66 1214.06 L2012.25 1214.06 L2012.83 1214.06 L2013.42 1214.06 L2014.01 1214.06 L2014.59 1214.06 L2015.18 1214.06 L2015.77 1214.06 L2016.35 1214.06 L2016.94 1214.06 L2017.53 1214.06 L2018.11 1214.06 L2018.7 1214.06 L2019.28 1214.06 L2019.87 1214.06 L2020.46 1214.06 L2021.04 1214.06 L2021.63 1214.06 L2022.22 1214.06 L2022.8 1214.06 L2023.39 1214.06 L2023.98 1214.06 L2024.56 1214.06 L2025.15 1214.06 L2025.73 1214.06 L2026.32 1214.06 L2026.91 1214.06 L2027.49 1214.06 L2028.08 1214.06 L2028.67 1214.06 L2029.25 1214.06 L2029.84 1214.06 L2030.43 1214.06 L2031.01 1214.06 L2031.6 1214.06 L2032.19 1214.06 L2032.77 1214.06 L2033.36 1214.06 L2033.94 1214.06 L2034.53 1214.06 L2035.12 1214.06 L2035.7 1214.06 L2036.29 1214.06 L2036.88 1214.06 L2037.46 1214.06 L2038.05 1214.06 L2038.64 1214.06 L2039.22 1214.06 L2039.81 1214.06 L2040.4 1214.06 L2040.98 1214.06 L2041.57 1214.06 L2042.15 1214.06 L2042.74 1214.06 L2043.33 1214.06 L2043.91 1214.06 L2044.5 1214.06 L2045.09 1214.06 L2045.67 1214.06 L2046.26 1214.06 L2046.85 1214.06 L2047.43 1214.06 L2048.02 1214.06 L2048.6 1214.06 L2049.19 1214.06 L2049.78 1214.06 L2050.36 1214.06 L2050.95 1214.06 L2051.54 1214.06 L2052.12 1214.06 L2052.71 1214.06 L2053.3 1214.06 L2053.88 1214.06 L2054.47 1214.06 L2055.06 1214.06 L2055.64 1214.06 L2056.23 1214.06 L2056.81 1214.06 L2057.4 1214.06 L2057.99 1214.06 L2058.57 1214.06 L2059.16 1214.06 L2059.75 1214.06 L2060.33 1214.06 L2060.92 1214.06 L2061.51 1214.06 L2062.09 1214.06 L2062.68 1214.06 L2063.27 1214.06 L2063.85 1214.06 L2064.44 1214.06 L2065.02 1214.06 L2065.61 1214.06 L2066.2 1214.06 L2066.78 1214.06 L2067.37 1214.06 L2067.96 1214.06 L2068.54 1214.06 L2069.13 1214.06 L2069.72 1214.06 L2070.3 1214.06 L2070.89 1214.06 L2071.48 1214.06 L2072.06 1214.06 L2072.65 1214.06 L2073.23 1214.06 L2073.82 1214.06 L2074.41 1214.06 L2074.99 1214.06 L2075.58 1214.06 L2076.17 1214.06 L2076.75 1214.06 L2077.34 1214.06 L2077.93 1214.06 L2078.51 1214.06 L2079.1 1214.06 L2079.68 1214.06 L2080.27 1214.06 L2080.86 1214.06 L2081.44 1214.06 L2082.03 1214.06 L2082.62 1214.06 L2083.2 1214.06 L2083.79 1214.06 L2084.38 1214.06 L2084.96 1214.06 L2085.55 1214.06 L2086.14 1214.06 L2086.72 1214.06 L2087.31 1214.06 L2087.89 1214.06 L2088.48 1214.06 L2089.07 1214.06 L2089.65 1214.06 L2090.24 1214.06 L2090.83 1214.06 L2091.41 1214.06 L2092 1214.06 L2092.59 1214.06 L2093.17 1214.06 L2093.76 1214.06 L2094.35 1214.06 L2094.93 1214.06 L2095.52 1214.06 L2096.1 1214.06 L2096.69 1214.06 L2097.28 1214.06 L2097.86 1214.06 L2098.45 1214.06 L2099.04 1214.06 L2099.62 1214.06 L2100.21 1214.06 L2100.8 1214.06 L2101.38 1214.06 L2101.97 1214.06 L2102.55 1214.06 L2103.14 1214.06 L2103.73 1214.06 L2104.31 1214.06 L2104.9 1214.06 L2105.49 1214.06 L2106.07 1214.06 L2106.66 1214.06 L2107.25 1214.06 L2107.83 1214.06 L2108.42 1214.06 L2109.01 1214.06 L2109.59 1214.06 L2110.18 1214.06 L2110.76 1214.06 L2111.35 1214.06 L2111.94 1214.06 L2112.52 1214.06 L2113.11 1214.06 L2113.7 1214.06 L2114.28 1214.06 L2114.87 1214.06 L2115.46 1214.06 L2116.04 1214.06 L2116.63 1214.06 L2117.22 1214.06 L2117.8 1214.06 L2118.39 1214.06 L2118.97 1214.06 L2119.56 1214.06 L2120.15 1214.06 L2120.73 1214.06 L2121.32 1214.06 L2121.91 1214.06 L2122.49 1214.06 L2123.08 1214.06 L2123.67 1214.06 L2124.25 1214.06 L2124.84 1214.06 L2125.42 1214.06 L2126.01 1214.06 L2126.6 1214.06 L2127.18 1214.06 L2127.77 1214.06 L2128.36 1214.06 L2128.94 1214.06 L2129.53 1214.06 L2130.12 1214.06 L2130.7 1214.06 L2131.29 1214.06 L2131.88 1214.06 L2132.46 1214.06 L2133.05 1214.06 L2133.63 1214.06 L2134.22 1214.06 L2134.81 1214.06 L2135.39 1214.06 L2135.98 1214.06 L2136.57 1214.06 L2137.15 1214.06 L2137.74 1214.06 L2138.33 1214.06 L2138.91 1214.06 L2139.5 1214.06 L2140.09 1214.06 L2140.67 1214.06 L2141.26 1214.06 L2141.84 1214.06 L2142.43 1214.06 L2143.02 1214.06 L2143.6 1214.06 L2144.19 1214.06 L2144.78 1214.06 L2145.36 1214.06 L2145.95 1214.06 L2146.54 1214.06 L2147.12 1214.06 L2147.71 1214.06 L2148.3 1214.06 L2148.88 1214.06 L2149.47 1214.06 L2150.05 1214.06 L2150.64 1214.06 L2151.23 1214.06 L2151.81 1214.06 L2152.4 1214.06 L2152.99 1214.06 L2153.57 1214.06 L2154.16 1214.06 L2154.75 1214.06 L2155.33 1214.06 L2155.92 1214.06 L2156.5 1214.06 L2157.09 1214.06 L2157.68 1214.06 L2158.26 1214.06 L2158.26 1213.41 L2157.68 1213.41 L2157.09 1213.41 L2156.5 1213.41 L2155.92 1213.41 L2155.33 1213.41 L2154.75 1213.41 L2154.16 1213.41 L2153.57 1213.41 L2152.99 1213.41 L2152.4 1213.41 L2151.81 1213.41 L2151.23 1213.41 L2150.64 1213.41 L2150.05 1213.41 L2149.47 1213.41 L2148.88 1213.41 L2148.3 1213.41 L2147.71 1213.41 L2147.12 1213.41 L2146.54 1213.41 L2145.95 1213.41 L2145.36 1213.41 L2144.78 1213.41 L2144.19 1213.41 L2143.6 1213.41 L2143.02 1213.41 L2142.43 1213.41 L2141.84 1213.41 L2141.26 1213.41 L2140.67 1213.41 L2140.09 1213.41 L2139.5 1213.41 L2138.91 1213.41 L2138.33 1213.41 L2137.74 1213.41 L2137.15 1213.41 L2136.57 1213.41 L2135.98 1213.41 L2135.39 1213.41 L2134.81 1213.41 L2134.22 1213.41 L2133.63 1213.41 L2133.05 1213.41 L2132.46 1213.41 L2131.88 1213.41 L2131.29 1213.41 L2130.7 1213.41 L2130.12 1213.41 L2129.53 1213.41 L2128.94 1213.41 L2128.36 1213.41 L2127.77 1213.41 L2127.18 1213.41 L2126.6 1213.41 L2126.01 1213.41 L2125.42 1213.41 L2124.84 1213.41 L2124.25 1213.41 L2123.67 1213.41 L2123.08 1213.41 L2122.49 1213.41 L2121.91 1213.41 L2121.32 1213.41 L2120.73 1213.41 L2120.15 1213.41 L2119.56 1213.41 L2118.97 1213.41 L2118.39 1213.41 L2117.8 1213.41 L2117.22 1213.41 L2116.63 1213.41 L2116.04 1213.41 L2115.46 1213.41 L2114.87 1213.41 L2114.28 1213.41 L2113.7 1213.41 L2113.11 1213.41 L2112.52 1213.41 L2111.94 1213.41 L2111.35 1213.41 L2110.76 1213.41 L2110.18 1213.41 L2109.59 1213.41 L2109.01 1213.41 L2108.42 1213.41 L2107.83 1213.41 L2107.25 1213.41 L2106.66 1213.41 L2106.07 1213.41 L2105.49 1213.41 L2104.9 1213.41 L2104.31 1213.41 L2103.73 1213.41 L2103.14 1213.41 L2102.55 1213.41 L2101.97 1213.41 L2101.38 1213.41 L2100.8 1213.41 L2100.21 1213.41 L2099.62 1213.41 L2099.04 1213.41 L2098.45 1213.41 L2097.86 1213.41 L2097.28 1213.41 L2096.69 1213.41 L2096.1 1213.41 L2095.52 1213.41 L2094.93 1213.41 L2094.35 1213.41 L2093.76 1213.41 L2093.17 1213.41 L2092.59 1213.41 L2092 1213.41 L2091.41 1213.41 L2090.83 1213.41 L2090.24 1213.41 L2089.65 1213.41 L2089.07 1213.41 L2088.48 1213.41 L2087.89 1213.41 L2087.31 1213.41 L2086.72 1213.41 L2086.14 1213.41 L2085.55 1213.41 L2084.96 1213.41 L2084.38 1213.41 L2083.79 1213.41 L2083.2 1213.41 L2082.62 1213.41 L2082.03 1213.41 L2081.44 1213.41 L2080.86 1213.41 L2080.27 1213.41 L2079.68 1213.41 L2079.1 1213.41 L2078.51 1213.41 L2077.93 1213.41 L2077.34 1213.41 L2076.75 1213.41 L2076.17 1213.41 L2075.58 1213.41 L2074.99 1213.41 L2074.41 1213.41 L2073.82 1213.41 L2073.23 1213.41 L2072.65 1213.41 L2072.06 1213.41 L2071.48 1213.41 L2070.89 1213.41 L2070.3 1213.41 L2069.72 1213.41 L2069.13 1213.41 L2068.54 1213.41 L2067.96 1213.41 L2067.37 1213.41 L2066.78 1213.41 L2066.2 1213.41 L2065.61 1213.41 L2065.02 1213.41 L2064.44 1213.41 L2063.85 1213.41 L2063.27 1213.41 L2062.68 1213.41 L2062.09 1213.41 L2061.51 1213.41 L2060.92 1213.41 L2060.33 1213.41 L2059.75 1213.41 L2059.16 1213.41 L2058.57 1213.41 L2057.99 1213.41 L2057.4 1213.41 L2056.81 1213.41 L2056.23 1213.41 L2055.64 1213.41 L2055.06 1213.41 L2054.47 1213.41 L2053.88 1213.41 L2053.3 1213.41 L2052.71 1213.41 L2052.12 1213.41 L2051.54 1213.41 L2050.95 1213.41 L2050.36 1213.41 L2049.78 1213.41 L2049.19 1213.41 L2048.6 1213.41 L2048.02 1213.41 L2047.43 1213.41 L2046.85 1213.41 L2046.26 1213.41 L2045.67 1213.41 L2045.09 1213.41 L2044.5 1213.41 L2043.91 1213.41 L2043.33 1213.41 L2042.74 1213.41 L2042.15 1213.41 L2041.57 1213.41 L2040.98 1213.41 L2040.4 1213.41 L2039.81 1213.41 L2039.22 1213.41 L2038.64 1213.41 L2038.05 1213.41 L2037.46 1213.41 L2036.88 1213.41 L2036.29 1213.41 L2035.7 1213.41 L2035.12 1213.41 L2034.53 1213.41 L2033.94 1213.41 L2033.36 1213.41 L2032.77 1213.41 L2032.19 1213.41 L2031.6 1213.41 L2031.01 1213.41 L2030.43 1213.41 L2029.84 1213.41 L2029.25 1213.41 L2028.67 1213.41 L2028.08 1213.41 L2027.49 1213.41 L2026.91 1213.41 L2026.32 1213.41 L2025.73 1213.41 L2025.15 1213.41 L2024.56 1213.41 L2023.98 1213.41 L2023.39 1213.41 L2022.8 1213.41 L2022.22 1213.41 L2021.63 1213.41 L2021.04 1213.41 L2020.46 1213.41 L2019.87 1213.41 L2019.28 1213.41 L2018.7 1213.41 L2018.11 1213.41 L2017.53 1213.41 L2016.94 1213.41 L2016.35 1213.41 L2015.77 1213.41 L2015.18 1213.41 L2014.59 1213.41 L2014.01 1213.41 L2013.42 1213.41 L2012.83 1213.41 L2012.25 1213.41 L2011.66 1213.41 L2011.07 1213.41 L2010.49 1213.41 L2009.9 1213.41 L2009.32 1213.41 L2008.73 1213.41 L2008.14 1213.41 L2007.56 1213.41 L2006.97 1213.41 L2006.38 1213.41 L2005.8 1213.41 L2005.21 1213.41 L2004.62 1213.41 L2004.04 1213.41 L2003.45 1213.41 L2002.86 1213.41 L2002.28 1213.41 L2001.69 1213.41 L2001.11 1213.41 L2000.52 1213.41 L1999.93 1213.41 L1999.35 1213.41 L1998.76 1213.41 L1998.17 1213.41 L1997.59 1213.41 L1997 1213.41 L1996.41 1213.41 L1995.83 1213.41 L1995.24 1213.41 L1994.65 1213.41 L1994.07 1213.41 L1993.48 1213.41 L1992.9 1213.41 L1992.31 1213.41 L1991.72 1213.41 L1991.14 1213.41 L1990.55 1213.41 L1989.96 1213.41 L1989.38 1213.41 L1988.79 1213.41 L1988.2 1213.41 L1987.62 1213.41 L1987.03 1213.41 L1986.45 1213.41 L1985.86 1213.41 L1985.27 1213.41 L1984.69 1213.41 L1984.1 1213.41 L1983.51 1213.41 L1982.93 1213.41 L1982.34 1213.41 L1981.75 1213.41 L1981.17 1213.41 L1980.58 1213.41 L1979.99 1213.41 L1979.41 1213.41 L1978.82 1213.41 L1978.24 1213.41 L1977.65 1213.41 L1977.06 1213.41 L1976.48 1213.41 L1975.89 1213.41 L1975.3 1213.41 L1974.72 1213.41 L1974.13 1213.41 L1973.54 1213.41 L1972.96 1213.41 L1972.37 1213.41 L1971.78 1213.41 L1971.2 1213.41 L1970.61 1213.41 L1970.03 1213.41 L1969.44 1213.41 L1968.85 1213.41 L1968.27 1213.41 L1967.68 1213.41 L1967.09 1213.41 L1966.51 1213.41 L1965.92 1213.41 L1965.33 1213.41 L1964.75 1213.41 L1964.16 1213.41 L1963.58 1213.41 L1962.99 1213.41 L1962.4 1213.41 L1961.82 1213.41 L1961.23 1213.41 L1960.64 1213.41 L1960.06 1213.41 L1959.47 1213.41 L1958.88 1213.41 L1958.3 1213.41 L1957.71 1213.41 L1957.12 1213.41 L1956.54 1213.41 L1955.95 1213.41 L1955.37 1213.41 L1954.78 1213.41 L1954.19 1213.41 L1953.61 1213.41 L1953.02 1213.41 L1952.43 1213.41 L1951.85 1213.41 L1951.26 1213.41 L1950.67 1213.41 L1950.09 1213.41 L1949.5 1213.41 L1948.91 1213.41 L1948.33 1213.41 L1947.74 1213.41 L1947.16 1213.41 L1946.57 1213.41 L1945.98 1213.41 L1945.4 1213.41 L1944.81 1213.41 L1944.22 1213.41 L1943.64 1213.41 L1943.05 1213.41 L1942.46 1213.41 L1941.88 1213.41 L1941.29 1213.41 L1940.71 1213.41 L1940.12 1213.41 L1939.53 1213.41 L1938.95 1213.41 L1938.36 1213.41 L1937.77 1213.41 L1937.19 1213.41 L1936.6 1213.41 L1936.01 1213.41 L1935.43 1213.41 L1934.84 1213.41 L1934.25 1213.41 L1933.67 1213.41 L1933.08 1213.41 L1932.5 1213.41 L1931.91 1213.41 L1931.32 1213.41 L1930.74 1213.41 L1930.15 1213.41 L1929.56 1213.41 L1928.98 1213.41 L1928.39 1213.41 L1927.8 1213.41 L1927.22 1213.41 L1926.63 1213.41 L1926.04 1213.41 L1925.46 1213.41 L1924.87 1213.41 L1924.29 1213.41 L1923.7 1213.41 L1923.11 1213.41 L1922.53 1213.41 L1921.94 1213.41 L1921.35 1213.41 L1920.77 1213.41 L1920.18 1213.41 L1919.59 1213.41 L1919.01 1213.41 L1918.42 1213.41 L1917.83 1213.41 L1917.25 1213.41 L1916.66 1213.41 L1916.08 1213.41 L1915.49 1213.41 L1914.9 1213.41 L1914.32 1213.41 L1913.73 1213.41 L1913.14 1213.41 L1912.56 1213.41 L1911.97 1213.41 L1911.38 1213.41 L1910.8 1213.41 L1910.21 1213.41 L1909.63 1213.41 L1909.04 1213.41 L1908.45 1213.41 L1907.87 1213.41 L1907.28 1213.41 L1906.69 1213.41 L1906.11 1213.41 L1905.52 1213.41 L1904.93 1213.41 L1904.35 1213.41 L1903.76 1213.41 L1903.17 1213.41 L1902.59 1213.41 L1902 1213.41 L1901.42 1213.41 L1900.83 1213.41 L1900.24 1213.41 L1899.66 1213.41 L1899.07 1213.41 L1898.48 1213.41 L1897.9 1213.41 L1897.31 1213.41 L1896.72 1213.41 L1896.14 1213.41 L1895.55 1213.41 L1894.96 1213.41 L1894.38 1213.41 L1893.79 1213.41 L1893.21 1213.41 L1892.62 1213.41 L1892.03 1213.41 L1891.45 1213.41 L1890.86 1213.41 L1890.27 1213.41 L1889.69 1213.41 L1889.1 1213.41 L1888.51 1213.41 L1887.93 1213.41 L1887.34 1213.41 L1886.76 1213.41 L1886.17 1213.41 L1885.58 1213.41 L1885 1213.41 L1884.41 1213.41 L1883.82 1213.41 L1883.24 1213.41 L1882.65 1213.41 L1882.06 1213.41 L1881.48 1213.41 L1880.89 1213.41 L1880.3 1213.41 L1879.72 1213.41 L1879.13 1213.41 L1878.55 1213.41 L1877.96 1213.41 L1877.37 1213.41 L1876.79 1213.41 L1876.2 1213.41 L1875.61 1213.41 L1875.03 1213.41 L1874.44 1213.41 L1873.85 1213.41 L1873.27 1213.41 L1872.68 1213.41 L1872.09 1213.41 L1871.51 1213.41 L1870.92 1213.41 L1870.34 1213.41 L1869.75 1213.41 L1869.16 1213.41 L1868.58 1213.41 L1867.99 1213.41 L1867.4 1213.41 L1866.82 1213.41 L1866.23 1213.41 L1865.64 1213.41 L1865.06 1213.41 L1864.47 1213.41 L1863.88 1213.41 L1863.3 1213.41 L1862.71 1213.41 L1862.13 1213.41 L1861.54 1213.41 L1860.95 1213.41 L1860.37 1213.41 L1859.78 1213.41 L1859.19 1213.41 L1858.61 1213.41 L1858.02 1213.41 L1857.43 1213.41 L1856.85 1213.41 L1856.26 1213.41 L1855.68 1213.41 L1855.09 1213.41 L1854.5 1213.41 L1853.92 1213.41 L1853.33 1213.41 L1852.74 1213.41 L1852.16 1213.41 L1851.57 1213.41 L1850.98 1213.41 L1850.4 1213.41 L1849.81 1213.41 L1849.22 1213.41 L1848.64 1213.41 L1848.05 1213.41 L1847.47 1213.41 L1846.88 1213.41 L1846.29 1213.41 L1845.71 1213.41 L1845.12 1213.41 L1844.53 1213.41 L1843.95 1213.41 L1843.36 1213.41 L1842.77 1213.41 L1842.19 1213.41 L1841.6 1213.41 L1841.01 1213.41 L1840.43 1213.41 L1839.84 1213.41 L1839.26 1213.41 L1838.67 1213.41 L1838.08 1213.41 L1837.5 1213.41 L1836.91 1213.41 L1836.32 1213.41 L1835.74 1213.41 L1835.15 1213.41 L1834.56 1213.41 L1833.98 1213.41 L1833.39 1213.41 L1832.81 1213.41 L1832.22 1213.41 L1831.63 1213.41 L1831.05 1213.41 L1830.46 1213.41 L1829.87 1213.41 L1829.29 1213.41 L1828.7 1213.41 L1828.11 1213.41 L1827.53 1213.41 L1826.94 1213.41 L1826.35 1213.41 L1825.77 1213.41 L1825.18 1213.41 L1824.6 1213.41 L1824.01 1213.41 L1823.42 1213.41 L1822.84 1213.41 L1822.25 1213.41 L1821.66 1213.41 L1821.08 1213.41 L1820.49 1213.41 L1819.9 1213.41 L1819.32 1213.41 L1818.73 1213.41 L1818.14 1213.41 L1817.56 1213.41 L1816.97 1213.41 L1816.39 1213.41 L1815.8 1213.41 L1815.21 1213.41 L1814.63 1213.41 L1814.04 1213.41 L1813.45 1213.41 L1812.87 1213.41 L1812.28 1213.41 L1811.69 1213.41 L1811.11 1213.41 L1810.52 1213.41 L1809.94 1213.41 L1809.35 1213.41 L1808.76 1213.41 L1808.18 1213.41 L1807.59 1213.41 L1807 1213.41 L1806.42 1213.41 L1805.83 1213.41 L1805.24 1213.41 L1804.66 1213.41 L1804.07 1213.41 L1803.48 1213.41 L1802.9 1213.41 L1802.31 1213.41 L1801.73 1213.41 L1801.14 1213.41 L1800.55 1213.41 L1799.97 1213.41 L1799.38 1213.41 L1798.79 1213.41 L1798.21 1213.41 L1797.62 1213.41 L1797.03 1213.41 L1796.45 1213.41 L1795.86 1213.41 L1795.27 1213.41 L1794.69 1213.41 L1794.1 1213.41 L1793.52 1213.41 L1792.93 1213.41 L1792.34 1213.41 L1791.76 1213.41 L1791.17 1213.41 L1790.58 1213.41 L1790 1213.41 L1789.41 1213.41 L1788.82 1213.41 L1788.24 1213.41 L1787.65 1213.41 L1787.06 1213.41 L1786.48 1213.41 L1785.89 1213.41 L1785.31 1213.41 L1784.72 1213.41 L1784.13 1213.41 L1783.55 1213.41 L1782.96 1213.41 L1782.37 1213.41 L1781.79 1213.41 L1781.2 1213.41 L1780.61 1213.41 L1780.03 1213.41 L1779.44 1213.41 L1778.86 1213.41 L1778.27 1213.41 L1777.68 1213.41 L1777.1 1213.41 L1776.51 1213.41 L1775.92 1213.41 L1775.34 1213.41 L1774.75 1213.41 L1774.16 1213.41 L1773.58 1213.41 L1772.99 1213.41 L1772.4 1213.41 L1771.82 1213.41 L1771.23 1213.41 L1770.65 1213.41 L1770.06 1213.41 L1769.47 1213.41 L1768.89 1213.41 L1768.3 1213.41 L1767.71 1213.41 L1767.13 1213.41 L1766.54 1213.41 L1765.95 1213.41 L1765.37 1213.41 L1764.78 1213.41 L1764.19 1213.41 L1763.61 1213.41 L1763.02 1213.41 L1762.44 1213.41 L1761.85 1213.41 L1761.26 1213.41 L1760.68 1213.41 L1760.09 1213.41 L1759.5 1213.41 L1758.92 1213.41 L1758.33 1213.41 L1757.74 1213.41 L1757.16 1213.41 L1756.57 1213.41 L1755.99 1213.41 L1755.4 1213.41 L1754.81 1213.41 L1754.23 1213.41 L1753.64 1213.41 L1753.05 1213.41 L1752.47 1213.41 L1751.88 1213.41 L1751.29 1213.41 L1750.71 1213.41 L1750.12 1213.41 L1749.53 1213.41 L1748.95 1213.41 L1748.36 1213.41 L1747.78 1213.41 L1747.19 1213.41 L1746.6 1213.41 L1746.02 1213.41 L1745.43 1213.41 L1744.84 1213.41 L1744.26 1213.41 L1743.67 1213.41 L1743.08 1213.41 L1742.5 1213.41 L1741.91 1213.41 L1741.32 1213.41 L1740.74 1213.41 L1740.15 1213.41 L1739.57 1213.41 L1738.98 1213.41 L1738.39 1213.41 L1737.81 1213.41 L1737.22 1213.41 L1736.63 1213.41 L1736.05 1213.41 L1735.46 1213.41 L1734.87 1213.41 L1734.29 1213.41 L1733.7 1213.41 L1733.11 1213.41 L1732.53 1213.41 L1731.94 1213.41 L1731.36 1213.41 L1730.77 1213.41 L1730.18 1213.41 L1729.6 1213.41 L1729.01 1213.41 L1728.42 1213.41 L1727.84 1213.41 L1727.25 1213.41 L1726.66 1213.41 L1726.08 1213.41 L1725.49 1213.41 L1724.91 1213.41 L1724.32 1213.41 L1723.73 1213.41 L1723.15 1213.41 L1722.56 1213.41 L1721.97 1213.41 L1721.39 1213.41 L1720.8 1213.41 L1720.21 1213.41 L1719.63 1213.41 L1719.04 1213.41 L1718.45 1213.41 L1717.87 1213.41 L1717.28 1213.41 L1716.7 1213.41 L1716.11 1213.41 L1715.52 1213.41 L1714.94 1213.41 L1714.35 1213.41 L1713.76 1213.41 L1713.18 1213.41 L1712.59 1213.41 L1712 1213.41 L1711.42 1213.41 L1710.83 1213.41 L1710.24 1213.41 L1709.66 1213.41 L1709.07 1213.41 L1708.49 1213.41 L1707.9 1213.41 L1707.31 1213.41 L1706.73 1213.41 L1706.14 1213.41 L1705.55 1213.41 L1704.97 1213.41 L1704.38 1213.41 L1703.79 1213.41 L1703.21 1213.41 L1702.62 1213.41 L1702.04 1213.41 L1701.45 1213.41 L1700.86 1213.41 L1700.28 1213.41 L1699.69 1213.41 L1699.1 1213.41 L1698.52 1213.41 L1697.93 1213.41 L1697.34 1213.41 L1696.76 1213.41 L1696.17 1213.41 L1695.58 1213.41 L1695 1213.41 L1694.41 1213.41 L1693.83 1213.41 L1693.24 1213.41 L1692.65 1213.41 L1692.07 1213.41 L1691.48 1213.41 L1690.89 1213.41 L1690.31 1213.41 L1689.72 1213.41 L1689.13 1213.41 L1688.55 1213.41 L1687.96 1213.41 L1687.37 1213.41 L1686.79 1213.41 L1686.2 1213.41 L1685.62 1213.41 L1685.03 1213.41 L1684.44 1213.41 L1683.86 1213.41 L1683.27 1213.41 L1682.68 1213.41 L1682.1 1213.41 L1681.51 1213.41 L1680.92 1213.41 L1680.34 1213.41 L1679.75 1213.41 L1679.17 1213.41 L1678.58 1213.41 L1677.99 1213.41 L1677.41 1213.41 L1676.82 1213.41 L1676.23 1213.41 L1675.65 1213.41 L1675.06 1213.41 L1674.47 1213.41 L1673.89 1213.41 L1673.3 1213.41 L1672.71 1213.41 L1672.13 1213.41 L1671.54 1213.41 L1670.96 1213.41 L1670.37 1213.41 L1669.78 1213.41 L1669.2 1213.41 L1668.61 1213.41 L1668.02 1213.41 L1667.44 1213.41 L1666.85 1213.41 L1666.26 1213.41 L1665.68 1213.41 L1665.09 1213.41 L1664.5 1213.41 L1663.92 1213.41 L1663.33 1213.41 L1662.75 1213.41 L1662.16 1213.41 L1661.57 1213.41 L1660.99 1213.41 L1660.4 1213.41 L1659.81 1213.41 L1659.23 1213.41 L1658.64 1213.41 L1658.05 1213.41 L1657.47 1213.41 L1656.88 1213.41 L1656.29 1213.41 L1655.71 1213.41 L1655.12 1213.41 L1654.54 1213.41 L1653.95 1213.41 L1653.36 1213.41 L1652.78 1213.41 L1652.19 1213.41 L1651.6 1213.41 L1651.02 1213.41 L1650.43 1213.41 L1649.84 1213.41 L1649.26 1213.41 L1648.67 1213.41 L1648.09 1213.41 L1647.5 1213.41 L1646.91 1213.41 L1646.33 1213.41 L1645.74 1213.41 L1645.15 1213.41 L1644.57 1213.41 L1643.98 1213.41 L1643.39 1213.41 L1642.81 1213.41 L1642.22 1213.41 L1641.63 1213.41 L1641.05 1213.41 L1640.46 1213.41 L1639.88 1213.41 L1639.29 1213.41 L1638.7 1213.41 L1638.12 1213.41 L1637.53 1213.41 L1636.94 1213.41 L1636.36 1213.41 L1635.77 1213.41 L1635.18 1213.41 L1634.6 1213.41 L1634.01 1213.41 L1633.42 1213.41 L1632.84 1213.41 L1632.25 1213.41 L1631.67 1213.41 L1631.08 1213.41 L1630.49 1213.41 L1629.91 1213.41 L1629.32 1213.41 L1628.73 1213.41 L1628.15 1213.41 L1627.56 1213.41 L1626.97 1213.41 L1626.39 1213.41 L1625.8 1213.41 L1625.22 1213.41 L1624.63 1213.41 L1624.04 1213.41 L1623.46 1213.41 L1622.87 1213.41 L1622.28 1213.41 L1621.7 1213.41 L1621.11 1213.41 L1620.52 1213.41 L1619.94 1213.41 L1619.35 1213.41 L1618.76 1213.41 L1618.18 1213.41 L1617.59 1213.41 L1617.01 1213.41 L1616.42 1213.41 L1615.83 1213.41 L1615.25 1213.41 L1614.66 1213.41 L1614.07 1213.41 L1613.49 1213.41 L1612.9 1213.41 L1612.31 1213.41 L1611.73 1213.41 L1611.14 1213.41 L1610.55 1213.41 L1609.97 1213.41 L1609.38 1213.41 L1608.8 1213.41 L1608.21 1213.41 L1607.62 1213.41 L1607.04 1213.41 L1606.45 1213.41 L1605.86 1213.41 L1605.28 1213.41 L1604.69 1213.41 L1604.1 1213.41 L1603.52 1213.41 L1602.93 1213.41 L1602.34 1213.41 L1601.76 1213.41 L1601.17 1213.41 L1600.59 1213.41 L1600 1213.41 L1599.41 1213.41 L1598.83 1213.41 L1598.24 1213.41 L1597.65 1213.41 L1597.07 1213.41 L1596.48 1213.41 L1595.89 1213.41 L1595.31 1213.41 L1594.72 1213.41 L1594.14 1213.41 L1593.55 1213.41 L1592.96 1213.41 L1592.38 1213.41 L1591.79 1213.41 L1591.2 1213.41 L1590.62 1213.41 L1590.03 1213.41 L1589.44 1213.41 L1588.86 1213.41 L1588.27 1213.41 L1587.68 1213.41 L1587.1 1213.41 L1586.51 1213.41 L1585.93 1213.41 L1585.34 1213.41 L1584.75 1213.41 L1584.17 1213.41 L1583.58 1213.41 L1582.99 1213.41 L1582.41 1213.41 L1581.82 1213.41 L1581.23 1213.41 L1580.65 1213.41 L1580.06 1213.41 L1579.47 1213.41 L1578.89 1213.41 L1578.3 1213.41 L1577.72 1213.41 L1577.13 1213.41 L1576.54 1213.41 L1575.96 1213.41 L1575.37 1213.41 L1574.78 1213.41 L1574.2 1213.41 L1573.61 1213.41 L1573.02 1213.41 L1572.44 1213.41 L1571.85 1213.41 L1571.27 1213.41 L1570.68 1213.41 L1570.09 1213.41 L1569.51 1213.41 L1568.92 1213.41 L1568.33 1213.41 L1567.75 1213.41 L1567.16 1213.41 L1566.57 1213.41 L1565.99 1213.41 L1565.4 1213.41 L1564.81 1213.41 L1564.23 1213.41 L1563.64 1213.41 L1563.06 1213.41 L1562.47 1213.41 L1561.88 1213.41 L1561.3 1213.41 L1560.71 1213.41 L1560.12 1213.41 L1559.54 1213.41 L1558.95 1213.41 L1558.36 1213.41 L1557.78 1213.41 L1557.19 1213.41 L1556.6 1213.41 L1556.02 1213.41 L1555.43 1213.41 L1554.85 1213.41 L1554.26 1213.41 L1553.67 1213.41 L1553.09 1213.41 L1552.5 1213.41 L1551.91 1213.41 L1551.33 1213.41 L1550.74 1213.41 L1550.15 1213.41 L1549.57 1213.41 L1548.98 1213.41 L1548.4 1213.41 L1547.81 1213.41 L1547.22 1213.41 L1546.64 1213.41 L1546.05 1213.41 L1545.46 1213.41 L1544.88 1213.41 L1544.29 1213.41 L1543.7 1213.41 L1543.12 1213.41 L1542.53 1213.41 L1541.94 1213.41 L1541.36 1213.41 L1540.77 1213.41 L1540.19 1213.41 L1539.6 1213.41 L1539.01 1213.41 L1538.43 1213.41 L1537.84 1213.41 L1537.25 1213.41 L1536.67 1213.41 L1536.08 1213.41 L1535.49 1213.41 L1534.91 1213.41 L1534.32 1213.41 L1533.73 1213.41 L1533.15 1213.41 L1532.56 1213.41 L1531.98 1213.41 L1531.39 1213.41 L1530.8 1213.41 L1530.22 1213.41 L1529.63 1213.41 L1529.04 1213.41 L1528.46 1213.41 L1527.87 1213.41 L1527.28 1213.41 L1526.7 1213.41 L1526.11 1213.41 L1525.52 1213.41 L1524.94 1213.41 L1524.35 1213.41 L1523.77 1213.41 L1523.18 1213.41 L1522.59 1213.41 L1522.01 1213.41 L1521.42 1213.41 L1520.83 1213.41 L1520.25 1213.41 L1519.66 1213.41 L1519.07 1213.41 L1518.49 1213.41 L1517.9 1213.41 L1517.32 1213.41 L1516.73 1213.41 L1516.14 1213.41 L1515.56 1213.41 L1514.97 1213.41 L1514.38 1213.41 L1513.8 1213.41 L1513.21 1213.41 L1512.62 1213.41 L1512.04 1213.41 L1511.45 1213.41 L1510.86 1213.41 L1510.28 1213.41 L1509.69 1213.41 L1509.11 1213.41 L1508.52 1213.41 L1507.93 1213.41 L1507.35 1213.41 L1506.76 1213.41 L1506.17 1213.41 L1505.59 1213.41 L1505 1213.41 L1504.41 1213.41 L1503.83 1213.41 L1503.24 1213.41 L1502.65 1213.41 L1502.07 1213.41 L1501.48 1213.41 L1500.9 1213.41 L1500.31 1213.41 L1499.72 1213.41 L1499.14 1213.41 L1498.55 1213.41 L1497.96 1213.41 L1497.38 1213.41 L1496.79 1213.41 L1496.2 1213.41 L1495.62 1213.41 L1495.03 1213.41 L1494.45 1213.41 L1493.86 1213.41 L1493.27 1213.41 L1492.69 1213.41 L1492.1 1213.41 L1491.51 1213.41 L1490.93 1213.41 L1490.34 1213.41 L1489.75 1213.41 L1489.17 1213.41 L1488.58 1213.41 L1487.99 1213.41 L1487.41 1213.41 L1486.82 1213.41 L1486.24 1213.41 L1485.65 1213.41 L1485.06 1213.41 L1484.48 1213.41 L1483.89 1213.41 L1483.3 1213.41 L1482.72 1213.41 L1482.13 1213.41 L1481.54 1213.41 L1480.96 1213.41 L1480.37 1213.41 L1479.78 1213.41 L1479.2 1213.41 L1478.61 1213.41 L1478.03 1213.41 L1477.44 1213.41 L1476.85 1213.41 L1476.27 1213.41 L1475.68 1213.41 L1475.09 1213.41 L1474.51 1213.41 L1473.92 1213.41 L1473.33 1213.41 L1472.75 1213.41 L1472.16 1213.41 L1471.57 1213.41 L1470.99 1213.41 L1470.4 1213.41 L1469.82 1213.41 L1469.23 1213.41 L1468.64 1213.41 L1468.06 1213.41 L1467.47 1213.41 L1466.88 1213.41 L1466.3 1213.41 L1465.71 1213.41 L1465.12 1213.41 L1464.54 1213.41 L1463.95 1213.41 L1463.37 1213.41 L1462.78 1213.41 L1462.19 1213.41 L1461.61 1213.41 L1461.02 1213.41 L1460.43 1213.41 L1459.85 1213.41 L1459.26 1213.41 L1458.67 1213.41 L1458.09 1213.41 L1457.5 1213.41 L1456.91 1213.41 L1456.33 1213.41 L1455.74 1213.41 L1455.16 1213.41 L1454.57 1213.41 L1453.98 1213.41 L1453.4 1213.41 L1452.81 1213.41 L1452.22 1213.41 L1451.64 1213.41 L1451.05 1213.41 L1450.46 1213.41 L1449.88 1213.41 L1449.29 1213.41 L1448.7 1213.41 L1448.12 1213.41 L1447.53 1213.41 L1446.95 1213.41 L1446.36 1213.41 L1445.77 1213.41 L1445.19 1213.41 L1444.6 1213.41 L1444.01 1213.41 L1443.43 1213.41 L1442.84 1213.41 L1442.25 1213.41 L1441.67 1213.41 L1441.08 1213.41 L1440.5 1213.41 L1439.91 1213.41 L1439.32 1213.41 L1438.74 1213.41 L1438.15 1213.41 L1437.56 1213.41 L1436.98 1213.41 L1436.39 1213.41 L1435.8 1213.41 L1435.22 1213.41 L1434.63 1213.41 L1434.04 1213.41 L1433.46 1213.41 L1432.87 1213.41 L1432.29 1213.41 L1431.7 1213.41 L1431.11 1213.41 L1430.53 1213.41 L1429.94 1213.41 L1429.35 1213.41 L1428.77 1213.41 L1428.18 1213.41 L1427.59 1213.41 L1427.01 1213.41 L1426.42 1213.41 L1425.83 1213.41 L1425.25 1213.41 L1424.66 1213.41 L1424.08 1213.41 L1423.49 1213.41 L1422.9 1213.41 L1422.32 1213.41 L1421.73 1213.41 L1421.14 1213.41 L1420.56 1213.41 L1419.97 1213.41 L1419.38 1213.41 L1418.8 1213.41 L1418.21 1213.41 L1417.63 1213.41 L1417.04 1213.41 L1416.45 1213.41 L1415.87 1213.41 L1415.28 1213.41 L1414.69 1213.41 L1414.11 1213.41 L1413.52 1213.41 L1412.93 1213.41 L1412.35 1213.41 L1411.76 1213.41 L1411.17 1213.41 L1410.59 1213.41 L1410 1213.41 L1409.42 1213.41 L1408.83 1213.41 L1408.24 1213.41 L1407.66 1213.41 L1407.07 1213.41 L1406.48 1213.41 L1405.9 1213.41 L1405.31 1213.41 L1404.72 1213.41 L1404.14 1213.41 L1403.55 1213.41 L1402.96 1213.41 L1402.38 1213.41 L1401.79 1213.41 L1401.21 1213.41 L1400.62 1213.41 L1400.03 1213.41 L1399.45 1213.41 L1398.86 1213.41 L1398.27 1213.41 L1397.69 1213.41 L1397.1 1213.41 L1396.51 1213.41 L1395.93 1213.41 L1395.34 1213.41 L1394.75 1213.41 L1394.17 1213.41 L1393.58 1213.41 L1393 1213.41 L1392.41 1213.41 L1391.82 1213.41 L1391.24 1213.41 L1390.65 1213.41 L1390.06 1213.41 L1389.48 1213.41 L1388.89 1213.41 L1388.3 1213.41 L1387.72 1213.41 L1387.13 1213.41 L1386.55 1213.41 L1385.96 1213.41 L1385.37 1213.41 L1384.79 1213.41 L1384.2 1213.41 L1383.61 1213.41 L1383.03 1213.41 L1382.44 1213.41 L1381.85 1213.41 L1381.27 1213.41 L1380.68 1213.41 L1380.09 1213.41 L1379.51 1213.41 L1378.92 1213.41 L1378.34 1213.41 L1377.75 1213.41 L1377.16 1213.41 L1376.58 1213.41 L1375.99 1213.41 L1375.4 1213.41 L1374.82 1213.41 L1374.23 1213.41 L1373.64 1213.41 L1373.06 1213.41 L1372.47 1213.41 L1371.88 1213.41 L1371.3 1213.41 L1370.71 1213.41 L1370.13 1213.41 L1369.54 1213.41 L1368.95 1213.41 L1368.37 1213.41 L1367.78 1213.41 L1367.19 1213.41 L1366.61 1213.41 L1366.02 1213.41 L1365.43 1213.41 L1364.85 1213.41 L1364.26 1213.41 L1363.68 1213.41 L1363.09 1213.41 L1362.5 1213.41 L1361.92 1213.41 L1361.33 1213.41 L1360.74 1213.41 L1360.16 1213.41 L1359.57 1213.41 L1358.98 1213.41 L1358.4 1213.41 L1357.81 1213.41 L1357.22 1213.41 L1356.64 1213.41 L1356.05 1213.41 L1355.47 1213.41 L1354.88 1213.41 L1354.29 1213.41 L1353.71 1213.41 L1353.12 1213.41 L1352.53 1213.41 L1351.95 1213.41 L1351.36 1213.41 L1350.77 1213.41 L1350.19 1213.41 L1349.6 1213.41 L1349.01 1213.41 L1348.43 1213.41 L1347.84 1213.41 L1347.26 1213.41 L1346.67 1213.41 L1346.08 1213.41 L1345.5 1213.41 L1344.91 1213.41 L1344.32 1213.41 L1343.74 1213.41 L1343.15 1213.41 L1342.56 1213.41 L1341.98 1213.41 L1341.39 1213.41 L1340.8 1213.41 L1340.22 1213.41 L1339.63 1213.41 L1339.05 1213.41 L1338.46 1213.41 L1337.87 1213.41 L1337.29 1213.41 L1336.7 1213.41 L1336.11 1213.41 L1335.53 1213.41 L1334.94 1213.41 L1334.35 1213.41 L1333.77 1213.41 L1333.18 1213.41 L1332.6 1213.41 L1332.01 1213.41 L1331.42 1213.41 L1330.84 1213.41 L1330.25 1213.41 L1329.66 1213.41 L1329.08 1213.41 L1328.49 1213.41 L1327.9 1213.41 L1327.32 1213.41 L1326.73 1213.41 L1326.14 1213.41 L1325.56 1213.41 L1324.97 1213.41 L1324.39 1213.41 L1323.8 1213.41 L1323.21 1213.41 L1322.63 1213.41 L1322.04 1213.41 L1321.45 1213.41 L1320.87 1213.41 L1320.28 1213.41 L1319.69 1213.41 L1319.11 1213.41 L1318.52 1213.41 L1317.93 1213.41 L1317.35 1213.41 L1316.76 1213.41 L1316.18 1213.41 L1315.59 1213.41 L1315 1213.41 L1314.42 1213.41 L1313.83 1213.41 L1313.24 1213.41 L1312.66 1213.41 L1312.07 1213.41 L1311.48 1213.41 L1310.9 1213.41 L1310.31 1213.41 L1309.73 1213.41 L1309.14 1213.41 L1308.55 1213.41 L1307.97 1213.41 L1307.38 1213.41 L1306.79 1213.41 L1306.21 1213.41 L1305.62 1213.41 L1305.03 1213.41 L1304.45 1213.41 L1303.86 1213.41 L1303.27 1213.41 L1302.69 1213.41 L1302.1 1213.41 L1301.52 1213.41 L1300.93 1213.41 L1300.34 1213.41 L1299.76 1213.41 L1299.17 1213.41 L1298.58 1213.41 L1298 1213.41 L1297.41 1213.41 L1296.82 1213.41 L1296.24 1213.41 L1295.65 1213.41 L1295.06 1213.41 L1294.48 1213.41 L1293.89 1213.41 L1293.31 1213.41 L1292.72 1213.41 L1292.13 1213.41 L1291.55 1213.41 L1290.96 1213.41 L1290.37 1213.41 L1289.79 1213.41 L1289.2 1213.41 L1288.61 1213.41 L1288.03 1213.41 L1287.44 1213.41 L1286.86 1213.41 L1286.27 1213.41 L1285.68 1213.41 L1285.1 1213.41 L1284.51 1213.41 L1283.92 1213.41 L1283.34 1213.41 L1282.75 1213.41 L1282.16 1213.41 L1281.58 1213.41 L1280.99 1213.41 L1280.4 1213.41 L1279.82 1213.41 L1279.23 1213.41 L1278.65 1213.41 L1278.06 1213.41 L1277.47 1213.41 L1276.89 1213.41 L1276.3 1213.41 L1275.71 1213.41 L1275.13 1213.41 L1274.54 1213.41 L1273.95 1213.41 L1273.37 1213.41 L1272.78 1213.41 L1272.19 1213.41 L1271.61 1213.41 L1271.02 1213.41 L1270.44 1213.41 L1269.85 1213.41 L1269.26 1213.41 L1268.68 1213.41 L1268.09 1213.41 L1267.5 1213.41 L1266.92 1213.41 L1266.33 1213.41 L1265.74 1213.41 L1265.16 1213.41 L1264.57 1213.41 L1263.98 1213.41 L1263.4 1213.41 L1262.81 1213.41 L1262.23 1213.41 L1261.64 1213.41 L1261.05 1213.41 L1260.47 1213.41 L1259.88 1213.41 L1259.29 1213.41 L1258.71 1213.41 L1258.12 1213.41 L1257.53 1213.41 L1256.95 1213.41 L1256.36 1213.41 L1255.78 1213.41 L1255.19 1213.41 L1254.6 1213.41 L1254.02 1213.41 L1253.43 1213.41 L1252.84 1213.41 L1252.26 1213.41 L1251.67 1213.41 L1251.08 1213.41 L1250.5 1213.41 L1249.91 1213.41 L1249.32 1213.41 L1248.74 1213.41 L1248.15 1213.41 L1247.57 1213.41 L1246.98 1213.41 L1246.39 1213.41 L1245.81 1213.41 L1245.22 1213.41 L1244.63 1213.41 L1244.05 1213.41 L1243.46 1213.41 L1242.87 1213.41 L1242.29 1213.41 L1241.7 1213.41 L1241.11 1213.41 L1240.53 1213.41 L1239.94 1213.41 L1239.36 1213.41 L1238.77 1213.41 L1238.18 1213.41 L1237.6 1213.41 L1237.01 1213.41 L1236.42 1213.41 L1235.84 1213.41 L1235.25 1213.41 L1234.66 1213.41 L1234.08 1213.41 L1233.49 1213.41 L1232.91 1213.41 L1232.32 1213.41 L1231.73 1213.41 L1231.15 1213.41 L1230.56 1213.41 L1229.97 1213.41 L1229.39 1213.41 L1228.8 1213.41 L1228.21 1213.41 L1227.63 1213.41 L1227.04 1213.41 L1226.45 1213.41 L1225.87 1213.41 L1225.28 1213.41 L1224.7 1213.41 L1224.11 1213.41 L1223.52 1213.41 L1222.94 1213.41 L1222.35 1213.41 L1221.76 1213.41 L1221.18 1213.41 L1220.59 1213.41 L1220 1213.41 L1219.42 1213.41 L1218.83 1213.41 L1218.24 1213.41 L1217.66 1213.41 L1217.07 1213.41 L1216.49 1213.41 L1215.9 1213.41 L1215.31 1213.41 L1214.73 1213.41 L1214.14 1213.41 L1213.55 1213.41 L1212.97 1213.41 L1212.38 1213.41 L1211.79 1213.41 L1211.21 1213.41 L1210.62 1213.41 L1210.03 1213.41 L1209.45 1213.41 L1208.86 1213.41 L1208.28 1213.41 L1207.69 1213.41 L1207.1 1213.41 L1206.52 1213.41 L1205.93 1213.41 L1205.34 1213.41 L1204.76 1213.41 L1204.17 1213.41 L1203.58 1213.41 L1203 1213.41 L1202.41 1213.41 L1201.83 1213.41 L1201.24 1213.41 L1200.65 1213.41 L1200.07 1213.41 L1199.48 1213.41 L1198.89 1213.41 L1198.31 1213.41 L1197.72 1213.41 L1197.13 1213.41 L1196.55 1213.41 L1195.96 1213.41 L1195.37 1213.41 L1194.79 1213.41 L1194.2 1213.41 L1193.62 1213.41 L1193.03 1213.41 L1192.44 1213.41 L1191.86 1213.41 L1191.27 1213.41 L1190.68 1213.41 L1190.1 1213.41 L1189.51 1213.41 L1188.92 1213.41 L1188.34 1213.41 L1187.75 1213.41 L1187.16 1213.41 L1186.58 1213.41 L1185.99 1213.41 L1185.41 1213.41 L1184.82 1213.41 L1184.23 1213.41 L1183.65 1213.41 L1183.06 1213.41 L1182.47 1213.41 L1181.89 1213.41 L1181.3 1213.41 L1180.71 1213.41 L1180.13 1213.41 L1179.54 1213.41 L1178.96 1213.41 L1178.37 1213.41 L1177.78 1213.41 L1177.2 1213.41 L1176.61 1213.41 L1176.02 1213.41 L1175.44 1213.41 L1174.85 1213.41 L1174.26 1213.41 L1173.68 1213.41 L1173.09 1213.41 L1172.5 1213.41 L1171.92 1213.41 L1171.33 1213.41 L1170.75 1213.41 L1170.16 1213.41 L1169.57 1213.41 L1168.99 1213.41 L1168.4 1213.41 L1167.81 1213.41 L1167.23 1213.41 L1166.64 1213.41 L1166.05 1213.41 L1165.47 1213.41 L1164.88 1213.41 L1164.29 1213.41 L1163.71 1213.41 L1163.12 1213.41 L1162.54 1213.41 L1161.95 1213.41 L1161.36 1213.41 L1160.78 1213.41 L1160.19 1213.41 L1159.6 1213.41 L1159.02 1213.41 L1158.43 1213.41 L1157.84 1213.41 L1157.26 1213.41 L1156.67 1213.41 L1156.09 1213.41 L1155.5 1213.41 L1154.91 1213.41 L1154.33 1213.41 L1153.74 1213.41 L1153.15 1213.41 L1152.57 1213.41 L1151.98 1213.41 L1151.39 1213.41 L1150.81 1213.41 L1150.22 1213.41 L1149.63 1213.41 L1149.05 1213.41 L1148.46 1213.41 L1147.88 1213.41 L1147.29 1213.41 L1146.7 1213.41 L1146.12 1213.41 L1145.53 1213.41 L1144.94 1213.41 L1144.36 1213.41 L1143.77 1213.41 L1143.18 1213.41 L1142.6 1213.41 L1142.01 1213.41 L1141.42 1213.41 L1140.84 1213.41 L1140.25 1213.41 L1139.67 1213.41 L1139.08 1213.41 L1138.49 1213.41 L1137.91 1213.41 L1137.32 1213.41 L1136.73 1213.41 L1136.15 1213.41 L1135.56 1213.41 L1134.97 1213.41 L1134.39 1213.41 L1133.8 1213.41 L1133.21 1213.41 L1132.63 1213.41 L1132.04 1213.41 L1131.46 1213.41 L1130.87 1213.41 L1130.28 1213.41 L1129.7 1213.41 L1129.11 1213.41 L1128.52 1213.41 L1127.94 1213.41 L1127.35 1213.41 L1126.76 1213.41 L1126.18 1213.41 L1125.59 1213.41 L1125.01 1213.41 L1124.42 1213.41 L1123.83 1213.41 L1123.25 1213.41 L1122.66 1213.41 L1122.07 1213.41 L1121.49 1213.41 L1120.9 1213.41 L1120.31 1213.41 L1119.73 1213.41 L1119.14 1213.41 L1118.55 1213.41 L1117.97 1213.41 L1117.38 1213.41 L1116.8 1213.41 L1116.21 1213.41 L1115.62 1213.41 L1115.04 1213.41 L1114.45 1213.41 L1113.86 1213.41 L1113.28 1213.41 L1112.69 1213.41 L1112.1 1213.41 L1111.52 1213.41 L1110.93 1213.41 L1110.34 1213.41 L1109.76 1213.41 L1109.17 1213.41 L1108.59 1213.41 L1108 1213.41 L1107.41 1213.41 L1106.83 1213.41 L1106.24 1213.41 L1105.65 1213.41 L1105.07 1213.41 L1104.48 1213.41 L1103.89 1213.41 L1103.31 1213.41 L1102.72 1213.41 L1102.14 1213.41 L1101.55 1213.41 L1100.96 1213.41 L1100.38 1213.41 L1099.79 1213.41 L1099.2 1213.41 L1098.62 1213.41 L1098.03 1213.41 L1097.44 1213.41 L1096.86 1213.41 L1096.27 1213.41 L1095.68 1213.41 L1095.1 1213.41 L1094.51 1213.41 L1093.93 1213.41 L1093.34 1213.41 L1092.75 1213.41 L1092.17 1213.41 L1091.58 1213.41 L1090.99 1213.41 L1090.41 1213.41 L1089.82 1213.41 L1089.23 1213.41 L1088.65 1213.41 L1088.06 1213.41 L1087.47 1213.41 L1086.89 1213.41 L1086.3 1213.41 L1085.72 1213.41 L1085.13 1213.41 L1084.54 1213.41 L1083.96 1213.41 L1083.37 1213.41 L1082.78 1213.41 L1082.2 1213.41 L1081.61 1213.41 L1081.02 1213.41 L1080.44 1213.41 L1079.85 1213.41 L1079.26 1213.41 L1078.68 1213.41 L1078.09 1213.41 L1077.51 1213.41 L1076.92 1213.41 L1076.33 1213.41 L1075.75 1213.41 L1075.16 1213.41 L1074.57 1213.41 L1073.99 1213.41 L1073.4 1213.41 L1072.81 1213.41 L1072.23 1213.41 L1071.64 1213.41 L1071.06 1213.41 L1070.47 1213.41 L1069.88 1213.41 L1069.3 1213.41 L1068.71 1213.41 L1068.12 1213.41 L1067.54 1213.41 L1066.95 1213.41 L1066.36 1213.41 L1065.78 1213.41 L1065.19 1213.41 L1064.6 1213.41 L1064.02 1213.41 L1063.43 1213.41 L1062.85 1213.41 L1062.26 1213.41 L1061.67 1213.41 L1061.09 1213.41 L1060.5 1213.41 L1059.91 1213.41 L1059.33 1213.41 L1058.74 1213.41 L1058.15 1213.41 L1057.57 1213.41 L1056.98 1213.41 L1056.39 1213.41 L1055.81 1213.41 L1055.22 1213.41 L1054.64 1213.41 L1054.05 1213.41 L1053.46 1213.41 L1052.88 1213.41 L1052.29 1213.41 L1051.7 1213.41 L1051.12 1213.41 L1050.53 1213.41 L1049.94 1213.41 L1049.36 1213.41 L1048.77 1213.41 L1048.19 1213.41 L1047.6 1213.41 L1047.01 1213.41 L1046.43 1213.41 L1045.84 1213.41 L1045.25 1213.41 L1044.67 1213.41 L1044.08 1213.41 L1043.49 1213.41 L1042.91 1213.41 L1042.32 1213.41 L1041.73 1213.41 L1041.15 1213.41 L1040.56 1213.41 L1039.98 1213.41 L1039.39 1213.41 L1038.8 1213.41 L1038.22 1213.41 L1037.63 1213.41 L1037.04 1213.41 L1036.46 1213.41 L1035.87 1213.41 L1035.28 1213.41 L1034.7 1213.41 L1034.11 1213.41 L1033.52 1213.41 L1032.94 1213.41 L1032.35 1213.41 L1031.77 1213.41 L1031.18 1213.41 L1030.59 1213.41 L1030.01 1213.41 L1029.42 1213.41 L1028.83 1213.41 L1028.25 1213.41 L1027.66 1213.41 L1027.07 1213.41 L1026.49 1213.41 L1025.9 1213.41 L1025.32 1213.41 L1024.73 1213.41 L1024.14 1213.41 L1023.56 1213.41 L1022.97 1213.41 L1022.38 1213.41 L1021.8 1213.41 L1021.21 1213.41 L1020.62 1213.41 L1020.04 1213.41 L1019.45 1213.41 L1018.86 1213.41 L1018.28 1213.41 L1017.69 1213.41 L1017.11 1213.41 L1016.52 1213.41 L1015.93 1213.41 L1015.35 1213.41 L1014.76 1213.41 L1014.17 1213.41 L1013.59 1213.41 L1013 1213.41 L1012.41 1213.41 L1011.83 1213.41 L1011.24 1213.41 L1010.65 1213.41 L1010.07 1213.41 L1009.48 1213.41 L1008.9 1213.41 L1008.31 1213.41 L1007.72 1213.41 L1007.14 1213.41 L1006.55 1213.41 L1005.96 1213.41 L1005.38 1213.41 L1004.79 1213.41 L1004.2 1213.41 L1003.62 1213.41 L1003.03 1213.41 L1002.44 1213.41 L1001.86 1213.41 L1001.27 1213.41 L1000.69 1213.41 L1000.1 1213.41 L999.513 1213.41 L998.926 1213.41 L998.34 1213.41 L997.754 1213.41 L997.167 1213.41 L996.581 1213.41 L995.994 1213.41 L995.408 1213.41 L994.822 1213.41 L994.235 1213.41 L993.649 1213.41 L993.062 1213.41 L992.476 1213.41 L991.889 1213.41 L991.303 1213.41 L990.717 1213.41 L990.13 1213.41 L989.544 1213.41 L988.957 1213.41 L988.371 1213.41 L987.785 1213.41 L987.198 1213.41 L986.612 1213.41 L986.025 1213.41  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip822)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1213.73 986.612,1213.73 987.198,1213.73 987.785,1213.73 988.371,1213.73 988.957,1213.73 989.544,1213.73 990.13,1213.73 990.717,1213.73 991.303,1213.73 991.889,1213.73 992.476,1213.73 993.062,1213.73 993.649,1213.73 994.235,1213.73 994.822,1213.73 995.408,1213.73 995.994,1213.73 996.581,1213.73 997.167,1213.73 997.754,1213.73 998.34,1213.73 998.926,1213.73 999.513,1213.73 1000.1,1213.73 1000.69,1213.73 1001.27,1213.73 1001.86,1213.73 1002.44,1213.73 1003.03,1213.73 1003.62,1213.73 1004.2,1213.73 1004.79,1213.73 1005.38,1213.73 1005.96,1213.73 1006.55,1213.73 1007.14,1213.73 1007.72,1213.73 1008.31,1213.73 1008.9,1213.73 1009.48,1213.73 1010.07,1213.73 1010.65,1213.73 1011.24,1213.73 1011.83,1213.73 1012.41,1213.73 1013,1213.73 1013.59,1213.73 1014.17,1213.73 1014.76,1213.73 1015.35,1213.73 1015.93,1213.73 1016.52,1213.73 1017.11,1213.73 1017.69,1213.73 1018.28,1213.73 1018.86,1213.73 1019.45,1213.73 1020.04,1213.73 1020.62,1213.73 1021.21,1213.73 1021.8,1213.73 1022.38,1213.73 1022.97,1213.73 1023.56,1213.73 1024.14,1213.73 1024.73,1213.73 1025.32,1213.73 1025.9,1213.73 1026.49,1213.73 1027.07,1213.73 1027.66,1213.73 1028.25,1213.73 1028.83,1213.73 1029.42,1213.73 1030.01,1213.73 1030.59,1213.73 1031.18,1213.73 1031.77,1213.73 1032.35,1213.73 1032.94,1213.73 1033.52,1213.73 1034.11,1213.73 1034.7,1213.73 1035.28,1213.73 1035.87,1213.73 1036.46,1213.73 1037.04,1213.73 1037.63,1213.73 1038.22,1213.73 1038.8,1213.73 1039.39,1213.73 1039.98,1213.73 1040.56,1213.73 1041.15,1213.73 1041.73,1213.73 1042.32,1213.73 1042.91,1213.73 1043.49,1213.73 1044.08,1213.73 1044.67,1213.73 1045.25,1213.73 1045.84,1213.73 1046.43,1213.73 1047.01,1213.73 1047.6,1213.73 1048.19,1213.73 1048.77,1213.73 1049.36,1213.73 1049.94,1213.73 1050.53,1213.73 1051.12,1213.73 1051.7,1213.73 1052.29,1213.73 1052.88,1213.73 1053.46,1213.73 1054.05,1213.73 1054.64,1213.73 1055.22,1213.73 1055.81,1213.73 1056.39,1213.73 1056.98,1213.73 1057.57,1213.73 1058.15,1213.73 1058.74,1213.73 1059.33,1213.73 1059.91,1213.73 1060.5,1213.73 1061.09,1213.73 1061.67,1213.73 1062.26,1213.73 1062.85,1213.73 1063.43,1213.73 1064.02,1213.73 1064.6,1213.73 1065.19,1213.73 1065.78,1213.73 1066.36,1213.73 1066.95,1213.73 1067.54,1213.73 1068.12,1213.73 1068.71,1213.73 1069.3,1213.73 1069.88,1213.73 1070.47,1213.73 1071.06,1213.73 1071.64,1213.73 1072.23,1213.73 1072.81,1213.73 1073.4,1213.73 1073.99,1213.73 1074.57,1213.73 1075.16,1213.73 1075.75,1213.73 1076.33,1213.73 1076.92,1213.73 1077.51,1213.73 1078.09,1213.73 1078.68,1213.73 1079.26,1213.73 1079.85,1213.73 1080.44,1213.73 1081.02,1213.73 1081.61,1213.73 1082.2,1213.73 1082.78,1213.73 1083.37,1213.73 1083.96,1213.73 1084.54,1213.73 1085.13,1213.73 1085.72,1213.73 1086.3,1213.73 1086.89,1213.73 1087.47,1213.73 1088.06,1213.73 1088.65,1213.73 1089.23,1213.73 1089.82,1213.73 1090.41,1213.73 1090.99,1213.73 1091.58,1213.73 1092.17,1213.73 1092.75,1213.73 1093.34,1213.73 1093.93,1213.73 1094.51,1213.73 1095.1,1213.73 1095.68,1213.73 1096.27,1213.73 1096.86,1213.73 1097.44,1213.73 1098.03,1213.73 1098.62,1213.73 1099.2,1213.73 1099.79,1213.73 1100.38,1213.73 1100.96,1213.73 1101.55,1213.73 1102.14,1213.73 1102.72,1213.73 1103.31,1213.73 1103.89,1213.73 1104.48,1213.73 1105.07,1213.73 1105.65,1213.73 1106.24,1213.73 1106.83,1213.73 1107.41,1213.73 1108,1213.73 1108.59,1213.73 1109.17,1213.73 1109.76,1213.73 1110.34,1213.73 1110.93,1213.73 1111.52,1213.73 1112.1,1213.73 1112.69,1213.73 1113.28,1213.73 1113.86,1213.73 1114.45,1213.73 1115.04,1213.73 1115.62,1213.73 1116.21,1213.73 1116.8,1213.73 1117.38,1213.73 1117.97,1213.73 1118.55,1213.73 1119.14,1213.73 1119.73,1213.73 1120.31,1213.73 1120.9,1213.73 1121.49,1213.73 1122.07,1213.73 1122.66,1213.73 1123.25,1213.73 1123.83,1213.73 1124.42,1213.73 1125.01,1213.73 1125.59,1213.73 1126.18,1213.73 1126.76,1213.73 1127.35,1213.73 1127.94,1213.73 1128.52,1213.73 1129.11,1213.73 1129.7,1213.73 1130.28,1213.73 1130.87,1213.73 1131.46,1213.73 1132.04,1213.73 1132.63,1213.73 1133.21,1213.73 1133.8,1213.73 1134.39,1213.73 1134.97,1213.73 1135.56,1213.73 1136.15,1213.73 1136.73,1213.73 1137.32,1213.73 1137.91,1213.73 1138.49,1213.73 1139.08,1213.73 1139.67,1213.73 1140.25,1213.73 1140.84,1213.73 1141.42,1213.73 1142.01,1213.73 1142.6,1213.73 1143.18,1213.73 1143.77,1213.73 1144.36,1213.73 1144.94,1213.73 1145.53,1213.73 1146.12,1213.73 1146.7,1213.73 1147.29,1213.73 1147.88,1213.73 1148.46,1213.73 1149.05,1213.73 1149.63,1213.73 1150.22,1213.73 1150.81,1213.73 1151.39,1213.73 1151.98,1213.73 1152.57,1213.73 1153.15,1213.73 1153.74,1213.73 1154.33,1213.73 1154.91,1213.73 1155.5,1213.73 1156.09,1213.73 1156.67,1213.73 1157.26,1213.73 1157.84,1213.73 1158.43,1213.73 1159.02,1213.73 1159.6,1213.73 1160.19,1213.73 1160.78,1213.73 1161.36,1213.73 1161.95,1213.73 1162.54,1213.73 1163.12,1213.73 1163.71,1213.73 1164.29,1213.73 1164.88,1213.73 1165.47,1213.73 1166.05,1213.73 1166.64,1213.73 1167.23,1213.73 1167.81,1213.73 1168.4,1213.73 1168.99,1213.73 1169.57,1213.73 1170.16,1213.73 1170.75,1213.73 1171.33,1213.73 1171.92,1213.73 1172.5,1213.73 1173.09,1213.73 1173.68,1213.73 1174.26,1213.73 1174.85,1213.73 1175.44,1213.73 1176.02,1213.73 1176.61,1213.73 1177.2,1213.73 1177.78,1213.73 1178.37,1213.73 1178.96,1213.73 1179.54,1213.73 1180.13,1213.73 1180.71,1213.73 1181.3,1213.73 1181.89,1213.73 1182.47,1213.73 1183.06,1213.73 1183.65,1213.73 1184.23,1213.73 1184.82,1213.73 1185.41,1213.73 1185.99,1213.73 1186.58,1213.73 1187.16,1213.73 1187.75,1213.73 1188.34,1213.73 1188.92,1213.73 1189.51,1213.73 1190.1,1213.73 1190.68,1213.73 1191.27,1213.73 1191.86,1213.73 1192.44,1213.73 1193.03,1213.73 1193.62,1213.73 1194.2,1213.73 1194.79,1213.73 1195.37,1213.73 1195.96,1213.73 1196.55,1213.73 1197.13,1213.73 1197.72,1213.73 1198.31,1213.73 1198.89,1213.73 1199.48,1213.73 1200.07,1213.73 1200.65,1213.73 1201.24,1213.73 1201.83,1213.73 1202.41,1213.73 1203,1213.73 1203.58,1213.73 1204.17,1213.73 1204.76,1213.73 1205.34,1213.73 1205.93,1213.73 1206.52,1213.73 1207.1,1213.73 1207.69,1213.73 1208.28,1213.73 1208.86,1213.73 1209.45,1213.73 1210.03,1213.73 1210.62,1213.73 1211.21,1213.73 1211.79,1213.73 1212.38,1213.73 1212.97,1213.73 1213.55,1213.73 1214.14,1213.73 1214.73,1213.73 1215.31,1213.73 1215.9,1213.73 1216.49,1213.73 1217.07,1213.73 1217.66,1213.73 1218.24,1213.73 1218.83,1213.73 1219.42,1213.73 1220,1213.73 1220.59,1213.73 1221.18,1213.73 1221.76,1213.73 1222.35,1213.73 1222.94,1213.73 1223.52,1213.73 1224.11,1213.73 1224.7,1213.73 1225.28,1213.73 1225.87,1213.73 1226.45,1213.73 1227.04,1213.73 1227.63,1213.73 1228.21,1213.73 1228.8,1213.73 1229.39,1213.73 1229.97,1213.73 1230.56,1213.73 1231.15,1213.73 1231.73,1213.73 1232.32,1213.73 1232.91,1213.73 1233.49,1213.73 1234.08,1213.73 1234.66,1213.73 1235.25,1213.73 1235.84,1213.73 1236.42,1213.73 1237.01,1213.73 1237.6,1213.73 1238.18,1213.73 1238.77,1213.73 1239.36,1213.73 1239.94,1213.73 1240.53,1213.73 1241.11,1213.73 1241.7,1213.73 1242.29,1213.73 1242.87,1213.73 1243.46,1213.73 1244.05,1213.73 1244.63,1213.73 1245.22,1213.73 1245.81,1213.73 1246.39,1213.73 1246.98,1213.73 1247.57,1213.73 1248.15,1213.73 1248.74,1213.73 1249.32,1213.73 1249.91,1213.73 1250.5,1213.73 1251.08,1213.73 1251.67,1213.73 1252.26,1213.73 1252.84,1213.73 1253.43,1213.73 1254.02,1213.73 1254.6,1213.73 1255.19,1213.73 1255.78,1213.73 1256.36,1213.73 1256.95,1213.73 1257.53,1213.73 1258.12,1213.73 1258.71,1213.73 1259.29,1213.73 1259.88,1213.73 1260.47,1213.73 1261.05,1213.73 1261.64,1213.73 1262.23,1213.73 1262.81,1213.73 1263.4,1213.73 1263.98,1213.73 1264.57,1213.73 1265.16,1213.73 1265.74,1213.73 1266.33,1213.73 1266.92,1213.73 1267.5,1213.73 1268.09,1213.73 1268.68,1213.73 1269.26,1213.73 1269.85,1213.73 1270.44,1213.73 1271.02,1213.73 1271.61,1213.73 1272.19,1213.73 1272.78,1213.73 1273.37,1213.73 1273.95,1213.73 1274.54,1213.73 1275.13,1213.73 1275.71,1213.73 1276.3,1213.73 1276.89,1213.73 1277.47,1213.73 1278.06,1213.73 1278.65,1213.73 1279.23,1213.73 1279.82,1213.73 1280.4,1213.73 1280.99,1213.73 1281.58,1213.73 1282.16,1213.73 1282.75,1213.73 1283.34,1213.73 1283.92,1213.73 1284.51,1213.73 1285.1,1213.73 1285.68,1213.73 1286.27,1213.73 1286.86,1213.73 1287.44,1213.73 1288.03,1213.73 1288.61,1213.73 1289.2,1213.73 1289.79,1213.73 1290.37,1213.73 1290.96,1213.73 1291.55,1213.73 1292.13,1213.73 1292.72,1213.73 1293.31,1213.73 1293.89,1213.73 1294.48,1213.73 1295.06,1213.73 1295.65,1213.73 1296.24,1213.73 1296.82,1213.73 1297.41,1213.73 1298,1213.73 1298.58,1213.73 1299.17,1213.73 1299.76,1213.73 1300.34,1213.73 1300.93,1213.73 1301.52,1213.73 1302.1,1213.73 1302.69,1213.73 1303.27,1213.73 1303.86,1213.73 1304.45,1213.73 1305.03,1213.73 1305.62,1213.73 1306.21,1213.73 1306.79,1213.73 1307.38,1213.73 1307.97,1213.73 1308.55,1213.73 1309.14,1213.73 1309.73,1213.73 1310.31,1213.73 1310.9,1213.73 1311.48,1213.73 1312.07,1213.73 1312.66,1213.73 1313.24,1213.73 1313.83,1213.73 1314.42,1213.73 1315,1213.73 1315.59,1213.73 1316.18,1213.73 1316.76,1213.73 1317.35,1213.73 1317.93,1213.73 1318.52,1213.73 1319.11,1213.73 1319.69,1213.73 1320.28,1213.73 1320.87,1213.73 1321.45,1213.73 1322.04,1213.73 1322.63,1213.73 1323.21,1213.73 1323.8,1213.73 1324.39,1213.73 1324.97,1213.73 1325.56,1213.73 1326.14,1213.73 1326.73,1213.73 1327.32,1213.73 1327.9,1213.73 1328.49,1213.73 1329.08,1213.73 1329.66,1213.73 1330.25,1213.73 1330.84,1213.73 1331.42,1213.73 1332.01,1213.73 1332.6,1213.73 1333.18,1213.73 1333.77,1213.73 1334.35,1213.73 1334.94,1213.73 1335.53,1213.73 1336.11,1213.73 1336.7,1213.73 1337.29,1213.73 1337.87,1213.73 1338.46,1213.73 1339.05,1213.73 1339.63,1213.73 1340.22,1213.73 1340.8,1213.73 1341.39,1213.73 1341.98,1213.73 1342.56,1213.73 1343.15,1213.73 1343.74,1213.73 1344.32,1213.73 1344.91,1213.73 1345.5,1213.73 1346.08,1213.73 1346.67,1213.73 1347.26,1213.73 1347.84,1213.73 1348.43,1213.73 1349.01,1213.73 1349.6,1213.73 1350.19,1213.73 1350.77,1213.73 1351.36,1213.73 1351.95,1213.73 1352.53,1213.73 1353.12,1213.73 1353.71,1213.73 1354.29,1213.73 1354.88,1213.73 1355.47,1213.73 1356.05,1213.73 1356.64,1213.73 1357.22,1213.73 1357.81,1213.73 1358.4,1213.73 1358.98,1213.73 1359.57,1213.73 1360.16,1213.73 1360.74,1213.73 1361.33,1213.73 1361.92,1213.73 1362.5,1213.73 1363.09,1213.73 1363.68,1213.73 1364.26,1213.73 1364.85,1213.73 1365.43,1213.73 1366.02,1213.73 1366.61,1213.73 1367.19,1213.73 1367.78,1213.73 1368.37,1213.73 1368.95,1213.73 1369.54,1213.73 1370.13,1213.73 1370.71,1213.73 1371.3,1213.73 1371.88,1213.73 1372.47,1213.73 1373.06,1213.73 1373.64,1213.73 1374.23,1213.73 1374.82,1213.73 1375.4,1213.73 1375.99,1213.73 1376.58,1213.73 1377.16,1213.73 1377.75,1213.73 1378.34,1213.73 1378.92,1213.73 1379.51,1213.73 1380.09,1213.73 1380.68,1213.73 1381.27,1213.73 1381.85,1213.73 1382.44,1213.73 1383.03,1213.73 1383.61,1213.73 1384.2,1213.73 1384.79,1213.73 1385.37,1213.73 1385.96,1213.73 1386.55,1213.73 1387.13,1213.73 1387.72,1213.73 1388.3,1213.73 1388.89,1213.73 1389.48,1213.73 1390.06,1213.73 1390.65,1213.73 1391.24,1213.73 1391.82,1213.73 1392.41,1213.73 1393,1213.73 1393.58,1213.73 1394.17,1213.73 1394.75,1213.73 1395.34,1213.73 1395.93,1213.73 1396.51,1213.73 1397.1,1213.73 1397.69,1213.73 1398.27,1213.73 1398.86,1213.73 1399.45,1213.73 1400.03,1213.73 1400.62,1213.73 1401.21,1213.73 1401.79,1213.73 1402.38,1213.73 1402.96,1213.73 1403.55,1213.73 1404.14,1213.73 1404.72,1213.73 1405.31,1213.73 1405.9,1213.73 1406.48,1213.73 1407.07,1213.73 1407.66,1213.73 1408.24,1213.73 1408.83,1213.73 1409.42,1213.73 1410,1213.73 1410.59,1213.73 1411.17,1213.73 1411.76,1213.73 1412.35,1213.73 1412.93,1213.73 1413.52,1213.73 1414.11,1213.73 1414.69,1213.73 1415.28,1213.73 1415.87,1213.73 1416.45,1213.73 1417.04,1213.73 1417.63,1213.73 1418.21,1213.73 1418.8,1213.73 1419.38,1213.73 1419.97,1213.73 1420.56,1213.73 1421.14,1213.73 1421.73,1213.73 1422.32,1213.73 1422.9,1213.73 1423.49,1213.73 1424.08,1213.73 1424.66,1213.73 1425.25,1213.73 1425.83,1213.73 1426.42,1213.73 1427.01,1213.73 1427.59,1213.73 1428.18,1213.73 1428.77,1213.73 1429.35,1213.73 1429.94,1213.73 1430.53,1213.73 1431.11,1213.73 1431.7,1213.73 1432.29,1213.73 1432.87,1213.73 1433.46,1213.73 1434.04,1213.73 1434.63,1213.73 1435.22,1213.73 1435.8,1213.73 1436.39,1213.73 1436.98,1213.73 1437.56,1213.73 1438.15,1213.73 1438.74,1213.73 1439.32,1213.73 1439.91,1213.73 1440.5,1213.73 1441.08,1213.73 1441.67,1213.73 1442.25,1213.73 1442.84,1213.73 1443.43,1213.73 1444.01,1213.73 1444.6,1213.73 1445.19,1213.73 1445.77,1213.73 1446.36,1213.73 1446.95,1213.73 1447.53,1213.73 1448.12,1213.73 1448.7,1213.73 1449.29,1213.73 1449.88,1213.73 1450.46,1213.73 1451.05,1213.73 1451.64,1213.73 1452.22,1213.73 1452.81,1213.73 1453.4,1213.73 1453.98,1213.73 1454.57,1213.73 1455.16,1213.73 1455.74,1213.73 1456.33,1213.73 1456.91,1213.73 1457.5,1213.73 1458.09,1213.73 1458.67,1213.73 1459.26,1213.73 1459.85,1213.73 1460.43,1213.73 1461.02,1213.73 1461.61,1213.73 1462.19,1213.73 1462.78,1213.73 1463.37,1213.73 1463.95,1213.73 1464.54,1213.73 1465.12,1213.73 1465.71,1213.73 1466.3,1213.73 1466.88,1213.73 1467.47,1213.73 1468.06,1213.73 1468.64,1213.73 1469.23,1213.73 1469.82,1213.73 1470.4,1213.73 1470.99,1213.73 1471.57,1213.73 1472.16,1213.73 1472.75,1213.73 1473.33,1213.73 1473.92,1213.73 1474.51,1213.73 1475.09,1213.73 1475.68,1213.73 1476.27,1213.73 1476.85,1213.73 1477.44,1213.73 1478.03,1213.73 1478.61,1213.73 1479.2,1213.73 1479.78,1213.73 1480.37,1213.73 1480.96,1213.73 1481.54,1213.73 1482.13,1213.73 1482.72,1213.73 1483.3,1213.73 1483.89,1213.73 1484.48,1213.73 1485.06,1213.73 1485.65,1213.73 1486.24,1213.73 1486.82,1213.73 1487.41,1213.73 1487.99,1213.73 1488.58,1213.73 1489.17,1213.73 1489.75,1213.73 1490.34,1213.73 1490.93,1213.73 1491.51,1213.73 1492.1,1213.73 1492.69,1213.73 1493.27,1213.73 1493.86,1213.73 1494.45,1213.73 1495.03,1213.73 1495.62,1213.73 1496.2,1213.73 1496.79,1213.73 1497.38,1213.73 1497.96,1213.73 1498.55,1213.73 1499.14,1213.73 1499.72,1213.73 1500.31,1213.73 1500.9,1213.73 1501.48,1213.73 1502.07,1213.73 1502.65,1213.73 1503.24,1213.73 1503.83,1213.73 1504.41,1213.73 1505,1213.73 1505.59,1213.73 1506.17,1213.73 1506.76,1213.73 1507.35,1213.73 1507.93,1213.73 1508.52,1213.73 1509.11,1213.73 1509.69,1213.73 1510.28,1213.73 1510.86,1213.73 1511.45,1213.73 1512.04,1213.73 1512.62,1213.73 1513.21,1213.73 1513.8,1213.73 1514.38,1213.73 1514.97,1213.73 1515.56,1213.73 1516.14,1213.73 1516.73,1213.73 1517.32,1213.73 1517.9,1213.73 1518.49,1213.73 1519.07,1213.73 1519.66,1213.73 1520.25,1213.73 1520.83,1213.73 1521.42,1213.73 1522.01,1213.73 1522.59,1213.73 1523.18,1213.73 1523.77,1213.73 1524.35,1213.73 1524.94,1213.73 1525.52,1213.73 1526.11,1213.73 1526.7,1213.73 1527.28,1213.73 1527.87,1213.73 1528.46,1213.73 1529.04,1213.73 1529.63,1213.73 1530.22,1213.73 1530.8,1213.73 1531.39,1213.73 1531.98,1213.73 1532.56,1213.73 1533.15,1213.73 1533.73,1213.73 1534.32,1213.73 1534.91,1213.73 1535.49,1213.73 1536.08,1213.73 1536.67,1213.73 1537.25,1213.73 1537.84,1213.73 1538.43,1213.73 1539.01,1213.73 1539.6,1213.73 1540.19,1213.73 1540.77,1213.73 1541.36,1213.73 1541.94,1213.73 1542.53,1213.73 1543.12,1213.73 1543.7,1213.73 1544.29,1213.73 1544.88,1213.73 1545.46,1213.73 1546.05,1213.73 1546.64,1213.73 1547.22,1213.73 1547.81,1213.73 1548.4,1213.73 1548.98,1213.73 1549.57,1213.73 1550.15,1213.73 1550.74,1213.73 1551.33,1213.73 1551.91,1213.73 1552.5,1213.73 1553.09,1213.73 1553.67,1213.73 1554.26,1213.73 1554.85,1213.73 1555.43,1213.73 1556.02,1213.73 1556.6,1213.73 1557.19,1213.73 1557.78,1213.73 1558.36,1213.73 1558.95,1213.73 1559.54,1213.73 1560.12,1213.73 1560.71,1213.73 1561.3,1213.73 1561.88,1213.73 1562.47,1213.73 1563.06,1213.73 1563.64,1213.73 1564.23,1213.73 1564.81,1213.73 1565.4,1213.73 1565.99,1213.73 1566.57,1213.73 1567.16,1213.73 1567.75,1213.73 1568.33,1213.73 1568.92,1213.73 1569.51,1213.73 1570.09,1213.73 1570.68,1213.73 1571.27,1213.73 1571.85,1213.73 1572.44,1213.73 1573.02,1213.73 1573.61,1213.73 1574.2,1213.73 1574.78,1213.73 1575.37,1213.73 1575.96,1213.73 1576.54,1213.73 1577.13,1213.73 1577.72,1213.73 1578.3,1213.73 1578.89,1213.73 1579.47,1213.73 1580.06,1213.73 1580.65,1213.73 1581.23,1213.73 1581.82,1213.73 1582.41,1213.73 1582.99,1213.73 1583.58,1213.73 1584.17,1213.73 1584.75,1213.73 1585.34,1213.73 1585.93,1213.73 1586.51,1213.73 1587.1,1213.73 1587.68,1213.73 1588.27,1213.73 1588.86,1213.73 1589.44,1213.73 1590.03,1213.73 1590.62,1213.73 1591.2,1213.73 1591.79,1213.73 1592.38,1213.73 1592.96,1213.73 1593.55,1213.73 1594.14,1213.73 1594.72,1213.73 1595.31,1213.73 1595.89,1213.73 1596.48,1213.73 1597.07,1213.73 1597.65,1213.73 1598.24,1213.73 1598.83,1213.73 1599.41,1213.73 1600,1213.73 1600.59,1213.73 1601.17,1213.73 1601.76,1213.73 1602.34,1213.73 1602.93,1213.73 1603.52,1213.73 1604.1,1213.73 1604.69,1213.73 1605.28,1213.73 1605.86,1213.73 1606.45,1213.73 1607.04,1213.73 1607.62,1213.73 1608.21,1213.73 1608.8,1213.73 1609.38,1213.73 1609.97,1213.73 1610.55,1213.73 1611.14,1213.73 1611.73,1213.73 1612.31,1213.73 1612.9,1213.73 1613.49,1213.73 1614.07,1213.73 1614.66,1213.73 1615.25,1213.73 1615.83,1213.73 1616.42,1213.73 1617.01,1213.73 1617.59,1213.73 1618.18,1213.73 1618.76,1213.73 1619.35,1213.73 1619.94,1213.73 1620.52,1213.73 1621.11,1213.73 1621.7,1213.73 1622.28,1213.73 1622.87,1213.73 1623.46,1213.73 1624.04,1213.73 1624.63,1213.73 1625.22,1213.73 1625.8,1213.73 1626.39,1213.73 1626.97,1213.73 1627.56,1213.73 1628.15,1213.73 1628.73,1213.73 1629.32,1213.73 1629.91,1213.73 1630.49,1213.73 1631.08,1213.73 1631.67,1213.73 1632.25,1213.73 1632.84,1213.73 1633.42,1213.73 1634.01,1213.73 1634.6,1213.73 1635.18,1213.73 1635.77,1213.73 1636.36,1213.73 1636.94,1213.73 1637.53,1213.73 1638.12,1213.73 1638.7,1213.73 1639.29,1213.73 1639.88,1213.73 1640.46,1213.73 1641.05,1213.73 1641.63,1213.73 1642.22,1213.73 1642.81,1213.73 1643.39,1213.73 1643.98,1213.73 1644.57,1213.73 1645.15,1213.73 1645.74,1213.73 1646.33,1213.73 1646.91,1213.73 1647.5,1213.73 1648.09,1213.73 1648.67,1213.73 1649.26,1213.73 1649.84,1213.73 1650.43,1213.73 1651.02,1213.73 1651.6,1213.73 1652.19,1213.73 1652.78,1213.73 1653.36,1213.73 1653.95,1213.73 1654.54,1213.73 1655.12,1213.73 1655.71,1213.73 1656.29,1213.73 1656.88,1213.73 1657.47,1213.73 1658.05,1213.73 1658.64,1213.73 1659.23,1213.73 1659.81,1213.73 1660.4,1213.73 1660.99,1213.73 1661.57,1213.73 1662.16,1213.73 1662.75,1213.73 1663.33,1213.73 1663.92,1213.73 1664.5,1213.73 1665.09,1213.73 1665.68,1213.73 1666.26,1213.73 1666.85,1213.73 1667.44,1213.73 1668.02,1213.73 1668.61,1213.73 1669.2,1213.73 1669.78,1213.73 1670.37,1213.73 1670.96,1213.73 1671.54,1213.73 1672.13,1213.73 1672.71,1213.73 1673.3,1213.73 1673.89,1213.73 1674.47,1213.73 1675.06,1213.73 1675.65,1213.73 1676.23,1213.73 1676.82,1213.73 1677.41,1213.73 1677.99,1213.73 1678.58,1213.73 1679.17,1213.73 1679.75,1213.73 1680.34,1213.73 1680.92,1213.73 1681.51,1213.73 1682.1,1213.73 1682.68,1213.73 1683.27,1213.73 1683.86,1213.73 1684.44,1213.73 1685.03,1213.73 1685.62,1213.73 1686.2,1213.73 1686.79,1213.73 1687.37,1213.73 1687.96,1213.73 1688.55,1213.73 1689.13,1213.73 1689.72,1213.73 1690.31,1213.73 1690.89,1213.73 1691.48,1213.73 1692.07,1213.73 1692.65,1213.73 1693.24,1213.73 1693.83,1213.73 1694.41,1213.73 1695,1213.73 1695.58,1213.73 1696.17,1213.73 1696.76,1213.73 1697.34,1213.73 1697.93,1213.73 1698.52,1213.73 1699.1,1213.73 1699.69,1213.73 1700.28,1213.73 1700.86,1213.73 1701.45,1213.73 1702.04,1213.73 1702.62,1213.73 1703.21,1213.73 1703.79,1213.73 1704.38,1213.73 1704.97,1213.73 1705.55,1213.73 1706.14,1213.73 1706.73,1213.73 1707.31,1213.73 1707.9,1213.73 1708.49,1213.73 1709.07,1213.73 1709.66,1213.73 1710.24,1213.73 1710.83,1213.73 1711.42,1213.73 1712,1213.73 1712.59,1213.73 1713.18,1213.73 1713.76,1213.73 1714.35,1213.73 1714.94,1213.73 1715.52,1213.73 1716.11,1213.73 1716.7,1213.73 1717.28,1213.73 1717.87,1213.73 1718.45,1213.73 1719.04,1213.73 1719.63,1213.73 1720.21,1213.73 1720.8,1213.73 1721.39,1213.73 1721.97,1213.73 1722.56,1213.73 1723.15,1213.73 1723.73,1213.73 1724.32,1213.73 1724.91,1213.73 1725.49,1213.73 1726.08,1213.73 1726.66,1213.73 1727.25,1213.73 1727.84,1213.73 1728.42,1213.73 1729.01,1213.73 1729.6,1213.73 1730.18,1213.73 1730.77,1213.73 1731.36,1213.73 1731.94,1213.73 1732.53,1213.73 1733.11,1213.73 1733.7,1213.73 1734.29,1213.73 1734.87,1213.73 1735.46,1213.73 1736.05,1213.73 1736.63,1213.73 1737.22,1213.73 1737.81,1213.73 1738.39,1213.73 1738.98,1213.73 1739.57,1213.73 1740.15,1213.73 1740.74,1213.73 1741.32,1213.73 1741.91,1213.73 1742.5,1213.73 1743.08,1213.73 1743.67,1213.73 1744.26,1213.73 1744.84,1213.73 1745.43,1213.73 1746.02,1213.73 1746.6,1213.73 1747.19,1213.73 1747.78,1213.73 1748.36,1213.73 1748.95,1213.73 1749.53,1213.73 1750.12,1213.73 1750.71,1213.73 1751.29,1213.73 1751.88,1213.73 1752.47,1213.73 1753.05,1213.73 1753.64,1213.73 1754.23,1213.73 1754.81,1213.73 1755.4,1213.73 1755.99,1213.73 1756.57,1213.73 1757.16,1213.73 1757.74,1213.73 1758.33,1213.73 1758.92,1213.73 1759.5,1213.73 1760.09,1213.73 1760.68,1213.73 1761.26,1213.73 1761.85,1213.73 1762.44,1213.73 1763.02,1213.73 1763.61,1213.73 1764.19,1213.73 1764.78,1213.73 1765.37,1213.73 1765.95,1213.73 1766.54,1213.73 1767.13,1213.73 1767.71,1213.73 1768.3,1213.73 1768.89,1213.73 1769.47,1213.73 1770.06,1213.73 1770.65,1213.73 1771.23,1213.73 1771.82,1213.73 1772.4,1213.73 1772.99,1213.73 1773.58,1213.73 1774.16,1213.73 1774.75,1213.73 1775.34,1213.73 1775.92,1213.73 1776.51,1213.73 1777.1,1213.73 1777.68,1213.73 1778.27,1213.73 1778.86,1213.73 1779.44,1213.73 1780.03,1213.73 1780.61,1213.73 1781.2,1213.73 1781.79,1213.73 1782.37,1213.73 1782.96,1213.73 1783.55,1213.73 1784.13,1213.73 1784.72,1213.73 1785.31,1213.73 1785.89,1213.73 1786.48,1213.73 1787.06,1213.73 1787.65,1213.73 1788.24,1213.73 1788.82,1213.73 1789.41,1213.73 1790,1213.73 1790.58,1213.73 1791.17,1213.73 1791.76,1213.73 1792.34,1213.73 1792.93,1213.73 1793.52,1213.73 1794.1,1213.73 1794.69,1213.73 1795.27,1213.73 1795.86,1213.73 1796.45,1213.73 1797.03,1213.73 1797.62,1213.73 1798.21,1213.73 1798.79,1213.73 1799.38,1213.73 1799.97,1213.73 1800.55,1213.73 1801.14,1213.73 1801.73,1213.73 1802.31,1213.73 1802.9,1213.73 1803.48,1213.73 1804.07,1213.73 1804.66,1213.73 1805.24,1213.73 1805.83,1213.73 1806.42,1213.73 1807,1213.73 1807.59,1213.73 1808.18,1213.73 1808.76,1213.73 1809.35,1213.73 1809.94,1213.73 1810.52,1213.73 1811.11,1213.73 1811.69,1213.73 1812.28,1213.73 1812.87,1213.73 1813.45,1213.73 1814.04,1213.73 1814.63,1213.73 1815.21,1213.73 1815.8,1213.73 1816.39,1213.73 1816.97,1213.73 1817.56,1213.73 1818.14,1213.73 1818.73,1213.73 1819.32,1213.73 1819.9,1213.73 1820.49,1213.73 1821.08,1213.73 1821.66,1213.73 1822.25,1213.73 1822.84,1213.73 1823.42,1213.73 1824.01,1213.73 1824.6,1213.73 1825.18,1213.73 1825.77,1213.73 1826.35,1213.73 1826.94,1213.73 1827.53,1213.73 1828.11,1213.73 1828.7,1213.73 1829.29,1213.73 1829.87,1213.73 1830.46,1213.73 1831.05,1213.73 1831.63,1213.73 1832.22,1213.73 1832.81,1213.73 1833.39,1213.73 1833.98,1213.73 1834.56,1213.73 1835.15,1213.73 1835.74,1213.73 1836.32,1213.73 1836.91,1213.73 1837.5,1213.73 1838.08,1213.73 1838.67,1213.73 1839.26,1213.73 1839.84,1213.73 1840.43,1213.73 1841.01,1213.73 1841.6,1213.73 1842.19,1213.73 1842.77,1213.73 1843.36,1213.73 1843.95,1213.73 1844.53,1213.73 1845.12,1213.73 1845.71,1213.73 1846.29,1213.73 1846.88,1213.73 1847.47,1213.73 1848.05,1213.73 1848.64,1213.73 1849.22,1213.73 1849.81,1213.73 1850.4,1213.73 1850.98,1213.73 1851.57,1213.73 1852.16,1213.73 1852.74,1213.73 1853.33,1213.73 1853.92,1213.73 1854.5,1213.73 1855.09,1213.73 1855.68,1213.73 1856.26,1213.73 1856.85,1213.73 1857.43,1213.73 1858.02,1213.73 1858.61,1213.73 1859.19,1213.73 1859.78,1213.73 1860.37,1213.73 1860.95,1213.73 1861.54,1213.73 1862.13,1213.73 1862.71,1213.73 1863.3,1213.73 1863.88,1213.73 1864.47,1213.73 1865.06,1213.73 1865.64,1213.73 1866.23,1213.73 1866.82,1213.73 1867.4,1213.73 1867.99,1213.73 1868.58,1213.73 1869.16,1213.73 1869.75,1213.73 1870.34,1213.73 1870.92,1213.73 1871.51,1213.73 1872.09,1213.73 1872.68,1213.73 1873.27,1213.73 1873.85,1213.73 1874.44,1213.73 1875.03,1213.73 1875.61,1213.73 1876.2,1213.73 1876.79,1213.73 1877.37,1213.73 1877.96,1213.73 1878.55,1213.73 1879.13,1213.73 1879.72,1213.73 1880.3,1213.73 1880.89,1213.73 1881.48,1213.73 1882.06,1213.73 1882.65,1213.73 1883.24,1213.73 1883.82,1213.73 1884.41,1213.73 1885,1213.73 1885.58,1213.73 1886.17,1213.73 1886.76,1213.73 1887.34,1213.73 1887.93,1213.73 1888.51,1213.73 1889.1,1213.73 1889.69,1213.73 1890.27,1213.73 1890.86,1213.73 1891.45,1213.73 1892.03,1213.73 1892.62,1213.73 1893.21,1213.73 1893.79,1213.73 1894.38,1213.73 1894.96,1213.73 1895.55,1213.73 1896.14,1213.73 1896.72,1213.73 1897.31,1213.73 1897.9,1213.73 1898.48,1213.73 1899.07,1213.73 1899.66,1213.73 1900.24,1213.73 1900.83,1213.73 1901.42,1213.73 1902,1213.73 1902.59,1213.73 1903.17,1213.73 1903.76,1213.73 1904.35,1213.73 1904.93,1213.73 1905.52,1213.73 1906.11,1213.73 1906.69,1213.73 1907.28,1213.73 1907.87,1213.73 1908.45,1213.73 1909.04,1213.73 1909.63,1213.73 1910.21,1213.73 1910.8,1213.73 1911.38,1213.73 1911.97,1213.73 1912.56,1213.73 1913.14,1213.73 1913.73,1213.73 1914.32,1213.73 1914.9,1213.73 1915.49,1213.73 1916.08,1213.73 1916.66,1213.73 1917.25,1213.73 1917.83,1213.73 1918.42,1213.73 1919.01,1213.73 1919.59,1213.73 1920.18,1213.73 1920.77,1213.73 1921.35,1213.73 1921.94,1213.73 1922.53,1213.73 1923.11,1213.73 1923.7,1213.73 1924.29,1213.73 1924.87,1213.73 1925.46,1213.73 1926.04,1213.73 1926.63,1213.73 1927.22,1213.73 1927.8,1213.73 1928.39,1213.73 1928.98,1213.73 1929.56,1213.73 1930.15,1213.73 1930.74,1213.73 1931.32,1213.73 1931.91,1213.73 1932.5,1213.73 1933.08,1213.73 1933.67,1213.73 1934.25,1213.73 1934.84,1213.73 1935.43,1213.73 1936.01,1213.73 1936.6,1213.73 1937.19,1213.73 1937.77,1213.73 1938.36,1213.73 1938.95,1213.73 1939.53,1213.73 1940.12,1213.73 1940.71,1213.73 1941.29,1213.73 1941.88,1213.73 1942.46,1213.73 1943.05,1213.73 1943.64,1213.73 1944.22,1213.73 1944.81,1213.73 1945.4,1213.73 1945.98,1213.73 1946.57,1213.73 1947.16,1213.73 1947.74,1213.73 1948.33,1213.73 1948.91,1213.73 1949.5,1213.73 1950.09,1213.73 1950.67,1213.73 1951.26,1213.73 1951.85,1213.73 1952.43,1213.73 1953.02,1213.73 1953.61,1213.73 1954.19,1213.73 1954.78,1213.73 1955.37,1213.73 1955.95,1213.73 1956.54,1213.73 1957.12,1213.73 1957.71,1213.73 1958.3,1213.73 1958.88,1213.73 1959.47,1213.73 1960.06,1213.73 1960.64,1213.73 1961.23,1213.73 1961.82,1213.73 1962.4,1213.73 1962.99,1213.73 1963.58,1213.73 1964.16,1213.73 1964.75,1213.73 1965.33,1213.73 1965.92,1213.73 1966.51,1213.73 1967.09,1213.73 1967.68,1213.73 1968.27,1213.73 1968.85,1213.73 1969.44,1213.73 1970.03,1213.73 1970.61,1213.73 1971.2,1213.73 1971.78,1213.73 1972.37,1213.73 1972.96,1213.73 1973.54,1213.73 1974.13,1213.73 1974.72,1213.73 1975.3,1213.73 1975.89,1213.73 1976.48,1213.73 1977.06,1213.73 1977.65,1213.73 1978.24,1213.73 1978.82,1213.73 1979.41,1213.73 1979.99,1213.73 1980.58,1213.73 1981.17,1213.73 1981.75,1213.73 1982.34,1213.73 1982.93,1213.73 1983.51,1213.73 1984.1,1213.73 1984.69,1213.73 1985.27,1213.73 1985.86,1213.73 1986.45,1213.73 1987.03,1213.73 1987.62,1213.73 1988.2,1213.73 1988.79,1213.73 1989.38,1213.73 1989.96,1213.73 1990.55,1213.73 1991.14,1213.73 1991.72,1213.73 1992.31,1213.73 1992.9,1213.73 1993.48,1213.73 1994.07,1213.73 1994.65,1213.73 1995.24,1213.73 1995.83,1213.73 1996.41,1213.73 1997,1213.73 1997.59,1213.73 1998.17,1213.73 1998.76,1213.73 1999.35,1213.73 1999.93,1213.73 2000.52,1213.73 2001.11,1213.73 2001.69,1213.73 2002.28,1213.73 2002.86,1213.73 2003.45,1213.73 2004.04,1213.73 2004.62,1213.73 2005.21,1213.73 2005.8,1213.73 2006.38,1213.73 2006.97,1213.73 2007.56,1213.73 2008.14,1213.73 2008.73,1213.73 2009.32,1213.73 2009.9,1213.73 2010.49,1213.73 2011.07,1213.73 2011.66,1213.73 2012.25,1213.73 2012.83,1213.73 2013.42,1213.73 2014.01,1213.73 2014.59,1213.73 2015.18,1213.73 2015.77,1213.73 2016.35,1213.73 2016.94,1213.73 2017.53,1213.73 2018.11,1213.73 2018.7,1213.73 2019.28,1213.73 2019.87,1213.73 2020.46,1213.73 2021.04,1213.73 2021.63,1213.73 2022.22,1213.73 2022.8,1213.73 2023.39,1213.73 2023.98,1213.73 2024.56,1213.73 2025.15,1213.73 2025.73,1213.73 2026.32,1213.73 2026.91,1213.73 2027.49,1213.73 2028.08,1213.73 2028.67,1213.73 2029.25,1213.73 2029.84,1213.73 2030.43,1213.73 2031.01,1213.73 2031.6,1213.73 2032.19,1213.73 2032.77,1213.73 2033.36,1213.73 2033.94,1213.73 2034.53,1213.73 2035.12,1213.73 2035.7,1213.73 2036.29,1213.73 2036.88,1213.73 2037.46,1213.73 2038.05,1213.73 2038.64,1213.73 2039.22,1213.73 2039.81,1213.73 2040.4,1213.73 2040.98,1213.73 2041.57,1213.73 2042.15,1213.73 2042.74,1213.73 2043.33,1213.73 2043.91,1213.73 2044.5,1213.73 2045.09,1213.73 2045.67,1213.73 2046.26,1213.73 2046.85,1213.73 2047.43,1213.73 2048.02,1213.73 2048.6,1213.73 2049.19,1213.73 2049.78,1213.73 2050.36,1213.73 2050.95,1213.73 2051.54,1213.73 2052.12,1213.73 2052.71,1213.73 2053.3,1213.73 2053.88,1213.73 2054.47,1213.73 2055.06,1213.73 2055.64,1213.73 2056.23,1213.73 2056.81,1213.73 2057.4,1213.73 2057.99,1213.73 2058.57,1213.73 2059.16,1213.73 2059.75,1213.73 2060.33,1213.73 2060.92,1213.73 2061.51,1213.73 2062.09,1213.73 2062.68,1213.73 2063.27,1213.73 2063.85,1213.73 2064.44,1213.73 2065.02,1213.73 2065.61,1213.73 2066.2,1213.73 2066.78,1213.73 2067.37,1213.73 2067.96,1213.73 2068.54,1213.73 2069.13,1213.73 2069.72,1213.73 2070.3,1213.73 2070.89,1213.73 2071.48,1213.73 2072.06,1213.73 2072.65,1213.73 2073.23,1213.73 2073.82,1213.73 2074.41,1213.73 2074.99,1213.73 2075.58,1213.73 2076.17,1213.73 2076.75,1213.73 2077.34,1213.73 2077.93,1213.73 2078.51,1213.73 2079.1,1213.73 2079.68,1213.73 2080.27,1213.73 2080.86,1213.73 2081.44,1213.73 2082.03,1213.73 2082.62,1213.73 2083.2,1213.73 2083.79,1213.73 2084.38,1213.73 2084.96,1213.73 2085.55,1213.73 2086.14,1213.73 2086.72,1213.73 2087.31,1213.73 2087.89,1213.73 2088.48,1213.73 2089.07,1213.73 2089.65,1213.73 2090.24,1213.73 2090.83,1213.73 2091.41,1213.73 2092,1213.73 2092.59,1213.73 2093.17,1213.73 2093.76,1213.73 2094.35,1213.73 2094.93,1213.73 2095.52,1213.73 2096.1,1213.73 2096.69,1213.73 2097.28,1213.73 2097.86,1213.73 2098.45,1213.73 2099.04,1213.73 2099.62,1213.73 2100.21,1213.73 2100.8,1213.73 2101.38,1213.73 2101.97,1213.73 2102.55,1213.73 2103.14,1213.73 2103.73,1213.73 2104.31,1213.73 2104.9,1213.73 2105.49,1213.73 2106.07,1213.73 2106.66,1213.73 2107.25,1213.73 2107.83,1213.73 2108.42,1213.73 2109.01,1213.73 2109.59,1213.73 2110.18,1213.73 2110.76,1213.73 2111.35,1213.73 2111.94,1213.73 2112.52,1213.73 2113.11,1213.73 2113.7,1213.73 2114.28,1213.73 2114.87,1213.73 2115.46,1213.73 2116.04,1213.73 2116.63,1213.73 2117.22,1213.73 2117.8,1213.73 2118.39,1213.73 2118.97,1213.73 2119.56,1213.73 2120.15,1213.73 2120.73,1213.73 2121.32,1213.73 2121.91,1213.73 2122.49,1213.73 2123.08,1213.73 2123.67,1213.73 2124.25,1213.73 2124.84,1213.73 2125.42,1213.73 2126.01,1213.73 2126.6,1213.73 2127.18,1213.73 2127.77,1213.73 2128.36,1213.73 2128.94,1213.73 2129.53,1213.73 2130.12,1213.73 2130.7,1213.73 2131.29,1213.73 2131.88,1213.73 2132.46,1213.73 2133.05,1213.73 2133.63,1213.73 2134.22,1213.73 2134.81,1213.73 2135.39,1213.73 2135.98,1213.73 2136.57,1213.73 2137.15,1213.73 2137.74,1213.73 2138.33,1213.73 2138.91,1213.73 2139.5,1213.73 2140.09,1213.73 2140.67,1213.73 2141.26,1213.73 2141.84,1213.73 2142.43,1213.73 2143.02,1213.73 2143.6,1213.73 2144.19,1213.73 2144.78,1213.73 2145.36,1213.73 2145.95,1213.73 2146.54,1213.73 2147.12,1213.73 2147.71,1213.73 2148.3,1213.73 2148.88,1213.73 2149.47,1213.73 2150.05,1213.73 2150.64,1213.73 2151.23,1213.73 2151.81,1213.73 2152.4,1213.73 2152.99,1213.73 2153.57,1213.73 2154.16,1213.73 2154.75,1213.73 2155.33,1213.73 2155.92,1213.73 2156.5,1213.73 2157.09,1213.73 2157.68,1213.73 2158.26,1213.73 \"/>\n<path clip-path=\"url(#clip822)\" d=\"M986.025 1213.56 L986.612 1213.56 L987.198 1213.56 L987.785 1213.56 L988.371 1213.56 L988.957 1213.56 L989.544 1213.56 L990.13 1213.56 L990.717 1213.56 L991.303 1213.56 L991.889 1213.56 L992.476 1213.56 L993.062 1213.56 L993.649 1213.56 L994.235 1213.56 L994.822 1213.56 L995.408 1213.56 L995.994 1213.56 L996.581 1213.56 L997.167 1213.56 L997.754 1213.56 L998.34 1213.56 L998.926 1213.56 L999.513 1213.56 L1000.1 1213.56 L1000.69 1213.56 L1001.27 1213.56 L1001.86 1213.56 L1002.44 1213.56 L1003.03 1213.56 L1003.62 1213.56 L1004.2 1213.56 L1004.79 1213.56 L1005.38 1213.56 L1005.96 1213.56 L1006.55 1213.56 L1007.14 1213.56 L1007.72 1213.56 L1008.31 1213.56 L1008.9 1213.56 L1009.48 1213.56 L1010.07 1213.56 L1010.65 1213.56 L1011.24 1213.56 L1011.83 1213.56 L1012.41 1213.56 L1013 1213.56 L1013.59 1213.56 L1014.17 1213.56 L1014.76 1213.56 L1015.35 1213.56 L1015.93 1213.56 L1016.52 1213.56 L1017.11 1213.56 L1017.69 1213.56 L1018.28 1213.56 L1018.86 1213.56 L1019.45 1213.56 L1020.04 1213.56 L1020.62 1213.56 L1021.21 1213.56 L1021.8 1213.56 L1022.38 1213.56 L1022.97 1213.56 L1023.56 1213.56 L1024.14 1213.56 L1024.73 1213.56 L1025.32 1213.56 L1025.9 1213.56 L1026.49 1213.56 L1027.07 1213.56 L1027.66 1213.56 L1028.25 1213.56 L1028.83 1213.56 L1029.42 1213.56 L1030.01 1213.56 L1030.59 1213.56 L1031.18 1213.56 L1031.77 1213.56 L1032.35 1213.56 L1032.94 1213.56 L1033.52 1213.56 L1034.11 1213.56 L1034.7 1213.56 L1035.28 1213.56 L1035.87 1213.56 L1036.46 1213.56 L1037.04 1213.56 L1037.63 1213.56 L1038.22 1213.56 L1038.8 1213.56 L1039.39 1213.56 L1039.98 1213.56 L1040.56 1213.56 L1041.15 1213.56 L1041.73 1213.56 L1042.32 1213.56 L1042.91 1213.56 L1043.49 1213.56 L1044.08 1213.56 L1044.67 1213.56 L1045.25 1213.56 L1045.84 1213.56 L1046.43 1213.56 L1047.01 1213.56 L1047.6 1213.56 L1048.19 1213.56 L1048.77 1213.56 L1049.36 1213.56 L1049.94 1213.56 L1050.53 1213.56 L1051.12 1213.56 L1051.7 1213.56 L1052.29 1213.56 L1052.88 1213.56 L1053.46 1213.56 L1054.05 1213.56 L1054.64 1213.56 L1055.22 1213.56 L1055.81 1213.56 L1056.39 1213.56 L1056.98 1213.56 L1057.57 1213.56 L1058.15 1213.56 L1058.74 1213.56 L1059.33 1213.56 L1059.91 1213.56 L1060.5 1213.56 L1061.09 1213.56 L1061.67 1213.56 L1062.26 1213.56 L1062.85 1213.56 L1063.43 1213.56 L1064.02 1213.56 L1064.6 1213.56 L1065.19 1213.56 L1065.78 1213.56 L1066.36 1213.56 L1066.95 1213.56 L1067.54 1213.56 L1068.12 1213.56 L1068.71 1213.56 L1069.3 1213.56 L1069.88 1213.56 L1070.47 1213.56 L1071.06 1213.56 L1071.64 1213.56 L1072.23 1213.56 L1072.81 1213.56 L1073.4 1213.56 L1073.99 1213.56 L1074.57 1213.56 L1075.16 1213.56 L1075.75 1213.56 L1076.33 1213.56 L1076.92 1213.56 L1077.51 1213.56 L1078.09 1213.56 L1078.68 1213.56 L1079.26 1213.56 L1079.85 1213.56 L1080.44 1213.56 L1081.02 1213.56 L1081.61 1213.56 L1082.2 1213.56 L1082.78 1213.56 L1083.37 1213.56 L1083.96 1213.56 L1084.54 1213.56 L1085.13 1213.56 L1085.72 1213.56 L1086.3 1213.56 L1086.89 1213.56 L1087.47 1213.56 L1088.06 1213.56 L1088.65 1213.56 L1089.23 1213.56 L1089.82 1213.56 L1090.41 1213.56 L1090.99 1213.56 L1091.58 1213.56 L1092.17 1213.56 L1092.75 1213.56 L1093.34 1213.56 L1093.93 1213.56 L1094.51 1213.56 L1095.1 1213.56 L1095.68 1213.56 L1096.27 1213.56 L1096.86 1213.56 L1097.44 1213.56 L1098.03 1213.56 L1098.62 1213.56 L1099.2 1213.56 L1099.79 1213.56 L1100.38 1213.56 L1100.96 1213.56 L1101.55 1213.56 L1102.14 1213.56 L1102.72 1213.56 L1103.31 1213.56 L1103.89 1213.56 L1104.48 1213.56 L1105.07 1213.56 L1105.65 1213.56 L1106.24 1213.56 L1106.83 1213.56 L1107.41 1213.56 L1108 1213.56 L1108.59 1213.56 L1109.17 1213.56 L1109.76 1213.56 L1110.34 1213.56 L1110.93 1213.56 L1111.52 1213.56 L1112.1 1213.56 L1112.69 1213.56 L1113.28 1213.56 L1113.86 1213.56 L1114.45 1213.56 L1115.04 1213.56 L1115.62 1213.56 L1116.21 1213.56 L1116.8 1213.56 L1117.38 1213.56 L1117.97 1213.56 L1118.55 1213.56 L1119.14 1213.56 L1119.73 1213.56 L1120.31 1213.56 L1120.9 1213.56 L1121.49 1213.56 L1122.07 1213.56 L1122.66 1213.56 L1123.25 1213.56 L1123.83 1213.56 L1124.42 1213.56 L1125.01 1213.56 L1125.59 1213.56 L1126.18 1213.56 L1126.76 1213.56 L1127.35 1213.56 L1127.94 1213.56 L1128.52 1213.56 L1129.11 1213.56 L1129.7 1213.56 L1130.28 1213.56 L1130.87 1213.56 L1131.46 1213.56 L1132.04 1213.56 L1132.63 1213.56 L1133.21 1213.56 L1133.8 1213.56 L1134.39 1213.56 L1134.97 1213.56 L1135.56 1213.56 L1136.15 1213.56 L1136.73 1213.56 L1137.32 1213.56 L1137.91 1213.56 L1138.49 1213.56 L1139.08 1213.56 L1139.67 1213.56 L1140.25 1213.56 L1140.84 1213.56 L1141.42 1213.56 L1142.01 1213.56 L1142.6 1213.56 L1143.18 1213.56 L1143.77 1213.56 L1144.36 1213.56 L1144.94 1213.56 L1145.53 1213.56 L1146.12 1213.56 L1146.7 1213.56 L1147.29 1213.56 L1147.88 1213.56 L1148.46 1213.56 L1149.05 1213.56 L1149.63 1213.56 L1150.22 1213.56 L1150.81 1213.56 L1151.39 1213.56 L1151.98 1213.56 L1152.57 1213.56 L1153.15 1213.56 L1153.74 1213.56 L1154.33 1213.56 L1154.91 1213.56 L1155.5 1213.56 L1156.09 1213.56 L1156.67 1213.56 L1157.26 1213.56 L1157.84 1213.56 L1158.43 1213.56 L1159.02 1213.56 L1159.6 1213.56 L1160.19 1213.56 L1160.78 1213.56 L1161.36 1213.56 L1161.95 1213.56 L1162.54 1213.56 L1163.12 1213.56 L1163.71 1213.56 L1164.29 1213.56 L1164.88 1213.56 L1165.47 1213.56 L1166.05 1213.56 L1166.64 1213.56 L1167.23 1213.56 L1167.81 1213.56 L1168.4 1213.56 L1168.99 1213.56 L1169.57 1213.56 L1170.16 1213.56 L1170.75 1213.56 L1171.33 1213.56 L1171.92 1213.56 L1172.5 1213.56 L1173.09 1213.56 L1173.68 1213.56 L1174.26 1213.56 L1174.85 1213.56 L1175.44 1213.56 L1176.02 1213.56 L1176.61 1213.56 L1177.2 1213.56 L1177.78 1213.56 L1178.37 1213.56 L1178.96 1213.56 L1179.54 1213.56 L1180.13 1213.56 L1180.71 1213.56 L1181.3 1213.56 L1181.89 1213.56 L1182.47 1213.56 L1183.06 1213.56 L1183.65 1213.56 L1184.23 1213.56 L1184.82 1213.56 L1185.41 1213.56 L1185.99 1213.56 L1186.58 1213.56 L1187.16 1213.56 L1187.75 1213.56 L1188.34 1213.56 L1188.92 1213.56 L1189.51 1213.56 L1190.1 1213.56 L1190.68 1213.56 L1191.27 1213.56 L1191.86 1213.56 L1192.44 1213.56 L1193.03 1213.56 L1193.62 1213.56 L1194.2 1213.56 L1194.79 1213.56 L1195.37 1213.56 L1195.96 1213.56 L1196.55 1213.56 L1197.13 1213.56 L1197.72 1213.56 L1198.31 1213.56 L1198.89 1213.56 L1199.48 1213.56 L1200.07 1213.56 L1200.65 1213.56 L1201.24 1213.56 L1201.83 1213.56 L1202.41 1213.56 L1203 1213.56 L1203.58 1213.56 L1204.17 1213.56 L1204.76 1213.56 L1205.34 1213.56 L1205.93 1213.56 L1206.52 1213.56 L1207.1 1213.56 L1207.69 1213.56 L1208.28 1213.56 L1208.86 1213.56 L1209.45 1213.56 L1210.03 1213.56 L1210.62 1213.56 L1211.21 1213.56 L1211.79 1213.56 L1212.38 1213.56 L1212.97 1213.56 L1213.55 1213.56 L1214.14 1213.56 L1214.73 1213.56 L1215.31 1213.56 L1215.9 1213.56 L1216.49 1213.56 L1217.07 1213.56 L1217.66 1213.56 L1218.24 1213.56 L1218.83 1213.56 L1219.42 1213.56 L1220 1213.56 L1220.59 1213.56 L1221.18 1213.56 L1221.76 1213.56 L1222.35 1213.56 L1222.94 1213.56 L1223.52 1213.56 L1224.11 1213.56 L1224.7 1213.56 L1225.28 1213.56 L1225.87 1213.56 L1226.45 1213.56 L1227.04 1213.56 L1227.63 1213.56 L1228.21 1213.56 L1228.8 1213.56 L1229.39 1213.56 L1229.97 1213.56 L1230.56 1213.56 L1231.15 1213.56 L1231.73 1213.56 L1232.32 1213.56 L1232.91 1213.56 L1233.49 1213.56 L1234.08 1213.56 L1234.66 1213.56 L1235.25 1213.56 L1235.84 1213.56 L1236.42 1213.56 L1237.01 1213.56 L1237.6 1213.56 L1238.18 1213.56 L1238.77 1213.56 L1239.36 1213.56 L1239.94 1213.56 L1240.53 1213.56 L1241.11 1213.56 L1241.7 1213.56 L1242.29 1213.56 L1242.87 1213.56 L1243.46 1213.56 L1244.05 1213.56 L1244.63 1213.56 L1245.22 1213.56 L1245.81 1213.56 L1246.39 1213.56 L1246.98 1213.56 L1247.57 1213.56 L1248.15 1213.56 L1248.74 1213.56 L1249.32 1213.56 L1249.91 1213.56 L1250.5 1213.56 L1251.08 1213.56 L1251.67 1213.56 L1252.26 1213.56 L1252.84 1213.56 L1253.43 1213.56 L1254.02 1213.56 L1254.6 1213.56 L1255.19 1213.56 L1255.78 1213.56 L1256.36 1213.56 L1256.95 1213.56 L1257.53 1213.56 L1258.12 1213.56 L1258.71 1213.56 L1259.29 1213.56 L1259.88 1213.56 L1260.47 1213.56 L1261.05 1213.56 L1261.64 1213.56 L1262.23 1213.56 L1262.81 1213.56 L1263.4 1213.56 L1263.98 1213.56 L1264.57 1213.56 L1265.16 1213.56 L1265.74 1213.56 L1266.33 1213.56 L1266.92 1213.56 L1267.5 1213.56 L1268.09 1213.56 L1268.68 1213.56 L1269.26 1213.56 L1269.85 1213.56 L1270.44 1213.56 L1271.02 1213.56 L1271.61 1213.56 L1272.19 1213.56 L1272.78 1213.56 L1273.37 1213.56 L1273.95 1213.56 L1274.54 1213.56 L1275.13 1213.56 L1275.71 1213.56 L1276.3 1213.56 L1276.89 1213.56 L1277.47 1213.56 L1278.06 1213.56 L1278.65 1213.56 L1279.23 1213.56 L1279.82 1213.56 L1280.4 1213.56 L1280.99 1213.56 L1281.58 1213.56 L1282.16 1213.56 L1282.75 1213.56 L1283.34 1213.56 L1283.92 1213.56 L1284.51 1213.56 L1285.1 1213.56 L1285.68 1213.56 L1286.27 1213.56 L1286.86 1213.56 L1287.44 1213.56 L1288.03 1213.56 L1288.61 1213.56 L1289.2 1213.56 L1289.79 1213.56 L1290.37 1213.56 L1290.96 1213.56 L1291.55 1213.56 L1292.13 1213.56 L1292.72 1213.56 L1293.31 1213.56 L1293.89 1213.56 L1294.48 1213.56 L1295.06 1213.56 L1295.65 1213.56 L1296.24 1213.56 L1296.82 1213.56 L1297.41 1213.56 L1298 1213.56 L1298.58 1213.56 L1299.17 1213.56 L1299.76 1213.56 L1300.34 1213.56 L1300.93 1213.56 L1301.52 1213.56 L1302.1 1213.56 L1302.69 1213.56 L1303.27 1213.56 L1303.86 1213.56 L1304.45 1213.56 L1305.03 1213.56 L1305.62 1213.56 L1306.21 1213.56 L1306.79 1213.56 L1307.38 1213.56 L1307.97 1213.56 L1308.55 1213.56 L1309.14 1213.56 L1309.73 1213.56 L1310.31 1213.56 L1310.9 1213.56 L1311.48 1213.56 L1312.07 1213.56 L1312.66 1213.56 L1313.24 1213.56 L1313.83 1213.56 L1314.42 1213.56 L1315 1213.56 L1315.59 1213.56 L1316.18 1213.56 L1316.76 1213.56 L1317.35 1213.56 L1317.93 1213.56 L1318.52 1213.56 L1319.11 1213.56 L1319.69 1213.56 L1320.28 1213.56 L1320.87 1213.56 L1321.45 1213.56 L1322.04 1213.56 L1322.63 1213.56 L1323.21 1213.56 L1323.8 1213.56 L1324.39 1213.56 L1324.97 1213.56 L1325.56 1213.56 L1326.14 1213.56 L1326.73 1213.56 L1327.32 1213.56 L1327.9 1213.56 L1328.49 1213.56 L1329.08 1213.56 L1329.66 1213.56 L1330.25 1213.56 L1330.84 1213.56 L1331.42 1213.56 L1332.01 1213.56 L1332.6 1213.56 L1333.18 1213.56 L1333.77 1213.56 L1334.35 1213.56 L1334.94 1213.56 L1335.53 1213.56 L1336.11 1213.56 L1336.7 1213.56 L1337.29 1213.56 L1337.87 1213.56 L1338.46 1213.56 L1339.05 1213.56 L1339.63 1213.56 L1340.22 1213.56 L1340.8 1213.56 L1341.39 1213.56 L1341.98 1213.56 L1342.56 1213.56 L1343.15 1213.56 L1343.74 1213.56 L1344.32 1213.56 L1344.91 1213.56 L1345.5 1213.56 L1346.08 1213.56 L1346.67 1213.56 L1347.26 1213.56 L1347.84 1213.56 L1348.43 1213.56 L1349.01 1213.56 L1349.6 1213.56 L1350.19 1213.56 L1350.77 1213.56 L1351.36 1213.56 L1351.95 1213.56 L1352.53 1213.56 L1353.12 1213.56 L1353.71 1213.56 L1354.29 1213.56 L1354.88 1213.56 L1355.47 1213.56 L1356.05 1213.56 L1356.64 1213.56 L1357.22 1213.56 L1357.81 1213.56 L1358.4 1213.56 L1358.98 1213.56 L1359.57 1213.56 L1360.16 1213.56 L1360.74 1213.56 L1361.33 1213.56 L1361.92 1213.56 L1362.5 1213.56 L1363.09 1213.56 L1363.68 1213.56 L1364.26 1213.56 L1364.85 1213.56 L1365.43 1213.56 L1366.02 1213.56 L1366.61 1213.56 L1367.19 1213.56 L1367.78 1213.56 L1368.37 1213.56 L1368.95 1213.56 L1369.54 1213.56 L1370.13 1213.56 L1370.71 1213.56 L1371.3 1213.56 L1371.88 1213.56 L1372.47 1213.56 L1373.06 1213.56 L1373.64 1213.56 L1374.23 1213.56 L1374.82 1213.56 L1375.4 1213.56 L1375.99 1213.56 L1376.58 1213.56 L1377.16 1213.56 L1377.75 1213.56 L1378.34 1213.56 L1378.92 1213.56 L1379.51 1213.56 L1380.09 1213.56 L1380.68 1213.56 L1381.27 1213.56 L1381.85 1213.56 L1382.44 1213.56 L1383.03 1213.56 L1383.61 1213.56 L1384.2 1213.56 L1384.79 1213.56 L1385.37 1213.56 L1385.96 1213.56 L1386.55 1213.56 L1387.13 1213.56 L1387.72 1213.56 L1388.3 1213.56 L1388.89 1213.56 L1389.48 1213.56 L1390.06 1213.56 L1390.65 1213.56 L1391.24 1213.56 L1391.82 1213.56 L1392.41 1213.56 L1393 1213.56 L1393.58 1213.56 L1394.17 1213.56 L1394.75 1213.56 L1395.34 1213.56 L1395.93 1213.56 L1396.51 1213.56 L1397.1 1213.56 L1397.69 1213.56 L1398.27 1213.56 L1398.86 1213.56 L1399.45 1213.56 L1400.03 1213.56 L1400.62 1213.56 L1401.21 1213.56 L1401.79 1213.56 L1402.38 1213.56 L1402.96 1213.56 L1403.55 1213.56 L1404.14 1213.56 L1404.72 1213.56 L1405.31 1213.56 L1405.9 1213.56 L1406.48 1213.56 L1407.07 1213.56 L1407.66 1213.56 L1408.24 1213.56 L1408.83 1213.56 L1409.42 1213.56 L1410 1213.56 L1410.59 1213.56 L1411.17 1213.56 L1411.76 1213.56 L1412.35 1213.56 L1412.93 1213.56 L1413.52 1213.56 L1414.11 1213.56 L1414.69 1213.56 L1415.28 1213.56 L1415.87 1213.56 L1416.45 1213.56 L1417.04 1213.56 L1417.63 1213.56 L1418.21 1213.56 L1418.8 1213.56 L1419.38 1213.56 L1419.97 1213.56 L1420.56 1213.56 L1421.14 1213.56 L1421.73 1213.56 L1422.32 1213.56 L1422.9 1213.56 L1423.49 1213.56 L1424.08 1213.56 L1424.66 1213.56 L1425.25 1213.56 L1425.83 1213.56 L1426.42 1213.56 L1427.01 1213.56 L1427.59 1213.56 L1428.18 1213.56 L1428.77 1213.56 L1429.35 1213.56 L1429.94 1213.56 L1430.53 1213.56 L1431.11 1213.56 L1431.7 1213.56 L1432.29 1213.56 L1432.87 1213.56 L1433.46 1213.56 L1434.04 1213.56 L1434.63 1213.56 L1435.22 1213.56 L1435.8 1213.56 L1436.39 1213.56 L1436.98 1213.56 L1437.56 1213.56 L1438.15 1213.56 L1438.74 1213.56 L1439.32 1213.56 L1439.91 1213.56 L1440.5 1213.56 L1441.08 1213.56 L1441.67 1213.56 L1442.25 1213.56 L1442.84 1213.56 L1443.43 1213.56 L1444.01 1213.56 L1444.6 1213.56 L1445.19 1213.56 L1445.77 1213.56 L1446.36 1213.56 L1446.95 1213.56 L1447.53 1213.56 L1448.12 1213.56 L1448.7 1213.56 L1449.29 1213.56 L1449.88 1213.56 L1450.46 1213.56 L1451.05 1213.56 L1451.64 1213.56 L1452.22 1213.56 L1452.81 1213.56 L1453.4 1213.56 L1453.98 1213.56 L1454.57 1213.56 L1455.16 1213.56 L1455.74 1213.56 L1456.33 1213.56 L1456.91 1213.56 L1457.5 1213.56 L1458.09 1213.56 L1458.67 1213.56 L1459.26 1213.56 L1459.85 1213.56 L1460.43 1213.56 L1461.02 1213.56 L1461.61 1213.56 L1462.19 1213.56 L1462.78 1213.56 L1463.37 1213.56 L1463.95 1213.56 L1464.54 1213.56 L1465.12 1213.56 L1465.71 1213.56 L1466.3 1213.56 L1466.88 1213.56 L1467.47 1213.56 L1468.06 1213.56 L1468.64 1213.56 L1469.23 1213.56 L1469.82 1213.56 L1470.4 1213.56 L1470.99 1213.56 L1471.57 1213.56 L1472.16 1213.56 L1472.75 1213.56 L1473.33 1213.56 L1473.92 1213.56 L1474.51 1213.56 L1475.09 1213.56 L1475.68 1213.56 L1476.27 1213.56 L1476.85 1213.56 L1477.44 1213.56 L1478.03 1213.56 L1478.61 1213.56 L1479.2 1213.56 L1479.78 1213.56 L1480.37 1213.56 L1480.96 1213.56 L1481.54 1213.56 L1482.13 1213.56 L1482.72 1213.56 L1483.3 1213.56 L1483.89 1213.56 L1484.48 1213.56 L1485.06 1213.56 L1485.65 1213.56 L1486.24 1213.56 L1486.82 1213.56 L1487.41 1213.56 L1487.99 1213.56 L1488.58 1213.56 L1489.17 1213.56 L1489.75 1213.56 L1490.34 1213.56 L1490.93 1213.56 L1491.51 1213.56 L1492.1 1213.56 L1492.69 1213.56 L1493.27 1213.56 L1493.86 1213.56 L1494.45 1213.56 L1495.03 1213.56 L1495.62 1213.56 L1496.2 1213.56 L1496.79 1213.56 L1497.38 1213.56 L1497.96 1213.56 L1498.55 1213.56 L1499.14 1213.56 L1499.72 1213.56 L1500.31 1213.56 L1500.9 1213.56 L1501.48 1213.56 L1502.07 1213.56 L1502.65 1213.56 L1503.24 1213.56 L1503.83 1213.56 L1504.41 1213.56 L1505 1213.56 L1505.59 1213.56 L1506.17 1213.56 L1506.76 1213.56 L1507.35 1213.56 L1507.93 1213.56 L1508.52 1213.56 L1509.11 1213.56 L1509.69 1213.56 L1510.28 1213.56 L1510.86 1213.56 L1511.45 1213.56 L1512.04 1213.56 L1512.62 1213.56 L1513.21 1213.56 L1513.8 1213.56 L1514.38 1213.56 L1514.97 1213.56 L1515.56 1213.56 L1516.14 1213.56 L1516.73 1213.56 L1517.32 1213.56 L1517.9 1213.56 L1518.49 1213.56 L1519.07 1213.56 L1519.66 1213.56 L1520.25 1213.56 L1520.83 1213.56 L1521.42 1213.56 L1522.01 1213.56 L1522.59 1213.56 L1523.18 1213.56 L1523.77 1213.56 L1524.35 1213.56 L1524.94 1213.56 L1525.52 1213.56 L1526.11 1213.56 L1526.7 1213.56 L1527.28 1213.56 L1527.87 1213.56 L1528.46 1213.56 L1529.04 1213.56 L1529.63 1213.56 L1530.22 1213.56 L1530.8 1213.56 L1531.39 1213.56 L1531.98 1213.56 L1532.56 1213.56 L1533.15 1213.56 L1533.73 1213.56 L1534.32 1213.56 L1534.91 1213.56 L1535.49 1213.56 L1536.08 1213.56 L1536.67 1213.56 L1537.25 1213.56 L1537.84 1213.56 L1538.43 1213.56 L1539.01 1213.56 L1539.6 1213.56 L1540.19 1213.56 L1540.77 1213.56 L1541.36 1213.56 L1541.94 1213.56 L1542.53 1213.56 L1543.12 1213.56 L1543.7 1213.56 L1544.29 1213.56 L1544.88 1213.56 L1545.46 1213.56 L1546.05 1213.56 L1546.64 1213.56 L1547.22 1213.56 L1547.81 1213.56 L1548.4 1213.56 L1548.98 1213.56 L1549.57 1213.56 L1550.15 1213.56 L1550.74 1213.56 L1551.33 1213.56 L1551.91 1213.56 L1552.5 1213.56 L1553.09 1213.56 L1553.67 1213.56 L1554.26 1213.56 L1554.85 1213.56 L1555.43 1213.56 L1556.02 1213.56 L1556.6 1213.56 L1557.19 1213.56 L1557.78 1213.56 L1558.36 1213.56 L1558.95 1213.56 L1559.54 1213.56 L1560.12 1213.56 L1560.71 1213.56 L1561.3 1213.56 L1561.88 1213.56 L1562.47 1213.56 L1563.06 1213.56 L1563.64 1213.56 L1564.23 1213.56 L1564.81 1213.56 L1565.4 1213.56 L1565.99 1213.56 L1566.57 1213.56 L1567.16 1213.56 L1567.75 1213.56 L1568.33 1213.56 L1568.92 1213.56 L1569.51 1213.56 L1570.09 1213.56 L1570.68 1213.56 L1571.27 1213.56 L1571.85 1213.56 L1572.44 1213.56 L1573.02 1213.56 L1573.61 1213.56 L1574.2 1213.56 L1574.78 1213.56 L1575.37 1213.56 L1575.96 1213.56 L1576.54 1213.56 L1577.13 1213.56 L1577.72 1213.56 L1578.3 1213.56 L1578.89 1213.56 L1579.47 1213.56 L1580.06 1213.56 L1580.65 1213.56 L1581.23 1213.56 L1581.82 1213.56 L1582.41 1213.56 L1582.99 1213.56 L1583.58 1213.56 L1584.17 1213.56 L1584.75 1213.56 L1585.34 1213.56 L1585.93 1213.56 L1586.51 1213.56 L1587.1 1213.56 L1587.68 1213.56 L1588.27 1213.56 L1588.86 1213.56 L1589.44 1213.56 L1590.03 1213.56 L1590.62 1213.56 L1591.2 1213.56 L1591.79 1213.56 L1592.38 1213.56 L1592.96 1213.56 L1593.55 1213.56 L1594.14 1213.56 L1594.72 1213.56 L1595.31 1213.56 L1595.89 1213.56 L1596.48 1213.56 L1597.07 1213.56 L1597.65 1213.56 L1598.24 1213.56 L1598.83 1213.56 L1599.41 1213.56 L1600 1213.56 L1600.59 1213.56 L1601.17 1213.56 L1601.76 1213.56 L1602.34 1213.56 L1602.93 1213.56 L1603.52 1213.56 L1604.1 1213.56 L1604.69 1213.56 L1605.28 1213.56 L1605.86 1213.56 L1606.45 1213.56 L1607.04 1213.56 L1607.62 1213.56 L1608.21 1213.56 L1608.8 1213.56 L1609.38 1213.56 L1609.97 1213.56 L1610.55 1213.56 L1611.14 1213.56 L1611.73 1213.56 L1612.31 1213.56 L1612.9 1213.56 L1613.49 1213.56 L1614.07 1213.56 L1614.66 1213.56 L1615.25 1213.56 L1615.83 1213.56 L1616.42 1213.56 L1617.01 1213.56 L1617.59 1213.56 L1618.18 1213.56 L1618.76 1213.56 L1619.35 1213.56 L1619.94 1213.56 L1620.52 1213.56 L1621.11 1213.56 L1621.7 1213.56 L1622.28 1213.56 L1622.87 1213.56 L1623.46 1213.56 L1624.04 1213.56 L1624.63 1213.56 L1625.22 1213.56 L1625.8 1213.56 L1626.39 1213.56 L1626.97 1213.56 L1627.56 1213.56 L1628.15 1213.56 L1628.73 1213.56 L1629.32 1213.56 L1629.91 1213.56 L1630.49 1213.56 L1631.08 1213.56 L1631.67 1213.56 L1632.25 1213.56 L1632.84 1213.56 L1633.42 1213.56 L1634.01 1213.56 L1634.6 1213.56 L1635.18 1213.56 L1635.77 1213.56 L1636.36 1213.56 L1636.94 1213.56 L1637.53 1213.56 L1638.12 1213.56 L1638.7 1213.56 L1639.29 1213.56 L1639.88 1213.56 L1640.46 1213.56 L1641.05 1213.56 L1641.63 1213.56 L1642.22 1213.56 L1642.81 1213.56 L1643.39 1213.56 L1643.98 1213.56 L1644.57 1213.56 L1645.15 1213.56 L1645.74 1213.56 L1646.33 1213.56 L1646.91 1213.56 L1647.5 1213.56 L1648.09 1213.56 L1648.67 1213.56 L1649.26 1213.56 L1649.84 1213.56 L1650.43 1213.56 L1651.02 1213.56 L1651.6 1213.56 L1652.19 1213.56 L1652.78 1213.56 L1653.36 1213.56 L1653.95 1213.56 L1654.54 1213.56 L1655.12 1213.56 L1655.71 1213.56 L1656.29 1213.56 L1656.88 1213.56 L1657.47 1213.56 L1658.05 1213.56 L1658.64 1213.56 L1659.23 1213.56 L1659.81 1213.56 L1660.4 1213.56 L1660.99 1213.56 L1661.57 1213.56 L1662.16 1213.56 L1662.75 1213.56 L1663.33 1213.56 L1663.92 1213.56 L1664.5 1213.56 L1665.09 1213.56 L1665.68 1213.56 L1666.26 1213.56 L1666.85 1213.56 L1667.44 1213.56 L1668.02 1213.56 L1668.61 1213.56 L1669.2 1213.56 L1669.78 1213.56 L1670.37 1213.56 L1670.96 1213.56 L1671.54 1213.56 L1672.13 1213.56 L1672.71 1213.56 L1673.3 1213.56 L1673.89 1213.56 L1674.47 1213.56 L1675.06 1213.56 L1675.65 1213.56 L1676.23 1213.56 L1676.82 1213.56 L1677.41 1213.56 L1677.99 1213.56 L1678.58 1213.56 L1679.17 1213.56 L1679.75 1213.56 L1680.34 1213.56 L1680.92 1213.56 L1681.51 1213.56 L1682.1 1213.56 L1682.68 1213.56 L1683.27 1213.56 L1683.86 1213.56 L1684.44 1213.56 L1685.03 1213.56 L1685.62 1213.56 L1686.2 1213.56 L1686.79 1213.56 L1687.37 1213.56 L1687.96 1213.56 L1688.55 1213.56 L1689.13 1213.56 L1689.72 1213.56 L1690.31 1213.56 L1690.89 1213.56 L1691.48 1213.56 L1692.07 1213.56 L1692.65 1213.56 L1693.24 1213.56 L1693.83 1213.56 L1694.41 1213.56 L1695 1213.56 L1695.58 1213.56 L1696.17 1213.56 L1696.76 1213.56 L1697.34 1213.56 L1697.93 1213.56 L1698.52 1213.56 L1699.1 1213.56 L1699.69 1213.56 L1700.28 1213.56 L1700.86 1213.56 L1701.45 1213.56 L1702.04 1213.56 L1702.62 1213.56 L1703.21 1213.56 L1703.79 1213.56 L1704.38 1213.56 L1704.97 1213.56 L1705.55 1213.56 L1706.14 1213.56 L1706.73 1213.56 L1707.31 1213.56 L1707.9 1213.56 L1708.49 1213.56 L1709.07 1213.56 L1709.66 1213.56 L1710.24 1213.56 L1710.83 1213.56 L1711.42 1213.56 L1712 1213.56 L1712.59 1213.56 L1713.18 1213.56 L1713.76 1213.56 L1714.35 1213.56 L1714.94 1213.56 L1715.52 1213.56 L1716.11 1213.56 L1716.7 1213.56 L1717.28 1213.56 L1717.87 1213.56 L1718.45 1213.56 L1719.04 1213.56 L1719.63 1213.56 L1720.21 1213.56 L1720.8 1213.56 L1721.39 1213.56 L1721.97 1213.56 L1722.56 1213.56 L1723.15 1213.56 L1723.73 1213.56 L1724.32 1213.56 L1724.91 1213.56 L1725.49 1213.56 L1726.08 1213.56 L1726.66 1213.56 L1727.25 1213.56 L1727.84 1213.56 L1728.42 1213.56 L1729.01 1213.56 L1729.6 1213.56 L1730.18 1213.56 L1730.77 1213.56 L1731.36 1213.56 L1731.94 1213.56 L1732.53 1213.56 L1733.11 1213.56 L1733.7 1213.56 L1734.29 1213.56 L1734.87 1213.56 L1735.46 1213.56 L1736.05 1213.56 L1736.63 1213.56 L1737.22 1213.56 L1737.81 1213.56 L1738.39 1213.56 L1738.98 1213.56 L1739.57 1213.56 L1740.15 1213.56 L1740.74 1213.56 L1741.32 1213.56 L1741.91 1213.56 L1742.5 1213.56 L1743.08 1213.56 L1743.67 1213.56 L1744.26 1213.56 L1744.84 1213.56 L1745.43 1213.56 L1746.02 1213.56 L1746.6 1213.56 L1747.19 1213.56 L1747.78 1213.56 L1748.36 1213.56 L1748.95 1213.56 L1749.53 1213.56 L1750.12 1213.56 L1750.71 1213.56 L1751.29 1213.56 L1751.88 1213.56 L1752.47 1213.56 L1753.05 1213.56 L1753.64 1213.56 L1754.23 1213.56 L1754.81 1213.56 L1755.4 1213.56 L1755.99 1213.56 L1756.57 1213.56 L1757.16 1213.56 L1757.74 1213.56 L1758.33 1213.56 L1758.92 1213.56 L1759.5 1213.56 L1760.09 1213.56 L1760.68 1213.56 L1761.26 1213.56 L1761.85 1213.56 L1762.44 1213.56 L1763.02 1213.56 L1763.61 1213.56 L1764.19 1213.56 L1764.78 1213.56 L1765.37 1213.56 L1765.95 1213.56 L1766.54 1213.56 L1767.13 1213.56 L1767.71 1213.56 L1768.3 1213.56 L1768.89 1213.56 L1769.47 1213.56 L1770.06 1213.56 L1770.65 1213.56 L1771.23 1213.56 L1771.82 1213.56 L1772.4 1213.56 L1772.99 1213.56 L1773.58 1213.56 L1774.16 1213.56 L1774.75 1213.56 L1775.34 1213.56 L1775.92 1213.56 L1776.51 1213.56 L1777.1 1213.56 L1777.68 1213.56 L1778.27 1213.56 L1778.86 1213.56 L1779.44 1213.56 L1780.03 1213.56 L1780.61 1213.56 L1781.2 1213.56 L1781.79 1213.56 L1782.37 1213.56 L1782.96 1213.56 L1783.55 1213.56 L1784.13 1213.56 L1784.72 1213.56 L1785.31 1213.56 L1785.89 1213.56 L1786.48 1213.56 L1787.06 1213.56 L1787.65 1213.56 L1788.24 1213.56 L1788.82 1213.56 L1789.41 1213.56 L1790 1213.56 L1790.58 1213.56 L1791.17 1213.56 L1791.76 1213.56 L1792.34 1213.56 L1792.93 1213.56 L1793.52 1213.56 L1794.1 1213.56 L1794.69 1213.56 L1795.27 1213.56 L1795.86 1213.56 L1796.45 1213.56 L1797.03 1213.56 L1797.62 1213.56 L1798.21 1213.56 L1798.79 1213.56 L1799.38 1213.56 L1799.97 1213.56 L1800.55 1213.56 L1801.14 1213.56 L1801.73 1213.56 L1802.31 1213.56 L1802.9 1213.56 L1803.48 1213.56 L1804.07 1213.56 L1804.66 1213.56 L1805.24 1213.56 L1805.83 1213.56 L1806.42 1213.56 L1807 1213.56 L1807.59 1213.56 L1808.18 1213.56 L1808.76 1213.56 L1809.35 1213.56 L1809.94 1213.56 L1810.52 1213.56 L1811.11 1213.56 L1811.69 1213.56 L1812.28 1213.56 L1812.87 1213.56 L1813.45 1213.56 L1814.04 1213.56 L1814.63 1213.56 L1815.21 1213.56 L1815.8 1213.56 L1816.39 1213.56 L1816.97 1213.56 L1817.56 1213.56 L1818.14 1213.56 L1818.73 1213.56 L1819.32 1213.56 L1819.9 1213.56 L1820.49 1213.56 L1821.08 1213.56 L1821.66 1213.56 L1822.25 1213.56 L1822.84 1213.56 L1823.42 1213.56 L1824.01 1213.56 L1824.6 1213.56 L1825.18 1213.56 L1825.77 1213.56 L1826.35 1213.56 L1826.94 1213.56 L1827.53 1213.56 L1828.11 1213.56 L1828.7 1213.56 L1829.29 1213.56 L1829.87 1213.56 L1830.46 1213.56 L1831.05 1213.56 L1831.63 1213.56 L1832.22 1213.56 L1832.81 1213.56 L1833.39 1213.56 L1833.98 1213.56 L1834.56 1213.56 L1835.15 1213.56 L1835.74 1213.56 L1836.32 1213.56 L1836.91 1213.56 L1837.5 1213.56 L1838.08 1213.56 L1838.67 1213.56 L1839.26 1213.56 L1839.84 1213.56 L1840.43 1213.56 L1841.01 1213.56 L1841.6 1213.56 L1842.19 1213.56 L1842.77 1213.56 L1843.36 1213.56 L1843.95 1213.56 L1844.53 1213.56 L1845.12 1213.56 L1845.71 1213.56 L1846.29 1213.56 L1846.88 1213.56 L1847.47 1213.56 L1848.05 1213.56 L1848.64 1213.56 L1849.22 1213.56 L1849.81 1213.56 L1850.4 1213.56 L1850.98 1213.56 L1851.57 1213.56 L1852.16 1213.56 L1852.74 1213.56 L1853.33 1213.56 L1853.92 1213.56 L1854.5 1213.56 L1855.09 1213.56 L1855.68 1213.56 L1856.26 1213.56 L1856.85 1213.56 L1857.43 1213.56 L1858.02 1213.56 L1858.61 1213.56 L1859.19 1213.56 L1859.78 1213.56 L1860.37 1213.56 L1860.95 1213.56 L1861.54 1213.56 L1862.13 1213.56 L1862.71 1213.56 L1863.3 1213.56 L1863.88 1213.56 L1864.47 1213.56 L1865.06 1213.56 L1865.64 1213.56 L1866.23 1213.56 L1866.82 1213.56 L1867.4 1213.56 L1867.99 1213.56 L1868.58 1213.56 L1869.16 1213.56 L1869.75 1213.56 L1870.34 1213.56 L1870.92 1213.56 L1871.51 1213.56 L1872.09 1213.56 L1872.68 1213.56 L1873.27 1213.56 L1873.85 1213.56 L1874.44 1213.56 L1875.03 1213.56 L1875.61 1213.56 L1876.2 1213.56 L1876.79 1213.56 L1877.37 1213.56 L1877.96 1213.56 L1878.55 1213.56 L1879.13 1213.56 L1879.72 1213.56 L1880.3 1213.56 L1880.89 1213.56 L1881.48 1213.56 L1882.06 1213.56 L1882.65 1213.56 L1883.24 1213.56 L1883.82 1213.56 L1884.41 1213.56 L1885 1213.56 L1885.58 1213.56 L1886.17 1213.56 L1886.76 1213.56 L1887.34 1213.56 L1887.93 1213.56 L1888.51 1213.56 L1889.1 1213.56 L1889.69 1213.56 L1890.27 1213.56 L1890.86 1213.56 L1891.45 1213.56 L1892.03 1213.56 L1892.62 1213.56 L1893.21 1213.56 L1893.79 1213.56 L1894.38 1213.56 L1894.96 1213.56 L1895.55 1213.56 L1896.14 1213.56 L1896.72 1213.56 L1897.31 1213.56 L1897.9 1213.56 L1898.48 1213.56 L1899.07 1213.56 L1899.66 1213.56 L1900.24 1213.56 L1900.83 1213.56 L1901.42 1213.56 L1902 1213.56 L1902.59 1213.56 L1903.17 1213.56 L1903.76 1213.56 L1904.35 1213.56 L1904.93 1213.56 L1905.52 1213.56 L1906.11 1213.56 L1906.69 1213.56 L1907.28 1213.56 L1907.87 1213.56 L1908.45 1213.56 L1909.04 1213.56 L1909.63 1213.56 L1910.21 1213.56 L1910.8 1213.56 L1911.38 1213.56 L1911.97 1213.56 L1912.56 1213.56 L1913.14 1213.56 L1913.73 1213.56 L1914.32 1213.56 L1914.9 1213.56 L1915.49 1213.56 L1916.08 1213.56 L1916.66 1213.56 L1917.25 1213.56 L1917.83 1213.56 L1918.42 1213.56 L1919.01 1213.56 L1919.59 1213.56 L1920.18 1213.56 L1920.77 1213.56 L1921.35 1213.56 L1921.94 1213.56 L1922.53 1213.56 L1923.11 1213.56 L1923.7 1213.56 L1924.29 1213.56 L1924.87 1213.56 L1925.46 1213.56 L1926.04 1213.56 L1926.63 1213.56 L1927.22 1213.56 L1927.8 1213.56 L1928.39 1213.56 L1928.98 1213.56 L1929.56 1213.56 L1930.15 1213.56 L1930.74 1213.56 L1931.32 1213.56 L1931.91 1213.56 L1932.5 1213.56 L1933.08 1213.56 L1933.67 1213.56 L1934.25 1213.56 L1934.84 1213.56 L1935.43 1213.56 L1936.01 1213.56 L1936.6 1213.56 L1937.19 1213.56 L1937.77 1213.56 L1938.36 1213.56 L1938.95 1213.56 L1939.53 1213.56 L1940.12 1213.56 L1940.71 1213.56 L1941.29 1213.56 L1941.88 1213.56 L1942.46 1213.56 L1943.05 1213.56 L1943.64 1213.56 L1944.22 1213.56 L1944.81 1213.56 L1945.4 1213.56 L1945.98 1213.56 L1946.57 1213.56 L1947.16 1213.56 L1947.74 1213.56 L1948.33 1213.56 L1948.91 1213.56 L1949.5 1213.56 L1950.09 1213.56 L1950.67 1213.56 L1951.26 1213.56 L1951.85 1213.56 L1952.43 1213.56 L1953.02 1213.56 L1953.61 1213.56 L1954.19 1213.56 L1954.78 1213.56 L1955.37 1213.56 L1955.95 1213.56 L1956.54 1213.56 L1957.12 1213.56 L1957.71 1213.56 L1958.3 1213.56 L1958.88 1213.56 L1959.47 1213.56 L1960.06 1213.56 L1960.64 1213.56 L1961.23 1213.56 L1961.82 1213.56 L1962.4 1213.56 L1962.99 1213.56 L1963.58 1213.56 L1964.16 1213.56 L1964.75 1213.56 L1965.33 1213.56 L1965.92 1213.56 L1966.51 1213.56 L1967.09 1213.56 L1967.68 1213.56 L1968.27 1213.56 L1968.85 1213.56 L1969.44 1213.56 L1970.03 1213.56 L1970.61 1213.56 L1971.2 1213.56 L1971.78 1213.56 L1972.37 1213.56 L1972.96 1213.56 L1973.54 1213.56 L1974.13 1213.56 L1974.72 1213.56 L1975.3 1213.56 L1975.89 1213.56 L1976.48 1213.56 L1977.06 1213.56 L1977.65 1213.56 L1978.24 1213.56 L1978.82 1213.56 L1979.41 1213.56 L1979.99 1213.56 L1980.58 1213.56 L1981.17 1213.56 L1981.75 1213.56 L1982.34 1213.56 L1982.93 1213.56 L1983.51 1213.56 L1984.1 1213.56 L1984.69 1213.56 L1985.27 1213.56 L1985.86 1213.56 L1986.45 1213.56 L1987.03 1213.56 L1987.62 1213.56 L1988.2 1213.56 L1988.79 1213.56 L1989.38 1213.56 L1989.96 1213.56 L1990.55 1213.56 L1991.14 1213.56 L1991.72 1213.56 L1992.31 1213.56 L1992.9 1213.56 L1993.48 1213.56 L1994.07 1213.56 L1994.65 1213.56 L1995.24 1213.56 L1995.83 1213.56 L1996.41 1213.56 L1997 1213.56 L1997.59 1213.56 L1998.17 1213.56 L1998.76 1213.56 L1999.35 1213.56 L1999.93 1213.56 L2000.52 1213.56 L2001.11 1213.56 L2001.69 1213.56 L2002.28 1213.56 L2002.86 1213.56 L2003.45 1213.56 L2004.04 1213.56 L2004.62 1213.56 L2005.21 1213.56 L2005.8 1213.56 L2006.38 1213.56 L2006.97 1213.56 L2007.56 1213.56 L2008.14 1213.56 L2008.73 1213.56 L2009.32 1213.56 L2009.9 1213.56 L2010.49 1213.56 L2011.07 1213.56 L2011.66 1213.56 L2012.25 1213.56 L2012.83 1213.56 L2013.42 1213.56 L2014.01 1213.56 L2014.59 1213.56 L2015.18 1213.56 L2015.77 1213.56 L2016.35 1213.56 L2016.94 1213.56 L2017.53 1213.56 L2018.11 1213.56 L2018.7 1213.56 L2019.28 1213.56 L2019.87 1213.56 L2020.46 1213.56 L2021.04 1213.56 L2021.63 1213.56 L2022.22 1213.56 L2022.8 1213.56 L2023.39 1213.56 L2023.98 1213.56 L2024.56 1213.56 L2025.15 1213.56 L2025.73 1213.56 L2026.32 1213.56 L2026.91 1213.56 L2027.49 1213.56 L2028.08 1213.56 L2028.67 1213.56 L2029.25 1213.56 L2029.84 1213.56 L2030.43 1213.56 L2031.01 1213.56 L2031.6 1213.56 L2032.19 1213.56 L2032.77 1213.56 L2033.36 1213.56 L2033.94 1213.56 L2034.53 1213.56 L2035.12 1213.56 L2035.7 1213.56 L2036.29 1213.56 L2036.88 1213.56 L2037.46 1213.56 L2038.05 1213.56 L2038.64 1213.56 L2039.22 1213.56 L2039.81 1213.56 L2040.4 1213.56 L2040.98 1213.56 L2041.57 1213.56 L2042.15 1213.56 L2042.74 1213.56 L2043.33 1213.56 L2043.91 1213.56 L2044.5 1213.56 L2045.09 1213.56 L2045.67 1213.56 L2046.26 1213.56 L2046.85 1213.56 L2047.43 1213.56 L2048.02 1213.56 L2048.6 1213.56 L2049.19 1213.56 L2049.78 1213.56 L2050.36 1213.56 L2050.95 1213.56 L2051.54 1213.56 L2052.12 1213.56 L2052.71 1213.56 L2053.3 1213.56 L2053.88 1213.56 L2054.47 1213.56 L2055.06 1213.56 L2055.64 1213.56 L2056.23 1213.56 L2056.81 1213.56 L2057.4 1213.56 L2057.99 1213.56 L2058.57 1213.56 L2059.16 1213.56 L2059.75 1213.56 L2060.33 1213.56 L2060.92 1213.56 L2061.51 1213.56 L2062.09 1213.56 L2062.68 1213.56 L2063.27 1213.56 L2063.85 1213.56 L2064.44 1213.56 L2065.02 1213.56 L2065.61 1213.56 L2066.2 1213.56 L2066.78 1213.56 L2067.37 1213.56 L2067.96 1213.56 L2068.54 1213.56 L2069.13 1213.56 L2069.72 1213.56 L2070.3 1213.56 L2070.89 1213.56 L2071.48 1213.56 L2072.06 1213.56 L2072.65 1213.56 L2073.23 1213.56 L2073.82 1213.56 L2074.41 1213.56 L2074.99 1213.56 L2075.58 1213.56 L2076.17 1213.56 L2076.75 1213.56 L2077.34 1213.56 L2077.93 1213.56 L2078.51 1213.56 L2079.1 1213.56 L2079.68 1213.56 L2080.27 1213.56 L2080.86 1213.56 L2081.44 1213.56 L2082.03 1213.56 L2082.62 1213.56 L2083.2 1213.56 L2083.79 1213.56 L2084.38 1213.56 L2084.96 1213.56 L2085.55 1213.56 L2086.14 1213.56 L2086.72 1213.56 L2087.31 1213.56 L2087.89 1213.56 L2088.48 1213.56 L2089.07 1213.56 L2089.65 1213.56 L2090.24 1213.56 L2090.83 1213.56 L2091.41 1213.56 L2092 1213.56 L2092.59 1213.56 L2093.17 1213.56 L2093.76 1213.56 L2094.35 1213.56 L2094.93 1213.56 L2095.52 1213.56 L2096.1 1213.56 L2096.69 1213.56 L2097.28 1213.56 L2097.86 1213.56 L2098.45 1213.56 L2099.04 1213.56 L2099.62 1213.56 L2100.21 1213.56 L2100.8 1213.56 L2101.38 1213.56 L2101.97 1213.56 L2102.55 1213.56 L2103.14 1213.56 L2103.73 1213.56 L2104.31 1213.56 L2104.9 1213.56 L2105.49 1213.56 L2106.07 1213.56 L2106.66 1213.56 L2107.25 1213.56 L2107.83 1213.56 L2108.42 1213.56 L2109.01 1213.56 L2109.59 1213.56 L2110.18 1213.56 L2110.76 1213.56 L2111.35 1213.56 L2111.94 1213.56 L2112.52 1213.56 L2113.11 1213.56 L2113.7 1213.56 L2114.28 1213.56 L2114.87 1213.56 L2115.46 1213.56 L2116.04 1213.56 L2116.63 1213.56 L2117.22 1213.56 L2117.8 1213.56 L2118.39 1213.56 L2118.97 1213.56 L2119.56 1213.56 L2120.15 1213.56 L2120.73 1213.56 L2121.32 1213.56 L2121.91 1213.56 L2122.49 1213.56 L2123.08 1213.56 L2123.67 1213.56 L2124.25 1213.56 L2124.84 1213.56 L2125.42 1213.56 L2126.01 1213.56 L2126.6 1213.56 L2127.18 1213.56 L2127.77 1213.56 L2128.36 1213.56 L2128.94 1213.56 L2129.53 1213.56 L2130.12 1213.56 L2130.7 1213.56 L2131.29 1213.56 L2131.88 1213.56 L2132.46 1213.56 L2133.05 1213.56 L2133.63 1213.56 L2134.22 1213.56 L2134.81 1213.56 L2135.39 1213.56 L2135.98 1213.56 L2136.57 1213.56 L2137.15 1213.56 L2137.74 1213.56 L2138.33 1213.56 L2138.91 1213.56 L2139.5 1213.56 L2140.09 1213.56 L2140.67 1213.56 L2141.26 1213.56 L2141.84 1213.56 L2142.43 1213.56 L2143.02 1213.56 L2143.6 1213.56 L2144.19 1213.56 L2144.78 1213.56 L2145.36 1213.56 L2145.95 1213.56 L2146.54 1213.56 L2147.12 1213.56 L2147.71 1213.56 L2148.3 1213.56 L2148.88 1213.56 L2149.47 1213.56 L2150.05 1213.56 L2150.64 1213.56 L2151.23 1213.56 L2151.81 1213.56 L2152.4 1213.56 L2152.99 1213.56 L2153.57 1213.56 L2154.16 1213.56 L2154.75 1213.56 L2155.33 1213.56 L2155.92 1213.56 L2156.5 1213.56 L2157.09 1213.56 L2157.68 1213.56 L2158.26 1213.56 L2158.26 1213.38 L2157.68 1213.38 L2157.09 1213.38 L2156.5 1213.38 L2155.92 1213.38 L2155.33 1213.38 L2154.75 1213.38 L2154.16 1213.38 L2153.57 1213.38 L2152.99 1213.38 L2152.4 1213.38 L2151.81 1213.38 L2151.23 1213.38 L2150.64 1213.38 L2150.05 1213.38 L2149.47 1213.38 L2148.88 1213.38 L2148.3 1213.38 L2147.71 1213.38 L2147.12 1213.38 L2146.54 1213.38 L2145.95 1213.38 L2145.36 1213.38 L2144.78 1213.38 L2144.19 1213.38 L2143.6 1213.38 L2143.02 1213.38 L2142.43 1213.38 L2141.84 1213.38 L2141.26 1213.38 L2140.67 1213.38 L2140.09 1213.38 L2139.5 1213.38 L2138.91 1213.38 L2138.33 1213.38 L2137.74 1213.38 L2137.15 1213.38 L2136.57 1213.38 L2135.98 1213.38 L2135.39 1213.38 L2134.81 1213.38 L2134.22 1213.38 L2133.63 1213.38 L2133.05 1213.38 L2132.46 1213.38 L2131.88 1213.38 L2131.29 1213.38 L2130.7 1213.38 L2130.12 1213.38 L2129.53 1213.38 L2128.94 1213.38 L2128.36 1213.38 L2127.77 1213.38 L2127.18 1213.38 L2126.6 1213.38 L2126.01 1213.38 L2125.42 1213.38 L2124.84 1213.38 L2124.25 1213.38 L2123.67 1213.38 L2123.08 1213.38 L2122.49 1213.38 L2121.91 1213.38 L2121.32 1213.38 L2120.73 1213.38 L2120.15 1213.38 L2119.56 1213.38 L2118.97 1213.38 L2118.39 1213.38 L2117.8 1213.38 L2117.22 1213.38 L2116.63 1213.38 L2116.04 1213.38 L2115.46 1213.38 L2114.87 1213.38 L2114.28 1213.38 L2113.7 1213.38 L2113.11 1213.38 L2112.52 1213.38 L2111.94 1213.38 L2111.35 1213.38 L2110.76 1213.38 L2110.18 1213.38 L2109.59 1213.38 L2109.01 1213.38 L2108.42 1213.38 L2107.83 1213.38 L2107.25 1213.38 L2106.66 1213.38 L2106.07 1213.38 L2105.49 1213.38 L2104.9 1213.38 L2104.31 1213.38 L2103.73 1213.38 L2103.14 1213.38 L2102.55 1213.38 L2101.97 1213.38 L2101.38 1213.38 L2100.8 1213.38 L2100.21 1213.38 L2099.62 1213.38 L2099.04 1213.38 L2098.45 1213.38 L2097.86 1213.38 L2097.28 1213.38 L2096.69 1213.38 L2096.1 1213.38 L2095.52 1213.38 L2094.93 1213.38 L2094.35 1213.38 L2093.76 1213.38 L2093.17 1213.38 L2092.59 1213.38 L2092 1213.38 L2091.41 1213.38 L2090.83 1213.38 L2090.24 1213.38 L2089.65 1213.38 L2089.07 1213.38 L2088.48 1213.38 L2087.89 1213.38 L2087.31 1213.38 L2086.72 1213.38 L2086.14 1213.38 L2085.55 1213.38 L2084.96 1213.38 L2084.38 1213.38 L2083.79 1213.38 L2083.2 1213.38 L2082.62 1213.38 L2082.03 1213.38 L2081.44 1213.38 L2080.86 1213.38 L2080.27 1213.38 L2079.68 1213.38 L2079.1 1213.38 L2078.51 1213.38 L2077.93 1213.38 L2077.34 1213.38 L2076.75 1213.38 L2076.17 1213.38 L2075.58 1213.38 L2074.99 1213.38 L2074.41 1213.38 L2073.82 1213.38 L2073.23 1213.38 L2072.65 1213.38 L2072.06 1213.38 L2071.48 1213.38 L2070.89 1213.38 L2070.3 1213.38 L2069.72 1213.38 L2069.13 1213.38 L2068.54 1213.38 L2067.96 1213.38 L2067.37 1213.38 L2066.78 1213.38 L2066.2 1213.38 L2065.61 1213.38 L2065.02 1213.38 L2064.44 1213.38 L2063.85 1213.38 L2063.27 1213.38 L2062.68 1213.38 L2062.09 1213.38 L2061.51 1213.38 L2060.92 1213.38 L2060.33 1213.38 L2059.75 1213.38 L2059.16 1213.38 L2058.57 1213.38 L2057.99 1213.38 L2057.4 1213.38 L2056.81 1213.38 L2056.23 1213.38 L2055.64 1213.38 L2055.06 1213.38 L2054.47 1213.38 L2053.88 1213.38 L2053.3 1213.38 L2052.71 1213.38 L2052.12 1213.38 L2051.54 1213.38 L2050.95 1213.38 L2050.36 1213.38 L2049.78 1213.38 L2049.19 1213.38 L2048.6 1213.38 L2048.02 1213.38 L2047.43 1213.38 L2046.85 1213.38 L2046.26 1213.38 L2045.67 1213.38 L2045.09 1213.38 L2044.5 1213.38 L2043.91 1213.38 L2043.33 1213.38 L2042.74 1213.38 L2042.15 1213.38 L2041.57 1213.38 L2040.98 1213.38 L2040.4 1213.38 L2039.81 1213.38 L2039.22 1213.38 L2038.64 1213.38 L2038.05 1213.38 L2037.46 1213.38 L2036.88 1213.38 L2036.29 1213.38 L2035.7 1213.38 L2035.12 1213.38 L2034.53 1213.38 L2033.94 1213.38 L2033.36 1213.38 L2032.77 1213.38 L2032.19 1213.38 L2031.6 1213.38 L2031.01 1213.38 L2030.43 1213.38 L2029.84 1213.38 L2029.25 1213.38 L2028.67 1213.38 L2028.08 1213.38 L2027.49 1213.38 L2026.91 1213.38 L2026.32 1213.38 L2025.73 1213.38 L2025.15 1213.38 L2024.56 1213.38 L2023.98 1213.38 L2023.39 1213.38 L2022.8 1213.38 L2022.22 1213.38 L2021.63 1213.38 L2021.04 1213.38 L2020.46 1213.38 L2019.87 1213.38 L2019.28 1213.38 L2018.7 1213.38 L2018.11 1213.38 L2017.53 1213.38 L2016.94 1213.38 L2016.35 1213.38 L2015.77 1213.38 L2015.18 1213.38 L2014.59 1213.38 L2014.01 1213.38 L2013.42 1213.38 L2012.83 1213.38 L2012.25 1213.38 L2011.66 1213.38 L2011.07 1213.38 L2010.49 1213.38 L2009.9 1213.38 L2009.32 1213.38 L2008.73 1213.38 L2008.14 1213.38 L2007.56 1213.38 L2006.97 1213.38 L2006.38 1213.38 L2005.8 1213.38 L2005.21 1213.38 L2004.62 1213.38 L2004.04 1213.38 L2003.45 1213.38 L2002.86 1213.38 L2002.28 1213.38 L2001.69 1213.38 L2001.11 1213.38 L2000.52 1213.38 L1999.93 1213.38 L1999.35 1213.38 L1998.76 1213.38 L1998.17 1213.38 L1997.59 1213.38 L1997 1213.38 L1996.41 1213.38 L1995.83 1213.38 L1995.24 1213.38 L1994.65 1213.38 L1994.07 1213.38 L1993.48 1213.38 L1992.9 1213.38 L1992.31 1213.38 L1991.72 1213.38 L1991.14 1213.38 L1990.55 1213.38 L1989.96 1213.38 L1989.38 1213.38 L1988.79 1213.38 L1988.2 1213.38 L1987.62 1213.38 L1987.03 1213.38 L1986.45 1213.38 L1985.86 1213.38 L1985.27 1213.38 L1984.69 1213.38 L1984.1 1213.38 L1983.51 1213.38 L1982.93 1213.38 L1982.34 1213.38 L1981.75 1213.38 L1981.17 1213.38 L1980.58 1213.38 L1979.99 1213.38 L1979.41 1213.38 L1978.82 1213.38 L1978.24 1213.38 L1977.65 1213.38 L1977.06 1213.38 L1976.48 1213.38 L1975.89 1213.38 L1975.3 1213.38 L1974.72 1213.38 L1974.13 1213.38 L1973.54 1213.38 L1972.96 1213.38 L1972.37 1213.38 L1971.78 1213.38 L1971.2 1213.38 L1970.61 1213.38 L1970.03 1213.38 L1969.44 1213.38 L1968.85 1213.38 L1968.27 1213.38 L1967.68 1213.38 L1967.09 1213.38 L1966.51 1213.38 L1965.92 1213.38 L1965.33 1213.38 L1964.75 1213.38 L1964.16 1213.38 L1963.58 1213.38 L1962.99 1213.38 L1962.4 1213.38 L1961.82 1213.38 L1961.23 1213.38 L1960.64 1213.38 L1960.06 1213.38 L1959.47 1213.38 L1958.88 1213.38 L1958.3 1213.38 L1957.71 1213.38 L1957.12 1213.38 L1956.54 1213.38 L1955.95 1213.38 L1955.37 1213.38 L1954.78 1213.38 L1954.19 1213.38 L1953.61 1213.38 L1953.02 1213.38 L1952.43 1213.38 L1951.85 1213.38 L1951.26 1213.38 L1950.67 1213.38 L1950.09 1213.38 L1949.5 1213.38 L1948.91 1213.38 L1948.33 1213.38 L1947.74 1213.38 L1947.16 1213.38 L1946.57 1213.38 L1945.98 1213.38 L1945.4 1213.38 L1944.81 1213.38 L1944.22 1213.38 L1943.64 1213.38 L1943.05 1213.38 L1942.46 1213.38 L1941.88 1213.38 L1941.29 1213.38 L1940.71 1213.38 L1940.12 1213.38 L1939.53 1213.38 L1938.95 1213.38 L1938.36 1213.38 L1937.77 1213.38 L1937.19 1213.38 L1936.6 1213.38 L1936.01 1213.38 L1935.43 1213.38 L1934.84 1213.38 L1934.25 1213.38 L1933.67 1213.38 L1933.08 1213.38 L1932.5 1213.38 L1931.91 1213.38 L1931.32 1213.38 L1930.74 1213.38 L1930.15 1213.38 L1929.56 1213.38 L1928.98 1213.38 L1928.39 1213.38 L1927.8 1213.38 L1927.22 1213.38 L1926.63 1213.38 L1926.04 1213.38 L1925.46 1213.38 L1924.87 1213.38 L1924.29 1213.38 L1923.7 1213.38 L1923.11 1213.38 L1922.53 1213.38 L1921.94 1213.38 L1921.35 1213.38 L1920.77 1213.38 L1920.18 1213.38 L1919.59 1213.38 L1919.01 1213.38 L1918.42 1213.38 L1917.83 1213.38 L1917.25 1213.38 L1916.66 1213.38 L1916.08 1213.38 L1915.49 1213.38 L1914.9 1213.38 L1914.32 1213.38 L1913.73 1213.38 L1913.14 1213.38 L1912.56 1213.38 L1911.97 1213.38 L1911.38 1213.38 L1910.8 1213.38 L1910.21 1213.38 L1909.63 1213.38 L1909.04 1213.38 L1908.45 1213.38 L1907.87 1213.38 L1907.28 1213.38 L1906.69 1213.38 L1906.11 1213.38 L1905.52 1213.38 L1904.93 1213.38 L1904.35 1213.38 L1903.76 1213.38 L1903.17 1213.38 L1902.59 1213.38 L1902 1213.38 L1901.42 1213.38 L1900.83 1213.38 L1900.24 1213.38 L1899.66 1213.38 L1899.07 1213.38 L1898.48 1213.38 L1897.9 1213.38 L1897.31 1213.38 L1896.72 1213.38 L1896.14 1213.38 L1895.55 1213.38 L1894.96 1213.38 L1894.38 1213.38 L1893.79 1213.38 L1893.21 1213.38 L1892.62 1213.38 L1892.03 1213.38 L1891.45 1213.38 L1890.86 1213.38 L1890.27 1213.38 L1889.69 1213.38 L1889.1 1213.38 L1888.51 1213.38 L1887.93 1213.38 L1887.34 1213.38 L1886.76 1213.38 L1886.17 1213.38 L1885.58 1213.38 L1885 1213.38 L1884.41 1213.38 L1883.82 1213.38 L1883.24 1213.38 L1882.65 1213.38 L1882.06 1213.38 L1881.48 1213.38 L1880.89 1213.38 L1880.3 1213.38 L1879.72 1213.38 L1879.13 1213.38 L1878.55 1213.38 L1877.96 1213.38 L1877.37 1213.38 L1876.79 1213.38 L1876.2 1213.38 L1875.61 1213.38 L1875.03 1213.38 L1874.44 1213.38 L1873.85 1213.38 L1873.27 1213.38 L1872.68 1213.38 L1872.09 1213.38 L1871.51 1213.38 L1870.92 1213.38 L1870.34 1213.38 L1869.75 1213.38 L1869.16 1213.38 L1868.58 1213.38 L1867.99 1213.38 L1867.4 1213.38 L1866.82 1213.38 L1866.23 1213.38 L1865.64 1213.38 L1865.06 1213.38 L1864.47 1213.38 L1863.88 1213.38 L1863.3 1213.38 L1862.71 1213.38 L1862.13 1213.38 L1861.54 1213.38 L1860.95 1213.38 L1860.37 1213.38 L1859.78 1213.38 L1859.19 1213.38 L1858.61 1213.38 L1858.02 1213.38 L1857.43 1213.38 L1856.85 1213.38 L1856.26 1213.38 L1855.68 1213.38 L1855.09 1213.38 L1854.5 1213.38 L1853.92 1213.38 L1853.33 1213.38 L1852.74 1213.38 L1852.16 1213.38 L1851.57 1213.38 L1850.98 1213.38 L1850.4 1213.38 L1849.81 1213.38 L1849.22 1213.38 L1848.64 1213.38 L1848.05 1213.38 L1847.47 1213.38 L1846.88 1213.38 L1846.29 1213.38 L1845.71 1213.38 L1845.12 1213.38 L1844.53 1213.38 L1843.95 1213.38 L1843.36 1213.38 L1842.77 1213.38 L1842.19 1213.38 L1841.6 1213.38 L1841.01 1213.38 L1840.43 1213.38 L1839.84 1213.38 L1839.26 1213.38 L1838.67 1213.38 L1838.08 1213.38 L1837.5 1213.38 L1836.91 1213.38 L1836.32 1213.38 L1835.74 1213.38 L1835.15 1213.38 L1834.56 1213.38 L1833.98 1213.38 L1833.39 1213.38 L1832.81 1213.38 L1832.22 1213.38 L1831.63 1213.38 L1831.05 1213.38 L1830.46 1213.38 L1829.87 1213.38 L1829.29 1213.38 L1828.7 1213.38 L1828.11 1213.38 L1827.53 1213.38 L1826.94 1213.38 L1826.35 1213.38 L1825.77 1213.38 L1825.18 1213.38 L1824.6 1213.38 L1824.01 1213.38 L1823.42 1213.38 L1822.84 1213.38 L1822.25 1213.38 L1821.66 1213.38 L1821.08 1213.38 L1820.49 1213.38 L1819.9 1213.38 L1819.32 1213.38 L1818.73 1213.38 L1818.14 1213.38 L1817.56 1213.38 L1816.97 1213.38 L1816.39 1213.38 L1815.8 1213.38 L1815.21 1213.38 L1814.63 1213.38 L1814.04 1213.38 L1813.45 1213.38 L1812.87 1213.38 L1812.28 1213.38 L1811.69 1213.38 L1811.11 1213.38 L1810.52 1213.38 L1809.94 1213.38 L1809.35 1213.38 L1808.76 1213.38 L1808.18 1213.38 L1807.59 1213.38 L1807 1213.38 L1806.42 1213.38 L1805.83 1213.38 L1805.24 1213.38 L1804.66 1213.38 L1804.07 1213.38 L1803.48 1213.38 L1802.9 1213.38 L1802.31 1213.38 L1801.73 1213.38 L1801.14 1213.38 L1800.55 1213.38 L1799.97 1213.38 L1799.38 1213.38 L1798.79 1213.38 L1798.21 1213.38 L1797.62 1213.38 L1797.03 1213.38 L1796.45 1213.38 L1795.86 1213.38 L1795.27 1213.38 L1794.69 1213.38 L1794.1 1213.38 L1793.52 1213.38 L1792.93 1213.38 L1792.34 1213.38 L1791.76 1213.38 L1791.17 1213.38 L1790.58 1213.38 L1790 1213.38 L1789.41 1213.38 L1788.82 1213.38 L1788.24 1213.38 L1787.65 1213.38 L1787.06 1213.38 L1786.48 1213.38 L1785.89 1213.38 L1785.31 1213.38 L1784.72 1213.38 L1784.13 1213.38 L1783.55 1213.38 L1782.96 1213.38 L1782.37 1213.38 L1781.79 1213.38 L1781.2 1213.38 L1780.61 1213.38 L1780.03 1213.38 L1779.44 1213.38 L1778.86 1213.38 L1778.27 1213.38 L1777.68 1213.38 L1777.1 1213.38 L1776.51 1213.38 L1775.92 1213.38 L1775.34 1213.38 L1774.75 1213.38 L1774.16 1213.38 L1773.58 1213.38 L1772.99 1213.38 L1772.4 1213.38 L1771.82 1213.38 L1771.23 1213.38 L1770.65 1213.38 L1770.06 1213.38 L1769.47 1213.38 L1768.89 1213.38 L1768.3 1213.38 L1767.71 1213.38 L1767.13 1213.38 L1766.54 1213.38 L1765.95 1213.38 L1765.37 1213.38 L1764.78 1213.38 L1764.19 1213.38 L1763.61 1213.38 L1763.02 1213.38 L1762.44 1213.38 L1761.85 1213.38 L1761.26 1213.38 L1760.68 1213.38 L1760.09 1213.38 L1759.5 1213.38 L1758.92 1213.38 L1758.33 1213.38 L1757.74 1213.38 L1757.16 1213.38 L1756.57 1213.38 L1755.99 1213.38 L1755.4 1213.38 L1754.81 1213.38 L1754.23 1213.38 L1753.64 1213.38 L1753.05 1213.38 L1752.47 1213.38 L1751.88 1213.38 L1751.29 1213.38 L1750.71 1213.38 L1750.12 1213.38 L1749.53 1213.38 L1748.95 1213.38 L1748.36 1213.38 L1747.78 1213.38 L1747.19 1213.38 L1746.6 1213.38 L1746.02 1213.38 L1745.43 1213.38 L1744.84 1213.38 L1744.26 1213.38 L1743.67 1213.38 L1743.08 1213.38 L1742.5 1213.38 L1741.91 1213.38 L1741.32 1213.38 L1740.74 1213.38 L1740.15 1213.38 L1739.57 1213.38 L1738.98 1213.38 L1738.39 1213.38 L1737.81 1213.38 L1737.22 1213.38 L1736.63 1213.38 L1736.05 1213.38 L1735.46 1213.38 L1734.87 1213.38 L1734.29 1213.38 L1733.7 1213.38 L1733.11 1213.38 L1732.53 1213.38 L1731.94 1213.38 L1731.36 1213.38 L1730.77 1213.38 L1730.18 1213.38 L1729.6 1213.38 L1729.01 1213.38 L1728.42 1213.38 L1727.84 1213.38 L1727.25 1213.38 L1726.66 1213.38 L1726.08 1213.38 L1725.49 1213.38 L1724.91 1213.38 L1724.32 1213.38 L1723.73 1213.38 L1723.15 1213.38 L1722.56 1213.38 L1721.97 1213.38 L1721.39 1213.38 L1720.8 1213.38 L1720.21 1213.38 L1719.63 1213.38 L1719.04 1213.38 L1718.45 1213.38 L1717.87 1213.38 L1717.28 1213.38 L1716.7 1213.38 L1716.11 1213.38 L1715.52 1213.38 L1714.94 1213.38 L1714.35 1213.38 L1713.76 1213.38 L1713.18 1213.38 L1712.59 1213.38 L1712 1213.38 L1711.42 1213.38 L1710.83 1213.38 L1710.24 1213.38 L1709.66 1213.38 L1709.07 1213.38 L1708.49 1213.38 L1707.9 1213.38 L1707.31 1213.38 L1706.73 1213.38 L1706.14 1213.38 L1705.55 1213.38 L1704.97 1213.38 L1704.38 1213.38 L1703.79 1213.38 L1703.21 1213.38 L1702.62 1213.38 L1702.04 1213.38 L1701.45 1213.38 L1700.86 1213.38 L1700.28 1213.38 L1699.69 1213.38 L1699.1 1213.38 L1698.52 1213.38 L1697.93 1213.38 L1697.34 1213.38 L1696.76 1213.38 L1696.17 1213.38 L1695.58 1213.38 L1695 1213.38 L1694.41 1213.38 L1693.83 1213.38 L1693.24 1213.38 L1692.65 1213.38 L1692.07 1213.38 L1691.48 1213.38 L1690.89 1213.38 L1690.31 1213.38 L1689.72 1213.38 L1689.13 1213.38 L1688.55 1213.38 L1687.96 1213.38 L1687.37 1213.38 L1686.79 1213.38 L1686.2 1213.38 L1685.62 1213.38 L1685.03 1213.38 L1684.44 1213.38 L1683.86 1213.38 L1683.27 1213.38 L1682.68 1213.38 L1682.1 1213.38 L1681.51 1213.38 L1680.92 1213.38 L1680.34 1213.38 L1679.75 1213.38 L1679.17 1213.38 L1678.58 1213.38 L1677.99 1213.38 L1677.41 1213.38 L1676.82 1213.38 L1676.23 1213.38 L1675.65 1213.38 L1675.06 1213.38 L1674.47 1213.38 L1673.89 1213.38 L1673.3 1213.38 L1672.71 1213.38 L1672.13 1213.38 L1671.54 1213.38 L1670.96 1213.38 L1670.37 1213.38 L1669.78 1213.38 L1669.2 1213.38 L1668.61 1213.38 L1668.02 1213.38 L1667.44 1213.38 L1666.85 1213.38 L1666.26 1213.38 L1665.68 1213.38 L1665.09 1213.38 L1664.5 1213.38 L1663.92 1213.38 L1663.33 1213.38 L1662.75 1213.38 L1662.16 1213.38 L1661.57 1213.38 L1660.99 1213.38 L1660.4 1213.38 L1659.81 1213.38 L1659.23 1213.38 L1658.64 1213.38 L1658.05 1213.38 L1657.47 1213.38 L1656.88 1213.38 L1656.29 1213.38 L1655.71 1213.38 L1655.12 1213.38 L1654.54 1213.38 L1653.95 1213.38 L1653.36 1213.38 L1652.78 1213.38 L1652.19 1213.38 L1651.6 1213.38 L1651.02 1213.38 L1650.43 1213.38 L1649.84 1213.38 L1649.26 1213.38 L1648.67 1213.38 L1648.09 1213.38 L1647.5 1213.38 L1646.91 1213.38 L1646.33 1213.38 L1645.74 1213.38 L1645.15 1213.38 L1644.57 1213.38 L1643.98 1213.38 L1643.39 1213.38 L1642.81 1213.38 L1642.22 1213.38 L1641.63 1213.38 L1641.05 1213.38 L1640.46 1213.38 L1639.88 1213.38 L1639.29 1213.38 L1638.7 1213.38 L1638.12 1213.38 L1637.53 1213.38 L1636.94 1213.38 L1636.36 1213.38 L1635.77 1213.38 L1635.18 1213.38 L1634.6 1213.38 L1634.01 1213.38 L1633.42 1213.38 L1632.84 1213.38 L1632.25 1213.38 L1631.67 1213.38 L1631.08 1213.38 L1630.49 1213.38 L1629.91 1213.38 L1629.32 1213.38 L1628.73 1213.38 L1628.15 1213.38 L1627.56 1213.38 L1626.97 1213.38 L1626.39 1213.38 L1625.8 1213.38 L1625.22 1213.38 L1624.63 1213.38 L1624.04 1213.38 L1623.46 1213.38 L1622.87 1213.38 L1622.28 1213.38 L1621.7 1213.38 L1621.11 1213.38 L1620.52 1213.38 L1619.94 1213.38 L1619.35 1213.38 L1618.76 1213.38 L1618.18 1213.38 L1617.59 1213.38 L1617.01 1213.38 L1616.42 1213.38 L1615.83 1213.38 L1615.25 1213.38 L1614.66 1213.38 L1614.07 1213.38 L1613.49 1213.38 L1612.9 1213.38 L1612.31 1213.38 L1611.73 1213.38 L1611.14 1213.38 L1610.55 1213.38 L1609.97 1213.38 L1609.38 1213.38 L1608.8 1213.38 L1608.21 1213.38 L1607.62 1213.38 L1607.04 1213.38 L1606.45 1213.38 L1605.86 1213.38 L1605.28 1213.38 L1604.69 1213.38 L1604.1 1213.38 L1603.52 1213.38 L1602.93 1213.38 L1602.34 1213.38 L1601.76 1213.38 L1601.17 1213.38 L1600.59 1213.38 L1600 1213.38 L1599.41 1213.38 L1598.83 1213.38 L1598.24 1213.38 L1597.65 1213.38 L1597.07 1213.38 L1596.48 1213.38 L1595.89 1213.38 L1595.31 1213.38 L1594.72 1213.38 L1594.14 1213.38 L1593.55 1213.38 L1592.96 1213.38 L1592.38 1213.38 L1591.79 1213.38 L1591.2 1213.38 L1590.62 1213.38 L1590.03 1213.38 L1589.44 1213.38 L1588.86 1213.38 L1588.27 1213.38 L1587.68 1213.38 L1587.1 1213.38 L1586.51 1213.38 L1585.93 1213.38 L1585.34 1213.38 L1584.75 1213.38 L1584.17 1213.38 L1583.58 1213.38 L1582.99 1213.38 L1582.41 1213.38 L1581.82 1213.38 L1581.23 1213.38 L1580.65 1213.38 L1580.06 1213.38 L1579.47 1213.38 L1578.89 1213.38 L1578.3 1213.38 L1577.72 1213.38 L1577.13 1213.38 L1576.54 1213.38 L1575.96 1213.38 L1575.37 1213.38 L1574.78 1213.38 L1574.2 1213.38 L1573.61 1213.38 L1573.02 1213.38 L1572.44 1213.38 L1571.85 1213.38 L1571.27 1213.38 L1570.68 1213.38 L1570.09 1213.38 L1569.51 1213.38 L1568.92 1213.38 L1568.33 1213.38 L1567.75 1213.38 L1567.16 1213.38 L1566.57 1213.38 L1565.99 1213.38 L1565.4 1213.38 L1564.81 1213.38 L1564.23 1213.38 L1563.64 1213.38 L1563.06 1213.38 L1562.47 1213.38 L1561.88 1213.38 L1561.3 1213.38 L1560.71 1213.38 L1560.12 1213.38 L1559.54 1213.38 L1558.95 1213.38 L1558.36 1213.38 L1557.78 1213.38 L1557.19 1213.38 L1556.6 1213.38 L1556.02 1213.38 L1555.43 1213.38 L1554.85 1213.38 L1554.26 1213.38 L1553.67 1213.38 L1553.09 1213.38 L1552.5 1213.38 L1551.91 1213.38 L1551.33 1213.38 L1550.74 1213.38 L1550.15 1213.38 L1549.57 1213.38 L1548.98 1213.38 L1548.4 1213.38 L1547.81 1213.38 L1547.22 1213.38 L1546.64 1213.38 L1546.05 1213.38 L1545.46 1213.38 L1544.88 1213.38 L1544.29 1213.38 L1543.7 1213.38 L1543.12 1213.38 L1542.53 1213.38 L1541.94 1213.38 L1541.36 1213.38 L1540.77 1213.38 L1540.19 1213.38 L1539.6 1213.38 L1539.01 1213.38 L1538.43 1213.38 L1537.84 1213.38 L1537.25 1213.38 L1536.67 1213.38 L1536.08 1213.38 L1535.49 1213.38 L1534.91 1213.38 L1534.32 1213.38 L1533.73 1213.38 L1533.15 1213.38 L1532.56 1213.38 L1531.98 1213.38 L1531.39 1213.38 L1530.8 1213.38 L1530.22 1213.38 L1529.63 1213.38 L1529.04 1213.38 L1528.46 1213.38 L1527.87 1213.38 L1527.28 1213.38 L1526.7 1213.38 L1526.11 1213.38 L1525.52 1213.38 L1524.94 1213.38 L1524.35 1213.38 L1523.77 1213.38 L1523.18 1213.38 L1522.59 1213.38 L1522.01 1213.38 L1521.42 1213.38 L1520.83 1213.38 L1520.25 1213.38 L1519.66 1213.38 L1519.07 1213.38 L1518.49 1213.38 L1517.9 1213.38 L1517.32 1213.38 L1516.73 1213.38 L1516.14 1213.38 L1515.56 1213.38 L1514.97 1213.38 L1514.38 1213.38 L1513.8 1213.38 L1513.21 1213.38 L1512.62 1213.38 L1512.04 1213.38 L1511.45 1213.38 L1510.86 1213.38 L1510.28 1213.38 L1509.69 1213.38 L1509.11 1213.38 L1508.52 1213.38 L1507.93 1213.38 L1507.35 1213.38 L1506.76 1213.38 L1506.17 1213.38 L1505.59 1213.38 L1505 1213.38 L1504.41 1213.38 L1503.83 1213.38 L1503.24 1213.38 L1502.65 1213.38 L1502.07 1213.38 L1501.48 1213.38 L1500.9 1213.38 L1500.31 1213.38 L1499.72 1213.38 L1499.14 1213.38 L1498.55 1213.38 L1497.96 1213.38 L1497.38 1213.38 L1496.79 1213.38 L1496.2 1213.38 L1495.62 1213.38 L1495.03 1213.38 L1494.45 1213.38 L1493.86 1213.38 L1493.27 1213.38 L1492.69 1213.38 L1492.1 1213.38 L1491.51 1213.38 L1490.93 1213.38 L1490.34 1213.38 L1489.75 1213.38 L1489.17 1213.38 L1488.58 1213.38 L1487.99 1213.38 L1487.41 1213.38 L1486.82 1213.38 L1486.24 1213.38 L1485.65 1213.38 L1485.06 1213.38 L1484.48 1213.38 L1483.89 1213.38 L1483.3 1213.38 L1482.72 1213.38 L1482.13 1213.38 L1481.54 1213.38 L1480.96 1213.38 L1480.37 1213.38 L1479.78 1213.38 L1479.2 1213.38 L1478.61 1213.38 L1478.03 1213.38 L1477.44 1213.38 L1476.85 1213.38 L1476.27 1213.38 L1475.68 1213.38 L1475.09 1213.38 L1474.51 1213.38 L1473.92 1213.38 L1473.33 1213.38 L1472.75 1213.38 L1472.16 1213.38 L1471.57 1213.38 L1470.99 1213.38 L1470.4 1213.38 L1469.82 1213.38 L1469.23 1213.38 L1468.64 1213.38 L1468.06 1213.38 L1467.47 1213.38 L1466.88 1213.38 L1466.3 1213.38 L1465.71 1213.38 L1465.12 1213.38 L1464.54 1213.38 L1463.95 1213.38 L1463.37 1213.38 L1462.78 1213.38 L1462.19 1213.38 L1461.61 1213.38 L1461.02 1213.38 L1460.43 1213.38 L1459.85 1213.38 L1459.26 1213.38 L1458.67 1213.38 L1458.09 1213.38 L1457.5 1213.38 L1456.91 1213.38 L1456.33 1213.38 L1455.74 1213.38 L1455.16 1213.38 L1454.57 1213.38 L1453.98 1213.38 L1453.4 1213.38 L1452.81 1213.38 L1452.22 1213.38 L1451.64 1213.38 L1451.05 1213.38 L1450.46 1213.38 L1449.88 1213.38 L1449.29 1213.38 L1448.7 1213.38 L1448.12 1213.38 L1447.53 1213.38 L1446.95 1213.38 L1446.36 1213.38 L1445.77 1213.38 L1445.19 1213.38 L1444.6 1213.38 L1444.01 1213.38 L1443.43 1213.38 L1442.84 1213.38 L1442.25 1213.38 L1441.67 1213.38 L1441.08 1213.38 L1440.5 1213.38 L1439.91 1213.38 L1439.32 1213.38 L1438.74 1213.38 L1438.15 1213.38 L1437.56 1213.38 L1436.98 1213.38 L1436.39 1213.38 L1435.8 1213.38 L1435.22 1213.38 L1434.63 1213.38 L1434.04 1213.38 L1433.46 1213.38 L1432.87 1213.38 L1432.29 1213.38 L1431.7 1213.38 L1431.11 1213.38 L1430.53 1213.38 L1429.94 1213.38 L1429.35 1213.38 L1428.77 1213.38 L1428.18 1213.38 L1427.59 1213.38 L1427.01 1213.38 L1426.42 1213.38 L1425.83 1213.38 L1425.25 1213.38 L1424.66 1213.38 L1424.08 1213.38 L1423.49 1213.38 L1422.9 1213.38 L1422.32 1213.38 L1421.73 1213.38 L1421.14 1213.38 L1420.56 1213.38 L1419.97 1213.38 L1419.38 1213.38 L1418.8 1213.38 L1418.21 1213.38 L1417.63 1213.38 L1417.04 1213.38 L1416.45 1213.38 L1415.87 1213.38 L1415.28 1213.38 L1414.69 1213.38 L1414.11 1213.38 L1413.52 1213.38 L1412.93 1213.38 L1412.35 1213.38 L1411.76 1213.38 L1411.17 1213.38 L1410.59 1213.38 L1410 1213.38 L1409.42 1213.38 L1408.83 1213.38 L1408.24 1213.38 L1407.66 1213.38 L1407.07 1213.38 L1406.48 1213.38 L1405.9 1213.38 L1405.31 1213.38 L1404.72 1213.38 L1404.14 1213.38 L1403.55 1213.38 L1402.96 1213.38 L1402.38 1213.38 L1401.79 1213.38 L1401.21 1213.38 L1400.62 1213.38 L1400.03 1213.38 L1399.45 1213.38 L1398.86 1213.38 L1398.27 1213.38 L1397.69 1213.38 L1397.1 1213.38 L1396.51 1213.38 L1395.93 1213.38 L1395.34 1213.38 L1394.75 1213.38 L1394.17 1213.38 L1393.58 1213.38 L1393 1213.38 L1392.41 1213.38 L1391.82 1213.38 L1391.24 1213.38 L1390.65 1213.38 L1390.06 1213.38 L1389.48 1213.38 L1388.89 1213.38 L1388.3 1213.38 L1387.72 1213.38 L1387.13 1213.38 L1386.55 1213.38 L1385.96 1213.38 L1385.37 1213.38 L1384.79 1213.38 L1384.2 1213.38 L1383.61 1213.38 L1383.03 1213.38 L1382.44 1213.38 L1381.85 1213.38 L1381.27 1213.38 L1380.68 1213.38 L1380.09 1213.38 L1379.51 1213.38 L1378.92 1213.38 L1378.34 1213.38 L1377.75 1213.38 L1377.16 1213.38 L1376.58 1213.38 L1375.99 1213.38 L1375.4 1213.38 L1374.82 1213.38 L1374.23 1213.38 L1373.64 1213.38 L1373.06 1213.38 L1372.47 1213.38 L1371.88 1213.38 L1371.3 1213.38 L1370.71 1213.38 L1370.13 1213.38 L1369.54 1213.38 L1368.95 1213.38 L1368.37 1213.38 L1367.78 1213.38 L1367.19 1213.38 L1366.61 1213.38 L1366.02 1213.38 L1365.43 1213.38 L1364.85 1213.38 L1364.26 1213.38 L1363.68 1213.38 L1363.09 1213.38 L1362.5 1213.38 L1361.92 1213.38 L1361.33 1213.38 L1360.74 1213.38 L1360.16 1213.38 L1359.57 1213.38 L1358.98 1213.38 L1358.4 1213.38 L1357.81 1213.38 L1357.22 1213.38 L1356.64 1213.38 L1356.05 1213.38 L1355.47 1213.38 L1354.88 1213.38 L1354.29 1213.38 L1353.71 1213.38 L1353.12 1213.38 L1352.53 1213.38 L1351.95 1213.38 L1351.36 1213.38 L1350.77 1213.38 L1350.19 1213.38 L1349.6 1213.38 L1349.01 1213.38 L1348.43 1213.38 L1347.84 1213.38 L1347.26 1213.38 L1346.67 1213.38 L1346.08 1213.38 L1345.5 1213.38 L1344.91 1213.38 L1344.32 1213.38 L1343.74 1213.38 L1343.15 1213.38 L1342.56 1213.38 L1341.98 1213.38 L1341.39 1213.38 L1340.8 1213.38 L1340.22 1213.38 L1339.63 1213.38 L1339.05 1213.38 L1338.46 1213.38 L1337.87 1213.38 L1337.29 1213.38 L1336.7 1213.38 L1336.11 1213.38 L1335.53 1213.38 L1334.94 1213.38 L1334.35 1213.38 L1333.77 1213.38 L1333.18 1213.38 L1332.6 1213.38 L1332.01 1213.38 L1331.42 1213.38 L1330.84 1213.38 L1330.25 1213.38 L1329.66 1213.38 L1329.08 1213.38 L1328.49 1213.38 L1327.9 1213.38 L1327.32 1213.38 L1326.73 1213.38 L1326.14 1213.38 L1325.56 1213.38 L1324.97 1213.38 L1324.39 1213.38 L1323.8 1213.38 L1323.21 1213.38 L1322.63 1213.38 L1322.04 1213.38 L1321.45 1213.38 L1320.87 1213.38 L1320.28 1213.38 L1319.69 1213.38 L1319.11 1213.38 L1318.52 1213.38 L1317.93 1213.38 L1317.35 1213.38 L1316.76 1213.38 L1316.18 1213.38 L1315.59 1213.38 L1315 1213.38 L1314.42 1213.38 L1313.83 1213.38 L1313.24 1213.38 L1312.66 1213.38 L1312.07 1213.38 L1311.48 1213.38 L1310.9 1213.38 L1310.31 1213.38 L1309.73 1213.38 L1309.14 1213.38 L1308.55 1213.38 L1307.97 1213.38 L1307.38 1213.38 L1306.79 1213.38 L1306.21 1213.38 L1305.62 1213.38 L1305.03 1213.38 L1304.45 1213.38 L1303.86 1213.38 L1303.27 1213.38 L1302.69 1213.38 L1302.1 1213.38 L1301.52 1213.38 L1300.93 1213.38 L1300.34 1213.38 L1299.76 1213.38 L1299.17 1213.38 L1298.58 1213.38 L1298 1213.38 L1297.41 1213.38 L1296.82 1213.38 L1296.24 1213.38 L1295.65 1213.38 L1295.06 1213.38 L1294.48 1213.38 L1293.89 1213.38 L1293.31 1213.38 L1292.72 1213.38 L1292.13 1213.38 L1291.55 1213.38 L1290.96 1213.38 L1290.37 1213.38 L1289.79 1213.38 L1289.2 1213.38 L1288.61 1213.38 L1288.03 1213.38 L1287.44 1213.38 L1286.86 1213.38 L1286.27 1213.38 L1285.68 1213.38 L1285.1 1213.38 L1284.51 1213.38 L1283.92 1213.38 L1283.34 1213.38 L1282.75 1213.38 L1282.16 1213.38 L1281.58 1213.38 L1280.99 1213.38 L1280.4 1213.38 L1279.82 1213.38 L1279.23 1213.38 L1278.65 1213.38 L1278.06 1213.38 L1277.47 1213.38 L1276.89 1213.38 L1276.3 1213.38 L1275.71 1213.38 L1275.13 1213.38 L1274.54 1213.38 L1273.95 1213.38 L1273.37 1213.38 L1272.78 1213.38 L1272.19 1213.38 L1271.61 1213.38 L1271.02 1213.38 L1270.44 1213.38 L1269.85 1213.38 L1269.26 1213.38 L1268.68 1213.38 L1268.09 1213.38 L1267.5 1213.38 L1266.92 1213.38 L1266.33 1213.38 L1265.74 1213.38 L1265.16 1213.38 L1264.57 1213.38 L1263.98 1213.38 L1263.4 1213.38 L1262.81 1213.38 L1262.23 1213.38 L1261.64 1213.38 L1261.05 1213.38 L1260.47 1213.38 L1259.88 1213.38 L1259.29 1213.38 L1258.71 1213.38 L1258.12 1213.38 L1257.53 1213.38 L1256.95 1213.38 L1256.36 1213.38 L1255.78 1213.38 L1255.19 1213.38 L1254.6 1213.38 L1254.02 1213.38 L1253.43 1213.38 L1252.84 1213.38 L1252.26 1213.38 L1251.67 1213.38 L1251.08 1213.38 L1250.5 1213.38 L1249.91 1213.38 L1249.32 1213.38 L1248.74 1213.38 L1248.15 1213.38 L1247.57 1213.38 L1246.98 1213.38 L1246.39 1213.38 L1245.81 1213.38 L1245.22 1213.38 L1244.63 1213.38 L1244.05 1213.38 L1243.46 1213.38 L1242.87 1213.38 L1242.29 1213.38 L1241.7 1213.38 L1241.11 1213.38 L1240.53 1213.38 L1239.94 1213.38 L1239.36 1213.38 L1238.77 1213.38 L1238.18 1213.38 L1237.6 1213.38 L1237.01 1213.38 L1236.42 1213.38 L1235.84 1213.38 L1235.25 1213.38 L1234.66 1213.38 L1234.08 1213.38 L1233.49 1213.38 L1232.91 1213.38 L1232.32 1213.38 L1231.73 1213.38 L1231.15 1213.38 L1230.56 1213.38 L1229.97 1213.38 L1229.39 1213.38 L1228.8 1213.38 L1228.21 1213.38 L1227.63 1213.38 L1227.04 1213.38 L1226.45 1213.38 L1225.87 1213.38 L1225.28 1213.38 L1224.7 1213.38 L1224.11 1213.38 L1223.52 1213.38 L1222.94 1213.38 L1222.35 1213.38 L1221.76 1213.38 L1221.18 1213.38 L1220.59 1213.38 L1220 1213.38 L1219.42 1213.38 L1218.83 1213.38 L1218.24 1213.38 L1217.66 1213.38 L1217.07 1213.38 L1216.49 1213.38 L1215.9 1213.38 L1215.31 1213.38 L1214.73 1213.38 L1214.14 1213.38 L1213.55 1213.38 L1212.97 1213.38 L1212.38 1213.38 L1211.79 1213.38 L1211.21 1213.38 L1210.62 1213.38 L1210.03 1213.38 L1209.45 1213.38 L1208.86 1213.38 L1208.28 1213.38 L1207.69 1213.38 L1207.1 1213.38 L1206.52 1213.38 L1205.93 1213.38 L1205.34 1213.38 L1204.76 1213.38 L1204.17 1213.38 L1203.58 1213.38 L1203 1213.38 L1202.41 1213.38 L1201.83 1213.38 L1201.24 1213.38 L1200.65 1213.38 L1200.07 1213.38 L1199.48 1213.38 L1198.89 1213.38 L1198.31 1213.38 L1197.72 1213.38 L1197.13 1213.38 L1196.55 1213.38 L1195.96 1213.38 L1195.37 1213.38 L1194.79 1213.38 L1194.2 1213.38 L1193.62 1213.38 L1193.03 1213.38 L1192.44 1213.38 L1191.86 1213.38 L1191.27 1213.38 L1190.68 1213.38 L1190.1 1213.38 L1189.51 1213.38 L1188.92 1213.38 L1188.34 1213.38 L1187.75 1213.38 L1187.16 1213.38 L1186.58 1213.38 L1185.99 1213.38 L1185.41 1213.38 L1184.82 1213.38 L1184.23 1213.38 L1183.65 1213.38 L1183.06 1213.38 L1182.47 1213.38 L1181.89 1213.38 L1181.3 1213.38 L1180.71 1213.38 L1180.13 1213.38 L1179.54 1213.38 L1178.96 1213.38 L1178.37 1213.38 L1177.78 1213.38 L1177.2 1213.38 L1176.61 1213.38 L1176.02 1213.38 L1175.44 1213.38 L1174.85 1213.38 L1174.26 1213.38 L1173.68 1213.38 L1173.09 1213.38 L1172.5 1213.38 L1171.92 1213.38 L1171.33 1213.38 L1170.75 1213.38 L1170.16 1213.38 L1169.57 1213.38 L1168.99 1213.38 L1168.4 1213.38 L1167.81 1213.38 L1167.23 1213.38 L1166.64 1213.38 L1166.05 1213.38 L1165.47 1213.38 L1164.88 1213.38 L1164.29 1213.38 L1163.71 1213.38 L1163.12 1213.38 L1162.54 1213.38 L1161.95 1213.38 L1161.36 1213.38 L1160.78 1213.38 L1160.19 1213.38 L1159.6 1213.38 L1159.02 1213.38 L1158.43 1213.38 L1157.84 1213.38 L1157.26 1213.38 L1156.67 1213.38 L1156.09 1213.38 L1155.5 1213.38 L1154.91 1213.38 L1154.33 1213.38 L1153.74 1213.38 L1153.15 1213.38 L1152.57 1213.38 L1151.98 1213.38 L1151.39 1213.38 L1150.81 1213.38 L1150.22 1213.38 L1149.63 1213.38 L1149.05 1213.38 L1148.46 1213.38 L1147.88 1213.38 L1147.29 1213.38 L1146.7 1213.38 L1146.12 1213.38 L1145.53 1213.38 L1144.94 1213.38 L1144.36 1213.38 L1143.77 1213.38 L1143.18 1213.38 L1142.6 1213.38 L1142.01 1213.38 L1141.42 1213.38 L1140.84 1213.38 L1140.25 1213.38 L1139.67 1213.38 L1139.08 1213.38 L1138.49 1213.38 L1137.91 1213.38 L1137.32 1213.38 L1136.73 1213.38 L1136.15 1213.38 L1135.56 1213.38 L1134.97 1213.38 L1134.39 1213.38 L1133.8 1213.38 L1133.21 1213.38 L1132.63 1213.38 L1132.04 1213.38 L1131.46 1213.38 L1130.87 1213.38 L1130.28 1213.38 L1129.7 1213.38 L1129.11 1213.38 L1128.52 1213.38 L1127.94 1213.38 L1127.35 1213.38 L1126.76 1213.38 L1126.18 1213.38 L1125.59 1213.38 L1125.01 1213.38 L1124.42 1213.38 L1123.83 1213.38 L1123.25 1213.38 L1122.66 1213.38 L1122.07 1213.38 L1121.49 1213.38 L1120.9 1213.38 L1120.31 1213.38 L1119.73 1213.38 L1119.14 1213.38 L1118.55 1213.38 L1117.97 1213.38 L1117.38 1213.38 L1116.8 1213.38 L1116.21 1213.38 L1115.62 1213.38 L1115.04 1213.38 L1114.45 1213.38 L1113.86 1213.38 L1113.28 1213.38 L1112.69 1213.38 L1112.1 1213.38 L1111.52 1213.38 L1110.93 1213.38 L1110.34 1213.38 L1109.76 1213.38 L1109.17 1213.38 L1108.59 1213.38 L1108 1213.38 L1107.41 1213.38 L1106.83 1213.38 L1106.24 1213.38 L1105.65 1213.38 L1105.07 1213.38 L1104.48 1213.38 L1103.89 1213.38 L1103.31 1213.38 L1102.72 1213.38 L1102.14 1213.38 L1101.55 1213.38 L1100.96 1213.38 L1100.38 1213.38 L1099.79 1213.38 L1099.2 1213.38 L1098.62 1213.38 L1098.03 1213.38 L1097.44 1213.38 L1096.86 1213.38 L1096.27 1213.38 L1095.68 1213.38 L1095.1 1213.38 L1094.51 1213.38 L1093.93 1213.38 L1093.34 1213.38 L1092.75 1213.38 L1092.17 1213.38 L1091.58 1213.38 L1090.99 1213.38 L1090.41 1213.38 L1089.82 1213.38 L1089.23 1213.38 L1088.65 1213.38 L1088.06 1213.38 L1087.47 1213.38 L1086.89 1213.38 L1086.3 1213.38 L1085.72 1213.38 L1085.13 1213.38 L1084.54 1213.38 L1083.96 1213.38 L1083.37 1213.38 L1082.78 1213.38 L1082.2 1213.38 L1081.61 1213.38 L1081.02 1213.38 L1080.44 1213.38 L1079.85 1213.38 L1079.26 1213.38 L1078.68 1213.38 L1078.09 1213.38 L1077.51 1213.38 L1076.92 1213.38 L1076.33 1213.38 L1075.75 1213.38 L1075.16 1213.38 L1074.57 1213.38 L1073.99 1213.38 L1073.4 1213.38 L1072.81 1213.38 L1072.23 1213.38 L1071.64 1213.38 L1071.06 1213.38 L1070.47 1213.38 L1069.88 1213.38 L1069.3 1213.38 L1068.71 1213.38 L1068.12 1213.38 L1067.54 1213.38 L1066.95 1213.38 L1066.36 1213.38 L1065.78 1213.38 L1065.19 1213.38 L1064.6 1213.38 L1064.02 1213.38 L1063.43 1213.38 L1062.85 1213.38 L1062.26 1213.38 L1061.67 1213.38 L1061.09 1213.38 L1060.5 1213.38 L1059.91 1213.38 L1059.33 1213.38 L1058.74 1213.38 L1058.15 1213.38 L1057.57 1213.38 L1056.98 1213.38 L1056.39 1213.38 L1055.81 1213.38 L1055.22 1213.38 L1054.64 1213.38 L1054.05 1213.38 L1053.46 1213.38 L1052.88 1213.38 L1052.29 1213.38 L1051.7 1213.38 L1051.12 1213.38 L1050.53 1213.38 L1049.94 1213.38 L1049.36 1213.38 L1048.77 1213.38 L1048.19 1213.38 L1047.6 1213.38 L1047.01 1213.38 L1046.43 1213.38 L1045.84 1213.38 L1045.25 1213.38 L1044.67 1213.38 L1044.08 1213.38 L1043.49 1213.38 L1042.91 1213.38 L1042.32 1213.38 L1041.73 1213.38 L1041.15 1213.38 L1040.56 1213.38 L1039.98 1213.38 L1039.39 1213.38 L1038.8 1213.38 L1038.22 1213.38 L1037.63 1213.38 L1037.04 1213.38 L1036.46 1213.38 L1035.87 1213.38 L1035.28 1213.38 L1034.7 1213.38 L1034.11 1213.38 L1033.52 1213.38 L1032.94 1213.38 L1032.35 1213.38 L1031.77 1213.38 L1031.18 1213.38 L1030.59 1213.38 L1030.01 1213.38 L1029.42 1213.38 L1028.83 1213.38 L1028.25 1213.38 L1027.66 1213.38 L1027.07 1213.38 L1026.49 1213.38 L1025.9 1213.38 L1025.32 1213.38 L1024.73 1213.38 L1024.14 1213.38 L1023.56 1213.38 L1022.97 1213.38 L1022.38 1213.38 L1021.8 1213.38 L1021.21 1213.38 L1020.62 1213.38 L1020.04 1213.38 L1019.45 1213.38 L1018.86 1213.38 L1018.28 1213.38 L1017.69 1213.38 L1017.11 1213.38 L1016.52 1213.38 L1015.93 1213.38 L1015.35 1213.38 L1014.76 1213.38 L1014.17 1213.38 L1013.59 1213.38 L1013 1213.38 L1012.41 1213.38 L1011.83 1213.38 L1011.24 1213.38 L1010.65 1213.38 L1010.07 1213.38 L1009.48 1213.38 L1008.9 1213.38 L1008.31 1213.38 L1007.72 1213.38 L1007.14 1213.38 L1006.55 1213.38 L1005.96 1213.38 L1005.38 1213.38 L1004.79 1213.38 L1004.2 1213.38 L1003.62 1213.38 L1003.03 1213.38 L1002.44 1213.38 L1001.86 1213.38 L1001.27 1213.38 L1000.69 1213.38 L1000.1 1213.38 L999.513 1213.38 L998.926 1213.38 L998.34 1213.38 L997.754 1213.38 L997.167 1213.38 L996.581 1213.38 L995.994 1213.38 L995.408 1213.38 L994.822 1213.38 L994.235 1213.38 L993.649 1213.38 L993.062 1213.38 L992.476 1213.38 L991.889 1213.38 L991.303 1213.38 L990.717 1213.38 L990.13 1213.38 L989.544 1213.38 L988.957 1213.38 L988.371 1213.38 L987.785 1213.38 L987.198 1213.38 L986.612 1213.38 L986.025 1213.38  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip822)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1213.47 986.612,1213.47 987.198,1213.47 987.785,1213.47 988.371,1213.47 988.957,1213.47 989.544,1213.47 990.13,1213.47 990.717,1213.47 991.303,1213.47 991.889,1213.47 992.476,1213.47 993.062,1213.47 993.649,1213.47 994.235,1213.47 994.822,1213.47 995.408,1213.47 995.994,1213.47 996.581,1213.47 997.167,1213.47 997.754,1213.47 998.34,1213.47 998.926,1213.47 999.513,1213.47 1000.1,1213.47 1000.69,1213.47 1001.27,1213.47 1001.86,1213.47 1002.44,1213.47 1003.03,1213.47 1003.62,1213.47 1004.2,1213.47 1004.79,1213.47 1005.38,1213.47 1005.96,1213.47 1006.55,1213.47 1007.14,1213.47 1007.72,1213.47 1008.31,1213.47 1008.9,1213.47 1009.48,1213.47 1010.07,1213.47 1010.65,1213.47 1011.24,1213.47 1011.83,1213.47 1012.41,1213.47 1013,1213.47 1013.59,1213.47 1014.17,1213.47 1014.76,1213.47 1015.35,1213.47 1015.93,1213.47 1016.52,1213.47 1017.11,1213.47 1017.69,1213.47 1018.28,1213.47 1018.86,1213.47 1019.45,1213.47 1020.04,1213.47 1020.62,1213.47 1021.21,1213.47 1021.8,1213.47 1022.38,1213.47 1022.97,1213.47 1023.56,1213.47 1024.14,1213.47 1024.73,1213.47 1025.32,1213.47 1025.9,1213.47 1026.49,1213.47 1027.07,1213.47 1027.66,1213.47 1028.25,1213.47 1028.83,1213.47 1029.42,1213.47 1030.01,1213.47 1030.59,1213.47 1031.18,1213.47 1031.77,1213.47 1032.35,1213.47 1032.94,1213.47 1033.52,1213.47 1034.11,1213.47 1034.7,1213.47 1035.28,1213.47 1035.87,1213.47 1036.46,1213.47 1037.04,1213.47 1037.63,1213.47 1038.22,1213.47 1038.8,1213.47 1039.39,1213.47 1039.98,1213.47 1040.56,1213.47 1041.15,1213.47 1041.73,1213.47 1042.32,1213.47 1042.91,1213.47 1043.49,1213.47 1044.08,1213.47 1044.67,1213.47 1045.25,1213.47 1045.84,1213.47 1046.43,1213.47 1047.01,1213.47 1047.6,1213.47 1048.19,1213.47 1048.77,1213.47 1049.36,1213.47 1049.94,1213.47 1050.53,1213.47 1051.12,1213.47 1051.7,1213.47 1052.29,1213.47 1052.88,1213.47 1053.46,1213.47 1054.05,1213.47 1054.64,1213.47 1055.22,1213.47 1055.81,1213.47 1056.39,1213.47 1056.98,1213.47 1057.57,1213.47 1058.15,1213.47 1058.74,1213.47 1059.33,1213.47 1059.91,1213.47 1060.5,1213.47 1061.09,1213.47 1061.67,1213.47 1062.26,1213.47 1062.85,1213.47 1063.43,1213.47 1064.02,1213.47 1064.6,1213.47 1065.19,1213.47 1065.78,1213.47 1066.36,1213.47 1066.95,1213.47 1067.54,1213.47 1068.12,1213.47 1068.71,1213.47 1069.3,1213.47 1069.88,1213.47 1070.47,1213.47 1071.06,1213.47 1071.64,1213.47 1072.23,1213.47 1072.81,1213.47 1073.4,1213.47 1073.99,1213.47 1074.57,1213.47 1075.16,1213.47 1075.75,1213.47 1076.33,1213.47 1076.92,1213.47 1077.51,1213.47 1078.09,1213.47 1078.68,1213.47 1079.26,1213.47 1079.85,1213.47 1080.44,1213.47 1081.02,1213.47 1081.61,1213.47 1082.2,1213.47 1082.78,1213.47 1083.37,1213.47 1083.96,1213.47 1084.54,1213.47 1085.13,1213.47 1085.72,1213.47 1086.3,1213.47 1086.89,1213.47 1087.47,1213.47 1088.06,1213.47 1088.65,1213.47 1089.23,1213.47 1089.82,1213.47 1090.41,1213.47 1090.99,1213.47 1091.58,1213.47 1092.17,1213.47 1092.75,1213.47 1093.34,1213.47 1093.93,1213.47 1094.51,1213.47 1095.1,1213.47 1095.68,1213.47 1096.27,1213.47 1096.86,1213.47 1097.44,1213.47 1098.03,1213.47 1098.62,1213.47 1099.2,1213.47 1099.79,1213.47 1100.38,1213.47 1100.96,1213.47 1101.55,1213.47 1102.14,1213.47 1102.72,1213.47 1103.31,1213.47 1103.89,1213.47 1104.48,1213.47 1105.07,1213.47 1105.65,1213.47 1106.24,1213.47 1106.83,1213.47 1107.41,1213.47 1108,1213.47 1108.59,1213.47 1109.17,1213.47 1109.76,1213.47 1110.34,1213.47 1110.93,1213.47 1111.52,1213.47 1112.1,1213.47 1112.69,1213.47 1113.28,1213.47 1113.86,1213.47 1114.45,1213.47 1115.04,1213.47 1115.62,1213.47 1116.21,1213.47 1116.8,1213.47 1117.38,1213.47 1117.97,1213.47 1118.55,1213.47 1119.14,1213.47 1119.73,1213.47 1120.31,1213.47 1120.9,1213.47 1121.49,1213.47 1122.07,1213.47 1122.66,1213.47 1123.25,1213.47 1123.83,1213.47 1124.42,1213.47 1125.01,1213.47 1125.59,1213.47 1126.18,1213.47 1126.76,1213.47 1127.35,1213.47 1127.94,1213.47 1128.52,1213.47 1129.11,1213.47 1129.7,1213.47 1130.28,1213.47 1130.87,1213.47 1131.46,1213.47 1132.04,1213.47 1132.63,1213.47 1133.21,1213.47 1133.8,1213.47 1134.39,1213.47 1134.97,1213.47 1135.56,1213.47 1136.15,1213.47 1136.73,1213.47 1137.32,1213.47 1137.91,1213.47 1138.49,1213.47 1139.08,1213.47 1139.67,1213.47 1140.25,1213.47 1140.84,1213.47 1141.42,1213.47 1142.01,1213.47 1142.6,1213.47 1143.18,1213.47 1143.77,1213.47 1144.36,1213.47 1144.94,1213.47 1145.53,1213.47 1146.12,1213.47 1146.7,1213.47 1147.29,1213.47 1147.88,1213.47 1148.46,1213.47 1149.05,1213.47 1149.63,1213.47 1150.22,1213.47 1150.81,1213.47 1151.39,1213.47 1151.98,1213.47 1152.57,1213.47 1153.15,1213.47 1153.74,1213.47 1154.33,1213.47 1154.91,1213.47 1155.5,1213.47 1156.09,1213.47 1156.67,1213.47 1157.26,1213.47 1157.84,1213.47 1158.43,1213.47 1159.02,1213.47 1159.6,1213.47 1160.19,1213.47 1160.78,1213.47 1161.36,1213.47 1161.95,1213.47 1162.54,1213.47 1163.12,1213.47 1163.71,1213.47 1164.29,1213.47 1164.88,1213.47 1165.47,1213.47 1166.05,1213.47 1166.64,1213.47 1167.23,1213.47 1167.81,1213.47 1168.4,1213.47 1168.99,1213.47 1169.57,1213.47 1170.16,1213.47 1170.75,1213.47 1171.33,1213.47 1171.92,1213.47 1172.5,1213.47 1173.09,1213.47 1173.68,1213.47 1174.26,1213.47 1174.85,1213.47 1175.44,1213.47 1176.02,1213.47 1176.61,1213.47 1177.2,1213.47 1177.78,1213.47 1178.37,1213.47 1178.96,1213.47 1179.54,1213.47 1180.13,1213.47 1180.71,1213.47 1181.3,1213.47 1181.89,1213.47 1182.47,1213.47 1183.06,1213.47 1183.65,1213.47 1184.23,1213.47 1184.82,1213.47 1185.41,1213.47 1185.99,1213.47 1186.58,1213.47 1187.16,1213.47 1187.75,1213.47 1188.34,1213.47 1188.92,1213.47 1189.51,1213.47 1190.1,1213.47 1190.68,1213.47 1191.27,1213.47 1191.86,1213.47 1192.44,1213.47 1193.03,1213.47 1193.62,1213.47 1194.2,1213.47 1194.79,1213.47 1195.37,1213.47 1195.96,1213.47 1196.55,1213.47 1197.13,1213.47 1197.72,1213.47 1198.31,1213.47 1198.89,1213.47 1199.48,1213.47 1200.07,1213.47 1200.65,1213.47 1201.24,1213.47 1201.83,1213.47 1202.41,1213.47 1203,1213.47 1203.58,1213.47 1204.17,1213.47 1204.76,1213.47 1205.34,1213.47 1205.93,1213.47 1206.52,1213.47 1207.1,1213.47 1207.69,1213.47 1208.28,1213.47 1208.86,1213.47 1209.45,1213.47 1210.03,1213.47 1210.62,1213.47 1211.21,1213.47 1211.79,1213.47 1212.38,1213.47 1212.97,1213.47 1213.55,1213.47 1214.14,1213.47 1214.73,1213.47 1215.31,1213.47 1215.9,1213.47 1216.49,1213.47 1217.07,1213.47 1217.66,1213.47 1218.24,1213.47 1218.83,1213.47 1219.42,1213.47 1220,1213.47 1220.59,1213.47 1221.18,1213.47 1221.76,1213.47 1222.35,1213.47 1222.94,1213.47 1223.52,1213.47 1224.11,1213.47 1224.7,1213.47 1225.28,1213.47 1225.87,1213.47 1226.45,1213.47 1227.04,1213.47 1227.63,1213.47 1228.21,1213.47 1228.8,1213.47 1229.39,1213.47 1229.97,1213.47 1230.56,1213.47 1231.15,1213.47 1231.73,1213.47 1232.32,1213.47 1232.91,1213.47 1233.49,1213.47 1234.08,1213.47 1234.66,1213.47 1235.25,1213.47 1235.84,1213.47 1236.42,1213.47 1237.01,1213.47 1237.6,1213.47 1238.18,1213.47 1238.77,1213.47 1239.36,1213.47 1239.94,1213.47 1240.53,1213.47 1241.11,1213.47 1241.7,1213.47 1242.29,1213.47 1242.87,1213.47 1243.46,1213.47 1244.05,1213.47 1244.63,1213.47 1245.22,1213.47 1245.81,1213.47 1246.39,1213.47 1246.98,1213.47 1247.57,1213.47 1248.15,1213.47 1248.74,1213.47 1249.32,1213.47 1249.91,1213.47 1250.5,1213.47 1251.08,1213.47 1251.67,1213.47 1252.26,1213.47 1252.84,1213.47 1253.43,1213.47 1254.02,1213.47 1254.6,1213.47 1255.19,1213.47 1255.78,1213.47 1256.36,1213.47 1256.95,1213.47 1257.53,1213.47 1258.12,1213.47 1258.71,1213.47 1259.29,1213.47 1259.88,1213.47 1260.47,1213.47 1261.05,1213.47 1261.64,1213.47 1262.23,1213.47 1262.81,1213.47 1263.4,1213.47 1263.98,1213.47 1264.57,1213.47 1265.16,1213.47 1265.74,1213.47 1266.33,1213.47 1266.92,1213.47 1267.5,1213.47 1268.09,1213.47 1268.68,1213.47 1269.26,1213.47 1269.85,1213.47 1270.44,1213.47 1271.02,1213.47 1271.61,1213.47 1272.19,1213.47 1272.78,1213.47 1273.37,1213.47 1273.95,1213.47 1274.54,1213.47 1275.13,1213.47 1275.71,1213.47 1276.3,1213.47 1276.89,1213.47 1277.47,1213.47 1278.06,1213.47 1278.65,1213.47 1279.23,1213.47 1279.82,1213.47 1280.4,1213.47 1280.99,1213.47 1281.58,1213.47 1282.16,1213.47 1282.75,1213.47 1283.34,1213.47 1283.92,1213.47 1284.51,1213.47 1285.1,1213.47 1285.68,1213.47 1286.27,1213.47 1286.86,1213.47 1287.44,1213.47 1288.03,1213.47 1288.61,1213.47 1289.2,1213.47 1289.79,1213.47 1290.37,1213.47 1290.96,1213.47 1291.55,1213.47 1292.13,1213.47 1292.72,1213.47 1293.31,1213.47 1293.89,1213.47 1294.48,1213.47 1295.06,1213.47 1295.65,1213.47 1296.24,1213.47 1296.82,1213.47 1297.41,1213.47 1298,1213.47 1298.58,1213.47 1299.17,1213.47 1299.76,1213.47 1300.34,1213.47 1300.93,1213.47 1301.52,1213.47 1302.1,1213.47 1302.69,1213.47 1303.27,1213.47 1303.86,1213.47 1304.45,1213.47 1305.03,1213.47 1305.62,1213.47 1306.21,1213.47 1306.79,1213.47 1307.38,1213.47 1307.97,1213.47 1308.55,1213.47 1309.14,1213.47 1309.73,1213.47 1310.31,1213.47 1310.9,1213.47 1311.48,1213.47 1312.07,1213.47 1312.66,1213.47 1313.24,1213.47 1313.83,1213.47 1314.42,1213.47 1315,1213.47 1315.59,1213.47 1316.18,1213.47 1316.76,1213.47 1317.35,1213.47 1317.93,1213.47 1318.52,1213.47 1319.11,1213.47 1319.69,1213.47 1320.28,1213.47 1320.87,1213.47 1321.45,1213.47 1322.04,1213.47 1322.63,1213.47 1323.21,1213.47 1323.8,1213.47 1324.39,1213.47 1324.97,1213.47 1325.56,1213.47 1326.14,1213.47 1326.73,1213.47 1327.32,1213.47 1327.9,1213.47 1328.49,1213.47 1329.08,1213.47 1329.66,1213.47 1330.25,1213.47 1330.84,1213.47 1331.42,1213.47 1332.01,1213.47 1332.6,1213.47 1333.18,1213.47 1333.77,1213.47 1334.35,1213.47 1334.94,1213.47 1335.53,1213.47 1336.11,1213.47 1336.7,1213.47 1337.29,1213.47 1337.87,1213.47 1338.46,1213.47 1339.05,1213.47 1339.63,1213.47 1340.22,1213.47 1340.8,1213.47 1341.39,1213.47 1341.98,1213.47 1342.56,1213.47 1343.15,1213.47 1343.74,1213.47 1344.32,1213.47 1344.91,1213.47 1345.5,1213.47 1346.08,1213.47 1346.67,1213.47 1347.26,1213.47 1347.84,1213.47 1348.43,1213.47 1349.01,1213.47 1349.6,1213.47 1350.19,1213.47 1350.77,1213.47 1351.36,1213.47 1351.95,1213.47 1352.53,1213.47 1353.12,1213.47 1353.71,1213.47 1354.29,1213.47 1354.88,1213.47 1355.47,1213.47 1356.05,1213.47 1356.64,1213.47 1357.22,1213.47 1357.81,1213.47 1358.4,1213.47 1358.98,1213.47 1359.57,1213.47 1360.16,1213.47 1360.74,1213.47 1361.33,1213.47 1361.92,1213.47 1362.5,1213.47 1363.09,1213.47 1363.68,1213.47 1364.26,1213.47 1364.85,1213.47 1365.43,1213.47 1366.02,1213.47 1366.61,1213.47 1367.19,1213.47 1367.78,1213.47 1368.37,1213.47 1368.95,1213.47 1369.54,1213.47 1370.13,1213.47 1370.71,1213.47 1371.3,1213.47 1371.88,1213.47 1372.47,1213.47 1373.06,1213.47 1373.64,1213.47 1374.23,1213.47 1374.82,1213.47 1375.4,1213.47 1375.99,1213.47 1376.58,1213.47 1377.16,1213.47 1377.75,1213.47 1378.34,1213.47 1378.92,1213.47 1379.51,1213.47 1380.09,1213.47 1380.68,1213.47 1381.27,1213.47 1381.85,1213.47 1382.44,1213.47 1383.03,1213.47 1383.61,1213.47 1384.2,1213.47 1384.79,1213.47 1385.37,1213.47 1385.96,1213.47 1386.55,1213.47 1387.13,1213.47 1387.72,1213.47 1388.3,1213.47 1388.89,1213.47 1389.48,1213.47 1390.06,1213.47 1390.65,1213.47 1391.24,1213.47 1391.82,1213.47 1392.41,1213.47 1393,1213.47 1393.58,1213.47 1394.17,1213.47 1394.75,1213.47 1395.34,1213.47 1395.93,1213.47 1396.51,1213.47 1397.1,1213.47 1397.69,1213.47 1398.27,1213.47 1398.86,1213.47 1399.45,1213.47 1400.03,1213.47 1400.62,1213.47 1401.21,1213.47 1401.79,1213.47 1402.38,1213.47 1402.96,1213.47 1403.55,1213.47 1404.14,1213.47 1404.72,1213.47 1405.31,1213.47 1405.9,1213.47 1406.48,1213.47 1407.07,1213.47 1407.66,1213.47 1408.24,1213.47 1408.83,1213.47 1409.42,1213.47 1410,1213.47 1410.59,1213.47 1411.17,1213.47 1411.76,1213.47 1412.35,1213.47 1412.93,1213.47 1413.52,1213.47 1414.11,1213.47 1414.69,1213.47 1415.28,1213.47 1415.87,1213.47 1416.45,1213.47 1417.04,1213.47 1417.63,1213.47 1418.21,1213.47 1418.8,1213.47 1419.38,1213.47 1419.97,1213.47 1420.56,1213.47 1421.14,1213.47 1421.73,1213.47 1422.32,1213.47 1422.9,1213.47 1423.49,1213.47 1424.08,1213.47 1424.66,1213.47 1425.25,1213.47 1425.83,1213.47 1426.42,1213.47 1427.01,1213.47 1427.59,1213.47 1428.18,1213.47 1428.77,1213.47 1429.35,1213.47 1429.94,1213.47 1430.53,1213.47 1431.11,1213.47 1431.7,1213.47 1432.29,1213.47 1432.87,1213.47 1433.46,1213.47 1434.04,1213.47 1434.63,1213.47 1435.22,1213.47 1435.8,1213.47 1436.39,1213.47 1436.98,1213.47 1437.56,1213.47 1438.15,1213.47 1438.74,1213.47 1439.32,1213.47 1439.91,1213.47 1440.5,1213.47 1441.08,1213.47 1441.67,1213.47 1442.25,1213.47 1442.84,1213.47 1443.43,1213.47 1444.01,1213.47 1444.6,1213.47 1445.19,1213.47 1445.77,1213.47 1446.36,1213.47 1446.95,1213.47 1447.53,1213.47 1448.12,1213.47 1448.7,1213.47 1449.29,1213.47 1449.88,1213.47 1450.46,1213.47 1451.05,1213.47 1451.64,1213.47 1452.22,1213.47 1452.81,1213.47 1453.4,1213.47 1453.98,1213.47 1454.57,1213.47 1455.16,1213.47 1455.74,1213.47 1456.33,1213.47 1456.91,1213.47 1457.5,1213.47 1458.09,1213.47 1458.67,1213.47 1459.26,1213.47 1459.85,1213.47 1460.43,1213.47 1461.02,1213.47 1461.61,1213.47 1462.19,1213.47 1462.78,1213.47 1463.37,1213.47 1463.95,1213.47 1464.54,1213.47 1465.12,1213.47 1465.71,1213.47 1466.3,1213.47 1466.88,1213.47 1467.47,1213.47 1468.06,1213.47 1468.64,1213.47 1469.23,1213.47 1469.82,1213.47 1470.4,1213.47 1470.99,1213.47 1471.57,1213.47 1472.16,1213.47 1472.75,1213.47 1473.33,1213.47 1473.92,1213.47 1474.51,1213.47 1475.09,1213.47 1475.68,1213.47 1476.27,1213.47 1476.85,1213.47 1477.44,1213.47 1478.03,1213.47 1478.61,1213.47 1479.2,1213.47 1479.78,1213.47 1480.37,1213.47 1480.96,1213.47 1481.54,1213.47 1482.13,1213.47 1482.72,1213.47 1483.3,1213.47 1483.89,1213.47 1484.48,1213.47 1485.06,1213.47 1485.65,1213.47 1486.24,1213.47 1486.82,1213.47 1487.41,1213.47 1487.99,1213.47 1488.58,1213.47 1489.17,1213.47 1489.75,1213.47 1490.34,1213.47 1490.93,1213.47 1491.51,1213.47 1492.1,1213.47 1492.69,1213.47 1493.27,1213.47 1493.86,1213.47 1494.45,1213.47 1495.03,1213.47 1495.62,1213.47 1496.2,1213.47 1496.79,1213.47 1497.38,1213.47 1497.96,1213.47 1498.55,1213.47 1499.14,1213.47 1499.72,1213.47 1500.31,1213.47 1500.9,1213.47 1501.48,1213.47 1502.07,1213.47 1502.65,1213.47 1503.24,1213.47 1503.83,1213.47 1504.41,1213.47 1505,1213.47 1505.59,1213.47 1506.17,1213.47 1506.76,1213.47 1507.35,1213.47 1507.93,1213.47 1508.52,1213.47 1509.11,1213.47 1509.69,1213.47 1510.28,1213.47 1510.86,1213.47 1511.45,1213.47 1512.04,1213.47 1512.62,1213.47 1513.21,1213.47 1513.8,1213.47 1514.38,1213.47 1514.97,1213.47 1515.56,1213.47 1516.14,1213.47 1516.73,1213.47 1517.32,1213.47 1517.9,1213.47 1518.49,1213.47 1519.07,1213.47 1519.66,1213.47 1520.25,1213.47 1520.83,1213.47 1521.42,1213.47 1522.01,1213.47 1522.59,1213.47 1523.18,1213.47 1523.77,1213.47 1524.35,1213.47 1524.94,1213.47 1525.52,1213.47 1526.11,1213.47 1526.7,1213.47 1527.28,1213.47 1527.87,1213.47 1528.46,1213.47 1529.04,1213.47 1529.63,1213.47 1530.22,1213.47 1530.8,1213.47 1531.39,1213.47 1531.98,1213.47 1532.56,1213.47 1533.15,1213.47 1533.73,1213.47 1534.32,1213.47 1534.91,1213.47 1535.49,1213.47 1536.08,1213.47 1536.67,1213.47 1537.25,1213.47 1537.84,1213.47 1538.43,1213.47 1539.01,1213.47 1539.6,1213.47 1540.19,1213.47 1540.77,1213.47 1541.36,1213.47 1541.94,1213.47 1542.53,1213.47 1543.12,1213.47 1543.7,1213.47 1544.29,1213.47 1544.88,1213.47 1545.46,1213.47 1546.05,1213.47 1546.64,1213.47 1547.22,1213.47 1547.81,1213.47 1548.4,1213.47 1548.98,1213.47 1549.57,1213.47 1550.15,1213.47 1550.74,1213.47 1551.33,1213.47 1551.91,1213.47 1552.5,1213.47 1553.09,1213.47 1553.67,1213.47 1554.26,1213.47 1554.85,1213.47 1555.43,1213.47 1556.02,1213.47 1556.6,1213.47 1557.19,1213.47 1557.78,1213.47 1558.36,1213.47 1558.95,1213.47 1559.54,1213.47 1560.12,1213.47 1560.71,1213.47 1561.3,1213.47 1561.88,1213.47 1562.47,1213.47 1563.06,1213.47 1563.64,1213.47 1564.23,1213.47 1564.81,1213.47 1565.4,1213.47 1565.99,1213.47 1566.57,1213.47 1567.16,1213.47 1567.75,1213.47 1568.33,1213.47 1568.92,1213.47 1569.51,1213.47 1570.09,1213.47 1570.68,1213.47 1571.27,1213.47 1571.85,1213.47 1572.44,1213.47 1573.02,1213.47 1573.61,1213.47 1574.2,1213.47 1574.78,1213.47 1575.37,1213.47 1575.96,1213.47 1576.54,1213.47 1577.13,1213.47 1577.72,1213.47 1578.3,1213.47 1578.89,1213.47 1579.47,1213.47 1580.06,1213.47 1580.65,1213.47 1581.23,1213.47 1581.82,1213.47 1582.41,1213.47 1582.99,1213.47 1583.58,1213.47 1584.17,1213.47 1584.75,1213.47 1585.34,1213.47 1585.93,1213.47 1586.51,1213.47 1587.1,1213.47 1587.68,1213.47 1588.27,1213.47 1588.86,1213.47 1589.44,1213.47 1590.03,1213.47 1590.62,1213.47 1591.2,1213.47 1591.79,1213.47 1592.38,1213.47 1592.96,1213.47 1593.55,1213.47 1594.14,1213.47 1594.72,1213.47 1595.31,1213.47 1595.89,1213.47 1596.48,1213.47 1597.07,1213.47 1597.65,1213.47 1598.24,1213.47 1598.83,1213.47 1599.41,1213.47 1600,1213.47 1600.59,1213.47 1601.17,1213.47 1601.76,1213.47 1602.34,1213.47 1602.93,1213.47 1603.52,1213.47 1604.1,1213.47 1604.69,1213.47 1605.28,1213.47 1605.86,1213.47 1606.45,1213.47 1607.04,1213.47 1607.62,1213.47 1608.21,1213.47 1608.8,1213.47 1609.38,1213.47 1609.97,1213.47 1610.55,1213.47 1611.14,1213.47 1611.73,1213.47 1612.31,1213.47 1612.9,1213.47 1613.49,1213.47 1614.07,1213.47 1614.66,1213.47 1615.25,1213.47 1615.83,1213.47 1616.42,1213.47 1617.01,1213.47 1617.59,1213.47 1618.18,1213.47 1618.76,1213.47 1619.35,1213.47 1619.94,1213.47 1620.52,1213.47 1621.11,1213.47 1621.7,1213.47 1622.28,1213.47 1622.87,1213.47 1623.46,1213.47 1624.04,1213.47 1624.63,1213.47 1625.22,1213.47 1625.8,1213.47 1626.39,1213.47 1626.97,1213.47 1627.56,1213.47 1628.15,1213.47 1628.73,1213.47 1629.32,1213.47 1629.91,1213.47 1630.49,1213.47 1631.08,1213.47 1631.67,1213.47 1632.25,1213.47 1632.84,1213.47 1633.42,1213.47 1634.01,1213.47 1634.6,1213.47 1635.18,1213.47 1635.77,1213.47 1636.36,1213.47 1636.94,1213.47 1637.53,1213.47 1638.12,1213.47 1638.7,1213.47 1639.29,1213.47 1639.88,1213.47 1640.46,1213.47 1641.05,1213.47 1641.63,1213.47 1642.22,1213.47 1642.81,1213.47 1643.39,1213.47 1643.98,1213.47 1644.57,1213.47 1645.15,1213.47 1645.74,1213.47 1646.33,1213.47 1646.91,1213.47 1647.5,1213.47 1648.09,1213.47 1648.67,1213.47 1649.26,1213.47 1649.84,1213.47 1650.43,1213.47 1651.02,1213.47 1651.6,1213.47 1652.19,1213.47 1652.78,1213.47 1653.36,1213.47 1653.95,1213.47 1654.54,1213.47 1655.12,1213.47 1655.71,1213.47 1656.29,1213.47 1656.88,1213.47 1657.47,1213.47 1658.05,1213.47 1658.64,1213.47 1659.23,1213.47 1659.81,1213.47 1660.4,1213.47 1660.99,1213.47 1661.57,1213.47 1662.16,1213.47 1662.75,1213.47 1663.33,1213.47 1663.92,1213.47 1664.5,1213.47 1665.09,1213.47 1665.68,1213.47 1666.26,1213.47 1666.85,1213.47 1667.44,1213.47 1668.02,1213.47 1668.61,1213.47 1669.2,1213.47 1669.78,1213.47 1670.37,1213.47 1670.96,1213.47 1671.54,1213.47 1672.13,1213.47 1672.71,1213.47 1673.3,1213.47 1673.89,1213.47 1674.47,1213.47 1675.06,1213.47 1675.65,1213.47 1676.23,1213.47 1676.82,1213.47 1677.41,1213.47 1677.99,1213.47 1678.58,1213.47 1679.17,1213.47 1679.75,1213.47 1680.34,1213.47 1680.92,1213.47 1681.51,1213.47 1682.1,1213.47 1682.68,1213.47 1683.27,1213.47 1683.86,1213.47 1684.44,1213.47 1685.03,1213.47 1685.62,1213.47 1686.2,1213.47 1686.79,1213.47 1687.37,1213.47 1687.96,1213.47 1688.55,1213.47 1689.13,1213.47 1689.72,1213.47 1690.31,1213.47 1690.89,1213.47 1691.48,1213.47 1692.07,1213.47 1692.65,1213.47 1693.24,1213.47 1693.83,1213.47 1694.41,1213.47 1695,1213.47 1695.58,1213.47 1696.17,1213.47 1696.76,1213.47 1697.34,1213.47 1697.93,1213.47 1698.52,1213.47 1699.1,1213.47 1699.69,1213.47 1700.28,1213.47 1700.86,1213.47 1701.45,1213.47 1702.04,1213.47 1702.62,1213.47 1703.21,1213.47 1703.79,1213.47 1704.38,1213.47 1704.97,1213.47 1705.55,1213.47 1706.14,1213.47 1706.73,1213.47 1707.31,1213.47 1707.9,1213.47 1708.49,1213.47 1709.07,1213.47 1709.66,1213.47 1710.24,1213.47 1710.83,1213.47 1711.42,1213.47 1712,1213.47 1712.59,1213.47 1713.18,1213.47 1713.76,1213.47 1714.35,1213.47 1714.94,1213.47 1715.52,1213.47 1716.11,1213.47 1716.7,1213.47 1717.28,1213.47 1717.87,1213.47 1718.45,1213.47 1719.04,1213.47 1719.63,1213.47 1720.21,1213.47 1720.8,1213.47 1721.39,1213.47 1721.97,1213.47 1722.56,1213.47 1723.15,1213.47 1723.73,1213.47 1724.32,1213.47 1724.91,1213.47 1725.49,1213.47 1726.08,1213.47 1726.66,1213.47 1727.25,1213.47 1727.84,1213.47 1728.42,1213.47 1729.01,1213.47 1729.6,1213.47 1730.18,1213.47 1730.77,1213.47 1731.36,1213.47 1731.94,1213.47 1732.53,1213.47 1733.11,1213.47 1733.7,1213.47 1734.29,1213.47 1734.87,1213.47 1735.46,1213.47 1736.05,1213.47 1736.63,1213.47 1737.22,1213.47 1737.81,1213.47 1738.39,1213.47 1738.98,1213.47 1739.57,1213.47 1740.15,1213.47 1740.74,1213.47 1741.32,1213.47 1741.91,1213.47 1742.5,1213.47 1743.08,1213.47 1743.67,1213.47 1744.26,1213.47 1744.84,1213.47 1745.43,1213.47 1746.02,1213.47 1746.6,1213.47 1747.19,1213.47 1747.78,1213.47 1748.36,1213.47 1748.95,1213.47 1749.53,1213.47 1750.12,1213.47 1750.71,1213.47 1751.29,1213.47 1751.88,1213.47 1752.47,1213.47 1753.05,1213.47 1753.64,1213.47 1754.23,1213.47 1754.81,1213.47 1755.4,1213.47 1755.99,1213.47 1756.57,1213.47 1757.16,1213.47 1757.74,1213.47 1758.33,1213.47 1758.92,1213.47 1759.5,1213.47 1760.09,1213.47 1760.68,1213.47 1761.26,1213.47 1761.85,1213.47 1762.44,1213.47 1763.02,1213.47 1763.61,1213.47 1764.19,1213.47 1764.78,1213.47 1765.37,1213.47 1765.95,1213.47 1766.54,1213.47 1767.13,1213.47 1767.71,1213.47 1768.3,1213.47 1768.89,1213.47 1769.47,1213.47 1770.06,1213.47 1770.65,1213.47 1771.23,1213.47 1771.82,1213.47 1772.4,1213.47 1772.99,1213.47 1773.58,1213.47 1774.16,1213.47 1774.75,1213.47 1775.34,1213.47 1775.92,1213.47 1776.51,1213.47 1777.1,1213.47 1777.68,1213.47 1778.27,1213.47 1778.86,1213.47 1779.44,1213.47 1780.03,1213.47 1780.61,1213.47 1781.2,1213.47 1781.79,1213.47 1782.37,1213.47 1782.96,1213.47 1783.55,1213.47 1784.13,1213.47 1784.72,1213.47 1785.31,1213.47 1785.89,1213.47 1786.48,1213.47 1787.06,1213.47 1787.65,1213.47 1788.24,1213.47 1788.82,1213.47 1789.41,1213.47 1790,1213.47 1790.58,1213.47 1791.17,1213.47 1791.76,1213.47 1792.34,1213.47 1792.93,1213.47 1793.52,1213.47 1794.1,1213.47 1794.69,1213.47 1795.27,1213.47 1795.86,1213.47 1796.45,1213.47 1797.03,1213.47 1797.62,1213.47 1798.21,1213.47 1798.79,1213.47 1799.38,1213.47 1799.97,1213.47 1800.55,1213.47 1801.14,1213.47 1801.73,1213.47 1802.31,1213.47 1802.9,1213.47 1803.48,1213.47 1804.07,1213.47 1804.66,1213.47 1805.24,1213.47 1805.83,1213.47 1806.42,1213.47 1807,1213.47 1807.59,1213.47 1808.18,1213.47 1808.76,1213.47 1809.35,1213.47 1809.94,1213.47 1810.52,1213.47 1811.11,1213.47 1811.69,1213.47 1812.28,1213.47 1812.87,1213.47 1813.45,1213.47 1814.04,1213.47 1814.63,1213.47 1815.21,1213.47 1815.8,1213.47 1816.39,1213.47 1816.97,1213.47 1817.56,1213.47 1818.14,1213.47 1818.73,1213.47 1819.32,1213.47 1819.9,1213.47 1820.49,1213.47 1821.08,1213.47 1821.66,1213.47 1822.25,1213.47 1822.84,1213.47 1823.42,1213.47 1824.01,1213.47 1824.6,1213.47 1825.18,1213.47 1825.77,1213.47 1826.35,1213.47 1826.94,1213.47 1827.53,1213.47 1828.11,1213.47 1828.7,1213.47 1829.29,1213.47 1829.87,1213.47 1830.46,1213.47 1831.05,1213.47 1831.63,1213.47 1832.22,1213.47 1832.81,1213.47 1833.39,1213.47 1833.98,1213.47 1834.56,1213.47 1835.15,1213.47 1835.74,1213.47 1836.32,1213.47 1836.91,1213.47 1837.5,1213.47 1838.08,1213.47 1838.67,1213.47 1839.26,1213.47 1839.84,1213.47 1840.43,1213.47 1841.01,1213.47 1841.6,1213.47 1842.19,1213.47 1842.77,1213.47 1843.36,1213.47 1843.95,1213.47 1844.53,1213.47 1845.12,1213.47 1845.71,1213.47 1846.29,1213.47 1846.88,1213.47 1847.47,1213.47 1848.05,1213.47 1848.64,1213.47 1849.22,1213.47 1849.81,1213.47 1850.4,1213.47 1850.98,1213.47 1851.57,1213.47 1852.16,1213.47 1852.74,1213.47 1853.33,1213.47 1853.92,1213.47 1854.5,1213.47 1855.09,1213.47 1855.68,1213.47 1856.26,1213.47 1856.85,1213.47 1857.43,1213.47 1858.02,1213.47 1858.61,1213.47 1859.19,1213.47 1859.78,1213.47 1860.37,1213.47 1860.95,1213.47 1861.54,1213.47 1862.13,1213.47 1862.71,1213.47 1863.3,1213.47 1863.88,1213.47 1864.47,1213.47 1865.06,1213.47 1865.64,1213.47 1866.23,1213.47 1866.82,1213.47 1867.4,1213.47 1867.99,1213.47 1868.58,1213.47 1869.16,1213.47 1869.75,1213.47 1870.34,1213.47 1870.92,1213.47 1871.51,1213.47 1872.09,1213.47 1872.68,1213.47 1873.27,1213.47 1873.85,1213.47 1874.44,1213.47 1875.03,1213.47 1875.61,1213.47 1876.2,1213.47 1876.79,1213.47 1877.37,1213.47 1877.96,1213.47 1878.55,1213.47 1879.13,1213.47 1879.72,1213.47 1880.3,1213.47 1880.89,1213.47 1881.48,1213.47 1882.06,1213.47 1882.65,1213.47 1883.24,1213.47 1883.82,1213.47 1884.41,1213.47 1885,1213.47 1885.58,1213.47 1886.17,1213.47 1886.76,1213.47 1887.34,1213.47 1887.93,1213.47 1888.51,1213.47 1889.1,1213.47 1889.69,1213.47 1890.27,1213.47 1890.86,1213.47 1891.45,1213.47 1892.03,1213.47 1892.62,1213.47 1893.21,1213.47 1893.79,1213.47 1894.38,1213.47 1894.96,1213.47 1895.55,1213.47 1896.14,1213.47 1896.72,1213.47 1897.31,1213.47 1897.9,1213.47 1898.48,1213.47 1899.07,1213.47 1899.66,1213.47 1900.24,1213.47 1900.83,1213.47 1901.42,1213.47 1902,1213.47 1902.59,1213.47 1903.17,1213.47 1903.76,1213.47 1904.35,1213.47 1904.93,1213.47 1905.52,1213.47 1906.11,1213.47 1906.69,1213.47 1907.28,1213.47 1907.87,1213.47 1908.45,1213.47 1909.04,1213.47 1909.63,1213.47 1910.21,1213.47 1910.8,1213.47 1911.38,1213.47 1911.97,1213.47 1912.56,1213.47 1913.14,1213.47 1913.73,1213.47 1914.32,1213.47 1914.9,1213.47 1915.49,1213.47 1916.08,1213.47 1916.66,1213.47 1917.25,1213.47 1917.83,1213.47 1918.42,1213.47 1919.01,1213.47 1919.59,1213.47 1920.18,1213.47 1920.77,1213.47 1921.35,1213.47 1921.94,1213.47 1922.53,1213.47 1923.11,1213.47 1923.7,1213.47 1924.29,1213.47 1924.87,1213.47 1925.46,1213.47 1926.04,1213.47 1926.63,1213.47 1927.22,1213.47 1927.8,1213.47 1928.39,1213.47 1928.98,1213.47 1929.56,1213.47 1930.15,1213.47 1930.74,1213.47 1931.32,1213.47 1931.91,1213.47 1932.5,1213.47 1933.08,1213.47 1933.67,1213.47 1934.25,1213.47 1934.84,1213.47 1935.43,1213.47 1936.01,1213.47 1936.6,1213.47 1937.19,1213.47 1937.77,1213.47 1938.36,1213.47 1938.95,1213.47 1939.53,1213.47 1940.12,1213.47 1940.71,1213.47 1941.29,1213.47 1941.88,1213.47 1942.46,1213.47 1943.05,1213.47 1943.64,1213.47 1944.22,1213.47 1944.81,1213.47 1945.4,1213.47 1945.98,1213.47 1946.57,1213.47 1947.16,1213.47 1947.74,1213.47 1948.33,1213.47 1948.91,1213.47 1949.5,1213.47 1950.09,1213.47 1950.67,1213.47 1951.26,1213.47 1951.85,1213.47 1952.43,1213.47 1953.02,1213.47 1953.61,1213.47 1954.19,1213.47 1954.78,1213.47 1955.37,1213.47 1955.95,1213.47 1956.54,1213.47 1957.12,1213.47 1957.71,1213.47 1958.3,1213.47 1958.88,1213.47 1959.47,1213.47 1960.06,1213.47 1960.64,1213.47 1961.23,1213.47 1961.82,1213.47 1962.4,1213.47 1962.99,1213.47 1963.58,1213.47 1964.16,1213.47 1964.75,1213.47 1965.33,1213.47 1965.92,1213.47 1966.51,1213.47 1967.09,1213.47 1967.68,1213.47 1968.27,1213.47 1968.85,1213.47 1969.44,1213.47 1970.03,1213.47 1970.61,1213.47 1971.2,1213.47 1971.78,1213.47 1972.37,1213.47 1972.96,1213.47 1973.54,1213.47 1974.13,1213.47 1974.72,1213.47 1975.3,1213.47 1975.89,1213.47 1976.48,1213.47 1977.06,1213.47 1977.65,1213.47 1978.24,1213.47 1978.82,1213.47 1979.41,1213.47 1979.99,1213.47 1980.58,1213.47 1981.17,1213.47 1981.75,1213.47 1982.34,1213.47 1982.93,1213.47 1983.51,1213.47 1984.1,1213.47 1984.69,1213.47 1985.27,1213.47 1985.86,1213.47 1986.45,1213.47 1987.03,1213.47 1987.62,1213.47 1988.2,1213.47 1988.79,1213.47 1989.38,1213.47 1989.96,1213.47 1990.55,1213.47 1991.14,1213.47 1991.72,1213.47 1992.31,1213.47 1992.9,1213.47 1993.48,1213.47 1994.07,1213.47 1994.65,1213.47 1995.24,1213.47 1995.83,1213.47 1996.41,1213.47 1997,1213.47 1997.59,1213.47 1998.17,1213.47 1998.76,1213.47 1999.35,1213.47 1999.93,1213.47 2000.52,1213.47 2001.11,1213.47 2001.69,1213.47 2002.28,1213.47 2002.86,1213.47 2003.45,1213.47 2004.04,1213.47 2004.62,1213.47 2005.21,1213.47 2005.8,1213.47 2006.38,1213.47 2006.97,1213.47 2007.56,1213.47 2008.14,1213.47 2008.73,1213.47 2009.32,1213.47 2009.9,1213.47 2010.49,1213.47 2011.07,1213.47 2011.66,1213.47 2012.25,1213.47 2012.83,1213.47 2013.42,1213.47 2014.01,1213.47 2014.59,1213.47 2015.18,1213.47 2015.77,1213.47 2016.35,1213.47 2016.94,1213.47 2017.53,1213.47 2018.11,1213.47 2018.7,1213.47 2019.28,1213.47 2019.87,1213.47 2020.46,1213.47 2021.04,1213.47 2021.63,1213.47 2022.22,1213.47 2022.8,1213.47 2023.39,1213.47 2023.98,1213.47 2024.56,1213.47 2025.15,1213.47 2025.73,1213.47 2026.32,1213.47 2026.91,1213.47 2027.49,1213.47 2028.08,1213.47 2028.67,1213.47 2029.25,1213.47 2029.84,1213.47 2030.43,1213.47 2031.01,1213.47 2031.6,1213.47 2032.19,1213.47 2032.77,1213.47 2033.36,1213.47 2033.94,1213.47 2034.53,1213.47 2035.12,1213.47 2035.7,1213.47 2036.29,1213.47 2036.88,1213.47 2037.46,1213.47 2038.05,1213.47 2038.64,1213.47 2039.22,1213.47 2039.81,1213.47 2040.4,1213.47 2040.98,1213.47 2041.57,1213.47 2042.15,1213.47 2042.74,1213.47 2043.33,1213.47 2043.91,1213.47 2044.5,1213.47 2045.09,1213.47 2045.67,1213.47 2046.26,1213.47 2046.85,1213.47 2047.43,1213.47 2048.02,1213.47 2048.6,1213.47 2049.19,1213.47 2049.78,1213.47 2050.36,1213.47 2050.95,1213.47 2051.54,1213.47 2052.12,1213.47 2052.71,1213.47 2053.3,1213.47 2053.88,1213.47 2054.47,1213.47 2055.06,1213.47 2055.64,1213.47 2056.23,1213.47 2056.81,1213.47 2057.4,1213.47 2057.99,1213.47 2058.57,1213.47 2059.16,1213.47 2059.75,1213.47 2060.33,1213.47 2060.92,1213.47 2061.51,1213.47 2062.09,1213.47 2062.68,1213.47 2063.27,1213.47 2063.85,1213.47 2064.44,1213.47 2065.02,1213.47 2065.61,1213.47 2066.2,1213.47 2066.78,1213.47 2067.37,1213.47 2067.96,1213.47 2068.54,1213.47 2069.13,1213.47 2069.72,1213.47 2070.3,1213.47 2070.89,1213.47 2071.48,1213.47 2072.06,1213.47 2072.65,1213.47 2073.23,1213.47 2073.82,1213.47 2074.41,1213.47 2074.99,1213.47 2075.58,1213.47 2076.17,1213.47 2076.75,1213.47 2077.34,1213.47 2077.93,1213.47 2078.51,1213.47 2079.1,1213.47 2079.68,1213.47 2080.27,1213.47 2080.86,1213.47 2081.44,1213.47 2082.03,1213.47 2082.62,1213.47 2083.2,1213.47 2083.79,1213.47 2084.38,1213.47 2084.96,1213.47 2085.55,1213.47 2086.14,1213.47 2086.72,1213.47 2087.31,1213.47 2087.89,1213.47 2088.48,1213.47 2089.07,1213.47 2089.65,1213.47 2090.24,1213.47 2090.83,1213.47 2091.41,1213.47 2092,1213.47 2092.59,1213.47 2093.17,1213.47 2093.76,1213.47 2094.35,1213.47 2094.93,1213.47 2095.52,1213.47 2096.1,1213.47 2096.69,1213.47 2097.28,1213.47 2097.86,1213.47 2098.45,1213.47 2099.04,1213.47 2099.62,1213.47 2100.21,1213.47 2100.8,1213.47 2101.38,1213.47 2101.97,1213.47 2102.55,1213.47 2103.14,1213.47 2103.73,1213.47 2104.31,1213.47 2104.9,1213.47 2105.49,1213.47 2106.07,1213.47 2106.66,1213.47 2107.25,1213.47 2107.83,1213.47 2108.42,1213.47 2109.01,1213.47 2109.59,1213.47 2110.18,1213.47 2110.76,1213.47 2111.35,1213.47 2111.94,1213.47 2112.52,1213.47 2113.11,1213.47 2113.7,1213.47 2114.28,1213.47 2114.87,1213.47 2115.46,1213.47 2116.04,1213.47 2116.63,1213.47 2117.22,1213.47 2117.8,1213.47 2118.39,1213.47 2118.97,1213.47 2119.56,1213.47 2120.15,1213.47 2120.73,1213.47 2121.32,1213.47 2121.91,1213.47 2122.49,1213.47 2123.08,1213.47 2123.67,1213.47 2124.25,1213.47 2124.84,1213.47 2125.42,1213.47 2126.01,1213.47 2126.6,1213.47 2127.18,1213.47 2127.77,1213.47 2128.36,1213.47 2128.94,1213.47 2129.53,1213.47 2130.12,1213.47 2130.7,1213.47 2131.29,1213.47 2131.88,1213.47 2132.46,1213.47 2133.05,1213.47 2133.63,1213.47 2134.22,1213.47 2134.81,1213.47 2135.39,1213.47 2135.98,1213.47 2136.57,1213.47 2137.15,1213.47 2137.74,1213.47 2138.33,1213.47 2138.91,1213.47 2139.5,1213.47 2140.09,1213.47 2140.67,1213.47 2141.26,1213.47 2141.84,1213.47 2142.43,1213.47 2143.02,1213.47 2143.6,1213.47 2144.19,1213.47 2144.78,1213.47 2145.36,1213.47 2145.95,1213.47 2146.54,1213.47 2147.12,1213.47 2147.71,1213.47 2148.3,1213.47 2148.88,1213.47 2149.47,1213.47 2150.05,1213.47 2150.64,1213.47 2151.23,1213.47 2151.81,1213.47 2152.4,1213.47 2152.99,1213.47 2153.57,1213.47 2154.16,1213.47 2154.75,1213.47 2155.33,1213.47 2155.92,1213.47 2156.5,1213.47 2157.09,1213.47 2157.68,1213.47 2158.26,1213.47 \"/>\n<polyline clip-path=\"url(#clip822)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1562.83,1196.84 1399.09,899.083 \"/>\n<polyline clip-path=\"url(#clip822)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1229.65 985.439,1196.84 2158.26,1196.84 2158.26,1229.65 985.439,1229.65 \"/>\n<path clip-path=\"url(#clip820)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip820)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip820)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip820)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip820)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip820)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip820)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip820)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip823\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip823)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip823)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip823)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip823)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip823)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip820)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip820)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip820)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip820)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip820)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip820)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip820)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip823)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip823)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip823)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip823)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip823)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip820)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip820)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip820)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip820)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip820)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip820)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip820)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip820)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip823)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-1577.5 161.555,-2922.08 162.114,-4155.78 162.673,-5286.05 163.232,-6319.78 163.792,-7263.33 164.351,-8122.62 164.91,-8903.13 165.469,-9609.97 166.029,-10247.9 166.588,-10821.4 167.147,-11334.6 167.706,-11791.5 168.266,-12195.6 168.825,-12550.4 169.384,-11990.8 169.943,-11512.4 170.503,-11779.6 171.062,-12017.6 171.621,-12229.7 172.18,-11819.5 172.74,-11983 173.299,-12107.3 173.858,-12210.9 174.417,-11841.8 174.977,-11879.5 175.536,-11535.9 176.095,-11556.4 176.655,-11562.5 177.214,-11230.4 177.773,-11190.2 178.332,-11138.8 178.892,-11083.4 179.451,-11010.4 180.01,-10474 180.569,-10381.9 181.129,-10088.1 181.688,-9796.58 182.247,-9519.05 182.806,-9403.76 183.366,-9279.83 183.925,-9149.6 184.484,-9020.33 185.043,-8870.45 185.603,-8602.16 186.162,-8329.79 186.721,-8068.94 187.28,-7821.26 187.84,-7584.17 188.399,-7360.57 188.958,-7224.77 189.517,-6829.15 190.077,-6682.28 190.636,-6542.28 191.195,-6167.48 191.754,-5810.84 192.314,-5624.91 192.873,-5505.25 193.432,-5320.97 193.991,-5147.89 194.551,-5034.73 195.11,-4867.61 195.669,-4645.81 196.228,-4541.77 196.788,-4338.97 197.347,-4191 197.906,-4004.08 198.465,-3865.87 199.025,-3732.99 199.584,-3553.93 200.143,-3425.69 200.702,-3342.09 201.262,-3260.52 201.821,-3096.61 202.38,-2863.36 202.939,-2676.41 203.499,-2571.46 204.058,-2505.07 204.617,-2363.46 205.176,-2196.58 205.736,-1929.2 206.295,-1838.99 206.854,-1752.16 207.413,-1700.47 207.973,-1556 208.532,-1482.41 209.091,-1464.54 209.65,-1390.72 210.21,-1285.97 210.769,-1185.45 211.328,-1140.55 211.887,-1071.52 212.447,-977.647 213.006,-941.902 213.565,-902.711 214.124,-786.315 214.684,-752.218 215.243,-667.174 215.802,-585.94 216.361,-457.302 216.921,-432.024 217.48,-364.099 218.039,-318.998 218.598,-273.649 219.158,-230.216 219.717,-184.438 220.276,-144.479 220.835,-79.4944 221.395,-36.6878 221.954,22.7703 222.513,61.1865 223.072,117.91 223.632,130.467 224.191,205.992 224.75,263.18 225.309,292.678 225.869,364.063 226.428,367.604 226.987,357.802 227.546,389.765 228.106,402.678 228.665,451.733 229.224,500.199 229.783,563.116 230.343,605.923 230.902,631.319 231.461,708.885 232.02,689.01 232.58,688.796 233.139,769.261 233.698,786.011 234.257,784.04 234.817,801.545 235.376,779.417 235.935,759.421 236.494,774.882 237.054,812.932 237.613,827.543 238.172,827.473 238.731,843.29 239.291,842.834 239.85,876.559 240.409,890.758 240.968,883.246 241.528,879.533 242.087,909.523 242.646,885.488 243.205,862.045 243.765,951.569 244.324,948.114 244.883,911.518 245.442,910.474 246.002,928.573 246.561,941.981 247.12,957.949 247.679,970.719 248.239,1004.07 248.798,1036.44 249.357,1026.37 249.916,1016.62 250.476,1025.75 251.035,1001.37 251.594,998.299 252.153,996.917 252.713,1009.31 253.272,1044.04 253.831,1037.84 254.39,1048.66 254.95,1074.58 255.509,1086.25 256.068,1077.38 256.627,1068.47 257.187,1091.2 257.746,1100.11 258.305,1090.97 258.864,1083.07 259.424,1076.73 259.983,1082.73 260.542,1112.04 261.101,1086.22 261.661,1058.39 262.22,1086.08 262.779,1096.46 263.338,1123.05 263.898,1147.26 264.457,1172.32 265.016,1163.21 265.575,1135.45 266.135,1124.28 266.694,1149.11 267.253,1156.13 267.812,1110.02 268.372,1136.44 268.931,1142.83 269.49,1149.41 270.049,1121.43 270.609,1109.03 271.168,1120.48 271.727,1111.9 272.286,1169.74 272.846,1144.39 273.405,1153.43 273.964,1177.21 274.523,1164.63 275.083,1153.32 275.642,1144.52 276.201,1115.33 276.76,1124.14 277.32,1116.71 277.879,1126.18 278.438,1119.15 278.997,1129.4 279.557,1122.22 280.116,1146.55 280.675,1120.28 281.234,1076.46 281.794,1068.88 282.353,1078.68 282.912,1074.05 283.471,1070.06 284.031,1029.96 284.59,1007.94 285.149,1020.09 285.708,1047.8 286.268,1042.68 286.827,1036.48 287.386,1015.58 287.945,1011.56 288.505,1024.35 289.064,1051.42 289.623,1061.22 290.182,1041.35 290.742,1035.45 291.301,1048.48 291.86,1041.76 292.419,1035.95 292.979,980.193 293.538,980.534 294.097,996.409 294.656,1010.63 295.216,989.847 295.775,990.104 296.334,985.91 296.893,965.72 297.453,993.453 298.012,990.29 298.571,1003.57 299.13,1015.62 299.69,1028.93 300.249,1058.79 300.808,1037 301.368,1032.6 301.927,1044.79 302.486,1055.6 303.045,1050.37 303.605,1058.65 304.164,1048.09 304.723,1023.32 305.282,1030.1 305.842,1033.5 306.401,1026.21 306.96,1034.71 307.519,1027.69 308.079,1037.51 308.638,1029.41 309.197,1027.46 309.756,1039.96 310.316,1034.83 310.875,1025.82 311.434,1003.39 311.993,978.497 312.553,990.279 313.112,1004.21 313.671,983.628 314.23,994.147 314.79,943.59 315.349,954.454 315.908,950.162 316.467,945.465 317.027,947.113 317.586,958.527 318.145,971.257 318.704,986.026 319.264,995.099 319.823,972.317 320.382,948.17 320.941,976.224 321.501,1024.33 322.06,1015.58 322.619,1007.44 323.178,1034.26 323.738,1094.04 324.297,1064.75 324.856,1040.12 325.415,1060.21 325.975,1046.07 326.534,1020.49 327.093,1028.78 327.652,1004.47 328.212,1029.71 328.771,1036.83 329.33,1043.07 329.889,1033.41 330.449,1044.25 331.008,1054.03 331.567,1043.14 332.126,1034.14 332.686,1024.23 333.245,1015.76 333.804,1004.27 334.363,1030.8 334.923,1021.68 335.482,995.54 336.041,1022.75 336.6,967.892 337.16,974.732 337.719,983.726 338.278,993.183 338.837,969.676 339.397,946.377 339.956,960.531 340.515,1018.91 341.074,1010.18 341.634,999.764 342.193,1010.69 342.752,1020.71 343.311,1012.52 343.871,1004.5 344.43,1010.09 344.989,998.477 345.548,1008.21 346.108,1015.39 346.667,1024.22 347.226,961.762 347.785,970.15 348.345,960.617 348.904,901.708 349.463,932.102 350.022,926.192 350.582,920.396 351.141,911.437 351.7,906.435 352.259,950.308 352.819,975.583 353.378,950.957 353.937,929.042 354.496,907.537 355.056,918.676 355.615,901.971 356.174,881.747 356.733,895.355 357.293,875.362 357.852,842.755 358.411,805.21 358.97,824.023 359.53,795.326 360.089,797.293 360.648,782.885 361.207,785.565 361.767,753.254 362.326,755.092 362.885,823.344 363.444,823.895 364.004,838.38 364.563,838.666 365.122,841.674 365.681,825.673 366.241,806.131 366.8,823.271 367.359,774.5 367.918,811.613 368.478,827.187 369.037,826.073 369.596,828.763 370.155,811.84 370.715,827.098 371.274,827.724 371.833,794.554 372.392,794.396 372.952,811.895 373.511,794.884 374.07,813.646 374.629,815.551 375.189,848.278 375.748,829.285 376.307,842.888 376.866,869.888 377.426,868.469 377.985,878.929 378.544,876.58 379.103,875.015 379.663,888.357 380.222,898.947 380.781,878.4 381.34,887.368 381.9,898.674 382.459,895.651 383.018,888.602 383.577,870.108 384.137,848.632 384.696,831.093 385.255,783.431 385.814,783.506 386.374,801.155 386.933,815.469 387.492,845.889 388.051,860.55 388.611,873.586 389.17,870.649 389.729,901.763 390.288,897.009 390.848,861.119 391.407,821.771 391.966,855.165 392.525,850.075 393.085,862.545 393.644,892.991 394.203,903.74 394.762,915.418 395.322,907.694 395.881,901.03 396.44,915.005 396.999,907.04 397.559,901.643 398.118,880.102 398.677,874.405 399.236,854.815 399.796,852.418 400.355,833.128 400.914,831.429 401.473,832.538 402.033,833.078 402.592,865.381 403.151,844.175 403.71,840.259 404.27,835.784 404.829,816.872 405.388,817.354 405.947,812.013 406.507,829.269 407.066,842.462 407.625,837.411 408.184,834.748 408.744,877.905 409.303,902.716 409.862,913.219 410.421,909.228 410.981,902.338 411.54,896.55 412.099,906.971 412.658,918.96 413.218,914.958 413.777,892.408 414.336,869.889 414.895,879.258 415.455,888.023 416.014,912.861 416.573,903.218 417.132,866.618 417.692,892.217 418.251,884.952 418.81,879.944 419.369,858.488 419.929,853.522 420.488,831.106 421.047,844.435 421.606,841.545 422.166,838.013 422.725,836.118 423.284,813.642 423.843,842.41 424.403,809.446 424.962,804.684 425.521,785.071 426.08,769.826 426.64,768.308 427.199,766.059 427.758,751.651 428.318,767.774 428.877,735.402 429.436,755.935 429.995,773.699 430.555,738.778 431.114,791.661 431.673,807.216 432.232,804.104 432.792,785.753 433.351,785.324 433.91,801.478 434.469,799.477 435.029,762.769 435.588,774.407 436.147,760.486 436.706,713.3 437.266,719.528 437.825,702.248 438.384,721.563 438.943,736.881 439.503,725.482 440.062,762.945 440.621,765.805 441.18,782.948 441.74,785.297 442.299,769.655 442.858,786.64 443.417,786.565 443.977,816.098 444.536,828.55 445.095,854.259 445.654,845.543 446.214,839.547 446.773,801.085 447.332,798.597 447.891,762.393 448.451,728.7 449.01,716.312 449.569,719.147 450.128,703.13 450.688,704.185 451.247,756.098 451.806,753.47 452.365,736.914 452.925,724.034 453.484,712.195 454.043,697.042 454.602,732.803 455.162,752.736 455.721,783.117 456.28,797.176 456.839,764 457.399,777.417 457.958,778.733 458.517,763.627 459.076,731.825 459.636,733.757 460.195,718.586 460.754,703.709 461.313,704.57 461.873,725.819 462.432,742.596 462.991,743.144 463.55,741.821 464.11,730.224 464.669,750.568 465.228,768.986 465.787,732.371 466.347,730.974 466.906,718.434 467.465,702.171 468.024,753.733 468.584,771.136 469.143,735.564 469.702,733.74 470.261,766.458 470.821,785.173 471.38,786.616 471.939,785.355 472.498,786.062 473.058,814.074 473.617,828.064 474.176,870.024 474.735,833.523 475.295,830.913 475.854,844.243 476.413,821.128 476.972,833.115 477.532,814.59 478.091,825.1 478.65,853.502 479.209,847.189 479.769,825.063 480.328,815.922 480.887,825.408 481.446,806.769 482.006,785.033 482.565,766.667 483.124,763.797 483.683,761.519 484.243,759.134 484.802,710.291 485.361,695.403 485.92,666.14 486.48,704.824 487.039,724.183 487.598,744.659 488.157,740.992 488.717,756.729 489.276,769.713 489.835,834.774 490.394,831.973 490.954,860.59 491.513,852.149 492.072,846.475 492.631,892.605 493.191,852.121 493.75,845.282 494.309,839.045 494.868,850.442 495.428,842.585 495.987,838 496.546,803.758 497.105,819.833 497.665,784.468 498.224,780.529 498.783,794.16 499.342,760.316 499.902,773.622 500.461,751.367 501.02,735.861 501.579,735.232 502.139,720.1 502.698,737.079 503.257,766.03 503.816,744.998 504.376,730.617 504.935,728.291 505.494,762.334 506.053,727.724 506.613,710.267 507.172,709.686 507.731,711.039 508.29,712.462 508.85,726.968 509.409,742.889 509.968,759.889 510.527,773.944 511.087,787.565 511.646,785.081 512.205,779.254 512.764,792.021 513.324,757.271 513.883,770.499 514.442,801.45 515.001,813.53 515.561,808.09 516.12,805.052 516.679,804.543 517.238,813.646 517.798,810.809 518.357,804.048 518.916,798.462 519.475,776.013 520.035,723.74 520.594,721.937 521.153,708.304 521.712,707.69 522.272,725.298 522.831,711.004 523.39,697.659 523.949,747.039 524.509,762.665 525.068,746.132 525.627,744.328 526.186,711.764 526.746,743.784 527.305,759.185 527.864,709.657 528.423,728.517 528.983,774.886 529.542,774.055 530.101,756.417 530.66,754.747 531.22,754.372 531.779,768.106 532.338,784.822 532.897,797.272 533.457,775.769 534.016,740.561 534.575,740.807 535.134,723.864 535.694,692.716 536.253,658.804 536.812,690.622 537.371,677.543 537.931,694.651 538.49,678.286 539.049,701.589 539.608,699.1 540.168,668.199 540.727,670.429 541.286,624.427 541.845,627.612 542.405,619.631 542.964,641.443 543.523,629.368 544.082,635.725 544.642,633.869 545.201,621.332 545.76,675.387 546.319,646.305 546.879,631.982 547.438,603.15 547.997,611.335 548.556,649.504 549.116,666.366 549.675,671.648 550.234,675.519 550.793,662.335 551.353,677.217 551.912,727.884 552.471,728.213 553.031,709.36 553.59,708.524 554.149,696.108 554.708,696.64 555.268,695.711 555.827,697.15 556.386,715.08 556.945,716.606 557.505,704.478 558.064,690.394 558.623,711.089 559.182,678.379 559.742,695.525 560.301,732.294 560.86,717.31 561.419,736.652 561.979,738.705 562.538,709.884 563.097,707.679 563.656,724.178 564.216,707.395 564.775,693.242 565.334,676.823 565.893,661.873 566.453,629.074 567.012,634.202 567.571,637.105 568.13,657.799 568.69,660.287 569.249,682.594 569.808,700.37 570.367,718.585 570.927,722.183 571.486,737.405 572.045,734.293 572.604,703.612 573.164,689.693 573.723,719.684 574.282,719.667 574.841,753.687 575.401,767.429 575.96,778.118 576.519,789.557 577.078,800.623 577.638,779.739 578.197,758.768 578.756,755.825 579.315,768.336 579.875,779.694 580.434,822.745 580.993,799.518 581.552,797.354 582.112,793.679 582.671,789.904 583.23,819.614 583.789,813.849 584.349,810.966 584.908,804.558 585.467,798.285 586.026,824.277 586.586,851.851 587.145,859.891 587.704,818.329 588.263,815.551 588.823,824.101 589.382,816.501 589.941,779.663 590.5,773.772 591.06,801.742 591.619,828.993 592.178,820.791 592.737,800.13 593.297,792.444 593.856,753.651 594.415,783.828 594.974,828.819 595.534,808.72 596.093,817.722 596.652,808.188 597.211,748.786 597.771,728.439 598.33,696.876 598.889,664.28 599.448,679.328 600.008,682.807 600.567,699.257 601.126,748.536 601.685,729.246 602.245,712.983 602.804,729.091 603.363,741.847 603.922,690.316 604.482,690.687 605.041,723.795 605.6,723.58 606.159,737.631 606.719,737.53 607.278,735.656 607.837,731.693 608.396,731.9 608.956,731.192 609.515,729.202 610.074,711.055 610.633,711.453 611.193,713.032 611.752,712.497 612.311,727.333 612.87,679.117 613.43,696.911 613.989,697.39 614.548,681.685 615.107,650.361 615.667,654.714 616.226,674.551 616.785,678.94 617.344,663.394 617.904,650.822 618.463,665.489 619.022,672.182 619.581,673.793 620.141,661.48 620.7,679.308 621.259,649.795 621.818,670.769 622.378,659.956 622.937,626.404 623.496,628.937 624.055,649.609 624.615,668.47 625.174,655.835 625.733,642.582 626.292,629.274 626.852,635.826 627.411,609.611 627.97,585.473 628.529,576.35 629.089,550.143 629.648,623.204 630.207,614.724 630.766,634.008 631.326,637.914 631.885,672.056 632.444,638.578 633.003,643.133 633.563,678.906 634.122,647.044 634.681,620.03 635.24,581.64 635.8,590.402 636.359,614.497 636.918,622.943 637.477,625.392 638.037,662.64 638.596,727.495 639.155,740.384 639.714,710.435 640.274,713.291 640.833,714.116 641.392,726.482 641.951,742.382 642.511,737.892 643.07,748.304 643.629,762.475 644.188,724.823 644.748,706.951 645.307,725.041 645.866,724.654 646.425,722.681 646.985,681.736 647.544,667.04 648.103,664.146 648.662,668.72 649.222,684.806 649.781,668.262 650.34,703.843 650.899,701.827 651.459,701.115 652.018,703.201 652.577,703.43 653.136,735.135 653.696,749.67 654.255,764.71 654.814,745.1 655.373,742.804 655.933,790.061 656.492,767.256 657.051,733.112 657.61,731.399 658.17,748.45 658.729,730.173 659.288,727.027 659.847,695.153 660.407,692.742 660.966,723.584 661.525,708.529 662.084,694.079 662.644,713.869 663.203,762.529 663.762,756.112 664.321,751.696 664.881,781.262 665.44,792.873 665.999,802.165 666.558,798.203 667.118,794.042 667.677,802.514 668.236,784.589 668.795,764.059 669.355,761.224 669.914,788.977 670.473,780.675 671.032,792.401 671.592,739.849 672.151,754.292 672.71,719.244 673.269,753.11 673.829,765.768 674.388,774.859 674.947,772.617 675.506,784.794 676.066,780.992 676.625,791.902 677.184,803.729 677.743,798.513 678.303,824.769 678.862,820.463 679.421,844.521 679.981,834.603 680.54,826.391 681.099,850.79 681.658,809.243 682.218,834.948 682.777,827.186 683.336,836.097 683.895,812.814 684.455,806.737 685.014,802.566 685.573,793.947 686.132,806.6 686.692,800.957 687.251,812.103 687.81,791.169 688.369,801.244 688.929,778.32 689.488,742.225 690.047,722.958 690.606,721.592 691.166,721.591 691.725,767.52 692.284,712.788 692.843,713.448 693.403,713.227 693.962,697.772 694.521,694.855 695.08,692.504 695.64,676.142 696.199,660.79 696.758,647.099 697.317,681.286 697.877,653.525 698.436,653.63 698.995,620.701 699.554,578.051 700.114,550.054 700.673,508.027 701.232,469.499 701.791,449.158 702.351,479.429 702.91,475.141 703.469,520.242 704.028,542.078 704.588,535.463 705.147,573.909 705.706,592.714 706.265,583.06 706.825,589.385 707.384,581.218 707.943,606.307 708.502,590.392 709.062,564.989 709.621,521.164 710.18,548.691 710.739,507.356 711.299,548.73 711.858,574.472 712.417,595.187 712.976,582.713 713.536,576.218 714.095,600.713 714.654,586.64 715.213,626.079 715.773,615.075 716.332,601.289 716.891,605.407 717.45,591.595 718.01,583.134 718.569,590.406 719.128,614.095 719.687,636.524 720.247,674.259 720.806,673.807 721.365,688.661 721.924,687.357 722.484,685.544 723.043,686.045 723.602,719.583 724.161,687.098 724.721,688.322 725.28,641.028 725.839,647.038 726.398,668.283 726.958,684.581 727.517,665.868 728.076,701.331 728.635,701.368 729.195,731.124 729.754,730.463 730.313,729.514 730.872,742.576 731.432,738.992 731.991,734.497 732.55,747.123 733.109,746.546 733.669,728.757 734.228,705.181 734.787,688.497 735.346,688.209 735.906,703.398 736.465,669.508 737.024,718.97 737.583,718.528 738.143,699.692 738.702,701.57 739.261,700.844 739.82,735.603 740.38,731.849 740.939,712.94 741.498,693.727 742.057,709.884 742.617,691.794 743.176,688.175 743.735,704.171 744.294,671.613 744.854,688.983 745.413,705.648 745.972,707.335 746.531,659.311 747.091,661.485 747.65,680.369 748.209,649.224 748.768,665.397 749.328,670.279 749.887,753.708 750.446,818.081 751.005,796.169 751.565,760.121 752.124,790.439 752.683,755.715 753.242,784.888 753.802,762.703 754.361,695.216 754.92,678.035 755.479,726.644 756.039,722.685 756.598,709.177 757.157,676.47 757.716,676.171 758.276,693.361 758.835,687.411 759.394,703.472 759.953,686.857 760.513,606.075 761.072,626.144 761.631,630.708 762.19,634.904 762.75,655.046 763.309,642.253 763.868,646.438 764.427,647.807 764.987,619.202 765.546,622.709 766.105,610.347 766.664,644.788 767.224,616.542 767.783,604.122 768.342,609.827 768.901,632.079 769.461,602.716 770.02,591.203 770.579,628.766 771.138,616.212 771.698,586.951 772.257,607.531 772.816,629.776 773.375,667.276 773.935,668.228 774.494,667.51 775.053,668.234 775.612,719.352 776.172,732.393 776.731,748.655 777.29,732.448 777.849,712.918 778.409,709.57 778.968,692.678 779.527,672.767 780.086,674.084 780.646,661.515 781.205,678.817 781.764,709.398 782.323,708.877 782.883,690.023 783.442,674.609 784.001,677.241 784.56,680.581 785.12,698.739 785.679,695.87 786.238,663.01 786.797,663.161 787.357,667.201 787.916,701.393 788.475,668.164 789.034,699.941 789.594,669.034 790.153,669.946 790.712,657.106 791.271,674.725 791.831,691.853 792.39,678.197 792.949,677.544 793.508,659.823 794.068,678.946 794.627,713.8 795.186,711.854 795.745,730.033 796.305,726.624 796.864,741.245 797.423,721.4 797.982,750.77 798.542,725.127 799.101,722.238 799.66,723.103 800.219,741.362 800.779,722.057 801.338,725.213 801.897,707.384 802.456,705.457 803.016,719.889 803.575,765.666 804.134,745.396 804.693,741.661 805.253,726.321 805.812,726.574 806.371,719.366 806.931,717.547 807.49,719.294 808.049,730.896 808.608,715.938 809.168,716.351 809.727,713.894 810.286,727.955 810.845,707.559 811.405,671.253 811.964,670.439 812.523,701.793 813.082,668.872 813.642,685.908 814.201,655.869 814.76,644.945 815.319,643.581 815.879,661.971 816.438,644.643 816.997,664.601 817.556,680.651 818.116,700.649 818.675,666.091 819.234,684.051 819.793,700.665 820.353,681.56 820.912,682.921 821.471,714.997 822.03,712.281 822.59,695.677 823.149,710.608 823.708,710.178 824.267,710.045 824.827,724.739 825.386,689.403 825.945,674.353 826.504,675.989 827.064,709.818 827.623,756.903 828.182,798.711 828.741,791.542 829.301,770.916 829.86,749.922 830.419,758.095 830.978,752.706 831.538,746.791 832.097,726.762 832.656,742.45 833.215,721.624 833.775,690.084 834.334,705.185 834.893,738.256 835.452,717.387 836.012,700.063 836.571,681.532 837.13,632.214 837.689,620.766 838.249,641.838 838.808,646.232 839.367,629.206 839.926,679.263 840.486,664.029 841.045,645.831 841.604,666.997 842.163,681.94 842.723,692.955 843.282,689.3 843.841,674.186 844.4,678.215 844.96,710.883 845.519,694.179 846.078,681.596 846.637,696.595 847.197,732.569 847.756,713.134 848.315,696.333 848.874,725.008 849.434,753.827 849.993,795.15 850.552,791.594 851.111,785.025 851.671,766.736 852.23,774.597 852.789,736.198 853.348,737.092 853.908,734.734 854.467,734.404 855.026,766.939 855.585,729.818 856.145,743.114 856.704,757.611 857.263,754.565 857.822,755.17 858.382,749.535 858.941,761.135 859.5,723.525 860.059,706.656 860.619,688.305 861.178,693.201 861.737,723.991 862.296,738.273 862.856,702.962 863.415,671.068 863.974,623.29 864.533,657.39 865.093,688.718 865.652,642.277 866.211,643.319 866.77,662.501 867.33,645.439 867.889,643.515 868.448,644.718 869.007,613.444 869.567,617.2 870.126,618.264 870.685,670.775 871.244,655.953 871.804,675.452 872.363,680.391 872.922,645.542 873.481,646.358 874.041,631.97 874.6,618.134 875.159,625.245 875.718,633.125 876.278,634.859 876.837,643.45 877.396,645.768 877.955,684.954 878.515,636.593 879.074,671.782 879.633,640.648 880.192,644.46 880.752,630.794 881.311,620.087 881.87,657.302 882.429,658.473 882.989,646.285 883.548,679.917 884.107,664.654 884.666,649.455 885.226,665.509 885.785,665.998 886.344,652.221 886.903,671.389 887.463,673.603 888.022,691.978 888.581,678.649 889.14,694.612 889.7,694.383 890.259,677.566 890.818,697.693 891.377,665.088 891.937,653.389 892.496,669.977 893.055,641.316 893.614,628.08 894.174,616.041 894.733,623.826 895.292,629.661 895.851,633.011 896.411,618.747 896.97,608.379 897.529,628.36 898.088,598.738 898.648,619.363 899.207,640.434 899.766,662.835 900.325,662.051 900.885,645.134 901.444,667.124 902.003,665.716 902.562,651.594 903.122,651.375 903.681,671.848 904.24,701.509 904.799,732.401 905.359,718.595 905.918,766.607 906.477,793.041 907.036,804.105 907.596,803.568 908.155,763.308 908.714,757.644 909.273,737.418 909.833,757.623 910.392,771.599 910.951,735.925 911.51,733.964 912.07,731.788 912.629,747.22 913.188,762.16 913.747,757.017 914.307,752.9 914.866,748.14 915.425,748.285 915.984,761.37 916.544,735.969 917.103,719.951 917.662,716.826 918.221,715.846 918.781,730.371 919.34,730.67 919.899,711.464 920.458,742.953 921.018,727.36 921.577,745.187 922.136,773.963 922.695,735.435 923.255,737.405 923.814,704.385 924.373,721.254 924.932,701.469 925.492,701.982 926.051,729.574 926.61,740.557 927.169,738.634 927.729,748.917 928.288,728.441 928.847,742.562 929.406,754.136 929.966,767.415 930.525,743.217 931.084,740.792 931.644,767.631 932.203,763.933 932.762,744.981 933.321,726.284 933.881,688.888 934.44,658.773 934.999,675.354 935.558,707.374 936.118,722.187 936.677,721.941 937.236,710.243 937.795,741.415 938.355,739.719 938.914,722.913 939.473,735.341 940.032,716.239 940.592,733.066 941.151,682.976 941.71,666.793 942.269,680.78 942.829,680.888 943.388,677.143 943.947,679.497 944.506,663.938 945.066,694.288 945.625,710.267 946.184,720.669 946.743,701.338 947.303,699.329 947.862,681.705 948.421,601.856 948.98,587.452 949.54,577.36 950.099,583.541 950.658,573.852 951.217,563.967 951.777,588.056 952.336,576.929 952.895,585.051 953.454,576.645 954.014,583.503 954.573,605.628 955.132,609.7 955.691,630.56 956.251,583.89 956.81,608.067 957.369,611.425 957.928,648.627 958.488,601.925 959.047,607.863 959.606,613.892 960.165,615.828 960.725,650.257 961.284,701.271 961.843,713.865 962.402,728.443 962.962,697.713 963.521,679.161 964.08,662.204 964.639,665.423 965.199,649.494 965.758,667.024 966.317,669.253 966.876,627.869 967.436,615.474 967.995,636.031 968.554,651.097 969.113,670.787 969.673,671.662 970.232,705.833 970.791,737.362 971.35,719.707 971.91,717.445 972.469,699.928 973.028,685.505 973.587,699.671 974.147,682.916 974.706,664.741 975.265,694.947 975.824,678.559 976.384,628.315 976.943,665.33 977.502,684.392 978.061,699.226 978.621,714.531 979.18,698.283 979.739,701.352 980.298,718.254 980.858,713.864 981.417,682.573 981.976,712.593 982.535,709.115 983.095,721.904 983.654,719.804 984.213,737.101 984.772,713.144 985.332,739.315 985.891,704.167 986.45,655.569 987.009,674.018 987.569,692.026 988.128,678.156 988.687,683.733 989.246,685.609 989.806,653.839 990.365,657.281 990.924,656.695 991.483,658.169 992.043,659.105 992.602,644.219 993.161,629.078 993.72,598.922 994.28,619.074 994.839,608.454 995.398,625.744 995.957,628.831 996.517,631.737 997.076,650.145 997.635,651.303 998.194,639.751 998.754,643.692 999.313,648.281 999.872,616.555 1000.43,620.872 1000.99,639.256 1001.55,641.698 1002.11,644.377 1002.67,663.324 1003.23,649.203 1003.79,647.004 1004.35,647.323 1004.91,650.135 1005.46,667.357 1006.02,648.173 1006.58,629.374 1007.14,665.286 1007.7,714.324 1008.26,713.702 1008.82,699.545 1009.38,699.457 1009.94,684.284 1010.5,720.94 1011.06,737.94 1011.62,734.549 1012.18,699.135 1012.73,713.099 1013.29,710.384 1013.85,740.693 1014.41,734.911 1014.97,733.276 1015.53,745.174 1016.09,713.423 1016.65,710.347 1017.21,739.976 1017.77,769.363 1018.33,734.011 1018.89,748.083 1019.45,776.496 1020.01,805.766 1020.56,764.42 1021.12,726.816 1021.68,725.671 1022.24,739.142 1022.8,751.084 1023.36,713.136 1023.92,725.738 1024.48,724.697 1025.04,722.337 1025.6,707.617 1026.16,707.428 1026.72,676.24 1027.28,662.683 1027.83,633.65 1028.39,651.65 1028.95,670.325 1029.51,671.993 1030.07,684.766 1030.63,684.592 1031.19,697.279 1031.75,713.987 1032.31,713.909 1032.87,695.893 1033.43,712.276 1033.99,722.765 1034.55,718.216 1035.1,734.971 1035.66,699.646 1036.22,697.707 1036.78,713.698 1037.34,676.626 1037.9,693.714 1038.46,693.074 1039.02,658.994 1039.58,629.089 1040.14,614.885 1040.7,650.687 1041.26,654.198 1041.82,668.983 1042.38,656.607 1042.93,642.239 1043.49,646.145 1044.05,633.263 1044.61,639.396 1045.17,660.683 1045.73,645.755 1046.29,646.411 1046.85,664.167 1047.41,682.481 1047.97,710.718 1048.53,673.75 1049.09,656.806 1049.65,659.678 1050.2,645.933 1050.76,679.255 1051.32,696.137 1051.88,726.871 1052.44,707.592 1053,769.567 1053.56,799.825 1054.12,792.376 1054.68,767.348 1055.24,760.189 1055.8,756.267 1056.36,753.49 1056.92,760.878 1057.48,788.593 1058.03,767.588 1058.59,794.622 1059.15,772.987 1059.71,767.518 1060.27,760.93 1060.83,772.297 1061.39,768.351 1061.95,765.481 1062.51,764.933 1063.07,743.35 1063.63,770.37 1064.19,746.589 1064.75,743.057 1065.3,685.438 1065.86,699.829 1066.42,695.502 1066.98,711.96 1067.54,680.707 1068.1,669.943 1068.66,669.657 1069.22,654.32 1069.78,669.948 1070.34,654.489 1070.9,641.218 1071.46,624.983 1072.02,658.974 1072.57,643.327 1073.13,662.262 1073.69,664.644 1074.25,698.717 1074.81,732.321 1075.37,714.515 1075.93,714.125 1076.49,712.572 1077.05,727.112 1077.61,739.974 1078.17,721.832 1078.73,702.965 1079.29,734.571 1079.85,664.025 1080.4,682.401 1080.96,700.638 1081.52,685.773 1082.08,651.341 1082.64,652.956 1083.2,656.934 1083.76,621.058 1084.32,637.473 1084.88,639.564 1085.44,611.031 1086,612.545 1086.56,597.619 1087.12,618.48 1087.67,601.821 1088.23,644.703 1088.79,648.834 1089.35,650.837 1089.91,655.044 1090.47,653.847 1091.03,641.423 1091.59,627.175 1092.15,613.916 1092.71,605.564 1093.27,593.493 1093.83,648.43 1094.39,680.706 1094.94,700.828 1095.5,683.575 1096.06,668.971 1096.62,670.538 1097.18,686.941 1097.74,719.808 1098.3,735.98 1098.86,716.268 1099.42,702.896 1099.98,691.163 1100.54,706.919 1101.1,673.666 1101.66,659.163 1102.22,658.001 1102.77,673.014 1103.33,691.304 1103.89,656.945 1104.45,675.099 1105.01,672.268 1105.57,639.16 1106.13,673.19 1106.69,654.951 1107.25,687.702 1107.81,656.428 1108.37,639.481 1108.93,673.955 1109.49,708.761 1110.04,704.629 1110.6,703.299 1111.16,702.111 1111.72,703.498 1112.28,707.005 1112.84,705.725 1113.4,705.499 1113.96,687.409 1114.52,655.463 1115.08,673.888 1115.64,672.48 1116.2,660.324 1116.76,692.173 1117.31,703.44 1117.87,672.127 1118.43,668.212 1118.99,669.411 1119.55,671.331 1120.11,686.536 1120.67,688.837 1121.23,657.112 1121.79,640.104 1122.35,624.163 1122.91,626.46 1123.47,616.806 1124.03,621.013 1124.59,626.398 1125.14,643.966 1125.7,661.329 1126.26,678.396 1126.82,693.063 1127.38,694.205 1127.94,675.882 1128.5,675.272 1129.06,706.359 1129.62,655.759 1130.18,670.543 1130.74,668.851 1131.3,687.057 1131.86,701.49 1132.41,686.933 1132.97,705.351 1133.53,722.053 1134.09,753.096 1134.65,747.16 1135.21,727.526 1135.77,740.975 1136.33,740.565 1136.89,738.263 1137.45,749.059 1138.01,747.789 1138.57,728.183 1139.13,676.799 1139.68,677.611 1140.24,677.5 1140.8,677.099 1141.36,694.448 1141.92,710.849 1142.48,709.161 1143.04,689.049 1143.6,686.9 1144.16,682.799 1144.72,697.636 1145.28,713.097 1145.84,729.682 1146.4,728.087 1146.96,707.87 1147.51,702.94 1148.07,685.644 1148.63,652.57 1149.19,618.44 1149.75,605.237 1150.31,639.494 1150.87,658.696 1151.43,693.464 1151.99,692.592 1152.55,660.264 1153.11,662.462 1153.67,661.61 1154.23,677.496 1154.78,676.003 1155.34,675.635 1155.9,692.609 1156.46,737.948 1157.02,766.8 1157.58,811.25 1158.14,801.559 1158.7,808.583 1159.26,800.772 1159.82,809.379 1160.38,804.264 1160.94,809.256 1161.5,785.048 1162.05,765.533 1162.61,742.888 1163.17,737.299 1163.73,718.898 1164.29,734.998 1164.85,700.979 1165.41,719.135 1165.97,684.869 1166.53,700.898 1167.09,705.883 1167.65,690.301 1168.21,690.234 1168.77,708.435 1169.33,693.249 1169.88,678.216 1170.44,677.131 1171,676.471 1171.56,675.267 1172.12,642.144 1172.68,644.535 1173.24,663.559 1173.8,667.445 1174.36,683.982 1174.92,669.768 1175.48,687.322 1176.04,691.234 1176.6,705.232 1177.15,672.764 1177.71,705.034 1178.27,672.7 1178.83,689.732 1179.39,722.904 1179.95,769.425 1180.51,781.41 1181.07,776.665 1181.63,774.605 1182.19,754.011 1182.75,768.195 1183.31,762.851 1183.87,739.45 1184.43,767.037 1184.98,743.733 1185.54,753.726 1186.1,751.861 1186.66,765.337 1187.22,728.001 1187.78,710.227 1188.34,692.252 1188.9,695.233 1189.46,709.343 1190.02,740.087 1190.58,736.764 1191.14,715.881 1191.7,716.063 1192.25,662.829 1192.81,645.456 1193.37,695.647 1193.93,710.981 1194.49,729.363 1195.05,723.307 1195.61,754.261 1196.17,738.235 1196.73,724.303 1197.29,724.732 1197.85,705.213 1198.41,667.956 1198.97,688.382 1199.52,690.225 1200.08,706.82 1200.64,674.127 1201.2,706.86 1201.76,672.726 1202.32,707.922 1202.88,690.608 1203.44,674.383 1204,705.673 1204.56,675.23 1205.12,676.077 1205.68,661.277 1206.24,664.073 1206.8,667.154 1207.35,653.039 1207.91,654.226 1208.47,685.896 1209.03,670.518 1209.59,634.693 1210.15,620.59 1210.71,688.687 1211.27,688.198 1211.83,721.726 1212.39,737.549 1212.95,718.87 1213.51,719.317 1214.07,732.072 1214.62,732.908 1215.18,731.285 1215.74,728.235 1216.3,709.206 1216.86,708.268 1217.42,692.964 1217.98,642.598 1218.54,629.004 1219.1,564.966 1219.66,553.768 1220.22,543.202 1220.78,568.404 1221.34,593.306 1221.89,567.341 1222.45,559.28 1223.01,533.785 1223.57,577.434 1224.13,570.691 1224.69,578.38 1225.25,584.847 1225.81,574.78 1226.37,582.313 1226.93,603.84 1227.49,590.151 1228.05,627.035 1228.61,630.403 1229.17,664.465 1229.72,651.002 1230.28,652.015 1230.84,672.055 1231.4,658.825 1231.96,707.343 1232.52,705.407 1233.08,709.973 1233.64,710.809 1234.2,709.482 1234.76,709.916 1235.32,709.065 1235.88,755.787 1236.44,767.416 1236.99,781.417 1237.55,778.933 1238.11,785.745 1238.67,731.627 1239.23,761.415 1239.79,775.95 1240.35,756.226 1240.91,738.181 1241.47,731.723 1242.03,711.753 1242.59,742.063 1243.15,754.502 1243.71,752.969 1244.26,731.309 1244.82,743.978 1245.38,772.346 1245.94,733.905 1246.5,716.555 1247.06,718.659 1247.62,700.899 1248.18,700.188 1248.74,685.165 1249.3,702.396 1249.86,704.041 1250.42,714.95 1250.98,733.073 1251.54,712.119 1252.09,724.818 1252.65,803.359 1253.21,799.201 1253.77,776.389 1254.33,755.626 1254.89,782.355 1255.45,762.854 1256.01,762.119 1256.57,739.42 1257.13,734.231 1257.69,714.267 1258.25,682.704 1258.81,651.533 1259.36,636.521 1259.92,636.073 1260.48,641.555 1261.04,658.207 1261.6,677.775 1262.16,691.199 1262.72,707.746 1263.28,708.329 1263.84,706.793 1264.4,690.428 1264.96,703.733 1265.52,719.77 1266.08,702.356 1266.63,702.796 1267.19,691.517 1267.75,691.755 1268.31,673.078 1268.87,643.099 1269.43,616.364 1269.99,558.66 1270.55,565.037 1271.11,572.902 1271.67,626.662 1272.23,629.958 1272.79,636.792 1273.35,638.513 1273.91,636.063 1274.46,636.982 1275.02,637.179 1275.58,588.594 1276.14,592.363 1276.7,580.419 1277.26,584.298 1277.82,607.59 1278.38,597.593 1278.94,635.878 1279.5,640.775 1280.06,643.032 1280.62,631.539 1281.18,650.63 1281.73,625.038 1282.29,610.488 1282.85,628.967 1283.41,647.56 1283.97,650.096 1284.53,672.183 1285.09,658.795 1285.65,675.763 1286.21,659.476 1286.77,643.975 1287.33,647.496 1287.89,632.034 1288.45,620.433 1289,625.362 1289.56,661.501 1290.12,679.135 1290.68,679.244 1291.24,665.652 1291.8,681.006 1292.36,700.517 1292.92,697.574 1293.48,726.72 1294.04,723.23 1294.6,708.42 1295.16,691.002 1295.72,660.606 1296.28,663.81 1296.83,680.198 1297.39,683.569 1297.95,683.839 1298.51,683.451 1299.07,672.314 1299.63,657.623 1300.19,625.798 1300.75,612.324 1301.31,646.767 1301.87,650.529 1302.43,638.986 1302.99,640.973 1303.55,628.796 1304.1,662.651 1304.66,646.301 1305.22,649.721 1305.78,667.406 1306.34,669.123 1306.9,687.152 1307.46,669.76 1308.02,655.942 1308.58,639.814 1309.14,656.939 1309.7,641.296 1310.26,626.872 1310.82,613.586 1311.38,636.339 1311.93,674.431 1312.49,674.538 1313.05,702.534 1313.61,717.653 1314.17,746.792 1314.73,759.4 1315.29,770.91 1315.85,750.705 1316.41,711.643 1316.97,695.229 1317.53,727.973 1318.09,711.263 1318.65,713.015 1319.2,716.681 1319.76,717.618 1320.32,718.414 1320.88,731.712 1321.44,730.922 1322,711.821 1322.56,696.908 1323.12,683.425 1323.68,718.108 1324.24,733.259 1324.8,732.204 1325.36,708.242 1325.92,705.817 1326.47,672.16 1327.03,670.914 1327.59,673.673 1328.15,675.82 1328.71,677.852 1329.27,642.184 1329.83,659.743 1330.39,666.692 1330.95,682.191 1331.51,683.054 1332.07,665.287 1332.63,680.05 1333.19,663.526 1333.75,665.72 1334.3,681.374 1334.86,691.268 1335.42,692.258 1335.98,708.489 1336.54,692.508 1337.1,693.294 1337.66,662.721 1338.22,694.388 1338.78,710.388 1339.34,735.625 1339.9,715.874 1340.46,681.951 1341.02,681.246 1341.57,699.135 1342.13,679.798 1342.69,680.529 1343.25,648.238 1343.81,632.781 1344.37,652.688 1344.93,651.306 1345.49,671.719 1346.05,689.391 1346.61,686.164 1347.17,718.584 1347.73,684.167 1348.29,698.625 1348.84,760.241 1349.4,772.956 1349.96,749.629 1350.52,748.191 1351.08,745.413 1351.64,774.741 1352.2,754.899 1352.76,734.461 1353.32,699.133 1353.88,726.252 1354.44,724.551 1355,723.224 1355.56,736.024 1356.12,735.67 1356.67,780.868 1357.23,763.927 1357.79,744.335 1358.35,722.881 1358.91,671.49 1359.47,674.664 1360.03,724.77 1360.59,708.517 1361.15,725.511 1361.71,726.287 1362.27,740.847 1362.83,724.187 1363.39,771.181 1363.94,782.868 1364.5,776.232 1365.06,734.713 1365.62,699.034 1366.18,714.404 1366.74,731.492 1367.3,746.485 1367.86,745.821 1368.42,760.316 1368.98,758.167 1369.54,754.682 1370.1,731.774 1370.66,730.481 1371.21,730.074 1371.77,739.163 1372.33,765.874 1372.89,745.722 1373.45,741.534 1374.01,721.265 1374.57,737.051 1375.13,704.326 1375.69,734.196 1376.25,715.866 1376.81,716.55 1377.37,713.009 1377.93,695.889 1378.49,692.511 1379.04,660.799 1379.6,660.973 1380.16,678.875 1380.72,694.717 1381.28,707.115 1381.84,724.845 1382.4,704.42 1382.96,654.523 1383.52,699.647 1384.08,714.97 1384.64,695.169 1385.2,691.299 1385.76,675.06 1386.31,676.25 1386.87,692.686 1387.43,692.041 1387.99,691.976 1388.55,670.499 1389.11,670.643 1389.67,652.107 1390.23,669.848 1390.79,638.531 1391.35,624.58 1391.91,611.958 1392.47,616.637 1393.03,620.695 1393.58,574.293 1394.14,612.075 1394.7,596.69 1395.26,583.582 1395.82,540.347 1396.38,512.723 1396.94,522.925 1397.5,530.735 1398.06,522.932 1398.62,530.802 1399.18,554.889 1399.74,575.365 1400.3,565.644 1400.86,589.223 1401.41,625.921 1401.97,648.323 1402.53,636.27 1403.09,637.258 1403.65,625.575 1404.21,630.62 1404.77,632 1405.33,647.366 1405.89,648.928 1406.45,701.093 1407.01,681.292 1407.57,682.398 1408.13,647.037 1408.68,584.068 1409.24,589.581 1409.8,544.601 1410.36,551.254 1410.92,562.373 1411.48,569.136 1412.04,573.043 1412.6,579.032 1413.16,584.168 1413.72,591.002 1414.28,594.768 1414.84,598.467 1415.4,587.704 1415.95,610.199 1416.51,611.021 1417.07,600.108 1417.63,606.374 1418.19,624.176 1418.75,624.596 1419.31,595.577 1419.87,617.994 1420.43,606.126 1420.99,612.353 1421.55,614.401 1422.11,619.793 1422.67,609.31 1423.23,614.455 1423.78,633.744 1424.34,638.72 1424.9,658.045 1425.46,678.707 1426.02,678.087 1426.58,664.484 1427.14,668.032 1427.7,702.447 1428.26,706.524 1428.82,689.051 1429.38,706.817 1429.94,710.692 1430.5,757.761 1431.05,736.124 1431.61,733.9 1432.17,731.263 1432.73,715.205 1433.29,747.479 1433.85,776.379 1434.41,738.644 1434.97,722.51 1435.53,722.778 1436.09,723.484 1436.65,701.967 1437.21,701.203 1437.77,719.506 1438.33,719.426 1438.88,699.921 1439.44,733.19 1440,702.193 1440.56,684.905 1441.12,668.094 1441.68,689.119 1442.24,688.287 1442.8,654.862 1443.36,656.876 1443.92,656.843 1444.48,641.438 1445.04,646.218 1445.6,636.42 1446.15,625.726 1446.71,628.449 1447.27,630.251 1447.83,648.641 1448.39,666.776 1448.95,668.415 1449.51,636.057 1450.07,620.873 1450.63,628.03 1451.19,635.254 1451.75,657.622 1452.31,657.368 1452.87,643.002 1453.42,645.033 1453.98,644.277 1454.54,631.94 1455.1,632.192 1455.66,653.514 1456.22,653.365 1456.78,638.54 1457.34,642.226 1457.9,640.058 1458.46,658.813 1459.02,691.968 1459.58,641.596 1460.14,614.671 1460.7,629.113 1461.25,618.972 1461.81,656.97 1462.37,658.549 1462.93,643.191 1463.49,644.284 1464.05,628.618 1464.61,629.665 1465.17,664.48 1465.73,666.616 1466.29,664.283 1466.85,631.02 1467.41,662.567 1467.97,665.202 1468.52,680.54 1469.08,694.172 1469.64,709.218 1470.2,709.094 1470.76,724.524 1471.32,673.531 1471.88,689.135 1472.44,689.078 1473,703.089 1473.56,716.932 1474.12,714.05 1474.68,679.073 1475.24,660.012 1475.79,691.914 1476.35,691.524 1476.91,692.071 1477.47,723.953 1478.03,702.125 1478.59,701.442 1479.15,700.362 1479.71,696.802 1480.27,698.549 1480.83,695.42 1481.39,675.96 1481.95,628.891 1482.51,667.46 1483.07,682.989 1483.62,717.624 1484.18,719.269 1484.74,669.53 1485.3,701.932 1485.86,701.021 1486.42,669.966 1486.98,670.989 1487.54,656.919 1488.1,660.131 1488.66,691.902 1489.22,706.99 1489.78,706.879 1490.34,709.13 1490.89,751.69 1491.45,730.09 1492.01,758.55 1492.57,724.944 1493.13,738.539 1493.69,700.503 1494.25,700.973 1494.81,713.746 1495.37,714.855 1495.93,715.239 1496.49,749.379 1497.05,760.886 1497.61,739.441 1498.16,751.717 1498.72,764.065 1499.28,775.809 1499.84,758.059 1500.4,756.122 1500.96,721.298 1501.52,738.219 1502.08,733.679 1502.64,748.157 1503.2,744.361 1503.76,773.386 1504.32,734.446 1504.88,731.113 1505.44,743.121 1505.99,742.553 1506.55,737.335 1507.11,748.246 1507.67,758.945 1508.23,771.071 1508.79,748.197 1509.35,729.406 1509.91,710.045 1510.47,708.866 1511.03,705.886 1511.59,688.565 1512.15,686.835 1512.71,672.707 1513.26,656.242 1513.82,642.432 1514.38,646.074 1514.94,633.318 1515.5,599.801 1516.06,619.877 1516.62,606.955 1517.18,610.338 1517.74,612.852 1518.3,631.469 1518.86,648.671 1519.42,667.458 1519.98,673.164 1520.53,673.086 1521.09,727.037 1521.65,696.121 1522.21,707.627 1522.77,752.174 1523.33,747.39 1523.89,709.745 1524.45,723.249 1525.01,725.451 1525.57,754.18 1526.13,737.842 1526.69,730.201 1527.25,743.519 1527.81,745.113 1528.36,707.504 1528.92,671.614 1529.48,672.483 1530.04,689.665 1530.6,691.964 1531.16,689.59 1531.72,720.906 1532.28,700.868 1532.84,699.265 1533.4,681.368 1533.96,700.819 1534.52,720.757 1535.08,717.347 1535.63,714.931 1536.19,728.624 1536.75,739.499 1537.31,703.216 1537.87,687.74 1538.43,636.893 1538.99,638.981 1539.55,641.78 1540.11,661.917 1540.67,663.088 1541.23,665.878 1541.79,648.67 1542.35,634.219 1542.9,636.215 1543.46,605.509 1544.02,655.98 1544.58,625.014 1545.14,627.426 1545.7,613.295 1546.26,614.07 1546.82,667.97 1547.38,653.705 1547.94,639.447 1548.5,641.552 1549.06,630.07 1549.62,699.173 1550.18,698.85 1550.73,712.45 1551.29,676.405 1551.85,661.98 1552.41,645.763 1552.97,661.583 1553.53,666.722 1554.09,670.569 1554.65,670.462 1555.21,675.314 1555.77,675.922 1556.33,676.715 1556.89,693.332 1557.45,677.264 1558,695.149 1558.56,680.251 1559.12,680.458 1559.68,696.634 1560.24,649.448 1560.8,605.605 1561.36,626.63 1561.92,629.872 1562.48,635.862 1563.04,650.438 1563.6,652.585 1564.16,653.512 1564.72,652.233 1565.28,683.866 1565.83,668.048 1566.39,670.32 1566.95,688.767 1567.51,706.779 1568.07,674.548 1568.63,705.155 1569.19,703.003 1569.75,703.49 1570.31,704.031 1570.87,702.172 1571.43,717.436 1571.99,743.886 1572.55,742.203 1573.1,740.799 1573.66,719.298 1574.22,717.431 1574.78,667.999 1575.34,668.356 1575.9,683.079 1576.46,688.491 1577.02,684.148 1577.58,718.734 1578.14,701.502 1578.7,733.072 1579.26,728.288 1579.82,742.832 1580.37,742.838 1580.93,723.008 1581.49,708.995 1582.05,706.679 1582.61,704.506 1583.17,735.887 1583.73,750.029 1584.29,762.969 1584.85,758.828 1585.41,771.132 1585.97,766.974 1586.53,746.916 1587.09,742.385 1587.65,738.321 1588.2,735.529 1588.76,751.407 1589.32,747.78 1589.88,757.914 1590.44,751.259 1591,763.178 1591.56,758.244 1592.12,718.431 1592.68,700.351 1593.24,701.376 1593.8,716.579 1594.36,681.621 1594.92,664.922 1595.47,682.134 1596.03,679.403 1596.59,677.688 1597.15,663.764 1597.71,646.106 1598.27,614.701 1598.83,637.326 1599.39,622.486 1599.95,625.144 1600.51,632.113 1601.07,671.306 1601.63,687.069 1602.19,670.584 1602.74,655.547 1603.3,662.768 1603.86,648.867 1604.42,634.684 1604.98,605.593 1605.54,607.479 1606.1,609.359 1606.66,610.52 1607.22,629.284 1607.78,663.407 1608.34,680.919 1608.9,729.199 1609.46,742.686 1610.02,722.781 1610.57,739.599 1611.13,704.097 1611.69,702.627 1612.25,685.421 1612.81,685.169 1613.37,686.468 1613.93,699.18 1614.49,678.448 1615.05,678.375 1615.61,682.096 1616.17,697.048 1616.73,695.177 1617.29,695.361 1617.84,694.697 1618.4,726.446 1618.96,738.061 1619.52,703.673 1620.08,706.575 1620.64,720.543 1621.2,739.214 1621.76,738.185 1622.32,751.908 1622.88,761.395 1623.44,789.75 1624,804.788 1624.56,781.666 1625.11,795.478 1625.67,772.433 1626.23,771.667 1626.79,768.371 1627.35,734.475 1627.91,749.176 1628.47,744.692 1629.03,712.198 1629.59,691.656 1630.15,676.59 1630.71,676.908 1631.27,673.449 1631.83,675.595 1632.39,674.483 1632.94,710.264 1633.5,708.915 1634.06,660.171 1634.62,679.133 1635.18,677.605 1635.74,660.576 1636.3,662.02 1636.86,648.724 1637.42,666.227 1637.98,650.206 1638.54,653.865 1639.1,636.538 1639.66,671.115 1640.21,672.89 1640.77,658.287 1641.33,675.222 1641.89,678.369 1642.45,682.661 1643.01,683.31 1643.57,650.884 1644.13,622.675 1644.69,675.153 1645.25,690.296 1645.81,654.872 1646.37,685.936 1646.93,667.727 1647.48,652.212 1648.04,702.624 1648.6,719.657 1649.16,704.802 1649.72,688.116 1650.28,701.166 1650.84,682.893 1651.4,667.806 1651.96,665.137 1652.52,681.432 1653.08,651.726 1653.64,652.941 1654.2,655.12 1654.76,641.621 1655.31,611.913 1655.87,614.481 1656.43,603.074 1656.99,573.252 1657.55,581.958 1658.11,599.51 1658.67,583.825 1659.23,555.841 1659.79,593.113 1660.35,580.186 1660.91,582.762 1661.47,600.747 1662.03,622.246 1662.58,628.093 1663.14,646.939 1663.7,649.863 1664.26,653.069 1664.82,639.88 1665.38,643.343 1665.94,661.599 1666.5,677.228 1667.06,693.728 1667.62,690.008 1668.18,704.166 1668.74,700.295 1669.3,699.488 1669.85,699.073 1670.41,733.396 1670.97,732.612 1671.53,745.947 1672.09,741.407 1672.65,706.888 1673.21,718.759 1673.77,766.031 1674.33,748.68 1674.89,761.207 1675.45,724.305 1676.01,736.986 1676.57,751.736 1677.13,716.682 1677.68,696.289 1678.24,682.113 1678.8,701.097 1679.36,704.15 1679.92,686.13 1680.48,736.396 1681.04,751.454 1681.6,730.712 1682.16,743.538 1682.72,725.373 1683.28,741.39 1683.84,733.255 1684.4,759.133 1684.95,787.908 1685.51,785.02 1686.07,749.397 1686.63,762.159 1687.19,756.307 1687.75,765.726 1688.31,791.029 1688.87,752.64 1689.43,746.551 1689.99,728.967 1690.55,729.346 1691.11,760.6 1691.67,740.276 1692.23,755.677 1692.78,734.794 1693.34,686.51 1693.9,671.552 1694.46,670.022 1695.02,686.48 1695.58,671.534 1696.14,657.59 1696.7,642.894 1697.26,639.92 1697.82,658.008 1698.38,642.593 1698.94,644.975 1699.5,646.587 1700.05,649.851 1700.61,686.577 1701.17,685.692 1701.73,683.362 1702.29,684.365 1702.85,669.714 1703.41,655.97 1703.97,655.05 1704.53,671.33 1705.09,687.109 1705.65,689.433 1706.21,657.463 1706.77,610.919 1707.32,649.678 1707.88,631.196 1708.44,622.665 1709,580.171 1709.56,631.431 1710.12,667.087 1710.68,654.1 1711.24,609.56 1711.8,615.205 1712.36,604.156 1712.92,590.108 1713.48,611.994 1714.04,630.558 1714.6,633.52 1715.15,654.839 1715.71,691.571 1716.27,692.431 1716.83,695.394 1717.39,697.383 1717.95,696.111 1718.51,661.853 1719.07,665.006 1719.63,664.033 1720.19,696.705 1720.75,678.307 1721.31,710.107 1721.87,706.592 1722.42,690.194 1722.98,690.269 1723.54,673.658 1724.1,690.196 1724.66,689.618 1725.22,673.802 1725.78,677.207 1726.34,676.532 1726.9,660.696 1727.46,664.717 1728.02,663.811 1728.58,649.505 1729.14,665.295 1729.69,651.294 1730.25,656.12 1730.81,674.52 1731.37,653.594 1731.93,668.726 1732.49,686.741 1733.05,687.09 1733.61,672.478 1734.17,687.646 1734.73,670.85 1735.29,687.68 1735.85,720.258 1736.41,716.817 1736.97,713.125 1737.52,743.272 1738.08,740.365 1738.64,720.452 1739.2,685.032 1739.76,684.659 1740.32,636.607 1740.88,717.72 1741.44,750.639 1742,746.128 1742.56,740.125 1743.12,751.828 1743.68,731.771 1744.24,730.269 1744.79,715.327 1745.35,712.416 1745.91,743.142 1746.47,744.143 1747.03,743.901 1747.59,735.754 1748.15,712.298 1748.71,730.756 1749.27,744.86 1749.83,773.905 1750.39,737.662 1750.95,716.633 1751.51,663.912 1752.06,682.682 1752.62,680.468 1753.18,647.632 1753.74,652.395 1754.3,636.205 1754.86,654.408 1755.42,674.917 1755.98,641.373 1756.54,625.997 1757.1,646.449 1757.66,630.988 1758.22,600.959 1758.78,640.008 1759.34,595.34 1759.89,646.837 1760.45,631.51 1761.01,620.085 1761.57,606.262 1762.13,609.853 1762.69,584.88 1763.25,573.846 1763.81,580.127 1764.37,618.535 1764.93,638.201 1765.49,606.883 1766.05,627.146 1766.61,649.353 1767.16,685.669 1767.72,665.157 1768.28,667.511 1768.84,684.081 1769.4,698.182 1769.96,680.282 1770.52,650.424 1771.08,635.178 1771.64,668.913 1772.2,671.527 1772.76,657.017 1773.32,676.569 1773.88,741.369 1774.43,768.45 1774.99,763.466 1775.55,771.68 1776.11,828.578 1776.67,837.005 1777.23,844.759 1777.79,801.834 1778.35,843.162 1778.91,807.219 1779.47,831.814 1780.03,822.897 1780.59,815.131 1781.15,823.178 1781.71,814.349 1782.26,790.391 1782.82,785.447 1783.38,782.769 1783.94,761.662 1784.5,706.767 1785.06,688.276 1785.62,684.331 1786.18,669.029 1786.74,655.16 1787.3,637.154 1787.86,639.453 1788.42,674.97 1788.98,718.964 1789.53,763.572 1790.09,811.21 1790.65,835.902 1791.21,825.834 1791.77,800.673 1792.33,793.504 1792.89,769.786 1793.45,767.689 1794.01,779.397 1794.57,824.468 1795.13,799.48 1795.69,777.149 1796.25,771.855 1796.8,784.2 1797.36,744.047 1797.92,740.437 1798.48,753.391 1799.04,733.975 1799.6,712.647 1800.16,710.222 1800.72,706.033 1801.28,705.181 1801.84,721.5 1802.4,680.792 1802.96,697.046 1803.52,743.162 1804.08,739.824 1804.63,740.454 1805.19,754.128 1805.75,720.227 1806.31,716.443 1806.87,732.148 1807.43,743.74 1807.99,673.911 1808.55,673.188 1809.11,674.52 1809.67,688.689 1810.23,703.058 1810.79,700.317 1811.35,732.91 1811.9,700.05 1812.46,680.41 1813.02,678.932 1813.58,692.592 1814.14,726.551 1814.7,723.184 1815.26,753.845 1815.82,732.818 1816.38,667.949 1816.94,701.422 1817.5,684.292 1818.06,715.852 1818.62,732.647 1819.18,731.829 1819.73,713.017 1820.29,710.738 1820.85,692.7 1821.41,689.386 1821.97,669.136 1822.53,654.346 1823.09,622.748 1823.65,608.505 1824.21,611.944 1824.77,617.002 1825.33,620.049 1825.89,576.614 1826.45,562.934 1827,549.618 1827.56,539.779 1828.12,561.357 1828.68,533.633 1829.24,504.656 1829.8,512.452 1830.36,504.547 1830.92,530.014 1831.48,554.79 1832.04,564.902 1832.6,589.989 1833.16,594.866 1833.72,598.585 1834.27,603.991 1834.83,639.441 1835.39,642.26 1835.95,596.023 1836.51,634.559 1837.07,641.463 1837.63,644.121 1838.19,644.919 \"/>\n<path clip-path=\"url(#clip823)\" d=\"M720.247 691.446 L720.806 691.446 L721.365 691.446 L721.924 691.446 L722.484 691.446 L723.043 691.446 L723.602 691.446 L724.161 691.446 L724.721 691.446 L725.28 691.446 L725.839 691.446 L726.398 691.446 L726.958 691.446 L727.517 691.446 L728.076 691.446 L728.635 691.446 L729.195 691.446 L729.754 691.446 L730.313 691.446 L730.872 691.446 L731.432 691.446 L731.991 691.446 L732.55 691.446 L733.109 691.446 L733.669 691.446 L734.228 691.446 L734.787 691.446 L735.346 691.446 L735.906 691.446 L736.465 691.446 L737.024 691.446 L737.583 691.446 L738.143 691.446 L738.702 691.446 L739.261 691.446 L739.82 691.446 L740.38 691.446 L740.939 691.446 L741.498 691.446 L742.057 691.446 L742.617 691.446 L743.176 691.446 L743.735 691.446 L744.294 691.446 L744.854 691.446 L745.413 691.446 L745.972 691.446 L746.531 691.446 L747.091 691.446 L747.65 691.446 L748.209 691.446 L748.768 691.446 L749.328 691.446 L749.887 691.446 L750.446 691.446 L751.005 691.446 L751.565 691.446 L752.124 691.446 L752.683 691.446 L753.242 691.446 L753.802 691.446 L754.361 691.446 L754.92 691.446 L755.479 691.446 L756.039 691.446 L756.598 691.446 L757.157 691.446 L757.716 691.446 L758.276 691.446 L758.835 691.446 L759.394 691.446 L759.953 691.446 L760.513 691.446 L761.072 691.446 L761.631 691.446 L762.19 691.446 L762.75 691.446 L763.309 691.446 L763.868 691.446 L764.427 691.446 L764.987 691.446 L765.546 691.446 L766.105 691.446 L766.664 691.446 L767.224 691.446 L767.783 691.446 L768.342 691.446 L768.901 691.446 L769.461 691.446 L770.02 691.446 L770.579 691.446 L771.138 691.446 L771.698 691.446 L772.257 691.446 L772.816 691.446 L773.375 691.446 L773.935 691.446 L774.494 691.446 L775.053 691.446 L775.612 691.446 L776.172 691.446 L776.731 691.446 L777.29 691.446 L777.849 691.446 L778.409 691.446 L778.968 691.446 L779.527 691.446 L780.086 691.446 L780.646 691.446 L781.205 691.446 L781.764 691.446 L782.323 691.446 L782.883 691.446 L783.442 691.446 L784.001 691.446 L784.56 691.446 L785.12 691.446 L785.679 691.446 L786.238 691.446 L786.797 691.446 L787.357 691.446 L787.916 691.446 L788.475 691.446 L789.034 691.446 L789.594 691.446 L790.153 691.446 L790.712 691.446 L791.271 691.446 L791.831 691.446 L792.39 691.446 L792.949 691.446 L793.508 691.446 L794.068 691.446 L794.627 691.446 L795.186 691.446 L795.745 691.446 L796.305 691.446 L796.864 691.446 L797.423 691.446 L797.982 691.446 L798.542 691.446 L799.101 691.446 L799.66 691.446 L800.219 691.446 L800.779 691.446 L801.338 691.446 L801.897 691.446 L802.456 691.446 L803.016 691.446 L803.575 691.446 L804.134 691.446 L804.693 691.446 L805.253 691.446 L805.812 691.446 L806.371 691.446 L806.931 691.446 L807.49 691.446 L808.049 691.446 L808.608 691.446 L809.168 691.446 L809.727 691.446 L810.286 691.446 L810.845 691.446 L811.405 691.446 L811.964 691.446 L812.523 691.446 L813.082 691.446 L813.642 691.446 L814.201 691.446 L814.76 691.446 L815.319 691.446 L815.879 691.446 L816.438 691.446 L816.997 691.446 L817.556 691.446 L818.116 691.446 L818.675 691.446 L819.234 691.446 L819.793 691.446 L820.353 691.446 L820.912 691.446 L821.471 691.446 L822.03 691.446 L822.59 691.446 L823.149 691.446 L823.708 691.446 L824.267 691.446 L824.827 691.446 L825.386 691.446 L825.945 691.446 L826.504 691.446 L827.064 691.446 L827.623 691.446 L828.182 691.446 L828.741 691.446 L829.301 691.446 L829.86 691.446 L830.419 691.446 L830.978 691.446 L831.538 691.446 L832.097 691.446 L832.656 691.446 L833.215 691.446 L833.775 691.446 L834.334 691.446 L834.893 691.446 L835.452 691.446 L836.012 691.446 L836.571 691.446 L837.13 691.446 L837.689 691.446 L838.249 691.446 L838.808 691.446 L839.367 691.446 L839.926 691.446 L840.486 691.446 L841.045 691.446 L841.604 691.446 L842.163 691.446 L842.723 691.446 L843.282 691.446 L843.841 691.446 L844.4 691.446 L844.96 691.446 L845.519 691.446 L846.078 691.446 L846.637 691.446 L847.197 691.446 L847.756 691.446 L848.315 691.446 L848.874 691.446 L849.434 691.446 L849.993 691.446 L850.552 691.446 L851.111 691.446 L851.671 691.446 L852.23 691.446 L852.789 691.446 L853.348 691.446 L853.908 691.446 L854.467 691.446 L855.026 691.446 L855.585 691.446 L856.145 691.446 L856.704 691.446 L857.263 691.446 L857.822 691.446 L858.382 691.446 L858.941 691.446 L859.5 691.446 L860.059 691.446 L860.619 691.446 L861.178 691.446 L861.737 691.446 L862.296 691.446 L862.856 691.446 L863.415 691.446 L863.974 691.446 L864.533 691.446 L865.093 691.446 L865.652 691.446 L866.211 691.446 L866.77 691.446 L867.33 691.446 L867.889 691.446 L868.448 691.446 L869.007 691.446 L869.567 691.446 L870.126 691.446 L870.685 691.446 L871.244 691.446 L871.804 691.446 L872.363 691.446 L872.922 691.446 L873.481 691.446 L874.041 691.446 L874.6 691.446 L875.159 691.446 L875.718 691.446 L876.278 691.446 L876.837 691.446 L877.396 691.446 L877.955 691.446 L878.515 691.446 L879.074 691.446 L879.633 691.446 L880.192 691.446 L880.752 691.446 L881.311 691.446 L881.87 691.446 L882.429 691.446 L882.989 691.446 L883.548 691.446 L884.107 691.446 L884.666 691.446 L885.226 691.446 L885.785 691.446 L886.344 691.446 L886.903 691.446 L887.463 691.446 L888.022 691.446 L888.581 691.446 L889.14 691.446 L889.7 691.446 L890.259 691.446 L890.818 691.446 L891.377 691.446 L891.937 691.446 L892.496 691.446 L893.055 691.446 L893.614 691.446 L894.174 691.446 L894.733 691.446 L895.292 691.446 L895.851 691.446 L896.411 691.446 L896.97 691.446 L897.529 691.446 L898.088 691.446 L898.648 691.446 L899.207 691.446 L899.766 691.446 L900.325 691.446 L900.885 691.446 L901.444 691.446 L902.003 691.446 L902.562 691.446 L903.122 691.446 L903.681 691.446 L904.24 691.446 L904.799 691.446 L905.359 691.446 L905.918 691.446 L906.477 691.446 L907.036 691.446 L907.596 691.446 L908.155 691.446 L908.714 691.446 L909.273 691.446 L909.833 691.446 L910.392 691.446 L910.951 691.446 L911.51 691.446 L912.07 691.446 L912.629 691.446 L913.188 691.446 L913.747 691.446 L914.307 691.446 L914.866 691.446 L915.425 691.446 L915.984 691.446 L916.544 691.446 L917.103 691.446 L917.662 691.446 L918.221 691.446 L918.781 691.446 L919.34 691.446 L919.899 691.446 L920.458 691.446 L921.018 691.446 L921.577 691.446 L922.136 691.446 L922.695 691.446 L923.255 691.446 L923.814 691.446 L924.373 691.446 L924.932 691.446 L925.492 691.446 L926.051 691.446 L926.61 691.446 L927.169 691.446 L927.729 691.446 L928.288 691.446 L928.847 691.446 L929.406 691.446 L929.966 691.446 L930.525 691.446 L931.084 691.446 L931.644 691.446 L932.203 691.446 L932.762 691.446 L933.321 691.446 L933.881 691.446 L934.44 691.446 L934.999 691.446 L935.558 691.446 L936.118 691.446 L936.677 691.446 L937.236 691.446 L937.795 691.446 L938.355 691.446 L938.914 691.446 L939.473 691.446 L940.032 691.446 L940.592 691.446 L941.151 691.446 L941.71 691.446 L942.269 691.446 L942.829 691.446 L943.388 691.446 L943.947 691.446 L944.506 691.446 L945.066 691.446 L945.625 691.446 L946.184 691.446 L946.743 691.446 L947.303 691.446 L947.862 691.446 L948.421 691.446 L948.98 691.446 L949.54 691.446 L950.099 691.446 L950.658 691.446 L951.217 691.446 L951.777 691.446 L952.336 691.446 L952.895 691.446 L953.454 691.446 L954.014 691.446 L954.573 691.446 L955.132 691.446 L955.691 691.446 L956.251 691.446 L956.81 691.446 L957.369 691.446 L957.928 691.446 L958.488 691.446 L959.047 691.446 L959.606 691.446 L960.165 691.446 L960.725 691.446 L961.284 691.446 L961.843 691.446 L962.402 691.446 L962.962 691.446 L963.521 691.446 L964.08 691.446 L964.639 691.446 L965.199 691.446 L965.758 691.446 L966.317 691.446 L966.876 691.446 L967.436 691.446 L967.995 691.446 L968.554 691.446 L969.113 691.446 L969.673 691.446 L970.232 691.446 L970.791 691.446 L971.35 691.446 L971.91 691.446 L972.469 691.446 L973.028 691.446 L973.587 691.446 L974.147 691.446 L974.706 691.446 L975.265 691.446 L975.824 691.446 L976.384 691.446 L976.943 691.446 L977.502 691.446 L978.061 691.446 L978.621 691.446 L979.18 691.446 L979.739 691.446 L980.298 691.446 L980.858 691.446 L981.417 691.446 L981.976 691.446 L982.535 691.446 L983.095 691.446 L983.654 691.446 L984.213 691.446 L984.772 691.446 L985.332 691.446 L985.891 691.446 L986.45 691.446 L987.009 691.446 L987.569 691.446 L988.128 691.446 L988.687 691.446 L989.246 691.446 L989.806 691.446 L990.365 691.446 L990.924 691.446 L991.483 691.446 L992.043 691.446 L992.602 691.446 L993.161 691.446 L993.72 691.446 L994.28 691.446 L994.839 691.446 L995.398 691.446 L995.957 691.446 L996.517 691.446 L997.076 691.446 L997.635 691.446 L998.194 691.446 L998.754 691.446 L999.313 691.446 L999.872 691.446 L1000.43 691.446 L1000.99 691.446 L1001.55 691.446 L1002.11 691.446 L1002.67 691.446 L1003.23 691.446 L1003.79 691.446 L1004.35 691.446 L1004.91 691.446 L1005.46 691.446 L1006.02 691.446 L1006.58 691.446 L1007.14 691.446 L1007.7 691.446 L1008.26 691.446 L1008.82 691.446 L1009.38 691.446 L1009.94 691.446 L1010.5 691.446 L1011.06 691.446 L1011.62 691.446 L1012.18 691.446 L1012.73 691.446 L1013.29 691.446 L1013.85 691.446 L1014.41 691.446 L1014.97 691.446 L1015.53 691.446 L1016.09 691.446 L1016.65 691.446 L1017.21 691.446 L1017.77 691.446 L1018.33 691.446 L1018.89 691.446 L1019.45 691.446 L1020.01 691.446 L1020.56 691.446 L1021.12 691.446 L1021.68 691.446 L1022.24 691.446 L1022.8 691.446 L1023.36 691.446 L1023.92 691.446 L1024.48 691.446 L1025.04 691.446 L1025.6 691.446 L1026.16 691.446 L1026.72 691.446 L1027.28 691.446 L1027.83 691.446 L1028.39 691.446 L1028.95 691.446 L1029.51 691.446 L1030.07 691.446 L1030.63 691.446 L1031.19 691.446 L1031.75 691.446 L1032.31 691.446 L1032.87 691.446 L1033.43 691.446 L1033.99 691.446 L1034.55 691.446 L1035.1 691.446 L1035.66 691.446 L1036.22 691.446 L1036.78 691.446 L1037.34 691.446 L1037.9 691.446 L1038.46 691.446 L1039.02 691.446 L1039.58 691.446 L1040.14 691.446 L1040.7 691.446 L1041.26 691.446 L1041.82 691.446 L1042.38 691.446 L1042.93 691.446 L1043.49 691.446 L1044.05 691.446 L1044.61 691.446 L1045.17 691.446 L1045.73 691.446 L1046.29 691.446 L1046.85 691.446 L1047.41 691.446 L1047.97 691.446 L1048.53 691.446 L1049.09 691.446 L1049.65 691.446 L1050.2 691.446 L1050.76 691.446 L1051.32 691.446 L1051.88 691.446 L1052.44 691.446 L1053 691.446 L1053.56 691.446 L1054.12 691.446 L1054.68 691.446 L1055.24 691.446 L1055.8 691.446 L1056.36 691.446 L1056.92 691.446 L1057.48 691.446 L1058.03 691.446 L1058.59 691.446 L1059.15 691.446 L1059.71 691.446 L1060.27 691.446 L1060.83 691.446 L1061.39 691.446 L1061.95 691.446 L1062.51 691.446 L1063.07 691.446 L1063.63 691.446 L1064.19 691.446 L1064.75 691.446 L1065.3 691.446 L1065.86 691.446 L1066.42 691.446 L1066.98 691.446 L1067.54 691.446 L1068.1 691.446 L1068.66 691.446 L1069.22 691.446 L1069.78 691.446 L1070.34 691.446 L1070.9 691.446 L1071.46 691.446 L1072.02 691.446 L1072.57 691.446 L1073.13 691.446 L1073.69 691.446 L1074.25 691.446 L1074.81 691.446 L1075.37 691.446 L1075.93 691.446 L1076.49 691.446 L1077.05 691.446 L1077.61 691.446 L1078.17 691.446 L1078.73 691.446 L1079.29 691.446 L1079.85 691.446 L1080.4 691.446 L1080.96 691.446 L1081.52 691.446 L1082.08 691.446 L1082.64 691.446 L1083.2 691.446 L1083.76 691.446 L1084.32 691.446 L1084.88 691.446 L1085.44 691.446 L1086 691.446 L1086.56 691.446 L1087.12 691.446 L1087.67 691.446 L1088.23 691.446 L1088.79 691.446 L1089.35 691.446 L1089.91 691.446 L1090.47 691.446 L1091.03 691.446 L1091.59 691.446 L1092.15 691.446 L1092.71 691.446 L1093.27 691.446 L1093.83 691.446 L1094.39 691.446 L1094.94 691.446 L1095.5 691.446 L1096.06 691.446 L1096.62 691.446 L1097.18 691.446 L1097.74 691.446 L1098.3 691.446 L1098.86 691.446 L1099.42 691.446 L1099.98 691.446 L1100.54 691.446 L1101.1 691.446 L1101.66 691.446 L1102.22 691.446 L1102.77 691.446 L1103.33 691.446 L1103.89 691.446 L1104.45 691.446 L1105.01 691.446 L1105.57 691.446 L1106.13 691.446 L1106.69 691.446 L1107.25 691.446 L1107.81 691.446 L1108.37 691.446 L1108.93 691.446 L1109.49 691.446 L1110.04 691.446 L1110.6 691.446 L1111.16 691.446 L1111.72 691.446 L1112.28 691.446 L1112.84 691.446 L1113.4 691.446 L1113.96 691.446 L1114.52 691.446 L1115.08 691.446 L1115.64 691.446 L1116.2 691.446 L1116.76 691.446 L1117.31 691.446 L1117.87 691.446 L1118.43 691.446 L1118.99 691.446 L1119.55 691.446 L1120.11 691.446 L1120.67 691.446 L1121.23 691.446 L1121.79 691.446 L1122.35 691.446 L1122.91 691.446 L1123.47 691.446 L1124.03 691.446 L1124.59 691.446 L1125.14 691.446 L1125.7 691.446 L1126.26 691.446 L1126.82 691.446 L1127.38 691.446 L1127.94 691.446 L1128.5 691.446 L1129.06 691.446 L1129.62 691.446 L1130.18 691.446 L1130.74 691.446 L1131.3 691.446 L1131.86 691.446 L1132.41 691.446 L1132.97 691.446 L1133.53 691.446 L1134.09 691.446 L1134.65 691.446 L1135.21 691.446 L1135.77 691.446 L1136.33 691.446 L1136.89 691.446 L1137.45 691.446 L1138.01 691.446 L1138.57 691.446 L1139.13 691.446 L1139.68 691.446 L1140.24 691.446 L1140.8 691.446 L1141.36 691.446 L1141.92 691.446 L1142.48 691.446 L1143.04 691.446 L1143.6 691.446 L1144.16 691.446 L1144.72 691.446 L1145.28 691.446 L1145.84 691.446 L1146.4 691.446 L1146.96 691.446 L1147.51 691.446 L1148.07 691.446 L1148.63 691.446 L1149.19 691.446 L1149.75 691.446 L1150.31 691.446 L1150.87 691.446 L1151.43 691.446 L1151.99 691.446 L1152.55 691.446 L1153.11 691.446 L1153.67 691.446 L1154.23 691.446 L1154.78 691.446 L1155.34 691.446 L1155.9 691.446 L1156.46 691.446 L1157.02 691.446 L1157.58 691.446 L1158.14 691.446 L1158.7 691.446 L1159.26 691.446 L1159.82 691.446 L1160.38 691.446 L1160.94 691.446 L1161.5 691.446 L1162.05 691.446 L1162.61 691.446 L1163.17 691.446 L1163.73 691.446 L1164.29 691.446 L1164.85 691.446 L1165.41 691.446 L1165.97 691.446 L1166.53 691.446 L1167.09 691.446 L1167.65 691.446 L1168.21 691.446 L1168.77 691.446 L1169.33 691.446 L1169.88 691.446 L1170.44 691.446 L1171 691.446 L1171.56 691.446 L1172.12 691.446 L1172.68 691.446 L1173.24 691.446 L1173.8 691.446 L1174.36 691.446 L1174.92 691.446 L1175.48 691.446 L1176.04 691.446 L1176.6 691.446 L1177.15 691.446 L1177.71 691.446 L1178.27 691.446 L1178.83 691.446 L1179.39 691.446 L1179.95 691.446 L1180.51 691.446 L1181.07 691.446 L1181.63 691.446 L1182.19 691.446 L1182.75 691.446 L1183.31 691.446 L1183.87 691.446 L1184.43 691.446 L1184.98 691.446 L1185.54 691.446 L1186.1 691.446 L1186.66 691.446 L1187.22 691.446 L1187.78 691.446 L1188.34 691.446 L1188.9 691.446 L1189.46 691.446 L1190.02 691.446 L1190.58 691.446 L1191.14 691.446 L1191.7 691.446 L1192.25 691.446 L1192.81 691.446 L1193.37 691.446 L1193.93 691.446 L1194.49 691.446 L1195.05 691.446 L1195.61 691.446 L1196.17 691.446 L1196.73 691.446 L1197.29 691.446 L1197.85 691.446 L1198.41 691.446 L1198.97 691.446 L1199.52 691.446 L1200.08 691.446 L1200.64 691.446 L1201.2 691.446 L1201.76 691.446 L1202.32 691.446 L1202.88 691.446 L1203.44 691.446 L1204 691.446 L1204.56 691.446 L1205.12 691.446 L1205.68 691.446 L1206.24 691.446 L1206.8 691.446 L1207.35 691.446 L1207.91 691.446 L1208.47 691.446 L1209.03 691.446 L1209.59 691.446 L1210.15 691.446 L1210.71 691.446 L1211.27 691.446 L1211.83 691.446 L1212.39 691.446 L1212.95 691.446 L1213.51 691.446 L1214.07 691.446 L1214.62 691.446 L1215.18 691.446 L1215.74 691.446 L1216.3 691.446 L1216.86 691.446 L1217.42 691.446 L1217.98 691.446 L1218.54 691.446 L1219.1 691.446 L1219.66 691.446 L1220.22 691.446 L1220.78 691.446 L1221.34 691.446 L1221.89 691.446 L1222.45 691.446 L1223.01 691.446 L1223.57 691.446 L1224.13 691.446 L1224.69 691.446 L1225.25 691.446 L1225.81 691.446 L1226.37 691.446 L1226.93 691.446 L1227.49 691.446 L1228.05 691.446 L1228.61 691.446 L1229.17 691.446 L1229.72 691.446 L1230.28 691.446 L1230.84 691.446 L1231.4 691.446 L1231.96 691.446 L1232.52 691.446 L1233.08 691.446 L1233.64 691.446 L1234.2 691.446 L1234.76 691.446 L1235.32 691.446 L1235.88 691.446 L1236.44 691.446 L1236.99 691.446 L1237.55 691.446 L1238.11 691.446 L1238.67 691.446 L1239.23 691.446 L1239.79 691.446 L1240.35 691.446 L1240.91 691.446 L1241.47 691.446 L1242.03 691.446 L1242.59 691.446 L1243.15 691.446 L1243.71 691.446 L1244.26 691.446 L1244.82 691.446 L1245.38 691.446 L1245.94 691.446 L1246.5 691.446 L1247.06 691.446 L1247.62 691.446 L1248.18 691.446 L1248.74 691.446 L1249.3 691.446 L1249.86 691.446 L1250.42 691.446 L1250.98 691.446 L1251.54 691.446 L1252.09 691.446 L1252.65 691.446 L1253.21 691.446 L1253.77 691.446 L1254.33 691.446 L1254.89 691.446 L1255.45 691.446 L1256.01 691.446 L1256.57 691.446 L1257.13 691.446 L1257.69 691.446 L1258.25 691.446 L1258.81 691.446 L1259.36 691.446 L1259.92 691.446 L1260.48 691.446 L1261.04 691.446 L1261.6 691.446 L1262.16 691.446 L1262.72 691.446 L1263.28 691.446 L1263.84 691.446 L1264.4 691.446 L1264.96 691.446 L1265.52 691.446 L1266.08 691.446 L1266.63 691.446 L1267.19 691.446 L1267.75 691.446 L1268.31 691.446 L1268.87 691.446 L1269.43 691.446 L1269.99 691.446 L1270.55 691.446 L1271.11 691.446 L1271.67 691.446 L1272.23 691.446 L1272.79 691.446 L1273.35 691.446 L1273.91 691.446 L1274.46 691.446 L1275.02 691.446 L1275.58 691.446 L1276.14 691.446 L1276.7 691.446 L1277.26 691.446 L1277.82 691.446 L1278.38 691.446 L1278.94 691.446 L1279.5 691.446 L1280.06 691.446 L1280.62 691.446 L1281.18 691.446 L1281.73 691.446 L1282.29 691.446 L1282.85 691.446 L1283.41 691.446 L1283.97 691.446 L1284.53 691.446 L1285.09 691.446 L1285.65 691.446 L1286.21 691.446 L1286.77 691.446 L1287.33 691.446 L1287.89 691.446 L1288.45 691.446 L1289 691.446 L1289.56 691.446 L1290.12 691.446 L1290.68 691.446 L1291.24 691.446 L1291.8 691.446 L1292.36 691.446 L1292.92 691.446 L1293.48 691.446 L1294.04 691.446 L1294.6 691.446 L1295.16 691.446 L1295.72 691.446 L1296.28 691.446 L1296.83 691.446 L1297.39 691.446 L1297.95 691.446 L1298.51 691.446 L1299.07 691.446 L1299.63 691.446 L1300.19 691.446 L1300.75 691.446 L1301.31 691.446 L1301.87 691.446 L1302.43 691.446 L1302.99 691.446 L1303.55 691.446 L1304.1 691.446 L1304.66 691.446 L1305.22 691.446 L1305.78 691.446 L1306.34 691.446 L1306.9 691.446 L1307.46 691.446 L1308.02 691.446 L1308.58 691.446 L1309.14 691.446 L1309.7 691.446 L1310.26 691.446 L1310.82 691.446 L1311.38 691.446 L1311.93 691.446 L1312.49 691.446 L1313.05 691.446 L1313.61 691.446 L1314.17 691.446 L1314.73 691.446 L1315.29 691.446 L1315.85 691.446 L1316.41 691.446 L1316.97 691.446 L1317.53 691.446 L1318.09 691.446 L1318.65 691.446 L1319.2 691.446 L1319.76 691.446 L1320.32 691.446 L1320.88 691.446 L1321.44 691.446 L1322 691.446 L1322.56 691.446 L1323.12 691.446 L1323.68 691.446 L1324.24 691.446 L1324.8 691.446 L1325.36 691.446 L1325.92 691.446 L1326.47 691.446 L1327.03 691.446 L1327.59 691.446 L1328.15 691.446 L1328.71 691.446 L1329.27 691.446 L1329.83 691.446 L1330.39 691.446 L1330.95 691.446 L1331.51 691.446 L1332.07 691.446 L1332.63 691.446 L1333.19 691.446 L1333.75 691.446 L1334.3 691.446 L1334.86 691.446 L1335.42 691.446 L1335.98 691.446 L1336.54 691.446 L1337.1 691.446 L1337.66 691.446 L1338.22 691.446 L1338.78 691.446 L1339.34 691.446 L1339.9 691.446 L1340.46 691.446 L1341.02 691.446 L1341.57 691.446 L1342.13 691.446 L1342.69 691.446 L1343.25 691.446 L1343.81 691.446 L1344.37 691.446 L1344.93 691.446 L1345.49 691.446 L1346.05 691.446 L1346.61 691.446 L1347.17 691.446 L1347.73 691.446 L1348.29 691.446 L1348.84 691.446 L1349.4 691.446 L1349.96 691.446 L1350.52 691.446 L1351.08 691.446 L1351.64 691.446 L1352.2 691.446 L1352.76 691.446 L1353.32 691.446 L1353.88 691.446 L1354.44 691.446 L1355 691.446 L1355.56 691.446 L1356.12 691.446 L1356.67 691.446 L1357.23 691.446 L1357.79 691.446 L1358.35 691.446 L1358.91 691.446 L1359.47 691.446 L1360.03 691.446 L1360.59 691.446 L1361.15 691.446 L1361.71 691.446 L1362.27 691.446 L1362.83 691.446 L1363.39 691.446 L1363.94 691.446 L1364.5 691.446 L1365.06 691.446 L1365.62 691.446 L1366.18 691.446 L1366.74 691.446 L1367.3 691.446 L1367.86 691.446 L1368.42 691.446 L1368.98 691.446 L1369.54 691.446 L1370.1 691.446 L1370.66 691.446 L1371.21 691.446 L1371.77 691.446 L1372.33 691.446 L1372.89 691.446 L1373.45 691.446 L1374.01 691.446 L1374.57 691.446 L1375.13 691.446 L1375.69 691.446 L1376.25 691.446 L1376.81 691.446 L1377.37 691.446 L1377.93 691.446 L1378.49 691.446 L1379.04 691.446 L1379.6 691.446 L1380.16 691.446 L1380.72 691.446 L1381.28 691.446 L1381.84 691.446 L1382.4 691.446 L1382.96 691.446 L1383.52 691.446 L1384.08 691.446 L1384.64 691.446 L1385.2 691.446 L1385.76 691.446 L1386.31 691.446 L1386.87 691.446 L1387.43 691.446 L1387.99 691.446 L1388.55 691.446 L1389.11 691.446 L1389.67 691.446 L1390.23 691.446 L1390.79 691.446 L1391.35 691.446 L1391.91 691.446 L1392.47 691.446 L1393.03 691.446 L1393.58 691.446 L1394.14 691.446 L1394.7 691.446 L1395.26 691.446 L1395.82 691.446 L1396.38 691.446 L1396.94 691.446 L1397.5 691.446 L1398.06 691.446 L1398.62 691.446 L1399.18 691.446 L1399.74 691.446 L1400.3 691.446 L1400.86 691.446 L1401.41 691.446 L1401.97 691.446 L1402.53 691.446 L1403.09 691.446 L1403.65 691.446 L1404.21 691.446 L1404.77 691.446 L1405.33 691.446 L1405.89 691.446 L1406.45 691.446 L1407.01 691.446 L1407.57 691.446 L1408.13 691.446 L1408.68 691.446 L1409.24 691.446 L1409.8 691.446 L1410.36 691.446 L1410.92 691.446 L1411.48 691.446 L1412.04 691.446 L1412.6 691.446 L1413.16 691.446 L1413.72 691.446 L1414.28 691.446 L1414.84 691.446 L1415.4 691.446 L1415.95 691.446 L1416.51 691.446 L1417.07 691.446 L1417.63 691.446 L1418.19 691.446 L1418.75 691.446 L1419.31 691.446 L1419.87 691.446 L1420.43 691.446 L1420.99 691.446 L1421.55 691.446 L1422.11 691.446 L1422.67 691.446 L1423.23 691.446 L1423.78 691.446 L1424.34 691.446 L1424.9 691.446 L1425.46 691.446 L1426.02 691.446 L1426.58 691.446 L1427.14 691.446 L1427.7 691.446 L1428.26 691.446 L1428.82 691.446 L1429.38 691.446 L1429.94 691.446 L1430.5 691.446 L1431.05 691.446 L1431.61 691.446 L1432.17 691.446 L1432.73 691.446 L1433.29 691.446 L1433.85 691.446 L1434.41 691.446 L1434.97 691.446 L1435.53 691.446 L1436.09 691.446 L1436.65 691.446 L1437.21 691.446 L1437.77 691.446 L1438.33 691.446 L1438.88 691.446 L1439.44 691.446 L1440 691.446 L1440.56 691.446 L1441.12 691.446 L1441.68 691.446 L1442.24 691.446 L1442.8 691.446 L1443.36 691.446 L1443.92 691.446 L1444.48 691.446 L1445.04 691.446 L1445.6 691.446 L1446.15 691.446 L1446.71 691.446 L1447.27 691.446 L1447.83 691.446 L1448.39 691.446 L1448.95 691.446 L1449.51 691.446 L1450.07 691.446 L1450.63 691.446 L1451.19 691.446 L1451.75 691.446 L1452.31 691.446 L1452.87 691.446 L1453.42 691.446 L1453.98 691.446 L1454.54 691.446 L1455.1 691.446 L1455.66 691.446 L1456.22 691.446 L1456.78 691.446 L1457.34 691.446 L1457.9 691.446 L1458.46 691.446 L1459.02 691.446 L1459.58 691.446 L1460.14 691.446 L1460.7 691.446 L1461.25 691.446 L1461.81 691.446 L1462.37 691.446 L1462.93 691.446 L1463.49 691.446 L1464.05 691.446 L1464.61 691.446 L1465.17 691.446 L1465.73 691.446 L1466.29 691.446 L1466.85 691.446 L1467.41 691.446 L1467.97 691.446 L1468.52 691.446 L1469.08 691.446 L1469.64 691.446 L1470.2 691.446 L1470.76 691.446 L1471.32 691.446 L1471.88 691.446 L1472.44 691.446 L1473 691.446 L1473.56 691.446 L1474.12 691.446 L1474.68 691.446 L1475.24 691.446 L1475.79 691.446 L1476.35 691.446 L1476.91 691.446 L1477.47 691.446 L1478.03 691.446 L1478.59 691.446 L1479.15 691.446 L1479.71 691.446 L1480.27 691.446 L1480.83 691.446 L1481.39 691.446 L1481.95 691.446 L1482.51 691.446 L1483.07 691.446 L1483.62 691.446 L1484.18 691.446 L1484.74 691.446 L1485.3 691.446 L1485.86 691.446 L1486.42 691.446 L1486.98 691.446 L1487.54 691.446 L1488.1 691.446 L1488.66 691.446 L1489.22 691.446 L1489.78 691.446 L1490.34 691.446 L1490.89 691.446 L1491.45 691.446 L1492.01 691.446 L1492.57 691.446 L1493.13 691.446 L1493.69 691.446 L1494.25 691.446 L1494.81 691.446 L1495.37 691.446 L1495.93 691.446 L1496.49 691.446 L1497.05 691.446 L1497.61 691.446 L1498.16 691.446 L1498.72 691.446 L1499.28 691.446 L1499.84 691.446 L1500.4 691.446 L1500.96 691.446 L1501.52 691.446 L1502.08 691.446 L1502.64 691.446 L1503.2 691.446 L1503.76 691.446 L1504.32 691.446 L1504.88 691.446 L1505.44 691.446 L1505.99 691.446 L1506.55 691.446 L1507.11 691.446 L1507.67 691.446 L1508.23 691.446 L1508.79 691.446 L1509.35 691.446 L1509.91 691.446 L1510.47 691.446 L1511.03 691.446 L1511.59 691.446 L1512.15 691.446 L1512.71 691.446 L1513.26 691.446 L1513.82 691.446 L1514.38 691.446 L1514.94 691.446 L1515.5 691.446 L1516.06 691.446 L1516.62 691.446 L1517.18 691.446 L1517.74 691.446 L1518.3 691.446 L1518.86 691.446 L1519.42 691.446 L1519.98 691.446 L1520.53 691.446 L1521.09 691.446 L1521.65 691.446 L1522.21 691.446 L1522.77 691.446 L1523.33 691.446 L1523.89 691.446 L1524.45 691.446 L1525.01 691.446 L1525.57 691.446 L1526.13 691.446 L1526.69 691.446 L1527.25 691.446 L1527.81 691.446 L1528.36 691.446 L1528.92 691.446 L1529.48 691.446 L1530.04 691.446 L1530.6 691.446 L1531.16 691.446 L1531.72 691.446 L1532.28 691.446 L1532.84 691.446 L1533.4 691.446 L1533.96 691.446 L1534.52 691.446 L1535.08 691.446 L1535.63 691.446 L1536.19 691.446 L1536.75 691.446 L1537.31 691.446 L1537.87 691.446 L1538.43 691.446 L1538.99 691.446 L1539.55 691.446 L1540.11 691.446 L1540.67 691.446 L1541.23 691.446 L1541.79 691.446 L1542.35 691.446 L1542.9 691.446 L1543.46 691.446 L1544.02 691.446 L1544.58 691.446 L1545.14 691.446 L1545.7 691.446 L1546.26 691.446 L1546.82 691.446 L1547.38 691.446 L1547.94 691.446 L1548.5 691.446 L1549.06 691.446 L1549.62 691.446 L1550.18 691.446 L1550.73 691.446 L1551.29 691.446 L1551.85 691.446 L1552.41 691.446 L1552.97 691.446 L1553.53 691.446 L1554.09 691.446 L1554.65 691.446 L1555.21 691.446 L1555.77 691.446 L1556.33 691.446 L1556.89 691.446 L1557.45 691.446 L1558 691.446 L1558.56 691.446 L1559.12 691.446 L1559.68 691.446 L1560.24 691.446 L1560.8 691.446 L1561.36 691.446 L1561.92 691.446 L1562.48 691.446 L1563.04 691.446 L1563.6 691.446 L1564.16 691.446 L1564.72 691.446 L1565.28 691.446 L1565.83 691.446 L1566.39 691.446 L1566.95 691.446 L1567.51 691.446 L1568.07 691.446 L1568.63 691.446 L1569.19 691.446 L1569.75 691.446 L1570.31 691.446 L1570.87 691.446 L1571.43 691.446 L1571.99 691.446 L1572.55 691.446 L1573.1 691.446 L1573.66 691.446 L1574.22 691.446 L1574.78 691.446 L1575.34 691.446 L1575.9 691.446 L1576.46 691.446 L1577.02 691.446 L1577.58 691.446 L1578.14 691.446 L1578.7 691.446 L1579.26 691.446 L1579.82 691.446 L1580.37 691.446 L1580.93 691.446 L1581.49 691.446 L1582.05 691.446 L1582.61 691.446 L1583.17 691.446 L1583.73 691.446 L1584.29 691.446 L1584.85 691.446 L1585.41 691.446 L1585.97 691.446 L1586.53 691.446 L1587.09 691.446 L1587.65 691.446 L1588.2 691.446 L1588.76 691.446 L1589.32 691.446 L1589.88 691.446 L1590.44 691.446 L1591 691.446 L1591.56 691.446 L1592.12 691.446 L1592.68 691.446 L1593.24 691.446 L1593.8 691.446 L1594.36 691.446 L1594.92 691.446 L1595.47 691.446 L1596.03 691.446 L1596.59 691.446 L1597.15 691.446 L1597.71 691.446 L1598.27 691.446 L1598.83 691.446 L1599.39 691.446 L1599.95 691.446 L1600.51 691.446 L1601.07 691.446 L1601.63 691.446 L1602.19 691.446 L1602.74 691.446 L1603.3 691.446 L1603.86 691.446 L1604.42 691.446 L1604.98 691.446 L1605.54 691.446 L1606.1 691.446 L1606.66 691.446 L1607.22 691.446 L1607.78 691.446 L1608.34 691.446 L1608.9 691.446 L1609.46 691.446 L1610.02 691.446 L1610.57 691.446 L1611.13 691.446 L1611.69 691.446 L1612.25 691.446 L1612.81 691.446 L1613.37 691.446 L1613.93 691.446 L1614.49 691.446 L1615.05 691.446 L1615.61 691.446 L1616.17 691.446 L1616.73 691.446 L1617.29 691.446 L1617.84 691.446 L1618.4 691.446 L1618.96 691.446 L1619.52 691.446 L1620.08 691.446 L1620.64 691.446 L1621.2 691.446 L1621.76 691.446 L1622.32 691.446 L1622.88 691.446 L1623.44 691.446 L1624 691.446 L1624.56 691.446 L1625.11 691.446 L1625.67 691.446 L1626.23 691.446 L1626.79 691.446 L1627.35 691.446 L1627.91 691.446 L1628.47 691.446 L1629.03 691.446 L1629.59 691.446 L1630.15 691.446 L1630.71 691.446 L1631.27 691.446 L1631.83 691.446 L1632.39 691.446 L1632.94 691.446 L1633.5 691.446 L1634.06 691.446 L1634.62 691.446 L1635.18 691.446 L1635.74 691.446 L1636.3 691.446 L1636.86 691.446 L1637.42 691.446 L1637.98 691.446 L1638.54 691.446 L1639.1 691.446 L1639.66 691.446 L1640.21 691.446 L1640.77 691.446 L1641.33 691.446 L1641.89 691.446 L1642.45 691.446 L1643.01 691.446 L1643.57 691.446 L1644.13 691.446 L1644.69 691.446 L1645.25 691.446 L1645.81 691.446 L1646.37 691.446 L1646.93 691.446 L1647.48 691.446 L1648.04 691.446 L1648.6 691.446 L1649.16 691.446 L1649.72 691.446 L1650.28 691.446 L1650.84 691.446 L1651.4 691.446 L1651.96 691.446 L1652.52 691.446 L1653.08 691.446 L1653.64 691.446 L1654.2 691.446 L1654.76 691.446 L1655.31 691.446 L1655.87 691.446 L1656.43 691.446 L1656.99 691.446 L1657.55 691.446 L1658.11 691.446 L1658.67 691.446 L1659.23 691.446 L1659.79 691.446 L1660.35 691.446 L1660.91 691.446 L1661.47 691.446 L1662.03 691.446 L1662.58 691.446 L1663.14 691.446 L1663.7 691.446 L1664.26 691.446 L1664.82 691.446 L1665.38 691.446 L1665.94 691.446 L1666.5 691.446 L1667.06 691.446 L1667.62 691.446 L1668.18 691.446 L1668.74 691.446 L1669.3 691.446 L1669.85 691.446 L1670.41 691.446 L1670.97 691.446 L1671.53 691.446 L1672.09 691.446 L1672.65 691.446 L1673.21 691.446 L1673.77 691.446 L1674.33 691.446 L1674.89 691.446 L1675.45 691.446 L1676.01 691.446 L1676.57 691.446 L1677.13 691.446 L1677.68 691.446 L1678.24 691.446 L1678.8 691.446 L1679.36 691.446 L1679.92 691.446 L1680.48 691.446 L1681.04 691.446 L1681.6 691.446 L1682.16 691.446 L1682.72 691.446 L1683.28 691.446 L1683.84 691.446 L1684.4 691.446 L1684.95 691.446 L1685.51 691.446 L1686.07 691.446 L1686.63 691.446 L1687.19 691.446 L1687.75 691.446 L1688.31 691.446 L1688.87 691.446 L1689.43 691.446 L1689.99 691.446 L1690.55 691.446 L1691.11 691.446 L1691.67 691.446 L1692.23 691.446 L1692.78 691.446 L1693.34 691.446 L1693.9 691.446 L1694.46 691.446 L1695.02 691.446 L1695.58 691.446 L1696.14 691.446 L1696.7 691.446 L1697.26 691.446 L1697.82 691.446 L1698.38 691.446 L1698.94 691.446 L1699.5 691.446 L1700.05 691.446 L1700.61 691.446 L1701.17 691.446 L1701.73 691.446 L1702.29 691.446 L1702.85 691.446 L1703.41 691.446 L1703.97 691.446 L1704.53 691.446 L1705.09 691.446 L1705.65 691.446 L1706.21 691.446 L1706.77 691.446 L1707.32 691.446 L1707.88 691.446 L1708.44 691.446 L1709 691.446 L1709.56 691.446 L1710.12 691.446 L1710.68 691.446 L1711.24 691.446 L1711.8 691.446 L1712.36 691.446 L1712.92 691.446 L1713.48 691.446 L1714.04 691.446 L1714.6 691.446 L1715.15 691.446 L1715.71 691.446 L1716.27 691.446 L1716.83 691.446 L1717.39 691.446 L1717.95 691.446 L1718.51 691.446 L1719.07 691.446 L1719.63 691.446 L1720.19 691.446 L1720.75 691.446 L1721.31 691.446 L1721.87 691.446 L1722.42 691.446 L1722.98 691.446 L1723.54 691.446 L1724.1 691.446 L1724.66 691.446 L1725.22 691.446 L1725.78 691.446 L1726.34 691.446 L1726.9 691.446 L1727.46 691.446 L1728.02 691.446 L1728.58 691.446 L1729.14 691.446 L1729.69 691.446 L1730.25 691.446 L1730.81 691.446 L1731.37 691.446 L1731.93 691.446 L1732.49 691.446 L1733.05 691.446 L1733.61 691.446 L1734.17 691.446 L1734.73 691.446 L1735.29 691.446 L1735.85 691.446 L1736.41 691.446 L1736.97 691.446 L1737.52 691.446 L1738.08 691.446 L1738.64 691.446 L1739.2 691.446 L1739.76 691.446 L1740.32 691.446 L1740.88 691.446 L1741.44 691.446 L1742 691.446 L1742.56 691.446 L1743.12 691.446 L1743.68 691.446 L1744.24 691.446 L1744.79 691.446 L1745.35 691.446 L1745.91 691.446 L1746.47 691.446 L1747.03 691.446 L1747.59 691.446 L1748.15 691.446 L1748.71 691.446 L1749.27 691.446 L1749.83 691.446 L1750.39 691.446 L1750.95 691.446 L1751.51 691.446 L1752.06 691.446 L1752.62 691.446 L1753.18 691.446 L1753.74 691.446 L1754.3 691.446 L1754.86 691.446 L1755.42 691.446 L1755.98 691.446 L1756.54 691.446 L1757.1 691.446 L1757.66 691.446 L1758.22 691.446 L1758.78 691.446 L1759.34 691.446 L1759.89 691.446 L1760.45 691.446 L1761.01 691.446 L1761.57 691.446 L1762.13 691.446 L1762.69 691.446 L1763.25 691.446 L1763.81 691.446 L1764.37 691.446 L1764.93 691.446 L1765.49 691.446 L1766.05 691.446 L1766.61 691.446 L1767.16 691.446 L1767.72 691.446 L1768.28 691.446 L1768.84 691.446 L1769.4 691.446 L1769.96 691.446 L1770.52 691.446 L1771.08 691.446 L1771.64 691.446 L1772.2 691.446 L1772.76 691.446 L1773.32 691.446 L1773.88 691.446 L1774.43 691.446 L1774.99 691.446 L1775.55 691.446 L1776.11 691.446 L1776.67 691.446 L1777.23 691.446 L1777.79 691.446 L1778.35 691.446 L1778.91 691.446 L1779.47 691.446 L1780.03 691.446 L1780.59 691.446 L1781.15 691.446 L1781.71 691.446 L1782.26 691.446 L1782.82 691.446 L1783.38 691.446 L1783.94 691.446 L1784.5 691.446 L1785.06 691.446 L1785.62 691.446 L1786.18 691.446 L1786.74 691.446 L1787.3 691.446 L1787.86 691.446 L1788.42 691.446 L1788.98 691.446 L1789.53 691.446 L1790.09 691.446 L1790.65 691.446 L1791.21 691.446 L1791.77 691.446 L1792.33 691.446 L1792.89 691.446 L1793.45 691.446 L1794.01 691.446 L1794.57 691.446 L1795.13 691.446 L1795.69 691.446 L1796.25 691.446 L1796.8 691.446 L1797.36 691.446 L1797.92 691.446 L1798.48 691.446 L1799.04 691.446 L1799.6 691.446 L1800.16 691.446 L1800.72 691.446 L1801.28 691.446 L1801.84 691.446 L1802.4 691.446 L1802.96 691.446 L1803.52 691.446 L1804.08 691.446 L1804.63 691.446 L1805.19 691.446 L1805.75 691.446 L1806.31 691.446 L1806.87 691.446 L1807.43 691.446 L1807.99 691.446 L1808.55 691.446 L1809.11 691.446 L1809.67 691.446 L1810.23 691.446 L1810.79 691.446 L1811.35 691.446 L1811.9 691.446 L1812.46 691.446 L1813.02 691.446 L1813.58 691.446 L1814.14 691.446 L1814.7 691.446 L1815.26 691.446 L1815.82 691.446 L1816.38 691.446 L1816.94 691.446 L1817.5 691.446 L1818.06 691.446 L1818.62 691.446 L1819.18 691.446 L1819.73 691.446 L1820.29 691.446 L1820.85 691.446 L1821.41 691.446 L1821.97 691.446 L1822.53 691.446 L1823.09 691.446 L1823.65 691.446 L1824.21 691.446 L1824.77 691.446 L1825.33 691.446 L1825.89 691.446 L1826.45 691.446 L1827 691.446 L1827.56 691.446 L1828.12 691.446 L1828.68 691.446 L1829.24 691.446 L1829.8 691.446 L1830.36 691.446 L1830.92 691.446 L1831.48 691.446 L1832.04 691.446 L1832.6 691.446 L1833.16 691.446 L1833.72 691.446 L1834.27 691.446 L1834.83 691.446 L1835.39 691.446 L1835.95 691.446 L1836.51 691.446 L1837.07 691.446 L1837.63 691.446 L1838.19 691.446 L1838.19 682.808 L1837.63 682.808 L1837.07 682.808 L1836.51 682.808 L1835.95 682.808 L1835.39 682.808 L1834.83 682.808 L1834.27 682.808 L1833.72 682.808 L1833.16 682.808 L1832.6 682.808 L1832.04 682.808 L1831.48 682.808 L1830.92 682.808 L1830.36 682.808 L1829.8 682.808 L1829.24 682.808 L1828.68 682.808 L1828.12 682.808 L1827.56 682.808 L1827 682.808 L1826.45 682.808 L1825.89 682.808 L1825.33 682.808 L1824.77 682.808 L1824.21 682.808 L1823.65 682.808 L1823.09 682.808 L1822.53 682.808 L1821.97 682.808 L1821.41 682.808 L1820.85 682.808 L1820.29 682.808 L1819.73 682.808 L1819.18 682.808 L1818.62 682.808 L1818.06 682.808 L1817.5 682.808 L1816.94 682.808 L1816.38 682.808 L1815.82 682.808 L1815.26 682.808 L1814.7 682.808 L1814.14 682.808 L1813.58 682.808 L1813.02 682.808 L1812.46 682.808 L1811.9 682.808 L1811.35 682.808 L1810.79 682.808 L1810.23 682.808 L1809.67 682.808 L1809.11 682.808 L1808.55 682.808 L1807.99 682.808 L1807.43 682.808 L1806.87 682.808 L1806.31 682.808 L1805.75 682.808 L1805.19 682.808 L1804.63 682.808 L1804.08 682.808 L1803.52 682.808 L1802.96 682.808 L1802.4 682.808 L1801.84 682.808 L1801.28 682.808 L1800.72 682.808 L1800.16 682.808 L1799.6 682.808 L1799.04 682.808 L1798.48 682.808 L1797.92 682.808 L1797.36 682.808 L1796.8 682.808 L1796.25 682.808 L1795.69 682.808 L1795.13 682.808 L1794.57 682.808 L1794.01 682.808 L1793.45 682.808 L1792.89 682.808 L1792.33 682.808 L1791.77 682.808 L1791.21 682.808 L1790.65 682.808 L1790.09 682.808 L1789.53 682.808 L1788.98 682.808 L1788.42 682.808 L1787.86 682.808 L1787.3 682.808 L1786.74 682.808 L1786.18 682.808 L1785.62 682.808 L1785.06 682.808 L1784.5 682.808 L1783.94 682.808 L1783.38 682.808 L1782.82 682.808 L1782.26 682.808 L1781.71 682.808 L1781.15 682.808 L1780.59 682.808 L1780.03 682.808 L1779.47 682.808 L1778.91 682.808 L1778.35 682.808 L1777.79 682.808 L1777.23 682.808 L1776.67 682.808 L1776.11 682.808 L1775.55 682.808 L1774.99 682.808 L1774.43 682.808 L1773.88 682.808 L1773.32 682.808 L1772.76 682.808 L1772.2 682.808 L1771.64 682.808 L1771.08 682.808 L1770.52 682.808 L1769.96 682.808 L1769.4 682.808 L1768.84 682.808 L1768.28 682.808 L1767.72 682.808 L1767.16 682.808 L1766.61 682.808 L1766.05 682.808 L1765.49 682.808 L1764.93 682.808 L1764.37 682.808 L1763.81 682.808 L1763.25 682.808 L1762.69 682.808 L1762.13 682.808 L1761.57 682.808 L1761.01 682.808 L1760.45 682.808 L1759.89 682.808 L1759.34 682.808 L1758.78 682.808 L1758.22 682.808 L1757.66 682.808 L1757.1 682.808 L1756.54 682.808 L1755.98 682.808 L1755.42 682.808 L1754.86 682.808 L1754.3 682.808 L1753.74 682.808 L1753.18 682.808 L1752.62 682.808 L1752.06 682.808 L1751.51 682.808 L1750.95 682.808 L1750.39 682.808 L1749.83 682.808 L1749.27 682.808 L1748.71 682.808 L1748.15 682.808 L1747.59 682.808 L1747.03 682.808 L1746.47 682.808 L1745.91 682.808 L1745.35 682.808 L1744.79 682.808 L1744.24 682.808 L1743.68 682.808 L1743.12 682.808 L1742.56 682.808 L1742 682.808 L1741.44 682.808 L1740.88 682.808 L1740.32 682.808 L1739.76 682.808 L1739.2 682.808 L1738.64 682.808 L1738.08 682.808 L1737.52 682.808 L1736.97 682.808 L1736.41 682.808 L1735.85 682.808 L1735.29 682.808 L1734.73 682.808 L1734.17 682.808 L1733.61 682.808 L1733.05 682.808 L1732.49 682.808 L1731.93 682.808 L1731.37 682.808 L1730.81 682.808 L1730.25 682.808 L1729.69 682.808 L1729.14 682.808 L1728.58 682.808 L1728.02 682.808 L1727.46 682.808 L1726.9 682.808 L1726.34 682.808 L1725.78 682.808 L1725.22 682.808 L1724.66 682.808 L1724.1 682.808 L1723.54 682.808 L1722.98 682.808 L1722.42 682.808 L1721.87 682.808 L1721.31 682.808 L1720.75 682.808 L1720.19 682.808 L1719.63 682.808 L1719.07 682.808 L1718.51 682.808 L1717.95 682.808 L1717.39 682.808 L1716.83 682.808 L1716.27 682.808 L1715.71 682.808 L1715.15 682.808 L1714.6 682.808 L1714.04 682.808 L1713.48 682.808 L1712.92 682.808 L1712.36 682.808 L1711.8 682.808 L1711.24 682.808 L1710.68 682.808 L1710.12 682.808 L1709.56 682.808 L1709 682.808 L1708.44 682.808 L1707.88 682.808 L1707.32 682.808 L1706.77 682.808 L1706.21 682.808 L1705.65 682.808 L1705.09 682.808 L1704.53 682.808 L1703.97 682.808 L1703.41 682.808 L1702.85 682.808 L1702.29 682.808 L1701.73 682.808 L1701.17 682.808 L1700.61 682.808 L1700.05 682.808 L1699.5 682.808 L1698.94 682.808 L1698.38 682.808 L1697.82 682.808 L1697.26 682.808 L1696.7 682.808 L1696.14 682.808 L1695.58 682.808 L1695.02 682.808 L1694.46 682.808 L1693.9 682.808 L1693.34 682.808 L1692.78 682.808 L1692.23 682.808 L1691.67 682.808 L1691.11 682.808 L1690.55 682.808 L1689.99 682.808 L1689.43 682.808 L1688.87 682.808 L1688.31 682.808 L1687.75 682.808 L1687.19 682.808 L1686.63 682.808 L1686.07 682.808 L1685.51 682.808 L1684.95 682.808 L1684.4 682.808 L1683.84 682.808 L1683.28 682.808 L1682.72 682.808 L1682.16 682.808 L1681.6 682.808 L1681.04 682.808 L1680.48 682.808 L1679.92 682.808 L1679.36 682.808 L1678.8 682.808 L1678.24 682.808 L1677.68 682.808 L1677.13 682.808 L1676.57 682.808 L1676.01 682.808 L1675.45 682.808 L1674.89 682.808 L1674.33 682.808 L1673.77 682.808 L1673.21 682.808 L1672.65 682.808 L1672.09 682.808 L1671.53 682.808 L1670.97 682.808 L1670.41 682.808 L1669.85 682.808 L1669.3 682.808 L1668.74 682.808 L1668.18 682.808 L1667.62 682.808 L1667.06 682.808 L1666.5 682.808 L1665.94 682.808 L1665.38 682.808 L1664.82 682.808 L1664.26 682.808 L1663.7 682.808 L1663.14 682.808 L1662.58 682.808 L1662.03 682.808 L1661.47 682.808 L1660.91 682.808 L1660.35 682.808 L1659.79 682.808 L1659.23 682.808 L1658.67 682.808 L1658.11 682.808 L1657.55 682.808 L1656.99 682.808 L1656.43 682.808 L1655.87 682.808 L1655.31 682.808 L1654.76 682.808 L1654.2 682.808 L1653.64 682.808 L1653.08 682.808 L1652.52 682.808 L1651.96 682.808 L1651.4 682.808 L1650.84 682.808 L1650.28 682.808 L1649.72 682.808 L1649.16 682.808 L1648.6 682.808 L1648.04 682.808 L1647.48 682.808 L1646.93 682.808 L1646.37 682.808 L1645.81 682.808 L1645.25 682.808 L1644.69 682.808 L1644.13 682.808 L1643.57 682.808 L1643.01 682.808 L1642.45 682.808 L1641.89 682.808 L1641.33 682.808 L1640.77 682.808 L1640.21 682.808 L1639.66 682.808 L1639.1 682.808 L1638.54 682.808 L1637.98 682.808 L1637.42 682.808 L1636.86 682.808 L1636.3 682.808 L1635.74 682.808 L1635.18 682.808 L1634.62 682.808 L1634.06 682.808 L1633.5 682.808 L1632.94 682.808 L1632.39 682.808 L1631.83 682.808 L1631.27 682.808 L1630.71 682.808 L1630.15 682.808 L1629.59 682.808 L1629.03 682.808 L1628.47 682.808 L1627.91 682.808 L1627.35 682.808 L1626.79 682.808 L1626.23 682.808 L1625.67 682.808 L1625.11 682.808 L1624.56 682.808 L1624 682.808 L1623.44 682.808 L1622.88 682.808 L1622.32 682.808 L1621.76 682.808 L1621.2 682.808 L1620.64 682.808 L1620.08 682.808 L1619.52 682.808 L1618.96 682.808 L1618.4 682.808 L1617.84 682.808 L1617.29 682.808 L1616.73 682.808 L1616.17 682.808 L1615.61 682.808 L1615.05 682.808 L1614.49 682.808 L1613.93 682.808 L1613.37 682.808 L1612.81 682.808 L1612.25 682.808 L1611.69 682.808 L1611.13 682.808 L1610.57 682.808 L1610.02 682.808 L1609.46 682.808 L1608.9 682.808 L1608.34 682.808 L1607.78 682.808 L1607.22 682.808 L1606.66 682.808 L1606.1 682.808 L1605.54 682.808 L1604.98 682.808 L1604.42 682.808 L1603.86 682.808 L1603.3 682.808 L1602.74 682.808 L1602.19 682.808 L1601.63 682.808 L1601.07 682.808 L1600.51 682.808 L1599.95 682.808 L1599.39 682.808 L1598.83 682.808 L1598.27 682.808 L1597.71 682.808 L1597.15 682.808 L1596.59 682.808 L1596.03 682.808 L1595.47 682.808 L1594.92 682.808 L1594.36 682.808 L1593.8 682.808 L1593.24 682.808 L1592.68 682.808 L1592.12 682.808 L1591.56 682.808 L1591 682.808 L1590.44 682.808 L1589.88 682.808 L1589.32 682.808 L1588.76 682.808 L1588.2 682.808 L1587.65 682.808 L1587.09 682.808 L1586.53 682.808 L1585.97 682.808 L1585.41 682.808 L1584.85 682.808 L1584.29 682.808 L1583.73 682.808 L1583.17 682.808 L1582.61 682.808 L1582.05 682.808 L1581.49 682.808 L1580.93 682.808 L1580.37 682.808 L1579.82 682.808 L1579.26 682.808 L1578.7 682.808 L1578.14 682.808 L1577.58 682.808 L1577.02 682.808 L1576.46 682.808 L1575.9 682.808 L1575.34 682.808 L1574.78 682.808 L1574.22 682.808 L1573.66 682.808 L1573.1 682.808 L1572.55 682.808 L1571.99 682.808 L1571.43 682.808 L1570.87 682.808 L1570.31 682.808 L1569.75 682.808 L1569.19 682.808 L1568.63 682.808 L1568.07 682.808 L1567.51 682.808 L1566.95 682.808 L1566.39 682.808 L1565.83 682.808 L1565.28 682.808 L1564.72 682.808 L1564.16 682.808 L1563.6 682.808 L1563.04 682.808 L1562.48 682.808 L1561.92 682.808 L1561.36 682.808 L1560.8 682.808 L1560.24 682.808 L1559.68 682.808 L1559.12 682.808 L1558.56 682.808 L1558 682.808 L1557.45 682.808 L1556.89 682.808 L1556.33 682.808 L1555.77 682.808 L1555.21 682.808 L1554.65 682.808 L1554.09 682.808 L1553.53 682.808 L1552.97 682.808 L1552.41 682.808 L1551.85 682.808 L1551.29 682.808 L1550.73 682.808 L1550.18 682.808 L1549.62 682.808 L1549.06 682.808 L1548.5 682.808 L1547.94 682.808 L1547.38 682.808 L1546.82 682.808 L1546.26 682.808 L1545.7 682.808 L1545.14 682.808 L1544.58 682.808 L1544.02 682.808 L1543.46 682.808 L1542.9 682.808 L1542.35 682.808 L1541.79 682.808 L1541.23 682.808 L1540.67 682.808 L1540.11 682.808 L1539.55 682.808 L1538.99 682.808 L1538.43 682.808 L1537.87 682.808 L1537.31 682.808 L1536.75 682.808 L1536.19 682.808 L1535.63 682.808 L1535.08 682.808 L1534.52 682.808 L1533.96 682.808 L1533.4 682.808 L1532.84 682.808 L1532.28 682.808 L1531.72 682.808 L1531.16 682.808 L1530.6 682.808 L1530.04 682.808 L1529.48 682.808 L1528.92 682.808 L1528.36 682.808 L1527.81 682.808 L1527.25 682.808 L1526.69 682.808 L1526.13 682.808 L1525.57 682.808 L1525.01 682.808 L1524.45 682.808 L1523.89 682.808 L1523.33 682.808 L1522.77 682.808 L1522.21 682.808 L1521.65 682.808 L1521.09 682.808 L1520.53 682.808 L1519.98 682.808 L1519.42 682.808 L1518.86 682.808 L1518.3 682.808 L1517.74 682.808 L1517.18 682.808 L1516.62 682.808 L1516.06 682.808 L1515.5 682.808 L1514.94 682.808 L1514.38 682.808 L1513.82 682.808 L1513.26 682.808 L1512.71 682.808 L1512.15 682.808 L1511.59 682.808 L1511.03 682.808 L1510.47 682.808 L1509.91 682.808 L1509.35 682.808 L1508.79 682.808 L1508.23 682.808 L1507.67 682.808 L1507.11 682.808 L1506.55 682.808 L1505.99 682.808 L1505.44 682.808 L1504.88 682.808 L1504.32 682.808 L1503.76 682.808 L1503.2 682.808 L1502.64 682.808 L1502.08 682.808 L1501.52 682.808 L1500.96 682.808 L1500.4 682.808 L1499.84 682.808 L1499.28 682.808 L1498.72 682.808 L1498.16 682.808 L1497.61 682.808 L1497.05 682.808 L1496.49 682.808 L1495.93 682.808 L1495.37 682.808 L1494.81 682.808 L1494.25 682.808 L1493.69 682.808 L1493.13 682.808 L1492.57 682.808 L1492.01 682.808 L1491.45 682.808 L1490.89 682.808 L1490.34 682.808 L1489.78 682.808 L1489.22 682.808 L1488.66 682.808 L1488.1 682.808 L1487.54 682.808 L1486.98 682.808 L1486.42 682.808 L1485.86 682.808 L1485.3 682.808 L1484.74 682.808 L1484.18 682.808 L1483.62 682.808 L1483.07 682.808 L1482.51 682.808 L1481.95 682.808 L1481.39 682.808 L1480.83 682.808 L1480.27 682.808 L1479.71 682.808 L1479.15 682.808 L1478.59 682.808 L1478.03 682.808 L1477.47 682.808 L1476.91 682.808 L1476.35 682.808 L1475.79 682.808 L1475.24 682.808 L1474.68 682.808 L1474.12 682.808 L1473.56 682.808 L1473 682.808 L1472.44 682.808 L1471.88 682.808 L1471.32 682.808 L1470.76 682.808 L1470.2 682.808 L1469.64 682.808 L1469.08 682.808 L1468.52 682.808 L1467.97 682.808 L1467.41 682.808 L1466.85 682.808 L1466.29 682.808 L1465.73 682.808 L1465.17 682.808 L1464.61 682.808 L1464.05 682.808 L1463.49 682.808 L1462.93 682.808 L1462.37 682.808 L1461.81 682.808 L1461.25 682.808 L1460.7 682.808 L1460.14 682.808 L1459.58 682.808 L1459.02 682.808 L1458.46 682.808 L1457.9 682.808 L1457.34 682.808 L1456.78 682.808 L1456.22 682.808 L1455.66 682.808 L1455.1 682.808 L1454.54 682.808 L1453.98 682.808 L1453.42 682.808 L1452.87 682.808 L1452.31 682.808 L1451.75 682.808 L1451.19 682.808 L1450.63 682.808 L1450.07 682.808 L1449.51 682.808 L1448.95 682.808 L1448.39 682.808 L1447.83 682.808 L1447.27 682.808 L1446.71 682.808 L1446.15 682.808 L1445.6 682.808 L1445.04 682.808 L1444.48 682.808 L1443.92 682.808 L1443.36 682.808 L1442.8 682.808 L1442.24 682.808 L1441.68 682.808 L1441.12 682.808 L1440.56 682.808 L1440 682.808 L1439.44 682.808 L1438.88 682.808 L1438.33 682.808 L1437.77 682.808 L1437.21 682.808 L1436.65 682.808 L1436.09 682.808 L1435.53 682.808 L1434.97 682.808 L1434.41 682.808 L1433.85 682.808 L1433.29 682.808 L1432.73 682.808 L1432.17 682.808 L1431.61 682.808 L1431.05 682.808 L1430.5 682.808 L1429.94 682.808 L1429.38 682.808 L1428.82 682.808 L1428.26 682.808 L1427.7 682.808 L1427.14 682.808 L1426.58 682.808 L1426.02 682.808 L1425.46 682.808 L1424.9 682.808 L1424.34 682.808 L1423.78 682.808 L1423.23 682.808 L1422.67 682.808 L1422.11 682.808 L1421.55 682.808 L1420.99 682.808 L1420.43 682.808 L1419.87 682.808 L1419.31 682.808 L1418.75 682.808 L1418.19 682.808 L1417.63 682.808 L1417.07 682.808 L1416.51 682.808 L1415.95 682.808 L1415.4 682.808 L1414.84 682.808 L1414.28 682.808 L1413.72 682.808 L1413.16 682.808 L1412.6 682.808 L1412.04 682.808 L1411.48 682.808 L1410.92 682.808 L1410.36 682.808 L1409.8 682.808 L1409.24 682.808 L1408.68 682.808 L1408.13 682.808 L1407.57 682.808 L1407.01 682.808 L1406.45 682.808 L1405.89 682.808 L1405.33 682.808 L1404.77 682.808 L1404.21 682.808 L1403.65 682.808 L1403.09 682.808 L1402.53 682.808 L1401.97 682.808 L1401.41 682.808 L1400.86 682.808 L1400.3 682.808 L1399.74 682.808 L1399.18 682.808 L1398.62 682.808 L1398.06 682.808 L1397.5 682.808 L1396.94 682.808 L1396.38 682.808 L1395.82 682.808 L1395.26 682.808 L1394.7 682.808 L1394.14 682.808 L1393.58 682.808 L1393.03 682.808 L1392.47 682.808 L1391.91 682.808 L1391.35 682.808 L1390.79 682.808 L1390.23 682.808 L1389.67 682.808 L1389.11 682.808 L1388.55 682.808 L1387.99 682.808 L1387.43 682.808 L1386.87 682.808 L1386.31 682.808 L1385.76 682.808 L1385.2 682.808 L1384.64 682.808 L1384.08 682.808 L1383.52 682.808 L1382.96 682.808 L1382.4 682.808 L1381.84 682.808 L1381.28 682.808 L1380.72 682.808 L1380.16 682.808 L1379.6 682.808 L1379.04 682.808 L1378.49 682.808 L1377.93 682.808 L1377.37 682.808 L1376.81 682.808 L1376.25 682.808 L1375.69 682.808 L1375.13 682.808 L1374.57 682.808 L1374.01 682.808 L1373.45 682.808 L1372.89 682.808 L1372.33 682.808 L1371.77 682.808 L1371.21 682.808 L1370.66 682.808 L1370.1 682.808 L1369.54 682.808 L1368.98 682.808 L1368.42 682.808 L1367.86 682.808 L1367.3 682.808 L1366.74 682.808 L1366.18 682.808 L1365.62 682.808 L1365.06 682.808 L1364.5 682.808 L1363.94 682.808 L1363.39 682.808 L1362.83 682.808 L1362.27 682.808 L1361.71 682.808 L1361.15 682.808 L1360.59 682.808 L1360.03 682.808 L1359.47 682.808 L1358.91 682.808 L1358.35 682.808 L1357.79 682.808 L1357.23 682.808 L1356.67 682.808 L1356.12 682.808 L1355.56 682.808 L1355 682.808 L1354.44 682.808 L1353.88 682.808 L1353.32 682.808 L1352.76 682.808 L1352.2 682.808 L1351.64 682.808 L1351.08 682.808 L1350.52 682.808 L1349.96 682.808 L1349.4 682.808 L1348.84 682.808 L1348.29 682.808 L1347.73 682.808 L1347.17 682.808 L1346.61 682.808 L1346.05 682.808 L1345.49 682.808 L1344.93 682.808 L1344.37 682.808 L1343.81 682.808 L1343.25 682.808 L1342.69 682.808 L1342.13 682.808 L1341.57 682.808 L1341.02 682.808 L1340.46 682.808 L1339.9 682.808 L1339.34 682.808 L1338.78 682.808 L1338.22 682.808 L1337.66 682.808 L1337.1 682.808 L1336.54 682.808 L1335.98 682.808 L1335.42 682.808 L1334.86 682.808 L1334.3 682.808 L1333.75 682.808 L1333.19 682.808 L1332.63 682.808 L1332.07 682.808 L1331.51 682.808 L1330.95 682.808 L1330.39 682.808 L1329.83 682.808 L1329.27 682.808 L1328.71 682.808 L1328.15 682.808 L1327.59 682.808 L1327.03 682.808 L1326.47 682.808 L1325.92 682.808 L1325.36 682.808 L1324.8 682.808 L1324.24 682.808 L1323.68 682.808 L1323.12 682.808 L1322.56 682.808 L1322 682.808 L1321.44 682.808 L1320.88 682.808 L1320.32 682.808 L1319.76 682.808 L1319.2 682.808 L1318.65 682.808 L1318.09 682.808 L1317.53 682.808 L1316.97 682.808 L1316.41 682.808 L1315.85 682.808 L1315.29 682.808 L1314.73 682.808 L1314.17 682.808 L1313.61 682.808 L1313.05 682.808 L1312.49 682.808 L1311.93 682.808 L1311.38 682.808 L1310.82 682.808 L1310.26 682.808 L1309.7 682.808 L1309.14 682.808 L1308.58 682.808 L1308.02 682.808 L1307.46 682.808 L1306.9 682.808 L1306.34 682.808 L1305.78 682.808 L1305.22 682.808 L1304.66 682.808 L1304.1 682.808 L1303.55 682.808 L1302.99 682.808 L1302.43 682.808 L1301.87 682.808 L1301.31 682.808 L1300.75 682.808 L1300.19 682.808 L1299.63 682.808 L1299.07 682.808 L1298.51 682.808 L1297.95 682.808 L1297.39 682.808 L1296.83 682.808 L1296.28 682.808 L1295.72 682.808 L1295.16 682.808 L1294.6 682.808 L1294.04 682.808 L1293.48 682.808 L1292.92 682.808 L1292.36 682.808 L1291.8 682.808 L1291.24 682.808 L1290.68 682.808 L1290.12 682.808 L1289.56 682.808 L1289 682.808 L1288.45 682.808 L1287.89 682.808 L1287.33 682.808 L1286.77 682.808 L1286.21 682.808 L1285.65 682.808 L1285.09 682.808 L1284.53 682.808 L1283.97 682.808 L1283.41 682.808 L1282.85 682.808 L1282.29 682.808 L1281.73 682.808 L1281.18 682.808 L1280.62 682.808 L1280.06 682.808 L1279.5 682.808 L1278.94 682.808 L1278.38 682.808 L1277.82 682.808 L1277.26 682.808 L1276.7 682.808 L1276.14 682.808 L1275.58 682.808 L1275.02 682.808 L1274.46 682.808 L1273.91 682.808 L1273.35 682.808 L1272.79 682.808 L1272.23 682.808 L1271.67 682.808 L1271.11 682.808 L1270.55 682.808 L1269.99 682.808 L1269.43 682.808 L1268.87 682.808 L1268.31 682.808 L1267.75 682.808 L1267.19 682.808 L1266.63 682.808 L1266.08 682.808 L1265.52 682.808 L1264.96 682.808 L1264.4 682.808 L1263.84 682.808 L1263.28 682.808 L1262.72 682.808 L1262.16 682.808 L1261.6 682.808 L1261.04 682.808 L1260.48 682.808 L1259.92 682.808 L1259.36 682.808 L1258.81 682.808 L1258.25 682.808 L1257.69 682.808 L1257.13 682.808 L1256.57 682.808 L1256.01 682.808 L1255.45 682.808 L1254.89 682.808 L1254.33 682.808 L1253.77 682.808 L1253.21 682.808 L1252.65 682.808 L1252.09 682.808 L1251.54 682.808 L1250.98 682.808 L1250.42 682.808 L1249.86 682.808 L1249.3 682.808 L1248.74 682.808 L1248.18 682.808 L1247.62 682.808 L1247.06 682.808 L1246.5 682.808 L1245.94 682.808 L1245.38 682.808 L1244.82 682.808 L1244.26 682.808 L1243.71 682.808 L1243.15 682.808 L1242.59 682.808 L1242.03 682.808 L1241.47 682.808 L1240.91 682.808 L1240.35 682.808 L1239.79 682.808 L1239.23 682.808 L1238.67 682.808 L1238.11 682.808 L1237.55 682.808 L1236.99 682.808 L1236.44 682.808 L1235.88 682.808 L1235.32 682.808 L1234.76 682.808 L1234.2 682.808 L1233.64 682.808 L1233.08 682.808 L1232.52 682.808 L1231.96 682.808 L1231.4 682.808 L1230.84 682.808 L1230.28 682.808 L1229.72 682.808 L1229.17 682.808 L1228.61 682.808 L1228.05 682.808 L1227.49 682.808 L1226.93 682.808 L1226.37 682.808 L1225.81 682.808 L1225.25 682.808 L1224.69 682.808 L1224.13 682.808 L1223.57 682.808 L1223.01 682.808 L1222.45 682.808 L1221.89 682.808 L1221.34 682.808 L1220.78 682.808 L1220.22 682.808 L1219.66 682.808 L1219.1 682.808 L1218.54 682.808 L1217.98 682.808 L1217.42 682.808 L1216.86 682.808 L1216.3 682.808 L1215.74 682.808 L1215.18 682.808 L1214.62 682.808 L1214.07 682.808 L1213.51 682.808 L1212.95 682.808 L1212.39 682.808 L1211.83 682.808 L1211.27 682.808 L1210.71 682.808 L1210.15 682.808 L1209.59 682.808 L1209.03 682.808 L1208.47 682.808 L1207.91 682.808 L1207.35 682.808 L1206.8 682.808 L1206.24 682.808 L1205.68 682.808 L1205.12 682.808 L1204.56 682.808 L1204 682.808 L1203.44 682.808 L1202.88 682.808 L1202.32 682.808 L1201.76 682.808 L1201.2 682.808 L1200.64 682.808 L1200.08 682.808 L1199.52 682.808 L1198.97 682.808 L1198.41 682.808 L1197.85 682.808 L1197.29 682.808 L1196.73 682.808 L1196.17 682.808 L1195.61 682.808 L1195.05 682.808 L1194.49 682.808 L1193.93 682.808 L1193.37 682.808 L1192.81 682.808 L1192.25 682.808 L1191.7 682.808 L1191.14 682.808 L1190.58 682.808 L1190.02 682.808 L1189.46 682.808 L1188.9 682.808 L1188.34 682.808 L1187.78 682.808 L1187.22 682.808 L1186.66 682.808 L1186.1 682.808 L1185.54 682.808 L1184.98 682.808 L1184.43 682.808 L1183.87 682.808 L1183.31 682.808 L1182.75 682.808 L1182.19 682.808 L1181.63 682.808 L1181.07 682.808 L1180.51 682.808 L1179.95 682.808 L1179.39 682.808 L1178.83 682.808 L1178.27 682.808 L1177.71 682.808 L1177.15 682.808 L1176.6 682.808 L1176.04 682.808 L1175.48 682.808 L1174.92 682.808 L1174.36 682.808 L1173.8 682.808 L1173.24 682.808 L1172.68 682.808 L1172.12 682.808 L1171.56 682.808 L1171 682.808 L1170.44 682.808 L1169.88 682.808 L1169.33 682.808 L1168.77 682.808 L1168.21 682.808 L1167.65 682.808 L1167.09 682.808 L1166.53 682.808 L1165.97 682.808 L1165.41 682.808 L1164.85 682.808 L1164.29 682.808 L1163.73 682.808 L1163.17 682.808 L1162.61 682.808 L1162.05 682.808 L1161.5 682.808 L1160.94 682.808 L1160.38 682.808 L1159.82 682.808 L1159.26 682.808 L1158.7 682.808 L1158.14 682.808 L1157.58 682.808 L1157.02 682.808 L1156.46 682.808 L1155.9 682.808 L1155.34 682.808 L1154.78 682.808 L1154.23 682.808 L1153.67 682.808 L1153.11 682.808 L1152.55 682.808 L1151.99 682.808 L1151.43 682.808 L1150.87 682.808 L1150.31 682.808 L1149.75 682.808 L1149.19 682.808 L1148.63 682.808 L1148.07 682.808 L1147.51 682.808 L1146.96 682.808 L1146.4 682.808 L1145.84 682.808 L1145.28 682.808 L1144.72 682.808 L1144.16 682.808 L1143.6 682.808 L1143.04 682.808 L1142.48 682.808 L1141.92 682.808 L1141.36 682.808 L1140.8 682.808 L1140.24 682.808 L1139.68 682.808 L1139.13 682.808 L1138.57 682.808 L1138.01 682.808 L1137.45 682.808 L1136.89 682.808 L1136.33 682.808 L1135.77 682.808 L1135.21 682.808 L1134.65 682.808 L1134.09 682.808 L1133.53 682.808 L1132.97 682.808 L1132.41 682.808 L1131.86 682.808 L1131.3 682.808 L1130.74 682.808 L1130.18 682.808 L1129.62 682.808 L1129.06 682.808 L1128.5 682.808 L1127.94 682.808 L1127.38 682.808 L1126.82 682.808 L1126.26 682.808 L1125.7 682.808 L1125.14 682.808 L1124.59 682.808 L1124.03 682.808 L1123.47 682.808 L1122.91 682.808 L1122.35 682.808 L1121.79 682.808 L1121.23 682.808 L1120.67 682.808 L1120.11 682.808 L1119.55 682.808 L1118.99 682.808 L1118.43 682.808 L1117.87 682.808 L1117.31 682.808 L1116.76 682.808 L1116.2 682.808 L1115.64 682.808 L1115.08 682.808 L1114.52 682.808 L1113.96 682.808 L1113.4 682.808 L1112.84 682.808 L1112.28 682.808 L1111.72 682.808 L1111.16 682.808 L1110.6 682.808 L1110.04 682.808 L1109.49 682.808 L1108.93 682.808 L1108.37 682.808 L1107.81 682.808 L1107.25 682.808 L1106.69 682.808 L1106.13 682.808 L1105.57 682.808 L1105.01 682.808 L1104.45 682.808 L1103.89 682.808 L1103.33 682.808 L1102.77 682.808 L1102.22 682.808 L1101.66 682.808 L1101.1 682.808 L1100.54 682.808 L1099.98 682.808 L1099.42 682.808 L1098.86 682.808 L1098.3 682.808 L1097.74 682.808 L1097.18 682.808 L1096.62 682.808 L1096.06 682.808 L1095.5 682.808 L1094.94 682.808 L1094.39 682.808 L1093.83 682.808 L1093.27 682.808 L1092.71 682.808 L1092.15 682.808 L1091.59 682.808 L1091.03 682.808 L1090.47 682.808 L1089.91 682.808 L1089.35 682.808 L1088.79 682.808 L1088.23 682.808 L1087.67 682.808 L1087.12 682.808 L1086.56 682.808 L1086 682.808 L1085.44 682.808 L1084.88 682.808 L1084.32 682.808 L1083.76 682.808 L1083.2 682.808 L1082.64 682.808 L1082.08 682.808 L1081.52 682.808 L1080.96 682.808 L1080.4 682.808 L1079.85 682.808 L1079.29 682.808 L1078.73 682.808 L1078.17 682.808 L1077.61 682.808 L1077.05 682.808 L1076.49 682.808 L1075.93 682.808 L1075.37 682.808 L1074.81 682.808 L1074.25 682.808 L1073.69 682.808 L1073.13 682.808 L1072.57 682.808 L1072.02 682.808 L1071.46 682.808 L1070.9 682.808 L1070.34 682.808 L1069.78 682.808 L1069.22 682.808 L1068.66 682.808 L1068.1 682.808 L1067.54 682.808 L1066.98 682.808 L1066.42 682.808 L1065.86 682.808 L1065.3 682.808 L1064.75 682.808 L1064.19 682.808 L1063.63 682.808 L1063.07 682.808 L1062.51 682.808 L1061.95 682.808 L1061.39 682.808 L1060.83 682.808 L1060.27 682.808 L1059.71 682.808 L1059.15 682.808 L1058.59 682.808 L1058.03 682.808 L1057.48 682.808 L1056.92 682.808 L1056.36 682.808 L1055.8 682.808 L1055.24 682.808 L1054.68 682.808 L1054.12 682.808 L1053.56 682.808 L1053 682.808 L1052.44 682.808 L1051.88 682.808 L1051.32 682.808 L1050.76 682.808 L1050.2 682.808 L1049.65 682.808 L1049.09 682.808 L1048.53 682.808 L1047.97 682.808 L1047.41 682.808 L1046.85 682.808 L1046.29 682.808 L1045.73 682.808 L1045.17 682.808 L1044.61 682.808 L1044.05 682.808 L1043.49 682.808 L1042.93 682.808 L1042.38 682.808 L1041.82 682.808 L1041.26 682.808 L1040.7 682.808 L1040.14 682.808 L1039.58 682.808 L1039.02 682.808 L1038.46 682.808 L1037.9 682.808 L1037.34 682.808 L1036.78 682.808 L1036.22 682.808 L1035.66 682.808 L1035.1 682.808 L1034.55 682.808 L1033.99 682.808 L1033.43 682.808 L1032.87 682.808 L1032.31 682.808 L1031.75 682.808 L1031.19 682.808 L1030.63 682.808 L1030.07 682.808 L1029.51 682.808 L1028.95 682.808 L1028.39 682.808 L1027.83 682.808 L1027.28 682.808 L1026.72 682.808 L1026.16 682.808 L1025.6 682.808 L1025.04 682.808 L1024.48 682.808 L1023.92 682.808 L1023.36 682.808 L1022.8 682.808 L1022.24 682.808 L1021.68 682.808 L1021.12 682.808 L1020.56 682.808 L1020.01 682.808 L1019.45 682.808 L1018.89 682.808 L1018.33 682.808 L1017.77 682.808 L1017.21 682.808 L1016.65 682.808 L1016.09 682.808 L1015.53 682.808 L1014.97 682.808 L1014.41 682.808 L1013.85 682.808 L1013.29 682.808 L1012.73 682.808 L1012.18 682.808 L1011.62 682.808 L1011.06 682.808 L1010.5 682.808 L1009.94 682.808 L1009.38 682.808 L1008.82 682.808 L1008.26 682.808 L1007.7 682.808 L1007.14 682.808 L1006.58 682.808 L1006.02 682.808 L1005.46 682.808 L1004.91 682.808 L1004.35 682.808 L1003.79 682.808 L1003.23 682.808 L1002.67 682.808 L1002.11 682.808 L1001.55 682.808 L1000.99 682.808 L1000.43 682.808 L999.872 682.808 L999.313 682.808 L998.754 682.808 L998.194 682.808 L997.635 682.808 L997.076 682.808 L996.517 682.808 L995.957 682.808 L995.398 682.808 L994.839 682.808 L994.28 682.808 L993.72 682.808 L993.161 682.808 L992.602 682.808 L992.043 682.808 L991.483 682.808 L990.924 682.808 L990.365 682.808 L989.806 682.808 L989.246 682.808 L988.687 682.808 L988.128 682.808 L987.569 682.808 L987.009 682.808 L986.45 682.808 L985.891 682.808 L985.332 682.808 L984.772 682.808 L984.213 682.808 L983.654 682.808 L983.095 682.808 L982.535 682.808 L981.976 682.808 L981.417 682.808 L980.858 682.808 L980.298 682.808 L979.739 682.808 L979.18 682.808 L978.621 682.808 L978.061 682.808 L977.502 682.808 L976.943 682.808 L976.384 682.808 L975.824 682.808 L975.265 682.808 L974.706 682.808 L974.147 682.808 L973.587 682.808 L973.028 682.808 L972.469 682.808 L971.91 682.808 L971.35 682.808 L970.791 682.808 L970.232 682.808 L969.673 682.808 L969.113 682.808 L968.554 682.808 L967.995 682.808 L967.436 682.808 L966.876 682.808 L966.317 682.808 L965.758 682.808 L965.199 682.808 L964.639 682.808 L964.08 682.808 L963.521 682.808 L962.962 682.808 L962.402 682.808 L961.843 682.808 L961.284 682.808 L960.725 682.808 L960.165 682.808 L959.606 682.808 L959.047 682.808 L958.488 682.808 L957.928 682.808 L957.369 682.808 L956.81 682.808 L956.251 682.808 L955.691 682.808 L955.132 682.808 L954.573 682.808 L954.014 682.808 L953.454 682.808 L952.895 682.808 L952.336 682.808 L951.777 682.808 L951.217 682.808 L950.658 682.808 L950.099 682.808 L949.54 682.808 L948.98 682.808 L948.421 682.808 L947.862 682.808 L947.303 682.808 L946.743 682.808 L946.184 682.808 L945.625 682.808 L945.066 682.808 L944.506 682.808 L943.947 682.808 L943.388 682.808 L942.829 682.808 L942.269 682.808 L941.71 682.808 L941.151 682.808 L940.592 682.808 L940.032 682.808 L939.473 682.808 L938.914 682.808 L938.355 682.808 L937.795 682.808 L937.236 682.808 L936.677 682.808 L936.118 682.808 L935.558 682.808 L934.999 682.808 L934.44 682.808 L933.881 682.808 L933.321 682.808 L932.762 682.808 L932.203 682.808 L931.644 682.808 L931.084 682.808 L930.525 682.808 L929.966 682.808 L929.406 682.808 L928.847 682.808 L928.288 682.808 L927.729 682.808 L927.169 682.808 L926.61 682.808 L926.051 682.808 L925.492 682.808 L924.932 682.808 L924.373 682.808 L923.814 682.808 L923.255 682.808 L922.695 682.808 L922.136 682.808 L921.577 682.808 L921.018 682.808 L920.458 682.808 L919.899 682.808 L919.34 682.808 L918.781 682.808 L918.221 682.808 L917.662 682.808 L917.103 682.808 L916.544 682.808 L915.984 682.808 L915.425 682.808 L914.866 682.808 L914.307 682.808 L913.747 682.808 L913.188 682.808 L912.629 682.808 L912.07 682.808 L911.51 682.808 L910.951 682.808 L910.392 682.808 L909.833 682.808 L909.273 682.808 L908.714 682.808 L908.155 682.808 L907.596 682.808 L907.036 682.808 L906.477 682.808 L905.918 682.808 L905.359 682.808 L904.799 682.808 L904.24 682.808 L903.681 682.808 L903.122 682.808 L902.562 682.808 L902.003 682.808 L901.444 682.808 L900.885 682.808 L900.325 682.808 L899.766 682.808 L899.207 682.808 L898.648 682.808 L898.088 682.808 L897.529 682.808 L896.97 682.808 L896.411 682.808 L895.851 682.808 L895.292 682.808 L894.733 682.808 L894.174 682.808 L893.614 682.808 L893.055 682.808 L892.496 682.808 L891.937 682.808 L891.377 682.808 L890.818 682.808 L890.259 682.808 L889.7 682.808 L889.14 682.808 L888.581 682.808 L888.022 682.808 L887.463 682.808 L886.903 682.808 L886.344 682.808 L885.785 682.808 L885.226 682.808 L884.666 682.808 L884.107 682.808 L883.548 682.808 L882.989 682.808 L882.429 682.808 L881.87 682.808 L881.311 682.808 L880.752 682.808 L880.192 682.808 L879.633 682.808 L879.074 682.808 L878.515 682.808 L877.955 682.808 L877.396 682.808 L876.837 682.808 L876.278 682.808 L875.718 682.808 L875.159 682.808 L874.6 682.808 L874.041 682.808 L873.481 682.808 L872.922 682.808 L872.363 682.808 L871.804 682.808 L871.244 682.808 L870.685 682.808 L870.126 682.808 L869.567 682.808 L869.007 682.808 L868.448 682.808 L867.889 682.808 L867.33 682.808 L866.77 682.808 L866.211 682.808 L865.652 682.808 L865.093 682.808 L864.533 682.808 L863.974 682.808 L863.415 682.808 L862.856 682.808 L862.296 682.808 L861.737 682.808 L861.178 682.808 L860.619 682.808 L860.059 682.808 L859.5 682.808 L858.941 682.808 L858.382 682.808 L857.822 682.808 L857.263 682.808 L856.704 682.808 L856.145 682.808 L855.585 682.808 L855.026 682.808 L854.467 682.808 L853.908 682.808 L853.348 682.808 L852.789 682.808 L852.23 682.808 L851.671 682.808 L851.111 682.808 L850.552 682.808 L849.993 682.808 L849.434 682.808 L848.874 682.808 L848.315 682.808 L847.756 682.808 L847.197 682.808 L846.637 682.808 L846.078 682.808 L845.519 682.808 L844.96 682.808 L844.4 682.808 L843.841 682.808 L843.282 682.808 L842.723 682.808 L842.163 682.808 L841.604 682.808 L841.045 682.808 L840.486 682.808 L839.926 682.808 L839.367 682.808 L838.808 682.808 L838.249 682.808 L837.689 682.808 L837.13 682.808 L836.571 682.808 L836.012 682.808 L835.452 682.808 L834.893 682.808 L834.334 682.808 L833.775 682.808 L833.215 682.808 L832.656 682.808 L832.097 682.808 L831.538 682.808 L830.978 682.808 L830.419 682.808 L829.86 682.808 L829.301 682.808 L828.741 682.808 L828.182 682.808 L827.623 682.808 L827.064 682.808 L826.504 682.808 L825.945 682.808 L825.386 682.808 L824.827 682.808 L824.267 682.808 L823.708 682.808 L823.149 682.808 L822.59 682.808 L822.03 682.808 L821.471 682.808 L820.912 682.808 L820.353 682.808 L819.793 682.808 L819.234 682.808 L818.675 682.808 L818.116 682.808 L817.556 682.808 L816.997 682.808 L816.438 682.808 L815.879 682.808 L815.319 682.808 L814.76 682.808 L814.201 682.808 L813.642 682.808 L813.082 682.808 L812.523 682.808 L811.964 682.808 L811.405 682.808 L810.845 682.808 L810.286 682.808 L809.727 682.808 L809.168 682.808 L808.608 682.808 L808.049 682.808 L807.49 682.808 L806.931 682.808 L806.371 682.808 L805.812 682.808 L805.253 682.808 L804.693 682.808 L804.134 682.808 L803.575 682.808 L803.016 682.808 L802.456 682.808 L801.897 682.808 L801.338 682.808 L800.779 682.808 L800.219 682.808 L799.66 682.808 L799.101 682.808 L798.542 682.808 L797.982 682.808 L797.423 682.808 L796.864 682.808 L796.305 682.808 L795.745 682.808 L795.186 682.808 L794.627 682.808 L794.068 682.808 L793.508 682.808 L792.949 682.808 L792.39 682.808 L791.831 682.808 L791.271 682.808 L790.712 682.808 L790.153 682.808 L789.594 682.808 L789.034 682.808 L788.475 682.808 L787.916 682.808 L787.357 682.808 L786.797 682.808 L786.238 682.808 L785.679 682.808 L785.12 682.808 L784.56 682.808 L784.001 682.808 L783.442 682.808 L782.883 682.808 L782.323 682.808 L781.764 682.808 L781.205 682.808 L780.646 682.808 L780.086 682.808 L779.527 682.808 L778.968 682.808 L778.409 682.808 L777.849 682.808 L777.29 682.808 L776.731 682.808 L776.172 682.808 L775.612 682.808 L775.053 682.808 L774.494 682.808 L773.935 682.808 L773.375 682.808 L772.816 682.808 L772.257 682.808 L771.698 682.808 L771.138 682.808 L770.579 682.808 L770.02 682.808 L769.461 682.808 L768.901 682.808 L768.342 682.808 L767.783 682.808 L767.224 682.808 L766.664 682.808 L766.105 682.808 L765.546 682.808 L764.987 682.808 L764.427 682.808 L763.868 682.808 L763.309 682.808 L762.75 682.808 L762.19 682.808 L761.631 682.808 L761.072 682.808 L760.513 682.808 L759.953 682.808 L759.394 682.808 L758.835 682.808 L758.276 682.808 L757.716 682.808 L757.157 682.808 L756.598 682.808 L756.039 682.808 L755.479 682.808 L754.92 682.808 L754.361 682.808 L753.802 682.808 L753.242 682.808 L752.683 682.808 L752.124 682.808 L751.565 682.808 L751.005 682.808 L750.446 682.808 L749.887 682.808 L749.328 682.808 L748.768 682.808 L748.209 682.808 L747.65 682.808 L747.091 682.808 L746.531 682.808 L745.972 682.808 L745.413 682.808 L744.854 682.808 L744.294 682.808 L743.735 682.808 L743.176 682.808 L742.617 682.808 L742.057 682.808 L741.498 682.808 L740.939 682.808 L740.38 682.808 L739.82 682.808 L739.261 682.808 L738.702 682.808 L738.143 682.808 L737.583 682.808 L737.024 682.808 L736.465 682.808 L735.906 682.808 L735.346 682.808 L734.787 682.808 L734.228 682.808 L733.669 682.808 L733.109 682.808 L732.55 682.808 L731.991 682.808 L731.432 682.808 L730.872 682.808 L730.313 682.808 L729.754 682.808 L729.195 682.808 L728.635 682.808 L728.076 682.808 L727.517 682.808 L726.958 682.808 L726.398 682.808 L725.839 682.808 L725.28 682.808 L724.721 682.808 L724.161 682.808 L723.602 682.808 L723.043 682.808 L722.484 682.808 L721.924 682.808 L721.365 682.808 L720.806 682.808 L720.247 682.808  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip823)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,687.127 720.806,687.127 721.365,687.127 721.924,687.127 722.484,687.127 723.043,687.127 723.602,687.127 724.161,687.127 724.721,687.127 725.28,687.127 725.839,687.127 726.398,687.127 726.958,687.127 727.517,687.127 728.076,687.127 728.635,687.127 729.195,687.127 729.754,687.127 730.313,687.127 730.872,687.127 731.432,687.127 731.991,687.127 732.55,687.127 733.109,687.127 733.669,687.127 734.228,687.127 734.787,687.127 735.346,687.127 735.906,687.127 736.465,687.127 737.024,687.127 737.583,687.127 738.143,687.127 738.702,687.127 739.261,687.127 739.82,687.127 740.38,687.127 740.939,687.127 741.498,687.127 742.057,687.127 742.617,687.127 743.176,687.127 743.735,687.127 744.294,687.127 744.854,687.127 745.413,687.127 745.972,687.127 746.531,687.127 747.091,687.127 747.65,687.127 748.209,687.127 748.768,687.127 749.328,687.127 749.887,687.127 750.446,687.127 751.005,687.127 751.565,687.127 752.124,687.127 752.683,687.127 753.242,687.127 753.802,687.127 754.361,687.127 754.92,687.127 755.479,687.127 756.039,687.127 756.598,687.127 757.157,687.127 757.716,687.127 758.276,687.127 758.835,687.127 759.394,687.127 759.953,687.127 760.513,687.127 761.072,687.127 761.631,687.127 762.19,687.127 762.75,687.127 763.309,687.127 763.868,687.127 764.427,687.127 764.987,687.127 765.546,687.127 766.105,687.127 766.664,687.127 767.224,687.127 767.783,687.127 768.342,687.127 768.901,687.127 769.461,687.127 770.02,687.127 770.579,687.127 771.138,687.127 771.698,687.127 772.257,687.127 772.816,687.127 773.375,687.127 773.935,687.127 774.494,687.127 775.053,687.127 775.612,687.127 776.172,687.127 776.731,687.127 777.29,687.127 777.849,687.127 778.409,687.127 778.968,687.127 779.527,687.127 780.086,687.127 780.646,687.127 781.205,687.127 781.764,687.127 782.323,687.127 782.883,687.127 783.442,687.127 784.001,687.127 784.56,687.127 785.12,687.127 785.679,687.127 786.238,687.127 786.797,687.127 787.357,687.127 787.916,687.127 788.475,687.127 789.034,687.127 789.594,687.127 790.153,687.127 790.712,687.127 791.271,687.127 791.831,687.127 792.39,687.127 792.949,687.127 793.508,687.127 794.068,687.127 794.627,687.127 795.186,687.127 795.745,687.127 796.305,687.127 796.864,687.127 797.423,687.127 797.982,687.127 798.542,687.127 799.101,687.127 799.66,687.127 800.219,687.127 800.779,687.127 801.338,687.127 801.897,687.127 802.456,687.127 803.016,687.127 803.575,687.127 804.134,687.127 804.693,687.127 805.253,687.127 805.812,687.127 806.371,687.127 806.931,687.127 807.49,687.127 808.049,687.127 808.608,687.127 809.168,687.127 809.727,687.127 810.286,687.127 810.845,687.127 811.405,687.127 811.964,687.127 812.523,687.127 813.082,687.127 813.642,687.127 814.201,687.127 814.76,687.127 815.319,687.127 815.879,687.127 816.438,687.127 816.997,687.127 817.556,687.127 818.116,687.127 818.675,687.127 819.234,687.127 819.793,687.127 820.353,687.127 820.912,687.127 821.471,687.127 822.03,687.127 822.59,687.127 823.149,687.127 823.708,687.127 824.267,687.127 824.827,687.127 825.386,687.127 825.945,687.127 826.504,687.127 827.064,687.127 827.623,687.127 828.182,687.127 828.741,687.127 829.301,687.127 829.86,687.127 830.419,687.127 830.978,687.127 831.538,687.127 832.097,687.127 832.656,687.127 833.215,687.127 833.775,687.127 834.334,687.127 834.893,687.127 835.452,687.127 836.012,687.127 836.571,687.127 837.13,687.127 837.689,687.127 838.249,687.127 838.808,687.127 839.367,687.127 839.926,687.127 840.486,687.127 841.045,687.127 841.604,687.127 842.163,687.127 842.723,687.127 843.282,687.127 843.841,687.127 844.4,687.127 844.96,687.127 845.519,687.127 846.078,687.127 846.637,687.127 847.197,687.127 847.756,687.127 848.315,687.127 848.874,687.127 849.434,687.127 849.993,687.127 850.552,687.127 851.111,687.127 851.671,687.127 852.23,687.127 852.789,687.127 853.348,687.127 853.908,687.127 854.467,687.127 855.026,687.127 855.585,687.127 856.145,687.127 856.704,687.127 857.263,687.127 857.822,687.127 858.382,687.127 858.941,687.127 859.5,687.127 860.059,687.127 860.619,687.127 861.178,687.127 861.737,687.127 862.296,687.127 862.856,687.127 863.415,687.127 863.974,687.127 864.533,687.127 865.093,687.127 865.652,687.127 866.211,687.127 866.77,687.127 867.33,687.127 867.889,687.127 868.448,687.127 869.007,687.127 869.567,687.127 870.126,687.127 870.685,687.127 871.244,687.127 871.804,687.127 872.363,687.127 872.922,687.127 873.481,687.127 874.041,687.127 874.6,687.127 875.159,687.127 875.718,687.127 876.278,687.127 876.837,687.127 877.396,687.127 877.955,687.127 878.515,687.127 879.074,687.127 879.633,687.127 880.192,687.127 880.752,687.127 881.311,687.127 881.87,687.127 882.429,687.127 882.989,687.127 883.548,687.127 884.107,687.127 884.666,687.127 885.226,687.127 885.785,687.127 886.344,687.127 886.903,687.127 887.463,687.127 888.022,687.127 888.581,687.127 889.14,687.127 889.7,687.127 890.259,687.127 890.818,687.127 891.377,687.127 891.937,687.127 892.496,687.127 893.055,687.127 893.614,687.127 894.174,687.127 894.733,687.127 895.292,687.127 895.851,687.127 896.411,687.127 896.97,687.127 897.529,687.127 898.088,687.127 898.648,687.127 899.207,687.127 899.766,687.127 900.325,687.127 900.885,687.127 901.444,687.127 902.003,687.127 902.562,687.127 903.122,687.127 903.681,687.127 904.24,687.127 904.799,687.127 905.359,687.127 905.918,687.127 906.477,687.127 907.036,687.127 907.596,687.127 908.155,687.127 908.714,687.127 909.273,687.127 909.833,687.127 910.392,687.127 910.951,687.127 911.51,687.127 912.07,687.127 912.629,687.127 913.188,687.127 913.747,687.127 914.307,687.127 914.866,687.127 915.425,687.127 915.984,687.127 916.544,687.127 917.103,687.127 917.662,687.127 918.221,687.127 918.781,687.127 919.34,687.127 919.899,687.127 920.458,687.127 921.018,687.127 921.577,687.127 922.136,687.127 922.695,687.127 923.255,687.127 923.814,687.127 924.373,687.127 924.932,687.127 925.492,687.127 926.051,687.127 926.61,687.127 927.169,687.127 927.729,687.127 928.288,687.127 928.847,687.127 929.406,687.127 929.966,687.127 930.525,687.127 931.084,687.127 931.644,687.127 932.203,687.127 932.762,687.127 933.321,687.127 933.881,687.127 934.44,687.127 934.999,687.127 935.558,687.127 936.118,687.127 936.677,687.127 937.236,687.127 937.795,687.127 938.355,687.127 938.914,687.127 939.473,687.127 940.032,687.127 940.592,687.127 941.151,687.127 941.71,687.127 942.269,687.127 942.829,687.127 943.388,687.127 943.947,687.127 944.506,687.127 945.066,687.127 945.625,687.127 946.184,687.127 946.743,687.127 947.303,687.127 947.862,687.127 948.421,687.127 948.98,687.127 949.54,687.127 950.099,687.127 950.658,687.127 951.217,687.127 951.777,687.127 952.336,687.127 952.895,687.127 953.454,687.127 954.014,687.127 954.573,687.127 955.132,687.127 955.691,687.127 956.251,687.127 956.81,687.127 957.369,687.127 957.928,687.127 958.488,687.127 959.047,687.127 959.606,687.127 960.165,687.127 960.725,687.127 961.284,687.127 961.843,687.127 962.402,687.127 962.962,687.127 963.521,687.127 964.08,687.127 964.639,687.127 965.199,687.127 965.758,687.127 966.317,687.127 966.876,687.127 967.436,687.127 967.995,687.127 968.554,687.127 969.113,687.127 969.673,687.127 970.232,687.127 970.791,687.127 971.35,687.127 971.91,687.127 972.469,687.127 973.028,687.127 973.587,687.127 974.147,687.127 974.706,687.127 975.265,687.127 975.824,687.127 976.384,687.127 976.943,687.127 977.502,687.127 978.061,687.127 978.621,687.127 979.18,687.127 979.739,687.127 980.298,687.127 980.858,687.127 981.417,687.127 981.976,687.127 982.535,687.127 983.095,687.127 983.654,687.127 984.213,687.127 984.772,687.127 985.332,687.127 985.891,687.127 986.45,687.127 987.009,687.127 987.569,687.127 988.128,687.127 988.687,687.127 989.246,687.127 989.806,687.127 990.365,687.127 990.924,687.127 991.483,687.127 992.043,687.127 992.602,687.127 993.161,687.127 993.72,687.127 994.28,687.127 994.839,687.127 995.398,687.127 995.957,687.127 996.517,687.127 997.076,687.127 997.635,687.127 998.194,687.127 998.754,687.127 999.313,687.127 999.872,687.127 1000.43,687.127 1000.99,687.127 1001.55,687.127 1002.11,687.127 1002.67,687.127 1003.23,687.127 1003.79,687.127 1004.35,687.127 1004.91,687.127 1005.46,687.127 1006.02,687.127 1006.58,687.127 1007.14,687.127 1007.7,687.127 1008.26,687.127 1008.82,687.127 1009.38,687.127 1009.94,687.127 1010.5,687.127 1011.06,687.127 1011.62,687.127 1012.18,687.127 1012.73,687.127 1013.29,687.127 1013.85,687.127 1014.41,687.127 1014.97,687.127 1015.53,687.127 1016.09,687.127 1016.65,687.127 1017.21,687.127 1017.77,687.127 1018.33,687.127 1018.89,687.127 1019.45,687.127 1020.01,687.127 1020.56,687.127 1021.12,687.127 1021.68,687.127 1022.24,687.127 1022.8,687.127 1023.36,687.127 1023.92,687.127 1024.48,687.127 1025.04,687.127 1025.6,687.127 1026.16,687.127 1026.72,687.127 1027.28,687.127 1027.83,687.127 1028.39,687.127 1028.95,687.127 1029.51,687.127 1030.07,687.127 1030.63,687.127 1031.19,687.127 1031.75,687.127 1032.31,687.127 1032.87,687.127 1033.43,687.127 1033.99,687.127 1034.55,687.127 1035.1,687.127 1035.66,687.127 1036.22,687.127 1036.78,687.127 1037.34,687.127 1037.9,687.127 1038.46,687.127 1039.02,687.127 1039.58,687.127 1040.14,687.127 1040.7,687.127 1041.26,687.127 1041.82,687.127 1042.38,687.127 1042.93,687.127 1043.49,687.127 1044.05,687.127 1044.61,687.127 1045.17,687.127 1045.73,687.127 1046.29,687.127 1046.85,687.127 1047.41,687.127 1047.97,687.127 1048.53,687.127 1049.09,687.127 1049.65,687.127 1050.2,687.127 1050.76,687.127 1051.32,687.127 1051.88,687.127 1052.44,687.127 1053,687.127 1053.56,687.127 1054.12,687.127 1054.68,687.127 1055.24,687.127 1055.8,687.127 1056.36,687.127 1056.92,687.127 1057.48,687.127 1058.03,687.127 1058.59,687.127 1059.15,687.127 1059.71,687.127 1060.27,687.127 1060.83,687.127 1061.39,687.127 1061.95,687.127 1062.51,687.127 1063.07,687.127 1063.63,687.127 1064.19,687.127 1064.75,687.127 1065.3,687.127 1065.86,687.127 1066.42,687.127 1066.98,687.127 1067.54,687.127 1068.1,687.127 1068.66,687.127 1069.22,687.127 1069.78,687.127 1070.34,687.127 1070.9,687.127 1071.46,687.127 1072.02,687.127 1072.57,687.127 1073.13,687.127 1073.69,687.127 1074.25,687.127 1074.81,687.127 1075.37,687.127 1075.93,687.127 1076.49,687.127 1077.05,687.127 1077.61,687.127 1078.17,687.127 1078.73,687.127 1079.29,687.127 1079.85,687.127 1080.4,687.127 1080.96,687.127 1081.52,687.127 1082.08,687.127 1082.64,687.127 1083.2,687.127 1083.76,687.127 1084.32,687.127 1084.88,687.127 1085.44,687.127 1086,687.127 1086.56,687.127 1087.12,687.127 1087.67,687.127 1088.23,687.127 1088.79,687.127 1089.35,687.127 1089.91,687.127 1090.47,687.127 1091.03,687.127 1091.59,687.127 1092.15,687.127 1092.71,687.127 1093.27,687.127 1093.83,687.127 1094.39,687.127 1094.94,687.127 1095.5,687.127 1096.06,687.127 1096.62,687.127 1097.18,687.127 1097.74,687.127 1098.3,687.127 1098.86,687.127 1099.42,687.127 1099.98,687.127 1100.54,687.127 1101.1,687.127 1101.66,687.127 1102.22,687.127 1102.77,687.127 1103.33,687.127 1103.89,687.127 1104.45,687.127 1105.01,687.127 1105.57,687.127 1106.13,687.127 1106.69,687.127 1107.25,687.127 1107.81,687.127 1108.37,687.127 1108.93,687.127 1109.49,687.127 1110.04,687.127 1110.6,687.127 1111.16,687.127 1111.72,687.127 1112.28,687.127 1112.84,687.127 1113.4,687.127 1113.96,687.127 1114.52,687.127 1115.08,687.127 1115.64,687.127 1116.2,687.127 1116.76,687.127 1117.31,687.127 1117.87,687.127 1118.43,687.127 1118.99,687.127 1119.55,687.127 1120.11,687.127 1120.67,687.127 1121.23,687.127 1121.79,687.127 1122.35,687.127 1122.91,687.127 1123.47,687.127 1124.03,687.127 1124.59,687.127 1125.14,687.127 1125.7,687.127 1126.26,687.127 1126.82,687.127 1127.38,687.127 1127.94,687.127 1128.5,687.127 1129.06,687.127 1129.62,687.127 1130.18,687.127 1130.74,687.127 1131.3,687.127 1131.86,687.127 1132.41,687.127 1132.97,687.127 1133.53,687.127 1134.09,687.127 1134.65,687.127 1135.21,687.127 1135.77,687.127 1136.33,687.127 1136.89,687.127 1137.45,687.127 1138.01,687.127 1138.57,687.127 1139.13,687.127 1139.68,687.127 1140.24,687.127 1140.8,687.127 1141.36,687.127 1141.92,687.127 1142.48,687.127 1143.04,687.127 1143.6,687.127 1144.16,687.127 1144.72,687.127 1145.28,687.127 1145.84,687.127 1146.4,687.127 1146.96,687.127 1147.51,687.127 1148.07,687.127 1148.63,687.127 1149.19,687.127 1149.75,687.127 1150.31,687.127 1150.87,687.127 1151.43,687.127 1151.99,687.127 1152.55,687.127 1153.11,687.127 1153.67,687.127 1154.23,687.127 1154.78,687.127 1155.34,687.127 1155.9,687.127 1156.46,687.127 1157.02,687.127 1157.58,687.127 1158.14,687.127 1158.7,687.127 1159.26,687.127 1159.82,687.127 1160.38,687.127 1160.94,687.127 1161.5,687.127 1162.05,687.127 1162.61,687.127 1163.17,687.127 1163.73,687.127 1164.29,687.127 1164.85,687.127 1165.41,687.127 1165.97,687.127 1166.53,687.127 1167.09,687.127 1167.65,687.127 1168.21,687.127 1168.77,687.127 1169.33,687.127 1169.88,687.127 1170.44,687.127 1171,687.127 1171.56,687.127 1172.12,687.127 1172.68,687.127 1173.24,687.127 1173.8,687.127 1174.36,687.127 1174.92,687.127 1175.48,687.127 1176.04,687.127 1176.6,687.127 1177.15,687.127 1177.71,687.127 1178.27,687.127 1178.83,687.127 1179.39,687.127 1179.95,687.127 1180.51,687.127 1181.07,687.127 1181.63,687.127 1182.19,687.127 1182.75,687.127 1183.31,687.127 1183.87,687.127 1184.43,687.127 1184.98,687.127 1185.54,687.127 1186.1,687.127 1186.66,687.127 1187.22,687.127 1187.78,687.127 1188.34,687.127 1188.9,687.127 1189.46,687.127 1190.02,687.127 1190.58,687.127 1191.14,687.127 1191.7,687.127 1192.25,687.127 1192.81,687.127 1193.37,687.127 1193.93,687.127 1194.49,687.127 1195.05,687.127 1195.61,687.127 1196.17,687.127 1196.73,687.127 1197.29,687.127 1197.85,687.127 1198.41,687.127 1198.97,687.127 1199.52,687.127 1200.08,687.127 1200.64,687.127 1201.2,687.127 1201.76,687.127 1202.32,687.127 1202.88,687.127 1203.44,687.127 1204,687.127 1204.56,687.127 1205.12,687.127 1205.68,687.127 1206.24,687.127 1206.8,687.127 1207.35,687.127 1207.91,687.127 1208.47,687.127 1209.03,687.127 1209.59,687.127 1210.15,687.127 1210.71,687.127 1211.27,687.127 1211.83,687.127 1212.39,687.127 1212.95,687.127 1213.51,687.127 1214.07,687.127 1214.62,687.127 1215.18,687.127 1215.74,687.127 1216.3,687.127 1216.86,687.127 1217.42,687.127 1217.98,687.127 1218.54,687.127 1219.1,687.127 1219.66,687.127 1220.22,687.127 1220.78,687.127 1221.34,687.127 1221.89,687.127 1222.45,687.127 1223.01,687.127 1223.57,687.127 1224.13,687.127 1224.69,687.127 1225.25,687.127 1225.81,687.127 1226.37,687.127 1226.93,687.127 1227.49,687.127 1228.05,687.127 1228.61,687.127 1229.17,687.127 1229.72,687.127 1230.28,687.127 1230.84,687.127 1231.4,687.127 1231.96,687.127 1232.52,687.127 1233.08,687.127 1233.64,687.127 1234.2,687.127 1234.76,687.127 1235.32,687.127 1235.88,687.127 1236.44,687.127 1236.99,687.127 1237.55,687.127 1238.11,687.127 1238.67,687.127 1239.23,687.127 1239.79,687.127 1240.35,687.127 1240.91,687.127 1241.47,687.127 1242.03,687.127 1242.59,687.127 1243.15,687.127 1243.71,687.127 1244.26,687.127 1244.82,687.127 1245.38,687.127 1245.94,687.127 1246.5,687.127 1247.06,687.127 1247.62,687.127 1248.18,687.127 1248.74,687.127 1249.3,687.127 1249.86,687.127 1250.42,687.127 1250.98,687.127 1251.54,687.127 1252.09,687.127 1252.65,687.127 1253.21,687.127 1253.77,687.127 1254.33,687.127 1254.89,687.127 1255.45,687.127 1256.01,687.127 1256.57,687.127 1257.13,687.127 1257.69,687.127 1258.25,687.127 1258.81,687.127 1259.36,687.127 1259.92,687.127 1260.48,687.127 1261.04,687.127 1261.6,687.127 1262.16,687.127 1262.72,687.127 1263.28,687.127 1263.84,687.127 1264.4,687.127 1264.96,687.127 1265.52,687.127 1266.08,687.127 1266.63,687.127 1267.19,687.127 1267.75,687.127 1268.31,687.127 1268.87,687.127 1269.43,687.127 1269.99,687.127 1270.55,687.127 1271.11,687.127 1271.67,687.127 1272.23,687.127 1272.79,687.127 1273.35,687.127 1273.91,687.127 1274.46,687.127 1275.02,687.127 1275.58,687.127 1276.14,687.127 1276.7,687.127 1277.26,687.127 1277.82,687.127 1278.38,687.127 1278.94,687.127 1279.5,687.127 1280.06,687.127 1280.62,687.127 1281.18,687.127 1281.73,687.127 1282.29,687.127 1282.85,687.127 1283.41,687.127 1283.97,687.127 1284.53,687.127 1285.09,687.127 1285.65,687.127 1286.21,687.127 1286.77,687.127 1287.33,687.127 1287.89,687.127 1288.45,687.127 1289,687.127 1289.56,687.127 1290.12,687.127 1290.68,687.127 1291.24,687.127 1291.8,687.127 1292.36,687.127 1292.92,687.127 1293.48,687.127 1294.04,687.127 1294.6,687.127 1295.16,687.127 1295.72,687.127 1296.28,687.127 1296.83,687.127 1297.39,687.127 1297.95,687.127 1298.51,687.127 1299.07,687.127 1299.63,687.127 1300.19,687.127 1300.75,687.127 1301.31,687.127 1301.87,687.127 1302.43,687.127 1302.99,687.127 1303.55,687.127 1304.1,687.127 1304.66,687.127 1305.22,687.127 1305.78,687.127 1306.34,687.127 1306.9,687.127 1307.46,687.127 1308.02,687.127 1308.58,687.127 1309.14,687.127 1309.7,687.127 1310.26,687.127 1310.82,687.127 1311.38,687.127 1311.93,687.127 1312.49,687.127 1313.05,687.127 1313.61,687.127 1314.17,687.127 1314.73,687.127 1315.29,687.127 1315.85,687.127 1316.41,687.127 1316.97,687.127 1317.53,687.127 1318.09,687.127 1318.65,687.127 1319.2,687.127 1319.76,687.127 1320.32,687.127 1320.88,687.127 1321.44,687.127 1322,687.127 1322.56,687.127 1323.12,687.127 1323.68,687.127 1324.24,687.127 1324.8,687.127 1325.36,687.127 1325.92,687.127 1326.47,687.127 1327.03,687.127 1327.59,687.127 1328.15,687.127 1328.71,687.127 1329.27,687.127 1329.83,687.127 1330.39,687.127 1330.95,687.127 1331.51,687.127 1332.07,687.127 1332.63,687.127 1333.19,687.127 1333.75,687.127 1334.3,687.127 1334.86,687.127 1335.42,687.127 1335.98,687.127 1336.54,687.127 1337.1,687.127 1337.66,687.127 1338.22,687.127 1338.78,687.127 1339.34,687.127 1339.9,687.127 1340.46,687.127 1341.02,687.127 1341.57,687.127 1342.13,687.127 1342.69,687.127 1343.25,687.127 1343.81,687.127 1344.37,687.127 1344.93,687.127 1345.49,687.127 1346.05,687.127 1346.61,687.127 1347.17,687.127 1347.73,687.127 1348.29,687.127 1348.84,687.127 1349.4,687.127 1349.96,687.127 1350.52,687.127 1351.08,687.127 1351.64,687.127 1352.2,687.127 1352.76,687.127 1353.32,687.127 1353.88,687.127 1354.44,687.127 1355,687.127 1355.56,687.127 1356.12,687.127 1356.67,687.127 1357.23,687.127 1357.79,687.127 1358.35,687.127 1358.91,687.127 1359.47,687.127 1360.03,687.127 1360.59,687.127 1361.15,687.127 1361.71,687.127 1362.27,687.127 1362.83,687.127 1363.39,687.127 1363.94,687.127 1364.5,687.127 1365.06,687.127 1365.62,687.127 1366.18,687.127 1366.74,687.127 1367.3,687.127 1367.86,687.127 1368.42,687.127 1368.98,687.127 1369.54,687.127 1370.1,687.127 1370.66,687.127 1371.21,687.127 1371.77,687.127 1372.33,687.127 1372.89,687.127 1373.45,687.127 1374.01,687.127 1374.57,687.127 1375.13,687.127 1375.69,687.127 1376.25,687.127 1376.81,687.127 1377.37,687.127 1377.93,687.127 1378.49,687.127 1379.04,687.127 1379.6,687.127 1380.16,687.127 1380.72,687.127 1381.28,687.127 1381.84,687.127 1382.4,687.127 1382.96,687.127 1383.52,687.127 1384.08,687.127 1384.64,687.127 1385.2,687.127 1385.76,687.127 1386.31,687.127 1386.87,687.127 1387.43,687.127 1387.99,687.127 1388.55,687.127 1389.11,687.127 1389.67,687.127 1390.23,687.127 1390.79,687.127 1391.35,687.127 1391.91,687.127 1392.47,687.127 1393.03,687.127 1393.58,687.127 1394.14,687.127 1394.7,687.127 1395.26,687.127 1395.82,687.127 1396.38,687.127 1396.94,687.127 1397.5,687.127 1398.06,687.127 1398.62,687.127 1399.18,687.127 1399.74,687.127 1400.3,687.127 1400.86,687.127 1401.41,687.127 1401.97,687.127 1402.53,687.127 1403.09,687.127 1403.65,687.127 1404.21,687.127 1404.77,687.127 1405.33,687.127 1405.89,687.127 1406.45,687.127 1407.01,687.127 1407.57,687.127 1408.13,687.127 1408.68,687.127 1409.24,687.127 1409.8,687.127 1410.36,687.127 1410.92,687.127 1411.48,687.127 1412.04,687.127 1412.6,687.127 1413.16,687.127 1413.72,687.127 1414.28,687.127 1414.84,687.127 1415.4,687.127 1415.95,687.127 1416.51,687.127 1417.07,687.127 1417.63,687.127 1418.19,687.127 1418.75,687.127 1419.31,687.127 1419.87,687.127 1420.43,687.127 1420.99,687.127 1421.55,687.127 1422.11,687.127 1422.67,687.127 1423.23,687.127 1423.78,687.127 1424.34,687.127 1424.9,687.127 1425.46,687.127 1426.02,687.127 1426.58,687.127 1427.14,687.127 1427.7,687.127 1428.26,687.127 1428.82,687.127 1429.38,687.127 1429.94,687.127 1430.5,687.127 1431.05,687.127 1431.61,687.127 1432.17,687.127 1432.73,687.127 1433.29,687.127 1433.85,687.127 1434.41,687.127 1434.97,687.127 1435.53,687.127 1436.09,687.127 1436.65,687.127 1437.21,687.127 1437.77,687.127 1438.33,687.127 1438.88,687.127 1439.44,687.127 1440,687.127 1440.56,687.127 1441.12,687.127 1441.68,687.127 1442.24,687.127 1442.8,687.127 1443.36,687.127 1443.92,687.127 1444.48,687.127 1445.04,687.127 1445.6,687.127 1446.15,687.127 1446.71,687.127 1447.27,687.127 1447.83,687.127 1448.39,687.127 1448.95,687.127 1449.51,687.127 1450.07,687.127 1450.63,687.127 1451.19,687.127 1451.75,687.127 1452.31,687.127 1452.87,687.127 1453.42,687.127 1453.98,687.127 1454.54,687.127 1455.1,687.127 1455.66,687.127 1456.22,687.127 1456.78,687.127 1457.34,687.127 1457.9,687.127 1458.46,687.127 1459.02,687.127 1459.58,687.127 1460.14,687.127 1460.7,687.127 1461.25,687.127 1461.81,687.127 1462.37,687.127 1462.93,687.127 1463.49,687.127 1464.05,687.127 1464.61,687.127 1465.17,687.127 1465.73,687.127 1466.29,687.127 1466.85,687.127 1467.41,687.127 1467.97,687.127 1468.52,687.127 1469.08,687.127 1469.64,687.127 1470.2,687.127 1470.76,687.127 1471.32,687.127 1471.88,687.127 1472.44,687.127 1473,687.127 1473.56,687.127 1474.12,687.127 1474.68,687.127 1475.24,687.127 1475.79,687.127 1476.35,687.127 1476.91,687.127 1477.47,687.127 1478.03,687.127 1478.59,687.127 1479.15,687.127 1479.71,687.127 1480.27,687.127 1480.83,687.127 1481.39,687.127 1481.95,687.127 1482.51,687.127 1483.07,687.127 1483.62,687.127 1484.18,687.127 1484.74,687.127 1485.3,687.127 1485.86,687.127 1486.42,687.127 1486.98,687.127 1487.54,687.127 1488.1,687.127 1488.66,687.127 1489.22,687.127 1489.78,687.127 1490.34,687.127 1490.89,687.127 1491.45,687.127 1492.01,687.127 1492.57,687.127 1493.13,687.127 1493.69,687.127 1494.25,687.127 1494.81,687.127 1495.37,687.127 1495.93,687.127 1496.49,687.127 1497.05,687.127 1497.61,687.127 1498.16,687.127 1498.72,687.127 1499.28,687.127 1499.84,687.127 1500.4,687.127 1500.96,687.127 1501.52,687.127 1502.08,687.127 1502.64,687.127 1503.2,687.127 1503.76,687.127 1504.32,687.127 1504.88,687.127 1505.44,687.127 1505.99,687.127 1506.55,687.127 1507.11,687.127 1507.67,687.127 1508.23,687.127 1508.79,687.127 1509.35,687.127 1509.91,687.127 1510.47,687.127 1511.03,687.127 1511.59,687.127 1512.15,687.127 1512.71,687.127 1513.26,687.127 1513.82,687.127 1514.38,687.127 1514.94,687.127 1515.5,687.127 1516.06,687.127 1516.62,687.127 1517.18,687.127 1517.74,687.127 1518.3,687.127 1518.86,687.127 1519.42,687.127 1519.98,687.127 1520.53,687.127 1521.09,687.127 1521.65,687.127 1522.21,687.127 1522.77,687.127 1523.33,687.127 1523.89,687.127 1524.45,687.127 1525.01,687.127 1525.57,687.127 1526.13,687.127 1526.69,687.127 1527.25,687.127 1527.81,687.127 1528.36,687.127 1528.92,687.127 1529.48,687.127 1530.04,687.127 1530.6,687.127 1531.16,687.127 1531.72,687.127 1532.28,687.127 1532.84,687.127 1533.4,687.127 1533.96,687.127 1534.52,687.127 1535.08,687.127 1535.63,687.127 1536.19,687.127 1536.75,687.127 1537.31,687.127 1537.87,687.127 1538.43,687.127 1538.99,687.127 1539.55,687.127 1540.11,687.127 1540.67,687.127 1541.23,687.127 1541.79,687.127 1542.35,687.127 1542.9,687.127 1543.46,687.127 1544.02,687.127 1544.58,687.127 1545.14,687.127 1545.7,687.127 1546.26,687.127 1546.82,687.127 1547.38,687.127 1547.94,687.127 1548.5,687.127 1549.06,687.127 1549.62,687.127 1550.18,687.127 1550.73,687.127 1551.29,687.127 1551.85,687.127 1552.41,687.127 1552.97,687.127 1553.53,687.127 1554.09,687.127 1554.65,687.127 1555.21,687.127 1555.77,687.127 1556.33,687.127 1556.89,687.127 1557.45,687.127 1558,687.127 1558.56,687.127 1559.12,687.127 1559.68,687.127 1560.24,687.127 1560.8,687.127 1561.36,687.127 1561.92,687.127 1562.48,687.127 1563.04,687.127 1563.6,687.127 1564.16,687.127 1564.72,687.127 1565.28,687.127 1565.83,687.127 1566.39,687.127 1566.95,687.127 1567.51,687.127 1568.07,687.127 1568.63,687.127 1569.19,687.127 1569.75,687.127 1570.31,687.127 1570.87,687.127 1571.43,687.127 1571.99,687.127 1572.55,687.127 1573.1,687.127 1573.66,687.127 1574.22,687.127 1574.78,687.127 1575.34,687.127 1575.9,687.127 1576.46,687.127 1577.02,687.127 1577.58,687.127 1578.14,687.127 1578.7,687.127 1579.26,687.127 1579.82,687.127 1580.37,687.127 1580.93,687.127 1581.49,687.127 1582.05,687.127 1582.61,687.127 1583.17,687.127 1583.73,687.127 1584.29,687.127 1584.85,687.127 1585.41,687.127 1585.97,687.127 1586.53,687.127 1587.09,687.127 1587.65,687.127 1588.2,687.127 1588.76,687.127 1589.32,687.127 1589.88,687.127 1590.44,687.127 1591,687.127 1591.56,687.127 1592.12,687.127 1592.68,687.127 1593.24,687.127 1593.8,687.127 1594.36,687.127 1594.92,687.127 1595.47,687.127 1596.03,687.127 1596.59,687.127 1597.15,687.127 1597.71,687.127 1598.27,687.127 1598.83,687.127 1599.39,687.127 1599.95,687.127 1600.51,687.127 1601.07,687.127 1601.63,687.127 1602.19,687.127 1602.74,687.127 1603.3,687.127 1603.86,687.127 1604.42,687.127 1604.98,687.127 1605.54,687.127 1606.1,687.127 1606.66,687.127 1607.22,687.127 1607.78,687.127 1608.34,687.127 1608.9,687.127 1609.46,687.127 1610.02,687.127 1610.57,687.127 1611.13,687.127 1611.69,687.127 1612.25,687.127 1612.81,687.127 1613.37,687.127 1613.93,687.127 1614.49,687.127 1615.05,687.127 1615.61,687.127 1616.17,687.127 1616.73,687.127 1617.29,687.127 1617.84,687.127 1618.4,687.127 1618.96,687.127 1619.52,687.127 1620.08,687.127 1620.64,687.127 1621.2,687.127 1621.76,687.127 1622.32,687.127 1622.88,687.127 1623.44,687.127 1624,687.127 1624.56,687.127 1625.11,687.127 1625.67,687.127 1626.23,687.127 1626.79,687.127 1627.35,687.127 1627.91,687.127 1628.47,687.127 1629.03,687.127 1629.59,687.127 1630.15,687.127 1630.71,687.127 1631.27,687.127 1631.83,687.127 1632.39,687.127 1632.94,687.127 1633.5,687.127 1634.06,687.127 1634.62,687.127 1635.18,687.127 1635.74,687.127 1636.3,687.127 1636.86,687.127 1637.42,687.127 1637.98,687.127 1638.54,687.127 1639.1,687.127 1639.66,687.127 1640.21,687.127 1640.77,687.127 1641.33,687.127 1641.89,687.127 1642.45,687.127 1643.01,687.127 1643.57,687.127 1644.13,687.127 1644.69,687.127 1645.25,687.127 1645.81,687.127 1646.37,687.127 1646.93,687.127 1647.48,687.127 1648.04,687.127 1648.6,687.127 1649.16,687.127 1649.72,687.127 1650.28,687.127 1650.84,687.127 1651.4,687.127 1651.96,687.127 1652.52,687.127 1653.08,687.127 1653.64,687.127 1654.2,687.127 1654.76,687.127 1655.31,687.127 1655.87,687.127 1656.43,687.127 1656.99,687.127 1657.55,687.127 1658.11,687.127 1658.67,687.127 1659.23,687.127 1659.79,687.127 1660.35,687.127 1660.91,687.127 1661.47,687.127 1662.03,687.127 1662.58,687.127 1663.14,687.127 1663.7,687.127 1664.26,687.127 1664.82,687.127 1665.38,687.127 1665.94,687.127 1666.5,687.127 1667.06,687.127 1667.62,687.127 1668.18,687.127 1668.74,687.127 1669.3,687.127 1669.85,687.127 1670.41,687.127 1670.97,687.127 1671.53,687.127 1672.09,687.127 1672.65,687.127 1673.21,687.127 1673.77,687.127 1674.33,687.127 1674.89,687.127 1675.45,687.127 1676.01,687.127 1676.57,687.127 1677.13,687.127 1677.68,687.127 1678.24,687.127 1678.8,687.127 1679.36,687.127 1679.92,687.127 1680.48,687.127 1681.04,687.127 1681.6,687.127 1682.16,687.127 1682.72,687.127 1683.28,687.127 1683.84,687.127 1684.4,687.127 1684.95,687.127 1685.51,687.127 1686.07,687.127 1686.63,687.127 1687.19,687.127 1687.75,687.127 1688.31,687.127 1688.87,687.127 1689.43,687.127 1689.99,687.127 1690.55,687.127 1691.11,687.127 1691.67,687.127 1692.23,687.127 1692.78,687.127 1693.34,687.127 1693.9,687.127 1694.46,687.127 1695.02,687.127 1695.58,687.127 1696.14,687.127 1696.7,687.127 1697.26,687.127 1697.82,687.127 1698.38,687.127 1698.94,687.127 1699.5,687.127 1700.05,687.127 1700.61,687.127 1701.17,687.127 1701.73,687.127 1702.29,687.127 1702.85,687.127 1703.41,687.127 1703.97,687.127 1704.53,687.127 1705.09,687.127 1705.65,687.127 1706.21,687.127 1706.77,687.127 1707.32,687.127 1707.88,687.127 1708.44,687.127 1709,687.127 1709.56,687.127 1710.12,687.127 1710.68,687.127 1711.24,687.127 1711.8,687.127 1712.36,687.127 1712.92,687.127 1713.48,687.127 1714.04,687.127 1714.6,687.127 1715.15,687.127 1715.71,687.127 1716.27,687.127 1716.83,687.127 1717.39,687.127 1717.95,687.127 1718.51,687.127 1719.07,687.127 1719.63,687.127 1720.19,687.127 1720.75,687.127 1721.31,687.127 1721.87,687.127 1722.42,687.127 1722.98,687.127 1723.54,687.127 1724.1,687.127 1724.66,687.127 1725.22,687.127 1725.78,687.127 1726.34,687.127 1726.9,687.127 1727.46,687.127 1728.02,687.127 1728.58,687.127 1729.14,687.127 1729.69,687.127 1730.25,687.127 1730.81,687.127 1731.37,687.127 1731.93,687.127 1732.49,687.127 1733.05,687.127 1733.61,687.127 1734.17,687.127 1734.73,687.127 1735.29,687.127 1735.85,687.127 1736.41,687.127 1736.97,687.127 1737.52,687.127 1738.08,687.127 1738.64,687.127 1739.2,687.127 1739.76,687.127 1740.32,687.127 1740.88,687.127 1741.44,687.127 1742,687.127 1742.56,687.127 1743.12,687.127 1743.68,687.127 1744.24,687.127 1744.79,687.127 1745.35,687.127 1745.91,687.127 1746.47,687.127 1747.03,687.127 1747.59,687.127 1748.15,687.127 1748.71,687.127 1749.27,687.127 1749.83,687.127 1750.39,687.127 1750.95,687.127 1751.51,687.127 1752.06,687.127 1752.62,687.127 1753.18,687.127 1753.74,687.127 1754.3,687.127 1754.86,687.127 1755.42,687.127 1755.98,687.127 1756.54,687.127 1757.1,687.127 1757.66,687.127 1758.22,687.127 1758.78,687.127 1759.34,687.127 1759.89,687.127 1760.45,687.127 1761.01,687.127 1761.57,687.127 1762.13,687.127 1762.69,687.127 1763.25,687.127 1763.81,687.127 1764.37,687.127 1764.93,687.127 1765.49,687.127 1766.05,687.127 1766.61,687.127 1767.16,687.127 1767.72,687.127 1768.28,687.127 1768.84,687.127 1769.4,687.127 1769.96,687.127 1770.52,687.127 1771.08,687.127 1771.64,687.127 1772.2,687.127 1772.76,687.127 1773.32,687.127 1773.88,687.127 1774.43,687.127 1774.99,687.127 1775.55,687.127 1776.11,687.127 1776.67,687.127 1777.23,687.127 1777.79,687.127 1778.35,687.127 1778.91,687.127 1779.47,687.127 1780.03,687.127 1780.59,687.127 1781.15,687.127 1781.71,687.127 1782.26,687.127 1782.82,687.127 1783.38,687.127 1783.94,687.127 1784.5,687.127 1785.06,687.127 1785.62,687.127 1786.18,687.127 1786.74,687.127 1787.3,687.127 1787.86,687.127 1788.42,687.127 1788.98,687.127 1789.53,687.127 1790.09,687.127 1790.65,687.127 1791.21,687.127 1791.77,687.127 1792.33,687.127 1792.89,687.127 1793.45,687.127 1794.01,687.127 1794.57,687.127 1795.13,687.127 1795.69,687.127 1796.25,687.127 1796.8,687.127 1797.36,687.127 1797.92,687.127 1798.48,687.127 1799.04,687.127 1799.6,687.127 1800.16,687.127 1800.72,687.127 1801.28,687.127 1801.84,687.127 1802.4,687.127 1802.96,687.127 1803.52,687.127 1804.08,687.127 1804.63,687.127 1805.19,687.127 1805.75,687.127 1806.31,687.127 1806.87,687.127 1807.43,687.127 1807.99,687.127 1808.55,687.127 1809.11,687.127 1809.67,687.127 1810.23,687.127 1810.79,687.127 1811.35,687.127 1811.9,687.127 1812.46,687.127 1813.02,687.127 1813.58,687.127 1814.14,687.127 1814.7,687.127 1815.26,687.127 1815.82,687.127 1816.38,687.127 1816.94,687.127 1817.5,687.127 1818.06,687.127 1818.62,687.127 1819.18,687.127 1819.73,687.127 1820.29,687.127 1820.85,687.127 1821.41,687.127 1821.97,687.127 1822.53,687.127 1823.09,687.127 1823.65,687.127 1824.21,687.127 1824.77,687.127 1825.33,687.127 1825.89,687.127 1826.45,687.127 1827,687.127 1827.56,687.127 1828.12,687.127 1828.68,687.127 1829.24,687.127 1829.8,687.127 1830.36,687.127 1830.92,687.127 1831.48,687.127 1832.04,687.127 1832.6,687.127 1833.16,687.127 1833.72,687.127 1834.27,687.127 1834.83,687.127 1835.39,687.127 1835.95,687.127 1836.51,687.127 1837.07,687.127 1837.63,687.127 1838.19,687.127 \"/>\n<path clip-path=\"url(#clip823)\" d=\"M720.247 684.863 L720.806 684.863 L721.365 684.863 L721.924 684.863 L722.484 684.863 L723.043 684.863 L723.602 684.863 L724.161 684.863 L724.721 684.863 L725.28 684.863 L725.839 684.863 L726.398 684.863 L726.958 684.863 L727.517 684.863 L728.076 684.863 L728.635 684.863 L729.195 684.863 L729.754 684.863 L730.313 684.863 L730.872 684.863 L731.432 684.863 L731.991 684.863 L732.55 684.863 L733.109 684.863 L733.669 684.863 L734.228 684.863 L734.787 684.863 L735.346 684.863 L735.906 684.863 L736.465 684.863 L737.024 684.863 L737.583 684.863 L738.143 684.863 L738.702 684.863 L739.261 684.863 L739.82 684.863 L740.38 684.863 L740.939 684.863 L741.498 684.863 L742.057 684.863 L742.617 684.863 L743.176 684.863 L743.735 684.863 L744.294 684.863 L744.854 684.863 L745.413 684.863 L745.972 684.863 L746.531 684.863 L747.091 684.863 L747.65 684.863 L748.209 684.863 L748.768 684.863 L749.328 684.863 L749.887 684.863 L750.446 684.863 L751.005 684.863 L751.565 684.863 L752.124 684.863 L752.683 684.863 L753.242 684.863 L753.802 684.863 L754.361 684.863 L754.92 684.863 L755.479 684.863 L756.039 684.863 L756.598 684.863 L757.157 684.863 L757.716 684.863 L758.276 684.863 L758.835 684.863 L759.394 684.863 L759.953 684.863 L760.513 684.863 L761.072 684.863 L761.631 684.863 L762.19 684.863 L762.75 684.863 L763.309 684.863 L763.868 684.863 L764.427 684.863 L764.987 684.863 L765.546 684.863 L766.105 684.863 L766.664 684.863 L767.224 684.863 L767.783 684.863 L768.342 684.863 L768.901 684.863 L769.461 684.863 L770.02 684.863 L770.579 684.863 L771.138 684.863 L771.698 684.863 L772.257 684.863 L772.816 684.863 L773.375 684.863 L773.935 684.863 L774.494 684.863 L775.053 684.863 L775.612 684.863 L776.172 684.863 L776.731 684.863 L777.29 684.863 L777.849 684.863 L778.409 684.863 L778.968 684.863 L779.527 684.863 L780.086 684.863 L780.646 684.863 L781.205 684.863 L781.764 684.863 L782.323 684.863 L782.883 684.863 L783.442 684.863 L784.001 684.863 L784.56 684.863 L785.12 684.863 L785.679 684.863 L786.238 684.863 L786.797 684.863 L787.357 684.863 L787.916 684.863 L788.475 684.863 L789.034 684.863 L789.594 684.863 L790.153 684.863 L790.712 684.863 L791.271 684.863 L791.831 684.863 L792.39 684.863 L792.949 684.863 L793.508 684.863 L794.068 684.863 L794.627 684.863 L795.186 684.863 L795.745 684.863 L796.305 684.863 L796.864 684.863 L797.423 684.863 L797.982 684.863 L798.542 684.863 L799.101 684.863 L799.66 684.863 L800.219 684.863 L800.779 684.863 L801.338 684.863 L801.897 684.863 L802.456 684.863 L803.016 684.863 L803.575 684.863 L804.134 684.863 L804.693 684.863 L805.253 684.863 L805.812 684.863 L806.371 684.863 L806.931 684.863 L807.49 684.863 L808.049 684.863 L808.608 684.863 L809.168 684.863 L809.727 684.863 L810.286 684.863 L810.845 684.863 L811.405 684.863 L811.964 684.863 L812.523 684.863 L813.082 684.863 L813.642 684.863 L814.201 684.863 L814.76 684.863 L815.319 684.863 L815.879 684.863 L816.438 684.863 L816.997 684.863 L817.556 684.863 L818.116 684.863 L818.675 684.863 L819.234 684.863 L819.793 684.863 L820.353 684.863 L820.912 684.863 L821.471 684.863 L822.03 684.863 L822.59 684.863 L823.149 684.863 L823.708 684.863 L824.267 684.863 L824.827 684.863 L825.386 684.863 L825.945 684.863 L826.504 684.863 L827.064 684.863 L827.623 684.863 L828.182 684.863 L828.741 684.863 L829.301 684.863 L829.86 684.863 L830.419 684.863 L830.978 684.863 L831.538 684.863 L832.097 684.863 L832.656 684.863 L833.215 684.863 L833.775 684.863 L834.334 684.863 L834.893 684.863 L835.452 684.863 L836.012 684.863 L836.571 684.863 L837.13 684.863 L837.689 684.863 L838.249 684.863 L838.808 684.863 L839.367 684.863 L839.926 684.863 L840.486 684.863 L841.045 684.863 L841.604 684.863 L842.163 684.863 L842.723 684.863 L843.282 684.863 L843.841 684.863 L844.4 684.863 L844.96 684.863 L845.519 684.863 L846.078 684.863 L846.637 684.863 L847.197 684.863 L847.756 684.863 L848.315 684.863 L848.874 684.863 L849.434 684.863 L849.993 684.863 L850.552 684.863 L851.111 684.863 L851.671 684.863 L852.23 684.863 L852.789 684.863 L853.348 684.863 L853.908 684.863 L854.467 684.863 L855.026 684.863 L855.585 684.863 L856.145 684.863 L856.704 684.863 L857.263 684.863 L857.822 684.863 L858.382 684.863 L858.941 684.863 L859.5 684.863 L860.059 684.863 L860.619 684.863 L861.178 684.863 L861.737 684.863 L862.296 684.863 L862.856 684.863 L863.415 684.863 L863.974 684.863 L864.533 684.863 L865.093 684.863 L865.652 684.863 L866.211 684.863 L866.77 684.863 L867.33 684.863 L867.889 684.863 L868.448 684.863 L869.007 684.863 L869.567 684.863 L870.126 684.863 L870.685 684.863 L871.244 684.863 L871.804 684.863 L872.363 684.863 L872.922 684.863 L873.481 684.863 L874.041 684.863 L874.6 684.863 L875.159 684.863 L875.718 684.863 L876.278 684.863 L876.837 684.863 L877.396 684.863 L877.955 684.863 L878.515 684.863 L879.074 684.863 L879.633 684.863 L880.192 684.863 L880.752 684.863 L881.311 684.863 L881.87 684.863 L882.429 684.863 L882.989 684.863 L883.548 684.863 L884.107 684.863 L884.666 684.863 L885.226 684.863 L885.785 684.863 L886.344 684.863 L886.903 684.863 L887.463 684.863 L888.022 684.863 L888.581 684.863 L889.14 684.863 L889.7 684.863 L890.259 684.863 L890.818 684.863 L891.377 684.863 L891.937 684.863 L892.496 684.863 L893.055 684.863 L893.614 684.863 L894.174 684.863 L894.733 684.863 L895.292 684.863 L895.851 684.863 L896.411 684.863 L896.97 684.863 L897.529 684.863 L898.088 684.863 L898.648 684.863 L899.207 684.863 L899.766 684.863 L900.325 684.863 L900.885 684.863 L901.444 684.863 L902.003 684.863 L902.562 684.863 L903.122 684.863 L903.681 684.863 L904.24 684.863 L904.799 684.863 L905.359 684.863 L905.918 684.863 L906.477 684.863 L907.036 684.863 L907.596 684.863 L908.155 684.863 L908.714 684.863 L909.273 684.863 L909.833 684.863 L910.392 684.863 L910.951 684.863 L911.51 684.863 L912.07 684.863 L912.629 684.863 L913.188 684.863 L913.747 684.863 L914.307 684.863 L914.866 684.863 L915.425 684.863 L915.984 684.863 L916.544 684.863 L917.103 684.863 L917.662 684.863 L918.221 684.863 L918.781 684.863 L919.34 684.863 L919.899 684.863 L920.458 684.863 L921.018 684.863 L921.577 684.863 L922.136 684.863 L922.695 684.863 L923.255 684.863 L923.814 684.863 L924.373 684.863 L924.932 684.863 L925.492 684.863 L926.051 684.863 L926.61 684.863 L927.169 684.863 L927.729 684.863 L928.288 684.863 L928.847 684.863 L929.406 684.863 L929.966 684.863 L930.525 684.863 L931.084 684.863 L931.644 684.863 L932.203 684.863 L932.762 684.863 L933.321 684.863 L933.881 684.863 L934.44 684.863 L934.999 684.863 L935.558 684.863 L936.118 684.863 L936.677 684.863 L937.236 684.863 L937.795 684.863 L938.355 684.863 L938.914 684.863 L939.473 684.863 L940.032 684.863 L940.592 684.863 L941.151 684.863 L941.71 684.863 L942.269 684.863 L942.829 684.863 L943.388 684.863 L943.947 684.863 L944.506 684.863 L945.066 684.863 L945.625 684.863 L946.184 684.863 L946.743 684.863 L947.303 684.863 L947.862 684.863 L948.421 684.863 L948.98 684.863 L949.54 684.863 L950.099 684.863 L950.658 684.863 L951.217 684.863 L951.777 684.863 L952.336 684.863 L952.895 684.863 L953.454 684.863 L954.014 684.863 L954.573 684.863 L955.132 684.863 L955.691 684.863 L956.251 684.863 L956.81 684.863 L957.369 684.863 L957.928 684.863 L958.488 684.863 L959.047 684.863 L959.606 684.863 L960.165 684.863 L960.725 684.863 L961.284 684.863 L961.843 684.863 L962.402 684.863 L962.962 684.863 L963.521 684.863 L964.08 684.863 L964.639 684.863 L965.199 684.863 L965.758 684.863 L966.317 684.863 L966.876 684.863 L967.436 684.863 L967.995 684.863 L968.554 684.863 L969.113 684.863 L969.673 684.863 L970.232 684.863 L970.791 684.863 L971.35 684.863 L971.91 684.863 L972.469 684.863 L973.028 684.863 L973.587 684.863 L974.147 684.863 L974.706 684.863 L975.265 684.863 L975.824 684.863 L976.384 684.863 L976.943 684.863 L977.502 684.863 L978.061 684.863 L978.621 684.863 L979.18 684.863 L979.739 684.863 L980.298 684.863 L980.858 684.863 L981.417 684.863 L981.976 684.863 L982.535 684.863 L983.095 684.863 L983.654 684.863 L984.213 684.863 L984.772 684.863 L985.332 684.863 L985.891 684.863 L986.45 684.863 L987.009 684.863 L987.569 684.863 L988.128 684.863 L988.687 684.863 L989.246 684.863 L989.806 684.863 L990.365 684.863 L990.924 684.863 L991.483 684.863 L992.043 684.863 L992.602 684.863 L993.161 684.863 L993.72 684.863 L994.28 684.863 L994.839 684.863 L995.398 684.863 L995.957 684.863 L996.517 684.863 L997.076 684.863 L997.635 684.863 L998.194 684.863 L998.754 684.863 L999.313 684.863 L999.872 684.863 L1000.43 684.863 L1000.99 684.863 L1001.55 684.863 L1002.11 684.863 L1002.67 684.863 L1003.23 684.863 L1003.79 684.863 L1004.35 684.863 L1004.91 684.863 L1005.46 684.863 L1006.02 684.863 L1006.58 684.863 L1007.14 684.863 L1007.7 684.863 L1008.26 684.863 L1008.82 684.863 L1009.38 684.863 L1009.94 684.863 L1010.5 684.863 L1011.06 684.863 L1011.62 684.863 L1012.18 684.863 L1012.73 684.863 L1013.29 684.863 L1013.85 684.863 L1014.41 684.863 L1014.97 684.863 L1015.53 684.863 L1016.09 684.863 L1016.65 684.863 L1017.21 684.863 L1017.77 684.863 L1018.33 684.863 L1018.89 684.863 L1019.45 684.863 L1020.01 684.863 L1020.56 684.863 L1021.12 684.863 L1021.68 684.863 L1022.24 684.863 L1022.8 684.863 L1023.36 684.863 L1023.92 684.863 L1024.48 684.863 L1025.04 684.863 L1025.6 684.863 L1026.16 684.863 L1026.72 684.863 L1027.28 684.863 L1027.83 684.863 L1028.39 684.863 L1028.95 684.863 L1029.51 684.863 L1030.07 684.863 L1030.63 684.863 L1031.19 684.863 L1031.75 684.863 L1032.31 684.863 L1032.87 684.863 L1033.43 684.863 L1033.99 684.863 L1034.55 684.863 L1035.1 684.863 L1035.66 684.863 L1036.22 684.863 L1036.78 684.863 L1037.34 684.863 L1037.9 684.863 L1038.46 684.863 L1039.02 684.863 L1039.58 684.863 L1040.14 684.863 L1040.7 684.863 L1041.26 684.863 L1041.82 684.863 L1042.38 684.863 L1042.93 684.863 L1043.49 684.863 L1044.05 684.863 L1044.61 684.863 L1045.17 684.863 L1045.73 684.863 L1046.29 684.863 L1046.85 684.863 L1047.41 684.863 L1047.97 684.863 L1048.53 684.863 L1049.09 684.863 L1049.65 684.863 L1050.2 684.863 L1050.76 684.863 L1051.32 684.863 L1051.88 684.863 L1052.44 684.863 L1053 684.863 L1053.56 684.863 L1054.12 684.863 L1054.68 684.863 L1055.24 684.863 L1055.8 684.863 L1056.36 684.863 L1056.92 684.863 L1057.48 684.863 L1058.03 684.863 L1058.59 684.863 L1059.15 684.863 L1059.71 684.863 L1060.27 684.863 L1060.83 684.863 L1061.39 684.863 L1061.95 684.863 L1062.51 684.863 L1063.07 684.863 L1063.63 684.863 L1064.19 684.863 L1064.75 684.863 L1065.3 684.863 L1065.86 684.863 L1066.42 684.863 L1066.98 684.863 L1067.54 684.863 L1068.1 684.863 L1068.66 684.863 L1069.22 684.863 L1069.78 684.863 L1070.34 684.863 L1070.9 684.863 L1071.46 684.863 L1072.02 684.863 L1072.57 684.863 L1073.13 684.863 L1073.69 684.863 L1074.25 684.863 L1074.81 684.863 L1075.37 684.863 L1075.93 684.863 L1076.49 684.863 L1077.05 684.863 L1077.61 684.863 L1078.17 684.863 L1078.73 684.863 L1079.29 684.863 L1079.85 684.863 L1080.4 684.863 L1080.96 684.863 L1081.52 684.863 L1082.08 684.863 L1082.64 684.863 L1083.2 684.863 L1083.76 684.863 L1084.32 684.863 L1084.88 684.863 L1085.44 684.863 L1086 684.863 L1086.56 684.863 L1087.12 684.863 L1087.67 684.863 L1088.23 684.863 L1088.79 684.863 L1089.35 684.863 L1089.91 684.863 L1090.47 684.863 L1091.03 684.863 L1091.59 684.863 L1092.15 684.863 L1092.71 684.863 L1093.27 684.863 L1093.83 684.863 L1094.39 684.863 L1094.94 684.863 L1095.5 684.863 L1096.06 684.863 L1096.62 684.863 L1097.18 684.863 L1097.74 684.863 L1098.3 684.863 L1098.86 684.863 L1099.42 684.863 L1099.98 684.863 L1100.54 684.863 L1101.1 684.863 L1101.66 684.863 L1102.22 684.863 L1102.77 684.863 L1103.33 684.863 L1103.89 684.863 L1104.45 684.863 L1105.01 684.863 L1105.57 684.863 L1106.13 684.863 L1106.69 684.863 L1107.25 684.863 L1107.81 684.863 L1108.37 684.863 L1108.93 684.863 L1109.49 684.863 L1110.04 684.863 L1110.6 684.863 L1111.16 684.863 L1111.72 684.863 L1112.28 684.863 L1112.84 684.863 L1113.4 684.863 L1113.96 684.863 L1114.52 684.863 L1115.08 684.863 L1115.64 684.863 L1116.2 684.863 L1116.76 684.863 L1117.31 684.863 L1117.87 684.863 L1118.43 684.863 L1118.99 684.863 L1119.55 684.863 L1120.11 684.863 L1120.67 684.863 L1121.23 684.863 L1121.79 684.863 L1122.35 684.863 L1122.91 684.863 L1123.47 684.863 L1124.03 684.863 L1124.59 684.863 L1125.14 684.863 L1125.7 684.863 L1126.26 684.863 L1126.82 684.863 L1127.38 684.863 L1127.94 684.863 L1128.5 684.863 L1129.06 684.863 L1129.62 684.863 L1130.18 684.863 L1130.74 684.863 L1131.3 684.863 L1131.86 684.863 L1132.41 684.863 L1132.97 684.863 L1133.53 684.863 L1134.09 684.863 L1134.65 684.863 L1135.21 684.863 L1135.77 684.863 L1136.33 684.863 L1136.89 684.863 L1137.45 684.863 L1138.01 684.863 L1138.57 684.863 L1139.13 684.863 L1139.68 684.863 L1140.24 684.863 L1140.8 684.863 L1141.36 684.863 L1141.92 684.863 L1142.48 684.863 L1143.04 684.863 L1143.6 684.863 L1144.16 684.863 L1144.72 684.863 L1145.28 684.863 L1145.84 684.863 L1146.4 684.863 L1146.96 684.863 L1147.51 684.863 L1148.07 684.863 L1148.63 684.863 L1149.19 684.863 L1149.75 684.863 L1150.31 684.863 L1150.87 684.863 L1151.43 684.863 L1151.99 684.863 L1152.55 684.863 L1153.11 684.863 L1153.67 684.863 L1154.23 684.863 L1154.78 684.863 L1155.34 684.863 L1155.9 684.863 L1156.46 684.863 L1157.02 684.863 L1157.58 684.863 L1158.14 684.863 L1158.7 684.863 L1159.26 684.863 L1159.82 684.863 L1160.38 684.863 L1160.94 684.863 L1161.5 684.863 L1162.05 684.863 L1162.61 684.863 L1163.17 684.863 L1163.73 684.863 L1164.29 684.863 L1164.85 684.863 L1165.41 684.863 L1165.97 684.863 L1166.53 684.863 L1167.09 684.863 L1167.65 684.863 L1168.21 684.863 L1168.77 684.863 L1169.33 684.863 L1169.88 684.863 L1170.44 684.863 L1171 684.863 L1171.56 684.863 L1172.12 684.863 L1172.68 684.863 L1173.24 684.863 L1173.8 684.863 L1174.36 684.863 L1174.92 684.863 L1175.48 684.863 L1176.04 684.863 L1176.6 684.863 L1177.15 684.863 L1177.71 684.863 L1178.27 684.863 L1178.83 684.863 L1179.39 684.863 L1179.95 684.863 L1180.51 684.863 L1181.07 684.863 L1181.63 684.863 L1182.19 684.863 L1182.75 684.863 L1183.31 684.863 L1183.87 684.863 L1184.43 684.863 L1184.98 684.863 L1185.54 684.863 L1186.1 684.863 L1186.66 684.863 L1187.22 684.863 L1187.78 684.863 L1188.34 684.863 L1188.9 684.863 L1189.46 684.863 L1190.02 684.863 L1190.58 684.863 L1191.14 684.863 L1191.7 684.863 L1192.25 684.863 L1192.81 684.863 L1193.37 684.863 L1193.93 684.863 L1194.49 684.863 L1195.05 684.863 L1195.61 684.863 L1196.17 684.863 L1196.73 684.863 L1197.29 684.863 L1197.85 684.863 L1198.41 684.863 L1198.97 684.863 L1199.52 684.863 L1200.08 684.863 L1200.64 684.863 L1201.2 684.863 L1201.76 684.863 L1202.32 684.863 L1202.88 684.863 L1203.44 684.863 L1204 684.863 L1204.56 684.863 L1205.12 684.863 L1205.68 684.863 L1206.24 684.863 L1206.8 684.863 L1207.35 684.863 L1207.91 684.863 L1208.47 684.863 L1209.03 684.863 L1209.59 684.863 L1210.15 684.863 L1210.71 684.863 L1211.27 684.863 L1211.83 684.863 L1212.39 684.863 L1212.95 684.863 L1213.51 684.863 L1214.07 684.863 L1214.62 684.863 L1215.18 684.863 L1215.74 684.863 L1216.3 684.863 L1216.86 684.863 L1217.42 684.863 L1217.98 684.863 L1218.54 684.863 L1219.1 684.863 L1219.66 684.863 L1220.22 684.863 L1220.78 684.863 L1221.34 684.863 L1221.89 684.863 L1222.45 684.863 L1223.01 684.863 L1223.57 684.863 L1224.13 684.863 L1224.69 684.863 L1225.25 684.863 L1225.81 684.863 L1226.37 684.863 L1226.93 684.863 L1227.49 684.863 L1228.05 684.863 L1228.61 684.863 L1229.17 684.863 L1229.72 684.863 L1230.28 684.863 L1230.84 684.863 L1231.4 684.863 L1231.96 684.863 L1232.52 684.863 L1233.08 684.863 L1233.64 684.863 L1234.2 684.863 L1234.76 684.863 L1235.32 684.863 L1235.88 684.863 L1236.44 684.863 L1236.99 684.863 L1237.55 684.863 L1238.11 684.863 L1238.67 684.863 L1239.23 684.863 L1239.79 684.863 L1240.35 684.863 L1240.91 684.863 L1241.47 684.863 L1242.03 684.863 L1242.59 684.863 L1243.15 684.863 L1243.71 684.863 L1244.26 684.863 L1244.82 684.863 L1245.38 684.863 L1245.94 684.863 L1246.5 684.863 L1247.06 684.863 L1247.62 684.863 L1248.18 684.863 L1248.74 684.863 L1249.3 684.863 L1249.86 684.863 L1250.42 684.863 L1250.98 684.863 L1251.54 684.863 L1252.09 684.863 L1252.65 684.863 L1253.21 684.863 L1253.77 684.863 L1254.33 684.863 L1254.89 684.863 L1255.45 684.863 L1256.01 684.863 L1256.57 684.863 L1257.13 684.863 L1257.69 684.863 L1258.25 684.863 L1258.81 684.863 L1259.36 684.863 L1259.92 684.863 L1260.48 684.863 L1261.04 684.863 L1261.6 684.863 L1262.16 684.863 L1262.72 684.863 L1263.28 684.863 L1263.84 684.863 L1264.4 684.863 L1264.96 684.863 L1265.52 684.863 L1266.08 684.863 L1266.63 684.863 L1267.19 684.863 L1267.75 684.863 L1268.31 684.863 L1268.87 684.863 L1269.43 684.863 L1269.99 684.863 L1270.55 684.863 L1271.11 684.863 L1271.67 684.863 L1272.23 684.863 L1272.79 684.863 L1273.35 684.863 L1273.91 684.863 L1274.46 684.863 L1275.02 684.863 L1275.58 684.863 L1276.14 684.863 L1276.7 684.863 L1277.26 684.863 L1277.82 684.863 L1278.38 684.863 L1278.94 684.863 L1279.5 684.863 L1280.06 684.863 L1280.62 684.863 L1281.18 684.863 L1281.73 684.863 L1282.29 684.863 L1282.85 684.863 L1283.41 684.863 L1283.97 684.863 L1284.53 684.863 L1285.09 684.863 L1285.65 684.863 L1286.21 684.863 L1286.77 684.863 L1287.33 684.863 L1287.89 684.863 L1288.45 684.863 L1289 684.863 L1289.56 684.863 L1290.12 684.863 L1290.68 684.863 L1291.24 684.863 L1291.8 684.863 L1292.36 684.863 L1292.92 684.863 L1293.48 684.863 L1294.04 684.863 L1294.6 684.863 L1295.16 684.863 L1295.72 684.863 L1296.28 684.863 L1296.83 684.863 L1297.39 684.863 L1297.95 684.863 L1298.51 684.863 L1299.07 684.863 L1299.63 684.863 L1300.19 684.863 L1300.75 684.863 L1301.31 684.863 L1301.87 684.863 L1302.43 684.863 L1302.99 684.863 L1303.55 684.863 L1304.1 684.863 L1304.66 684.863 L1305.22 684.863 L1305.78 684.863 L1306.34 684.863 L1306.9 684.863 L1307.46 684.863 L1308.02 684.863 L1308.58 684.863 L1309.14 684.863 L1309.7 684.863 L1310.26 684.863 L1310.82 684.863 L1311.38 684.863 L1311.93 684.863 L1312.49 684.863 L1313.05 684.863 L1313.61 684.863 L1314.17 684.863 L1314.73 684.863 L1315.29 684.863 L1315.85 684.863 L1316.41 684.863 L1316.97 684.863 L1317.53 684.863 L1318.09 684.863 L1318.65 684.863 L1319.2 684.863 L1319.76 684.863 L1320.32 684.863 L1320.88 684.863 L1321.44 684.863 L1322 684.863 L1322.56 684.863 L1323.12 684.863 L1323.68 684.863 L1324.24 684.863 L1324.8 684.863 L1325.36 684.863 L1325.92 684.863 L1326.47 684.863 L1327.03 684.863 L1327.59 684.863 L1328.15 684.863 L1328.71 684.863 L1329.27 684.863 L1329.83 684.863 L1330.39 684.863 L1330.95 684.863 L1331.51 684.863 L1332.07 684.863 L1332.63 684.863 L1333.19 684.863 L1333.75 684.863 L1334.3 684.863 L1334.86 684.863 L1335.42 684.863 L1335.98 684.863 L1336.54 684.863 L1337.1 684.863 L1337.66 684.863 L1338.22 684.863 L1338.78 684.863 L1339.34 684.863 L1339.9 684.863 L1340.46 684.863 L1341.02 684.863 L1341.57 684.863 L1342.13 684.863 L1342.69 684.863 L1343.25 684.863 L1343.81 684.863 L1344.37 684.863 L1344.93 684.863 L1345.49 684.863 L1346.05 684.863 L1346.61 684.863 L1347.17 684.863 L1347.73 684.863 L1348.29 684.863 L1348.84 684.863 L1349.4 684.863 L1349.96 684.863 L1350.52 684.863 L1351.08 684.863 L1351.64 684.863 L1352.2 684.863 L1352.76 684.863 L1353.32 684.863 L1353.88 684.863 L1354.44 684.863 L1355 684.863 L1355.56 684.863 L1356.12 684.863 L1356.67 684.863 L1357.23 684.863 L1357.79 684.863 L1358.35 684.863 L1358.91 684.863 L1359.47 684.863 L1360.03 684.863 L1360.59 684.863 L1361.15 684.863 L1361.71 684.863 L1362.27 684.863 L1362.83 684.863 L1363.39 684.863 L1363.94 684.863 L1364.5 684.863 L1365.06 684.863 L1365.62 684.863 L1366.18 684.863 L1366.74 684.863 L1367.3 684.863 L1367.86 684.863 L1368.42 684.863 L1368.98 684.863 L1369.54 684.863 L1370.1 684.863 L1370.66 684.863 L1371.21 684.863 L1371.77 684.863 L1372.33 684.863 L1372.89 684.863 L1373.45 684.863 L1374.01 684.863 L1374.57 684.863 L1375.13 684.863 L1375.69 684.863 L1376.25 684.863 L1376.81 684.863 L1377.37 684.863 L1377.93 684.863 L1378.49 684.863 L1379.04 684.863 L1379.6 684.863 L1380.16 684.863 L1380.72 684.863 L1381.28 684.863 L1381.84 684.863 L1382.4 684.863 L1382.96 684.863 L1383.52 684.863 L1384.08 684.863 L1384.64 684.863 L1385.2 684.863 L1385.76 684.863 L1386.31 684.863 L1386.87 684.863 L1387.43 684.863 L1387.99 684.863 L1388.55 684.863 L1389.11 684.863 L1389.67 684.863 L1390.23 684.863 L1390.79 684.863 L1391.35 684.863 L1391.91 684.863 L1392.47 684.863 L1393.03 684.863 L1393.58 684.863 L1394.14 684.863 L1394.7 684.863 L1395.26 684.863 L1395.82 684.863 L1396.38 684.863 L1396.94 684.863 L1397.5 684.863 L1398.06 684.863 L1398.62 684.863 L1399.18 684.863 L1399.74 684.863 L1400.3 684.863 L1400.86 684.863 L1401.41 684.863 L1401.97 684.863 L1402.53 684.863 L1403.09 684.863 L1403.65 684.863 L1404.21 684.863 L1404.77 684.863 L1405.33 684.863 L1405.89 684.863 L1406.45 684.863 L1407.01 684.863 L1407.57 684.863 L1408.13 684.863 L1408.68 684.863 L1409.24 684.863 L1409.8 684.863 L1410.36 684.863 L1410.92 684.863 L1411.48 684.863 L1412.04 684.863 L1412.6 684.863 L1413.16 684.863 L1413.72 684.863 L1414.28 684.863 L1414.84 684.863 L1415.4 684.863 L1415.95 684.863 L1416.51 684.863 L1417.07 684.863 L1417.63 684.863 L1418.19 684.863 L1418.75 684.863 L1419.31 684.863 L1419.87 684.863 L1420.43 684.863 L1420.99 684.863 L1421.55 684.863 L1422.11 684.863 L1422.67 684.863 L1423.23 684.863 L1423.78 684.863 L1424.34 684.863 L1424.9 684.863 L1425.46 684.863 L1426.02 684.863 L1426.58 684.863 L1427.14 684.863 L1427.7 684.863 L1428.26 684.863 L1428.82 684.863 L1429.38 684.863 L1429.94 684.863 L1430.5 684.863 L1431.05 684.863 L1431.61 684.863 L1432.17 684.863 L1432.73 684.863 L1433.29 684.863 L1433.85 684.863 L1434.41 684.863 L1434.97 684.863 L1435.53 684.863 L1436.09 684.863 L1436.65 684.863 L1437.21 684.863 L1437.77 684.863 L1438.33 684.863 L1438.88 684.863 L1439.44 684.863 L1440 684.863 L1440.56 684.863 L1441.12 684.863 L1441.68 684.863 L1442.24 684.863 L1442.8 684.863 L1443.36 684.863 L1443.92 684.863 L1444.48 684.863 L1445.04 684.863 L1445.6 684.863 L1446.15 684.863 L1446.71 684.863 L1447.27 684.863 L1447.83 684.863 L1448.39 684.863 L1448.95 684.863 L1449.51 684.863 L1450.07 684.863 L1450.63 684.863 L1451.19 684.863 L1451.75 684.863 L1452.31 684.863 L1452.87 684.863 L1453.42 684.863 L1453.98 684.863 L1454.54 684.863 L1455.1 684.863 L1455.66 684.863 L1456.22 684.863 L1456.78 684.863 L1457.34 684.863 L1457.9 684.863 L1458.46 684.863 L1459.02 684.863 L1459.58 684.863 L1460.14 684.863 L1460.7 684.863 L1461.25 684.863 L1461.81 684.863 L1462.37 684.863 L1462.93 684.863 L1463.49 684.863 L1464.05 684.863 L1464.61 684.863 L1465.17 684.863 L1465.73 684.863 L1466.29 684.863 L1466.85 684.863 L1467.41 684.863 L1467.97 684.863 L1468.52 684.863 L1469.08 684.863 L1469.64 684.863 L1470.2 684.863 L1470.76 684.863 L1471.32 684.863 L1471.88 684.863 L1472.44 684.863 L1473 684.863 L1473.56 684.863 L1474.12 684.863 L1474.68 684.863 L1475.24 684.863 L1475.79 684.863 L1476.35 684.863 L1476.91 684.863 L1477.47 684.863 L1478.03 684.863 L1478.59 684.863 L1479.15 684.863 L1479.71 684.863 L1480.27 684.863 L1480.83 684.863 L1481.39 684.863 L1481.95 684.863 L1482.51 684.863 L1483.07 684.863 L1483.62 684.863 L1484.18 684.863 L1484.74 684.863 L1485.3 684.863 L1485.86 684.863 L1486.42 684.863 L1486.98 684.863 L1487.54 684.863 L1488.1 684.863 L1488.66 684.863 L1489.22 684.863 L1489.78 684.863 L1490.34 684.863 L1490.89 684.863 L1491.45 684.863 L1492.01 684.863 L1492.57 684.863 L1493.13 684.863 L1493.69 684.863 L1494.25 684.863 L1494.81 684.863 L1495.37 684.863 L1495.93 684.863 L1496.49 684.863 L1497.05 684.863 L1497.61 684.863 L1498.16 684.863 L1498.72 684.863 L1499.28 684.863 L1499.84 684.863 L1500.4 684.863 L1500.96 684.863 L1501.52 684.863 L1502.08 684.863 L1502.64 684.863 L1503.2 684.863 L1503.76 684.863 L1504.32 684.863 L1504.88 684.863 L1505.44 684.863 L1505.99 684.863 L1506.55 684.863 L1507.11 684.863 L1507.67 684.863 L1508.23 684.863 L1508.79 684.863 L1509.35 684.863 L1509.91 684.863 L1510.47 684.863 L1511.03 684.863 L1511.59 684.863 L1512.15 684.863 L1512.71 684.863 L1513.26 684.863 L1513.82 684.863 L1514.38 684.863 L1514.94 684.863 L1515.5 684.863 L1516.06 684.863 L1516.62 684.863 L1517.18 684.863 L1517.74 684.863 L1518.3 684.863 L1518.86 684.863 L1519.42 684.863 L1519.98 684.863 L1520.53 684.863 L1521.09 684.863 L1521.65 684.863 L1522.21 684.863 L1522.77 684.863 L1523.33 684.863 L1523.89 684.863 L1524.45 684.863 L1525.01 684.863 L1525.57 684.863 L1526.13 684.863 L1526.69 684.863 L1527.25 684.863 L1527.81 684.863 L1528.36 684.863 L1528.92 684.863 L1529.48 684.863 L1530.04 684.863 L1530.6 684.863 L1531.16 684.863 L1531.72 684.863 L1532.28 684.863 L1532.84 684.863 L1533.4 684.863 L1533.96 684.863 L1534.52 684.863 L1535.08 684.863 L1535.63 684.863 L1536.19 684.863 L1536.75 684.863 L1537.31 684.863 L1537.87 684.863 L1538.43 684.863 L1538.99 684.863 L1539.55 684.863 L1540.11 684.863 L1540.67 684.863 L1541.23 684.863 L1541.79 684.863 L1542.35 684.863 L1542.9 684.863 L1543.46 684.863 L1544.02 684.863 L1544.58 684.863 L1545.14 684.863 L1545.7 684.863 L1546.26 684.863 L1546.82 684.863 L1547.38 684.863 L1547.94 684.863 L1548.5 684.863 L1549.06 684.863 L1549.62 684.863 L1550.18 684.863 L1550.73 684.863 L1551.29 684.863 L1551.85 684.863 L1552.41 684.863 L1552.97 684.863 L1553.53 684.863 L1554.09 684.863 L1554.65 684.863 L1555.21 684.863 L1555.77 684.863 L1556.33 684.863 L1556.89 684.863 L1557.45 684.863 L1558 684.863 L1558.56 684.863 L1559.12 684.863 L1559.68 684.863 L1560.24 684.863 L1560.8 684.863 L1561.36 684.863 L1561.92 684.863 L1562.48 684.863 L1563.04 684.863 L1563.6 684.863 L1564.16 684.863 L1564.72 684.863 L1565.28 684.863 L1565.83 684.863 L1566.39 684.863 L1566.95 684.863 L1567.51 684.863 L1568.07 684.863 L1568.63 684.863 L1569.19 684.863 L1569.75 684.863 L1570.31 684.863 L1570.87 684.863 L1571.43 684.863 L1571.99 684.863 L1572.55 684.863 L1573.1 684.863 L1573.66 684.863 L1574.22 684.863 L1574.78 684.863 L1575.34 684.863 L1575.9 684.863 L1576.46 684.863 L1577.02 684.863 L1577.58 684.863 L1578.14 684.863 L1578.7 684.863 L1579.26 684.863 L1579.82 684.863 L1580.37 684.863 L1580.93 684.863 L1581.49 684.863 L1582.05 684.863 L1582.61 684.863 L1583.17 684.863 L1583.73 684.863 L1584.29 684.863 L1584.85 684.863 L1585.41 684.863 L1585.97 684.863 L1586.53 684.863 L1587.09 684.863 L1587.65 684.863 L1588.2 684.863 L1588.76 684.863 L1589.32 684.863 L1589.88 684.863 L1590.44 684.863 L1591 684.863 L1591.56 684.863 L1592.12 684.863 L1592.68 684.863 L1593.24 684.863 L1593.8 684.863 L1594.36 684.863 L1594.92 684.863 L1595.47 684.863 L1596.03 684.863 L1596.59 684.863 L1597.15 684.863 L1597.71 684.863 L1598.27 684.863 L1598.83 684.863 L1599.39 684.863 L1599.95 684.863 L1600.51 684.863 L1601.07 684.863 L1601.63 684.863 L1602.19 684.863 L1602.74 684.863 L1603.3 684.863 L1603.86 684.863 L1604.42 684.863 L1604.98 684.863 L1605.54 684.863 L1606.1 684.863 L1606.66 684.863 L1607.22 684.863 L1607.78 684.863 L1608.34 684.863 L1608.9 684.863 L1609.46 684.863 L1610.02 684.863 L1610.57 684.863 L1611.13 684.863 L1611.69 684.863 L1612.25 684.863 L1612.81 684.863 L1613.37 684.863 L1613.93 684.863 L1614.49 684.863 L1615.05 684.863 L1615.61 684.863 L1616.17 684.863 L1616.73 684.863 L1617.29 684.863 L1617.84 684.863 L1618.4 684.863 L1618.96 684.863 L1619.52 684.863 L1620.08 684.863 L1620.64 684.863 L1621.2 684.863 L1621.76 684.863 L1622.32 684.863 L1622.88 684.863 L1623.44 684.863 L1624 684.863 L1624.56 684.863 L1625.11 684.863 L1625.67 684.863 L1626.23 684.863 L1626.79 684.863 L1627.35 684.863 L1627.91 684.863 L1628.47 684.863 L1629.03 684.863 L1629.59 684.863 L1630.15 684.863 L1630.71 684.863 L1631.27 684.863 L1631.83 684.863 L1632.39 684.863 L1632.94 684.863 L1633.5 684.863 L1634.06 684.863 L1634.62 684.863 L1635.18 684.863 L1635.74 684.863 L1636.3 684.863 L1636.86 684.863 L1637.42 684.863 L1637.98 684.863 L1638.54 684.863 L1639.1 684.863 L1639.66 684.863 L1640.21 684.863 L1640.77 684.863 L1641.33 684.863 L1641.89 684.863 L1642.45 684.863 L1643.01 684.863 L1643.57 684.863 L1644.13 684.863 L1644.69 684.863 L1645.25 684.863 L1645.81 684.863 L1646.37 684.863 L1646.93 684.863 L1647.48 684.863 L1648.04 684.863 L1648.6 684.863 L1649.16 684.863 L1649.72 684.863 L1650.28 684.863 L1650.84 684.863 L1651.4 684.863 L1651.96 684.863 L1652.52 684.863 L1653.08 684.863 L1653.64 684.863 L1654.2 684.863 L1654.76 684.863 L1655.31 684.863 L1655.87 684.863 L1656.43 684.863 L1656.99 684.863 L1657.55 684.863 L1658.11 684.863 L1658.67 684.863 L1659.23 684.863 L1659.79 684.863 L1660.35 684.863 L1660.91 684.863 L1661.47 684.863 L1662.03 684.863 L1662.58 684.863 L1663.14 684.863 L1663.7 684.863 L1664.26 684.863 L1664.82 684.863 L1665.38 684.863 L1665.94 684.863 L1666.5 684.863 L1667.06 684.863 L1667.62 684.863 L1668.18 684.863 L1668.74 684.863 L1669.3 684.863 L1669.85 684.863 L1670.41 684.863 L1670.97 684.863 L1671.53 684.863 L1672.09 684.863 L1672.65 684.863 L1673.21 684.863 L1673.77 684.863 L1674.33 684.863 L1674.89 684.863 L1675.45 684.863 L1676.01 684.863 L1676.57 684.863 L1677.13 684.863 L1677.68 684.863 L1678.24 684.863 L1678.8 684.863 L1679.36 684.863 L1679.92 684.863 L1680.48 684.863 L1681.04 684.863 L1681.6 684.863 L1682.16 684.863 L1682.72 684.863 L1683.28 684.863 L1683.84 684.863 L1684.4 684.863 L1684.95 684.863 L1685.51 684.863 L1686.07 684.863 L1686.63 684.863 L1687.19 684.863 L1687.75 684.863 L1688.31 684.863 L1688.87 684.863 L1689.43 684.863 L1689.99 684.863 L1690.55 684.863 L1691.11 684.863 L1691.67 684.863 L1692.23 684.863 L1692.78 684.863 L1693.34 684.863 L1693.9 684.863 L1694.46 684.863 L1695.02 684.863 L1695.58 684.863 L1696.14 684.863 L1696.7 684.863 L1697.26 684.863 L1697.82 684.863 L1698.38 684.863 L1698.94 684.863 L1699.5 684.863 L1700.05 684.863 L1700.61 684.863 L1701.17 684.863 L1701.73 684.863 L1702.29 684.863 L1702.85 684.863 L1703.41 684.863 L1703.97 684.863 L1704.53 684.863 L1705.09 684.863 L1705.65 684.863 L1706.21 684.863 L1706.77 684.863 L1707.32 684.863 L1707.88 684.863 L1708.44 684.863 L1709 684.863 L1709.56 684.863 L1710.12 684.863 L1710.68 684.863 L1711.24 684.863 L1711.8 684.863 L1712.36 684.863 L1712.92 684.863 L1713.48 684.863 L1714.04 684.863 L1714.6 684.863 L1715.15 684.863 L1715.71 684.863 L1716.27 684.863 L1716.83 684.863 L1717.39 684.863 L1717.95 684.863 L1718.51 684.863 L1719.07 684.863 L1719.63 684.863 L1720.19 684.863 L1720.75 684.863 L1721.31 684.863 L1721.87 684.863 L1722.42 684.863 L1722.98 684.863 L1723.54 684.863 L1724.1 684.863 L1724.66 684.863 L1725.22 684.863 L1725.78 684.863 L1726.34 684.863 L1726.9 684.863 L1727.46 684.863 L1728.02 684.863 L1728.58 684.863 L1729.14 684.863 L1729.69 684.863 L1730.25 684.863 L1730.81 684.863 L1731.37 684.863 L1731.93 684.863 L1732.49 684.863 L1733.05 684.863 L1733.61 684.863 L1734.17 684.863 L1734.73 684.863 L1735.29 684.863 L1735.85 684.863 L1736.41 684.863 L1736.97 684.863 L1737.52 684.863 L1738.08 684.863 L1738.64 684.863 L1739.2 684.863 L1739.76 684.863 L1740.32 684.863 L1740.88 684.863 L1741.44 684.863 L1742 684.863 L1742.56 684.863 L1743.12 684.863 L1743.68 684.863 L1744.24 684.863 L1744.79 684.863 L1745.35 684.863 L1745.91 684.863 L1746.47 684.863 L1747.03 684.863 L1747.59 684.863 L1748.15 684.863 L1748.71 684.863 L1749.27 684.863 L1749.83 684.863 L1750.39 684.863 L1750.95 684.863 L1751.51 684.863 L1752.06 684.863 L1752.62 684.863 L1753.18 684.863 L1753.74 684.863 L1754.3 684.863 L1754.86 684.863 L1755.42 684.863 L1755.98 684.863 L1756.54 684.863 L1757.1 684.863 L1757.66 684.863 L1758.22 684.863 L1758.78 684.863 L1759.34 684.863 L1759.89 684.863 L1760.45 684.863 L1761.01 684.863 L1761.57 684.863 L1762.13 684.863 L1762.69 684.863 L1763.25 684.863 L1763.81 684.863 L1764.37 684.863 L1764.93 684.863 L1765.49 684.863 L1766.05 684.863 L1766.61 684.863 L1767.16 684.863 L1767.72 684.863 L1768.28 684.863 L1768.84 684.863 L1769.4 684.863 L1769.96 684.863 L1770.52 684.863 L1771.08 684.863 L1771.64 684.863 L1772.2 684.863 L1772.76 684.863 L1773.32 684.863 L1773.88 684.863 L1774.43 684.863 L1774.99 684.863 L1775.55 684.863 L1776.11 684.863 L1776.67 684.863 L1777.23 684.863 L1777.79 684.863 L1778.35 684.863 L1778.91 684.863 L1779.47 684.863 L1780.03 684.863 L1780.59 684.863 L1781.15 684.863 L1781.71 684.863 L1782.26 684.863 L1782.82 684.863 L1783.38 684.863 L1783.94 684.863 L1784.5 684.863 L1785.06 684.863 L1785.62 684.863 L1786.18 684.863 L1786.74 684.863 L1787.3 684.863 L1787.86 684.863 L1788.42 684.863 L1788.98 684.863 L1789.53 684.863 L1790.09 684.863 L1790.65 684.863 L1791.21 684.863 L1791.77 684.863 L1792.33 684.863 L1792.89 684.863 L1793.45 684.863 L1794.01 684.863 L1794.57 684.863 L1795.13 684.863 L1795.69 684.863 L1796.25 684.863 L1796.8 684.863 L1797.36 684.863 L1797.92 684.863 L1798.48 684.863 L1799.04 684.863 L1799.6 684.863 L1800.16 684.863 L1800.72 684.863 L1801.28 684.863 L1801.84 684.863 L1802.4 684.863 L1802.96 684.863 L1803.52 684.863 L1804.08 684.863 L1804.63 684.863 L1805.19 684.863 L1805.75 684.863 L1806.31 684.863 L1806.87 684.863 L1807.43 684.863 L1807.99 684.863 L1808.55 684.863 L1809.11 684.863 L1809.67 684.863 L1810.23 684.863 L1810.79 684.863 L1811.35 684.863 L1811.9 684.863 L1812.46 684.863 L1813.02 684.863 L1813.58 684.863 L1814.14 684.863 L1814.7 684.863 L1815.26 684.863 L1815.82 684.863 L1816.38 684.863 L1816.94 684.863 L1817.5 684.863 L1818.06 684.863 L1818.62 684.863 L1819.18 684.863 L1819.73 684.863 L1820.29 684.863 L1820.85 684.863 L1821.41 684.863 L1821.97 684.863 L1822.53 684.863 L1823.09 684.863 L1823.65 684.863 L1824.21 684.863 L1824.77 684.863 L1825.33 684.863 L1825.89 684.863 L1826.45 684.863 L1827 684.863 L1827.56 684.863 L1828.12 684.863 L1828.68 684.863 L1829.24 684.863 L1829.8 684.863 L1830.36 684.863 L1830.92 684.863 L1831.48 684.863 L1832.04 684.863 L1832.6 684.863 L1833.16 684.863 L1833.72 684.863 L1834.27 684.863 L1834.83 684.863 L1835.39 684.863 L1835.95 684.863 L1836.51 684.863 L1837.07 684.863 L1837.63 684.863 L1838.19 684.863 L1838.19 682.416 L1837.63 682.416 L1837.07 682.416 L1836.51 682.416 L1835.95 682.416 L1835.39 682.416 L1834.83 682.416 L1834.27 682.416 L1833.72 682.416 L1833.16 682.416 L1832.6 682.416 L1832.04 682.416 L1831.48 682.416 L1830.92 682.416 L1830.36 682.416 L1829.8 682.416 L1829.24 682.416 L1828.68 682.416 L1828.12 682.416 L1827.56 682.416 L1827 682.416 L1826.45 682.416 L1825.89 682.416 L1825.33 682.416 L1824.77 682.416 L1824.21 682.416 L1823.65 682.416 L1823.09 682.416 L1822.53 682.416 L1821.97 682.416 L1821.41 682.416 L1820.85 682.416 L1820.29 682.416 L1819.73 682.416 L1819.18 682.416 L1818.62 682.416 L1818.06 682.416 L1817.5 682.416 L1816.94 682.416 L1816.38 682.416 L1815.82 682.416 L1815.26 682.416 L1814.7 682.416 L1814.14 682.416 L1813.58 682.416 L1813.02 682.416 L1812.46 682.416 L1811.9 682.416 L1811.35 682.416 L1810.79 682.416 L1810.23 682.416 L1809.67 682.416 L1809.11 682.416 L1808.55 682.416 L1807.99 682.416 L1807.43 682.416 L1806.87 682.416 L1806.31 682.416 L1805.75 682.416 L1805.19 682.416 L1804.63 682.416 L1804.08 682.416 L1803.52 682.416 L1802.96 682.416 L1802.4 682.416 L1801.84 682.416 L1801.28 682.416 L1800.72 682.416 L1800.16 682.416 L1799.6 682.416 L1799.04 682.416 L1798.48 682.416 L1797.92 682.416 L1797.36 682.416 L1796.8 682.416 L1796.25 682.416 L1795.69 682.416 L1795.13 682.416 L1794.57 682.416 L1794.01 682.416 L1793.45 682.416 L1792.89 682.416 L1792.33 682.416 L1791.77 682.416 L1791.21 682.416 L1790.65 682.416 L1790.09 682.416 L1789.53 682.416 L1788.98 682.416 L1788.42 682.416 L1787.86 682.416 L1787.3 682.416 L1786.74 682.416 L1786.18 682.416 L1785.62 682.416 L1785.06 682.416 L1784.5 682.416 L1783.94 682.416 L1783.38 682.416 L1782.82 682.416 L1782.26 682.416 L1781.71 682.416 L1781.15 682.416 L1780.59 682.416 L1780.03 682.416 L1779.47 682.416 L1778.91 682.416 L1778.35 682.416 L1777.79 682.416 L1777.23 682.416 L1776.67 682.416 L1776.11 682.416 L1775.55 682.416 L1774.99 682.416 L1774.43 682.416 L1773.88 682.416 L1773.32 682.416 L1772.76 682.416 L1772.2 682.416 L1771.64 682.416 L1771.08 682.416 L1770.52 682.416 L1769.96 682.416 L1769.4 682.416 L1768.84 682.416 L1768.28 682.416 L1767.72 682.416 L1767.16 682.416 L1766.61 682.416 L1766.05 682.416 L1765.49 682.416 L1764.93 682.416 L1764.37 682.416 L1763.81 682.416 L1763.25 682.416 L1762.69 682.416 L1762.13 682.416 L1761.57 682.416 L1761.01 682.416 L1760.45 682.416 L1759.89 682.416 L1759.34 682.416 L1758.78 682.416 L1758.22 682.416 L1757.66 682.416 L1757.1 682.416 L1756.54 682.416 L1755.98 682.416 L1755.42 682.416 L1754.86 682.416 L1754.3 682.416 L1753.74 682.416 L1753.18 682.416 L1752.62 682.416 L1752.06 682.416 L1751.51 682.416 L1750.95 682.416 L1750.39 682.416 L1749.83 682.416 L1749.27 682.416 L1748.71 682.416 L1748.15 682.416 L1747.59 682.416 L1747.03 682.416 L1746.47 682.416 L1745.91 682.416 L1745.35 682.416 L1744.79 682.416 L1744.24 682.416 L1743.68 682.416 L1743.12 682.416 L1742.56 682.416 L1742 682.416 L1741.44 682.416 L1740.88 682.416 L1740.32 682.416 L1739.76 682.416 L1739.2 682.416 L1738.64 682.416 L1738.08 682.416 L1737.52 682.416 L1736.97 682.416 L1736.41 682.416 L1735.85 682.416 L1735.29 682.416 L1734.73 682.416 L1734.17 682.416 L1733.61 682.416 L1733.05 682.416 L1732.49 682.416 L1731.93 682.416 L1731.37 682.416 L1730.81 682.416 L1730.25 682.416 L1729.69 682.416 L1729.14 682.416 L1728.58 682.416 L1728.02 682.416 L1727.46 682.416 L1726.9 682.416 L1726.34 682.416 L1725.78 682.416 L1725.22 682.416 L1724.66 682.416 L1724.1 682.416 L1723.54 682.416 L1722.98 682.416 L1722.42 682.416 L1721.87 682.416 L1721.31 682.416 L1720.75 682.416 L1720.19 682.416 L1719.63 682.416 L1719.07 682.416 L1718.51 682.416 L1717.95 682.416 L1717.39 682.416 L1716.83 682.416 L1716.27 682.416 L1715.71 682.416 L1715.15 682.416 L1714.6 682.416 L1714.04 682.416 L1713.48 682.416 L1712.92 682.416 L1712.36 682.416 L1711.8 682.416 L1711.24 682.416 L1710.68 682.416 L1710.12 682.416 L1709.56 682.416 L1709 682.416 L1708.44 682.416 L1707.88 682.416 L1707.32 682.416 L1706.77 682.416 L1706.21 682.416 L1705.65 682.416 L1705.09 682.416 L1704.53 682.416 L1703.97 682.416 L1703.41 682.416 L1702.85 682.416 L1702.29 682.416 L1701.73 682.416 L1701.17 682.416 L1700.61 682.416 L1700.05 682.416 L1699.5 682.416 L1698.94 682.416 L1698.38 682.416 L1697.82 682.416 L1697.26 682.416 L1696.7 682.416 L1696.14 682.416 L1695.58 682.416 L1695.02 682.416 L1694.46 682.416 L1693.9 682.416 L1693.34 682.416 L1692.78 682.416 L1692.23 682.416 L1691.67 682.416 L1691.11 682.416 L1690.55 682.416 L1689.99 682.416 L1689.43 682.416 L1688.87 682.416 L1688.31 682.416 L1687.75 682.416 L1687.19 682.416 L1686.63 682.416 L1686.07 682.416 L1685.51 682.416 L1684.95 682.416 L1684.4 682.416 L1683.84 682.416 L1683.28 682.416 L1682.72 682.416 L1682.16 682.416 L1681.6 682.416 L1681.04 682.416 L1680.48 682.416 L1679.92 682.416 L1679.36 682.416 L1678.8 682.416 L1678.24 682.416 L1677.68 682.416 L1677.13 682.416 L1676.57 682.416 L1676.01 682.416 L1675.45 682.416 L1674.89 682.416 L1674.33 682.416 L1673.77 682.416 L1673.21 682.416 L1672.65 682.416 L1672.09 682.416 L1671.53 682.416 L1670.97 682.416 L1670.41 682.416 L1669.85 682.416 L1669.3 682.416 L1668.74 682.416 L1668.18 682.416 L1667.62 682.416 L1667.06 682.416 L1666.5 682.416 L1665.94 682.416 L1665.38 682.416 L1664.82 682.416 L1664.26 682.416 L1663.7 682.416 L1663.14 682.416 L1662.58 682.416 L1662.03 682.416 L1661.47 682.416 L1660.91 682.416 L1660.35 682.416 L1659.79 682.416 L1659.23 682.416 L1658.67 682.416 L1658.11 682.416 L1657.55 682.416 L1656.99 682.416 L1656.43 682.416 L1655.87 682.416 L1655.31 682.416 L1654.76 682.416 L1654.2 682.416 L1653.64 682.416 L1653.08 682.416 L1652.52 682.416 L1651.96 682.416 L1651.4 682.416 L1650.84 682.416 L1650.28 682.416 L1649.72 682.416 L1649.16 682.416 L1648.6 682.416 L1648.04 682.416 L1647.48 682.416 L1646.93 682.416 L1646.37 682.416 L1645.81 682.416 L1645.25 682.416 L1644.69 682.416 L1644.13 682.416 L1643.57 682.416 L1643.01 682.416 L1642.45 682.416 L1641.89 682.416 L1641.33 682.416 L1640.77 682.416 L1640.21 682.416 L1639.66 682.416 L1639.1 682.416 L1638.54 682.416 L1637.98 682.416 L1637.42 682.416 L1636.86 682.416 L1636.3 682.416 L1635.74 682.416 L1635.18 682.416 L1634.62 682.416 L1634.06 682.416 L1633.5 682.416 L1632.94 682.416 L1632.39 682.416 L1631.83 682.416 L1631.27 682.416 L1630.71 682.416 L1630.15 682.416 L1629.59 682.416 L1629.03 682.416 L1628.47 682.416 L1627.91 682.416 L1627.35 682.416 L1626.79 682.416 L1626.23 682.416 L1625.67 682.416 L1625.11 682.416 L1624.56 682.416 L1624 682.416 L1623.44 682.416 L1622.88 682.416 L1622.32 682.416 L1621.76 682.416 L1621.2 682.416 L1620.64 682.416 L1620.08 682.416 L1619.52 682.416 L1618.96 682.416 L1618.4 682.416 L1617.84 682.416 L1617.29 682.416 L1616.73 682.416 L1616.17 682.416 L1615.61 682.416 L1615.05 682.416 L1614.49 682.416 L1613.93 682.416 L1613.37 682.416 L1612.81 682.416 L1612.25 682.416 L1611.69 682.416 L1611.13 682.416 L1610.57 682.416 L1610.02 682.416 L1609.46 682.416 L1608.9 682.416 L1608.34 682.416 L1607.78 682.416 L1607.22 682.416 L1606.66 682.416 L1606.1 682.416 L1605.54 682.416 L1604.98 682.416 L1604.42 682.416 L1603.86 682.416 L1603.3 682.416 L1602.74 682.416 L1602.19 682.416 L1601.63 682.416 L1601.07 682.416 L1600.51 682.416 L1599.95 682.416 L1599.39 682.416 L1598.83 682.416 L1598.27 682.416 L1597.71 682.416 L1597.15 682.416 L1596.59 682.416 L1596.03 682.416 L1595.47 682.416 L1594.92 682.416 L1594.36 682.416 L1593.8 682.416 L1593.24 682.416 L1592.68 682.416 L1592.12 682.416 L1591.56 682.416 L1591 682.416 L1590.44 682.416 L1589.88 682.416 L1589.32 682.416 L1588.76 682.416 L1588.2 682.416 L1587.65 682.416 L1587.09 682.416 L1586.53 682.416 L1585.97 682.416 L1585.41 682.416 L1584.85 682.416 L1584.29 682.416 L1583.73 682.416 L1583.17 682.416 L1582.61 682.416 L1582.05 682.416 L1581.49 682.416 L1580.93 682.416 L1580.37 682.416 L1579.82 682.416 L1579.26 682.416 L1578.7 682.416 L1578.14 682.416 L1577.58 682.416 L1577.02 682.416 L1576.46 682.416 L1575.9 682.416 L1575.34 682.416 L1574.78 682.416 L1574.22 682.416 L1573.66 682.416 L1573.1 682.416 L1572.55 682.416 L1571.99 682.416 L1571.43 682.416 L1570.87 682.416 L1570.31 682.416 L1569.75 682.416 L1569.19 682.416 L1568.63 682.416 L1568.07 682.416 L1567.51 682.416 L1566.95 682.416 L1566.39 682.416 L1565.83 682.416 L1565.28 682.416 L1564.72 682.416 L1564.16 682.416 L1563.6 682.416 L1563.04 682.416 L1562.48 682.416 L1561.92 682.416 L1561.36 682.416 L1560.8 682.416 L1560.24 682.416 L1559.68 682.416 L1559.12 682.416 L1558.56 682.416 L1558 682.416 L1557.45 682.416 L1556.89 682.416 L1556.33 682.416 L1555.77 682.416 L1555.21 682.416 L1554.65 682.416 L1554.09 682.416 L1553.53 682.416 L1552.97 682.416 L1552.41 682.416 L1551.85 682.416 L1551.29 682.416 L1550.73 682.416 L1550.18 682.416 L1549.62 682.416 L1549.06 682.416 L1548.5 682.416 L1547.94 682.416 L1547.38 682.416 L1546.82 682.416 L1546.26 682.416 L1545.7 682.416 L1545.14 682.416 L1544.58 682.416 L1544.02 682.416 L1543.46 682.416 L1542.9 682.416 L1542.35 682.416 L1541.79 682.416 L1541.23 682.416 L1540.67 682.416 L1540.11 682.416 L1539.55 682.416 L1538.99 682.416 L1538.43 682.416 L1537.87 682.416 L1537.31 682.416 L1536.75 682.416 L1536.19 682.416 L1535.63 682.416 L1535.08 682.416 L1534.52 682.416 L1533.96 682.416 L1533.4 682.416 L1532.84 682.416 L1532.28 682.416 L1531.72 682.416 L1531.16 682.416 L1530.6 682.416 L1530.04 682.416 L1529.48 682.416 L1528.92 682.416 L1528.36 682.416 L1527.81 682.416 L1527.25 682.416 L1526.69 682.416 L1526.13 682.416 L1525.57 682.416 L1525.01 682.416 L1524.45 682.416 L1523.89 682.416 L1523.33 682.416 L1522.77 682.416 L1522.21 682.416 L1521.65 682.416 L1521.09 682.416 L1520.53 682.416 L1519.98 682.416 L1519.42 682.416 L1518.86 682.416 L1518.3 682.416 L1517.74 682.416 L1517.18 682.416 L1516.62 682.416 L1516.06 682.416 L1515.5 682.416 L1514.94 682.416 L1514.38 682.416 L1513.82 682.416 L1513.26 682.416 L1512.71 682.416 L1512.15 682.416 L1511.59 682.416 L1511.03 682.416 L1510.47 682.416 L1509.91 682.416 L1509.35 682.416 L1508.79 682.416 L1508.23 682.416 L1507.67 682.416 L1507.11 682.416 L1506.55 682.416 L1505.99 682.416 L1505.44 682.416 L1504.88 682.416 L1504.32 682.416 L1503.76 682.416 L1503.2 682.416 L1502.64 682.416 L1502.08 682.416 L1501.52 682.416 L1500.96 682.416 L1500.4 682.416 L1499.84 682.416 L1499.28 682.416 L1498.72 682.416 L1498.16 682.416 L1497.61 682.416 L1497.05 682.416 L1496.49 682.416 L1495.93 682.416 L1495.37 682.416 L1494.81 682.416 L1494.25 682.416 L1493.69 682.416 L1493.13 682.416 L1492.57 682.416 L1492.01 682.416 L1491.45 682.416 L1490.89 682.416 L1490.34 682.416 L1489.78 682.416 L1489.22 682.416 L1488.66 682.416 L1488.1 682.416 L1487.54 682.416 L1486.98 682.416 L1486.42 682.416 L1485.86 682.416 L1485.3 682.416 L1484.74 682.416 L1484.18 682.416 L1483.62 682.416 L1483.07 682.416 L1482.51 682.416 L1481.95 682.416 L1481.39 682.416 L1480.83 682.416 L1480.27 682.416 L1479.71 682.416 L1479.15 682.416 L1478.59 682.416 L1478.03 682.416 L1477.47 682.416 L1476.91 682.416 L1476.35 682.416 L1475.79 682.416 L1475.24 682.416 L1474.68 682.416 L1474.12 682.416 L1473.56 682.416 L1473 682.416 L1472.44 682.416 L1471.88 682.416 L1471.32 682.416 L1470.76 682.416 L1470.2 682.416 L1469.64 682.416 L1469.08 682.416 L1468.52 682.416 L1467.97 682.416 L1467.41 682.416 L1466.85 682.416 L1466.29 682.416 L1465.73 682.416 L1465.17 682.416 L1464.61 682.416 L1464.05 682.416 L1463.49 682.416 L1462.93 682.416 L1462.37 682.416 L1461.81 682.416 L1461.25 682.416 L1460.7 682.416 L1460.14 682.416 L1459.58 682.416 L1459.02 682.416 L1458.46 682.416 L1457.9 682.416 L1457.34 682.416 L1456.78 682.416 L1456.22 682.416 L1455.66 682.416 L1455.1 682.416 L1454.54 682.416 L1453.98 682.416 L1453.42 682.416 L1452.87 682.416 L1452.31 682.416 L1451.75 682.416 L1451.19 682.416 L1450.63 682.416 L1450.07 682.416 L1449.51 682.416 L1448.95 682.416 L1448.39 682.416 L1447.83 682.416 L1447.27 682.416 L1446.71 682.416 L1446.15 682.416 L1445.6 682.416 L1445.04 682.416 L1444.48 682.416 L1443.92 682.416 L1443.36 682.416 L1442.8 682.416 L1442.24 682.416 L1441.68 682.416 L1441.12 682.416 L1440.56 682.416 L1440 682.416 L1439.44 682.416 L1438.88 682.416 L1438.33 682.416 L1437.77 682.416 L1437.21 682.416 L1436.65 682.416 L1436.09 682.416 L1435.53 682.416 L1434.97 682.416 L1434.41 682.416 L1433.85 682.416 L1433.29 682.416 L1432.73 682.416 L1432.17 682.416 L1431.61 682.416 L1431.05 682.416 L1430.5 682.416 L1429.94 682.416 L1429.38 682.416 L1428.82 682.416 L1428.26 682.416 L1427.7 682.416 L1427.14 682.416 L1426.58 682.416 L1426.02 682.416 L1425.46 682.416 L1424.9 682.416 L1424.34 682.416 L1423.78 682.416 L1423.23 682.416 L1422.67 682.416 L1422.11 682.416 L1421.55 682.416 L1420.99 682.416 L1420.43 682.416 L1419.87 682.416 L1419.31 682.416 L1418.75 682.416 L1418.19 682.416 L1417.63 682.416 L1417.07 682.416 L1416.51 682.416 L1415.95 682.416 L1415.4 682.416 L1414.84 682.416 L1414.28 682.416 L1413.72 682.416 L1413.16 682.416 L1412.6 682.416 L1412.04 682.416 L1411.48 682.416 L1410.92 682.416 L1410.36 682.416 L1409.8 682.416 L1409.24 682.416 L1408.68 682.416 L1408.13 682.416 L1407.57 682.416 L1407.01 682.416 L1406.45 682.416 L1405.89 682.416 L1405.33 682.416 L1404.77 682.416 L1404.21 682.416 L1403.65 682.416 L1403.09 682.416 L1402.53 682.416 L1401.97 682.416 L1401.41 682.416 L1400.86 682.416 L1400.3 682.416 L1399.74 682.416 L1399.18 682.416 L1398.62 682.416 L1398.06 682.416 L1397.5 682.416 L1396.94 682.416 L1396.38 682.416 L1395.82 682.416 L1395.26 682.416 L1394.7 682.416 L1394.14 682.416 L1393.58 682.416 L1393.03 682.416 L1392.47 682.416 L1391.91 682.416 L1391.35 682.416 L1390.79 682.416 L1390.23 682.416 L1389.67 682.416 L1389.11 682.416 L1388.55 682.416 L1387.99 682.416 L1387.43 682.416 L1386.87 682.416 L1386.31 682.416 L1385.76 682.416 L1385.2 682.416 L1384.64 682.416 L1384.08 682.416 L1383.52 682.416 L1382.96 682.416 L1382.4 682.416 L1381.84 682.416 L1381.28 682.416 L1380.72 682.416 L1380.16 682.416 L1379.6 682.416 L1379.04 682.416 L1378.49 682.416 L1377.93 682.416 L1377.37 682.416 L1376.81 682.416 L1376.25 682.416 L1375.69 682.416 L1375.13 682.416 L1374.57 682.416 L1374.01 682.416 L1373.45 682.416 L1372.89 682.416 L1372.33 682.416 L1371.77 682.416 L1371.21 682.416 L1370.66 682.416 L1370.1 682.416 L1369.54 682.416 L1368.98 682.416 L1368.42 682.416 L1367.86 682.416 L1367.3 682.416 L1366.74 682.416 L1366.18 682.416 L1365.62 682.416 L1365.06 682.416 L1364.5 682.416 L1363.94 682.416 L1363.39 682.416 L1362.83 682.416 L1362.27 682.416 L1361.71 682.416 L1361.15 682.416 L1360.59 682.416 L1360.03 682.416 L1359.47 682.416 L1358.91 682.416 L1358.35 682.416 L1357.79 682.416 L1357.23 682.416 L1356.67 682.416 L1356.12 682.416 L1355.56 682.416 L1355 682.416 L1354.44 682.416 L1353.88 682.416 L1353.32 682.416 L1352.76 682.416 L1352.2 682.416 L1351.64 682.416 L1351.08 682.416 L1350.52 682.416 L1349.96 682.416 L1349.4 682.416 L1348.84 682.416 L1348.29 682.416 L1347.73 682.416 L1347.17 682.416 L1346.61 682.416 L1346.05 682.416 L1345.49 682.416 L1344.93 682.416 L1344.37 682.416 L1343.81 682.416 L1343.25 682.416 L1342.69 682.416 L1342.13 682.416 L1341.57 682.416 L1341.02 682.416 L1340.46 682.416 L1339.9 682.416 L1339.34 682.416 L1338.78 682.416 L1338.22 682.416 L1337.66 682.416 L1337.1 682.416 L1336.54 682.416 L1335.98 682.416 L1335.42 682.416 L1334.86 682.416 L1334.3 682.416 L1333.75 682.416 L1333.19 682.416 L1332.63 682.416 L1332.07 682.416 L1331.51 682.416 L1330.95 682.416 L1330.39 682.416 L1329.83 682.416 L1329.27 682.416 L1328.71 682.416 L1328.15 682.416 L1327.59 682.416 L1327.03 682.416 L1326.47 682.416 L1325.92 682.416 L1325.36 682.416 L1324.8 682.416 L1324.24 682.416 L1323.68 682.416 L1323.12 682.416 L1322.56 682.416 L1322 682.416 L1321.44 682.416 L1320.88 682.416 L1320.32 682.416 L1319.76 682.416 L1319.2 682.416 L1318.65 682.416 L1318.09 682.416 L1317.53 682.416 L1316.97 682.416 L1316.41 682.416 L1315.85 682.416 L1315.29 682.416 L1314.73 682.416 L1314.17 682.416 L1313.61 682.416 L1313.05 682.416 L1312.49 682.416 L1311.93 682.416 L1311.38 682.416 L1310.82 682.416 L1310.26 682.416 L1309.7 682.416 L1309.14 682.416 L1308.58 682.416 L1308.02 682.416 L1307.46 682.416 L1306.9 682.416 L1306.34 682.416 L1305.78 682.416 L1305.22 682.416 L1304.66 682.416 L1304.1 682.416 L1303.55 682.416 L1302.99 682.416 L1302.43 682.416 L1301.87 682.416 L1301.31 682.416 L1300.75 682.416 L1300.19 682.416 L1299.63 682.416 L1299.07 682.416 L1298.51 682.416 L1297.95 682.416 L1297.39 682.416 L1296.83 682.416 L1296.28 682.416 L1295.72 682.416 L1295.16 682.416 L1294.6 682.416 L1294.04 682.416 L1293.48 682.416 L1292.92 682.416 L1292.36 682.416 L1291.8 682.416 L1291.24 682.416 L1290.68 682.416 L1290.12 682.416 L1289.56 682.416 L1289 682.416 L1288.45 682.416 L1287.89 682.416 L1287.33 682.416 L1286.77 682.416 L1286.21 682.416 L1285.65 682.416 L1285.09 682.416 L1284.53 682.416 L1283.97 682.416 L1283.41 682.416 L1282.85 682.416 L1282.29 682.416 L1281.73 682.416 L1281.18 682.416 L1280.62 682.416 L1280.06 682.416 L1279.5 682.416 L1278.94 682.416 L1278.38 682.416 L1277.82 682.416 L1277.26 682.416 L1276.7 682.416 L1276.14 682.416 L1275.58 682.416 L1275.02 682.416 L1274.46 682.416 L1273.91 682.416 L1273.35 682.416 L1272.79 682.416 L1272.23 682.416 L1271.67 682.416 L1271.11 682.416 L1270.55 682.416 L1269.99 682.416 L1269.43 682.416 L1268.87 682.416 L1268.31 682.416 L1267.75 682.416 L1267.19 682.416 L1266.63 682.416 L1266.08 682.416 L1265.52 682.416 L1264.96 682.416 L1264.4 682.416 L1263.84 682.416 L1263.28 682.416 L1262.72 682.416 L1262.16 682.416 L1261.6 682.416 L1261.04 682.416 L1260.48 682.416 L1259.92 682.416 L1259.36 682.416 L1258.81 682.416 L1258.25 682.416 L1257.69 682.416 L1257.13 682.416 L1256.57 682.416 L1256.01 682.416 L1255.45 682.416 L1254.89 682.416 L1254.33 682.416 L1253.77 682.416 L1253.21 682.416 L1252.65 682.416 L1252.09 682.416 L1251.54 682.416 L1250.98 682.416 L1250.42 682.416 L1249.86 682.416 L1249.3 682.416 L1248.74 682.416 L1248.18 682.416 L1247.62 682.416 L1247.06 682.416 L1246.5 682.416 L1245.94 682.416 L1245.38 682.416 L1244.82 682.416 L1244.26 682.416 L1243.71 682.416 L1243.15 682.416 L1242.59 682.416 L1242.03 682.416 L1241.47 682.416 L1240.91 682.416 L1240.35 682.416 L1239.79 682.416 L1239.23 682.416 L1238.67 682.416 L1238.11 682.416 L1237.55 682.416 L1236.99 682.416 L1236.44 682.416 L1235.88 682.416 L1235.32 682.416 L1234.76 682.416 L1234.2 682.416 L1233.64 682.416 L1233.08 682.416 L1232.52 682.416 L1231.96 682.416 L1231.4 682.416 L1230.84 682.416 L1230.28 682.416 L1229.72 682.416 L1229.17 682.416 L1228.61 682.416 L1228.05 682.416 L1227.49 682.416 L1226.93 682.416 L1226.37 682.416 L1225.81 682.416 L1225.25 682.416 L1224.69 682.416 L1224.13 682.416 L1223.57 682.416 L1223.01 682.416 L1222.45 682.416 L1221.89 682.416 L1221.34 682.416 L1220.78 682.416 L1220.22 682.416 L1219.66 682.416 L1219.1 682.416 L1218.54 682.416 L1217.98 682.416 L1217.42 682.416 L1216.86 682.416 L1216.3 682.416 L1215.74 682.416 L1215.18 682.416 L1214.62 682.416 L1214.07 682.416 L1213.51 682.416 L1212.95 682.416 L1212.39 682.416 L1211.83 682.416 L1211.27 682.416 L1210.71 682.416 L1210.15 682.416 L1209.59 682.416 L1209.03 682.416 L1208.47 682.416 L1207.91 682.416 L1207.35 682.416 L1206.8 682.416 L1206.24 682.416 L1205.68 682.416 L1205.12 682.416 L1204.56 682.416 L1204 682.416 L1203.44 682.416 L1202.88 682.416 L1202.32 682.416 L1201.76 682.416 L1201.2 682.416 L1200.64 682.416 L1200.08 682.416 L1199.52 682.416 L1198.97 682.416 L1198.41 682.416 L1197.85 682.416 L1197.29 682.416 L1196.73 682.416 L1196.17 682.416 L1195.61 682.416 L1195.05 682.416 L1194.49 682.416 L1193.93 682.416 L1193.37 682.416 L1192.81 682.416 L1192.25 682.416 L1191.7 682.416 L1191.14 682.416 L1190.58 682.416 L1190.02 682.416 L1189.46 682.416 L1188.9 682.416 L1188.34 682.416 L1187.78 682.416 L1187.22 682.416 L1186.66 682.416 L1186.1 682.416 L1185.54 682.416 L1184.98 682.416 L1184.43 682.416 L1183.87 682.416 L1183.31 682.416 L1182.75 682.416 L1182.19 682.416 L1181.63 682.416 L1181.07 682.416 L1180.51 682.416 L1179.95 682.416 L1179.39 682.416 L1178.83 682.416 L1178.27 682.416 L1177.71 682.416 L1177.15 682.416 L1176.6 682.416 L1176.04 682.416 L1175.48 682.416 L1174.92 682.416 L1174.36 682.416 L1173.8 682.416 L1173.24 682.416 L1172.68 682.416 L1172.12 682.416 L1171.56 682.416 L1171 682.416 L1170.44 682.416 L1169.88 682.416 L1169.33 682.416 L1168.77 682.416 L1168.21 682.416 L1167.65 682.416 L1167.09 682.416 L1166.53 682.416 L1165.97 682.416 L1165.41 682.416 L1164.85 682.416 L1164.29 682.416 L1163.73 682.416 L1163.17 682.416 L1162.61 682.416 L1162.05 682.416 L1161.5 682.416 L1160.94 682.416 L1160.38 682.416 L1159.82 682.416 L1159.26 682.416 L1158.7 682.416 L1158.14 682.416 L1157.58 682.416 L1157.02 682.416 L1156.46 682.416 L1155.9 682.416 L1155.34 682.416 L1154.78 682.416 L1154.23 682.416 L1153.67 682.416 L1153.11 682.416 L1152.55 682.416 L1151.99 682.416 L1151.43 682.416 L1150.87 682.416 L1150.31 682.416 L1149.75 682.416 L1149.19 682.416 L1148.63 682.416 L1148.07 682.416 L1147.51 682.416 L1146.96 682.416 L1146.4 682.416 L1145.84 682.416 L1145.28 682.416 L1144.72 682.416 L1144.16 682.416 L1143.6 682.416 L1143.04 682.416 L1142.48 682.416 L1141.92 682.416 L1141.36 682.416 L1140.8 682.416 L1140.24 682.416 L1139.68 682.416 L1139.13 682.416 L1138.57 682.416 L1138.01 682.416 L1137.45 682.416 L1136.89 682.416 L1136.33 682.416 L1135.77 682.416 L1135.21 682.416 L1134.65 682.416 L1134.09 682.416 L1133.53 682.416 L1132.97 682.416 L1132.41 682.416 L1131.86 682.416 L1131.3 682.416 L1130.74 682.416 L1130.18 682.416 L1129.62 682.416 L1129.06 682.416 L1128.5 682.416 L1127.94 682.416 L1127.38 682.416 L1126.82 682.416 L1126.26 682.416 L1125.7 682.416 L1125.14 682.416 L1124.59 682.416 L1124.03 682.416 L1123.47 682.416 L1122.91 682.416 L1122.35 682.416 L1121.79 682.416 L1121.23 682.416 L1120.67 682.416 L1120.11 682.416 L1119.55 682.416 L1118.99 682.416 L1118.43 682.416 L1117.87 682.416 L1117.31 682.416 L1116.76 682.416 L1116.2 682.416 L1115.64 682.416 L1115.08 682.416 L1114.52 682.416 L1113.96 682.416 L1113.4 682.416 L1112.84 682.416 L1112.28 682.416 L1111.72 682.416 L1111.16 682.416 L1110.6 682.416 L1110.04 682.416 L1109.49 682.416 L1108.93 682.416 L1108.37 682.416 L1107.81 682.416 L1107.25 682.416 L1106.69 682.416 L1106.13 682.416 L1105.57 682.416 L1105.01 682.416 L1104.45 682.416 L1103.89 682.416 L1103.33 682.416 L1102.77 682.416 L1102.22 682.416 L1101.66 682.416 L1101.1 682.416 L1100.54 682.416 L1099.98 682.416 L1099.42 682.416 L1098.86 682.416 L1098.3 682.416 L1097.74 682.416 L1097.18 682.416 L1096.62 682.416 L1096.06 682.416 L1095.5 682.416 L1094.94 682.416 L1094.39 682.416 L1093.83 682.416 L1093.27 682.416 L1092.71 682.416 L1092.15 682.416 L1091.59 682.416 L1091.03 682.416 L1090.47 682.416 L1089.91 682.416 L1089.35 682.416 L1088.79 682.416 L1088.23 682.416 L1087.67 682.416 L1087.12 682.416 L1086.56 682.416 L1086 682.416 L1085.44 682.416 L1084.88 682.416 L1084.32 682.416 L1083.76 682.416 L1083.2 682.416 L1082.64 682.416 L1082.08 682.416 L1081.52 682.416 L1080.96 682.416 L1080.4 682.416 L1079.85 682.416 L1079.29 682.416 L1078.73 682.416 L1078.17 682.416 L1077.61 682.416 L1077.05 682.416 L1076.49 682.416 L1075.93 682.416 L1075.37 682.416 L1074.81 682.416 L1074.25 682.416 L1073.69 682.416 L1073.13 682.416 L1072.57 682.416 L1072.02 682.416 L1071.46 682.416 L1070.9 682.416 L1070.34 682.416 L1069.78 682.416 L1069.22 682.416 L1068.66 682.416 L1068.1 682.416 L1067.54 682.416 L1066.98 682.416 L1066.42 682.416 L1065.86 682.416 L1065.3 682.416 L1064.75 682.416 L1064.19 682.416 L1063.63 682.416 L1063.07 682.416 L1062.51 682.416 L1061.95 682.416 L1061.39 682.416 L1060.83 682.416 L1060.27 682.416 L1059.71 682.416 L1059.15 682.416 L1058.59 682.416 L1058.03 682.416 L1057.48 682.416 L1056.92 682.416 L1056.36 682.416 L1055.8 682.416 L1055.24 682.416 L1054.68 682.416 L1054.12 682.416 L1053.56 682.416 L1053 682.416 L1052.44 682.416 L1051.88 682.416 L1051.32 682.416 L1050.76 682.416 L1050.2 682.416 L1049.65 682.416 L1049.09 682.416 L1048.53 682.416 L1047.97 682.416 L1047.41 682.416 L1046.85 682.416 L1046.29 682.416 L1045.73 682.416 L1045.17 682.416 L1044.61 682.416 L1044.05 682.416 L1043.49 682.416 L1042.93 682.416 L1042.38 682.416 L1041.82 682.416 L1041.26 682.416 L1040.7 682.416 L1040.14 682.416 L1039.58 682.416 L1039.02 682.416 L1038.46 682.416 L1037.9 682.416 L1037.34 682.416 L1036.78 682.416 L1036.22 682.416 L1035.66 682.416 L1035.1 682.416 L1034.55 682.416 L1033.99 682.416 L1033.43 682.416 L1032.87 682.416 L1032.31 682.416 L1031.75 682.416 L1031.19 682.416 L1030.63 682.416 L1030.07 682.416 L1029.51 682.416 L1028.95 682.416 L1028.39 682.416 L1027.83 682.416 L1027.28 682.416 L1026.72 682.416 L1026.16 682.416 L1025.6 682.416 L1025.04 682.416 L1024.48 682.416 L1023.92 682.416 L1023.36 682.416 L1022.8 682.416 L1022.24 682.416 L1021.68 682.416 L1021.12 682.416 L1020.56 682.416 L1020.01 682.416 L1019.45 682.416 L1018.89 682.416 L1018.33 682.416 L1017.77 682.416 L1017.21 682.416 L1016.65 682.416 L1016.09 682.416 L1015.53 682.416 L1014.97 682.416 L1014.41 682.416 L1013.85 682.416 L1013.29 682.416 L1012.73 682.416 L1012.18 682.416 L1011.62 682.416 L1011.06 682.416 L1010.5 682.416 L1009.94 682.416 L1009.38 682.416 L1008.82 682.416 L1008.26 682.416 L1007.7 682.416 L1007.14 682.416 L1006.58 682.416 L1006.02 682.416 L1005.46 682.416 L1004.91 682.416 L1004.35 682.416 L1003.79 682.416 L1003.23 682.416 L1002.67 682.416 L1002.11 682.416 L1001.55 682.416 L1000.99 682.416 L1000.43 682.416 L999.872 682.416 L999.313 682.416 L998.754 682.416 L998.194 682.416 L997.635 682.416 L997.076 682.416 L996.517 682.416 L995.957 682.416 L995.398 682.416 L994.839 682.416 L994.28 682.416 L993.72 682.416 L993.161 682.416 L992.602 682.416 L992.043 682.416 L991.483 682.416 L990.924 682.416 L990.365 682.416 L989.806 682.416 L989.246 682.416 L988.687 682.416 L988.128 682.416 L987.569 682.416 L987.009 682.416 L986.45 682.416 L985.891 682.416 L985.332 682.416 L984.772 682.416 L984.213 682.416 L983.654 682.416 L983.095 682.416 L982.535 682.416 L981.976 682.416 L981.417 682.416 L980.858 682.416 L980.298 682.416 L979.739 682.416 L979.18 682.416 L978.621 682.416 L978.061 682.416 L977.502 682.416 L976.943 682.416 L976.384 682.416 L975.824 682.416 L975.265 682.416 L974.706 682.416 L974.147 682.416 L973.587 682.416 L973.028 682.416 L972.469 682.416 L971.91 682.416 L971.35 682.416 L970.791 682.416 L970.232 682.416 L969.673 682.416 L969.113 682.416 L968.554 682.416 L967.995 682.416 L967.436 682.416 L966.876 682.416 L966.317 682.416 L965.758 682.416 L965.199 682.416 L964.639 682.416 L964.08 682.416 L963.521 682.416 L962.962 682.416 L962.402 682.416 L961.843 682.416 L961.284 682.416 L960.725 682.416 L960.165 682.416 L959.606 682.416 L959.047 682.416 L958.488 682.416 L957.928 682.416 L957.369 682.416 L956.81 682.416 L956.251 682.416 L955.691 682.416 L955.132 682.416 L954.573 682.416 L954.014 682.416 L953.454 682.416 L952.895 682.416 L952.336 682.416 L951.777 682.416 L951.217 682.416 L950.658 682.416 L950.099 682.416 L949.54 682.416 L948.98 682.416 L948.421 682.416 L947.862 682.416 L947.303 682.416 L946.743 682.416 L946.184 682.416 L945.625 682.416 L945.066 682.416 L944.506 682.416 L943.947 682.416 L943.388 682.416 L942.829 682.416 L942.269 682.416 L941.71 682.416 L941.151 682.416 L940.592 682.416 L940.032 682.416 L939.473 682.416 L938.914 682.416 L938.355 682.416 L937.795 682.416 L937.236 682.416 L936.677 682.416 L936.118 682.416 L935.558 682.416 L934.999 682.416 L934.44 682.416 L933.881 682.416 L933.321 682.416 L932.762 682.416 L932.203 682.416 L931.644 682.416 L931.084 682.416 L930.525 682.416 L929.966 682.416 L929.406 682.416 L928.847 682.416 L928.288 682.416 L927.729 682.416 L927.169 682.416 L926.61 682.416 L926.051 682.416 L925.492 682.416 L924.932 682.416 L924.373 682.416 L923.814 682.416 L923.255 682.416 L922.695 682.416 L922.136 682.416 L921.577 682.416 L921.018 682.416 L920.458 682.416 L919.899 682.416 L919.34 682.416 L918.781 682.416 L918.221 682.416 L917.662 682.416 L917.103 682.416 L916.544 682.416 L915.984 682.416 L915.425 682.416 L914.866 682.416 L914.307 682.416 L913.747 682.416 L913.188 682.416 L912.629 682.416 L912.07 682.416 L911.51 682.416 L910.951 682.416 L910.392 682.416 L909.833 682.416 L909.273 682.416 L908.714 682.416 L908.155 682.416 L907.596 682.416 L907.036 682.416 L906.477 682.416 L905.918 682.416 L905.359 682.416 L904.799 682.416 L904.24 682.416 L903.681 682.416 L903.122 682.416 L902.562 682.416 L902.003 682.416 L901.444 682.416 L900.885 682.416 L900.325 682.416 L899.766 682.416 L899.207 682.416 L898.648 682.416 L898.088 682.416 L897.529 682.416 L896.97 682.416 L896.411 682.416 L895.851 682.416 L895.292 682.416 L894.733 682.416 L894.174 682.416 L893.614 682.416 L893.055 682.416 L892.496 682.416 L891.937 682.416 L891.377 682.416 L890.818 682.416 L890.259 682.416 L889.7 682.416 L889.14 682.416 L888.581 682.416 L888.022 682.416 L887.463 682.416 L886.903 682.416 L886.344 682.416 L885.785 682.416 L885.226 682.416 L884.666 682.416 L884.107 682.416 L883.548 682.416 L882.989 682.416 L882.429 682.416 L881.87 682.416 L881.311 682.416 L880.752 682.416 L880.192 682.416 L879.633 682.416 L879.074 682.416 L878.515 682.416 L877.955 682.416 L877.396 682.416 L876.837 682.416 L876.278 682.416 L875.718 682.416 L875.159 682.416 L874.6 682.416 L874.041 682.416 L873.481 682.416 L872.922 682.416 L872.363 682.416 L871.804 682.416 L871.244 682.416 L870.685 682.416 L870.126 682.416 L869.567 682.416 L869.007 682.416 L868.448 682.416 L867.889 682.416 L867.33 682.416 L866.77 682.416 L866.211 682.416 L865.652 682.416 L865.093 682.416 L864.533 682.416 L863.974 682.416 L863.415 682.416 L862.856 682.416 L862.296 682.416 L861.737 682.416 L861.178 682.416 L860.619 682.416 L860.059 682.416 L859.5 682.416 L858.941 682.416 L858.382 682.416 L857.822 682.416 L857.263 682.416 L856.704 682.416 L856.145 682.416 L855.585 682.416 L855.026 682.416 L854.467 682.416 L853.908 682.416 L853.348 682.416 L852.789 682.416 L852.23 682.416 L851.671 682.416 L851.111 682.416 L850.552 682.416 L849.993 682.416 L849.434 682.416 L848.874 682.416 L848.315 682.416 L847.756 682.416 L847.197 682.416 L846.637 682.416 L846.078 682.416 L845.519 682.416 L844.96 682.416 L844.4 682.416 L843.841 682.416 L843.282 682.416 L842.723 682.416 L842.163 682.416 L841.604 682.416 L841.045 682.416 L840.486 682.416 L839.926 682.416 L839.367 682.416 L838.808 682.416 L838.249 682.416 L837.689 682.416 L837.13 682.416 L836.571 682.416 L836.012 682.416 L835.452 682.416 L834.893 682.416 L834.334 682.416 L833.775 682.416 L833.215 682.416 L832.656 682.416 L832.097 682.416 L831.538 682.416 L830.978 682.416 L830.419 682.416 L829.86 682.416 L829.301 682.416 L828.741 682.416 L828.182 682.416 L827.623 682.416 L827.064 682.416 L826.504 682.416 L825.945 682.416 L825.386 682.416 L824.827 682.416 L824.267 682.416 L823.708 682.416 L823.149 682.416 L822.59 682.416 L822.03 682.416 L821.471 682.416 L820.912 682.416 L820.353 682.416 L819.793 682.416 L819.234 682.416 L818.675 682.416 L818.116 682.416 L817.556 682.416 L816.997 682.416 L816.438 682.416 L815.879 682.416 L815.319 682.416 L814.76 682.416 L814.201 682.416 L813.642 682.416 L813.082 682.416 L812.523 682.416 L811.964 682.416 L811.405 682.416 L810.845 682.416 L810.286 682.416 L809.727 682.416 L809.168 682.416 L808.608 682.416 L808.049 682.416 L807.49 682.416 L806.931 682.416 L806.371 682.416 L805.812 682.416 L805.253 682.416 L804.693 682.416 L804.134 682.416 L803.575 682.416 L803.016 682.416 L802.456 682.416 L801.897 682.416 L801.338 682.416 L800.779 682.416 L800.219 682.416 L799.66 682.416 L799.101 682.416 L798.542 682.416 L797.982 682.416 L797.423 682.416 L796.864 682.416 L796.305 682.416 L795.745 682.416 L795.186 682.416 L794.627 682.416 L794.068 682.416 L793.508 682.416 L792.949 682.416 L792.39 682.416 L791.831 682.416 L791.271 682.416 L790.712 682.416 L790.153 682.416 L789.594 682.416 L789.034 682.416 L788.475 682.416 L787.916 682.416 L787.357 682.416 L786.797 682.416 L786.238 682.416 L785.679 682.416 L785.12 682.416 L784.56 682.416 L784.001 682.416 L783.442 682.416 L782.883 682.416 L782.323 682.416 L781.764 682.416 L781.205 682.416 L780.646 682.416 L780.086 682.416 L779.527 682.416 L778.968 682.416 L778.409 682.416 L777.849 682.416 L777.29 682.416 L776.731 682.416 L776.172 682.416 L775.612 682.416 L775.053 682.416 L774.494 682.416 L773.935 682.416 L773.375 682.416 L772.816 682.416 L772.257 682.416 L771.698 682.416 L771.138 682.416 L770.579 682.416 L770.02 682.416 L769.461 682.416 L768.901 682.416 L768.342 682.416 L767.783 682.416 L767.224 682.416 L766.664 682.416 L766.105 682.416 L765.546 682.416 L764.987 682.416 L764.427 682.416 L763.868 682.416 L763.309 682.416 L762.75 682.416 L762.19 682.416 L761.631 682.416 L761.072 682.416 L760.513 682.416 L759.953 682.416 L759.394 682.416 L758.835 682.416 L758.276 682.416 L757.716 682.416 L757.157 682.416 L756.598 682.416 L756.039 682.416 L755.479 682.416 L754.92 682.416 L754.361 682.416 L753.802 682.416 L753.242 682.416 L752.683 682.416 L752.124 682.416 L751.565 682.416 L751.005 682.416 L750.446 682.416 L749.887 682.416 L749.328 682.416 L748.768 682.416 L748.209 682.416 L747.65 682.416 L747.091 682.416 L746.531 682.416 L745.972 682.416 L745.413 682.416 L744.854 682.416 L744.294 682.416 L743.735 682.416 L743.176 682.416 L742.617 682.416 L742.057 682.416 L741.498 682.416 L740.939 682.416 L740.38 682.416 L739.82 682.416 L739.261 682.416 L738.702 682.416 L738.143 682.416 L737.583 682.416 L737.024 682.416 L736.465 682.416 L735.906 682.416 L735.346 682.416 L734.787 682.416 L734.228 682.416 L733.669 682.416 L733.109 682.416 L732.55 682.416 L731.991 682.416 L731.432 682.416 L730.872 682.416 L730.313 682.416 L729.754 682.416 L729.195 682.416 L728.635 682.416 L728.076 682.416 L727.517 682.416 L726.958 682.416 L726.398 682.416 L725.839 682.416 L725.28 682.416 L724.721 682.416 L724.161 682.416 L723.602 682.416 L723.043 682.416 L722.484 682.416 L721.924 682.416 L721.365 682.416 L720.806 682.416 L720.247 682.416  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip823)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,683.615 720.806,683.615 721.365,683.615 721.924,683.615 722.484,683.615 723.043,683.615 723.602,683.615 724.161,683.615 724.721,683.615 725.28,683.615 725.839,683.615 726.398,683.615 726.958,683.615 727.517,683.615 728.076,683.615 728.635,683.615 729.195,683.615 729.754,683.615 730.313,683.615 730.872,683.615 731.432,683.615 731.991,683.615 732.55,683.615 733.109,683.615 733.669,683.615 734.228,683.615 734.787,683.615 735.346,683.615 735.906,683.615 736.465,683.615 737.024,683.615 737.583,683.615 738.143,683.615 738.702,683.615 739.261,683.615 739.82,683.615 740.38,683.615 740.939,683.615 741.498,683.615 742.057,683.615 742.617,683.615 743.176,683.615 743.735,683.615 744.294,683.615 744.854,683.615 745.413,683.615 745.972,683.615 746.531,683.615 747.091,683.615 747.65,683.615 748.209,683.615 748.768,683.615 749.328,683.615 749.887,683.615 750.446,683.615 751.005,683.615 751.565,683.615 752.124,683.615 752.683,683.615 753.242,683.615 753.802,683.615 754.361,683.615 754.92,683.615 755.479,683.615 756.039,683.615 756.598,683.615 757.157,683.615 757.716,683.615 758.276,683.615 758.835,683.615 759.394,683.615 759.953,683.615 760.513,683.615 761.072,683.615 761.631,683.615 762.19,683.615 762.75,683.615 763.309,683.615 763.868,683.615 764.427,683.615 764.987,683.615 765.546,683.615 766.105,683.615 766.664,683.615 767.224,683.615 767.783,683.615 768.342,683.615 768.901,683.615 769.461,683.615 770.02,683.615 770.579,683.615 771.138,683.615 771.698,683.615 772.257,683.615 772.816,683.615 773.375,683.615 773.935,683.615 774.494,683.615 775.053,683.615 775.612,683.615 776.172,683.615 776.731,683.615 777.29,683.615 777.849,683.615 778.409,683.615 778.968,683.615 779.527,683.615 780.086,683.615 780.646,683.615 781.205,683.615 781.764,683.615 782.323,683.615 782.883,683.615 783.442,683.615 784.001,683.615 784.56,683.615 785.12,683.615 785.679,683.615 786.238,683.615 786.797,683.615 787.357,683.615 787.916,683.615 788.475,683.615 789.034,683.615 789.594,683.615 790.153,683.615 790.712,683.615 791.271,683.615 791.831,683.615 792.39,683.615 792.949,683.615 793.508,683.615 794.068,683.615 794.627,683.615 795.186,683.615 795.745,683.615 796.305,683.615 796.864,683.615 797.423,683.615 797.982,683.615 798.542,683.615 799.101,683.615 799.66,683.615 800.219,683.615 800.779,683.615 801.338,683.615 801.897,683.615 802.456,683.615 803.016,683.615 803.575,683.615 804.134,683.615 804.693,683.615 805.253,683.615 805.812,683.615 806.371,683.615 806.931,683.615 807.49,683.615 808.049,683.615 808.608,683.615 809.168,683.615 809.727,683.615 810.286,683.615 810.845,683.615 811.405,683.615 811.964,683.615 812.523,683.615 813.082,683.615 813.642,683.615 814.201,683.615 814.76,683.615 815.319,683.615 815.879,683.615 816.438,683.615 816.997,683.615 817.556,683.615 818.116,683.615 818.675,683.615 819.234,683.615 819.793,683.615 820.353,683.615 820.912,683.615 821.471,683.615 822.03,683.615 822.59,683.615 823.149,683.615 823.708,683.615 824.267,683.615 824.827,683.615 825.386,683.615 825.945,683.615 826.504,683.615 827.064,683.615 827.623,683.615 828.182,683.615 828.741,683.615 829.301,683.615 829.86,683.615 830.419,683.615 830.978,683.615 831.538,683.615 832.097,683.615 832.656,683.615 833.215,683.615 833.775,683.615 834.334,683.615 834.893,683.615 835.452,683.615 836.012,683.615 836.571,683.615 837.13,683.615 837.689,683.615 838.249,683.615 838.808,683.615 839.367,683.615 839.926,683.615 840.486,683.615 841.045,683.615 841.604,683.615 842.163,683.615 842.723,683.615 843.282,683.615 843.841,683.615 844.4,683.615 844.96,683.615 845.519,683.615 846.078,683.615 846.637,683.615 847.197,683.615 847.756,683.615 848.315,683.615 848.874,683.615 849.434,683.615 849.993,683.615 850.552,683.615 851.111,683.615 851.671,683.615 852.23,683.615 852.789,683.615 853.348,683.615 853.908,683.615 854.467,683.615 855.026,683.615 855.585,683.615 856.145,683.615 856.704,683.615 857.263,683.615 857.822,683.615 858.382,683.615 858.941,683.615 859.5,683.615 860.059,683.615 860.619,683.615 861.178,683.615 861.737,683.615 862.296,683.615 862.856,683.615 863.415,683.615 863.974,683.615 864.533,683.615 865.093,683.615 865.652,683.615 866.211,683.615 866.77,683.615 867.33,683.615 867.889,683.615 868.448,683.615 869.007,683.615 869.567,683.615 870.126,683.615 870.685,683.615 871.244,683.615 871.804,683.615 872.363,683.615 872.922,683.615 873.481,683.615 874.041,683.615 874.6,683.615 875.159,683.615 875.718,683.615 876.278,683.615 876.837,683.615 877.396,683.615 877.955,683.615 878.515,683.615 879.074,683.615 879.633,683.615 880.192,683.615 880.752,683.615 881.311,683.615 881.87,683.615 882.429,683.615 882.989,683.615 883.548,683.615 884.107,683.615 884.666,683.615 885.226,683.615 885.785,683.615 886.344,683.615 886.903,683.615 887.463,683.615 888.022,683.615 888.581,683.615 889.14,683.615 889.7,683.615 890.259,683.615 890.818,683.615 891.377,683.615 891.937,683.615 892.496,683.615 893.055,683.615 893.614,683.615 894.174,683.615 894.733,683.615 895.292,683.615 895.851,683.615 896.411,683.615 896.97,683.615 897.529,683.615 898.088,683.615 898.648,683.615 899.207,683.615 899.766,683.615 900.325,683.615 900.885,683.615 901.444,683.615 902.003,683.615 902.562,683.615 903.122,683.615 903.681,683.615 904.24,683.615 904.799,683.615 905.359,683.615 905.918,683.615 906.477,683.615 907.036,683.615 907.596,683.615 908.155,683.615 908.714,683.615 909.273,683.615 909.833,683.615 910.392,683.615 910.951,683.615 911.51,683.615 912.07,683.615 912.629,683.615 913.188,683.615 913.747,683.615 914.307,683.615 914.866,683.615 915.425,683.615 915.984,683.615 916.544,683.615 917.103,683.615 917.662,683.615 918.221,683.615 918.781,683.615 919.34,683.615 919.899,683.615 920.458,683.615 921.018,683.615 921.577,683.615 922.136,683.615 922.695,683.615 923.255,683.615 923.814,683.615 924.373,683.615 924.932,683.615 925.492,683.615 926.051,683.615 926.61,683.615 927.169,683.615 927.729,683.615 928.288,683.615 928.847,683.615 929.406,683.615 929.966,683.615 930.525,683.615 931.084,683.615 931.644,683.615 932.203,683.615 932.762,683.615 933.321,683.615 933.881,683.615 934.44,683.615 934.999,683.615 935.558,683.615 936.118,683.615 936.677,683.615 937.236,683.615 937.795,683.615 938.355,683.615 938.914,683.615 939.473,683.615 940.032,683.615 940.592,683.615 941.151,683.615 941.71,683.615 942.269,683.615 942.829,683.615 943.388,683.615 943.947,683.615 944.506,683.615 945.066,683.615 945.625,683.615 946.184,683.615 946.743,683.615 947.303,683.615 947.862,683.615 948.421,683.615 948.98,683.615 949.54,683.615 950.099,683.615 950.658,683.615 951.217,683.615 951.777,683.615 952.336,683.615 952.895,683.615 953.454,683.615 954.014,683.615 954.573,683.615 955.132,683.615 955.691,683.615 956.251,683.615 956.81,683.615 957.369,683.615 957.928,683.615 958.488,683.615 959.047,683.615 959.606,683.615 960.165,683.615 960.725,683.615 961.284,683.615 961.843,683.615 962.402,683.615 962.962,683.615 963.521,683.615 964.08,683.615 964.639,683.615 965.199,683.615 965.758,683.615 966.317,683.615 966.876,683.615 967.436,683.615 967.995,683.615 968.554,683.615 969.113,683.615 969.673,683.615 970.232,683.615 970.791,683.615 971.35,683.615 971.91,683.615 972.469,683.615 973.028,683.615 973.587,683.615 974.147,683.615 974.706,683.615 975.265,683.615 975.824,683.615 976.384,683.615 976.943,683.615 977.502,683.615 978.061,683.615 978.621,683.615 979.18,683.615 979.739,683.615 980.298,683.615 980.858,683.615 981.417,683.615 981.976,683.615 982.535,683.615 983.095,683.615 983.654,683.615 984.213,683.615 984.772,683.615 985.332,683.615 985.891,683.615 986.45,683.615 987.009,683.615 987.569,683.615 988.128,683.615 988.687,683.615 989.246,683.615 989.806,683.615 990.365,683.615 990.924,683.615 991.483,683.615 992.043,683.615 992.602,683.615 993.161,683.615 993.72,683.615 994.28,683.615 994.839,683.615 995.398,683.615 995.957,683.615 996.517,683.615 997.076,683.615 997.635,683.615 998.194,683.615 998.754,683.615 999.313,683.615 999.872,683.615 1000.43,683.615 1000.99,683.615 1001.55,683.615 1002.11,683.615 1002.67,683.615 1003.23,683.615 1003.79,683.615 1004.35,683.615 1004.91,683.615 1005.46,683.615 1006.02,683.615 1006.58,683.615 1007.14,683.615 1007.7,683.615 1008.26,683.615 1008.82,683.615 1009.38,683.615 1009.94,683.615 1010.5,683.615 1011.06,683.615 1011.62,683.615 1012.18,683.615 1012.73,683.615 1013.29,683.615 1013.85,683.615 1014.41,683.615 1014.97,683.615 1015.53,683.615 1016.09,683.615 1016.65,683.615 1017.21,683.615 1017.77,683.615 1018.33,683.615 1018.89,683.615 1019.45,683.615 1020.01,683.615 1020.56,683.615 1021.12,683.615 1021.68,683.615 1022.24,683.615 1022.8,683.615 1023.36,683.615 1023.92,683.615 1024.48,683.615 1025.04,683.615 1025.6,683.615 1026.16,683.615 1026.72,683.615 1027.28,683.615 1027.83,683.615 1028.39,683.615 1028.95,683.615 1029.51,683.615 1030.07,683.615 1030.63,683.615 1031.19,683.615 1031.75,683.615 1032.31,683.615 1032.87,683.615 1033.43,683.615 1033.99,683.615 1034.55,683.615 1035.1,683.615 1035.66,683.615 1036.22,683.615 1036.78,683.615 1037.34,683.615 1037.9,683.615 1038.46,683.615 1039.02,683.615 1039.58,683.615 1040.14,683.615 1040.7,683.615 1041.26,683.615 1041.82,683.615 1042.38,683.615 1042.93,683.615 1043.49,683.615 1044.05,683.615 1044.61,683.615 1045.17,683.615 1045.73,683.615 1046.29,683.615 1046.85,683.615 1047.41,683.615 1047.97,683.615 1048.53,683.615 1049.09,683.615 1049.65,683.615 1050.2,683.615 1050.76,683.615 1051.32,683.615 1051.88,683.615 1052.44,683.615 1053,683.615 1053.56,683.615 1054.12,683.615 1054.68,683.615 1055.24,683.615 1055.8,683.615 1056.36,683.615 1056.92,683.615 1057.48,683.615 1058.03,683.615 1058.59,683.615 1059.15,683.615 1059.71,683.615 1060.27,683.615 1060.83,683.615 1061.39,683.615 1061.95,683.615 1062.51,683.615 1063.07,683.615 1063.63,683.615 1064.19,683.615 1064.75,683.615 1065.3,683.615 1065.86,683.615 1066.42,683.615 1066.98,683.615 1067.54,683.615 1068.1,683.615 1068.66,683.615 1069.22,683.615 1069.78,683.615 1070.34,683.615 1070.9,683.615 1071.46,683.615 1072.02,683.615 1072.57,683.615 1073.13,683.615 1073.69,683.615 1074.25,683.615 1074.81,683.615 1075.37,683.615 1075.93,683.615 1076.49,683.615 1077.05,683.615 1077.61,683.615 1078.17,683.615 1078.73,683.615 1079.29,683.615 1079.85,683.615 1080.4,683.615 1080.96,683.615 1081.52,683.615 1082.08,683.615 1082.64,683.615 1083.2,683.615 1083.76,683.615 1084.32,683.615 1084.88,683.615 1085.44,683.615 1086,683.615 1086.56,683.615 1087.12,683.615 1087.67,683.615 1088.23,683.615 1088.79,683.615 1089.35,683.615 1089.91,683.615 1090.47,683.615 1091.03,683.615 1091.59,683.615 1092.15,683.615 1092.71,683.615 1093.27,683.615 1093.83,683.615 1094.39,683.615 1094.94,683.615 1095.5,683.615 1096.06,683.615 1096.62,683.615 1097.18,683.615 1097.74,683.615 1098.3,683.615 1098.86,683.615 1099.42,683.615 1099.98,683.615 1100.54,683.615 1101.1,683.615 1101.66,683.615 1102.22,683.615 1102.77,683.615 1103.33,683.615 1103.89,683.615 1104.45,683.615 1105.01,683.615 1105.57,683.615 1106.13,683.615 1106.69,683.615 1107.25,683.615 1107.81,683.615 1108.37,683.615 1108.93,683.615 1109.49,683.615 1110.04,683.615 1110.6,683.615 1111.16,683.615 1111.72,683.615 1112.28,683.615 1112.84,683.615 1113.4,683.615 1113.96,683.615 1114.52,683.615 1115.08,683.615 1115.64,683.615 1116.2,683.615 1116.76,683.615 1117.31,683.615 1117.87,683.615 1118.43,683.615 1118.99,683.615 1119.55,683.615 1120.11,683.615 1120.67,683.615 1121.23,683.615 1121.79,683.615 1122.35,683.615 1122.91,683.615 1123.47,683.615 1124.03,683.615 1124.59,683.615 1125.14,683.615 1125.7,683.615 1126.26,683.615 1126.82,683.615 1127.38,683.615 1127.94,683.615 1128.5,683.615 1129.06,683.615 1129.62,683.615 1130.18,683.615 1130.74,683.615 1131.3,683.615 1131.86,683.615 1132.41,683.615 1132.97,683.615 1133.53,683.615 1134.09,683.615 1134.65,683.615 1135.21,683.615 1135.77,683.615 1136.33,683.615 1136.89,683.615 1137.45,683.615 1138.01,683.615 1138.57,683.615 1139.13,683.615 1139.68,683.615 1140.24,683.615 1140.8,683.615 1141.36,683.615 1141.92,683.615 1142.48,683.615 1143.04,683.615 1143.6,683.615 1144.16,683.615 1144.72,683.615 1145.28,683.615 1145.84,683.615 1146.4,683.615 1146.96,683.615 1147.51,683.615 1148.07,683.615 1148.63,683.615 1149.19,683.615 1149.75,683.615 1150.31,683.615 1150.87,683.615 1151.43,683.615 1151.99,683.615 1152.55,683.615 1153.11,683.615 1153.67,683.615 1154.23,683.615 1154.78,683.615 1155.34,683.615 1155.9,683.615 1156.46,683.615 1157.02,683.615 1157.58,683.615 1158.14,683.615 1158.7,683.615 1159.26,683.615 1159.82,683.615 1160.38,683.615 1160.94,683.615 1161.5,683.615 1162.05,683.615 1162.61,683.615 1163.17,683.615 1163.73,683.615 1164.29,683.615 1164.85,683.615 1165.41,683.615 1165.97,683.615 1166.53,683.615 1167.09,683.615 1167.65,683.615 1168.21,683.615 1168.77,683.615 1169.33,683.615 1169.88,683.615 1170.44,683.615 1171,683.615 1171.56,683.615 1172.12,683.615 1172.68,683.615 1173.24,683.615 1173.8,683.615 1174.36,683.615 1174.92,683.615 1175.48,683.615 1176.04,683.615 1176.6,683.615 1177.15,683.615 1177.71,683.615 1178.27,683.615 1178.83,683.615 1179.39,683.615 1179.95,683.615 1180.51,683.615 1181.07,683.615 1181.63,683.615 1182.19,683.615 1182.75,683.615 1183.31,683.615 1183.87,683.615 1184.43,683.615 1184.98,683.615 1185.54,683.615 1186.1,683.615 1186.66,683.615 1187.22,683.615 1187.78,683.615 1188.34,683.615 1188.9,683.615 1189.46,683.615 1190.02,683.615 1190.58,683.615 1191.14,683.615 1191.7,683.615 1192.25,683.615 1192.81,683.615 1193.37,683.615 1193.93,683.615 1194.49,683.615 1195.05,683.615 1195.61,683.615 1196.17,683.615 1196.73,683.615 1197.29,683.615 1197.85,683.615 1198.41,683.615 1198.97,683.615 1199.52,683.615 1200.08,683.615 1200.64,683.615 1201.2,683.615 1201.76,683.615 1202.32,683.615 1202.88,683.615 1203.44,683.615 1204,683.615 1204.56,683.615 1205.12,683.615 1205.68,683.615 1206.24,683.615 1206.8,683.615 1207.35,683.615 1207.91,683.615 1208.47,683.615 1209.03,683.615 1209.59,683.615 1210.15,683.615 1210.71,683.615 1211.27,683.615 1211.83,683.615 1212.39,683.615 1212.95,683.615 1213.51,683.615 1214.07,683.615 1214.62,683.615 1215.18,683.615 1215.74,683.615 1216.3,683.615 1216.86,683.615 1217.42,683.615 1217.98,683.615 1218.54,683.615 1219.1,683.615 1219.66,683.615 1220.22,683.615 1220.78,683.615 1221.34,683.615 1221.89,683.615 1222.45,683.615 1223.01,683.615 1223.57,683.615 1224.13,683.615 1224.69,683.615 1225.25,683.615 1225.81,683.615 1226.37,683.615 1226.93,683.615 1227.49,683.615 1228.05,683.615 1228.61,683.615 1229.17,683.615 1229.72,683.615 1230.28,683.615 1230.84,683.615 1231.4,683.615 1231.96,683.615 1232.52,683.615 1233.08,683.615 1233.64,683.615 1234.2,683.615 1234.76,683.615 1235.32,683.615 1235.88,683.615 1236.44,683.615 1236.99,683.615 1237.55,683.615 1238.11,683.615 1238.67,683.615 1239.23,683.615 1239.79,683.615 1240.35,683.615 1240.91,683.615 1241.47,683.615 1242.03,683.615 1242.59,683.615 1243.15,683.615 1243.71,683.615 1244.26,683.615 1244.82,683.615 1245.38,683.615 1245.94,683.615 1246.5,683.615 1247.06,683.615 1247.62,683.615 1248.18,683.615 1248.74,683.615 1249.3,683.615 1249.86,683.615 1250.42,683.615 1250.98,683.615 1251.54,683.615 1252.09,683.615 1252.65,683.615 1253.21,683.615 1253.77,683.615 1254.33,683.615 1254.89,683.615 1255.45,683.615 1256.01,683.615 1256.57,683.615 1257.13,683.615 1257.69,683.615 1258.25,683.615 1258.81,683.615 1259.36,683.615 1259.92,683.615 1260.48,683.615 1261.04,683.615 1261.6,683.615 1262.16,683.615 1262.72,683.615 1263.28,683.615 1263.84,683.615 1264.4,683.615 1264.96,683.615 1265.52,683.615 1266.08,683.615 1266.63,683.615 1267.19,683.615 1267.75,683.615 1268.31,683.615 1268.87,683.615 1269.43,683.615 1269.99,683.615 1270.55,683.615 1271.11,683.615 1271.67,683.615 1272.23,683.615 1272.79,683.615 1273.35,683.615 1273.91,683.615 1274.46,683.615 1275.02,683.615 1275.58,683.615 1276.14,683.615 1276.7,683.615 1277.26,683.615 1277.82,683.615 1278.38,683.615 1278.94,683.615 1279.5,683.615 1280.06,683.615 1280.62,683.615 1281.18,683.615 1281.73,683.615 1282.29,683.615 1282.85,683.615 1283.41,683.615 1283.97,683.615 1284.53,683.615 1285.09,683.615 1285.65,683.615 1286.21,683.615 1286.77,683.615 1287.33,683.615 1287.89,683.615 1288.45,683.615 1289,683.615 1289.56,683.615 1290.12,683.615 1290.68,683.615 1291.24,683.615 1291.8,683.615 1292.36,683.615 1292.92,683.615 1293.48,683.615 1294.04,683.615 1294.6,683.615 1295.16,683.615 1295.72,683.615 1296.28,683.615 1296.83,683.615 1297.39,683.615 1297.95,683.615 1298.51,683.615 1299.07,683.615 1299.63,683.615 1300.19,683.615 1300.75,683.615 1301.31,683.615 1301.87,683.615 1302.43,683.615 1302.99,683.615 1303.55,683.615 1304.1,683.615 1304.66,683.615 1305.22,683.615 1305.78,683.615 1306.34,683.615 1306.9,683.615 1307.46,683.615 1308.02,683.615 1308.58,683.615 1309.14,683.615 1309.7,683.615 1310.26,683.615 1310.82,683.615 1311.38,683.615 1311.93,683.615 1312.49,683.615 1313.05,683.615 1313.61,683.615 1314.17,683.615 1314.73,683.615 1315.29,683.615 1315.85,683.615 1316.41,683.615 1316.97,683.615 1317.53,683.615 1318.09,683.615 1318.65,683.615 1319.2,683.615 1319.76,683.615 1320.32,683.615 1320.88,683.615 1321.44,683.615 1322,683.615 1322.56,683.615 1323.12,683.615 1323.68,683.615 1324.24,683.615 1324.8,683.615 1325.36,683.615 1325.92,683.615 1326.47,683.615 1327.03,683.615 1327.59,683.615 1328.15,683.615 1328.71,683.615 1329.27,683.615 1329.83,683.615 1330.39,683.615 1330.95,683.615 1331.51,683.615 1332.07,683.615 1332.63,683.615 1333.19,683.615 1333.75,683.615 1334.3,683.615 1334.86,683.615 1335.42,683.615 1335.98,683.615 1336.54,683.615 1337.1,683.615 1337.66,683.615 1338.22,683.615 1338.78,683.615 1339.34,683.615 1339.9,683.615 1340.46,683.615 1341.02,683.615 1341.57,683.615 1342.13,683.615 1342.69,683.615 1343.25,683.615 1343.81,683.615 1344.37,683.615 1344.93,683.615 1345.49,683.615 1346.05,683.615 1346.61,683.615 1347.17,683.615 1347.73,683.615 1348.29,683.615 1348.84,683.615 1349.4,683.615 1349.96,683.615 1350.52,683.615 1351.08,683.615 1351.64,683.615 1352.2,683.615 1352.76,683.615 1353.32,683.615 1353.88,683.615 1354.44,683.615 1355,683.615 1355.56,683.615 1356.12,683.615 1356.67,683.615 1357.23,683.615 1357.79,683.615 1358.35,683.615 1358.91,683.615 1359.47,683.615 1360.03,683.615 1360.59,683.615 1361.15,683.615 1361.71,683.615 1362.27,683.615 1362.83,683.615 1363.39,683.615 1363.94,683.615 1364.5,683.615 1365.06,683.615 1365.62,683.615 1366.18,683.615 1366.74,683.615 1367.3,683.615 1367.86,683.615 1368.42,683.615 1368.98,683.615 1369.54,683.615 1370.1,683.615 1370.66,683.615 1371.21,683.615 1371.77,683.615 1372.33,683.615 1372.89,683.615 1373.45,683.615 1374.01,683.615 1374.57,683.615 1375.13,683.615 1375.69,683.615 1376.25,683.615 1376.81,683.615 1377.37,683.615 1377.93,683.615 1378.49,683.615 1379.04,683.615 1379.6,683.615 1380.16,683.615 1380.72,683.615 1381.28,683.615 1381.84,683.615 1382.4,683.615 1382.96,683.615 1383.52,683.615 1384.08,683.615 1384.64,683.615 1385.2,683.615 1385.76,683.615 1386.31,683.615 1386.87,683.615 1387.43,683.615 1387.99,683.615 1388.55,683.615 1389.11,683.615 1389.67,683.615 1390.23,683.615 1390.79,683.615 1391.35,683.615 1391.91,683.615 1392.47,683.615 1393.03,683.615 1393.58,683.615 1394.14,683.615 1394.7,683.615 1395.26,683.615 1395.82,683.615 1396.38,683.615 1396.94,683.615 1397.5,683.615 1398.06,683.615 1398.62,683.615 1399.18,683.615 1399.74,683.615 1400.3,683.615 1400.86,683.615 1401.41,683.615 1401.97,683.615 1402.53,683.615 1403.09,683.615 1403.65,683.615 1404.21,683.615 1404.77,683.615 1405.33,683.615 1405.89,683.615 1406.45,683.615 1407.01,683.615 1407.57,683.615 1408.13,683.615 1408.68,683.615 1409.24,683.615 1409.8,683.615 1410.36,683.615 1410.92,683.615 1411.48,683.615 1412.04,683.615 1412.6,683.615 1413.16,683.615 1413.72,683.615 1414.28,683.615 1414.84,683.615 1415.4,683.615 1415.95,683.615 1416.51,683.615 1417.07,683.615 1417.63,683.615 1418.19,683.615 1418.75,683.615 1419.31,683.615 1419.87,683.615 1420.43,683.615 1420.99,683.615 1421.55,683.615 1422.11,683.615 1422.67,683.615 1423.23,683.615 1423.78,683.615 1424.34,683.615 1424.9,683.615 1425.46,683.615 1426.02,683.615 1426.58,683.615 1427.14,683.615 1427.7,683.615 1428.26,683.615 1428.82,683.615 1429.38,683.615 1429.94,683.615 1430.5,683.615 1431.05,683.615 1431.61,683.615 1432.17,683.615 1432.73,683.615 1433.29,683.615 1433.85,683.615 1434.41,683.615 1434.97,683.615 1435.53,683.615 1436.09,683.615 1436.65,683.615 1437.21,683.615 1437.77,683.615 1438.33,683.615 1438.88,683.615 1439.44,683.615 1440,683.615 1440.56,683.615 1441.12,683.615 1441.68,683.615 1442.24,683.615 1442.8,683.615 1443.36,683.615 1443.92,683.615 1444.48,683.615 1445.04,683.615 1445.6,683.615 1446.15,683.615 1446.71,683.615 1447.27,683.615 1447.83,683.615 1448.39,683.615 1448.95,683.615 1449.51,683.615 1450.07,683.615 1450.63,683.615 1451.19,683.615 1451.75,683.615 1452.31,683.615 1452.87,683.615 1453.42,683.615 1453.98,683.615 1454.54,683.615 1455.1,683.615 1455.66,683.615 1456.22,683.615 1456.78,683.615 1457.34,683.615 1457.9,683.615 1458.46,683.615 1459.02,683.615 1459.58,683.615 1460.14,683.615 1460.7,683.615 1461.25,683.615 1461.81,683.615 1462.37,683.615 1462.93,683.615 1463.49,683.615 1464.05,683.615 1464.61,683.615 1465.17,683.615 1465.73,683.615 1466.29,683.615 1466.85,683.615 1467.41,683.615 1467.97,683.615 1468.52,683.615 1469.08,683.615 1469.64,683.615 1470.2,683.615 1470.76,683.615 1471.32,683.615 1471.88,683.615 1472.44,683.615 1473,683.615 1473.56,683.615 1474.12,683.615 1474.68,683.615 1475.24,683.615 1475.79,683.615 1476.35,683.615 1476.91,683.615 1477.47,683.615 1478.03,683.615 1478.59,683.615 1479.15,683.615 1479.71,683.615 1480.27,683.615 1480.83,683.615 1481.39,683.615 1481.95,683.615 1482.51,683.615 1483.07,683.615 1483.62,683.615 1484.18,683.615 1484.74,683.615 1485.3,683.615 1485.86,683.615 1486.42,683.615 1486.98,683.615 1487.54,683.615 1488.1,683.615 1488.66,683.615 1489.22,683.615 1489.78,683.615 1490.34,683.615 1490.89,683.615 1491.45,683.615 1492.01,683.615 1492.57,683.615 1493.13,683.615 1493.69,683.615 1494.25,683.615 1494.81,683.615 1495.37,683.615 1495.93,683.615 1496.49,683.615 1497.05,683.615 1497.61,683.615 1498.16,683.615 1498.72,683.615 1499.28,683.615 1499.84,683.615 1500.4,683.615 1500.96,683.615 1501.52,683.615 1502.08,683.615 1502.64,683.615 1503.2,683.615 1503.76,683.615 1504.32,683.615 1504.88,683.615 1505.44,683.615 1505.99,683.615 1506.55,683.615 1507.11,683.615 1507.67,683.615 1508.23,683.615 1508.79,683.615 1509.35,683.615 1509.91,683.615 1510.47,683.615 1511.03,683.615 1511.59,683.615 1512.15,683.615 1512.71,683.615 1513.26,683.615 1513.82,683.615 1514.38,683.615 1514.94,683.615 1515.5,683.615 1516.06,683.615 1516.62,683.615 1517.18,683.615 1517.74,683.615 1518.3,683.615 1518.86,683.615 1519.42,683.615 1519.98,683.615 1520.53,683.615 1521.09,683.615 1521.65,683.615 1522.21,683.615 1522.77,683.615 1523.33,683.615 1523.89,683.615 1524.45,683.615 1525.01,683.615 1525.57,683.615 1526.13,683.615 1526.69,683.615 1527.25,683.615 1527.81,683.615 1528.36,683.615 1528.92,683.615 1529.48,683.615 1530.04,683.615 1530.6,683.615 1531.16,683.615 1531.72,683.615 1532.28,683.615 1532.84,683.615 1533.4,683.615 1533.96,683.615 1534.52,683.615 1535.08,683.615 1535.63,683.615 1536.19,683.615 1536.75,683.615 1537.31,683.615 1537.87,683.615 1538.43,683.615 1538.99,683.615 1539.55,683.615 1540.11,683.615 1540.67,683.615 1541.23,683.615 1541.79,683.615 1542.35,683.615 1542.9,683.615 1543.46,683.615 1544.02,683.615 1544.58,683.615 1545.14,683.615 1545.7,683.615 1546.26,683.615 1546.82,683.615 1547.38,683.615 1547.94,683.615 1548.5,683.615 1549.06,683.615 1549.62,683.615 1550.18,683.615 1550.73,683.615 1551.29,683.615 1551.85,683.615 1552.41,683.615 1552.97,683.615 1553.53,683.615 1554.09,683.615 1554.65,683.615 1555.21,683.615 1555.77,683.615 1556.33,683.615 1556.89,683.615 1557.45,683.615 1558,683.615 1558.56,683.615 1559.12,683.615 1559.68,683.615 1560.24,683.615 1560.8,683.615 1561.36,683.615 1561.92,683.615 1562.48,683.615 1563.04,683.615 1563.6,683.615 1564.16,683.615 1564.72,683.615 1565.28,683.615 1565.83,683.615 1566.39,683.615 1566.95,683.615 1567.51,683.615 1568.07,683.615 1568.63,683.615 1569.19,683.615 1569.75,683.615 1570.31,683.615 1570.87,683.615 1571.43,683.615 1571.99,683.615 1572.55,683.615 1573.1,683.615 1573.66,683.615 1574.22,683.615 1574.78,683.615 1575.34,683.615 1575.9,683.615 1576.46,683.615 1577.02,683.615 1577.58,683.615 1578.14,683.615 1578.7,683.615 1579.26,683.615 1579.82,683.615 1580.37,683.615 1580.93,683.615 1581.49,683.615 1582.05,683.615 1582.61,683.615 1583.17,683.615 1583.73,683.615 1584.29,683.615 1584.85,683.615 1585.41,683.615 1585.97,683.615 1586.53,683.615 1587.09,683.615 1587.65,683.615 1588.2,683.615 1588.76,683.615 1589.32,683.615 1589.88,683.615 1590.44,683.615 1591,683.615 1591.56,683.615 1592.12,683.615 1592.68,683.615 1593.24,683.615 1593.8,683.615 1594.36,683.615 1594.92,683.615 1595.47,683.615 1596.03,683.615 1596.59,683.615 1597.15,683.615 1597.71,683.615 1598.27,683.615 1598.83,683.615 1599.39,683.615 1599.95,683.615 1600.51,683.615 1601.07,683.615 1601.63,683.615 1602.19,683.615 1602.74,683.615 1603.3,683.615 1603.86,683.615 1604.42,683.615 1604.98,683.615 1605.54,683.615 1606.1,683.615 1606.66,683.615 1607.22,683.615 1607.78,683.615 1608.34,683.615 1608.9,683.615 1609.46,683.615 1610.02,683.615 1610.57,683.615 1611.13,683.615 1611.69,683.615 1612.25,683.615 1612.81,683.615 1613.37,683.615 1613.93,683.615 1614.49,683.615 1615.05,683.615 1615.61,683.615 1616.17,683.615 1616.73,683.615 1617.29,683.615 1617.84,683.615 1618.4,683.615 1618.96,683.615 1619.52,683.615 1620.08,683.615 1620.64,683.615 1621.2,683.615 1621.76,683.615 1622.32,683.615 1622.88,683.615 1623.44,683.615 1624,683.615 1624.56,683.615 1625.11,683.615 1625.67,683.615 1626.23,683.615 1626.79,683.615 1627.35,683.615 1627.91,683.615 1628.47,683.615 1629.03,683.615 1629.59,683.615 1630.15,683.615 1630.71,683.615 1631.27,683.615 1631.83,683.615 1632.39,683.615 1632.94,683.615 1633.5,683.615 1634.06,683.615 1634.62,683.615 1635.18,683.615 1635.74,683.615 1636.3,683.615 1636.86,683.615 1637.42,683.615 1637.98,683.615 1638.54,683.615 1639.1,683.615 1639.66,683.615 1640.21,683.615 1640.77,683.615 1641.33,683.615 1641.89,683.615 1642.45,683.615 1643.01,683.615 1643.57,683.615 1644.13,683.615 1644.69,683.615 1645.25,683.615 1645.81,683.615 1646.37,683.615 1646.93,683.615 1647.48,683.615 1648.04,683.615 1648.6,683.615 1649.16,683.615 1649.72,683.615 1650.28,683.615 1650.84,683.615 1651.4,683.615 1651.96,683.615 1652.52,683.615 1653.08,683.615 1653.64,683.615 1654.2,683.615 1654.76,683.615 1655.31,683.615 1655.87,683.615 1656.43,683.615 1656.99,683.615 1657.55,683.615 1658.11,683.615 1658.67,683.615 1659.23,683.615 1659.79,683.615 1660.35,683.615 1660.91,683.615 1661.47,683.615 1662.03,683.615 1662.58,683.615 1663.14,683.615 1663.7,683.615 1664.26,683.615 1664.82,683.615 1665.38,683.615 1665.94,683.615 1666.5,683.615 1667.06,683.615 1667.62,683.615 1668.18,683.615 1668.74,683.615 1669.3,683.615 1669.85,683.615 1670.41,683.615 1670.97,683.615 1671.53,683.615 1672.09,683.615 1672.65,683.615 1673.21,683.615 1673.77,683.615 1674.33,683.615 1674.89,683.615 1675.45,683.615 1676.01,683.615 1676.57,683.615 1677.13,683.615 1677.68,683.615 1678.24,683.615 1678.8,683.615 1679.36,683.615 1679.92,683.615 1680.48,683.615 1681.04,683.615 1681.6,683.615 1682.16,683.615 1682.72,683.615 1683.28,683.615 1683.84,683.615 1684.4,683.615 1684.95,683.615 1685.51,683.615 1686.07,683.615 1686.63,683.615 1687.19,683.615 1687.75,683.615 1688.31,683.615 1688.87,683.615 1689.43,683.615 1689.99,683.615 1690.55,683.615 1691.11,683.615 1691.67,683.615 1692.23,683.615 1692.78,683.615 1693.34,683.615 1693.9,683.615 1694.46,683.615 1695.02,683.615 1695.58,683.615 1696.14,683.615 1696.7,683.615 1697.26,683.615 1697.82,683.615 1698.38,683.615 1698.94,683.615 1699.5,683.615 1700.05,683.615 1700.61,683.615 1701.17,683.615 1701.73,683.615 1702.29,683.615 1702.85,683.615 1703.41,683.615 1703.97,683.615 1704.53,683.615 1705.09,683.615 1705.65,683.615 1706.21,683.615 1706.77,683.615 1707.32,683.615 1707.88,683.615 1708.44,683.615 1709,683.615 1709.56,683.615 1710.12,683.615 1710.68,683.615 1711.24,683.615 1711.8,683.615 1712.36,683.615 1712.92,683.615 1713.48,683.615 1714.04,683.615 1714.6,683.615 1715.15,683.615 1715.71,683.615 1716.27,683.615 1716.83,683.615 1717.39,683.615 1717.95,683.615 1718.51,683.615 1719.07,683.615 1719.63,683.615 1720.19,683.615 1720.75,683.615 1721.31,683.615 1721.87,683.615 1722.42,683.615 1722.98,683.615 1723.54,683.615 1724.1,683.615 1724.66,683.615 1725.22,683.615 1725.78,683.615 1726.34,683.615 1726.9,683.615 1727.46,683.615 1728.02,683.615 1728.58,683.615 1729.14,683.615 1729.69,683.615 1730.25,683.615 1730.81,683.615 1731.37,683.615 1731.93,683.615 1732.49,683.615 1733.05,683.615 1733.61,683.615 1734.17,683.615 1734.73,683.615 1735.29,683.615 1735.85,683.615 1736.41,683.615 1736.97,683.615 1737.52,683.615 1738.08,683.615 1738.64,683.615 1739.2,683.615 1739.76,683.615 1740.32,683.615 1740.88,683.615 1741.44,683.615 1742,683.615 1742.56,683.615 1743.12,683.615 1743.68,683.615 1744.24,683.615 1744.79,683.615 1745.35,683.615 1745.91,683.615 1746.47,683.615 1747.03,683.615 1747.59,683.615 1748.15,683.615 1748.71,683.615 1749.27,683.615 1749.83,683.615 1750.39,683.615 1750.95,683.615 1751.51,683.615 1752.06,683.615 1752.62,683.615 1753.18,683.615 1753.74,683.615 1754.3,683.615 1754.86,683.615 1755.42,683.615 1755.98,683.615 1756.54,683.615 1757.1,683.615 1757.66,683.615 1758.22,683.615 1758.78,683.615 1759.34,683.615 1759.89,683.615 1760.45,683.615 1761.01,683.615 1761.57,683.615 1762.13,683.615 1762.69,683.615 1763.25,683.615 1763.81,683.615 1764.37,683.615 1764.93,683.615 1765.49,683.615 1766.05,683.615 1766.61,683.615 1767.16,683.615 1767.72,683.615 1768.28,683.615 1768.84,683.615 1769.4,683.615 1769.96,683.615 1770.52,683.615 1771.08,683.615 1771.64,683.615 1772.2,683.615 1772.76,683.615 1773.32,683.615 1773.88,683.615 1774.43,683.615 1774.99,683.615 1775.55,683.615 1776.11,683.615 1776.67,683.615 1777.23,683.615 1777.79,683.615 1778.35,683.615 1778.91,683.615 1779.47,683.615 1780.03,683.615 1780.59,683.615 1781.15,683.615 1781.71,683.615 1782.26,683.615 1782.82,683.615 1783.38,683.615 1783.94,683.615 1784.5,683.615 1785.06,683.615 1785.62,683.615 1786.18,683.615 1786.74,683.615 1787.3,683.615 1787.86,683.615 1788.42,683.615 1788.98,683.615 1789.53,683.615 1790.09,683.615 1790.65,683.615 1791.21,683.615 1791.77,683.615 1792.33,683.615 1792.89,683.615 1793.45,683.615 1794.01,683.615 1794.57,683.615 1795.13,683.615 1795.69,683.615 1796.25,683.615 1796.8,683.615 1797.36,683.615 1797.92,683.615 1798.48,683.615 1799.04,683.615 1799.6,683.615 1800.16,683.615 1800.72,683.615 1801.28,683.615 1801.84,683.615 1802.4,683.615 1802.96,683.615 1803.52,683.615 1804.08,683.615 1804.63,683.615 1805.19,683.615 1805.75,683.615 1806.31,683.615 1806.87,683.615 1807.43,683.615 1807.99,683.615 1808.55,683.615 1809.11,683.615 1809.67,683.615 1810.23,683.615 1810.79,683.615 1811.35,683.615 1811.9,683.615 1812.46,683.615 1813.02,683.615 1813.58,683.615 1814.14,683.615 1814.7,683.615 1815.26,683.615 1815.82,683.615 1816.38,683.615 1816.94,683.615 1817.5,683.615 1818.06,683.615 1818.62,683.615 1819.18,683.615 1819.73,683.615 1820.29,683.615 1820.85,683.615 1821.41,683.615 1821.97,683.615 1822.53,683.615 1823.09,683.615 1823.65,683.615 1824.21,683.615 1824.77,683.615 1825.33,683.615 1825.89,683.615 1826.45,683.615 1827,683.615 1827.56,683.615 1828.12,683.615 1828.68,683.615 1829.24,683.615 1829.8,683.615 1830.36,683.615 1830.92,683.615 1831.48,683.615 1832.04,683.615 1832.6,683.615 1833.16,683.615 1833.72,683.615 1834.27,683.615 1834.83,683.615 1835.39,683.615 1835.95,683.615 1836.51,683.615 1837.07,683.615 1837.63,683.615 1838.19,683.615 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ¬± $(se.err)\n    Projected Energy: $(v.val) ¬± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.032917638480067 ¬± 0.021745032966523713\nProjected Energy: -4.015238553389317 ¬± (0.006280543190516852, 0.006036803929668544)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from solve as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; Œ± = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-Œ±.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ¬± 0.0029\n  with uncertainty of ¬± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13√ó6 DataFrame\n Row ‚îÇ blocks  mean      std_err      std_err_err  p_cov       mj\n     ‚îÇ Int64   Float64   Float64      Float64      Float64     Float64\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n   1 ‚îÇ  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 ‚îÇ   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 ‚îÇ   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 ‚îÇ   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 ‚îÇ    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 ‚îÇ    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 ‚îÇ    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 ‚îÇ     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 ‚îÇ     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 ‚îÇ     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 ‚îÇ      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 ‚îÇ      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 ‚îÇ      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ästd err vs blocking steps‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n               ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n    0.00423501 ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ m test\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ std err\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚°†‚¢∫‚†í‚†í‚¢∫‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚°Ä‚†Ä‚†Ä‚°Ü‚£Ä‚†§‚°ó‚†â‚†Ä‚¢∏‚†Ä‚†Ä‚¢∏‚°Ü‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°ß‚†§‚†î‚°ó‚†ä‚†â‚°è‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚¢∏‚¢£‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚†Å‚°á‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†∏‚°Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†¥‚†Å‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚†Ä‚°á‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚†ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£¶‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°†‚†î‚†í‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚†§‚†í‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†í‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚îÇ\n   -0.00012335 ‚îÇ‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†ß‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚îÇ\n               ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n               ‚†Ä0.64‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Äk‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä13.36‚†Ä\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; Œ± = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; Œ±=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.œÉ_f using x_by_y_linear. The standard error estimate r.œÉ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.Œ¥_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and D√≠az-Franc√©s, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ¬± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*œÉ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3√ó3 DataFrame\n Row ‚îÇ res      res_l    res_u\n     ‚îÇ Float64  Float64  Float64\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n   1 ‚îÇ    11.5  1.7282   1.7282\n   2 ‚îÇ    13.0  1.7282   1.7282\n   3 ‚îÇ    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dœÑ=df.dœÑ[end], skip=0)\ngrowth_witness(sim::PMCSimulation, [b]; kwargs...)\n\nCalculate the growth witness directly from the result (DataFrame or PMCSimulation) of solveing a ProjectorMonteCarloProblem. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0)\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ‚â• 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dœÑ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n)\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    dœÑ=determine_constant_time_step(df),\n    kwargs...\n)\ngrowth_estimator(sim::PMCSimulation; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively.  Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means. dœÑ is the time step and weights a function that calulates the weights. See w_exp and w_lin.\n\nE_gr = E_r - frac1dœÑln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dœÑ^2) and potentially increased confidence intervals compared to the (biased) shift estimator.  Error propagation is done with MonteCarloMeasurements. Propagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a PMCSimulation or DataFrame returned by solve. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\ngrowth_estimator_analysis(sim::PMCSimulation; kwargs...)\n-> (; df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df or PMCSimulation sim. repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\nsim = solve(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(sim; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"‚ü®S‚ü©\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-Tuple{AbstractVector, AbstractVector, AbstractVector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dœÑ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n)\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    dœÑ=df.dœÑ[end],\n    kwargs...\n)\nmixed_estimator(sim::PMCSimulation, h; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up).  Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means. dœÑ is the time step and weights a function that calulates the weights. See w_exp and w_lin.  Additional keyword arguments are passed on to ratio_of_means.\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dœÑ^2) and potentially increased confidence intervals compared to the unweighted ratio.  Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame or PMCSimulation returned by solve. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\nmixed_estimator_analysis(sim::PMCSimulation; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df or PMCSimulation sim returned from solve repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\nsim = solve(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(sim; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"‚ü®S‚ü©\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(df::DataFrame; skip=0, hproj=:hproj, vproj=:vproj, kwargs...)\nprojected_energy(sim::PMCSimulation; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy(...) to set these up in ProjectorMonteCarloProblem). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dœÑ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n)\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n)\nrayleigh_replica_estimator(sim::PMCSimulation; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame or PMCSimulation returned by solve. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means. dœÑ is the time step and weights a function that calulates the weights. See w_exp and w_lin. Additional keyword arguments are passed on to ratio_of_means.\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\nrayleigh_replica_estimator_analysis(sim::PMCSimulation; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df or PMCSimulation sim returned from solve repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\nsim = solve(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(sim; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"‚ü®S‚ü©\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...)\nshift_estimator(sim::PMCSimulation; kwargs...)\n-> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dœÑ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dœÑ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin, growth_estimator, mixed_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dœÑ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dœÑ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp, growth_estimator, mixed_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\nreplica_fidelity(sim::PMCSimulation; kwargs...)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the PMCSimulation or DataFrame returned by solve, using replicas _1 and _2. Calls ratio_of_means to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |œà‚ü© and |œï‚ü© is defined as\n\nF(œàœï) = fracœàœï^2œàœàœïœï \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v‚ãÖv == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\nvariational_energy_estimator(sim::PMCSimulation; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame and PMCSimulation versions can extract the relevant information from the result of solve. Set up the ProjectorMonteCarloProblem with the keyword argument replica_strategy = AllOverlaps(R) and R ‚â• 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.¬±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:¬±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ¬± 0.029\n  with uncertainty of ¬± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.¬±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; Œ± = 0.01) -> k\nmtest(table::NamedTuple; Œ± = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-Œ± after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, œÉ_f, Œ¥_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nœÉ_f::T: std from linear propagation\nŒ¥_y::T: coefficient of variation for denominator (‚â§ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, Œº, œÉ)\nparticles(samples, Œº::AbstractVector, Œ£::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, œÉ_f, Œ¥_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nœÉ_f standard deviation of f from linear error propagation (normal approximation)\nŒ¥_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(Œº_x,Œº_y,œÉ_x,œÉ_y,œÅ) -> f, œÉ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and D√≠az-Franc√©s, Rubio (2013).\n\nœÉ_f = sqrtfracœÉ_xŒº_y^2 + fracŒº_x œÉ_yŒº_y^2^2 - frac2 œÅ Œº_xŒº_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3√ó7 DataFrame\n Row ‚îÇ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     ‚îÇ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n   1 ‚îÇ    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 ‚îÇ    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 ‚îÇ    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1√ó9 DataFrame\n Row ‚îÇ val       val_l      val_u      val_f     val_œÉ_f    val_Œ¥_y    val_k  val_blocks  val_success\n     ‚îÇ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n   1 ‚îÇ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.determine_constant_time_step-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.determine_constant_time_step","text":"determine_constant_time_step(df) -> dœÑ\n\nGiven a DataFrame df, determine the time step that was used to compute it. Throw an error if time step is not constant.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7√ó6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS‚Ä¶</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple‚Ä¶</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.454149</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.3936e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">1.612e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">9.248e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.704e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.885e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">8.697e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ‚â† basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10√ó10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10√ó10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nŒîE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ŒîE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(fs\"|0 0 4 0 0‚ü©\"; u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14√ó14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ          ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ‚ãÖ        0.282843  0.565685   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n   ‚ãÖ        0.8       0.4       0.581966  0.4        ‚ãÖ        0.4        0.282843  0.565685   ‚ãÖ        0.69282   0.69282    ‚ãÖ         ‚ãÖ \n   ‚ãÖ        0.4       0.8       0.4       2.81803   0.4        ‚ãÖ          ‚ãÖ        0.565685  0.282843  0.69282    ‚ãÖ        0.69282    ‚ãÖ \n   ‚ãÖ        0.8       0.4        ‚ãÖ        0.4       0.581966  0.4        0.282843  0.565685   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282\n   ‚ãÖ        0.4       0.8       0.4        ‚ãÖ        0.4       2.81803     ‚ãÖ        0.565685  0.282843   ‚ãÖ        0.69282    ‚ãÖ        0.69282\n   ‚ãÖ        0.565685   ‚ãÖ        0.282843   ‚ãÖ        0.282843   ‚ãÖ        -0.472136  0.8        ‚ãÖ        0.489898   ‚ãÖ         ‚ãÖ        0.489898\n   ‚ãÖ        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ‚ãÖ         ‚ãÖ        0.565685   ‚ãÖ        0.282843   ‚ãÖ        0.282843    ‚ãÖ        0.8       8.47214    ‚ãÖ        0.489898  0.489898   ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    ‚ãÖ         ‚ãÖ         0.489898  0.489898   ‚ãÖ        1.56393    ‚ãÖ         ‚ãÖ         ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282    ‚ãÖ         ‚ãÖ        0.69282     ‚ãÖ        0.489898  0.489898   ‚ãÖ        6.03607    ‚ãÖ         ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    ‚ãÖ          ‚ãÖ        0.489898  0.489898   ‚ãÖ         ‚ãÖ        6.03607    ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    0.489898  0.489898   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0‚ü©\"\n fs\"|0 1 2 1 0‚ü©\"\n fs\"|1 0 2 0 1‚ü©\"\n fs\"|1 0 1 2 0‚ü©\"\n fs\"|0 0 1 1 2‚ü©\"\n fs\"|0 2 1 0 1‚ü©\"\n fs\"|2 1 1 0 0‚ü©\"\n fs\"|0 2 0 2 0‚ü©\"\n fs\"|1 1 0 1 1‚ü©\"\n fs\"|2 0 0 0 2‚ü©\"\n fs\"|0 0 0 3 1‚ü©\"\n fs\"|3 0 0 1 0‚ü©\"\n fs\"|0 1 0 0 3‚ü©\"\n fs\"|1 3 0 0 0‚ü©\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14√ó14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14√ó14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ          ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ‚ãÖ        0.282843  0.565685   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n   ‚ãÖ        0.8       0.4       0.581966  0.4        ‚ãÖ        0.4        0.282843  0.565685   ‚ãÖ        0.69282   0.69282    ‚ãÖ         ‚ãÖ \n   ‚ãÖ        0.4       0.8       0.4       2.81803   0.4        ‚ãÖ          ‚ãÖ        0.565685  0.282843  0.69282    ‚ãÖ        0.69282    ‚ãÖ \n   ‚ãÖ        0.8       0.4        ‚ãÖ        0.4       0.581966  0.4        0.282843  0.565685   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282\n   ‚ãÖ        0.4       0.8       0.4        ‚ãÖ        0.4       2.81803     ‚ãÖ        0.565685  0.282843   ‚ãÖ        0.69282    ‚ãÖ        0.69282\n   ‚ãÖ        0.565685   ‚ãÖ        0.282843   ‚ãÖ        0.282843   ‚ãÖ        -0.472136  0.8        ‚ãÖ        0.489898   ‚ãÖ         ‚ãÖ        0.489898\n   ‚ãÖ        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ‚ãÖ         ‚ãÖ        0.565685   ‚ãÖ        0.282843   ‚ãÖ        0.282843    ‚ãÖ        0.8       8.47214    ‚ãÖ        0.489898  0.489898   ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    ‚ãÖ         ‚ãÖ         0.489898  0.489898   ‚ãÖ        1.56393    ‚ãÖ         ‚ãÖ         ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282    ‚ãÖ         ‚ãÖ        0.69282     ‚ãÖ        0.489898  0.489898   ‚ãÖ        6.03607    ‚ãÖ         ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    ‚ãÖ          ‚ãÖ        0.489898  0.489898   ‚ãÖ         ‚ãÖ        6.03607    ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    0.489898  0.489898   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14√ó14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0‚ü©\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ‚âà all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0‚ü©\" => -0.0214153\n  fs\"|2 0 0 0 2‚ü©\" => -0.00237613\n  fs\"|0 0 4 0 0‚ü©\" => -0.980348\n  fs\"|0 0 0 3 1‚ü©\" => 0.00363555\n  fs\"|2 1 1 0 0‚ü©\" => -0.0119687\n  fs\"|1 0 2 0 1‚ü©\" => 0.0768085\n  fs\"|1 3 0 0 0‚ü©\" => 0.00363555\n  fs\"|0 1 2 1 0‚ü©\" => 0.177701\n  fs\"|0 0 1 1 2‚ü©\" => -0.0119687\n  fs\"|3 0 0 1 0‚ü©\" => 0.00195478\n  fs\"|0 2 0 2 0‚ü©\" => -0.0138439\n  fs\"|1 1 0 1 1‚ü©\" => -0.00234782\n  fs\"|0 1 0 0 3‚ü©\" => 0.00195478\n  fs\"|0 2 1 0 1‚ü©\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i œµ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential œµ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleœÉ t_œÉ a^_iœÉ a_jœÉ +\n  frac12sum_iœÉ u_œÉœÉ n_iœÉ (n_iœÉ - 1) +\n  sum_iœÉœÑu_œÉœÑ n_iœÉ n_iœÑ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iœÉd v_œÉd x_di^2 n_iœÉ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C √ó D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k œµ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k Œ¥_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines œµ_k =t*dispersion(k)\nhubbard_dispersion: œµ_k = -2t cos(k)\ncontinuum_dispersion: œµ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k Œ¥_r+qp+k\n\nArguments\n\naddress: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k œµ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k Œ¥_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines œµ_k =t*dispersion(k)\nhubbard_dispersion: œµ_k = -2t cos(k)\ncontinuum_dispersion: œµ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, Œ∑, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions\n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl\n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x so that single particle energies are\n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl\n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between basis states of any noninteracting energy level, leading to many more offdiagonals and fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The   allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults   to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make   the first dimension the largest.\nŒ∑: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the   interactions. The values are always scaled relative to the first dimension, which sets   the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed   to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are   ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without   comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, Œ∑, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions\n\nhatH = sum_i œµ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x so that single particle energies are\n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator basis functions, see four_oscillator_integral_general, with the additional restriction that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults   to a 1D spectrum with number of levels matching modes of addr. Will be sorted to   make the first dimension the largest.\nŒ∑: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets   the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed   to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are   ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi œµ_mathbfi n_mathbfi\n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x so that single particle energies are\n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix representation of this Hamiltonian for a single particle is completely dense in the even-parity subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nŒ∑s = (): a tuple of aspect ratios for the remaining dimensions (Œ∑_y, ...). Should be empty   for a 1D trap or contain values greater than 1.0. The maximum index   in other dimensions will be the largest even number less than M/Œ∑_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,   including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if   only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of\nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kœÉk^2 n_kœÉ \n    quad + sum_pqkœÉœÉ T_pqk a^_p-kœÉ a^_q+kœÉ a_qœÉ a_pœÉ \n    quad + sum_pqskkœÉœÉ Q_kka^_p-kœÉ a^_q+kœÉ a^_s+k-kœÉ\n                                       a_sœÉ a_qœÉ a_pœÉ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + œâN - v Œ£‚Çñ(a‚Çñ^ + a‚Çñ)\n\nwhere p is the total momentum, p_f = Œ£_k k a‚Çñ^ a‚Çñ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2œÄl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons œâ.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0‚ü©{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M√∑2, M√∑2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M√∑2, M√∑2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(fs\"|1 1 1‚ü©\"; u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(fs\"|1 1 1‚ü©\"; u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address Œ± is replaced by frac12(Œ±  Œ±) for even and odd parity, respectively, where Œ±ÃÑ == reverse(Œ±).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(fs\"|0 2 1‚ü©\"; u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ‚âà eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ‚âà eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ‚â§ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0‚ü©{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ‚â§ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, œÉ=1, œÑ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_œÉœÑ(d) = frac1M _i n_œÉi (n_œÑi+d - Œ¥_0dŒ¥_œÉœÑ)\n\nFor multicomponent addresses, œÉ and œÑ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2√ó2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)√óSOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|‚áÖ‚ãÖ‚Üì‚Üë‚ü©\")\n2√ó2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)√óSOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|‚áÖ‚ãÖ‚Üì‚Üë‚ü©\")\n2√ó2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)√óSOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|‚áÖ‚ãÖ‚Üì‚Üë‚ü©\")\n2√ó2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)√óSOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2œÄM a^_s b^_p  b_q a_r Œ¥_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2œÄM a^_s a^_p  a_q a_r Œ¥_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ‚â§ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ‚â§ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iœÉ = hat a^_iœÉ hat a_iœÉ\n\nwhere i is the mode and œÉ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0‚ü©\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0‚ü©\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x‚ãÖ(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1‚ü©\", -3.0)\n (fs\"|2 2 2‚ü©\", -2.449489742783178)\n (fs\"|3 1 2‚ü©\", -2.0)\n (fs\"|4 1 1‚ü©\", -2.8284271247461903)\n (fs\"|4 2 0‚ü©\", -2.0)\n (fs\"|3 3 0‚ü©\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ‚Ä¶.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb‚ãÖ(1:7) == onr(b)‚ãÖ(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w‚ãÖop(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ‚ãÖ A ‚ãÖ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3√ó4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3√ó4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions,\n\n    mathcalI(ijkl) = int_-infty^infty dx \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function, and is non-zero unless i+j+k+l is odd. See e.g. Titchmarsh (1948). This is a generalisation of the closed form in Papenbrock (2002), which is is the special case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin,\n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state corresponds to a D-tuple of harmonic oscillator indices mathbfn_i. S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of phi_i(0) to speed-up the calculation. The values can be calculated with log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem\nsolve(::ExactDiagonalizationProblem)\ninit(::ExactDiagonalizationProblem)","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1‚ü©\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1‚ü©\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1‚ü©\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ‚âà values[1]\ntrue\n\nSee also solve(::ExactDiagonalizationProblem), init(::ExactDiagonalizationProblem), KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#CommonSolve.solve-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.solve","text":"solve(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nSolve an ExactDiagonalizationProblem p directly. Optionally specify an algorithm. Returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\nSee also solve(::ProjectorMonteCarloProblem).\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#CommonSolve.init-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\n```jldoctest julia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian) BasisSetRepresentation(HubbardReal1D(fs\"|1 0 0‚ü©\"; u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3√ó3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:   0.0  -1.0  -1.0  -1.0   0.0  -1.0  -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating BasisSetRepresentation(HubbardReal1D(fs\"|1 0 0‚ü©\"; u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2√ó2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:   0.0  -1.0  -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues 3-element Vector{Float64}:  -1.9999999999999996   0.9999999999999997   1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector 3-element Vector{Float64}:  -0.5773502691896257  -0.5773502691896255  -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec DVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()   fs\"|0 0 1‚ü©\" => -0.57735   fs\"|0 1 0‚ü©\" => -0.57735   fs\"|1 0 0‚ü©\" => -0.57735   ``Has methods for [dimension](@ref), [sparse](@ref), [Matrix](@ref), [starting_address`](@ref).\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nŒ±mathrmnaddrrangle\n\nReturns the new address naddr and the factor Œ±. The value of Œ± is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0‚ü©\" => 1\n\njulia> fs\"|0 1 2 0‚ü©\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3‚ü©‚äó|0 1 0‚ü©\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|‚Üë‚Üì‚Üë‚ü©\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0‚ü©{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0‚ü©{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ‚â§ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0‚ü©\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4‚ü©\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Œ£_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen)\n\nCompute the new address of a hopping event for the Bose-Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) √∑ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic.\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ‚â§ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|‚ãÖ‚Üë‚Üë‚Üë‚ãÖ‚ü©\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4‚ü©\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|‚Üë‚Üì‚Üì‚ü©\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3‚ü©{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n‚Üí (nadd, Œ±)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of Œ± is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3‚ü©{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, Œ± = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dœÑ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, Œ∂ = 0.08, Œæ = Œ∂^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter Œ∂ and Œæ after projecting onto projector.\n\nS^n+1 = S^n -fracŒ∂dœÑlnleft(fracPŒ®^(n+1)PŒ®^(n)right)-fracŒædœÑlnleft(fracPŒ®^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, Œ∂ = 0.08, Œæ = Œ∂^2/4, Œ± = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters Œ∂ and Œæ.\n\nS^n+1 = S^n -fracŒ∂dœÑlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracŒædœÑlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-Œ±)*walkernumber() + Œ±*UniformProjector()‚ãÖœà computed with walkernumber() and UniformProjector(). When Œæ = Œ∂^2/4 this corresponds to critical damping with a damping time scale T = 2/Œ∂.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, Œ∂ = 0.08, Œæ = Œ∂^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter Œ∂ and Œæ.\n\nS^n+1 = S^n -fracŒ∂dœÑlnleft(fracŒ®_1^n+1Œ®_1^nright)-fracŒædœÑlnleft(fracŒ®_1^n+1Œ®_1^texttargetright)\n\nWhen Œæ = Œ∂^2/4 this corresponds to critical damping with a damping time scale T = 2/Œ∂.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, Œ∂ = 0.08, Œæ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter Œ∂ and Œæ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, Œ∂ = 0.08,   Œæ = Œ∂^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dœÑ) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\nùêì = 1 + dœÑ(S - ùêá)\n\nwhere ùêá is the hamiltonian and S is the shift.\n\nùêì represents the first order expansion of the exponential evolution operator of the imaginary-time Schr√∂dinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(Œ∂ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter Œ∂.\n\nS^n+1 = S^n -fracŒ∂dœÑlnleft(fracŒ®_1^n+1Œ®_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, Œ∂ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter Œ∂.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntargetwalkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; targetwalkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nŒ∂ = 0.08: Damping parameter for the shift update.\nŒæ = Œ∂^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; targetwalkers, Œ∂, Œæ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * targetwalkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dœÑ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(‚ãÖ,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dœÑ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation, and solve(::ExactDiagonalizationProblem).\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndœÑ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> address = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(address);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(fs\\\"|1 2 3‚ü©\\\"; u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nœÑ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, Œ∂ = 0.08, Œæ = Œ∂^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ‚âà num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|‚ãÖ‚Üë‚áÖ‚Üì‚ãÖ‚ü©\" => 1.0, fs\"|‚Üì‚Üì‚ãÖ‚Üë‚Üë‚ü©\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|‚Üì‚Üì‚ãÖ‚Üë‚Üë‚ü©\" => 0.5\n  fs\"|‚ãÖ‚Üë‚áÖ‚Üì‚ãÖ‚ü©\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dœÑ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dœÑ","text":"update_dœÑ(s<:TimeStepStrategy, dœÑ, tnorm) -> new dœÑ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI. MPI is a standard for parallel and distributed computing, and it is widely used in high-performance computing. Rimu provides support for MPI to enable parallel computations on multiple nodes.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with 2 MPI ranks with mpirun -n 2 julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum, which is located at mode 5 in the momentum grid. We put all 10 particles, all in the zero momentum mode.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(fs\"|0 0 0 0 10 0 0 0 0 0‚ü©\"; u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for MPI calculations, as they will typically run non-interactively. The reports will be written to disk and can be inspected later. This has the additional benefit of reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The default settings will ensure that only the root MPI rank will write to the file, which is reasonable, and that data is saved in chunks of 1000 time steps. We choose to suppress progress messages with setting io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"For running parallel computations with MPI, it is important that a compatible state vector is used. Here we explicitly set up an MPI-enabled state vector, PDVec, which is automatically MPI-distributed over the available number of MPI ranks. In addition, threading will be used with all threads available to Julia.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0‚ü©\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10000 walkers and for 10000 time steps. We will also compute the projected energy by passing a ProjectedEnergy object as a post_step_strategy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"problem = ProjectorMonteCarloProblem(H;\n    start_at=initial_vector,\n    reporting_strategy,\n    post_step_strategy=ProjectedEnergy(H, initial_vector),\n    targetwalkers=10_000,\n    time_step=1e-4,\n    last_step=10_000\n);","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"simulation = solve(problem);\n\n@mpi_root println(\"Simulation success = \", simulation.success)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Simulation success = true\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Once the calculation is done, the results are available in the arrow file on disk.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In a typical workflow, the simulation results would be loaded from disk and analysed in the REPL or with a separate script. The arrow file can be loaded into a DataFrame with metadata using the load_df function.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schr√∂dinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Bl√∂te PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schr√∂dinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija ƒåufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. ProjectorMonteCarloProblem, ExactDiagonalizationProblem.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. ƒåufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelm√ºller, D. Huber, M. ƒåufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/œÄ^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|‚Üë‚Üë‚Üì‚Üì‚ü©\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|‚Üë‚Üì‚Üë‚Üì‚ü©\" => 1.0\n  fs\"|‚Üë‚Üë‚Üì‚Üì‚ü©\" => 4.0\n  fs\"|‚Üì‚Üë‚Üì‚Üë‚ü©\" => 1.0\n  fs\"|‚Üì‚Üë‚Üë‚Üì‚ü©\" => -1.0\n  fs\"|‚áÖ‚ãÖ‚ãÖ‚áÖ‚ü©\" => 1.0\n  fs\"|‚Üë‚Üì‚Üì‚Üë‚ü©\" => -1.0\n  fs\"|‚ãÖ‚áÖ‚áÖ‚ãÖ‚ü©\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|‚Üë‚Üì‚Üë‚Üì‚ü©\" => -1.0\n  fs\"|‚Üë‚Üë‚Üì‚Üì‚ü©\" => -4.0\n  fs\"|‚Üì‚Üë‚Üì‚Üë‚ü©\" => -1.0\n  fs\"|‚Üì‚Üë‚Üë‚Üì‚ü©\" => 1.0\n  fs\"|‚áÖ‚ãÖ‚ãÖ‚áÖ‚ü©\" => -1.0\n  fs\"|‚Üë‚Üì‚Üì‚Üë‚ü©\" => 1.0\n  fs\"|‚ãÖ‚áÖ‚áÖ‚ãÖ‚ü©\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|‚Üë‚Üì‚Üë‚Üì‚ü©\" => 1.0\n  fs\"|‚Üë‚Üë‚Üì‚Üì‚ü©\" => -2.0\n  fs\"|‚Üì‚Üë‚Üì‚Üë‚ü©\" => 1.0\n  fs\"|‚Üì‚Üë‚Üë‚Üì‚ü©\" => 3.0\n  fs\"|‚áÖ‚ãÖ‚ãÖ‚áÖ‚ü©\" => 1.0\n  fs\"|‚Üë‚Üì‚Üì‚Üë‚ü©\" => 3.0\n  fs\"|‚ãÖ‚áÖ‚áÖ‚ãÖ‚ü©\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()‚ãÖv == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
