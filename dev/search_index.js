var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(fs\"|1 1 1 1 1 1‚ü©\"; u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndœÑ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dœÑ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ¬± $(r.œÉ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ¬± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ¬± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ¬± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ¬± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ¬± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ¬± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ¬± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ¬± 0.13748856752861724\n   Replica 2: -3.974753826250174 ¬± 0.12466355058904417\n   Replica 3: -4.011054302602586 ¬± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(fs\"|1 1 1 1 1 1‚ü©\"; u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1‚ü©\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(fs\"|1 1 1 1 1 1‚ü©\"; u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1‚ü©\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0‚ü©\"=>-14.1421, fs\"|0 2 1 1 1 1‚ü©\"=>-14.1421, fs\"|1 1 1 1 0 2‚ü©\"=>-14.1421, fs\"|1 2 0 1 1 1‚ü©\"=>-14.1421, fs\"|2 0 1 1 1 1‚ü©\"=>-14.1421, fs\"|1 1 1 2 0 1‚ü©\"=>-14.1421, fs\"|1 1 2 0 1 1‚ü©\"=>-14.1421, fs\"|1 1 0 2 1 1‚ü©\"=>-14.1421, fs\"|1 1 1 0 2 1‚ü©\"=>-14.1421, fs\"|1 0 2 1 1 1‚ü©\"=>-14.1421, fs\"|2 1 1 1 1 0‚ü©\"=>-14.1421, fs\"|0 1 1 1 1 2‚ü©\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    targetwalkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip130\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip130)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip131\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip130)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip132\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip132)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip132)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip132)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip132)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip130)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip130)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip130)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip130)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip130)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip130)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1248.87 1391.71 L1248.87 1397.25 Q1246.38 1395.98 1243.71 1395.34 Q1241.04 1394.71 1238.17 1394.71 Q1233.81 1394.71 1231.62 1396.04 Q1229.45 1397.38 1229.45 1400.05 Q1229.45 1402.09 1231.01 1403.27 Q1232.57 1404.41 1237.28 1405.46 L1239.29 1405.91 Q1245.52 1407.25 1248.13 1409.7 Q1250.78 1412.12 1250.78 1416.48 Q1250.78 1421.44 1246.83 1424.34 Q1242.91 1427.23 1236.04 1427.23 Q1233.17 1427.23 1230.06 1426.66 Q1226.97 1426.12 1223.53 1425.01 L1223.53 1418.96 Q1226.78 1420.65 1229.93 1421.51 Q1233.08 1422.33 1236.17 1422.33 Q1240.3 1422.33 1242.53 1420.93 Q1244.76 1419.5 1244.76 1416.92 Q1244.76 1414.54 1243.14 1413.26 Q1241.55 1411.99 1236.1 1410.81 L1234.07 1410.33 Q1228.62 1409.19 1226.2 1406.83 Q1223.79 1404.45 1223.79 1400.31 Q1223.79 1395.28 1227.35 1392.54 Q1230.91 1389.8 1237.47 1389.8 Q1240.72 1389.8 1243.58 1390.28 Q1246.45 1390.76 1248.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1265.89 1380.54 L1265.89 1390.66 L1277.96 1390.66 L1277.96 1395.22 L1265.89 1395.22 L1265.89 1414.57 Q1265.89 1418.93 1267.07 1420.17 Q1268.28 1421.41 1271.94 1421.41 L1277.96 1421.41 L1277.96 1426.31 L1271.94 1426.31 Q1265.16 1426.31 1262.58 1423.8 Q1260.01 1421.25 1260.01 1414.57 L1260.01 1395.22 L1255.71 1395.22 L1255.71 1390.66 L1260.01 1390.66 L1260.01 1380.54 L1265.89 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1316.15 1407.02 L1316.15 1409.89 L1289.22 1409.89 Q1289.61 1415.94 1292.85 1419.12 Q1296.13 1422.27 1301.96 1422.27 Q1305.33 1422.27 1308.48 1421.44 Q1311.66 1420.61 1314.78 1418.96 L1314.78 1424.5 Q1311.63 1425.83 1308.32 1426.53 Q1305.01 1427.23 1301.61 1427.23 Q1293.08 1427.23 1288.08 1422.27 Q1283.11 1417.3 1283.11 1408.84 Q1283.11 1400.08 1287.82 1394.96 Q1292.57 1389.8 1300.59 1389.8 Q1307.78 1389.8 1311.95 1394.45 Q1316.15 1399.07 1316.15 1407.02 M1310.3 1405.3 Q1310.23 1400.5 1307.59 1397.63 Q1304.98 1394.77 1300.65 1394.77 Q1295.75 1394.77 1292.79 1397.54 Q1289.86 1400.31 1289.42 1405.34 L1310.3 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1331.43 1420.96 L1331.43 1439.87 L1325.54 1439.87 L1325.54 1390.66 L1331.43 1390.66 L1331.43 1396.07 Q1333.28 1392.89 1336.08 1391.36 Q1338.91 1389.8 1342.82 1389.8 Q1349.32 1389.8 1353.36 1394.96 Q1357.43 1400.12 1357.43 1408.52 Q1357.43 1416.92 1353.36 1422.08 Q1349.32 1427.23 1342.82 1427.23 Q1338.91 1427.23 1336.08 1425.71 Q1333.28 1424.15 1331.43 1420.96 M1351.35 1408.52 Q1351.35 1402.06 1348.68 1398.4 Q1346.04 1394.71 1341.39 1394.71 Q1336.74 1394.71 1334.07 1398.4 Q1331.43 1402.06 1331.43 1408.52 Q1331.43 1414.98 1334.07 1418.67 Q1336.74 1422.33 1341.39 1422.33 Q1346.04 1422.33 1348.68 1418.67 Q1351.35 1414.98 1351.35 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1389.87 1391.71 L1389.87 1397.25 Q1387.38 1395.98 1384.71 1395.34 Q1382.04 1394.71 1379.17 1394.71 Q1374.81 1394.71 1372.62 1396.04 Q1370.45 1397.38 1370.45 1400.05 Q1370.45 1402.09 1372.01 1403.27 Q1373.57 1404.41 1378.28 1405.46 L1380.29 1405.91 Q1386.52 1407.25 1389.13 1409.7 Q1391.78 1412.12 1391.78 1416.48 Q1391.78 1421.44 1387.83 1424.34 Q1383.91 1427.23 1377.04 1427.23 Q1374.18 1427.23 1371.06 1426.66 Q1367.97 1426.12 1364.53 1425.01 L1364.53 1418.96 Q1367.78 1420.65 1370.93 1421.51 Q1374.08 1422.33 1377.17 1422.33 Q1381.3 1422.33 1383.53 1420.93 Q1385.76 1419.5 1385.76 1416.92 Q1385.76 1414.54 1384.14 1413.26 Q1382.55 1411.99 1377.1 1410.81 L1375.07 1410.33 Q1369.62 1409.19 1367.2 1406.83 Q1364.79 1404.45 1364.79 1400.31 Q1364.79 1395.28 1368.35 1392.54 Q1371.92 1389.8 1378.47 1389.8 Q1381.72 1389.8 1384.58 1390.28 Q1387.45 1390.76 1389.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip132)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1260.8 2211.02,1260.8 \"/>\n<polyline clip-path=\"url(#clip132)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1004.09 2211.02,1004.09 \"/>\n<polyline clip-path=\"url(#clip132)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,747.387 2211.02,747.387 \"/>\n<polyline clip-path=\"url(#clip132)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,490.682 2211.02,490.682 \"/>\n<polyline clip-path=\"url(#clip132)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,233.977 2211.02,233.977 \"/>\n<polyline clip-path=\"url(#clip130)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip130)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1260.8 423.181,1260.8 \"/>\n<polyline clip-path=\"url(#clip130)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1004.09 423.181,1004.09 \"/>\n<polyline clip-path=\"url(#clip130)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,747.387 423.181,747.387 \"/>\n<polyline clip-path=\"url(#clip130)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,490.682 423.181,490.682 \"/>\n<polyline clip-path=\"url(#clip130)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,233.977 423.181,233.977 \"/>\n<path clip-path=\"url(#clip130)\" d=\"M356.339 1246.6 Q352.728 1246.6 350.899 1250.16 Q349.094 1253.7 349.094 1260.83 Q349.094 1267.94 350.899 1271.5 Q352.728 1275.04 356.339 1275.04 Q359.973 1275.04 361.779 1271.5 Q363.608 1267.94 363.608 1260.83 Q363.608 1253.7 361.779 1250.16 Q359.973 1246.6 356.339 1246.6 M356.339 1242.89 Q362.149 1242.89 365.205 1247.5 Q368.284 1252.08 368.284 1260.83 Q368.284 1269.56 365.205 1274.16 Q362.149 1278.75 356.339 1278.75 Q350.529 1278.75 347.45 1274.16 Q344.395 1269.56 344.395 1260.83 Q344.395 1252.08 347.45 1247.5 Q350.529 1242.89 356.339 1242.89 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M290.043 1017.44 L306.363 1017.44 L306.363 1021.37 L284.418 1021.37 L284.418 1017.44 Q287.08 1014.68 291.664 1010.05 Q296.27 1005.4 297.451 1004.06 Q299.696 1001.53 300.576 999.798 Q301.478 998.039 301.478 996.349 Q301.478 993.594 299.534 991.858 Q297.613 990.122 294.511 990.122 Q292.312 990.122 289.858 990.886 Q287.427 991.65 284.65 993.201 L284.65 988.478 Q287.474 987.344 289.927 986.766 Q292.381 986.187 294.418 986.187 Q299.789 986.187 302.983 988.872 Q306.177 991.557 306.177 996.048 Q306.177 998.177 305.367 1000.1 Q304.58 1002 302.474 1004.59 Q301.895 1005.26 298.793 1008.48 Q295.691 1011.67 290.043 1017.44 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M316.224 986.812 L334.58 986.812 L334.58 990.747 L320.506 990.747 L320.506 999.219 Q321.524 998.872 322.543 998.71 Q323.562 998.525 324.58 998.525 Q330.367 998.525 333.747 1001.7 Q337.126 1004.87 337.126 1010.28 Q337.126 1015.86 333.654 1018.96 Q330.182 1022.04 323.862 1022.04 Q321.687 1022.04 319.418 1021.67 Q317.173 1021.3 314.765 1020.56 L314.765 1015.86 Q316.849 1017 319.071 1017.55 Q321.293 1018.11 323.77 1018.11 Q327.774 1018.11 330.112 1016 Q332.45 1013.89 332.45 1010.28 Q332.45 1006.67 330.112 1004.57 Q327.774 1002.46 323.77 1002.46 Q321.895 1002.46 320.02 1002.88 Q318.168 1003.29 316.224 1004.17 L316.224 986.812 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M356.339 989.89 Q352.728 989.89 350.899 993.455 Q349.094 996.997 349.094 1004.13 Q349.094 1011.23 350.899 1014.8 Q352.728 1018.34 356.339 1018.34 Q359.973 1018.34 361.779 1014.8 Q363.608 1011.23 363.608 1004.13 Q363.608 996.997 361.779 993.455 Q359.973 989.89 356.339 989.89 M356.339 986.187 Q362.149 986.187 365.205 990.793 Q368.284 995.377 368.284 1004.13 Q368.284 1012.85 365.205 1017.46 Q362.149 1022.04 356.339 1022.04 Q350.529 1022.04 347.45 1017.46 Q344.395 1012.85 344.395 1004.13 Q344.395 995.377 347.45 990.793 Q350.529 986.187 356.339 986.187 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M286.062 730.107 L304.418 730.107 L304.418 734.042 L290.344 734.042 L290.344 742.514 Q291.363 742.167 292.381 742.005 Q293.4 741.82 294.418 741.82 Q300.205 741.82 303.585 744.991 Q306.964 748.162 306.964 753.579 Q306.964 759.158 303.492 762.259 Q300.02 765.338 293.701 765.338 Q291.525 765.338 289.256 764.968 Q287.011 764.597 284.603 763.857 L284.603 759.158 Q286.687 760.292 288.909 760.847 Q291.131 761.403 293.608 761.403 Q297.613 761.403 299.951 759.297 Q302.288 757.19 302.288 753.579 Q302.288 749.968 299.951 747.861 Q297.613 745.755 293.608 745.755 Q291.733 745.755 289.858 746.172 Q288.006 746.588 286.062 747.468 L286.062 730.107 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M326.177 733.186 Q322.566 733.186 320.737 736.75 Q318.932 740.292 318.932 747.422 Q318.932 754.528 320.737 758.093 Q322.566 761.634 326.177 761.634 Q329.811 761.634 331.617 758.093 Q333.446 754.528 333.446 747.422 Q333.446 740.292 331.617 736.75 Q329.811 733.186 326.177 733.186 M326.177 729.482 Q331.987 729.482 335.043 734.088 Q338.122 738.672 338.122 747.422 Q338.122 756.148 335.043 760.755 Q331.987 765.338 326.177 765.338 Q320.367 765.338 317.288 760.755 Q314.233 756.148 314.233 747.422 Q314.233 738.672 317.288 734.088 Q320.367 729.482 326.177 729.482 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M356.339 733.186 Q352.728 733.186 350.899 736.75 Q349.094 740.292 349.094 747.422 Q349.094 754.528 350.899 758.093 Q352.728 761.634 356.339 761.634 Q359.973 761.634 361.779 758.093 Q363.608 754.528 363.608 747.422 Q363.608 740.292 361.779 736.75 Q359.973 733.186 356.339 733.186 M356.339 729.482 Q362.149 729.482 365.205 734.088 Q368.284 738.672 368.284 747.422 Q368.284 756.148 365.205 760.755 Q362.149 765.338 356.339 765.338 Q350.529 765.338 347.45 760.755 Q344.395 756.148 344.395 747.422 Q344.395 738.672 347.45 734.088 Q350.529 729.482 356.339 729.482 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M284.835 473.402 L307.057 473.402 L307.057 475.393 L294.511 507.962 L289.627 507.962 L301.432 477.337 L284.835 477.337 L284.835 473.402 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M316.224 473.402 L334.58 473.402 L334.58 477.337 L320.506 477.337 L320.506 485.809 Q321.524 485.462 322.543 485.3 Q323.562 485.115 324.58 485.115 Q330.367 485.115 333.747 488.286 Q337.126 491.457 337.126 496.874 Q337.126 502.453 333.654 505.555 Q330.182 508.633 323.862 508.633 Q321.687 508.633 319.418 508.263 Q317.173 507.892 314.765 507.152 L314.765 502.453 Q316.849 503.587 319.071 504.142 Q321.293 504.698 323.77 504.698 Q327.774 504.698 330.112 502.592 Q332.45 500.485 332.45 496.874 Q332.45 493.263 330.112 491.156 Q327.774 489.05 323.77 489.05 Q321.895 489.05 320.02 489.467 Q318.168 489.883 316.224 490.763 L316.224 473.402 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M356.339 476.481 Q352.728 476.481 350.899 480.045 Q349.094 483.587 349.094 490.717 Q349.094 497.823 350.899 501.388 Q352.728 504.93 356.339 504.93 Q359.973 504.93 361.779 501.388 Q363.608 497.823 363.608 490.717 Q363.608 483.587 361.779 480.045 Q359.973 476.481 356.339 476.481 M356.339 472.777 Q362.149 472.777 365.205 477.383 Q368.284 481.967 368.284 490.717 Q368.284 499.443 365.205 504.05 Q362.149 508.633 356.339 508.633 Q350.529 508.633 347.45 504.05 Q344.395 499.443 344.395 490.717 Q344.395 481.967 347.45 477.383 Q350.529 472.777 356.339 472.777 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M256.664 247.322 L264.303 247.322 L264.303 220.956 L255.992 222.623 L255.992 218.364 L264.256 216.697 L268.932 216.697 L268.932 247.322 L276.571 247.322 L276.571 251.257 L256.664 251.257 L256.664 247.322 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M296.015 219.776 Q292.404 219.776 290.576 223.34 Q288.77 226.882 288.77 234.012 Q288.77 241.118 290.576 244.683 Q292.404 248.225 296.015 248.225 Q299.65 248.225 301.455 244.683 Q303.284 241.118 303.284 234.012 Q303.284 226.882 301.455 223.34 Q299.65 219.776 296.015 219.776 M296.015 216.072 Q301.826 216.072 304.881 220.678 Q307.96 225.262 307.96 234.012 Q307.96 242.738 304.881 247.345 Q301.826 251.928 296.015 251.928 Q290.205 251.928 287.127 247.345 Q284.071 242.738 284.071 234.012 Q284.071 225.262 287.127 220.678 Q290.205 216.072 296.015 216.072 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M326.177 219.776 Q322.566 219.776 320.737 223.34 Q318.932 226.882 318.932 234.012 Q318.932 241.118 320.737 244.683 Q322.566 248.225 326.177 248.225 Q329.811 248.225 331.617 244.683 Q333.446 241.118 333.446 234.012 Q333.446 226.882 331.617 223.34 Q329.811 219.776 326.177 219.776 M326.177 216.072 Q331.987 216.072 335.043 220.678 Q338.122 225.262 338.122 234.012 Q338.122 242.738 335.043 247.345 Q331.987 251.928 326.177 251.928 Q320.367 251.928 317.288 247.345 Q314.233 242.738 314.233 234.012 Q314.233 225.262 317.288 220.678 Q320.367 216.072 326.177 216.072 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M356.339 219.776 Q352.728 219.776 350.899 223.34 Q349.094 226.882 349.094 234.012 Q349.094 241.118 350.899 244.683 Q352.728 248.225 356.339 248.225 Q359.973 248.225 361.779 244.683 Q363.608 241.118 363.608 234.012 Q363.608 226.882 361.779 223.34 Q359.973 219.776 356.339 219.776 M356.339 216.072 Q362.149 216.072 365.205 220.678 Q368.284 225.262 368.284 234.012 Q368.284 242.738 365.205 247.345 Q362.149 251.928 356.339 251.928 Q350.529 251.928 347.45 247.345 Q344.395 242.738 344.395 234.012 Q344.395 225.262 347.45 220.678 Q350.529 216.072 356.339 216.072 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip132)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,233.977 4017.76,233.977 \"/>\n<polyline clip-path=\"url(#clip132)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1250.45 456.554,1250.31 457.123,1250.09 457.691,1248.79 458.259,1248.45 458.828,1248.06 459.396,1246.58 459.964,1246.15 460.533,1245.6 461.101,1244.98 461.669,1244.26 462.238,1243.47 462.806,1242.58 463.375,1241.62 463.943,1238.51 464.511,1237.39 465.08,1236.15 465.648,1233.77 466.216,1232.34 466.785,1230.77 467.353,1229.11 467.921,1227.32 468.49,1225.4 469.058,1223.3 469.626,1220.05 470.195,1217.63 470.763,1214 471.331,1210.24 471.9,1206.26 472.468,1202.16 473.036,1198.87 473.605,1195.39 474.173,1190.7 474.741,1186.76 475.31,1181.63 475.878,1176.35 476.446,1171.92 477.015,1166.2 477.583,1160.27 478.152,1155.23 478.72,1148.9 479.288,1142.46 479.857,1135.77 480.425,1128.76 480.993,1120.5 481.562,1113.07 482.13,1104.43 482.698,1095.62 483.267,1088.84 483.835,1079.74 484.403,1072.52 484.972,1062.09 485.54,1054.7 486.108,1047.13 486.677,1039.38 487.245,1030.42 487.813,1021.16 488.382,1009.75 488.95,1000.54 489.518,990.164 490.087,980.582 490.655,971.997 491.224,961.186 491.792,951.381 492.36,941.456 492.929,931.519 493.497,922.537 494.065,912.567 494.634,902.428 495.202,893.17 495.77,883.946 496.339,871.486 496.907,862.122 497.475,851.815 498.044,841.421 498.612,830.057 499.18,818.715 499.749,807.424 500.317,797.249 500.885,786.105 501.454,776.092 502.022,767.171 502.59,757.161 503.159,746.253 503.727,736.413 504.295,726.549 504.864,716.929 505.432,708.37 506.001,697.707 506.569,688.161 507.137,678.68 507.706,669.433 508.274,659.375 508.842,652.24 509.411,640.911 509.979,632.02 510.547,623.096 511.116,612.291 511.684,603.863 512.252,591.424 512.821,583.489 513.389,572.62 513.957,565.094 514.526,554.388 515.094,548.117 515.662,540.886 516.231,530.61 516.799,524.079 517.367,515.433 517.936,508.107 518.504,504.147 519.072,498.063 519.641,492.031 520.209,485.023 520.778,478.001 521.346,472.26 521.914,464.526 522.483,459.918 523.051,455.51 523.619,449.286 524.188,444.105 524.756,440.049 525.324,436.263 525.893,434.359 526.461,429.187 527.029,423.19 527.598,420.281 528.166,414.266 528.734,410.633 529.303,409.164 529.871,404.38 530.439,400.975 531.008,396.334 531.576,392.952 532.144,388.546 532.713,386.213 533.281,382.965 533.85,378.612 534.418,374.487 534.986,368.521 535.555,363.931 536.123,359.296 536.691,356.95 537.26,354.472 537.828,351.03 538.396,346.802 538.965,344.773 539.533,341.494 540.101,338.306 540.67,333.568 541.238,329.832 541.806,325.234 542.375,324.898 542.943,325.531 543.511,323.044 544.08,321.542 544.648,318.119 545.216,316.504 545.785,313.11 546.353,311.799 546.921,309.492 547.49,307.333 548.058,305.373 548.627,302.195 549.195,301.08 549.763,299.081 550.332,297.375 550.9,294.567 551.468,293.044 552.037,290.551 552.605,287.991 553.173,287.6 553.742,284.059 554.31,283.862 554.878,281.87 555.447,281.732 556.015,280.588 556.583,278.582 557.152,278.509 557.72,276.29 558.288,277.288 558.857,276.212 559.425,276.263 559.993,276.102 560.562,275.21 561.13,275.088 561.698,274.831 562.267,274.397 562.835,271.186 563.404,271.119 563.972,270.024 564.54,269.931 565.109,269.475 565.677,269.218 566.245,267.041 566.814,267.224 567.382,264.954 567.95,263.963 568.519,261.026 569.087,260.473 569.655,260.806 570.224,259.112 570.792,260.421 571.36,259.757 571.929,261.162 572.497,261.403 573.065,263.627 573.634,262.729 574.202,262.664 574.77,263.727 575.339,264.487 575.907,262.444 576.476,263.224 577.044,262.878 577.612,262.82 578.181,261.586 578.749,262.624 579.317,262.542 579.886,262.201 580.454,260.786 581.022,259.499 581.591,258.356 582.159,258.288 582.727,257.147 583.296,256.881 583.864,258.868 584.432,257.41 585.001,257.16 585.569,257.969 586.137,256.594 586.706,255.421 587.274,254.397 587.842,254.345 588.411,254.356 588.979,254.272 589.547,255.044 590.116,253.808 590.684,253.722 591.253,254.374 591.821,256.151 592.389,253.715 592.958,252.488 593.526,253.474 594.094,254.303 594.663,253.314 595.231,254.069 595.799,253.914 596.368,250.639 596.936,249.348 597.504,250.335 598.073,248.265 598.641,251.5 599.209,252.285 599.778,251.029 600.346,248.653 600.914,248.637 601.483,248.494 602.051,248.431 602.619,248.267 603.188,244.205 603.756,244.154 604.325,246.514 604.893,245.404 605.461,245.469 606.03,245.546 606.598,245.287 607.166,245.325 607.735,244.363 608.303,245.779 608.871,244.688 609.44,243.678 610.008,241.795 610.576,241.884 611.145,243.182 611.713,242.235 612.281,242.485 612.85,243.801 613.418,242.87 613.986,242.235 614.555,241.505 615.123,245.957 615.691,246.096 616.26,246.987 616.828,246.544 617.396,245.468 617.965,245.382 618.533,246.222 619.102,247.193 619.67,246.823 620.238,245.726 620.807,244.424 621.375,243.301 621.943,245.512 622.512,245.287 623.08,243.311 623.648,243.402 624.217,243.42 624.785,242.391 625.353,242.22 625.922,243.288 626.49,242.088 627.058,242.292 627.627,242.035 628.195,242.272 628.763,240.235 629.332,240.45 629.9,239.542 630.468,237.761 631.037,238.191 631.605,238.697 632.173,239.985 632.742,240.445 633.31,240.51 633.879,239.623 634.447,239.803 635.015,240.17 635.584,237.126 636.152,237.225 636.72,238.744 637.289,238.242 637.857,237.615 638.425,237.907 638.994,237.272 639.562,238.553 640.13,237.735 640.699,239.331 641.267,240.565 641.835,243.683 642.404,244.782 642.972,245.488 643.54,245.269 644.109,243.854 644.677,241.447 645.245,237.358 645.814,237.804 646.382,238.237 646.951,240.693 647.519,240.469 648.087,242.526 648.656,242.238 649.224,241.944 649.792,242.672 650.361,241.611 650.929,241.42 651.497,241.393 652.066,240.267 652.634,237.404 653.202,237.477 653.771,237.786 654.339,236.781 654.907,235.014 655.476,234.408 656.044,233.552 656.612,234.273 657.181,237.634 657.749,239.066 658.317,237.271 658.886,234.525 659.454,233.815 660.022,233.264 660.591,233.739 661.159,233.095 661.728,230.644 662.296,233.506 662.864,233.175 663.433,233.5 664.001,236.026 664.569,236.29 665.138,236.414 665.706,237.729 666.274,236.998 666.843,238.25 667.411,237.512 667.979,238.621 668.548,238.731 669.116,240.781 669.684,241.952 670.253,243.833 670.821,245.441 671.389,243.239 671.958,243.875 672.526,243.624 673.094,243.233 673.663,241.888 674.231,239.663 674.799,237.686 675.368,235.763 675.936,235.279 676.505,236.478 677.073,237.934 677.641,238.052 678.21,238.106 678.778,240.274 679.346,240.27 679.915,241.404 680.483,241.197 681.051,240.015 681.62,242.174 682.188,240.852 682.756,240.707 683.325,240.514 683.893,240.199 684.461,238.003 685.03,235.845 685.598,239.227 686.166,239.96 686.735,240.924 687.303,241.845 687.871,241.418 688.44,240.033 689.008,241.025 689.577,239.818 690.145,237.604 690.713,237.538 691.282,237.757 691.85,235.783 692.418,236.963 692.987,237.979 693.555,236.11 694.123,235.352 694.692,234.576 695.26,234.642 695.828,234.808 696.397,236.177 696.965,234.348 697.533,234.683 698.102,235.092 698.67,236.37 699.238,238.46 699.807,237.341 700.375,237.326 700.943,237.291 701.512,237.335 702.08,237.359 702.648,235.327 703.217,234.56 703.785,234.807 704.354,234.975 704.922,232.01 705.49,231.318 706.059,231.636 706.627,232.04 707.195,232.411 707.764,232.046 708.332,232.345 708.9,233.433 709.469,231.837 710.037,231.141 710.605,233.752 711.174,234.928 711.742,235.03 712.31,231.28 712.879,231.575 713.447,233.994 714.015,235.21 714.584,235.268 715.152,234.539 715.72,232.919 716.289,236.199 716.857,235.461 717.425,235.737 717.994,236.092 718.562,235.261 719.131,235.652 719.699,237.938 720.267,239.034 720.836,241.15 721.404,242.038 721.972,241.949 722.541,243.856 723.109,243.514 723.677,242.033 724.246,242.946 724.814,243.461 725.382,243.09 725.951,242.711 726.519,239.28 727.087,239.045 727.656,238.909 728.224,238.509 728.792,239.286 729.361,237.207 729.929,234.181 730.497,232.413 731.066,232.748 731.634,231.035 732.203,230.474 732.771,228.701 733.339,228.389 733.908,231.069 734.476,232.592 735.044,234.896 735.613,231.903 736.181,232.406 736.749,232.709 737.318,232.007 737.886,233.417 738.454,234.752 739.023,236.857 739.591,237.828 740.159,237.877 740.728,239.817 741.296,239.543 741.864,238.487 742.433,238.611 743.001,237.67 743.569,237.71 744.138,236.541 744.706,235.377 745.274,236.553 745.843,234.526 746.411,235.796 746.98,236.83 747.548,236.913 748.116,238.925 748.685,238.834 749.253,238.73 749.821,237.585 750.39,241.654 750.958,242.356 751.526,243.029 752.095,241.28 752.663,239.884 753.231,238.64 753.8,241.551 754.368,240.334 754.936,240.081 755.505,238.551 756.073,239.143 756.641,238.01 757.21,236.975 757.778,233.86 758.346,233.949 758.915,233.195 759.483,233.29 760.052,234.356 760.62,234.624 761.188,235.757 761.757,236.696 762.325,236.319 762.893,232.076 763.462,232.25 764.03,230.431 764.598,231.662 765.167,234.018 765.735,234.062 766.303,235.136 766.872,236.01 767.44,236.923 768.008,236.833 768.577,237.745 769.145,236.847 769.713,235.678 770.282,236.838 770.85,236.776 771.418,236.822 771.987,236.98 772.555,237.712 773.123,238.672 773.692,241.226 774.26,238.752 774.829,238.336 775.397,238.047 775.965,237.828 776.534,237.696 777.102,238.727 777.67,238.364 778.239,239.349 778.807,237.933 779.375,237.518 779.944,238.287 780.512,238.107 781.08,235.801 781.649,235.832 782.217,234.424 782.785,234.499 783.354,234.617 783.922,235.543 784.49,234.373 785.059,234.649 785.627,233.423 786.195,233.619 786.764,233.598 787.332,234.572 787.9,233.431 788.469,232.56 789.037,232.637 789.606,231.837 790.174,232.203 790.742,232.207 791.311,231.427 791.879,233.787 792.447,233.926 793.016,232.845 793.584,232.812 794.152,234.071 794.721,234.06 795.289,233.099 795.857,234.322 796.426,234.463 796.994,234.372 797.562,234.379 798.131,235.501 798.699,234.223 799.267,234.219 799.836,228.956 800.404,228.326 800.972,228.848 801.541,230.376 802.109,231.796 802.678,232.086 803.246,231.13 803.814,230.402 804.383,231.707 804.951,236.104 805.519,234.074 806.088,235.333 806.656,237.347 807.224,236.024 807.793,235.037 808.361,235.064 808.929,234.236 809.498,234.408 810.066,233.423 810.634,234.788 811.203,235.918 811.771,234.704 812.339,234.863 812.908,234.881 813.476,235.144 814.044,234.193 814.613,234.344 815.181,235.403 815.749,234.475 816.318,235.283 816.886,238.318 817.455,238.182 818.023,237.942 818.591,235.591 819.16,233.299 819.728,232.367 820.296,231.749 820.865,232.033 821.433,232.179 822.001,233.471 822.57,232.517 823.138,232.603 823.706,230.642 824.275,230.115 824.843,229.508 825.411,231.101 825.98,228.458 826.548,231.095 827.116,231.289 827.685,232.574 828.253,232.599 828.821,232.94 829.39,232.361 829.958,231.637 830.526,230.906 831.095,230.307 831.663,230.696 832.232,231.066 832.8,231.293 833.368,231.687 833.937,231.072 834.505,234.629 835.073,233.645 835.642,233.824 836.21,232.128 836.778,232.536 837.347,231.535 837.915,231.871 838.483,234.192 839.052,235.556 839.62,235.774 840.188,239.785 840.757,241.669 841.325,240.981 841.893,240.74 842.462,239.34 843.03,240.977 843.598,239.564 844.167,235.998 844.735,237.076 845.304,236.032 845.872,233.953 846.44,235.849 847.009,235.927 847.577,235.88 848.145,236.907 848.714,238.864 849.282,240.678 849.85,238.362 850.419,237.098 850.987,237.073 851.555,236.883 852.124,235.832 852.692,235.648 853.26,235.504 853.829,234.403 854.397,234.424 854.965,234.543 855.534,234.865 856.102,236.08 856.67,233.865 857.239,233.981 857.807,233.854 858.375,234.072 858.944,235.188 859.512,234.191 860.081,233.12 860.649,232.345 861.217,231.454 861.786,230.686 862.354,230.067 862.922,229.47 863.491,228.794 864.059,227.852 864.627,230.314 865.196,227.857 865.764,229.383 866.332,229.691 866.901,230.067 867.469,230.467 868.037,229.939 868.606,231.278 869.174,229.645 869.742,230.059 870.311,229.493 870.879,229.889 871.447,226.328 872.016,226.853 872.584,227.338 873.152,228.823 873.721,230.567 874.289,231.96 874.858,231.564 875.426,232.108 875.994,234.582 876.563,232.707 877.131,232.881 877.699,232.234 878.268,234.597 878.836,235.59 879.404,237.897 879.973,236.999 880.541,235.894 881.109,235.092 881.678,235.187 882.246,236.07 882.814,239.073 883.383,243.176 883.951,241.783 884.519,241.48 885.088,243.294 885.656,242.773 886.224,240.359 886.793,240.088 887.361,239.783 887.93,237.432 888.498,237.009 889.066,237.108 889.635,237.134 890.203,240.112 890.771,243.09 891.34,241.618 891.908,240.192 892.476,240.642 893.045,241.252 893.613,240.453 894.181,239.233 894.75,239.945 895.318,238.565 895.886,238.561 896.455,238.149 897.023,238.983 897.591,235.61 898.16,236.539 898.728,236.448 899.296,235.379 899.865,235.285 900.433,235.075 901.001,236.031 901.57,236.01 902.138,236.82 902.707,237.687 903.275,238.417 903.843,238.097 904.412,237.82 904.98,237.736 905.548,235.37 906.117,236.252 906.685,238.166 907.253,236.97 907.822,235.981 908.39,234.635 908.958,235.73 909.527,234.487 910.095,233.468 910.663,231.606 911.232,232.833 911.8,232.907 912.368,231.918 912.937,232.105 913.505,231.381 914.073,230.884 914.642,231.188 915.21,231.29 915.779,230.8 916.347,231.043 916.915,231.261 917.484,231.397 918.052,230.539 918.62,230.822 919.189,233.258 919.757,233.359 920.325,233.444 920.894,234.477 921.462,234.349 922.03,235.361 922.599,236.382 923.167,234.214 923.735,234.512 924.304,235.754 924.872,235.961 925.44,235.722 926.009,236.782 926.577,237.825 927.145,238.576 927.714,241.083 928.282,238.276 928.85,239.745 929.419,237.232 929.987,236.054 930.556,235.953 931.124,235.771 931.692,237.803 932.261,240.568 932.829,241.156 933.397,239.638 933.966,240.311 934.534,240.819 935.102,241.337 935.671,240.529 936.239,244.126 936.807,242.41 937.376,241.78 937.944,238.969 938.512,236.239 939.081,234.95 939.649,235.768 940.217,238.517 940.786,238.153 941.354,238.68 941.922,235.112 942.491,236.95 943.059,236.729 943.627,237.287 944.196,233.906 944.764,234.971 945.333,234.615 945.901,232.435 946.469,233.39 947.038,231.171 947.606,232.403 948.174,232.209 948.743,232.111 949.311,231.205 949.879,230.235 950.448,230.572 951.016,231.846 951.584,231.745 952.153,231.793 952.721,229.757 953.289,231.231 953.858,229.392 954.426,229.608 954.994,228.922 955.563,230.281 956.131,228.37 956.699,228.744 957.268,230.184 957.836,230.291 958.405,229.571 958.973,229.746 959.541,232.029 960.11,231.113 960.678,233.376 961.246,228.417 961.815,225.797 962.383,225.482 962.951,225.027 963.52,223.807 964.088,225.571 964.656,226.143 965.225,227.708 965.793,229.508 966.361,232.108 966.93,231.323 967.498,230.567 968.066,232.951 968.635,232.825 969.203,234.083 969.771,233.116 970.34,228.17 970.908,229.829 971.476,228.234 972.045,227.969 972.613,229.524 973.182,229.892 973.75,231.191 974.318,233.55 974.887,234.501 975.455,233.611 976.023,232.561 976.592,231.578 977.16,232.96 977.728,233.326 978.297,233.764 978.865,232.849 979.433,232.968 980.002,233.25 980.57,233.46 981.138,233.601 981.707,234.992 982.275,235.197 982.843,235.316 983.412,233.325 983.98,234.548 984.548,232.716 985.117,232.698 985.685,233.798 986.253,235.977 986.822,235.991 987.39,234.855 987.959,233.829 988.527,233.218 989.095,234.178 989.664,233.1 990.232,233.223 990.8,233.115 991.369,234.409 991.937,233.519 992.505,234.702 993.074,234.818 993.642,234.076 994.21,235.187 994.779,233.315 995.347,235.597 995.915,236.725 996.484,238.671 997.052,241.199 997.62,241.677 998.189,239.318 998.757,238.257 999.325,236.133 999.894,235.02 1000.46,235.056 1001.03,233.074 1001.6,233.024 1002.17,230.128 1002.74,233.836 1003.3,231.89 1003.87,231.397 1004.44,231.452 1005.01,232.906 1005.58,236.183 1006.15,237.025 1006.71,235.816 1007.28,235.831 1007.85,234.702 1008.42,237.125 1008.99,239.016 1009.56,240.875 1010.12,242.661 1010.69,240.981 1011.26,239.758 1011.83,240.391 1012.4,238.007 1012.97,237.637 1013.53,237.323 1014.1,238.136 1014.67,238.045 1015.24,237.73 1015.81,236.5 1016.38,234.333 1016.94,235.393 1017.51,235.058 1018.08,235.069 1018.65,233.895 1019.22,233.875 1019.79,232.808 1020.35,230.744 1020.92,229.884 1021.49,231.3 1022.06,231.571 1022.63,233.744 1023.2,232.884 1023.76,233.096 1024.33,233.178 1024.9,234.337 1025.47,232.383 1026.04,232.655 1026.61,231.746 1027.17,232.946 1027.74,232.985 1028.31,235.374 1028.88,235.442 1029.45,235.55 1030.02,234.668 1030.58,235.009 1031.15,234.951 1031.72,236.815 1032.29,237.785 1032.86,237.756 1033.43,238.743 1033.99,238.588 1034.56,238.587 1035.13,240.148 1035.7,239.62 1036.27,241.136 1036.84,242.438 1037.4,243.102 1037.97,240.116 1038.54,237.518 1039.11,237.468 1039.68,238.255 1040.25,238.852 1040.81,233.133 1041.38,233.961 1041.95,234.907 1042.52,233.906 1043.09,233.781 1043.66,234.714 1044.22,234.517 1044.79,234.293 1045.36,233.22 1045.93,232.469 1046.5,234.486 1047.07,235.502 1047.63,236.389 1048.2,235.16 1048.77,239.1 1049.34,236.499 1049.91,237.162 1050.48,235.88 1051.05,233.504 1051.61,233.6 1052.18,234.463 1052.75,234.412 1053.32,235.225 1053.89,234.985 1054.46,235.748 1055.02,235.63 1055.59,238.367 1056.16,238.158 1056.73,236.758 1057.3,236.435 1057.87,238.304 1058.43,235.815 1059,235.614 1059.57,235.39 1060.14,234.052 1060.71,235.162 1061.28,236.155 1061.84,235.828 1062.41,232.433 1062.98,232.23 1063.55,232.197 1064.12,231.088 1064.69,235.225 1065.25,234.848 1065.82,235.58 1066.39,238.352 1066.96,235.872 1067.53,235.4 1068.1,236.188 1068.66,236.868 1069.23,234.501 1069.8,234.38 1070.37,231.095 1070.94,230.112 1071.51,229.232 1072.07,228.702 1072.64,229.009 1073.21,228.498 1073.78,228.721 1074.35,227.047 1074.92,227.537 1075.48,226.925 1076.05,225.522 1076.62,227.03 1077.19,227.553 1077.76,228.135 1078.33,229.723 1078.89,230.07 1079.46,231.281 1080.03,233.728 1080.6,233.635 1081.17,233.884 1081.74,233.968 1082.3,234.003 1082.87,233.062 1083.44,231.955 1084.01,232.176 1084.58,235.733 1085.15,235.655 1085.71,235.624 1086.28,233.472 1086.85,232.409 1087.42,231.459 1087.99,230.657 1088.56,228.713 1089.12,228.181 1089.69,231.569 1090.26,233.659 1090.83,234.724 1091.4,232.457 1091.97,232.704 1092.53,233.775 1093.1,234.104 1093.67,234.092 1094.24,235.183 1094.81,235.052 1095.38,238.004 1095.94,237.694 1096.51,239.415 1097.08,239.032 1097.65,239.844 1098.22,236.475 1098.79,237.426 1099.35,236.315 1099.92,234.051 1100.49,234.129 1101.06,236.008 1101.63,234.957 1102.2,234.604 1102.76,234.674 1103.33,236.606 1103.9,238.469 1104.47,240.175 1105.04,237.776 1105.61,239.463 1106.17,237.875 1106.74,237.377 1107.31,236.973 1107.88,234.597 1108.45,235.317 1109.02,236.315 1109.58,237.039 1110.15,236.499 1110.72,237.451 1111.29,237.07 1111.86,238.831 1112.43,234.203 1112.99,234.199 1113.56,233.033 1114.13,235.959 1114.7,234.79 1115.27,234.688 1115.84,231.471 1116.4,231.725 1116.97,232.876 1117.54,234.935 1118.11,235.575 1118.68,236.417 1119.25,235.278 1119.81,233.017 1120.38,230.835 1120.95,231.77 1121.52,230.741 1122.09,231.875 1122.66,230.981 1123.23,233.514 1123.79,233.472 1124.36,232.444 1124.93,229.571 1125.5,228.798 1126.07,228.043 1126.64,229.401 1127.2,228.637 1127.77,229.968 1128.34,229.145 1128.91,230.604 1129.48,229.826 1130.05,230.912 1130.61,232.004 1131.18,231.029 1131.75,229.158 1132.32,230.508 1132.89,230.888 1133.46,231.117 1134.02,231.208 1134.59,232.738 1135.16,232.655 1135.73,232.765 1136.3,234.791 1136.87,232.696 1137.43,232.757 1138,234.793 1138.57,234.6 1139.14,234.47 1139.71,231.186 1140.28,232.64 1140.84,234.666 1141.41,233.721 1141.98,234.891 1142.55,233.777 1143.12,233.737 1143.69,233.693 1144.25,234.655 1144.82,232.558 1145.39,232.905 1145.96,230.88 1146.53,229.154 1147.1,229.509 1147.66,227.745 1148.23,228.161 1148.8,228.702 1149.37,228.012 1149.94,228.454 1150.51,228.967 1151.07,229.416 1151.64,230.035 1152.21,231.468 1152.78,231.765 1153.35,229.942 1153.92,230.618 1154.48,230.012 1155.05,229.352 1155.62,231.89 1156.19,232.059 1156.76,233.385 1157.33,234.213 1157.89,234.158 1158.46,234.123 1159.03,234.237 1159.6,234.184 1160.17,233.254 1160.74,232.106 1161.3,232.31 1161.87,232.267 1162.44,231.65 1163.01,233.148 1163.58,231.269 1164.15,231.613 1164.71,230.993 1165.28,229.287 1165.85,231.946 1166.42,231.067 1166.99,229.418 1167.56,227.892 1168.12,227.368 1168.69,226.944 1169.26,227.61 1169.83,228.446 1170.4,228.832 1170.97,231.348 1171.53,235.694 1172.1,237.693 1172.67,236.376 1173.24,237.32 1173.81,238.11 1174.38,240.677 1174.94,241.346 1175.51,238.836 1176.08,235.54 1176.65,236.655 1177.22,235.81 1177.79,233.679 1178.35,234.716 1178.92,236.932 1179.49,235.099 1180.06,237.31 1180.63,237.3 1181.2,235.392 1181.76,234.662 1182.33,232.7 1182.9,236.031 1183.47,234.001 1184.04,233.325 1184.61,234.659 1185.17,234.776 1185.74,233.925 1186.31,233.965 1186.88,235.06 1187.45,235.008 1188.02,236.235 1188.58,237.076 1189.15,238.015 1189.72,239.968 1190.29,238.547 1190.86,239.386 1191.43,240.1 1192,240.623 1192.56,239.266 1193.13,237.097 1193.7,238.908 1194.27,238.651 1194.84,238.332 1195.41,238.033 1195.97,237.705 1196.54,236.603 1197.11,236.425 1197.68,235.344 1198.25,234.424 1198.82,232.494 1199.38,232.767 1199.95,231.826 1200.52,231.901 1201.09,233.083 1201.66,236.251 1202.23,236.207 1202.79,234.185 1203.36,232.213 1203.93,235.401 1204.5,235.204 1205.07,236.257 1205.64,237.149 1206.2,236.699 1206.77,235.65 1207.34,235.625 1207.91,236.468 1208.48,236.148 1209.05,237.003 1209.61,235.802 1210.18,236.754 1210.75,237.686 1211.32,235.355 1211.89,236.224 1212.46,238.03 1213.02,237.55 1213.59,237.214 1214.16,238.023 1214.73,237.746 1215.3,239.665 1215.87,239.092 1216.43,237.368 1217,239.2 1217.57,238.754 1218.14,239.44 1218.71,240.944 1219.28,240.255 1219.84,239.863 1220.41,238.897 1220.98,239.316 1221.55,235.825 1222.12,235.641 1222.69,231.493 1223.25,234.563 1223.82,233.176 1224.39,229.954 1224.96,229.148 1225.53,230.363 1226.1,231.623 1226.66,229.507 1227.23,228.88 1227.8,230.323 1228.37,230.642 1228.94,228.703 1229.51,227.929 1230.07,228.273 1230.64,228.459 1231.21,226.675 1231.78,227.176 1232.35,227.479 1232.92,227.051 1233.48,226.456 1234.05,226.932 1234.62,226.298 1235.19,229.161 1235.76,228.563 1236.33,229.994 1236.89,228.312 1237.46,227.024 1238.03,226.641 1238.6,228.467 1239.17,228.83 1239.74,228.124 1240.3,228.508 1240.87,228.857 1241.44,232.345 1242.01,231.681 1242.58,233.069 1243.15,233.225 1243.71,233.445 1244.28,232.791 1244.85,233.001 1245.42,235.059 1245.99,236.189 1246.56,235.166 1247.12,234.865 1247.69,234.918 1248.26,236.041 1248.83,235.764 1249.4,235.854 1249.97,235.979 1250.53,237.201 1251.1,235.988 1251.67,234.858 1252.24,235.74 1252.81,236.829 1253.38,237.802 1253.94,237.628 1254.51,238.474 1255.08,238.296 1255.65,234.156 1256.22,235.266 1256.79,234.247 1257.35,235.243 1257.92,235.268 1258.49,237.193 1259.06,236.026 1259.63,235.718 1260.2,235.844 1260.76,237.738 1261.33,239.503 1261.9,240.138 1262.47,237.925 1263.04,237.81 1263.61,239.795 1264.18,240.394 1264.74,240.742 1265.31,241.086 1265.88,242.401 1266.45,239.693 1267.02,238.183 1267.59,238.86 1268.15,238.365 1268.72,238.093 1269.29,238.612 1269.86,238.418 1270.43,235.112 1271,236.953 1271.56,235.592 1272.13,234.265 1272.7,233.165 1273.27,232.127 1273.84,234.078 1274.41,232.117 1274.97,230.126 1275.54,230.321 1276.11,228.471 1276.68,226.593 1277.25,224.635 1277.82,224.11 1278.38,226.601 1278.95,227.239 1279.52,228.793 1280.09,228.404 1280.66,227.744 1281.23,227.968 1281.79,229.43 1282.36,230.736 1282.93,231.879 1283.5,233.254 1284.07,232.27 1284.64,231.461 1285.2,230.648 1285.77,228.858 1286.34,229.176 1286.91,229.537 1287.48,230.693 1288.05,231.064 1288.61,230.548 1289.18,231.058 1289.75,232.416 1290.32,233.87 1290.89,232.816 1291.46,231.102 1292.02,230.214 1292.59,227.481 1293.16,229.947 1293.73,230.425 1294.3,230.058 1294.87,229.517 1295.43,230.973 1296,231.484 1296.57,230.965 1297.14,232.392 1297.71,232.729 1298.28,232.907 1298.84,236.457 1299.41,237.433 1299.98,239.2 1300.55,240.212 1301.12,240.771 1301.69,240.513 1302.25,241.296 1302.82,242.858 1303.39,239.369 1303.96,238.055 1304.53,237.804 1305.1,238.555 1305.66,238.279 1306.23,237.921 1306.8,238.744 1307.37,234.326 1307.94,233.463 1308.51,231.467 1309.07,233.704 1309.64,234.759 1310.21,235.512 1310.78,235.59 1311.35,234.593 1311.92,235.697 1312.48,235.603 1313.05,235.643 1313.62,236.688 1314.19,236.709 1314.76,235.643 1315.33,235.578 1315.89,237.413 1316.46,235.233 1317.03,235.364 1317.6,236.28 1318.17,236.997 1318.74,237.857 1319.3,236.851 1319.87,237.804 1320.44,238.575 1321.01,238.308 1321.58,238.858 1322.15,239.368 1322.71,240.041 1323.28,238.893 1323.85,240.593 1324.42,242.288 1324.99,241.69 1325.56,240.966 1326.12,239.252 1326.69,238.771 1327.26,236.256 1327.83,235.972 1328.4,234.711 1328.97,236.662 1329.53,238.429 1330.1,238.957 1330.67,237.331 1331.24,238.036 1331.81,238.644 1332.38,239.176 1332.94,240.857 1333.51,240.299 1334.08,238.899 1334.65,238.398 1335.22,235.84 1335.79,233.528 1336.36,232.453 1336.92,234.307 1337.49,235.108 1338.06,234.922 1338.63,233.637 1339.2,234.478 1339.77,235.199 1340.33,235.804 1340.9,235.348 1341.47,235.069 1342.04,232.834 1342.61,231.772 1343.18,231.936 1343.74,233.061 1344.31,233.913 1344.88,231.918 1345.45,232.094 1346.02,232.193 1346.59,231.962 1347.15,230.982 1347.72,227.749 1348.29,227.153 1348.86,227.791 1349.43,228.046 1350,228.362 1350.56,228.546 1351.13,231.15 1351.7,231.108 1352.27,230.149 1352.84,228.402 1353.41,228.531 1353.97,228.895 1354.54,229.212 1355.11,229.446 1355.68,228.808 1356.25,228.261 1356.82,228.627 1357.38,229.11 1357.95,229.341 1358.52,229.646 1359.09,231.172 1359.66,233.441 1360.23,234.634 1360.79,232.523 1361.36,234.705 1361.93,234.631 1362.5,236.585 1363.07,234.385 1363.64,235.528 1364.2,233.5 1364.77,233.608 1365.34,233.791 1365.91,232.784 1366.48,232.118 1367.05,232.173 1367.61,231.333 1368.18,231.512 1368.75,230.527 1369.32,230.652 1369.89,230.804 1370.46,229.034 1371.02,229.145 1371.59,234.629 1372.16,235.832 1372.73,233.429 1373.3,235.506 1373.87,236.224 1374.43,238.14 1375,237.914 1375.57,237.835 1376.14,237.666 1376.71,239.326 1377.28,237.088 1377.84,238.082 1378.41,236.812 1378.98,236.878 1379.55,238.529 1380.12,238.308 1380.69,239.071 1381.25,240.725 1381.82,238.117 1382.39,237.76 1382.96,237.482 1383.53,236.313 1384.1,237.325 1384.66,239.118 1385.23,239.66 1385.8,238.044 1386.37,237.707 1386.94,238.303 1387.51,237.874 1388.07,237.531 1388.64,238.115 1389.21,237.701 1389.78,237.36 1390.35,237.225 1390.92,236.844 1391.48,236.531 1392.05,236.4 1392.62,235.052 1393.19,236.692 1393.76,237.319 1394.33,235.957 1394.89,233.445 1395.46,233.215 1396.03,232.949 1396.6,232.96 1397.17,234.029 1397.74,235.085 1398.3,235.93 1398.87,234.413 1399.44,233.122 1400.01,232.915 1400.58,232.827 1401.15,234.096 1401.71,232.877 1402.28,232.705 1402.85,232.672 1403.42,229.632 1403.99,227.976 1404.56,230.391 1405.13,231.689 1405.69,230.881 1406.26,231.271 1406.83,231.268 1407.4,232.423 1407.97,231.767 1408.54,231.984 1409.1,233.096 1409.67,230.785 1410.24,230.997 1410.81,232.142 1411.38,230.839 1411.95,230.993 1412.51,233.363 1413.08,232.331 1413.65,233.471 1414.22,234.381 1414.79,236.085 1415.36,236.937 1415.92,236.544 1416.49,236.413 1417.06,236.003 1417.63,236.756 1418.2,236.506 1418.77,236.309 1419.33,234.987 1419.9,235.152 1420.47,235.073 1421.04,235.078 1421.61,235.125 1422.18,233.758 1422.74,233.648 1423.31,232.654 1423.88,234.69 1424.45,235.549 1425.02,236.429 1425.59,240.234 1426.15,238.623 1426.72,237.257 1427.29,235.985 1427.86,235.764 1428.43,235.54 1429,234.957 1429.56,232.738 1430.13,231.604 1430.7,231.568 1431.27,231.595 1431.84,232.755 1432.41,231.753 1432.97,233.92 1433.54,232.704 1434.11,231.599 1434.68,230.787 1435.25,228.719 1435.82,228.111 1436.38,228.31 1436.95,224.599 1437.52,224.154 1438.09,223.882 1438.66,221.59 1439.23,221.043 1439.79,219.984 1440.36,221.013 1440.93,219.895 1441.5,222.772 1442.07,220.54 1442.64,222.413 1443.2,224.099 1443.77,225.727 1444.34,226.28 1444.91,229.09 1445.48,230.55 1446.05,231.901 1446.61,236.257 1447.18,236.201 1447.75,239.204 1448.32,238.861 1448.89,238.591 1449.46,237.396 1450.02,238.277 1450.59,239.148 1451.16,237.969 1451.73,238.892 1452.3,238.709 1452.87,239.566 1453.43,239.171 1454,239.838 1454.57,238.361 1455.14,238.122 1455.71,235.785 1456.28,233.646 1456.84,233.576 1457.41,233.595 1457.98,235.357 1458.55,237.061 1459.12,237.779 1459.69,237.287 1460.25,240.273 1460.82,238.933 1461.39,238.651 1461.96,238.673 1462.53,239.31 1463.1,239.848 1463.66,240.708 1464.23,239.942 1464.8,239.536 1465.37,237.035 1465.94,235.669 1466.51,234.533 1467.07,234.475 1467.64,235.57 1468.21,235.231 1468.78,236.299 1469.35,234.925 1469.92,233.626 1470.48,232.687 1471.05,233.901 1471.62,231.954 1472.19,230.966 1472.76,227.905 1473.33,227.369 1473.89,227.714 1474.46,229.179 1475.03,229.647 1475.6,229.787 1476.17,232.252 1476.74,230.142 1477.31,232.32 1477.87,231.451 1478.44,231.725 1479.01,229.93 1479.58,230.129 1480.15,229.347 1480.72,229.674 1481.28,234.136 1481.85,236.296 1482.42,235.915 1482.99,238.797 1483.56,240.356 1484.13,239.805 1484.69,240.447 1485.26,238.727 1485.83,240.339 1486.4,237.882 1486.97,237.718 1487.54,237.554 1488.1,236.265 1488.67,234.988 1489.24,234.897 1489.81,233.689 1490.38,233.907 1490.95,234.911 1491.51,231.97 1492.08,232.124 1492.65,232.012 1493.22,232.103 1493.79,229.906 1494.36,231.305 1494.92,232.541 1495.49,232.621 1496.06,233.796 1496.63,233.694 1497.2,232.878 1497.77,231.873 1498.33,233.137 1498.9,233.938 1499.47,233.913 1500.04,232.661 1500.61,231.762 1501.18,232.716 1501.74,233.822 1502.31,234.658 1502.88,235.732 1503.45,236.357 1504.02,236.997 1504.59,235.592 1505.15,235.402 1505.72,234.662 1506.29,234.792 1506.86,231.573 1507.43,230.452 1508,230.691 1508.56,232.964 1509.13,232.94 1509.7,232.118 1510.27,232.378 1510.84,232.558 1511.41,231.717 1511.97,228.802 1512.54,231.139 1513.11,231.357 1513.68,230.358 1514.25,230.564 1514.82,230.825 1515.38,231.046 1515.95,232.404 1516.52,232.426 1517.09,232.525 1517.66,233.615 1518.23,232.645 1518.79,230.694 1519.36,228.017 1519.93,230.685 1520.5,230.834 1521.07,231.264 1521.64,231.483 1522.2,229.723 1522.77,231.182 1523.34,231.614 1523.91,230.88 1524.48,232.131 1525.05,232.253 1525.61,233.431 1526.18,233.689 1526.75,233.937 1527.32,233.824 1527.89,234.903 1528.46,233.706 1529.02,234.825 1529.59,235.982 1530.16,234.711 1530.73,232.809 1531.3,232.982 1531.87,233.058 1532.43,233.307 1533,233.458 1533.57,233.491 1534.14,233.499 1534.71,234.628 1535.28,234.835 1535.84,234.87 1536.41,233.787 1536.98,235.726 1537.55,235.966 1538.12,236.951 1538.69,234.67 1539.25,234.551 1539.82,234.647 1540.39,235.673 1540.96,234.531 1541.53,233.551 1542.1,232.553 1542.66,235.084 1543.23,236.047 1543.8,237.13 1544.37,235.95 1544.94,237.203 1545.51,234.914 1546.08,235.755 1546.64,235.709 1547.21,235.501 1547.78,236.332 1548.35,237.158 1548.92,239.046 1549.49,238.78 1550.05,239.612 1550.62,239.173 1551.19,239.054 1551.76,237.532 1552.33,236.302 1552.9,237.037 1553.46,236.909 1554.03,233.714 1554.6,234.677 1555.17,233.928 1555.74,233.945 1556.31,233.938 1556.87,231.864 1557.44,233.222 1558.01,231.078 1558.58,231.17 1559.15,230.4 1559.72,230.65 1560.28,230.902 1560.85,233.26 1561.42,231.342 1561.99,231.567 1562.56,230.766 1563.13,229.954 1563.69,229.009 1564.26,230.678 1564.83,229.903 1565.4,233.416 1565.97,234.597 1566.54,235.857 1567.1,237.924 1567.67,237.855 1568.24,238.816 1568.81,240.592 1569.38,239.078 1569.95,236.791 1570.51,238.631 1571.08,240.182 1571.65,240.729 1572.22,239.126 1572.79,237.61 1573.36,238.655 1573.92,236.296 1574.49,235.102 1575.06,236.103 1575.63,233.849 1576.2,234.623 1576.77,232.524 1577.33,232.371 1577.9,232.392 1578.47,229.415 1579.04,230.864 1579.61,231.16 1580.18,232.443 1580.74,232.415 1581.31,231.451 1581.88,230.603 1582.45,230.897 1583.02,230.035 1583.59,228.533 1584.15,228.046 1584.72,229.558 1585.29,228.882 1585.86,227.218 1586.43,226.675 1587,228.156 1587.56,227.625 1588.13,228.086 1588.7,229.349 1589.27,232.9 1589.84,229.186 1590.41,230.731 1590.97,233.01 1591.54,234.007 1592.11,235.074 1592.68,236.102 1593.25,234.824 1593.82,234.937 1594.38,234.993 1594.95,234.024 1595.52,233.069 1596.09,233.016 1596.66,233.194 1597.23,235.315 1597.79,235.526 1598.36,231.619 1598.93,235.096 1599.5,238.208 1600.07,237.992 1600.64,237.787 1601.2,236.652 1601.77,237.547 1602.34,235.583 1602.91,234.431 1603.48,234.603 1604.05,235.603 1604.61,234.549 1605.18,236.709 1605.75,236.815 1606.32,235.632 1606.89,234.442 1607.46,236.55 1608.02,235.467 1608.59,234.51 1609.16,236.699 1609.73,234.559 1610.3,235.808 1610.87,233.749 1611.43,234.869 1612,233.974 1612.57,233.973 1613.14,235.103 1613.71,235.094 1614.28,236.029 1614.84,237.984 1615.41,239.404 1615.98,239.929 1616.55,238.422 1617.12,238.112 1617.69,238.683 1618.26,239.254 1618.82,237.885 1619.39,236.677 1619.96,238.52 1620.53,239.106 1621.1,238.703 1621.67,236.274 1622.23,236.868 1622.8,237.671 1623.37,237.471 1623.94,238.113 1624.51,234.583 1625.08,231.533 1625.64,230.812 1626.21,231.753 1626.78,231.877 1627.35,233.944 1627.92,232.87 1628.49,233.953 1629.05,232.843 1629.62,232.935 1630.19,232.943 1630.76,230.841 1631.33,227.826 1631.9,229.186 1632.46,227.605 1633.03,229.646 1633.6,227.997 1634.17,229.51 1634.74,228.795 1635.31,230.009 1635.87,230.215 1636.44,228.575 1637.01,228.964 1637.58,227.291 1638.15,228.902 1638.72,231.296 1639.28,229.412 1639.85,232.016 1640.42,231.2 1640.99,232.662 1641.56,232.831 1642.13,230.914 1642.69,230.147 1643.26,230.409 1643.83,231.868 1644.4,231.931 1644.97,233.173 1645.54,233.547 1646.1,234.493 1646.67,233.71 1647.24,232.652 1647.81,234.673 1648.38,234.534 1648.95,234.565 1649.51,235.583 1650.08,236.425 1650.65,234.435 1651.22,235.271 1651.79,236.371 1652.36,236.128 1652.92,237.111 1653.49,237.924 1654.06,237.583 1654.63,236.459 1655.2,237.207 1655.77,237.093 1656.33,236.032 1656.9,235.95 1657.47,234.984 1658.04,235.094 1658.61,234.147 1659.18,233.2 1659.74,231.335 1660.31,231.377 1660.88,228.499 1661.45,229.056 1662.02,227.455 1662.59,228.025 1663.15,228.651 1663.72,231.212 1664.29,232.462 1664.86,231.583 1665.43,234.88 1666,235.929 1666.56,235.012 1667.13,234.846 1667.7,234.942 1668.27,235.036 1668.84,237.038 1669.41,233.965 1669.97,234.121 1670.54,234.146 1671.11,236.264 1671.68,236.181 1672.25,237.281 1672.82,234.026 1673.38,234.052 1673.95,234.027 1674.52,233.913 1675.09,233.821 1675.66,234.84 1676.23,234.495 1676.79,231.473 1677.36,232.746 1677.93,232.881 1678.5,234.981 1679.07,236.001 1679.64,236.022 1680.2,235.858 1680.77,234.869 1681.34,233.468 1681.91,232.261 1682.48,230.411 1683.05,233.897 1683.61,234.073 1684.18,237.483 1684.75,235.145 1685.32,233.966 1685.89,235.102 1686.46,234.036 1687.02,234.061 1687.59,234.109 1688.16,234.343 1688.73,235.511 1689.3,237.32 1689.87,234.08 1690.44,236.338 1691,236.093 1691.57,234.832 1692.14,237.963 1692.71,238.731 1693.28,239.593 1693.85,239.021 1694.41,238.779 1694.98,240.501 1695.55,238.876 1696.12,237.4 1696.69,235.291 1697.26,233.898 1697.82,232.64 1698.39,234.661 1698.96,234.644 1699.53,235.545 1700.1,235.171 1700.67,236.046 1701.23,234.891 1701.8,235.937 1702.37,235.844 1702.94,234.645 1703.51,233.483 1704.08,232.456 1704.64,232.479 1705.21,231.567 1705.78,232.503 1706.35,231.585 1706.92,230.568 1707.49,232.991 1708.05,233.103 1708.62,233.067 1709.19,232.349 1709.76,231.427 1710.33,232.655 1710.9,231.78 1711.46,233.983 1712.03,235.083 1712.6,234.971 1713.17,234.805 1713.74,233.776 1714.31,236.875 1714.87,237.547 1715.44,235.095 1716.01,236.224 1716.58,235.051 1717.15,236.982 1717.72,237.701 1718.28,235.57 1718.85,236.471 1719.42,238.293 1719.99,240.296 1720.56,237.806 1721.13,235.21 1721.69,236.114 1722.26,236.075 1722.83,236.972 1723.4,236.766 1723.97,236.436 1724.54,237.424 1725.1,236.28 1725.67,235.955 1726.24,234.851 1726.81,234.646 1727.38,234.533 1727.95,233.236 1728.51,236.306 1729.08,234.845 1729.65,235.606 1730.22,234.23 1730.79,235.291 1731.36,232.957 1731.92,231.951 1732.49,233.055 1733.06,232.966 1733.63,233.922 1734.2,234.633 1734.77,233.403 1735.33,232.322 1735.9,232.39 1736.47,233.463 1737.04,232.491 1737.61,231.567 1738.18,233.954 1738.74,231.777 1739.31,230.82 1739.88,230.972 1740.45,233.013 1741.02,231.771 1741.59,232 1742.15,230.95 1742.72,232.023 1743.29,233.137 1743.86,231.343 1744.43,231.737 1745,233.066 1745.56,233.128 1746.13,232.877 1746.7,232.77 1747.27,231.826 1747.84,231.802 1748.41,229.888 1748.97,229.138 1749.54,230.482 1750.11,229.668 1750.68,233.069 1751.25,235.274 1751.82,234.08 1752.38,236.352 1752.95,238.115 1753.52,239.033 1754.09,238.498 1754.66,236.901 1755.23,236.431 1755.79,236.232 1756.36,238.147 1756.93,237.996 1757.5,237.625 1758.07,237.277 1758.64,236.06 1759.21,236.977 1759.77,236.704 1760.34,236.492 1760.91,237.309 1761.48,234.07 1762.05,233.988 1762.62,234.002 1763.18,234.085 1763.75,234.053 1764.32,230.182 1764.89,229.362 1765.46,229.31 1766.03,228.572 1766.59,229.039 1767.16,230.305 1767.73,228.486 1768.3,229.938 1768.87,230.271 1769.44,230.487 1770,233.828 1770.57,235.766 1771.14,235.285 1771.71,236.116 1772.28,234.975 1772.85,233.693 1773.41,232.681 1773.98,229.8 1774.55,229.157 1775.12,232.43 1775.69,233.483 1776.26,233.43 1776.82,233.67 1777.39,232.687 1777.96,233.002 1778.53,233.886 1779.1,232.705 1779.67,233.742 1780.23,234.853 1780.8,235.845 1781.37,235.611 1781.94,238.765 1782.51,239.566 1783.08,237.053 1783.64,237.975 1784.21,234.662 1784.78,235.743 1785.35,238.4 1785.92,238.124 1786.49,237.798 1787.05,239.617 1787.62,237.886 1788.19,238.62 1788.76,237.011 1789.33,235.696 1789.9,234.595 1790.46,234.452 1791.03,234.348 1791.6,235.369 1792.17,235.259 1792.74,235.191 1793.31,236.903 1793.87,237.562 1794.44,237.305 1795.01,234.854 1795.58,235.825 1796.15,235.658 1796.72,235.294 1797.28,235.226 1797.85,235.922 1798.42,235.485 1798.99,238.545 1799.56,238.084 1800.13,236.76 1800.69,235.365 1801.26,235.097 1801.83,232.89 1802.4,233.767 1802.97,233.48 1803.54,233.482 1804.1,231.317 1804.67,231.147 1805.24,230.083 1805.81,229.228 1806.38,230.767 1806.95,231.744 1807.51,231.764 1808.08,230.907 1808.65,229.085 1809.22,230.289 1809.79,231.557 1810.36,231.72 1810.92,232.984 1811.49,234.039 1812.06,234.07 1812.63,234.972 1813.2,232.815 1813.77,230.552 1814.33,231.818 1814.9,231.84 1815.47,233.088 1816.04,230.889 1816.61,230.997 1817.18,233.334 1817.74,232.512 1818.31,234.485 1818.88,235.386 1819.45,234.413 1820.02,233.384 1820.59,234.401 1821.15,234.245 1821.72,234.056 1822.29,234.84 1822.86,235.774 1823.43,236.642 1824,235.297 1824.56,237.119 1825.13,235.574 1825.7,230.26 1826.27,229.59 1826.84,230.116 1827.41,230.296 1827.97,230.492 1828.54,230.673 1829.11,225.912 1829.68,226.541 1830.25,228.997 1830.82,229.417 1831.39,230.597 1831.95,232.671 1832.52,231.517 1833.09,229.502 1833.66,228.66 1834.23,227.911 1834.8,228.385 1835.36,230.1 1835.93,229.568 1836.5,230.989 1837.07,229.234 1837.64,229.777 1838.21,229.194 1838.77,229.642 1839.34,231.034 1839.91,232.289 1840.48,232.493 1841.05,231.633 1841.62,232.693 1842.18,231.812 1842.75,231.864 1843.32,230.993 1843.89,232.236 1844.46,232.592 1845.03,232.808 1845.59,230.025 1846.16,231.492 1846.73,236.011 1847.3,236.118 1847.87,236.866 1848.44,235.826 1849,235.717 1849.57,236.65 1850.14,234.683 1850.71,234.485 1851.28,235.301 1851.85,234.066 1852.41,235.196 1852.98,234.396 1853.55,235.722 1854.12,236.763 1854.69,235.489 1855.26,238.658 1855.82,238.262 1856.39,237.922 1856.96,236.639 1857.53,237.65 1858.1,238.574 1858.67,238.44 1859.23,236.104 1859.8,235.957 1860.37,236.068 1860.94,236.083 1861.51,235.149 1862.08,232.01 1862.64,231.31 1863.21,232.412 1863.78,233.702 1864.35,232.723 1864.92,235.973 1865.49,234.77 1866.05,235.724 1866.62,237.499 1867.19,236.198 1867.76,237.24 1868.33,236.041 1868.9,238.16 1869.46,238.813 1870.03,239.681 1870.6,239.311 1871.17,236.036 1871.74,235.753 1872.31,235.834 1872.87,234.734 1873.44,235.962 1874.01,236.731 1874.58,236.518 1875.15,235.429 1875.72,234.071 1876.28,232.988 1876.85,232.077 1877.42,229.302 1877.99,227.649 1878.56,226.922 1879.13,227.214 1879.69,227.864 1880.26,229.162 1880.83,229.727 1881.4,230.082 1881.97,229.449 1882.54,229.759 1883.1,231.077 1883.67,231.085 1884.24,232.535 1884.81,232.662 1885.38,232.909 1885.95,233.01 1886.51,235.219 1887.08,236.305 1887.65,235.174 1888.22,235.006 1888.79,233.017 1889.36,233.205 1889.92,232.172 1890.49,233.483 1891.06,233.615 1891.63,234.68 1892.2,233.746 1892.77,233.81 1893.33,234.872 1893.9,236.944 1894.47,235.795 1895.04,233.443 1895.61,232.462 1896.18,234.669 1896.74,235.71 1897.31,238.881 1897.88,238.619 1898.45,238.327 1899.02,236.929 1899.59,234.563 1900.16,235.563 1900.72,235.292 1901.29,235.235 1901.86,233.144 1902.43,237.212 1903,235.91 1903.57,235.835 1904.13,235.778 1904.7,233.735 1905.27,235.055 1905.84,235.099 1906.41,235.002 1906.98,234.632 1907.54,232.701 1908.11,230.686 1908.68,232.009 1909.25,231.401 1909.82,232.712 1910.39,231.489 1910.95,232.751 1911.52,233.736 1912.09,233.958 1912.66,234.813 1913.23,234.875 1913.8,235.929 1914.36,239.808 1914.93,239.35 1915.5,242.117 1916.07,240.455 1916.64,238.017 1917.21,238.644 1917.77,237.012 1918.34,237.688 1918.91,238.324 1919.48,236.909 1920.05,235.569 1920.62,232.158 1921.18,232.153 1921.75,230.26 1922.32,230.438 1922.89,230.66 1923.46,229.933 1924.03,231.286 1924.59,232.2 1925.16,231.26 1925.73,230.481 1926.3,228.734 1926.87,231.085 1927.44,232.193 1928,233.297 1928.57,233.163 1929.14,232.031 1929.71,232.162 1930.28,232.275 1930.85,232.44 1931.41,234.675 1931.98,234.607 1932.55,234.455 1933.12,234.489 1933.69,236.713 1934.26,236.567 1934.82,236.312 1935.39,235.151 1935.96,234.41 1936.53,236.639 1937.1,235.336 1937.67,235.273 1938.23,236.128 1938.8,235.222 1939.37,235.945 1939.94,236.872 1940.51,235.687 1941.08,234.447 1941.64,233.127 1942.21,233.307 1942.78,234.388 1943.35,235.273 1943.92,235.199 1944.49,233.068 1945.05,234.229 1945.62,233.187 1946.19,232.358 1946.76,233.103 1947.33,235.139 1947.9,233.857 1948.46,233.822 1949.03,233.048 1949.6,231.936 1950.17,234.068 1950.74,235.063 1951.31,235.005 1951.87,235.762 1952.44,235.37 1953.01,235.267 1953.58,235.3 1954.15,235.957 1954.72,234.495 1955.28,235.386 1955.85,235.123 1956.42,234.952 1956.99,235.844 1957.56,234.717 1958.13,234.866 1958.69,231.623 1959.26,231.56 1959.83,232.71 1960.4,232.896 1960.97,231.922 1961.54,230.982 1962.1,229.202 1962.67,226.643 1963.24,226.291 1963.81,227.062 1964.38,228.441 1964.95,228.801 1965.51,229.346 1966.08,228.469 1966.65,228.74 1967.22,228.221 1967.79,232.816 1968.36,233.922 1968.92,234.933 1969.49,235.895 1970.06,234.872 1970.63,234.822 1971.2,237.495 1971.77,235.349 1972.34,234.129 1972.9,237.424 1973.47,239.318 1974.04,239.036 1974.61,238.777 1975.18,238.427 1975.75,238.915 1976.31,237.651 1976.88,238.256 1977.45,238.933 1978.02,240.514 1978.59,239.946 1979.16,239.452 1979.72,238.115 1980.29,236.64 1980.86,236.66 1981.43,234.399 1982,235.466 1982.57,235.423 1983.13,235.422 1983.7,234.979 1984.27,233.559 1984.84,232.528 1985.41,232.593 1985.98,235.595 1986.54,233.356 1987.11,232.449 1987.68,231.523 1988.25,231.742 1988.82,229.852 1989.39,228.002 1989.95,227.181 1990.52,228.724 1991.09,230.088 1991.66,232.446 1992.23,233.641 1992.8,232.487 1993.36,233.563 1993.93,233.405 1994.5,231.521 1995.07,232.764 1995.64,233.047 1996.21,232.188 1996.77,235.547 1997.34,234.392 1997.91,235.623 1998.48,235.485 1999.05,235.201 1999.62,236.122 2000.18,238.003 2000.75,239.548 2001.32,240.179 2001.89,239.71 2002.46,239.437 2003.03,239.121 2003.59,238.765 2004.16,238.41 2004.73,239.096 2005.3,237.701 2005.87,238.377 2006.44,238.19 2007,235.914 2007.57,235.819 2008.14,236.651 2008.71,236.47 2009.28,234.476 2009.85,233.238 2010.41,234.153 2010.98,234.116 2011.55,235.185 2012.12,233.992 2012.69,236.077 2013.26,234.55 2013.82,233.539 2014.39,233.419 2014.96,232.412 2015.53,231.266 2016.1,231.33 2016.67,232.617 2017.23,231.545 2017.8,232.619 2018.37,232.552 2018.94,232.529 2019.51,231.566 2020.08,232.637 2020.64,233.456 2021.21,232.25 2021.78,231.165 2022.35,230.431 2022.92,229.587 2023.49,229.957 2024.05,229.18 2024.62,229.476 2025.19,233.775 2025.76,232.561 2026.33,232.502 2026.9,232.445 2027.46,233.647 2028.03,229.609 2028.6,230.061 2029.17,229.262 2029.74,230.708 2030.31,229.991 2030.87,230.366 2031.44,232.452 2032.01,230.295 2032.58,230.606 2033.15,230.017 2033.72,231.61 2034.28,231.879 2034.85,230.244 2035.42,229.645 2035.99,231.068 2036.56,232.513 2037.13,233.559 2037.69,232.81 2038.26,231.906 2038.83,234.048 2039.4,235.158 2039.97,233.295 2040.54,233.177 2041.11,233.055 2041.67,234.122 2042.24,233.016 2042.81,232.219 2043.38,232.565 2043.95,232.682 2044.52,232.74 2045.08,230.683 2045.65,231.9 2046.22,231.216 2046.79,227.395 2047.36,228.855 2047.93,229.12 2048.49,228.508 2049.06,229.977 2049.63,230.336 2050.2,231.661 2050.77,228.796 2051.34,231.346 2051.9,231.656 2052.47,231.988 2053.04,230.249 2053.61,230.487 2054.18,230.853 2054.75,228.975 2055.31,229.477 2055.88,228.061 2056.45,230.006 2057.02,230.205 2057.59,228.393 2058.16,230.056 2058.72,231.49 2059.29,230.633 2059.86,233.247 2060.43,236.509 2061,236.326 2061.57,238.241 2062.13,237.89 2062.7,238.734 2063.27,238.596 2063.84,237.42 2064.41,236.419 2064.98,236.463 2065.54,239.564 2066.11,240.111 2066.68,237.628 2067.25,237.73 2067.82,236.514 2068.39,236.279 2068.95,236.277 2069.52,234.148 2070.09,234.149 2070.66,236.236 2071.23,235.08 2071.8,238.241 2072.36,240.061 2072.93,240.904 2073.5,239.599 2074.07,239.229 2074.64,237.835 2075.21,237.439 2075.77,237.297 2076.34,235.876 2076.91,236.817 2077.48,237.803 2078.05,237.396 2078.62,237.411 2079.18,235.044 2079.75,234.832 2080.32,232.638 2080.89,231.64 2081.46,230.989 2082.03,231.517 2082.59,230.902 2083.16,232.379 2083.73,232.528 2084.3,231.508 2084.87,231.628 2085.44,229.922 2086,229.158 2086.57,230.455 2087.14,230.767 2087.71,230.961 2088.28,232.316 2088.85,233.745 2089.41,234.712 2089.98,235.675 2090.55,235.564 2091.12,237.601 2091.69,237.332 2092.26,238.346 2092.82,238.885 2093.39,239.48 2093.96,238.193 2094.53,236.997 2095.1,235.609 2095.67,235.45 2096.23,236.329 2096.8,236.286 2097.37,237.383 2097.94,235.183 2098.51,234.163 2099.08,236.284 2099.64,236.037 2100.21,236.942 2100.78,235.695 2101.35,233.491 2101.92,230.551 2102.49,230.84 2103.05,232.248 2103.62,231.491 2104.19,230.641 2104.76,225.53 2105.33,226.219 2105.9,225.808 2106.46,227.44 2107.03,226.967 2107.6,228.638 2108.17,230.217 2108.74,229.531 2109.31,229.023 2109.87,228.192 2110.44,230.657 2111.01,228.826 2111.58,228.326 2112.15,230.049 2112.72,231.521 2113.29,232.986 2113.85,232.238 2114.42,235.573 2114.99,237.641 2115.56,237.329 2116.13,238.355 2116.7,237.999 2117.26,237.997 2117.83,240.736 2118.4,240.413 2118.97,238.856 2119.54,240.494 2120.11,241.052 2120.67,242.776 2121.24,243.192 2121.81,243.704 2122.38,242.977 2122.95,242.242 2123.52,242.661 2124.08,243.167 2124.65,241.628 2125.22,237.821 2125.79,237.651 2126.36,235.444 2126.93,234.386 2127.49,235.246 2128.06,234.013 2128.63,233.741 2129.2,232.359 2129.77,231.387 2130.34,230.448 2130.9,232.699 2131.47,231.722 2132.04,228.809 2132.61,229.209 2133.18,230.671 2133.75,230.902 2134.31,231.022 2134.88,233.143 2135.45,234.269 2136.02,232.455 2136.59,231.642 2137.16,232.834 2137.72,231.965 2138.29,232.139 2138.86,231.549 2139.43,231.702 2140,235.824 2140.57,234.531 2141.13,236.315 2141.7,234.191 2142.27,233.077 2142.84,232.47 2143.41,233.474 2143.98,234.646 2144.54,234.536 2145.11,234.375 2145.68,234.335 2146.25,236.256 2146.82,235.123 2147.39,234.023 2147.95,234.032 2148.52,236.12 2149.09,237.038 2149.66,236.989 2150.23,236.766 2150.8,236.597 2151.36,238.66 2151.93,239.233 2152.5,238.697 2153.07,239.364 2153.64,238.859 2154.21,242.673 2154.77,240.952 2155.34,240.501 2155.91,237.941 2156.48,239.591 2157.05,235.174 2157.62,235.128 2158.18,234.857 2158.75,235.597 2159.32,233.255 2159.89,235.249 \"/>\n<path clip-path=\"url(#clip130)\" d=\"M1649.46 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1649.46 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip130)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1649.46,1245.03 2150.8,1245.03 2150.8,1089.51 1649.46,1089.51 1649.46,1245.03 \"/>\n<polyline clip-path=\"url(#clip130)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1669.53,1141.35 1789.98,1141.35 \"/>\n<path clip-path=\"url(#clip130)\" d=\"M1817.46 1125.34 L1817.46 1132.71 L1826.23 1132.71 L1826.23 1136.02 L1817.46 1136.02 L1817.46 1150.09 Q1817.46 1153.26 1818.32 1154.16 Q1819.2 1155.07 1821.86 1155.07 L1826.23 1155.07 L1826.23 1158.63 L1821.86 1158.63 Q1816.93 1158.63 1815.05 1156.8 Q1813.18 1154.95 1813.18 1150.09 L1813.18 1136.02 L1810.05 1136.02 L1810.05 1132.71 L1813.18 1132.71 L1813.18 1125.34 L1817.46 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1843.62 1145.6 Q1838.46 1145.6 1836.47 1146.78 Q1834.48 1147.96 1834.48 1150.81 Q1834.48 1153.08 1835.96 1154.42 Q1837.46 1155.74 1840.03 1155.74 Q1843.57 1155.74 1845.7 1153.24 Q1847.86 1150.72 1847.86 1146.55 L1847.86 1145.6 L1843.62 1145.6 M1852.11 1143.84 L1852.11 1158.63 L1847.86 1158.63 L1847.86 1154.7 Q1846.4 1157.06 1844.22 1158.19 Q1842.05 1159.3 1838.9 1159.3 Q1834.92 1159.3 1832.55 1157.08 Q1830.22 1154.84 1830.22 1151.09 Q1830.22 1146.71 1833.13 1144.49 Q1836.07 1142.27 1841.88 1142.27 L1847.86 1142.27 L1847.86 1141.85 Q1847.86 1138.91 1845.91 1137.31 Q1843.99 1135.69 1840.49 1135.69 Q1838.27 1135.69 1836.17 1136.22 Q1834.06 1136.76 1832.11 1137.82 L1832.11 1133.89 Q1834.45 1132.98 1836.65 1132.54 Q1838.85 1132.08 1840.93 1132.08 Q1846.56 1132.08 1849.34 1135 Q1852.11 1137.91 1852.11 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1875.91 1136.69 Q1875.19 1136.27 1874.34 1136.09 Q1873.5 1135.88 1872.48 1135.88 Q1868.87 1135.88 1866.93 1138.24 Q1865.01 1140.58 1865.01 1144.97 L1865.01 1158.63 L1860.73 1158.63 L1860.73 1132.71 L1865.01 1132.71 L1865.01 1136.73 Q1866.35 1134.37 1868.5 1133.24 Q1870.66 1132.08 1873.73 1132.08 Q1874.17 1132.08 1874.71 1132.15 Q1875.24 1132.2 1875.89 1132.31 L1875.91 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1896.6 1145.37 Q1896.6 1140.74 1894.68 1138.19 Q1892.79 1135.65 1889.34 1135.65 Q1885.91 1135.65 1883.99 1138.19 Q1882.09 1140.74 1882.09 1145.37 Q1882.09 1149.97 1883.99 1152.52 Q1885.91 1155.07 1889.34 1155.07 Q1892.79 1155.07 1894.68 1152.52 Q1896.6 1149.97 1896.6 1145.37 M1900.86 1155.41 Q1900.86 1162.03 1897.92 1165.25 Q1894.98 1168.49 1888.92 1168.49 Q1886.67 1168.49 1884.68 1168.15 Q1882.69 1167.82 1880.82 1167.13 L1880.82 1162.98 Q1882.69 1164 1884.52 1164.49 Q1886.35 1164.97 1888.25 1164.97 Q1892.44 1164.97 1894.52 1162.78 Q1896.6 1160.6 1896.6 1156.18 L1896.6 1154.07 Q1895.29 1156.36 1893.23 1157.5 Q1891.17 1158.63 1888.29 1158.63 Q1883.53 1158.63 1880.61 1155 Q1877.69 1151.36 1877.69 1145.37 Q1877.69 1139.35 1880.61 1135.72 Q1883.53 1132.08 1888.29 1132.08 Q1891.17 1132.08 1893.23 1133.22 Q1895.29 1134.35 1896.6 1136.64 L1896.6 1132.71 L1900.86 1132.71 L1900.86 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1931.81 1144.6 L1931.81 1146.69 L1912.23 1146.69 Q1912.51 1151.09 1914.87 1153.4 Q1917.25 1155.69 1921.49 1155.69 Q1923.94 1155.69 1926.23 1155.09 Q1928.55 1154.49 1930.82 1153.28 L1930.82 1157.31 Q1928.53 1158.28 1926.12 1158.79 Q1923.71 1159.3 1921.23 1159.3 Q1915.03 1159.3 1911.4 1155.69 Q1907.79 1152.08 1907.79 1145.92 Q1907.79 1139.56 1911.21 1135.83 Q1914.66 1132.08 1920.49 1132.08 Q1925.73 1132.08 1928.76 1135.46 Q1931.81 1138.82 1931.81 1144.6 M1927.55 1143.35 Q1927.51 1139.86 1925.59 1137.78 Q1923.69 1135.69 1920.54 1135.69 Q1916.98 1135.69 1914.82 1137.71 Q1912.69 1139.72 1912.37 1143.38 L1927.55 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1943.02 1125.34 L1943.02 1132.71 L1951.79 1132.71 L1951.79 1136.02 L1943.02 1136.02 L1943.02 1150.09 Q1943.02 1153.26 1943.87 1154.16 Q1944.75 1155.07 1947.41 1155.07 L1951.79 1155.07 L1951.79 1158.63 L1947.41 1158.63 Q1942.48 1158.63 1940.61 1156.8 Q1938.73 1154.95 1938.73 1150.09 L1938.73 1136.02 L1935.61 1136.02 L1935.61 1132.71 L1938.73 1132.71 L1938.73 1125.34 L1943.02 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip130)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1669.53,1193.19 1789.98,1193.19 \"/>\n<path clip-path=\"url(#clip130)\" d=\"M1831.77 1194.82 L1831.77 1210.47 L1827.51 1210.47 L1827.51 1194.96 Q1827.51 1191.28 1826.07 1189.45 Q1824.64 1187.62 1821.77 1187.62 Q1818.32 1187.62 1816.33 1189.82 Q1814.34 1192.02 1814.34 1195.82 L1814.34 1210.47 L1810.05 1210.47 L1810.05 1184.55 L1814.34 1184.55 L1814.34 1188.57 Q1815.86 1186.24 1817.92 1185.08 Q1820.01 1183.92 1822.72 1183.92 Q1827.18 1183.92 1829.48 1186.7 Q1831.77 1189.45 1831.77 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1850.31 1187.53 Q1846.88 1187.53 1844.89 1190.22 Q1842.9 1192.88 1842.9 1197.53 Q1842.9 1202.18 1844.87 1204.87 Q1846.86 1207.53 1850.31 1207.53 Q1853.71 1207.53 1855.7 1204.85 Q1857.69 1202.16 1857.69 1197.53 Q1857.69 1192.93 1855.7 1190.24 Q1853.71 1187.53 1850.31 1187.53 M1850.31 1183.92 Q1855.86 1183.92 1859.04 1187.53 Q1862.21 1191.14 1862.21 1197.53 Q1862.21 1203.9 1859.04 1207.53 Q1855.86 1211.14 1850.31 1211.14 Q1844.73 1211.14 1841.56 1207.53 Q1838.41 1203.9 1838.41 1197.53 Q1838.41 1191.14 1841.56 1187.53 Q1844.73 1183.92 1850.31 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1884.29 1188.53 Q1883.57 1188.11 1882.72 1187.93 Q1881.88 1187.72 1880.86 1187.72 Q1877.25 1187.72 1875.31 1190.08 Q1873.39 1192.42 1873.39 1196.81 L1873.39 1210.47 L1869.11 1210.47 L1869.11 1184.55 L1873.39 1184.55 L1873.39 1188.57 Q1874.73 1186.21 1876.88 1185.08 Q1879.04 1183.92 1882.11 1183.92 Q1882.55 1183.92 1883.09 1183.99 Q1883.62 1184.04 1884.27 1184.15 L1884.29 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip130)\" d=\"M1908.11 1189.52 Q1909.71 1186.65 1911.93 1185.29 Q1914.15 1183.92 1917.16 1183.92 Q1921.21 1183.92 1923.41 1186.77 Q1925.61 1189.59 1925.61 1194.82 L1925.61 1210.47 L1921.33 1210.47 L1921.33 1194.96 Q1921.33 1191.24 1920.01 1189.43 Q1918.69 1187.62 1915.98 1187.62 Q1912.67 1187.62 1910.75 1189.82 Q1908.83 1192.02 1908.83 1195.82 L1908.83 1210.47 L1904.54 1210.47 L1904.54 1194.96 Q1904.54 1191.21 1903.23 1189.43 Q1901.91 1187.62 1899.15 1187.62 Q1895.89 1187.62 1893.97 1189.85 Q1892.04 1192.05 1892.04 1195.82 L1892.04 1210.47 L1887.76 1210.47 L1887.76 1184.55 L1892.04 1184.55 L1892.04 1188.57 Q1893.5 1186.19 1895.54 1185.06 Q1897.58 1183.92 1900.38 1183.92 Q1903.2 1183.92 1905.17 1185.36 Q1907.16 1186.79 1908.11 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.026 ¬± 0.02\n  with uncertainty of ¬± 0.001292299428377531\n  from 125 blocks after 4 transformations (k = 5).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01249 ¬± (0.0026896, 0.00275973) (MC)\n  95% confidence interval: [-4.01802, -4.00726]) (MC)\n  linear error propagation: -4.01305 ¬± 0.00284706\n  |Œ¥_y| = |0.00241331| (‚â§ 0.1 for normal approx)\n  Blocking successful with 15 blocks after 7 transformations (k = 8).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.012494223421111, val_l = 0.005526572295367238, val_u = 0.005235617168295015)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip160\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip160)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip161\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip160)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip162\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip162)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip162)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip162)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip162)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip160)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1220.15 1391.71 L1220.15 1397.25 Q1217.67 1395.98 1214.99 1395.34 Q1212.32 1394.71 1209.46 1394.71 Q1205.1 1394.71 1202.9 1396.04 Q1200.74 1397.38 1200.74 1400.05 Q1200.74 1402.09 1202.3 1403.27 Q1203.85 1404.41 1208.57 1405.46 L1210.57 1405.91 Q1216.81 1407.25 1219.42 1409.7 Q1222.06 1412.12 1222.06 1416.48 Q1222.06 1421.44 1218.11 1424.34 Q1214.2 1427.23 1207.32 1427.23 Q1204.46 1427.23 1201.34 1426.66 Q1198.25 1426.12 1194.82 1425.01 L1194.82 1418.96 Q1198.06 1420.65 1201.21 1421.51 Q1204.36 1422.33 1207.45 1422.33 Q1211.59 1422.33 1213.82 1420.93 Q1216.05 1419.5 1216.05 1416.92 Q1216.05 1414.54 1214.42 1413.26 Q1212.83 1411.99 1207.39 1410.81 L1205.35 1410.33 Q1199.91 1409.19 1197.49 1406.83 Q1195.07 1404.45 1195.07 1400.31 Q1195.07 1395.28 1198.64 1392.54 Q1202.2 1389.8 1208.76 1389.8 Q1212 1389.8 1214.87 1390.28 Q1217.73 1390.76 1220.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1237.18 1380.54 L1237.18 1390.66 L1249.24 1390.66 L1249.24 1395.22 L1237.18 1395.22 L1237.18 1414.57 Q1237.18 1418.93 1238.36 1420.17 Q1239.57 1421.41 1243.23 1421.41 L1249.24 1421.41 L1249.24 1426.31 L1243.23 1426.31 Q1236.45 1426.31 1233.87 1423.8 Q1231.29 1421.25 1231.29 1414.57 L1231.29 1395.22 L1226.99 1395.22 L1226.99 1390.66 L1231.29 1390.66 L1231.29 1380.54 L1237.18 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1287.44 1407.02 L1287.44 1409.89 L1260.51 1409.89 Q1260.89 1415.94 1264.14 1419.12 Q1267.42 1422.27 1273.24 1422.27 Q1276.61 1422.27 1279.77 1421.44 Q1282.95 1420.61 1286.07 1418.96 L1286.07 1424.5 Q1282.92 1425.83 1279.61 1426.53 Q1276.3 1427.23 1272.89 1427.23 Q1264.36 1427.23 1259.36 1422.27 Q1254.4 1417.3 1254.4 1408.84 Q1254.4 1400.08 1259.11 1394.96 Q1263.85 1389.8 1271.87 1389.8 Q1279.07 1389.8 1283.24 1394.45 Q1287.44 1399.07 1287.44 1407.02 M1281.58 1405.3 Q1281.52 1400.5 1278.87 1397.63 Q1276.26 1394.77 1271.94 1394.77 Q1267.03 1394.77 1264.07 1397.54 Q1261.15 1400.31 1260.7 1405.34 L1281.58 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1302.71 1420.96 L1302.71 1439.87 L1296.83 1439.87 L1296.83 1390.66 L1302.71 1390.66 L1302.71 1396.07 Q1304.56 1392.89 1307.36 1391.36 Q1310.19 1389.8 1314.11 1389.8 Q1320.6 1389.8 1324.64 1394.96 Q1328.72 1400.12 1328.72 1408.52 Q1328.72 1416.92 1324.64 1422.08 Q1320.6 1427.23 1314.11 1427.23 Q1310.19 1427.23 1307.36 1425.71 Q1304.56 1424.15 1302.71 1420.96 M1322.64 1408.52 Q1322.64 1402.06 1319.97 1398.4 Q1317.32 1394.71 1312.68 1394.71 Q1308.03 1394.71 1305.36 1398.4 Q1302.71 1402.06 1302.71 1408.52 Q1302.71 1414.98 1305.36 1418.67 Q1308.03 1422.33 1312.68 1422.33 Q1317.32 1422.33 1319.97 1418.67 Q1322.64 1414.98 1322.64 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1361.15 1391.71 L1361.15 1397.25 Q1358.67 1395.98 1356 1395.34 Q1353.32 1394.71 1350.46 1394.71 Q1346.1 1394.71 1343.9 1396.04 Q1341.74 1397.38 1341.74 1400.05 Q1341.74 1402.09 1343.3 1403.27 Q1344.86 1404.41 1349.57 1405.46 L1351.57 1405.91 Q1357.81 1407.25 1360.42 1409.7 Q1363.06 1412.12 1363.06 1416.48 Q1363.06 1421.44 1359.11 1424.34 Q1355.2 1427.23 1348.32 1427.23 Q1345.46 1427.23 1342.34 1426.66 Q1339.25 1426.12 1335.82 1425.01 L1335.82 1418.96 Q1339.06 1420.65 1342.21 1421.51 Q1345.36 1422.33 1348.45 1422.33 Q1352.59 1422.33 1354.82 1420.93 Q1357.05 1419.5 1357.05 1416.92 Q1357.05 1414.54 1355.42 1413.26 Q1353.83 1411.99 1348.39 1410.81 L1346.35 1410.33 Q1340.91 1409.19 1338.49 1406.83 Q1336.07 1404.45 1336.07 1400.31 Q1336.07 1395.28 1339.64 1392.54 Q1343.2 1389.8 1349.76 1389.8 Q1353 1389.8 1355.87 1390.28 Q1358.73 1390.76 1361.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip162)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1144.16 2211.02,1144.16 \"/>\n<polyline clip-path=\"url(#clip162)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,982.193 2211.02,982.193 \"/>\n<polyline clip-path=\"url(#clip162)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,820.222 2211.02,820.222 \"/>\n<polyline clip-path=\"url(#clip162)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,658.252 2211.02,658.252 \"/>\n<polyline clip-path=\"url(#clip162)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,496.281 2211.02,496.281 \"/>\n<polyline clip-path=\"url(#clip162)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,334.31 2211.02,334.31 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1144.16 365.751,1144.16 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,982.193 365.751,982.193 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,820.222 365.751,820.222 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,658.252 365.751,658.252 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,496.281 365.751,496.281 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,334.31 365.751,334.31 \"/>\n<path clip-path=\"url(#clip160)\" d=\"M298.909 1129.96 Q295.298 1129.96 293.469 1133.53 Q291.664 1137.07 291.664 1144.2 Q291.664 1151.3 293.469 1154.87 Q295.298 1158.41 298.909 1158.41 Q302.543 1158.41 304.349 1154.87 Q306.177 1151.3 306.177 1144.2 Q306.177 1137.07 304.349 1133.53 Q302.543 1129.96 298.909 1129.96 M298.909 1126.26 Q304.719 1126.26 307.775 1130.86 Q310.853 1135.45 310.853 1144.2 Q310.853 1152.92 307.775 1157.53 Q304.719 1162.11 298.909 1162.11 Q293.099 1162.11 290.02 1157.53 Q286.964 1152.92 286.964 1144.2 Q286.964 1135.45 290.02 1130.86 Q293.099 1126.26 298.909 1126.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M259.557 995.538 L267.196 995.538 L267.196 969.172 L258.886 970.839 L258.886 966.579 L267.15 964.913 L271.826 964.913 L271.826 995.538 L279.465 995.538 L279.465 999.473 L259.557 999.473 L259.557 995.538 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M298.909 967.991 Q295.298 967.991 293.469 971.556 Q291.664 975.098 291.664 982.227 Q291.664 989.334 293.469 992.899 Q295.298 996.44 298.909 996.44 Q302.543 996.44 304.349 992.899 Q306.177 989.334 306.177 982.227 Q306.177 975.098 304.349 971.556 Q302.543 967.991 298.909 967.991 M298.909 964.288 Q304.719 964.288 307.775 968.894 Q310.853 973.478 310.853 982.227 Q310.853 990.954 307.775 995.561 Q304.719 1000.14 298.909 1000.14 Q293.099 1000.14 290.02 995.561 Q286.964 990.954 286.964 982.227 Q286.964 973.478 290.02 968.894 Q293.099 964.288 298.909 964.288 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M262.775 833.567 L279.094 833.567 L279.094 837.502 L257.15 837.502 L257.15 833.567 Q259.812 830.812 264.395 826.183 Q269.002 821.53 270.182 820.187 Q272.428 817.664 273.307 815.928 Q274.21 814.169 274.21 812.479 Q274.21 809.725 272.266 807.988 Q270.344 806.252 267.242 806.252 Q265.043 806.252 262.59 807.016 Q260.159 807.78 257.381 809.331 L257.381 804.609 Q260.205 803.475 262.659 802.896 Q265.113 802.317 267.15 802.317 Q272.52 802.317 275.715 805.002 Q278.909 807.687 278.909 812.178 Q278.909 814.308 278.099 816.229 Q277.312 818.127 275.205 820.72 Q274.627 821.391 271.525 824.609 Q268.423 827.803 262.775 833.567 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M298.909 806.021 Q295.298 806.021 293.469 809.586 Q291.664 813.127 291.664 820.257 Q291.664 827.363 293.469 830.928 Q295.298 834.47 298.909 834.47 Q302.543 834.47 304.349 830.928 Q306.177 827.363 306.177 820.257 Q306.177 813.127 304.349 809.586 Q302.543 806.021 298.909 806.021 M298.909 802.317 Q304.719 802.317 307.775 806.924 Q310.853 811.507 310.853 820.257 Q310.853 828.984 307.775 833.59 Q304.719 838.173 298.909 838.173 Q293.099 838.173 290.02 833.59 Q286.964 828.984 286.964 820.257 Q286.964 811.507 290.02 806.924 Q293.099 802.317 298.909 802.317 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M272.914 656.897 Q276.27 657.615 278.145 659.883 Q280.043 662.152 280.043 665.485 Q280.043 670.601 276.525 673.402 Q273.006 676.203 266.525 676.203 Q264.349 676.203 262.034 675.763 Q259.742 675.346 257.289 674.49 L257.289 669.976 Q259.233 671.11 261.548 671.689 Q263.863 672.268 266.386 672.268 Q270.784 672.268 273.076 670.532 Q275.39 668.795 275.39 665.485 Q275.39 662.43 273.238 660.717 Q271.108 658.981 267.289 658.981 L263.261 658.981 L263.261 655.138 L267.474 655.138 Q270.923 655.138 272.752 653.772 Q274.58 652.384 274.58 649.791 Q274.58 647.129 272.682 645.717 Q270.807 644.282 267.289 644.282 Q265.367 644.282 263.168 644.698 Q260.969 645.115 258.33 645.995 L258.33 641.828 Q260.992 641.087 263.307 640.717 Q265.645 640.347 267.705 640.347 Q273.029 640.347 276.131 642.777 Q279.233 645.184 279.233 649.305 Q279.233 652.175 277.59 654.166 Q275.946 656.133 272.914 656.897 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M298.909 644.05 Q295.298 644.05 293.469 647.615 Q291.664 651.157 291.664 658.286 Q291.664 665.393 293.469 668.957 Q295.298 672.499 298.909 672.499 Q302.543 672.499 304.349 668.957 Q306.177 665.393 306.177 658.286 Q306.177 651.157 304.349 647.615 Q302.543 644.05 298.909 644.05 M298.909 640.347 Q304.719 640.347 307.775 644.953 Q310.853 649.536 310.853 658.286 Q310.853 667.013 307.775 671.62 Q304.719 676.203 298.909 676.203 Q293.099 676.203 290.02 671.62 Q286.964 667.013 286.964 658.286 Q286.964 649.536 290.02 644.953 Q293.099 640.347 298.909 640.347 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M271.594 483.075 L259.789 501.524 L271.594 501.524 L271.594 483.075 M270.367 479.001 L276.247 479.001 L276.247 501.524 L281.177 501.524 L281.177 505.413 L276.247 505.413 L276.247 513.561 L271.594 513.561 L271.594 505.413 L255.992 505.413 L255.992 500.899 L270.367 479.001 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M298.909 482.08 Q295.298 482.08 293.469 485.644 Q291.664 489.186 291.664 496.316 Q291.664 503.422 293.469 506.987 Q295.298 510.529 298.909 510.529 Q302.543 510.529 304.349 506.987 Q306.177 503.422 306.177 496.316 Q306.177 489.186 304.349 485.644 Q302.543 482.08 298.909 482.08 M298.909 478.376 Q304.719 478.376 307.775 482.982 Q310.853 487.566 310.853 496.316 Q310.853 505.042 307.775 509.649 Q304.719 514.232 298.909 514.232 Q293.099 514.232 290.02 509.649 Q286.964 505.042 286.964 496.316 Q286.964 487.566 290.02 482.982 Q293.099 478.376 298.909 478.376 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M258.793 317.03 L277.15 317.03 L277.15 320.965 L263.076 320.965 L263.076 329.438 Q264.094 329.09 265.113 328.928 Q266.131 328.743 267.15 328.743 Q272.937 328.743 276.316 331.914 Q279.696 335.086 279.696 340.502 Q279.696 346.081 276.224 349.183 Q272.752 352.262 266.432 352.262 Q264.256 352.262 261.988 351.891 Q259.742 351.521 257.335 350.78 L257.335 346.081 Q259.418 347.215 261.641 347.771 Q263.863 348.326 266.34 348.326 Q270.344 348.326 272.682 346.22 Q275.02 344.113 275.02 340.502 Q275.02 336.891 272.682 334.785 Q270.344 332.678 266.34 332.678 Q264.465 332.678 262.59 333.095 Q260.738 333.512 258.793 334.391 L258.793 317.03 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M298.909 320.109 Q295.298 320.109 293.469 323.674 Q291.664 327.215 291.664 334.345 Q291.664 341.451 293.469 345.016 Q295.298 348.558 298.909 348.558 Q302.543 348.558 304.349 345.016 Q306.177 341.451 306.177 334.345 Q306.177 327.215 304.349 323.674 Q302.543 320.109 298.909 320.109 M298.909 316.405 Q304.719 316.405 307.775 321.012 Q310.853 325.595 310.853 334.345 Q310.853 343.072 307.775 347.678 Q304.719 352.262 298.909 352.262 Q293.099 352.262 290.02 347.678 Q286.964 343.072 286.964 334.345 Q286.964 325.595 290.02 321.012 Q293.099 316.405 298.909 316.405 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip162)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1024.82 400.199,915.177 400.786,814.578 401.372,722.412 401.958,756.252 402.545,677.583 403.131,603.83 403.718,635.418 404.304,564.153 404.891,502.341 405.477,446.317 406.063,397.268 406.65,351.633 407.236,312.059 407.823,275.523 408.409,370.918 408.995,336.855 409.582,306.685 410.168,332.176 410.755,306.035 411.341,283.773 411.927,263.351 412.514,245.884 413.1,231.173 413.687,219.895 414.273,243.834 414.86,236.69 415.446,261.171 416.032,283.36 416.619,305.51 417.205,325.191 417.792,323.113 418.378,322.631 418.964,342.742 419.551,345.534 420.137,365.951 420.724,384.862 421.31,387.656 421.896,406.703 422.483,425.19 423.069,429.706 423.656,447.62 424.242,464.127 424.829,480.879 425.415,498.4 426.001,525.445 426.588,542.07 427.174,566.974 427.761,590.647 428.347,596.438 428.933,618.311 429.52,625.011 430.106,652.281 430.693,657.96 431.279,664.033 431.865,670.451 432.452,683.096 433.038,696.499 433.625,720.255 434.211,731.346 434.798,747.461 435.384,758.887 435.97,765.12 436.557,780.816 437.143,791.455 437.73,802.1 438.316,812.33 438.902,818.428 439.489,828.042 440.075,837.952 440.662,844.383 441.248,850.517 441.835,867.531 442.421,873.813 443.007,883.03 443.594,892.343 444.18,904.474 444.767,916.313 445.353,927.807 445.939,935.955 446.526,946.742 447.112,954.335 447.699,958.987 448.285,966.538 448.871,976.397 449.458,983.528 450.044,990.743 450.631,997.398 451.217,1001.57 451.804,1010.77 452.39,1017.42 452.976,1023.99 453.563,1030.11 454.149,1038.1 454.736,1039.83 455.322,1050.65 455.908,1056.39 456.495,1062.31 457.081,1072.17 457.668,1077.32 458.254,1090.54 458.84,1095.03 459.427,1105.29 460.013,1109.29 460.6,1119.39 461.186,1121.37 461.773,1125.25 462.359,1134.78 462.945,1137.72 463.532,1144.53 464.118,1149.16 464.705,1148.04 465.291,1150.72 465.877,1153.42 466.464,1157.92 467.05,1162.56 467.637,1165.19 468.223,1171.24 468.809,1172.28 469.396,1173.09 469.982,1176.97 470.569,1179.29 471.155,1179.9 471.742,1180.18 472.328,1177.54 472.914,1180.16 473.501,1184.19 474.087,1183.5 474.674,1187.73 475.26,1188.39 475.846,1185.78 476.433,1188.33 477.019,1188.87 477.606,1191.39 478.192,1192.09 478.778,1194.42 479.365,1193.73 479.951,1194.47 480.538,1196.94 481.124,1199.17 481.711,1204.23 482.297,1207.37 482.883,1210.67 483.47,1210.74 484.056,1211.05 484.643,1212.82 485.229,1215.81 485.815,1215.73 486.402,1217.49 486.988,1219.2 487.575,1223.2 488.161,1225.87 488.748,1229.84 489.334,1227.9 489.92,1224.61 490.507,1225.69 491.093,1225.46 491.68,1227.96 492.266,1228 492.852,1230.57 493.439,1230.32 494.025,1231.49 494.612,1232.51 495.198,1233.3 495.784,1235.82 496.371,1235.57 496.957,1236.57 497.544,1237.22 498.13,1239.41 498.717,1239.92 499.303,1241.78 499.889,1243.8 500.476,1242.93 501.062,1246.34 501.649,1245.31 502.235,1246.71 502.821,1245.66 503.408,1245.97 503.994,1247.47 504.581,1246.41 505.167,1248.25 505.753,1245.82 506.34,1246.14 506.926,1244.99 507.513,1244.11 508.099,1244.22 508.686,1243.33 509.272,1242.61 509.858,1242.14 510.445,1245.4 511.031,1244.53 511.618,1245.04 512.204,1244.23 512.79,1243.92 513.377,1243.35 513.963,1245.34 514.55,1244.25 515.136,1246.42 515.722,1246.94 516.309,1250.06 516.895,1250.09 517.482,1248.98 518.068,1250.53 518.655,1248.16 519.241,1248.36 519.827,1245.84 520.414,1244.83 521,1241.18 521.587,1241.61 522.173,1240.96 522.759,1238.82 523.346,1237.05 523.932,1238.98 524.519,1237.22 525.105,1236.92 525.691,1236.26 526.278,1237.16 526.864,1235.08 527.451,1234.45 528.037,1234.17 528.624,1235.32 529.21,1236.34 529.796,1237.19 530.383,1236.66 530.969,1237.54 531.556,1237.3 532.142,1234.1 532.728,1235.38 533.315,1235.11 533.901,1233.45 534.488,1234.65 535.074,1235.62 535.661,1236.42 536.247,1235.97 536.833,1235.43 537.42,1235.02 538.006,1233.49 538.593,1234.58 539.179,1234.18 539.765,1232.83 540.352,1229.97 540.938,1232.6 541.525,1233.71 542.111,1231.95 542.697,1230.36 543.284,1231.14 543.87,1229.66 544.457,1229.35 545.043,1233.13 545.63,1234.4 546.216,1232.72 546.802,1235 547.389,1230.41 547.975,1228.94 548.562,1230.12 549.148,1232.79 549.734,1232.44 550.321,1232.25 550.907,1231.96 551.494,1231.81 552.08,1236.74 552.666,1236.55 553.253,1233.22 553.839,1234.34 554.426,1233.97 555.012,1233.58 555.599,1233.62 556.185,1233.28 556.771,1234.25 557.358,1232.14 557.944,1233.26 558.531,1234.3 559.117,1236.5 559.703,1236.19 560.29,1234.3 560.876,1235.3 561.463,1234.76 562.049,1232.84 562.635,1233.8 563.222,1234.4 563.808,1235.14 564.395,1229.16 564.981,1228.68 565.568,1227.21 566.154,1227.45 566.74,1228.54 567.327,1228.36 567.913,1226.97 568.5,1225.4 569.086,1225.54 569.672,1226.65 570.259,1228.04 570.845,1229.24 571.432,1226.13 572.018,1226.13 572.605,1228.41 573.191,1228.05 573.777,1227.79 574.364,1228.89 574.95,1228.9 575.537,1227.3 576.123,1228.62 576.709,1228.15 577.296,1228.27 577.882,1227.76 578.469,1230.19 579.055,1229.76 579.641,1230.77 580.228,1232.93 580.814,1232.28 581.401,1231.52 581.987,1229.73 582.574,1228.98 583.16,1228.74 583.746,1229.72 584.333,1229.34 584.919,1228.72 585.506,1232.5 586.092,1232.29 586.678,1230.25 587.265,1230.78 587.851,1231.48 588.438,1231.01 589.024,1231.73 589.61,1229.99 590.197,1230.93 590.783,1228.78 591.37,1227.04 591.956,1222.83 592.543,1221.15 593.129,1219.96 593.715,1219.95 594.302,1221.51 594.888,1224.38 595.475,1229.48 596.061,1228.82 596.647,1228.17 597.234,1224.88 597.82,1225 598.407,1222.17 598.993,1222.33 599.579,1222.5 600.166,1221.35 600.752,1222.51 601.339,1222.56 601.925,1222.41 602.512,1223.68 603.098,1227.22 603.684,1227.04 604.271,1226.55 604.857,1227.76 605.444,1229.96 606.03,1230.72 606.616,1231.81 607.203,1230.89 607.789,1226.55 608.376,1224.61 608.962,1226.8 609.548,1230.25 610.135,1231.16 610.721,1231.87 611.308,1231.28 611.894,1232.11 612.481,1235.28 613.067,1231.69 613.653,1232.13 614.24,1231.73 614.826,1228.49 615.413,1228.09 615.999,1227.87 616.585,1226.12 617.172,1226.97 617.758,1225.27 618.345,1226.12 618.931,1224.59 619.518,1224.33 620.104,1221.56 620.69,1219.87 621.277,1217.23 621.863,1214.88 622.45,1217.46 623.036,1216.4 623.622,1216.47 624.209,1216.73 624.795,1218.24 625.382,1220.93 625.968,1223.34 626.554,1225.73 627.141,1226.31 627.727,1224.73 628.314,1222.78 628.9,1222.53 629.487,1222.36 630.073,1219.45 630.659,1219.3 631.246,1217.67 631.832,1217.75 632.419,1219.1 633.005,1216.14 633.591,1217.65 634.178,1217.66 634.764,1217.74 635.351,1217.99 635.937,1220.67 636.523,1223.35 637.11,1218.94 637.696,1217.86 638.283,1216.46 638.869,1215.09 639.456,1215.44 640.042,1217.05 640.628,1215.61 641.215,1216.99 641.801,1219.71 642.388,1219.7 642.974,1219.33 643.56,1221.78 644.147,1220.21 644.733,1218.83 645.32,1221.14 645.906,1222.06 646.492,1223.03 647.079,1222.93 647.665,1222.7 648.252,1220.91 648.838,1223.21 649.425,1222.77 650.011,1222.23 650.597,1220.55 651.184,1217.79 651.77,1219.12 652.357,1219.06 652.943,1219.02 653.529,1218.88 654.116,1218.76 654.702,1221.3 655.289,1222.25 655.875,1221.92 656.462,1221.68 657.048,1225.47 657.634,1226.41 658.221,1226.07 658.807,1225.61 659.394,1225.18 659.98,1225.69 660.566,1225.35 661.153,1224 661.739,1226.06 662.326,1227.01 662.912,1223.72 663.498,1222.21 664.085,1222.06 664.671,1226.86 665.258,1226.55 665.844,1223.5 666.431,1221.93 667.017,1221.82 667.603,1222.73 668.19,1224.8 668.776,1220.6 669.363,1221.5 669.949,1221.1 670.535,1220.6 671.122,1221.62 671.708,1221.08 672.295,1218.09 672.881,1216.57 673.467,1213.71 674.054,1212.37 674.64,1212.28 675.227,1209.61 675.813,1209.8 676.4,1211.48 676.986,1210.09 677.572,1209.2 678.159,1209.44 678.745,1209.7 679.332,1213.92 679.918,1214.09 680.504,1214.14 681.091,1214.53 681.677,1213.41 682.264,1215.97 682.85,1219.79 683.436,1222.06 684.023,1221.66 684.609,1223.9 685.196,1224.69 685.782,1227.05 686.369,1227.58 686.955,1224.29 687.541,1222.41 688.128,1219.47 688.714,1223.3 689.301,1222.71 689.887,1222.36 690.473,1223.29 691.06,1221.53 691.646,1219.82 692.233,1217.09 692.819,1215.76 693.405,1215.6 693.992,1213 694.578,1213.2 695.165,1214.43 695.751,1214.15 696.338,1215.25 696.924,1215.11 697.51,1216.52 698.097,1217.96 698.683,1216.41 699.27,1218.95 699.856,1217.3 700.442,1215.92 701.029,1215.75 701.615,1213.07 702.202,1213.06 702.788,1213.08 703.375,1214.43 703.961,1209.08 704.547,1207.97 705.134,1206.89 705.72,1208.93 706.307,1210.55 706.893,1212.01 707.479,1208.12 708.066,1209.51 708.652,1209.67 709.239,1211.5 709.825,1210.62 710.411,1211.95 710.998,1213.19 711.584,1217.13 712.171,1217.01 712.757,1217.99 713.344,1217.88 713.93,1216.53 714.516,1216.17 715.103,1214.7 715.689,1213.44 716.276,1213.86 716.862,1219.26 717.448,1219.09 718.035,1221.47 718.621,1219.97 719.208,1217 719.794,1216.95 720.38,1215.56 720.967,1214.41 721.553,1213.18 722.14,1213.22 722.726,1211.97 723.313,1213.03 723.899,1214.47 724.485,1212.93 725.072,1212.94 725.658,1212.81 726.245,1212.53 726.831,1211.51 727.417,1210.17 728.004,1206.75 728.59,1209.77 729.177,1210.18 729.763,1210.45 730.349,1210.63 730.936,1210.7 731.522,1209.27 732.109,1209.62 732.695,1208.24 733.282,1209.93 733.868,1210.37 734.454,1209.29 735.041,1209.41 735.627,1212.28 736.214,1212.2 736.8,1213.96 737.386,1213.86 737.973,1213.69 738.559,1212.48 739.146,1213.95 739.732,1213.58 740.318,1215.14 740.905,1214.91 741.491,1214.94 742.078,1213.7 742.664,1215.15 743.251,1216.29 743.837,1216.22 744.423,1217.28 745.01,1216.87 745.596,1216.91 746.183,1217.95 746.769,1214.99 747.355,1214.81 747.942,1216.2 748.528,1216.27 749.115,1214.68 749.701,1214.7 750.288,1215.93 750.874,1214.38 751.46,1214.19 752.047,1214.29 752.633,1214.27 753.22,1212.82 753.806,1214.43 754.392,1214.42 754.979,1221.18 755.565,1222.11 756.152,1221.58 756.738,1219.76 757.324,1218.02 757.911,1217.71 758.497,1218.98 759.084,1219.99 759.67,1218.4 760.257,1212.8 760.843,1215.36 761.429,1213.74 762.016,1211.11 762.602,1212.73 763.189,1213.95 763.775,1213.89 764.361,1214.93 764.948,1214.7 765.534,1215.96 766.121,1214.21 766.707,1212.73 767.293,1214.25 767.88,1214.03 768.466,1213.98 769.053,1213.62 769.639,1214.82 770.226,1214.62 770.812,1213.24 771.398,1214.4 771.985,1213.35 772.571,1209.4 773.158,1209.46 773.744,1209.67 774.33,1212.6 774.917,1215.51 775.503,1216.73 776.09,1217.56 776.676,1217.25 777.262,1217.11 777.849,1215.5 778.435,1216.74 779.022,1216.67 779.608,1219.22 780.195,1219.98 780.781,1220.85 781.367,1218.92 781.954,1222.38 782.54,1219.14 783.127,1218.97 783.713,1217.38 784.299,1217.39 784.886,1216.98 785.472,1217.75 786.059,1218.72 786.645,1219.72 787.232,1220.57 787.818,1220.16 788.404,1219.77 788.991,1219.55 789.577,1219.11 790.164,1219.96 790.75,1215.46 791.336,1216.71 791.923,1216.49 792.509,1218.67 793.096,1218.19 793.682,1219.52 794.268,1219.15 794.855,1216.22 795.441,1214.45 796.028,1214.13 796.614,1208.9 797.201,1206.32 797.787,1207.01 798.373,1207.15 798.96,1208.79 799.546,1206.53 800.133,1208.19 800.719,1212.65 801.305,1211.21 801.892,1212.48 802.478,1215.11 803.065,1212.66 803.651,1212.52 804.237,1212.53 804.824,1211.15 805.41,1208.55 805.997,1206.08 806.583,1208.91 807.17,1210.43 807.756,1210.38 808.342,1210.55 808.929,1211.83 809.515,1212.02 810.102,1212.17 810.688,1213.55 811.274,1213.51 811.861,1213.34 812.447,1212.91 813.034,1211.33 813.62,1214.13 814.206,1213.98 814.793,1214.14 815.379,1213.87 815.966,1212.43 816.552,1213.68 817.139,1215.05 817.725,1216.07 818.311,1217.26 818.898,1218.31 819.484,1219.18 820.071,1220.05 820.657,1221.03 821.243,1222.36 821.83,1219.36 822.416,1222.6 823.003,1220.8 823.589,1220.52 824.175,1220.15 824.762,1219.73 825.348,1220.5 825.935,1218.88 826.521,1221.05 827.108,1220.62 827.694,1221.45 828.28,1221.05 828.867,1225.72 829.453,1225.24 830.04,1224.8 830.626,1223.06 831.212,1220.96 831.799,1219.25 832.385,1219.81 832.972,1219.18 833.558,1216.04 834.145,1218.44 834.731,1218.25 835.317,1219.11 835.904,1216.11 836.49,1214.81 837.077,1211.8 837.663,1212.86 838.249,1214.21 838.836,1215.19 839.422,1215.04 840.009,1213.87 840.595,1209.94 841.181,1204.49 841.768,1206.07 842.354,1206.26 842.941,1203.72 843.527,1204.16 844.114,1207.07 844.7,1207.26 845.286,1207.5 845.873,1210.39 846.459,1210.85 847.046,1210.64 847.632,1210.53 848.218,1206.6 848.805,1202.58 849.391,1204.26 849.978,1205.92 850.564,1205.18 851.15,1204.22 851.737,1205.07 852.323,1206.48 852.91,1205.43 853.496,1207.06 854.083,1206.95 854.669,1207.37 855.255,1206.19 855.842,1210.41 856.428,1209.17 857.015,1209.23 857.601,1210.54 858.187,1210.63 858.774,1210.87 859.36,1209.61 859.947,1209.58 860.533,1208.49 861.119,1207.29 861.706,1206.26 862.292,1206.56 862.879,1206.81 863.465,1206.82 864.052,1209.78 864.638,1208.61 865.224,1206.08 865.811,1207.52 866.397,1208.72 866.984,1210.4 867.57,1208.98 868.156,1210.53 868.743,1211.83 869.329,1214.24 869.916,1212.72 870.502,1212.65 871.089,1213.95 871.675,1213.76 872.261,1214.74 872.848,1215.45 873.434,1215.13 874.021,1215.07 874.607,1215.77 875.193,1215.54 875.78,1215.33 876.366,1215.22 876.953,1216.39 877.539,1216.11 878.125,1213.07 878.712,1212.95 879.298,1212.86 879.885,1211.54 880.471,1211.7 881.058,1210.38 881.644,1209.03 882.23,1211.76 882.817,1211.37 883.403,1209.76 883.99,1209.45 884.576,1209.71 885.162,1208.29 885.749,1206.88 886.335,1205.81 886.922,1202.45 887.508,1205.9 888.094,1203.89 888.681,1206.99 889.267,1208.43 889.854,1208.51 890.44,1208.69 891.027,1206.03 891.613,1202.35 892.199,1201.42 892.786,1203.21 893.372,1202.19 893.959,1201.38 894.545,1200.53 895.131,1201.39 895.718,1196.56 896.304,1198.53 896.891,1199.13 897.477,1202.58 898.063,1205.98 898.65,1207.58 899.236,1206.5 899.823,1202.91 900.409,1203.26 900.996,1202.48 901.582,1206.96 902.168,1204.56 902.755,1204.77 903.341,1203.98 903.928,1208.26 904.514,1206.89 905.1,1207.32 905.687,1210.11 906.273,1208.92 906.86,1211.79 907.446,1210.28 908.032,1210.57 908.619,1210.74 909.205,1211.95 909.792,1213.26 910.378,1212.92 910.965,1211.37 911.551,1211.56 912.137,1211.55 912.724,1214.22 913.31,1212.44 913.897,1214.86 914.483,1214.7 915.069,1215.69 915.656,1214.08 916.242,1216.62 916.829,1216.28 917.415,1214.57 918.002,1214.52 918.588,1215.54 919.174,1215.43 919.761,1212.61 920.347,1213.83 920.934,1210.99 921.52,1217.37 922.106,1220.86 922.693,1221.47 923.279,1222.27 923.866,1224.05 924.452,1222.05 925.038,1221.53 925.625,1219.73 926.211,1217.58 926.798,1214.36 927.384,1215.41 927.971,1216.45 928.557,1213.47 929.143,1213.66 929.73,1212.07 930.316,1213.31 930.903,1219.68 931.489,1217.7 932.075,1219.85 932.662,1220.33 933.248,1218.49 933.835,1218.13 934.421,1216.57 935.007,1213.61 935.594,1212.4 936.18,1213.53 936.767,1214.89 937.353,1216.19 937.94,1214.47 938.526,1214.03 939.112,1213.48 939.699,1214.66 940.285,1214.54 940.872,1214.2 941.458,1213.95 942.044,1213.78 942.631,1212 943.217,1211.71 943.804,1211.52 944.39,1214.05 944.976,1212.5 945.563,1214.84 946.149,1214.89 946.736,1213.51 947.322,1210.71 947.909,1210.64 948.495,1212.05 949.081,1213.35 949.668,1214.14 950.254,1212.93 950.841,1214.31 951.427,1214.17 952.013,1214.33 952.6,1212.69 953.186,1213.82 953.773,1212.31 954.359,1212.14 954.945,1213.08 955.532,1211.64 956.118,1214.02 956.705,1211.1 957.291,1209.6 957.878,1207.02 958.464,1203.63 959.05,1202.83 959.637,1205.69 960.223,1206.92 960.81,1209.56 961.396,1210.94 961.982,1210.87 962.569,1213.39 963.155,1213.48 963.742,1217.22 964.328,1212.55 964.915,1215.06 965.501,1215.75 966.087,1215.74 966.674,1213.93 967.26,1209.74 967.847,1208.6 968.433,1210.08 969.019,1210.02 969.606,1211.42 970.192,1208.28 970.779,1205.76 971.365,1203.22 971.951,1200.73 972.538,1202.69 973.124,1204.1 973.711,1203.13 974.297,1206.05 974.884,1206.43 975.47,1206.74 976.056,1205.61 976.643,1205.62 977.229,1205.92 977.816,1207.42 978.402,1210.15 978.988,1208.77 979.575,1209.17 980.161,1209.13 980.748,1210.61 981.334,1210.64 981.92,1212.01 982.507,1214.7 983.093,1215.88 983.68,1214.17 984.266,1213.89 984.853,1211.15 985.439,1212.27 986.025,1212.02 986.612,1211.94 987.198,1210.47 987.785,1212.97 988.371,1212.66 988.957,1213.86 989.544,1212.38 990.13,1212.35 990.717,1209.3 991.303,1209.18 991.889,1209 992.476,1210.1 993.062,1209.64 993.649,1209.69 994.235,1207.26 994.822,1205.94 995.408,1205.88 995.994,1204.51 996.581,1204.59 997.167,1204.47 997.754,1202.34 998.34,1202.86 998.926,1200.76 999.513,1198.89 1000.1,1197.81 1000.69,1201.45 1001.27,1204.66 1001.86,1204.63 1002.44,1203.53 1003.03,1202.65 1003.62,1209.9 1004.2,1208.85 1004.79,1207.64 1005.38,1208.9 1005.96,1209.06 1006.55,1207.87 1007.14,1208.1 1007.72,1208.38 1008.31,1209.75 1008.9,1210.74 1009.48,1208.18 1010.07,1206.86 1010.65,1205.67 1011.24,1207.2 1011.83,1202.08 1012.41,1205.31 1013,1204.39 1013.59,1205.97 1014.17,1208.98 1014.76,1208.87 1015.35,1207.77 1015.93,1207.82 1016.52,1206.76 1017.11,1207.04 1017.69,1206.03 1018.28,1206.14 1018.86,1202.56 1019.45,1202.72 1020.04,1204.42 1020.62,1204.77 1021.21,1202.29 1021.8,1205.4 1022.38,1205.61 1022.97,1205.86 1023.56,1207.55 1024.14,1206.11 1024.73,1204.8 1025.32,1205.17 1025.9,1209.5 1026.49,1209.8 1027.07,1209.88 1027.66,1211.35 1028.25,1206.1 1028.83,1206.56 1029.42,1205.59 1030.01,1201.97 1030.59,1205.06 1031.18,1205.63 1031.77,1204.57 1032.35,1203.64 1032.94,1206.62 1033.52,1206.76 1034.11,1210.97 1034.7,1212.31 1035.28,1213.53 1035.87,1214.33 1036.46,1214.07 1037.04,1214.85 1037.63,1214.7 1038.22,1216.98 1038.8,1216.52 1039.39,1217.47 1039.98,1219.44 1040.56,1217.72 1041.15,1217.23 1041.73,1216.65 1042.32,1214.76 1042.91,1214.42 1043.49,1212.97 1044.08,1209.89 1044.67,1210.02 1045.25,1209.7 1045.84,1209.6 1046.43,1209.55 1047.01,1210.76 1047.6,1212.21 1048.19,1211.98 1048.77,1207.44 1049.36,1207.5 1049.94,1207.5 1050.53,1210.23 1051.12,1211.61 1051.7,1212.87 1052.29,1213.96 1052.88,1216.54 1053.46,1217.35 1054.05,1213.15 1054.64,1210.53 1055.22,1209.16 1055.81,1212.06 1056.39,1211.78 1056.98,1210.44 1057.57,1210.02 1058.15,1210.03 1058.74,1208.62 1059.33,1208.76 1059.91,1204.92 1060.5,1205.22 1061.09,1202.9 1061.67,1203.26 1062.26,1202.08 1062.85,1206.29 1063.43,1205 1064.02,1206.34 1064.6,1209.2 1065.19,1209.1 1065.78,1206.68 1066.36,1207.98 1066.95,1208.41 1067.54,1208.3 1068.12,1205.79 1068.71,1203.32 1069.3,1201 1069.88,1203.95 1070.47,1201.67 1071.06,1203.58 1071.64,1204.13 1072.23,1204.56 1072.81,1207.55 1073.4,1206.61 1073.99,1205.29 1074.57,1204.3 1075.16,1204.91 1075.75,1203.62 1076.33,1204.03 1076.92,1201.67 1077.51,1207.52 1078.09,1207.52 1078.68,1209.02 1079.26,1205.27 1079.85,1206.73 1080.44,1206.84 1081.02,1210.96 1081.61,1210.69 1082.2,1209.27 1082.78,1206.65 1083.37,1205.8 1083.96,1204.68 1084.54,1206.08 1085.13,1208.96 1085.72,1211.79 1086.3,1210.67 1086.89,1212.04 1087.47,1210.67 1088.06,1211.87 1088.65,1208.69 1089.23,1208.76 1089.82,1210.09 1090.41,1213.82 1090.99,1214.92 1091.58,1216.01 1092.17,1214.42 1092.75,1215.52 1093.34,1213.95 1093.93,1215.1 1094.51,1213.35 1095.1,1214.44 1095.68,1213.15 1096.27,1211.82 1096.86,1213.13 1097.44,1215.6 1098.03,1213.99 1098.62,1213.59 1099.2,1213.37 1099.79,1213.33 1100.38,1211.43 1100.96,1211.57 1101.55,1211.46 1102.14,1208.89 1102.72,1211.56 1103.31,1211.52 1103.89,1208.93 1104.48,1209.15 1105.07,1209.31 1105.65,1213.52 1106.24,1211.72 1106.83,1209.15 1107.41,1210.34 1108,1208.84 1108.59,1210.26 1109.17,1210.31 1109.76,1210.37 1110.34,1209.14 1110.93,1211.82 1111.52,1211.41 1112.1,1214.04 1112.69,1216.33 1113.28,1216 1113.86,1218.37 1114.45,1218 1115.04,1217.45 1115.62,1218.47 1116.21,1218.05 1116.8,1217.53 1117.38,1217.08 1117.97,1216.4 1118.55,1214.67 1119.14,1214.35 1119.73,1216.74 1120.31,1215.98 1120.9,1216.84 1121.49,1217.78 1122.07,1214.65 1122.66,1214.48 1123.25,1212.82 1123.83,1211.77 1124.42,1211.84 1125.01,1211.88 1125.59,1211.73 1126.18,1211.79 1126.76,1212.98 1127.35,1214.47 1127.94,1214.26 1128.52,1214.36 1129.11,1215.19 1129.7,1213.33 1130.28,1215.76 1130.87,1215.39 1131.46,1216.24 1132.04,1218.51 1132.63,1215.21 1133.21,1216.39 1133.8,1218.58 1134.39,1220.65 1134.97,1221.48 1135.56,1222.18 1136.15,1221.51 1136.73,1220.6 1137.32,1220.24 1137.91,1217.15 1138.49,1211.62 1139.08,1209 1139.67,1210.6 1140.25,1209.33 1140.84,1208.22 1141.42,1204.79 1142.01,1203.76 1142.6,1206.82 1143.18,1210.95 1143.77,1209.48 1144.36,1210.5 1144.94,1213.2 1145.53,1211.87 1146.12,1208.99 1146.7,1211.28 1147.29,1208.4 1147.88,1208.33 1148.46,1210.71 1149.05,1211.61 1149.63,1214.12 1150.22,1209.86 1150.81,1212.43 1151.39,1213.3 1151.98,1211.6 1152.57,1211.43 1153.15,1212.5 1153.74,1212.45 1154.33,1211.04 1154.91,1211.08 1155.5,1209.48 1156.09,1208.33 1156.67,1207.04 1157.26,1204.41 1157.84,1206.1 1158.43,1204.9 1159.02,1203.84 1159.6,1203.01 1160.19,1204.6 1160.78,1207.26 1161.36,1204.84 1161.95,1205.05 1162.54,1205.35 1163.12,1205.62 1163.71,1205.94 1164.29,1207.27 1164.88,1207.44 1165.47,1208.77 1166.05,1209.92 1166.64,1212.39 1167.23,1212.08 1167.81,1213.32 1168.4,1213.27 1168.99,1211.81 1169.57,1207.75 1170.16,1207.75 1170.75,1210.3 1171.33,1212.83 1171.92,1208.77 1172.5,1208.99 1173.09,1207.6 1173.68,1206.39 1174.26,1206.89 1174.85,1208.18 1175.44,1208.17 1176.02,1207.04 1176.61,1207.39 1177.2,1206.23 1177.78,1207.7 1178.37,1206.43 1178.96,1205.16 1179.54,1208.07 1180.13,1206.91 1180.71,1204.53 1181.3,1205.04 1181.89,1205.39 1182.47,1204.26 1183.06,1204.52 1183.65,1201.94 1184.23,1202.54 1184.82,1204.64 1185.41,1202.18 1185.99,1202.63 1186.58,1201.62 1187.16,1199.53 1187.75,1200.25 1188.34,1200.6 1188.92,1201.7 1189.51,1201.03 1190.1,1205.41 1190.68,1205.6 1191.27,1210.89 1191.86,1207.01 1192.44,1208.78 1193.03,1212.93 1193.62,1214.07 1194.2,1212.63 1194.79,1211.11 1195.37,1213.88 1195.96,1214.8 1196.55,1213.07 1197.13,1212.76 1197.72,1215.33 1198.31,1216.45 1198.89,1216.16 1199.48,1216.07 1200.07,1218.49 1200.65,1218.03 1201.24,1217.82 1201.83,1218.53 1202.41,1219.46 1203,1219.04 1203.58,1220.03 1204.17,1216.56 1204.76,1217.45 1205.34,1215.75 1205.93,1218 1206.52,1219.8 1207.1,1220.46 1207.69,1218.31 1208.28,1217.98 1208.86,1219.02 1209.45,1218.67 1210.03,1218.36 1210.62,1214.02 1211.21,1214.91 1211.79,1213.18 1212.38,1213.01 1212.97,1212.74 1213.55,1213.6 1214.14,1213.36 1214.73,1210.73 1215.31,1209.25 1215.9,1210.51 1216.49,1210.87 1217.07,1210.78 1217.66,1209.31 1218.24,1209.61 1218.83,1209.45 1219.42,1209.24 1220,1207.62 1220.59,1209.1 1221.18,1210.5 1221.76,1209.34 1222.35,1207.9 1222.94,1206.57 1223.52,1206.7 1224.11,1205.51 1224.7,1205.63 1225.28,1210.86 1225.87,1209.42 1226.45,1210.7 1227.04,1209.41 1227.63,1209.35 1228.21,1206.83 1228.8,1208.26 1229.39,1208.6 1229.97,1208.4 1230.56,1205.9 1231.15,1203.53 1231.73,1202.57 1232.32,1205.27 1232.91,1205.32 1233.49,1202.66 1234.08,1201.74 1234.66,1201.12 1235.25,1200.5 1235.84,1198.62 1236.42,1201.92 1237.01,1203.72 1237.6,1202.74 1238.18,1203.26 1238.77,1203.5 1239.36,1202.72 1239.94,1202.86 1240.53,1207.01 1241.11,1204.61 1241.7,1206.29 1242.29,1207.96 1242.87,1209.37 1243.46,1210.72 1244.05,1208.26 1244.63,1210.78 1245.22,1213.38 1245.81,1213.23 1246.39,1215.69 1246.98,1218.23 1247.57,1220.92 1248.15,1221.82 1248.74,1218.89 1249.32,1218.26 1249.91,1216.44 1250.5,1217.07 1251.08,1218.05 1251.67,1217.92 1252.26,1216.2 1252.84,1214.64 1253.43,1213.26 1254.02,1211.54 1254.6,1212.83 1255.19,1213.91 1255.78,1215.02 1256.36,1217.39 1256.95,1217.12 1257.53,1216.77 1258.12,1215.4 1258.71,1215.01 1259.29,1215.74 1259.88,1215.18 1260.47,1213.51 1261.05,1211.68 1261.64,1213.03 1262.23,1215.27 1262.81,1216.48 1263.4,1220.07 1263.98,1217.08 1264.57,1216.57 1265.16,1217.13 1265.74,1217.92 1266.33,1216.16 1266.92,1215.58 1267.5,1216.31 1268.09,1214.56 1268.68,1214.16 1269.26,1213.96 1269.85,1209.42 1270.44,1208.1 1271.02,1205.73 1271.61,1204.28 1272.19,1203.4 1272.78,1203.56 1273.37,1202.38 1273.95,1200.17 1274.54,1204.47 1275.13,1206.03 1275.71,1206.25 1276.3,1205.18 1276.89,1205.43 1277.47,1205.78 1278.06,1204.62 1278.65,1210.2 1279.23,1211.3 1279.82,1213.88 1280.4,1211.06 1280.99,1209.71 1281.58,1208.72 1282.16,1208.58 1282.75,1209.83 1283.34,1208.39 1283.92,1208.47 1284.51,1208.38 1285.1,1206.99 1285.68,1206.89 1286.27,1208.19 1286.86,1208.24 1287.44,1205.83 1288.03,1208.55 1288.61,1208.35 1289.2,1207.14 1289.79,1206.15 1290.37,1204.97 1290.96,1206.17 1291.55,1204.87 1292.13,1203.77 1292.72,1204 1293.31,1203.18 1293.89,1202.4 1294.48,1201.39 1295.06,1202.72 1295.65,1200.4 1296.24,1198.03 1296.82,1198.6 1297.41,1199.34 1298,1201.38 1298.58,1201.87 1299.17,1205 1299.76,1205.31 1300.34,1206.88 1300.93,1204.35 1301.52,1202 1302.1,1201.2 1302.69,1203.18 1303.27,1202.18 1303.86,1201.29 1304.45,1200.49 1305.03,1198.18 1305.62,1198.73 1306.21,1200.38 1306.79,1200.9 1307.38,1204.09 1307.97,1207.02 1308.55,1208.42 1309.14,1206.07 1309.73,1205.03 1310.31,1205.24 1310.9,1206.87 1311.48,1205.8 1312.07,1204.86 1312.66,1204.05 1313.24,1204.59 1313.83,1204.91 1314.42,1207.76 1315,1209.16 1315.59,1209 1316.18,1207.61 1316.76,1206.53 1317.35,1209.1 1317.93,1208.93 1318.52,1208.85 1319.11,1209.19 1319.69,1210.5 1320.28,1214.72 1320.87,1215.63 1321.45,1214.99 1322.04,1214.82 1322.63,1214.56 1323.21,1214.47 1323.8,1211.27 1324.39,1211.39 1324.97,1212.7 1325.56,1215.03 1326.14,1215.01 1326.73,1214.68 1327.32,1214.4 1327.9,1214.22 1328.49,1215.15 1329.08,1215.98 1329.66,1215.66 1330.25,1215.17 1330.84,1215 1331.42,1214.73 1332.01,1212.88 1332.6,1210.03 1333.18,1208.51 1333.77,1211.21 1334.35,1208.44 1334.94,1208.52 1335.53,1205.98 1336.11,1208.75 1336.7,1207.27 1337.29,1209.84 1337.87,1209.71 1338.46,1209.49 1339.05,1210.79 1339.63,1211.67 1340.22,1211.65 1340.8,1212.77 1341.39,1212.61 1341.98,1213.94 1342.56,1213.86 1343.15,1213.75 1343.74,1216.1 1344.32,1216.08 1344.91,1209.16 1345.5,1207.59 1346.08,1210.64 1346.67,1207.98 1347.26,1207.02 1347.84,1204.48 1348.43,1204.67 1349.01,1204.68 1349.6,1204.79 1350.19,1202.56 1350.77,1205.31 1351.36,1203.95 1351.95,1205.49 1352.53,1205.33 1353.12,1203.12 1353.71,1203.29 1354.29,1202.2 1354.88,1199.93 1355.47,1203.13 1356.05,1203.49 1356.64,1203.75 1357.22,1205.17 1357.81,1203.81 1358.4,1201.4 1358.98,1200.57 1359.57,1202.52 1360.16,1202.85 1360.74,1201.99 1361.33,1202.43 1361.92,1202.78 1362.5,1201.93 1363.09,1202.36 1363.68,1202.71 1364.26,1202.8 1364.85,1203.21 1365.43,1203.54 1366.02,1203.64 1366.61,1205.32 1367.19,1203.18 1367.78,1202.3 1368.37,1203.97 1368.95,1207.16 1369.54,1207.47 1370.13,1207.83 1370.71,1207.84 1371.3,1206.49 1371.88,1205.13 1372.47,1204.01 1373.06,1205.92 1373.64,1207.57 1374.23,1207.86 1374.82,1208 1375.4,1206.39 1375.99,1207.96 1376.58,1208.21 1377.16,1208.28 1377.75,1212.22 1378.34,1214.45 1378.92,1211.5 1379.51,1209.93 1380.09,1211.02 1380.68,1210.6 1381.27,1210.67 1381.85,1209.26 1382.44,1210.14 1383.03,1209.92 1383.61,1208.54 1384.2,1211.53 1384.79,1211.34 1385.37,1209.94 1385.96,1211.66 1386.55,1211.54 1387.13,1208.57 1387.72,1209.92 1388.3,1208.49 1388.89,1207.33 1389.48,1205.13 1390.06,1203.97 1390.65,1204.41 1391.24,1204.51 1391.82,1204.98 1392.41,1203.96 1393,1204.21 1393.58,1204.4 1394.17,1206.04 1394.75,1205.81 1395.34,1205.88 1395.93,1205.84 1396.51,1205.75 1397.1,1207.49 1397.69,1207.63 1398.27,1208.92 1398.86,1206.33 1399.45,1205.21 1400.03,1204.03 1400.62,1199.05 1401.21,1200.98 1401.79,1202.63 1402.38,1204.19 1402.96,1204.42 1403.55,1204.66 1404.14,1205.38 1404.72,1208.21 1405.31,1209.7 1405.9,1209.8 1406.48,1209.83 1407.07,1208.4 1407.66,1209.72 1408.24,1206.99 1408.83,1208.55 1409.42,1210 1410,1211.11 1410.59,1213.84 1411.17,1214.75 1411.76,1214.64 1412.35,1219.52 1412.93,1220.33 1413.52,1220.92 1414.11,1224.09 1414.69,1225.1 1415.28,1226.77 1415.87,1225.81 1416.45,1227.56 1417.04,1224.25 1417.63,1227.37 1418.21,1225.33 1418.8,1223.47 1419.38,1221.64 1419.97,1221.14 1420.56,1217.74 1421.14,1215.99 1421.73,1214.34 1422.32,1208.79 1422.9,1208.8 1423.49,1204.87 1424.08,1205.18 1424.66,1205.41 1425.25,1206.83 1425.83,1205.61 1426.42,1204.37 1427.01,1205.77 1427.59,1204.47 1428.18,1204.58 1428.77,1203.36 1429.35,1203.73 1429.94,1202.73 1430.53,1204.49 1431.11,1204.69 1431.7,1207.6 1432.29,1210.31 1432.87,1210.41 1433.46,1210.4 1434.04,1208.14 1434.63,1205.91 1435.22,1204.9 1435.8,1205.44 1436.39,1201.49 1436.98,1203.07 1437.56,1203.31 1438.15,1203.16 1438.74,1202.22 1439.32,1201.39 1439.91,1200.13 1440.5,1200.95 1441.08,1201.32 1441.67,1204.41 1442.25,1206.1 1442.84,1207.52 1443.43,1207.58 1444.01,1206.16 1444.6,1206.55 1445.19,1205.14 1445.77,1206.86 1446.36,1208.51 1446.95,1209.72 1447.53,1208.19 1448.12,1210.7 1448.7,1212.02 1449.29,1216.02 1449.88,1216.86 1450.46,1216.58 1451.05,1214.86 1451.64,1214.38 1452.22,1214.31 1452.81,1211.26 1453.4,1214.01 1453.98,1211.31 1454.57,1212.47 1455.16,1212.18 1455.74,1214.54 1456.33,1214.38 1456.91,1215.48 1457.5,1215.18 1458.09,1209.56 1458.67,1206.77 1459.26,1207.2 1459.85,1203.43 1460.43,1201.29 1461.02,1201.85 1461.61,1200.87 1462.19,1202.93 1462.78,1200.72 1463.37,1203.74 1463.95,1203.85 1464.54,1203.97 1465.12,1205.54 1465.71,1207.13 1466.3,1207.22 1466.88,1208.76 1467.47,1208.48 1468.06,1207.19 1468.64,1210.95 1469.23,1210.8 1469.82,1210.99 1470.4,1210.93 1470.99,1213.79 1471.57,1212.1 1472.16,1210.58 1472.75,1210.51 1473.33,1209.04 1473.92,1209.17 1474.51,1210.23 1475.09,1211.55 1475.68,1209.98 1476.27,1208.97 1476.85,1209 1477.44,1210.61 1478.03,1211.8 1478.61,1210.63 1479.2,1209.24 1479.78,1208.17 1480.37,1206.77 1480.96,1205.92 1481.54,1205.03 1482.13,1206.77 1482.72,1206.97 1483.3,1207.89 1483.89,1207.7 1484.48,1211.82 1485.06,1213.32 1485.65,1213.11 1486.24,1210.27 1486.82,1210.32 1487.41,1211.41 1487.99,1211.12 1488.58,1210.93 1489.17,1212.05 1489.75,1215.84 1490.34,1212.97 1490.93,1212.77 1491.51,1214.11 1492.1,1213.94 1492.69,1213.69 1493.27,1213.49 1493.86,1211.82 1494.45,1211.83 1495.03,1211.74 1495.62,1210.38 1496.2,1211.63 1496.79,1214.17 1497.38,1217.69 1497.96,1214.42 1498.55,1214.31 1499.14,1213.84 1499.72,1213.62 1500.31,1215.94 1500.9,1214.18 1501.48,1213.7 1502.07,1214.7 1502.65,1213.17 1503.24,1213.06 1503.83,1211.59 1504.41,1211.27 1505,1210.96 1505.59,1211.1 1506.17,1209.72 1506.76,1211.24 1507.35,1209.8 1507.93,1208.29 1508.52,1209.88 1509.11,1212.31 1509.69,1212.11 1510.28,1212.04 1510.86,1211.74 1511.45,1211.57 1512.04,1211.54 1512.62,1211.54 1513.21,1210.1 1513.8,1209.81 1514.38,1209.75 1514.97,1211.12 1515.56,1208.63 1516.14,1208.27 1516.73,1206.95 1517.32,1209.82 1517.9,1209.95 1518.49,1209.82 1519.07,1208.48 1519.66,1209.91 1520.25,1211.15 1520.83,1212.45 1521.42,1209.23 1522.01,1207.96 1522.59,1206.51 1523.18,1207.95 1523.77,1206.28 1524.35,1209.15 1524.94,1208.05 1525.52,1208.06 1526.11,1208.28 1526.7,1207.17 1527.28,1206.05 1527.87,1203.53 1528.46,1203.74 1529.04,1202.55 1529.63,1202.97 1530.22,1202.99 1530.8,1204.83 1531.39,1206.33 1531.98,1205.32 1532.56,1205.41 1533.15,1209.46 1533.73,1208.22 1534.32,1209.17 1534.91,1209.15 1535.49,1209.16 1536.08,1211.83 1536.67,1210.13 1537.25,1212.91 1537.84,1212.86 1538.43,1213.92 1539.01,1213.69 1539.6,1213.45 1540.19,1210.5 1540.77,1212.98 1541.36,1212.76 1541.94,1213.85 1542.53,1214.97 1543.12,1216.28 1543.7,1214.27 1544.29,1215.35 1544.88,1210.94 1545.46,1209.43 1546.05,1207.79 1546.64,1205.08 1547.22,1205.06 1547.81,1203.73 1548.4,1201.3 1548.98,1203.1 1549.57,1205.92 1550.15,1203.47 1550.74,1201.35 1551.33,1200.48 1551.91,1202.39 1552.5,1204.22 1553.09,1202.77 1553.67,1205.7 1554.26,1207.18 1554.85,1205.87 1555.43,1208.72 1556.02,1207.72 1556.6,1210.41 1557.19,1210.64 1557.78,1210.65 1558.36,1214.51 1558.95,1212.77 1559.54,1212.47 1560.12,1210.89 1560.71,1210.97 1561.3,1212.24 1561.88,1213.4 1562.47,1213.1 1563.06,1214.29 1563.64,1216.31 1564.23,1217.07 1564.81,1215.28 1565.4,1216.26 1565.99,1218.52 1566.57,1219.38 1567.16,1217.67 1567.75,1218.5 1568.33,1218.07 1568.92,1216.6 1569.51,1212.16 1570.09,1216.95 1570.68,1215.09 1571.27,1212.25 1571.85,1210.99 1572.44,1209.61 1573.02,1208.26 1573.61,1209.85 1574.2,1209.69 1574.78,1209.59 1575.37,1210.81 1575.96,1212.04 1576.54,1212.13 1577.13,1211.93 1577.72,1209.22 1578.3,1208.91 1578.89,1213.9 1579.47,1209.49 1580.06,1205.44 1580.65,1205.61 1581.23,1205.78 1581.82,1207.15 1582.41,1205.92 1582.99,1208.37 1583.58,1209.81 1584.17,1209.58 1584.75,1208.27 1585.34,1209.59 1585.93,1206.79 1586.51,1206.59 1587.1,1208.04 1587.68,1209.53 1588.27,1206.8 1588.86,1208.13 1589.44,1209.33 1590.03,1206.49 1590.62,1209.18 1591.2,1207.56 1591.79,1210.16 1592.38,1208.73 1592.96,1209.86 1593.55,1209.86 1594.14,1208.4 1594.72,1208.39 1595.31,1207.15 1595.89,1204.58 1596.48,1202.64 1597.07,1201.82 1597.65,1203.62 1598.24,1203.91 1598.83,1203.07 1599.41,1202.21 1600,1203.85 1600.59,1205.31 1601.17,1202.86 1601.76,1201.99 1602.34,1202.38 1602.93,1205.4 1603.52,1204.57 1604.1,1203.46 1604.69,1203.63 1605.28,1202.71 1605.86,1207.16 1606.45,1211.07 1607.04,1212.05 1607.62,1210.92 1608.21,1210.82 1608.8,1208.22 1609.38,1209.6 1609.97,1208.23 1610.55,1209.66 1611.14,1209.57 1611.73,1209.59 1612.31,1212.31 1612.9,1216.26 1613.49,1214.67 1614.07,1216.82 1614.66,1214.36 1615.25,1216.58 1615.83,1214.8 1616.42,1215.82 1617.01,1214.4 1617.59,1214.23 1618.18,1216.43 1618.76,1216.07 1619.35,1218.34 1619.94,1216.44 1620.52,1213.5 1621.11,1215.99 1621.7,1212.76 1622.28,1213.86 1622.87,1212.05 1623.46,1211.86 1624.04,1214.36 1624.63,1215.42 1625.22,1215.18 1625.8,1213.39 1626.39,1213.37 1626.97,1211.82 1627.56,1211.36 1628.15,1210.15 1628.73,1211.15 1629.32,1212.52 1629.91,1209.95 1630.49,1210.11 1631.08,1210.06 1631.67,1208.73 1632.25,1207.6 1632.84,1210.11 1633.42,1209.02 1634.01,1207.57 1634.6,1207.82 1635.18,1206.5 1635.77,1205.37 1636.36,1205.71 1636.94,1207.07 1637.53,1206.04 1638.12,1206.11 1638.7,1207.4 1639.29,1207.45 1639.88,1208.64 1640.46,1208.48 1641.05,1209.67 1641.63,1210.88 1642.22,1213.3 1642.81,1213.31 1643.39,1217.07 1643.98,1216.49 1644.57,1218.67 1645.15,1218.1 1645.74,1217.45 1646.33,1214.3 1646.91,1212.76 1647.5,1213.93 1648.09,1209.75 1648.67,1208.38 1649.26,1209.51 1649.84,1209.7 1650.43,1209.55 1651.02,1209.41 1651.6,1206.8 1652.19,1210.68 1652.78,1210.48 1653.36,1210.44 1653.95,1207.71 1654.54,1207.76 1655.12,1206.28 1655.71,1210.4 1656.29,1210.36 1656.88,1210.39 1657.47,1210.54 1658.05,1210.66 1658.64,1209.35 1659.23,1209.77 1659.81,1213.65 1660.4,1212.07 1660.99,1211.93 1661.57,1209.26 1662.16,1207.92 1662.75,1207.84 1663.33,1208 1663.92,1209.22 1664.5,1211 1665.09,1212.57 1665.68,1214.99 1666.26,1210.6 1666.85,1210.37 1667.44,1205.97 1668.02,1208.9 1668.61,1210.39 1669.2,1208.93 1669.78,1210.27 1670.37,1210.24 1670.96,1210.18 1671.54,1209.87 1672.13,1208.36 1672.71,1205.98 1673.3,1210.08 1673.89,1207.17 1674.47,1207.42 1675.06,1208.99 1675.65,1204.93 1676.23,1203.84 1676.82,1202.6 1677.41,1203.2 1677.99,1203.39 1678.58,1201.04 1679.17,1202.97 1679.75,1204.76 1680.34,1207.39 1680.92,1209.15 1681.51,1210.77 1682.1,1208.21 1682.68,1208.21 1683.27,1207.03 1683.86,1207.48 1684.44,1206.32 1685.03,1207.75 1685.62,1206.38 1686.2,1206.45 1686.79,1207.95 1687.37,1209.43 1687.96,1210.76 1688.55,1210.77 1689.13,1211.98 1689.72,1210.84 1690.31,1212.06 1690.89,1213.42 1691.48,1210.4 1692.07,1210.28 1692.65,1210.35 1693.24,1211.29 1693.83,1212.52 1694.41,1211 1695,1212.16 1695.58,1209.38 1696.17,1207.97 1696.76,1208.08 1697.34,1208.27 1697.93,1209.58 1698.52,1205.59 1699.1,1204.65 1699.69,1207.72 1700.28,1206.24 1700.86,1207.69 1701.45,1205.17 1702.04,1204.17 1702.62,1206.82 1703.21,1205.62 1703.79,1203.21 1704.38,1200.51 1704.97,1203.57 1705.55,1206.82 1706.14,1205.62 1706.73,1205.62 1707.31,1204.41 1707.9,1204.6 1708.49,1204.95 1709.07,1203.62 1709.66,1205.01 1710.24,1205.37 1710.83,1206.74 1711.42,1206.98 1712,1207.11 1712.59,1208.77 1713.18,1204.83 1713.76,1206.66 1714.35,1205.65 1714.94,1207.38 1715.52,1206.01 1716.11,1208.98 1716.7,1210.3 1717.28,1208.93 1717.87,1209.07 1718.45,1207.87 1719.04,1206.95 1719.63,1208.52 1720.21,1209.92 1720.8,1209.88 1721.39,1208.54 1721.97,1209.8 1722.56,1211.03 1723.15,1208.02 1723.73,1210.82 1724.32,1212.1 1724.91,1211.99 1725.49,1209.44 1726.08,1211.06 1726.66,1210.82 1727.25,1212.22 1727.84,1210.92 1728.42,1209.54 1729.01,1211.86 1729.6,1211.42 1730.18,1209.77 1730.77,1209.71 1731.36,1210.06 1731.94,1210.22 1732.53,1211.47 1733.11,1211.55 1733.7,1214.06 1734.29,1215.13 1734.87,1213.53 1735.46,1214.66 1736.05,1210.4 1736.63,1207.58 1737.22,1209.09 1737.81,1206.16 1738.39,1203.82 1738.98,1202.53 1739.57,1203.09 1740.15,1205.04 1740.74,1205.58 1741.32,1205.77 1741.91,1203.24 1742.5,1203.33 1743.08,1203.71 1743.67,1204.07 1744.26,1205.55 1744.84,1204.32 1745.43,1204.59 1746.02,1204.8 1746.6,1203.68 1747.19,1207.77 1747.78,1207.87 1748.36,1207.86 1748.95,1207.75 1749.53,1207.79 1750.12,1212.76 1750.71,1213.91 1751.29,1214.09 1751.88,1215.15 1752.47,1214.69 1753.05,1213.19 1753.64,1215.61 1754.23,1213.89 1754.81,1213.57 1755.4,1213.38 1755.99,1209.18 1756.57,1206.69 1757.16,1207.26 1757.74,1206.16 1758.33,1207.57 1758.92,1209.2 1759.5,1210.51 1760.09,1214.24 1760.68,1215.17 1761.26,1211.09 1761.85,1209.77 1762.44,1209.85 1763.02,1209.56 1763.61,1210.83 1764.19,1210.46 1764.78,1209.35 1765.37,1210.87 1765.95,1209.57 1766.54,1208.14 1767.13,1206.84 1767.71,1207.1 1768.3,1202.98 1768.89,1201.82 1769.47,1204.93 1770.06,1203.66 1770.65,1207.84 1771.23,1206.43 1771.82,1202.95 1772.4,1203.2 1772.99,1203.51 1773.58,1201.06 1774.16,1203.16 1774.75,1202.11 1775.34,1204.07 1775.92,1205.69 1776.51,1207.07 1777.1,1207.24 1777.68,1207.36 1778.27,1206.03 1778.86,1206.14 1779.44,1206.2 1780.03,1203.96 1780.61,1203.03 1781.2,1203.27 1781.79,1206.35 1782.37,1205.08 1782.96,1205.25 1783.55,1205.67 1784.13,1205.73 1784.72,1204.8 1785.31,1205.31 1785.89,1201.32 1786.48,1201.8 1787.06,1203.41 1787.65,1205.14 1788.24,1205.45 1788.82,1208.26 1789.41,1207.16 1790,1207.54 1790.58,1207.55 1791.17,1210.34 1791.76,1210.63 1792.34,1212.06 1792.93,1213.26 1793.52,1211.4 1794.1,1210.23 1794.69,1210.26 1795.27,1211.42 1795.86,1213.83 1796.45,1212.41 1797.03,1210.87 1797.62,1210.73 1798.21,1209.16 1798.79,1207.83 1799.38,1207.79 1799.97,1206.62 1800.55,1209.37 1801.14,1212.31 1801.73,1210.77 1802.31,1210.8 1802.9,1209.24 1803.48,1212.09 1804.07,1212.03 1804.66,1209.1 1805.24,1210.18 1805.83,1207.68 1806.42,1206.5 1807,1207.72 1807.59,1209.03 1808.18,1207.74 1808.76,1207.93 1809.35,1208.17 1809.94,1207.15 1810.52,1205.93 1811.11,1204.76 1811.69,1206.43 1812.28,1204.05 1812.87,1205.96 1813.45,1212.75 1814.04,1213.71 1814.63,1213.14 1815.21,1213.01 1815.8,1212.85 1816.39,1212.71 1816.97,1218.88 1817.56,1218.28 1818.14,1215.33 1818.73,1214.91 1819.32,1213.52 1819.9,1210.94 1820.49,1212.45 1821.08,1215.1 1821.66,1216.29 1822.25,1217.38 1822.84,1216.93 1823.42,1214.87 1824.01,1215.65 1824.6,1213.94 1825.18,1216.27 1825.77,1215.69 1826.35,1216.55 1826.94,1216.09 1827.53,1214.42 1828.11,1212.88 1828.7,1212.66 1829.29,1213.8 1829.87,1212.5 1830.46,1213.66 1831.05,1213.65 1831.63,1214.82 1832.22,1213.3 1832.81,1212.89 1833.39,1212.64 1833.98,1216.25 1834.56,1214.46 1835.15,1208.71 1835.74,1208.52 1836.32,1207.5 1836.91,1208.77 1837.5,1208.86 1838.08,1207.62 1838.67,1210.09 1839.26,1210.32 1839.84,1209.26 1840.43,1210.82 1841.01,1209.36 1841.6,1210.36 1842.19,1208.64 1842.77,1207.25 1843.36,1208.83 1843.95,1204.69 1844.53,1205.09 1845.12,1205.42 1845.71,1206.98 1846.29,1205.6 1846.88,1204.32 1847.47,1204.37 1848.05,1207.28 1848.64,1207.41 1849.22,1207.22 1849.81,1207.15 1850.4,1208.3 1850.98,1212.31 1851.57,1213.26 1852.16,1211.91 1852.74,1210.29 1853.33,1211.56 1853.92,1207.4 1854.5,1208.9 1855.09,1207.65 1855.68,1205.32 1856.26,1206.91 1856.85,1205.51 1857.43,1206.97 1858.02,1204.18 1858.61,1203.23 1859.19,1201.99 1859.78,1202.32 1860.37,1206.42 1860.95,1206.73 1861.54,1206.58 1862.13,1207.95 1862.71,1206.35 1863.3,1205.31 1863.88,1205.51 1864.47,1206.85 1865.06,1208.57 1865.64,1209.96 1866.23,1211.15 1866.82,1214.76 1867.4,1217 1867.99,1218.09 1868.58,1217.89 1869.16,1217.23 1869.75,1215.72 1870.34,1215.12 1870.92,1214.77 1871.51,1215.68 1872.09,1215.4 1872.68,1213.81 1873.27,1213.87 1873.85,1212.08 1874.44,1211.96 1875.03,1211.67 1875.61,1211.57 1876.2,1208.75 1876.79,1207.32 1877.37,1208.72 1877.96,1208.91 1878.55,1211.44 1879.13,1211.22 1879.72,1212.57 1880.3,1210.93 1880.89,1210.77 1881.48,1209.41 1882.06,1210.59 1882.65,1210.52 1883.24,1209.15 1883.82,1206.46 1884.41,1207.87 1885,1210.85 1885.58,1212.13 1886.17,1209.32 1886.76,1207.97 1887.34,1203.83 1887.93,1204.04 1888.51,1204.3 1889.1,1206 1889.69,1208.97 1890.27,1207.67 1890.86,1207.98 1891.45,1208.02 1892.03,1210.68 1892.62,1205.46 1893.21,1207.06 1893.79,1207.1 1894.38,1207.13 1894.96,1209.72 1895.55,1208.02 1896.14,1207.94 1896.72,1208.04 1897.31,1208.49 1897.9,1210.96 1898.48,1213.58 1899.07,1211.96 1899.66,1212.79 1900.24,1211.17 1900.83,1212.77 1901.42,1211.22 1902,1209.98 1902.59,1209.7 1903.17,1208.6 1903.76,1208.5 1904.35,1207.12 1904.93,1202.06 1905.52,1202.5 1906.11,1198.78 1906.69,1200.73 1907.28,1203.72 1907.87,1202.81 1908.45,1204.8 1909.04,1203.85 1909.63,1202.93 1910.21,1204.65 1910.8,1206.3 1911.38,1210.65 1911.97,1210.71 1912.56,1213.18 1913.14,1213.05 1913.73,1212.85 1914.32,1213.87 1914.9,1212.23 1915.49,1211.13 1916.08,1212.38 1916.66,1213.45 1917.25,1215.78 1917.83,1212.89 1918.42,1211.54 1919.01,1210.17 1919.59,1210.36 1920.18,1211.83 1920.77,1211.71 1921.35,1211.61 1921.94,1211.45 1922.53,1208.61 1923.11,1208.68 1923.7,1208.86 1924.29,1208.8 1924.87,1205.92 1925.46,1206.04 1926.04,1206.31 1926.63,1207.74 1927.22,1208.67 1927.8,1205.78 1928.39,1207.4 1928.98,1207.44 1929.56,1206.31 1930.15,1207.42 1930.74,1206.46 1931.32,1205.21 1931.91,1206.67 1932.5,1208.22 1933.08,1209.91 1933.67,1209.7 1934.25,1208.33 1934.84,1207.18 1935.43,1207.24 1936.01,1209.95 1936.6,1208.48 1937.19,1209.81 1937.77,1210.9 1938.36,1209.98 1938.95,1207.38 1939.53,1209.01 1940.12,1209.05 1940.71,1210.05 1941.29,1211.51 1941.88,1208.82 1942.46,1207.53 1943.05,1207.58 1943.64,1206.58 1944.22,1207.04 1944.81,1207.14 1945.4,1207.06 1945.98,1206.18 1946.57,1208.01 1947.16,1206.85 1947.74,1207.16 1948.33,1207.35 1948.91,1206.17 1949.5,1207.58 1950.09,1207.37 1950.67,1211.52 1951.26,1211.66 1951.85,1210.24 1952.43,1210.03 1953.02,1211.31 1953.61,1212.57 1954.19,1214.93 1954.78,1218.32 1955.37,1218.96 1955.95,1218.17 1956.54,1216.58 1957.12,1216.25 1957.71,1215.69 1958.3,1216.93 1958.88,1216.72 1959.47,1217.51 1960.06,1211.76 1960.64,1210.37 1961.23,1209.07 1961.82,1207.81 1962.4,1209.08 1962.99,1209.12 1963.58,1205.65 1964.16,1208.33 1964.75,1209.87 1965.33,1205.61 1965.92,1203.08 1966.51,1203.31 1967.09,1203.51 1967.68,1203.85 1968.27,1203.1 1968.85,1204.61 1969.44,1203.74 1970.03,1202.75 1970.61,1200.58 1971.2,1201.15 1971.78,1201.64 1972.37,1203.23 1972.96,1205.03 1973.54,1204.94 1974.13,1207.78 1974.72,1206.4 1975.3,1206.42 1975.89,1206.38 1976.48,1206.92 1977.06,1208.72 1977.65,1210.05 1978.24,1210.01 1978.82,1206.18 1979.41,1209.02 1979.99,1210.2 1980.58,1211.43 1981.17,1211.21 1981.75,1213.69 1982.34,1216.17 1982.93,1217.37 1983.51,1215.56 1984.1,1213.95 1984.69,1211.02 1985.27,1209.52 1985.86,1211.01 1986.45,1209.67 1987.03,1209.88 1987.62,1212.32 1988.2,1210.78 1988.79,1210.45 1989.38,1211.58 1989.96,1207.3 1990.55,1208.75 1991.14,1207.15 1991.72,1207.29 1992.31,1207.61 1992.9,1206.4 1993.48,1203.91 1994.07,1201.81 1994.65,1200.86 1995.24,1201.3 1995.83,1201.51 1996.41,1201.78 1997,1202.11 1997.59,1202.45 1998.17,1201.45 1998.76,1203.13 1999.35,1202.16 1999.93,1202.29 2000.52,1205.12 2001.11,1205.2 2001.69,1204.07 2002.28,1204.24 2002.86,1206.75 2003.45,1208.33 2004.04,1207.17 2004.62,1207.21 2005.21,1205.83 2005.8,1207.34 2006.38,1204.65 2006.97,1206.57 2007.56,1207.85 2008.14,1208.02 2008.73,1209.33 2009.32,1210.84 2009.9,1210.83 2010.49,1209.24 2011.07,1210.65 2011.66,1209.33 2012.25,1209.45 2012.83,1209.52 2013.42,1210.79 2014.01,1209.48 2014.59,1208.46 2015.18,1210.02 2015.77,1211.46 2016.35,1212.47 2016.94,1213.64 2017.53,1213.28 2018.11,1214.38 2018.7,1214.12 2019.28,1208.71 2019.87,1210.28 2020.46,1210.39 2021.04,1210.5 2021.63,1208.99 2022.22,1214.19 2022.8,1213.72 2023.39,1214.84 2023.98,1213.1 2024.56,1214.11 2025.15,1213.73 2025.73,1211.14 2026.32,1213.95 2026.91,1213.64 2027.49,1214.48 2028.08,1212.54 2028.67,1212.25 2029.25,1214.4 2029.84,1215.26 2030.43,1213.55 2031.01,1211.76 2031.6,1210.46 2032.19,1211.43 2032.77,1212.62 2033.36,1209.92 2033.94,1208.49 2034.53,1210.86 2035.12,1211.02 2035.7,1211.2 2036.29,1209.85 2036.88,1211.27 2037.46,1212.32 2038.05,1211.92 2038.64,1211.81 2039.22,1211.76 2039.81,1214.44 2040.4,1212.96 2040.98,1213.89 2041.57,1218.85 2042.15,1217.15 2042.74,1216.94 2043.33,1217.85 2043.91,1216.1 2044.5,1215.74 2045.09,1214.13 2045.67,1217.87 2046.26,1214.73 2046.85,1214.4 2047.43,1214.03 2048.02,1216.31 2048.6,1216.1 2049.19,1215.72 2049.78,1218.2 2050.36,1217.69 2050.95,1219.61 2051.54,1217.27 2052.12,1217.11 2052.71,1219.53 2053.3,1217.54 2053.88,1215.8 2054.47,1216.96 2055.06,1213.69 2055.64,1209.5 2056.23,1209.68 2056.81,1207.14 2057.4,1207.49 2057.99,1206.3 2058.57,1206.36 2059.16,1207.76 2059.75,1208.97 2060.33,1208.85 2060.92,1204.78 2061.51,1203.93 2062.09,1206.98 2062.68,1206.76 2063.27,1208.24 2063.85,1208.47 2064.44,1208.42 2065.02,1211.1 2065.61,1211.1 2066.2,1208.41 2066.78,1209.84 2067.37,1205.73 2067.96,1203.27 2068.54,1202.02 2069.13,1203.54 2069.72,1203.87 2070.3,1205.54 2070.89,1205.96 2071.48,1206.05 2072.06,1207.8 2072.65,1206.54 2073.23,1205.2 2073.82,1205.63 2074.41,1205.52 2074.99,1208.49 2075.58,1208.73 2076.17,1211.53 2076.75,1212.85 2077.34,1213.74 2077.93,1213.14 2078.51,1213.99 2079.1,1212.17 2079.68,1212.02 2080.27,1213.37 2080.86,1213.28 2081.44,1215.53 2082.03,1216.61 2082.62,1215.07 2083.2,1214.75 2083.79,1214.59 2084.38,1212.92 2084.96,1211.13 2085.55,1209.89 2086.14,1208.63 2086.72,1208.73 2087.31,1206.06 2087.89,1206.32 2088.48,1204.92 2089.07,1204.11 2089.65,1203.22 2090.24,1204.74 2090.83,1206.18 2091.41,1207.9 2092,1208.06 2092.59,1206.89 2093.17,1206.89 2093.76,1205.41 2094.35,1208.16 2094.93,1209.45 2095.52,1206.71 2096.1,1206.97 2096.69,1205.75 2097.28,1207.28 2097.86,1210.08 2098.45,1213.87 2099.04,1213.58 2099.62,1211.85 2100.21,1212.87 2100.8,1214.02 2101.38,1220.65 2101.97,1219.98 2102.55,1220.7 2103.14,1218.82 2103.73,1219.59 2104.31,1217.63 2104.9,1215.74 2105.49,1216.71 2106.07,1217.48 2106.66,1218.67 2107.25,1215.65 2107.83,1218.08 2108.42,1218.85 2109.01,1216.79 2109.59,1215 2110.18,1213.18 2110.76,1214.16 2111.35,1209.91 2111.94,1207.21 2112.52,1207.52 2113.11,1206.11 2113.7,1206.46 2114.28,1206.36 2114.87,1202.71 2115.46,1202.96 2116.04,1204.81 2116.63,1202.57 2117.22,1201.68 2117.8,1199.26 2118.39,1198.5 2118.97,1197.6 2119.56,1198.3 2120.15,1199.03 2120.73,1198.27 2121.32,1197.39 2121.91,1199.16 2122.49,1203.89 2123.08,1204.02 2123.67,1206.77 2124.25,1208.1 2124.84,1206.98 2125.42,1208.53 2126.01,1208.88 2126.6,1210.67 2127.18,1211.96 2127.77,1213.23 2128.36,1210.42 2128.94,1211.71 2129.53,1215.51 2130.12,1215.12 2130.7,1213.37 2131.29,1213.15 2131.88,1213.08 2132.46,1210.43 2133.05,1209 2133.63,1211.33 2134.22,1212.41 2134.81,1210.94 2135.39,1212.08 2135.98,1211.91 2136.57,1212.71 2137.15,1212.58 2137.74,1207.33 2138.33,1208.95 2138.91,1206.64 2139.5,1209.31 2140.09,1210.74 2140.67,1211.55 2141.26,1210.29 2141.84,1208.8 2142.43,1208.92 2143.02,1209.11 2143.6,1209.16 2144.19,1206.67 2144.78,1208.08 2145.36,1209.46 2145.95,1209.45 2146.54,1206.76 2147.12,1205.52 2147.71,1205.51 2148.3,1205.72 2148.88,1205.86 2149.47,1203.13 2150.05,1202.27 2150.64,1202.83 2151.23,1201.85 2151.81,1202.37 2152.4,1197.3 2152.99,1199.32 2153.57,1199.72 2154.16,1202.87 2154.75,1200.64 2155.33,1206.2 2155.92,1206.23 2156.5,1206.55 2157.09,1205.57 2157.68,1208.55 2158.26,1206 \"/>\n<path clip-path=\"url(#clip162)\" d=\"M986.025 1209.7 L986.612 1209.7 L987.198 1209.7 L987.785 1209.7 L988.371 1209.7 L988.957 1209.7 L989.544 1209.7 L990.13 1209.7 L990.717 1209.7 L991.303 1209.7 L991.889 1209.7 L992.476 1209.7 L993.062 1209.7 L993.649 1209.7 L994.235 1209.7 L994.822 1209.7 L995.408 1209.7 L995.994 1209.7 L996.581 1209.7 L997.167 1209.7 L997.754 1209.7 L998.34 1209.7 L998.926 1209.7 L999.513 1209.7 L1000.1 1209.7 L1000.69 1209.7 L1001.27 1209.7 L1001.86 1209.7 L1002.44 1209.7 L1003.03 1209.7 L1003.62 1209.7 L1004.2 1209.7 L1004.79 1209.7 L1005.38 1209.7 L1005.96 1209.7 L1006.55 1209.7 L1007.14 1209.7 L1007.72 1209.7 L1008.31 1209.7 L1008.9 1209.7 L1009.48 1209.7 L1010.07 1209.7 L1010.65 1209.7 L1011.24 1209.7 L1011.83 1209.7 L1012.41 1209.7 L1013 1209.7 L1013.59 1209.7 L1014.17 1209.7 L1014.76 1209.7 L1015.35 1209.7 L1015.93 1209.7 L1016.52 1209.7 L1017.11 1209.7 L1017.69 1209.7 L1018.28 1209.7 L1018.86 1209.7 L1019.45 1209.7 L1020.04 1209.7 L1020.62 1209.7 L1021.21 1209.7 L1021.8 1209.7 L1022.38 1209.7 L1022.97 1209.7 L1023.56 1209.7 L1024.14 1209.7 L1024.73 1209.7 L1025.32 1209.7 L1025.9 1209.7 L1026.49 1209.7 L1027.07 1209.7 L1027.66 1209.7 L1028.25 1209.7 L1028.83 1209.7 L1029.42 1209.7 L1030.01 1209.7 L1030.59 1209.7 L1031.18 1209.7 L1031.77 1209.7 L1032.35 1209.7 L1032.94 1209.7 L1033.52 1209.7 L1034.11 1209.7 L1034.7 1209.7 L1035.28 1209.7 L1035.87 1209.7 L1036.46 1209.7 L1037.04 1209.7 L1037.63 1209.7 L1038.22 1209.7 L1038.8 1209.7 L1039.39 1209.7 L1039.98 1209.7 L1040.56 1209.7 L1041.15 1209.7 L1041.73 1209.7 L1042.32 1209.7 L1042.91 1209.7 L1043.49 1209.7 L1044.08 1209.7 L1044.67 1209.7 L1045.25 1209.7 L1045.84 1209.7 L1046.43 1209.7 L1047.01 1209.7 L1047.6 1209.7 L1048.19 1209.7 L1048.77 1209.7 L1049.36 1209.7 L1049.94 1209.7 L1050.53 1209.7 L1051.12 1209.7 L1051.7 1209.7 L1052.29 1209.7 L1052.88 1209.7 L1053.46 1209.7 L1054.05 1209.7 L1054.64 1209.7 L1055.22 1209.7 L1055.81 1209.7 L1056.39 1209.7 L1056.98 1209.7 L1057.57 1209.7 L1058.15 1209.7 L1058.74 1209.7 L1059.33 1209.7 L1059.91 1209.7 L1060.5 1209.7 L1061.09 1209.7 L1061.67 1209.7 L1062.26 1209.7 L1062.85 1209.7 L1063.43 1209.7 L1064.02 1209.7 L1064.6 1209.7 L1065.19 1209.7 L1065.78 1209.7 L1066.36 1209.7 L1066.95 1209.7 L1067.54 1209.7 L1068.12 1209.7 L1068.71 1209.7 L1069.3 1209.7 L1069.88 1209.7 L1070.47 1209.7 L1071.06 1209.7 L1071.64 1209.7 L1072.23 1209.7 L1072.81 1209.7 L1073.4 1209.7 L1073.99 1209.7 L1074.57 1209.7 L1075.16 1209.7 L1075.75 1209.7 L1076.33 1209.7 L1076.92 1209.7 L1077.51 1209.7 L1078.09 1209.7 L1078.68 1209.7 L1079.26 1209.7 L1079.85 1209.7 L1080.44 1209.7 L1081.02 1209.7 L1081.61 1209.7 L1082.2 1209.7 L1082.78 1209.7 L1083.37 1209.7 L1083.96 1209.7 L1084.54 1209.7 L1085.13 1209.7 L1085.72 1209.7 L1086.3 1209.7 L1086.89 1209.7 L1087.47 1209.7 L1088.06 1209.7 L1088.65 1209.7 L1089.23 1209.7 L1089.82 1209.7 L1090.41 1209.7 L1090.99 1209.7 L1091.58 1209.7 L1092.17 1209.7 L1092.75 1209.7 L1093.34 1209.7 L1093.93 1209.7 L1094.51 1209.7 L1095.1 1209.7 L1095.68 1209.7 L1096.27 1209.7 L1096.86 1209.7 L1097.44 1209.7 L1098.03 1209.7 L1098.62 1209.7 L1099.2 1209.7 L1099.79 1209.7 L1100.38 1209.7 L1100.96 1209.7 L1101.55 1209.7 L1102.14 1209.7 L1102.72 1209.7 L1103.31 1209.7 L1103.89 1209.7 L1104.48 1209.7 L1105.07 1209.7 L1105.65 1209.7 L1106.24 1209.7 L1106.83 1209.7 L1107.41 1209.7 L1108 1209.7 L1108.59 1209.7 L1109.17 1209.7 L1109.76 1209.7 L1110.34 1209.7 L1110.93 1209.7 L1111.52 1209.7 L1112.1 1209.7 L1112.69 1209.7 L1113.28 1209.7 L1113.86 1209.7 L1114.45 1209.7 L1115.04 1209.7 L1115.62 1209.7 L1116.21 1209.7 L1116.8 1209.7 L1117.38 1209.7 L1117.97 1209.7 L1118.55 1209.7 L1119.14 1209.7 L1119.73 1209.7 L1120.31 1209.7 L1120.9 1209.7 L1121.49 1209.7 L1122.07 1209.7 L1122.66 1209.7 L1123.25 1209.7 L1123.83 1209.7 L1124.42 1209.7 L1125.01 1209.7 L1125.59 1209.7 L1126.18 1209.7 L1126.76 1209.7 L1127.35 1209.7 L1127.94 1209.7 L1128.52 1209.7 L1129.11 1209.7 L1129.7 1209.7 L1130.28 1209.7 L1130.87 1209.7 L1131.46 1209.7 L1132.04 1209.7 L1132.63 1209.7 L1133.21 1209.7 L1133.8 1209.7 L1134.39 1209.7 L1134.97 1209.7 L1135.56 1209.7 L1136.15 1209.7 L1136.73 1209.7 L1137.32 1209.7 L1137.91 1209.7 L1138.49 1209.7 L1139.08 1209.7 L1139.67 1209.7 L1140.25 1209.7 L1140.84 1209.7 L1141.42 1209.7 L1142.01 1209.7 L1142.6 1209.7 L1143.18 1209.7 L1143.77 1209.7 L1144.36 1209.7 L1144.94 1209.7 L1145.53 1209.7 L1146.12 1209.7 L1146.7 1209.7 L1147.29 1209.7 L1147.88 1209.7 L1148.46 1209.7 L1149.05 1209.7 L1149.63 1209.7 L1150.22 1209.7 L1150.81 1209.7 L1151.39 1209.7 L1151.98 1209.7 L1152.57 1209.7 L1153.15 1209.7 L1153.74 1209.7 L1154.33 1209.7 L1154.91 1209.7 L1155.5 1209.7 L1156.09 1209.7 L1156.67 1209.7 L1157.26 1209.7 L1157.84 1209.7 L1158.43 1209.7 L1159.02 1209.7 L1159.6 1209.7 L1160.19 1209.7 L1160.78 1209.7 L1161.36 1209.7 L1161.95 1209.7 L1162.54 1209.7 L1163.12 1209.7 L1163.71 1209.7 L1164.29 1209.7 L1164.88 1209.7 L1165.47 1209.7 L1166.05 1209.7 L1166.64 1209.7 L1167.23 1209.7 L1167.81 1209.7 L1168.4 1209.7 L1168.99 1209.7 L1169.57 1209.7 L1170.16 1209.7 L1170.75 1209.7 L1171.33 1209.7 L1171.92 1209.7 L1172.5 1209.7 L1173.09 1209.7 L1173.68 1209.7 L1174.26 1209.7 L1174.85 1209.7 L1175.44 1209.7 L1176.02 1209.7 L1176.61 1209.7 L1177.2 1209.7 L1177.78 1209.7 L1178.37 1209.7 L1178.96 1209.7 L1179.54 1209.7 L1180.13 1209.7 L1180.71 1209.7 L1181.3 1209.7 L1181.89 1209.7 L1182.47 1209.7 L1183.06 1209.7 L1183.65 1209.7 L1184.23 1209.7 L1184.82 1209.7 L1185.41 1209.7 L1185.99 1209.7 L1186.58 1209.7 L1187.16 1209.7 L1187.75 1209.7 L1188.34 1209.7 L1188.92 1209.7 L1189.51 1209.7 L1190.1 1209.7 L1190.68 1209.7 L1191.27 1209.7 L1191.86 1209.7 L1192.44 1209.7 L1193.03 1209.7 L1193.62 1209.7 L1194.2 1209.7 L1194.79 1209.7 L1195.37 1209.7 L1195.96 1209.7 L1196.55 1209.7 L1197.13 1209.7 L1197.72 1209.7 L1198.31 1209.7 L1198.89 1209.7 L1199.48 1209.7 L1200.07 1209.7 L1200.65 1209.7 L1201.24 1209.7 L1201.83 1209.7 L1202.41 1209.7 L1203 1209.7 L1203.58 1209.7 L1204.17 1209.7 L1204.76 1209.7 L1205.34 1209.7 L1205.93 1209.7 L1206.52 1209.7 L1207.1 1209.7 L1207.69 1209.7 L1208.28 1209.7 L1208.86 1209.7 L1209.45 1209.7 L1210.03 1209.7 L1210.62 1209.7 L1211.21 1209.7 L1211.79 1209.7 L1212.38 1209.7 L1212.97 1209.7 L1213.55 1209.7 L1214.14 1209.7 L1214.73 1209.7 L1215.31 1209.7 L1215.9 1209.7 L1216.49 1209.7 L1217.07 1209.7 L1217.66 1209.7 L1218.24 1209.7 L1218.83 1209.7 L1219.42 1209.7 L1220 1209.7 L1220.59 1209.7 L1221.18 1209.7 L1221.76 1209.7 L1222.35 1209.7 L1222.94 1209.7 L1223.52 1209.7 L1224.11 1209.7 L1224.7 1209.7 L1225.28 1209.7 L1225.87 1209.7 L1226.45 1209.7 L1227.04 1209.7 L1227.63 1209.7 L1228.21 1209.7 L1228.8 1209.7 L1229.39 1209.7 L1229.97 1209.7 L1230.56 1209.7 L1231.15 1209.7 L1231.73 1209.7 L1232.32 1209.7 L1232.91 1209.7 L1233.49 1209.7 L1234.08 1209.7 L1234.66 1209.7 L1235.25 1209.7 L1235.84 1209.7 L1236.42 1209.7 L1237.01 1209.7 L1237.6 1209.7 L1238.18 1209.7 L1238.77 1209.7 L1239.36 1209.7 L1239.94 1209.7 L1240.53 1209.7 L1241.11 1209.7 L1241.7 1209.7 L1242.29 1209.7 L1242.87 1209.7 L1243.46 1209.7 L1244.05 1209.7 L1244.63 1209.7 L1245.22 1209.7 L1245.81 1209.7 L1246.39 1209.7 L1246.98 1209.7 L1247.57 1209.7 L1248.15 1209.7 L1248.74 1209.7 L1249.32 1209.7 L1249.91 1209.7 L1250.5 1209.7 L1251.08 1209.7 L1251.67 1209.7 L1252.26 1209.7 L1252.84 1209.7 L1253.43 1209.7 L1254.02 1209.7 L1254.6 1209.7 L1255.19 1209.7 L1255.78 1209.7 L1256.36 1209.7 L1256.95 1209.7 L1257.53 1209.7 L1258.12 1209.7 L1258.71 1209.7 L1259.29 1209.7 L1259.88 1209.7 L1260.47 1209.7 L1261.05 1209.7 L1261.64 1209.7 L1262.23 1209.7 L1262.81 1209.7 L1263.4 1209.7 L1263.98 1209.7 L1264.57 1209.7 L1265.16 1209.7 L1265.74 1209.7 L1266.33 1209.7 L1266.92 1209.7 L1267.5 1209.7 L1268.09 1209.7 L1268.68 1209.7 L1269.26 1209.7 L1269.85 1209.7 L1270.44 1209.7 L1271.02 1209.7 L1271.61 1209.7 L1272.19 1209.7 L1272.78 1209.7 L1273.37 1209.7 L1273.95 1209.7 L1274.54 1209.7 L1275.13 1209.7 L1275.71 1209.7 L1276.3 1209.7 L1276.89 1209.7 L1277.47 1209.7 L1278.06 1209.7 L1278.65 1209.7 L1279.23 1209.7 L1279.82 1209.7 L1280.4 1209.7 L1280.99 1209.7 L1281.58 1209.7 L1282.16 1209.7 L1282.75 1209.7 L1283.34 1209.7 L1283.92 1209.7 L1284.51 1209.7 L1285.1 1209.7 L1285.68 1209.7 L1286.27 1209.7 L1286.86 1209.7 L1287.44 1209.7 L1288.03 1209.7 L1288.61 1209.7 L1289.2 1209.7 L1289.79 1209.7 L1290.37 1209.7 L1290.96 1209.7 L1291.55 1209.7 L1292.13 1209.7 L1292.72 1209.7 L1293.31 1209.7 L1293.89 1209.7 L1294.48 1209.7 L1295.06 1209.7 L1295.65 1209.7 L1296.24 1209.7 L1296.82 1209.7 L1297.41 1209.7 L1298 1209.7 L1298.58 1209.7 L1299.17 1209.7 L1299.76 1209.7 L1300.34 1209.7 L1300.93 1209.7 L1301.52 1209.7 L1302.1 1209.7 L1302.69 1209.7 L1303.27 1209.7 L1303.86 1209.7 L1304.45 1209.7 L1305.03 1209.7 L1305.62 1209.7 L1306.21 1209.7 L1306.79 1209.7 L1307.38 1209.7 L1307.97 1209.7 L1308.55 1209.7 L1309.14 1209.7 L1309.73 1209.7 L1310.31 1209.7 L1310.9 1209.7 L1311.48 1209.7 L1312.07 1209.7 L1312.66 1209.7 L1313.24 1209.7 L1313.83 1209.7 L1314.42 1209.7 L1315 1209.7 L1315.59 1209.7 L1316.18 1209.7 L1316.76 1209.7 L1317.35 1209.7 L1317.93 1209.7 L1318.52 1209.7 L1319.11 1209.7 L1319.69 1209.7 L1320.28 1209.7 L1320.87 1209.7 L1321.45 1209.7 L1322.04 1209.7 L1322.63 1209.7 L1323.21 1209.7 L1323.8 1209.7 L1324.39 1209.7 L1324.97 1209.7 L1325.56 1209.7 L1326.14 1209.7 L1326.73 1209.7 L1327.32 1209.7 L1327.9 1209.7 L1328.49 1209.7 L1329.08 1209.7 L1329.66 1209.7 L1330.25 1209.7 L1330.84 1209.7 L1331.42 1209.7 L1332.01 1209.7 L1332.6 1209.7 L1333.18 1209.7 L1333.77 1209.7 L1334.35 1209.7 L1334.94 1209.7 L1335.53 1209.7 L1336.11 1209.7 L1336.7 1209.7 L1337.29 1209.7 L1337.87 1209.7 L1338.46 1209.7 L1339.05 1209.7 L1339.63 1209.7 L1340.22 1209.7 L1340.8 1209.7 L1341.39 1209.7 L1341.98 1209.7 L1342.56 1209.7 L1343.15 1209.7 L1343.74 1209.7 L1344.32 1209.7 L1344.91 1209.7 L1345.5 1209.7 L1346.08 1209.7 L1346.67 1209.7 L1347.26 1209.7 L1347.84 1209.7 L1348.43 1209.7 L1349.01 1209.7 L1349.6 1209.7 L1350.19 1209.7 L1350.77 1209.7 L1351.36 1209.7 L1351.95 1209.7 L1352.53 1209.7 L1353.12 1209.7 L1353.71 1209.7 L1354.29 1209.7 L1354.88 1209.7 L1355.47 1209.7 L1356.05 1209.7 L1356.64 1209.7 L1357.22 1209.7 L1357.81 1209.7 L1358.4 1209.7 L1358.98 1209.7 L1359.57 1209.7 L1360.16 1209.7 L1360.74 1209.7 L1361.33 1209.7 L1361.92 1209.7 L1362.5 1209.7 L1363.09 1209.7 L1363.68 1209.7 L1364.26 1209.7 L1364.85 1209.7 L1365.43 1209.7 L1366.02 1209.7 L1366.61 1209.7 L1367.19 1209.7 L1367.78 1209.7 L1368.37 1209.7 L1368.95 1209.7 L1369.54 1209.7 L1370.13 1209.7 L1370.71 1209.7 L1371.3 1209.7 L1371.88 1209.7 L1372.47 1209.7 L1373.06 1209.7 L1373.64 1209.7 L1374.23 1209.7 L1374.82 1209.7 L1375.4 1209.7 L1375.99 1209.7 L1376.58 1209.7 L1377.16 1209.7 L1377.75 1209.7 L1378.34 1209.7 L1378.92 1209.7 L1379.51 1209.7 L1380.09 1209.7 L1380.68 1209.7 L1381.27 1209.7 L1381.85 1209.7 L1382.44 1209.7 L1383.03 1209.7 L1383.61 1209.7 L1384.2 1209.7 L1384.79 1209.7 L1385.37 1209.7 L1385.96 1209.7 L1386.55 1209.7 L1387.13 1209.7 L1387.72 1209.7 L1388.3 1209.7 L1388.89 1209.7 L1389.48 1209.7 L1390.06 1209.7 L1390.65 1209.7 L1391.24 1209.7 L1391.82 1209.7 L1392.41 1209.7 L1393 1209.7 L1393.58 1209.7 L1394.17 1209.7 L1394.75 1209.7 L1395.34 1209.7 L1395.93 1209.7 L1396.51 1209.7 L1397.1 1209.7 L1397.69 1209.7 L1398.27 1209.7 L1398.86 1209.7 L1399.45 1209.7 L1400.03 1209.7 L1400.62 1209.7 L1401.21 1209.7 L1401.79 1209.7 L1402.38 1209.7 L1402.96 1209.7 L1403.55 1209.7 L1404.14 1209.7 L1404.72 1209.7 L1405.31 1209.7 L1405.9 1209.7 L1406.48 1209.7 L1407.07 1209.7 L1407.66 1209.7 L1408.24 1209.7 L1408.83 1209.7 L1409.42 1209.7 L1410 1209.7 L1410.59 1209.7 L1411.17 1209.7 L1411.76 1209.7 L1412.35 1209.7 L1412.93 1209.7 L1413.52 1209.7 L1414.11 1209.7 L1414.69 1209.7 L1415.28 1209.7 L1415.87 1209.7 L1416.45 1209.7 L1417.04 1209.7 L1417.63 1209.7 L1418.21 1209.7 L1418.8 1209.7 L1419.38 1209.7 L1419.97 1209.7 L1420.56 1209.7 L1421.14 1209.7 L1421.73 1209.7 L1422.32 1209.7 L1422.9 1209.7 L1423.49 1209.7 L1424.08 1209.7 L1424.66 1209.7 L1425.25 1209.7 L1425.83 1209.7 L1426.42 1209.7 L1427.01 1209.7 L1427.59 1209.7 L1428.18 1209.7 L1428.77 1209.7 L1429.35 1209.7 L1429.94 1209.7 L1430.53 1209.7 L1431.11 1209.7 L1431.7 1209.7 L1432.29 1209.7 L1432.87 1209.7 L1433.46 1209.7 L1434.04 1209.7 L1434.63 1209.7 L1435.22 1209.7 L1435.8 1209.7 L1436.39 1209.7 L1436.98 1209.7 L1437.56 1209.7 L1438.15 1209.7 L1438.74 1209.7 L1439.32 1209.7 L1439.91 1209.7 L1440.5 1209.7 L1441.08 1209.7 L1441.67 1209.7 L1442.25 1209.7 L1442.84 1209.7 L1443.43 1209.7 L1444.01 1209.7 L1444.6 1209.7 L1445.19 1209.7 L1445.77 1209.7 L1446.36 1209.7 L1446.95 1209.7 L1447.53 1209.7 L1448.12 1209.7 L1448.7 1209.7 L1449.29 1209.7 L1449.88 1209.7 L1450.46 1209.7 L1451.05 1209.7 L1451.64 1209.7 L1452.22 1209.7 L1452.81 1209.7 L1453.4 1209.7 L1453.98 1209.7 L1454.57 1209.7 L1455.16 1209.7 L1455.74 1209.7 L1456.33 1209.7 L1456.91 1209.7 L1457.5 1209.7 L1458.09 1209.7 L1458.67 1209.7 L1459.26 1209.7 L1459.85 1209.7 L1460.43 1209.7 L1461.02 1209.7 L1461.61 1209.7 L1462.19 1209.7 L1462.78 1209.7 L1463.37 1209.7 L1463.95 1209.7 L1464.54 1209.7 L1465.12 1209.7 L1465.71 1209.7 L1466.3 1209.7 L1466.88 1209.7 L1467.47 1209.7 L1468.06 1209.7 L1468.64 1209.7 L1469.23 1209.7 L1469.82 1209.7 L1470.4 1209.7 L1470.99 1209.7 L1471.57 1209.7 L1472.16 1209.7 L1472.75 1209.7 L1473.33 1209.7 L1473.92 1209.7 L1474.51 1209.7 L1475.09 1209.7 L1475.68 1209.7 L1476.27 1209.7 L1476.85 1209.7 L1477.44 1209.7 L1478.03 1209.7 L1478.61 1209.7 L1479.2 1209.7 L1479.78 1209.7 L1480.37 1209.7 L1480.96 1209.7 L1481.54 1209.7 L1482.13 1209.7 L1482.72 1209.7 L1483.3 1209.7 L1483.89 1209.7 L1484.48 1209.7 L1485.06 1209.7 L1485.65 1209.7 L1486.24 1209.7 L1486.82 1209.7 L1487.41 1209.7 L1487.99 1209.7 L1488.58 1209.7 L1489.17 1209.7 L1489.75 1209.7 L1490.34 1209.7 L1490.93 1209.7 L1491.51 1209.7 L1492.1 1209.7 L1492.69 1209.7 L1493.27 1209.7 L1493.86 1209.7 L1494.45 1209.7 L1495.03 1209.7 L1495.62 1209.7 L1496.2 1209.7 L1496.79 1209.7 L1497.38 1209.7 L1497.96 1209.7 L1498.55 1209.7 L1499.14 1209.7 L1499.72 1209.7 L1500.31 1209.7 L1500.9 1209.7 L1501.48 1209.7 L1502.07 1209.7 L1502.65 1209.7 L1503.24 1209.7 L1503.83 1209.7 L1504.41 1209.7 L1505 1209.7 L1505.59 1209.7 L1506.17 1209.7 L1506.76 1209.7 L1507.35 1209.7 L1507.93 1209.7 L1508.52 1209.7 L1509.11 1209.7 L1509.69 1209.7 L1510.28 1209.7 L1510.86 1209.7 L1511.45 1209.7 L1512.04 1209.7 L1512.62 1209.7 L1513.21 1209.7 L1513.8 1209.7 L1514.38 1209.7 L1514.97 1209.7 L1515.56 1209.7 L1516.14 1209.7 L1516.73 1209.7 L1517.32 1209.7 L1517.9 1209.7 L1518.49 1209.7 L1519.07 1209.7 L1519.66 1209.7 L1520.25 1209.7 L1520.83 1209.7 L1521.42 1209.7 L1522.01 1209.7 L1522.59 1209.7 L1523.18 1209.7 L1523.77 1209.7 L1524.35 1209.7 L1524.94 1209.7 L1525.52 1209.7 L1526.11 1209.7 L1526.7 1209.7 L1527.28 1209.7 L1527.87 1209.7 L1528.46 1209.7 L1529.04 1209.7 L1529.63 1209.7 L1530.22 1209.7 L1530.8 1209.7 L1531.39 1209.7 L1531.98 1209.7 L1532.56 1209.7 L1533.15 1209.7 L1533.73 1209.7 L1534.32 1209.7 L1534.91 1209.7 L1535.49 1209.7 L1536.08 1209.7 L1536.67 1209.7 L1537.25 1209.7 L1537.84 1209.7 L1538.43 1209.7 L1539.01 1209.7 L1539.6 1209.7 L1540.19 1209.7 L1540.77 1209.7 L1541.36 1209.7 L1541.94 1209.7 L1542.53 1209.7 L1543.12 1209.7 L1543.7 1209.7 L1544.29 1209.7 L1544.88 1209.7 L1545.46 1209.7 L1546.05 1209.7 L1546.64 1209.7 L1547.22 1209.7 L1547.81 1209.7 L1548.4 1209.7 L1548.98 1209.7 L1549.57 1209.7 L1550.15 1209.7 L1550.74 1209.7 L1551.33 1209.7 L1551.91 1209.7 L1552.5 1209.7 L1553.09 1209.7 L1553.67 1209.7 L1554.26 1209.7 L1554.85 1209.7 L1555.43 1209.7 L1556.02 1209.7 L1556.6 1209.7 L1557.19 1209.7 L1557.78 1209.7 L1558.36 1209.7 L1558.95 1209.7 L1559.54 1209.7 L1560.12 1209.7 L1560.71 1209.7 L1561.3 1209.7 L1561.88 1209.7 L1562.47 1209.7 L1563.06 1209.7 L1563.64 1209.7 L1564.23 1209.7 L1564.81 1209.7 L1565.4 1209.7 L1565.99 1209.7 L1566.57 1209.7 L1567.16 1209.7 L1567.75 1209.7 L1568.33 1209.7 L1568.92 1209.7 L1569.51 1209.7 L1570.09 1209.7 L1570.68 1209.7 L1571.27 1209.7 L1571.85 1209.7 L1572.44 1209.7 L1573.02 1209.7 L1573.61 1209.7 L1574.2 1209.7 L1574.78 1209.7 L1575.37 1209.7 L1575.96 1209.7 L1576.54 1209.7 L1577.13 1209.7 L1577.72 1209.7 L1578.3 1209.7 L1578.89 1209.7 L1579.47 1209.7 L1580.06 1209.7 L1580.65 1209.7 L1581.23 1209.7 L1581.82 1209.7 L1582.41 1209.7 L1582.99 1209.7 L1583.58 1209.7 L1584.17 1209.7 L1584.75 1209.7 L1585.34 1209.7 L1585.93 1209.7 L1586.51 1209.7 L1587.1 1209.7 L1587.68 1209.7 L1588.27 1209.7 L1588.86 1209.7 L1589.44 1209.7 L1590.03 1209.7 L1590.62 1209.7 L1591.2 1209.7 L1591.79 1209.7 L1592.38 1209.7 L1592.96 1209.7 L1593.55 1209.7 L1594.14 1209.7 L1594.72 1209.7 L1595.31 1209.7 L1595.89 1209.7 L1596.48 1209.7 L1597.07 1209.7 L1597.65 1209.7 L1598.24 1209.7 L1598.83 1209.7 L1599.41 1209.7 L1600 1209.7 L1600.59 1209.7 L1601.17 1209.7 L1601.76 1209.7 L1602.34 1209.7 L1602.93 1209.7 L1603.52 1209.7 L1604.1 1209.7 L1604.69 1209.7 L1605.28 1209.7 L1605.86 1209.7 L1606.45 1209.7 L1607.04 1209.7 L1607.62 1209.7 L1608.21 1209.7 L1608.8 1209.7 L1609.38 1209.7 L1609.97 1209.7 L1610.55 1209.7 L1611.14 1209.7 L1611.73 1209.7 L1612.31 1209.7 L1612.9 1209.7 L1613.49 1209.7 L1614.07 1209.7 L1614.66 1209.7 L1615.25 1209.7 L1615.83 1209.7 L1616.42 1209.7 L1617.01 1209.7 L1617.59 1209.7 L1618.18 1209.7 L1618.76 1209.7 L1619.35 1209.7 L1619.94 1209.7 L1620.52 1209.7 L1621.11 1209.7 L1621.7 1209.7 L1622.28 1209.7 L1622.87 1209.7 L1623.46 1209.7 L1624.04 1209.7 L1624.63 1209.7 L1625.22 1209.7 L1625.8 1209.7 L1626.39 1209.7 L1626.97 1209.7 L1627.56 1209.7 L1628.15 1209.7 L1628.73 1209.7 L1629.32 1209.7 L1629.91 1209.7 L1630.49 1209.7 L1631.08 1209.7 L1631.67 1209.7 L1632.25 1209.7 L1632.84 1209.7 L1633.42 1209.7 L1634.01 1209.7 L1634.6 1209.7 L1635.18 1209.7 L1635.77 1209.7 L1636.36 1209.7 L1636.94 1209.7 L1637.53 1209.7 L1638.12 1209.7 L1638.7 1209.7 L1639.29 1209.7 L1639.88 1209.7 L1640.46 1209.7 L1641.05 1209.7 L1641.63 1209.7 L1642.22 1209.7 L1642.81 1209.7 L1643.39 1209.7 L1643.98 1209.7 L1644.57 1209.7 L1645.15 1209.7 L1645.74 1209.7 L1646.33 1209.7 L1646.91 1209.7 L1647.5 1209.7 L1648.09 1209.7 L1648.67 1209.7 L1649.26 1209.7 L1649.84 1209.7 L1650.43 1209.7 L1651.02 1209.7 L1651.6 1209.7 L1652.19 1209.7 L1652.78 1209.7 L1653.36 1209.7 L1653.95 1209.7 L1654.54 1209.7 L1655.12 1209.7 L1655.71 1209.7 L1656.29 1209.7 L1656.88 1209.7 L1657.47 1209.7 L1658.05 1209.7 L1658.64 1209.7 L1659.23 1209.7 L1659.81 1209.7 L1660.4 1209.7 L1660.99 1209.7 L1661.57 1209.7 L1662.16 1209.7 L1662.75 1209.7 L1663.33 1209.7 L1663.92 1209.7 L1664.5 1209.7 L1665.09 1209.7 L1665.68 1209.7 L1666.26 1209.7 L1666.85 1209.7 L1667.44 1209.7 L1668.02 1209.7 L1668.61 1209.7 L1669.2 1209.7 L1669.78 1209.7 L1670.37 1209.7 L1670.96 1209.7 L1671.54 1209.7 L1672.13 1209.7 L1672.71 1209.7 L1673.3 1209.7 L1673.89 1209.7 L1674.47 1209.7 L1675.06 1209.7 L1675.65 1209.7 L1676.23 1209.7 L1676.82 1209.7 L1677.41 1209.7 L1677.99 1209.7 L1678.58 1209.7 L1679.17 1209.7 L1679.75 1209.7 L1680.34 1209.7 L1680.92 1209.7 L1681.51 1209.7 L1682.1 1209.7 L1682.68 1209.7 L1683.27 1209.7 L1683.86 1209.7 L1684.44 1209.7 L1685.03 1209.7 L1685.62 1209.7 L1686.2 1209.7 L1686.79 1209.7 L1687.37 1209.7 L1687.96 1209.7 L1688.55 1209.7 L1689.13 1209.7 L1689.72 1209.7 L1690.31 1209.7 L1690.89 1209.7 L1691.48 1209.7 L1692.07 1209.7 L1692.65 1209.7 L1693.24 1209.7 L1693.83 1209.7 L1694.41 1209.7 L1695 1209.7 L1695.58 1209.7 L1696.17 1209.7 L1696.76 1209.7 L1697.34 1209.7 L1697.93 1209.7 L1698.52 1209.7 L1699.1 1209.7 L1699.69 1209.7 L1700.28 1209.7 L1700.86 1209.7 L1701.45 1209.7 L1702.04 1209.7 L1702.62 1209.7 L1703.21 1209.7 L1703.79 1209.7 L1704.38 1209.7 L1704.97 1209.7 L1705.55 1209.7 L1706.14 1209.7 L1706.73 1209.7 L1707.31 1209.7 L1707.9 1209.7 L1708.49 1209.7 L1709.07 1209.7 L1709.66 1209.7 L1710.24 1209.7 L1710.83 1209.7 L1711.42 1209.7 L1712 1209.7 L1712.59 1209.7 L1713.18 1209.7 L1713.76 1209.7 L1714.35 1209.7 L1714.94 1209.7 L1715.52 1209.7 L1716.11 1209.7 L1716.7 1209.7 L1717.28 1209.7 L1717.87 1209.7 L1718.45 1209.7 L1719.04 1209.7 L1719.63 1209.7 L1720.21 1209.7 L1720.8 1209.7 L1721.39 1209.7 L1721.97 1209.7 L1722.56 1209.7 L1723.15 1209.7 L1723.73 1209.7 L1724.32 1209.7 L1724.91 1209.7 L1725.49 1209.7 L1726.08 1209.7 L1726.66 1209.7 L1727.25 1209.7 L1727.84 1209.7 L1728.42 1209.7 L1729.01 1209.7 L1729.6 1209.7 L1730.18 1209.7 L1730.77 1209.7 L1731.36 1209.7 L1731.94 1209.7 L1732.53 1209.7 L1733.11 1209.7 L1733.7 1209.7 L1734.29 1209.7 L1734.87 1209.7 L1735.46 1209.7 L1736.05 1209.7 L1736.63 1209.7 L1737.22 1209.7 L1737.81 1209.7 L1738.39 1209.7 L1738.98 1209.7 L1739.57 1209.7 L1740.15 1209.7 L1740.74 1209.7 L1741.32 1209.7 L1741.91 1209.7 L1742.5 1209.7 L1743.08 1209.7 L1743.67 1209.7 L1744.26 1209.7 L1744.84 1209.7 L1745.43 1209.7 L1746.02 1209.7 L1746.6 1209.7 L1747.19 1209.7 L1747.78 1209.7 L1748.36 1209.7 L1748.95 1209.7 L1749.53 1209.7 L1750.12 1209.7 L1750.71 1209.7 L1751.29 1209.7 L1751.88 1209.7 L1752.47 1209.7 L1753.05 1209.7 L1753.64 1209.7 L1754.23 1209.7 L1754.81 1209.7 L1755.4 1209.7 L1755.99 1209.7 L1756.57 1209.7 L1757.16 1209.7 L1757.74 1209.7 L1758.33 1209.7 L1758.92 1209.7 L1759.5 1209.7 L1760.09 1209.7 L1760.68 1209.7 L1761.26 1209.7 L1761.85 1209.7 L1762.44 1209.7 L1763.02 1209.7 L1763.61 1209.7 L1764.19 1209.7 L1764.78 1209.7 L1765.37 1209.7 L1765.95 1209.7 L1766.54 1209.7 L1767.13 1209.7 L1767.71 1209.7 L1768.3 1209.7 L1768.89 1209.7 L1769.47 1209.7 L1770.06 1209.7 L1770.65 1209.7 L1771.23 1209.7 L1771.82 1209.7 L1772.4 1209.7 L1772.99 1209.7 L1773.58 1209.7 L1774.16 1209.7 L1774.75 1209.7 L1775.34 1209.7 L1775.92 1209.7 L1776.51 1209.7 L1777.1 1209.7 L1777.68 1209.7 L1778.27 1209.7 L1778.86 1209.7 L1779.44 1209.7 L1780.03 1209.7 L1780.61 1209.7 L1781.2 1209.7 L1781.79 1209.7 L1782.37 1209.7 L1782.96 1209.7 L1783.55 1209.7 L1784.13 1209.7 L1784.72 1209.7 L1785.31 1209.7 L1785.89 1209.7 L1786.48 1209.7 L1787.06 1209.7 L1787.65 1209.7 L1788.24 1209.7 L1788.82 1209.7 L1789.41 1209.7 L1790 1209.7 L1790.58 1209.7 L1791.17 1209.7 L1791.76 1209.7 L1792.34 1209.7 L1792.93 1209.7 L1793.52 1209.7 L1794.1 1209.7 L1794.69 1209.7 L1795.27 1209.7 L1795.86 1209.7 L1796.45 1209.7 L1797.03 1209.7 L1797.62 1209.7 L1798.21 1209.7 L1798.79 1209.7 L1799.38 1209.7 L1799.97 1209.7 L1800.55 1209.7 L1801.14 1209.7 L1801.73 1209.7 L1802.31 1209.7 L1802.9 1209.7 L1803.48 1209.7 L1804.07 1209.7 L1804.66 1209.7 L1805.24 1209.7 L1805.83 1209.7 L1806.42 1209.7 L1807 1209.7 L1807.59 1209.7 L1808.18 1209.7 L1808.76 1209.7 L1809.35 1209.7 L1809.94 1209.7 L1810.52 1209.7 L1811.11 1209.7 L1811.69 1209.7 L1812.28 1209.7 L1812.87 1209.7 L1813.45 1209.7 L1814.04 1209.7 L1814.63 1209.7 L1815.21 1209.7 L1815.8 1209.7 L1816.39 1209.7 L1816.97 1209.7 L1817.56 1209.7 L1818.14 1209.7 L1818.73 1209.7 L1819.32 1209.7 L1819.9 1209.7 L1820.49 1209.7 L1821.08 1209.7 L1821.66 1209.7 L1822.25 1209.7 L1822.84 1209.7 L1823.42 1209.7 L1824.01 1209.7 L1824.6 1209.7 L1825.18 1209.7 L1825.77 1209.7 L1826.35 1209.7 L1826.94 1209.7 L1827.53 1209.7 L1828.11 1209.7 L1828.7 1209.7 L1829.29 1209.7 L1829.87 1209.7 L1830.46 1209.7 L1831.05 1209.7 L1831.63 1209.7 L1832.22 1209.7 L1832.81 1209.7 L1833.39 1209.7 L1833.98 1209.7 L1834.56 1209.7 L1835.15 1209.7 L1835.74 1209.7 L1836.32 1209.7 L1836.91 1209.7 L1837.5 1209.7 L1838.08 1209.7 L1838.67 1209.7 L1839.26 1209.7 L1839.84 1209.7 L1840.43 1209.7 L1841.01 1209.7 L1841.6 1209.7 L1842.19 1209.7 L1842.77 1209.7 L1843.36 1209.7 L1843.95 1209.7 L1844.53 1209.7 L1845.12 1209.7 L1845.71 1209.7 L1846.29 1209.7 L1846.88 1209.7 L1847.47 1209.7 L1848.05 1209.7 L1848.64 1209.7 L1849.22 1209.7 L1849.81 1209.7 L1850.4 1209.7 L1850.98 1209.7 L1851.57 1209.7 L1852.16 1209.7 L1852.74 1209.7 L1853.33 1209.7 L1853.92 1209.7 L1854.5 1209.7 L1855.09 1209.7 L1855.68 1209.7 L1856.26 1209.7 L1856.85 1209.7 L1857.43 1209.7 L1858.02 1209.7 L1858.61 1209.7 L1859.19 1209.7 L1859.78 1209.7 L1860.37 1209.7 L1860.95 1209.7 L1861.54 1209.7 L1862.13 1209.7 L1862.71 1209.7 L1863.3 1209.7 L1863.88 1209.7 L1864.47 1209.7 L1865.06 1209.7 L1865.64 1209.7 L1866.23 1209.7 L1866.82 1209.7 L1867.4 1209.7 L1867.99 1209.7 L1868.58 1209.7 L1869.16 1209.7 L1869.75 1209.7 L1870.34 1209.7 L1870.92 1209.7 L1871.51 1209.7 L1872.09 1209.7 L1872.68 1209.7 L1873.27 1209.7 L1873.85 1209.7 L1874.44 1209.7 L1875.03 1209.7 L1875.61 1209.7 L1876.2 1209.7 L1876.79 1209.7 L1877.37 1209.7 L1877.96 1209.7 L1878.55 1209.7 L1879.13 1209.7 L1879.72 1209.7 L1880.3 1209.7 L1880.89 1209.7 L1881.48 1209.7 L1882.06 1209.7 L1882.65 1209.7 L1883.24 1209.7 L1883.82 1209.7 L1884.41 1209.7 L1885 1209.7 L1885.58 1209.7 L1886.17 1209.7 L1886.76 1209.7 L1887.34 1209.7 L1887.93 1209.7 L1888.51 1209.7 L1889.1 1209.7 L1889.69 1209.7 L1890.27 1209.7 L1890.86 1209.7 L1891.45 1209.7 L1892.03 1209.7 L1892.62 1209.7 L1893.21 1209.7 L1893.79 1209.7 L1894.38 1209.7 L1894.96 1209.7 L1895.55 1209.7 L1896.14 1209.7 L1896.72 1209.7 L1897.31 1209.7 L1897.9 1209.7 L1898.48 1209.7 L1899.07 1209.7 L1899.66 1209.7 L1900.24 1209.7 L1900.83 1209.7 L1901.42 1209.7 L1902 1209.7 L1902.59 1209.7 L1903.17 1209.7 L1903.76 1209.7 L1904.35 1209.7 L1904.93 1209.7 L1905.52 1209.7 L1906.11 1209.7 L1906.69 1209.7 L1907.28 1209.7 L1907.87 1209.7 L1908.45 1209.7 L1909.04 1209.7 L1909.63 1209.7 L1910.21 1209.7 L1910.8 1209.7 L1911.38 1209.7 L1911.97 1209.7 L1912.56 1209.7 L1913.14 1209.7 L1913.73 1209.7 L1914.32 1209.7 L1914.9 1209.7 L1915.49 1209.7 L1916.08 1209.7 L1916.66 1209.7 L1917.25 1209.7 L1917.83 1209.7 L1918.42 1209.7 L1919.01 1209.7 L1919.59 1209.7 L1920.18 1209.7 L1920.77 1209.7 L1921.35 1209.7 L1921.94 1209.7 L1922.53 1209.7 L1923.11 1209.7 L1923.7 1209.7 L1924.29 1209.7 L1924.87 1209.7 L1925.46 1209.7 L1926.04 1209.7 L1926.63 1209.7 L1927.22 1209.7 L1927.8 1209.7 L1928.39 1209.7 L1928.98 1209.7 L1929.56 1209.7 L1930.15 1209.7 L1930.74 1209.7 L1931.32 1209.7 L1931.91 1209.7 L1932.5 1209.7 L1933.08 1209.7 L1933.67 1209.7 L1934.25 1209.7 L1934.84 1209.7 L1935.43 1209.7 L1936.01 1209.7 L1936.6 1209.7 L1937.19 1209.7 L1937.77 1209.7 L1938.36 1209.7 L1938.95 1209.7 L1939.53 1209.7 L1940.12 1209.7 L1940.71 1209.7 L1941.29 1209.7 L1941.88 1209.7 L1942.46 1209.7 L1943.05 1209.7 L1943.64 1209.7 L1944.22 1209.7 L1944.81 1209.7 L1945.4 1209.7 L1945.98 1209.7 L1946.57 1209.7 L1947.16 1209.7 L1947.74 1209.7 L1948.33 1209.7 L1948.91 1209.7 L1949.5 1209.7 L1950.09 1209.7 L1950.67 1209.7 L1951.26 1209.7 L1951.85 1209.7 L1952.43 1209.7 L1953.02 1209.7 L1953.61 1209.7 L1954.19 1209.7 L1954.78 1209.7 L1955.37 1209.7 L1955.95 1209.7 L1956.54 1209.7 L1957.12 1209.7 L1957.71 1209.7 L1958.3 1209.7 L1958.88 1209.7 L1959.47 1209.7 L1960.06 1209.7 L1960.64 1209.7 L1961.23 1209.7 L1961.82 1209.7 L1962.4 1209.7 L1962.99 1209.7 L1963.58 1209.7 L1964.16 1209.7 L1964.75 1209.7 L1965.33 1209.7 L1965.92 1209.7 L1966.51 1209.7 L1967.09 1209.7 L1967.68 1209.7 L1968.27 1209.7 L1968.85 1209.7 L1969.44 1209.7 L1970.03 1209.7 L1970.61 1209.7 L1971.2 1209.7 L1971.78 1209.7 L1972.37 1209.7 L1972.96 1209.7 L1973.54 1209.7 L1974.13 1209.7 L1974.72 1209.7 L1975.3 1209.7 L1975.89 1209.7 L1976.48 1209.7 L1977.06 1209.7 L1977.65 1209.7 L1978.24 1209.7 L1978.82 1209.7 L1979.41 1209.7 L1979.99 1209.7 L1980.58 1209.7 L1981.17 1209.7 L1981.75 1209.7 L1982.34 1209.7 L1982.93 1209.7 L1983.51 1209.7 L1984.1 1209.7 L1984.69 1209.7 L1985.27 1209.7 L1985.86 1209.7 L1986.45 1209.7 L1987.03 1209.7 L1987.62 1209.7 L1988.2 1209.7 L1988.79 1209.7 L1989.38 1209.7 L1989.96 1209.7 L1990.55 1209.7 L1991.14 1209.7 L1991.72 1209.7 L1992.31 1209.7 L1992.9 1209.7 L1993.48 1209.7 L1994.07 1209.7 L1994.65 1209.7 L1995.24 1209.7 L1995.83 1209.7 L1996.41 1209.7 L1997 1209.7 L1997.59 1209.7 L1998.17 1209.7 L1998.76 1209.7 L1999.35 1209.7 L1999.93 1209.7 L2000.52 1209.7 L2001.11 1209.7 L2001.69 1209.7 L2002.28 1209.7 L2002.86 1209.7 L2003.45 1209.7 L2004.04 1209.7 L2004.62 1209.7 L2005.21 1209.7 L2005.8 1209.7 L2006.38 1209.7 L2006.97 1209.7 L2007.56 1209.7 L2008.14 1209.7 L2008.73 1209.7 L2009.32 1209.7 L2009.9 1209.7 L2010.49 1209.7 L2011.07 1209.7 L2011.66 1209.7 L2012.25 1209.7 L2012.83 1209.7 L2013.42 1209.7 L2014.01 1209.7 L2014.59 1209.7 L2015.18 1209.7 L2015.77 1209.7 L2016.35 1209.7 L2016.94 1209.7 L2017.53 1209.7 L2018.11 1209.7 L2018.7 1209.7 L2019.28 1209.7 L2019.87 1209.7 L2020.46 1209.7 L2021.04 1209.7 L2021.63 1209.7 L2022.22 1209.7 L2022.8 1209.7 L2023.39 1209.7 L2023.98 1209.7 L2024.56 1209.7 L2025.15 1209.7 L2025.73 1209.7 L2026.32 1209.7 L2026.91 1209.7 L2027.49 1209.7 L2028.08 1209.7 L2028.67 1209.7 L2029.25 1209.7 L2029.84 1209.7 L2030.43 1209.7 L2031.01 1209.7 L2031.6 1209.7 L2032.19 1209.7 L2032.77 1209.7 L2033.36 1209.7 L2033.94 1209.7 L2034.53 1209.7 L2035.12 1209.7 L2035.7 1209.7 L2036.29 1209.7 L2036.88 1209.7 L2037.46 1209.7 L2038.05 1209.7 L2038.64 1209.7 L2039.22 1209.7 L2039.81 1209.7 L2040.4 1209.7 L2040.98 1209.7 L2041.57 1209.7 L2042.15 1209.7 L2042.74 1209.7 L2043.33 1209.7 L2043.91 1209.7 L2044.5 1209.7 L2045.09 1209.7 L2045.67 1209.7 L2046.26 1209.7 L2046.85 1209.7 L2047.43 1209.7 L2048.02 1209.7 L2048.6 1209.7 L2049.19 1209.7 L2049.78 1209.7 L2050.36 1209.7 L2050.95 1209.7 L2051.54 1209.7 L2052.12 1209.7 L2052.71 1209.7 L2053.3 1209.7 L2053.88 1209.7 L2054.47 1209.7 L2055.06 1209.7 L2055.64 1209.7 L2056.23 1209.7 L2056.81 1209.7 L2057.4 1209.7 L2057.99 1209.7 L2058.57 1209.7 L2059.16 1209.7 L2059.75 1209.7 L2060.33 1209.7 L2060.92 1209.7 L2061.51 1209.7 L2062.09 1209.7 L2062.68 1209.7 L2063.27 1209.7 L2063.85 1209.7 L2064.44 1209.7 L2065.02 1209.7 L2065.61 1209.7 L2066.2 1209.7 L2066.78 1209.7 L2067.37 1209.7 L2067.96 1209.7 L2068.54 1209.7 L2069.13 1209.7 L2069.72 1209.7 L2070.3 1209.7 L2070.89 1209.7 L2071.48 1209.7 L2072.06 1209.7 L2072.65 1209.7 L2073.23 1209.7 L2073.82 1209.7 L2074.41 1209.7 L2074.99 1209.7 L2075.58 1209.7 L2076.17 1209.7 L2076.75 1209.7 L2077.34 1209.7 L2077.93 1209.7 L2078.51 1209.7 L2079.1 1209.7 L2079.68 1209.7 L2080.27 1209.7 L2080.86 1209.7 L2081.44 1209.7 L2082.03 1209.7 L2082.62 1209.7 L2083.2 1209.7 L2083.79 1209.7 L2084.38 1209.7 L2084.96 1209.7 L2085.55 1209.7 L2086.14 1209.7 L2086.72 1209.7 L2087.31 1209.7 L2087.89 1209.7 L2088.48 1209.7 L2089.07 1209.7 L2089.65 1209.7 L2090.24 1209.7 L2090.83 1209.7 L2091.41 1209.7 L2092 1209.7 L2092.59 1209.7 L2093.17 1209.7 L2093.76 1209.7 L2094.35 1209.7 L2094.93 1209.7 L2095.52 1209.7 L2096.1 1209.7 L2096.69 1209.7 L2097.28 1209.7 L2097.86 1209.7 L2098.45 1209.7 L2099.04 1209.7 L2099.62 1209.7 L2100.21 1209.7 L2100.8 1209.7 L2101.38 1209.7 L2101.97 1209.7 L2102.55 1209.7 L2103.14 1209.7 L2103.73 1209.7 L2104.31 1209.7 L2104.9 1209.7 L2105.49 1209.7 L2106.07 1209.7 L2106.66 1209.7 L2107.25 1209.7 L2107.83 1209.7 L2108.42 1209.7 L2109.01 1209.7 L2109.59 1209.7 L2110.18 1209.7 L2110.76 1209.7 L2111.35 1209.7 L2111.94 1209.7 L2112.52 1209.7 L2113.11 1209.7 L2113.7 1209.7 L2114.28 1209.7 L2114.87 1209.7 L2115.46 1209.7 L2116.04 1209.7 L2116.63 1209.7 L2117.22 1209.7 L2117.8 1209.7 L2118.39 1209.7 L2118.97 1209.7 L2119.56 1209.7 L2120.15 1209.7 L2120.73 1209.7 L2121.32 1209.7 L2121.91 1209.7 L2122.49 1209.7 L2123.08 1209.7 L2123.67 1209.7 L2124.25 1209.7 L2124.84 1209.7 L2125.42 1209.7 L2126.01 1209.7 L2126.6 1209.7 L2127.18 1209.7 L2127.77 1209.7 L2128.36 1209.7 L2128.94 1209.7 L2129.53 1209.7 L2130.12 1209.7 L2130.7 1209.7 L2131.29 1209.7 L2131.88 1209.7 L2132.46 1209.7 L2133.05 1209.7 L2133.63 1209.7 L2134.22 1209.7 L2134.81 1209.7 L2135.39 1209.7 L2135.98 1209.7 L2136.57 1209.7 L2137.15 1209.7 L2137.74 1209.7 L2138.33 1209.7 L2138.91 1209.7 L2139.5 1209.7 L2140.09 1209.7 L2140.67 1209.7 L2141.26 1209.7 L2141.84 1209.7 L2142.43 1209.7 L2143.02 1209.7 L2143.6 1209.7 L2144.19 1209.7 L2144.78 1209.7 L2145.36 1209.7 L2145.95 1209.7 L2146.54 1209.7 L2147.12 1209.7 L2147.71 1209.7 L2148.3 1209.7 L2148.88 1209.7 L2149.47 1209.7 L2150.05 1209.7 L2150.64 1209.7 L2151.23 1209.7 L2151.81 1209.7 L2152.4 1209.7 L2152.99 1209.7 L2153.57 1209.7 L2154.16 1209.7 L2154.75 1209.7 L2155.33 1209.7 L2155.92 1209.7 L2156.5 1209.7 L2157.09 1209.7 L2157.68 1209.7 L2158.26 1209.7 L2158.26 1209.04 L2157.68 1209.04 L2157.09 1209.04 L2156.5 1209.04 L2155.92 1209.04 L2155.33 1209.04 L2154.75 1209.04 L2154.16 1209.04 L2153.57 1209.04 L2152.99 1209.04 L2152.4 1209.04 L2151.81 1209.04 L2151.23 1209.04 L2150.64 1209.04 L2150.05 1209.04 L2149.47 1209.04 L2148.88 1209.04 L2148.3 1209.04 L2147.71 1209.04 L2147.12 1209.04 L2146.54 1209.04 L2145.95 1209.04 L2145.36 1209.04 L2144.78 1209.04 L2144.19 1209.04 L2143.6 1209.04 L2143.02 1209.04 L2142.43 1209.04 L2141.84 1209.04 L2141.26 1209.04 L2140.67 1209.04 L2140.09 1209.04 L2139.5 1209.04 L2138.91 1209.04 L2138.33 1209.04 L2137.74 1209.04 L2137.15 1209.04 L2136.57 1209.04 L2135.98 1209.04 L2135.39 1209.04 L2134.81 1209.04 L2134.22 1209.04 L2133.63 1209.04 L2133.05 1209.04 L2132.46 1209.04 L2131.88 1209.04 L2131.29 1209.04 L2130.7 1209.04 L2130.12 1209.04 L2129.53 1209.04 L2128.94 1209.04 L2128.36 1209.04 L2127.77 1209.04 L2127.18 1209.04 L2126.6 1209.04 L2126.01 1209.04 L2125.42 1209.04 L2124.84 1209.04 L2124.25 1209.04 L2123.67 1209.04 L2123.08 1209.04 L2122.49 1209.04 L2121.91 1209.04 L2121.32 1209.04 L2120.73 1209.04 L2120.15 1209.04 L2119.56 1209.04 L2118.97 1209.04 L2118.39 1209.04 L2117.8 1209.04 L2117.22 1209.04 L2116.63 1209.04 L2116.04 1209.04 L2115.46 1209.04 L2114.87 1209.04 L2114.28 1209.04 L2113.7 1209.04 L2113.11 1209.04 L2112.52 1209.04 L2111.94 1209.04 L2111.35 1209.04 L2110.76 1209.04 L2110.18 1209.04 L2109.59 1209.04 L2109.01 1209.04 L2108.42 1209.04 L2107.83 1209.04 L2107.25 1209.04 L2106.66 1209.04 L2106.07 1209.04 L2105.49 1209.04 L2104.9 1209.04 L2104.31 1209.04 L2103.73 1209.04 L2103.14 1209.04 L2102.55 1209.04 L2101.97 1209.04 L2101.38 1209.04 L2100.8 1209.04 L2100.21 1209.04 L2099.62 1209.04 L2099.04 1209.04 L2098.45 1209.04 L2097.86 1209.04 L2097.28 1209.04 L2096.69 1209.04 L2096.1 1209.04 L2095.52 1209.04 L2094.93 1209.04 L2094.35 1209.04 L2093.76 1209.04 L2093.17 1209.04 L2092.59 1209.04 L2092 1209.04 L2091.41 1209.04 L2090.83 1209.04 L2090.24 1209.04 L2089.65 1209.04 L2089.07 1209.04 L2088.48 1209.04 L2087.89 1209.04 L2087.31 1209.04 L2086.72 1209.04 L2086.14 1209.04 L2085.55 1209.04 L2084.96 1209.04 L2084.38 1209.04 L2083.79 1209.04 L2083.2 1209.04 L2082.62 1209.04 L2082.03 1209.04 L2081.44 1209.04 L2080.86 1209.04 L2080.27 1209.04 L2079.68 1209.04 L2079.1 1209.04 L2078.51 1209.04 L2077.93 1209.04 L2077.34 1209.04 L2076.75 1209.04 L2076.17 1209.04 L2075.58 1209.04 L2074.99 1209.04 L2074.41 1209.04 L2073.82 1209.04 L2073.23 1209.04 L2072.65 1209.04 L2072.06 1209.04 L2071.48 1209.04 L2070.89 1209.04 L2070.3 1209.04 L2069.72 1209.04 L2069.13 1209.04 L2068.54 1209.04 L2067.96 1209.04 L2067.37 1209.04 L2066.78 1209.04 L2066.2 1209.04 L2065.61 1209.04 L2065.02 1209.04 L2064.44 1209.04 L2063.85 1209.04 L2063.27 1209.04 L2062.68 1209.04 L2062.09 1209.04 L2061.51 1209.04 L2060.92 1209.04 L2060.33 1209.04 L2059.75 1209.04 L2059.16 1209.04 L2058.57 1209.04 L2057.99 1209.04 L2057.4 1209.04 L2056.81 1209.04 L2056.23 1209.04 L2055.64 1209.04 L2055.06 1209.04 L2054.47 1209.04 L2053.88 1209.04 L2053.3 1209.04 L2052.71 1209.04 L2052.12 1209.04 L2051.54 1209.04 L2050.95 1209.04 L2050.36 1209.04 L2049.78 1209.04 L2049.19 1209.04 L2048.6 1209.04 L2048.02 1209.04 L2047.43 1209.04 L2046.85 1209.04 L2046.26 1209.04 L2045.67 1209.04 L2045.09 1209.04 L2044.5 1209.04 L2043.91 1209.04 L2043.33 1209.04 L2042.74 1209.04 L2042.15 1209.04 L2041.57 1209.04 L2040.98 1209.04 L2040.4 1209.04 L2039.81 1209.04 L2039.22 1209.04 L2038.64 1209.04 L2038.05 1209.04 L2037.46 1209.04 L2036.88 1209.04 L2036.29 1209.04 L2035.7 1209.04 L2035.12 1209.04 L2034.53 1209.04 L2033.94 1209.04 L2033.36 1209.04 L2032.77 1209.04 L2032.19 1209.04 L2031.6 1209.04 L2031.01 1209.04 L2030.43 1209.04 L2029.84 1209.04 L2029.25 1209.04 L2028.67 1209.04 L2028.08 1209.04 L2027.49 1209.04 L2026.91 1209.04 L2026.32 1209.04 L2025.73 1209.04 L2025.15 1209.04 L2024.56 1209.04 L2023.98 1209.04 L2023.39 1209.04 L2022.8 1209.04 L2022.22 1209.04 L2021.63 1209.04 L2021.04 1209.04 L2020.46 1209.04 L2019.87 1209.04 L2019.28 1209.04 L2018.7 1209.04 L2018.11 1209.04 L2017.53 1209.04 L2016.94 1209.04 L2016.35 1209.04 L2015.77 1209.04 L2015.18 1209.04 L2014.59 1209.04 L2014.01 1209.04 L2013.42 1209.04 L2012.83 1209.04 L2012.25 1209.04 L2011.66 1209.04 L2011.07 1209.04 L2010.49 1209.04 L2009.9 1209.04 L2009.32 1209.04 L2008.73 1209.04 L2008.14 1209.04 L2007.56 1209.04 L2006.97 1209.04 L2006.38 1209.04 L2005.8 1209.04 L2005.21 1209.04 L2004.62 1209.04 L2004.04 1209.04 L2003.45 1209.04 L2002.86 1209.04 L2002.28 1209.04 L2001.69 1209.04 L2001.11 1209.04 L2000.52 1209.04 L1999.93 1209.04 L1999.35 1209.04 L1998.76 1209.04 L1998.17 1209.04 L1997.59 1209.04 L1997 1209.04 L1996.41 1209.04 L1995.83 1209.04 L1995.24 1209.04 L1994.65 1209.04 L1994.07 1209.04 L1993.48 1209.04 L1992.9 1209.04 L1992.31 1209.04 L1991.72 1209.04 L1991.14 1209.04 L1990.55 1209.04 L1989.96 1209.04 L1989.38 1209.04 L1988.79 1209.04 L1988.2 1209.04 L1987.62 1209.04 L1987.03 1209.04 L1986.45 1209.04 L1985.86 1209.04 L1985.27 1209.04 L1984.69 1209.04 L1984.1 1209.04 L1983.51 1209.04 L1982.93 1209.04 L1982.34 1209.04 L1981.75 1209.04 L1981.17 1209.04 L1980.58 1209.04 L1979.99 1209.04 L1979.41 1209.04 L1978.82 1209.04 L1978.24 1209.04 L1977.65 1209.04 L1977.06 1209.04 L1976.48 1209.04 L1975.89 1209.04 L1975.3 1209.04 L1974.72 1209.04 L1974.13 1209.04 L1973.54 1209.04 L1972.96 1209.04 L1972.37 1209.04 L1971.78 1209.04 L1971.2 1209.04 L1970.61 1209.04 L1970.03 1209.04 L1969.44 1209.04 L1968.85 1209.04 L1968.27 1209.04 L1967.68 1209.04 L1967.09 1209.04 L1966.51 1209.04 L1965.92 1209.04 L1965.33 1209.04 L1964.75 1209.04 L1964.16 1209.04 L1963.58 1209.04 L1962.99 1209.04 L1962.4 1209.04 L1961.82 1209.04 L1961.23 1209.04 L1960.64 1209.04 L1960.06 1209.04 L1959.47 1209.04 L1958.88 1209.04 L1958.3 1209.04 L1957.71 1209.04 L1957.12 1209.04 L1956.54 1209.04 L1955.95 1209.04 L1955.37 1209.04 L1954.78 1209.04 L1954.19 1209.04 L1953.61 1209.04 L1953.02 1209.04 L1952.43 1209.04 L1951.85 1209.04 L1951.26 1209.04 L1950.67 1209.04 L1950.09 1209.04 L1949.5 1209.04 L1948.91 1209.04 L1948.33 1209.04 L1947.74 1209.04 L1947.16 1209.04 L1946.57 1209.04 L1945.98 1209.04 L1945.4 1209.04 L1944.81 1209.04 L1944.22 1209.04 L1943.64 1209.04 L1943.05 1209.04 L1942.46 1209.04 L1941.88 1209.04 L1941.29 1209.04 L1940.71 1209.04 L1940.12 1209.04 L1939.53 1209.04 L1938.95 1209.04 L1938.36 1209.04 L1937.77 1209.04 L1937.19 1209.04 L1936.6 1209.04 L1936.01 1209.04 L1935.43 1209.04 L1934.84 1209.04 L1934.25 1209.04 L1933.67 1209.04 L1933.08 1209.04 L1932.5 1209.04 L1931.91 1209.04 L1931.32 1209.04 L1930.74 1209.04 L1930.15 1209.04 L1929.56 1209.04 L1928.98 1209.04 L1928.39 1209.04 L1927.8 1209.04 L1927.22 1209.04 L1926.63 1209.04 L1926.04 1209.04 L1925.46 1209.04 L1924.87 1209.04 L1924.29 1209.04 L1923.7 1209.04 L1923.11 1209.04 L1922.53 1209.04 L1921.94 1209.04 L1921.35 1209.04 L1920.77 1209.04 L1920.18 1209.04 L1919.59 1209.04 L1919.01 1209.04 L1918.42 1209.04 L1917.83 1209.04 L1917.25 1209.04 L1916.66 1209.04 L1916.08 1209.04 L1915.49 1209.04 L1914.9 1209.04 L1914.32 1209.04 L1913.73 1209.04 L1913.14 1209.04 L1912.56 1209.04 L1911.97 1209.04 L1911.38 1209.04 L1910.8 1209.04 L1910.21 1209.04 L1909.63 1209.04 L1909.04 1209.04 L1908.45 1209.04 L1907.87 1209.04 L1907.28 1209.04 L1906.69 1209.04 L1906.11 1209.04 L1905.52 1209.04 L1904.93 1209.04 L1904.35 1209.04 L1903.76 1209.04 L1903.17 1209.04 L1902.59 1209.04 L1902 1209.04 L1901.42 1209.04 L1900.83 1209.04 L1900.24 1209.04 L1899.66 1209.04 L1899.07 1209.04 L1898.48 1209.04 L1897.9 1209.04 L1897.31 1209.04 L1896.72 1209.04 L1896.14 1209.04 L1895.55 1209.04 L1894.96 1209.04 L1894.38 1209.04 L1893.79 1209.04 L1893.21 1209.04 L1892.62 1209.04 L1892.03 1209.04 L1891.45 1209.04 L1890.86 1209.04 L1890.27 1209.04 L1889.69 1209.04 L1889.1 1209.04 L1888.51 1209.04 L1887.93 1209.04 L1887.34 1209.04 L1886.76 1209.04 L1886.17 1209.04 L1885.58 1209.04 L1885 1209.04 L1884.41 1209.04 L1883.82 1209.04 L1883.24 1209.04 L1882.65 1209.04 L1882.06 1209.04 L1881.48 1209.04 L1880.89 1209.04 L1880.3 1209.04 L1879.72 1209.04 L1879.13 1209.04 L1878.55 1209.04 L1877.96 1209.04 L1877.37 1209.04 L1876.79 1209.04 L1876.2 1209.04 L1875.61 1209.04 L1875.03 1209.04 L1874.44 1209.04 L1873.85 1209.04 L1873.27 1209.04 L1872.68 1209.04 L1872.09 1209.04 L1871.51 1209.04 L1870.92 1209.04 L1870.34 1209.04 L1869.75 1209.04 L1869.16 1209.04 L1868.58 1209.04 L1867.99 1209.04 L1867.4 1209.04 L1866.82 1209.04 L1866.23 1209.04 L1865.64 1209.04 L1865.06 1209.04 L1864.47 1209.04 L1863.88 1209.04 L1863.3 1209.04 L1862.71 1209.04 L1862.13 1209.04 L1861.54 1209.04 L1860.95 1209.04 L1860.37 1209.04 L1859.78 1209.04 L1859.19 1209.04 L1858.61 1209.04 L1858.02 1209.04 L1857.43 1209.04 L1856.85 1209.04 L1856.26 1209.04 L1855.68 1209.04 L1855.09 1209.04 L1854.5 1209.04 L1853.92 1209.04 L1853.33 1209.04 L1852.74 1209.04 L1852.16 1209.04 L1851.57 1209.04 L1850.98 1209.04 L1850.4 1209.04 L1849.81 1209.04 L1849.22 1209.04 L1848.64 1209.04 L1848.05 1209.04 L1847.47 1209.04 L1846.88 1209.04 L1846.29 1209.04 L1845.71 1209.04 L1845.12 1209.04 L1844.53 1209.04 L1843.95 1209.04 L1843.36 1209.04 L1842.77 1209.04 L1842.19 1209.04 L1841.6 1209.04 L1841.01 1209.04 L1840.43 1209.04 L1839.84 1209.04 L1839.26 1209.04 L1838.67 1209.04 L1838.08 1209.04 L1837.5 1209.04 L1836.91 1209.04 L1836.32 1209.04 L1835.74 1209.04 L1835.15 1209.04 L1834.56 1209.04 L1833.98 1209.04 L1833.39 1209.04 L1832.81 1209.04 L1832.22 1209.04 L1831.63 1209.04 L1831.05 1209.04 L1830.46 1209.04 L1829.87 1209.04 L1829.29 1209.04 L1828.7 1209.04 L1828.11 1209.04 L1827.53 1209.04 L1826.94 1209.04 L1826.35 1209.04 L1825.77 1209.04 L1825.18 1209.04 L1824.6 1209.04 L1824.01 1209.04 L1823.42 1209.04 L1822.84 1209.04 L1822.25 1209.04 L1821.66 1209.04 L1821.08 1209.04 L1820.49 1209.04 L1819.9 1209.04 L1819.32 1209.04 L1818.73 1209.04 L1818.14 1209.04 L1817.56 1209.04 L1816.97 1209.04 L1816.39 1209.04 L1815.8 1209.04 L1815.21 1209.04 L1814.63 1209.04 L1814.04 1209.04 L1813.45 1209.04 L1812.87 1209.04 L1812.28 1209.04 L1811.69 1209.04 L1811.11 1209.04 L1810.52 1209.04 L1809.94 1209.04 L1809.35 1209.04 L1808.76 1209.04 L1808.18 1209.04 L1807.59 1209.04 L1807 1209.04 L1806.42 1209.04 L1805.83 1209.04 L1805.24 1209.04 L1804.66 1209.04 L1804.07 1209.04 L1803.48 1209.04 L1802.9 1209.04 L1802.31 1209.04 L1801.73 1209.04 L1801.14 1209.04 L1800.55 1209.04 L1799.97 1209.04 L1799.38 1209.04 L1798.79 1209.04 L1798.21 1209.04 L1797.62 1209.04 L1797.03 1209.04 L1796.45 1209.04 L1795.86 1209.04 L1795.27 1209.04 L1794.69 1209.04 L1794.1 1209.04 L1793.52 1209.04 L1792.93 1209.04 L1792.34 1209.04 L1791.76 1209.04 L1791.17 1209.04 L1790.58 1209.04 L1790 1209.04 L1789.41 1209.04 L1788.82 1209.04 L1788.24 1209.04 L1787.65 1209.04 L1787.06 1209.04 L1786.48 1209.04 L1785.89 1209.04 L1785.31 1209.04 L1784.72 1209.04 L1784.13 1209.04 L1783.55 1209.04 L1782.96 1209.04 L1782.37 1209.04 L1781.79 1209.04 L1781.2 1209.04 L1780.61 1209.04 L1780.03 1209.04 L1779.44 1209.04 L1778.86 1209.04 L1778.27 1209.04 L1777.68 1209.04 L1777.1 1209.04 L1776.51 1209.04 L1775.92 1209.04 L1775.34 1209.04 L1774.75 1209.04 L1774.16 1209.04 L1773.58 1209.04 L1772.99 1209.04 L1772.4 1209.04 L1771.82 1209.04 L1771.23 1209.04 L1770.65 1209.04 L1770.06 1209.04 L1769.47 1209.04 L1768.89 1209.04 L1768.3 1209.04 L1767.71 1209.04 L1767.13 1209.04 L1766.54 1209.04 L1765.95 1209.04 L1765.37 1209.04 L1764.78 1209.04 L1764.19 1209.04 L1763.61 1209.04 L1763.02 1209.04 L1762.44 1209.04 L1761.85 1209.04 L1761.26 1209.04 L1760.68 1209.04 L1760.09 1209.04 L1759.5 1209.04 L1758.92 1209.04 L1758.33 1209.04 L1757.74 1209.04 L1757.16 1209.04 L1756.57 1209.04 L1755.99 1209.04 L1755.4 1209.04 L1754.81 1209.04 L1754.23 1209.04 L1753.64 1209.04 L1753.05 1209.04 L1752.47 1209.04 L1751.88 1209.04 L1751.29 1209.04 L1750.71 1209.04 L1750.12 1209.04 L1749.53 1209.04 L1748.95 1209.04 L1748.36 1209.04 L1747.78 1209.04 L1747.19 1209.04 L1746.6 1209.04 L1746.02 1209.04 L1745.43 1209.04 L1744.84 1209.04 L1744.26 1209.04 L1743.67 1209.04 L1743.08 1209.04 L1742.5 1209.04 L1741.91 1209.04 L1741.32 1209.04 L1740.74 1209.04 L1740.15 1209.04 L1739.57 1209.04 L1738.98 1209.04 L1738.39 1209.04 L1737.81 1209.04 L1737.22 1209.04 L1736.63 1209.04 L1736.05 1209.04 L1735.46 1209.04 L1734.87 1209.04 L1734.29 1209.04 L1733.7 1209.04 L1733.11 1209.04 L1732.53 1209.04 L1731.94 1209.04 L1731.36 1209.04 L1730.77 1209.04 L1730.18 1209.04 L1729.6 1209.04 L1729.01 1209.04 L1728.42 1209.04 L1727.84 1209.04 L1727.25 1209.04 L1726.66 1209.04 L1726.08 1209.04 L1725.49 1209.04 L1724.91 1209.04 L1724.32 1209.04 L1723.73 1209.04 L1723.15 1209.04 L1722.56 1209.04 L1721.97 1209.04 L1721.39 1209.04 L1720.8 1209.04 L1720.21 1209.04 L1719.63 1209.04 L1719.04 1209.04 L1718.45 1209.04 L1717.87 1209.04 L1717.28 1209.04 L1716.7 1209.04 L1716.11 1209.04 L1715.52 1209.04 L1714.94 1209.04 L1714.35 1209.04 L1713.76 1209.04 L1713.18 1209.04 L1712.59 1209.04 L1712 1209.04 L1711.42 1209.04 L1710.83 1209.04 L1710.24 1209.04 L1709.66 1209.04 L1709.07 1209.04 L1708.49 1209.04 L1707.9 1209.04 L1707.31 1209.04 L1706.73 1209.04 L1706.14 1209.04 L1705.55 1209.04 L1704.97 1209.04 L1704.38 1209.04 L1703.79 1209.04 L1703.21 1209.04 L1702.62 1209.04 L1702.04 1209.04 L1701.45 1209.04 L1700.86 1209.04 L1700.28 1209.04 L1699.69 1209.04 L1699.1 1209.04 L1698.52 1209.04 L1697.93 1209.04 L1697.34 1209.04 L1696.76 1209.04 L1696.17 1209.04 L1695.58 1209.04 L1695 1209.04 L1694.41 1209.04 L1693.83 1209.04 L1693.24 1209.04 L1692.65 1209.04 L1692.07 1209.04 L1691.48 1209.04 L1690.89 1209.04 L1690.31 1209.04 L1689.72 1209.04 L1689.13 1209.04 L1688.55 1209.04 L1687.96 1209.04 L1687.37 1209.04 L1686.79 1209.04 L1686.2 1209.04 L1685.62 1209.04 L1685.03 1209.04 L1684.44 1209.04 L1683.86 1209.04 L1683.27 1209.04 L1682.68 1209.04 L1682.1 1209.04 L1681.51 1209.04 L1680.92 1209.04 L1680.34 1209.04 L1679.75 1209.04 L1679.17 1209.04 L1678.58 1209.04 L1677.99 1209.04 L1677.41 1209.04 L1676.82 1209.04 L1676.23 1209.04 L1675.65 1209.04 L1675.06 1209.04 L1674.47 1209.04 L1673.89 1209.04 L1673.3 1209.04 L1672.71 1209.04 L1672.13 1209.04 L1671.54 1209.04 L1670.96 1209.04 L1670.37 1209.04 L1669.78 1209.04 L1669.2 1209.04 L1668.61 1209.04 L1668.02 1209.04 L1667.44 1209.04 L1666.85 1209.04 L1666.26 1209.04 L1665.68 1209.04 L1665.09 1209.04 L1664.5 1209.04 L1663.92 1209.04 L1663.33 1209.04 L1662.75 1209.04 L1662.16 1209.04 L1661.57 1209.04 L1660.99 1209.04 L1660.4 1209.04 L1659.81 1209.04 L1659.23 1209.04 L1658.64 1209.04 L1658.05 1209.04 L1657.47 1209.04 L1656.88 1209.04 L1656.29 1209.04 L1655.71 1209.04 L1655.12 1209.04 L1654.54 1209.04 L1653.95 1209.04 L1653.36 1209.04 L1652.78 1209.04 L1652.19 1209.04 L1651.6 1209.04 L1651.02 1209.04 L1650.43 1209.04 L1649.84 1209.04 L1649.26 1209.04 L1648.67 1209.04 L1648.09 1209.04 L1647.5 1209.04 L1646.91 1209.04 L1646.33 1209.04 L1645.74 1209.04 L1645.15 1209.04 L1644.57 1209.04 L1643.98 1209.04 L1643.39 1209.04 L1642.81 1209.04 L1642.22 1209.04 L1641.63 1209.04 L1641.05 1209.04 L1640.46 1209.04 L1639.88 1209.04 L1639.29 1209.04 L1638.7 1209.04 L1638.12 1209.04 L1637.53 1209.04 L1636.94 1209.04 L1636.36 1209.04 L1635.77 1209.04 L1635.18 1209.04 L1634.6 1209.04 L1634.01 1209.04 L1633.42 1209.04 L1632.84 1209.04 L1632.25 1209.04 L1631.67 1209.04 L1631.08 1209.04 L1630.49 1209.04 L1629.91 1209.04 L1629.32 1209.04 L1628.73 1209.04 L1628.15 1209.04 L1627.56 1209.04 L1626.97 1209.04 L1626.39 1209.04 L1625.8 1209.04 L1625.22 1209.04 L1624.63 1209.04 L1624.04 1209.04 L1623.46 1209.04 L1622.87 1209.04 L1622.28 1209.04 L1621.7 1209.04 L1621.11 1209.04 L1620.52 1209.04 L1619.94 1209.04 L1619.35 1209.04 L1618.76 1209.04 L1618.18 1209.04 L1617.59 1209.04 L1617.01 1209.04 L1616.42 1209.04 L1615.83 1209.04 L1615.25 1209.04 L1614.66 1209.04 L1614.07 1209.04 L1613.49 1209.04 L1612.9 1209.04 L1612.31 1209.04 L1611.73 1209.04 L1611.14 1209.04 L1610.55 1209.04 L1609.97 1209.04 L1609.38 1209.04 L1608.8 1209.04 L1608.21 1209.04 L1607.62 1209.04 L1607.04 1209.04 L1606.45 1209.04 L1605.86 1209.04 L1605.28 1209.04 L1604.69 1209.04 L1604.1 1209.04 L1603.52 1209.04 L1602.93 1209.04 L1602.34 1209.04 L1601.76 1209.04 L1601.17 1209.04 L1600.59 1209.04 L1600 1209.04 L1599.41 1209.04 L1598.83 1209.04 L1598.24 1209.04 L1597.65 1209.04 L1597.07 1209.04 L1596.48 1209.04 L1595.89 1209.04 L1595.31 1209.04 L1594.72 1209.04 L1594.14 1209.04 L1593.55 1209.04 L1592.96 1209.04 L1592.38 1209.04 L1591.79 1209.04 L1591.2 1209.04 L1590.62 1209.04 L1590.03 1209.04 L1589.44 1209.04 L1588.86 1209.04 L1588.27 1209.04 L1587.68 1209.04 L1587.1 1209.04 L1586.51 1209.04 L1585.93 1209.04 L1585.34 1209.04 L1584.75 1209.04 L1584.17 1209.04 L1583.58 1209.04 L1582.99 1209.04 L1582.41 1209.04 L1581.82 1209.04 L1581.23 1209.04 L1580.65 1209.04 L1580.06 1209.04 L1579.47 1209.04 L1578.89 1209.04 L1578.3 1209.04 L1577.72 1209.04 L1577.13 1209.04 L1576.54 1209.04 L1575.96 1209.04 L1575.37 1209.04 L1574.78 1209.04 L1574.2 1209.04 L1573.61 1209.04 L1573.02 1209.04 L1572.44 1209.04 L1571.85 1209.04 L1571.27 1209.04 L1570.68 1209.04 L1570.09 1209.04 L1569.51 1209.04 L1568.92 1209.04 L1568.33 1209.04 L1567.75 1209.04 L1567.16 1209.04 L1566.57 1209.04 L1565.99 1209.04 L1565.4 1209.04 L1564.81 1209.04 L1564.23 1209.04 L1563.64 1209.04 L1563.06 1209.04 L1562.47 1209.04 L1561.88 1209.04 L1561.3 1209.04 L1560.71 1209.04 L1560.12 1209.04 L1559.54 1209.04 L1558.95 1209.04 L1558.36 1209.04 L1557.78 1209.04 L1557.19 1209.04 L1556.6 1209.04 L1556.02 1209.04 L1555.43 1209.04 L1554.85 1209.04 L1554.26 1209.04 L1553.67 1209.04 L1553.09 1209.04 L1552.5 1209.04 L1551.91 1209.04 L1551.33 1209.04 L1550.74 1209.04 L1550.15 1209.04 L1549.57 1209.04 L1548.98 1209.04 L1548.4 1209.04 L1547.81 1209.04 L1547.22 1209.04 L1546.64 1209.04 L1546.05 1209.04 L1545.46 1209.04 L1544.88 1209.04 L1544.29 1209.04 L1543.7 1209.04 L1543.12 1209.04 L1542.53 1209.04 L1541.94 1209.04 L1541.36 1209.04 L1540.77 1209.04 L1540.19 1209.04 L1539.6 1209.04 L1539.01 1209.04 L1538.43 1209.04 L1537.84 1209.04 L1537.25 1209.04 L1536.67 1209.04 L1536.08 1209.04 L1535.49 1209.04 L1534.91 1209.04 L1534.32 1209.04 L1533.73 1209.04 L1533.15 1209.04 L1532.56 1209.04 L1531.98 1209.04 L1531.39 1209.04 L1530.8 1209.04 L1530.22 1209.04 L1529.63 1209.04 L1529.04 1209.04 L1528.46 1209.04 L1527.87 1209.04 L1527.28 1209.04 L1526.7 1209.04 L1526.11 1209.04 L1525.52 1209.04 L1524.94 1209.04 L1524.35 1209.04 L1523.77 1209.04 L1523.18 1209.04 L1522.59 1209.04 L1522.01 1209.04 L1521.42 1209.04 L1520.83 1209.04 L1520.25 1209.04 L1519.66 1209.04 L1519.07 1209.04 L1518.49 1209.04 L1517.9 1209.04 L1517.32 1209.04 L1516.73 1209.04 L1516.14 1209.04 L1515.56 1209.04 L1514.97 1209.04 L1514.38 1209.04 L1513.8 1209.04 L1513.21 1209.04 L1512.62 1209.04 L1512.04 1209.04 L1511.45 1209.04 L1510.86 1209.04 L1510.28 1209.04 L1509.69 1209.04 L1509.11 1209.04 L1508.52 1209.04 L1507.93 1209.04 L1507.35 1209.04 L1506.76 1209.04 L1506.17 1209.04 L1505.59 1209.04 L1505 1209.04 L1504.41 1209.04 L1503.83 1209.04 L1503.24 1209.04 L1502.65 1209.04 L1502.07 1209.04 L1501.48 1209.04 L1500.9 1209.04 L1500.31 1209.04 L1499.72 1209.04 L1499.14 1209.04 L1498.55 1209.04 L1497.96 1209.04 L1497.38 1209.04 L1496.79 1209.04 L1496.2 1209.04 L1495.62 1209.04 L1495.03 1209.04 L1494.45 1209.04 L1493.86 1209.04 L1493.27 1209.04 L1492.69 1209.04 L1492.1 1209.04 L1491.51 1209.04 L1490.93 1209.04 L1490.34 1209.04 L1489.75 1209.04 L1489.17 1209.04 L1488.58 1209.04 L1487.99 1209.04 L1487.41 1209.04 L1486.82 1209.04 L1486.24 1209.04 L1485.65 1209.04 L1485.06 1209.04 L1484.48 1209.04 L1483.89 1209.04 L1483.3 1209.04 L1482.72 1209.04 L1482.13 1209.04 L1481.54 1209.04 L1480.96 1209.04 L1480.37 1209.04 L1479.78 1209.04 L1479.2 1209.04 L1478.61 1209.04 L1478.03 1209.04 L1477.44 1209.04 L1476.85 1209.04 L1476.27 1209.04 L1475.68 1209.04 L1475.09 1209.04 L1474.51 1209.04 L1473.92 1209.04 L1473.33 1209.04 L1472.75 1209.04 L1472.16 1209.04 L1471.57 1209.04 L1470.99 1209.04 L1470.4 1209.04 L1469.82 1209.04 L1469.23 1209.04 L1468.64 1209.04 L1468.06 1209.04 L1467.47 1209.04 L1466.88 1209.04 L1466.3 1209.04 L1465.71 1209.04 L1465.12 1209.04 L1464.54 1209.04 L1463.95 1209.04 L1463.37 1209.04 L1462.78 1209.04 L1462.19 1209.04 L1461.61 1209.04 L1461.02 1209.04 L1460.43 1209.04 L1459.85 1209.04 L1459.26 1209.04 L1458.67 1209.04 L1458.09 1209.04 L1457.5 1209.04 L1456.91 1209.04 L1456.33 1209.04 L1455.74 1209.04 L1455.16 1209.04 L1454.57 1209.04 L1453.98 1209.04 L1453.4 1209.04 L1452.81 1209.04 L1452.22 1209.04 L1451.64 1209.04 L1451.05 1209.04 L1450.46 1209.04 L1449.88 1209.04 L1449.29 1209.04 L1448.7 1209.04 L1448.12 1209.04 L1447.53 1209.04 L1446.95 1209.04 L1446.36 1209.04 L1445.77 1209.04 L1445.19 1209.04 L1444.6 1209.04 L1444.01 1209.04 L1443.43 1209.04 L1442.84 1209.04 L1442.25 1209.04 L1441.67 1209.04 L1441.08 1209.04 L1440.5 1209.04 L1439.91 1209.04 L1439.32 1209.04 L1438.74 1209.04 L1438.15 1209.04 L1437.56 1209.04 L1436.98 1209.04 L1436.39 1209.04 L1435.8 1209.04 L1435.22 1209.04 L1434.63 1209.04 L1434.04 1209.04 L1433.46 1209.04 L1432.87 1209.04 L1432.29 1209.04 L1431.7 1209.04 L1431.11 1209.04 L1430.53 1209.04 L1429.94 1209.04 L1429.35 1209.04 L1428.77 1209.04 L1428.18 1209.04 L1427.59 1209.04 L1427.01 1209.04 L1426.42 1209.04 L1425.83 1209.04 L1425.25 1209.04 L1424.66 1209.04 L1424.08 1209.04 L1423.49 1209.04 L1422.9 1209.04 L1422.32 1209.04 L1421.73 1209.04 L1421.14 1209.04 L1420.56 1209.04 L1419.97 1209.04 L1419.38 1209.04 L1418.8 1209.04 L1418.21 1209.04 L1417.63 1209.04 L1417.04 1209.04 L1416.45 1209.04 L1415.87 1209.04 L1415.28 1209.04 L1414.69 1209.04 L1414.11 1209.04 L1413.52 1209.04 L1412.93 1209.04 L1412.35 1209.04 L1411.76 1209.04 L1411.17 1209.04 L1410.59 1209.04 L1410 1209.04 L1409.42 1209.04 L1408.83 1209.04 L1408.24 1209.04 L1407.66 1209.04 L1407.07 1209.04 L1406.48 1209.04 L1405.9 1209.04 L1405.31 1209.04 L1404.72 1209.04 L1404.14 1209.04 L1403.55 1209.04 L1402.96 1209.04 L1402.38 1209.04 L1401.79 1209.04 L1401.21 1209.04 L1400.62 1209.04 L1400.03 1209.04 L1399.45 1209.04 L1398.86 1209.04 L1398.27 1209.04 L1397.69 1209.04 L1397.1 1209.04 L1396.51 1209.04 L1395.93 1209.04 L1395.34 1209.04 L1394.75 1209.04 L1394.17 1209.04 L1393.58 1209.04 L1393 1209.04 L1392.41 1209.04 L1391.82 1209.04 L1391.24 1209.04 L1390.65 1209.04 L1390.06 1209.04 L1389.48 1209.04 L1388.89 1209.04 L1388.3 1209.04 L1387.72 1209.04 L1387.13 1209.04 L1386.55 1209.04 L1385.96 1209.04 L1385.37 1209.04 L1384.79 1209.04 L1384.2 1209.04 L1383.61 1209.04 L1383.03 1209.04 L1382.44 1209.04 L1381.85 1209.04 L1381.27 1209.04 L1380.68 1209.04 L1380.09 1209.04 L1379.51 1209.04 L1378.92 1209.04 L1378.34 1209.04 L1377.75 1209.04 L1377.16 1209.04 L1376.58 1209.04 L1375.99 1209.04 L1375.4 1209.04 L1374.82 1209.04 L1374.23 1209.04 L1373.64 1209.04 L1373.06 1209.04 L1372.47 1209.04 L1371.88 1209.04 L1371.3 1209.04 L1370.71 1209.04 L1370.13 1209.04 L1369.54 1209.04 L1368.95 1209.04 L1368.37 1209.04 L1367.78 1209.04 L1367.19 1209.04 L1366.61 1209.04 L1366.02 1209.04 L1365.43 1209.04 L1364.85 1209.04 L1364.26 1209.04 L1363.68 1209.04 L1363.09 1209.04 L1362.5 1209.04 L1361.92 1209.04 L1361.33 1209.04 L1360.74 1209.04 L1360.16 1209.04 L1359.57 1209.04 L1358.98 1209.04 L1358.4 1209.04 L1357.81 1209.04 L1357.22 1209.04 L1356.64 1209.04 L1356.05 1209.04 L1355.47 1209.04 L1354.88 1209.04 L1354.29 1209.04 L1353.71 1209.04 L1353.12 1209.04 L1352.53 1209.04 L1351.95 1209.04 L1351.36 1209.04 L1350.77 1209.04 L1350.19 1209.04 L1349.6 1209.04 L1349.01 1209.04 L1348.43 1209.04 L1347.84 1209.04 L1347.26 1209.04 L1346.67 1209.04 L1346.08 1209.04 L1345.5 1209.04 L1344.91 1209.04 L1344.32 1209.04 L1343.74 1209.04 L1343.15 1209.04 L1342.56 1209.04 L1341.98 1209.04 L1341.39 1209.04 L1340.8 1209.04 L1340.22 1209.04 L1339.63 1209.04 L1339.05 1209.04 L1338.46 1209.04 L1337.87 1209.04 L1337.29 1209.04 L1336.7 1209.04 L1336.11 1209.04 L1335.53 1209.04 L1334.94 1209.04 L1334.35 1209.04 L1333.77 1209.04 L1333.18 1209.04 L1332.6 1209.04 L1332.01 1209.04 L1331.42 1209.04 L1330.84 1209.04 L1330.25 1209.04 L1329.66 1209.04 L1329.08 1209.04 L1328.49 1209.04 L1327.9 1209.04 L1327.32 1209.04 L1326.73 1209.04 L1326.14 1209.04 L1325.56 1209.04 L1324.97 1209.04 L1324.39 1209.04 L1323.8 1209.04 L1323.21 1209.04 L1322.63 1209.04 L1322.04 1209.04 L1321.45 1209.04 L1320.87 1209.04 L1320.28 1209.04 L1319.69 1209.04 L1319.11 1209.04 L1318.52 1209.04 L1317.93 1209.04 L1317.35 1209.04 L1316.76 1209.04 L1316.18 1209.04 L1315.59 1209.04 L1315 1209.04 L1314.42 1209.04 L1313.83 1209.04 L1313.24 1209.04 L1312.66 1209.04 L1312.07 1209.04 L1311.48 1209.04 L1310.9 1209.04 L1310.31 1209.04 L1309.73 1209.04 L1309.14 1209.04 L1308.55 1209.04 L1307.97 1209.04 L1307.38 1209.04 L1306.79 1209.04 L1306.21 1209.04 L1305.62 1209.04 L1305.03 1209.04 L1304.45 1209.04 L1303.86 1209.04 L1303.27 1209.04 L1302.69 1209.04 L1302.1 1209.04 L1301.52 1209.04 L1300.93 1209.04 L1300.34 1209.04 L1299.76 1209.04 L1299.17 1209.04 L1298.58 1209.04 L1298 1209.04 L1297.41 1209.04 L1296.82 1209.04 L1296.24 1209.04 L1295.65 1209.04 L1295.06 1209.04 L1294.48 1209.04 L1293.89 1209.04 L1293.31 1209.04 L1292.72 1209.04 L1292.13 1209.04 L1291.55 1209.04 L1290.96 1209.04 L1290.37 1209.04 L1289.79 1209.04 L1289.2 1209.04 L1288.61 1209.04 L1288.03 1209.04 L1287.44 1209.04 L1286.86 1209.04 L1286.27 1209.04 L1285.68 1209.04 L1285.1 1209.04 L1284.51 1209.04 L1283.92 1209.04 L1283.34 1209.04 L1282.75 1209.04 L1282.16 1209.04 L1281.58 1209.04 L1280.99 1209.04 L1280.4 1209.04 L1279.82 1209.04 L1279.23 1209.04 L1278.65 1209.04 L1278.06 1209.04 L1277.47 1209.04 L1276.89 1209.04 L1276.3 1209.04 L1275.71 1209.04 L1275.13 1209.04 L1274.54 1209.04 L1273.95 1209.04 L1273.37 1209.04 L1272.78 1209.04 L1272.19 1209.04 L1271.61 1209.04 L1271.02 1209.04 L1270.44 1209.04 L1269.85 1209.04 L1269.26 1209.04 L1268.68 1209.04 L1268.09 1209.04 L1267.5 1209.04 L1266.92 1209.04 L1266.33 1209.04 L1265.74 1209.04 L1265.16 1209.04 L1264.57 1209.04 L1263.98 1209.04 L1263.4 1209.04 L1262.81 1209.04 L1262.23 1209.04 L1261.64 1209.04 L1261.05 1209.04 L1260.47 1209.04 L1259.88 1209.04 L1259.29 1209.04 L1258.71 1209.04 L1258.12 1209.04 L1257.53 1209.04 L1256.95 1209.04 L1256.36 1209.04 L1255.78 1209.04 L1255.19 1209.04 L1254.6 1209.04 L1254.02 1209.04 L1253.43 1209.04 L1252.84 1209.04 L1252.26 1209.04 L1251.67 1209.04 L1251.08 1209.04 L1250.5 1209.04 L1249.91 1209.04 L1249.32 1209.04 L1248.74 1209.04 L1248.15 1209.04 L1247.57 1209.04 L1246.98 1209.04 L1246.39 1209.04 L1245.81 1209.04 L1245.22 1209.04 L1244.63 1209.04 L1244.05 1209.04 L1243.46 1209.04 L1242.87 1209.04 L1242.29 1209.04 L1241.7 1209.04 L1241.11 1209.04 L1240.53 1209.04 L1239.94 1209.04 L1239.36 1209.04 L1238.77 1209.04 L1238.18 1209.04 L1237.6 1209.04 L1237.01 1209.04 L1236.42 1209.04 L1235.84 1209.04 L1235.25 1209.04 L1234.66 1209.04 L1234.08 1209.04 L1233.49 1209.04 L1232.91 1209.04 L1232.32 1209.04 L1231.73 1209.04 L1231.15 1209.04 L1230.56 1209.04 L1229.97 1209.04 L1229.39 1209.04 L1228.8 1209.04 L1228.21 1209.04 L1227.63 1209.04 L1227.04 1209.04 L1226.45 1209.04 L1225.87 1209.04 L1225.28 1209.04 L1224.7 1209.04 L1224.11 1209.04 L1223.52 1209.04 L1222.94 1209.04 L1222.35 1209.04 L1221.76 1209.04 L1221.18 1209.04 L1220.59 1209.04 L1220 1209.04 L1219.42 1209.04 L1218.83 1209.04 L1218.24 1209.04 L1217.66 1209.04 L1217.07 1209.04 L1216.49 1209.04 L1215.9 1209.04 L1215.31 1209.04 L1214.73 1209.04 L1214.14 1209.04 L1213.55 1209.04 L1212.97 1209.04 L1212.38 1209.04 L1211.79 1209.04 L1211.21 1209.04 L1210.62 1209.04 L1210.03 1209.04 L1209.45 1209.04 L1208.86 1209.04 L1208.28 1209.04 L1207.69 1209.04 L1207.1 1209.04 L1206.52 1209.04 L1205.93 1209.04 L1205.34 1209.04 L1204.76 1209.04 L1204.17 1209.04 L1203.58 1209.04 L1203 1209.04 L1202.41 1209.04 L1201.83 1209.04 L1201.24 1209.04 L1200.65 1209.04 L1200.07 1209.04 L1199.48 1209.04 L1198.89 1209.04 L1198.31 1209.04 L1197.72 1209.04 L1197.13 1209.04 L1196.55 1209.04 L1195.96 1209.04 L1195.37 1209.04 L1194.79 1209.04 L1194.2 1209.04 L1193.62 1209.04 L1193.03 1209.04 L1192.44 1209.04 L1191.86 1209.04 L1191.27 1209.04 L1190.68 1209.04 L1190.1 1209.04 L1189.51 1209.04 L1188.92 1209.04 L1188.34 1209.04 L1187.75 1209.04 L1187.16 1209.04 L1186.58 1209.04 L1185.99 1209.04 L1185.41 1209.04 L1184.82 1209.04 L1184.23 1209.04 L1183.65 1209.04 L1183.06 1209.04 L1182.47 1209.04 L1181.89 1209.04 L1181.3 1209.04 L1180.71 1209.04 L1180.13 1209.04 L1179.54 1209.04 L1178.96 1209.04 L1178.37 1209.04 L1177.78 1209.04 L1177.2 1209.04 L1176.61 1209.04 L1176.02 1209.04 L1175.44 1209.04 L1174.85 1209.04 L1174.26 1209.04 L1173.68 1209.04 L1173.09 1209.04 L1172.5 1209.04 L1171.92 1209.04 L1171.33 1209.04 L1170.75 1209.04 L1170.16 1209.04 L1169.57 1209.04 L1168.99 1209.04 L1168.4 1209.04 L1167.81 1209.04 L1167.23 1209.04 L1166.64 1209.04 L1166.05 1209.04 L1165.47 1209.04 L1164.88 1209.04 L1164.29 1209.04 L1163.71 1209.04 L1163.12 1209.04 L1162.54 1209.04 L1161.95 1209.04 L1161.36 1209.04 L1160.78 1209.04 L1160.19 1209.04 L1159.6 1209.04 L1159.02 1209.04 L1158.43 1209.04 L1157.84 1209.04 L1157.26 1209.04 L1156.67 1209.04 L1156.09 1209.04 L1155.5 1209.04 L1154.91 1209.04 L1154.33 1209.04 L1153.74 1209.04 L1153.15 1209.04 L1152.57 1209.04 L1151.98 1209.04 L1151.39 1209.04 L1150.81 1209.04 L1150.22 1209.04 L1149.63 1209.04 L1149.05 1209.04 L1148.46 1209.04 L1147.88 1209.04 L1147.29 1209.04 L1146.7 1209.04 L1146.12 1209.04 L1145.53 1209.04 L1144.94 1209.04 L1144.36 1209.04 L1143.77 1209.04 L1143.18 1209.04 L1142.6 1209.04 L1142.01 1209.04 L1141.42 1209.04 L1140.84 1209.04 L1140.25 1209.04 L1139.67 1209.04 L1139.08 1209.04 L1138.49 1209.04 L1137.91 1209.04 L1137.32 1209.04 L1136.73 1209.04 L1136.15 1209.04 L1135.56 1209.04 L1134.97 1209.04 L1134.39 1209.04 L1133.8 1209.04 L1133.21 1209.04 L1132.63 1209.04 L1132.04 1209.04 L1131.46 1209.04 L1130.87 1209.04 L1130.28 1209.04 L1129.7 1209.04 L1129.11 1209.04 L1128.52 1209.04 L1127.94 1209.04 L1127.35 1209.04 L1126.76 1209.04 L1126.18 1209.04 L1125.59 1209.04 L1125.01 1209.04 L1124.42 1209.04 L1123.83 1209.04 L1123.25 1209.04 L1122.66 1209.04 L1122.07 1209.04 L1121.49 1209.04 L1120.9 1209.04 L1120.31 1209.04 L1119.73 1209.04 L1119.14 1209.04 L1118.55 1209.04 L1117.97 1209.04 L1117.38 1209.04 L1116.8 1209.04 L1116.21 1209.04 L1115.62 1209.04 L1115.04 1209.04 L1114.45 1209.04 L1113.86 1209.04 L1113.28 1209.04 L1112.69 1209.04 L1112.1 1209.04 L1111.52 1209.04 L1110.93 1209.04 L1110.34 1209.04 L1109.76 1209.04 L1109.17 1209.04 L1108.59 1209.04 L1108 1209.04 L1107.41 1209.04 L1106.83 1209.04 L1106.24 1209.04 L1105.65 1209.04 L1105.07 1209.04 L1104.48 1209.04 L1103.89 1209.04 L1103.31 1209.04 L1102.72 1209.04 L1102.14 1209.04 L1101.55 1209.04 L1100.96 1209.04 L1100.38 1209.04 L1099.79 1209.04 L1099.2 1209.04 L1098.62 1209.04 L1098.03 1209.04 L1097.44 1209.04 L1096.86 1209.04 L1096.27 1209.04 L1095.68 1209.04 L1095.1 1209.04 L1094.51 1209.04 L1093.93 1209.04 L1093.34 1209.04 L1092.75 1209.04 L1092.17 1209.04 L1091.58 1209.04 L1090.99 1209.04 L1090.41 1209.04 L1089.82 1209.04 L1089.23 1209.04 L1088.65 1209.04 L1088.06 1209.04 L1087.47 1209.04 L1086.89 1209.04 L1086.3 1209.04 L1085.72 1209.04 L1085.13 1209.04 L1084.54 1209.04 L1083.96 1209.04 L1083.37 1209.04 L1082.78 1209.04 L1082.2 1209.04 L1081.61 1209.04 L1081.02 1209.04 L1080.44 1209.04 L1079.85 1209.04 L1079.26 1209.04 L1078.68 1209.04 L1078.09 1209.04 L1077.51 1209.04 L1076.92 1209.04 L1076.33 1209.04 L1075.75 1209.04 L1075.16 1209.04 L1074.57 1209.04 L1073.99 1209.04 L1073.4 1209.04 L1072.81 1209.04 L1072.23 1209.04 L1071.64 1209.04 L1071.06 1209.04 L1070.47 1209.04 L1069.88 1209.04 L1069.3 1209.04 L1068.71 1209.04 L1068.12 1209.04 L1067.54 1209.04 L1066.95 1209.04 L1066.36 1209.04 L1065.78 1209.04 L1065.19 1209.04 L1064.6 1209.04 L1064.02 1209.04 L1063.43 1209.04 L1062.85 1209.04 L1062.26 1209.04 L1061.67 1209.04 L1061.09 1209.04 L1060.5 1209.04 L1059.91 1209.04 L1059.33 1209.04 L1058.74 1209.04 L1058.15 1209.04 L1057.57 1209.04 L1056.98 1209.04 L1056.39 1209.04 L1055.81 1209.04 L1055.22 1209.04 L1054.64 1209.04 L1054.05 1209.04 L1053.46 1209.04 L1052.88 1209.04 L1052.29 1209.04 L1051.7 1209.04 L1051.12 1209.04 L1050.53 1209.04 L1049.94 1209.04 L1049.36 1209.04 L1048.77 1209.04 L1048.19 1209.04 L1047.6 1209.04 L1047.01 1209.04 L1046.43 1209.04 L1045.84 1209.04 L1045.25 1209.04 L1044.67 1209.04 L1044.08 1209.04 L1043.49 1209.04 L1042.91 1209.04 L1042.32 1209.04 L1041.73 1209.04 L1041.15 1209.04 L1040.56 1209.04 L1039.98 1209.04 L1039.39 1209.04 L1038.8 1209.04 L1038.22 1209.04 L1037.63 1209.04 L1037.04 1209.04 L1036.46 1209.04 L1035.87 1209.04 L1035.28 1209.04 L1034.7 1209.04 L1034.11 1209.04 L1033.52 1209.04 L1032.94 1209.04 L1032.35 1209.04 L1031.77 1209.04 L1031.18 1209.04 L1030.59 1209.04 L1030.01 1209.04 L1029.42 1209.04 L1028.83 1209.04 L1028.25 1209.04 L1027.66 1209.04 L1027.07 1209.04 L1026.49 1209.04 L1025.9 1209.04 L1025.32 1209.04 L1024.73 1209.04 L1024.14 1209.04 L1023.56 1209.04 L1022.97 1209.04 L1022.38 1209.04 L1021.8 1209.04 L1021.21 1209.04 L1020.62 1209.04 L1020.04 1209.04 L1019.45 1209.04 L1018.86 1209.04 L1018.28 1209.04 L1017.69 1209.04 L1017.11 1209.04 L1016.52 1209.04 L1015.93 1209.04 L1015.35 1209.04 L1014.76 1209.04 L1014.17 1209.04 L1013.59 1209.04 L1013 1209.04 L1012.41 1209.04 L1011.83 1209.04 L1011.24 1209.04 L1010.65 1209.04 L1010.07 1209.04 L1009.48 1209.04 L1008.9 1209.04 L1008.31 1209.04 L1007.72 1209.04 L1007.14 1209.04 L1006.55 1209.04 L1005.96 1209.04 L1005.38 1209.04 L1004.79 1209.04 L1004.2 1209.04 L1003.62 1209.04 L1003.03 1209.04 L1002.44 1209.04 L1001.86 1209.04 L1001.27 1209.04 L1000.69 1209.04 L1000.1 1209.04 L999.513 1209.04 L998.926 1209.04 L998.34 1209.04 L997.754 1209.04 L997.167 1209.04 L996.581 1209.04 L995.994 1209.04 L995.408 1209.04 L994.822 1209.04 L994.235 1209.04 L993.649 1209.04 L993.062 1209.04 L992.476 1209.04 L991.889 1209.04 L991.303 1209.04 L990.717 1209.04 L990.13 1209.04 L989.544 1209.04 L988.957 1209.04 L988.371 1209.04 L987.785 1209.04 L987.198 1209.04 L986.612 1209.04 L986.025 1209.04  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip162)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1209.37 986.612,1209.37 987.198,1209.37 987.785,1209.37 988.371,1209.37 988.957,1209.37 989.544,1209.37 990.13,1209.37 990.717,1209.37 991.303,1209.37 991.889,1209.37 992.476,1209.37 993.062,1209.37 993.649,1209.37 994.235,1209.37 994.822,1209.37 995.408,1209.37 995.994,1209.37 996.581,1209.37 997.167,1209.37 997.754,1209.37 998.34,1209.37 998.926,1209.37 999.513,1209.37 1000.1,1209.37 1000.69,1209.37 1001.27,1209.37 1001.86,1209.37 1002.44,1209.37 1003.03,1209.37 1003.62,1209.37 1004.2,1209.37 1004.79,1209.37 1005.38,1209.37 1005.96,1209.37 1006.55,1209.37 1007.14,1209.37 1007.72,1209.37 1008.31,1209.37 1008.9,1209.37 1009.48,1209.37 1010.07,1209.37 1010.65,1209.37 1011.24,1209.37 1011.83,1209.37 1012.41,1209.37 1013,1209.37 1013.59,1209.37 1014.17,1209.37 1014.76,1209.37 1015.35,1209.37 1015.93,1209.37 1016.52,1209.37 1017.11,1209.37 1017.69,1209.37 1018.28,1209.37 1018.86,1209.37 1019.45,1209.37 1020.04,1209.37 1020.62,1209.37 1021.21,1209.37 1021.8,1209.37 1022.38,1209.37 1022.97,1209.37 1023.56,1209.37 1024.14,1209.37 1024.73,1209.37 1025.32,1209.37 1025.9,1209.37 1026.49,1209.37 1027.07,1209.37 1027.66,1209.37 1028.25,1209.37 1028.83,1209.37 1029.42,1209.37 1030.01,1209.37 1030.59,1209.37 1031.18,1209.37 1031.77,1209.37 1032.35,1209.37 1032.94,1209.37 1033.52,1209.37 1034.11,1209.37 1034.7,1209.37 1035.28,1209.37 1035.87,1209.37 1036.46,1209.37 1037.04,1209.37 1037.63,1209.37 1038.22,1209.37 1038.8,1209.37 1039.39,1209.37 1039.98,1209.37 1040.56,1209.37 1041.15,1209.37 1041.73,1209.37 1042.32,1209.37 1042.91,1209.37 1043.49,1209.37 1044.08,1209.37 1044.67,1209.37 1045.25,1209.37 1045.84,1209.37 1046.43,1209.37 1047.01,1209.37 1047.6,1209.37 1048.19,1209.37 1048.77,1209.37 1049.36,1209.37 1049.94,1209.37 1050.53,1209.37 1051.12,1209.37 1051.7,1209.37 1052.29,1209.37 1052.88,1209.37 1053.46,1209.37 1054.05,1209.37 1054.64,1209.37 1055.22,1209.37 1055.81,1209.37 1056.39,1209.37 1056.98,1209.37 1057.57,1209.37 1058.15,1209.37 1058.74,1209.37 1059.33,1209.37 1059.91,1209.37 1060.5,1209.37 1061.09,1209.37 1061.67,1209.37 1062.26,1209.37 1062.85,1209.37 1063.43,1209.37 1064.02,1209.37 1064.6,1209.37 1065.19,1209.37 1065.78,1209.37 1066.36,1209.37 1066.95,1209.37 1067.54,1209.37 1068.12,1209.37 1068.71,1209.37 1069.3,1209.37 1069.88,1209.37 1070.47,1209.37 1071.06,1209.37 1071.64,1209.37 1072.23,1209.37 1072.81,1209.37 1073.4,1209.37 1073.99,1209.37 1074.57,1209.37 1075.16,1209.37 1075.75,1209.37 1076.33,1209.37 1076.92,1209.37 1077.51,1209.37 1078.09,1209.37 1078.68,1209.37 1079.26,1209.37 1079.85,1209.37 1080.44,1209.37 1081.02,1209.37 1081.61,1209.37 1082.2,1209.37 1082.78,1209.37 1083.37,1209.37 1083.96,1209.37 1084.54,1209.37 1085.13,1209.37 1085.72,1209.37 1086.3,1209.37 1086.89,1209.37 1087.47,1209.37 1088.06,1209.37 1088.65,1209.37 1089.23,1209.37 1089.82,1209.37 1090.41,1209.37 1090.99,1209.37 1091.58,1209.37 1092.17,1209.37 1092.75,1209.37 1093.34,1209.37 1093.93,1209.37 1094.51,1209.37 1095.1,1209.37 1095.68,1209.37 1096.27,1209.37 1096.86,1209.37 1097.44,1209.37 1098.03,1209.37 1098.62,1209.37 1099.2,1209.37 1099.79,1209.37 1100.38,1209.37 1100.96,1209.37 1101.55,1209.37 1102.14,1209.37 1102.72,1209.37 1103.31,1209.37 1103.89,1209.37 1104.48,1209.37 1105.07,1209.37 1105.65,1209.37 1106.24,1209.37 1106.83,1209.37 1107.41,1209.37 1108,1209.37 1108.59,1209.37 1109.17,1209.37 1109.76,1209.37 1110.34,1209.37 1110.93,1209.37 1111.52,1209.37 1112.1,1209.37 1112.69,1209.37 1113.28,1209.37 1113.86,1209.37 1114.45,1209.37 1115.04,1209.37 1115.62,1209.37 1116.21,1209.37 1116.8,1209.37 1117.38,1209.37 1117.97,1209.37 1118.55,1209.37 1119.14,1209.37 1119.73,1209.37 1120.31,1209.37 1120.9,1209.37 1121.49,1209.37 1122.07,1209.37 1122.66,1209.37 1123.25,1209.37 1123.83,1209.37 1124.42,1209.37 1125.01,1209.37 1125.59,1209.37 1126.18,1209.37 1126.76,1209.37 1127.35,1209.37 1127.94,1209.37 1128.52,1209.37 1129.11,1209.37 1129.7,1209.37 1130.28,1209.37 1130.87,1209.37 1131.46,1209.37 1132.04,1209.37 1132.63,1209.37 1133.21,1209.37 1133.8,1209.37 1134.39,1209.37 1134.97,1209.37 1135.56,1209.37 1136.15,1209.37 1136.73,1209.37 1137.32,1209.37 1137.91,1209.37 1138.49,1209.37 1139.08,1209.37 1139.67,1209.37 1140.25,1209.37 1140.84,1209.37 1141.42,1209.37 1142.01,1209.37 1142.6,1209.37 1143.18,1209.37 1143.77,1209.37 1144.36,1209.37 1144.94,1209.37 1145.53,1209.37 1146.12,1209.37 1146.7,1209.37 1147.29,1209.37 1147.88,1209.37 1148.46,1209.37 1149.05,1209.37 1149.63,1209.37 1150.22,1209.37 1150.81,1209.37 1151.39,1209.37 1151.98,1209.37 1152.57,1209.37 1153.15,1209.37 1153.74,1209.37 1154.33,1209.37 1154.91,1209.37 1155.5,1209.37 1156.09,1209.37 1156.67,1209.37 1157.26,1209.37 1157.84,1209.37 1158.43,1209.37 1159.02,1209.37 1159.6,1209.37 1160.19,1209.37 1160.78,1209.37 1161.36,1209.37 1161.95,1209.37 1162.54,1209.37 1163.12,1209.37 1163.71,1209.37 1164.29,1209.37 1164.88,1209.37 1165.47,1209.37 1166.05,1209.37 1166.64,1209.37 1167.23,1209.37 1167.81,1209.37 1168.4,1209.37 1168.99,1209.37 1169.57,1209.37 1170.16,1209.37 1170.75,1209.37 1171.33,1209.37 1171.92,1209.37 1172.5,1209.37 1173.09,1209.37 1173.68,1209.37 1174.26,1209.37 1174.85,1209.37 1175.44,1209.37 1176.02,1209.37 1176.61,1209.37 1177.2,1209.37 1177.78,1209.37 1178.37,1209.37 1178.96,1209.37 1179.54,1209.37 1180.13,1209.37 1180.71,1209.37 1181.3,1209.37 1181.89,1209.37 1182.47,1209.37 1183.06,1209.37 1183.65,1209.37 1184.23,1209.37 1184.82,1209.37 1185.41,1209.37 1185.99,1209.37 1186.58,1209.37 1187.16,1209.37 1187.75,1209.37 1188.34,1209.37 1188.92,1209.37 1189.51,1209.37 1190.1,1209.37 1190.68,1209.37 1191.27,1209.37 1191.86,1209.37 1192.44,1209.37 1193.03,1209.37 1193.62,1209.37 1194.2,1209.37 1194.79,1209.37 1195.37,1209.37 1195.96,1209.37 1196.55,1209.37 1197.13,1209.37 1197.72,1209.37 1198.31,1209.37 1198.89,1209.37 1199.48,1209.37 1200.07,1209.37 1200.65,1209.37 1201.24,1209.37 1201.83,1209.37 1202.41,1209.37 1203,1209.37 1203.58,1209.37 1204.17,1209.37 1204.76,1209.37 1205.34,1209.37 1205.93,1209.37 1206.52,1209.37 1207.1,1209.37 1207.69,1209.37 1208.28,1209.37 1208.86,1209.37 1209.45,1209.37 1210.03,1209.37 1210.62,1209.37 1211.21,1209.37 1211.79,1209.37 1212.38,1209.37 1212.97,1209.37 1213.55,1209.37 1214.14,1209.37 1214.73,1209.37 1215.31,1209.37 1215.9,1209.37 1216.49,1209.37 1217.07,1209.37 1217.66,1209.37 1218.24,1209.37 1218.83,1209.37 1219.42,1209.37 1220,1209.37 1220.59,1209.37 1221.18,1209.37 1221.76,1209.37 1222.35,1209.37 1222.94,1209.37 1223.52,1209.37 1224.11,1209.37 1224.7,1209.37 1225.28,1209.37 1225.87,1209.37 1226.45,1209.37 1227.04,1209.37 1227.63,1209.37 1228.21,1209.37 1228.8,1209.37 1229.39,1209.37 1229.97,1209.37 1230.56,1209.37 1231.15,1209.37 1231.73,1209.37 1232.32,1209.37 1232.91,1209.37 1233.49,1209.37 1234.08,1209.37 1234.66,1209.37 1235.25,1209.37 1235.84,1209.37 1236.42,1209.37 1237.01,1209.37 1237.6,1209.37 1238.18,1209.37 1238.77,1209.37 1239.36,1209.37 1239.94,1209.37 1240.53,1209.37 1241.11,1209.37 1241.7,1209.37 1242.29,1209.37 1242.87,1209.37 1243.46,1209.37 1244.05,1209.37 1244.63,1209.37 1245.22,1209.37 1245.81,1209.37 1246.39,1209.37 1246.98,1209.37 1247.57,1209.37 1248.15,1209.37 1248.74,1209.37 1249.32,1209.37 1249.91,1209.37 1250.5,1209.37 1251.08,1209.37 1251.67,1209.37 1252.26,1209.37 1252.84,1209.37 1253.43,1209.37 1254.02,1209.37 1254.6,1209.37 1255.19,1209.37 1255.78,1209.37 1256.36,1209.37 1256.95,1209.37 1257.53,1209.37 1258.12,1209.37 1258.71,1209.37 1259.29,1209.37 1259.88,1209.37 1260.47,1209.37 1261.05,1209.37 1261.64,1209.37 1262.23,1209.37 1262.81,1209.37 1263.4,1209.37 1263.98,1209.37 1264.57,1209.37 1265.16,1209.37 1265.74,1209.37 1266.33,1209.37 1266.92,1209.37 1267.5,1209.37 1268.09,1209.37 1268.68,1209.37 1269.26,1209.37 1269.85,1209.37 1270.44,1209.37 1271.02,1209.37 1271.61,1209.37 1272.19,1209.37 1272.78,1209.37 1273.37,1209.37 1273.95,1209.37 1274.54,1209.37 1275.13,1209.37 1275.71,1209.37 1276.3,1209.37 1276.89,1209.37 1277.47,1209.37 1278.06,1209.37 1278.65,1209.37 1279.23,1209.37 1279.82,1209.37 1280.4,1209.37 1280.99,1209.37 1281.58,1209.37 1282.16,1209.37 1282.75,1209.37 1283.34,1209.37 1283.92,1209.37 1284.51,1209.37 1285.1,1209.37 1285.68,1209.37 1286.27,1209.37 1286.86,1209.37 1287.44,1209.37 1288.03,1209.37 1288.61,1209.37 1289.2,1209.37 1289.79,1209.37 1290.37,1209.37 1290.96,1209.37 1291.55,1209.37 1292.13,1209.37 1292.72,1209.37 1293.31,1209.37 1293.89,1209.37 1294.48,1209.37 1295.06,1209.37 1295.65,1209.37 1296.24,1209.37 1296.82,1209.37 1297.41,1209.37 1298,1209.37 1298.58,1209.37 1299.17,1209.37 1299.76,1209.37 1300.34,1209.37 1300.93,1209.37 1301.52,1209.37 1302.1,1209.37 1302.69,1209.37 1303.27,1209.37 1303.86,1209.37 1304.45,1209.37 1305.03,1209.37 1305.62,1209.37 1306.21,1209.37 1306.79,1209.37 1307.38,1209.37 1307.97,1209.37 1308.55,1209.37 1309.14,1209.37 1309.73,1209.37 1310.31,1209.37 1310.9,1209.37 1311.48,1209.37 1312.07,1209.37 1312.66,1209.37 1313.24,1209.37 1313.83,1209.37 1314.42,1209.37 1315,1209.37 1315.59,1209.37 1316.18,1209.37 1316.76,1209.37 1317.35,1209.37 1317.93,1209.37 1318.52,1209.37 1319.11,1209.37 1319.69,1209.37 1320.28,1209.37 1320.87,1209.37 1321.45,1209.37 1322.04,1209.37 1322.63,1209.37 1323.21,1209.37 1323.8,1209.37 1324.39,1209.37 1324.97,1209.37 1325.56,1209.37 1326.14,1209.37 1326.73,1209.37 1327.32,1209.37 1327.9,1209.37 1328.49,1209.37 1329.08,1209.37 1329.66,1209.37 1330.25,1209.37 1330.84,1209.37 1331.42,1209.37 1332.01,1209.37 1332.6,1209.37 1333.18,1209.37 1333.77,1209.37 1334.35,1209.37 1334.94,1209.37 1335.53,1209.37 1336.11,1209.37 1336.7,1209.37 1337.29,1209.37 1337.87,1209.37 1338.46,1209.37 1339.05,1209.37 1339.63,1209.37 1340.22,1209.37 1340.8,1209.37 1341.39,1209.37 1341.98,1209.37 1342.56,1209.37 1343.15,1209.37 1343.74,1209.37 1344.32,1209.37 1344.91,1209.37 1345.5,1209.37 1346.08,1209.37 1346.67,1209.37 1347.26,1209.37 1347.84,1209.37 1348.43,1209.37 1349.01,1209.37 1349.6,1209.37 1350.19,1209.37 1350.77,1209.37 1351.36,1209.37 1351.95,1209.37 1352.53,1209.37 1353.12,1209.37 1353.71,1209.37 1354.29,1209.37 1354.88,1209.37 1355.47,1209.37 1356.05,1209.37 1356.64,1209.37 1357.22,1209.37 1357.81,1209.37 1358.4,1209.37 1358.98,1209.37 1359.57,1209.37 1360.16,1209.37 1360.74,1209.37 1361.33,1209.37 1361.92,1209.37 1362.5,1209.37 1363.09,1209.37 1363.68,1209.37 1364.26,1209.37 1364.85,1209.37 1365.43,1209.37 1366.02,1209.37 1366.61,1209.37 1367.19,1209.37 1367.78,1209.37 1368.37,1209.37 1368.95,1209.37 1369.54,1209.37 1370.13,1209.37 1370.71,1209.37 1371.3,1209.37 1371.88,1209.37 1372.47,1209.37 1373.06,1209.37 1373.64,1209.37 1374.23,1209.37 1374.82,1209.37 1375.4,1209.37 1375.99,1209.37 1376.58,1209.37 1377.16,1209.37 1377.75,1209.37 1378.34,1209.37 1378.92,1209.37 1379.51,1209.37 1380.09,1209.37 1380.68,1209.37 1381.27,1209.37 1381.85,1209.37 1382.44,1209.37 1383.03,1209.37 1383.61,1209.37 1384.2,1209.37 1384.79,1209.37 1385.37,1209.37 1385.96,1209.37 1386.55,1209.37 1387.13,1209.37 1387.72,1209.37 1388.3,1209.37 1388.89,1209.37 1389.48,1209.37 1390.06,1209.37 1390.65,1209.37 1391.24,1209.37 1391.82,1209.37 1392.41,1209.37 1393,1209.37 1393.58,1209.37 1394.17,1209.37 1394.75,1209.37 1395.34,1209.37 1395.93,1209.37 1396.51,1209.37 1397.1,1209.37 1397.69,1209.37 1398.27,1209.37 1398.86,1209.37 1399.45,1209.37 1400.03,1209.37 1400.62,1209.37 1401.21,1209.37 1401.79,1209.37 1402.38,1209.37 1402.96,1209.37 1403.55,1209.37 1404.14,1209.37 1404.72,1209.37 1405.31,1209.37 1405.9,1209.37 1406.48,1209.37 1407.07,1209.37 1407.66,1209.37 1408.24,1209.37 1408.83,1209.37 1409.42,1209.37 1410,1209.37 1410.59,1209.37 1411.17,1209.37 1411.76,1209.37 1412.35,1209.37 1412.93,1209.37 1413.52,1209.37 1414.11,1209.37 1414.69,1209.37 1415.28,1209.37 1415.87,1209.37 1416.45,1209.37 1417.04,1209.37 1417.63,1209.37 1418.21,1209.37 1418.8,1209.37 1419.38,1209.37 1419.97,1209.37 1420.56,1209.37 1421.14,1209.37 1421.73,1209.37 1422.32,1209.37 1422.9,1209.37 1423.49,1209.37 1424.08,1209.37 1424.66,1209.37 1425.25,1209.37 1425.83,1209.37 1426.42,1209.37 1427.01,1209.37 1427.59,1209.37 1428.18,1209.37 1428.77,1209.37 1429.35,1209.37 1429.94,1209.37 1430.53,1209.37 1431.11,1209.37 1431.7,1209.37 1432.29,1209.37 1432.87,1209.37 1433.46,1209.37 1434.04,1209.37 1434.63,1209.37 1435.22,1209.37 1435.8,1209.37 1436.39,1209.37 1436.98,1209.37 1437.56,1209.37 1438.15,1209.37 1438.74,1209.37 1439.32,1209.37 1439.91,1209.37 1440.5,1209.37 1441.08,1209.37 1441.67,1209.37 1442.25,1209.37 1442.84,1209.37 1443.43,1209.37 1444.01,1209.37 1444.6,1209.37 1445.19,1209.37 1445.77,1209.37 1446.36,1209.37 1446.95,1209.37 1447.53,1209.37 1448.12,1209.37 1448.7,1209.37 1449.29,1209.37 1449.88,1209.37 1450.46,1209.37 1451.05,1209.37 1451.64,1209.37 1452.22,1209.37 1452.81,1209.37 1453.4,1209.37 1453.98,1209.37 1454.57,1209.37 1455.16,1209.37 1455.74,1209.37 1456.33,1209.37 1456.91,1209.37 1457.5,1209.37 1458.09,1209.37 1458.67,1209.37 1459.26,1209.37 1459.85,1209.37 1460.43,1209.37 1461.02,1209.37 1461.61,1209.37 1462.19,1209.37 1462.78,1209.37 1463.37,1209.37 1463.95,1209.37 1464.54,1209.37 1465.12,1209.37 1465.71,1209.37 1466.3,1209.37 1466.88,1209.37 1467.47,1209.37 1468.06,1209.37 1468.64,1209.37 1469.23,1209.37 1469.82,1209.37 1470.4,1209.37 1470.99,1209.37 1471.57,1209.37 1472.16,1209.37 1472.75,1209.37 1473.33,1209.37 1473.92,1209.37 1474.51,1209.37 1475.09,1209.37 1475.68,1209.37 1476.27,1209.37 1476.85,1209.37 1477.44,1209.37 1478.03,1209.37 1478.61,1209.37 1479.2,1209.37 1479.78,1209.37 1480.37,1209.37 1480.96,1209.37 1481.54,1209.37 1482.13,1209.37 1482.72,1209.37 1483.3,1209.37 1483.89,1209.37 1484.48,1209.37 1485.06,1209.37 1485.65,1209.37 1486.24,1209.37 1486.82,1209.37 1487.41,1209.37 1487.99,1209.37 1488.58,1209.37 1489.17,1209.37 1489.75,1209.37 1490.34,1209.37 1490.93,1209.37 1491.51,1209.37 1492.1,1209.37 1492.69,1209.37 1493.27,1209.37 1493.86,1209.37 1494.45,1209.37 1495.03,1209.37 1495.62,1209.37 1496.2,1209.37 1496.79,1209.37 1497.38,1209.37 1497.96,1209.37 1498.55,1209.37 1499.14,1209.37 1499.72,1209.37 1500.31,1209.37 1500.9,1209.37 1501.48,1209.37 1502.07,1209.37 1502.65,1209.37 1503.24,1209.37 1503.83,1209.37 1504.41,1209.37 1505,1209.37 1505.59,1209.37 1506.17,1209.37 1506.76,1209.37 1507.35,1209.37 1507.93,1209.37 1508.52,1209.37 1509.11,1209.37 1509.69,1209.37 1510.28,1209.37 1510.86,1209.37 1511.45,1209.37 1512.04,1209.37 1512.62,1209.37 1513.21,1209.37 1513.8,1209.37 1514.38,1209.37 1514.97,1209.37 1515.56,1209.37 1516.14,1209.37 1516.73,1209.37 1517.32,1209.37 1517.9,1209.37 1518.49,1209.37 1519.07,1209.37 1519.66,1209.37 1520.25,1209.37 1520.83,1209.37 1521.42,1209.37 1522.01,1209.37 1522.59,1209.37 1523.18,1209.37 1523.77,1209.37 1524.35,1209.37 1524.94,1209.37 1525.52,1209.37 1526.11,1209.37 1526.7,1209.37 1527.28,1209.37 1527.87,1209.37 1528.46,1209.37 1529.04,1209.37 1529.63,1209.37 1530.22,1209.37 1530.8,1209.37 1531.39,1209.37 1531.98,1209.37 1532.56,1209.37 1533.15,1209.37 1533.73,1209.37 1534.32,1209.37 1534.91,1209.37 1535.49,1209.37 1536.08,1209.37 1536.67,1209.37 1537.25,1209.37 1537.84,1209.37 1538.43,1209.37 1539.01,1209.37 1539.6,1209.37 1540.19,1209.37 1540.77,1209.37 1541.36,1209.37 1541.94,1209.37 1542.53,1209.37 1543.12,1209.37 1543.7,1209.37 1544.29,1209.37 1544.88,1209.37 1545.46,1209.37 1546.05,1209.37 1546.64,1209.37 1547.22,1209.37 1547.81,1209.37 1548.4,1209.37 1548.98,1209.37 1549.57,1209.37 1550.15,1209.37 1550.74,1209.37 1551.33,1209.37 1551.91,1209.37 1552.5,1209.37 1553.09,1209.37 1553.67,1209.37 1554.26,1209.37 1554.85,1209.37 1555.43,1209.37 1556.02,1209.37 1556.6,1209.37 1557.19,1209.37 1557.78,1209.37 1558.36,1209.37 1558.95,1209.37 1559.54,1209.37 1560.12,1209.37 1560.71,1209.37 1561.3,1209.37 1561.88,1209.37 1562.47,1209.37 1563.06,1209.37 1563.64,1209.37 1564.23,1209.37 1564.81,1209.37 1565.4,1209.37 1565.99,1209.37 1566.57,1209.37 1567.16,1209.37 1567.75,1209.37 1568.33,1209.37 1568.92,1209.37 1569.51,1209.37 1570.09,1209.37 1570.68,1209.37 1571.27,1209.37 1571.85,1209.37 1572.44,1209.37 1573.02,1209.37 1573.61,1209.37 1574.2,1209.37 1574.78,1209.37 1575.37,1209.37 1575.96,1209.37 1576.54,1209.37 1577.13,1209.37 1577.72,1209.37 1578.3,1209.37 1578.89,1209.37 1579.47,1209.37 1580.06,1209.37 1580.65,1209.37 1581.23,1209.37 1581.82,1209.37 1582.41,1209.37 1582.99,1209.37 1583.58,1209.37 1584.17,1209.37 1584.75,1209.37 1585.34,1209.37 1585.93,1209.37 1586.51,1209.37 1587.1,1209.37 1587.68,1209.37 1588.27,1209.37 1588.86,1209.37 1589.44,1209.37 1590.03,1209.37 1590.62,1209.37 1591.2,1209.37 1591.79,1209.37 1592.38,1209.37 1592.96,1209.37 1593.55,1209.37 1594.14,1209.37 1594.72,1209.37 1595.31,1209.37 1595.89,1209.37 1596.48,1209.37 1597.07,1209.37 1597.65,1209.37 1598.24,1209.37 1598.83,1209.37 1599.41,1209.37 1600,1209.37 1600.59,1209.37 1601.17,1209.37 1601.76,1209.37 1602.34,1209.37 1602.93,1209.37 1603.52,1209.37 1604.1,1209.37 1604.69,1209.37 1605.28,1209.37 1605.86,1209.37 1606.45,1209.37 1607.04,1209.37 1607.62,1209.37 1608.21,1209.37 1608.8,1209.37 1609.38,1209.37 1609.97,1209.37 1610.55,1209.37 1611.14,1209.37 1611.73,1209.37 1612.31,1209.37 1612.9,1209.37 1613.49,1209.37 1614.07,1209.37 1614.66,1209.37 1615.25,1209.37 1615.83,1209.37 1616.42,1209.37 1617.01,1209.37 1617.59,1209.37 1618.18,1209.37 1618.76,1209.37 1619.35,1209.37 1619.94,1209.37 1620.52,1209.37 1621.11,1209.37 1621.7,1209.37 1622.28,1209.37 1622.87,1209.37 1623.46,1209.37 1624.04,1209.37 1624.63,1209.37 1625.22,1209.37 1625.8,1209.37 1626.39,1209.37 1626.97,1209.37 1627.56,1209.37 1628.15,1209.37 1628.73,1209.37 1629.32,1209.37 1629.91,1209.37 1630.49,1209.37 1631.08,1209.37 1631.67,1209.37 1632.25,1209.37 1632.84,1209.37 1633.42,1209.37 1634.01,1209.37 1634.6,1209.37 1635.18,1209.37 1635.77,1209.37 1636.36,1209.37 1636.94,1209.37 1637.53,1209.37 1638.12,1209.37 1638.7,1209.37 1639.29,1209.37 1639.88,1209.37 1640.46,1209.37 1641.05,1209.37 1641.63,1209.37 1642.22,1209.37 1642.81,1209.37 1643.39,1209.37 1643.98,1209.37 1644.57,1209.37 1645.15,1209.37 1645.74,1209.37 1646.33,1209.37 1646.91,1209.37 1647.5,1209.37 1648.09,1209.37 1648.67,1209.37 1649.26,1209.37 1649.84,1209.37 1650.43,1209.37 1651.02,1209.37 1651.6,1209.37 1652.19,1209.37 1652.78,1209.37 1653.36,1209.37 1653.95,1209.37 1654.54,1209.37 1655.12,1209.37 1655.71,1209.37 1656.29,1209.37 1656.88,1209.37 1657.47,1209.37 1658.05,1209.37 1658.64,1209.37 1659.23,1209.37 1659.81,1209.37 1660.4,1209.37 1660.99,1209.37 1661.57,1209.37 1662.16,1209.37 1662.75,1209.37 1663.33,1209.37 1663.92,1209.37 1664.5,1209.37 1665.09,1209.37 1665.68,1209.37 1666.26,1209.37 1666.85,1209.37 1667.44,1209.37 1668.02,1209.37 1668.61,1209.37 1669.2,1209.37 1669.78,1209.37 1670.37,1209.37 1670.96,1209.37 1671.54,1209.37 1672.13,1209.37 1672.71,1209.37 1673.3,1209.37 1673.89,1209.37 1674.47,1209.37 1675.06,1209.37 1675.65,1209.37 1676.23,1209.37 1676.82,1209.37 1677.41,1209.37 1677.99,1209.37 1678.58,1209.37 1679.17,1209.37 1679.75,1209.37 1680.34,1209.37 1680.92,1209.37 1681.51,1209.37 1682.1,1209.37 1682.68,1209.37 1683.27,1209.37 1683.86,1209.37 1684.44,1209.37 1685.03,1209.37 1685.62,1209.37 1686.2,1209.37 1686.79,1209.37 1687.37,1209.37 1687.96,1209.37 1688.55,1209.37 1689.13,1209.37 1689.72,1209.37 1690.31,1209.37 1690.89,1209.37 1691.48,1209.37 1692.07,1209.37 1692.65,1209.37 1693.24,1209.37 1693.83,1209.37 1694.41,1209.37 1695,1209.37 1695.58,1209.37 1696.17,1209.37 1696.76,1209.37 1697.34,1209.37 1697.93,1209.37 1698.52,1209.37 1699.1,1209.37 1699.69,1209.37 1700.28,1209.37 1700.86,1209.37 1701.45,1209.37 1702.04,1209.37 1702.62,1209.37 1703.21,1209.37 1703.79,1209.37 1704.38,1209.37 1704.97,1209.37 1705.55,1209.37 1706.14,1209.37 1706.73,1209.37 1707.31,1209.37 1707.9,1209.37 1708.49,1209.37 1709.07,1209.37 1709.66,1209.37 1710.24,1209.37 1710.83,1209.37 1711.42,1209.37 1712,1209.37 1712.59,1209.37 1713.18,1209.37 1713.76,1209.37 1714.35,1209.37 1714.94,1209.37 1715.52,1209.37 1716.11,1209.37 1716.7,1209.37 1717.28,1209.37 1717.87,1209.37 1718.45,1209.37 1719.04,1209.37 1719.63,1209.37 1720.21,1209.37 1720.8,1209.37 1721.39,1209.37 1721.97,1209.37 1722.56,1209.37 1723.15,1209.37 1723.73,1209.37 1724.32,1209.37 1724.91,1209.37 1725.49,1209.37 1726.08,1209.37 1726.66,1209.37 1727.25,1209.37 1727.84,1209.37 1728.42,1209.37 1729.01,1209.37 1729.6,1209.37 1730.18,1209.37 1730.77,1209.37 1731.36,1209.37 1731.94,1209.37 1732.53,1209.37 1733.11,1209.37 1733.7,1209.37 1734.29,1209.37 1734.87,1209.37 1735.46,1209.37 1736.05,1209.37 1736.63,1209.37 1737.22,1209.37 1737.81,1209.37 1738.39,1209.37 1738.98,1209.37 1739.57,1209.37 1740.15,1209.37 1740.74,1209.37 1741.32,1209.37 1741.91,1209.37 1742.5,1209.37 1743.08,1209.37 1743.67,1209.37 1744.26,1209.37 1744.84,1209.37 1745.43,1209.37 1746.02,1209.37 1746.6,1209.37 1747.19,1209.37 1747.78,1209.37 1748.36,1209.37 1748.95,1209.37 1749.53,1209.37 1750.12,1209.37 1750.71,1209.37 1751.29,1209.37 1751.88,1209.37 1752.47,1209.37 1753.05,1209.37 1753.64,1209.37 1754.23,1209.37 1754.81,1209.37 1755.4,1209.37 1755.99,1209.37 1756.57,1209.37 1757.16,1209.37 1757.74,1209.37 1758.33,1209.37 1758.92,1209.37 1759.5,1209.37 1760.09,1209.37 1760.68,1209.37 1761.26,1209.37 1761.85,1209.37 1762.44,1209.37 1763.02,1209.37 1763.61,1209.37 1764.19,1209.37 1764.78,1209.37 1765.37,1209.37 1765.95,1209.37 1766.54,1209.37 1767.13,1209.37 1767.71,1209.37 1768.3,1209.37 1768.89,1209.37 1769.47,1209.37 1770.06,1209.37 1770.65,1209.37 1771.23,1209.37 1771.82,1209.37 1772.4,1209.37 1772.99,1209.37 1773.58,1209.37 1774.16,1209.37 1774.75,1209.37 1775.34,1209.37 1775.92,1209.37 1776.51,1209.37 1777.1,1209.37 1777.68,1209.37 1778.27,1209.37 1778.86,1209.37 1779.44,1209.37 1780.03,1209.37 1780.61,1209.37 1781.2,1209.37 1781.79,1209.37 1782.37,1209.37 1782.96,1209.37 1783.55,1209.37 1784.13,1209.37 1784.72,1209.37 1785.31,1209.37 1785.89,1209.37 1786.48,1209.37 1787.06,1209.37 1787.65,1209.37 1788.24,1209.37 1788.82,1209.37 1789.41,1209.37 1790,1209.37 1790.58,1209.37 1791.17,1209.37 1791.76,1209.37 1792.34,1209.37 1792.93,1209.37 1793.52,1209.37 1794.1,1209.37 1794.69,1209.37 1795.27,1209.37 1795.86,1209.37 1796.45,1209.37 1797.03,1209.37 1797.62,1209.37 1798.21,1209.37 1798.79,1209.37 1799.38,1209.37 1799.97,1209.37 1800.55,1209.37 1801.14,1209.37 1801.73,1209.37 1802.31,1209.37 1802.9,1209.37 1803.48,1209.37 1804.07,1209.37 1804.66,1209.37 1805.24,1209.37 1805.83,1209.37 1806.42,1209.37 1807,1209.37 1807.59,1209.37 1808.18,1209.37 1808.76,1209.37 1809.35,1209.37 1809.94,1209.37 1810.52,1209.37 1811.11,1209.37 1811.69,1209.37 1812.28,1209.37 1812.87,1209.37 1813.45,1209.37 1814.04,1209.37 1814.63,1209.37 1815.21,1209.37 1815.8,1209.37 1816.39,1209.37 1816.97,1209.37 1817.56,1209.37 1818.14,1209.37 1818.73,1209.37 1819.32,1209.37 1819.9,1209.37 1820.49,1209.37 1821.08,1209.37 1821.66,1209.37 1822.25,1209.37 1822.84,1209.37 1823.42,1209.37 1824.01,1209.37 1824.6,1209.37 1825.18,1209.37 1825.77,1209.37 1826.35,1209.37 1826.94,1209.37 1827.53,1209.37 1828.11,1209.37 1828.7,1209.37 1829.29,1209.37 1829.87,1209.37 1830.46,1209.37 1831.05,1209.37 1831.63,1209.37 1832.22,1209.37 1832.81,1209.37 1833.39,1209.37 1833.98,1209.37 1834.56,1209.37 1835.15,1209.37 1835.74,1209.37 1836.32,1209.37 1836.91,1209.37 1837.5,1209.37 1838.08,1209.37 1838.67,1209.37 1839.26,1209.37 1839.84,1209.37 1840.43,1209.37 1841.01,1209.37 1841.6,1209.37 1842.19,1209.37 1842.77,1209.37 1843.36,1209.37 1843.95,1209.37 1844.53,1209.37 1845.12,1209.37 1845.71,1209.37 1846.29,1209.37 1846.88,1209.37 1847.47,1209.37 1848.05,1209.37 1848.64,1209.37 1849.22,1209.37 1849.81,1209.37 1850.4,1209.37 1850.98,1209.37 1851.57,1209.37 1852.16,1209.37 1852.74,1209.37 1853.33,1209.37 1853.92,1209.37 1854.5,1209.37 1855.09,1209.37 1855.68,1209.37 1856.26,1209.37 1856.85,1209.37 1857.43,1209.37 1858.02,1209.37 1858.61,1209.37 1859.19,1209.37 1859.78,1209.37 1860.37,1209.37 1860.95,1209.37 1861.54,1209.37 1862.13,1209.37 1862.71,1209.37 1863.3,1209.37 1863.88,1209.37 1864.47,1209.37 1865.06,1209.37 1865.64,1209.37 1866.23,1209.37 1866.82,1209.37 1867.4,1209.37 1867.99,1209.37 1868.58,1209.37 1869.16,1209.37 1869.75,1209.37 1870.34,1209.37 1870.92,1209.37 1871.51,1209.37 1872.09,1209.37 1872.68,1209.37 1873.27,1209.37 1873.85,1209.37 1874.44,1209.37 1875.03,1209.37 1875.61,1209.37 1876.2,1209.37 1876.79,1209.37 1877.37,1209.37 1877.96,1209.37 1878.55,1209.37 1879.13,1209.37 1879.72,1209.37 1880.3,1209.37 1880.89,1209.37 1881.48,1209.37 1882.06,1209.37 1882.65,1209.37 1883.24,1209.37 1883.82,1209.37 1884.41,1209.37 1885,1209.37 1885.58,1209.37 1886.17,1209.37 1886.76,1209.37 1887.34,1209.37 1887.93,1209.37 1888.51,1209.37 1889.1,1209.37 1889.69,1209.37 1890.27,1209.37 1890.86,1209.37 1891.45,1209.37 1892.03,1209.37 1892.62,1209.37 1893.21,1209.37 1893.79,1209.37 1894.38,1209.37 1894.96,1209.37 1895.55,1209.37 1896.14,1209.37 1896.72,1209.37 1897.31,1209.37 1897.9,1209.37 1898.48,1209.37 1899.07,1209.37 1899.66,1209.37 1900.24,1209.37 1900.83,1209.37 1901.42,1209.37 1902,1209.37 1902.59,1209.37 1903.17,1209.37 1903.76,1209.37 1904.35,1209.37 1904.93,1209.37 1905.52,1209.37 1906.11,1209.37 1906.69,1209.37 1907.28,1209.37 1907.87,1209.37 1908.45,1209.37 1909.04,1209.37 1909.63,1209.37 1910.21,1209.37 1910.8,1209.37 1911.38,1209.37 1911.97,1209.37 1912.56,1209.37 1913.14,1209.37 1913.73,1209.37 1914.32,1209.37 1914.9,1209.37 1915.49,1209.37 1916.08,1209.37 1916.66,1209.37 1917.25,1209.37 1917.83,1209.37 1918.42,1209.37 1919.01,1209.37 1919.59,1209.37 1920.18,1209.37 1920.77,1209.37 1921.35,1209.37 1921.94,1209.37 1922.53,1209.37 1923.11,1209.37 1923.7,1209.37 1924.29,1209.37 1924.87,1209.37 1925.46,1209.37 1926.04,1209.37 1926.63,1209.37 1927.22,1209.37 1927.8,1209.37 1928.39,1209.37 1928.98,1209.37 1929.56,1209.37 1930.15,1209.37 1930.74,1209.37 1931.32,1209.37 1931.91,1209.37 1932.5,1209.37 1933.08,1209.37 1933.67,1209.37 1934.25,1209.37 1934.84,1209.37 1935.43,1209.37 1936.01,1209.37 1936.6,1209.37 1937.19,1209.37 1937.77,1209.37 1938.36,1209.37 1938.95,1209.37 1939.53,1209.37 1940.12,1209.37 1940.71,1209.37 1941.29,1209.37 1941.88,1209.37 1942.46,1209.37 1943.05,1209.37 1943.64,1209.37 1944.22,1209.37 1944.81,1209.37 1945.4,1209.37 1945.98,1209.37 1946.57,1209.37 1947.16,1209.37 1947.74,1209.37 1948.33,1209.37 1948.91,1209.37 1949.5,1209.37 1950.09,1209.37 1950.67,1209.37 1951.26,1209.37 1951.85,1209.37 1952.43,1209.37 1953.02,1209.37 1953.61,1209.37 1954.19,1209.37 1954.78,1209.37 1955.37,1209.37 1955.95,1209.37 1956.54,1209.37 1957.12,1209.37 1957.71,1209.37 1958.3,1209.37 1958.88,1209.37 1959.47,1209.37 1960.06,1209.37 1960.64,1209.37 1961.23,1209.37 1961.82,1209.37 1962.4,1209.37 1962.99,1209.37 1963.58,1209.37 1964.16,1209.37 1964.75,1209.37 1965.33,1209.37 1965.92,1209.37 1966.51,1209.37 1967.09,1209.37 1967.68,1209.37 1968.27,1209.37 1968.85,1209.37 1969.44,1209.37 1970.03,1209.37 1970.61,1209.37 1971.2,1209.37 1971.78,1209.37 1972.37,1209.37 1972.96,1209.37 1973.54,1209.37 1974.13,1209.37 1974.72,1209.37 1975.3,1209.37 1975.89,1209.37 1976.48,1209.37 1977.06,1209.37 1977.65,1209.37 1978.24,1209.37 1978.82,1209.37 1979.41,1209.37 1979.99,1209.37 1980.58,1209.37 1981.17,1209.37 1981.75,1209.37 1982.34,1209.37 1982.93,1209.37 1983.51,1209.37 1984.1,1209.37 1984.69,1209.37 1985.27,1209.37 1985.86,1209.37 1986.45,1209.37 1987.03,1209.37 1987.62,1209.37 1988.2,1209.37 1988.79,1209.37 1989.38,1209.37 1989.96,1209.37 1990.55,1209.37 1991.14,1209.37 1991.72,1209.37 1992.31,1209.37 1992.9,1209.37 1993.48,1209.37 1994.07,1209.37 1994.65,1209.37 1995.24,1209.37 1995.83,1209.37 1996.41,1209.37 1997,1209.37 1997.59,1209.37 1998.17,1209.37 1998.76,1209.37 1999.35,1209.37 1999.93,1209.37 2000.52,1209.37 2001.11,1209.37 2001.69,1209.37 2002.28,1209.37 2002.86,1209.37 2003.45,1209.37 2004.04,1209.37 2004.62,1209.37 2005.21,1209.37 2005.8,1209.37 2006.38,1209.37 2006.97,1209.37 2007.56,1209.37 2008.14,1209.37 2008.73,1209.37 2009.32,1209.37 2009.9,1209.37 2010.49,1209.37 2011.07,1209.37 2011.66,1209.37 2012.25,1209.37 2012.83,1209.37 2013.42,1209.37 2014.01,1209.37 2014.59,1209.37 2015.18,1209.37 2015.77,1209.37 2016.35,1209.37 2016.94,1209.37 2017.53,1209.37 2018.11,1209.37 2018.7,1209.37 2019.28,1209.37 2019.87,1209.37 2020.46,1209.37 2021.04,1209.37 2021.63,1209.37 2022.22,1209.37 2022.8,1209.37 2023.39,1209.37 2023.98,1209.37 2024.56,1209.37 2025.15,1209.37 2025.73,1209.37 2026.32,1209.37 2026.91,1209.37 2027.49,1209.37 2028.08,1209.37 2028.67,1209.37 2029.25,1209.37 2029.84,1209.37 2030.43,1209.37 2031.01,1209.37 2031.6,1209.37 2032.19,1209.37 2032.77,1209.37 2033.36,1209.37 2033.94,1209.37 2034.53,1209.37 2035.12,1209.37 2035.7,1209.37 2036.29,1209.37 2036.88,1209.37 2037.46,1209.37 2038.05,1209.37 2038.64,1209.37 2039.22,1209.37 2039.81,1209.37 2040.4,1209.37 2040.98,1209.37 2041.57,1209.37 2042.15,1209.37 2042.74,1209.37 2043.33,1209.37 2043.91,1209.37 2044.5,1209.37 2045.09,1209.37 2045.67,1209.37 2046.26,1209.37 2046.85,1209.37 2047.43,1209.37 2048.02,1209.37 2048.6,1209.37 2049.19,1209.37 2049.78,1209.37 2050.36,1209.37 2050.95,1209.37 2051.54,1209.37 2052.12,1209.37 2052.71,1209.37 2053.3,1209.37 2053.88,1209.37 2054.47,1209.37 2055.06,1209.37 2055.64,1209.37 2056.23,1209.37 2056.81,1209.37 2057.4,1209.37 2057.99,1209.37 2058.57,1209.37 2059.16,1209.37 2059.75,1209.37 2060.33,1209.37 2060.92,1209.37 2061.51,1209.37 2062.09,1209.37 2062.68,1209.37 2063.27,1209.37 2063.85,1209.37 2064.44,1209.37 2065.02,1209.37 2065.61,1209.37 2066.2,1209.37 2066.78,1209.37 2067.37,1209.37 2067.96,1209.37 2068.54,1209.37 2069.13,1209.37 2069.72,1209.37 2070.3,1209.37 2070.89,1209.37 2071.48,1209.37 2072.06,1209.37 2072.65,1209.37 2073.23,1209.37 2073.82,1209.37 2074.41,1209.37 2074.99,1209.37 2075.58,1209.37 2076.17,1209.37 2076.75,1209.37 2077.34,1209.37 2077.93,1209.37 2078.51,1209.37 2079.1,1209.37 2079.68,1209.37 2080.27,1209.37 2080.86,1209.37 2081.44,1209.37 2082.03,1209.37 2082.62,1209.37 2083.2,1209.37 2083.79,1209.37 2084.38,1209.37 2084.96,1209.37 2085.55,1209.37 2086.14,1209.37 2086.72,1209.37 2087.31,1209.37 2087.89,1209.37 2088.48,1209.37 2089.07,1209.37 2089.65,1209.37 2090.24,1209.37 2090.83,1209.37 2091.41,1209.37 2092,1209.37 2092.59,1209.37 2093.17,1209.37 2093.76,1209.37 2094.35,1209.37 2094.93,1209.37 2095.52,1209.37 2096.1,1209.37 2096.69,1209.37 2097.28,1209.37 2097.86,1209.37 2098.45,1209.37 2099.04,1209.37 2099.62,1209.37 2100.21,1209.37 2100.8,1209.37 2101.38,1209.37 2101.97,1209.37 2102.55,1209.37 2103.14,1209.37 2103.73,1209.37 2104.31,1209.37 2104.9,1209.37 2105.49,1209.37 2106.07,1209.37 2106.66,1209.37 2107.25,1209.37 2107.83,1209.37 2108.42,1209.37 2109.01,1209.37 2109.59,1209.37 2110.18,1209.37 2110.76,1209.37 2111.35,1209.37 2111.94,1209.37 2112.52,1209.37 2113.11,1209.37 2113.7,1209.37 2114.28,1209.37 2114.87,1209.37 2115.46,1209.37 2116.04,1209.37 2116.63,1209.37 2117.22,1209.37 2117.8,1209.37 2118.39,1209.37 2118.97,1209.37 2119.56,1209.37 2120.15,1209.37 2120.73,1209.37 2121.32,1209.37 2121.91,1209.37 2122.49,1209.37 2123.08,1209.37 2123.67,1209.37 2124.25,1209.37 2124.84,1209.37 2125.42,1209.37 2126.01,1209.37 2126.6,1209.37 2127.18,1209.37 2127.77,1209.37 2128.36,1209.37 2128.94,1209.37 2129.53,1209.37 2130.12,1209.37 2130.7,1209.37 2131.29,1209.37 2131.88,1209.37 2132.46,1209.37 2133.05,1209.37 2133.63,1209.37 2134.22,1209.37 2134.81,1209.37 2135.39,1209.37 2135.98,1209.37 2136.57,1209.37 2137.15,1209.37 2137.74,1209.37 2138.33,1209.37 2138.91,1209.37 2139.5,1209.37 2140.09,1209.37 2140.67,1209.37 2141.26,1209.37 2141.84,1209.37 2142.43,1209.37 2143.02,1209.37 2143.6,1209.37 2144.19,1209.37 2144.78,1209.37 2145.36,1209.37 2145.95,1209.37 2146.54,1209.37 2147.12,1209.37 2147.71,1209.37 2148.3,1209.37 2148.88,1209.37 2149.47,1209.37 2150.05,1209.37 2150.64,1209.37 2151.23,1209.37 2151.81,1209.37 2152.4,1209.37 2152.99,1209.37 2153.57,1209.37 2154.16,1209.37 2154.75,1209.37 2155.33,1209.37 2155.92,1209.37 2156.5,1209.37 2157.09,1209.37 2157.68,1209.37 2158.26,1209.37 \"/>\n<path clip-path=\"url(#clip162)\" d=\"M986.025 1209.24 L986.612 1209.24 L987.198 1209.24 L987.785 1209.24 L988.371 1209.24 L988.957 1209.24 L989.544 1209.24 L990.13 1209.24 L990.717 1209.24 L991.303 1209.24 L991.889 1209.24 L992.476 1209.24 L993.062 1209.24 L993.649 1209.24 L994.235 1209.24 L994.822 1209.24 L995.408 1209.24 L995.994 1209.24 L996.581 1209.24 L997.167 1209.24 L997.754 1209.24 L998.34 1209.24 L998.926 1209.24 L999.513 1209.24 L1000.1 1209.24 L1000.69 1209.24 L1001.27 1209.24 L1001.86 1209.24 L1002.44 1209.24 L1003.03 1209.24 L1003.62 1209.24 L1004.2 1209.24 L1004.79 1209.24 L1005.38 1209.24 L1005.96 1209.24 L1006.55 1209.24 L1007.14 1209.24 L1007.72 1209.24 L1008.31 1209.24 L1008.9 1209.24 L1009.48 1209.24 L1010.07 1209.24 L1010.65 1209.24 L1011.24 1209.24 L1011.83 1209.24 L1012.41 1209.24 L1013 1209.24 L1013.59 1209.24 L1014.17 1209.24 L1014.76 1209.24 L1015.35 1209.24 L1015.93 1209.24 L1016.52 1209.24 L1017.11 1209.24 L1017.69 1209.24 L1018.28 1209.24 L1018.86 1209.24 L1019.45 1209.24 L1020.04 1209.24 L1020.62 1209.24 L1021.21 1209.24 L1021.8 1209.24 L1022.38 1209.24 L1022.97 1209.24 L1023.56 1209.24 L1024.14 1209.24 L1024.73 1209.24 L1025.32 1209.24 L1025.9 1209.24 L1026.49 1209.24 L1027.07 1209.24 L1027.66 1209.24 L1028.25 1209.24 L1028.83 1209.24 L1029.42 1209.24 L1030.01 1209.24 L1030.59 1209.24 L1031.18 1209.24 L1031.77 1209.24 L1032.35 1209.24 L1032.94 1209.24 L1033.52 1209.24 L1034.11 1209.24 L1034.7 1209.24 L1035.28 1209.24 L1035.87 1209.24 L1036.46 1209.24 L1037.04 1209.24 L1037.63 1209.24 L1038.22 1209.24 L1038.8 1209.24 L1039.39 1209.24 L1039.98 1209.24 L1040.56 1209.24 L1041.15 1209.24 L1041.73 1209.24 L1042.32 1209.24 L1042.91 1209.24 L1043.49 1209.24 L1044.08 1209.24 L1044.67 1209.24 L1045.25 1209.24 L1045.84 1209.24 L1046.43 1209.24 L1047.01 1209.24 L1047.6 1209.24 L1048.19 1209.24 L1048.77 1209.24 L1049.36 1209.24 L1049.94 1209.24 L1050.53 1209.24 L1051.12 1209.24 L1051.7 1209.24 L1052.29 1209.24 L1052.88 1209.24 L1053.46 1209.24 L1054.05 1209.24 L1054.64 1209.24 L1055.22 1209.24 L1055.81 1209.24 L1056.39 1209.24 L1056.98 1209.24 L1057.57 1209.24 L1058.15 1209.24 L1058.74 1209.24 L1059.33 1209.24 L1059.91 1209.24 L1060.5 1209.24 L1061.09 1209.24 L1061.67 1209.24 L1062.26 1209.24 L1062.85 1209.24 L1063.43 1209.24 L1064.02 1209.24 L1064.6 1209.24 L1065.19 1209.24 L1065.78 1209.24 L1066.36 1209.24 L1066.95 1209.24 L1067.54 1209.24 L1068.12 1209.24 L1068.71 1209.24 L1069.3 1209.24 L1069.88 1209.24 L1070.47 1209.24 L1071.06 1209.24 L1071.64 1209.24 L1072.23 1209.24 L1072.81 1209.24 L1073.4 1209.24 L1073.99 1209.24 L1074.57 1209.24 L1075.16 1209.24 L1075.75 1209.24 L1076.33 1209.24 L1076.92 1209.24 L1077.51 1209.24 L1078.09 1209.24 L1078.68 1209.24 L1079.26 1209.24 L1079.85 1209.24 L1080.44 1209.24 L1081.02 1209.24 L1081.61 1209.24 L1082.2 1209.24 L1082.78 1209.24 L1083.37 1209.24 L1083.96 1209.24 L1084.54 1209.24 L1085.13 1209.24 L1085.72 1209.24 L1086.3 1209.24 L1086.89 1209.24 L1087.47 1209.24 L1088.06 1209.24 L1088.65 1209.24 L1089.23 1209.24 L1089.82 1209.24 L1090.41 1209.24 L1090.99 1209.24 L1091.58 1209.24 L1092.17 1209.24 L1092.75 1209.24 L1093.34 1209.24 L1093.93 1209.24 L1094.51 1209.24 L1095.1 1209.24 L1095.68 1209.24 L1096.27 1209.24 L1096.86 1209.24 L1097.44 1209.24 L1098.03 1209.24 L1098.62 1209.24 L1099.2 1209.24 L1099.79 1209.24 L1100.38 1209.24 L1100.96 1209.24 L1101.55 1209.24 L1102.14 1209.24 L1102.72 1209.24 L1103.31 1209.24 L1103.89 1209.24 L1104.48 1209.24 L1105.07 1209.24 L1105.65 1209.24 L1106.24 1209.24 L1106.83 1209.24 L1107.41 1209.24 L1108 1209.24 L1108.59 1209.24 L1109.17 1209.24 L1109.76 1209.24 L1110.34 1209.24 L1110.93 1209.24 L1111.52 1209.24 L1112.1 1209.24 L1112.69 1209.24 L1113.28 1209.24 L1113.86 1209.24 L1114.45 1209.24 L1115.04 1209.24 L1115.62 1209.24 L1116.21 1209.24 L1116.8 1209.24 L1117.38 1209.24 L1117.97 1209.24 L1118.55 1209.24 L1119.14 1209.24 L1119.73 1209.24 L1120.31 1209.24 L1120.9 1209.24 L1121.49 1209.24 L1122.07 1209.24 L1122.66 1209.24 L1123.25 1209.24 L1123.83 1209.24 L1124.42 1209.24 L1125.01 1209.24 L1125.59 1209.24 L1126.18 1209.24 L1126.76 1209.24 L1127.35 1209.24 L1127.94 1209.24 L1128.52 1209.24 L1129.11 1209.24 L1129.7 1209.24 L1130.28 1209.24 L1130.87 1209.24 L1131.46 1209.24 L1132.04 1209.24 L1132.63 1209.24 L1133.21 1209.24 L1133.8 1209.24 L1134.39 1209.24 L1134.97 1209.24 L1135.56 1209.24 L1136.15 1209.24 L1136.73 1209.24 L1137.32 1209.24 L1137.91 1209.24 L1138.49 1209.24 L1139.08 1209.24 L1139.67 1209.24 L1140.25 1209.24 L1140.84 1209.24 L1141.42 1209.24 L1142.01 1209.24 L1142.6 1209.24 L1143.18 1209.24 L1143.77 1209.24 L1144.36 1209.24 L1144.94 1209.24 L1145.53 1209.24 L1146.12 1209.24 L1146.7 1209.24 L1147.29 1209.24 L1147.88 1209.24 L1148.46 1209.24 L1149.05 1209.24 L1149.63 1209.24 L1150.22 1209.24 L1150.81 1209.24 L1151.39 1209.24 L1151.98 1209.24 L1152.57 1209.24 L1153.15 1209.24 L1153.74 1209.24 L1154.33 1209.24 L1154.91 1209.24 L1155.5 1209.24 L1156.09 1209.24 L1156.67 1209.24 L1157.26 1209.24 L1157.84 1209.24 L1158.43 1209.24 L1159.02 1209.24 L1159.6 1209.24 L1160.19 1209.24 L1160.78 1209.24 L1161.36 1209.24 L1161.95 1209.24 L1162.54 1209.24 L1163.12 1209.24 L1163.71 1209.24 L1164.29 1209.24 L1164.88 1209.24 L1165.47 1209.24 L1166.05 1209.24 L1166.64 1209.24 L1167.23 1209.24 L1167.81 1209.24 L1168.4 1209.24 L1168.99 1209.24 L1169.57 1209.24 L1170.16 1209.24 L1170.75 1209.24 L1171.33 1209.24 L1171.92 1209.24 L1172.5 1209.24 L1173.09 1209.24 L1173.68 1209.24 L1174.26 1209.24 L1174.85 1209.24 L1175.44 1209.24 L1176.02 1209.24 L1176.61 1209.24 L1177.2 1209.24 L1177.78 1209.24 L1178.37 1209.24 L1178.96 1209.24 L1179.54 1209.24 L1180.13 1209.24 L1180.71 1209.24 L1181.3 1209.24 L1181.89 1209.24 L1182.47 1209.24 L1183.06 1209.24 L1183.65 1209.24 L1184.23 1209.24 L1184.82 1209.24 L1185.41 1209.24 L1185.99 1209.24 L1186.58 1209.24 L1187.16 1209.24 L1187.75 1209.24 L1188.34 1209.24 L1188.92 1209.24 L1189.51 1209.24 L1190.1 1209.24 L1190.68 1209.24 L1191.27 1209.24 L1191.86 1209.24 L1192.44 1209.24 L1193.03 1209.24 L1193.62 1209.24 L1194.2 1209.24 L1194.79 1209.24 L1195.37 1209.24 L1195.96 1209.24 L1196.55 1209.24 L1197.13 1209.24 L1197.72 1209.24 L1198.31 1209.24 L1198.89 1209.24 L1199.48 1209.24 L1200.07 1209.24 L1200.65 1209.24 L1201.24 1209.24 L1201.83 1209.24 L1202.41 1209.24 L1203 1209.24 L1203.58 1209.24 L1204.17 1209.24 L1204.76 1209.24 L1205.34 1209.24 L1205.93 1209.24 L1206.52 1209.24 L1207.1 1209.24 L1207.69 1209.24 L1208.28 1209.24 L1208.86 1209.24 L1209.45 1209.24 L1210.03 1209.24 L1210.62 1209.24 L1211.21 1209.24 L1211.79 1209.24 L1212.38 1209.24 L1212.97 1209.24 L1213.55 1209.24 L1214.14 1209.24 L1214.73 1209.24 L1215.31 1209.24 L1215.9 1209.24 L1216.49 1209.24 L1217.07 1209.24 L1217.66 1209.24 L1218.24 1209.24 L1218.83 1209.24 L1219.42 1209.24 L1220 1209.24 L1220.59 1209.24 L1221.18 1209.24 L1221.76 1209.24 L1222.35 1209.24 L1222.94 1209.24 L1223.52 1209.24 L1224.11 1209.24 L1224.7 1209.24 L1225.28 1209.24 L1225.87 1209.24 L1226.45 1209.24 L1227.04 1209.24 L1227.63 1209.24 L1228.21 1209.24 L1228.8 1209.24 L1229.39 1209.24 L1229.97 1209.24 L1230.56 1209.24 L1231.15 1209.24 L1231.73 1209.24 L1232.32 1209.24 L1232.91 1209.24 L1233.49 1209.24 L1234.08 1209.24 L1234.66 1209.24 L1235.25 1209.24 L1235.84 1209.24 L1236.42 1209.24 L1237.01 1209.24 L1237.6 1209.24 L1238.18 1209.24 L1238.77 1209.24 L1239.36 1209.24 L1239.94 1209.24 L1240.53 1209.24 L1241.11 1209.24 L1241.7 1209.24 L1242.29 1209.24 L1242.87 1209.24 L1243.46 1209.24 L1244.05 1209.24 L1244.63 1209.24 L1245.22 1209.24 L1245.81 1209.24 L1246.39 1209.24 L1246.98 1209.24 L1247.57 1209.24 L1248.15 1209.24 L1248.74 1209.24 L1249.32 1209.24 L1249.91 1209.24 L1250.5 1209.24 L1251.08 1209.24 L1251.67 1209.24 L1252.26 1209.24 L1252.84 1209.24 L1253.43 1209.24 L1254.02 1209.24 L1254.6 1209.24 L1255.19 1209.24 L1255.78 1209.24 L1256.36 1209.24 L1256.95 1209.24 L1257.53 1209.24 L1258.12 1209.24 L1258.71 1209.24 L1259.29 1209.24 L1259.88 1209.24 L1260.47 1209.24 L1261.05 1209.24 L1261.64 1209.24 L1262.23 1209.24 L1262.81 1209.24 L1263.4 1209.24 L1263.98 1209.24 L1264.57 1209.24 L1265.16 1209.24 L1265.74 1209.24 L1266.33 1209.24 L1266.92 1209.24 L1267.5 1209.24 L1268.09 1209.24 L1268.68 1209.24 L1269.26 1209.24 L1269.85 1209.24 L1270.44 1209.24 L1271.02 1209.24 L1271.61 1209.24 L1272.19 1209.24 L1272.78 1209.24 L1273.37 1209.24 L1273.95 1209.24 L1274.54 1209.24 L1275.13 1209.24 L1275.71 1209.24 L1276.3 1209.24 L1276.89 1209.24 L1277.47 1209.24 L1278.06 1209.24 L1278.65 1209.24 L1279.23 1209.24 L1279.82 1209.24 L1280.4 1209.24 L1280.99 1209.24 L1281.58 1209.24 L1282.16 1209.24 L1282.75 1209.24 L1283.34 1209.24 L1283.92 1209.24 L1284.51 1209.24 L1285.1 1209.24 L1285.68 1209.24 L1286.27 1209.24 L1286.86 1209.24 L1287.44 1209.24 L1288.03 1209.24 L1288.61 1209.24 L1289.2 1209.24 L1289.79 1209.24 L1290.37 1209.24 L1290.96 1209.24 L1291.55 1209.24 L1292.13 1209.24 L1292.72 1209.24 L1293.31 1209.24 L1293.89 1209.24 L1294.48 1209.24 L1295.06 1209.24 L1295.65 1209.24 L1296.24 1209.24 L1296.82 1209.24 L1297.41 1209.24 L1298 1209.24 L1298.58 1209.24 L1299.17 1209.24 L1299.76 1209.24 L1300.34 1209.24 L1300.93 1209.24 L1301.52 1209.24 L1302.1 1209.24 L1302.69 1209.24 L1303.27 1209.24 L1303.86 1209.24 L1304.45 1209.24 L1305.03 1209.24 L1305.62 1209.24 L1306.21 1209.24 L1306.79 1209.24 L1307.38 1209.24 L1307.97 1209.24 L1308.55 1209.24 L1309.14 1209.24 L1309.73 1209.24 L1310.31 1209.24 L1310.9 1209.24 L1311.48 1209.24 L1312.07 1209.24 L1312.66 1209.24 L1313.24 1209.24 L1313.83 1209.24 L1314.42 1209.24 L1315 1209.24 L1315.59 1209.24 L1316.18 1209.24 L1316.76 1209.24 L1317.35 1209.24 L1317.93 1209.24 L1318.52 1209.24 L1319.11 1209.24 L1319.69 1209.24 L1320.28 1209.24 L1320.87 1209.24 L1321.45 1209.24 L1322.04 1209.24 L1322.63 1209.24 L1323.21 1209.24 L1323.8 1209.24 L1324.39 1209.24 L1324.97 1209.24 L1325.56 1209.24 L1326.14 1209.24 L1326.73 1209.24 L1327.32 1209.24 L1327.9 1209.24 L1328.49 1209.24 L1329.08 1209.24 L1329.66 1209.24 L1330.25 1209.24 L1330.84 1209.24 L1331.42 1209.24 L1332.01 1209.24 L1332.6 1209.24 L1333.18 1209.24 L1333.77 1209.24 L1334.35 1209.24 L1334.94 1209.24 L1335.53 1209.24 L1336.11 1209.24 L1336.7 1209.24 L1337.29 1209.24 L1337.87 1209.24 L1338.46 1209.24 L1339.05 1209.24 L1339.63 1209.24 L1340.22 1209.24 L1340.8 1209.24 L1341.39 1209.24 L1341.98 1209.24 L1342.56 1209.24 L1343.15 1209.24 L1343.74 1209.24 L1344.32 1209.24 L1344.91 1209.24 L1345.5 1209.24 L1346.08 1209.24 L1346.67 1209.24 L1347.26 1209.24 L1347.84 1209.24 L1348.43 1209.24 L1349.01 1209.24 L1349.6 1209.24 L1350.19 1209.24 L1350.77 1209.24 L1351.36 1209.24 L1351.95 1209.24 L1352.53 1209.24 L1353.12 1209.24 L1353.71 1209.24 L1354.29 1209.24 L1354.88 1209.24 L1355.47 1209.24 L1356.05 1209.24 L1356.64 1209.24 L1357.22 1209.24 L1357.81 1209.24 L1358.4 1209.24 L1358.98 1209.24 L1359.57 1209.24 L1360.16 1209.24 L1360.74 1209.24 L1361.33 1209.24 L1361.92 1209.24 L1362.5 1209.24 L1363.09 1209.24 L1363.68 1209.24 L1364.26 1209.24 L1364.85 1209.24 L1365.43 1209.24 L1366.02 1209.24 L1366.61 1209.24 L1367.19 1209.24 L1367.78 1209.24 L1368.37 1209.24 L1368.95 1209.24 L1369.54 1209.24 L1370.13 1209.24 L1370.71 1209.24 L1371.3 1209.24 L1371.88 1209.24 L1372.47 1209.24 L1373.06 1209.24 L1373.64 1209.24 L1374.23 1209.24 L1374.82 1209.24 L1375.4 1209.24 L1375.99 1209.24 L1376.58 1209.24 L1377.16 1209.24 L1377.75 1209.24 L1378.34 1209.24 L1378.92 1209.24 L1379.51 1209.24 L1380.09 1209.24 L1380.68 1209.24 L1381.27 1209.24 L1381.85 1209.24 L1382.44 1209.24 L1383.03 1209.24 L1383.61 1209.24 L1384.2 1209.24 L1384.79 1209.24 L1385.37 1209.24 L1385.96 1209.24 L1386.55 1209.24 L1387.13 1209.24 L1387.72 1209.24 L1388.3 1209.24 L1388.89 1209.24 L1389.48 1209.24 L1390.06 1209.24 L1390.65 1209.24 L1391.24 1209.24 L1391.82 1209.24 L1392.41 1209.24 L1393 1209.24 L1393.58 1209.24 L1394.17 1209.24 L1394.75 1209.24 L1395.34 1209.24 L1395.93 1209.24 L1396.51 1209.24 L1397.1 1209.24 L1397.69 1209.24 L1398.27 1209.24 L1398.86 1209.24 L1399.45 1209.24 L1400.03 1209.24 L1400.62 1209.24 L1401.21 1209.24 L1401.79 1209.24 L1402.38 1209.24 L1402.96 1209.24 L1403.55 1209.24 L1404.14 1209.24 L1404.72 1209.24 L1405.31 1209.24 L1405.9 1209.24 L1406.48 1209.24 L1407.07 1209.24 L1407.66 1209.24 L1408.24 1209.24 L1408.83 1209.24 L1409.42 1209.24 L1410 1209.24 L1410.59 1209.24 L1411.17 1209.24 L1411.76 1209.24 L1412.35 1209.24 L1412.93 1209.24 L1413.52 1209.24 L1414.11 1209.24 L1414.69 1209.24 L1415.28 1209.24 L1415.87 1209.24 L1416.45 1209.24 L1417.04 1209.24 L1417.63 1209.24 L1418.21 1209.24 L1418.8 1209.24 L1419.38 1209.24 L1419.97 1209.24 L1420.56 1209.24 L1421.14 1209.24 L1421.73 1209.24 L1422.32 1209.24 L1422.9 1209.24 L1423.49 1209.24 L1424.08 1209.24 L1424.66 1209.24 L1425.25 1209.24 L1425.83 1209.24 L1426.42 1209.24 L1427.01 1209.24 L1427.59 1209.24 L1428.18 1209.24 L1428.77 1209.24 L1429.35 1209.24 L1429.94 1209.24 L1430.53 1209.24 L1431.11 1209.24 L1431.7 1209.24 L1432.29 1209.24 L1432.87 1209.24 L1433.46 1209.24 L1434.04 1209.24 L1434.63 1209.24 L1435.22 1209.24 L1435.8 1209.24 L1436.39 1209.24 L1436.98 1209.24 L1437.56 1209.24 L1438.15 1209.24 L1438.74 1209.24 L1439.32 1209.24 L1439.91 1209.24 L1440.5 1209.24 L1441.08 1209.24 L1441.67 1209.24 L1442.25 1209.24 L1442.84 1209.24 L1443.43 1209.24 L1444.01 1209.24 L1444.6 1209.24 L1445.19 1209.24 L1445.77 1209.24 L1446.36 1209.24 L1446.95 1209.24 L1447.53 1209.24 L1448.12 1209.24 L1448.7 1209.24 L1449.29 1209.24 L1449.88 1209.24 L1450.46 1209.24 L1451.05 1209.24 L1451.64 1209.24 L1452.22 1209.24 L1452.81 1209.24 L1453.4 1209.24 L1453.98 1209.24 L1454.57 1209.24 L1455.16 1209.24 L1455.74 1209.24 L1456.33 1209.24 L1456.91 1209.24 L1457.5 1209.24 L1458.09 1209.24 L1458.67 1209.24 L1459.26 1209.24 L1459.85 1209.24 L1460.43 1209.24 L1461.02 1209.24 L1461.61 1209.24 L1462.19 1209.24 L1462.78 1209.24 L1463.37 1209.24 L1463.95 1209.24 L1464.54 1209.24 L1465.12 1209.24 L1465.71 1209.24 L1466.3 1209.24 L1466.88 1209.24 L1467.47 1209.24 L1468.06 1209.24 L1468.64 1209.24 L1469.23 1209.24 L1469.82 1209.24 L1470.4 1209.24 L1470.99 1209.24 L1471.57 1209.24 L1472.16 1209.24 L1472.75 1209.24 L1473.33 1209.24 L1473.92 1209.24 L1474.51 1209.24 L1475.09 1209.24 L1475.68 1209.24 L1476.27 1209.24 L1476.85 1209.24 L1477.44 1209.24 L1478.03 1209.24 L1478.61 1209.24 L1479.2 1209.24 L1479.78 1209.24 L1480.37 1209.24 L1480.96 1209.24 L1481.54 1209.24 L1482.13 1209.24 L1482.72 1209.24 L1483.3 1209.24 L1483.89 1209.24 L1484.48 1209.24 L1485.06 1209.24 L1485.65 1209.24 L1486.24 1209.24 L1486.82 1209.24 L1487.41 1209.24 L1487.99 1209.24 L1488.58 1209.24 L1489.17 1209.24 L1489.75 1209.24 L1490.34 1209.24 L1490.93 1209.24 L1491.51 1209.24 L1492.1 1209.24 L1492.69 1209.24 L1493.27 1209.24 L1493.86 1209.24 L1494.45 1209.24 L1495.03 1209.24 L1495.62 1209.24 L1496.2 1209.24 L1496.79 1209.24 L1497.38 1209.24 L1497.96 1209.24 L1498.55 1209.24 L1499.14 1209.24 L1499.72 1209.24 L1500.31 1209.24 L1500.9 1209.24 L1501.48 1209.24 L1502.07 1209.24 L1502.65 1209.24 L1503.24 1209.24 L1503.83 1209.24 L1504.41 1209.24 L1505 1209.24 L1505.59 1209.24 L1506.17 1209.24 L1506.76 1209.24 L1507.35 1209.24 L1507.93 1209.24 L1508.52 1209.24 L1509.11 1209.24 L1509.69 1209.24 L1510.28 1209.24 L1510.86 1209.24 L1511.45 1209.24 L1512.04 1209.24 L1512.62 1209.24 L1513.21 1209.24 L1513.8 1209.24 L1514.38 1209.24 L1514.97 1209.24 L1515.56 1209.24 L1516.14 1209.24 L1516.73 1209.24 L1517.32 1209.24 L1517.9 1209.24 L1518.49 1209.24 L1519.07 1209.24 L1519.66 1209.24 L1520.25 1209.24 L1520.83 1209.24 L1521.42 1209.24 L1522.01 1209.24 L1522.59 1209.24 L1523.18 1209.24 L1523.77 1209.24 L1524.35 1209.24 L1524.94 1209.24 L1525.52 1209.24 L1526.11 1209.24 L1526.7 1209.24 L1527.28 1209.24 L1527.87 1209.24 L1528.46 1209.24 L1529.04 1209.24 L1529.63 1209.24 L1530.22 1209.24 L1530.8 1209.24 L1531.39 1209.24 L1531.98 1209.24 L1532.56 1209.24 L1533.15 1209.24 L1533.73 1209.24 L1534.32 1209.24 L1534.91 1209.24 L1535.49 1209.24 L1536.08 1209.24 L1536.67 1209.24 L1537.25 1209.24 L1537.84 1209.24 L1538.43 1209.24 L1539.01 1209.24 L1539.6 1209.24 L1540.19 1209.24 L1540.77 1209.24 L1541.36 1209.24 L1541.94 1209.24 L1542.53 1209.24 L1543.12 1209.24 L1543.7 1209.24 L1544.29 1209.24 L1544.88 1209.24 L1545.46 1209.24 L1546.05 1209.24 L1546.64 1209.24 L1547.22 1209.24 L1547.81 1209.24 L1548.4 1209.24 L1548.98 1209.24 L1549.57 1209.24 L1550.15 1209.24 L1550.74 1209.24 L1551.33 1209.24 L1551.91 1209.24 L1552.5 1209.24 L1553.09 1209.24 L1553.67 1209.24 L1554.26 1209.24 L1554.85 1209.24 L1555.43 1209.24 L1556.02 1209.24 L1556.6 1209.24 L1557.19 1209.24 L1557.78 1209.24 L1558.36 1209.24 L1558.95 1209.24 L1559.54 1209.24 L1560.12 1209.24 L1560.71 1209.24 L1561.3 1209.24 L1561.88 1209.24 L1562.47 1209.24 L1563.06 1209.24 L1563.64 1209.24 L1564.23 1209.24 L1564.81 1209.24 L1565.4 1209.24 L1565.99 1209.24 L1566.57 1209.24 L1567.16 1209.24 L1567.75 1209.24 L1568.33 1209.24 L1568.92 1209.24 L1569.51 1209.24 L1570.09 1209.24 L1570.68 1209.24 L1571.27 1209.24 L1571.85 1209.24 L1572.44 1209.24 L1573.02 1209.24 L1573.61 1209.24 L1574.2 1209.24 L1574.78 1209.24 L1575.37 1209.24 L1575.96 1209.24 L1576.54 1209.24 L1577.13 1209.24 L1577.72 1209.24 L1578.3 1209.24 L1578.89 1209.24 L1579.47 1209.24 L1580.06 1209.24 L1580.65 1209.24 L1581.23 1209.24 L1581.82 1209.24 L1582.41 1209.24 L1582.99 1209.24 L1583.58 1209.24 L1584.17 1209.24 L1584.75 1209.24 L1585.34 1209.24 L1585.93 1209.24 L1586.51 1209.24 L1587.1 1209.24 L1587.68 1209.24 L1588.27 1209.24 L1588.86 1209.24 L1589.44 1209.24 L1590.03 1209.24 L1590.62 1209.24 L1591.2 1209.24 L1591.79 1209.24 L1592.38 1209.24 L1592.96 1209.24 L1593.55 1209.24 L1594.14 1209.24 L1594.72 1209.24 L1595.31 1209.24 L1595.89 1209.24 L1596.48 1209.24 L1597.07 1209.24 L1597.65 1209.24 L1598.24 1209.24 L1598.83 1209.24 L1599.41 1209.24 L1600 1209.24 L1600.59 1209.24 L1601.17 1209.24 L1601.76 1209.24 L1602.34 1209.24 L1602.93 1209.24 L1603.52 1209.24 L1604.1 1209.24 L1604.69 1209.24 L1605.28 1209.24 L1605.86 1209.24 L1606.45 1209.24 L1607.04 1209.24 L1607.62 1209.24 L1608.21 1209.24 L1608.8 1209.24 L1609.38 1209.24 L1609.97 1209.24 L1610.55 1209.24 L1611.14 1209.24 L1611.73 1209.24 L1612.31 1209.24 L1612.9 1209.24 L1613.49 1209.24 L1614.07 1209.24 L1614.66 1209.24 L1615.25 1209.24 L1615.83 1209.24 L1616.42 1209.24 L1617.01 1209.24 L1617.59 1209.24 L1618.18 1209.24 L1618.76 1209.24 L1619.35 1209.24 L1619.94 1209.24 L1620.52 1209.24 L1621.11 1209.24 L1621.7 1209.24 L1622.28 1209.24 L1622.87 1209.24 L1623.46 1209.24 L1624.04 1209.24 L1624.63 1209.24 L1625.22 1209.24 L1625.8 1209.24 L1626.39 1209.24 L1626.97 1209.24 L1627.56 1209.24 L1628.15 1209.24 L1628.73 1209.24 L1629.32 1209.24 L1629.91 1209.24 L1630.49 1209.24 L1631.08 1209.24 L1631.67 1209.24 L1632.25 1209.24 L1632.84 1209.24 L1633.42 1209.24 L1634.01 1209.24 L1634.6 1209.24 L1635.18 1209.24 L1635.77 1209.24 L1636.36 1209.24 L1636.94 1209.24 L1637.53 1209.24 L1638.12 1209.24 L1638.7 1209.24 L1639.29 1209.24 L1639.88 1209.24 L1640.46 1209.24 L1641.05 1209.24 L1641.63 1209.24 L1642.22 1209.24 L1642.81 1209.24 L1643.39 1209.24 L1643.98 1209.24 L1644.57 1209.24 L1645.15 1209.24 L1645.74 1209.24 L1646.33 1209.24 L1646.91 1209.24 L1647.5 1209.24 L1648.09 1209.24 L1648.67 1209.24 L1649.26 1209.24 L1649.84 1209.24 L1650.43 1209.24 L1651.02 1209.24 L1651.6 1209.24 L1652.19 1209.24 L1652.78 1209.24 L1653.36 1209.24 L1653.95 1209.24 L1654.54 1209.24 L1655.12 1209.24 L1655.71 1209.24 L1656.29 1209.24 L1656.88 1209.24 L1657.47 1209.24 L1658.05 1209.24 L1658.64 1209.24 L1659.23 1209.24 L1659.81 1209.24 L1660.4 1209.24 L1660.99 1209.24 L1661.57 1209.24 L1662.16 1209.24 L1662.75 1209.24 L1663.33 1209.24 L1663.92 1209.24 L1664.5 1209.24 L1665.09 1209.24 L1665.68 1209.24 L1666.26 1209.24 L1666.85 1209.24 L1667.44 1209.24 L1668.02 1209.24 L1668.61 1209.24 L1669.2 1209.24 L1669.78 1209.24 L1670.37 1209.24 L1670.96 1209.24 L1671.54 1209.24 L1672.13 1209.24 L1672.71 1209.24 L1673.3 1209.24 L1673.89 1209.24 L1674.47 1209.24 L1675.06 1209.24 L1675.65 1209.24 L1676.23 1209.24 L1676.82 1209.24 L1677.41 1209.24 L1677.99 1209.24 L1678.58 1209.24 L1679.17 1209.24 L1679.75 1209.24 L1680.34 1209.24 L1680.92 1209.24 L1681.51 1209.24 L1682.1 1209.24 L1682.68 1209.24 L1683.27 1209.24 L1683.86 1209.24 L1684.44 1209.24 L1685.03 1209.24 L1685.62 1209.24 L1686.2 1209.24 L1686.79 1209.24 L1687.37 1209.24 L1687.96 1209.24 L1688.55 1209.24 L1689.13 1209.24 L1689.72 1209.24 L1690.31 1209.24 L1690.89 1209.24 L1691.48 1209.24 L1692.07 1209.24 L1692.65 1209.24 L1693.24 1209.24 L1693.83 1209.24 L1694.41 1209.24 L1695 1209.24 L1695.58 1209.24 L1696.17 1209.24 L1696.76 1209.24 L1697.34 1209.24 L1697.93 1209.24 L1698.52 1209.24 L1699.1 1209.24 L1699.69 1209.24 L1700.28 1209.24 L1700.86 1209.24 L1701.45 1209.24 L1702.04 1209.24 L1702.62 1209.24 L1703.21 1209.24 L1703.79 1209.24 L1704.38 1209.24 L1704.97 1209.24 L1705.55 1209.24 L1706.14 1209.24 L1706.73 1209.24 L1707.31 1209.24 L1707.9 1209.24 L1708.49 1209.24 L1709.07 1209.24 L1709.66 1209.24 L1710.24 1209.24 L1710.83 1209.24 L1711.42 1209.24 L1712 1209.24 L1712.59 1209.24 L1713.18 1209.24 L1713.76 1209.24 L1714.35 1209.24 L1714.94 1209.24 L1715.52 1209.24 L1716.11 1209.24 L1716.7 1209.24 L1717.28 1209.24 L1717.87 1209.24 L1718.45 1209.24 L1719.04 1209.24 L1719.63 1209.24 L1720.21 1209.24 L1720.8 1209.24 L1721.39 1209.24 L1721.97 1209.24 L1722.56 1209.24 L1723.15 1209.24 L1723.73 1209.24 L1724.32 1209.24 L1724.91 1209.24 L1725.49 1209.24 L1726.08 1209.24 L1726.66 1209.24 L1727.25 1209.24 L1727.84 1209.24 L1728.42 1209.24 L1729.01 1209.24 L1729.6 1209.24 L1730.18 1209.24 L1730.77 1209.24 L1731.36 1209.24 L1731.94 1209.24 L1732.53 1209.24 L1733.11 1209.24 L1733.7 1209.24 L1734.29 1209.24 L1734.87 1209.24 L1735.46 1209.24 L1736.05 1209.24 L1736.63 1209.24 L1737.22 1209.24 L1737.81 1209.24 L1738.39 1209.24 L1738.98 1209.24 L1739.57 1209.24 L1740.15 1209.24 L1740.74 1209.24 L1741.32 1209.24 L1741.91 1209.24 L1742.5 1209.24 L1743.08 1209.24 L1743.67 1209.24 L1744.26 1209.24 L1744.84 1209.24 L1745.43 1209.24 L1746.02 1209.24 L1746.6 1209.24 L1747.19 1209.24 L1747.78 1209.24 L1748.36 1209.24 L1748.95 1209.24 L1749.53 1209.24 L1750.12 1209.24 L1750.71 1209.24 L1751.29 1209.24 L1751.88 1209.24 L1752.47 1209.24 L1753.05 1209.24 L1753.64 1209.24 L1754.23 1209.24 L1754.81 1209.24 L1755.4 1209.24 L1755.99 1209.24 L1756.57 1209.24 L1757.16 1209.24 L1757.74 1209.24 L1758.33 1209.24 L1758.92 1209.24 L1759.5 1209.24 L1760.09 1209.24 L1760.68 1209.24 L1761.26 1209.24 L1761.85 1209.24 L1762.44 1209.24 L1763.02 1209.24 L1763.61 1209.24 L1764.19 1209.24 L1764.78 1209.24 L1765.37 1209.24 L1765.95 1209.24 L1766.54 1209.24 L1767.13 1209.24 L1767.71 1209.24 L1768.3 1209.24 L1768.89 1209.24 L1769.47 1209.24 L1770.06 1209.24 L1770.65 1209.24 L1771.23 1209.24 L1771.82 1209.24 L1772.4 1209.24 L1772.99 1209.24 L1773.58 1209.24 L1774.16 1209.24 L1774.75 1209.24 L1775.34 1209.24 L1775.92 1209.24 L1776.51 1209.24 L1777.1 1209.24 L1777.68 1209.24 L1778.27 1209.24 L1778.86 1209.24 L1779.44 1209.24 L1780.03 1209.24 L1780.61 1209.24 L1781.2 1209.24 L1781.79 1209.24 L1782.37 1209.24 L1782.96 1209.24 L1783.55 1209.24 L1784.13 1209.24 L1784.72 1209.24 L1785.31 1209.24 L1785.89 1209.24 L1786.48 1209.24 L1787.06 1209.24 L1787.65 1209.24 L1788.24 1209.24 L1788.82 1209.24 L1789.41 1209.24 L1790 1209.24 L1790.58 1209.24 L1791.17 1209.24 L1791.76 1209.24 L1792.34 1209.24 L1792.93 1209.24 L1793.52 1209.24 L1794.1 1209.24 L1794.69 1209.24 L1795.27 1209.24 L1795.86 1209.24 L1796.45 1209.24 L1797.03 1209.24 L1797.62 1209.24 L1798.21 1209.24 L1798.79 1209.24 L1799.38 1209.24 L1799.97 1209.24 L1800.55 1209.24 L1801.14 1209.24 L1801.73 1209.24 L1802.31 1209.24 L1802.9 1209.24 L1803.48 1209.24 L1804.07 1209.24 L1804.66 1209.24 L1805.24 1209.24 L1805.83 1209.24 L1806.42 1209.24 L1807 1209.24 L1807.59 1209.24 L1808.18 1209.24 L1808.76 1209.24 L1809.35 1209.24 L1809.94 1209.24 L1810.52 1209.24 L1811.11 1209.24 L1811.69 1209.24 L1812.28 1209.24 L1812.87 1209.24 L1813.45 1209.24 L1814.04 1209.24 L1814.63 1209.24 L1815.21 1209.24 L1815.8 1209.24 L1816.39 1209.24 L1816.97 1209.24 L1817.56 1209.24 L1818.14 1209.24 L1818.73 1209.24 L1819.32 1209.24 L1819.9 1209.24 L1820.49 1209.24 L1821.08 1209.24 L1821.66 1209.24 L1822.25 1209.24 L1822.84 1209.24 L1823.42 1209.24 L1824.01 1209.24 L1824.6 1209.24 L1825.18 1209.24 L1825.77 1209.24 L1826.35 1209.24 L1826.94 1209.24 L1827.53 1209.24 L1828.11 1209.24 L1828.7 1209.24 L1829.29 1209.24 L1829.87 1209.24 L1830.46 1209.24 L1831.05 1209.24 L1831.63 1209.24 L1832.22 1209.24 L1832.81 1209.24 L1833.39 1209.24 L1833.98 1209.24 L1834.56 1209.24 L1835.15 1209.24 L1835.74 1209.24 L1836.32 1209.24 L1836.91 1209.24 L1837.5 1209.24 L1838.08 1209.24 L1838.67 1209.24 L1839.26 1209.24 L1839.84 1209.24 L1840.43 1209.24 L1841.01 1209.24 L1841.6 1209.24 L1842.19 1209.24 L1842.77 1209.24 L1843.36 1209.24 L1843.95 1209.24 L1844.53 1209.24 L1845.12 1209.24 L1845.71 1209.24 L1846.29 1209.24 L1846.88 1209.24 L1847.47 1209.24 L1848.05 1209.24 L1848.64 1209.24 L1849.22 1209.24 L1849.81 1209.24 L1850.4 1209.24 L1850.98 1209.24 L1851.57 1209.24 L1852.16 1209.24 L1852.74 1209.24 L1853.33 1209.24 L1853.92 1209.24 L1854.5 1209.24 L1855.09 1209.24 L1855.68 1209.24 L1856.26 1209.24 L1856.85 1209.24 L1857.43 1209.24 L1858.02 1209.24 L1858.61 1209.24 L1859.19 1209.24 L1859.78 1209.24 L1860.37 1209.24 L1860.95 1209.24 L1861.54 1209.24 L1862.13 1209.24 L1862.71 1209.24 L1863.3 1209.24 L1863.88 1209.24 L1864.47 1209.24 L1865.06 1209.24 L1865.64 1209.24 L1866.23 1209.24 L1866.82 1209.24 L1867.4 1209.24 L1867.99 1209.24 L1868.58 1209.24 L1869.16 1209.24 L1869.75 1209.24 L1870.34 1209.24 L1870.92 1209.24 L1871.51 1209.24 L1872.09 1209.24 L1872.68 1209.24 L1873.27 1209.24 L1873.85 1209.24 L1874.44 1209.24 L1875.03 1209.24 L1875.61 1209.24 L1876.2 1209.24 L1876.79 1209.24 L1877.37 1209.24 L1877.96 1209.24 L1878.55 1209.24 L1879.13 1209.24 L1879.72 1209.24 L1880.3 1209.24 L1880.89 1209.24 L1881.48 1209.24 L1882.06 1209.24 L1882.65 1209.24 L1883.24 1209.24 L1883.82 1209.24 L1884.41 1209.24 L1885 1209.24 L1885.58 1209.24 L1886.17 1209.24 L1886.76 1209.24 L1887.34 1209.24 L1887.93 1209.24 L1888.51 1209.24 L1889.1 1209.24 L1889.69 1209.24 L1890.27 1209.24 L1890.86 1209.24 L1891.45 1209.24 L1892.03 1209.24 L1892.62 1209.24 L1893.21 1209.24 L1893.79 1209.24 L1894.38 1209.24 L1894.96 1209.24 L1895.55 1209.24 L1896.14 1209.24 L1896.72 1209.24 L1897.31 1209.24 L1897.9 1209.24 L1898.48 1209.24 L1899.07 1209.24 L1899.66 1209.24 L1900.24 1209.24 L1900.83 1209.24 L1901.42 1209.24 L1902 1209.24 L1902.59 1209.24 L1903.17 1209.24 L1903.76 1209.24 L1904.35 1209.24 L1904.93 1209.24 L1905.52 1209.24 L1906.11 1209.24 L1906.69 1209.24 L1907.28 1209.24 L1907.87 1209.24 L1908.45 1209.24 L1909.04 1209.24 L1909.63 1209.24 L1910.21 1209.24 L1910.8 1209.24 L1911.38 1209.24 L1911.97 1209.24 L1912.56 1209.24 L1913.14 1209.24 L1913.73 1209.24 L1914.32 1209.24 L1914.9 1209.24 L1915.49 1209.24 L1916.08 1209.24 L1916.66 1209.24 L1917.25 1209.24 L1917.83 1209.24 L1918.42 1209.24 L1919.01 1209.24 L1919.59 1209.24 L1920.18 1209.24 L1920.77 1209.24 L1921.35 1209.24 L1921.94 1209.24 L1922.53 1209.24 L1923.11 1209.24 L1923.7 1209.24 L1924.29 1209.24 L1924.87 1209.24 L1925.46 1209.24 L1926.04 1209.24 L1926.63 1209.24 L1927.22 1209.24 L1927.8 1209.24 L1928.39 1209.24 L1928.98 1209.24 L1929.56 1209.24 L1930.15 1209.24 L1930.74 1209.24 L1931.32 1209.24 L1931.91 1209.24 L1932.5 1209.24 L1933.08 1209.24 L1933.67 1209.24 L1934.25 1209.24 L1934.84 1209.24 L1935.43 1209.24 L1936.01 1209.24 L1936.6 1209.24 L1937.19 1209.24 L1937.77 1209.24 L1938.36 1209.24 L1938.95 1209.24 L1939.53 1209.24 L1940.12 1209.24 L1940.71 1209.24 L1941.29 1209.24 L1941.88 1209.24 L1942.46 1209.24 L1943.05 1209.24 L1943.64 1209.24 L1944.22 1209.24 L1944.81 1209.24 L1945.4 1209.24 L1945.98 1209.24 L1946.57 1209.24 L1947.16 1209.24 L1947.74 1209.24 L1948.33 1209.24 L1948.91 1209.24 L1949.5 1209.24 L1950.09 1209.24 L1950.67 1209.24 L1951.26 1209.24 L1951.85 1209.24 L1952.43 1209.24 L1953.02 1209.24 L1953.61 1209.24 L1954.19 1209.24 L1954.78 1209.24 L1955.37 1209.24 L1955.95 1209.24 L1956.54 1209.24 L1957.12 1209.24 L1957.71 1209.24 L1958.3 1209.24 L1958.88 1209.24 L1959.47 1209.24 L1960.06 1209.24 L1960.64 1209.24 L1961.23 1209.24 L1961.82 1209.24 L1962.4 1209.24 L1962.99 1209.24 L1963.58 1209.24 L1964.16 1209.24 L1964.75 1209.24 L1965.33 1209.24 L1965.92 1209.24 L1966.51 1209.24 L1967.09 1209.24 L1967.68 1209.24 L1968.27 1209.24 L1968.85 1209.24 L1969.44 1209.24 L1970.03 1209.24 L1970.61 1209.24 L1971.2 1209.24 L1971.78 1209.24 L1972.37 1209.24 L1972.96 1209.24 L1973.54 1209.24 L1974.13 1209.24 L1974.72 1209.24 L1975.3 1209.24 L1975.89 1209.24 L1976.48 1209.24 L1977.06 1209.24 L1977.65 1209.24 L1978.24 1209.24 L1978.82 1209.24 L1979.41 1209.24 L1979.99 1209.24 L1980.58 1209.24 L1981.17 1209.24 L1981.75 1209.24 L1982.34 1209.24 L1982.93 1209.24 L1983.51 1209.24 L1984.1 1209.24 L1984.69 1209.24 L1985.27 1209.24 L1985.86 1209.24 L1986.45 1209.24 L1987.03 1209.24 L1987.62 1209.24 L1988.2 1209.24 L1988.79 1209.24 L1989.38 1209.24 L1989.96 1209.24 L1990.55 1209.24 L1991.14 1209.24 L1991.72 1209.24 L1992.31 1209.24 L1992.9 1209.24 L1993.48 1209.24 L1994.07 1209.24 L1994.65 1209.24 L1995.24 1209.24 L1995.83 1209.24 L1996.41 1209.24 L1997 1209.24 L1997.59 1209.24 L1998.17 1209.24 L1998.76 1209.24 L1999.35 1209.24 L1999.93 1209.24 L2000.52 1209.24 L2001.11 1209.24 L2001.69 1209.24 L2002.28 1209.24 L2002.86 1209.24 L2003.45 1209.24 L2004.04 1209.24 L2004.62 1209.24 L2005.21 1209.24 L2005.8 1209.24 L2006.38 1209.24 L2006.97 1209.24 L2007.56 1209.24 L2008.14 1209.24 L2008.73 1209.24 L2009.32 1209.24 L2009.9 1209.24 L2010.49 1209.24 L2011.07 1209.24 L2011.66 1209.24 L2012.25 1209.24 L2012.83 1209.24 L2013.42 1209.24 L2014.01 1209.24 L2014.59 1209.24 L2015.18 1209.24 L2015.77 1209.24 L2016.35 1209.24 L2016.94 1209.24 L2017.53 1209.24 L2018.11 1209.24 L2018.7 1209.24 L2019.28 1209.24 L2019.87 1209.24 L2020.46 1209.24 L2021.04 1209.24 L2021.63 1209.24 L2022.22 1209.24 L2022.8 1209.24 L2023.39 1209.24 L2023.98 1209.24 L2024.56 1209.24 L2025.15 1209.24 L2025.73 1209.24 L2026.32 1209.24 L2026.91 1209.24 L2027.49 1209.24 L2028.08 1209.24 L2028.67 1209.24 L2029.25 1209.24 L2029.84 1209.24 L2030.43 1209.24 L2031.01 1209.24 L2031.6 1209.24 L2032.19 1209.24 L2032.77 1209.24 L2033.36 1209.24 L2033.94 1209.24 L2034.53 1209.24 L2035.12 1209.24 L2035.7 1209.24 L2036.29 1209.24 L2036.88 1209.24 L2037.46 1209.24 L2038.05 1209.24 L2038.64 1209.24 L2039.22 1209.24 L2039.81 1209.24 L2040.4 1209.24 L2040.98 1209.24 L2041.57 1209.24 L2042.15 1209.24 L2042.74 1209.24 L2043.33 1209.24 L2043.91 1209.24 L2044.5 1209.24 L2045.09 1209.24 L2045.67 1209.24 L2046.26 1209.24 L2046.85 1209.24 L2047.43 1209.24 L2048.02 1209.24 L2048.6 1209.24 L2049.19 1209.24 L2049.78 1209.24 L2050.36 1209.24 L2050.95 1209.24 L2051.54 1209.24 L2052.12 1209.24 L2052.71 1209.24 L2053.3 1209.24 L2053.88 1209.24 L2054.47 1209.24 L2055.06 1209.24 L2055.64 1209.24 L2056.23 1209.24 L2056.81 1209.24 L2057.4 1209.24 L2057.99 1209.24 L2058.57 1209.24 L2059.16 1209.24 L2059.75 1209.24 L2060.33 1209.24 L2060.92 1209.24 L2061.51 1209.24 L2062.09 1209.24 L2062.68 1209.24 L2063.27 1209.24 L2063.85 1209.24 L2064.44 1209.24 L2065.02 1209.24 L2065.61 1209.24 L2066.2 1209.24 L2066.78 1209.24 L2067.37 1209.24 L2067.96 1209.24 L2068.54 1209.24 L2069.13 1209.24 L2069.72 1209.24 L2070.3 1209.24 L2070.89 1209.24 L2071.48 1209.24 L2072.06 1209.24 L2072.65 1209.24 L2073.23 1209.24 L2073.82 1209.24 L2074.41 1209.24 L2074.99 1209.24 L2075.58 1209.24 L2076.17 1209.24 L2076.75 1209.24 L2077.34 1209.24 L2077.93 1209.24 L2078.51 1209.24 L2079.1 1209.24 L2079.68 1209.24 L2080.27 1209.24 L2080.86 1209.24 L2081.44 1209.24 L2082.03 1209.24 L2082.62 1209.24 L2083.2 1209.24 L2083.79 1209.24 L2084.38 1209.24 L2084.96 1209.24 L2085.55 1209.24 L2086.14 1209.24 L2086.72 1209.24 L2087.31 1209.24 L2087.89 1209.24 L2088.48 1209.24 L2089.07 1209.24 L2089.65 1209.24 L2090.24 1209.24 L2090.83 1209.24 L2091.41 1209.24 L2092 1209.24 L2092.59 1209.24 L2093.17 1209.24 L2093.76 1209.24 L2094.35 1209.24 L2094.93 1209.24 L2095.52 1209.24 L2096.1 1209.24 L2096.69 1209.24 L2097.28 1209.24 L2097.86 1209.24 L2098.45 1209.24 L2099.04 1209.24 L2099.62 1209.24 L2100.21 1209.24 L2100.8 1209.24 L2101.38 1209.24 L2101.97 1209.24 L2102.55 1209.24 L2103.14 1209.24 L2103.73 1209.24 L2104.31 1209.24 L2104.9 1209.24 L2105.49 1209.24 L2106.07 1209.24 L2106.66 1209.24 L2107.25 1209.24 L2107.83 1209.24 L2108.42 1209.24 L2109.01 1209.24 L2109.59 1209.24 L2110.18 1209.24 L2110.76 1209.24 L2111.35 1209.24 L2111.94 1209.24 L2112.52 1209.24 L2113.11 1209.24 L2113.7 1209.24 L2114.28 1209.24 L2114.87 1209.24 L2115.46 1209.24 L2116.04 1209.24 L2116.63 1209.24 L2117.22 1209.24 L2117.8 1209.24 L2118.39 1209.24 L2118.97 1209.24 L2119.56 1209.24 L2120.15 1209.24 L2120.73 1209.24 L2121.32 1209.24 L2121.91 1209.24 L2122.49 1209.24 L2123.08 1209.24 L2123.67 1209.24 L2124.25 1209.24 L2124.84 1209.24 L2125.42 1209.24 L2126.01 1209.24 L2126.6 1209.24 L2127.18 1209.24 L2127.77 1209.24 L2128.36 1209.24 L2128.94 1209.24 L2129.53 1209.24 L2130.12 1209.24 L2130.7 1209.24 L2131.29 1209.24 L2131.88 1209.24 L2132.46 1209.24 L2133.05 1209.24 L2133.63 1209.24 L2134.22 1209.24 L2134.81 1209.24 L2135.39 1209.24 L2135.98 1209.24 L2136.57 1209.24 L2137.15 1209.24 L2137.74 1209.24 L2138.33 1209.24 L2138.91 1209.24 L2139.5 1209.24 L2140.09 1209.24 L2140.67 1209.24 L2141.26 1209.24 L2141.84 1209.24 L2142.43 1209.24 L2143.02 1209.24 L2143.6 1209.24 L2144.19 1209.24 L2144.78 1209.24 L2145.36 1209.24 L2145.95 1209.24 L2146.54 1209.24 L2147.12 1209.24 L2147.71 1209.24 L2148.3 1209.24 L2148.88 1209.24 L2149.47 1209.24 L2150.05 1209.24 L2150.64 1209.24 L2151.23 1209.24 L2151.81 1209.24 L2152.4 1209.24 L2152.99 1209.24 L2153.57 1209.24 L2154.16 1209.24 L2154.75 1209.24 L2155.33 1209.24 L2155.92 1209.24 L2156.5 1209.24 L2157.09 1209.24 L2157.68 1209.24 L2158.26 1209.24 L2158.26 1209.07 L2157.68 1209.07 L2157.09 1209.07 L2156.5 1209.07 L2155.92 1209.07 L2155.33 1209.07 L2154.75 1209.07 L2154.16 1209.07 L2153.57 1209.07 L2152.99 1209.07 L2152.4 1209.07 L2151.81 1209.07 L2151.23 1209.07 L2150.64 1209.07 L2150.05 1209.07 L2149.47 1209.07 L2148.88 1209.07 L2148.3 1209.07 L2147.71 1209.07 L2147.12 1209.07 L2146.54 1209.07 L2145.95 1209.07 L2145.36 1209.07 L2144.78 1209.07 L2144.19 1209.07 L2143.6 1209.07 L2143.02 1209.07 L2142.43 1209.07 L2141.84 1209.07 L2141.26 1209.07 L2140.67 1209.07 L2140.09 1209.07 L2139.5 1209.07 L2138.91 1209.07 L2138.33 1209.07 L2137.74 1209.07 L2137.15 1209.07 L2136.57 1209.07 L2135.98 1209.07 L2135.39 1209.07 L2134.81 1209.07 L2134.22 1209.07 L2133.63 1209.07 L2133.05 1209.07 L2132.46 1209.07 L2131.88 1209.07 L2131.29 1209.07 L2130.7 1209.07 L2130.12 1209.07 L2129.53 1209.07 L2128.94 1209.07 L2128.36 1209.07 L2127.77 1209.07 L2127.18 1209.07 L2126.6 1209.07 L2126.01 1209.07 L2125.42 1209.07 L2124.84 1209.07 L2124.25 1209.07 L2123.67 1209.07 L2123.08 1209.07 L2122.49 1209.07 L2121.91 1209.07 L2121.32 1209.07 L2120.73 1209.07 L2120.15 1209.07 L2119.56 1209.07 L2118.97 1209.07 L2118.39 1209.07 L2117.8 1209.07 L2117.22 1209.07 L2116.63 1209.07 L2116.04 1209.07 L2115.46 1209.07 L2114.87 1209.07 L2114.28 1209.07 L2113.7 1209.07 L2113.11 1209.07 L2112.52 1209.07 L2111.94 1209.07 L2111.35 1209.07 L2110.76 1209.07 L2110.18 1209.07 L2109.59 1209.07 L2109.01 1209.07 L2108.42 1209.07 L2107.83 1209.07 L2107.25 1209.07 L2106.66 1209.07 L2106.07 1209.07 L2105.49 1209.07 L2104.9 1209.07 L2104.31 1209.07 L2103.73 1209.07 L2103.14 1209.07 L2102.55 1209.07 L2101.97 1209.07 L2101.38 1209.07 L2100.8 1209.07 L2100.21 1209.07 L2099.62 1209.07 L2099.04 1209.07 L2098.45 1209.07 L2097.86 1209.07 L2097.28 1209.07 L2096.69 1209.07 L2096.1 1209.07 L2095.52 1209.07 L2094.93 1209.07 L2094.35 1209.07 L2093.76 1209.07 L2093.17 1209.07 L2092.59 1209.07 L2092 1209.07 L2091.41 1209.07 L2090.83 1209.07 L2090.24 1209.07 L2089.65 1209.07 L2089.07 1209.07 L2088.48 1209.07 L2087.89 1209.07 L2087.31 1209.07 L2086.72 1209.07 L2086.14 1209.07 L2085.55 1209.07 L2084.96 1209.07 L2084.38 1209.07 L2083.79 1209.07 L2083.2 1209.07 L2082.62 1209.07 L2082.03 1209.07 L2081.44 1209.07 L2080.86 1209.07 L2080.27 1209.07 L2079.68 1209.07 L2079.1 1209.07 L2078.51 1209.07 L2077.93 1209.07 L2077.34 1209.07 L2076.75 1209.07 L2076.17 1209.07 L2075.58 1209.07 L2074.99 1209.07 L2074.41 1209.07 L2073.82 1209.07 L2073.23 1209.07 L2072.65 1209.07 L2072.06 1209.07 L2071.48 1209.07 L2070.89 1209.07 L2070.3 1209.07 L2069.72 1209.07 L2069.13 1209.07 L2068.54 1209.07 L2067.96 1209.07 L2067.37 1209.07 L2066.78 1209.07 L2066.2 1209.07 L2065.61 1209.07 L2065.02 1209.07 L2064.44 1209.07 L2063.85 1209.07 L2063.27 1209.07 L2062.68 1209.07 L2062.09 1209.07 L2061.51 1209.07 L2060.92 1209.07 L2060.33 1209.07 L2059.75 1209.07 L2059.16 1209.07 L2058.57 1209.07 L2057.99 1209.07 L2057.4 1209.07 L2056.81 1209.07 L2056.23 1209.07 L2055.64 1209.07 L2055.06 1209.07 L2054.47 1209.07 L2053.88 1209.07 L2053.3 1209.07 L2052.71 1209.07 L2052.12 1209.07 L2051.54 1209.07 L2050.95 1209.07 L2050.36 1209.07 L2049.78 1209.07 L2049.19 1209.07 L2048.6 1209.07 L2048.02 1209.07 L2047.43 1209.07 L2046.85 1209.07 L2046.26 1209.07 L2045.67 1209.07 L2045.09 1209.07 L2044.5 1209.07 L2043.91 1209.07 L2043.33 1209.07 L2042.74 1209.07 L2042.15 1209.07 L2041.57 1209.07 L2040.98 1209.07 L2040.4 1209.07 L2039.81 1209.07 L2039.22 1209.07 L2038.64 1209.07 L2038.05 1209.07 L2037.46 1209.07 L2036.88 1209.07 L2036.29 1209.07 L2035.7 1209.07 L2035.12 1209.07 L2034.53 1209.07 L2033.94 1209.07 L2033.36 1209.07 L2032.77 1209.07 L2032.19 1209.07 L2031.6 1209.07 L2031.01 1209.07 L2030.43 1209.07 L2029.84 1209.07 L2029.25 1209.07 L2028.67 1209.07 L2028.08 1209.07 L2027.49 1209.07 L2026.91 1209.07 L2026.32 1209.07 L2025.73 1209.07 L2025.15 1209.07 L2024.56 1209.07 L2023.98 1209.07 L2023.39 1209.07 L2022.8 1209.07 L2022.22 1209.07 L2021.63 1209.07 L2021.04 1209.07 L2020.46 1209.07 L2019.87 1209.07 L2019.28 1209.07 L2018.7 1209.07 L2018.11 1209.07 L2017.53 1209.07 L2016.94 1209.07 L2016.35 1209.07 L2015.77 1209.07 L2015.18 1209.07 L2014.59 1209.07 L2014.01 1209.07 L2013.42 1209.07 L2012.83 1209.07 L2012.25 1209.07 L2011.66 1209.07 L2011.07 1209.07 L2010.49 1209.07 L2009.9 1209.07 L2009.32 1209.07 L2008.73 1209.07 L2008.14 1209.07 L2007.56 1209.07 L2006.97 1209.07 L2006.38 1209.07 L2005.8 1209.07 L2005.21 1209.07 L2004.62 1209.07 L2004.04 1209.07 L2003.45 1209.07 L2002.86 1209.07 L2002.28 1209.07 L2001.69 1209.07 L2001.11 1209.07 L2000.52 1209.07 L1999.93 1209.07 L1999.35 1209.07 L1998.76 1209.07 L1998.17 1209.07 L1997.59 1209.07 L1997 1209.07 L1996.41 1209.07 L1995.83 1209.07 L1995.24 1209.07 L1994.65 1209.07 L1994.07 1209.07 L1993.48 1209.07 L1992.9 1209.07 L1992.31 1209.07 L1991.72 1209.07 L1991.14 1209.07 L1990.55 1209.07 L1989.96 1209.07 L1989.38 1209.07 L1988.79 1209.07 L1988.2 1209.07 L1987.62 1209.07 L1987.03 1209.07 L1986.45 1209.07 L1985.86 1209.07 L1985.27 1209.07 L1984.69 1209.07 L1984.1 1209.07 L1983.51 1209.07 L1982.93 1209.07 L1982.34 1209.07 L1981.75 1209.07 L1981.17 1209.07 L1980.58 1209.07 L1979.99 1209.07 L1979.41 1209.07 L1978.82 1209.07 L1978.24 1209.07 L1977.65 1209.07 L1977.06 1209.07 L1976.48 1209.07 L1975.89 1209.07 L1975.3 1209.07 L1974.72 1209.07 L1974.13 1209.07 L1973.54 1209.07 L1972.96 1209.07 L1972.37 1209.07 L1971.78 1209.07 L1971.2 1209.07 L1970.61 1209.07 L1970.03 1209.07 L1969.44 1209.07 L1968.85 1209.07 L1968.27 1209.07 L1967.68 1209.07 L1967.09 1209.07 L1966.51 1209.07 L1965.92 1209.07 L1965.33 1209.07 L1964.75 1209.07 L1964.16 1209.07 L1963.58 1209.07 L1962.99 1209.07 L1962.4 1209.07 L1961.82 1209.07 L1961.23 1209.07 L1960.64 1209.07 L1960.06 1209.07 L1959.47 1209.07 L1958.88 1209.07 L1958.3 1209.07 L1957.71 1209.07 L1957.12 1209.07 L1956.54 1209.07 L1955.95 1209.07 L1955.37 1209.07 L1954.78 1209.07 L1954.19 1209.07 L1953.61 1209.07 L1953.02 1209.07 L1952.43 1209.07 L1951.85 1209.07 L1951.26 1209.07 L1950.67 1209.07 L1950.09 1209.07 L1949.5 1209.07 L1948.91 1209.07 L1948.33 1209.07 L1947.74 1209.07 L1947.16 1209.07 L1946.57 1209.07 L1945.98 1209.07 L1945.4 1209.07 L1944.81 1209.07 L1944.22 1209.07 L1943.64 1209.07 L1943.05 1209.07 L1942.46 1209.07 L1941.88 1209.07 L1941.29 1209.07 L1940.71 1209.07 L1940.12 1209.07 L1939.53 1209.07 L1938.95 1209.07 L1938.36 1209.07 L1937.77 1209.07 L1937.19 1209.07 L1936.6 1209.07 L1936.01 1209.07 L1935.43 1209.07 L1934.84 1209.07 L1934.25 1209.07 L1933.67 1209.07 L1933.08 1209.07 L1932.5 1209.07 L1931.91 1209.07 L1931.32 1209.07 L1930.74 1209.07 L1930.15 1209.07 L1929.56 1209.07 L1928.98 1209.07 L1928.39 1209.07 L1927.8 1209.07 L1927.22 1209.07 L1926.63 1209.07 L1926.04 1209.07 L1925.46 1209.07 L1924.87 1209.07 L1924.29 1209.07 L1923.7 1209.07 L1923.11 1209.07 L1922.53 1209.07 L1921.94 1209.07 L1921.35 1209.07 L1920.77 1209.07 L1920.18 1209.07 L1919.59 1209.07 L1919.01 1209.07 L1918.42 1209.07 L1917.83 1209.07 L1917.25 1209.07 L1916.66 1209.07 L1916.08 1209.07 L1915.49 1209.07 L1914.9 1209.07 L1914.32 1209.07 L1913.73 1209.07 L1913.14 1209.07 L1912.56 1209.07 L1911.97 1209.07 L1911.38 1209.07 L1910.8 1209.07 L1910.21 1209.07 L1909.63 1209.07 L1909.04 1209.07 L1908.45 1209.07 L1907.87 1209.07 L1907.28 1209.07 L1906.69 1209.07 L1906.11 1209.07 L1905.52 1209.07 L1904.93 1209.07 L1904.35 1209.07 L1903.76 1209.07 L1903.17 1209.07 L1902.59 1209.07 L1902 1209.07 L1901.42 1209.07 L1900.83 1209.07 L1900.24 1209.07 L1899.66 1209.07 L1899.07 1209.07 L1898.48 1209.07 L1897.9 1209.07 L1897.31 1209.07 L1896.72 1209.07 L1896.14 1209.07 L1895.55 1209.07 L1894.96 1209.07 L1894.38 1209.07 L1893.79 1209.07 L1893.21 1209.07 L1892.62 1209.07 L1892.03 1209.07 L1891.45 1209.07 L1890.86 1209.07 L1890.27 1209.07 L1889.69 1209.07 L1889.1 1209.07 L1888.51 1209.07 L1887.93 1209.07 L1887.34 1209.07 L1886.76 1209.07 L1886.17 1209.07 L1885.58 1209.07 L1885 1209.07 L1884.41 1209.07 L1883.82 1209.07 L1883.24 1209.07 L1882.65 1209.07 L1882.06 1209.07 L1881.48 1209.07 L1880.89 1209.07 L1880.3 1209.07 L1879.72 1209.07 L1879.13 1209.07 L1878.55 1209.07 L1877.96 1209.07 L1877.37 1209.07 L1876.79 1209.07 L1876.2 1209.07 L1875.61 1209.07 L1875.03 1209.07 L1874.44 1209.07 L1873.85 1209.07 L1873.27 1209.07 L1872.68 1209.07 L1872.09 1209.07 L1871.51 1209.07 L1870.92 1209.07 L1870.34 1209.07 L1869.75 1209.07 L1869.16 1209.07 L1868.58 1209.07 L1867.99 1209.07 L1867.4 1209.07 L1866.82 1209.07 L1866.23 1209.07 L1865.64 1209.07 L1865.06 1209.07 L1864.47 1209.07 L1863.88 1209.07 L1863.3 1209.07 L1862.71 1209.07 L1862.13 1209.07 L1861.54 1209.07 L1860.95 1209.07 L1860.37 1209.07 L1859.78 1209.07 L1859.19 1209.07 L1858.61 1209.07 L1858.02 1209.07 L1857.43 1209.07 L1856.85 1209.07 L1856.26 1209.07 L1855.68 1209.07 L1855.09 1209.07 L1854.5 1209.07 L1853.92 1209.07 L1853.33 1209.07 L1852.74 1209.07 L1852.16 1209.07 L1851.57 1209.07 L1850.98 1209.07 L1850.4 1209.07 L1849.81 1209.07 L1849.22 1209.07 L1848.64 1209.07 L1848.05 1209.07 L1847.47 1209.07 L1846.88 1209.07 L1846.29 1209.07 L1845.71 1209.07 L1845.12 1209.07 L1844.53 1209.07 L1843.95 1209.07 L1843.36 1209.07 L1842.77 1209.07 L1842.19 1209.07 L1841.6 1209.07 L1841.01 1209.07 L1840.43 1209.07 L1839.84 1209.07 L1839.26 1209.07 L1838.67 1209.07 L1838.08 1209.07 L1837.5 1209.07 L1836.91 1209.07 L1836.32 1209.07 L1835.74 1209.07 L1835.15 1209.07 L1834.56 1209.07 L1833.98 1209.07 L1833.39 1209.07 L1832.81 1209.07 L1832.22 1209.07 L1831.63 1209.07 L1831.05 1209.07 L1830.46 1209.07 L1829.87 1209.07 L1829.29 1209.07 L1828.7 1209.07 L1828.11 1209.07 L1827.53 1209.07 L1826.94 1209.07 L1826.35 1209.07 L1825.77 1209.07 L1825.18 1209.07 L1824.6 1209.07 L1824.01 1209.07 L1823.42 1209.07 L1822.84 1209.07 L1822.25 1209.07 L1821.66 1209.07 L1821.08 1209.07 L1820.49 1209.07 L1819.9 1209.07 L1819.32 1209.07 L1818.73 1209.07 L1818.14 1209.07 L1817.56 1209.07 L1816.97 1209.07 L1816.39 1209.07 L1815.8 1209.07 L1815.21 1209.07 L1814.63 1209.07 L1814.04 1209.07 L1813.45 1209.07 L1812.87 1209.07 L1812.28 1209.07 L1811.69 1209.07 L1811.11 1209.07 L1810.52 1209.07 L1809.94 1209.07 L1809.35 1209.07 L1808.76 1209.07 L1808.18 1209.07 L1807.59 1209.07 L1807 1209.07 L1806.42 1209.07 L1805.83 1209.07 L1805.24 1209.07 L1804.66 1209.07 L1804.07 1209.07 L1803.48 1209.07 L1802.9 1209.07 L1802.31 1209.07 L1801.73 1209.07 L1801.14 1209.07 L1800.55 1209.07 L1799.97 1209.07 L1799.38 1209.07 L1798.79 1209.07 L1798.21 1209.07 L1797.62 1209.07 L1797.03 1209.07 L1796.45 1209.07 L1795.86 1209.07 L1795.27 1209.07 L1794.69 1209.07 L1794.1 1209.07 L1793.52 1209.07 L1792.93 1209.07 L1792.34 1209.07 L1791.76 1209.07 L1791.17 1209.07 L1790.58 1209.07 L1790 1209.07 L1789.41 1209.07 L1788.82 1209.07 L1788.24 1209.07 L1787.65 1209.07 L1787.06 1209.07 L1786.48 1209.07 L1785.89 1209.07 L1785.31 1209.07 L1784.72 1209.07 L1784.13 1209.07 L1783.55 1209.07 L1782.96 1209.07 L1782.37 1209.07 L1781.79 1209.07 L1781.2 1209.07 L1780.61 1209.07 L1780.03 1209.07 L1779.44 1209.07 L1778.86 1209.07 L1778.27 1209.07 L1777.68 1209.07 L1777.1 1209.07 L1776.51 1209.07 L1775.92 1209.07 L1775.34 1209.07 L1774.75 1209.07 L1774.16 1209.07 L1773.58 1209.07 L1772.99 1209.07 L1772.4 1209.07 L1771.82 1209.07 L1771.23 1209.07 L1770.65 1209.07 L1770.06 1209.07 L1769.47 1209.07 L1768.89 1209.07 L1768.3 1209.07 L1767.71 1209.07 L1767.13 1209.07 L1766.54 1209.07 L1765.95 1209.07 L1765.37 1209.07 L1764.78 1209.07 L1764.19 1209.07 L1763.61 1209.07 L1763.02 1209.07 L1762.44 1209.07 L1761.85 1209.07 L1761.26 1209.07 L1760.68 1209.07 L1760.09 1209.07 L1759.5 1209.07 L1758.92 1209.07 L1758.33 1209.07 L1757.74 1209.07 L1757.16 1209.07 L1756.57 1209.07 L1755.99 1209.07 L1755.4 1209.07 L1754.81 1209.07 L1754.23 1209.07 L1753.64 1209.07 L1753.05 1209.07 L1752.47 1209.07 L1751.88 1209.07 L1751.29 1209.07 L1750.71 1209.07 L1750.12 1209.07 L1749.53 1209.07 L1748.95 1209.07 L1748.36 1209.07 L1747.78 1209.07 L1747.19 1209.07 L1746.6 1209.07 L1746.02 1209.07 L1745.43 1209.07 L1744.84 1209.07 L1744.26 1209.07 L1743.67 1209.07 L1743.08 1209.07 L1742.5 1209.07 L1741.91 1209.07 L1741.32 1209.07 L1740.74 1209.07 L1740.15 1209.07 L1739.57 1209.07 L1738.98 1209.07 L1738.39 1209.07 L1737.81 1209.07 L1737.22 1209.07 L1736.63 1209.07 L1736.05 1209.07 L1735.46 1209.07 L1734.87 1209.07 L1734.29 1209.07 L1733.7 1209.07 L1733.11 1209.07 L1732.53 1209.07 L1731.94 1209.07 L1731.36 1209.07 L1730.77 1209.07 L1730.18 1209.07 L1729.6 1209.07 L1729.01 1209.07 L1728.42 1209.07 L1727.84 1209.07 L1727.25 1209.07 L1726.66 1209.07 L1726.08 1209.07 L1725.49 1209.07 L1724.91 1209.07 L1724.32 1209.07 L1723.73 1209.07 L1723.15 1209.07 L1722.56 1209.07 L1721.97 1209.07 L1721.39 1209.07 L1720.8 1209.07 L1720.21 1209.07 L1719.63 1209.07 L1719.04 1209.07 L1718.45 1209.07 L1717.87 1209.07 L1717.28 1209.07 L1716.7 1209.07 L1716.11 1209.07 L1715.52 1209.07 L1714.94 1209.07 L1714.35 1209.07 L1713.76 1209.07 L1713.18 1209.07 L1712.59 1209.07 L1712 1209.07 L1711.42 1209.07 L1710.83 1209.07 L1710.24 1209.07 L1709.66 1209.07 L1709.07 1209.07 L1708.49 1209.07 L1707.9 1209.07 L1707.31 1209.07 L1706.73 1209.07 L1706.14 1209.07 L1705.55 1209.07 L1704.97 1209.07 L1704.38 1209.07 L1703.79 1209.07 L1703.21 1209.07 L1702.62 1209.07 L1702.04 1209.07 L1701.45 1209.07 L1700.86 1209.07 L1700.28 1209.07 L1699.69 1209.07 L1699.1 1209.07 L1698.52 1209.07 L1697.93 1209.07 L1697.34 1209.07 L1696.76 1209.07 L1696.17 1209.07 L1695.58 1209.07 L1695 1209.07 L1694.41 1209.07 L1693.83 1209.07 L1693.24 1209.07 L1692.65 1209.07 L1692.07 1209.07 L1691.48 1209.07 L1690.89 1209.07 L1690.31 1209.07 L1689.72 1209.07 L1689.13 1209.07 L1688.55 1209.07 L1687.96 1209.07 L1687.37 1209.07 L1686.79 1209.07 L1686.2 1209.07 L1685.62 1209.07 L1685.03 1209.07 L1684.44 1209.07 L1683.86 1209.07 L1683.27 1209.07 L1682.68 1209.07 L1682.1 1209.07 L1681.51 1209.07 L1680.92 1209.07 L1680.34 1209.07 L1679.75 1209.07 L1679.17 1209.07 L1678.58 1209.07 L1677.99 1209.07 L1677.41 1209.07 L1676.82 1209.07 L1676.23 1209.07 L1675.65 1209.07 L1675.06 1209.07 L1674.47 1209.07 L1673.89 1209.07 L1673.3 1209.07 L1672.71 1209.07 L1672.13 1209.07 L1671.54 1209.07 L1670.96 1209.07 L1670.37 1209.07 L1669.78 1209.07 L1669.2 1209.07 L1668.61 1209.07 L1668.02 1209.07 L1667.44 1209.07 L1666.85 1209.07 L1666.26 1209.07 L1665.68 1209.07 L1665.09 1209.07 L1664.5 1209.07 L1663.92 1209.07 L1663.33 1209.07 L1662.75 1209.07 L1662.16 1209.07 L1661.57 1209.07 L1660.99 1209.07 L1660.4 1209.07 L1659.81 1209.07 L1659.23 1209.07 L1658.64 1209.07 L1658.05 1209.07 L1657.47 1209.07 L1656.88 1209.07 L1656.29 1209.07 L1655.71 1209.07 L1655.12 1209.07 L1654.54 1209.07 L1653.95 1209.07 L1653.36 1209.07 L1652.78 1209.07 L1652.19 1209.07 L1651.6 1209.07 L1651.02 1209.07 L1650.43 1209.07 L1649.84 1209.07 L1649.26 1209.07 L1648.67 1209.07 L1648.09 1209.07 L1647.5 1209.07 L1646.91 1209.07 L1646.33 1209.07 L1645.74 1209.07 L1645.15 1209.07 L1644.57 1209.07 L1643.98 1209.07 L1643.39 1209.07 L1642.81 1209.07 L1642.22 1209.07 L1641.63 1209.07 L1641.05 1209.07 L1640.46 1209.07 L1639.88 1209.07 L1639.29 1209.07 L1638.7 1209.07 L1638.12 1209.07 L1637.53 1209.07 L1636.94 1209.07 L1636.36 1209.07 L1635.77 1209.07 L1635.18 1209.07 L1634.6 1209.07 L1634.01 1209.07 L1633.42 1209.07 L1632.84 1209.07 L1632.25 1209.07 L1631.67 1209.07 L1631.08 1209.07 L1630.49 1209.07 L1629.91 1209.07 L1629.32 1209.07 L1628.73 1209.07 L1628.15 1209.07 L1627.56 1209.07 L1626.97 1209.07 L1626.39 1209.07 L1625.8 1209.07 L1625.22 1209.07 L1624.63 1209.07 L1624.04 1209.07 L1623.46 1209.07 L1622.87 1209.07 L1622.28 1209.07 L1621.7 1209.07 L1621.11 1209.07 L1620.52 1209.07 L1619.94 1209.07 L1619.35 1209.07 L1618.76 1209.07 L1618.18 1209.07 L1617.59 1209.07 L1617.01 1209.07 L1616.42 1209.07 L1615.83 1209.07 L1615.25 1209.07 L1614.66 1209.07 L1614.07 1209.07 L1613.49 1209.07 L1612.9 1209.07 L1612.31 1209.07 L1611.73 1209.07 L1611.14 1209.07 L1610.55 1209.07 L1609.97 1209.07 L1609.38 1209.07 L1608.8 1209.07 L1608.21 1209.07 L1607.62 1209.07 L1607.04 1209.07 L1606.45 1209.07 L1605.86 1209.07 L1605.28 1209.07 L1604.69 1209.07 L1604.1 1209.07 L1603.52 1209.07 L1602.93 1209.07 L1602.34 1209.07 L1601.76 1209.07 L1601.17 1209.07 L1600.59 1209.07 L1600 1209.07 L1599.41 1209.07 L1598.83 1209.07 L1598.24 1209.07 L1597.65 1209.07 L1597.07 1209.07 L1596.48 1209.07 L1595.89 1209.07 L1595.31 1209.07 L1594.72 1209.07 L1594.14 1209.07 L1593.55 1209.07 L1592.96 1209.07 L1592.38 1209.07 L1591.79 1209.07 L1591.2 1209.07 L1590.62 1209.07 L1590.03 1209.07 L1589.44 1209.07 L1588.86 1209.07 L1588.27 1209.07 L1587.68 1209.07 L1587.1 1209.07 L1586.51 1209.07 L1585.93 1209.07 L1585.34 1209.07 L1584.75 1209.07 L1584.17 1209.07 L1583.58 1209.07 L1582.99 1209.07 L1582.41 1209.07 L1581.82 1209.07 L1581.23 1209.07 L1580.65 1209.07 L1580.06 1209.07 L1579.47 1209.07 L1578.89 1209.07 L1578.3 1209.07 L1577.72 1209.07 L1577.13 1209.07 L1576.54 1209.07 L1575.96 1209.07 L1575.37 1209.07 L1574.78 1209.07 L1574.2 1209.07 L1573.61 1209.07 L1573.02 1209.07 L1572.44 1209.07 L1571.85 1209.07 L1571.27 1209.07 L1570.68 1209.07 L1570.09 1209.07 L1569.51 1209.07 L1568.92 1209.07 L1568.33 1209.07 L1567.75 1209.07 L1567.16 1209.07 L1566.57 1209.07 L1565.99 1209.07 L1565.4 1209.07 L1564.81 1209.07 L1564.23 1209.07 L1563.64 1209.07 L1563.06 1209.07 L1562.47 1209.07 L1561.88 1209.07 L1561.3 1209.07 L1560.71 1209.07 L1560.12 1209.07 L1559.54 1209.07 L1558.95 1209.07 L1558.36 1209.07 L1557.78 1209.07 L1557.19 1209.07 L1556.6 1209.07 L1556.02 1209.07 L1555.43 1209.07 L1554.85 1209.07 L1554.26 1209.07 L1553.67 1209.07 L1553.09 1209.07 L1552.5 1209.07 L1551.91 1209.07 L1551.33 1209.07 L1550.74 1209.07 L1550.15 1209.07 L1549.57 1209.07 L1548.98 1209.07 L1548.4 1209.07 L1547.81 1209.07 L1547.22 1209.07 L1546.64 1209.07 L1546.05 1209.07 L1545.46 1209.07 L1544.88 1209.07 L1544.29 1209.07 L1543.7 1209.07 L1543.12 1209.07 L1542.53 1209.07 L1541.94 1209.07 L1541.36 1209.07 L1540.77 1209.07 L1540.19 1209.07 L1539.6 1209.07 L1539.01 1209.07 L1538.43 1209.07 L1537.84 1209.07 L1537.25 1209.07 L1536.67 1209.07 L1536.08 1209.07 L1535.49 1209.07 L1534.91 1209.07 L1534.32 1209.07 L1533.73 1209.07 L1533.15 1209.07 L1532.56 1209.07 L1531.98 1209.07 L1531.39 1209.07 L1530.8 1209.07 L1530.22 1209.07 L1529.63 1209.07 L1529.04 1209.07 L1528.46 1209.07 L1527.87 1209.07 L1527.28 1209.07 L1526.7 1209.07 L1526.11 1209.07 L1525.52 1209.07 L1524.94 1209.07 L1524.35 1209.07 L1523.77 1209.07 L1523.18 1209.07 L1522.59 1209.07 L1522.01 1209.07 L1521.42 1209.07 L1520.83 1209.07 L1520.25 1209.07 L1519.66 1209.07 L1519.07 1209.07 L1518.49 1209.07 L1517.9 1209.07 L1517.32 1209.07 L1516.73 1209.07 L1516.14 1209.07 L1515.56 1209.07 L1514.97 1209.07 L1514.38 1209.07 L1513.8 1209.07 L1513.21 1209.07 L1512.62 1209.07 L1512.04 1209.07 L1511.45 1209.07 L1510.86 1209.07 L1510.28 1209.07 L1509.69 1209.07 L1509.11 1209.07 L1508.52 1209.07 L1507.93 1209.07 L1507.35 1209.07 L1506.76 1209.07 L1506.17 1209.07 L1505.59 1209.07 L1505 1209.07 L1504.41 1209.07 L1503.83 1209.07 L1503.24 1209.07 L1502.65 1209.07 L1502.07 1209.07 L1501.48 1209.07 L1500.9 1209.07 L1500.31 1209.07 L1499.72 1209.07 L1499.14 1209.07 L1498.55 1209.07 L1497.96 1209.07 L1497.38 1209.07 L1496.79 1209.07 L1496.2 1209.07 L1495.62 1209.07 L1495.03 1209.07 L1494.45 1209.07 L1493.86 1209.07 L1493.27 1209.07 L1492.69 1209.07 L1492.1 1209.07 L1491.51 1209.07 L1490.93 1209.07 L1490.34 1209.07 L1489.75 1209.07 L1489.17 1209.07 L1488.58 1209.07 L1487.99 1209.07 L1487.41 1209.07 L1486.82 1209.07 L1486.24 1209.07 L1485.65 1209.07 L1485.06 1209.07 L1484.48 1209.07 L1483.89 1209.07 L1483.3 1209.07 L1482.72 1209.07 L1482.13 1209.07 L1481.54 1209.07 L1480.96 1209.07 L1480.37 1209.07 L1479.78 1209.07 L1479.2 1209.07 L1478.61 1209.07 L1478.03 1209.07 L1477.44 1209.07 L1476.85 1209.07 L1476.27 1209.07 L1475.68 1209.07 L1475.09 1209.07 L1474.51 1209.07 L1473.92 1209.07 L1473.33 1209.07 L1472.75 1209.07 L1472.16 1209.07 L1471.57 1209.07 L1470.99 1209.07 L1470.4 1209.07 L1469.82 1209.07 L1469.23 1209.07 L1468.64 1209.07 L1468.06 1209.07 L1467.47 1209.07 L1466.88 1209.07 L1466.3 1209.07 L1465.71 1209.07 L1465.12 1209.07 L1464.54 1209.07 L1463.95 1209.07 L1463.37 1209.07 L1462.78 1209.07 L1462.19 1209.07 L1461.61 1209.07 L1461.02 1209.07 L1460.43 1209.07 L1459.85 1209.07 L1459.26 1209.07 L1458.67 1209.07 L1458.09 1209.07 L1457.5 1209.07 L1456.91 1209.07 L1456.33 1209.07 L1455.74 1209.07 L1455.16 1209.07 L1454.57 1209.07 L1453.98 1209.07 L1453.4 1209.07 L1452.81 1209.07 L1452.22 1209.07 L1451.64 1209.07 L1451.05 1209.07 L1450.46 1209.07 L1449.88 1209.07 L1449.29 1209.07 L1448.7 1209.07 L1448.12 1209.07 L1447.53 1209.07 L1446.95 1209.07 L1446.36 1209.07 L1445.77 1209.07 L1445.19 1209.07 L1444.6 1209.07 L1444.01 1209.07 L1443.43 1209.07 L1442.84 1209.07 L1442.25 1209.07 L1441.67 1209.07 L1441.08 1209.07 L1440.5 1209.07 L1439.91 1209.07 L1439.32 1209.07 L1438.74 1209.07 L1438.15 1209.07 L1437.56 1209.07 L1436.98 1209.07 L1436.39 1209.07 L1435.8 1209.07 L1435.22 1209.07 L1434.63 1209.07 L1434.04 1209.07 L1433.46 1209.07 L1432.87 1209.07 L1432.29 1209.07 L1431.7 1209.07 L1431.11 1209.07 L1430.53 1209.07 L1429.94 1209.07 L1429.35 1209.07 L1428.77 1209.07 L1428.18 1209.07 L1427.59 1209.07 L1427.01 1209.07 L1426.42 1209.07 L1425.83 1209.07 L1425.25 1209.07 L1424.66 1209.07 L1424.08 1209.07 L1423.49 1209.07 L1422.9 1209.07 L1422.32 1209.07 L1421.73 1209.07 L1421.14 1209.07 L1420.56 1209.07 L1419.97 1209.07 L1419.38 1209.07 L1418.8 1209.07 L1418.21 1209.07 L1417.63 1209.07 L1417.04 1209.07 L1416.45 1209.07 L1415.87 1209.07 L1415.28 1209.07 L1414.69 1209.07 L1414.11 1209.07 L1413.52 1209.07 L1412.93 1209.07 L1412.35 1209.07 L1411.76 1209.07 L1411.17 1209.07 L1410.59 1209.07 L1410 1209.07 L1409.42 1209.07 L1408.83 1209.07 L1408.24 1209.07 L1407.66 1209.07 L1407.07 1209.07 L1406.48 1209.07 L1405.9 1209.07 L1405.31 1209.07 L1404.72 1209.07 L1404.14 1209.07 L1403.55 1209.07 L1402.96 1209.07 L1402.38 1209.07 L1401.79 1209.07 L1401.21 1209.07 L1400.62 1209.07 L1400.03 1209.07 L1399.45 1209.07 L1398.86 1209.07 L1398.27 1209.07 L1397.69 1209.07 L1397.1 1209.07 L1396.51 1209.07 L1395.93 1209.07 L1395.34 1209.07 L1394.75 1209.07 L1394.17 1209.07 L1393.58 1209.07 L1393 1209.07 L1392.41 1209.07 L1391.82 1209.07 L1391.24 1209.07 L1390.65 1209.07 L1390.06 1209.07 L1389.48 1209.07 L1388.89 1209.07 L1388.3 1209.07 L1387.72 1209.07 L1387.13 1209.07 L1386.55 1209.07 L1385.96 1209.07 L1385.37 1209.07 L1384.79 1209.07 L1384.2 1209.07 L1383.61 1209.07 L1383.03 1209.07 L1382.44 1209.07 L1381.85 1209.07 L1381.27 1209.07 L1380.68 1209.07 L1380.09 1209.07 L1379.51 1209.07 L1378.92 1209.07 L1378.34 1209.07 L1377.75 1209.07 L1377.16 1209.07 L1376.58 1209.07 L1375.99 1209.07 L1375.4 1209.07 L1374.82 1209.07 L1374.23 1209.07 L1373.64 1209.07 L1373.06 1209.07 L1372.47 1209.07 L1371.88 1209.07 L1371.3 1209.07 L1370.71 1209.07 L1370.13 1209.07 L1369.54 1209.07 L1368.95 1209.07 L1368.37 1209.07 L1367.78 1209.07 L1367.19 1209.07 L1366.61 1209.07 L1366.02 1209.07 L1365.43 1209.07 L1364.85 1209.07 L1364.26 1209.07 L1363.68 1209.07 L1363.09 1209.07 L1362.5 1209.07 L1361.92 1209.07 L1361.33 1209.07 L1360.74 1209.07 L1360.16 1209.07 L1359.57 1209.07 L1358.98 1209.07 L1358.4 1209.07 L1357.81 1209.07 L1357.22 1209.07 L1356.64 1209.07 L1356.05 1209.07 L1355.47 1209.07 L1354.88 1209.07 L1354.29 1209.07 L1353.71 1209.07 L1353.12 1209.07 L1352.53 1209.07 L1351.95 1209.07 L1351.36 1209.07 L1350.77 1209.07 L1350.19 1209.07 L1349.6 1209.07 L1349.01 1209.07 L1348.43 1209.07 L1347.84 1209.07 L1347.26 1209.07 L1346.67 1209.07 L1346.08 1209.07 L1345.5 1209.07 L1344.91 1209.07 L1344.32 1209.07 L1343.74 1209.07 L1343.15 1209.07 L1342.56 1209.07 L1341.98 1209.07 L1341.39 1209.07 L1340.8 1209.07 L1340.22 1209.07 L1339.63 1209.07 L1339.05 1209.07 L1338.46 1209.07 L1337.87 1209.07 L1337.29 1209.07 L1336.7 1209.07 L1336.11 1209.07 L1335.53 1209.07 L1334.94 1209.07 L1334.35 1209.07 L1333.77 1209.07 L1333.18 1209.07 L1332.6 1209.07 L1332.01 1209.07 L1331.42 1209.07 L1330.84 1209.07 L1330.25 1209.07 L1329.66 1209.07 L1329.08 1209.07 L1328.49 1209.07 L1327.9 1209.07 L1327.32 1209.07 L1326.73 1209.07 L1326.14 1209.07 L1325.56 1209.07 L1324.97 1209.07 L1324.39 1209.07 L1323.8 1209.07 L1323.21 1209.07 L1322.63 1209.07 L1322.04 1209.07 L1321.45 1209.07 L1320.87 1209.07 L1320.28 1209.07 L1319.69 1209.07 L1319.11 1209.07 L1318.52 1209.07 L1317.93 1209.07 L1317.35 1209.07 L1316.76 1209.07 L1316.18 1209.07 L1315.59 1209.07 L1315 1209.07 L1314.42 1209.07 L1313.83 1209.07 L1313.24 1209.07 L1312.66 1209.07 L1312.07 1209.07 L1311.48 1209.07 L1310.9 1209.07 L1310.31 1209.07 L1309.73 1209.07 L1309.14 1209.07 L1308.55 1209.07 L1307.97 1209.07 L1307.38 1209.07 L1306.79 1209.07 L1306.21 1209.07 L1305.62 1209.07 L1305.03 1209.07 L1304.45 1209.07 L1303.86 1209.07 L1303.27 1209.07 L1302.69 1209.07 L1302.1 1209.07 L1301.52 1209.07 L1300.93 1209.07 L1300.34 1209.07 L1299.76 1209.07 L1299.17 1209.07 L1298.58 1209.07 L1298 1209.07 L1297.41 1209.07 L1296.82 1209.07 L1296.24 1209.07 L1295.65 1209.07 L1295.06 1209.07 L1294.48 1209.07 L1293.89 1209.07 L1293.31 1209.07 L1292.72 1209.07 L1292.13 1209.07 L1291.55 1209.07 L1290.96 1209.07 L1290.37 1209.07 L1289.79 1209.07 L1289.2 1209.07 L1288.61 1209.07 L1288.03 1209.07 L1287.44 1209.07 L1286.86 1209.07 L1286.27 1209.07 L1285.68 1209.07 L1285.1 1209.07 L1284.51 1209.07 L1283.92 1209.07 L1283.34 1209.07 L1282.75 1209.07 L1282.16 1209.07 L1281.58 1209.07 L1280.99 1209.07 L1280.4 1209.07 L1279.82 1209.07 L1279.23 1209.07 L1278.65 1209.07 L1278.06 1209.07 L1277.47 1209.07 L1276.89 1209.07 L1276.3 1209.07 L1275.71 1209.07 L1275.13 1209.07 L1274.54 1209.07 L1273.95 1209.07 L1273.37 1209.07 L1272.78 1209.07 L1272.19 1209.07 L1271.61 1209.07 L1271.02 1209.07 L1270.44 1209.07 L1269.85 1209.07 L1269.26 1209.07 L1268.68 1209.07 L1268.09 1209.07 L1267.5 1209.07 L1266.92 1209.07 L1266.33 1209.07 L1265.74 1209.07 L1265.16 1209.07 L1264.57 1209.07 L1263.98 1209.07 L1263.4 1209.07 L1262.81 1209.07 L1262.23 1209.07 L1261.64 1209.07 L1261.05 1209.07 L1260.47 1209.07 L1259.88 1209.07 L1259.29 1209.07 L1258.71 1209.07 L1258.12 1209.07 L1257.53 1209.07 L1256.95 1209.07 L1256.36 1209.07 L1255.78 1209.07 L1255.19 1209.07 L1254.6 1209.07 L1254.02 1209.07 L1253.43 1209.07 L1252.84 1209.07 L1252.26 1209.07 L1251.67 1209.07 L1251.08 1209.07 L1250.5 1209.07 L1249.91 1209.07 L1249.32 1209.07 L1248.74 1209.07 L1248.15 1209.07 L1247.57 1209.07 L1246.98 1209.07 L1246.39 1209.07 L1245.81 1209.07 L1245.22 1209.07 L1244.63 1209.07 L1244.05 1209.07 L1243.46 1209.07 L1242.87 1209.07 L1242.29 1209.07 L1241.7 1209.07 L1241.11 1209.07 L1240.53 1209.07 L1239.94 1209.07 L1239.36 1209.07 L1238.77 1209.07 L1238.18 1209.07 L1237.6 1209.07 L1237.01 1209.07 L1236.42 1209.07 L1235.84 1209.07 L1235.25 1209.07 L1234.66 1209.07 L1234.08 1209.07 L1233.49 1209.07 L1232.91 1209.07 L1232.32 1209.07 L1231.73 1209.07 L1231.15 1209.07 L1230.56 1209.07 L1229.97 1209.07 L1229.39 1209.07 L1228.8 1209.07 L1228.21 1209.07 L1227.63 1209.07 L1227.04 1209.07 L1226.45 1209.07 L1225.87 1209.07 L1225.28 1209.07 L1224.7 1209.07 L1224.11 1209.07 L1223.52 1209.07 L1222.94 1209.07 L1222.35 1209.07 L1221.76 1209.07 L1221.18 1209.07 L1220.59 1209.07 L1220 1209.07 L1219.42 1209.07 L1218.83 1209.07 L1218.24 1209.07 L1217.66 1209.07 L1217.07 1209.07 L1216.49 1209.07 L1215.9 1209.07 L1215.31 1209.07 L1214.73 1209.07 L1214.14 1209.07 L1213.55 1209.07 L1212.97 1209.07 L1212.38 1209.07 L1211.79 1209.07 L1211.21 1209.07 L1210.62 1209.07 L1210.03 1209.07 L1209.45 1209.07 L1208.86 1209.07 L1208.28 1209.07 L1207.69 1209.07 L1207.1 1209.07 L1206.52 1209.07 L1205.93 1209.07 L1205.34 1209.07 L1204.76 1209.07 L1204.17 1209.07 L1203.58 1209.07 L1203 1209.07 L1202.41 1209.07 L1201.83 1209.07 L1201.24 1209.07 L1200.65 1209.07 L1200.07 1209.07 L1199.48 1209.07 L1198.89 1209.07 L1198.31 1209.07 L1197.72 1209.07 L1197.13 1209.07 L1196.55 1209.07 L1195.96 1209.07 L1195.37 1209.07 L1194.79 1209.07 L1194.2 1209.07 L1193.62 1209.07 L1193.03 1209.07 L1192.44 1209.07 L1191.86 1209.07 L1191.27 1209.07 L1190.68 1209.07 L1190.1 1209.07 L1189.51 1209.07 L1188.92 1209.07 L1188.34 1209.07 L1187.75 1209.07 L1187.16 1209.07 L1186.58 1209.07 L1185.99 1209.07 L1185.41 1209.07 L1184.82 1209.07 L1184.23 1209.07 L1183.65 1209.07 L1183.06 1209.07 L1182.47 1209.07 L1181.89 1209.07 L1181.3 1209.07 L1180.71 1209.07 L1180.13 1209.07 L1179.54 1209.07 L1178.96 1209.07 L1178.37 1209.07 L1177.78 1209.07 L1177.2 1209.07 L1176.61 1209.07 L1176.02 1209.07 L1175.44 1209.07 L1174.85 1209.07 L1174.26 1209.07 L1173.68 1209.07 L1173.09 1209.07 L1172.5 1209.07 L1171.92 1209.07 L1171.33 1209.07 L1170.75 1209.07 L1170.16 1209.07 L1169.57 1209.07 L1168.99 1209.07 L1168.4 1209.07 L1167.81 1209.07 L1167.23 1209.07 L1166.64 1209.07 L1166.05 1209.07 L1165.47 1209.07 L1164.88 1209.07 L1164.29 1209.07 L1163.71 1209.07 L1163.12 1209.07 L1162.54 1209.07 L1161.95 1209.07 L1161.36 1209.07 L1160.78 1209.07 L1160.19 1209.07 L1159.6 1209.07 L1159.02 1209.07 L1158.43 1209.07 L1157.84 1209.07 L1157.26 1209.07 L1156.67 1209.07 L1156.09 1209.07 L1155.5 1209.07 L1154.91 1209.07 L1154.33 1209.07 L1153.74 1209.07 L1153.15 1209.07 L1152.57 1209.07 L1151.98 1209.07 L1151.39 1209.07 L1150.81 1209.07 L1150.22 1209.07 L1149.63 1209.07 L1149.05 1209.07 L1148.46 1209.07 L1147.88 1209.07 L1147.29 1209.07 L1146.7 1209.07 L1146.12 1209.07 L1145.53 1209.07 L1144.94 1209.07 L1144.36 1209.07 L1143.77 1209.07 L1143.18 1209.07 L1142.6 1209.07 L1142.01 1209.07 L1141.42 1209.07 L1140.84 1209.07 L1140.25 1209.07 L1139.67 1209.07 L1139.08 1209.07 L1138.49 1209.07 L1137.91 1209.07 L1137.32 1209.07 L1136.73 1209.07 L1136.15 1209.07 L1135.56 1209.07 L1134.97 1209.07 L1134.39 1209.07 L1133.8 1209.07 L1133.21 1209.07 L1132.63 1209.07 L1132.04 1209.07 L1131.46 1209.07 L1130.87 1209.07 L1130.28 1209.07 L1129.7 1209.07 L1129.11 1209.07 L1128.52 1209.07 L1127.94 1209.07 L1127.35 1209.07 L1126.76 1209.07 L1126.18 1209.07 L1125.59 1209.07 L1125.01 1209.07 L1124.42 1209.07 L1123.83 1209.07 L1123.25 1209.07 L1122.66 1209.07 L1122.07 1209.07 L1121.49 1209.07 L1120.9 1209.07 L1120.31 1209.07 L1119.73 1209.07 L1119.14 1209.07 L1118.55 1209.07 L1117.97 1209.07 L1117.38 1209.07 L1116.8 1209.07 L1116.21 1209.07 L1115.62 1209.07 L1115.04 1209.07 L1114.45 1209.07 L1113.86 1209.07 L1113.28 1209.07 L1112.69 1209.07 L1112.1 1209.07 L1111.52 1209.07 L1110.93 1209.07 L1110.34 1209.07 L1109.76 1209.07 L1109.17 1209.07 L1108.59 1209.07 L1108 1209.07 L1107.41 1209.07 L1106.83 1209.07 L1106.24 1209.07 L1105.65 1209.07 L1105.07 1209.07 L1104.48 1209.07 L1103.89 1209.07 L1103.31 1209.07 L1102.72 1209.07 L1102.14 1209.07 L1101.55 1209.07 L1100.96 1209.07 L1100.38 1209.07 L1099.79 1209.07 L1099.2 1209.07 L1098.62 1209.07 L1098.03 1209.07 L1097.44 1209.07 L1096.86 1209.07 L1096.27 1209.07 L1095.68 1209.07 L1095.1 1209.07 L1094.51 1209.07 L1093.93 1209.07 L1093.34 1209.07 L1092.75 1209.07 L1092.17 1209.07 L1091.58 1209.07 L1090.99 1209.07 L1090.41 1209.07 L1089.82 1209.07 L1089.23 1209.07 L1088.65 1209.07 L1088.06 1209.07 L1087.47 1209.07 L1086.89 1209.07 L1086.3 1209.07 L1085.72 1209.07 L1085.13 1209.07 L1084.54 1209.07 L1083.96 1209.07 L1083.37 1209.07 L1082.78 1209.07 L1082.2 1209.07 L1081.61 1209.07 L1081.02 1209.07 L1080.44 1209.07 L1079.85 1209.07 L1079.26 1209.07 L1078.68 1209.07 L1078.09 1209.07 L1077.51 1209.07 L1076.92 1209.07 L1076.33 1209.07 L1075.75 1209.07 L1075.16 1209.07 L1074.57 1209.07 L1073.99 1209.07 L1073.4 1209.07 L1072.81 1209.07 L1072.23 1209.07 L1071.64 1209.07 L1071.06 1209.07 L1070.47 1209.07 L1069.88 1209.07 L1069.3 1209.07 L1068.71 1209.07 L1068.12 1209.07 L1067.54 1209.07 L1066.95 1209.07 L1066.36 1209.07 L1065.78 1209.07 L1065.19 1209.07 L1064.6 1209.07 L1064.02 1209.07 L1063.43 1209.07 L1062.85 1209.07 L1062.26 1209.07 L1061.67 1209.07 L1061.09 1209.07 L1060.5 1209.07 L1059.91 1209.07 L1059.33 1209.07 L1058.74 1209.07 L1058.15 1209.07 L1057.57 1209.07 L1056.98 1209.07 L1056.39 1209.07 L1055.81 1209.07 L1055.22 1209.07 L1054.64 1209.07 L1054.05 1209.07 L1053.46 1209.07 L1052.88 1209.07 L1052.29 1209.07 L1051.7 1209.07 L1051.12 1209.07 L1050.53 1209.07 L1049.94 1209.07 L1049.36 1209.07 L1048.77 1209.07 L1048.19 1209.07 L1047.6 1209.07 L1047.01 1209.07 L1046.43 1209.07 L1045.84 1209.07 L1045.25 1209.07 L1044.67 1209.07 L1044.08 1209.07 L1043.49 1209.07 L1042.91 1209.07 L1042.32 1209.07 L1041.73 1209.07 L1041.15 1209.07 L1040.56 1209.07 L1039.98 1209.07 L1039.39 1209.07 L1038.8 1209.07 L1038.22 1209.07 L1037.63 1209.07 L1037.04 1209.07 L1036.46 1209.07 L1035.87 1209.07 L1035.28 1209.07 L1034.7 1209.07 L1034.11 1209.07 L1033.52 1209.07 L1032.94 1209.07 L1032.35 1209.07 L1031.77 1209.07 L1031.18 1209.07 L1030.59 1209.07 L1030.01 1209.07 L1029.42 1209.07 L1028.83 1209.07 L1028.25 1209.07 L1027.66 1209.07 L1027.07 1209.07 L1026.49 1209.07 L1025.9 1209.07 L1025.32 1209.07 L1024.73 1209.07 L1024.14 1209.07 L1023.56 1209.07 L1022.97 1209.07 L1022.38 1209.07 L1021.8 1209.07 L1021.21 1209.07 L1020.62 1209.07 L1020.04 1209.07 L1019.45 1209.07 L1018.86 1209.07 L1018.28 1209.07 L1017.69 1209.07 L1017.11 1209.07 L1016.52 1209.07 L1015.93 1209.07 L1015.35 1209.07 L1014.76 1209.07 L1014.17 1209.07 L1013.59 1209.07 L1013 1209.07 L1012.41 1209.07 L1011.83 1209.07 L1011.24 1209.07 L1010.65 1209.07 L1010.07 1209.07 L1009.48 1209.07 L1008.9 1209.07 L1008.31 1209.07 L1007.72 1209.07 L1007.14 1209.07 L1006.55 1209.07 L1005.96 1209.07 L1005.38 1209.07 L1004.79 1209.07 L1004.2 1209.07 L1003.62 1209.07 L1003.03 1209.07 L1002.44 1209.07 L1001.86 1209.07 L1001.27 1209.07 L1000.69 1209.07 L1000.1 1209.07 L999.513 1209.07 L998.926 1209.07 L998.34 1209.07 L997.754 1209.07 L997.167 1209.07 L996.581 1209.07 L995.994 1209.07 L995.408 1209.07 L994.822 1209.07 L994.235 1209.07 L993.649 1209.07 L993.062 1209.07 L992.476 1209.07 L991.889 1209.07 L991.303 1209.07 L990.717 1209.07 L990.13 1209.07 L989.544 1209.07 L988.957 1209.07 L988.371 1209.07 L987.785 1209.07 L987.198 1209.07 L986.612 1209.07 L986.025 1209.07  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip162)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1209.15 986.612,1209.15 987.198,1209.15 987.785,1209.15 988.371,1209.15 988.957,1209.15 989.544,1209.15 990.13,1209.15 990.717,1209.15 991.303,1209.15 991.889,1209.15 992.476,1209.15 993.062,1209.15 993.649,1209.15 994.235,1209.15 994.822,1209.15 995.408,1209.15 995.994,1209.15 996.581,1209.15 997.167,1209.15 997.754,1209.15 998.34,1209.15 998.926,1209.15 999.513,1209.15 1000.1,1209.15 1000.69,1209.15 1001.27,1209.15 1001.86,1209.15 1002.44,1209.15 1003.03,1209.15 1003.62,1209.15 1004.2,1209.15 1004.79,1209.15 1005.38,1209.15 1005.96,1209.15 1006.55,1209.15 1007.14,1209.15 1007.72,1209.15 1008.31,1209.15 1008.9,1209.15 1009.48,1209.15 1010.07,1209.15 1010.65,1209.15 1011.24,1209.15 1011.83,1209.15 1012.41,1209.15 1013,1209.15 1013.59,1209.15 1014.17,1209.15 1014.76,1209.15 1015.35,1209.15 1015.93,1209.15 1016.52,1209.15 1017.11,1209.15 1017.69,1209.15 1018.28,1209.15 1018.86,1209.15 1019.45,1209.15 1020.04,1209.15 1020.62,1209.15 1021.21,1209.15 1021.8,1209.15 1022.38,1209.15 1022.97,1209.15 1023.56,1209.15 1024.14,1209.15 1024.73,1209.15 1025.32,1209.15 1025.9,1209.15 1026.49,1209.15 1027.07,1209.15 1027.66,1209.15 1028.25,1209.15 1028.83,1209.15 1029.42,1209.15 1030.01,1209.15 1030.59,1209.15 1031.18,1209.15 1031.77,1209.15 1032.35,1209.15 1032.94,1209.15 1033.52,1209.15 1034.11,1209.15 1034.7,1209.15 1035.28,1209.15 1035.87,1209.15 1036.46,1209.15 1037.04,1209.15 1037.63,1209.15 1038.22,1209.15 1038.8,1209.15 1039.39,1209.15 1039.98,1209.15 1040.56,1209.15 1041.15,1209.15 1041.73,1209.15 1042.32,1209.15 1042.91,1209.15 1043.49,1209.15 1044.08,1209.15 1044.67,1209.15 1045.25,1209.15 1045.84,1209.15 1046.43,1209.15 1047.01,1209.15 1047.6,1209.15 1048.19,1209.15 1048.77,1209.15 1049.36,1209.15 1049.94,1209.15 1050.53,1209.15 1051.12,1209.15 1051.7,1209.15 1052.29,1209.15 1052.88,1209.15 1053.46,1209.15 1054.05,1209.15 1054.64,1209.15 1055.22,1209.15 1055.81,1209.15 1056.39,1209.15 1056.98,1209.15 1057.57,1209.15 1058.15,1209.15 1058.74,1209.15 1059.33,1209.15 1059.91,1209.15 1060.5,1209.15 1061.09,1209.15 1061.67,1209.15 1062.26,1209.15 1062.85,1209.15 1063.43,1209.15 1064.02,1209.15 1064.6,1209.15 1065.19,1209.15 1065.78,1209.15 1066.36,1209.15 1066.95,1209.15 1067.54,1209.15 1068.12,1209.15 1068.71,1209.15 1069.3,1209.15 1069.88,1209.15 1070.47,1209.15 1071.06,1209.15 1071.64,1209.15 1072.23,1209.15 1072.81,1209.15 1073.4,1209.15 1073.99,1209.15 1074.57,1209.15 1075.16,1209.15 1075.75,1209.15 1076.33,1209.15 1076.92,1209.15 1077.51,1209.15 1078.09,1209.15 1078.68,1209.15 1079.26,1209.15 1079.85,1209.15 1080.44,1209.15 1081.02,1209.15 1081.61,1209.15 1082.2,1209.15 1082.78,1209.15 1083.37,1209.15 1083.96,1209.15 1084.54,1209.15 1085.13,1209.15 1085.72,1209.15 1086.3,1209.15 1086.89,1209.15 1087.47,1209.15 1088.06,1209.15 1088.65,1209.15 1089.23,1209.15 1089.82,1209.15 1090.41,1209.15 1090.99,1209.15 1091.58,1209.15 1092.17,1209.15 1092.75,1209.15 1093.34,1209.15 1093.93,1209.15 1094.51,1209.15 1095.1,1209.15 1095.68,1209.15 1096.27,1209.15 1096.86,1209.15 1097.44,1209.15 1098.03,1209.15 1098.62,1209.15 1099.2,1209.15 1099.79,1209.15 1100.38,1209.15 1100.96,1209.15 1101.55,1209.15 1102.14,1209.15 1102.72,1209.15 1103.31,1209.15 1103.89,1209.15 1104.48,1209.15 1105.07,1209.15 1105.65,1209.15 1106.24,1209.15 1106.83,1209.15 1107.41,1209.15 1108,1209.15 1108.59,1209.15 1109.17,1209.15 1109.76,1209.15 1110.34,1209.15 1110.93,1209.15 1111.52,1209.15 1112.1,1209.15 1112.69,1209.15 1113.28,1209.15 1113.86,1209.15 1114.45,1209.15 1115.04,1209.15 1115.62,1209.15 1116.21,1209.15 1116.8,1209.15 1117.38,1209.15 1117.97,1209.15 1118.55,1209.15 1119.14,1209.15 1119.73,1209.15 1120.31,1209.15 1120.9,1209.15 1121.49,1209.15 1122.07,1209.15 1122.66,1209.15 1123.25,1209.15 1123.83,1209.15 1124.42,1209.15 1125.01,1209.15 1125.59,1209.15 1126.18,1209.15 1126.76,1209.15 1127.35,1209.15 1127.94,1209.15 1128.52,1209.15 1129.11,1209.15 1129.7,1209.15 1130.28,1209.15 1130.87,1209.15 1131.46,1209.15 1132.04,1209.15 1132.63,1209.15 1133.21,1209.15 1133.8,1209.15 1134.39,1209.15 1134.97,1209.15 1135.56,1209.15 1136.15,1209.15 1136.73,1209.15 1137.32,1209.15 1137.91,1209.15 1138.49,1209.15 1139.08,1209.15 1139.67,1209.15 1140.25,1209.15 1140.84,1209.15 1141.42,1209.15 1142.01,1209.15 1142.6,1209.15 1143.18,1209.15 1143.77,1209.15 1144.36,1209.15 1144.94,1209.15 1145.53,1209.15 1146.12,1209.15 1146.7,1209.15 1147.29,1209.15 1147.88,1209.15 1148.46,1209.15 1149.05,1209.15 1149.63,1209.15 1150.22,1209.15 1150.81,1209.15 1151.39,1209.15 1151.98,1209.15 1152.57,1209.15 1153.15,1209.15 1153.74,1209.15 1154.33,1209.15 1154.91,1209.15 1155.5,1209.15 1156.09,1209.15 1156.67,1209.15 1157.26,1209.15 1157.84,1209.15 1158.43,1209.15 1159.02,1209.15 1159.6,1209.15 1160.19,1209.15 1160.78,1209.15 1161.36,1209.15 1161.95,1209.15 1162.54,1209.15 1163.12,1209.15 1163.71,1209.15 1164.29,1209.15 1164.88,1209.15 1165.47,1209.15 1166.05,1209.15 1166.64,1209.15 1167.23,1209.15 1167.81,1209.15 1168.4,1209.15 1168.99,1209.15 1169.57,1209.15 1170.16,1209.15 1170.75,1209.15 1171.33,1209.15 1171.92,1209.15 1172.5,1209.15 1173.09,1209.15 1173.68,1209.15 1174.26,1209.15 1174.85,1209.15 1175.44,1209.15 1176.02,1209.15 1176.61,1209.15 1177.2,1209.15 1177.78,1209.15 1178.37,1209.15 1178.96,1209.15 1179.54,1209.15 1180.13,1209.15 1180.71,1209.15 1181.3,1209.15 1181.89,1209.15 1182.47,1209.15 1183.06,1209.15 1183.65,1209.15 1184.23,1209.15 1184.82,1209.15 1185.41,1209.15 1185.99,1209.15 1186.58,1209.15 1187.16,1209.15 1187.75,1209.15 1188.34,1209.15 1188.92,1209.15 1189.51,1209.15 1190.1,1209.15 1190.68,1209.15 1191.27,1209.15 1191.86,1209.15 1192.44,1209.15 1193.03,1209.15 1193.62,1209.15 1194.2,1209.15 1194.79,1209.15 1195.37,1209.15 1195.96,1209.15 1196.55,1209.15 1197.13,1209.15 1197.72,1209.15 1198.31,1209.15 1198.89,1209.15 1199.48,1209.15 1200.07,1209.15 1200.65,1209.15 1201.24,1209.15 1201.83,1209.15 1202.41,1209.15 1203,1209.15 1203.58,1209.15 1204.17,1209.15 1204.76,1209.15 1205.34,1209.15 1205.93,1209.15 1206.52,1209.15 1207.1,1209.15 1207.69,1209.15 1208.28,1209.15 1208.86,1209.15 1209.45,1209.15 1210.03,1209.15 1210.62,1209.15 1211.21,1209.15 1211.79,1209.15 1212.38,1209.15 1212.97,1209.15 1213.55,1209.15 1214.14,1209.15 1214.73,1209.15 1215.31,1209.15 1215.9,1209.15 1216.49,1209.15 1217.07,1209.15 1217.66,1209.15 1218.24,1209.15 1218.83,1209.15 1219.42,1209.15 1220,1209.15 1220.59,1209.15 1221.18,1209.15 1221.76,1209.15 1222.35,1209.15 1222.94,1209.15 1223.52,1209.15 1224.11,1209.15 1224.7,1209.15 1225.28,1209.15 1225.87,1209.15 1226.45,1209.15 1227.04,1209.15 1227.63,1209.15 1228.21,1209.15 1228.8,1209.15 1229.39,1209.15 1229.97,1209.15 1230.56,1209.15 1231.15,1209.15 1231.73,1209.15 1232.32,1209.15 1232.91,1209.15 1233.49,1209.15 1234.08,1209.15 1234.66,1209.15 1235.25,1209.15 1235.84,1209.15 1236.42,1209.15 1237.01,1209.15 1237.6,1209.15 1238.18,1209.15 1238.77,1209.15 1239.36,1209.15 1239.94,1209.15 1240.53,1209.15 1241.11,1209.15 1241.7,1209.15 1242.29,1209.15 1242.87,1209.15 1243.46,1209.15 1244.05,1209.15 1244.63,1209.15 1245.22,1209.15 1245.81,1209.15 1246.39,1209.15 1246.98,1209.15 1247.57,1209.15 1248.15,1209.15 1248.74,1209.15 1249.32,1209.15 1249.91,1209.15 1250.5,1209.15 1251.08,1209.15 1251.67,1209.15 1252.26,1209.15 1252.84,1209.15 1253.43,1209.15 1254.02,1209.15 1254.6,1209.15 1255.19,1209.15 1255.78,1209.15 1256.36,1209.15 1256.95,1209.15 1257.53,1209.15 1258.12,1209.15 1258.71,1209.15 1259.29,1209.15 1259.88,1209.15 1260.47,1209.15 1261.05,1209.15 1261.64,1209.15 1262.23,1209.15 1262.81,1209.15 1263.4,1209.15 1263.98,1209.15 1264.57,1209.15 1265.16,1209.15 1265.74,1209.15 1266.33,1209.15 1266.92,1209.15 1267.5,1209.15 1268.09,1209.15 1268.68,1209.15 1269.26,1209.15 1269.85,1209.15 1270.44,1209.15 1271.02,1209.15 1271.61,1209.15 1272.19,1209.15 1272.78,1209.15 1273.37,1209.15 1273.95,1209.15 1274.54,1209.15 1275.13,1209.15 1275.71,1209.15 1276.3,1209.15 1276.89,1209.15 1277.47,1209.15 1278.06,1209.15 1278.65,1209.15 1279.23,1209.15 1279.82,1209.15 1280.4,1209.15 1280.99,1209.15 1281.58,1209.15 1282.16,1209.15 1282.75,1209.15 1283.34,1209.15 1283.92,1209.15 1284.51,1209.15 1285.1,1209.15 1285.68,1209.15 1286.27,1209.15 1286.86,1209.15 1287.44,1209.15 1288.03,1209.15 1288.61,1209.15 1289.2,1209.15 1289.79,1209.15 1290.37,1209.15 1290.96,1209.15 1291.55,1209.15 1292.13,1209.15 1292.72,1209.15 1293.31,1209.15 1293.89,1209.15 1294.48,1209.15 1295.06,1209.15 1295.65,1209.15 1296.24,1209.15 1296.82,1209.15 1297.41,1209.15 1298,1209.15 1298.58,1209.15 1299.17,1209.15 1299.76,1209.15 1300.34,1209.15 1300.93,1209.15 1301.52,1209.15 1302.1,1209.15 1302.69,1209.15 1303.27,1209.15 1303.86,1209.15 1304.45,1209.15 1305.03,1209.15 1305.62,1209.15 1306.21,1209.15 1306.79,1209.15 1307.38,1209.15 1307.97,1209.15 1308.55,1209.15 1309.14,1209.15 1309.73,1209.15 1310.31,1209.15 1310.9,1209.15 1311.48,1209.15 1312.07,1209.15 1312.66,1209.15 1313.24,1209.15 1313.83,1209.15 1314.42,1209.15 1315,1209.15 1315.59,1209.15 1316.18,1209.15 1316.76,1209.15 1317.35,1209.15 1317.93,1209.15 1318.52,1209.15 1319.11,1209.15 1319.69,1209.15 1320.28,1209.15 1320.87,1209.15 1321.45,1209.15 1322.04,1209.15 1322.63,1209.15 1323.21,1209.15 1323.8,1209.15 1324.39,1209.15 1324.97,1209.15 1325.56,1209.15 1326.14,1209.15 1326.73,1209.15 1327.32,1209.15 1327.9,1209.15 1328.49,1209.15 1329.08,1209.15 1329.66,1209.15 1330.25,1209.15 1330.84,1209.15 1331.42,1209.15 1332.01,1209.15 1332.6,1209.15 1333.18,1209.15 1333.77,1209.15 1334.35,1209.15 1334.94,1209.15 1335.53,1209.15 1336.11,1209.15 1336.7,1209.15 1337.29,1209.15 1337.87,1209.15 1338.46,1209.15 1339.05,1209.15 1339.63,1209.15 1340.22,1209.15 1340.8,1209.15 1341.39,1209.15 1341.98,1209.15 1342.56,1209.15 1343.15,1209.15 1343.74,1209.15 1344.32,1209.15 1344.91,1209.15 1345.5,1209.15 1346.08,1209.15 1346.67,1209.15 1347.26,1209.15 1347.84,1209.15 1348.43,1209.15 1349.01,1209.15 1349.6,1209.15 1350.19,1209.15 1350.77,1209.15 1351.36,1209.15 1351.95,1209.15 1352.53,1209.15 1353.12,1209.15 1353.71,1209.15 1354.29,1209.15 1354.88,1209.15 1355.47,1209.15 1356.05,1209.15 1356.64,1209.15 1357.22,1209.15 1357.81,1209.15 1358.4,1209.15 1358.98,1209.15 1359.57,1209.15 1360.16,1209.15 1360.74,1209.15 1361.33,1209.15 1361.92,1209.15 1362.5,1209.15 1363.09,1209.15 1363.68,1209.15 1364.26,1209.15 1364.85,1209.15 1365.43,1209.15 1366.02,1209.15 1366.61,1209.15 1367.19,1209.15 1367.78,1209.15 1368.37,1209.15 1368.95,1209.15 1369.54,1209.15 1370.13,1209.15 1370.71,1209.15 1371.3,1209.15 1371.88,1209.15 1372.47,1209.15 1373.06,1209.15 1373.64,1209.15 1374.23,1209.15 1374.82,1209.15 1375.4,1209.15 1375.99,1209.15 1376.58,1209.15 1377.16,1209.15 1377.75,1209.15 1378.34,1209.15 1378.92,1209.15 1379.51,1209.15 1380.09,1209.15 1380.68,1209.15 1381.27,1209.15 1381.85,1209.15 1382.44,1209.15 1383.03,1209.15 1383.61,1209.15 1384.2,1209.15 1384.79,1209.15 1385.37,1209.15 1385.96,1209.15 1386.55,1209.15 1387.13,1209.15 1387.72,1209.15 1388.3,1209.15 1388.89,1209.15 1389.48,1209.15 1390.06,1209.15 1390.65,1209.15 1391.24,1209.15 1391.82,1209.15 1392.41,1209.15 1393,1209.15 1393.58,1209.15 1394.17,1209.15 1394.75,1209.15 1395.34,1209.15 1395.93,1209.15 1396.51,1209.15 1397.1,1209.15 1397.69,1209.15 1398.27,1209.15 1398.86,1209.15 1399.45,1209.15 1400.03,1209.15 1400.62,1209.15 1401.21,1209.15 1401.79,1209.15 1402.38,1209.15 1402.96,1209.15 1403.55,1209.15 1404.14,1209.15 1404.72,1209.15 1405.31,1209.15 1405.9,1209.15 1406.48,1209.15 1407.07,1209.15 1407.66,1209.15 1408.24,1209.15 1408.83,1209.15 1409.42,1209.15 1410,1209.15 1410.59,1209.15 1411.17,1209.15 1411.76,1209.15 1412.35,1209.15 1412.93,1209.15 1413.52,1209.15 1414.11,1209.15 1414.69,1209.15 1415.28,1209.15 1415.87,1209.15 1416.45,1209.15 1417.04,1209.15 1417.63,1209.15 1418.21,1209.15 1418.8,1209.15 1419.38,1209.15 1419.97,1209.15 1420.56,1209.15 1421.14,1209.15 1421.73,1209.15 1422.32,1209.15 1422.9,1209.15 1423.49,1209.15 1424.08,1209.15 1424.66,1209.15 1425.25,1209.15 1425.83,1209.15 1426.42,1209.15 1427.01,1209.15 1427.59,1209.15 1428.18,1209.15 1428.77,1209.15 1429.35,1209.15 1429.94,1209.15 1430.53,1209.15 1431.11,1209.15 1431.7,1209.15 1432.29,1209.15 1432.87,1209.15 1433.46,1209.15 1434.04,1209.15 1434.63,1209.15 1435.22,1209.15 1435.8,1209.15 1436.39,1209.15 1436.98,1209.15 1437.56,1209.15 1438.15,1209.15 1438.74,1209.15 1439.32,1209.15 1439.91,1209.15 1440.5,1209.15 1441.08,1209.15 1441.67,1209.15 1442.25,1209.15 1442.84,1209.15 1443.43,1209.15 1444.01,1209.15 1444.6,1209.15 1445.19,1209.15 1445.77,1209.15 1446.36,1209.15 1446.95,1209.15 1447.53,1209.15 1448.12,1209.15 1448.7,1209.15 1449.29,1209.15 1449.88,1209.15 1450.46,1209.15 1451.05,1209.15 1451.64,1209.15 1452.22,1209.15 1452.81,1209.15 1453.4,1209.15 1453.98,1209.15 1454.57,1209.15 1455.16,1209.15 1455.74,1209.15 1456.33,1209.15 1456.91,1209.15 1457.5,1209.15 1458.09,1209.15 1458.67,1209.15 1459.26,1209.15 1459.85,1209.15 1460.43,1209.15 1461.02,1209.15 1461.61,1209.15 1462.19,1209.15 1462.78,1209.15 1463.37,1209.15 1463.95,1209.15 1464.54,1209.15 1465.12,1209.15 1465.71,1209.15 1466.3,1209.15 1466.88,1209.15 1467.47,1209.15 1468.06,1209.15 1468.64,1209.15 1469.23,1209.15 1469.82,1209.15 1470.4,1209.15 1470.99,1209.15 1471.57,1209.15 1472.16,1209.15 1472.75,1209.15 1473.33,1209.15 1473.92,1209.15 1474.51,1209.15 1475.09,1209.15 1475.68,1209.15 1476.27,1209.15 1476.85,1209.15 1477.44,1209.15 1478.03,1209.15 1478.61,1209.15 1479.2,1209.15 1479.78,1209.15 1480.37,1209.15 1480.96,1209.15 1481.54,1209.15 1482.13,1209.15 1482.72,1209.15 1483.3,1209.15 1483.89,1209.15 1484.48,1209.15 1485.06,1209.15 1485.65,1209.15 1486.24,1209.15 1486.82,1209.15 1487.41,1209.15 1487.99,1209.15 1488.58,1209.15 1489.17,1209.15 1489.75,1209.15 1490.34,1209.15 1490.93,1209.15 1491.51,1209.15 1492.1,1209.15 1492.69,1209.15 1493.27,1209.15 1493.86,1209.15 1494.45,1209.15 1495.03,1209.15 1495.62,1209.15 1496.2,1209.15 1496.79,1209.15 1497.38,1209.15 1497.96,1209.15 1498.55,1209.15 1499.14,1209.15 1499.72,1209.15 1500.31,1209.15 1500.9,1209.15 1501.48,1209.15 1502.07,1209.15 1502.65,1209.15 1503.24,1209.15 1503.83,1209.15 1504.41,1209.15 1505,1209.15 1505.59,1209.15 1506.17,1209.15 1506.76,1209.15 1507.35,1209.15 1507.93,1209.15 1508.52,1209.15 1509.11,1209.15 1509.69,1209.15 1510.28,1209.15 1510.86,1209.15 1511.45,1209.15 1512.04,1209.15 1512.62,1209.15 1513.21,1209.15 1513.8,1209.15 1514.38,1209.15 1514.97,1209.15 1515.56,1209.15 1516.14,1209.15 1516.73,1209.15 1517.32,1209.15 1517.9,1209.15 1518.49,1209.15 1519.07,1209.15 1519.66,1209.15 1520.25,1209.15 1520.83,1209.15 1521.42,1209.15 1522.01,1209.15 1522.59,1209.15 1523.18,1209.15 1523.77,1209.15 1524.35,1209.15 1524.94,1209.15 1525.52,1209.15 1526.11,1209.15 1526.7,1209.15 1527.28,1209.15 1527.87,1209.15 1528.46,1209.15 1529.04,1209.15 1529.63,1209.15 1530.22,1209.15 1530.8,1209.15 1531.39,1209.15 1531.98,1209.15 1532.56,1209.15 1533.15,1209.15 1533.73,1209.15 1534.32,1209.15 1534.91,1209.15 1535.49,1209.15 1536.08,1209.15 1536.67,1209.15 1537.25,1209.15 1537.84,1209.15 1538.43,1209.15 1539.01,1209.15 1539.6,1209.15 1540.19,1209.15 1540.77,1209.15 1541.36,1209.15 1541.94,1209.15 1542.53,1209.15 1543.12,1209.15 1543.7,1209.15 1544.29,1209.15 1544.88,1209.15 1545.46,1209.15 1546.05,1209.15 1546.64,1209.15 1547.22,1209.15 1547.81,1209.15 1548.4,1209.15 1548.98,1209.15 1549.57,1209.15 1550.15,1209.15 1550.74,1209.15 1551.33,1209.15 1551.91,1209.15 1552.5,1209.15 1553.09,1209.15 1553.67,1209.15 1554.26,1209.15 1554.85,1209.15 1555.43,1209.15 1556.02,1209.15 1556.6,1209.15 1557.19,1209.15 1557.78,1209.15 1558.36,1209.15 1558.95,1209.15 1559.54,1209.15 1560.12,1209.15 1560.71,1209.15 1561.3,1209.15 1561.88,1209.15 1562.47,1209.15 1563.06,1209.15 1563.64,1209.15 1564.23,1209.15 1564.81,1209.15 1565.4,1209.15 1565.99,1209.15 1566.57,1209.15 1567.16,1209.15 1567.75,1209.15 1568.33,1209.15 1568.92,1209.15 1569.51,1209.15 1570.09,1209.15 1570.68,1209.15 1571.27,1209.15 1571.85,1209.15 1572.44,1209.15 1573.02,1209.15 1573.61,1209.15 1574.2,1209.15 1574.78,1209.15 1575.37,1209.15 1575.96,1209.15 1576.54,1209.15 1577.13,1209.15 1577.72,1209.15 1578.3,1209.15 1578.89,1209.15 1579.47,1209.15 1580.06,1209.15 1580.65,1209.15 1581.23,1209.15 1581.82,1209.15 1582.41,1209.15 1582.99,1209.15 1583.58,1209.15 1584.17,1209.15 1584.75,1209.15 1585.34,1209.15 1585.93,1209.15 1586.51,1209.15 1587.1,1209.15 1587.68,1209.15 1588.27,1209.15 1588.86,1209.15 1589.44,1209.15 1590.03,1209.15 1590.62,1209.15 1591.2,1209.15 1591.79,1209.15 1592.38,1209.15 1592.96,1209.15 1593.55,1209.15 1594.14,1209.15 1594.72,1209.15 1595.31,1209.15 1595.89,1209.15 1596.48,1209.15 1597.07,1209.15 1597.65,1209.15 1598.24,1209.15 1598.83,1209.15 1599.41,1209.15 1600,1209.15 1600.59,1209.15 1601.17,1209.15 1601.76,1209.15 1602.34,1209.15 1602.93,1209.15 1603.52,1209.15 1604.1,1209.15 1604.69,1209.15 1605.28,1209.15 1605.86,1209.15 1606.45,1209.15 1607.04,1209.15 1607.62,1209.15 1608.21,1209.15 1608.8,1209.15 1609.38,1209.15 1609.97,1209.15 1610.55,1209.15 1611.14,1209.15 1611.73,1209.15 1612.31,1209.15 1612.9,1209.15 1613.49,1209.15 1614.07,1209.15 1614.66,1209.15 1615.25,1209.15 1615.83,1209.15 1616.42,1209.15 1617.01,1209.15 1617.59,1209.15 1618.18,1209.15 1618.76,1209.15 1619.35,1209.15 1619.94,1209.15 1620.52,1209.15 1621.11,1209.15 1621.7,1209.15 1622.28,1209.15 1622.87,1209.15 1623.46,1209.15 1624.04,1209.15 1624.63,1209.15 1625.22,1209.15 1625.8,1209.15 1626.39,1209.15 1626.97,1209.15 1627.56,1209.15 1628.15,1209.15 1628.73,1209.15 1629.32,1209.15 1629.91,1209.15 1630.49,1209.15 1631.08,1209.15 1631.67,1209.15 1632.25,1209.15 1632.84,1209.15 1633.42,1209.15 1634.01,1209.15 1634.6,1209.15 1635.18,1209.15 1635.77,1209.15 1636.36,1209.15 1636.94,1209.15 1637.53,1209.15 1638.12,1209.15 1638.7,1209.15 1639.29,1209.15 1639.88,1209.15 1640.46,1209.15 1641.05,1209.15 1641.63,1209.15 1642.22,1209.15 1642.81,1209.15 1643.39,1209.15 1643.98,1209.15 1644.57,1209.15 1645.15,1209.15 1645.74,1209.15 1646.33,1209.15 1646.91,1209.15 1647.5,1209.15 1648.09,1209.15 1648.67,1209.15 1649.26,1209.15 1649.84,1209.15 1650.43,1209.15 1651.02,1209.15 1651.6,1209.15 1652.19,1209.15 1652.78,1209.15 1653.36,1209.15 1653.95,1209.15 1654.54,1209.15 1655.12,1209.15 1655.71,1209.15 1656.29,1209.15 1656.88,1209.15 1657.47,1209.15 1658.05,1209.15 1658.64,1209.15 1659.23,1209.15 1659.81,1209.15 1660.4,1209.15 1660.99,1209.15 1661.57,1209.15 1662.16,1209.15 1662.75,1209.15 1663.33,1209.15 1663.92,1209.15 1664.5,1209.15 1665.09,1209.15 1665.68,1209.15 1666.26,1209.15 1666.85,1209.15 1667.44,1209.15 1668.02,1209.15 1668.61,1209.15 1669.2,1209.15 1669.78,1209.15 1670.37,1209.15 1670.96,1209.15 1671.54,1209.15 1672.13,1209.15 1672.71,1209.15 1673.3,1209.15 1673.89,1209.15 1674.47,1209.15 1675.06,1209.15 1675.65,1209.15 1676.23,1209.15 1676.82,1209.15 1677.41,1209.15 1677.99,1209.15 1678.58,1209.15 1679.17,1209.15 1679.75,1209.15 1680.34,1209.15 1680.92,1209.15 1681.51,1209.15 1682.1,1209.15 1682.68,1209.15 1683.27,1209.15 1683.86,1209.15 1684.44,1209.15 1685.03,1209.15 1685.62,1209.15 1686.2,1209.15 1686.79,1209.15 1687.37,1209.15 1687.96,1209.15 1688.55,1209.15 1689.13,1209.15 1689.72,1209.15 1690.31,1209.15 1690.89,1209.15 1691.48,1209.15 1692.07,1209.15 1692.65,1209.15 1693.24,1209.15 1693.83,1209.15 1694.41,1209.15 1695,1209.15 1695.58,1209.15 1696.17,1209.15 1696.76,1209.15 1697.34,1209.15 1697.93,1209.15 1698.52,1209.15 1699.1,1209.15 1699.69,1209.15 1700.28,1209.15 1700.86,1209.15 1701.45,1209.15 1702.04,1209.15 1702.62,1209.15 1703.21,1209.15 1703.79,1209.15 1704.38,1209.15 1704.97,1209.15 1705.55,1209.15 1706.14,1209.15 1706.73,1209.15 1707.31,1209.15 1707.9,1209.15 1708.49,1209.15 1709.07,1209.15 1709.66,1209.15 1710.24,1209.15 1710.83,1209.15 1711.42,1209.15 1712,1209.15 1712.59,1209.15 1713.18,1209.15 1713.76,1209.15 1714.35,1209.15 1714.94,1209.15 1715.52,1209.15 1716.11,1209.15 1716.7,1209.15 1717.28,1209.15 1717.87,1209.15 1718.45,1209.15 1719.04,1209.15 1719.63,1209.15 1720.21,1209.15 1720.8,1209.15 1721.39,1209.15 1721.97,1209.15 1722.56,1209.15 1723.15,1209.15 1723.73,1209.15 1724.32,1209.15 1724.91,1209.15 1725.49,1209.15 1726.08,1209.15 1726.66,1209.15 1727.25,1209.15 1727.84,1209.15 1728.42,1209.15 1729.01,1209.15 1729.6,1209.15 1730.18,1209.15 1730.77,1209.15 1731.36,1209.15 1731.94,1209.15 1732.53,1209.15 1733.11,1209.15 1733.7,1209.15 1734.29,1209.15 1734.87,1209.15 1735.46,1209.15 1736.05,1209.15 1736.63,1209.15 1737.22,1209.15 1737.81,1209.15 1738.39,1209.15 1738.98,1209.15 1739.57,1209.15 1740.15,1209.15 1740.74,1209.15 1741.32,1209.15 1741.91,1209.15 1742.5,1209.15 1743.08,1209.15 1743.67,1209.15 1744.26,1209.15 1744.84,1209.15 1745.43,1209.15 1746.02,1209.15 1746.6,1209.15 1747.19,1209.15 1747.78,1209.15 1748.36,1209.15 1748.95,1209.15 1749.53,1209.15 1750.12,1209.15 1750.71,1209.15 1751.29,1209.15 1751.88,1209.15 1752.47,1209.15 1753.05,1209.15 1753.64,1209.15 1754.23,1209.15 1754.81,1209.15 1755.4,1209.15 1755.99,1209.15 1756.57,1209.15 1757.16,1209.15 1757.74,1209.15 1758.33,1209.15 1758.92,1209.15 1759.5,1209.15 1760.09,1209.15 1760.68,1209.15 1761.26,1209.15 1761.85,1209.15 1762.44,1209.15 1763.02,1209.15 1763.61,1209.15 1764.19,1209.15 1764.78,1209.15 1765.37,1209.15 1765.95,1209.15 1766.54,1209.15 1767.13,1209.15 1767.71,1209.15 1768.3,1209.15 1768.89,1209.15 1769.47,1209.15 1770.06,1209.15 1770.65,1209.15 1771.23,1209.15 1771.82,1209.15 1772.4,1209.15 1772.99,1209.15 1773.58,1209.15 1774.16,1209.15 1774.75,1209.15 1775.34,1209.15 1775.92,1209.15 1776.51,1209.15 1777.1,1209.15 1777.68,1209.15 1778.27,1209.15 1778.86,1209.15 1779.44,1209.15 1780.03,1209.15 1780.61,1209.15 1781.2,1209.15 1781.79,1209.15 1782.37,1209.15 1782.96,1209.15 1783.55,1209.15 1784.13,1209.15 1784.72,1209.15 1785.31,1209.15 1785.89,1209.15 1786.48,1209.15 1787.06,1209.15 1787.65,1209.15 1788.24,1209.15 1788.82,1209.15 1789.41,1209.15 1790,1209.15 1790.58,1209.15 1791.17,1209.15 1791.76,1209.15 1792.34,1209.15 1792.93,1209.15 1793.52,1209.15 1794.1,1209.15 1794.69,1209.15 1795.27,1209.15 1795.86,1209.15 1796.45,1209.15 1797.03,1209.15 1797.62,1209.15 1798.21,1209.15 1798.79,1209.15 1799.38,1209.15 1799.97,1209.15 1800.55,1209.15 1801.14,1209.15 1801.73,1209.15 1802.31,1209.15 1802.9,1209.15 1803.48,1209.15 1804.07,1209.15 1804.66,1209.15 1805.24,1209.15 1805.83,1209.15 1806.42,1209.15 1807,1209.15 1807.59,1209.15 1808.18,1209.15 1808.76,1209.15 1809.35,1209.15 1809.94,1209.15 1810.52,1209.15 1811.11,1209.15 1811.69,1209.15 1812.28,1209.15 1812.87,1209.15 1813.45,1209.15 1814.04,1209.15 1814.63,1209.15 1815.21,1209.15 1815.8,1209.15 1816.39,1209.15 1816.97,1209.15 1817.56,1209.15 1818.14,1209.15 1818.73,1209.15 1819.32,1209.15 1819.9,1209.15 1820.49,1209.15 1821.08,1209.15 1821.66,1209.15 1822.25,1209.15 1822.84,1209.15 1823.42,1209.15 1824.01,1209.15 1824.6,1209.15 1825.18,1209.15 1825.77,1209.15 1826.35,1209.15 1826.94,1209.15 1827.53,1209.15 1828.11,1209.15 1828.7,1209.15 1829.29,1209.15 1829.87,1209.15 1830.46,1209.15 1831.05,1209.15 1831.63,1209.15 1832.22,1209.15 1832.81,1209.15 1833.39,1209.15 1833.98,1209.15 1834.56,1209.15 1835.15,1209.15 1835.74,1209.15 1836.32,1209.15 1836.91,1209.15 1837.5,1209.15 1838.08,1209.15 1838.67,1209.15 1839.26,1209.15 1839.84,1209.15 1840.43,1209.15 1841.01,1209.15 1841.6,1209.15 1842.19,1209.15 1842.77,1209.15 1843.36,1209.15 1843.95,1209.15 1844.53,1209.15 1845.12,1209.15 1845.71,1209.15 1846.29,1209.15 1846.88,1209.15 1847.47,1209.15 1848.05,1209.15 1848.64,1209.15 1849.22,1209.15 1849.81,1209.15 1850.4,1209.15 1850.98,1209.15 1851.57,1209.15 1852.16,1209.15 1852.74,1209.15 1853.33,1209.15 1853.92,1209.15 1854.5,1209.15 1855.09,1209.15 1855.68,1209.15 1856.26,1209.15 1856.85,1209.15 1857.43,1209.15 1858.02,1209.15 1858.61,1209.15 1859.19,1209.15 1859.78,1209.15 1860.37,1209.15 1860.95,1209.15 1861.54,1209.15 1862.13,1209.15 1862.71,1209.15 1863.3,1209.15 1863.88,1209.15 1864.47,1209.15 1865.06,1209.15 1865.64,1209.15 1866.23,1209.15 1866.82,1209.15 1867.4,1209.15 1867.99,1209.15 1868.58,1209.15 1869.16,1209.15 1869.75,1209.15 1870.34,1209.15 1870.92,1209.15 1871.51,1209.15 1872.09,1209.15 1872.68,1209.15 1873.27,1209.15 1873.85,1209.15 1874.44,1209.15 1875.03,1209.15 1875.61,1209.15 1876.2,1209.15 1876.79,1209.15 1877.37,1209.15 1877.96,1209.15 1878.55,1209.15 1879.13,1209.15 1879.72,1209.15 1880.3,1209.15 1880.89,1209.15 1881.48,1209.15 1882.06,1209.15 1882.65,1209.15 1883.24,1209.15 1883.82,1209.15 1884.41,1209.15 1885,1209.15 1885.58,1209.15 1886.17,1209.15 1886.76,1209.15 1887.34,1209.15 1887.93,1209.15 1888.51,1209.15 1889.1,1209.15 1889.69,1209.15 1890.27,1209.15 1890.86,1209.15 1891.45,1209.15 1892.03,1209.15 1892.62,1209.15 1893.21,1209.15 1893.79,1209.15 1894.38,1209.15 1894.96,1209.15 1895.55,1209.15 1896.14,1209.15 1896.72,1209.15 1897.31,1209.15 1897.9,1209.15 1898.48,1209.15 1899.07,1209.15 1899.66,1209.15 1900.24,1209.15 1900.83,1209.15 1901.42,1209.15 1902,1209.15 1902.59,1209.15 1903.17,1209.15 1903.76,1209.15 1904.35,1209.15 1904.93,1209.15 1905.52,1209.15 1906.11,1209.15 1906.69,1209.15 1907.28,1209.15 1907.87,1209.15 1908.45,1209.15 1909.04,1209.15 1909.63,1209.15 1910.21,1209.15 1910.8,1209.15 1911.38,1209.15 1911.97,1209.15 1912.56,1209.15 1913.14,1209.15 1913.73,1209.15 1914.32,1209.15 1914.9,1209.15 1915.49,1209.15 1916.08,1209.15 1916.66,1209.15 1917.25,1209.15 1917.83,1209.15 1918.42,1209.15 1919.01,1209.15 1919.59,1209.15 1920.18,1209.15 1920.77,1209.15 1921.35,1209.15 1921.94,1209.15 1922.53,1209.15 1923.11,1209.15 1923.7,1209.15 1924.29,1209.15 1924.87,1209.15 1925.46,1209.15 1926.04,1209.15 1926.63,1209.15 1927.22,1209.15 1927.8,1209.15 1928.39,1209.15 1928.98,1209.15 1929.56,1209.15 1930.15,1209.15 1930.74,1209.15 1931.32,1209.15 1931.91,1209.15 1932.5,1209.15 1933.08,1209.15 1933.67,1209.15 1934.25,1209.15 1934.84,1209.15 1935.43,1209.15 1936.01,1209.15 1936.6,1209.15 1937.19,1209.15 1937.77,1209.15 1938.36,1209.15 1938.95,1209.15 1939.53,1209.15 1940.12,1209.15 1940.71,1209.15 1941.29,1209.15 1941.88,1209.15 1942.46,1209.15 1943.05,1209.15 1943.64,1209.15 1944.22,1209.15 1944.81,1209.15 1945.4,1209.15 1945.98,1209.15 1946.57,1209.15 1947.16,1209.15 1947.74,1209.15 1948.33,1209.15 1948.91,1209.15 1949.5,1209.15 1950.09,1209.15 1950.67,1209.15 1951.26,1209.15 1951.85,1209.15 1952.43,1209.15 1953.02,1209.15 1953.61,1209.15 1954.19,1209.15 1954.78,1209.15 1955.37,1209.15 1955.95,1209.15 1956.54,1209.15 1957.12,1209.15 1957.71,1209.15 1958.3,1209.15 1958.88,1209.15 1959.47,1209.15 1960.06,1209.15 1960.64,1209.15 1961.23,1209.15 1961.82,1209.15 1962.4,1209.15 1962.99,1209.15 1963.58,1209.15 1964.16,1209.15 1964.75,1209.15 1965.33,1209.15 1965.92,1209.15 1966.51,1209.15 1967.09,1209.15 1967.68,1209.15 1968.27,1209.15 1968.85,1209.15 1969.44,1209.15 1970.03,1209.15 1970.61,1209.15 1971.2,1209.15 1971.78,1209.15 1972.37,1209.15 1972.96,1209.15 1973.54,1209.15 1974.13,1209.15 1974.72,1209.15 1975.3,1209.15 1975.89,1209.15 1976.48,1209.15 1977.06,1209.15 1977.65,1209.15 1978.24,1209.15 1978.82,1209.15 1979.41,1209.15 1979.99,1209.15 1980.58,1209.15 1981.17,1209.15 1981.75,1209.15 1982.34,1209.15 1982.93,1209.15 1983.51,1209.15 1984.1,1209.15 1984.69,1209.15 1985.27,1209.15 1985.86,1209.15 1986.45,1209.15 1987.03,1209.15 1987.62,1209.15 1988.2,1209.15 1988.79,1209.15 1989.38,1209.15 1989.96,1209.15 1990.55,1209.15 1991.14,1209.15 1991.72,1209.15 1992.31,1209.15 1992.9,1209.15 1993.48,1209.15 1994.07,1209.15 1994.65,1209.15 1995.24,1209.15 1995.83,1209.15 1996.41,1209.15 1997,1209.15 1997.59,1209.15 1998.17,1209.15 1998.76,1209.15 1999.35,1209.15 1999.93,1209.15 2000.52,1209.15 2001.11,1209.15 2001.69,1209.15 2002.28,1209.15 2002.86,1209.15 2003.45,1209.15 2004.04,1209.15 2004.62,1209.15 2005.21,1209.15 2005.8,1209.15 2006.38,1209.15 2006.97,1209.15 2007.56,1209.15 2008.14,1209.15 2008.73,1209.15 2009.32,1209.15 2009.9,1209.15 2010.49,1209.15 2011.07,1209.15 2011.66,1209.15 2012.25,1209.15 2012.83,1209.15 2013.42,1209.15 2014.01,1209.15 2014.59,1209.15 2015.18,1209.15 2015.77,1209.15 2016.35,1209.15 2016.94,1209.15 2017.53,1209.15 2018.11,1209.15 2018.7,1209.15 2019.28,1209.15 2019.87,1209.15 2020.46,1209.15 2021.04,1209.15 2021.63,1209.15 2022.22,1209.15 2022.8,1209.15 2023.39,1209.15 2023.98,1209.15 2024.56,1209.15 2025.15,1209.15 2025.73,1209.15 2026.32,1209.15 2026.91,1209.15 2027.49,1209.15 2028.08,1209.15 2028.67,1209.15 2029.25,1209.15 2029.84,1209.15 2030.43,1209.15 2031.01,1209.15 2031.6,1209.15 2032.19,1209.15 2032.77,1209.15 2033.36,1209.15 2033.94,1209.15 2034.53,1209.15 2035.12,1209.15 2035.7,1209.15 2036.29,1209.15 2036.88,1209.15 2037.46,1209.15 2038.05,1209.15 2038.64,1209.15 2039.22,1209.15 2039.81,1209.15 2040.4,1209.15 2040.98,1209.15 2041.57,1209.15 2042.15,1209.15 2042.74,1209.15 2043.33,1209.15 2043.91,1209.15 2044.5,1209.15 2045.09,1209.15 2045.67,1209.15 2046.26,1209.15 2046.85,1209.15 2047.43,1209.15 2048.02,1209.15 2048.6,1209.15 2049.19,1209.15 2049.78,1209.15 2050.36,1209.15 2050.95,1209.15 2051.54,1209.15 2052.12,1209.15 2052.71,1209.15 2053.3,1209.15 2053.88,1209.15 2054.47,1209.15 2055.06,1209.15 2055.64,1209.15 2056.23,1209.15 2056.81,1209.15 2057.4,1209.15 2057.99,1209.15 2058.57,1209.15 2059.16,1209.15 2059.75,1209.15 2060.33,1209.15 2060.92,1209.15 2061.51,1209.15 2062.09,1209.15 2062.68,1209.15 2063.27,1209.15 2063.85,1209.15 2064.44,1209.15 2065.02,1209.15 2065.61,1209.15 2066.2,1209.15 2066.78,1209.15 2067.37,1209.15 2067.96,1209.15 2068.54,1209.15 2069.13,1209.15 2069.72,1209.15 2070.3,1209.15 2070.89,1209.15 2071.48,1209.15 2072.06,1209.15 2072.65,1209.15 2073.23,1209.15 2073.82,1209.15 2074.41,1209.15 2074.99,1209.15 2075.58,1209.15 2076.17,1209.15 2076.75,1209.15 2077.34,1209.15 2077.93,1209.15 2078.51,1209.15 2079.1,1209.15 2079.68,1209.15 2080.27,1209.15 2080.86,1209.15 2081.44,1209.15 2082.03,1209.15 2082.62,1209.15 2083.2,1209.15 2083.79,1209.15 2084.38,1209.15 2084.96,1209.15 2085.55,1209.15 2086.14,1209.15 2086.72,1209.15 2087.31,1209.15 2087.89,1209.15 2088.48,1209.15 2089.07,1209.15 2089.65,1209.15 2090.24,1209.15 2090.83,1209.15 2091.41,1209.15 2092,1209.15 2092.59,1209.15 2093.17,1209.15 2093.76,1209.15 2094.35,1209.15 2094.93,1209.15 2095.52,1209.15 2096.1,1209.15 2096.69,1209.15 2097.28,1209.15 2097.86,1209.15 2098.45,1209.15 2099.04,1209.15 2099.62,1209.15 2100.21,1209.15 2100.8,1209.15 2101.38,1209.15 2101.97,1209.15 2102.55,1209.15 2103.14,1209.15 2103.73,1209.15 2104.31,1209.15 2104.9,1209.15 2105.49,1209.15 2106.07,1209.15 2106.66,1209.15 2107.25,1209.15 2107.83,1209.15 2108.42,1209.15 2109.01,1209.15 2109.59,1209.15 2110.18,1209.15 2110.76,1209.15 2111.35,1209.15 2111.94,1209.15 2112.52,1209.15 2113.11,1209.15 2113.7,1209.15 2114.28,1209.15 2114.87,1209.15 2115.46,1209.15 2116.04,1209.15 2116.63,1209.15 2117.22,1209.15 2117.8,1209.15 2118.39,1209.15 2118.97,1209.15 2119.56,1209.15 2120.15,1209.15 2120.73,1209.15 2121.32,1209.15 2121.91,1209.15 2122.49,1209.15 2123.08,1209.15 2123.67,1209.15 2124.25,1209.15 2124.84,1209.15 2125.42,1209.15 2126.01,1209.15 2126.6,1209.15 2127.18,1209.15 2127.77,1209.15 2128.36,1209.15 2128.94,1209.15 2129.53,1209.15 2130.12,1209.15 2130.7,1209.15 2131.29,1209.15 2131.88,1209.15 2132.46,1209.15 2133.05,1209.15 2133.63,1209.15 2134.22,1209.15 2134.81,1209.15 2135.39,1209.15 2135.98,1209.15 2136.57,1209.15 2137.15,1209.15 2137.74,1209.15 2138.33,1209.15 2138.91,1209.15 2139.5,1209.15 2140.09,1209.15 2140.67,1209.15 2141.26,1209.15 2141.84,1209.15 2142.43,1209.15 2143.02,1209.15 2143.6,1209.15 2144.19,1209.15 2144.78,1209.15 2145.36,1209.15 2145.95,1209.15 2146.54,1209.15 2147.12,1209.15 2147.71,1209.15 2148.3,1209.15 2148.88,1209.15 2149.47,1209.15 2150.05,1209.15 2150.64,1209.15 2151.23,1209.15 2151.81,1209.15 2152.4,1209.15 2152.99,1209.15 2153.57,1209.15 2154.16,1209.15 2154.75,1209.15 2155.33,1209.15 2155.92,1209.15 2156.5,1209.15 2157.09,1209.15 2157.68,1209.15 2158.26,1209.15 \"/>\n<polyline clip-path=\"url(#clip162)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1561.97,1191.13 1400.07,899.083 \"/>\n<polyline clip-path=\"url(#clip162)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1226.77 985.439,1191.13 2158.26,1191.13 2158.26,1226.77 985.439,1226.77 \"/>\n<path clip-path=\"url(#clip160)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip160)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip160)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip160)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip160)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip160)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip163\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip163)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip163)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip163)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip163)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip163)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip160)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip163)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip163)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip163)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip163)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip163)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip160)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip163)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-1577.5 161.555,-2922.08 162.114,-4155.78 162.673,-5286.05 163.232,-4871.05 163.792,-5835.79 164.351,-6740.26 164.91,-6352.89 165.469,-7226.84 166.029,-7984.87 166.588,-8671.91 167.147,-9273.42 167.706,-9833.06 168.266,-10318.4 168.825,-10766.4 169.384,-9596.56 169.943,-10014.3 170.503,-10384.3 171.062,-10071.7 171.621,-10392.2 172.18,-10665.3 172.74,-10915.7 173.299,-11129.9 173.858,-11310.3 174.417,-11448.6 174.977,-11155 175.536,-11242.6 176.095,-10942.4 176.655,-10670.3 177.214,-10398.7 177.773,-10157.3 178.332,-10182.8 178.892,-10188.7 179.451,-9942.09 180.01,-9907.85 180.569,-9657.47 181.129,-9425.56 181.688,-9391.29 182.247,-9157.71 182.806,-8930.99 183.366,-8875.62 183.925,-8655.93 184.484,-8453.5 185.043,-8248.06 185.603,-8033.19 186.162,-7701.53 186.721,-7497.65 187.28,-7192.24 187.84,-6901.93 188.399,-6830.92 188.958,-6562.67 189.517,-6480.51 190.077,-6146.09 190.636,-6076.44 191.195,-6001.97 191.754,-5923.26 192.314,-5768.19 192.873,-5603.83 193.432,-5312.5 193.991,-5176.49 194.551,-4978.86 195.11,-4838.74 195.669,-4762.3 196.228,-4569.81 196.788,-4439.34 197.347,-4308.8 197.906,-4183.34 198.465,-4108.57 199.025,-3990.66 199.584,-3869.14 200.143,-3790.26 200.702,-3715.04 201.262,-3506.39 201.821,-3429.35 202.38,-3316.32 202.939,-3202.11 203.499,-3053.34 204.058,-2908.16 204.617,-2767.2 205.176,-2667.28 205.736,-2534.99 206.295,-2441.88 206.854,-2384.83 207.413,-2292.23 207.973,-2171.32 208.532,-2083.88 209.091,-1995.39 209.65,-1913.77 210.21,-1862.64 210.769,-1749.8 211.328,-1668.24 211.887,-1587.68 212.447,-1512.62 213.006,-1414.62 213.565,-1393.48 214.124,-1260.76 214.684,-1190.34 215.243,-1117.79 215.802,-996.846 216.361,-933.611 216.921,-771.527 217.48,-716.484 218.039,-590.69 218.598,-541.577 219.158,-417.788 219.717,-393.409 220.276,-345.832 220.835,-228.958 221.395,-192.999 221.954,-109.399 222.513,-52.6866 223.072,-66.3381 223.632,-33.5533 224.191,-0.367612 224.75,54.7217 225.309,111.684 225.869,143.872 226.428,218.16 226.987,230.884 227.546,240.853 228.106,288.41 228.665,316.775 229.224,324.31 229.783,327.711 230.343,295.361 230.902,327.488 231.461,376.952 232.02,368.414 232.58,420.36 233.139,428.412 233.698,396.392 234.257,427.729 234.817,434.376 235.376,465.215 235.935,473.812 236.494,502.421 237.054,493.88 237.613,502.956 238.172,533.318 238.731,560.675 239.291,622.643 239.85,661.174 240.409,701.717 240.968,702.464 241.528,706.313 242.087,728.069 242.646,764.755 243.205,763.706 243.765,785.331 244.324,806.304 244.883,855.289 245.442,888.034 246.002,936.746 246.561,912.981 247.12,872.552 247.679,885.908 248.239,883.012 248.798,913.642 249.357,914.225 249.916,945.745 250.476,942.672 251.035,956.968 251.594,969.436 252.153,979.163 252.713,1010.08 253.272,1007.08 253.831,1019.32 254.39,1027.24 254.95,1054.15 255.509,1060.35 256.068,1083.23 256.627,1107.92 257.187,1097.26 257.746,1139.09 258.305,1126.47 258.864,1143.65 259.424,1130.76 259.983,1134.55 260.542,1152.91 261.101,1140.01 261.661,1162.49 262.22,1132.67 262.779,1136.7 263.338,1122.51 263.898,1111.81 264.457,1113.16 265.016,1102.15 265.575,1093.39 266.135,1087.62 266.694,1127.53 267.253,1116.9 267.812,1123.11 268.372,1113.28 268.931,1109.4 269.49,1102.43 270.049,1126.87 270.609,1113.48 271.168,1140.02 271.727,1146.4 272.286,1184.67 272.846,1185.14 273.405,1171.43 273.964,1190.46 274.523,1161.38 275.083,1163.86 275.642,1133 276.201,1120.57 276.76,1075.85 277.32,1081.14 277.879,1073.16 278.438,1046.88 278.997,1025.18 279.557,1048.8 280.116,1027.2 280.675,1023.63 281.234,1015.49 281.794,1026.48 282.353,1000.97 282.912,993.304 283.471,989.878 284.031,1003.96 284.59,1016.41 285.149,1026.9 285.708,1020.36 286.268,1031.19 286.827,1028.23 287.386,988.937 287.945,1004.71 288.505,1001.42 289.064,981.081 289.623,995.779 290.182,1007.63 290.742,1017.42 291.301,1011.88 291.86,1005.32 292.419,1000.31 292.979,981.523 293.538,994.853 294.097,990.03 294.656,973.367 295.216,938.34 295.775,970.658 296.334,984.219 296.893,962.582 297.453,943.152 298.012,952.711 298.571,934.517 299.13,930.731 299.69,977.134 300.249,992.633 300.808,972.017 301.368,1000.08 301.927,943.769 302.486,925.69 303.045,940.137 303.605,972.911 304.164,968.599 304.723,966.309 305.282,962.804 305.842,960.914 306.401,1021.35 306.96,1018.99 307.519,978.147 308.079,991.972 308.638,987.379 309.197,982.584 309.756,983.109 310.316,978.976 310.875,990.796 311.434,964.979 311.993,978.714 312.553,991.475 313.112,1018.44 313.671,1014.59 314.23,991.48 314.79,1003.69 315.349,997.147 315.908,973.552 316.467,985.325 317.027,992.669 317.586,1001.71 318.145,928.416 318.704,922.477 319.264,904.469 319.823,907.483 320.382,920.763 320.941,918.556 321.501,901.601 322.06,882.265 322.619,884.057 323.178,897.58 323.738,914.705 324.297,929.352 324.856,891.204 325.415,891.198 325.975,919.191 326.534,914.836 327.093,911.619 327.652,925.06 328.212,925.173 328.771,905.606 329.33,921.808 329.889,916.043 330.449,917.552 331.008,911.276 331.567,941.091 332.126,935.724 332.686,948.127 333.245,974.649 333.804,966.667 334.363,957.337 334.923,935.431 335.482,926.261 336.041,923.211 336.6,935.27 337.16,930.662 337.719,923.032 338.278,969.384 338.837,966.826 339.397,941.752 339.956,948.232 340.515,956.844 341.074,951.087 341.634,959.938 342.193,938.606 342.752,950.162 343.311,923.695 343.871,902.436 344.43,850.775 344.989,830.243 345.548,815.614 346.108,815.513 346.667,834.578 347.226,869.821 347.785,932.393 348.345,924.275 348.904,916.231 349.463,875.931 350.022,877.398 350.582,842.675 351.141,844.603 351.7,846.715 352.259,832.649 352.819,846.827 353.378,847.502 353.937,845.611 354.496,861.201 355.056,904.66 355.615,902.446 356.174,896.463 356.733,911.192 357.293,938.264 357.852,947.52 358.411,960.904 358.97,949.645 359.53,896.403 360.089,872.57 360.648,899.439 361.207,941.839 361.767,952.883 362.326,961.631 362.885,954.362 363.444,964.592 364.004,1003.47 364.563,959.406 365.122,964.773 365.681,959.896 366.241,920.149 366.8,915.328 367.359,912.65 367.918,891.07 368.478,901.496 369.037,880.715 369.596,891.084 370.155,872.424 370.715,869.227 371.274,835.215 371.833,814.484 372.392,782.061 372.952,753.338 373.511,784.888 374.07,771.875 374.629,772.786 375.189,776.016 375.748,794.549 376.307,827.454 376.866,857.043 377.426,886.319 377.985,893.427 378.544,874.058 379.103,850.224 379.663,847.128 380.222,845.006 380.781,809.332 381.34,807.44 381.9,787.463 382.459,788.448 383.018,804.988 383.577,768.803 384.137,787.274 384.696,787.443 385.255,788.418 385.814,791.385 386.374,824.29 386.933,857.215 387.492,803.053 388.051,789.801 388.611,772.619 389.17,755.826 389.729,760.172 390.288,779.873 390.848,762.232 391.407,779.219 391.966,812.501 392.525,812.423 393.085,807.854 393.644,837.927 394.203,818.706 394.762,801.685 395.322,830.032 395.881,841.359 396.44,853.193 396.999,851.966 397.559,849.141 398.118,827.239 398.677,855.467 399.236,850.051 399.796,843.374 400.355,822.821 400.914,788.985 401.473,805.325 402.033,804.515 402.592,804.031 403.151,802.305 403.71,800.889 404.27,831.983 404.829,843.691 405.388,839.6 405.947,836.69 406.507,883.158 407.066,894.665 407.625,890.492 408.184,884.841 408.744,879.602 409.303,885.837 409.862,881.718 410.421,865.075 410.981,890.396 411.54,902.018 412.099,861.748 412.658,843.234 413.218,841.329 413.777,900.152 414.336,896.344 414.895,858.953 415.455,839.733 416.014,838.438 416.573,849.561 417.132,874.949 417.692,823.47 418.251,834.448 418.81,829.622 419.369,823.473 419.929,835.947 420.488,829.378 421.047,792.664 421.606,774.065 422.166,738.889 422.725,722.541 423.284,721.454 423.843,688.621 424.403,690.992 424.962,711.613 425.521,694.57 426.08,683.58 426.64,686.541 427.199,689.737 427.758,741.552 428.318,743.64 428.877,744.219 429.436,749.044 429.995,735.307 430.555,766.61 431.114,813.465 431.673,841.293 432.232,836.491 432.792,863.856 433.351,873.586 433.91,902.538 434.469,909.075 435.029,868.659 435.588,845.573 436.147,809.635 436.706,856.576 437.266,849.285 437.825,844.996 438.384,856.455 438.943,834.839 439.503,813.931 440.062,780.407 440.621,764.13 441.18,762.171 441.74,730.192 442.299,732.718 442.858,747.754 443.417,744.38 443.977,757.862 444.536,756.087 445.095,773.426 445.654,791.052 446.214,772.015 446.773,803.26 447.332,783.018 447.891,766.105 448.451,763.899 449.01,731.109 449.569,731.023 450.128,731.158 450.688,747.828 451.247,682.128 451.806,668.58 452.365,655.255 452.925,680.277 453.484,700.178 454.043,718.086 454.602,670.409 455.162,687.405 455.721,689.456 456.28,711.826 456.839,701.018 457.399,717.381 457.958,732.524 458.517,780.837 459.076,779.469 459.636,791.369 460.195,790.112 460.754,773.503 461.313,769.163 461.873,751.057 462.432,735.65 462.991,740.775 463.55,807.036 464.11,804.874 464.669,834.054 465.228,815.764 465.787,779.34 466.347,778.627 466.906,761.649 467.465,747.466 468.024,732.391 468.584,732.902 469.143,717.58 469.702,730.62 470.261,748.225 470.821,729.35 471.38,729.444 471.939,727.844 472.498,724.469 473.058,711.945 473.617,695.567 474.176,653.557 474.735,690.594 475.295,695.703 475.854,698.938 476.413,701.141 476.972,702.033 477.532,684.538 478.091,688.829 478.65,671.845 479.209,692.63 479.769,697.971 480.328,684.693 480.887,686.207 481.446,721.44 482.006,720.379 482.565,742.061 483.124,740.741 483.683,738.702 484.243,723.881 484.802,741.882 485.361,737.401 485.92,756.538 486.48,753.62 487.039,754.062 487.598,738.811 488.157,756.635 488.717,770.529 489.276,769.753 489.835,782.777 490.394,777.678 490.954,778.164 491.513,790.991 492.072,754.583 492.631,752.447 493.191,769.522 493.75,770.387 494.309,750.877 494.868,751.035 495.428,766.161 495.987,747.135 496.546,744.798 497.105,746.091 497.665,745.855 498.224,728.005 498.783,747.729 499.342,747.709 499.902,830.522 500.461,841.958 501.02,835.505 501.579,813.075 502.139,791.843 502.698,787.949 503.257,803.581 503.816,815.926 504.376,796.491 504.935,727.79 505.494,759.21 506.053,739.288 506.613,707.01 507.172,726.893 507.731,741.87 508.29,741.102 508.85,753.845 509.409,751.063 509.968,766.476 510.527,745.093 511.087,726.978 511.646,745.569 512.205,742.823 512.764,742.276 513.324,737.839 513.883,752.501 514.442,750.049 515.001,733.194 515.561,747.428 516.12,734.507 516.679,686.06 517.238,686.859 517.798,689.365 518.357,725.342 518.916,761.048 519.475,775.951 520.035,786.177 520.594,782.394 521.153,780.691 521.712,760.879 522.272,776.08 522.831,775.186 523.39,806.482 523.949,815.812 524.509,826.544 525.068,802.862 525.627,845.313 526.186,805.556 526.746,803.387 527.305,783.988 527.864,784.023 528.423,779.071 528.983,788.512 529.542,800.418 530.101,812.663 530.66,823.028 531.22,818.047 531.779,813.24 532.338,810.558 532.897,805.188 533.457,815.575 534.016,760.39 534.575,775.72 535.134,773.002 535.694,799.796 536.253,793.93 536.812,810.155 537.371,805.618 537.931,769.665 538.49,748.039 539.049,744.108 539.608,680.011 540.168,648.268 540.727,656.817 541.286,658.472 541.845,678.604 542.405,650.934 542.964,671.199 543.523,725.979 544.082,708.292 544.642,723.845 545.201,756.067 545.76,726.117 546.319,724.303 546.879,724.438 547.438,707.593 547.997,675.683 548.556,645.365 549.116,680.037 549.675,698.702 550.234,698.14 550.793,700.19 551.353,715.92 551.912,718.247 552.471,720.001 553.031,736.938 553.59,736.472 554.149,734.449 554.708,729.189 555.268,709.71 555.827,744.05 556.386,742.262 556.945,744.263 557.505,740.857 558.064,723.206 558.623,738.569 559.182,755.411 559.742,767.887 560.301,782.426 560.86,795.305 561.419,806.052 561.979,816.648 562.538,828.667 563.097,845.054 563.656,808.256 564.216,847.984 564.775,825.913 565.334,822.5 565.893,817.901 566.453,812.823 567.012,822.215 567.571,802.393 568.13,828.918 568.69,823.737 569.249,833.849 569.808,829.011 570.367,886.168 570.927,880.291 571.486,874.883 572.045,853.636 572.604,827.813 573.164,806.933 573.723,813.786 574.282,805.966 574.841,767.52 575.401,796.922 575.96,794.57 576.519,805.107 577.078,768.369 577.638,752.487 578.197,715.473 578.756,728.472 579.315,745.018 579.875,757.106 580.434,755.256 580.993,740.927 581.552,692.704 582.112,625.902 582.671,645.226 583.23,647.62 583.789,616.407 584.349,621.816 584.908,657.465 585.467,659.796 586.026,662.727 586.586,698.214 587.145,703.835 587.704,701.335 588.263,699.942 588.823,651.745 589.382,602.482 589.941,623.075 590.5,643.364 591.06,634.294 591.619,622.519 592.178,632.96 592.737,650.316 593.297,637.389 593.856,657.423 594.415,656.073 594.974,661.178 595.534,646.667 596.093,698.53 596.652,683.321 597.211,683.974 597.771,700.118 598.33,701.166 598.889,704.077 599.448,688.626 600.008,688.324 600.567,674.874 601.126,660.259 601.685,647.55 602.245,651.233 602.804,654.347 603.363,654.497 603.922,690.766 604.482,676.384 605.041,645.378 605.6,663.027 606.159,677.748 606.719,698.392 607.278,680.888 607.837,699.985 608.396,715.904 608.956,745.427 609.515,726.816 610.074,725.999 610.633,741.927 611.193,739.606 611.752,751.596 612.311,760.222 612.87,756.4 613.43,755.647 613.989,764.2 614.548,761.355 615.107,758.827 615.667,757.518 616.226,771.826 616.785,768.433 617.344,731.037 617.904,729.663 618.463,728.509 619.022,712.375 619.581,714.238 620.141,698.132 620.7,681.553 621.259,715.075 621.818,710.293 622.378,690.499 622.937,686.685 623.496,689.853 624.055,672.536 624.615,655.151 625.174,642.056 625.733,600.835 626.292,643.182 626.852,618.534 627.411,656.591 627.97,674.227 628.529,675.183 629.089,677.439 629.648,644.724 630.207,599.673 630.766,588.283 631.326,610.161 631.885,597.718 632.444,587.688 633.003,577.319 633.563,587.875 634.122,528.61 634.681,552.788 635.24,560.185 635.8,602.402 636.359,644.106 636.918,663.781 637.477,650.546 638.037,606.477 638.596,610.836 639.155,601.184 639.714,656.204 640.274,626.787 640.833,629.353 641.392,619.673 641.951,672.106 642.511,655.301 643.07,660.615 643.629,694.814 644.188,680.236 644.748,715.389 645.307,696.847 645.866,700.385 646.425,702.486 646.985,717.335 647.544,733.443 648.103,729.305 648.662,710.296 649.222,712.545 649.781,712.487 650.34,745.193 650.899,723.32 651.459,753.086 652.018,751.1 652.577,763.239 653.136,743.43 653.696,774.599 654.255,770.472 654.814,749.446 655.373,748.935 655.933,761.394 656.492,760.014 657.051,725.393 657.61,740.408 658.17,705.637 658.729,783.865 659.288,826.668 659.847,834.125 660.407,843.858 660.966,865.702 661.525,841.23 662.084,834.862 662.644,812.751 663.203,786.412 663.762,746.888 664.321,759.83 664.881,772.541 665.44,736.049 665.999,738.351 666.558,718.855 667.118,734.091 667.677,812.167 668.236,787.898 668.795,814.235 669.355,820.174 669.914,797.602 670.473,793.2 671.032,774.024 671.592,737.699 672.151,722.823 672.71,736.706 673.269,753.383 673.829,769.306 674.388,748.275 674.947,742.821 675.506,736.112 676.066,750.602 676.625,749.084 677.184,744.949 677.743,741.85 678.303,739.791 678.862,717.941 679.421,714.386 679.981,712.127 680.54,743.147 681.099,724.043 681.658,752.776 682.218,753.457 682.777,736.497 683.336,702.137 683.895,701.284 684.455,718.615 685.014,734.551 685.573,744.242 686.132,729.324 686.692,746.272 687.251,744.607 687.81,746.541 688.369,726.383 688.929,740.3 689.488,721.761 690.047,719.714 690.606,731.164 691.166,713.584 691.725,742.774 692.284,706.934 692.843,688.59 693.403,656.906 693.962,615.321 694.521,605.476 695.08,640.553 695.64,655.72 696.199,688.035 696.758,704.962 697.317,704.071 697.877,735.015 698.436,736.083 698.995,781.997 699.554,724.768 700.114,755.494 700.673,763.904 701.232,763.824 701.791,741.701 702.351,690.272 702.91,676.261 703.469,694.454 704.028,693.648 704.588,710.907 705.147,672.377 705.706,641.418 706.265,610.348 706.825,579.791 707.384,603.814 707.943,621.074 708.502,609.223 709.062,645.06 709.621,649.674 710.18,653.505 710.739,639.592 711.299,639.749 711.858,643.47 712.417,661.789 712.976,695.256 713.536,678.403 714.095,683.263 714.654,682.747 715.213,700.957 715.773,701.291 716.332,718.148 716.891,751.034 717.45,765.548 718.01,744.543 718.569,741.101 719.128,707.586 719.687,721.228 720.247,718.217 720.806,717.204 721.365,699.157 721.924,729.863 722.484,726.069 723.043,740.808 723.602,722.582 724.161,722.281 724.721,684.874 725.28,683.373 725.839,681.21 726.398,694.658 726.958,689.056 727.517,689.648 728.076,659.877 728.635,643.629 729.195,642.911 729.754,626.099 730.313,627.08 730.872,625.663 731.432,599.461 731.991,605.931 732.55,580.101 733.109,557.158 733.669,543.963 734.228,588.607 734.787,627.913 735.346,627.609 735.906,614.049 736.465,603.251 737.024,692.202 737.583,679.399 738.143,664.453 738.702,679.983 739.261,681.971 739.82,667.31 740.38,670.192 740.939,673.551 741.498,690.394 742.057,702.474 742.617,671.119 743.176,654.898 743.735,640.406 744.294,659.081 744.854,596.333 745.413,635.95 745.972,624.685 746.531,643.972 747.091,680.926 747.65,679.557 748.209,666.05 748.768,666.704 749.328,653.722 749.887,657.125 750.446,644.75 751.005,646.068 751.565,602.224 752.124,604.186 752.683,625.059 753.242,629.306 753.802,598.943 754.361,637.009 754.92,639.617 755.479,642.654 756.039,663.36 756.598,645.8 757.157,629.731 757.716,634.228 758.276,687.257 758.835,690.934 759.394,691.986 759.953,710 760.513,645.654 761.072,651.221 761.631,639.387 762.19,595.001 762.75,632.908 763.309,639.793 763.868,626.89 764.427,615.432 764.987,651.961 765.546,653.718 766.105,705.388 766.664,721.746 767.224,736.763 767.783,746.55 768.342,743.368 768.901,752.93 769.461,751.108 770.02,779.001 770.579,773.45 771.138,785.041 771.698,809.195 772.257,788.178 772.816,782.124 773.375,774.96 773.935,751.819 774.494,747.681 775.053,729.83 775.612,692.106 776.172,693.636 776.731,689.818 777.29,688.53 777.849,687.974 778.409,702.813 778.968,720.548 779.527,717.689 780.086,662.097 780.646,662.795 781.205,662.756 781.764,696.243 782.323,713.157 782.883,728.601 783.442,742.006 784.001,773.596 784.56,783.567 785.12,732.088 785.679,699.888 786.238,683.174 786.797,718.712 787.357,715.297 787.916,698.782 788.475,693.661 789.034,693.808 789.594,676.545 790.153,678.231 790.712,631.191 791.271,634.853 791.831,606.41 792.39,610.8 792.949,596.347 793.508,647.929 794.068,632.089 794.627,648.62 795.186,683.669 795.745,682.421 796.305,652.677 796.864,668.664 797.423,673.934 797.982,672.638 798.542,641.871 799.101,611.551 799.66,583.079 800.219,619.208 800.779,591.292 801.338,614.759 801.897,621.437 802.456,626.785 803.016,663.434 803.575,651.866 804.134,635.663 804.693,623.487 805.253,631.085 805.812,615.223 806.371,620.19 806.931,591.322 807.49,663.046 808.049,663.044 808.608,681.37 809.168,635.46 809.727,653.314 810.286,654.678 810.845,705.191 811.405,701.959 811.964,684.528 812.523,652.372 813.082,641.957 813.642,628.149 814.201,645.401 814.76,680.683 815.319,715.36 815.879,701.617 816.438,718.486 816.997,701.645 817.556,716.372 818.116,677.375 818.675,678.182 819.234,694.551 819.793,740.236 820.353,753.742 820.912,767.194 821.471,747.706 822.03,761.113 822.59,741.853 823.149,756.034 823.708,734.58 824.267,747.867 824.827,732.058 825.386,715.805 825.945,731.775 826.504,762.11 827.064,742.372 827.623,737.459 828.182,734.814 828.741,734.271 829.301,711.026 829.86,712.708 830.419,711.392 830.978,679.785 831.538,712.597 832.097,712.031 832.656,680.28 833.215,683.077 833.775,684.936 834.334,736.56 834.893,714.524 835.452,682.965 836.012,697.673 836.571,679.27 837.13,696.58 837.689,697.269 838.249,698.035 838.808,682.941 839.367,715.821 839.926,710.788 840.486,743.023 841.045,771.122 841.604,767.034 842.163,796.109 842.723,791.5 843.282,784.798 843.841,797.265 844.4,792.171 844.96,785.818 845.519,780.303 846.078,771.988 846.637,750.66 847.197,746.761 847.756,776.133 848.315,766.739 848.874,777.303 849.434,788.909 849.993,750.411 850.552,748.387 851.111,728.071 851.671,715.187 852.23,715.989 852.789,716.481 853.348,714.631 853.908,715.399 854.467,730.01 855.026,748.323 855.585,745.693 856.145,746.885 856.704,757.14 857.263,734.24 857.822,764.114 858.382,759.529 858.941,770.024 859.5,797.772 860.059,757.389 860.619,771.864 861.178,798.688 861.737,824.064 862.296,834.168 862.856,842.849 863.415,834.576 863.974,823.415 864.533,819.064 865.093,781.086 865.652,713.322 866.211,681.166 866.77,700.861 867.33,685.178 867.889,671.616 868.448,629.6 869.007,616.882 869.567,654.458 870.126,705.138 870.685,687.017 871.244,699.552 871.804,732.646 872.363,716.37 872.922,681.101 873.481,709.18 874.041,673.858 874.6,672.976 875.159,702.131 875.718,713.23 876.278,743.985 876.837,691.775 877.396,723.213 877.955,733.87 878.515,713.019 879.074,710.954 879.633,724.152 880.192,723.529 880.752,706.239 881.311,706.738 881.87,687.007 882.429,673.002 882.989,657.167 883.548,624.944 884.107,645.626 884.666,630.89 885.226,617.878 885.785,607.676 886.344,627.164 886.903,659.897 887.463,630.224 888.022,632.776 888.581,636.385 889.14,639.77 889.7,643.712 890.259,659.997 890.818,662.003 891.377,678.34 891.937,692.452 892.496,722.774 893.055,718.915 893.614,734.125 894.174,733.605 894.733,715.613 895.292,665.849 895.851,665.853 896.411,697.114 896.97,728.149 897.529,678.386 898.088,681.057 898.648,664.02 899.207,649.206 899.766,655.339 900.325,671.085 900.885,670.966 901.444,657.128 902.003,661.407 902.562,647.212 903.122,665.274 903.681,649.657 904.24,634.03 904.799,669.763 905.359,655.594 905.918,626.313 906.477,632.663 907.036,636.876 907.596,623.043 908.155,626.181 908.714,594.587 909.273,601.918 909.833,627.659 910.392,597.568 910.951,603.018 911.51,590.652 912.07,565.062 912.629,573.851 913.188,578.133 913.747,591.632 914.307,583.452 914.866,637.101 915.425,639.434 915.984,704.372 916.544,656.717 917.103,678.426 917.662,729.415 918.221,743.335 918.781,725.715 919.34,707.006 919.899,741.022 920.458,752.256 921.018,731.154 921.577,727.264 922.136,758.769 922.695,772.55 923.255,769.012 923.814,767.855 924.373,797.539 924.932,791.939 925.492,789.285 926.051,798.01 926.61,809.463 927.169,804.319 927.729,816.435 928.288,773.887 928.847,784.77 929.406,763.945 929.966,791.61 930.525,813.569 931.084,821.705 931.644,795.334 932.203,791.326 932.762,804.011 933.321,799.786 933.881,795.986 934.44,742.699 934.999,753.661 935.558,732.495 936.118,730.312 936.677,727.082 937.236,737.562 937.795,734.618 938.355,702.42 938.914,684.217 939.473,699.719 940.032,704.1 940.592,702.984 941.151,684.941 941.71,688.682 942.269,686.717 942.829,684.149 943.388,664.198 943.947,682.39 944.506,699.63 945.066,685.408 945.625,667.638 946.184,651.343 946.743,652.925 947.303,638.384 947.862,639.803 948.421,703.966 948.98,686.376 949.54,702.068 950.099,686.246 950.658,685.46 951.217,654.609 951.777,672.076 952.336,676.319 952.895,673.787 953.454,643.222 954.014,614.076 954.573,602.279 955.132,635.481 955.691,636.074 956.251,603.4 956.81,592.089 957.369,584.558 957.928,576.999 958.488,553.869 959.047,594.302 959.606,616.469 960.165,604.426 960.725,610.761 961.284,613.724 961.843,604.208 962.402,605.848 962.962,656.807 963.521,627.326 964.08,647.948 964.639,668.408 965.199,685.672 965.758,702.29 966.317,672.1 966.876,702.991 967.436,734.904 967.995,733.024 968.554,763.228 969.113,794.393 969.673,827.319 970.232,838.419 970.791,802.455 971.35,794.725 971.91,772.429 972.469,780.129 973.028,792.212 973.587,790.616 974.147,769.506 974.706,750.375 975.265,733.379 975.824,712.364 976.384,728.101 976.943,741.372 977.502,754.946 978.061,784.106 978.621,780.703 979.18,776.504 979.739,759.695 980.298,754.882 980.858,763.889 981.417,756.934 981.976,736.441 982.535,713.995 983.095,730.652 983.654,758.017 984.213,772.875 984.772,816.958 985.332,780.232 985.891,773.962 986.45,780.844 987.009,790.548 987.569,769.028 988.128,761.918 988.687,770.85 989.246,749.308 989.806,744.489 990.365,742.061 990.924,686.328 991.483,670.102 992.043,641.025 992.602,623.332 993.161,612.515 993.72,614.504 994.28,600.039 994.839,572.92 995.398,625.61 995.957,644.777 996.517,647.492 997.076,634.395 997.635,637.358 998.194,641.694 998.754,627.425 999.313,695.864 999.872,709.378 1000.43,740.996 1000.99,706.502 1001.55,689.928 1002.11,677.79 1002.67,676.087 1003.23,691.332 1003.79,673.693 1004.35,674.644 1004.91,673.518 1005.46,656.475 1006.02,655.298 1006.58,671.308 1007.14,671.817 1007.7,642.284 1008.26,675.717 1008.82,673.264 1009.38,658.339 1009.94,646.288 1010.5,631.725 1011.06,646.446 1011.62,630.476 1012.18,617.065 1012.73,619.876 1013.29,609.801 1013.85,600.207 1014.41,587.852 1014.97,604.185 1015.53,575.677 1016.09,546.671 1016.65,553.597 1017.21,562.704 1017.77,587.763 1018.33,593.742 1018.89,632.099 1019.45,635.882 1020.01,655.192 1020.56,624.118 1021.12,595.305 1021.68,585.54 1022.24,609.767 1022.8,597.571 1023.36,586.663 1023.92,576.79 1024.48,548.47 1025.04,555.212 1025.6,575.471 1026.16,581.878 1026.72,621.013 1027.28,656.952 1027.83,674.05 1028.39,645.274 1028.95,632.514 1029.51,635.107 1030.07,655.1 1030.63,641.922 1031.19,630.378 1031.75,620.436 1032.31,627.085 1032.87,631.073 1033.43,666.01 1033.99,683.097 1034.55,681.204 1035.1,664.093 1035.66,650.935 1036.22,682.413 1036.78,680.285 1037.34,679.303 1037.9,683.486 1038.46,699.554 1039.02,751.282 1039.58,762.54 1040.14,754.639 1040.7,752.559 1041.26,749.419 1041.82,748.264 1042.38,709.005 1042.93,710.54 1043.49,726.508 1044.05,755.151 1044.61,754.846 1045.17,750.812 1045.73,747.395 1046.29,745.184 1046.85,756.618 1047.41,766.796 1047.97,762.819 1048.53,756.887 1049.09,754.757 1049.65,751.393 1050.2,728.725 1050.76,693.841 1051.32,675.168 1051.88,708.281 1052.44,674.3 1053,675.24 1053.56,644.135 1054.12,678.116 1054.68,659.923 1055.24,691.468 1055.8,689.924 1056.36,687.149 1056.92,703.08 1057.48,713.953 1058.03,713.662 1058.59,727.451 1059.15,725.451 1059.71,741.715 1060.27,740.821 1060.83,739.445 1061.39,768.259 1061.95,768.04 1062.51,683.144 1063.07,663.931 1063.63,701.304 1064.19,668.677 1064.75,656.847 1065.3,625.809 1065.86,628.112 1066.42,628.144 1066.98,629.612 1067.54,602.159 1068.1,635.974 1068.66,619.251 1069.22,638.097 1069.78,636.184 1070.34,609.124 1070.9,611.214 1071.46,597.77 1072.02,569.935 1072.57,609.228 1073.13,613.589 1073.69,616.827 1074.25,634.245 1074.81,617.508 1075.37,588.04 1075.93,577.853 1076.49,601.707 1077.05,605.786 1077.61,595.197 1078.17,600.644 1078.73,604.874 1079.29,594.521 1079.85,599.791 1080.4,604.041 1080.96,605.136 1081.52,610.155 1082.08,614.214 1082.64,615.501 1083.2,636.062 1083.76,609.791 1084.32,599.027 1084.88,619.544 1085.44,658.619 1086,662.408 1086.56,666.832 1087.12,666.989 1087.67,650.426 1088.23,633.742 1088.79,620.042 1089.35,643.402 1089.91,663.637 1090.47,667.179 1091.03,668.891 1091.59,649.231 1092.15,668.424 1092.71,671.472 1093.27,672.393 1093.83,720.65 1094.39,747.987 1094.94,711.895 1095.5,692.583 1096.06,706.011 1096.62,700.832 1097.18,701.705 1097.74,684.355 1098.3,695.176 1098.86,692.429 1099.42,675.519 1099.98,712.203 1100.54,709.847 1101.1,692.743 1101.66,713.827 1102.22,712.37 1102.77,675.95 1103.33,692.407 1103.89,674.945 1104.45,660.732 1105.01,633.686 1105.57,619.554 1106.13,624.844 1106.69,626.131 1107.25,631.86 1107.81,619.321 1108.37,622.414 1108.93,624.748 1109.49,644.919 1110.04,642.013 1110.6,642.882 1111.16,642.475 1111.72,641.382 1112.28,662.625 1112.84,664.428 1113.4,680.209 1113.96,648.491 1114.52,634.682 1115.08,620.284 1115.64,559.199 1116.2,582.835 1116.76,603.041 1117.31,622.155 1117.87,625.019 1118.43,628.004 1118.99,636.736 1119.55,671.465 1120.11,689.716 1120.67,691.012 1121.23,691.323 1121.79,673.78 1122.35,689.958 1122.91,656.48 1123.47,675.677 1124.03,693.482 1124.59,706.997 1125.14,740.493 1125.7,751.659 1126.26,750.343 1126.82,810.246 1127.38,820.102 1127.94,827.383 1128.5,866.277 1129.06,878.619 1129.62,899.094 1130.18,887.361 1130.74,908.76 1131.3,868.232 1131.86,906.494 1132.41,881.425 1132.97,858.642 1133.53,836.218 1134.09,830.09 1134.65,788.372 1135.21,766.935 1135.77,746.721 1136.33,678.604 1136.89,678.783 1137.45,630.513 1138.01,634.342 1138.57,637.095 1139.13,654.612 1139.68,639.586 1140.24,624.441 1140.8,641.534 1141.36,625.655 1141.92,627.034 1142.48,611.976 1143.04,616.507 1143.6,604.307 1144.16,625.92 1144.72,628.358 1145.28,664.055 1145.84,697.284 1146.4,698.497 1146.96,698.324 1147.51,670.618 1148.07,643.234 1148.63,630.898 1149.19,637.522 1149.75,589.137 1150.31,608.441 1150.87,611.387 1151.43,609.59 1151.99,598.017 1152.55,587.823 1153.11,572.354 1153.67,582.427 1154.23,587.024 1154.78,624.934 1155.34,645.604 1155.9,663.031 1156.46,663.775 1157.02,646.314 1157.58,651.174 1158.14,633.904 1158.7,654.91 1159.26,675.121 1159.82,690.038 1160.38,671.295 1160.94,702.011 1161.5,718.202 1162.05,767.236 1162.61,777.525 1163.17,774.154 1163.73,753.079 1164.29,747.199 1164.85,746.341 1165.41,708.845 1165.97,742.58 1166.53,709.487 1167.09,723.693 1167.65,720.153 1168.21,749.095 1168.77,747.218 1169.33,760.704 1169.88,756.988 1170.44,688.025 1171,653.836 1171.56,659.153 1172.12,612.913 1172.68,586.669 1173.24,593.438 1173.8,581.43 1174.36,606.728 1174.92,579.662 1175.48,616.662 1176.04,618.061 1176.6,619.495 1177.15,638.784 1177.71,658.268 1178.27,659.397 1178.83,678.179 1179.39,674.837 1179.95,659.007 1180.51,705.117 1181.07,703.307 1181.63,705.64 1182.19,704.824 1182.75,739.972 1183.31,719.219 1183.87,700.575 1184.43,699.753 1184.98,681.646 1185.54,683.317 1186.1,696.27 1186.66,712.457 1187.22,693.171 1187.78,680.794 1188.34,681.2 1188.9,700.977 1189.46,715.546 1190.02,701.203 1190.58,684.143 1191.14,670.993 1191.7,653.801 1192.25,643.38 1192.81,632.512 1193.37,653.796 1193.93,656.301 1194.49,667.563 1195.05,665.296 1195.61,715.808 1196.17,734.195 1196.73,731.527 1197.29,696.744 1197.85,697.425 1198.41,710.706 1198.97,707.191 1199.52,704.849 1200.08,718.533 1200.64,765.081 1201.2,729.927 1201.76,727.374 1202.32,743.903 1202.88,741.789 1203.44,738.73 1204,736.224 1204.56,715.747 1205.12,715.886 1205.68,714.804 1206.24,698.061 1206.8,713.479 1207.35,744.618 1207.91,787.691 1208.47,747.614 1209.03,746.275 1209.59,740.487 1210.15,737.872 1210.71,766.333 1211.27,744.702 1211.83,738.762 1212.39,751.049 1212.95,732.306 1213.51,730.949 1214.07,712.908 1214.62,709.018 1215.18,705.191 1215.74,706.979 1216.3,689.99 1216.86,708.606 1217.42,691.022 1217.98,672.473 1218.54,691.935 1219.1,721.722 1219.66,719.353 1220.22,718.462 1220.78,714.828 1221.34,712.647 1221.89,712.284 1222.45,712.317 1223.01,694.647 1223.57,691.173 1224.13,690.351 1224.69,707.18 1225.25,676.599 1225.81,672.266 1226.37,656.067 1226.93,691.209 1227.49,692.878 1228.05,691.187 1228.61,674.762 1229.17,692.284 1229.72,707.578 1230.28,723.458 1230.84,683.951 1231.4,668.385 1231.96,650.596 1232.52,668.298 1233.08,647.849 1233.64,683.062 1234.2,669.477 1234.76,669.646 1235.32,672.401 1235.88,658.788 1236.44,644.986 1236.99,614.072 1237.55,616.731 1238.11,602.029 1238.67,607.26 1239.23,607.536 1239.79,630.081 1240.35,648.444 1240.91,636.096 1241.47,637.178 1242.03,686.77 1242.59,671.639 1243.15,683.255 1243.71,683.002 1244.26,683.111 1244.82,715.836 1245.38,695.083 1245.94,729.101 1246.5,728.539 1247.06,741.537 1247.62,738.702 1248.18,735.762 1248.74,699.57 1249.3,730.003 1249.86,727.282 1250.42,740.629 1250.98,754.395 1251.54,770.491 1252.09,745.785 1252.65,759 1253.21,704.929 1253.77,686.462 1254.33,666.347 1254.89,633.055 1255.45,632.916 1256.01,616.493 1256.57,586.786 1257.13,608.777 1257.69,643.424 1258.25,613.404 1258.81,587.346 1259.36,576.739 1259.92,600.092 1260.48,622.53 1261.04,604.829 1261.6,640.743 1262.16,658.906 1262.72,642.737 1263.28,677.688 1263.84,665.517 1264.4,698.431 1264.96,701.292 1265.52,701.45 1266.08,748.801 1266.63,727.416 1267.19,723.717 1267.75,704.38 1268.31,705.3 1268.87,720.964 1269.43,735.1 1269.99,731.507 1270.55,746.03 1271.11,770.851 1271.67,780.176 1272.23,758.255 1272.79,770.237 1273.35,797.929 1273.91,808.529 1274.46,787.551 1275.02,797.675 1275.58,792.4 1276.14,774.379 1276.7,719.924 1277.26,778.716 1277.82,755.901 1278.38,720.998 1278.94,705.565 1279.5,688.714 1280.06,672.122 1280.62,691.659 1281.18,689.609 1281.73,688.429 1282.29,703.42 1282.85,718.467 1283.41,719.59 1283.97,717.086 1284.53,683.839 1285.09,680.08 1285.65,741.256 1286.21,687.136 1286.77,637.533 1287.33,639.637 1287.89,641.645 1288.45,658.434 1289,643.43 1289.56,673.404 1290.12,691.115 1290.68,688.251 1291.24,672.269 1291.8,688.419 1292.36,654.086 1292.92,651.568 1293.48,669.402 1294.04,687.69 1294.6,654.221 1295.16,670.548 1295.72,685.21 1296.28,650.443 1296.83,683.422 1297.39,663.512 1297.95,695.467 1298.51,677.849 1299.07,691.712 1299.63,691.733 1300.19,673.885 1300.75,673.672 1301.31,658.549 1301.87,626.968 1302.43,603.197 1302.99,593.191 1303.55,615.248 1304.1,618.777 1304.66,608.438 1305.22,597.935 1305.78,617.998 1306.34,635.912 1306.9,605.885 1307.46,595.178 1308.02,599.987 1308.58,636.989 1309.14,626.87 1309.7,613.27 1310.26,615.286 1310.82,604.036 1311.38,658.603 1311.93,706.519 1312.49,718.617 1313.05,704.787 1313.61,703.522 1314.17,671.573 1314.73,688.519 1315.29,671.789 1315.85,689.302 1316.41,688.203 1316.97,688.402 1317.53,721.831 1318.09,770.171 1318.65,750.719 1319.2,777.027 1319.76,746.946 1320.32,774.183 1320.88,752.252 1321.44,764.876 1322,747.397 1322.56,745.379 1323.12,772.318 1323.68,767.877 1324.24,795.677 1324.8,772.451 1325.36,736.376 1325.92,766.844 1326.47,727.283 1327.03,740.738 1327.59,718.568 1328.15,716.304 1328.71,746.857 1329.27,759.869 1329.83,756.925 1330.39,735.066 1330.95,734.73 1331.51,715.788 1332.07,710.123 1332.63,695.336 1333.19,707.538 1333.75,724.306 1334.3,692.817 1334.86,694.797 1335.42,694.136 1335.98,677.864 1336.54,664.048 1337.1,694.753 1337.66,681.399 1338.22,663.614 1338.78,666.706 1339.34,650.479 1339.9,636.641 1340.46,640.819 1341.02,657.496 1341.57,644.885 1342.13,645.683 1342.69,661.51 1343.25,662.167 1343.81,676.823 1344.37,674.784 1344.93,689.392 1345.49,704.291 1346.05,733.914 1346.61,734.074 1347.17,780.124 1347.73,773.065 1348.29,799.722 1348.84,792.793 1349.4,784.793 1349.96,746.17 1350.52,727.332 1351.08,741.658 1351.64,690.385 1352.2,673.525 1352.76,687.423 1353.32,689.727 1353.88,687.93 1354.44,686.151 1355,654.155 1355.56,701.793 1356.12,699.332 1356.67,698.894 1357.23,665.376 1357.79,665.976 1358.35,647.882 1358.91,698.313 1359.47,697.887 1360.03,698.259 1360.59,700.054 1361.15,701.522 1361.71,685.474 1362.27,690.653 1362.83,738.158 1363.39,718.874 1363.94,717.132 1364.5,684.32 1365.06,667.879 1365.62,666.916 1366.18,668.884 1366.74,683.935 1367.3,705.769 1367.86,724.961 1368.42,754.615 1368.98,700.79 1369.54,698.034 1370.1,644.084 1370.66,679.996 1371.21,698.252 1371.77,680.307 1372.33,696.798 1372.89,696.387 1373.45,695.607 1374.01,691.868 1374.57,673.304 1375.13,644.207 1375.69,694.398 1376.25,658.685 1376.81,661.83 1377.37,681.108 1377.93,631.298 1378.49,617.882 1379.04,602.734 1379.6,610.072 1380.16,612.347 1380.72,583.52 1381.28,607.29 1381.84,629.155 1382.4,661.474 1382.96,683.059 1383.52,702.933 1384.08,671.455 1384.64,671.514 1385.2,657.07 1385.76,662.491 1386.31,648.297 1386.87,665.907 1387.43,649.093 1387.99,649.956 1388.55,668.321 1389.11,686.459 1389.67,702.805 1390.23,702.909 1390.79,717.741 1391.35,703.739 1391.91,718.668 1392.47,735.41 1393.03,698.303 1393.58,696.847 1394.14,697.679 1394.7,709.276 1395.26,724.314 1395.82,705.751 1396.38,719.95 1396.94,685.879 1397.5,668.515 1398.06,669.944 1398.62,672.248 1399.18,688.239 1399.74,639.319 1400.3,627.787 1400.86,665.468 1401.41,647.278 1401.97,665.123 1402.53,634.246 1403.09,621.925 1403.65,654.506 1404.21,639.764 1404.77,610.134 1405.33,577.009 1405.89,614.554 1406.45,654.446 1407.01,639.772 1407.57,639.72 1408.13,624.873 1408.68,627.207 1409.24,631.57 1409.8,615.158 1410.36,632.211 1410.92,636.626 1411.48,653.462 1412.04,656.429 1412.6,658.021 1413.16,678.305 1413.72,630.047 1414.28,652.426 1414.84,640.125 1415.4,661.366 1415.95,644.52 1416.51,680.958 1417.07,697.135 1417.63,680.364 1418.19,682.046 1418.75,667.27 1419.31,656.075 1419.87,675.283 1420.43,692.506 1420.99,691.942 1421.55,675.513 1422.11,691.009 1422.67,706.017 1423.23,669.137 1423.78,703.46 1424.34,719.205 1424.9,717.798 1425.46,686.564 1426.02,706.447 1426.58,703.518 1427.14,720.661 1427.7,704.706 1428.26,687.743 1428.82,716.271 1429.38,710.883 1429.94,690.631 1430.5,689.941 1431.05,694.163 1431.61,696.179 1432.17,711.432 1432.73,712.472 1433.29,743.265 1433.85,756.325 1434.41,736.682 1434.97,750.563 1435.53,698.35 1436.09,663.812 1436.65,682.266 1437.21,646.33 1437.77,617.683 1438.33,601.841 1438.88,608.758 1439.44,632.655 1440,639.183 1440.56,641.577 1441.12,610.551 1441.68,611.648 1442.24,616.283 1442.8,620.671 1443.36,638.906 1443.92,623.745 1444.48,627.133 1445.04,629.654 1445.6,615.94 1446.15,666.122 1446.71,667.381 1447.27,667.163 1447.83,665.835 1448.39,666.316 1448.95,727.284 1449.51,741.342 1450.07,743.591 1450.63,756.616 1451.19,750.959 1451.75,732.582 1452.31,762.301 1452.87,741.173 1453.42,737.19 1453.98,734.94 1454.54,683.365 1455.1,652.8 1455.66,659.86 1456.22,646.3 1456.78,663.689 1457.34,683.612 1457.9,699.67 1458.46,745.423 1459.02,756.821 1459.58,706.796 1460.14,690.672 1460.7,691.661 1461.25,688.042 1461.81,703.655 1462.37,699.073 1462.93,685.432 1463.49,704.085 1464.05,688.124 1464.61,670.652 1465.17,654.705 1465.73,657.827 1466.29,607.385 1466.85,593.18 1467.41,631.287 1467.97,615.734 1468.52,666.913 1469.08,649.605 1469.64,607.003 1470.2,610.005 1470.76,613.871 1471.32,583.844 1471.88,609.55 1472.44,596.707 1473,620.757 1473.56,640.615 1474.12,657.49 1474.68,659.558 1475.24,661.044 1475.79,644.804 1476.35,646.108 1476.91,646.792 1477.47,619.33 1478.03,607.993 1478.59,610.949 1479.15,648.691 1479.71,633.069 1480.27,635.133 1480.83,640.373 1481.39,641.032 1481.95,629.645 1482.51,635.954 1483.07,587.033 1483.62,592.932 1484.18,612.623 1484.74,633.83 1485.3,637.629 1485.86,672.129 1486.42,658.624 1486.98,663.217 1487.54,663.348 1488.1,697.612 1488.66,701.111 1489.22,718.727 1489.78,733.368 1490.34,710.648 1490.89,696.258 1491.45,696.632 1492.01,710.806 1492.57,740.397 1493.13,722.985 1493.69,704.175 1494.25,702.351 1494.81,683.134 1495.37,666.793 1495.93,666.284 1496.49,652.002 1497.05,685.742 1497.61,721.749 1498.16,702.869 1498.72,703.199 1499.28,684.18 1499.84,719.105 1500.4,718.358 1500.96,682.459 1501.52,695.609 1502.08,664.939 1502.64,650.54 1503.2,665.487 1503.76,681.595 1504.32,665.716 1504.88,668.052 1505.44,670.953 1505.99,658.547 1506.55,643.515 1507.11,629.225 1507.67,649.682 1508.23,620.446 1508.79,643.913 1509.35,727.217 1509.91,738.895 1510.47,731.979 1511.03,730.344 1511.59,728.402 1512.15,726.627 1512.71,802.395 1513.26,795.023 1513.82,758.785 1514.38,753.716 1514.94,736.565 1515.5,704.954 1516.06,723.54 1516.62,756.004 1517.18,770.603 1517.74,784.003 1518.3,778.435 1518.86,753.215 1519.42,762.775 1519.98,741.798 1520.53,770.312 1521.09,763.248 1521.65,773.711 1522.21,768.134 1522.77,747.589 1523.33,728.728 1523.89,726.035 1524.45,740.05 1525.01,724.059 1525.57,738.353 1526.13,738.197 1526.69,752.559 1527.25,733.908 1527.81,728.832 1528.36,725.856 1528.92,770.049 1529.48,748.182 1530.04,677.627 1530.6,675.316 1531.16,662.809 1531.72,678.369 1532.28,679.517 1532.84,664.22 1533.4,694.5 1533.96,697.406 1534.52,684.359 1535.08,703.458 1535.63,685.573 1536.19,697.837 1536.75,676.759 1537.31,659.74 1537.87,679.039 1538.43,628.386 1538.99,633.215 1539.55,637.274 1540.11,656.378 1540.67,639.531 1541.23,623.748 1541.79,624.451 1542.35,660.053 1542.9,661.726 1543.46,659.351 1544.02,658.471 1544.58,672.594 1545.14,721.747 1545.7,733.388 1546.26,716.85 1546.82,696.989 1547.38,712.515 1547.94,661.593 1548.5,679.979 1549.06,664.666 1549.62,636.023 1550.18,655.525 1550.73,638.352 1551.29,656.313 1551.85,622.127 1552.41,610.467 1552.97,595.203 1553.53,599.308 1554.09,649.537 1554.65,653.372 1555.21,651.532 1555.77,668.343 1556.33,648.701 1556.89,635.922 1557.45,638.431 1558,654.867 1558.56,675.878 1559.12,692.943 1559.68,707.6 1560.24,751.854 1560.8,779.25 1561.36,792.596 1561.92,790.203 1562.48,782.085 1563.04,763.602 1563.6,756.211 1564.16,751.928 1564.72,763.083 1565.28,759.61 1565.83,740.192 1566.39,740.963 1566.95,719.012 1567.51,717.447 1568.07,713.965 1568.63,712.704 1569.19,678.124 1569.75,660.566 1570.31,677.728 1570.87,680.018 1571.43,711.09 1571.99,708.426 1572.55,724.959 1573.1,704.843 1573.66,702.905 1574.22,686.212 1574.78,700.741 1575.34,699.8 1575.9,683.077 1576.46,650.036 1577.02,667.292 1577.58,703.888 1578.14,719.508 1578.7,685.159 1579.26,668.494 1579.82,617.742 1580.37,620.368 1580.93,623.561 1581.49,644.364 1582.05,680.856 1582.61,664.868 1583.17,668.669 1583.73,669.165 1584.29,701.783 1584.85,637.755 1585.41,657.348 1585.97,657.937 1586.53,658.268 1587.09,689.982 1587.65,669.206 1588.2,668.181 1588.76,669.363 1589.32,674.904 1589.88,705.16 1590.44,737.294 1591,717.476 1591.56,727.674 1592.12,707.808 1592.68,727.474 1593.24,708.352 1593.8,693.202 1594.36,689.767 1594.92,676.278 1595.47,675.026 1596.03,658.094 1596.59,596.026 1597.15,601.485 1597.71,555.85 1598.27,579.751 1598.83,616.413 1599.39,605.219 1599.95,629.631 1600.51,617.986 1601.07,606.756 1601.63,627.823 1602.19,648.11 1602.74,701.463 1603.3,702.102 1603.86,732.466 1604.42,730.812 1604.98,728.41 1605.54,740.88 1606.1,720.833 1606.66,707.267 1607.22,722.629 1607.78,735.732 1608.34,764.27 1608.9,728.922 1609.46,712.361 1610.02,695.511 1610.57,697.835 1611.13,715.922 1611.69,714.461 1612.25,713.246 1612.81,711.168 1613.37,676.38 1613.93,677.237 1614.49,679.452 1615.05,678.759 1615.61,643.441 1616.17,644.905 1616.73,648.143 1617.29,665.767 1617.84,677.114 1618.4,641.738 1618.96,661.517 1619.52,662.101 1620.08,648.176 1620.64,661.842 1621.2,650.018 1621.76,634.751 1622.32,652.6 1622.88,671.661 1623.44,692.35 1624,689.77 1624.56,672.917 1625.11,658.802 1625.67,659.576 1626.23,692.847 1626.79,674.801 1627.35,691.17 1627.91,704.486 1628.47,693.237 1629.03,661.357 1629.59,681.246 1630.15,681.839 1630.71,694.091 1631.27,711.921 1631.83,678.926 1632.39,663.182 1632.94,663.768 1633.5,651.478 1634.06,657.123 1634.62,658.321 1635.18,657.39 1635.74,646.597 1636.3,669.097 1636.86,654.854 1637.42,658.57 1637.98,660.922 1638.54,646.518 1639.1,663.759 1639.66,661.177 1640.21,712.057 1640.77,713.762 1641.33,696.401 1641.89,693.858 1642.45,709.544 1643.01,724.982 1643.57,753.893 1644.13,795.519 1644.69,803.305 1645.25,793.591 1645.81,774.091 1646.37,770.149 1646.93,763.18 1647.48,778.381 1648.04,775.836 1648.6,785.596 1649.16,715.089 1649.72,697.998 1650.28,682.04 1650.84,666.539 1651.4,682.114 1651.96,682.624 1652.52,640.091 1653.08,672.952 1653.64,691.801 1654.2,639.651 1654.76,608.558 1655.31,611.377 1655.87,613.914 1656.43,617.973 1656.99,608.851 1657.55,627.361 1658.11,616.634 1658.67,604.565 1659.23,577.937 1659.79,584.93 1660.35,590.918 1660.91,610.416 1661.47,632.493 1662.03,631.353 1662.58,666.269 1663.14,649.27 1663.7,649.495 1664.26,649.056 1664.82,655.623 1665.38,677.728 1665.94,694.11 1666.5,693.535 1667.06,646.568 1667.62,681.431 1668.18,695.928 1668.74,710.983 1669.3,708.305 1669.85,738.738 1670.41,769.065 1670.97,783.788 1671.53,761.671 1672.09,741.857 1672.65,705.934 1673.21,687.561 1673.77,705.874 1674.33,689.358 1674.89,691.98 1675.45,721.856 1676.01,703.022 1676.57,698.935 1677.13,712.771 1677.68,660.308 1678.24,678.074 1678.8,658.488 1679.36,660.153 1679.92,664.182 1680.48,649.242 1681.04,618.798 1681.6,593.044 1682.16,581.301 1682.72,586.813 1683.28,589.367 1683.84,592.695 1684.4,596.738 1684.95,600.879 1685.51,588.632 1686.07,609.166 1686.63,597.286 1687.19,598.888 1687.75,633.623 1688.31,634.524 1688.87,620.781 1689.43,622.826 1689.99,653.564 1690.55,672.96 1691.11,658.744 1691.67,659.28 1692.23,642.35 1692.78,660.814 1693.34,627.864 1693.9,651.357 1694.46,667.127 1695.02,669.158 1695.58,685.212 1696.14,703.746 1696.7,703.572 1697.26,684.119 1697.82,701.428 1698.38,685.264 1698.94,686.737 1699.5,687.54 1700.05,703.162 1700.61,687.028 1701.17,674.526 1701.73,693.708 1702.29,711.326 1702.85,723.755 1703.41,738.115 1703.97,733.661 1704.53,747.117 1705.09,743.938 1705.65,677.632 1706.21,696.83 1706.77,698.207 1707.32,699.557 1707.88,681.083 1708.44,744.778 1709,739.016 1709.56,752.784 1710.12,731.502 1710.68,743.787 1711.24,739.132 1711.8,707.392 1712.36,741.833 1712.92,738.079 1713.48,748.386 1714.04,724.543 1714.6,721.031 1715.15,747.423 1715.71,757.981 1716.27,736.939 1716.83,715.08 1717.39,699.03 1717.95,710.98 1718.51,725.585 1719.07,692.447 1719.63,674.89 1720.19,703.949 1720.75,706.012 1721.31,708.182 1721.87,691.635 1722.42,709.042 1722.98,721.908 1723.54,716.997 1724.1,715.59 1724.66,715.07 1725.22,747.855 1725.78,729.717 1726.34,741.12 1726.9,802.025 1727.46,781.138 1728.02,778.562 1728.58,789.665 1729.14,768.276 1729.69,763.869 1730.25,744.128 1730.81,789.914 1731.37,751.405 1731.93,747.346 1732.49,742.83 1733.05,770.82 1733.61,768.22 1734.17,763.54 1734.73,794.045 1735.29,787.692 1735.85,811.327 1736.41,782.593 1736.97,780.689 1737.52,810.328 1738.08,785.931 1738.64,764.572 1739.2,778.829 1739.76,738.677 1740.32,687.364 1740.88,689.48 1741.44,658.42 1742,662.661 1742.56,648.069 1743.12,648.782 1743.68,665.986 1744.24,680.773 1744.79,679.312 1745.35,629.405 1745.91,618.982 1746.47,656.47 1747.03,653.712 1747.59,671.803 1748.15,674.734 1748.71,674.051 1749.27,706.994 1749.83,706.926 1750.39,673.891 1750.95,691.465 1751.51,641.094 1752.06,610.895 1752.62,595.622 1753.18,614.197 1753.74,618.312 1754.3,638.789 1754.86,643.868 1755.42,645.037 1755.98,666.504 1756.54,651.03 1757.1,634.536 1757.66,639.797 1758.22,638.492 1758.78,674.869 1759.34,677.897 1759.89,712.248 1760.45,728.397 1761.01,739.37 1761.57,731.981 1762.13,742.417 1762.69,720.113 1763.25,718.245 1763.81,734.767 1764.37,733.642 1764.93,761.22 1765.49,774.473 1766.05,755.577 1766.61,751.756 1767.16,749.688 1767.72,729.289 1768.28,707.257 1768.84,692.062 1769.4,676.626 1769.96,677.843 1770.52,645.127 1771.08,648.257 1771.64,631.153 1772.2,621.256 1772.76,610.291 1773.32,628.998 1773.88,646.633 1774.43,667.654 1774.99,669.658 1775.55,655.304 1776.11,655.249 1776.67,637.173 1777.23,670.924 1777.79,686.667 1778.35,653.085 1778.91,656.272 1779.47,641.317 1780.03,660.132 1780.59,694.412 1781.15,740.873 1781.71,737.395 1782.26,716.181 1782.82,728.645 1783.38,742.795 1783.94,824.038 1784.5,815.85 1785.06,824.678 1785.62,801.616 1786.18,811.057 1786.74,786.995 1787.3,763.832 1787.86,775.788 1788.42,785.135 1788.98,799.711 1789.53,762.762 1790.09,792.57 1790.65,802.008 1791.21,776.688 1791.77,754.734 1792.33,732.401 1792.89,744.511 1793.45,692.401 1794.01,659.182 1794.57,662.988 1795.13,645.698 1795.69,649.978 1796.25,648.769 1796.8,604.052 1797.36,607.082 1797.92,629.803 1798.48,602.28 1799.04,591.395 1799.6,561.777 1800.16,552.406 1800.72,541.389 1801.28,549.943 1801.84,558.857 1802.4,549.619 1802.96,538.864 1803.52,560.488 1804.08,618.556 1804.63,620.053 1805.19,653.837 1805.75,670.104 1806.31,656.379 1806.87,675.459 1807.43,679.753 1807.99,701.623 1808.55,717.434 1809.11,733.002 1809.67,698.642 1810.23,714.443 1810.79,760.958 1811.35,756.265 1811.9,734.752 1812.46,732.129 1813.02,731.192 1813.58,698.691 1814.14,681.184 1814.7,709.704 1815.26,722.993 1815.82,704.931 1816.38,718.981 1816.94,716.863 1817.5,726.722 1818.06,725.056 1818.62,660.716 1819.18,680.572 1819.73,652.196 1820.29,685.037 1820.85,702.554 1821.41,712.398 1821.97,697.046 1822.53,678.693 1823.09,680.222 1823.65,682.585 1824.21,683.109 1824.77,652.629 1825.33,669.842 1825.89,686.849 1826.45,686.696 1827,653.69 1827.56,638.495 1828.12,638.323 1828.68,640.925 1829.24,642.733 1829.8,609.239 1830.36,598.694 1830.92,605.572 1831.48,593.52 1832.04,599.855 1832.6,537.74 1833.16,562.419 1833.72,567.408 1834.27,606.009 1834.83,578.61 1835.39,646.814 1835.95,647.184 1836.51,651.102 1837.07,639.139 1837.63,675.624 1838.19,644.357 \"/>\n<path clip-path=\"url(#clip163)\" d=\"M720.247 689.728 L720.806 689.728 L721.365 689.728 L721.924 689.728 L722.484 689.728 L723.043 689.728 L723.602 689.728 L724.161 689.728 L724.721 689.728 L725.28 689.728 L725.839 689.728 L726.398 689.728 L726.958 689.728 L727.517 689.728 L728.076 689.728 L728.635 689.728 L729.195 689.728 L729.754 689.728 L730.313 689.728 L730.872 689.728 L731.432 689.728 L731.991 689.728 L732.55 689.728 L733.109 689.728 L733.669 689.728 L734.228 689.728 L734.787 689.728 L735.346 689.728 L735.906 689.728 L736.465 689.728 L737.024 689.728 L737.583 689.728 L738.143 689.728 L738.702 689.728 L739.261 689.728 L739.82 689.728 L740.38 689.728 L740.939 689.728 L741.498 689.728 L742.057 689.728 L742.617 689.728 L743.176 689.728 L743.735 689.728 L744.294 689.728 L744.854 689.728 L745.413 689.728 L745.972 689.728 L746.531 689.728 L747.091 689.728 L747.65 689.728 L748.209 689.728 L748.768 689.728 L749.328 689.728 L749.887 689.728 L750.446 689.728 L751.005 689.728 L751.565 689.728 L752.124 689.728 L752.683 689.728 L753.242 689.728 L753.802 689.728 L754.361 689.728 L754.92 689.728 L755.479 689.728 L756.039 689.728 L756.598 689.728 L757.157 689.728 L757.716 689.728 L758.276 689.728 L758.835 689.728 L759.394 689.728 L759.953 689.728 L760.513 689.728 L761.072 689.728 L761.631 689.728 L762.19 689.728 L762.75 689.728 L763.309 689.728 L763.868 689.728 L764.427 689.728 L764.987 689.728 L765.546 689.728 L766.105 689.728 L766.664 689.728 L767.224 689.728 L767.783 689.728 L768.342 689.728 L768.901 689.728 L769.461 689.728 L770.02 689.728 L770.579 689.728 L771.138 689.728 L771.698 689.728 L772.257 689.728 L772.816 689.728 L773.375 689.728 L773.935 689.728 L774.494 689.728 L775.053 689.728 L775.612 689.728 L776.172 689.728 L776.731 689.728 L777.29 689.728 L777.849 689.728 L778.409 689.728 L778.968 689.728 L779.527 689.728 L780.086 689.728 L780.646 689.728 L781.205 689.728 L781.764 689.728 L782.323 689.728 L782.883 689.728 L783.442 689.728 L784.001 689.728 L784.56 689.728 L785.12 689.728 L785.679 689.728 L786.238 689.728 L786.797 689.728 L787.357 689.728 L787.916 689.728 L788.475 689.728 L789.034 689.728 L789.594 689.728 L790.153 689.728 L790.712 689.728 L791.271 689.728 L791.831 689.728 L792.39 689.728 L792.949 689.728 L793.508 689.728 L794.068 689.728 L794.627 689.728 L795.186 689.728 L795.745 689.728 L796.305 689.728 L796.864 689.728 L797.423 689.728 L797.982 689.728 L798.542 689.728 L799.101 689.728 L799.66 689.728 L800.219 689.728 L800.779 689.728 L801.338 689.728 L801.897 689.728 L802.456 689.728 L803.016 689.728 L803.575 689.728 L804.134 689.728 L804.693 689.728 L805.253 689.728 L805.812 689.728 L806.371 689.728 L806.931 689.728 L807.49 689.728 L808.049 689.728 L808.608 689.728 L809.168 689.728 L809.727 689.728 L810.286 689.728 L810.845 689.728 L811.405 689.728 L811.964 689.728 L812.523 689.728 L813.082 689.728 L813.642 689.728 L814.201 689.728 L814.76 689.728 L815.319 689.728 L815.879 689.728 L816.438 689.728 L816.997 689.728 L817.556 689.728 L818.116 689.728 L818.675 689.728 L819.234 689.728 L819.793 689.728 L820.353 689.728 L820.912 689.728 L821.471 689.728 L822.03 689.728 L822.59 689.728 L823.149 689.728 L823.708 689.728 L824.267 689.728 L824.827 689.728 L825.386 689.728 L825.945 689.728 L826.504 689.728 L827.064 689.728 L827.623 689.728 L828.182 689.728 L828.741 689.728 L829.301 689.728 L829.86 689.728 L830.419 689.728 L830.978 689.728 L831.538 689.728 L832.097 689.728 L832.656 689.728 L833.215 689.728 L833.775 689.728 L834.334 689.728 L834.893 689.728 L835.452 689.728 L836.012 689.728 L836.571 689.728 L837.13 689.728 L837.689 689.728 L838.249 689.728 L838.808 689.728 L839.367 689.728 L839.926 689.728 L840.486 689.728 L841.045 689.728 L841.604 689.728 L842.163 689.728 L842.723 689.728 L843.282 689.728 L843.841 689.728 L844.4 689.728 L844.96 689.728 L845.519 689.728 L846.078 689.728 L846.637 689.728 L847.197 689.728 L847.756 689.728 L848.315 689.728 L848.874 689.728 L849.434 689.728 L849.993 689.728 L850.552 689.728 L851.111 689.728 L851.671 689.728 L852.23 689.728 L852.789 689.728 L853.348 689.728 L853.908 689.728 L854.467 689.728 L855.026 689.728 L855.585 689.728 L856.145 689.728 L856.704 689.728 L857.263 689.728 L857.822 689.728 L858.382 689.728 L858.941 689.728 L859.5 689.728 L860.059 689.728 L860.619 689.728 L861.178 689.728 L861.737 689.728 L862.296 689.728 L862.856 689.728 L863.415 689.728 L863.974 689.728 L864.533 689.728 L865.093 689.728 L865.652 689.728 L866.211 689.728 L866.77 689.728 L867.33 689.728 L867.889 689.728 L868.448 689.728 L869.007 689.728 L869.567 689.728 L870.126 689.728 L870.685 689.728 L871.244 689.728 L871.804 689.728 L872.363 689.728 L872.922 689.728 L873.481 689.728 L874.041 689.728 L874.6 689.728 L875.159 689.728 L875.718 689.728 L876.278 689.728 L876.837 689.728 L877.396 689.728 L877.955 689.728 L878.515 689.728 L879.074 689.728 L879.633 689.728 L880.192 689.728 L880.752 689.728 L881.311 689.728 L881.87 689.728 L882.429 689.728 L882.989 689.728 L883.548 689.728 L884.107 689.728 L884.666 689.728 L885.226 689.728 L885.785 689.728 L886.344 689.728 L886.903 689.728 L887.463 689.728 L888.022 689.728 L888.581 689.728 L889.14 689.728 L889.7 689.728 L890.259 689.728 L890.818 689.728 L891.377 689.728 L891.937 689.728 L892.496 689.728 L893.055 689.728 L893.614 689.728 L894.174 689.728 L894.733 689.728 L895.292 689.728 L895.851 689.728 L896.411 689.728 L896.97 689.728 L897.529 689.728 L898.088 689.728 L898.648 689.728 L899.207 689.728 L899.766 689.728 L900.325 689.728 L900.885 689.728 L901.444 689.728 L902.003 689.728 L902.562 689.728 L903.122 689.728 L903.681 689.728 L904.24 689.728 L904.799 689.728 L905.359 689.728 L905.918 689.728 L906.477 689.728 L907.036 689.728 L907.596 689.728 L908.155 689.728 L908.714 689.728 L909.273 689.728 L909.833 689.728 L910.392 689.728 L910.951 689.728 L911.51 689.728 L912.07 689.728 L912.629 689.728 L913.188 689.728 L913.747 689.728 L914.307 689.728 L914.866 689.728 L915.425 689.728 L915.984 689.728 L916.544 689.728 L917.103 689.728 L917.662 689.728 L918.221 689.728 L918.781 689.728 L919.34 689.728 L919.899 689.728 L920.458 689.728 L921.018 689.728 L921.577 689.728 L922.136 689.728 L922.695 689.728 L923.255 689.728 L923.814 689.728 L924.373 689.728 L924.932 689.728 L925.492 689.728 L926.051 689.728 L926.61 689.728 L927.169 689.728 L927.729 689.728 L928.288 689.728 L928.847 689.728 L929.406 689.728 L929.966 689.728 L930.525 689.728 L931.084 689.728 L931.644 689.728 L932.203 689.728 L932.762 689.728 L933.321 689.728 L933.881 689.728 L934.44 689.728 L934.999 689.728 L935.558 689.728 L936.118 689.728 L936.677 689.728 L937.236 689.728 L937.795 689.728 L938.355 689.728 L938.914 689.728 L939.473 689.728 L940.032 689.728 L940.592 689.728 L941.151 689.728 L941.71 689.728 L942.269 689.728 L942.829 689.728 L943.388 689.728 L943.947 689.728 L944.506 689.728 L945.066 689.728 L945.625 689.728 L946.184 689.728 L946.743 689.728 L947.303 689.728 L947.862 689.728 L948.421 689.728 L948.98 689.728 L949.54 689.728 L950.099 689.728 L950.658 689.728 L951.217 689.728 L951.777 689.728 L952.336 689.728 L952.895 689.728 L953.454 689.728 L954.014 689.728 L954.573 689.728 L955.132 689.728 L955.691 689.728 L956.251 689.728 L956.81 689.728 L957.369 689.728 L957.928 689.728 L958.488 689.728 L959.047 689.728 L959.606 689.728 L960.165 689.728 L960.725 689.728 L961.284 689.728 L961.843 689.728 L962.402 689.728 L962.962 689.728 L963.521 689.728 L964.08 689.728 L964.639 689.728 L965.199 689.728 L965.758 689.728 L966.317 689.728 L966.876 689.728 L967.436 689.728 L967.995 689.728 L968.554 689.728 L969.113 689.728 L969.673 689.728 L970.232 689.728 L970.791 689.728 L971.35 689.728 L971.91 689.728 L972.469 689.728 L973.028 689.728 L973.587 689.728 L974.147 689.728 L974.706 689.728 L975.265 689.728 L975.824 689.728 L976.384 689.728 L976.943 689.728 L977.502 689.728 L978.061 689.728 L978.621 689.728 L979.18 689.728 L979.739 689.728 L980.298 689.728 L980.858 689.728 L981.417 689.728 L981.976 689.728 L982.535 689.728 L983.095 689.728 L983.654 689.728 L984.213 689.728 L984.772 689.728 L985.332 689.728 L985.891 689.728 L986.45 689.728 L987.009 689.728 L987.569 689.728 L988.128 689.728 L988.687 689.728 L989.246 689.728 L989.806 689.728 L990.365 689.728 L990.924 689.728 L991.483 689.728 L992.043 689.728 L992.602 689.728 L993.161 689.728 L993.72 689.728 L994.28 689.728 L994.839 689.728 L995.398 689.728 L995.957 689.728 L996.517 689.728 L997.076 689.728 L997.635 689.728 L998.194 689.728 L998.754 689.728 L999.313 689.728 L999.872 689.728 L1000.43 689.728 L1000.99 689.728 L1001.55 689.728 L1002.11 689.728 L1002.67 689.728 L1003.23 689.728 L1003.79 689.728 L1004.35 689.728 L1004.91 689.728 L1005.46 689.728 L1006.02 689.728 L1006.58 689.728 L1007.14 689.728 L1007.7 689.728 L1008.26 689.728 L1008.82 689.728 L1009.38 689.728 L1009.94 689.728 L1010.5 689.728 L1011.06 689.728 L1011.62 689.728 L1012.18 689.728 L1012.73 689.728 L1013.29 689.728 L1013.85 689.728 L1014.41 689.728 L1014.97 689.728 L1015.53 689.728 L1016.09 689.728 L1016.65 689.728 L1017.21 689.728 L1017.77 689.728 L1018.33 689.728 L1018.89 689.728 L1019.45 689.728 L1020.01 689.728 L1020.56 689.728 L1021.12 689.728 L1021.68 689.728 L1022.24 689.728 L1022.8 689.728 L1023.36 689.728 L1023.92 689.728 L1024.48 689.728 L1025.04 689.728 L1025.6 689.728 L1026.16 689.728 L1026.72 689.728 L1027.28 689.728 L1027.83 689.728 L1028.39 689.728 L1028.95 689.728 L1029.51 689.728 L1030.07 689.728 L1030.63 689.728 L1031.19 689.728 L1031.75 689.728 L1032.31 689.728 L1032.87 689.728 L1033.43 689.728 L1033.99 689.728 L1034.55 689.728 L1035.1 689.728 L1035.66 689.728 L1036.22 689.728 L1036.78 689.728 L1037.34 689.728 L1037.9 689.728 L1038.46 689.728 L1039.02 689.728 L1039.58 689.728 L1040.14 689.728 L1040.7 689.728 L1041.26 689.728 L1041.82 689.728 L1042.38 689.728 L1042.93 689.728 L1043.49 689.728 L1044.05 689.728 L1044.61 689.728 L1045.17 689.728 L1045.73 689.728 L1046.29 689.728 L1046.85 689.728 L1047.41 689.728 L1047.97 689.728 L1048.53 689.728 L1049.09 689.728 L1049.65 689.728 L1050.2 689.728 L1050.76 689.728 L1051.32 689.728 L1051.88 689.728 L1052.44 689.728 L1053 689.728 L1053.56 689.728 L1054.12 689.728 L1054.68 689.728 L1055.24 689.728 L1055.8 689.728 L1056.36 689.728 L1056.92 689.728 L1057.48 689.728 L1058.03 689.728 L1058.59 689.728 L1059.15 689.728 L1059.71 689.728 L1060.27 689.728 L1060.83 689.728 L1061.39 689.728 L1061.95 689.728 L1062.51 689.728 L1063.07 689.728 L1063.63 689.728 L1064.19 689.728 L1064.75 689.728 L1065.3 689.728 L1065.86 689.728 L1066.42 689.728 L1066.98 689.728 L1067.54 689.728 L1068.1 689.728 L1068.66 689.728 L1069.22 689.728 L1069.78 689.728 L1070.34 689.728 L1070.9 689.728 L1071.46 689.728 L1072.02 689.728 L1072.57 689.728 L1073.13 689.728 L1073.69 689.728 L1074.25 689.728 L1074.81 689.728 L1075.37 689.728 L1075.93 689.728 L1076.49 689.728 L1077.05 689.728 L1077.61 689.728 L1078.17 689.728 L1078.73 689.728 L1079.29 689.728 L1079.85 689.728 L1080.4 689.728 L1080.96 689.728 L1081.52 689.728 L1082.08 689.728 L1082.64 689.728 L1083.2 689.728 L1083.76 689.728 L1084.32 689.728 L1084.88 689.728 L1085.44 689.728 L1086 689.728 L1086.56 689.728 L1087.12 689.728 L1087.67 689.728 L1088.23 689.728 L1088.79 689.728 L1089.35 689.728 L1089.91 689.728 L1090.47 689.728 L1091.03 689.728 L1091.59 689.728 L1092.15 689.728 L1092.71 689.728 L1093.27 689.728 L1093.83 689.728 L1094.39 689.728 L1094.94 689.728 L1095.5 689.728 L1096.06 689.728 L1096.62 689.728 L1097.18 689.728 L1097.74 689.728 L1098.3 689.728 L1098.86 689.728 L1099.42 689.728 L1099.98 689.728 L1100.54 689.728 L1101.1 689.728 L1101.66 689.728 L1102.22 689.728 L1102.77 689.728 L1103.33 689.728 L1103.89 689.728 L1104.45 689.728 L1105.01 689.728 L1105.57 689.728 L1106.13 689.728 L1106.69 689.728 L1107.25 689.728 L1107.81 689.728 L1108.37 689.728 L1108.93 689.728 L1109.49 689.728 L1110.04 689.728 L1110.6 689.728 L1111.16 689.728 L1111.72 689.728 L1112.28 689.728 L1112.84 689.728 L1113.4 689.728 L1113.96 689.728 L1114.52 689.728 L1115.08 689.728 L1115.64 689.728 L1116.2 689.728 L1116.76 689.728 L1117.31 689.728 L1117.87 689.728 L1118.43 689.728 L1118.99 689.728 L1119.55 689.728 L1120.11 689.728 L1120.67 689.728 L1121.23 689.728 L1121.79 689.728 L1122.35 689.728 L1122.91 689.728 L1123.47 689.728 L1124.03 689.728 L1124.59 689.728 L1125.14 689.728 L1125.7 689.728 L1126.26 689.728 L1126.82 689.728 L1127.38 689.728 L1127.94 689.728 L1128.5 689.728 L1129.06 689.728 L1129.62 689.728 L1130.18 689.728 L1130.74 689.728 L1131.3 689.728 L1131.86 689.728 L1132.41 689.728 L1132.97 689.728 L1133.53 689.728 L1134.09 689.728 L1134.65 689.728 L1135.21 689.728 L1135.77 689.728 L1136.33 689.728 L1136.89 689.728 L1137.45 689.728 L1138.01 689.728 L1138.57 689.728 L1139.13 689.728 L1139.68 689.728 L1140.24 689.728 L1140.8 689.728 L1141.36 689.728 L1141.92 689.728 L1142.48 689.728 L1143.04 689.728 L1143.6 689.728 L1144.16 689.728 L1144.72 689.728 L1145.28 689.728 L1145.84 689.728 L1146.4 689.728 L1146.96 689.728 L1147.51 689.728 L1148.07 689.728 L1148.63 689.728 L1149.19 689.728 L1149.75 689.728 L1150.31 689.728 L1150.87 689.728 L1151.43 689.728 L1151.99 689.728 L1152.55 689.728 L1153.11 689.728 L1153.67 689.728 L1154.23 689.728 L1154.78 689.728 L1155.34 689.728 L1155.9 689.728 L1156.46 689.728 L1157.02 689.728 L1157.58 689.728 L1158.14 689.728 L1158.7 689.728 L1159.26 689.728 L1159.82 689.728 L1160.38 689.728 L1160.94 689.728 L1161.5 689.728 L1162.05 689.728 L1162.61 689.728 L1163.17 689.728 L1163.73 689.728 L1164.29 689.728 L1164.85 689.728 L1165.41 689.728 L1165.97 689.728 L1166.53 689.728 L1167.09 689.728 L1167.65 689.728 L1168.21 689.728 L1168.77 689.728 L1169.33 689.728 L1169.88 689.728 L1170.44 689.728 L1171 689.728 L1171.56 689.728 L1172.12 689.728 L1172.68 689.728 L1173.24 689.728 L1173.8 689.728 L1174.36 689.728 L1174.92 689.728 L1175.48 689.728 L1176.04 689.728 L1176.6 689.728 L1177.15 689.728 L1177.71 689.728 L1178.27 689.728 L1178.83 689.728 L1179.39 689.728 L1179.95 689.728 L1180.51 689.728 L1181.07 689.728 L1181.63 689.728 L1182.19 689.728 L1182.75 689.728 L1183.31 689.728 L1183.87 689.728 L1184.43 689.728 L1184.98 689.728 L1185.54 689.728 L1186.1 689.728 L1186.66 689.728 L1187.22 689.728 L1187.78 689.728 L1188.34 689.728 L1188.9 689.728 L1189.46 689.728 L1190.02 689.728 L1190.58 689.728 L1191.14 689.728 L1191.7 689.728 L1192.25 689.728 L1192.81 689.728 L1193.37 689.728 L1193.93 689.728 L1194.49 689.728 L1195.05 689.728 L1195.61 689.728 L1196.17 689.728 L1196.73 689.728 L1197.29 689.728 L1197.85 689.728 L1198.41 689.728 L1198.97 689.728 L1199.52 689.728 L1200.08 689.728 L1200.64 689.728 L1201.2 689.728 L1201.76 689.728 L1202.32 689.728 L1202.88 689.728 L1203.44 689.728 L1204 689.728 L1204.56 689.728 L1205.12 689.728 L1205.68 689.728 L1206.24 689.728 L1206.8 689.728 L1207.35 689.728 L1207.91 689.728 L1208.47 689.728 L1209.03 689.728 L1209.59 689.728 L1210.15 689.728 L1210.71 689.728 L1211.27 689.728 L1211.83 689.728 L1212.39 689.728 L1212.95 689.728 L1213.51 689.728 L1214.07 689.728 L1214.62 689.728 L1215.18 689.728 L1215.74 689.728 L1216.3 689.728 L1216.86 689.728 L1217.42 689.728 L1217.98 689.728 L1218.54 689.728 L1219.1 689.728 L1219.66 689.728 L1220.22 689.728 L1220.78 689.728 L1221.34 689.728 L1221.89 689.728 L1222.45 689.728 L1223.01 689.728 L1223.57 689.728 L1224.13 689.728 L1224.69 689.728 L1225.25 689.728 L1225.81 689.728 L1226.37 689.728 L1226.93 689.728 L1227.49 689.728 L1228.05 689.728 L1228.61 689.728 L1229.17 689.728 L1229.72 689.728 L1230.28 689.728 L1230.84 689.728 L1231.4 689.728 L1231.96 689.728 L1232.52 689.728 L1233.08 689.728 L1233.64 689.728 L1234.2 689.728 L1234.76 689.728 L1235.32 689.728 L1235.88 689.728 L1236.44 689.728 L1236.99 689.728 L1237.55 689.728 L1238.11 689.728 L1238.67 689.728 L1239.23 689.728 L1239.79 689.728 L1240.35 689.728 L1240.91 689.728 L1241.47 689.728 L1242.03 689.728 L1242.59 689.728 L1243.15 689.728 L1243.71 689.728 L1244.26 689.728 L1244.82 689.728 L1245.38 689.728 L1245.94 689.728 L1246.5 689.728 L1247.06 689.728 L1247.62 689.728 L1248.18 689.728 L1248.74 689.728 L1249.3 689.728 L1249.86 689.728 L1250.42 689.728 L1250.98 689.728 L1251.54 689.728 L1252.09 689.728 L1252.65 689.728 L1253.21 689.728 L1253.77 689.728 L1254.33 689.728 L1254.89 689.728 L1255.45 689.728 L1256.01 689.728 L1256.57 689.728 L1257.13 689.728 L1257.69 689.728 L1258.25 689.728 L1258.81 689.728 L1259.36 689.728 L1259.92 689.728 L1260.48 689.728 L1261.04 689.728 L1261.6 689.728 L1262.16 689.728 L1262.72 689.728 L1263.28 689.728 L1263.84 689.728 L1264.4 689.728 L1264.96 689.728 L1265.52 689.728 L1266.08 689.728 L1266.63 689.728 L1267.19 689.728 L1267.75 689.728 L1268.31 689.728 L1268.87 689.728 L1269.43 689.728 L1269.99 689.728 L1270.55 689.728 L1271.11 689.728 L1271.67 689.728 L1272.23 689.728 L1272.79 689.728 L1273.35 689.728 L1273.91 689.728 L1274.46 689.728 L1275.02 689.728 L1275.58 689.728 L1276.14 689.728 L1276.7 689.728 L1277.26 689.728 L1277.82 689.728 L1278.38 689.728 L1278.94 689.728 L1279.5 689.728 L1280.06 689.728 L1280.62 689.728 L1281.18 689.728 L1281.73 689.728 L1282.29 689.728 L1282.85 689.728 L1283.41 689.728 L1283.97 689.728 L1284.53 689.728 L1285.09 689.728 L1285.65 689.728 L1286.21 689.728 L1286.77 689.728 L1287.33 689.728 L1287.89 689.728 L1288.45 689.728 L1289 689.728 L1289.56 689.728 L1290.12 689.728 L1290.68 689.728 L1291.24 689.728 L1291.8 689.728 L1292.36 689.728 L1292.92 689.728 L1293.48 689.728 L1294.04 689.728 L1294.6 689.728 L1295.16 689.728 L1295.72 689.728 L1296.28 689.728 L1296.83 689.728 L1297.39 689.728 L1297.95 689.728 L1298.51 689.728 L1299.07 689.728 L1299.63 689.728 L1300.19 689.728 L1300.75 689.728 L1301.31 689.728 L1301.87 689.728 L1302.43 689.728 L1302.99 689.728 L1303.55 689.728 L1304.1 689.728 L1304.66 689.728 L1305.22 689.728 L1305.78 689.728 L1306.34 689.728 L1306.9 689.728 L1307.46 689.728 L1308.02 689.728 L1308.58 689.728 L1309.14 689.728 L1309.7 689.728 L1310.26 689.728 L1310.82 689.728 L1311.38 689.728 L1311.93 689.728 L1312.49 689.728 L1313.05 689.728 L1313.61 689.728 L1314.17 689.728 L1314.73 689.728 L1315.29 689.728 L1315.85 689.728 L1316.41 689.728 L1316.97 689.728 L1317.53 689.728 L1318.09 689.728 L1318.65 689.728 L1319.2 689.728 L1319.76 689.728 L1320.32 689.728 L1320.88 689.728 L1321.44 689.728 L1322 689.728 L1322.56 689.728 L1323.12 689.728 L1323.68 689.728 L1324.24 689.728 L1324.8 689.728 L1325.36 689.728 L1325.92 689.728 L1326.47 689.728 L1327.03 689.728 L1327.59 689.728 L1328.15 689.728 L1328.71 689.728 L1329.27 689.728 L1329.83 689.728 L1330.39 689.728 L1330.95 689.728 L1331.51 689.728 L1332.07 689.728 L1332.63 689.728 L1333.19 689.728 L1333.75 689.728 L1334.3 689.728 L1334.86 689.728 L1335.42 689.728 L1335.98 689.728 L1336.54 689.728 L1337.1 689.728 L1337.66 689.728 L1338.22 689.728 L1338.78 689.728 L1339.34 689.728 L1339.9 689.728 L1340.46 689.728 L1341.02 689.728 L1341.57 689.728 L1342.13 689.728 L1342.69 689.728 L1343.25 689.728 L1343.81 689.728 L1344.37 689.728 L1344.93 689.728 L1345.49 689.728 L1346.05 689.728 L1346.61 689.728 L1347.17 689.728 L1347.73 689.728 L1348.29 689.728 L1348.84 689.728 L1349.4 689.728 L1349.96 689.728 L1350.52 689.728 L1351.08 689.728 L1351.64 689.728 L1352.2 689.728 L1352.76 689.728 L1353.32 689.728 L1353.88 689.728 L1354.44 689.728 L1355 689.728 L1355.56 689.728 L1356.12 689.728 L1356.67 689.728 L1357.23 689.728 L1357.79 689.728 L1358.35 689.728 L1358.91 689.728 L1359.47 689.728 L1360.03 689.728 L1360.59 689.728 L1361.15 689.728 L1361.71 689.728 L1362.27 689.728 L1362.83 689.728 L1363.39 689.728 L1363.94 689.728 L1364.5 689.728 L1365.06 689.728 L1365.62 689.728 L1366.18 689.728 L1366.74 689.728 L1367.3 689.728 L1367.86 689.728 L1368.42 689.728 L1368.98 689.728 L1369.54 689.728 L1370.1 689.728 L1370.66 689.728 L1371.21 689.728 L1371.77 689.728 L1372.33 689.728 L1372.89 689.728 L1373.45 689.728 L1374.01 689.728 L1374.57 689.728 L1375.13 689.728 L1375.69 689.728 L1376.25 689.728 L1376.81 689.728 L1377.37 689.728 L1377.93 689.728 L1378.49 689.728 L1379.04 689.728 L1379.6 689.728 L1380.16 689.728 L1380.72 689.728 L1381.28 689.728 L1381.84 689.728 L1382.4 689.728 L1382.96 689.728 L1383.52 689.728 L1384.08 689.728 L1384.64 689.728 L1385.2 689.728 L1385.76 689.728 L1386.31 689.728 L1386.87 689.728 L1387.43 689.728 L1387.99 689.728 L1388.55 689.728 L1389.11 689.728 L1389.67 689.728 L1390.23 689.728 L1390.79 689.728 L1391.35 689.728 L1391.91 689.728 L1392.47 689.728 L1393.03 689.728 L1393.58 689.728 L1394.14 689.728 L1394.7 689.728 L1395.26 689.728 L1395.82 689.728 L1396.38 689.728 L1396.94 689.728 L1397.5 689.728 L1398.06 689.728 L1398.62 689.728 L1399.18 689.728 L1399.74 689.728 L1400.3 689.728 L1400.86 689.728 L1401.41 689.728 L1401.97 689.728 L1402.53 689.728 L1403.09 689.728 L1403.65 689.728 L1404.21 689.728 L1404.77 689.728 L1405.33 689.728 L1405.89 689.728 L1406.45 689.728 L1407.01 689.728 L1407.57 689.728 L1408.13 689.728 L1408.68 689.728 L1409.24 689.728 L1409.8 689.728 L1410.36 689.728 L1410.92 689.728 L1411.48 689.728 L1412.04 689.728 L1412.6 689.728 L1413.16 689.728 L1413.72 689.728 L1414.28 689.728 L1414.84 689.728 L1415.4 689.728 L1415.95 689.728 L1416.51 689.728 L1417.07 689.728 L1417.63 689.728 L1418.19 689.728 L1418.75 689.728 L1419.31 689.728 L1419.87 689.728 L1420.43 689.728 L1420.99 689.728 L1421.55 689.728 L1422.11 689.728 L1422.67 689.728 L1423.23 689.728 L1423.78 689.728 L1424.34 689.728 L1424.9 689.728 L1425.46 689.728 L1426.02 689.728 L1426.58 689.728 L1427.14 689.728 L1427.7 689.728 L1428.26 689.728 L1428.82 689.728 L1429.38 689.728 L1429.94 689.728 L1430.5 689.728 L1431.05 689.728 L1431.61 689.728 L1432.17 689.728 L1432.73 689.728 L1433.29 689.728 L1433.85 689.728 L1434.41 689.728 L1434.97 689.728 L1435.53 689.728 L1436.09 689.728 L1436.65 689.728 L1437.21 689.728 L1437.77 689.728 L1438.33 689.728 L1438.88 689.728 L1439.44 689.728 L1440 689.728 L1440.56 689.728 L1441.12 689.728 L1441.68 689.728 L1442.24 689.728 L1442.8 689.728 L1443.36 689.728 L1443.92 689.728 L1444.48 689.728 L1445.04 689.728 L1445.6 689.728 L1446.15 689.728 L1446.71 689.728 L1447.27 689.728 L1447.83 689.728 L1448.39 689.728 L1448.95 689.728 L1449.51 689.728 L1450.07 689.728 L1450.63 689.728 L1451.19 689.728 L1451.75 689.728 L1452.31 689.728 L1452.87 689.728 L1453.42 689.728 L1453.98 689.728 L1454.54 689.728 L1455.1 689.728 L1455.66 689.728 L1456.22 689.728 L1456.78 689.728 L1457.34 689.728 L1457.9 689.728 L1458.46 689.728 L1459.02 689.728 L1459.58 689.728 L1460.14 689.728 L1460.7 689.728 L1461.25 689.728 L1461.81 689.728 L1462.37 689.728 L1462.93 689.728 L1463.49 689.728 L1464.05 689.728 L1464.61 689.728 L1465.17 689.728 L1465.73 689.728 L1466.29 689.728 L1466.85 689.728 L1467.41 689.728 L1467.97 689.728 L1468.52 689.728 L1469.08 689.728 L1469.64 689.728 L1470.2 689.728 L1470.76 689.728 L1471.32 689.728 L1471.88 689.728 L1472.44 689.728 L1473 689.728 L1473.56 689.728 L1474.12 689.728 L1474.68 689.728 L1475.24 689.728 L1475.79 689.728 L1476.35 689.728 L1476.91 689.728 L1477.47 689.728 L1478.03 689.728 L1478.59 689.728 L1479.15 689.728 L1479.71 689.728 L1480.27 689.728 L1480.83 689.728 L1481.39 689.728 L1481.95 689.728 L1482.51 689.728 L1483.07 689.728 L1483.62 689.728 L1484.18 689.728 L1484.74 689.728 L1485.3 689.728 L1485.86 689.728 L1486.42 689.728 L1486.98 689.728 L1487.54 689.728 L1488.1 689.728 L1488.66 689.728 L1489.22 689.728 L1489.78 689.728 L1490.34 689.728 L1490.89 689.728 L1491.45 689.728 L1492.01 689.728 L1492.57 689.728 L1493.13 689.728 L1493.69 689.728 L1494.25 689.728 L1494.81 689.728 L1495.37 689.728 L1495.93 689.728 L1496.49 689.728 L1497.05 689.728 L1497.61 689.728 L1498.16 689.728 L1498.72 689.728 L1499.28 689.728 L1499.84 689.728 L1500.4 689.728 L1500.96 689.728 L1501.52 689.728 L1502.08 689.728 L1502.64 689.728 L1503.2 689.728 L1503.76 689.728 L1504.32 689.728 L1504.88 689.728 L1505.44 689.728 L1505.99 689.728 L1506.55 689.728 L1507.11 689.728 L1507.67 689.728 L1508.23 689.728 L1508.79 689.728 L1509.35 689.728 L1509.91 689.728 L1510.47 689.728 L1511.03 689.728 L1511.59 689.728 L1512.15 689.728 L1512.71 689.728 L1513.26 689.728 L1513.82 689.728 L1514.38 689.728 L1514.94 689.728 L1515.5 689.728 L1516.06 689.728 L1516.62 689.728 L1517.18 689.728 L1517.74 689.728 L1518.3 689.728 L1518.86 689.728 L1519.42 689.728 L1519.98 689.728 L1520.53 689.728 L1521.09 689.728 L1521.65 689.728 L1522.21 689.728 L1522.77 689.728 L1523.33 689.728 L1523.89 689.728 L1524.45 689.728 L1525.01 689.728 L1525.57 689.728 L1526.13 689.728 L1526.69 689.728 L1527.25 689.728 L1527.81 689.728 L1528.36 689.728 L1528.92 689.728 L1529.48 689.728 L1530.04 689.728 L1530.6 689.728 L1531.16 689.728 L1531.72 689.728 L1532.28 689.728 L1532.84 689.728 L1533.4 689.728 L1533.96 689.728 L1534.52 689.728 L1535.08 689.728 L1535.63 689.728 L1536.19 689.728 L1536.75 689.728 L1537.31 689.728 L1537.87 689.728 L1538.43 689.728 L1538.99 689.728 L1539.55 689.728 L1540.11 689.728 L1540.67 689.728 L1541.23 689.728 L1541.79 689.728 L1542.35 689.728 L1542.9 689.728 L1543.46 689.728 L1544.02 689.728 L1544.58 689.728 L1545.14 689.728 L1545.7 689.728 L1546.26 689.728 L1546.82 689.728 L1547.38 689.728 L1547.94 689.728 L1548.5 689.728 L1549.06 689.728 L1549.62 689.728 L1550.18 689.728 L1550.73 689.728 L1551.29 689.728 L1551.85 689.728 L1552.41 689.728 L1552.97 689.728 L1553.53 689.728 L1554.09 689.728 L1554.65 689.728 L1555.21 689.728 L1555.77 689.728 L1556.33 689.728 L1556.89 689.728 L1557.45 689.728 L1558 689.728 L1558.56 689.728 L1559.12 689.728 L1559.68 689.728 L1560.24 689.728 L1560.8 689.728 L1561.36 689.728 L1561.92 689.728 L1562.48 689.728 L1563.04 689.728 L1563.6 689.728 L1564.16 689.728 L1564.72 689.728 L1565.28 689.728 L1565.83 689.728 L1566.39 689.728 L1566.95 689.728 L1567.51 689.728 L1568.07 689.728 L1568.63 689.728 L1569.19 689.728 L1569.75 689.728 L1570.31 689.728 L1570.87 689.728 L1571.43 689.728 L1571.99 689.728 L1572.55 689.728 L1573.1 689.728 L1573.66 689.728 L1574.22 689.728 L1574.78 689.728 L1575.34 689.728 L1575.9 689.728 L1576.46 689.728 L1577.02 689.728 L1577.58 689.728 L1578.14 689.728 L1578.7 689.728 L1579.26 689.728 L1579.82 689.728 L1580.37 689.728 L1580.93 689.728 L1581.49 689.728 L1582.05 689.728 L1582.61 689.728 L1583.17 689.728 L1583.73 689.728 L1584.29 689.728 L1584.85 689.728 L1585.41 689.728 L1585.97 689.728 L1586.53 689.728 L1587.09 689.728 L1587.65 689.728 L1588.2 689.728 L1588.76 689.728 L1589.32 689.728 L1589.88 689.728 L1590.44 689.728 L1591 689.728 L1591.56 689.728 L1592.12 689.728 L1592.68 689.728 L1593.24 689.728 L1593.8 689.728 L1594.36 689.728 L1594.92 689.728 L1595.47 689.728 L1596.03 689.728 L1596.59 689.728 L1597.15 689.728 L1597.71 689.728 L1598.27 689.728 L1598.83 689.728 L1599.39 689.728 L1599.95 689.728 L1600.51 689.728 L1601.07 689.728 L1601.63 689.728 L1602.19 689.728 L1602.74 689.728 L1603.3 689.728 L1603.86 689.728 L1604.42 689.728 L1604.98 689.728 L1605.54 689.728 L1606.1 689.728 L1606.66 689.728 L1607.22 689.728 L1607.78 689.728 L1608.34 689.728 L1608.9 689.728 L1609.46 689.728 L1610.02 689.728 L1610.57 689.728 L1611.13 689.728 L1611.69 689.728 L1612.25 689.728 L1612.81 689.728 L1613.37 689.728 L1613.93 689.728 L1614.49 689.728 L1615.05 689.728 L1615.61 689.728 L1616.17 689.728 L1616.73 689.728 L1617.29 689.728 L1617.84 689.728 L1618.4 689.728 L1618.96 689.728 L1619.52 689.728 L1620.08 689.728 L1620.64 689.728 L1621.2 689.728 L1621.76 689.728 L1622.32 689.728 L1622.88 689.728 L1623.44 689.728 L1624 689.728 L1624.56 689.728 L1625.11 689.728 L1625.67 689.728 L1626.23 689.728 L1626.79 689.728 L1627.35 689.728 L1627.91 689.728 L1628.47 689.728 L1629.03 689.728 L1629.59 689.728 L1630.15 689.728 L1630.71 689.728 L1631.27 689.728 L1631.83 689.728 L1632.39 689.728 L1632.94 689.728 L1633.5 689.728 L1634.06 689.728 L1634.62 689.728 L1635.18 689.728 L1635.74 689.728 L1636.3 689.728 L1636.86 689.728 L1637.42 689.728 L1637.98 689.728 L1638.54 689.728 L1639.1 689.728 L1639.66 689.728 L1640.21 689.728 L1640.77 689.728 L1641.33 689.728 L1641.89 689.728 L1642.45 689.728 L1643.01 689.728 L1643.57 689.728 L1644.13 689.728 L1644.69 689.728 L1645.25 689.728 L1645.81 689.728 L1646.37 689.728 L1646.93 689.728 L1647.48 689.728 L1648.04 689.728 L1648.6 689.728 L1649.16 689.728 L1649.72 689.728 L1650.28 689.728 L1650.84 689.728 L1651.4 689.728 L1651.96 689.728 L1652.52 689.728 L1653.08 689.728 L1653.64 689.728 L1654.2 689.728 L1654.76 689.728 L1655.31 689.728 L1655.87 689.728 L1656.43 689.728 L1656.99 689.728 L1657.55 689.728 L1658.11 689.728 L1658.67 689.728 L1659.23 689.728 L1659.79 689.728 L1660.35 689.728 L1660.91 689.728 L1661.47 689.728 L1662.03 689.728 L1662.58 689.728 L1663.14 689.728 L1663.7 689.728 L1664.26 689.728 L1664.82 689.728 L1665.38 689.728 L1665.94 689.728 L1666.5 689.728 L1667.06 689.728 L1667.62 689.728 L1668.18 689.728 L1668.74 689.728 L1669.3 689.728 L1669.85 689.728 L1670.41 689.728 L1670.97 689.728 L1671.53 689.728 L1672.09 689.728 L1672.65 689.728 L1673.21 689.728 L1673.77 689.728 L1674.33 689.728 L1674.89 689.728 L1675.45 689.728 L1676.01 689.728 L1676.57 689.728 L1677.13 689.728 L1677.68 689.728 L1678.24 689.728 L1678.8 689.728 L1679.36 689.728 L1679.92 689.728 L1680.48 689.728 L1681.04 689.728 L1681.6 689.728 L1682.16 689.728 L1682.72 689.728 L1683.28 689.728 L1683.84 689.728 L1684.4 689.728 L1684.95 689.728 L1685.51 689.728 L1686.07 689.728 L1686.63 689.728 L1687.19 689.728 L1687.75 689.728 L1688.31 689.728 L1688.87 689.728 L1689.43 689.728 L1689.99 689.728 L1690.55 689.728 L1691.11 689.728 L1691.67 689.728 L1692.23 689.728 L1692.78 689.728 L1693.34 689.728 L1693.9 689.728 L1694.46 689.728 L1695.02 689.728 L1695.58 689.728 L1696.14 689.728 L1696.7 689.728 L1697.26 689.728 L1697.82 689.728 L1698.38 689.728 L1698.94 689.728 L1699.5 689.728 L1700.05 689.728 L1700.61 689.728 L1701.17 689.728 L1701.73 689.728 L1702.29 689.728 L1702.85 689.728 L1703.41 689.728 L1703.97 689.728 L1704.53 689.728 L1705.09 689.728 L1705.65 689.728 L1706.21 689.728 L1706.77 689.728 L1707.32 689.728 L1707.88 689.728 L1708.44 689.728 L1709 689.728 L1709.56 689.728 L1710.12 689.728 L1710.68 689.728 L1711.24 689.728 L1711.8 689.728 L1712.36 689.728 L1712.92 689.728 L1713.48 689.728 L1714.04 689.728 L1714.6 689.728 L1715.15 689.728 L1715.71 689.728 L1716.27 689.728 L1716.83 689.728 L1717.39 689.728 L1717.95 689.728 L1718.51 689.728 L1719.07 689.728 L1719.63 689.728 L1720.19 689.728 L1720.75 689.728 L1721.31 689.728 L1721.87 689.728 L1722.42 689.728 L1722.98 689.728 L1723.54 689.728 L1724.1 689.728 L1724.66 689.728 L1725.22 689.728 L1725.78 689.728 L1726.34 689.728 L1726.9 689.728 L1727.46 689.728 L1728.02 689.728 L1728.58 689.728 L1729.14 689.728 L1729.69 689.728 L1730.25 689.728 L1730.81 689.728 L1731.37 689.728 L1731.93 689.728 L1732.49 689.728 L1733.05 689.728 L1733.61 689.728 L1734.17 689.728 L1734.73 689.728 L1735.29 689.728 L1735.85 689.728 L1736.41 689.728 L1736.97 689.728 L1737.52 689.728 L1738.08 689.728 L1738.64 689.728 L1739.2 689.728 L1739.76 689.728 L1740.32 689.728 L1740.88 689.728 L1741.44 689.728 L1742 689.728 L1742.56 689.728 L1743.12 689.728 L1743.68 689.728 L1744.24 689.728 L1744.79 689.728 L1745.35 689.728 L1745.91 689.728 L1746.47 689.728 L1747.03 689.728 L1747.59 689.728 L1748.15 689.728 L1748.71 689.728 L1749.27 689.728 L1749.83 689.728 L1750.39 689.728 L1750.95 689.728 L1751.51 689.728 L1752.06 689.728 L1752.62 689.728 L1753.18 689.728 L1753.74 689.728 L1754.3 689.728 L1754.86 689.728 L1755.42 689.728 L1755.98 689.728 L1756.54 689.728 L1757.1 689.728 L1757.66 689.728 L1758.22 689.728 L1758.78 689.728 L1759.34 689.728 L1759.89 689.728 L1760.45 689.728 L1761.01 689.728 L1761.57 689.728 L1762.13 689.728 L1762.69 689.728 L1763.25 689.728 L1763.81 689.728 L1764.37 689.728 L1764.93 689.728 L1765.49 689.728 L1766.05 689.728 L1766.61 689.728 L1767.16 689.728 L1767.72 689.728 L1768.28 689.728 L1768.84 689.728 L1769.4 689.728 L1769.96 689.728 L1770.52 689.728 L1771.08 689.728 L1771.64 689.728 L1772.2 689.728 L1772.76 689.728 L1773.32 689.728 L1773.88 689.728 L1774.43 689.728 L1774.99 689.728 L1775.55 689.728 L1776.11 689.728 L1776.67 689.728 L1777.23 689.728 L1777.79 689.728 L1778.35 689.728 L1778.91 689.728 L1779.47 689.728 L1780.03 689.728 L1780.59 689.728 L1781.15 689.728 L1781.71 689.728 L1782.26 689.728 L1782.82 689.728 L1783.38 689.728 L1783.94 689.728 L1784.5 689.728 L1785.06 689.728 L1785.62 689.728 L1786.18 689.728 L1786.74 689.728 L1787.3 689.728 L1787.86 689.728 L1788.42 689.728 L1788.98 689.728 L1789.53 689.728 L1790.09 689.728 L1790.65 689.728 L1791.21 689.728 L1791.77 689.728 L1792.33 689.728 L1792.89 689.728 L1793.45 689.728 L1794.01 689.728 L1794.57 689.728 L1795.13 689.728 L1795.69 689.728 L1796.25 689.728 L1796.8 689.728 L1797.36 689.728 L1797.92 689.728 L1798.48 689.728 L1799.04 689.728 L1799.6 689.728 L1800.16 689.728 L1800.72 689.728 L1801.28 689.728 L1801.84 689.728 L1802.4 689.728 L1802.96 689.728 L1803.52 689.728 L1804.08 689.728 L1804.63 689.728 L1805.19 689.728 L1805.75 689.728 L1806.31 689.728 L1806.87 689.728 L1807.43 689.728 L1807.99 689.728 L1808.55 689.728 L1809.11 689.728 L1809.67 689.728 L1810.23 689.728 L1810.79 689.728 L1811.35 689.728 L1811.9 689.728 L1812.46 689.728 L1813.02 689.728 L1813.58 689.728 L1814.14 689.728 L1814.7 689.728 L1815.26 689.728 L1815.82 689.728 L1816.38 689.728 L1816.94 689.728 L1817.5 689.728 L1818.06 689.728 L1818.62 689.728 L1819.18 689.728 L1819.73 689.728 L1820.29 689.728 L1820.85 689.728 L1821.41 689.728 L1821.97 689.728 L1822.53 689.728 L1823.09 689.728 L1823.65 689.728 L1824.21 689.728 L1824.77 689.728 L1825.33 689.728 L1825.89 689.728 L1826.45 689.728 L1827 689.728 L1827.56 689.728 L1828.12 689.728 L1828.68 689.728 L1829.24 689.728 L1829.8 689.728 L1830.36 689.728 L1830.92 689.728 L1831.48 689.728 L1832.04 689.728 L1832.6 689.728 L1833.16 689.728 L1833.72 689.728 L1834.27 689.728 L1834.83 689.728 L1835.39 689.728 L1835.95 689.728 L1836.51 689.728 L1837.07 689.728 L1837.63 689.728 L1838.19 689.728 L1838.19 681.643 L1837.63 681.643 L1837.07 681.643 L1836.51 681.643 L1835.95 681.643 L1835.39 681.643 L1834.83 681.643 L1834.27 681.643 L1833.72 681.643 L1833.16 681.643 L1832.6 681.643 L1832.04 681.643 L1831.48 681.643 L1830.92 681.643 L1830.36 681.643 L1829.8 681.643 L1829.24 681.643 L1828.68 681.643 L1828.12 681.643 L1827.56 681.643 L1827 681.643 L1826.45 681.643 L1825.89 681.643 L1825.33 681.643 L1824.77 681.643 L1824.21 681.643 L1823.65 681.643 L1823.09 681.643 L1822.53 681.643 L1821.97 681.643 L1821.41 681.643 L1820.85 681.643 L1820.29 681.643 L1819.73 681.643 L1819.18 681.643 L1818.62 681.643 L1818.06 681.643 L1817.5 681.643 L1816.94 681.643 L1816.38 681.643 L1815.82 681.643 L1815.26 681.643 L1814.7 681.643 L1814.14 681.643 L1813.58 681.643 L1813.02 681.643 L1812.46 681.643 L1811.9 681.643 L1811.35 681.643 L1810.79 681.643 L1810.23 681.643 L1809.67 681.643 L1809.11 681.643 L1808.55 681.643 L1807.99 681.643 L1807.43 681.643 L1806.87 681.643 L1806.31 681.643 L1805.75 681.643 L1805.19 681.643 L1804.63 681.643 L1804.08 681.643 L1803.52 681.643 L1802.96 681.643 L1802.4 681.643 L1801.84 681.643 L1801.28 681.643 L1800.72 681.643 L1800.16 681.643 L1799.6 681.643 L1799.04 681.643 L1798.48 681.643 L1797.92 681.643 L1797.36 681.643 L1796.8 681.643 L1796.25 681.643 L1795.69 681.643 L1795.13 681.643 L1794.57 681.643 L1794.01 681.643 L1793.45 681.643 L1792.89 681.643 L1792.33 681.643 L1791.77 681.643 L1791.21 681.643 L1790.65 681.643 L1790.09 681.643 L1789.53 681.643 L1788.98 681.643 L1788.42 681.643 L1787.86 681.643 L1787.3 681.643 L1786.74 681.643 L1786.18 681.643 L1785.62 681.643 L1785.06 681.643 L1784.5 681.643 L1783.94 681.643 L1783.38 681.643 L1782.82 681.643 L1782.26 681.643 L1781.71 681.643 L1781.15 681.643 L1780.59 681.643 L1780.03 681.643 L1779.47 681.643 L1778.91 681.643 L1778.35 681.643 L1777.79 681.643 L1777.23 681.643 L1776.67 681.643 L1776.11 681.643 L1775.55 681.643 L1774.99 681.643 L1774.43 681.643 L1773.88 681.643 L1773.32 681.643 L1772.76 681.643 L1772.2 681.643 L1771.64 681.643 L1771.08 681.643 L1770.52 681.643 L1769.96 681.643 L1769.4 681.643 L1768.84 681.643 L1768.28 681.643 L1767.72 681.643 L1767.16 681.643 L1766.61 681.643 L1766.05 681.643 L1765.49 681.643 L1764.93 681.643 L1764.37 681.643 L1763.81 681.643 L1763.25 681.643 L1762.69 681.643 L1762.13 681.643 L1761.57 681.643 L1761.01 681.643 L1760.45 681.643 L1759.89 681.643 L1759.34 681.643 L1758.78 681.643 L1758.22 681.643 L1757.66 681.643 L1757.1 681.643 L1756.54 681.643 L1755.98 681.643 L1755.42 681.643 L1754.86 681.643 L1754.3 681.643 L1753.74 681.643 L1753.18 681.643 L1752.62 681.643 L1752.06 681.643 L1751.51 681.643 L1750.95 681.643 L1750.39 681.643 L1749.83 681.643 L1749.27 681.643 L1748.71 681.643 L1748.15 681.643 L1747.59 681.643 L1747.03 681.643 L1746.47 681.643 L1745.91 681.643 L1745.35 681.643 L1744.79 681.643 L1744.24 681.643 L1743.68 681.643 L1743.12 681.643 L1742.56 681.643 L1742 681.643 L1741.44 681.643 L1740.88 681.643 L1740.32 681.643 L1739.76 681.643 L1739.2 681.643 L1738.64 681.643 L1738.08 681.643 L1737.52 681.643 L1736.97 681.643 L1736.41 681.643 L1735.85 681.643 L1735.29 681.643 L1734.73 681.643 L1734.17 681.643 L1733.61 681.643 L1733.05 681.643 L1732.49 681.643 L1731.93 681.643 L1731.37 681.643 L1730.81 681.643 L1730.25 681.643 L1729.69 681.643 L1729.14 681.643 L1728.58 681.643 L1728.02 681.643 L1727.46 681.643 L1726.9 681.643 L1726.34 681.643 L1725.78 681.643 L1725.22 681.643 L1724.66 681.643 L1724.1 681.643 L1723.54 681.643 L1722.98 681.643 L1722.42 681.643 L1721.87 681.643 L1721.31 681.643 L1720.75 681.643 L1720.19 681.643 L1719.63 681.643 L1719.07 681.643 L1718.51 681.643 L1717.95 681.643 L1717.39 681.643 L1716.83 681.643 L1716.27 681.643 L1715.71 681.643 L1715.15 681.643 L1714.6 681.643 L1714.04 681.643 L1713.48 681.643 L1712.92 681.643 L1712.36 681.643 L1711.8 681.643 L1711.24 681.643 L1710.68 681.643 L1710.12 681.643 L1709.56 681.643 L1709 681.643 L1708.44 681.643 L1707.88 681.643 L1707.32 681.643 L1706.77 681.643 L1706.21 681.643 L1705.65 681.643 L1705.09 681.643 L1704.53 681.643 L1703.97 681.643 L1703.41 681.643 L1702.85 681.643 L1702.29 681.643 L1701.73 681.643 L1701.17 681.643 L1700.61 681.643 L1700.05 681.643 L1699.5 681.643 L1698.94 681.643 L1698.38 681.643 L1697.82 681.643 L1697.26 681.643 L1696.7 681.643 L1696.14 681.643 L1695.58 681.643 L1695.02 681.643 L1694.46 681.643 L1693.9 681.643 L1693.34 681.643 L1692.78 681.643 L1692.23 681.643 L1691.67 681.643 L1691.11 681.643 L1690.55 681.643 L1689.99 681.643 L1689.43 681.643 L1688.87 681.643 L1688.31 681.643 L1687.75 681.643 L1687.19 681.643 L1686.63 681.643 L1686.07 681.643 L1685.51 681.643 L1684.95 681.643 L1684.4 681.643 L1683.84 681.643 L1683.28 681.643 L1682.72 681.643 L1682.16 681.643 L1681.6 681.643 L1681.04 681.643 L1680.48 681.643 L1679.92 681.643 L1679.36 681.643 L1678.8 681.643 L1678.24 681.643 L1677.68 681.643 L1677.13 681.643 L1676.57 681.643 L1676.01 681.643 L1675.45 681.643 L1674.89 681.643 L1674.33 681.643 L1673.77 681.643 L1673.21 681.643 L1672.65 681.643 L1672.09 681.643 L1671.53 681.643 L1670.97 681.643 L1670.41 681.643 L1669.85 681.643 L1669.3 681.643 L1668.74 681.643 L1668.18 681.643 L1667.62 681.643 L1667.06 681.643 L1666.5 681.643 L1665.94 681.643 L1665.38 681.643 L1664.82 681.643 L1664.26 681.643 L1663.7 681.643 L1663.14 681.643 L1662.58 681.643 L1662.03 681.643 L1661.47 681.643 L1660.91 681.643 L1660.35 681.643 L1659.79 681.643 L1659.23 681.643 L1658.67 681.643 L1658.11 681.643 L1657.55 681.643 L1656.99 681.643 L1656.43 681.643 L1655.87 681.643 L1655.31 681.643 L1654.76 681.643 L1654.2 681.643 L1653.64 681.643 L1653.08 681.643 L1652.52 681.643 L1651.96 681.643 L1651.4 681.643 L1650.84 681.643 L1650.28 681.643 L1649.72 681.643 L1649.16 681.643 L1648.6 681.643 L1648.04 681.643 L1647.48 681.643 L1646.93 681.643 L1646.37 681.643 L1645.81 681.643 L1645.25 681.643 L1644.69 681.643 L1644.13 681.643 L1643.57 681.643 L1643.01 681.643 L1642.45 681.643 L1641.89 681.643 L1641.33 681.643 L1640.77 681.643 L1640.21 681.643 L1639.66 681.643 L1639.1 681.643 L1638.54 681.643 L1637.98 681.643 L1637.42 681.643 L1636.86 681.643 L1636.3 681.643 L1635.74 681.643 L1635.18 681.643 L1634.62 681.643 L1634.06 681.643 L1633.5 681.643 L1632.94 681.643 L1632.39 681.643 L1631.83 681.643 L1631.27 681.643 L1630.71 681.643 L1630.15 681.643 L1629.59 681.643 L1629.03 681.643 L1628.47 681.643 L1627.91 681.643 L1627.35 681.643 L1626.79 681.643 L1626.23 681.643 L1625.67 681.643 L1625.11 681.643 L1624.56 681.643 L1624 681.643 L1623.44 681.643 L1622.88 681.643 L1622.32 681.643 L1621.76 681.643 L1621.2 681.643 L1620.64 681.643 L1620.08 681.643 L1619.52 681.643 L1618.96 681.643 L1618.4 681.643 L1617.84 681.643 L1617.29 681.643 L1616.73 681.643 L1616.17 681.643 L1615.61 681.643 L1615.05 681.643 L1614.49 681.643 L1613.93 681.643 L1613.37 681.643 L1612.81 681.643 L1612.25 681.643 L1611.69 681.643 L1611.13 681.643 L1610.57 681.643 L1610.02 681.643 L1609.46 681.643 L1608.9 681.643 L1608.34 681.643 L1607.78 681.643 L1607.22 681.643 L1606.66 681.643 L1606.1 681.643 L1605.54 681.643 L1604.98 681.643 L1604.42 681.643 L1603.86 681.643 L1603.3 681.643 L1602.74 681.643 L1602.19 681.643 L1601.63 681.643 L1601.07 681.643 L1600.51 681.643 L1599.95 681.643 L1599.39 681.643 L1598.83 681.643 L1598.27 681.643 L1597.71 681.643 L1597.15 681.643 L1596.59 681.643 L1596.03 681.643 L1595.47 681.643 L1594.92 681.643 L1594.36 681.643 L1593.8 681.643 L1593.24 681.643 L1592.68 681.643 L1592.12 681.643 L1591.56 681.643 L1591 681.643 L1590.44 681.643 L1589.88 681.643 L1589.32 681.643 L1588.76 681.643 L1588.2 681.643 L1587.65 681.643 L1587.09 681.643 L1586.53 681.643 L1585.97 681.643 L1585.41 681.643 L1584.85 681.643 L1584.29 681.643 L1583.73 681.643 L1583.17 681.643 L1582.61 681.643 L1582.05 681.643 L1581.49 681.643 L1580.93 681.643 L1580.37 681.643 L1579.82 681.643 L1579.26 681.643 L1578.7 681.643 L1578.14 681.643 L1577.58 681.643 L1577.02 681.643 L1576.46 681.643 L1575.9 681.643 L1575.34 681.643 L1574.78 681.643 L1574.22 681.643 L1573.66 681.643 L1573.1 681.643 L1572.55 681.643 L1571.99 681.643 L1571.43 681.643 L1570.87 681.643 L1570.31 681.643 L1569.75 681.643 L1569.19 681.643 L1568.63 681.643 L1568.07 681.643 L1567.51 681.643 L1566.95 681.643 L1566.39 681.643 L1565.83 681.643 L1565.28 681.643 L1564.72 681.643 L1564.16 681.643 L1563.6 681.643 L1563.04 681.643 L1562.48 681.643 L1561.92 681.643 L1561.36 681.643 L1560.8 681.643 L1560.24 681.643 L1559.68 681.643 L1559.12 681.643 L1558.56 681.643 L1558 681.643 L1557.45 681.643 L1556.89 681.643 L1556.33 681.643 L1555.77 681.643 L1555.21 681.643 L1554.65 681.643 L1554.09 681.643 L1553.53 681.643 L1552.97 681.643 L1552.41 681.643 L1551.85 681.643 L1551.29 681.643 L1550.73 681.643 L1550.18 681.643 L1549.62 681.643 L1549.06 681.643 L1548.5 681.643 L1547.94 681.643 L1547.38 681.643 L1546.82 681.643 L1546.26 681.643 L1545.7 681.643 L1545.14 681.643 L1544.58 681.643 L1544.02 681.643 L1543.46 681.643 L1542.9 681.643 L1542.35 681.643 L1541.79 681.643 L1541.23 681.643 L1540.67 681.643 L1540.11 681.643 L1539.55 681.643 L1538.99 681.643 L1538.43 681.643 L1537.87 681.643 L1537.31 681.643 L1536.75 681.643 L1536.19 681.643 L1535.63 681.643 L1535.08 681.643 L1534.52 681.643 L1533.96 681.643 L1533.4 681.643 L1532.84 681.643 L1532.28 681.643 L1531.72 681.643 L1531.16 681.643 L1530.6 681.643 L1530.04 681.643 L1529.48 681.643 L1528.92 681.643 L1528.36 681.643 L1527.81 681.643 L1527.25 681.643 L1526.69 681.643 L1526.13 681.643 L1525.57 681.643 L1525.01 681.643 L1524.45 681.643 L1523.89 681.643 L1523.33 681.643 L1522.77 681.643 L1522.21 681.643 L1521.65 681.643 L1521.09 681.643 L1520.53 681.643 L1519.98 681.643 L1519.42 681.643 L1518.86 681.643 L1518.3 681.643 L1517.74 681.643 L1517.18 681.643 L1516.62 681.643 L1516.06 681.643 L1515.5 681.643 L1514.94 681.643 L1514.38 681.643 L1513.82 681.643 L1513.26 681.643 L1512.71 681.643 L1512.15 681.643 L1511.59 681.643 L1511.03 681.643 L1510.47 681.643 L1509.91 681.643 L1509.35 681.643 L1508.79 681.643 L1508.23 681.643 L1507.67 681.643 L1507.11 681.643 L1506.55 681.643 L1505.99 681.643 L1505.44 681.643 L1504.88 681.643 L1504.32 681.643 L1503.76 681.643 L1503.2 681.643 L1502.64 681.643 L1502.08 681.643 L1501.52 681.643 L1500.96 681.643 L1500.4 681.643 L1499.84 681.643 L1499.28 681.643 L1498.72 681.643 L1498.16 681.643 L1497.61 681.643 L1497.05 681.643 L1496.49 681.643 L1495.93 681.643 L1495.37 681.643 L1494.81 681.643 L1494.25 681.643 L1493.69 681.643 L1493.13 681.643 L1492.57 681.643 L1492.01 681.643 L1491.45 681.643 L1490.89 681.643 L1490.34 681.643 L1489.78 681.643 L1489.22 681.643 L1488.66 681.643 L1488.1 681.643 L1487.54 681.643 L1486.98 681.643 L1486.42 681.643 L1485.86 681.643 L1485.3 681.643 L1484.74 681.643 L1484.18 681.643 L1483.62 681.643 L1483.07 681.643 L1482.51 681.643 L1481.95 681.643 L1481.39 681.643 L1480.83 681.643 L1480.27 681.643 L1479.71 681.643 L1479.15 681.643 L1478.59 681.643 L1478.03 681.643 L1477.47 681.643 L1476.91 681.643 L1476.35 681.643 L1475.79 681.643 L1475.24 681.643 L1474.68 681.643 L1474.12 681.643 L1473.56 681.643 L1473 681.643 L1472.44 681.643 L1471.88 681.643 L1471.32 681.643 L1470.76 681.643 L1470.2 681.643 L1469.64 681.643 L1469.08 681.643 L1468.52 681.643 L1467.97 681.643 L1467.41 681.643 L1466.85 681.643 L1466.29 681.643 L1465.73 681.643 L1465.17 681.643 L1464.61 681.643 L1464.05 681.643 L1463.49 681.643 L1462.93 681.643 L1462.37 681.643 L1461.81 681.643 L1461.25 681.643 L1460.7 681.643 L1460.14 681.643 L1459.58 681.643 L1459.02 681.643 L1458.46 681.643 L1457.9 681.643 L1457.34 681.643 L1456.78 681.643 L1456.22 681.643 L1455.66 681.643 L1455.1 681.643 L1454.54 681.643 L1453.98 681.643 L1453.42 681.643 L1452.87 681.643 L1452.31 681.643 L1451.75 681.643 L1451.19 681.643 L1450.63 681.643 L1450.07 681.643 L1449.51 681.643 L1448.95 681.643 L1448.39 681.643 L1447.83 681.643 L1447.27 681.643 L1446.71 681.643 L1446.15 681.643 L1445.6 681.643 L1445.04 681.643 L1444.48 681.643 L1443.92 681.643 L1443.36 681.643 L1442.8 681.643 L1442.24 681.643 L1441.68 681.643 L1441.12 681.643 L1440.56 681.643 L1440 681.643 L1439.44 681.643 L1438.88 681.643 L1438.33 681.643 L1437.77 681.643 L1437.21 681.643 L1436.65 681.643 L1436.09 681.643 L1435.53 681.643 L1434.97 681.643 L1434.41 681.643 L1433.85 681.643 L1433.29 681.643 L1432.73 681.643 L1432.17 681.643 L1431.61 681.643 L1431.05 681.643 L1430.5 681.643 L1429.94 681.643 L1429.38 681.643 L1428.82 681.643 L1428.26 681.643 L1427.7 681.643 L1427.14 681.643 L1426.58 681.643 L1426.02 681.643 L1425.46 681.643 L1424.9 681.643 L1424.34 681.643 L1423.78 681.643 L1423.23 681.643 L1422.67 681.643 L1422.11 681.643 L1421.55 681.643 L1420.99 681.643 L1420.43 681.643 L1419.87 681.643 L1419.31 681.643 L1418.75 681.643 L1418.19 681.643 L1417.63 681.643 L1417.07 681.643 L1416.51 681.643 L1415.95 681.643 L1415.4 681.643 L1414.84 681.643 L1414.28 681.643 L1413.72 681.643 L1413.16 681.643 L1412.6 681.643 L1412.04 681.643 L1411.48 681.643 L1410.92 681.643 L1410.36 681.643 L1409.8 681.643 L1409.24 681.643 L1408.68 681.643 L1408.13 681.643 L1407.57 681.643 L1407.01 681.643 L1406.45 681.643 L1405.89 681.643 L1405.33 681.643 L1404.77 681.643 L1404.21 681.643 L1403.65 681.643 L1403.09 681.643 L1402.53 681.643 L1401.97 681.643 L1401.41 681.643 L1400.86 681.643 L1400.3 681.643 L1399.74 681.643 L1399.18 681.643 L1398.62 681.643 L1398.06 681.643 L1397.5 681.643 L1396.94 681.643 L1396.38 681.643 L1395.82 681.643 L1395.26 681.643 L1394.7 681.643 L1394.14 681.643 L1393.58 681.643 L1393.03 681.643 L1392.47 681.643 L1391.91 681.643 L1391.35 681.643 L1390.79 681.643 L1390.23 681.643 L1389.67 681.643 L1389.11 681.643 L1388.55 681.643 L1387.99 681.643 L1387.43 681.643 L1386.87 681.643 L1386.31 681.643 L1385.76 681.643 L1385.2 681.643 L1384.64 681.643 L1384.08 681.643 L1383.52 681.643 L1382.96 681.643 L1382.4 681.643 L1381.84 681.643 L1381.28 681.643 L1380.72 681.643 L1380.16 681.643 L1379.6 681.643 L1379.04 681.643 L1378.49 681.643 L1377.93 681.643 L1377.37 681.643 L1376.81 681.643 L1376.25 681.643 L1375.69 681.643 L1375.13 681.643 L1374.57 681.643 L1374.01 681.643 L1373.45 681.643 L1372.89 681.643 L1372.33 681.643 L1371.77 681.643 L1371.21 681.643 L1370.66 681.643 L1370.1 681.643 L1369.54 681.643 L1368.98 681.643 L1368.42 681.643 L1367.86 681.643 L1367.3 681.643 L1366.74 681.643 L1366.18 681.643 L1365.62 681.643 L1365.06 681.643 L1364.5 681.643 L1363.94 681.643 L1363.39 681.643 L1362.83 681.643 L1362.27 681.643 L1361.71 681.643 L1361.15 681.643 L1360.59 681.643 L1360.03 681.643 L1359.47 681.643 L1358.91 681.643 L1358.35 681.643 L1357.79 681.643 L1357.23 681.643 L1356.67 681.643 L1356.12 681.643 L1355.56 681.643 L1355 681.643 L1354.44 681.643 L1353.88 681.643 L1353.32 681.643 L1352.76 681.643 L1352.2 681.643 L1351.64 681.643 L1351.08 681.643 L1350.52 681.643 L1349.96 681.643 L1349.4 681.643 L1348.84 681.643 L1348.29 681.643 L1347.73 681.643 L1347.17 681.643 L1346.61 681.643 L1346.05 681.643 L1345.49 681.643 L1344.93 681.643 L1344.37 681.643 L1343.81 681.643 L1343.25 681.643 L1342.69 681.643 L1342.13 681.643 L1341.57 681.643 L1341.02 681.643 L1340.46 681.643 L1339.9 681.643 L1339.34 681.643 L1338.78 681.643 L1338.22 681.643 L1337.66 681.643 L1337.1 681.643 L1336.54 681.643 L1335.98 681.643 L1335.42 681.643 L1334.86 681.643 L1334.3 681.643 L1333.75 681.643 L1333.19 681.643 L1332.63 681.643 L1332.07 681.643 L1331.51 681.643 L1330.95 681.643 L1330.39 681.643 L1329.83 681.643 L1329.27 681.643 L1328.71 681.643 L1328.15 681.643 L1327.59 681.643 L1327.03 681.643 L1326.47 681.643 L1325.92 681.643 L1325.36 681.643 L1324.8 681.643 L1324.24 681.643 L1323.68 681.643 L1323.12 681.643 L1322.56 681.643 L1322 681.643 L1321.44 681.643 L1320.88 681.643 L1320.32 681.643 L1319.76 681.643 L1319.2 681.643 L1318.65 681.643 L1318.09 681.643 L1317.53 681.643 L1316.97 681.643 L1316.41 681.643 L1315.85 681.643 L1315.29 681.643 L1314.73 681.643 L1314.17 681.643 L1313.61 681.643 L1313.05 681.643 L1312.49 681.643 L1311.93 681.643 L1311.38 681.643 L1310.82 681.643 L1310.26 681.643 L1309.7 681.643 L1309.14 681.643 L1308.58 681.643 L1308.02 681.643 L1307.46 681.643 L1306.9 681.643 L1306.34 681.643 L1305.78 681.643 L1305.22 681.643 L1304.66 681.643 L1304.1 681.643 L1303.55 681.643 L1302.99 681.643 L1302.43 681.643 L1301.87 681.643 L1301.31 681.643 L1300.75 681.643 L1300.19 681.643 L1299.63 681.643 L1299.07 681.643 L1298.51 681.643 L1297.95 681.643 L1297.39 681.643 L1296.83 681.643 L1296.28 681.643 L1295.72 681.643 L1295.16 681.643 L1294.6 681.643 L1294.04 681.643 L1293.48 681.643 L1292.92 681.643 L1292.36 681.643 L1291.8 681.643 L1291.24 681.643 L1290.68 681.643 L1290.12 681.643 L1289.56 681.643 L1289 681.643 L1288.45 681.643 L1287.89 681.643 L1287.33 681.643 L1286.77 681.643 L1286.21 681.643 L1285.65 681.643 L1285.09 681.643 L1284.53 681.643 L1283.97 681.643 L1283.41 681.643 L1282.85 681.643 L1282.29 681.643 L1281.73 681.643 L1281.18 681.643 L1280.62 681.643 L1280.06 681.643 L1279.5 681.643 L1278.94 681.643 L1278.38 681.643 L1277.82 681.643 L1277.26 681.643 L1276.7 681.643 L1276.14 681.643 L1275.58 681.643 L1275.02 681.643 L1274.46 681.643 L1273.91 681.643 L1273.35 681.643 L1272.79 681.643 L1272.23 681.643 L1271.67 681.643 L1271.11 681.643 L1270.55 681.643 L1269.99 681.643 L1269.43 681.643 L1268.87 681.643 L1268.31 681.643 L1267.75 681.643 L1267.19 681.643 L1266.63 681.643 L1266.08 681.643 L1265.52 681.643 L1264.96 681.643 L1264.4 681.643 L1263.84 681.643 L1263.28 681.643 L1262.72 681.643 L1262.16 681.643 L1261.6 681.643 L1261.04 681.643 L1260.48 681.643 L1259.92 681.643 L1259.36 681.643 L1258.81 681.643 L1258.25 681.643 L1257.69 681.643 L1257.13 681.643 L1256.57 681.643 L1256.01 681.643 L1255.45 681.643 L1254.89 681.643 L1254.33 681.643 L1253.77 681.643 L1253.21 681.643 L1252.65 681.643 L1252.09 681.643 L1251.54 681.643 L1250.98 681.643 L1250.42 681.643 L1249.86 681.643 L1249.3 681.643 L1248.74 681.643 L1248.18 681.643 L1247.62 681.643 L1247.06 681.643 L1246.5 681.643 L1245.94 681.643 L1245.38 681.643 L1244.82 681.643 L1244.26 681.643 L1243.71 681.643 L1243.15 681.643 L1242.59 681.643 L1242.03 681.643 L1241.47 681.643 L1240.91 681.643 L1240.35 681.643 L1239.79 681.643 L1239.23 681.643 L1238.67 681.643 L1238.11 681.643 L1237.55 681.643 L1236.99 681.643 L1236.44 681.643 L1235.88 681.643 L1235.32 681.643 L1234.76 681.643 L1234.2 681.643 L1233.64 681.643 L1233.08 681.643 L1232.52 681.643 L1231.96 681.643 L1231.4 681.643 L1230.84 681.643 L1230.28 681.643 L1229.72 681.643 L1229.17 681.643 L1228.61 681.643 L1228.05 681.643 L1227.49 681.643 L1226.93 681.643 L1226.37 681.643 L1225.81 681.643 L1225.25 681.643 L1224.69 681.643 L1224.13 681.643 L1223.57 681.643 L1223.01 681.643 L1222.45 681.643 L1221.89 681.643 L1221.34 681.643 L1220.78 681.643 L1220.22 681.643 L1219.66 681.643 L1219.1 681.643 L1218.54 681.643 L1217.98 681.643 L1217.42 681.643 L1216.86 681.643 L1216.3 681.643 L1215.74 681.643 L1215.18 681.643 L1214.62 681.643 L1214.07 681.643 L1213.51 681.643 L1212.95 681.643 L1212.39 681.643 L1211.83 681.643 L1211.27 681.643 L1210.71 681.643 L1210.15 681.643 L1209.59 681.643 L1209.03 681.643 L1208.47 681.643 L1207.91 681.643 L1207.35 681.643 L1206.8 681.643 L1206.24 681.643 L1205.68 681.643 L1205.12 681.643 L1204.56 681.643 L1204 681.643 L1203.44 681.643 L1202.88 681.643 L1202.32 681.643 L1201.76 681.643 L1201.2 681.643 L1200.64 681.643 L1200.08 681.643 L1199.52 681.643 L1198.97 681.643 L1198.41 681.643 L1197.85 681.643 L1197.29 681.643 L1196.73 681.643 L1196.17 681.643 L1195.61 681.643 L1195.05 681.643 L1194.49 681.643 L1193.93 681.643 L1193.37 681.643 L1192.81 681.643 L1192.25 681.643 L1191.7 681.643 L1191.14 681.643 L1190.58 681.643 L1190.02 681.643 L1189.46 681.643 L1188.9 681.643 L1188.34 681.643 L1187.78 681.643 L1187.22 681.643 L1186.66 681.643 L1186.1 681.643 L1185.54 681.643 L1184.98 681.643 L1184.43 681.643 L1183.87 681.643 L1183.31 681.643 L1182.75 681.643 L1182.19 681.643 L1181.63 681.643 L1181.07 681.643 L1180.51 681.643 L1179.95 681.643 L1179.39 681.643 L1178.83 681.643 L1178.27 681.643 L1177.71 681.643 L1177.15 681.643 L1176.6 681.643 L1176.04 681.643 L1175.48 681.643 L1174.92 681.643 L1174.36 681.643 L1173.8 681.643 L1173.24 681.643 L1172.68 681.643 L1172.12 681.643 L1171.56 681.643 L1171 681.643 L1170.44 681.643 L1169.88 681.643 L1169.33 681.643 L1168.77 681.643 L1168.21 681.643 L1167.65 681.643 L1167.09 681.643 L1166.53 681.643 L1165.97 681.643 L1165.41 681.643 L1164.85 681.643 L1164.29 681.643 L1163.73 681.643 L1163.17 681.643 L1162.61 681.643 L1162.05 681.643 L1161.5 681.643 L1160.94 681.643 L1160.38 681.643 L1159.82 681.643 L1159.26 681.643 L1158.7 681.643 L1158.14 681.643 L1157.58 681.643 L1157.02 681.643 L1156.46 681.643 L1155.9 681.643 L1155.34 681.643 L1154.78 681.643 L1154.23 681.643 L1153.67 681.643 L1153.11 681.643 L1152.55 681.643 L1151.99 681.643 L1151.43 681.643 L1150.87 681.643 L1150.31 681.643 L1149.75 681.643 L1149.19 681.643 L1148.63 681.643 L1148.07 681.643 L1147.51 681.643 L1146.96 681.643 L1146.4 681.643 L1145.84 681.643 L1145.28 681.643 L1144.72 681.643 L1144.16 681.643 L1143.6 681.643 L1143.04 681.643 L1142.48 681.643 L1141.92 681.643 L1141.36 681.643 L1140.8 681.643 L1140.24 681.643 L1139.68 681.643 L1139.13 681.643 L1138.57 681.643 L1138.01 681.643 L1137.45 681.643 L1136.89 681.643 L1136.33 681.643 L1135.77 681.643 L1135.21 681.643 L1134.65 681.643 L1134.09 681.643 L1133.53 681.643 L1132.97 681.643 L1132.41 681.643 L1131.86 681.643 L1131.3 681.643 L1130.74 681.643 L1130.18 681.643 L1129.62 681.643 L1129.06 681.643 L1128.5 681.643 L1127.94 681.643 L1127.38 681.643 L1126.82 681.643 L1126.26 681.643 L1125.7 681.643 L1125.14 681.643 L1124.59 681.643 L1124.03 681.643 L1123.47 681.643 L1122.91 681.643 L1122.35 681.643 L1121.79 681.643 L1121.23 681.643 L1120.67 681.643 L1120.11 681.643 L1119.55 681.643 L1118.99 681.643 L1118.43 681.643 L1117.87 681.643 L1117.31 681.643 L1116.76 681.643 L1116.2 681.643 L1115.64 681.643 L1115.08 681.643 L1114.52 681.643 L1113.96 681.643 L1113.4 681.643 L1112.84 681.643 L1112.28 681.643 L1111.72 681.643 L1111.16 681.643 L1110.6 681.643 L1110.04 681.643 L1109.49 681.643 L1108.93 681.643 L1108.37 681.643 L1107.81 681.643 L1107.25 681.643 L1106.69 681.643 L1106.13 681.643 L1105.57 681.643 L1105.01 681.643 L1104.45 681.643 L1103.89 681.643 L1103.33 681.643 L1102.77 681.643 L1102.22 681.643 L1101.66 681.643 L1101.1 681.643 L1100.54 681.643 L1099.98 681.643 L1099.42 681.643 L1098.86 681.643 L1098.3 681.643 L1097.74 681.643 L1097.18 681.643 L1096.62 681.643 L1096.06 681.643 L1095.5 681.643 L1094.94 681.643 L1094.39 681.643 L1093.83 681.643 L1093.27 681.643 L1092.71 681.643 L1092.15 681.643 L1091.59 681.643 L1091.03 681.643 L1090.47 681.643 L1089.91 681.643 L1089.35 681.643 L1088.79 681.643 L1088.23 681.643 L1087.67 681.643 L1087.12 681.643 L1086.56 681.643 L1086 681.643 L1085.44 681.643 L1084.88 681.643 L1084.32 681.643 L1083.76 681.643 L1083.2 681.643 L1082.64 681.643 L1082.08 681.643 L1081.52 681.643 L1080.96 681.643 L1080.4 681.643 L1079.85 681.643 L1079.29 681.643 L1078.73 681.643 L1078.17 681.643 L1077.61 681.643 L1077.05 681.643 L1076.49 681.643 L1075.93 681.643 L1075.37 681.643 L1074.81 681.643 L1074.25 681.643 L1073.69 681.643 L1073.13 681.643 L1072.57 681.643 L1072.02 681.643 L1071.46 681.643 L1070.9 681.643 L1070.34 681.643 L1069.78 681.643 L1069.22 681.643 L1068.66 681.643 L1068.1 681.643 L1067.54 681.643 L1066.98 681.643 L1066.42 681.643 L1065.86 681.643 L1065.3 681.643 L1064.75 681.643 L1064.19 681.643 L1063.63 681.643 L1063.07 681.643 L1062.51 681.643 L1061.95 681.643 L1061.39 681.643 L1060.83 681.643 L1060.27 681.643 L1059.71 681.643 L1059.15 681.643 L1058.59 681.643 L1058.03 681.643 L1057.48 681.643 L1056.92 681.643 L1056.36 681.643 L1055.8 681.643 L1055.24 681.643 L1054.68 681.643 L1054.12 681.643 L1053.56 681.643 L1053 681.643 L1052.44 681.643 L1051.88 681.643 L1051.32 681.643 L1050.76 681.643 L1050.2 681.643 L1049.65 681.643 L1049.09 681.643 L1048.53 681.643 L1047.97 681.643 L1047.41 681.643 L1046.85 681.643 L1046.29 681.643 L1045.73 681.643 L1045.17 681.643 L1044.61 681.643 L1044.05 681.643 L1043.49 681.643 L1042.93 681.643 L1042.38 681.643 L1041.82 681.643 L1041.26 681.643 L1040.7 681.643 L1040.14 681.643 L1039.58 681.643 L1039.02 681.643 L1038.46 681.643 L1037.9 681.643 L1037.34 681.643 L1036.78 681.643 L1036.22 681.643 L1035.66 681.643 L1035.1 681.643 L1034.55 681.643 L1033.99 681.643 L1033.43 681.643 L1032.87 681.643 L1032.31 681.643 L1031.75 681.643 L1031.19 681.643 L1030.63 681.643 L1030.07 681.643 L1029.51 681.643 L1028.95 681.643 L1028.39 681.643 L1027.83 681.643 L1027.28 681.643 L1026.72 681.643 L1026.16 681.643 L1025.6 681.643 L1025.04 681.643 L1024.48 681.643 L1023.92 681.643 L1023.36 681.643 L1022.8 681.643 L1022.24 681.643 L1021.68 681.643 L1021.12 681.643 L1020.56 681.643 L1020.01 681.643 L1019.45 681.643 L1018.89 681.643 L1018.33 681.643 L1017.77 681.643 L1017.21 681.643 L1016.65 681.643 L1016.09 681.643 L1015.53 681.643 L1014.97 681.643 L1014.41 681.643 L1013.85 681.643 L1013.29 681.643 L1012.73 681.643 L1012.18 681.643 L1011.62 681.643 L1011.06 681.643 L1010.5 681.643 L1009.94 681.643 L1009.38 681.643 L1008.82 681.643 L1008.26 681.643 L1007.7 681.643 L1007.14 681.643 L1006.58 681.643 L1006.02 681.643 L1005.46 681.643 L1004.91 681.643 L1004.35 681.643 L1003.79 681.643 L1003.23 681.643 L1002.67 681.643 L1002.11 681.643 L1001.55 681.643 L1000.99 681.643 L1000.43 681.643 L999.872 681.643 L999.313 681.643 L998.754 681.643 L998.194 681.643 L997.635 681.643 L997.076 681.643 L996.517 681.643 L995.957 681.643 L995.398 681.643 L994.839 681.643 L994.28 681.643 L993.72 681.643 L993.161 681.643 L992.602 681.643 L992.043 681.643 L991.483 681.643 L990.924 681.643 L990.365 681.643 L989.806 681.643 L989.246 681.643 L988.687 681.643 L988.128 681.643 L987.569 681.643 L987.009 681.643 L986.45 681.643 L985.891 681.643 L985.332 681.643 L984.772 681.643 L984.213 681.643 L983.654 681.643 L983.095 681.643 L982.535 681.643 L981.976 681.643 L981.417 681.643 L980.858 681.643 L980.298 681.643 L979.739 681.643 L979.18 681.643 L978.621 681.643 L978.061 681.643 L977.502 681.643 L976.943 681.643 L976.384 681.643 L975.824 681.643 L975.265 681.643 L974.706 681.643 L974.147 681.643 L973.587 681.643 L973.028 681.643 L972.469 681.643 L971.91 681.643 L971.35 681.643 L970.791 681.643 L970.232 681.643 L969.673 681.643 L969.113 681.643 L968.554 681.643 L967.995 681.643 L967.436 681.643 L966.876 681.643 L966.317 681.643 L965.758 681.643 L965.199 681.643 L964.639 681.643 L964.08 681.643 L963.521 681.643 L962.962 681.643 L962.402 681.643 L961.843 681.643 L961.284 681.643 L960.725 681.643 L960.165 681.643 L959.606 681.643 L959.047 681.643 L958.488 681.643 L957.928 681.643 L957.369 681.643 L956.81 681.643 L956.251 681.643 L955.691 681.643 L955.132 681.643 L954.573 681.643 L954.014 681.643 L953.454 681.643 L952.895 681.643 L952.336 681.643 L951.777 681.643 L951.217 681.643 L950.658 681.643 L950.099 681.643 L949.54 681.643 L948.98 681.643 L948.421 681.643 L947.862 681.643 L947.303 681.643 L946.743 681.643 L946.184 681.643 L945.625 681.643 L945.066 681.643 L944.506 681.643 L943.947 681.643 L943.388 681.643 L942.829 681.643 L942.269 681.643 L941.71 681.643 L941.151 681.643 L940.592 681.643 L940.032 681.643 L939.473 681.643 L938.914 681.643 L938.355 681.643 L937.795 681.643 L937.236 681.643 L936.677 681.643 L936.118 681.643 L935.558 681.643 L934.999 681.643 L934.44 681.643 L933.881 681.643 L933.321 681.643 L932.762 681.643 L932.203 681.643 L931.644 681.643 L931.084 681.643 L930.525 681.643 L929.966 681.643 L929.406 681.643 L928.847 681.643 L928.288 681.643 L927.729 681.643 L927.169 681.643 L926.61 681.643 L926.051 681.643 L925.492 681.643 L924.932 681.643 L924.373 681.643 L923.814 681.643 L923.255 681.643 L922.695 681.643 L922.136 681.643 L921.577 681.643 L921.018 681.643 L920.458 681.643 L919.899 681.643 L919.34 681.643 L918.781 681.643 L918.221 681.643 L917.662 681.643 L917.103 681.643 L916.544 681.643 L915.984 681.643 L915.425 681.643 L914.866 681.643 L914.307 681.643 L913.747 681.643 L913.188 681.643 L912.629 681.643 L912.07 681.643 L911.51 681.643 L910.951 681.643 L910.392 681.643 L909.833 681.643 L909.273 681.643 L908.714 681.643 L908.155 681.643 L907.596 681.643 L907.036 681.643 L906.477 681.643 L905.918 681.643 L905.359 681.643 L904.799 681.643 L904.24 681.643 L903.681 681.643 L903.122 681.643 L902.562 681.643 L902.003 681.643 L901.444 681.643 L900.885 681.643 L900.325 681.643 L899.766 681.643 L899.207 681.643 L898.648 681.643 L898.088 681.643 L897.529 681.643 L896.97 681.643 L896.411 681.643 L895.851 681.643 L895.292 681.643 L894.733 681.643 L894.174 681.643 L893.614 681.643 L893.055 681.643 L892.496 681.643 L891.937 681.643 L891.377 681.643 L890.818 681.643 L890.259 681.643 L889.7 681.643 L889.14 681.643 L888.581 681.643 L888.022 681.643 L887.463 681.643 L886.903 681.643 L886.344 681.643 L885.785 681.643 L885.226 681.643 L884.666 681.643 L884.107 681.643 L883.548 681.643 L882.989 681.643 L882.429 681.643 L881.87 681.643 L881.311 681.643 L880.752 681.643 L880.192 681.643 L879.633 681.643 L879.074 681.643 L878.515 681.643 L877.955 681.643 L877.396 681.643 L876.837 681.643 L876.278 681.643 L875.718 681.643 L875.159 681.643 L874.6 681.643 L874.041 681.643 L873.481 681.643 L872.922 681.643 L872.363 681.643 L871.804 681.643 L871.244 681.643 L870.685 681.643 L870.126 681.643 L869.567 681.643 L869.007 681.643 L868.448 681.643 L867.889 681.643 L867.33 681.643 L866.77 681.643 L866.211 681.643 L865.652 681.643 L865.093 681.643 L864.533 681.643 L863.974 681.643 L863.415 681.643 L862.856 681.643 L862.296 681.643 L861.737 681.643 L861.178 681.643 L860.619 681.643 L860.059 681.643 L859.5 681.643 L858.941 681.643 L858.382 681.643 L857.822 681.643 L857.263 681.643 L856.704 681.643 L856.145 681.643 L855.585 681.643 L855.026 681.643 L854.467 681.643 L853.908 681.643 L853.348 681.643 L852.789 681.643 L852.23 681.643 L851.671 681.643 L851.111 681.643 L850.552 681.643 L849.993 681.643 L849.434 681.643 L848.874 681.643 L848.315 681.643 L847.756 681.643 L847.197 681.643 L846.637 681.643 L846.078 681.643 L845.519 681.643 L844.96 681.643 L844.4 681.643 L843.841 681.643 L843.282 681.643 L842.723 681.643 L842.163 681.643 L841.604 681.643 L841.045 681.643 L840.486 681.643 L839.926 681.643 L839.367 681.643 L838.808 681.643 L838.249 681.643 L837.689 681.643 L837.13 681.643 L836.571 681.643 L836.012 681.643 L835.452 681.643 L834.893 681.643 L834.334 681.643 L833.775 681.643 L833.215 681.643 L832.656 681.643 L832.097 681.643 L831.538 681.643 L830.978 681.643 L830.419 681.643 L829.86 681.643 L829.301 681.643 L828.741 681.643 L828.182 681.643 L827.623 681.643 L827.064 681.643 L826.504 681.643 L825.945 681.643 L825.386 681.643 L824.827 681.643 L824.267 681.643 L823.708 681.643 L823.149 681.643 L822.59 681.643 L822.03 681.643 L821.471 681.643 L820.912 681.643 L820.353 681.643 L819.793 681.643 L819.234 681.643 L818.675 681.643 L818.116 681.643 L817.556 681.643 L816.997 681.643 L816.438 681.643 L815.879 681.643 L815.319 681.643 L814.76 681.643 L814.201 681.643 L813.642 681.643 L813.082 681.643 L812.523 681.643 L811.964 681.643 L811.405 681.643 L810.845 681.643 L810.286 681.643 L809.727 681.643 L809.168 681.643 L808.608 681.643 L808.049 681.643 L807.49 681.643 L806.931 681.643 L806.371 681.643 L805.812 681.643 L805.253 681.643 L804.693 681.643 L804.134 681.643 L803.575 681.643 L803.016 681.643 L802.456 681.643 L801.897 681.643 L801.338 681.643 L800.779 681.643 L800.219 681.643 L799.66 681.643 L799.101 681.643 L798.542 681.643 L797.982 681.643 L797.423 681.643 L796.864 681.643 L796.305 681.643 L795.745 681.643 L795.186 681.643 L794.627 681.643 L794.068 681.643 L793.508 681.643 L792.949 681.643 L792.39 681.643 L791.831 681.643 L791.271 681.643 L790.712 681.643 L790.153 681.643 L789.594 681.643 L789.034 681.643 L788.475 681.643 L787.916 681.643 L787.357 681.643 L786.797 681.643 L786.238 681.643 L785.679 681.643 L785.12 681.643 L784.56 681.643 L784.001 681.643 L783.442 681.643 L782.883 681.643 L782.323 681.643 L781.764 681.643 L781.205 681.643 L780.646 681.643 L780.086 681.643 L779.527 681.643 L778.968 681.643 L778.409 681.643 L777.849 681.643 L777.29 681.643 L776.731 681.643 L776.172 681.643 L775.612 681.643 L775.053 681.643 L774.494 681.643 L773.935 681.643 L773.375 681.643 L772.816 681.643 L772.257 681.643 L771.698 681.643 L771.138 681.643 L770.579 681.643 L770.02 681.643 L769.461 681.643 L768.901 681.643 L768.342 681.643 L767.783 681.643 L767.224 681.643 L766.664 681.643 L766.105 681.643 L765.546 681.643 L764.987 681.643 L764.427 681.643 L763.868 681.643 L763.309 681.643 L762.75 681.643 L762.19 681.643 L761.631 681.643 L761.072 681.643 L760.513 681.643 L759.953 681.643 L759.394 681.643 L758.835 681.643 L758.276 681.643 L757.716 681.643 L757.157 681.643 L756.598 681.643 L756.039 681.643 L755.479 681.643 L754.92 681.643 L754.361 681.643 L753.802 681.643 L753.242 681.643 L752.683 681.643 L752.124 681.643 L751.565 681.643 L751.005 681.643 L750.446 681.643 L749.887 681.643 L749.328 681.643 L748.768 681.643 L748.209 681.643 L747.65 681.643 L747.091 681.643 L746.531 681.643 L745.972 681.643 L745.413 681.643 L744.854 681.643 L744.294 681.643 L743.735 681.643 L743.176 681.643 L742.617 681.643 L742.057 681.643 L741.498 681.643 L740.939 681.643 L740.38 681.643 L739.82 681.643 L739.261 681.643 L738.702 681.643 L738.143 681.643 L737.583 681.643 L737.024 681.643 L736.465 681.643 L735.906 681.643 L735.346 681.643 L734.787 681.643 L734.228 681.643 L733.669 681.643 L733.109 681.643 L732.55 681.643 L731.991 681.643 L731.432 681.643 L730.872 681.643 L730.313 681.643 L729.754 681.643 L729.195 681.643 L728.635 681.643 L728.076 681.643 L727.517 681.643 L726.958 681.643 L726.398 681.643 L725.839 681.643 L725.28 681.643 L724.721 681.643 L724.161 681.643 L723.602 681.643 L723.043 681.643 L722.484 681.643 L721.924 681.643 L721.365 681.643 L720.806 681.643 L720.247 681.643  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip163)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,685.686 720.806,685.686 721.365,685.686 721.924,685.686 722.484,685.686 723.043,685.686 723.602,685.686 724.161,685.686 724.721,685.686 725.28,685.686 725.839,685.686 726.398,685.686 726.958,685.686 727.517,685.686 728.076,685.686 728.635,685.686 729.195,685.686 729.754,685.686 730.313,685.686 730.872,685.686 731.432,685.686 731.991,685.686 732.55,685.686 733.109,685.686 733.669,685.686 734.228,685.686 734.787,685.686 735.346,685.686 735.906,685.686 736.465,685.686 737.024,685.686 737.583,685.686 738.143,685.686 738.702,685.686 739.261,685.686 739.82,685.686 740.38,685.686 740.939,685.686 741.498,685.686 742.057,685.686 742.617,685.686 743.176,685.686 743.735,685.686 744.294,685.686 744.854,685.686 745.413,685.686 745.972,685.686 746.531,685.686 747.091,685.686 747.65,685.686 748.209,685.686 748.768,685.686 749.328,685.686 749.887,685.686 750.446,685.686 751.005,685.686 751.565,685.686 752.124,685.686 752.683,685.686 753.242,685.686 753.802,685.686 754.361,685.686 754.92,685.686 755.479,685.686 756.039,685.686 756.598,685.686 757.157,685.686 757.716,685.686 758.276,685.686 758.835,685.686 759.394,685.686 759.953,685.686 760.513,685.686 761.072,685.686 761.631,685.686 762.19,685.686 762.75,685.686 763.309,685.686 763.868,685.686 764.427,685.686 764.987,685.686 765.546,685.686 766.105,685.686 766.664,685.686 767.224,685.686 767.783,685.686 768.342,685.686 768.901,685.686 769.461,685.686 770.02,685.686 770.579,685.686 771.138,685.686 771.698,685.686 772.257,685.686 772.816,685.686 773.375,685.686 773.935,685.686 774.494,685.686 775.053,685.686 775.612,685.686 776.172,685.686 776.731,685.686 777.29,685.686 777.849,685.686 778.409,685.686 778.968,685.686 779.527,685.686 780.086,685.686 780.646,685.686 781.205,685.686 781.764,685.686 782.323,685.686 782.883,685.686 783.442,685.686 784.001,685.686 784.56,685.686 785.12,685.686 785.679,685.686 786.238,685.686 786.797,685.686 787.357,685.686 787.916,685.686 788.475,685.686 789.034,685.686 789.594,685.686 790.153,685.686 790.712,685.686 791.271,685.686 791.831,685.686 792.39,685.686 792.949,685.686 793.508,685.686 794.068,685.686 794.627,685.686 795.186,685.686 795.745,685.686 796.305,685.686 796.864,685.686 797.423,685.686 797.982,685.686 798.542,685.686 799.101,685.686 799.66,685.686 800.219,685.686 800.779,685.686 801.338,685.686 801.897,685.686 802.456,685.686 803.016,685.686 803.575,685.686 804.134,685.686 804.693,685.686 805.253,685.686 805.812,685.686 806.371,685.686 806.931,685.686 807.49,685.686 808.049,685.686 808.608,685.686 809.168,685.686 809.727,685.686 810.286,685.686 810.845,685.686 811.405,685.686 811.964,685.686 812.523,685.686 813.082,685.686 813.642,685.686 814.201,685.686 814.76,685.686 815.319,685.686 815.879,685.686 816.438,685.686 816.997,685.686 817.556,685.686 818.116,685.686 818.675,685.686 819.234,685.686 819.793,685.686 820.353,685.686 820.912,685.686 821.471,685.686 822.03,685.686 822.59,685.686 823.149,685.686 823.708,685.686 824.267,685.686 824.827,685.686 825.386,685.686 825.945,685.686 826.504,685.686 827.064,685.686 827.623,685.686 828.182,685.686 828.741,685.686 829.301,685.686 829.86,685.686 830.419,685.686 830.978,685.686 831.538,685.686 832.097,685.686 832.656,685.686 833.215,685.686 833.775,685.686 834.334,685.686 834.893,685.686 835.452,685.686 836.012,685.686 836.571,685.686 837.13,685.686 837.689,685.686 838.249,685.686 838.808,685.686 839.367,685.686 839.926,685.686 840.486,685.686 841.045,685.686 841.604,685.686 842.163,685.686 842.723,685.686 843.282,685.686 843.841,685.686 844.4,685.686 844.96,685.686 845.519,685.686 846.078,685.686 846.637,685.686 847.197,685.686 847.756,685.686 848.315,685.686 848.874,685.686 849.434,685.686 849.993,685.686 850.552,685.686 851.111,685.686 851.671,685.686 852.23,685.686 852.789,685.686 853.348,685.686 853.908,685.686 854.467,685.686 855.026,685.686 855.585,685.686 856.145,685.686 856.704,685.686 857.263,685.686 857.822,685.686 858.382,685.686 858.941,685.686 859.5,685.686 860.059,685.686 860.619,685.686 861.178,685.686 861.737,685.686 862.296,685.686 862.856,685.686 863.415,685.686 863.974,685.686 864.533,685.686 865.093,685.686 865.652,685.686 866.211,685.686 866.77,685.686 867.33,685.686 867.889,685.686 868.448,685.686 869.007,685.686 869.567,685.686 870.126,685.686 870.685,685.686 871.244,685.686 871.804,685.686 872.363,685.686 872.922,685.686 873.481,685.686 874.041,685.686 874.6,685.686 875.159,685.686 875.718,685.686 876.278,685.686 876.837,685.686 877.396,685.686 877.955,685.686 878.515,685.686 879.074,685.686 879.633,685.686 880.192,685.686 880.752,685.686 881.311,685.686 881.87,685.686 882.429,685.686 882.989,685.686 883.548,685.686 884.107,685.686 884.666,685.686 885.226,685.686 885.785,685.686 886.344,685.686 886.903,685.686 887.463,685.686 888.022,685.686 888.581,685.686 889.14,685.686 889.7,685.686 890.259,685.686 890.818,685.686 891.377,685.686 891.937,685.686 892.496,685.686 893.055,685.686 893.614,685.686 894.174,685.686 894.733,685.686 895.292,685.686 895.851,685.686 896.411,685.686 896.97,685.686 897.529,685.686 898.088,685.686 898.648,685.686 899.207,685.686 899.766,685.686 900.325,685.686 900.885,685.686 901.444,685.686 902.003,685.686 902.562,685.686 903.122,685.686 903.681,685.686 904.24,685.686 904.799,685.686 905.359,685.686 905.918,685.686 906.477,685.686 907.036,685.686 907.596,685.686 908.155,685.686 908.714,685.686 909.273,685.686 909.833,685.686 910.392,685.686 910.951,685.686 911.51,685.686 912.07,685.686 912.629,685.686 913.188,685.686 913.747,685.686 914.307,685.686 914.866,685.686 915.425,685.686 915.984,685.686 916.544,685.686 917.103,685.686 917.662,685.686 918.221,685.686 918.781,685.686 919.34,685.686 919.899,685.686 920.458,685.686 921.018,685.686 921.577,685.686 922.136,685.686 922.695,685.686 923.255,685.686 923.814,685.686 924.373,685.686 924.932,685.686 925.492,685.686 926.051,685.686 926.61,685.686 927.169,685.686 927.729,685.686 928.288,685.686 928.847,685.686 929.406,685.686 929.966,685.686 930.525,685.686 931.084,685.686 931.644,685.686 932.203,685.686 932.762,685.686 933.321,685.686 933.881,685.686 934.44,685.686 934.999,685.686 935.558,685.686 936.118,685.686 936.677,685.686 937.236,685.686 937.795,685.686 938.355,685.686 938.914,685.686 939.473,685.686 940.032,685.686 940.592,685.686 941.151,685.686 941.71,685.686 942.269,685.686 942.829,685.686 943.388,685.686 943.947,685.686 944.506,685.686 945.066,685.686 945.625,685.686 946.184,685.686 946.743,685.686 947.303,685.686 947.862,685.686 948.421,685.686 948.98,685.686 949.54,685.686 950.099,685.686 950.658,685.686 951.217,685.686 951.777,685.686 952.336,685.686 952.895,685.686 953.454,685.686 954.014,685.686 954.573,685.686 955.132,685.686 955.691,685.686 956.251,685.686 956.81,685.686 957.369,685.686 957.928,685.686 958.488,685.686 959.047,685.686 959.606,685.686 960.165,685.686 960.725,685.686 961.284,685.686 961.843,685.686 962.402,685.686 962.962,685.686 963.521,685.686 964.08,685.686 964.639,685.686 965.199,685.686 965.758,685.686 966.317,685.686 966.876,685.686 967.436,685.686 967.995,685.686 968.554,685.686 969.113,685.686 969.673,685.686 970.232,685.686 970.791,685.686 971.35,685.686 971.91,685.686 972.469,685.686 973.028,685.686 973.587,685.686 974.147,685.686 974.706,685.686 975.265,685.686 975.824,685.686 976.384,685.686 976.943,685.686 977.502,685.686 978.061,685.686 978.621,685.686 979.18,685.686 979.739,685.686 980.298,685.686 980.858,685.686 981.417,685.686 981.976,685.686 982.535,685.686 983.095,685.686 983.654,685.686 984.213,685.686 984.772,685.686 985.332,685.686 985.891,685.686 986.45,685.686 987.009,685.686 987.569,685.686 988.128,685.686 988.687,685.686 989.246,685.686 989.806,685.686 990.365,685.686 990.924,685.686 991.483,685.686 992.043,685.686 992.602,685.686 993.161,685.686 993.72,685.686 994.28,685.686 994.839,685.686 995.398,685.686 995.957,685.686 996.517,685.686 997.076,685.686 997.635,685.686 998.194,685.686 998.754,685.686 999.313,685.686 999.872,685.686 1000.43,685.686 1000.99,685.686 1001.55,685.686 1002.11,685.686 1002.67,685.686 1003.23,685.686 1003.79,685.686 1004.35,685.686 1004.91,685.686 1005.46,685.686 1006.02,685.686 1006.58,685.686 1007.14,685.686 1007.7,685.686 1008.26,685.686 1008.82,685.686 1009.38,685.686 1009.94,685.686 1010.5,685.686 1011.06,685.686 1011.62,685.686 1012.18,685.686 1012.73,685.686 1013.29,685.686 1013.85,685.686 1014.41,685.686 1014.97,685.686 1015.53,685.686 1016.09,685.686 1016.65,685.686 1017.21,685.686 1017.77,685.686 1018.33,685.686 1018.89,685.686 1019.45,685.686 1020.01,685.686 1020.56,685.686 1021.12,685.686 1021.68,685.686 1022.24,685.686 1022.8,685.686 1023.36,685.686 1023.92,685.686 1024.48,685.686 1025.04,685.686 1025.6,685.686 1026.16,685.686 1026.72,685.686 1027.28,685.686 1027.83,685.686 1028.39,685.686 1028.95,685.686 1029.51,685.686 1030.07,685.686 1030.63,685.686 1031.19,685.686 1031.75,685.686 1032.31,685.686 1032.87,685.686 1033.43,685.686 1033.99,685.686 1034.55,685.686 1035.1,685.686 1035.66,685.686 1036.22,685.686 1036.78,685.686 1037.34,685.686 1037.9,685.686 1038.46,685.686 1039.02,685.686 1039.58,685.686 1040.14,685.686 1040.7,685.686 1041.26,685.686 1041.82,685.686 1042.38,685.686 1042.93,685.686 1043.49,685.686 1044.05,685.686 1044.61,685.686 1045.17,685.686 1045.73,685.686 1046.29,685.686 1046.85,685.686 1047.41,685.686 1047.97,685.686 1048.53,685.686 1049.09,685.686 1049.65,685.686 1050.2,685.686 1050.76,685.686 1051.32,685.686 1051.88,685.686 1052.44,685.686 1053,685.686 1053.56,685.686 1054.12,685.686 1054.68,685.686 1055.24,685.686 1055.8,685.686 1056.36,685.686 1056.92,685.686 1057.48,685.686 1058.03,685.686 1058.59,685.686 1059.15,685.686 1059.71,685.686 1060.27,685.686 1060.83,685.686 1061.39,685.686 1061.95,685.686 1062.51,685.686 1063.07,685.686 1063.63,685.686 1064.19,685.686 1064.75,685.686 1065.3,685.686 1065.86,685.686 1066.42,685.686 1066.98,685.686 1067.54,685.686 1068.1,685.686 1068.66,685.686 1069.22,685.686 1069.78,685.686 1070.34,685.686 1070.9,685.686 1071.46,685.686 1072.02,685.686 1072.57,685.686 1073.13,685.686 1073.69,685.686 1074.25,685.686 1074.81,685.686 1075.37,685.686 1075.93,685.686 1076.49,685.686 1077.05,685.686 1077.61,685.686 1078.17,685.686 1078.73,685.686 1079.29,685.686 1079.85,685.686 1080.4,685.686 1080.96,685.686 1081.52,685.686 1082.08,685.686 1082.64,685.686 1083.2,685.686 1083.76,685.686 1084.32,685.686 1084.88,685.686 1085.44,685.686 1086,685.686 1086.56,685.686 1087.12,685.686 1087.67,685.686 1088.23,685.686 1088.79,685.686 1089.35,685.686 1089.91,685.686 1090.47,685.686 1091.03,685.686 1091.59,685.686 1092.15,685.686 1092.71,685.686 1093.27,685.686 1093.83,685.686 1094.39,685.686 1094.94,685.686 1095.5,685.686 1096.06,685.686 1096.62,685.686 1097.18,685.686 1097.74,685.686 1098.3,685.686 1098.86,685.686 1099.42,685.686 1099.98,685.686 1100.54,685.686 1101.1,685.686 1101.66,685.686 1102.22,685.686 1102.77,685.686 1103.33,685.686 1103.89,685.686 1104.45,685.686 1105.01,685.686 1105.57,685.686 1106.13,685.686 1106.69,685.686 1107.25,685.686 1107.81,685.686 1108.37,685.686 1108.93,685.686 1109.49,685.686 1110.04,685.686 1110.6,685.686 1111.16,685.686 1111.72,685.686 1112.28,685.686 1112.84,685.686 1113.4,685.686 1113.96,685.686 1114.52,685.686 1115.08,685.686 1115.64,685.686 1116.2,685.686 1116.76,685.686 1117.31,685.686 1117.87,685.686 1118.43,685.686 1118.99,685.686 1119.55,685.686 1120.11,685.686 1120.67,685.686 1121.23,685.686 1121.79,685.686 1122.35,685.686 1122.91,685.686 1123.47,685.686 1124.03,685.686 1124.59,685.686 1125.14,685.686 1125.7,685.686 1126.26,685.686 1126.82,685.686 1127.38,685.686 1127.94,685.686 1128.5,685.686 1129.06,685.686 1129.62,685.686 1130.18,685.686 1130.74,685.686 1131.3,685.686 1131.86,685.686 1132.41,685.686 1132.97,685.686 1133.53,685.686 1134.09,685.686 1134.65,685.686 1135.21,685.686 1135.77,685.686 1136.33,685.686 1136.89,685.686 1137.45,685.686 1138.01,685.686 1138.57,685.686 1139.13,685.686 1139.68,685.686 1140.24,685.686 1140.8,685.686 1141.36,685.686 1141.92,685.686 1142.48,685.686 1143.04,685.686 1143.6,685.686 1144.16,685.686 1144.72,685.686 1145.28,685.686 1145.84,685.686 1146.4,685.686 1146.96,685.686 1147.51,685.686 1148.07,685.686 1148.63,685.686 1149.19,685.686 1149.75,685.686 1150.31,685.686 1150.87,685.686 1151.43,685.686 1151.99,685.686 1152.55,685.686 1153.11,685.686 1153.67,685.686 1154.23,685.686 1154.78,685.686 1155.34,685.686 1155.9,685.686 1156.46,685.686 1157.02,685.686 1157.58,685.686 1158.14,685.686 1158.7,685.686 1159.26,685.686 1159.82,685.686 1160.38,685.686 1160.94,685.686 1161.5,685.686 1162.05,685.686 1162.61,685.686 1163.17,685.686 1163.73,685.686 1164.29,685.686 1164.85,685.686 1165.41,685.686 1165.97,685.686 1166.53,685.686 1167.09,685.686 1167.65,685.686 1168.21,685.686 1168.77,685.686 1169.33,685.686 1169.88,685.686 1170.44,685.686 1171,685.686 1171.56,685.686 1172.12,685.686 1172.68,685.686 1173.24,685.686 1173.8,685.686 1174.36,685.686 1174.92,685.686 1175.48,685.686 1176.04,685.686 1176.6,685.686 1177.15,685.686 1177.71,685.686 1178.27,685.686 1178.83,685.686 1179.39,685.686 1179.95,685.686 1180.51,685.686 1181.07,685.686 1181.63,685.686 1182.19,685.686 1182.75,685.686 1183.31,685.686 1183.87,685.686 1184.43,685.686 1184.98,685.686 1185.54,685.686 1186.1,685.686 1186.66,685.686 1187.22,685.686 1187.78,685.686 1188.34,685.686 1188.9,685.686 1189.46,685.686 1190.02,685.686 1190.58,685.686 1191.14,685.686 1191.7,685.686 1192.25,685.686 1192.81,685.686 1193.37,685.686 1193.93,685.686 1194.49,685.686 1195.05,685.686 1195.61,685.686 1196.17,685.686 1196.73,685.686 1197.29,685.686 1197.85,685.686 1198.41,685.686 1198.97,685.686 1199.52,685.686 1200.08,685.686 1200.64,685.686 1201.2,685.686 1201.76,685.686 1202.32,685.686 1202.88,685.686 1203.44,685.686 1204,685.686 1204.56,685.686 1205.12,685.686 1205.68,685.686 1206.24,685.686 1206.8,685.686 1207.35,685.686 1207.91,685.686 1208.47,685.686 1209.03,685.686 1209.59,685.686 1210.15,685.686 1210.71,685.686 1211.27,685.686 1211.83,685.686 1212.39,685.686 1212.95,685.686 1213.51,685.686 1214.07,685.686 1214.62,685.686 1215.18,685.686 1215.74,685.686 1216.3,685.686 1216.86,685.686 1217.42,685.686 1217.98,685.686 1218.54,685.686 1219.1,685.686 1219.66,685.686 1220.22,685.686 1220.78,685.686 1221.34,685.686 1221.89,685.686 1222.45,685.686 1223.01,685.686 1223.57,685.686 1224.13,685.686 1224.69,685.686 1225.25,685.686 1225.81,685.686 1226.37,685.686 1226.93,685.686 1227.49,685.686 1228.05,685.686 1228.61,685.686 1229.17,685.686 1229.72,685.686 1230.28,685.686 1230.84,685.686 1231.4,685.686 1231.96,685.686 1232.52,685.686 1233.08,685.686 1233.64,685.686 1234.2,685.686 1234.76,685.686 1235.32,685.686 1235.88,685.686 1236.44,685.686 1236.99,685.686 1237.55,685.686 1238.11,685.686 1238.67,685.686 1239.23,685.686 1239.79,685.686 1240.35,685.686 1240.91,685.686 1241.47,685.686 1242.03,685.686 1242.59,685.686 1243.15,685.686 1243.71,685.686 1244.26,685.686 1244.82,685.686 1245.38,685.686 1245.94,685.686 1246.5,685.686 1247.06,685.686 1247.62,685.686 1248.18,685.686 1248.74,685.686 1249.3,685.686 1249.86,685.686 1250.42,685.686 1250.98,685.686 1251.54,685.686 1252.09,685.686 1252.65,685.686 1253.21,685.686 1253.77,685.686 1254.33,685.686 1254.89,685.686 1255.45,685.686 1256.01,685.686 1256.57,685.686 1257.13,685.686 1257.69,685.686 1258.25,685.686 1258.81,685.686 1259.36,685.686 1259.92,685.686 1260.48,685.686 1261.04,685.686 1261.6,685.686 1262.16,685.686 1262.72,685.686 1263.28,685.686 1263.84,685.686 1264.4,685.686 1264.96,685.686 1265.52,685.686 1266.08,685.686 1266.63,685.686 1267.19,685.686 1267.75,685.686 1268.31,685.686 1268.87,685.686 1269.43,685.686 1269.99,685.686 1270.55,685.686 1271.11,685.686 1271.67,685.686 1272.23,685.686 1272.79,685.686 1273.35,685.686 1273.91,685.686 1274.46,685.686 1275.02,685.686 1275.58,685.686 1276.14,685.686 1276.7,685.686 1277.26,685.686 1277.82,685.686 1278.38,685.686 1278.94,685.686 1279.5,685.686 1280.06,685.686 1280.62,685.686 1281.18,685.686 1281.73,685.686 1282.29,685.686 1282.85,685.686 1283.41,685.686 1283.97,685.686 1284.53,685.686 1285.09,685.686 1285.65,685.686 1286.21,685.686 1286.77,685.686 1287.33,685.686 1287.89,685.686 1288.45,685.686 1289,685.686 1289.56,685.686 1290.12,685.686 1290.68,685.686 1291.24,685.686 1291.8,685.686 1292.36,685.686 1292.92,685.686 1293.48,685.686 1294.04,685.686 1294.6,685.686 1295.16,685.686 1295.72,685.686 1296.28,685.686 1296.83,685.686 1297.39,685.686 1297.95,685.686 1298.51,685.686 1299.07,685.686 1299.63,685.686 1300.19,685.686 1300.75,685.686 1301.31,685.686 1301.87,685.686 1302.43,685.686 1302.99,685.686 1303.55,685.686 1304.1,685.686 1304.66,685.686 1305.22,685.686 1305.78,685.686 1306.34,685.686 1306.9,685.686 1307.46,685.686 1308.02,685.686 1308.58,685.686 1309.14,685.686 1309.7,685.686 1310.26,685.686 1310.82,685.686 1311.38,685.686 1311.93,685.686 1312.49,685.686 1313.05,685.686 1313.61,685.686 1314.17,685.686 1314.73,685.686 1315.29,685.686 1315.85,685.686 1316.41,685.686 1316.97,685.686 1317.53,685.686 1318.09,685.686 1318.65,685.686 1319.2,685.686 1319.76,685.686 1320.32,685.686 1320.88,685.686 1321.44,685.686 1322,685.686 1322.56,685.686 1323.12,685.686 1323.68,685.686 1324.24,685.686 1324.8,685.686 1325.36,685.686 1325.92,685.686 1326.47,685.686 1327.03,685.686 1327.59,685.686 1328.15,685.686 1328.71,685.686 1329.27,685.686 1329.83,685.686 1330.39,685.686 1330.95,685.686 1331.51,685.686 1332.07,685.686 1332.63,685.686 1333.19,685.686 1333.75,685.686 1334.3,685.686 1334.86,685.686 1335.42,685.686 1335.98,685.686 1336.54,685.686 1337.1,685.686 1337.66,685.686 1338.22,685.686 1338.78,685.686 1339.34,685.686 1339.9,685.686 1340.46,685.686 1341.02,685.686 1341.57,685.686 1342.13,685.686 1342.69,685.686 1343.25,685.686 1343.81,685.686 1344.37,685.686 1344.93,685.686 1345.49,685.686 1346.05,685.686 1346.61,685.686 1347.17,685.686 1347.73,685.686 1348.29,685.686 1348.84,685.686 1349.4,685.686 1349.96,685.686 1350.52,685.686 1351.08,685.686 1351.64,685.686 1352.2,685.686 1352.76,685.686 1353.32,685.686 1353.88,685.686 1354.44,685.686 1355,685.686 1355.56,685.686 1356.12,685.686 1356.67,685.686 1357.23,685.686 1357.79,685.686 1358.35,685.686 1358.91,685.686 1359.47,685.686 1360.03,685.686 1360.59,685.686 1361.15,685.686 1361.71,685.686 1362.27,685.686 1362.83,685.686 1363.39,685.686 1363.94,685.686 1364.5,685.686 1365.06,685.686 1365.62,685.686 1366.18,685.686 1366.74,685.686 1367.3,685.686 1367.86,685.686 1368.42,685.686 1368.98,685.686 1369.54,685.686 1370.1,685.686 1370.66,685.686 1371.21,685.686 1371.77,685.686 1372.33,685.686 1372.89,685.686 1373.45,685.686 1374.01,685.686 1374.57,685.686 1375.13,685.686 1375.69,685.686 1376.25,685.686 1376.81,685.686 1377.37,685.686 1377.93,685.686 1378.49,685.686 1379.04,685.686 1379.6,685.686 1380.16,685.686 1380.72,685.686 1381.28,685.686 1381.84,685.686 1382.4,685.686 1382.96,685.686 1383.52,685.686 1384.08,685.686 1384.64,685.686 1385.2,685.686 1385.76,685.686 1386.31,685.686 1386.87,685.686 1387.43,685.686 1387.99,685.686 1388.55,685.686 1389.11,685.686 1389.67,685.686 1390.23,685.686 1390.79,685.686 1391.35,685.686 1391.91,685.686 1392.47,685.686 1393.03,685.686 1393.58,685.686 1394.14,685.686 1394.7,685.686 1395.26,685.686 1395.82,685.686 1396.38,685.686 1396.94,685.686 1397.5,685.686 1398.06,685.686 1398.62,685.686 1399.18,685.686 1399.74,685.686 1400.3,685.686 1400.86,685.686 1401.41,685.686 1401.97,685.686 1402.53,685.686 1403.09,685.686 1403.65,685.686 1404.21,685.686 1404.77,685.686 1405.33,685.686 1405.89,685.686 1406.45,685.686 1407.01,685.686 1407.57,685.686 1408.13,685.686 1408.68,685.686 1409.24,685.686 1409.8,685.686 1410.36,685.686 1410.92,685.686 1411.48,685.686 1412.04,685.686 1412.6,685.686 1413.16,685.686 1413.72,685.686 1414.28,685.686 1414.84,685.686 1415.4,685.686 1415.95,685.686 1416.51,685.686 1417.07,685.686 1417.63,685.686 1418.19,685.686 1418.75,685.686 1419.31,685.686 1419.87,685.686 1420.43,685.686 1420.99,685.686 1421.55,685.686 1422.11,685.686 1422.67,685.686 1423.23,685.686 1423.78,685.686 1424.34,685.686 1424.9,685.686 1425.46,685.686 1426.02,685.686 1426.58,685.686 1427.14,685.686 1427.7,685.686 1428.26,685.686 1428.82,685.686 1429.38,685.686 1429.94,685.686 1430.5,685.686 1431.05,685.686 1431.61,685.686 1432.17,685.686 1432.73,685.686 1433.29,685.686 1433.85,685.686 1434.41,685.686 1434.97,685.686 1435.53,685.686 1436.09,685.686 1436.65,685.686 1437.21,685.686 1437.77,685.686 1438.33,685.686 1438.88,685.686 1439.44,685.686 1440,685.686 1440.56,685.686 1441.12,685.686 1441.68,685.686 1442.24,685.686 1442.8,685.686 1443.36,685.686 1443.92,685.686 1444.48,685.686 1445.04,685.686 1445.6,685.686 1446.15,685.686 1446.71,685.686 1447.27,685.686 1447.83,685.686 1448.39,685.686 1448.95,685.686 1449.51,685.686 1450.07,685.686 1450.63,685.686 1451.19,685.686 1451.75,685.686 1452.31,685.686 1452.87,685.686 1453.42,685.686 1453.98,685.686 1454.54,685.686 1455.1,685.686 1455.66,685.686 1456.22,685.686 1456.78,685.686 1457.34,685.686 1457.9,685.686 1458.46,685.686 1459.02,685.686 1459.58,685.686 1460.14,685.686 1460.7,685.686 1461.25,685.686 1461.81,685.686 1462.37,685.686 1462.93,685.686 1463.49,685.686 1464.05,685.686 1464.61,685.686 1465.17,685.686 1465.73,685.686 1466.29,685.686 1466.85,685.686 1467.41,685.686 1467.97,685.686 1468.52,685.686 1469.08,685.686 1469.64,685.686 1470.2,685.686 1470.76,685.686 1471.32,685.686 1471.88,685.686 1472.44,685.686 1473,685.686 1473.56,685.686 1474.12,685.686 1474.68,685.686 1475.24,685.686 1475.79,685.686 1476.35,685.686 1476.91,685.686 1477.47,685.686 1478.03,685.686 1478.59,685.686 1479.15,685.686 1479.71,685.686 1480.27,685.686 1480.83,685.686 1481.39,685.686 1481.95,685.686 1482.51,685.686 1483.07,685.686 1483.62,685.686 1484.18,685.686 1484.74,685.686 1485.3,685.686 1485.86,685.686 1486.42,685.686 1486.98,685.686 1487.54,685.686 1488.1,685.686 1488.66,685.686 1489.22,685.686 1489.78,685.686 1490.34,685.686 1490.89,685.686 1491.45,685.686 1492.01,685.686 1492.57,685.686 1493.13,685.686 1493.69,685.686 1494.25,685.686 1494.81,685.686 1495.37,685.686 1495.93,685.686 1496.49,685.686 1497.05,685.686 1497.61,685.686 1498.16,685.686 1498.72,685.686 1499.28,685.686 1499.84,685.686 1500.4,685.686 1500.96,685.686 1501.52,685.686 1502.08,685.686 1502.64,685.686 1503.2,685.686 1503.76,685.686 1504.32,685.686 1504.88,685.686 1505.44,685.686 1505.99,685.686 1506.55,685.686 1507.11,685.686 1507.67,685.686 1508.23,685.686 1508.79,685.686 1509.35,685.686 1509.91,685.686 1510.47,685.686 1511.03,685.686 1511.59,685.686 1512.15,685.686 1512.71,685.686 1513.26,685.686 1513.82,685.686 1514.38,685.686 1514.94,685.686 1515.5,685.686 1516.06,685.686 1516.62,685.686 1517.18,685.686 1517.74,685.686 1518.3,685.686 1518.86,685.686 1519.42,685.686 1519.98,685.686 1520.53,685.686 1521.09,685.686 1521.65,685.686 1522.21,685.686 1522.77,685.686 1523.33,685.686 1523.89,685.686 1524.45,685.686 1525.01,685.686 1525.57,685.686 1526.13,685.686 1526.69,685.686 1527.25,685.686 1527.81,685.686 1528.36,685.686 1528.92,685.686 1529.48,685.686 1530.04,685.686 1530.6,685.686 1531.16,685.686 1531.72,685.686 1532.28,685.686 1532.84,685.686 1533.4,685.686 1533.96,685.686 1534.52,685.686 1535.08,685.686 1535.63,685.686 1536.19,685.686 1536.75,685.686 1537.31,685.686 1537.87,685.686 1538.43,685.686 1538.99,685.686 1539.55,685.686 1540.11,685.686 1540.67,685.686 1541.23,685.686 1541.79,685.686 1542.35,685.686 1542.9,685.686 1543.46,685.686 1544.02,685.686 1544.58,685.686 1545.14,685.686 1545.7,685.686 1546.26,685.686 1546.82,685.686 1547.38,685.686 1547.94,685.686 1548.5,685.686 1549.06,685.686 1549.62,685.686 1550.18,685.686 1550.73,685.686 1551.29,685.686 1551.85,685.686 1552.41,685.686 1552.97,685.686 1553.53,685.686 1554.09,685.686 1554.65,685.686 1555.21,685.686 1555.77,685.686 1556.33,685.686 1556.89,685.686 1557.45,685.686 1558,685.686 1558.56,685.686 1559.12,685.686 1559.68,685.686 1560.24,685.686 1560.8,685.686 1561.36,685.686 1561.92,685.686 1562.48,685.686 1563.04,685.686 1563.6,685.686 1564.16,685.686 1564.72,685.686 1565.28,685.686 1565.83,685.686 1566.39,685.686 1566.95,685.686 1567.51,685.686 1568.07,685.686 1568.63,685.686 1569.19,685.686 1569.75,685.686 1570.31,685.686 1570.87,685.686 1571.43,685.686 1571.99,685.686 1572.55,685.686 1573.1,685.686 1573.66,685.686 1574.22,685.686 1574.78,685.686 1575.34,685.686 1575.9,685.686 1576.46,685.686 1577.02,685.686 1577.58,685.686 1578.14,685.686 1578.7,685.686 1579.26,685.686 1579.82,685.686 1580.37,685.686 1580.93,685.686 1581.49,685.686 1582.05,685.686 1582.61,685.686 1583.17,685.686 1583.73,685.686 1584.29,685.686 1584.85,685.686 1585.41,685.686 1585.97,685.686 1586.53,685.686 1587.09,685.686 1587.65,685.686 1588.2,685.686 1588.76,685.686 1589.32,685.686 1589.88,685.686 1590.44,685.686 1591,685.686 1591.56,685.686 1592.12,685.686 1592.68,685.686 1593.24,685.686 1593.8,685.686 1594.36,685.686 1594.92,685.686 1595.47,685.686 1596.03,685.686 1596.59,685.686 1597.15,685.686 1597.71,685.686 1598.27,685.686 1598.83,685.686 1599.39,685.686 1599.95,685.686 1600.51,685.686 1601.07,685.686 1601.63,685.686 1602.19,685.686 1602.74,685.686 1603.3,685.686 1603.86,685.686 1604.42,685.686 1604.98,685.686 1605.54,685.686 1606.1,685.686 1606.66,685.686 1607.22,685.686 1607.78,685.686 1608.34,685.686 1608.9,685.686 1609.46,685.686 1610.02,685.686 1610.57,685.686 1611.13,685.686 1611.69,685.686 1612.25,685.686 1612.81,685.686 1613.37,685.686 1613.93,685.686 1614.49,685.686 1615.05,685.686 1615.61,685.686 1616.17,685.686 1616.73,685.686 1617.29,685.686 1617.84,685.686 1618.4,685.686 1618.96,685.686 1619.52,685.686 1620.08,685.686 1620.64,685.686 1621.2,685.686 1621.76,685.686 1622.32,685.686 1622.88,685.686 1623.44,685.686 1624,685.686 1624.56,685.686 1625.11,685.686 1625.67,685.686 1626.23,685.686 1626.79,685.686 1627.35,685.686 1627.91,685.686 1628.47,685.686 1629.03,685.686 1629.59,685.686 1630.15,685.686 1630.71,685.686 1631.27,685.686 1631.83,685.686 1632.39,685.686 1632.94,685.686 1633.5,685.686 1634.06,685.686 1634.62,685.686 1635.18,685.686 1635.74,685.686 1636.3,685.686 1636.86,685.686 1637.42,685.686 1637.98,685.686 1638.54,685.686 1639.1,685.686 1639.66,685.686 1640.21,685.686 1640.77,685.686 1641.33,685.686 1641.89,685.686 1642.45,685.686 1643.01,685.686 1643.57,685.686 1644.13,685.686 1644.69,685.686 1645.25,685.686 1645.81,685.686 1646.37,685.686 1646.93,685.686 1647.48,685.686 1648.04,685.686 1648.6,685.686 1649.16,685.686 1649.72,685.686 1650.28,685.686 1650.84,685.686 1651.4,685.686 1651.96,685.686 1652.52,685.686 1653.08,685.686 1653.64,685.686 1654.2,685.686 1654.76,685.686 1655.31,685.686 1655.87,685.686 1656.43,685.686 1656.99,685.686 1657.55,685.686 1658.11,685.686 1658.67,685.686 1659.23,685.686 1659.79,685.686 1660.35,685.686 1660.91,685.686 1661.47,685.686 1662.03,685.686 1662.58,685.686 1663.14,685.686 1663.7,685.686 1664.26,685.686 1664.82,685.686 1665.38,685.686 1665.94,685.686 1666.5,685.686 1667.06,685.686 1667.62,685.686 1668.18,685.686 1668.74,685.686 1669.3,685.686 1669.85,685.686 1670.41,685.686 1670.97,685.686 1671.53,685.686 1672.09,685.686 1672.65,685.686 1673.21,685.686 1673.77,685.686 1674.33,685.686 1674.89,685.686 1675.45,685.686 1676.01,685.686 1676.57,685.686 1677.13,685.686 1677.68,685.686 1678.24,685.686 1678.8,685.686 1679.36,685.686 1679.92,685.686 1680.48,685.686 1681.04,685.686 1681.6,685.686 1682.16,685.686 1682.72,685.686 1683.28,685.686 1683.84,685.686 1684.4,685.686 1684.95,685.686 1685.51,685.686 1686.07,685.686 1686.63,685.686 1687.19,685.686 1687.75,685.686 1688.31,685.686 1688.87,685.686 1689.43,685.686 1689.99,685.686 1690.55,685.686 1691.11,685.686 1691.67,685.686 1692.23,685.686 1692.78,685.686 1693.34,685.686 1693.9,685.686 1694.46,685.686 1695.02,685.686 1695.58,685.686 1696.14,685.686 1696.7,685.686 1697.26,685.686 1697.82,685.686 1698.38,685.686 1698.94,685.686 1699.5,685.686 1700.05,685.686 1700.61,685.686 1701.17,685.686 1701.73,685.686 1702.29,685.686 1702.85,685.686 1703.41,685.686 1703.97,685.686 1704.53,685.686 1705.09,685.686 1705.65,685.686 1706.21,685.686 1706.77,685.686 1707.32,685.686 1707.88,685.686 1708.44,685.686 1709,685.686 1709.56,685.686 1710.12,685.686 1710.68,685.686 1711.24,685.686 1711.8,685.686 1712.36,685.686 1712.92,685.686 1713.48,685.686 1714.04,685.686 1714.6,685.686 1715.15,685.686 1715.71,685.686 1716.27,685.686 1716.83,685.686 1717.39,685.686 1717.95,685.686 1718.51,685.686 1719.07,685.686 1719.63,685.686 1720.19,685.686 1720.75,685.686 1721.31,685.686 1721.87,685.686 1722.42,685.686 1722.98,685.686 1723.54,685.686 1724.1,685.686 1724.66,685.686 1725.22,685.686 1725.78,685.686 1726.34,685.686 1726.9,685.686 1727.46,685.686 1728.02,685.686 1728.58,685.686 1729.14,685.686 1729.69,685.686 1730.25,685.686 1730.81,685.686 1731.37,685.686 1731.93,685.686 1732.49,685.686 1733.05,685.686 1733.61,685.686 1734.17,685.686 1734.73,685.686 1735.29,685.686 1735.85,685.686 1736.41,685.686 1736.97,685.686 1737.52,685.686 1738.08,685.686 1738.64,685.686 1739.2,685.686 1739.76,685.686 1740.32,685.686 1740.88,685.686 1741.44,685.686 1742,685.686 1742.56,685.686 1743.12,685.686 1743.68,685.686 1744.24,685.686 1744.79,685.686 1745.35,685.686 1745.91,685.686 1746.47,685.686 1747.03,685.686 1747.59,685.686 1748.15,685.686 1748.71,685.686 1749.27,685.686 1749.83,685.686 1750.39,685.686 1750.95,685.686 1751.51,685.686 1752.06,685.686 1752.62,685.686 1753.18,685.686 1753.74,685.686 1754.3,685.686 1754.86,685.686 1755.42,685.686 1755.98,685.686 1756.54,685.686 1757.1,685.686 1757.66,685.686 1758.22,685.686 1758.78,685.686 1759.34,685.686 1759.89,685.686 1760.45,685.686 1761.01,685.686 1761.57,685.686 1762.13,685.686 1762.69,685.686 1763.25,685.686 1763.81,685.686 1764.37,685.686 1764.93,685.686 1765.49,685.686 1766.05,685.686 1766.61,685.686 1767.16,685.686 1767.72,685.686 1768.28,685.686 1768.84,685.686 1769.4,685.686 1769.96,685.686 1770.52,685.686 1771.08,685.686 1771.64,685.686 1772.2,685.686 1772.76,685.686 1773.32,685.686 1773.88,685.686 1774.43,685.686 1774.99,685.686 1775.55,685.686 1776.11,685.686 1776.67,685.686 1777.23,685.686 1777.79,685.686 1778.35,685.686 1778.91,685.686 1779.47,685.686 1780.03,685.686 1780.59,685.686 1781.15,685.686 1781.71,685.686 1782.26,685.686 1782.82,685.686 1783.38,685.686 1783.94,685.686 1784.5,685.686 1785.06,685.686 1785.62,685.686 1786.18,685.686 1786.74,685.686 1787.3,685.686 1787.86,685.686 1788.42,685.686 1788.98,685.686 1789.53,685.686 1790.09,685.686 1790.65,685.686 1791.21,685.686 1791.77,685.686 1792.33,685.686 1792.89,685.686 1793.45,685.686 1794.01,685.686 1794.57,685.686 1795.13,685.686 1795.69,685.686 1796.25,685.686 1796.8,685.686 1797.36,685.686 1797.92,685.686 1798.48,685.686 1799.04,685.686 1799.6,685.686 1800.16,685.686 1800.72,685.686 1801.28,685.686 1801.84,685.686 1802.4,685.686 1802.96,685.686 1803.52,685.686 1804.08,685.686 1804.63,685.686 1805.19,685.686 1805.75,685.686 1806.31,685.686 1806.87,685.686 1807.43,685.686 1807.99,685.686 1808.55,685.686 1809.11,685.686 1809.67,685.686 1810.23,685.686 1810.79,685.686 1811.35,685.686 1811.9,685.686 1812.46,685.686 1813.02,685.686 1813.58,685.686 1814.14,685.686 1814.7,685.686 1815.26,685.686 1815.82,685.686 1816.38,685.686 1816.94,685.686 1817.5,685.686 1818.06,685.686 1818.62,685.686 1819.18,685.686 1819.73,685.686 1820.29,685.686 1820.85,685.686 1821.41,685.686 1821.97,685.686 1822.53,685.686 1823.09,685.686 1823.65,685.686 1824.21,685.686 1824.77,685.686 1825.33,685.686 1825.89,685.686 1826.45,685.686 1827,685.686 1827.56,685.686 1828.12,685.686 1828.68,685.686 1829.24,685.686 1829.8,685.686 1830.36,685.686 1830.92,685.686 1831.48,685.686 1832.04,685.686 1832.6,685.686 1833.16,685.686 1833.72,685.686 1834.27,685.686 1834.83,685.686 1835.39,685.686 1835.95,685.686 1836.51,685.686 1837.07,685.686 1837.63,685.686 1838.19,685.686 \"/>\n<path clip-path=\"url(#clip163)\" d=\"M720.247 684.168 L720.806 684.168 L721.365 684.168 L721.924 684.168 L722.484 684.168 L723.043 684.168 L723.602 684.168 L724.161 684.168 L724.721 684.168 L725.28 684.168 L725.839 684.168 L726.398 684.168 L726.958 684.168 L727.517 684.168 L728.076 684.168 L728.635 684.168 L729.195 684.168 L729.754 684.168 L730.313 684.168 L730.872 684.168 L731.432 684.168 L731.991 684.168 L732.55 684.168 L733.109 684.168 L733.669 684.168 L734.228 684.168 L734.787 684.168 L735.346 684.168 L735.906 684.168 L736.465 684.168 L737.024 684.168 L737.583 684.168 L738.143 684.168 L738.702 684.168 L739.261 684.168 L739.82 684.168 L740.38 684.168 L740.939 684.168 L741.498 684.168 L742.057 684.168 L742.617 684.168 L743.176 684.168 L743.735 684.168 L744.294 684.168 L744.854 684.168 L745.413 684.168 L745.972 684.168 L746.531 684.168 L747.091 684.168 L747.65 684.168 L748.209 684.168 L748.768 684.168 L749.328 684.168 L749.887 684.168 L750.446 684.168 L751.005 684.168 L751.565 684.168 L752.124 684.168 L752.683 684.168 L753.242 684.168 L753.802 684.168 L754.361 684.168 L754.92 684.168 L755.479 684.168 L756.039 684.168 L756.598 684.168 L757.157 684.168 L757.716 684.168 L758.276 684.168 L758.835 684.168 L759.394 684.168 L759.953 684.168 L760.513 684.168 L761.072 684.168 L761.631 684.168 L762.19 684.168 L762.75 684.168 L763.309 684.168 L763.868 684.168 L764.427 684.168 L764.987 684.168 L765.546 684.168 L766.105 684.168 L766.664 684.168 L767.224 684.168 L767.783 684.168 L768.342 684.168 L768.901 684.168 L769.461 684.168 L770.02 684.168 L770.579 684.168 L771.138 684.168 L771.698 684.168 L772.257 684.168 L772.816 684.168 L773.375 684.168 L773.935 684.168 L774.494 684.168 L775.053 684.168 L775.612 684.168 L776.172 684.168 L776.731 684.168 L777.29 684.168 L777.849 684.168 L778.409 684.168 L778.968 684.168 L779.527 684.168 L780.086 684.168 L780.646 684.168 L781.205 684.168 L781.764 684.168 L782.323 684.168 L782.883 684.168 L783.442 684.168 L784.001 684.168 L784.56 684.168 L785.12 684.168 L785.679 684.168 L786.238 684.168 L786.797 684.168 L787.357 684.168 L787.916 684.168 L788.475 684.168 L789.034 684.168 L789.594 684.168 L790.153 684.168 L790.712 684.168 L791.271 684.168 L791.831 684.168 L792.39 684.168 L792.949 684.168 L793.508 684.168 L794.068 684.168 L794.627 684.168 L795.186 684.168 L795.745 684.168 L796.305 684.168 L796.864 684.168 L797.423 684.168 L797.982 684.168 L798.542 684.168 L799.101 684.168 L799.66 684.168 L800.219 684.168 L800.779 684.168 L801.338 684.168 L801.897 684.168 L802.456 684.168 L803.016 684.168 L803.575 684.168 L804.134 684.168 L804.693 684.168 L805.253 684.168 L805.812 684.168 L806.371 684.168 L806.931 684.168 L807.49 684.168 L808.049 684.168 L808.608 684.168 L809.168 684.168 L809.727 684.168 L810.286 684.168 L810.845 684.168 L811.405 684.168 L811.964 684.168 L812.523 684.168 L813.082 684.168 L813.642 684.168 L814.201 684.168 L814.76 684.168 L815.319 684.168 L815.879 684.168 L816.438 684.168 L816.997 684.168 L817.556 684.168 L818.116 684.168 L818.675 684.168 L819.234 684.168 L819.793 684.168 L820.353 684.168 L820.912 684.168 L821.471 684.168 L822.03 684.168 L822.59 684.168 L823.149 684.168 L823.708 684.168 L824.267 684.168 L824.827 684.168 L825.386 684.168 L825.945 684.168 L826.504 684.168 L827.064 684.168 L827.623 684.168 L828.182 684.168 L828.741 684.168 L829.301 684.168 L829.86 684.168 L830.419 684.168 L830.978 684.168 L831.538 684.168 L832.097 684.168 L832.656 684.168 L833.215 684.168 L833.775 684.168 L834.334 684.168 L834.893 684.168 L835.452 684.168 L836.012 684.168 L836.571 684.168 L837.13 684.168 L837.689 684.168 L838.249 684.168 L838.808 684.168 L839.367 684.168 L839.926 684.168 L840.486 684.168 L841.045 684.168 L841.604 684.168 L842.163 684.168 L842.723 684.168 L843.282 684.168 L843.841 684.168 L844.4 684.168 L844.96 684.168 L845.519 684.168 L846.078 684.168 L846.637 684.168 L847.197 684.168 L847.756 684.168 L848.315 684.168 L848.874 684.168 L849.434 684.168 L849.993 684.168 L850.552 684.168 L851.111 684.168 L851.671 684.168 L852.23 684.168 L852.789 684.168 L853.348 684.168 L853.908 684.168 L854.467 684.168 L855.026 684.168 L855.585 684.168 L856.145 684.168 L856.704 684.168 L857.263 684.168 L857.822 684.168 L858.382 684.168 L858.941 684.168 L859.5 684.168 L860.059 684.168 L860.619 684.168 L861.178 684.168 L861.737 684.168 L862.296 684.168 L862.856 684.168 L863.415 684.168 L863.974 684.168 L864.533 684.168 L865.093 684.168 L865.652 684.168 L866.211 684.168 L866.77 684.168 L867.33 684.168 L867.889 684.168 L868.448 684.168 L869.007 684.168 L869.567 684.168 L870.126 684.168 L870.685 684.168 L871.244 684.168 L871.804 684.168 L872.363 684.168 L872.922 684.168 L873.481 684.168 L874.041 684.168 L874.6 684.168 L875.159 684.168 L875.718 684.168 L876.278 684.168 L876.837 684.168 L877.396 684.168 L877.955 684.168 L878.515 684.168 L879.074 684.168 L879.633 684.168 L880.192 684.168 L880.752 684.168 L881.311 684.168 L881.87 684.168 L882.429 684.168 L882.989 684.168 L883.548 684.168 L884.107 684.168 L884.666 684.168 L885.226 684.168 L885.785 684.168 L886.344 684.168 L886.903 684.168 L887.463 684.168 L888.022 684.168 L888.581 684.168 L889.14 684.168 L889.7 684.168 L890.259 684.168 L890.818 684.168 L891.377 684.168 L891.937 684.168 L892.496 684.168 L893.055 684.168 L893.614 684.168 L894.174 684.168 L894.733 684.168 L895.292 684.168 L895.851 684.168 L896.411 684.168 L896.97 684.168 L897.529 684.168 L898.088 684.168 L898.648 684.168 L899.207 684.168 L899.766 684.168 L900.325 684.168 L900.885 684.168 L901.444 684.168 L902.003 684.168 L902.562 684.168 L903.122 684.168 L903.681 684.168 L904.24 684.168 L904.799 684.168 L905.359 684.168 L905.918 684.168 L906.477 684.168 L907.036 684.168 L907.596 684.168 L908.155 684.168 L908.714 684.168 L909.273 684.168 L909.833 684.168 L910.392 684.168 L910.951 684.168 L911.51 684.168 L912.07 684.168 L912.629 684.168 L913.188 684.168 L913.747 684.168 L914.307 684.168 L914.866 684.168 L915.425 684.168 L915.984 684.168 L916.544 684.168 L917.103 684.168 L917.662 684.168 L918.221 684.168 L918.781 684.168 L919.34 684.168 L919.899 684.168 L920.458 684.168 L921.018 684.168 L921.577 684.168 L922.136 684.168 L922.695 684.168 L923.255 684.168 L923.814 684.168 L924.373 684.168 L924.932 684.168 L925.492 684.168 L926.051 684.168 L926.61 684.168 L927.169 684.168 L927.729 684.168 L928.288 684.168 L928.847 684.168 L929.406 684.168 L929.966 684.168 L930.525 684.168 L931.084 684.168 L931.644 684.168 L932.203 684.168 L932.762 684.168 L933.321 684.168 L933.881 684.168 L934.44 684.168 L934.999 684.168 L935.558 684.168 L936.118 684.168 L936.677 684.168 L937.236 684.168 L937.795 684.168 L938.355 684.168 L938.914 684.168 L939.473 684.168 L940.032 684.168 L940.592 684.168 L941.151 684.168 L941.71 684.168 L942.269 684.168 L942.829 684.168 L943.388 684.168 L943.947 684.168 L944.506 684.168 L945.066 684.168 L945.625 684.168 L946.184 684.168 L946.743 684.168 L947.303 684.168 L947.862 684.168 L948.421 684.168 L948.98 684.168 L949.54 684.168 L950.099 684.168 L950.658 684.168 L951.217 684.168 L951.777 684.168 L952.336 684.168 L952.895 684.168 L953.454 684.168 L954.014 684.168 L954.573 684.168 L955.132 684.168 L955.691 684.168 L956.251 684.168 L956.81 684.168 L957.369 684.168 L957.928 684.168 L958.488 684.168 L959.047 684.168 L959.606 684.168 L960.165 684.168 L960.725 684.168 L961.284 684.168 L961.843 684.168 L962.402 684.168 L962.962 684.168 L963.521 684.168 L964.08 684.168 L964.639 684.168 L965.199 684.168 L965.758 684.168 L966.317 684.168 L966.876 684.168 L967.436 684.168 L967.995 684.168 L968.554 684.168 L969.113 684.168 L969.673 684.168 L970.232 684.168 L970.791 684.168 L971.35 684.168 L971.91 684.168 L972.469 684.168 L973.028 684.168 L973.587 684.168 L974.147 684.168 L974.706 684.168 L975.265 684.168 L975.824 684.168 L976.384 684.168 L976.943 684.168 L977.502 684.168 L978.061 684.168 L978.621 684.168 L979.18 684.168 L979.739 684.168 L980.298 684.168 L980.858 684.168 L981.417 684.168 L981.976 684.168 L982.535 684.168 L983.095 684.168 L983.654 684.168 L984.213 684.168 L984.772 684.168 L985.332 684.168 L985.891 684.168 L986.45 684.168 L987.009 684.168 L987.569 684.168 L988.128 684.168 L988.687 684.168 L989.246 684.168 L989.806 684.168 L990.365 684.168 L990.924 684.168 L991.483 684.168 L992.043 684.168 L992.602 684.168 L993.161 684.168 L993.72 684.168 L994.28 684.168 L994.839 684.168 L995.398 684.168 L995.957 684.168 L996.517 684.168 L997.076 684.168 L997.635 684.168 L998.194 684.168 L998.754 684.168 L999.313 684.168 L999.872 684.168 L1000.43 684.168 L1000.99 684.168 L1001.55 684.168 L1002.11 684.168 L1002.67 684.168 L1003.23 684.168 L1003.79 684.168 L1004.35 684.168 L1004.91 684.168 L1005.46 684.168 L1006.02 684.168 L1006.58 684.168 L1007.14 684.168 L1007.7 684.168 L1008.26 684.168 L1008.82 684.168 L1009.38 684.168 L1009.94 684.168 L1010.5 684.168 L1011.06 684.168 L1011.62 684.168 L1012.18 684.168 L1012.73 684.168 L1013.29 684.168 L1013.85 684.168 L1014.41 684.168 L1014.97 684.168 L1015.53 684.168 L1016.09 684.168 L1016.65 684.168 L1017.21 684.168 L1017.77 684.168 L1018.33 684.168 L1018.89 684.168 L1019.45 684.168 L1020.01 684.168 L1020.56 684.168 L1021.12 684.168 L1021.68 684.168 L1022.24 684.168 L1022.8 684.168 L1023.36 684.168 L1023.92 684.168 L1024.48 684.168 L1025.04 684.168 L1025.6 684.168 L1026.16 684.168 L1026.72 684.168 L1027.28 684.168 L1027.83 684.168 L1028.39 684.168 L1028.95 684.168 L1029.51 684.168 L1030.07 684.168 L1030.63 684.168 L1031.19 684.168 L1031.75 684.168 L1032.31 684.168 L1032.87 684.168 L1033.43 684.168 L1033.99 684.168 L1034.55 684.168 L1035.1 684.168 L1035.66 684.168 L1036.22 684.168 L1036.78 684.168 L1037.34 684.168 L1037.9 684.168 L1038.46 684.168 L1039.02 684.168 L1039.58 684.168 L1040.14 684.168 L1040.7 684.168 L1041.26 684.168 L1041.82 684.168 L1042.38 684.168 L1042.93 684.168 L1043.49 684.168 L1044.05 684.168 L1044.61 684.168 L1045.17 684.168 L1045.73 684.168 L1046.29 684.168 L1046.85 684.168 L1047.41 684.168 L1047.97 684.168 L1048.53 684.168 L1049.09 684.168 L1049.65 684.168 L1050.2 684.168 L1050.76 684.168 L1051.32 684.168 L1051.88 684.168 L1052.44 684.168 L1053 684.168 L1053.56 684.168 L1054.12 684.168 L1054.68 684.168 L1055.24 684.168 L1055.8 684.168 L1056.36 684.168 L1056.92 684.168 L1057.48 684.168 L1058.03 684.168 L1058.59 684.168 L1059.15 684.168 L1059.71 684.168 L1060.27 684.168 L1060.83 684.168 L1061.39 684.168 L1061.95 684.168 L1062.51 684.168 L1063.07 684.168 L1063.63 684.168 L1064.19 684.168 L1064.75 684.168 L1065.3 684.168 L1065.86 684.168 L1066.42 684.168 L1066.98 684.168 L1067.54 684.168 L1068.1 684.168 L1068.66 684.168 L1069.22 684.168 L1069.78 684.168 L1070.34 684.168 L1070.9 684.168 L1071.46 684.168 L1072.02 684.168 L1072.57 684.168 L1073.13 684.168 L1073.69 684.168 L1074.25 684.168 L1074.81 684.168 L1075.37 684.168 L1075.93 684.168 L1076.49 684.168 L1077.05 684.168 L1077.61 684.168 L1078.17 684.168 L1078.73 684.168 L1079.29 684.168 L1079.85 684.168 L1080.4 684.168 L1080.96 684.168 L1081.52 684.168 L1082.08 684.168 L1082.64 684.168 L1083.2 684.168 L1083.76 684.168 L1084.32 684.168 L1084.88 684.168 L1085.44 684.168 L1086 684.168 L1086.56 684.168 L1087.12 684.168 L1087.67 684.168 L1088.23 684.168 L1088.79 684.168 L1089.35 684.168 L1089.91 684.168 L1090.47 684.168 L1091.03 684.168 L1091.59 684.168 L1092.15 684.168 L1092.71 684.168 L1093.27 684.168 L1093.83 684.168 L1094.39 684.168 L1094.94 684.168 L1095.5 684.168 L1096.06 684.168 L1096.62 684.168 L1097.18 684.168 L1097.74 684.168 L1098.3 684.168 L1098.86 684.168 L1099.42 684.168 L1099.98 684.168 L1100.54 684.168 L1101.1 684.168 L1101.66 684.168 L1102.22 684.168 L1102.77 684.168 L1103.33 684.168 L1103.89 684.168 L1104.45 684.168 L1105.01 684.168 L1105.57 684.168 L1106.13 684.168 L1106.69 684.168 L1107.25 684.168 L1107.81 684.168 L1108.37 684.168 L1108.93 684.168 L1109.49 684.168 L1110.04 684.168 L1110.6 684.168 L1111.16 684.168 L1111.72 684.168 L1112.28 684.168 L1112.84 684.168 L1113.4 684.168 L1113.96 684.168 L1114.52 684.168 L1115.08 684.168 L1115.64 684.168 L1116.2 684.168 L1116.76 684.168 L1117.31 684.168 L1117.87 684.168 L1118.43 684.168 L1118.99 684.168 L1119.55 684.168 L1120.11 684.168 L1120.67 684.168 L1121.23 684.168 L1121.79 684.168 L1122.35 684.168 L1122.91 684.168 L1123.47 684.168 L1124.03 684.168 L1124.59 684.168 L1125.14 684.168 L1125.7 684.168 L1126.26 684.168 L1126.82 684.168 L1127.38 684.168 L1127.94 684.168 L1128.5 684.168 L1129.06 684.168 L1129.62 684.168 L1130.18 684.168 L1130.74 684.168 L1131.3 684.168 L1131.86 684.168 L1132.41 684.168 L1132.97 684.168 L1133.53 684.168 L1134.09 684.168 L1134.65 684.168 L1135.21 684.168 L1135.77 684.168 L1136.33 684.168 L1136.89 684.168 L1137.45 684.168 L1138.01 684.168 L1138.57 684.168 L1139.13 684.168 L1139.68 684.168 L1140.24 684.168 L1140.8 684.168 L1141.36 684.168 L1141.92 684.168 L1142.48 684.168 L1143.04 684.168 L1143.6 684.168 L1144.16 684.168 L1144.72 684.168 L1145.28 684.168 L1145.84 684.168 L1146.4 684.168 L1146.96 684.168 L1147.51 684.168 L1148.07 684.168 L1148.63 684.168 L1149.19 684.168 L1149.75 684.168 L1150.31 684.168 L1150.87 684.168 L1151.43 684.168 L1151.99 684.168 L1152.55 684.168 L1153.11 684.168 L1153.67 684.168 L1154.23 684.168 L1154.78 684.168 L1155.34 684.168 L1155.9 684.168 L1156.46 684.168 L1157.02 684.168 L1157.58 684.168 L1158.14 684.168 L1158.7 684.168 L1159.26 684.168 L1159.82 684.168 L1160.38 684.168 L1160.94 684.168 L1161.5 684.168 L1162.05 684.168 L1162.61 684.168 L1163.17 684.168 L1163.73 684.168 L1164.29 684.168 L1164.85 684.168 L1165.41 684.168 L1165.97 684.168 L1166.53 684.168 L1167.09 684.168 L1167.65 684.168 L1168.21 684.168 L1168.77 684.168 L1169.33 684.168 L1169.88 684.168 L1170.44 684.168 L1171 684.168 L1171.56 684.168 L1172.12 684.168 L1172.68 684.168 L1173.24 684.168 L1173.8 684.168 L1174.36 684.168 L1174.92 684.168 L1175.48 684.168 L1176.04 684.168 L1176.6 684.168 L1177.15 684.168 L1177.71 684.168 L1178.27 684.168 L1178.83 684.168 L1179.39 684.168 L1179.95 684.168 L1180.51 684.168 L1181.07 684.168 L1181.63 684.168 L1182.19 684.168 L1182.75 684.168 L1183.31 684.168 L1183.87 684.168 L1184.43 684.168 L1184.98 684.168 L1185.54 684.168 L1186.1 684.168 L1186.66 684.168 L1187.22 684.168 L1187.78 684.168 L1188.34 684.168 L1188.9 684.168 L1189.46 684.168 L1190.02 684.168 L1190.58 684.168 L1191.14 684.168 L1191.7 684.168 L1192.25 684.168 L1192.81 684.168 L1193.37 684.168 L1193.93 684.168 L1194.49 684.168 L1195.05 684.168 L1195.61 684.168 L1196.17 684.168 L1196.73 684.168 L1197.29 684.168 L1197.85 684.168 L1198.41 684.168 L1198.97 684.168 L1199.52 684.168 L1200.08 684.168 L1200.64 684.168 L1201.2 684.168 L1201.76 684.168 L1202.32 684.168 L1202.88 684.168 L1203.44 684.168 L1204 684.168 L1204.56 684.168 L1205.12 684.168 L1205.68 684.168 L1206.24 684.168 L1206.8 684.168 L1207.35 684.168 L1207.91 684.168 L1208.47 684.168 L1209.03 684.168 L1209.59 684.168 L1210.15 684.168 L1210.71 684.168 L1211.27 684.168 L1211.83 684.168 L1212.39 684.168 L1212.95 684.168 L1213.51 684.168 L1214.07 684.168 L1214.62 684.168 L1215.18 684.168 L1215.74 684.168 L1216.3 684.168 L1216.86 684.168 L1217.42 684.168 L1217.98 684.168 L1218.54 684.168 L1219.1 684.168 L1219.66 684.168 L1220.22 684.168 L1220.78 684.168 L1221.34 684.168 L1221.89 684.168 L1222.45 684.168 L1223.01 684.168 L1223.57 684.168 L1224.13 684.168 L1224.69 684.168 L1225.25 684.168 L1225.81 684.168 L1226.37 684.168 L1226.93 684.168 L1227.49 684.168 L1228.05 684.168 L1228.61 684.168 L1229.17 684.168 L1229.72 684.168 L1230.28 684.168 L1230.84 684.168 L1231.4 684.168 L1231.96 684.168 L1232.52 684.168 L1233.08 684.168 L1233.64 684.168 L1234.2 684.168 L1234.76 684.168 L1235.32 684.168 L1235.88 684.168 L1236.44 684.168 L1236.99 684.168 L1237.55 684.168 L1238.11 684.168 L1238.67 684.168 L1239.23 684.168 L1239.79 684.168 L1240.35 684.168 L1240.91 684.168 L1241.47 684.168 L1242.03 684.168 L1242.59 684.168 L1243.15 684.168 L1243.71 684.168 L1244.26 684.168 L1244.82 684.168 L1245.38 684.168 L1245.94 684.168 L1246.5 684.168 L1247.06 684.168 L1247.62 684.168 L1248.18 684.168 L1248.74 684.168 L1249.3 684.168 L1249.86 684.168 L1250.42 684.168 L1250.98 684.168 L1251.54 684.168 L1252.09 684.168 L1252.65 684.168 L1253.21 684.168 L1253.77 684.168 L1254.33 684.168 L1254.89 684.168 L1255.45 684.168 L1256.01 684.168 L1256.57 684.168 L1257.13 684.168 L1257.69 684.168 L1258.25 684.168 L1258.81 684.168 L1259.36 684.168 L1259.92 684.168 L1260.48 684.168 L1261.04 684.168 L1261.6 684.168 L1262.16 684.168 L1262.72 684.168 L1263.28 684.168 L1263.84 684.168 L1264.4 684.168 L1264.96 684.168 L1265.52 684.168 L1266.08 684.168 L1266.63 684.168 L1267.19 684.168 L1267.75 684.168 L1268.31 684.168 L1268.87 684.168 L1269.43 684.168 L1269.99 684.168 L1270.55 684.168 L1271.11 684.168 L1271.67 684.168 L1272.23 684.168 L1272.79 684.168 L1273.35 684.168 L1273.91 684.168 L1274.46 684.168 L1275.02 684.168 L1275.58 684.168 L1276.14 684.168 L1276.7 684.168 L1277.26 684.168 L1277.82 684.168 L1278.38 684.168 L1278.94 684.168 L1279.5 684.168 L1280.06 684.168 L1280.62 684.168 L1281.18 684.168 L1281.73 684.168 L1282.29 684.168 L1282.85 684.168 L1283.41 684.168 L1283.97 684.168 L1284.53 684.168 L1285.09 684.168 L1285.65 684.168 L1286.21 684.168 L1286.77 684.168 L1287.33 684.168 L1287.89 684.168 L1288.45 684.168 L1289 684.168 L1289.56 684.168 L1290.12 684.168 L1290.68 684.168 L1291.24 684.168 L1291.8 684.168 L1292.36 684.168 L1292.92 684.168 L1293.48 684.168 L1294.04 684.168 L1294.6 684.168 L1295.16 684.168 L1295.72 684.168 L1296.28 684.168 L1296.83 684.168 L1297.39 684.168 L1297.95 684.168 L1298.51 684.168 L1299.07 684.168 L1299.63 684.168 L1300.19 684.168 L1300.75 684.168 L1301.31 684.168 L1301.87 684.168 L1302.43 684.168 L1302.99 684.168 L1303.55 684.168 L1304.1 684.168 L1304.66 684.168 L1305.22 684.168 L1305.78 684.168 L1306.34 684.168 L1306.9 684.168 L1307.46 684.168 L1308.02 684.168 L1308.58 684.168 L1309.14 684.168 L1309.7 684.168 L1310.26 684.168 L1310.82 684.168 L1311.38 684.168 L1311.93 684.168 L1312.49 684.168 L1313.05 684.168 L1313.61 684.168 L1314.17 684.168 L1314.73 684.168 L1315.29 684.168 L1315.85 684.168 L1316.41 684.168 L1316.97 684.168 L1317.53 684.168 L1318.09 684.168 L1318.65 684.168 L1319.2 684.168 L1319.76 684.168 L1320.32 684.168 L1320.88 684.168 L1321.44 684.168 L1322 684.168 L1322.56 684.168 L1323.12 684.168 L1323.68 684.168 L1324.24 684.168 L1324.8 684.168 L1325.36 684.168 L1325.92 684.168 L1326.47 684.168 L1327.03 684.168 L1327.59 684.168 L1328.15 684.168 L1328.71 684.168 L1329.27 684.168 L1329.83 684.168 L1330.39 684.168 L1330.95 684.168 L1331.51 684.168 L1332.07 684.168 L1332.63 684.168 L1333.19 684.168 L1333.75 684.168 L1334.3 684.168 L1334.86 684.168 L1335.42 684.168 L1335.98 684.168 L1336.54 684.168 L1337.1 684.168 L1337.66 684.168 L1338.22 684.168 L1338.78 684.168 L1339.34 684.168 L1339.9 684.168 L1340.46 684.168 L1341.02 684.168 L1341.57 684.168 L1342.13 684.168 L1342.69 684.168 L1343.25 684.168 L1343.81 684.168 L1344.37 684.168 L1344.93 684.168 L1345.49 684.168 L1346.05 684.168 L1346.61 684.168 L1347.17 684.168 L1347.73 684.168 L1348.29 684.168 L1348.84 684.168 L1349.4 684.168 L1349.96 684.168 L1350.52 684.168 L1351.08 684.168 L1351.64 684.168 L1352.2 684.168 L1352.76 684.168 L1353.32 684.168 L1353.88 684.168 L1354.44 684.168 L1355 684.168 L1355.56 684.168 L1356.12 684.168 L1356.67 684.168 L1357.23 684.168 L1357.79 684.168 L1358.35 684.168 L1358.91 684.168 L1359.47 684.168 L1360.03 684.168 L1360.59 684.168 L1361.15 684.168 L1361.71 684.168 L1362.27 684.168 L1362.83 684.168 L1363.39 684.168 L1363.94 684.168 L1364.5 684.168 L1365.06 684.168 L1365.62 684.168 L1366.18 684.168 L1366.74 684.168 L1367.3 684.168 L1367.86 684.168 L1368.42 684.168 L1368.98 684.168 L1369.54 684.168 L1370.1 684.168 L1370.66 684.168 L1371.21 684.168 L1371.77 684.168 L1372.33 684.168 L1372.89 684.168 L1373.45 684.168 L1374.01 684.168 L1374.57 684.168 L1375.13 684.168 L1375.69 684.168 L1376.25 684.168 L1376.81 684.168 L1377.37 684.168 L1377.93 684.168 L1378.49 684.168 L1379.04 684.168 L1379.6 684.168 L1380.16 684.168 L1380.72 684.168 L1381.28 684.168 L1381.84 684.168 L1382.4 684.168 L1382.96 684.168 L1383.52 684.168 L1384.08 684.168 L1384.64 684.168 L1385.2 684.168 L1385.76 684.168 L1386.31 684.168 L1386.87 684.168 L1387.43 684.168 L1387.99 684.168 L1388.55 684.168 L1389.11 684.168 L1389.67 684.168 L1390.23 684.168 L1390.79 684.168 L1391.35 684.168 L1391.91 684.168 L1392.47 684.168 L1393.03 684.168 L1393.58 684.168 L1394.14 684.168 L1394.7 684.168 L1395.26 684.168 L1395.82 684.168 L1396.38 684.168 L1396.94 684.168 L1397.5 684.168 L1398.06 684.168 L1398.62 684.168 L1399.18 684.168 L1399.74 684.168 L1400.3 684.168 L1400.86 684.168 L1401.41 684.168 L1401.97 684.168 L1402.53 684.168 L1403.09 684.168 L1403.65 684.168 L1404.21 684.168 L1404.77 684.168 L1405.33 684.168 L1405.89 684.168 L1406.45 684.168 L1407.01 684.168 L1407.57 684.168 L1408.13 684.168 L1408.68 684.168 L1409.24 684.168 L1409.8 684.168 L1410.36 684.168 L1410.92 684.168 L1411.48 684.168 L1412.04 684.168 L1412.6 684.168 L1413.16 684.168 L1413.72 684.168 L1414.28 684.168 L1414.84 684.168 L1415.4 684.168 L1415.95 684.168 L1416.51 684.168 L1417.07 684.168 L1417.63 684.168 L1418.19 684.168 L1418.75 684.168 L1419.31 684.168 L1419.87 684.168 L1420.43 684.168 L1420.99 684.168 L1421.55 684.168 L1422.11 684.168 L1422.67 684.168 L1423.23 684.168 L1423.78 684.168 L1424.34 684.168 L1424.9 684.168 L1425.46 684.168 L1426.02 684.168 L1426.58 684.168 L1427.14 684.168 L1427.7 684.168 L1428.26 684.168 L1428.82 684.168 L1429.38 684.168 L1429.94 684.168 L1430.5 684.168 L1431.05 684.168 L1431.61 684.168 L1432.17 684.168 L1432.73 684.168 L1433.29 684.168 L1433.85 684.168 L1434.41 684.168 L1434.97 684.168 L1435.53 684.168 L1436.09 684.168 L1436.65 684.168 L1437.21 684.168 L1437.77 684.168 L1438.33 684.168 L1438.88 684.168 L1439.44 684.168 L1440 684.168 L1440.56 684.168 L1441.12 684.168 L1441.68 684.168 L1442.24 684.168 L1442.8 684.168 L1443.36 684.168 L1443.92 684.168 L1444.48 684.168 L1445.04 684.168 L1445.6 684.168 L1446.15 684.168 L1446.71 684.168 L1447.27 684.168 L1447.83 684.168 L1448.39 684.168 L1448.95 684.168 L1449.51 684.168 L1450.07 684.168 L1450.63 684.168 L1451.19 684.168 L1451.75 684.168 L1452.31 684.168 L1452.87 684.168 L1453.42 684.168 L1453.98 684.168 L1454.54 684.168 L1455.1 684.168 L1455.66 684.168 L1456.22 684.168 L1456.78 684.168 L1457.34 684.168 L1457.9 684.168 L1458.46 684.168 L1459.02 684.168 L1459.58 684.168 L1460.14 684.168 L1460.7 684.168 L1461.25 684.168 L1461.81 684.168 L1462.37 684.168 L1462.93 684.168 L1463.49 684.168 L1464.05 684.168 L1464.61 684.168 L1465.17 684.168 L1465.73 684.168 L1466.29 684.168 L1466.85 684.168 L1467.41 684.168 L1467.97 684.168 L1468.52 684.168 L1469.08 684.168 L1469.64 684.168 L1470.2 684.168 L1470.76 684.168 L1471.32 684.168 L1471.88 684.168 L1472.44 684.168 L1473 684.168 L1473.56 684.168 L1474.12 684.168 L1474.68 684.168 L1475.24 684.168 L1475.79 684.168 L1476.35 684.168 L1476.91 684.168 L1477.47 684.168 L1478.03 684.168 L1478.59 684.168 L1479.15 684.168 L1479.71 684.168 L1480.27 684.168 L1480.83 684.168 L1481.39 684.168 L1481.95 684.168 L1482.51 684.168 L1483.07 684.168 L1483.62 684.168 L1484.18 684.168 L1484.74 684.168 L1485.3 684.168 L1485.86 684.168 L1486.42 684.168 L1486.98 684.168 L1487.54 684.168 L1488.1 684.168 L1488.66 684.168 L1489.22 684.168 L1489.78 684.168 L1490.34 684.168 L1490.89 684.168 L1491.45 684.168 L1492.01 684.168 L1492.57 684.168 L1493.13 684.168 L1493.69 684.168 L1494.25 684.168 L1494.81 684.168 L1495.37 684.168 L1495.93 684.168 L1496.49 684.168 L1497.05 684.168 L1497.61 684.168 L1498.16 684.168 L1498.72 684.168 L1499.28 684.168 L1499.84 684.168 L1500.4 684.168 L1500.96 684.168 L1501.52 684.168 L1502.08 684.168 L1502.64 684.168 L1503.2 684.168 L1503.76 684.168 L1504.32 684.168 L1504.88 684.168 L1505.44 684.168 L1505.99 684.168 L1506.55 684.168 L1507.11 684.168 L1507.67 684.168 L1508.23 684.168 L1508.79 684.168 L1509.35 684.168 L1509.91 684.168 L1510.47 684.168 L1511.03 684.168 L1511.59 684.168 L1512.15 684.168 L1512.71 684.168 L1513.26 684.168 L1513.82 684.168 L1514.38 684.168 L1514.94 684.168 L1515.5 684.168 L1516.06 684.168 L1516.62 684.168 L1517.18 684.168 L1517.74 684.168 L1518.3 684.168 L1518.86 684.168 L1519.42 684.168 L1519.98 684.168 L1520.53 684.168 L1521.09 684.168 L1521.65 684.168 L1522.21 684.168 L1522.77 684.168 L1523.33 684.168 L1523.89 684.168 L1524.45 684.168 L1525.01 684.168 L1525.57 684.168 L1526.13 684.168 L1526.69 684.168 L1527.25 684.168 L1527.81 684.168 L1528.36 684.168 L1528.92 684.168 L1529.48 684.168 L1530.04 684.168 L1530.6 684.168 L1531.16 684.168 L1531.72 684.168 L1532.28 684.168 L1532.84 684.168 L1533.4 684.168 L1533.96 684.168 L1534.52 684.168 L1535.08 684.168 L1535.63 684.168 L1536.19 684.168 L1536.75 684.168 L1537.31 684.168 L1537.87 684.168 L1538.43 684.168 L1538.99 684.168 L1539.55 684.168 L1540.11 684.168 L1540.67 684.168 L1541.23 684.168 L1541.79 684.168 L1542.35 684.168 L1542.9 684.168 L1543.46 684.168 L1544.02 684.168 L1544.58 684.168 L1545.14 684.168 L1545.7 684.168 L1546.26 684.168 L1546.82 684.168 L1547.38 684.168 L1547.94 684.168 L1548.5 684.168 L1549.06 684.168 L1549.62 684.168 L1550.18 684.168 L1550.73 684.168 L1551.29 684.168 L1551.85 684.168 L1552.41 684.168 L1552.97 684.168 L1553.53 684.168 L1554.09 684.168 L1554.65 684.168 L1555.21 684.168 L1555.77 684.168 L1556.33 684.168 L1556.89 684.168 L1557.45 684.168 L1558 684.168 L1558.56 684.168 L1559.12 684.168 L1559.68 684.168 L1560.24 684.168 L1560.8 684.168 L1561.36 684.168 L1561.92 684.168 L1562.48 684.168 L1563.04 684.168 L1563.6 684.168 L1564.16 684.168 L1564.72 684.168 L1565.28 684.168 L1565.83 684.168 L1566.39 684.168 L1566.95 684.168 L1567.51 684.168 L1568.07 684.168 L1568.63 684.168 L1569.19 684.168 L1569.75 684.168 L1570.31 684.168 L1570.87 684.168 L1571.43 684.168 L1571.99 684.168 L1572.55 684.168 L1573.1 684.168 L1573.66 684.168 L1574.22 684.168 L1574.78 684.168 L1575.34 684.168 L1575.9 684.168 L1576.46 684.168 L1577.02 684.168 L1577.58 684.168 L1578.14 684.168 L1578.7 684.168 L1579.26 684.168 L1579.82 684.168 L1580.37 684.168 L1580.93 684.168 L1581.49 684.168 L1582.05 684.168 L1582.61 684.168 L1583.17 684.168 L1583.73 684.168 L1584.29 684.168 L1584.85 684.168 L1585.41 684.168 L1585.97 684.168 L1586.53 684.168 L1587.09 684.168 L1587.65 684.168 L1588.2 684.168 L1588.76 684.168 L1589.32 684.168 L1589.88 684.168 L1590.44 684.168 L1591 684.168 L1591.56 684.168 L1592.12 684.168 L1592.68 684.168 L1593.24 684.168 L1593.8 684.168 L1594.36 684.168 L1594.92 684.168 L1595.47 684.168 L1596.03 684.168 L1596.59 684.168 L1597.15 684.168 L1597.71 684.168 L1598.27 684.168 L1598.83 684.168 L1599.39 684.168 L1599.95 684.168 L1600.51 684.168 L1601.07 684.168 L1601.63 684.168 L1602.19 684.168 L1602.74 684.168 L1603.3 684.168 L1603.86 684.168 L1604.42 684.168 L1604.98 684.168 L1605.54 684.168 L1606.1 684.168 L1606.66 684.168 L1607.22 684.168 L1607.78 684.168 L1608.34 684.168 L1608.9 684.168 L1609.46 684.168 L1610.02 684.168 L1610.57 684.168 L1611.13 684.168 L1611.69 684.168 L1612.25 684.168 L1612.81 684.168 L1613.37 684.168 L1613.93 684.168 L1614.49 684.168 L1615.05 684.168 L1615.61 684.168 L1616.17 684.168 L1616.73 684.168 L1617.29 684.168 L1617.84 684.168 L1618.4 684.168 L1618.96 684.168 L1619.52 684.168 L1620.08 684.168 L1620.64 684.168 L1621.2 684.168 L1621.76 684.168 L1622.32 684.168 L1622.88 684.168 L1623.44 684.168 L1624 684.168 L1624.56 684.168 L1625.11 684.168 L1625.67 684.168 L1626.23 684.168 L1626.79 684.168 L1627.35 684.168 L1627.91 684.168 L1628.47 684.168 L1629.03 684.168 L1629.59 684.168 L1630.15 684.168 L1630.71 684.168 L1631.27 684.168 L1631.83 684.168 L1632.39 684.168 L1632.94 684.168 L1633.5 684.168 L1634.06 684.168 L1634.62 684.168 L1635.18 684.168 L1635.74 684.168 L1636.3 684.168 L1636.86 684.168 L1637.42 684.168 L1637.98 684.168 L1638.54 684.168 L1639.1 684.168 L1639.66 684.168 L1640.21 684.168 L1640.77 684.168 L1641.33 684.168 L1641.89 684.168 L1642.45 684.168 L1643.01 684.168 L1643.57 684.168 L1644.13 684.168 L1644.69 684.168 L1645.25 684.168 L1645.81 684.168 L1646.37 684.168 L1646.93 684.168 L1647.48 684.168 L1648.04 684.168 L1648.6 684.168 L1649.16 684.168 L1649.72 684.168 L1650.28 684.168 L1650.84 684.168 L1651.4 684.168 L1651.96 684.168 L1652.52 684.168 L1653.08 684.168 L1653.64 684.168 L1654.2 684.168 L1654.76 684.168 L1655.31 684.168 L1655.87 684.168 L1656.43 684.168 L1656.99 684.168 L1657.55 684.168 L1658.11 684.168 L1658.67 684.168 L1659.23 684.168 L1659.79 684.168 L1660.35 684.168 L1660.91 684.168 L1661.47 684.168 L1662.03 684.168 L1662.58 684.168 L1663.14 684.168 L1663.7 684.168 L1664.26 684.168 L1664.82 684.168 L1665.38 684.168 L1665.94 684.168 L1666.5 684.168 L1667.06 684.168 L1667.62 684.168 L1668.18 684.168 L1668.74 684.168 L1669.3 684.168 L1669.85 684.168 L1670.41 684.168 L1670.97 684.168 L1671.53 684.168 L1672.09 684.168 L1672.65 684.168 L1673.21 684.168 L1673.77 684.168 L1674.33 684.168 L1674.89 684.168 L1675.45 684.168 L1676.01 684.168 L1676.57 684.168 L1677.13 684.168 L1677.68 684.168 L1678.24 684.168 L1678.8 684.168 L1679.36 684.168 L1679.92 684.168 L1680.48 684.168 L1681.04 684.168 L1681.6 684.168 L1682.16 684.168 L1682.72 684.168 L1683.28 684.168 L1683.84 684.168 L1684.4 684.168 L1684.95 684.168 L1685.51 684.168 L1686.07 684.168 L1686.63 684.168 L1687.19 684.168 L1687.75 684.168 L1688.31 684.168 L1688.87 684.168 L1689.43 684.168 L1689.99 684.168 L1690.55 684.168 L1691.11 684.168 L1691.67 684.168 L1692.23 684.168 L1692.78 684.168 L1693.34 684.168 L1693.9 684.168 L1694.46 684.168 L1695.02 684.168 L1695.58 684.168 L1696.14 684.168 L1696.7 684.168 L1697.26 684.168 L1697.82 684.168 L1698.38 684.168 L1698.94 684.168 L1699.5 684.168 L1700.05 684.168 L1700.61 684.168 L1701.17 684.168 L1701.73 684.168 L1702.29 684.168 L1702.85 684.168 L1703.41 684.168 L1703.97 684.168 L1704.53 684.168 L1705.09 684.168 L1705.65 684.168 L1706.21 684.168 L1706.77 684.168 L1707.32 684.168 L1707.88 684.168 L1708.44 684.168 L1709 684.168 L1709.56 684.168 L1710.12 684.168 L1710.68 684.168 L1711.24 684.168 L1711.8 684.168 L1712.36 684.168 L1712.92 684.168 L1713.48 684.168 L1714.04 684.168 L1714.6 684.168 L1715.15 684.168 L1715.71 684.168 L1716.27 684.168 L1716.83 684.168 L1717.39 684.168 L1717.95 684.168 L1718.51 684.168 L1719.07 684.168 L1719.63 684.168 L1720.19 684.168 L1720.75 684.168 L1721.31 684.168 L1721.87 684.168 L1722.42 684.168 L1722.98 684.168 L1723.54 684.168 L1724.1 684.168 L1724.66 684.168 L1725.22 684.168 L1725.78 684.168 L1726.34 684.168 L1726.9 684.168 L1727.46 684.168 L1728.02 684.168 L1728.58 684.168 L1729.14 684.168 L1729.69 684.168 L1730.25 684.168 L1730.81 684.168 L1731.37 684.168 L1731.93 684.168 L1732.49 684.168 L1733.05 684.168 L1733.61 684.168 L1734.17 684.168 L1734.73 684.168 L1735.29 684.168 L1735.85 684.168 L1736.41 684.168 L1736.97 684.168 L1737.52 684.168 L1738.08 684.168 L1738.64 684.168 L1739.2 684.168 L1739.76 684.168 L1740.32 684.168 L1740.88 684.168 L1741.44 684.168 L1742 684.168 L1742.56 684.168 L1743.12 684.168 L1743.68 684.168 L1744.24 684.168 L1744.79 684.168 L1745.35 684.168 L1745.91 684.168 L1746.47 684.168 L1747.03 684.168 L1747.59 684.168 L1748.15 684.168 L1748.71 684.168 L1749.27 684.168 L1749.83 684.168 L1750.39 684.168 L1750.95 684.168 L1751.51 684.168 L1752.06 684.168 L1752.62 684.168 L1753.18 684.168 L1753.74 684.168 L1754.3 684.168 L1754.86 684.168 L1755.42 684.168 L1755.98 684.168 L1756.54 684.168 L1757.1 684.168 L1757.66 684.168 L1758.22 684.168 L1758.78 684.168 L1759.34 684.168 L1759.89 684.168 L1760.45 684.168 L1761.01 684.168 L1761.57 684.168 L1762.13 684.168 L1762.69 684.168 L1763.25 684.168 L1763.81 684.168 L1764.37 684.168 L1764.93 684.168 L1765.49 684.168 L1766.05 684.168 L1766.61 684.168 L1767.16 684.168 L1767.72 684.168 L1768.28 684.168 L1768.84 684.168 L1769.4 684.168 L1769.96 684.168 L1770.52 684.168 L1771.08 684.168 L1771.64 684.168 L1772.2 684.168 L1772.76 684.168 L1773.32 684.168 L1773.88 684.168 L1774.43 684.168 L1774.99 684.168 L1775.55 684.168 L1776.11 684.168 L1776.67 684.168 L1777.23 684.168 L1777.79 684.168 L1778.35 684.168 L1778.91 684.168 L1779.47 684.168 L1780.03 684.168 L1780.59 684.168 L1781.15 684.168 L1781.71 684.168 L1782.26 684.168 L1782.82 684.168 L1783.38 684.168 L1783.94 684.168 L1784.5 684.168 L1785.06 684.168 L1785.62 684.168 L1786.18 684.168 L1786.74 684.168 L1787.3 684.168 L1787.86 684.168 L1788.42 684.168 L1788.98 684.168 L1789.53 684.168 L1790.09 684.168 L1790.65 684.168 L1791.21 684.168 L1791.77 684.168 L1792.33 684.168 L1792.89 684.168 L1793.45 684.168 L1794.01 684.168 L1794.57 684.168 L1795.13 684.168 L1795.69 684.168 L1796.25 684.168 L1796.8 684.168 L1797.36 684.168 L1797.92 684.168 L1798.48 684.168 L1799.04 684.168 L1799.6 684.168 L1800.16 684.168 L1800.72 684.168 L1801.28 684.168 L1801.84 684.168 L1802.4 684.168 L1802.96 684.168 L1803.52 684.168 L1804.08 684.168 L1804.63 684.168 L1805.19 684.168 L1805.75 684.168 L1806.31 684.168 L1806.87 684.168 L1807.43 684.168 L1807.99 684.168 L1808.55 684.168 L1809.11 684.168 L1809.67 684.168 L1810.23 684.168 L1810.79 684.168 L1811.35 684.168 L1811.9 684.168 L1812.46 684.168 L1813.02 684.168 L1813.58 684.168 L1814.14 684.168 L1814.7 684.168 L1815.26 684.168 L1815.82 684.168 L1816.38 684.168 L1816.94 684.168 L1817.5 684.168 L1818.06 684.168 L1818.62 684.168 L1819.18 684.168 L1819.73 684.168 L1820.29 684.168 L1820.85 684.168 L1821.41 684.168 L1821.97 684.168 L1822.53 684.168 L1823.09 684.168 L1823.65 684.168 L1824.21 684.168 L1824.77 684.168 L1825.33 684.168 L1825.89 684.168 L1826.45 684.168 L1827 684.168 L1827.56 684.168 L1828.12 684.168 L1828.68 684.168 L1829.24 684.168 L1829.8 684.168 L1830.36 684.168 L1830.92 684.168 L1831.48 684.168 L1832.04 684.168 L1832.6 684.168 L1833.16 684.168 L1833.72 684.168 L1834.27 684.168 L1834.83 684.168 L1835.39 684.168 L1835.95 684.168 L1836.51 684.168 L1837.07 684.168 L1837.63 684.168 L1838.19 684.168 L1838.19 682.03 L1837.63 682.03 L1837.07 682.03 L1836.51 682.03 L1835.95 682.03 L1835.39 682.03 L1834.83 682.03 L1834.27 682.03 L1833.72 682.03 L1833.16 682.03 L1832.6 682.03 L1832.04 682.03 L1831.48 682.03 L1830.92 682.03 L1830.36 682.03 L1829.8 682.03 L1829.24 682.03 L1828.68 682.03 L1828.12 682.03 L1827.56 682.03 L1827 682.03 L1826.45 682.03 L1825.89 682.03 L1825.33 682.03 L1824.77 682.03 L1824.21 682.03 L1823.65 682.03 L1823.09 682.03 L1822.53 682.03 L1821.97 682.03 L1821.41 682.03 L1820.85 682.03 L1820.29 682.03 L1819.73 682.03 L1819.18 682.03 L1818.62 682.03 L1818.06 682.03 L1817.5 682.03 L1816.94 682.03 L1816.38 682.03 L1815.82 682.03 L1815.26 682.03 L1814.7 682.03 L1814.14 682.03 L1813.58 682.03 L1813.02 682.03 L1812.46 682.03 L1811.9 682.03 L1811.35 682.03 L1810.79 682.03 L1810.23 682.03 L1809.67 682.03 L1809.11 682.03 L1808.55 682.03 L1807.99 682.03 L1807.43 682.03 L1806.87 682.03 L1806.31 682.03 L1805.75 682.03 L1805.19 682.03 L1804.63 682.03 L1804.08 682.03 L1803.52 682.03 L1802.96 682.03 L1802.4 682.03 L1801.84 682.03 L1801.28 682.03 L1800.72 682.03 L1800.16 682.03 L1799.6 682.03 L1799.04 682.03 L1798.48 682.03 L1797.92 682.03 L1797.36 682.03 L1796.8 682.03 L1796.25 682.03 L1795.69 682.03 L1795.13 682.03 L1794.57 682.03 L1794.01 682.03 L1793.45 682.03 L1792.89 682.03 L1792.33 682.03 L1791.77 682.03 L1791.21 682.03 L1790.65 682.03 L1790.09 682.03 L1789.53 682.03 L1788.98 682.03 L1788.42 682.03 L1787.86 682.03 L1787.3 682.03 L1786.74 682.03 L1786.18 682.03 L1785.62 682.03 L1785.06 682.03 L1784.5 682.03 L1783.94 682.03 L1783.38 682.03 L1782.82 682.03 L1782.26 682.03 L1781.71 682.03 L1781.15 682.03 L1780.59 682.03 L1780.03 682.03 L1779.47 682.03 L1778.91 682.03 L1778.35 682.03 L1777.79 682.03 L1777.23 682.03 L1776.67 682.03 L1776.11 682.03 L1775.55 682.03 L1774.99 682.03 L1774.43 682.03 L1773.88 682.03 L1773.32 682.03 L1772.76 682.03 L1772.2 682.03 L1771.64 682.03 L1771.08 682.03 L1770.52 682.03 L1769.96 682.03 L1769.4 682.03 L1768.84 682.03 L1768.28 682.03 L1767.72 682.03 L1767.16 682.03 L1766.61 682.03 L1766.05 682.03 L1765.49 682.03 L1764.93 682.03 L1764.37 682.03 L1763.81 682.03 L1763.25 682.03 L1762.69 682.03 L1762.13 682.03 L1761.57 682.03 L1761.01 682.03 L1760.45 682.03 L1759.89 682.03 L1759.34 682.03 L1758.78 682.03 L1758.22 682.03 L1757.66 682.03 L1757.1 682.03 L1756.54 682.03 L1755.98 682.03 L1755.42 682.03 L1754.86 682.03 L1754.3 682.03 L1753.74 682.03 L1753.18 682.03 L1752.62 682.03 L1752.06 682.03 L1751.51 682.03 L1750.95 682.03 L1750.39 682.03 L1749.83 682.03 L1749.27 682.03 L1748.71 682.03 L1748.15 682.03 L1747.59 682.03 L1747.03 682.03 L1746.47 682.03 L1745.91 682.03 L1745.35 682.03 L1744.79 682.03 L1744.24 682.03 L1743.68 682.03 L1743.12 682.03 L1742.56 682.03 L1742 682.03 L1741.44 682.03 L1740.88 682.03 L1740.32 682.03 L1739.76 682.03 L1739.2 682.03 L1738.64 682.03 L1738.08 682.03 L1737.52 682.03 L1736.97 682.03 L1736.41 682.03 L1735.85 682.03 L1735.29 682.03 L1734.73 682.03 L1734.17 682.03 L1733.61 682.03 L1733.05 682.03 L1732.49 682.03 L1731.93 682.03 L1731.37 682.03 L1730.81 682.03 L1730.25 682.03 L1729.69 682.03 L1729.14 682.03 L1728.58 682.03 L1728.02 682.03 L1727.46 682.03 L1726.9 682.03 L1726.34 682.03 L1725.78 682.03 L1725.22 682.03 L1724.66 682.03 L1724.1 682.03 L1723.54 682.03 L1722.98 682.03 L1722.42 682.03 L1721.87 682.03 L1721.31 682.03 L1720.75 682.03 L1720.19 682.03 L1719.63 682.03 L1719.07 682.03 L1718.51 682.03 L1717.95 682.03 L1717.39 682.03 L1716.83 682.03 L1716.27 682.03 L1715.71 682.03 L1715.15 682.03 L1714.6 682.03 L1714.04 682.03 L1713.48 682.03 L1712.92 682.03 L1712.36 682.03 L1711.8 682.03 L1711.24 682.03 L1710.68 682.03 L1710.12 682.03 L1709.56 682.03 L1709 682.03 L1708.44 682.03 L1707.88 682.03 L1707.32 682.03 L1706.77 682.03 L1706.21 682.03 L1705.65 682.03 L1705.09 682.03 L1704.53 682.03 L1703.97 682.03 L1703.41 682.03 L1702.85 682.03 L1702.29 682.03 L1701.73 682.03 L1701.17 682.03 L1700.61 682.03 L1700.05 682.03 L1699.5 682.03 L1698.94 682.03 L1698.38 682.03 L1697.82 682.03 L1697.26 682.03 L1696.7 682.03 L1696.14 682.03 L1695.58 682.03 L1695.02 682.03 L1694.46 682.03 L1693.9 682.03 L1693.34 682.03 L1692.78 682.03 L1692.23 682.03 L1691.67 682.03 L1691.11 682.03 L1690.55 682.03 L1689.99 682.03 L1689.43 682.03 L1688.87 682.03 L1688.31 682.03 L1687.75 682.03 L1687.19 682.03 L1686.63 682.03 L1686.07 682.03 L1685.51 682.03 L1684.95 682.03 L1684.4 682.03 L1683.84 682.03 L1683.28 682.03 L1682.72 682.03 L1682.16 682.03 L1681.6 682.03 L1681.04 682.03 L1680.48 682.03 L1679.92 682.03 L1679.36 682.03 L1678.8 682.03 L1678.24 682.03 L1677.68 682.03 L1677.13 682.03 L1676.57 682.03 L1676.01 682.03 L1675.45 682.03 L1674.89 682.03 L1674.33 682.03 L1673.77 682.03 L1673.21 682.03 L1672.65 682.03 L1672.09 682.03 L1671.53 682.03 L1670.97 682.03 L1670.41 682.03 L1669.85 682.03 L1669.3 682.03 L1668.74 682.03 L1668.18 682.03 L1667.62 682.03 L1667.06 682.03 L1666.5 682.03 L1665.94 682.03 L1665.38 682.03 L1664.82 682.03 L1664.26 682.03 L1663.7 682.03 L1663.14 682.03 L1662.58 682.03 L1662.03 682.03 L1661.47 682.03 L1660.91 682.03 L1660.35 682.03 L1659.79 682.03 L1659.23 682.03 L1658.67 682.03 L1658.11 682.03 L1657.55 682.03 L1656.99 682.03 L1656.43 682.03 L1655.87 682.03 L1655.31 682.03 L1654.76 682.03 L1654.2 682.03 L1653.64 682.03 L1653.08 682.03 L1652.52 682.03 L1651.96 682.03 L1651.4 682.03 L1650.84 682.03 L1650.28 682.03 L1649.72 682.03 L1649.16 682.03 L1648.6 682.03 L1648.04 682.03 L1647.48 682.03 L1646.93 682.03 L1646.37 682.03 L1645.81 682.03 L1645.25 682.03 L1644.69 682.03 L1644.13 682.03 L1643.57 682.03 L1643.01 682.03 L1642.45 682.03 L1641.89 682.03 L1641.33 682.03 L1640.77 682.03 L1640.21 682.03 L1639.66 682.03 L1639.1 682.03 L1638.54 682.03 L1637.98 682.03 L1637.42 682.03 L1636.86 682.03 L1636.3 682.03 L1635.74 682.03 L1635.18 682.03 L1634.62 682.03 L1634.06 682.03 L1633.5 682.03 L1632.94 682.03 L1632.39 682.03 L1631.83 682.03 L1631.27 682.03 L1630.71 682.03 L1630.15 682.03 L1629.59 682.03 L1629.03 682.03 L1628.47 682.03 L1627.91 682.03 L1627.35 682.03 L1626.79 682.03 L1626.23 682.03 L1625.67 682.03 L1625.11 682.03 L1624.56 682.03 L1624 682.03 L1623.44 682.03 L1622.88 682.03 L1622.32 682.03 L1621.76 682.03 L1621.2 682.03 L1620.64 682.03 L1620.08 682.03 L1619.52 682.03 L1618.96 682.03 L1618.4 682.03 L1617.84 682.03 L1617.29 682.03 L1616.73 682.03 L1616.17 682.03 L1615.61 682.03 L1615.05 682.03 L1614.49 682.03 L1613.93 682.03 L1613.37 682.03 L1612.81 682.03 L1612.25 682.03 L1611.69 682.03 L1611.13 682.03 L1610.57 682.03 L1610.02 682.03 L1609.46 682.03 L1608.9 682.03 L1608.34 682.03 L1607.78 682.03 L1607.22 682.03 L1606.66 682.03 L1606.1 682.03 L1605.54 682.03 L1604.98 682.03 L1604.42 682.03 L1603.86 682.03 L1603.3 682.03 L1602.74 682.03 L1602.19 682.03 L1601.63 682.03 L1601.07 682.03 L1600.51 682.03 L1599.95 682.03 L1599.39 682.03 L1598.83 682.03 L1598.27 682.03 L1597.71 682.03 L1597.15 682.03 L1596.59 682.03 L1596.03 682.03 L1595.47 682.03 L1594.92 682.03 L1594.36 682.03 L1593.8 682.03 L1593.24 682.03 L1592.68 682.03 L1592.12 682.03 L1591.56 682.03 L1591 682.03 L1590.44 682.03 L1589.88 682.03 L1589.32 682.03 L1588.76 682.03 L1588.2 682.03 L1587.65 682.03 L1587.09 682.03 L1586.53 682.03 L1585.97 682.03 L1585.41 682.03 L1584.85 682.03 L1584.29 682.03 L1583.73 682.03 L1583.17 682.03 L1582.61 682.03 L1582.05 682.03 L1581.49 682.03 L1580.93 682.03 L1580.37 682.03 L1579.82 682.03 L1579.26 682.03 L1578.7 682.03 L1578.14 682.03 L1577.58 682.03 L1577.02 682.03 L1576.46 682.03 L1575.9 682.03 L1575.34 682.03 L1574.78 682.03 L1574.22 682.03 L1573.66 682.03 L1573.1 682.03 L1572.55 682.03 L1571.99 682.03 L1571.43 682.03 L1570.87 682.03 L1570.31 682.03 L1569.75 682.03 L1569.19 682.03 L1568.63 682.03 L1568.07 682.03 L1567.51 682.03 L1566.95 682.03 L1566.39 682.03 L1565.83 682.03 L1565.28 682.03 L1564.72 682.03 L1564.16 682.03 L1563.6 682.03 L1563.04 682.03 L1562.48 682.03 L1561.92 682.03 L1561.36 682.03 L1560.8 682.03 L1560.24 682.03 L1559.68 682.03 L1559.12 682.03 L1558.56 682.03 L1558 682.03 L1557.45 682.03 L1556.89 682.03 L1556.33 682.03 L1555.77 682.03 L1555.21 682.03 L1554.65 682.03 L1554.09 682.03 L1553.53 682.03 L1552.97 682.03 L1552.41 682.03 L1551.85 682.03 L1551.29 682.03 L1550.73 682.03 L1550.18 682.03 L1549.62 682.03 L1549.06 682.03 L1548.5 682.03 L1547.94 682.03 L1547.38 682.03 L1546.82 682.03 L1546.26 682.03 L1545.7 682.03 L1545.14 682.03 L1544.58 682.03 L1544.02 682.03 L1543.46 682.03 L1542.9 682.03 L1542.35 682.03 L1541.79 682.03 L1541.23 682.03 L1540.67 682.03 L1540.11 682.03 L1539.55 682.03 L1538.99 682.03 L1538.43 682.03 L1537.87 682.03 L1537.31 682.03 L1536.75 682.03 L1536.19 682.03 L1535.63 682.03 L1535.08 682.03 L1534.52 682.03 L1533.96 682.03 L1533.4 682.03 L1532.84 682.03 L1532.28 682.03 L1531.72 682.03 L1531.16 682.03 L1530.6 682.03 L1530.04 682.03 L1529.48 682.03 L1528.92 682.03 L1528.36 682.03 L1527.81 682.03 L1527.25 682.03 L1526.69 682.03 L1526.13 682.03 L1525.57 682.03 L1525.01 682.03 L1524.45 682.03 L1523.89 682.03 L1523.33 682.03 L1522.77 682.03 L1522.21 682.03 L1521.65 682.03 L1521.09 682.03 L1520.53 682.03 L1519.98 682.03 L1519.42 682.03 L1518.86 682.03 L1518.3 682.03 L1517.74 682.03 L1517.18 682.03 L1516.62 682.03 L1516.06 682.03 L1515.5 682.03 L1514.94 682.03 L1514.38 682.03 L1513.82 682.03 L1513.26 682.03 L1512.71 682.03 L1512.15 682.03 L1511.59 682.03 L1511.03 682.03 L1510.47 682.03 L1509.91 682.03 L1509.35 682.03 L1508.79 682.03 L1508.23 682.03 L1507.67 682.03 L1507.11 682.03 L1506.55 682.03 L1505.99 682.03 L1505.44 682.03 L1504.88 682.03 L1504.32 682.03 L1503.76 682.03 L1503.2 682.03 L1502.64 682.03 L1502.08 682.03 L1501.52 682.03 L1500.96 682.03 L1500.4 682.03 L1499.84 682.03 L1499.28 682.03 L1498.72 682.03 L1498.16 682.03 L1497.61 682.03 L1497.05 682.03 L1496.49 682.03 L1495.93 682.03 L1495.37 682.03 L1494.81 682.03 L1494.25 682.03 L1493.69 682.03 L1493.13 682.03 L1492.57 682.03 L1492.01 682.03 L1491.45 682.03 L1490.89 682.03 L1490.34 682.03 L1489.78 682.03 L1489.22 682.03 L1488.66 682.03 L1488.1 682.03 L1487.54 682.03 L1486.98 682.03 L1486.42 682.03 L1485.86 682.03 L1485.3 682.03 L1484.74 682.03 L1484.18 682.03 L1483.62 682.03 L1483.07 682.03 L1482.51 682.03 L1481.95 682.03 L1481.39 682.03 L1480.83 682.03 L1480.27 682.03 L1479.71 682.03 L1479.15 682.03 L1478.59 682.03 L1478.03 682.03 L1477.47 682.03 L1476.91 682.03 L1476.35 682.03 L1475.79 682.03 L1475.24 682.03 L1474.68 682.03 L1474.12 682.03 L1473.56 682.03 L1473 682.03 L1472.44 682.03 L1471.88 682.03 L1471.32 682.03 L1470.76 682.03 L1470.2 682.03 L1469.64 682.03 L1469.08 682.03 L1468.52 682.03 L1467.97 682.03 L1467.41 682.03 L1466.85 682.03 L1466.29 682.03 L1465.73 682.03 L1465.17 682.03 L1464.61 682.03 L1464.05 682.03 L1463.49 682.03 L1462.93 682.03 L1462.37 682.03 L1461.81 682.03 L1461.25 682.03 L1460.7 682.03 L1460.14 682.03 L1459.58 682.03 L1459.02 682.03 L1458.46 682.03 L1457.9 682.03 L1457.34 682.03 L1456.78 682.03 L1456.22 682.03 L1455.66 682.03 L1455.1 682.03 L1454.54 682.03 L1453.98 682.03 L1453.42 682.03 L1452.87 682.03 L1452.31 682.03 L1451.75 682.03 L1451.19 682.03 L1450.63 682.03 L1450.07 682.03 L1449.51 682.03 L1448.95 682.03 L1448.39 682.03 L1447.83 682.03 L1447.27 682.03 L1446.71 682.03 L1446.15 682.03 L1445.6 682.03 L1445.04 682.03 L1444.48 682.03 L1443.92 682.03 L1443.36 682.03 L1442.8 682.03 L1442.24 682.03 L1441.68 682.03 L1441.12 682.03 L1440.56 682.03 L1440 682.03 L1439.44 682.03 L1438.88 682.03 L1438.33 682.03 L1437.77 682.03 L1437.21 682.03 L1436.65 682.03 L1436.09 682.03 L1435.53 682.03 L1434.97 682.03 L1434.41 682.03 L1433.85 682.03 L1433.29 682.03 L1432.73 682.03 L1432.17 682.03 L1431.61 682.03 L1431.05 682.03 L1430.5 682.03 L1429.94 682.03 L1429.38 682.03 L1428.82 682.03 L1428.26 682.03 L1427.7 682.03 L1427.14 682.03 L1426.58 682.03 L1426.02 682.03 L1425.46 682.03 L1424.9 682.03 L1424.34 682.03 L1423.78 682.03 L1423.23 682.03 L1422.67 682.03 L1422.11 682.03 L1421.55 682.03 L1420.99 682.03 L1420.43 682.03 L1419.87 682.03 L1419.31 682.03 L1418.75 682.03 L1418.19 682.03 L1417.63 682.03 L1417.07 682.03 L1416.51 682.03 L1415.95 682.03 L1415.4 682.03 L1414.84 682.03 L1414.28 682.03 L1413.72 682.03 L1413.16 682.03 L1412.6 682.03 L1412.04 682.03 L1411.48 682.03 L1410.92 682.03 L1410.36 682.03 L1409.8 682.03 L1409.24 682.03 L1408.68 682.03 L1408.13 682.03 L1407.57 682.03 L1407.01 682.03 L1406.45 682.03 L1405.89 682.03 L1405.33 682.03 L1404.77 682.03 L1404.21 682.03 L1403.65 682.03 L1403.09 682.03 L1402.53 682.03 L1401.97 682.03 L1401.41 682.03 L1400.86 682.03 L1400.3 682.03 L1399.74 682.03 L1399.18 682.03 L1398.62 682.03 L1398.06 682.03 L1397.5 682.03 L1396.94 682.03 L1396.38 682.03 L1395.82 682.03 L1395.26 682.03 L1394.7 682.03 L1394.14 682.03 L1393.58 682.03 L1393.03 682.03 L1392.47 682.03 L1391.91 682.03 L1391.35 682.03 L1390.79 682.03 L1390.23 682.03 L1389.67 682.03 L1389.11 682.03 L1388.55 682.03 L1387.99 682.03 L1387.43 682.03 L1386.87 682.03 L1386.31 682.03 L1385.76 682.03 L1385.2 682.03 L1384.64 682.03 L1384.08 682.03 L1383.52 682.03 L1382.96 682.03 L1382.4 682.03 L1381.84 682.03 L1381.28 682.03 L1380.72 682.03 L1380.16 682.03 L1379.6 682.03 L1379.04 682.03 L1378.49 682.03 L1377.93 682.03 L1377.37 682.03 L1376.81 682.03 L1376.25 682.03 L1375.69 682.03 L1375.13 682.03 L1374.57 682.03 L1374.01 682.03 L1373.45 682.03 L1372.89 682.03 L1372.33 682.03 L1371.77 682.03 L1371.21 682.03 L1370.66 682.03 L1370.1 682.03 L1369.54 682.03 L1368.98 682.03 L1368.42 682.03 L1367.86 682.03 L1367.3 682.03 L1366.74 682.03 L1366.18 682.03 L1365.62 682.03 L1365.06 682.03 L1364.5 682.03 L1363.94 682.03 L1363.39 682.03 L1362.83 682.03 L1362.27 682.03 L1361.71 682.03 L1361.15 682.03 L1360.59 682.03 L1360.03 682.03 L1359.47 682.03 L1358.91 682.03 L1358.35 682.03 L1357.79 682.03 L1357.23 682.03 L1356.67 682.03 L1356.12 682.03 L1355.56 682.03 L1355 682.03 L1354.44 682.03 L1353.88 682.03 L1353.32 682.03 L1352.76 682.03 L1352.2 682.03 L1351.64 682.03 L1351.08 682.03 L1350.52 682.03 L1349.96 682.03 L1349.4 682.03 L1348.84 682.03 L1348.29 682.03 L1347.73 682.03 L1347.17 682.03 L1346.61 682.03 L1346.05 682.03 L1345.49 682.03 L1344.93 682.03 L1344.37 682.03 L1343.81 682.03 L1343.25 682.03 L1342.69 682.03 L1342.13 682.03 L1341.57 682.03 L1341.02 682.03 L1340.46 682.03 L1339.9 682.03 L1339.34 682.03 L1338.78 682.03 L1338.22 682.03 L1337.66 682.03 L1337.1 682.03 L1336.54 682.03 L1335.98 682.03 L1335.42 682.03 L1334.86 682.03 L1334.3 682.03 L1333.75 682.03 L1333.19 682.03 L1332.63 682.03 L1332.07 682.03 L1331.51 682.03 L1330.95 682.03 L1330.39 682.03 L1329.83 682.03 L1329.27 682.03 L1328.71 682.03 L1328.15 682.03 L1327.59 682.03 L1327.03 682.03 L1326.47 682.03 L1325.92 682.03 L1325.36 682.03 L1324.8 682.03 L1324.24 682.03 L1323.68 682.03 L1323.12 682.03 L1322.56 682.03 L1322 682.03 L1321.44 682.03 L1320.88 682.03 L1320.32 682.03 L1319.76 682.03 L1319.2 682.03 L1318.65 682.03 L1318.09 682.03 L1317.53 682.03 L1316.97 682.03 L1316.41 682.03 L1315.85 682.03 L1315.29 682.03 L1314.73 682.03 L1314.17 682.03 L1313.61 682.03 L1313.05 682.03 L1312.49 682.03 L1311.93 682.03 L1311.38 682.03 L1310.82 682.03 L1310.26 682.03 L1309.7 682.03 L1309.14 682.03 L1308.58 682.03 L1308.02 682.03 L1307.46 682.03 L1306.9 682.03 L1306.34 682.03 L1305.78 682.03 L1305.22 682.03 L1304.66 682.03 L1304.1 682.03 L1303.55 682.03 L1302.99 682.03 L1302.43 682.03 L1301.87 682.03 L1301.31 682.03 L1300.75 682.03 L1300.19 682.03 L1299.63 682.03 L1299.07 682.03 L1298.51 682.03 L1297.95 682.03 L1297.39 682.03 L1296.83 682.03 L1296.28 682.03 L1295.72 682.03 L1295.16 682.03 L1294.6 682.03 L1294.04 682.03 L1293.48 682.03 L1292.92 682.03 L1292.36 682.03 L1291.8 682.03 L1291.24 682.03 L1290.68 682.03 L1290.12 682.03 L1289.56 682.03 L1289 682.03 L1288.45 682.03 L1287.89 682.03 L1287.33 682.03 L1286.77 682.03 L1286.21 682.03 L1285.65 682.03 L1285.09 682.03 L1284.53 682.03 L1283.97 682.03 L1283.41 682.03 L1282.85 682.03 L1282.29 682.03 L1281.73 682.03 L1281.18 682.03 L1280.62 682.03 L1280.06 682.03 L1279.5 682.03 L1278.94 682.03 L1278.38 682.03 L1277.82 682.03 L1277.26 682.03 L1276.7 682.03 L1276.14 682.03 L1275.58 682.03 L1275.02 682.03 L1274.46 682.03 L1273.91 682.03 L1273.35 682.03 L1272.79 682.03 L1272.23 682.03 L1271.67 682.03 L1271.11 682.03 L1270.55 682.03 L1269.99 682.03 L1269.43 682.03 L1268.87 682.03 L1268.31 682.03 L1267.75 682.03 L1267.19 682.03 L1266.63 682.03 L1266.08 682.03 L1265.52 682.03 L1264.96 682.03 L1264.4 682.03 L1263.84 682.03 L1263.28 682.03 L1262.72 682.03 L1262.16 682.03 L1261.6 682.03 L1261.04 682.03 L1260.48 682.03 L1259.92 682.03 L1259.36 682.03 L1258.81 682.03 L1258.25 682.03 L1257.69 682.03 L1257.13 682.03 L1256.57 682.03 L1256.01 682.03 L1255.45 682.03 L1254.89 682.03 L1254.33 682.03 L1253.77 682.03 L1253.21 682.03 L1252.65 682.03 L1252.09 682.03 L1251.54 682.03 L1250.98 682.03 L1250.42 682.03 L1249.86 682.03 L1249.3 682.03 L1248.74 682.03 L1248.18 682.03 L1247.62 682.03 L1247.06 682.03 L1246.5 682.03 L1245.94 682.03 L1245.38 682.03 L1244.82 682.03 L1244.26 682.03 L1243.71 682.03 L1243.15 682.03 L1242.59 682.03 L1242.03 682.03 L1241.47 682.03 L1240.91 682.03 L1240.35 682.03 L1239.79 682.03 L1239.23 682.03 L1238.67 682.03 L1238.11 682.03 L1237.55 682.03 L1236.99 682.03 L1236.44 682.03 L1235.88 682.03 L1235.32 682.03 L1234.76 682.03 L1234.2 682.03 L1233.64 682.03 L1233.08 682.03 L1232.52 682.03 L1231.96 682.03 L1231.4 682.03 L1230.84 682.03 L1230.28 682.03 L1229.72 682.03 L1229.17 682.03 L1228.61 682.03 L1228.05 682.03 L1227.49 682.03 L1226.93 682.03 L1226.37 682.03 L1225.81 682.03 L1225.25 682.03 L1224.69 682.03 L1224.13 682.03 L1223.57 682.03 L1223.01 682.03 L1222.45 682.03 L1221.89 682.03 L1221.34 682.03 L1220.78 682.03 L1220.22 682.03 L1219.66 682.03 L1219.1 682.03 L1218.54 682.03 L1217.98 682.03 L1217.42 682.03 L1216.86 682.03 L1216.3 682.03 L1215.74 682.03 L1215.18 682.03 L1214.62 682.03 L1214.07 682.03 L1213.51 682.03 L1212.95 682.03 L1212.39 682.03 L1211.83 682.03 L1211.27 682.03 L1210.71 682.03 L1210.15 682.03 L1209.59 682.03 L1209.03 682.03 L1208.47 682.03 L1207.91 682.03 L1207.35 682.03 L1206.8 682.03 L1206.24 682.03 L1205.68 682.03 L1205.12 682.03 L1204.56 682.03 L1204 682.03 L1203.44 682.03 L1202.88 682.03 L1202.32 682.03 L1201.76 682.03 L1201.2 682.03 L1200.64 682.03 L1200.08 682.03 L1199.52 682.03 L1198.97 682.03 L1198.41 682.03 L1197.85 682.03 L1197.29 682.03 L1196.73 682.03 L1196.17 682.03 L1195.61 682.03 L1195.05 682.03 L1194.49 682.03 L1193.93 682.03 L1193.37 682.03 L1192.81 682.03 L1192.25 682.03 L1191.7 682.03 L1191.14 682.03 L1190.58 682.03 L1190.02 682.03 L1189.46 682.03 L1188.9 682.03 L1188.34 682.03 L1187.78 682.03 L1187.22 682.03 L1186.66 682.03 L1186.1 682.03 L1185.54 682.03 L1184.98 682.03 L1184.43 682.03 L1183.87 682.03 L1183.31 682.03 L1182.75 682.03 L1182.19 682.03 L1181.63 682.03 L1181.07 682.03 L1180.51 682.03 L1179.95 682.03 L1179.39 682.03 L1178.83 682.03 L1178.27 682.03 L1177.71 682.03 L1177.15 682.03 L1176.6 682.03 L1176.04 682.03 L1175.48 682.03 L1174.92 682.03 L1174.36 682.03 L1173.8 682.03 L1173.24 682.03 L1172.68 682.03 L1172.12 682.03 L1171.56 682.03 L1171 682.03 L1170.44 682.03 L1169.88 682.03 L1169.33 682.03 L1168.77 682.03 L1168.21 682.03 L1167.65 682.03 L1167.09 682.03 L1166.53 682.03 L1165.97 682.03 L1165.41 682.03 L1164.85 682.03 L1164.29 682.03 L1163.73 682.03 L1163.17 682.03 L1162.61 682.03 L1162.05 682.03 L1161.5 682.03 L1160.94 682.03 L1160.38 682.03 L1159.82 682.03 L1159.26 682.03 L1158.7 682.03 L1158.14 682.03 L1157.58 682.03 L1157.02 682.03 L1156.46 682.03 L1155.9 682.03 L1155.34 682.03 L1154.78 682.03 L1154.23 682.03 L1153.67 682.03 L1153.11 682.03 L1152.55 682.03 L1151.99 682.03 L1151.43 682.03 L1150.87 682.03 L1150.31 682.03 L1149.75 682.03 L1149.19 682.03 L1148.63 682.03 L1148.07 682.03 L1147.51 682.03 L1146.96 682.03 L1146.4 682.03 L1145.84 682.03 L1145.28 682.03 L1144.72 682.03 L1144.16 682.03 L1143.6 682.03 L1143.04 682.03 L1142.48 682.03 L1141.92 682.03 L1141.36 682.03 L1140.8 682.03 L1140.24 682.03 L1139.68 682.03 L1139.13 682.03 L1138.57 682.03 L1138.01 682.03 L1137.45 682.03 L1136.89 682.03 L1136.33 682.03 L1135.77 682.03 L1135.21 682.03 L1134.65 682.03 L1134.09 682.03 L1133.53 682.03 L1132.97 682.03 L1132.41 682.03 L1131.86 682.03 L1131.3 682.03 L1130.74 682.03 L1130.18 682.03 L1129.62 682.03 L1129.06 682.03 L1128.5 682.03 L1127.94 682.03 L1127.38 682.03 L1126.82 682.03 L1126.26 682.03 L1125.7 682.03 L1125.14 682.03 L1124.59 682.03 L1124.03 682.03 L1123.47 682.03 L1122.91 682.03 L1122.35 682.03 L1121.79 682.03 L1121.23 682.03 L1120.67 682.03 L1120.11 682.03 L1119.55 682.03 L1118.99 682.03 L1118.43 682.03 L1117.87 682.03 L1117.31 682.03 L1116.76 682.03 L1116.2 682.03 L1115.64 682.03 L1115.08 682.03 L1114.52 682.03 L1113.96 682.03 L1113.4 682.03 L1112.84 682.03 L1112.28 682.03 L1111.72 682.03 L1111.16 682.03 L1110.6 682.03 L1110.04 682.03 L1109.49 682.03 L1108.93 682.03 L1108.37 682.03 L1107.81 682.03 L1107.25 682.03 L1106.69 682.03 L1106.13 682.03 L1105.57 682.03 L1105.01 682.03 L1104.45 682.03 L1103.89 682.03 L1103.33 682.03 L1102.77 682.03 L1102.22 682.03 L1101.66 682.03 L1101.1 682.03 L1100.54 682.03 L1099.98 682.03 L1099.42 682.03 L1098.86 682.03 L1098.3 682.03 L1097.74 682.03 L1097.18 682.03 L1096.62 682.03 L1096.06 682.03 L1095.5 682.03 L1094.94 682.03 L1094.39 682.03 L1093.83 682.03 L1093.27 682.03 L1092.71 682.03 L1092.15 682.03 L1091.59 682.03 L1091.03 682.03 L1090.47 682.03 L1089.91 682.03 L1089.35 682.03 L1088.79 682.03 L1088.23 682.03 L1087.67 682.03 L1087.12 682.03 L1086.56 682.03 L1086 682.03 L1085.44 682.03 L1084.88 682.03 L1084.32 682.03 L1083.76 682.03 L1083.2 682.03 L1082.64 682.03 L1082.08 682.03 L1081.52 682.03 L1080.96 682.03 L1080.4 682.03 L1079.85 682.03 L1079.29 682.03 L1078.73 682.03 L1078.17 682.03 L1077.61 682.03 L1077.05 682.03 L1076.49 682.03 L1075.93 682.03 L1075.37 682.03 L1074.81 682.03 L1074.25 682.03 L1073.69 682.03 L1073.13 682.03 L1072.57 682.03 L1072.02 682.03 L1071.46 682.03 L1070.9 682.03 L1070.34 682.03 L1069.78 682.03 L1069.22 682.03 L1068.66 682.03 L1068.1 682.03 L1067.54 682.03 L1066.98 682.03 L1066.42 682.03 L1065.86 682.03 L1065.3 682.03 L1064.75 682.03 L1064.19 682.03 L1063.63 682.03 L1063.07 682.03 L1062.51 682.03 L1061.95 682.03 L1061.39 682.03 L1060.83 682.03 L1060.27 682.03 L1059.71 682.03 L1059.15 682.03 L1058.59 682.03 L1058.03 682.03 L1057.48 682.03 L1056.92 682.03 L1056.36 682.03 L1055.8 682.03 L1055.24 682.03 L1054.68 682.03 L1054.12 682.03 L1053.56 682.03 L1053 682.03 L1052.44 682.03 L1051.88 682.03 L1051.32 682.03 L1050.76 682.03 L1050.2 682.03 L1049.65 682.03 L1049.09 682.03 L1048.53 682.03 L1047.97 682.03 L1047.41 682.03 L1046.85 682.03 L1046.29 682.03 L1045.73 682.03 L1045.17 682.03 L1044.61 682.03 L1044.05 682.03 L1043.49 682.03 L1042.93 682.03 L1042.38 682.03 L1041.82 682.03 L1041.26 682.03 L1040.7 682.03 L1040.14 682.03 L1039.58 682.03 L1039.02 682.03 L1038.46 682.03 L1037.9 682.03 L1037.34 682.03 L1036.78 682.03 L1036.22 682.03 L1035.66 682.03 L1035.1 682.03 L1034.55 682.03 L1033.99 682.03 L1033.43 682.03 L1032.87 682.03 L1032.31 682.03 L1031.75 682.03 L1031.19 682.03 L1030.63 682.03 L1030.07 682.03 L1029.51 682.03 L1028.95 682.03 L1028.39 682.03 L1027.83 682.03 L1027.28 682.03 L1026.72 682.03 L1026.16 682.03 L1025.6 682.03 L1025.04 682.03 L1024.48 682.03 L1023.92 682.03 L1023.36 682.03 L1022.8 682.03 L1022.24 682.03 L1021.68 682.03 L1021.12 682.03 L1020.56 682.03 L1020.01 682.03 L1019.45 682.03 L1018.89 682.03 L1018.33 682.03 L1017.77 682.03 L1017.21 682.03 L1016.65 682.03 L1016.09 682.03 L1015.53 682.03 L1014.97 682.03 L1014.41 682.03 L1013.85 682.03 L1013.29 682.03 L1012.73 682.03 L1012.18 682.03 L1011.62 682.03 L1011.06 682.03 L1010.5 682.03 L1009.94 682.03 L1009.38 682.03 L1008.82 682.03 L1008.26 682.03 L1007.7 682.03 L1007.14 682.03 L1006.58 682.03 L1006.02 682.03 L1005.46 682.03 L1004.91 682.03 L1004.35 682.03 L1003.79 682.03 L1003.23 682.03 L1002.67 682.03 L1002.11 682.03 L1001.55 682.03 L1000.99 682.03 L1000.43 682.03 L999.872 682.03 L999.313 682.03 L998.754 682.03 L998.194 682.03 L997.635 682.03 L997.076 682.03 L996.517 682.03 L995.957 682.03 L995.398 682.03 L994.839 682.03 L994.28 682.03 L993.72 682.03 L993.161 682.03 L992.602 682.03 L992.043 682.03 L991.483 682.03 L990.924 682.03 L990.365 682.03 L989.806 682.03 L989.246 682.03 L988.687 682.03 L988.128 682.03 L987.569 682.03 L987.009 682.03 L986.45 682.03 L985.891 682.03 L985.332 682.03 L984.772 682.03 L984.213 682.03 L983.654 682.03 L983.095 682.03 L982.535 682.03 L981.976 682.03 L981.417 682.03 L980.858 682.03 L980.298 682.03 L979.739 682.03 L979.18 682.03 L978.621 682.03 L978.061 682.03 L977.502 682.03 L976.943 682.03 L976.384 682.03 L975.824 682.03 L975.265 682.03 L974.706 682.03 L974.147 682.03 L973.587 682.03 L973.028 682.03 L972.469 682.03 L971.91 682.03 L971.35 682.03 L970.791 682.03 L970.232 682.03 L969.673 682.03 L969.113 682.03 L968.554 682.03 L967.995 682.03 L967.436 682.03 L966.876 682.03 L966.317 682.03 L965.758 682.03 L965.199 682.03 L964.639 682.03 L964.08 682.03 L963.521 682.03 L962.962 682.03 L962.402 682.03 L961.843 682.03 L961.284 682.03 L960.725 682.03 L960.165 682.03 L959.606 682.03 L959.047 682.03 L958.488 682.03 L957.928 682.03 L957.369 682.03 L956.81 682.03 L956.251 682.03 L955.691 682.03 L955.132 682.03 L954.573 682.03 L954.014 682.03 L953.454 682.03 L952.895 682.03 L952.336 682.03 L951.777 682.03 L951.217 682.03 L950.658 682.03 L950.099 682.03 L949.54 682.03 L948.98 682.03 L948.421 682.03 L947.862 682.03 L947.303 682.03 L946.743 682.03 L946.184 682.03 L945.625 682.03 L945.066 682.03 L944.506 682.03 L943.947 682.03 L943.388 682.03 L942.829 682.03 L942.269 682.03 L941.71 682.03 L941.151 682.03 L940.592 682.03 L940.032 682.03 L939.473 682.03 L938.914 682.03 L938.355 682.03 L937.795 682.03 L937.236 682.03 L936.677 682.03 L936.118 682.03 L935.558 682.03 L934.999 682.03 L934.44 682.03 L933.881 682.03 L933.321 682.03 L932.762 682.03 L932.203 682.03 L931.644 682.03 L931.084 682.03 L930.525 682.03 L929.966 682.03 L929.406 682.03 L928.847 682.03 L928.288 682.03 L927.729 682.03 L927.169 682.03 L926.61 682.03 L926.051 682.03 L925.492 682.03 L924.932 682.03 L924.373 682.03 L923.814 682.03 L923.255 682.03 L922.695 682.03 L922.136 682.03 L921.577 682.03 L921.018 682.03 L920.458 682.03 L919.899 682.03 L919.34 682.03 L918.781 682.03 L918.221 682.03 L917.662 682.03 L917.103 682.03 L916.544 682.03 L915.984 682.03 L915.425 682.03 L914.866 682.03 L914.307 682.03 L913.747 682.03 L913.188 682.03 L912.629 682.03 L912.07 682.03 L911.51 682.03 L910.951 682.03 L910.392 682.03 L909.833 682.03 L909.273 682.03 L908.714 682.03 L908.155 682.03 L907.596 682.03 L907.036 682.03 L906.477 682.03 L905.918 682.03 L905.359 682.03 L904.799 682.03 L904.24 682.03 L903.681 682.03 L903.122 682.03 L902.562 682.03 L902.003 682.03 L901.444 682.03 L900.885 682.03 L900.325 682.03 L899.766 682.03 L899.207 682.03 L898.648 682.03 L898.088 682.03 L897.529 682.03 L896.97 682.03 L896.411 682.03 L895.851 682.03 L895.292 682.03 L894.733 682.03 L894.174 682.03 L893.614 682.03 L893.055 682.03 L892.496 682.03 L891.937 682.03 L891.377 682.03 L890.818 682.03 L890.259 682.03 L889.7 682.03 L889.14 682.03 L888.581 682.03 L888.022 682.03 L887.463 682.03 L886.903 682.03 L886.344 682.03 L885.785 682.03 L885.226 682.03 L884.666 682.03 L884.107 682.03 L883.548 682.03 L882.989 682.03 L882.429 682.03 L881.87 682.03 L881.311 682.03 L880.752 682.03 L880.192 682.03 L879.633 682.03 L879.074 682.03 L878.515 682.03 L877.955 682.03 L877.396 682.03 L876.837 682.03 L876.278 682.03 L875.718 682.03 L875.159 682.03 L874.6 682.03 L874.041 682.03 L873.481 682.03 L872.922 682.03 L872.363 682.03 L871.804 682.03 L871.244 682.03 L870.685 682.03 L870.126 682.03 L869.567 682.03 L869.007 682.03 L868.448 682.03 L867.889 682.03 L867.33 682.03 L866.77 682.03 L866.211 682.03 L865.652 682.03 L865.093 682.03 L864.533 682.03 L863.974 682.03 L863.415 682.03 L862.856 682.03 L862.296 682.03 L861.737 682.03 L861.178 682.03 L860.619 682.03 L860.059 682.03 L859.5 682.03 L858.941 682.03 L858.382 682.03 L857.822 682.03 L857.263 682.03 L856.704 682.03 L856.145 682.03 L855.585 682.03 L855.026 682.03 L854.467 682.03 L853.908 682.03 L853.348 682.03 L852.789 682.03 L852.23 682.03 L851.671 682.03 L851.111 682.03 L850.552 682.03 L849.993 682.03 L849.434 682.03 L848.874 682.03 L848.315 682.03 L847.756 682.03 L847.197 682.03 L846.637 682.03 L846.078 682.03 L845.519 682.03 L844.96 682.03 L844.4 682.03 L843.841 682.03 L843.282 682.03 L842.723 682.03 L842.163 682.03 L841.604 682.03 L841.045 682.03 L840.486 682.03 L839.926 682.03 L839.367 682.03 L838.808 682.03 L838.249 682.03 L837.689 682.03 L837.13 682.03 L836.571 682.03 L836.012 682.03 L835.452 682.03 L834.893 682.03 L834.334 682.03 L833.775 682.03 L833.215 682.03 L832.656 682.03 L832.097 682.03 L831.538 682.03 L830.978 682.03 L830.419 682.03 L829.86 682.03 L829.301 682.03 L828.741 682.03 L828.182 682.03 L827.623 682.03 L827.064 682.03 L826.504 682.03 L825.945 682.03 L825.386 682.03 L824.827 682.03 L824.267 682.03 L823.708 682.03 L823.149 682.03 L822.59 682.03 L822.03 682.03 L821.471 682.03 L820.912 682.03 L820.353 682.03 L819.793 682.03 L819.234 682.03 L818.675 682.03 L818.116 682.03 L817.556 682.03 L816.997 682.03 L816.438 682.03 L815.879 682.03 L815.319 682.03 L814.76 682.03 L814.201 682.03 L813.642 682.03 L813.082 682.03 L812.523 682.03 L811.964 682.03 L811.405 682.03 L810.845 682.03 L810.286 682.03 L809.727 682.03 L809.168 682.03 L808.608 682.03 L808.049 682.03 L807.49 682.03 L806.931 682.03 L806.371 682.03 L805.812 682.03 L805.253 682.03 L804.693 682.03 L804.134 682.03 L803.575 682.03 L803.016 682.03 L802.456 682.03 L801.897 682.03 L801.338 682.03 L800.779 682.03 L800.219 682.03 L799.66 682.03 L799.101 682.03 L798.542 682.03 L797.982 682.03 L797.423 682.03 L796.864 682.03 L796.305 682.03 L795.745 682.03 L795.186 682.03 L794.627 682.03 L794.068 682.03 L793.508 682.03 L792.949 682.03 L792.39 682.03 L791.831 682.03 L791.271 682.03 L790.712 682.03 L790.153 682.03 L789.594 682.03 L789.034 682.03 L788.475 682.03 L787.916 682.03 L787.357 682.03 L786.797 682.03 L786.238 682.03 L785.679 682.03 L785.12 682.03 L784.56 682.03 L784.001 682.03 L783.442 682.03 L782.883 682.03 L782.323 682.03 L781.764 682.03 L781.205 682.03 L780.646 682.03 L780.086 682.03 L779.527 682.03 L778.968 682.03 L778.409 682.03 L777.849 682.03 L777.29 682.03 L776.731 682.03 L776.172 682.03 L775.612 682.03 L775.053 682.03 L774.494 682.03 L773.935 682.03 L773.375 682.03 L772.816 682.03 L772.257 682.03 L771.698 682.03 L771.138 682.03 L770.579 682.03 L770.02 682.03 L769.461 682.03 L768.901 682.03 L768.342 682.03 L767.783 682.03 L767.224 682.03 L766.664 682.03 L766.105 682.03 L765.546 682.03 L764.987 682.03 L764.427 682.03 L763.868 682.03 L763.309 682.03 L762.75 682.03 L762.19 682.03 L761.631 682.03 L761.072 682.03 L760.513 682.03 L759.953 682.03 L759.394 682.03 L758.835 682.03 L758.276 682.03 L757.716 682.03 L757.157 682.03 L756.598 682.03 L756.039 682.03 L755.479 682.03 L754.92 682.03 L754.361 682.03 L753.802 682.03 L753.242 682.03 L752.683 682.03 L752.124 682.03 L751.565 682.03 L751.005 682.03 L750.446 682.03 L749.887 682.03 L749.328 682.03 L748.768 682.03 L748.209 682.03 L747.65 682.03 L747.091 682.03 L746.531 682.03 L745.972 682.03 L745.413 682.03 L744.854 682.03 L744.294 682.03 L743.735 682.03 L743.176 682.03 L742.617 682.03 L742.057 682.03 L741.498 682.03 L740.939 682.03 L740.38 682.03 L739.82 682.03 L739.261 682.03 L738.702 682.03 L738.143 682.03 L737.583 682.03 L737.024 682.03 L736.465 682.03 L735.906 682.03 L735.346 682.03 L734.787 682.03 L734.228 682.03 L733.669 682.03 L733.109 682.03 L732.55 682.03 L731.991 682.03 L731.432 682.03 L730.872 682.03 L730.313 682.03 L729.754 682.03 L729.195 682.03 L728.635 682.03 L728.076 682.03 L727.517 682.03 L726.958 682.03 L726.398 682.03 L725.839 682.03 L725.28 682.03 L724.721 682.03 L724.161 682.03 L723.602 682.03 L723.043 682.03 L722.484 682.03 L721.924 682.03 L721.365 682.03 L720.806 682.03 L720.247 682.03  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip163)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,683.07 720.806,683.07 721.365,683.07 721.924,683.07 722.484,683.07 723.043,683.07 723.602,683.07 724.161,683.07 724.721,683.07 725.28,683.07 725.839,683.07 726.398,683.07 726.958,683.07 727.517,683.07 728.076,683.07 728.635,683.07 729.195,683.07 729.754,683.07 730.313,683.07 730.872,683.07 731.432,683.07 731.991,683.07 732.55,683.07 733.109,683.07 733.669,683.07 734.228,683.07 734.787,683.07 735.346,683.07 735.906,683.07 736.465,683.07 737.024,683.07 737.583,683.07 738.143,683.07 738.702,683.07 739.261,683.07 739.82,683.07 740.38,683.07 740.939,683.07 741.498,683.07 742.057,683.07 742.617,683.07 743.176,683.07 743.735,683.07 744.294,683.07 744.854,683.07 745.413,683.07 745.972,683.07 746.531,683.07 747.091,683.07 747.65,683.07 748.209,683.07 748.768,683.07 749.328,683.07 749.887,683.07 750.446,683.07 751.005,683.07 751.565,683.07 752.124,683.07 752.683,683.07 753.242,683.07 753.802,683.07 754.361,683.07 754.92,683.07 755.479,683.07 756.039,683.07 756.598,683.07 757.157,683.07 757.716,683.07 758.276,683.07 758.835,683.07 759.394,683.07 759.953,683.07 760.513,683.07 761.072,683.07 761.631,683.07 762.19,683.07 762.75,683.07 763.309,683.07 763.868,683.07 764.427,683.07 764.987,683.07 765.546,683.07 766.105,683.07 766.664,683.07 767.224,683.07 767.783,683.07 768.342,683.07 768.901,683.07 769.461,683.07 770.02,683.07 770.579,683.07 771.138,683.07 771.698,683.07 772.257,683.07 772.816,683.07 773.375,683.07 773.935,683.07 774.494,683.07 775.053,683.07 775.612,683.07 776.172,683.07 776.731,683.07 777.29,683.07 777.849,683.07 778.409,683.07 778.968,683.07 779.527,683.07 780.086,683.07 780.646,683.07 781.205,683.07 781.764,683.07 782.323,683.07 782.883,683.07 783.442,683.07 784.001,683.07 784.56,683.07 785.12,683.07 785.679,683.07 786.238,683.07 786.797,683.07 787.357,683.07 787.916,683.07 788.475,683.07 789.034,683.07 789.594,683.07 790.153,683.07 790.712,683.07 791.271,683.07 791.831,683.07 792.39,683.07 792.949,683.07 793.508,683.07 794.068,683.07 794.627,683.07 795.186,683.07 795.745,683.07 796.305,683.07 796.864,683.07 797.423,683.07 797.982,683.07 798.542,683.07 799.101,683.07 799.66,683.07 800.219,683.07 800.779,683.07 801.338,683.07 801.897,683.07 802.456,683.07 803.016,683.07 803.575,683.07 804.134,683.07 804.693,683.07 805.253,683.07 805.812,683.07 806.371,683.07 806.931,683.07 807.49,683.07 808.049,683.07 808.608,683.07 809.168,683.07 809.727,683.07 810.286,683.07 810.845,683.07 811.405,683.07 811.964,683.07 812.523,683.07 813.082,683.07 813.642,683.07 814.201,683.07 814.76,683.07 815.319,683.07 815.879,683.07 816.438,683.07 816.997,683.07 817.556,683.07 818.116,683.07 818.675,683.07 819.234,683.07 819.793,683.07 820.353,683.07 820.912,683.07 821.471,683.07 822.03,683.07 822.59,683.07 823.149,683.07 823.708,683.07 824.267,683.07 824.827,683.07 825.386,683.07 825.945,683.07 826.504,683.07 827.064,683.07 827.623,683.07 828.182,683.07 828.741,683.07 829.301,683.07 829.86,683.07 830.419,683.07 830.978,683.07 831.538,683.07 832.097,683.07 832.656,683.07 833.215,683.07 833.775,683.07 834.334,683.07 834.893,683.07 835.452,683.07 836.012,683.07 836.571,683.07 837.13,683.07 837.689,683.07 838.249,683.07 838.808,683.07 839.367,683.07 839.926,683.07 840.486,683.07 841.045,683.07 841.604,683.07 842.163,683.07 842.723,683.07 843.282,683.07 843.841,683.07 844.4,683.07 844.96,683.07 845.519,683.07 846.078,683.07 846.637,683.07 847.197,683.07 847.756,683.07 848.315,683.07 848.874,683.07 849.434,683.07 849.993,683.07 850.552,683.07 851.111,683.07 851.671,683.07 852.23,683.07 852.789,683.07 853.348,683.07 853.908,683.07 854.467,683.07 855.026,683.07 855.585,683.07 856.145,683.07 856.704,683.07 857.263,683.07 857.822,683.07 858.382,683.07 858.941,683.07 859.5,683.07 860.059,683.07 860.619,683.07 861.178,683.07 861.737,683.07 862.296,683.07 862.856,683.07 863.415,683.07 863.974,683.07 864.533,683.07 865.093,683.07 865.652,683.07 866.211,683.07 866.77,683.07 867.33,683.07 867.889,683.07 868.448,683.07 869.007,683.07 869.567,683.07 870.126,683.07 870.685,683.07 871.244,683.07 871.804,683.07 872.363,683.07 872.922,683.07 873.481,683.07 874.041,683.07 874.6,683.07 875.159,683.07 875.718,683.07 876.278,683.07 876.837,683.07 877.396,683.07 877.955,683.07 878.515,683.07 879.074,683.07 879.633,683.07 880.192,683.07 880.752,683.07 881.311,683.07 881.87,683.07 882.429,683.07 882.989,683.07 883.548,683.07 884.107,683.07 884.666,683.07 885.226,683.07 885.785,683.07 886.344,683.07 886.903,683.07 887.463,683.07 888.022,683.07 888.581,683.07 889.14,683.07 889.7,683.07 890.259,683.07 890.818,683.07 891.377,683.07 891.937,683.07 892.496,683.07 893.055,683.07 893.614,683.07 894.174,683.07 894.733,683.07 895.292,683.07 895.851,683.07 896.411,683.07 896.97,683.07 897.529,683.07 898.088,683.07 898.648,683.07 899.207,683.07 899.766,683.07 900.325,683.07 900.885,683.07 901.444,683.07 902.003,683.07 902.562,683.07 903.122,683.07 903.681,683.07 904.24,683.07 904.799,683.07 905.359,683.07 905.918,683.07 906.477,683.07 907.036,683.07 907.596,683.07 908.155,683.07 908.714,683.07 909.273,683.07 909.833,683.07 910.392,683.07 910.951,683.07 911.51,683.07 912.07,683.07 912.629,683.07 913.188,683.07 913.747,683.07 914.307,683.07 914.866,683.07 915.425,683.07 915.984,683.07 916.544,683.07 917.103,683.07 917.662,683.07 918.221,683.07 918.781,683.07 919.34,683.07 919.899,683.07 920.458,683.07 921.018,683.07 921.577,683.07 922.136,683.07 922.695,683.07 923.255,683.07 923.814,683.07 924.373,683.07 924.932,683.07 925.492,683.07 926.051,683.07 926.61,683.07 927.169,683.07 927.729,683.07 928.288,683.07 928.847,683.07 929.406,683.07 929.966,683.07 930.525,683.07 931.084,683.07 931.644,683.07 932.203,683.07 932.762,683.07 933.321,683.07 933.881,683.07 934.44,683.07 934.999,683.07 935.558,683.07 936.118,683.07 936.677,683.07 937.236,683.07 937.795,683.07 938.355,683.07 938.914,683.07 939.473,683.07 940.032,683.07 940.592,683.07 941.151,683.07 941.71,683.07 942.269,683.07 942.829,683.07 943.388,683.07 943.947,683.07 944.506,683.07 945.066,683.07 945.625,683.07 946.184,683.07 946.743,683.07 947.303,683.07 947.862,683.07 948.421,683.07 948.98,683.07 949.54,683.07 950.099,683.07 950.658,683.07 951.217,683.07 951.777,683.07 952.336,683.07 952.895,683.07 953.454,683.07 954.014,683.07 954.573,683.07 955.132,683.07 955.691,683.07 956.251,683.07 956.81,683.07 957.369,683.07 957.928,683.07 958.488,683.07 959.047,683.07 959.606,683.07 960.165,683.07 960.725,683.07 961.284,683.07 961.843,683.07 962.402,683.07 962.962,683.07 963.521,683.07 964.08,683.07 964.639,683.07 965.199,683.07 965.758,683.07 966.317,683.07 966.876,683.07 967.436,683.07 967.995,683.07 968.554,683.07 969.113,683.07 969.673,683.07 970.232,683.07 970.791,683.07 971.35,683.07 971.91,683.07 972.469,683.07 973.028,683.07 973.587,683.07 974.147,683.07 974.706,683.07 975.265,683.07 975.824,683.07 976.384,683.07 976.943,683.07 977.502,683.07 978.061,683.07 978.621,683.07 979.18,683.07 979.739,683.07 980.298,683.07 980.858,683.07 981.417,683.07 981.976,683.07 982.535,683.07 983.095,683.07 983.654,683.07 984.213,683.07 984.772,683.07 985.332,683.07 985.891,683.07 986.45,683.07 987.009,683.07 987.569,683.07 988.128,683.07 988.687,683.07 989.246,683.07 989.806,683.07 990.365,683.07 990.924,683.07 991.483,683.07 992.043,683.07 992.602,683.07 993.161,683.07 993.72,683.07 994.28,683.07 994.839,683.07 995.398,683.07 995.957,683.07 996.517,683.07 997.076,683.07 997.635,683.07 998.194,683.07 998.754,683.07 999.313,683.07 999.872,683.07 1000.43,683.07 1000.99,683.07 1001.55,683.07 1002.11,683.07 1002.67,683.07 1003.23,683.07 1003.79,683.07 1004.35,683.07 1004.91,683.07 1005.46,683.07 1006.02,683.07 1006.58,683.07 1007.14,683.07 1007.7,683.07 1008.26,683.07 1008.82,683.07 1009.38,683.07 1009.94,683.07 1010.5,683.07 1011.06,683.07 1011.62,683.07 1012.18,683.07 1012.73,683.07 1013.29,683.07 1013.85,683.07 1014.41,683.07 1014.97,683.07 1015.53,683.07 1016.09,683.07 1016.65,683.07 1017.21,683.07 1017.77,683.07 1018.33,683.07 1018.89,683.07 1019.45,683.07 1020.01,683.07 1020.56,683.07 1021.12,683.07 1021.68,683.07 1022.24,683.07 1022.8,683.07 1023.36,683.07 1023.92,683.07 1024.48,683.07 1025.04,683.07 1025.6,683.07 1026.16,683.07 1026.72,683.07 1027.28,683.07 1027.83,683.07 1028.39,683.07 1028.95,683.07 1029.51,683.07 1030.07,683.07 1030.63,683.07 1031.19,683.07 1031.75,683.07 1032.31,683.07 1032.87,683.07 1033.43,683.07 1033.99,683.07 1034.55,683.07 1035.1,683.07 1035.66,683.07 1036.22,683.07 1036.78,683.07 1037.34,683.07 1037.9,683.07 1038.46,683.07 1039.02,683.07 1039.58,683.07 1040.14,683.07 1040.7,683.07 1041.26,683.07 1041.82,683.07 1042.38,683.07 1042.93,683.07 1043.49,683.07 1044.05,683.07 1044.61,683.07 1045.17,683.07 1045.73,683.07 1046.29,683.07 1046.85,683.07 1047.41,683.07 1047.97,683.07 1048.53,683.07 1049.09,683.07 1049.65,683.07 1050.2,683.07 1050.76,683.07 1051.32,683.07 1051.88,683.07 1052.44,683.07 1053,683.07 1053.56,683.07 1054.12,683.07 1054.68,683.07 1055.24,683.07 1055.8,683.07 1056.36,683.07 1056.92,683.07 1057.48,683.07 1058.03,683.07 1058.59,683.07 1059.15,683.07 1059.71,683.07 1060.27,683.07 1060.83,683.07 1061.39,683.07 1061.95,683.07 1062.51,683.07 1063.07,683.07 1063.63,683.07 1064.19,683.07 1064.75,683.07 1065.3,683.07 1065.86,683.07 1066.42,683.07 1066.98,683.07 1067.54,683.07 1068.1,683.07 1068.66,683.07 1069.22,683.07 1069.78,683.07 1070.34,683.07 1070.9,683.07 1071.46,683.07 1072.02,683.07 1072.57,683.07 1073.13,683.07 1073.69,683.07 1074.25,683.07 1074.81,683.07 1075.37,683.07 1075.93,683.07 1076.49,683.07 1077.05,683.07 1077.61,683.07 1078.17,683.07 1078.73,683.07 1079.29,683.07 1079.85,683.07 1080.4,683.07 1080.96,683.07 1081.52,683.07 1082.08,683.07 1082.64,683.07 1083.2,683.07 1083.76,683.07 1084.32,683.07 1084.88,683.07 1085.44,683.07 1086,683.07 1086.56,683.07 1087.12,683.07 1087.67,683.07 1088.23,683.07 1088.79,683.07 1089.35,683.07 1089.91,683.07 1090.47,683.07 1091.03,683.07 1091.59,683.07 1092.15,683.07 1092.71,683.07 1093.27,683.07 1093.83,683.07 1094.39,683.07 1094.94,683.07 1095.5,683.07 1096.06,683.07 1096.62,683.07 1097.18,683.07 1097.74,683.07 1098.3,683.07 1098.86,683.07 1099.42,683.07 1099.98,683.07 1100.54,683.07 1101.1,683.07 1101.66,683.07 1102.22,683.07 1102.77,683.07 1103.33,683.07 1103.89,683.07 1104.45,683.07 1105.01,683.07 1105.57,683.07 1106.13,683.07 1106.69,683.07 1107.25,683.07 1107.81,683.07 1108.37,683.07 1108.93,683.07 1109.49,683.07 1110.04,683.07 1110.6,683.07 1111.16,683.07 1111.72,683.07 1112.28,683.07 1112.84,683.07 1113.4,683.07 1113.96,683.07 1114.52,683.07 1115.08,683.07 1115.64,683.07 1116.2,683.07 1116.76,683.07 1117.31,683.07 1117.87,683.07 1118.43,683.07 1118.99,683.07 1119.55,683.07 1120.11,683.07 1120.67,683.07 1121.23,683.07 1121.79,683.07 1122.35,683.07 1122.91,683.07 1123.47,683.07 1124.03,683.07 1124.59,683.07 1125.14,683.07 1125.7,683.07 1126.26,683.07 1126.82,683.07 1127.38,683.07 1127.94,683.07 1128.5,683.07 1129.06,683.07 1129.62,683.07 1130.18,683.07 1130.74,683.07 1131.3,683.07 1131.86,683.07 1132.41,683.07 1132.97,683.07 1133.53,683.07 1134.09,683.07 1134.65,683.07 1135.21,683.07 1135.77,683.07 1136.33,683.07 1136.89,683.07 1137.45,683.07 1138.01,683.07 1138.57,683.07 1139.13,683.07 1139.68,683.07 1140.24,683.07 1140.8,683.07 1141.36,683.07 1141.92,683.07 1142.48,683.07 1143.04,683.07 1143.6,683.07 1144.16,683.07 1144.72,683.07 1145.28,683.07 1145.84,683.07 1146.4,683.07 1146.96,683.07 1147.51,683.07 1148.07,683.07 1148.63,683.07 1149.19,683.07 1149.75,683.07 1150.31,683.07 1150.87,683.07 1151.43,683.07 1151.99,683.07 1152.55,683.07 1153.11,683.07 1153.67,683.07 1154.23,683.07 1154.78,683.07 1155.34,683.07 1155.9,683.07 1156.46,683.07 1157.02,683.07 1157.58,683.07 1158.14,683.07 1158.7,683.07 1159.26,683.07 1159.82,683.07 1160.38,683.07 1160.94,683.07 1161.5,683.07 1162.05,683.07 1162.61,683.07 1163.17,683.07 1163.73,683.07 1164.29,683.07 1164.85,683.07 1165.41,683.07 1165.97,683.07 1166.53,683.07 1167.09,683.07 1167.65,683.07 1168.21,683.07 1168.77,683.07 1169.33,683.07 1169.88,683.07 1170.44,683.07 1171,683.07 1171.56,683.07 1172.12,683.07 1172.68,683.07 1173.24,683.07 1173.8,683.07 1174.36,683.07 1174.92,683.07 1175.48,683.07 1176.04,683.07 1176.6,683.07 1177.15,683.07 1177.71,683.07 1178.27,683.07 1178.83,683.07 1179.39,683.07 1179.95,683.07 1180.51,683.07 1181.07,683.07 1181.63,683.07 1182.19,683.07 1182.75,683.07 1183.31,683.07 1183.87,683.07 1184.43,683.07 1184.98,683.07 1185.54,683.07 1186.1,683.07 1186.66,683.07 1187.22,683.07 1187.78,683.07 1188.34,683.07 1188.9,683.07 1189.46,683.07 1190.02,683.07 1190.58,683.07 1191.14,683.07 1191.7,683.07 1192.25,683.07 1192.81,683.07 1193.37,683.07 1193.93,683.07 1194.49,683.07 1195.05,683.07 1195.61,683.07 1196.17,683.07 1196.73,683.07 1197.29,683.07 1197.85,683.07 1198.41,683.07 1198.97,683.07 1199.52,683.07 1200.08,683.07 1200.64,683.07 1201.2,683.07 1201.76,683.07 1202.32,683.07 1202.88,683.07 1203.44,683.07 1204,683.07 1204.56,683.07 1205.12,683.07 1205.68,683.07 1206.24,683.07 1206.8,683.07 1207.35,683.07 1207.91,683.07 1208.47,683.07 1209.03,683.07 1209.59,683.07 1210.15,683.07 1210.71,683.07 1211.27,683.07 1211.83,683.07 1212.39,683.07 1212.95,683.07 1213.51,683.07 1214.07,683.07 1214.62,683.07 1215.18,683.07 1215.74,683.07 1216.3,683.07 1216.86,683.07 1217.42,683.07 1217.98,683.07 1218.54,683.07 1219.1,683.07 1219.66,683.07 1220.22,683.07 1220.78,683.07 1221.34,683.07 1221.89,683.07 1222.45,683.07 1223.01,683.07 1223.57,683.07 1224.13,683.07 1224.69,683.07 1225.25,683.07 1225.81,683.07 1226.37,683.07 1226.93,683.07 1227.49,683.07 1228.05,683.07 1228.61,683.07 1229.17,683.07 1229.72,683.07 1230.28,683.07 1230.84,683.07 1231.4,683.07 1231.96,683.07 1232.52,683.07 1233.08,683.07 1233.64,683.07 1234.2,683.07 1234.76,683.07 1235.32,683.07 1235.88,683.07 1236.44,683.07 1236.99,683.07 1237.55,683.07 1238.11,683.07 1238.67,683.07 1239.23,683.07 1239.79,683.07 1240.35,683.07 1240.91,683.07 1241.47,683.07 1242.03,683.07 1242.59,683.07 1243.15,683.07 1243.71,683.07 1244.26,683.07 1244.82,683.07 1245.38,683.07 1245.94,683.07 1246.5,683.07 1247.06,683.07 1247.62,683.07 1248.18,683.07 1248.74,683.07 1249.3,683.07 1249.86,683.07 1250.42,683.07 1250.98,683.07 1251.54,683.07 1252.09,683.07 1252.65,683.07 1253.21,683.07 1253.77,683.07 1254.33,683.07 1254.89,683.07 1255.45,683.07 1256.01,683.07 1256.57,683.07 1257.13,683.07 1257.69,683.07 1258.25,683.07 1258.81,683.07 1259.36,683.07 1259.92,683.07 1260.48,683.07 1261.04,683.07 1261.6,683.07 1262.16,683.07 1262.72,683.07 1263.28,683.07 1263.84,683.07 1264.4,683.07 1264.96,683.07 1265.52,683.07 1266.08,683.07 1266.63,683.07 1267.19,683.07 1267.75,683.07 1268.31,683.07 1268.87,683.07 1269.43,683.07 1269.99,683.07 1270.55,683.07 1271.11,683.07 1271.67,683.07 1272.23,683.07 1272.79,683.07 1273.35,683.07 1273.91,683.07 1274.46,683.07 1275.02,683.07 1275.58,683.07 1276.14,683.07 1276.7,683.07 1277.26,683.07 1277.82,683.07 1278.38,683.07 1278.94,683.07 1279.5,683.07 1280.06,683.07 1280.62,683.07 1281.18,683.07 1281.73,683.07 1282.29,683.07 1282.85,683.07 1283.41,683.07 1283.97,683.07 1284.53,683.07 1285.09,683.07 1285.65,683.07 1286.21,683.07 1286.77,683.07 1287.33,683.07 1287.89,683.07 1288.45,683.07 1289,683.07 1289.56,683.07 1290.12,683.07 1290.68,683.07 1291.24,683.07 1291.8,683.07 1292.36,683.07 1292.92,683.07 1293.48,683.07 1294.04,683.07 1294.6,683.07 1295.16,683.07 1295.72,683.07 1296.28,683.07 1296.83,683.07 1297.39,683.07 1297.95,683.07 1298.51,683.07 1299.07,683.07 1299.63,683.07 1300.19,683.07 1300.75,683.07 1301.31,683.07 1301.87,683.07 1302.43,683.07 1302.99,683.07 1303.55,683.07 1304.1,683.07 1304.66,683.07 1305.22,683.07 1305.78,683.07 1306.34,683.07 1306.9,683.07 1307.46,683.07 1308.02,683.07 1308.58,683.07 1309.14,683.07 1309.7,683.07 1310.26,683.07 1310.82,683.07 1311.38,683.07 1311.93,683.07 1312.49,683.07 1313.05,683.07 1313.61,683.07 1314.17,683.07 1314.73,683.07 1315.29,683.07 1315.85,683.07 1316.41,683.07 1316.97,683.07 1317.53,683.07 1318.09,683.07 1318.65,683.07 1319.2,683.07 1319.76,683.07 1320.32,683.07 1320.88,683.07 1321.44,683.07 1322,683.07 1322.56,683.07 1323.12,683.07 1323.68,683.07 1324.24,683.07 1324.8,683.07 1325.36,683.07 1325.92,683.07 1326.47,683.07 1327.03,683.07 1327.59,683.07 1328.15,683.07 1328.71,683.07 1329.27,683.07 1329.83,683.07 1330.39,683.07 1330.95,683.07 1331.51,683.07 1332.07,683.07 1332.63,683.07 1333.19,683.07 1333.75,683.07 1334.3,683.07 1334.86,683.07 1335.42,683.07 1335.98,683.07 1336.54,683.07 1337.1,683.07 1337.66,683.07 1338.22,683.07 1338.78,683.07 1339.34,683.07 1339.9,683.07 1340.46,683.07 1341.02,683.07 1341.57,683.07 1342.13,683.07 1342.69,683.07 1343.25,683.07 1343.81,683.07 1344.37,683.07 1344.93,683.07 1345.49,683.07 1346.05,683.07 1346.61,683.07 1347.17,683.07 1347.73,683.07 1348.29,683.07 1348.84,683.07 1349.4,683.07 1349.96,683.07 1350.52,683.07 1351.08,683.07 1351.64,683.07 1352.2,683.07 1352.76,683.07 1353.32,683.07 1353.88,683.07 1354.44,683.07 1355,683.07 1355.56,683.07 1356.12,683.07 1356.67,683.07 1357.23,683.07 1357.79,683.07 1358.35,683.07 1358.91,683.07 1359.47,683.07 1360.03,683.07 1360.59,683.07 1361.15,683.07 1361.71,683.07 1362.27,683.07 1362.83,683.07 1363.39,683.07 1363.94,683.07 1364.5,683.07 1365.06,683.07 1365.62,683.07 1366.18,683.07 1366.74,683.07 1367.3,683.07 1367.86,683.07 1368.42,683.07 1368.98,683.07 1369.54,683.07 1370.1,683.07 1370.66,683.07 1371.21,683.07 1371.77,683.07 1372.33,683.07 1372.89,683.07 1373.45,683.07 1374.01,683.07 1374.57,683.07 1375.13,683.07 1375.69,683.07 1376.25,683.07 1376.81,683.07 1377.37,683.07 1377.93,683.07 1378.49,683.07 1379.04,683.07 1379.6,683.07 1380.16,683.07 1380.72,683.07 1381.28,683.07 1381.84,683.07 1382.4,683.07 1382.96,683.07 1383.52,683.07 1384.08,683.07 1384.64,683.07 1385.2,683.07 1385.76,683.07 1386.31,683.07 1386.87,683.07 1387.43,683.07 1387.99,683.07 1388.55,683.07 1389.11,683.07 1389.67,683.07 1390.23,683.07 1390.79,683.07 1391.35,683.07 1391.91,683.07 1392.47,683.07 1393.03,683.07 1393.58,683.07 1394.14,683.07 1394.7,683.07 1395.26,683.07 1395.82,683.07 1396.38,683.07 1396.94,683.07 1397.5,683.07 1398.06,683.07 1398.62,683.07 1399.18,683.07 1399.74,683.07 1400.3,683.07 1400.86,683.07 1401.41,683.07 1401.97,683.07 1402.53,683.07 1403.09,683.07 1403.65,683.07 1404.21,683.07 1404.77,683.07 1405.33,683.07 1405.89,683.07 1406.45,683.07 1407.01,683.07 1407.57,683.07 1408.13,683.07 1408.68,683.07 1409.24,683.07 1409.8,683.07 1410.36,683.07 1410.92,683.07 1411.48,683.07 1412.04,683.07 1412.6,683.07 1413.16,683.07 1413.72,683.07 1414.28,683.07 1414.84,683.07 1415.4,683.07 1415.95,683.07 1416.51,683.07 1417.07,683.07 1417.63,683.07 1418.19,683.07 1418.75,683.07 1419.31,683.07 1419.87,683.07 1420.43,683.07 1420.99,683.07 1421.55,683.07 1422.11,683.07 1422.67,683.07 1423.23,683.07 1423.78,683.07 1424.34,683.07 1424.9,683.07 1425.46,683.07 1426.02,683.07 1426.58,683.07 1427.14,683.07 1427.7,683.07 1428.26,683.07 1428.82,683.07 1429.38,683.07 1429.94,683.07 1430.5,683.07 1431.05,683.07 1431.61,683.07 1432.17,683.07 1432.73,683.07 1433.29,683.07 1433.85,683.07 1434.41,683.07 1434.97,683.07 1435.53,683.07 1436.09,683.07 1436.65,683.07 1437.21,683.07 1437.77,683.07 1438.33,683.07 1438.88,683.07 1439.44,683.07 1440,683.07 1440.56,683.07 1441.12,683.07 1441.68,683.07 1442.24,683.07 1442.8,683.07 1443.36,683.07 1443.92,683.07 1444.48,683.07 1445.04,683.07 1445.6,683.07 1446.15,683.07 1446.71,683.07 1447.27,683.07 1447.83,683.07 1448.39,683.07 1448.95,683.07 1449.51,683.07 1450.07,683.07 1450.63,683.07 1451.19,683.07 1451.75,683.07 1452.31,683.07 1452.87,683.07 1453.42,683.07 1453.98,683.07 1454.54,683.07 1455.1,683.07 1455.66,683.07 1456.22,683.07 1456.78,683.07 1457.34,683.07 1457.9,683.07 1458.46,683.07 1459.02,683.07 1459.58,683.07 1460.14,683.07 1460.7,683.07 1461.25,683.07 1461.81,683.07 1462.37,683.07 1462.93,683.07 1463.49,683.07 1464.05,683.07 1464.61,683.07 1465.17,683.07 1465.73,683.07 1466.29,683.07 1466.85,683.07 1467.41,683.07 1467.97,683.07 1468.52,683.07 1469.08,683.07 1469.64,683.07 1470.2,683.07 1470.76,683.07 1471.32,683.07 1471.88,683.07 1472.44,683.07 1473,683.07 1473.56,683.07 1474.12,683.07 1474.68,683.07 1475.24,683.07 1475.79,683.07 1476.35,683.07 1476.91,683.07 1477.47,683.07 1478.03,683.07 1478.59,683.07 1479.15,683.07 1479.71,683.07 1480.27,683.07 1480.83,683.07 1481.39,683.07 1481.95,683.07 1482.51,683.07 1483.07,683.07 1483.62,683.07 1484.18,683.07 1484.74,683.07 1485.3,683.07 1485.86,683.07 1486.42,683.07 1486.98,683.07 1487.54,683.07 1488.1,683.07 1488.66,683.07 1489.22,683.07 1489.78,683.07 1490.34,683.07 1490.89,683.07 1491.45,683.07 1492.01,683.07 1492.57,683.07 1493.13,683.07 1493.69,683.07 1494.25,683.07 1494.81,683.07 1495.37,683.07 1495.93,683.07 1496.49,683.07 1497.05,683.07 1497.61,683.07 1498.16,683.07 1498.72,683.07 1499.28,683.07 1499.84,683.07 1500.4,683.07 1500.96,683.07 1501.52,683.07 1502.08,683.07 1502.64,683.07 1503.2,683.07 1503.76,683.07 1504.32,683.07 1504.88,683.07 1505.44,683.07 1505.99,683.07 1506.55,683.07 1507.11,683.07 1507.67,683.07 1508.23,683.07 1508.79,683.07 1509.35,683.07 1509.91,683.07 1510.47,683.07 1511.03,683.07 1511.59,683.07 1512.15,683.07 1512.71,683.07 1513.26,683.07 1513.82,683.07 1514.38,683.07 1514.94,683.07 1515.5,683.07 1516.06,683.07 1516.62,683.07 1517.18,683.07 1517.74,683.07 1518.3,683.07 1518.86,683.07 1519.42,683.07 1519.98,683.07 1520.53,683.07 1521.09,683.07 1521.65,683.07 1522.21,683.07 1522.77,683.07 1523.33,683.07 1523.89,683.07 1524.45,683.07 1525.01,683.07 1525.57,683.07 1526.13,683.07 1526.69,683.07 1527.25,683.07 1527.81,683.07 1528.36,683.07 1528.92,683.07 1529.48,683.07 1530.04,683.07 1530.6,683.07 1531.16,683.07 1531.72,683.07 1532.28,683.07 1532.84,683.07 1533.4,683.07 1533.96,683.07 1534.52,683.07 1535.08,683.07 1535.63,683.07 1536.19,683.07 1536.75,683.07 1537.31,683.07 1537.87,683.07 1538.43,683.07 1538.99,683.07 1539.55,683.07 1540.11,683.07 1540.67,683.07 1541.23,683.07 1541.79,683.07 1542.35,683.07 1542.9,683.07 1543.46,683.07 1544.02,683.07 1544.58,683.07 1545.14,683.07 1545.7,683.07 1546.26,683.07 1546.82,683.07 1547.38,683.07 1547.94,683.07 1548.5,683.07 1549.06,683.07 1549.62,683.07 1550.18,683.07 1550.73,683.07 1551.29,683.07 1551.85,683.07 1552.41,683.07 1552.97,683.07 1553.53,683.07 1554.09,683.07 1554.65,683.07 1555.21,683.07 1555.77,683.07 1556.33,683.07 1556.89,683.07 1557.45,683.07 1558,683.07 1558.56,683.07 1559.12,683.07 1559.68,683.07 1560.24,683.07 1560.8,683.07 1561.36,683.07 1561.92,683.07 1562.48,683.07 1563.04,683.07 1563.6,683.07 1564.16,683.07 1564.72,683.07 1565.28,683.07 1565.83,683.07 1566.39,683.07 1566.95,683.07 1567.51,683.07 1568.07,683.07 1568.63,683.07 1569.19,683.07 1569.75,683.07 1570.31,683.07 1570.87,683.07 1571.43,683.07 1571.99,683.07 1572.55,683.07 1573.1,683.07 1573.66,683.07 1574.22,683.07 1574.78,683.07 1575.34,683.07 1575.9,683.07 1576.46,683.07 1577.02,683.07 1577.58,683.07 1578.14,683.07 1578.7,683.07 1579.26,683.07 1579.82,683.07 1580.37,683.07 1580.93,683.07 1581.49,683.07 1582.05,683.07 1582.61,683.07 1583.17,683.07 1583.73,683.07 1584.29,683.07 1584.85,683.07 1585.41,683.07 1585.97,683.07 1586.53,683.07 1587.09,683.07 1587.65,683.07 1588.2,683.07 1588.76,683.07 1589.32,683.07 1589.88,683.07 1590.44,683.07 1591,683.07 1591.56,683.07 1592.12,683.07 1592.68,683.07 1593.24,683.07 1593.8,683.07 1594.36,683.07 1594.92,683.07 1595.47,683.07 1596.03,683.07 1596.59,683.07 1597.15,683.07 1597.71,683.07 1598.27,683.07 1598.83,683.07 1599.39,683.07 1599.95,683.07 1600.51,683.07 1601.07,683.07 1601.63,683.07 1602.19,683.07 1602.74,683.07 1603.3,683.07 1603.86,683.07 1604.42,683.07 1604.98,683.07 1605.54,683.07 1606.1,683.07 1606.66,683.07 1607.22,683.07 1607.78,683.07 1608.34,683.07 1608.9,683.07 1609.46,683.07 1610.02,683.07 1610.57,683.07 1611.13,683.07 1611.69,683.07 1612.25,683.07 1612.81,683.07 1613.37,683.07 1613.93,683.07 1614.49,683.07 1615.05,683.07 1615.61,683.07 1616.17,683.07 1616.73,683.07 1617.29,683.07 1617.84,683.07 1618.4,683.07 1618.96,683.07 1619.52,683.07 1620.08,683.07 1620.64,683.07 1621.2,683.07 1621.76,683.07 1622.32,683.07 1622.88,683.07 1623.44,683.07 1624,683.07 1624.56,683.07 1625.11,683.07 1625.67,683.07 1626.23,683.07 1626.79,683.07 1627.35,683.07 1627.91,683.07 1628.47,683.07 1629.03,683.07 1629.59,683.07 1630.15,683.07 1630.71,683.07 1631.27,683.07 1631.83,683.07 1632.39,683.07 1632.94,683.07 1633.5,683.07 1634.06,683.07 1634.62,683.07 1635.18,683.07 1635.74,683.07 1636.3,683.07 1636.86,683.07 1637.42,683.07 1637.98,683.07 1638.54,683.07 1639.1,683.07 1639.66,683.07 1640.21,683.07 1640.77,683.07 1641.33,683.07 1641.89,683.07 1642.45,683.07 1643.01,683.07 1643.57,683.07 1644.13,683.07 1644.69,683.07 1645.25,683.07 1645.81,683.07 1646.37,683.07 1646.93,683.07 1647.48,683.07 1648.04,683.07 1648.6,683.07 1649.16,683.07 1649.72,683.07 1650.28,683.07 1650.84,683.07 1651.4,683.07 1651.96,683.07 1652.52,683.07 1653.08,683.07 1653.64,683.07 1654.2,683.07 1654.76,683.07 1655.31,683.07 1655.87,683.07 1656.43,683.07 1656.99,683.07 1657.55,683.07 1658.11,683.07 1658.67,683.07 1659.23,683.07 1659.79,683.07 1660.35,683.07 1660.91,683.07 1661.47,683.07 1662.03,683.07 1662.58,683.07 1663.14,683.07 1663.7,683.07 1664.26,683.07 1664.82,683.07 1665.38,683.07 1665.94,683.07 1666.5,683.07 1667.06,683.07 1667.62,683.07 1668.18,683.07 1668.74,683.07 1669.3,683.07 1669.85,683.07 1670.41,683.07 1670.97,683.07 1671.53,683.07 1672.09,683.07 1672.65,683.07 1673.21,683.07 1673.77,683.07 1674.33,683.07 1674.89,683.07 1675.45,683.07 1676.01,683.07 1676.57,683.07 1677.13,683.07 1677.68,683.07 1678.24,683.07 1678.8,683.07 1679.36,683.07 1679.92,683.07 1680.48,683.07 1681.04,683.07 1681.6,683.07 1682.16,683.07 1682.72,683.07 1683.28,683.07 1683.84,683.07 1684.4,683.07 1684.95,683.07 1685.51,683.07 1686.07,683.07 1686.63,683.07 1687.19,683.07 1687.75,683.07 1688.31,683.07 1688.87,683.07 1689.43,683.07 1689.99,683.07 1690.55,683.07 1691.11,683.07 1691.67,683.07 1692.23,683.07 1692.78,683.07 1693.34,683.07 1693.9,683.07 1694.46,683.07 1695.02,683.07 1695.58,683.07 1696.14,683.07 1696.7,683.07 1697.26,683.07 1697.82,683.07 1698.38,683.07 1698.94,683.07 1699.5,683.07 1700.05,683.07 1700.61,683.07 1701.17,683.07 1701.73,683.07 1702.29,683.07 1702.85,683.07 1703.41,683.07 1703.97,683.07 1704.53,683.07 1705.09,683.07 1705.65,683.07 1706.21,683.07 1706.77,683.07 1707.32,683.07 1707.88,683.07 1708.44,683.07 1709,683.07 1709.56,683.07 1710.12,683.07 1710.68,683.07 1711.24,683.07 1711.8,683.07 1712.36,683.07 1712.92,683.07 1713.48,683.07 1714.04,683.07 1714.6,683.07 1715.15,683.07 1715.71,683.07 1716.27,683.07 1716.83,683.07 1717.39,683.07 1717.95,683.07 1718.51,683.07 1719.07,683.07 1719.63,683.07 1720.19,683.07 1720.75,683.07 1721.31,683.07 1721.87,683.07 1722.42,683.07 1722.98,683.07 1723.54,683.07 1724.1,683.07 1724.66,683.07 1725.22,683.07 1725.78,683.07 1726.34,683.07 1726.9,683.07 1727.46,683.07 1728.02,683.07 1728.58,683.07 1729.14,683.07 1729.69,683.07 1730.25,683.07 1730.81,683.07 1731.37,683.07 1731.93,683.07 1732.49,683.07 1733.05,683.07 1733.61,683.07 1734.17,683.07 1734.73,683.07 1735.29,683.07 1735.85,683.07 1736.41,683.07 1736.97,683.07 1737.52,683.07 1738.08,683.07 1738.64,683.07 1739.2,683.07 1739.76,683.07 1740.32,683.07 1740.88,683.07 1741.44,683.07 1742,683.07 1742.56,683.07 1743.12,683.07 1743.68,683.07 1744.24,683.07 1744.79,683.07 1745.35,683.07 1745.91,683.07 1746.47,683.07 1747.03,683.07 1747.59,683.07 1748.15,683.07 1748.71,683.07 1749.27,683.07 1749.83,683.07 1750.39,683.07 1750.95,683.07 1751.51,683.07 1752.06,683.07 1752.62,683.07 1753.18,683.07 1753.74,683.07 1754.3,683.07 1754.86,683.07 1755.42,683.07 1755.98,683.07 1756.54,683.07 1757.1,683.07 1757.66,683.07 1758.22,683.07 1758.78,683.07 1759.34,683.07 1759.89,683.07 1760.45,683.07 1761.01,683.07 1761.57,683.07 1762.13,683.07 1762.69,683.07 1763.25,683.07 1763.81,683.07 1764.37,683.07 1764.93,683.07 1765.49,683.07 1766.05,683.07 1766.61,683.07 1767.16,683.07 1767.72,683.07 1768.28,683.07 1768.84,683.07 1769.4,683.07 1769.96,683.07 1770.52,683.07 1771.08,683.07 1771.64,683.07 1772.2,683.07 1772.76,683.07 1773.32,683.07 1773.88,683.07 1774.43,683.07 1774.99,683.07 1775.55,683.07 1776.11,683.07 1776.67,683.07 1777.23,683.07 1777.79,683.07 1778.35,683.07 1778.91,683.07 1779.47,683.07 1780.03,683.07 1780.59,683.07 1781.15,683.07 1781.71,683.07 1782.26,683.07 1782.82,683.07 1783.38,683.07 1783.94,683.07 1784.5,683.07 1785.06,683.07 1785.62,683.07 1786.18,683.07 1786.74,683.07 1787.3,683.07 1787.86,683.07 1788.42,683.07 1788.98,683.07 1789.53,683.07 1790.09,683.07 1790.65,683.07 1791.21,683.07 1791.77,683.07 1792.33,683.07 1792.89,683.07 1793.45,683.07 1794.01,683.07 1794.57,683.07 1795.13,683.07 1795.69,683.07 1796.25,683.07 1796.8,683.07 1797.36,683.07 1797.92,683.07 1798.48,683.07 1799.04,683.07 1799.6,683.07 1800.16,683.07 1800.72,683.07 1801.28,683.07 1801.84,683.07 1802.4,683.07 1802.96,683.07 1803.52,683.07 1804.08,683.07 1804.63,683.07 1805.19,683.07 1805.75,683.07 1806.31,683.07 1806.87,683.07 1807.43,683.07 1807.99,683.07 1808.55,683.07 1809.11,683.07 1809.67,683.07 1810.23,683.07 1810.79,683.07 1811.35,683.07 1811.9,683.07 1812.46,683.07 1813.02,683.07 1813.58,683.07 1814.14,683.07 1814.7,683.07 1815.26,683.07 1815.82,683.07 1816.38,683.07 1816.94,683.07 1817.5,683.07 1818.06,683.07 1818.62,683.07 1819.18,683.07 1819.73,683.07 1820.29,683.07 1820.85,683.07 1821.41,683.07 1821.97,683.07 1822.53,683.07 1823.09,683.07 1823.65,683.07 1824.21,683.07 1824.77,683.07 1825.33,683.07 1825.89,683.07 1826.45,683.07 1827,683.07 1827.56,683.07 1828.12,683.07 1828.68,683.07 1829.24,683.07 1829.8,683.07 1830.36,683.07 1830.92,683.07 1831.48,683.07 1832.04,683.07 1832.6,683.07 1833.16,683.07 1833.72,683.07 1834.27,683.07 1834.83,683.07 1835.39,683.07 1835.95,683.07 1836.51,683.07 1837.07,683.07 1837.63,683.07 1838.19,683.07 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ¬± $(se.err)\n    Projected Energy: $(v.val) ¬± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.025661918082481 ¬± 0.020351151749251284\nProjected Energy: -4.012494223421111 ¬± (0.005526572295367238, 0.005235617168295015)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from lomc! as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; Œ± = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-Œ±.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ¬± 0.0029\n  with uncertainty of ¬± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13√ó6 DataFrame\n Row ‚îÇ blocks  mean      std_err      std_err_err  p_cov       mj\n     ‚îÇ Int64   Float64   Float64      Float64      Float64     Float64\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n   1 ‚îÇ  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 ‚îÇ   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 ‚îÇ   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 ‚îÇ   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 ‚îÇ    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 ‚îÇ    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 ‚îÇ    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 ‚îÇ     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 ‚îÇ     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 ‚îÇ     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 ‚îÇ      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 ‚îÇ      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 ‚îÇ      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ästd err vs blocking steps‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n               ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n    0.00423501 ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ m test\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ std err\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚°†‚¢∫‚†í‚†í‚¢∫‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚°Ä‚†Ä‚†Ä‚°Ü‚£Ä‚†§‚°ó‚†â‚†Ä‚¢∏‚†Ä‚†Ä‚¢∏‚°Ü‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°ß‚†§‚†î‚°ó‚†ä‚†â‚°è‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚¢∏‚¢£‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚†Å‚°á‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†∏‚°Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†¥‚†Å‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚†Ä‚°á‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚†ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£¶‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°†‚†î‚†í‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚†§‚†í‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†í‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚îÇ\n   -0.00012335 ‚îÇ‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†ß‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚îÇ\n               ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n               ‚†Ä0.64‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Äk‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä13.36‚†Ä\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; Œ± = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; Œ±=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.œÉ_f using x_by_y_linear. The standard error estimate r.œÉ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.Œ¥_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and D√≠az-Franc√©s, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ¬± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*œÉ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3√ó3 DataFrame\n Row ‚îÇ res      res_l    res_u\n     ‚îÇ Float64  Float64  Float64\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n   1 ‚îÇ    11.5  1.7282   1.7282\n   2 ‚îÇ    13.0  1.7282   1.7282\n   3 ‚îÇ    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dœÑ=df.dœÑ[end], skip=0)\n\nCalculate the growth witness directly from a DataFrame returned by lomc!. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0) -> g\ngrowth_witness(df::DataFrame, [b]; skip=0) -> g\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ‚â• 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dœÑ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n) -> r::RatioBlockingResult\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    dœÑ=df.dœÑ[end],\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively. Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dœÑ is the time step and weights a function that calulates the weights. See w_exp() and w_lin().\n\nE_gr = E_r - frac1dœÑln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dœÑ^2) and potentially increased confidence intervals compared to the (biased) shift estimator. Error propagation is done with MonteCarloMeasurements. Progagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a DataFrame returned by lomc!. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator() and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\n-> (;df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"‚ü®S‚ü©\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dœÑ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    dœÑ=df.dœÑ[end],\n    kwargs...\n)\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dœÑ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dœÑ^2) and potentially increased confidence intervals compared to the unweighted ratio. Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame returned by lomc!. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"‚ü®S‚ü©\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(\n    df::DataFrame;\n    skip=0, hproj=:hproj, vproj=:vproj, kwargs...\n) -> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy() to set these up in lomc!()). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dœÑ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame returned by lomc!. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dœÑ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"‚ü®S‚ü©\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...) -> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dœÑ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dœÑ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dœÑ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dœÑ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the result of replica lomc! passed as  argument df, using replicas _1 and _2. Calls ratio_of_means() to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |œà‚ü© and |œï‚ü© is defined as\n\nF(œàœï) = fracœàœï^2œàœàœïœï \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v‚ãÖv == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame version can extract the relevant information from the result of lomc!. Set up lomc! with the keyword argument replica = AllOverlaps(R) and R ‚â• 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.¬±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:¬±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ¬± 0.029\n  with uncertainty of ¬± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.¬±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; Œ± = 0.01) -> k\nmtest(table::NamedTuple; Œ± = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-Œ± after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, œÉ_f, Œ¥_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nœÉ_f::T: std from linear propagation\nŒ¥_y::T: coefficient of variation for denominator (‚â§ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, Œº, œÉ)\nparticles(samples, Œº::AbstractVector, Œ£::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, œÉ_f, Œ¥_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nœÉ_f standard deviation of f from linear error propagation (normal approximation)\nŒ¥_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(Œº_x,Œº_y,œÉ_x,œÉ_y,œÅ) -> f, œÉ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and D√≠az-Franc√©s, Rubio (2013).\n\nœÉ_f = sqrtfracœÉ_xŒº_y^2 + fracŒº_x œÉ_yŒº_y^2^2 - frac2 œÅ Œº_xŒº_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3√ó7 DataFrame\n Row ‚îÇ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     ‚îÇ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n   1 ‚îÇ    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 ‚îÇ    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 ‚îÇ    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1√ó9 DataFrame\n Row ‚îÇ val       val_l      val_u      val_f     val_œÉ_f    val_Œ¥_y    val_k  val_blocks  val_success\n     ‚îÇ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n   1 ‚îÇ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7√ó6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS‚Ä¶</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple‚Ä¶</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.475385</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.4276e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">9.518e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">8.485e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.232e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.625e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">7.835e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ‚â† basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10√ó10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10√ó10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nŒîE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ŒîE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(fs\"|0 0 4 0 0‚ü©\"; u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14√ó14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ          ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ‚ãÖ        0.282843  0.565685   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n   ‚ãÖ        0.8       0.4       0.581966  0.4        ‚ãÖ        0.4        0.282843  0.565685   ‚ãÖ        0.69282   0.69282    ‚ãÖ         ‚ãÖ \n   ‚ãÖ        0.4       0.8       0.4       2.81803   0.4        ‚ãÖ          ‚ãÖ        0.565685  0.282843  0.69282    ‚ãÖ        0.69282    ‚ãÖ \n   ‚ãÖ        0.8       0.4        ‚ãÖ        0.4       0.581966  0.4        0.282843  0.565685   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282\n   ‚ãÖ        0.4       0.8       0.4        ‚ãÖ        0.4       2.81803     ‚ãÖ        0.565685  0.282843   ‚ãÖ        0.69282    ‚ãÖ        0.69282\n   ‚ãÖ        0.565685   ‚ãÖ        0.282843   ‚ãÖ        0.282843   ‚ãÖ        -0.472136  0.8        ‚ãÖ        0.489898   ‚ãÖ         ‚ãÖ        0.489898\n   ‚ãÖ        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ‚ãÖ         ‚ãÖ        0.565685   ‚ãÖ        0.282843   ‚ãÖ        0.282843    ‚ãÖ        0.8       8.47214    ‚ãÖ        0.489898  0.489898   ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    ‚ãÖ         ‚ãÖ         0.489898  0.489898   ‚ãÖ        1.56393    ‚ãÖ         ‚ãÖ         ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282    ‚ãÖ         ‚ãÖ        0.69282     ‚ãÖ        0.489898  0.489898   ‚ãÖ        6.03607    ‚ãÖ         ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    ‚ãÖ          ‚ãÖ        0.489898  0.489898   ‚ãÖ         ‚ãÖ        6.03607    ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    0.489898  0.489898   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0‚ü©\"\n fs\"|0 1 2 1 0‚ü©\"\n fs\"|1 0 2 0 1‚ü©\"\n fs\"|1 0 1 2 0‚ü©\"\n fs\"|0 0 1 1 2‚ü©\"\n fs\"|0 2 1 0 1‚ü©\"\n fs\"|2 1 1 0 0‚ü©\"\n fs\"|0 2 0 2 0‚ü©\"\n fs\"|1 1 0 1 1‚ü©\"\n fs\"|2 0 0 0 2‚ü©\"\n fs\"|0 0 0 3 1‚ü©\"\n fs\"|3 0 0 1 0‚ü©\"\n fs\"|0 1 0 0 3‚ü©\"\n fs\"|1 3 0 0 0‚ü©\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14√ó14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14√ó14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ          ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ‚ãÖ        0.282843  0.565685   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n   ‚ãÖ        0.8       0.4       0.581966  0.4        ‚ãÖ        0.4        0.282843  0.565685   ‚ãÖ        0.69282   0.69282    ‚ãÖ         ‚ãÖ \n   ‚ãÖ        0.4       0.8       0.4       2.81803   0.4        ‚ãÖ          ‚ãÖ        0.565685  0.282843  0.69282    ‚ãÖ        0.69282    ‚ãÖ \n   ‚ãÖ        0.8       0.4        ‚ãÖ        0.4       0.581966  0.4        0.282843  0.565685   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282\n   ‚ãÖ        0.4       0.8       0.4        ‚ãÖ        0.4       2.81803     ‚ãÖ        0.565685  0.282843   ‚ãÖ        0.69282    ‚ãÖ        0.69282\n   ‚ãÖ        0.565685   ‚ãÖ        0.282843   ‚ãÖ        0.282843   ‚ãÖ        -0.472136  0.8        ‚ãÖ        0.489898   ‚ãÖ         ‚ãÖ        0.489898\n   ‚ãÖ        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ‚ãÖ         ‚ãÖ        0.565685   ‚ãÖ        0.282843   ‚ãÖ        0.282843    ‚ãÖ        0.8       8.47214    ‚ãÖ        0.489898  0.489898   ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    ‚ãÖ         ‚ãÖ         0.489898  0.489898   ‚ãÖ        1.56393    ‚ãÖ         ‚ãÖ         ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282    ‚ãÖ         ‚ãÖ        0.69282     ‚ãÖ        0.489898  0.489898   ‚ãÖ        6.03607    ‚ãÖ         ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    ‚ãÖ          ‚ãÖ        0.489898  0.489898   ‚ãÖ         ‚ãÖ        6.03607    ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    0.489898  0.489898   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14√ó14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0‚ü©\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ‚âà all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0‚ü©\" => -0.0214153\n  fs\"|2 0 0 0 2‚ü©\" => -0.00237613\n  fs\"|0 0 4 0 0‚ü©\" => -0.980348\n  fs\"|0 0 0 3 1‚ü©\" => 0.00363555\n  fs\"|2 1 1 0 0‚ü©\" => -0.0119687\n  fs\"|1 0 2 0 1‚ü©\" => 0.0768085\n  fs\"|1 3 0 0 0‚ü©\" => 0.00363555\n  fs\"|0 1 2 1 0‚ü©\" => 0.177701\n  fs\"|0 0 1 1 2‚ü©\" => -0.0119687\n  fs\"|3 0 0 1 0‚ü©\" => 0.00195478\n  fs\"|0 2 0 2 0‚ü©\" => -0.0138439\n  fs\"|1 1 0 1 1‚ü©\" => -0.00234782\n  fs\"|0 1 0 0 3‚ü©\" => 0.00195478\n  fs\"|0 2 1 0 1‚ü©\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i œµ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential œµ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleœÉ t_œÉ a^_iœÉ a_jœÉ +\n  frac12sum_iœÉ u_œÉœÉ n_iœÉ (n_iœÉ - 1) +\n  sum_iœÉœÑu_œÉœÑ n_iœÉ n_iœÑ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iœÉd v_œÉd x_di^2 n_iœÉ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C √ó D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k œµ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k Œ¥_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines œµ_k =t*dispersion(k)\nhubbard_dispersion: œµ_k = -2t cos(k)\ncontinuum_dispersion: œµ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k Œ¥_r+qp+k\n\nArguments\n\naddress: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k œµ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k Œ¥_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines œµ_k =t*dispersion(k)\nhubbard_dispersion: œµ_k = -2t cos(k)\ncontinuum_dispersion: œµ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, Œ∑, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions\n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl\n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x so that single particle energies are\n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl\n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between basis states of any noninteracting energy level, leading to many more offdiagonals and fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The   allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults   to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make   the first dimension the largest.\nŒ∑: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the   interactions. The values are always scaled relative to the first dimension, which sets   the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed   to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are   ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without   comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, Œ∑, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions\n\nhatH = sum_i œµ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x so that single particle energies are\n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator basis functions, see four_oscillator_integral_general, with the additional restriction that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults   to a 1D spectrum with number of levels matching modes of addr. Will be sorted to   make the first dimension the largest.\nŒ∑: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets   the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed   to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are   ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi œµ_mathbfi n_mathbfi\n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x so that single particle energies are\n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix representation of this Hamiltonian for a single particle is completely dense in the even-parity subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nŒ∑s = (): a tuple of aspect ratios for the remaining dimensions (Œ∑_y, ...). Should be empty   for a 1D trap or contain values greater than 1.0. The maximum index   in other dimensions will be the largest even number less than M/Œ∑_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,   including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if   only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of\nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kœÉk^2 n_kœÉ \n    quad + sum_pqkœÉœÉ T_pqk a^_p-kœÉ a^_q+kœÉ a_qœÉ a_pœÉ \n    quad + sum_pqskkœÉœÉ Q_kka^_p-kœÉ a^_q+kœÉ a^_s+k-kœÉ\n                                       a_sœÉ a_qœÉ a_pœÉ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + œâN - v Œ£‚Çñ(a‚Çñ^ + a‚Çñ)\n\nwhere p is the total momentum, p_f = Œ£_k k a‚Çñ^ a‚Çñ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2œÄl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons œâ.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0‚ü©{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M√∑2, M√∑2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M√∑2, M√∑2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(fs\"|1 1 1‚ü©\"; u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(fs\"|1 1 1‚ü©\"; u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address Œ± is replaced by frac12(Œ±  Œ±) for even and odd parity, respectively, where Œ±ÃÑ == reverse(Œ±).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(fs\"|0 2 1‚ü©\"; u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ‚âà eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ‚âà eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ‚â§ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0‚ü©{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ‚â§ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, œÉ=1, œÑ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_œÉœÑ(d) = frac1M _i n_œÉi (n_œÑi+d - Œ¥_0dŒ¥_œÉœÑ)\n\nFor multicomponent addresses, œÉ and œÑ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2√ó2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)√óSOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|‚áÖ‚ãÖ‚Üì‚Üë‚ü©\")\n2√ó2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)√óSOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|‚áÖ‚ãÖ‚Üì‚Üë‚ü©\")\n2√ó2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)√óSOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|‚áÖ‚ãÖ‚Üì‚Üë‚ü©\")\n2√ó2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)√óSOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2œÄM a^_s b^_p  b_q a_r Œ¥_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2œÄM a^_s a^_p  a_q a_r Œ¥_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ‚â§ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ‚â§ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iœÉ = hat a^_iœÉ hat a_iœÉ\n\nwhere i is the mode and œÉ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0‚ü©\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0‚ü©\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x‚ãÖ(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1‚ü©\", -3.0)\n (fs\"|2 2 2‚ü©\", -2.449489742783178)\n (fs\"|3 1 2‚ü©\", -2.0)\n (fs\"|4 1 1‚ü©\", -2.8284271247461903)\n (fs\"|4 2 0‚ü©\", -2.0)\n (fs\"|3 3 0‚ü©\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ‚Ä¶.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb‚ãÖ(1:7) == onr(b)‚ãÖ(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w‚ãÖop(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ‚ãÖ A ‚ãÖ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3√ó4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3√ó4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions,\n\n    mathcalI(ijkl) = int_-infty^infty dx \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function, and is non-zero unless i+j+k+l is odd. See e.g. Titchmarsh (1948). This is a generalisation of the closed form in Papenbrock (2002), which is is the special case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin,\n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state corresponds to a D-tuple of harmonic oscillator indices mathbfn_i. S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of phi_i(0) to speed-up the calculation. The values can be calculated with log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem\nsolve(::ExactDiagonalizationProblem)\ninit(::ExactDiagonalizationProblem)","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1‚ü©\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1‚ü©\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1‚ü©\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ‚âà values[1]\ntrue\n\nSee also solve(::ExactDiagonalizationProblem), init(::ExactDiagonalizationProblem), KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#CommonSolve.solve-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.solve","text":"solve(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nSolve an ExactDiagonalizationProblem p directly. Optionally specify an algorithm. Returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\nSee also solve(::ProjectorMonteCarloProblem).\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#CommonSolve.init-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\n```jldoctest julia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian) BasisSetRepresentation(HubbardReal1D(fs\"|1 0 0‚ü©\"; u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3√ó3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:   0.0  -1.0  -1.0  -1.0   0.0  -1.0  -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating BasisSetRepresentation(HubbardReal1D(fs\"|1 0 0‚ü©\"; u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2√ó2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:   0.0  -1.0  -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues 3-element Vector{Float64}:  -1.9999999999999996   0.9999999999999997   1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector 3-element Vector{Float64}:  -0.5773502691896257  -0.5773502691896255  -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec DVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()   fs\"|0 0 1‚ü©\" => -0.57735   fs\"|0 1 0‚ü©\" => -0.57735   fs\"|1 0 0‚ü©\" => -0.57735   ``Has methods for [dimension](@ref), [sparse](@ref), [Matrix](@ref), [starting_address`](@ref).\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nŒ±mathrmnaddrrangle\n\nReturns the new address naddr and the factor Œ±. The value of Œ± is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0‚ü©\" => 1\n\njulia> fs\"|0 1 2 0‚ü©\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3‚ü©‚äó|0 1 0‚ü©\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|‚Üë‚Üì‚Üë‚ü©\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0‚ü©{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0‚ü©{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ‚â§ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0‚ü©\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4‚ü©\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Œ£_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen)\n\nCompute the new address of a hopping event for the Bose-Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) √∑ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic.\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ‚â§ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|‚ãÖ‚Üë‚Üë‚Üë‚ãÖ‚ü©\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4‚ü©\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|‚Üë‚Üì‚Üì‚ü©\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3‚ü©{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n‚Üí (nadd, Œ±)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of Œ± is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3‚ü©{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, Œ± = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dœÑ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, Œ∂ = 0.08, Œæ = Œ∂^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter Œ∂ and Œæ after projecting onto projector.\n\nS^n+1 = S^n -fracŒ∂dœÑlnleft(fracPŒ®^(n+1)PŒ®^(n)right)-fracŒædœÑlnleft(fracPŒ®^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, Œ∂ = 0.08, Œæ = Œ∂^2/4, Œ± = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters Œ∂ and Œæ.\n\nS^n+1 = S^n -fracŒ∂dœÑlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracŒædœÑlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-Œ±)*walkernumber() + Œ±*UniformProjector()‚ãÖœà computed with walkernumber() and UniformProjector(). When Œæ = Œ∂^2/4 this corresponds to critical damping with a damping time scale T = 2/Œ∂.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, Œ∂ = 0.08, Œæ = Œ∂^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter Œ∂ and Œæ.\n\nS^n+1 = S^n -fracŒ∂dœÑlnleft(fracŒ®_1^n+1Œ®_1^nright)-fracŒædœÑlnleft(fracŒ®_1^n+1Œ®_1^texttargetright)\n\nWhen Œæ = Œ∂^2/4 this corresponds to critical damping with a damping time scale T = 2/Œ∂.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, Œ∂ = 0.08, Œæ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter Œ∂ and Œæ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, Œ∂ = 0.08,   Œæ = Œ∂^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dœÑ) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\nùêì = 1 + dœÑ(S - ùêá)\n\nwhere ùêá is the hamiltonian and S is the shift.\n\nùêì represents the first order expansion of the exponential evolution operator of the imaginary-time Schr√∂dinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(Œ∂ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter Œ∂.\n\nS^n+1 = S^n -fracŒ∂dœÑlnleft(fracŒ®_1^n+1Œ®_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, Œ∂ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter Œ∂.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntargetwalkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; targetwalkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nŒ∂ = 0.08: Damping parameter for the shift update.\nŒæ = Œ∂^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; targetwalkers, Œ∂, Œæ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * targetwalkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dœÑ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(‚ãÖ,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dœÑ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation, and solve(::ExactDiagonalizationProblem).\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndœÑ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> address = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(address);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(fs\\\"|1 2 3‚ü©\\\"; u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nœÑ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, Œ∂ = 0.08, Œæ = Œ∂^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ‚âà num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|‚ãÖ‚Üë‚áÖ‚Üì‚ãÖ‚ü©\" => 1.0, fs\"|‚Üì‚Üì‚ãÖ‚Üë‚Üë‚ü©\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|‚Üì‚Üì‚ãÖ‚Üë‚Üë‚ü©\" => 0.5\n  fs\"|‚ãÖ‚Üë‚áÖ‚Üì‚ãÖ‚ü©\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dœÑ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dœÑ","text":"update_dœÑ(s<:TimeStepStrategy, dœÑ, tnorm) -> new dœÑ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI. MPI is a standard for parallel and distributed computing, and it is widely used in high-performance computing. Rimu provides support for MPI to enable parallel computations on multiple nodes.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with 2 MPI ranks with mpirun -n 2 julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum, which is located at mode 5 in the momentum grid. We put all 10 particles, all in the zero momentum mode.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(fs\"|0 0 0 0 10 0 0 0 0 0‚ü©\"; u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for MPI calculations, as they will typically run non-interactively. The reports will be written to disk and can be inspected later. This has the additional benefit of reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The default settings will ensure that only the root MPI rank will write to the file, which is reasonable, and that data is saved in chunks of 1000 time steps. We choose to suppress progress messages with setting io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"For running parallel computations with MPI, it is important that a compatible state vector is used. Here we explicitly set up an MPI-enabled state vector, PDVec, which is automatically MPI-distributed over the available number of MPI ranks. In addition, threading will be used with all threads available to Julia.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0‚ü©\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10000 walkers and for 10000 time steps. We will also compute the projected energy by passing a ProjectedEnergy object as a post_step_strategy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"problem = ProjectorMonteCarloProblem(H;\n    start_at=initial_vector,\n    reporting_strategy,\n    post_step_strategy=ProjectedEnergy(H, initial_vector),\n    targetwalkers=10_000,\n    time_step=1e-4,\n    last_step=10_000\n);","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"simulation = solve(problem);\n\n@mpi_root println(\"Simulation success = \", simulation.success)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Simulation success = true\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Once the calculation is done, the results are available in the arrow file on disk.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In a typical workflow, the simulation results would be loaded from disk and analysed in the REPL or with a separate script. The arrow file can be loaded into a DataFrame with metadata using the load_df function.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schr√∂dinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Bl√∂te PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schr√∂dinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija ƒåufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. lomc!.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main lomc!() computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI for use in lomc!() is enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. ƒåufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelm√ºller, D. Huber, M. ƒåufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/œÄ^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|‚Üë‚Üë‚Üì‚Üì‚ü©\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|‚Üë‚Üì‚Üë‚Üì‚ü©\" => 1.0\n  fs\"|‚Üë‚Üë‚Üì‚Üì‚ü©\" => 4.0\n  fs\"|‚Üì‚Üë‚Üì‚Üë‚ü©\" => 1.0\n  fs\"|‚Üì‚Üë‚Üë‚Üì‚ü©\" => -1.0\n  fs\"|‚áÖ‚ãÖ‚ãÖ‚áÖ‚ü©\" => 1.0\n  fs\"|‚Üë‚Üì‚Üì‚Üë‚ü©\" => -1.0\n  fs\"|‚ãÖ‚áÖ‚áÖ‚ãÖ‚ü©\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|‚Üë‚Üì‚Üë‚Üì‚ü©\" => -1.0\n  fs\"|‚Üë‚Üë‚Üì‚Üì‚ü©\" => -4.0\n  fs\"|‚Üì‚Üë‚Üì‚Üë‚ü©\" => -1.0\n  fs\"|‚Üì‚Üë‚Üë‚Üì‚ü©\" => 1.0\n  fs\"|‚áÖ‚ãÖ‚ãÖ‚áÖ‚ü©\" => -1.0\n  fs\"|‚Üë‚Üì‚Üì‚Üë‚ü©\" => 1.0\n  fs\"|‚ãÖ‚áÖ‚áÖ‚ãÖ‚ü©\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|‚Üë‚Üì‚Üë‚Üì‚ü©\" => 1.0\n  fs\"|‚Üë‚Üë‚Üì‚Üì‚ü©\" => -2.0\n  fs\"|‚Üì‚Üë‚Üì‚Üë‚ü©\" => 1.0\n  fs\"|‚Üì‚Üë‚Üë‚Üì‚ü©\" => 3.0\n  fs\"|‚áÖ‚ãÖ‚ãÖ‚áÖ‚ü©\" => 1.0\n  fs\"|‚Üë‚Üì‚Üì‚Üë‚ü©\" => 3.0\n  fs\"|‚ãÖ‚áÖ‚áÖ‚ãÖ‚ü©\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()‚ãÖv == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
