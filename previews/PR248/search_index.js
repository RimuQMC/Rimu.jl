var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndτ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dτ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ± $(r.σ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ± 0.13748856752861724\n   Replica 2: -3.974753826250174 ± 0.12466355058904417\n   Replica 3: -4.011054302602586 ± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1⟩\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1⟩\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0⟩\"=>-14.1421, fs\"|0 2 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 1 0 2⟩\"=>-14.1421, fs\"|1 2 0 1 1 1⟩\"=>-14.1421, fs\"|2 0 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 2 0 1⟩\"=>-14.1421, fs\"|1 1 2 0 1 1⟩\"=>-14.1421, fs\"|1 1 0 2 1 1⟩\"=>-14.1421, fs\"|1 1 1 0 2 1⟩\"=>-14.1421, fs\"|1 0 2 1 1 1⟩\"=>-14.1421, fs\"|2 1 1 1 1 0⟩\"=>-14.1421, fs\"|0 1 1 1 1 2⟩\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    targetwalkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip450\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip450)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip451\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip450)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip452\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip450)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1248.87 1391.71 L1248.87 1397.25 Q1246.38 1395.98 1243.71 1395.34 Q1241.04 1394.71 1238.17 1394.71 Q1233.81 1394.71 1231.62 1396.04 Q1229.45 1397.38 1229.45 1400.05 Q1229.45 1402.09 1231.01 1403.27 Q1232.57 1404.41 1237.28 1405.46 L1239.29 1405.91 Q1245.52 1407.25 1248.13 1409.7 Q1250.78 1412.12 1250.78 1416.48 Q1250.78 1421.44 1246.83 1424.34 Q1242.91 1427.23 1236.04 1427.23 Q1233.17 1427.23 1230.06 1426.66 Q1226.97 1426.12 1223.53 1425.01 L1223.53 1418.96 Q1226.78 1420.65 1229.93 1421.51 Q1233.08 1422.33 1236.17 1422.33 Q1240.3 1422.33 1242.53 1420.93 Q1244.76 1419.5 1244.76 1416.92 Q1244.76 1414.54 1243.14 1413.26 Q1241.55 1411.99 1236.1 1410.81 L1234.07 1410.33 Q1228.62 1409.19 1226.2 1406.83 Q1223.79 1404.45 1223.79 1400.31 Q1223.79 1395.28 1227.35 1392.54 Q1230.91 1389.8 1237.47 1389.8 Q1240.72 1389.8 1243.58 1390.28 Q1246.45 1390.76 1248.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1265.89 1380.54 L1265.89 1390.66 L1277.96 1390.66 L1277.96 1395.22 L1265.89 1395.22 L1265.89 1414.57 Q1265.89 1418.93 1267.07 1420.17 Q1268.28 1421.41 1271.94 1421.41 L1277.96 1421.41 L1277.96 1426.31 L1271.94 1426.31 Q1265.16 1426.31 1262.58 1423.8 Q1260.01 1421.25 1260.01 1414.57 L1260.01 1395.22 L1255.71 1395.22 L1255.71 1390.66 L1260.01 1390.66 L1260.01 1380.54 L1265.89 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1316.15 1407.02 L1316.15 1409.89 L1289.22 1409.89 Q1289.61 1415.94 1292.85 1419.12 Q1296.13 1422.27 1301.96 1422.27 Q1305.33 1422.27 1308.48 1421.44 Q1311.66 1420.61 1314.78 1418.96 L1314.78 1424.5 Q1311.63 1425.83 1308.32 1426.53 Q1305.01 1427.23 1301.61 1427.23 Q1293.08 1427.23 1288.08 1422.27 Q1283.11 1417.3 1283.11 1408.84 Q1283.11 1400.08 1287.82 1394.96 Q1292.57 1389.8 1300.59 1389.8 Q1307.78 1389.8 1311.95 1394.45 Q1316.15 1399.07 1316.15 1407.02 M1310.3 1405.3 Q1310.23 1400.5 1307.59 1397.63 Q1304.98 1394.77 1300.65 1394.77 Q1295.75 1394.77 1292.79 1397.54 Q1289.86 1400.31 1289.42 1405.34 L1310.3 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1331.43 1420.96 L1331.43 1439.87 L1325.54 1439.87 L1325.54 1390.66 L1331.43 1390.66 L1331.43 1396.07 Q1333.28 1392.89 1336.08 1391.36 Q1338.91 1389.8 1342.82 1389.8 Q1349.32 1389.8 1353.36 1394.96 Q1357.43 1400.12 1357.43 1408.52 Q1357.43 1416.92 1353.36 1422.08 Q1349.32 1427.23 1342.82 1427.23 Q1338.91 1427.23 1336.08 1425.71 Q1333.28 1424.15 1331.43 1420.96 M1351.35 1408.52 Q1351.35 1402.06 1348.68 1398.4 Q1346.04 1394.71 1341.39 1394.71 Q1336.74 1394.71 1334.07 1398.4 Q1331.43 1402.06 1331.43 1408.52 Q1331.43 1414.98 1334.07 1418.67 Q1336.74 1422.33 1341.39 1422.33 Q1346.04 1422.33 1348.68 1418.67 Q1351.35 1414.98 1351.35 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1389.87 1391.71 L1389.87 1397.25 Q1387.38 1395.98 1384.71 1395.34 Q1382.04 1394.71 1379.17 1394.71 Q1374.81 1394.71 1372.62 1396.04 Q1370.45 1397.38 1370.45 1400.05 Q1370.45 1402.09 1372.01 1403.27 Q1373.57 1404.41 1378.28 1405.46 L1380.29 1405.91 Q1386.52 1407.25 1389.13 1409.7 Q1391.78 1412.12 1391.78 1416.48 Q1391.78 1421.44 1387.83 1424.34 Q1383.91 1427.23 1377.04 1427.23 Q1374.18 1427.23 1371.06 1426.66 Q1367.97 1426.12 1364.53 1425.01 L1364.53 1418.96 Q1367.78 1420.65 1370.93 1421.51 Q1374.08 1422.33 1377.17 1422.33 Q1381.3 1422.33 1383.53 1420.93 Q1385.76 1419.5 1385.76 1416.92 Q1385.76 1414.54 1384.14 1413.26 Q1382.55 1411.99 1377.1 1410.81 L1375.07 1410.33 Q1369.62 1409.19 1367.2 1406.83 Q1364.79 1404.45 1364.79 1400.31 Q1364.79 1395.28 1368.35 1392.54 Q1371.92 1389.8 1378.47 1389.8 Q1381.72 1389.8 1384.58 1390.28 Q1387.45 1390.76 1389.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1260.8 2211.02,1260.8 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1004.03 2211.02,1004.03 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,747.263 2211.02,747.263 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,490.494 2211.02,490.494 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,233.726 2211.02,233.726 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1260.8 423.181,1260.8 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1004.03 423.181,1004.03 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,747.263 423.181,747.263 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,490.494 423.181,490.494 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,233.726 423.181,233.726 \"/>\n<path clip-path=\"url(#clip450)\" d=\"M356.339 1246.6 Q352.728 1246.6 350.899 1250.16 Q349.094 1253.7 349.094 1260.83 Q349.094 1267.94 350.899 1271.51 Q352.728 1275.05 356.339 1275.05 Q359.973 1275.05 361.779 1271.51 Q363.608 1267.94 363.608 1260.83 Q363.608 1253.7 361.779 1250.16 Q359.973 1246.6 356.339 1246.6 M356.339 1242.89 Q362.149 1242.89 365.205 1247.5 Q368.284 1252.08 368.284 1260.83 Q368.284 1269.56 365.205 1274.17 Q362.149 1278.75 356.339 1278.75 Q350.529 1278.75 347.45 1274.17 Q344.395 1269.56 344.395 1260.83 Q344.395 1252.08 347.45 1247.5 Q350.529 1242.89 356.339 1242.89 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M290.043 1017.38 L306.363 1017.38 L306.363 1021.31 L284.418 1021.31 L284.418 1017.38 Q287.08 1014.62 291.664 1009.99 Q296.27 1005.34 297.451 1004 Q299.696 1001.47 300.576 999.737 Q301.478 997.978 301.478 996.288 Q301.478 993.533 299.534 991.797 Q297.613 990.061 294.511 990.061 Q292.312 990.061 289.858 990.825 Q287.427 991.589 284.65 993.14 L284.65 988.418 Q287.474 987.283 289.927 986.705 Q292.381 986.126 294.418 986.126 Q299.789 986.126 302.983 988.811 Q306.177 991.496 306.177 995.987 Q306.177 998.117 305.367 1000.04 Q304.58 1001.94 302.474 1004.53 Q301.895 1005.2 298.793 1008.42 Q295.691 1011.61 290.043 1017.38 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M316.224 986.751 L334.58 986.751 L334.58 990.686 L320.506 990.686 L320.506 999.158 Q321.524 998.811 322.543 998.649 Q323.562 998.464 324.58 998.464 Q330.367 998.464 333.747 1001.64 Q337.126 1004.81 337.126 1010.22 Q337.126 1015.8 333.654 1018.9 Q330.182 1021.98 323.862 1021.98 Q321.687 1021.98 319.418 1021.61 Q317.173 1021.24 314.765 1020.5 L314.765 1015.8 Q316.849 1016.94 319.071 1017.49 Q321.293 1018.05 323.77 1018.05 Q327.774 1018.05 330.112 1015.94 Q332.45 1013.83 332.45 1010.22 Q332.45 1006.61 330.112 1004.51 Q327.774 1002.4 323.77 1002.4 Q321.895 1002.4 320.02 1002.82 Q318.168 1003.23 316.224 1004.11 L316.224 986.751 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M356.339 989.83 Q352.728 989.83 350.899 993.394 Q349.094 996.936 349.094 1004.07 Q349.094 1011.17 350.899 1014.74 Q352.728 1018.28 356.339 1018.28 Q359.973 1018.28 361.779 1014.74 Q363.608 1011.17 363.608 1004.07 Q363.608 996.936 361.779 993.394 Q359.973 989.83 356.339 989.83 M356.339 986.126 Q362.149 986.126 365.205 990.732 Q368.284 995.316 368.284 1004.07 Q368.284 1012.79 365.205 1017.4 Q362.149 1021.98 356.339 1021.98 Q350.529 1021.98 347.45 1017.4 Q344.395 1012.79 344.395 1004.07 Q344.395 995.316 347.45 990.732 Q350.529 986.126 356.339 986.126 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M286.062 729.983 L304.418 729.983 L304.418 733.918 L290.344 733.918 L290.344 742.39 Q291.363 742.043 292.381 741.881 Q293.4 741.695 294.418 741.695 Q300.205 741.695 303.585 744.867 Q306.964 748.038 306.964 753.455 Q306.964 759.033 303.492 762.135 Q300.02 765.214 293.701 765.214 Q291.525 765.214 289.256 764.843 Q287.011 764.473 284.603 763.732 L284.603 759.033 Q286.687 760.168 288.909 760.723 Q291.131 761.279 293.608 761.279 Q297.613 761.279 299.951 759.172 Q302.288 757.066 302.288 753.455 Q302.288 749.844 299.951 747.737 Q297.613 745.631 293.608 745.631 Q291.733 745.631 289.858 746.047 Q288.006 746.464 286.062 747.344 L286.062 729.983 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M326.177 733.061 Q322.566 733.061 320.737 736.626 Q318.932 740.168 318.932 747.297 Q318.932 754.404 320.737 757.969 Q322.566 761.51 326.177 761.51 Q329.811 761.51 331.617 757.969 Q333.446 754.404 333.446 747.297 Q333.446 740.168 331.617 736.626 Q329.811 733.061 326.177 733.061 M326.177 729.358 Q331.987 729.358 335.043 733.964 Q338.122 738.547 338.122 747.297 Q338.122 756.024 335.043 760.631 Q331.987 765.214 326.177 765.214 Q320.367 765.214 317.288 760.631 Q314.233 756.024 314.233 747.297 Q314.233 738.547 317.288 733.964 Q320.367 729.358 326.177 729.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M356.339 733.061 Q352.728 733.061 350.899 736.626 Q349.094 740.168 349.094 747.297 Q349.094 754.404 350.899 757.969 Q352.728 761.51 356.339 761.51 Q359.973 761.51 361.779 757.969 Q363.608 754.404 363.608 747.297 Q363.608 740.168 361.779 736.626 Q359.973 733.061 356.339 733.061 M356.339 729.358 Q362.149 729.358 365.205 733.964 Q368.284 738.547 368.284 747.297 Q368.284 756.024 365.205 760.631 Q362.149 765.214 356.339 765.214 Q350.529 765.214 347.45 760.631 Q344.395 756.024 344.395 747.297 Q344.395 738.547 347.45 733.964 Q350.529 729.358 356.339 729.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M284.835 473.214 L307.057 473.214 L307.057 475.205 L294.511 507.774 L289.627 507.774 L301.432 477.149 L284.835 477.149 L284.835 473.214 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M316.224 473.214 L334.58 473.214 L334.58 477.149 L320.506 477.149 L320.506 485.622 Q321.524 485.274 322.543 485.112 Q323.562 484.927 324.58 484.927 Q330.367 484.927 333.747 488.098 Q337.126 491.27 337.126 496.686 Q337.126 502.265 333.654 505.367 Q330.182 508.445 323.862 508.445 Q321.687 508.445 319.418 508.075 Q317.173 507.705 314.765 506.964 L314.765 502.265 Q316.849 503.399 319.071 503.955 Q321.293 504.51 323.77 504.51 Q327.774 504.51 330.112 502.404 Q332.45 500.297 332.45 496.686 Q332.45 493.075 330.112 490.969 Q327.774 488.862 323.77 488.862 Q321.895 488.862 320.02 489.279 Q318.168 489.696 316.224 490.575 L316.224 473.214 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M356.339 476.293 Q352.728 476.293 350.899 479.858 Q349.094 483.399 349.094 490.529 Q349.094 497.635 350.899 501.2 Q352.728 504.742 356.339 504.742 Q359.973 504.742 361.779 501.2 Q363.608 497.635 363.608 490.529 Q363.608 483.399 361.779 479.858 Q359.973 476.293 356.339 476.293 M356.339 472.589 Q362.149 472.589 365.205 477.196 Q368.284 481.779 368.284 490.529 Q368.284 499.256 365.205 503.862 Q362.149 508.445 356.339 508.445 Q350.529 508.445 347.45 503.862 Q344.395 499.256 344.395 490.529 Q344.395 481.779 347.45 477.196 Q350.529 472.589 356.339 472.589 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M256.664 247.071 L264.303 247.071 L264.303 220.705 L255.992 222.372 L255.992 218.112 L264.256 216.446 L268.932 216.446 L268.932 247.071 L276.571 247.071 L276.571 251.006 L256.664 251.006 L256.664 247.071 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M296.015 219.525 Q292.404 219.525 290.576 223.089 Q288.77 226.631 288.77 233.761 Q288.77 240.867 290.576 244.432 Q292.404 247.973 296.015 247.973 Q299.65 247.973 301.455 244.432 Q303.284 240.867 303.284 233.761 Q303.284 226.631 301.455 223.089 Q299.65 219.525 296.015 219.525 M296.015 215.821 Q301.826 215.821 304.881 220.427 Q307.96 225.011 307.96 233.761 Q307.96 242.487 304.881 247.094 Q301.826 251.677 296.015 251.677 Q290.205 251.677 287.127 247.094 Q284.071 242.487 284.071 233.761 Q284.071 225.011 287.127 220.427 Q290.205 215.821 296.015 215.821 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M326.177 219.525 Q322.566 219.525 320.737 223.089 Q318.932 226.631 318.932 233.761 Q318.932 240.867 320.737 244.432 Q322.566 247.973 326.177 247.973 Q329.811 247.973 331.617 244.432 Q333.446 240.867 333.446 233.761 Q333.446 226.631 331.617 223.089 Q329.811 219.525 326.177 219.525 M326.177 215.821 Q331.987 215.821 335.043 220.427 Q338.122 225.011 338.122 233.761 Q338.122 242.487 335.043 247.094 Q331.987 251.677 326.177 251.677 Q320.367 251.677 317.288 247.094 Q314.233 242.487 314.233 233.761 Q314.233 225.011 317.288 220.427 Q320.367 215.821 326.177 215.821 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M356.339 219.525 Q352.728 219.525 350.899 223.089 Q349.094 226.631 349.094 233.761 Q349.094 240.867 350.899 244.432 Q352.728 247.973 356.339 247.973 Q359.973 247.973 361.779 244.432 Q363.608 240.867 363.608 233.761 Q363.608 226.631 361.779 223.089 Q359.973 219.525 356.339 219.525 M356.339 215.821 Q362.149 215.821 365.205 220.427 Q368.284 225.011 368.284 233.761 Q368.284 242.487 365.205 247.094 Q362.149 251.677 356.339 251.677 Q350.529 251.677 347.45 247.094 Q344.395 242.487 344.395 233.761 Q344.395 225.011 347.45 220.427 Q350.529 215.821 356.339 215.821 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip452)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,233.726 4017.76,233.726 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1250.45 456.554,1250.31 457.123,1250.09 457.691,1249.81 458.259,1249.47 458.828,1249.06 459.396,1248.59 459.964,1247.02 460.533,1245.41 461.101,1242.73 461.669,1242.08 462.238,1241.33 462.806,1240.5 463.375,1239.57 463.943,1238.53 464.511,1237.41 465.08,1236.18 465.648,1234.84 466.216,1232.36 466.785,1229.74 467.353,1228.06 467.921,1226.24 468.49,1224.25 469.058,1222.14 469.626,1219.89 470.195,1217.43 470.763,1214.83 471.331,1212.1 471.9,1207.08 472.468,1203.96 473.036,1200.7 473.605,1197.21 474.173,1192.51 474.741,1188.63 475.31,1184.55 475.878,1180.25 476.446,1175.76 477.015,1171.03 477.583,1166.07 478.152,1160.86 478.72,1153.4 479.288,1146.68 479.857,1140.77 480.425,1134.58 480.993,1128.25 481.562,1121.7 482.13,1114.88 482.698,1107.85 483.267,1099.58 483.835,1089.85 484.403,1081.99 484.972,1072.87 485.54,1062.61 486.108,1054.23 486.677,1044.65 487.245,1034.89 487.813,1026.09 488.382,1016.09 488.95,1006.97 489.518,995.638 490.087,986.334 490.655,975.863 491.224,964.288 491.792,951.617 492.36,941.08 492.929,932.535 493.497,918.52 494.065,905.731 494.634,896.116 495.202,885.382 495.77,874.666 496.339,864.982 496.907,854.183 497.475,842.374 498.044,831.593 498.612,821.883 499.18,811.992 499.749,799.206 500.317,787.546 500.885,778.067 501.454,766.575 502.022,755.182 502.59,744.923 503.159,732.831 503.727,720.763 504.295,709.768 504.864,698.859 505.432,689.164 506.001,679.483 506.569,670.056 507.137,660.711 507.706,652.488 508.274,643.217 508.842,635.146 509.411,626.123 509.979,616.15 510.547,607.506 511.116,597.873 511.684,586.46 512.252,578.445 512.821,569.563 513.389,559.576 513.957,553.068 514.526,544.499 515.094,537.295 515.662,531.188 516.231,524.175 516.799,516.26 517.367,508.484 517.936,502.836 518.504,497.468 519.072,492.086 519.641,485.686 520.209,478.46 520.778,472.417 521.346,466.514 521.914,461.879 522.483,455.242 523.051,446.696 523.619,439.294 524.188,434.23 524.756,429.169 525.324,423.351 525.893,415.742 526.461,411.332 527.029,408.116 527.598,403.809 528.166,397.61 528.734,393.615 529.303,388.87 529.871,385.23 530.439,381.534 531.008,377.962 531.576,373.509 532.144,369.981 532.713,366.868 533.281,364.919 533.85,362.605 534.418,360.567 534.986,357.477 535.555,356.353 536.123,353.159 536.691,349.19 537.26,347.21 537.828,344.31 538.396,341.425 538.965,336.673 539.533,333.058 540.101,330.693 540.67,330.395 541.238,327.849 541.806,326.37 542.375,320.081 542.943,320.007 543.511,320.036 544.08,318.881 544.648,315.834 545.216,312.758 545.785,310.807 546.353,309.029 546.921,308.07 547.49,306.213 548.058,303.196 548.627,300.405 549.195,300.938 549.763,300.144 550.332,298.605 550.9,296.922 551.468,296.338 552.037,293.742 552.605,292.995 553.173,292.396 553.742,291.78 554.31,288.045 554.878,286.702 555.447,284.514 556.015,285.379 556.583,286.33 557.152,284.843 557.72,285.372 558.288,281.929 558.857,284.712 559.425,285.088 559.993,286.493 560.562,283.394 561.13,282.802 561.698,279.969 562.267,279.368 562.835,278.843 563.404,277.369 563.972,273.798 564.54,274.586 565.109,274.275 565.677,271.669 566.245,272.474 566.814,272.028 567.382,270.836 567.95,268.672 568.519,269.749 569.087,270.376 569.655,268.129 570.224,266.954 570.792,267.757 571.36,266.66 571.929,265.37 572.497,264.293 573.065,263.224 573.634,262.24 574.202,262.256 574.77,261.957 575.339,262.849 575.907,261.607 576.476,261.582 577.044,260.376 577.612,259.135 578.181,259.121 578.749,260.185 579.317,257.783 579.886,258.841 580.454,257.665 581.022,258.546 581.591,258.446 582.159,258.279 582.727,257.26 583.296,260.386 583.864,258.914 584.432,257.745 585.001,256.431 585.569,258.135 586.137,255.024 586.706,255.069 587.274,253.996 587.842,254.867 588.411,254.838 588.979,254.645 589.547,252.573 590.116,253.601 590.684,254.484 591.253,253.488 591.821,249.28 592.389,249.556 592.958,248.895 593.526,250.236 594.094,248.461 594.663,246.582 595.231,246.99 595.799,246.209 596.368,246.614 596.936,245.828 597.504,246.33 598.073,247.545 598.641,247.824 599.209,249.004 599.778,249.016 600.346,245.136 600.914,245.46 601.483,245.859 602.051,245.867 602.619,247.232 603.188,247.23 603.756,248.52 604.325,247.621 604.893,246.67 605.461,246.922 606.03,247.057 606.598,245.275 607.166,243.626 607.735,245.134 608.303,247.401 608.871,249.276 609.44,247.056 610.008,246.187 610.576,247.224 611.145,247.042 611.713,248.024 612.281,247.739 612.85,246.589 613.418,243.472 613.986,243.638 614.555,244.883 615.123,242.991 615.691,243.149 616.26,244.5 616.828,244.495 617.396,244.554 617.965,243.748 618.533,242.859 619.102,241.986 619.67,244.249 620.238,242.264 620.807,242.543 621.375,242.678 621.943,241.924 622.512,242.07 623.08,244.414 623.648,244.294 624.217,244.304 624.785,245.108 625.353,243.021 625.922,243.008 626.49,241.11 627.058,240.342 627.627,239.628 628.195,241.04 628.763,240.249 629.332,237.542 629.9,236.167 630.468,237.834 631.037,235.407 631.605,238.817 632.173,241.014 632.742,241.384 633.31,241.588 633.879,241.792 634.447,242.775 635.015,243.953 635.584,244.859 636.152,245.812 636.72,245.48 637.289,245.218 637.857,244.085 638.425,244.057 638.994,243.046 639.562,242.937 640.13,241.837 640.699,242.798 641.267,244.005 641.835,242.924 642.404,240.642 642.972,239.667 643.54,240.649 644.109,238.98 644.677,238.259 645.245,237.603 645.814,237.849 646.382,238.09 646.951,239.261 647.519,236.276 648.087,236.451 648.656,233.822 649.224,233.47 649.792,233.155 650.361,236.832 650.929,237.113 651.497,236.764 652.066,238.15 652.634,238.518 653.202,238.512 653.771,240.942 654.339,241.004 654.907,238.176 655.476,237.413 656.044,239.993 656.612,240.102 657.181,241.065 657.749,242.006 658.317,240.807 658.886,238.72 659.454,238.898 660.022,238.004 660.591,239.155 661.159,238.148 661.728,239.309 662.296,241.488 662.864,241.397 663.433,241.285 664.001,240.47 664.569,239.539 665.138,238.655 665.706,235.885 666.274,236.498 666.843,237.711 667.411,237.813 667.979,236.002 668.548,235.336 669.116,237.881 669.684,239.185 670.253,238.277 670.821,237.513 671.389,237.783 671.958,236.947 672.526,236.245 673.094,236.37 673.663,236.707 674.231,236.931 674.799,238.123 675.368,239.429 675.936,241.539 676.505,241.582 677.073,242.455 677.641,242.235 678.21,239.865 678.778,238.751 679.346,239.775 679.915,238.711 680.483,237.918 681.051,240.079 681.62,241.061 682.188,238.782 682.756,240.955 683.325,239.807 683.893,242.913 684.461,243.801 685.03,244.422 685.598,244.193 686.166,242.784 686.735,243.563 687.303,241.366 687.871,241.04 688.44,239.84 689.008,239.914 689.577,237.758 690.145,235.548 690.713,233.608 691.282,234.959 691.85,236.122 692.418,237.17 692.987,237.108 693.555,237.222 694.123,237.11 694.692,237.979 695.26,238.048 695.828,236.882 696.397,236.938 696.965,236.098 697.533,235.061 698.102,236.158 698.67,238.342 699.238,238.403 699.807,237.357 700.375,238.373 700.943,238.339 701.512,240.247 702.08,241.084 702.648,240.646 703.217,240.345 703.785,237.04 704.354,238.016 704.922,238.08 705.49,238.887 706.059,238.646 706.627,238.543 707.195,236.512 707.764,234.313 708.332,232.646 708.9,232.842 709.469,230.825 710.037,232.014 710.605,229.397 711.174,230.112 711.742,229.84 712.31,229.374 712.879,229.782 713.447,231.222 714.015,230.556 714.584,231.142 715.152,233.668 715.72,234.079 716.289,235.17 716.857,236.227 717.425,235.253 717.994,238.282 718.562,239.179 719.131,240.942 719.699,240.675 720.267,240.261 720.836,239.935 721.404,239.647 721.972,239.158 722.541,237.927 723.109,238.863 723.677,235.518 724.246,235.374 724.814,236.547 725.382,236.524 725.951,235.508 726.519,233.554 727.087,232.84 727.656,231.097 728.224,231.388 728.792,230.619 729.361,231.17 729.929,231.702 730.497,234.156 731.066,235.571 731.634,234.686 732.203,235.657 732.771,236.697 733.339,236.727 733.908,234.612 734.476,235.719 735.044,234.765 735.613,235.999 736.181,234.146 736.749,235.42 737.318,235.528 737.886,234.562 738.454,232.542 739.023,231.776 739.591,230.999 740.159,231.617 740.728,234.01 741.296,234.023 741.864,232.114 742.433,233.605 743.001,232.729 743.569,231.852 744.138,231.135 744.706,232.765 745.274,232.989 745.843,233.327 746.411,236.814 746.98,238.025 747.548,238.954 748.116,238.979 748.685,236.932 749.253,236.984 749.821,235.022 750.39,233.195 750.958,232.527 751.526,231.062 752.095,230.579 752.663,230.663 753.231,230.113 753.8,231.562 754.368,233.989 754.936,231.98 755.505,233.389 756.073,233.758 756.641,230.936 757.21,232.717 757.778,233.925 758.346,234.342 758.915,232.527 759.483,233.83 760.052,235.059 760.62,233.384 761.188,232.73 761.757,234.222 762.325,233.336 762.893,234.641 763.462,234.689 764.03,237.067 764.598,235.222 765.167,234.389 765.735,232.766 766.303,235.187 766.872,234.512 767.44,231.551 768.008,231.086 768.577,232.636 769.145,233.966 769.713,231.33 770.282,230.77 770.85,230.192 771.418,231.747 771.987,230.066 772.555,233.796 773.123,233.191 773.692,233.674 774.26,239.097 774.829,239.114 775.397,239.04 775.965,235.929 776.534,237.209 777.102,238.409 777.67,241.412 778.239,243.268 778.807,243.089 779.375,240.878 779.944,240.742 780.512,241.571 781.08,242.307 781.649,244.911 782.217,243.169 782.785,243.961 783.354,244.612 783.922,242.057 784.49,241.555 785.059,240.077 785.627,237.589 786.195,237.374 786.764,239.353 787.332,238.007 787.9,238.831 788.469,240.484 789.037,241.098 789.606,241.669 790.174,241.171 790.742,239.842 791.311,237.327 791.879,232.954 792.447,233.235 793.016,236.501 793.584,235.312 794.152,235.415 794.721,234.291 795.289,235.324 795.857,235.644 796.426,236.623 796.994,237.515 797.562,236.211 798.131,234.063 798.699,234.326 799.267,236.345 799.836,236.259 800.404,235.257 800.972,236.463 801.541,236.445 802.109,237.204 802.678,234.951 803.246,234.971 803.814,236.923 804.383,238.668 804.951,236.389 805.519,236.115 806.088,234.839 806.656,233.56 807.224,232.541 807.793,232.737 808.361,234.871 808.929,235.979 809.498,234.736 810.066,233.7 810.634,234.789 811.203,234.857 811.771,234.687 812.339,233.571 812.908,232.345 813.476,232.702 814.044,231.898 814.613,232.068 815.181,233.207 815.749,230.049 816.318,228.471 816.886,228.948 817.455,230.493 818.023,230.695 818.591,230.926 819.16,228.175 819.728,228.684 820.296,231.205 820.865,231.496 821.433,230.729 822.001,230.956 822.57,229.205 823.138,229.607 823.706,229.974 824.275,230.62 824.843,230.254 825.411,230.533 825.98,231.663 826.548,231.82 827.116,231.976 827.685,231.161 828.253,231.341 828.821,231.565 829.39,230.858 829.958,231.18 830.526,228.412 831.095,228.228 831.663,229.896 832.232,232.296 832.8,233.554 833.368,235.804 833.937,235.773 834.505,233.717 835.073,236.158 835.642,235.201 836.21,237.462 836.778,237.514 837.347,236.537 837.915,239.684 838.483,238.419 839.052,238.18 839.62,237.102 840.188,238.845 840.757,238.623 841.325,239.384 841.893,239.093 842.462,237.783 843.03,236.657 843.598,236.604 844.167,237.491 844.735,240.482 845.304,243.115 845.872,243.735 846.44,243.381 847.009,241.951 847.577,239.448 848.145,240.156 848.714,240.757 849.282,242.346 849.85,240.925 850.419,237.697 850.987,237.756 851.555,237.685 852.124,239.466 852.692,238.975 853.26,235.648 853.829,235.556 854.397,237.423 854.965,237.189 855.534,240.168 856.102,241.751 856.67,242.441 857.239,240.62 857.807,238.892 858.375,237.611 858.944,235.238 859.512,234.051 860.081,236.104 860.649,235.79 861.217,234.629 861.786,234.379 862.354,232.133 862.922,231.142 863.491,230.459 864.059,232.516 864.627,232.813 865.196,230.713 865.764,228.726 866.332,230.131 866.901,229.979 867.469,231.112 868.037,229.406 868.606,228.67 869.174,231.21 869.742,232.39 870.311,234.609 870.879,231.487 871.447,230.639 872.016,229.912 872.584,230.222 873.152,230.608 873.721,229.97 874.289,231.347 874.858,230.486 875.426,232.969 875.994,234.139 876.563,232.146 877.131,232.577 877.699,233.595 878.268,233.623 878.836,236.752 879.404,236.673 879.973,236.67 880.541,237.558 881.109,237.391 881.678,236.887 882.246,236.411 882.814,236.41 883.383,236.27 883.951,235.169 884.519,236.262 885.088,236.056 885.656,234.842 886.224,232.795 886.793,232.942 887.361,230.023 887.93,232.555 888.498,233.708 889.066,233.931 889.635,234.84 890.203,232.897 890.771,232.799 891.34,232.982 891.908,233.941 892.476,235.888 893.045,235.707 893.613,235.644 894.181,233.467 894.75,232.494 895.318,232.654 895.886,232.677 896.455,233.71 897.023,233.805 897.591,235.935 898.16,236.701 898.728,235.518 899.296,237.544 899.865,236.941 900.433,235.758 901.001,233.677 901.57,233.746 902.138,231.639 902.707,231.762 903.275,232.2 903.843,232.282 904.412,231.482 904.98,231.697 905.548,231.824 906.117,230.045 906.685,230.238 907.253,228.468 907.822,226.888 908.39,227.45 908.958,226.678 909.527,228.146 910.095,231.666 910.663,234.896 911.232,233.89 911.8,233.938 912.368,235.129 912.937,235.092 913.505,236.098 914.073,237.04 914.642,235.804 915.21,235.796 915.779,233.642 916.347,235.681 916.915,238.628 917.484,237.434 918.052,236.187 918.62,237.29 919.189,239.277 919.757,238.878 920.325,237.404 920.894,238.183 921.462,238.607 922.03,238.191 922.599,237.829 923.167,238.542 923.735,240.399 924.304,240.082 924.872,239.698 925.44,240.335 926.009,240.065 926.577,239.73 927.145,239.43 927.714,238.953 928.282,237.762 928.85,238.621 929.419,237.221 929.987,238.856 930.556,237.628 931.124,238.457 931.692,239.031 932.261,233.476 932.829,231.212 933.397,231.281 933.966,233.247 934.534,234.057 935.102,232.18 935.671,231.384 936.239,229.527 936.807,230.964 937.376,230.012 937.944,231.223 938.512,231.343 939.081,232.658 939.649,235.945 940.217,232.847 940.786,232 941.354,231.067 941.922,230.497 942.491,230.814 943.059,228.743 943.627,229.017 944.196,230.695 944.764,231.161 945.333,231.384 945.901,230.714 946.469,233.036 947.038,235.199 947.606,234.952 948.174,232.759 948.743,234.001 949.311,234.08 949.879,236.275 950.448,236.18 951.016,236.132 951.584,237.983 952.153,238.63 952.721,237.437 953.289,239.099 953.858,238.825 954.426,238.404 954.994,237.993 955.563,237.678 956.131,237.335 956.699,239.099 957.268,239.66 957.836,239.151 958.405,236.854 958.973,237.592 959.541,235.174 960.11,233.965 960.678,234.857 961.246,234.67 961.815,235.608 962.383,236.51 962.951,236.223 963.52,232.957 964.088,231.77 964.656,232.091 965.225,231.086 965.793,232.083 966.361,230.967 966.93,232.161 967.498,231.195 968.066,232.155 968.635,234.296 969.203,236.24 969.771,236.008 970.34,234.626 970.908,235.54 971.476,234.588 972.045,236.32 972.613,234.157 973.182,235.12 973.75,233.784 974.318,234.629 974.887,232.366 975.455,230.237 976.023,230.418 976.592,231.664 977.16,231.827 977.728,231.861 978.297,230.871 978.865,230.914 979.433,232.119 980.002,232.087 980.57,232.187 981.138,232.208 981.707,233.313 982.275,234.225 982.843,235.181 983.412,237.2 983.98,235.032 984.548,234.893 985.117,235.63 985.685,235.416 986.253,234.37 986.822,233.353 987.39,232.505 987.959,228.549 988.527,227.865 989.095,228.403 989.664,230.958 990.232,230.147 990.8,231.62 991.369,234.809 991.937,234.7 992.505,233.513 993.074,233.474 993.642,235.579 994.21,235.237 994.779,233.167 995.347,232.172 995.915,233.334 996.484,233.024 997.052,235.179 997.62,235.035 998.189,234.001 998.757,234.954 999.325,236.978 999.894,236.781 1000.46,236.641 1001.03,236.372 1001.6,236.16 1002.17,237.151 1002.74,235.921 1003.3,235.668 1003.87,234.257 1004.44,234.192 1005.01,234.185 1005.58,233.085 1006.15,233.247 1006.71,233.233 1007.28,232.072 1007.85,231.997 1008.42,232.164 1008.99,231.12 1009.56,230.244 1010.12,230.507 1010.69,227.493 1011.26,227.585 1011.83,226.016 1012.4,225.633 1012.97,225.911 1013.53,226.389 1014.1,226.909 1014.67,228.578 1015.24,229.103 1015.81,229.419 1016.38,230.834 1016.94,231.123 1017.51,231.451 1018.08,232.864 1018.65,231.941 1019.22,232.056 1019.79,230.115 1020.35,230.426 1020.92,232.72 1021.49,232.812 1022.06,230.85 1022.63,230.242 1023.2,233.826 1023.76,232.77 1024.33,231.896 1024.9,232.25 1025.47,234.564 1026.04,232.717 1026.61,231.87 1027.17,233.04 1027.74,235.354 1028.31,236.448 1028.88,238.445 1029.45,237.286 1030.02,237.181 1030.58,236.924 1031.15,238.005 1031.72,239.901 1032.29,240.391 1032.86,239.934 1033.43,240.542 1033.99,236.896 1034.56,238.838 1035.13,238.702 1035.7,237.289 1036.27,238.048 1036.84,237.791 1037.4,238.597 1037.97,238.372 1038.54,239.081 1039.11,238.626 1039.68,238.116 1040.25,238.801 1040.81,238.617 1041.38,237.395 1041.95,237.075 1042.52,237.828 1043.09,237.526 1043.66,237.278 1044.22,235.915 1044.79,235.58 1045.36,235.596 1045.93,235.433 1046.5,236.405 1047.07,236.035 1047.63,233.609 1048.2,232.73 1048.77,233.866 1049.34,232.733 1049.91,230.676 1050.48,230.848 1051.05,229.968 1051.61,227.074 1052.18,228.519 1052.75,231.93 1053.32,231.106 1053.89,231.357 1054.46,231.509 1055.02,232.624 1055.59,232.64 1056.16,233.75 1056.73,231.686 1057.3,231.633 1057.87,229.636 1058.43,231.794 1059,232.905 1059.57,230.64 1060.14,228.761 1060.71,230.097 1061.28,227.031 1061.84,229.589 1062.41,230.048 1062.98,230.4 1063.55,230.907 1064.12,231.136 1064.69,231.447 1065.25,229.712 1065.82,230.015 1066.39,230.263 1066.96,229.425 1067.53,232.86 1068.1,233.032 1068.66,233.093 1069.23,234.159 1069.8,234.192 1070.37,235.252 1070.94,236.045 1071.51,234.991 1072.07,236.145 1072.64,236.027 1073.21,234.037 1073.78,236.173 1074.35,233.089 1074.92,233.104 1075.48,234.273 1076.05,232.284 1076.62,232.631 1077.19,231.751 1077.76,232.159 1078.33,231.235 1078.89,232.627 1079.46,233.885 1080.03,234.049 1080.6,234.111 1081.17,236.419 1081.74,236.367 1082.3,239.345 1082.87,240.091 1083.44,240.811 1084.01,238.269 1084.58,238.988 1085.15,238.55 1085.71,236.313 1086.28,236.117 1086.85,235.857 1087.42,234.672 1087.99,234.525 1088.56,234.578 1089.12,234.488 1089.69,235.418 1090.26,236.133 1090.83,234.999 1091.4,235.083 1091.97,236.916 1092.53,235.596 1093.1,234.455 1093.67,233.523 1094.24,232.5 1094.81,230.363 1095.38,230.656 1095.94,227.686 1096.51,229.316 1097.08,228.715 1097.65,226.151 1098.22,229.046 1098.79,229.513 1099.35,229.964 1099.92,231.38 1100.49,232.4 1101.06,232.606 1101.63,231.775 1102.2,229.979 1102.76,229.312 1103.33,230.363 1103.9,229.715 1104.47,231.208 1105.04,229.622 1105.61,230.166 1106.17,230.474 1106.74,233.059 1107.31,232.245 1107.88,231.305 1108.45,230.417 1109.02,230.644 1109.58,229.901 1110.15,231.627 1110.72,232.077 1111.29,230.074 1111.86,230.475 1112.43,230.848 1112.99,230.099 1113.56,229.492 1114.13,228.919 1114.7,231.4 1115.27,230.587 1115.84,230.712 1116.4,234.232 1116.97,232.195 1117.54,231.506 1118.11,231.906 1118.68,231.043 1119.25,232.668 1119.81,233.106 1120.38,235.353 1120.95,233.303 1121.52,233.497 1122.09,232.574 1122.66,231.733 1123.23,231.137 1123.79,230.409 1124.36,231.867 1124.93,230.267 1125.5,234.905 1126.07,235.054 1126.64,234.197 1127.2,235.411 1127.77,235.571 1128.34,235.439 1128.91,237.653 1129.48,237.677 1130.05,239.778 1130.61,236.573 1131.18,237.566 1131.75,238.448 1132.32,239.122 1132.89,237.709 1133.46,239.706 1134.02,238.574 1134.59,238.417 1135.16,239.395 1135.73,240.139 1136.3,238.586 1136.87,236.439 1137.43,236.651 1138,237.358 1138.57,237.16 1139.14,238.102 1139.71,238.819 1140.28,239.47 1140.84,240.161 1141.41,240.95 1141.98,241.427 1142.55,241.864 1143.12,240.27 1143.69,240.027 1144.25,238.378 1144.82,238.837 1145.39,238.398 1145.96,238.055 1146.53,236.582 1147.1,235.305 1147.66,234.19 1148.23,234.095 1148.8,233.927 1149.37,231.752 1149.94,231.941 1150.51,230.834 1151.07,230.071 1151.64,229.33 1152.21,230.46 1152.78,231.837 1153.35,231.951 1153.92,230.805 1154.48,230.02 1155.05,229.437 1155.62,229.64 1156.19,230.887 1156.76,231.843 1157.33,232.06 1157.89,231.022 1158.46,231.186 1159.03,231.427 1159.6,230.585 1160.17,230.778 1160.74,231.09 1161.3,229.132 1161.87,231.711 1162.44,232.208 1163.01,233.219 1163.58,233.435 1164.15,236.55 1164.71,237.368 1165.28,235.842 1165.85,238.879 1166.42,238.612 1166.99,237.26 1167.56,238.17 1168.12,238.953 1168.69,239.373 1169.26,239.755 1169.83,240.212 1170.4,236.573 1170.97,235.462 1171.53,238.385 1172.1,238.296 1172.67,236.889 1173.24,236.695 1173.81,235.176 1174.38,234.059 1174.94,233.175 1175.51,234.359 1176.08,235.357 1176.65,236.26 1177.22,234.122 1177.79,232.993 1178.35,233.839 1178.92,234.828 1179.49,234.659 1180.06,234.375 1180.63,234.166 1181.2,231.976 1181.76,233.046 1182.33,231.981 1182.9,231.132 1183.47,231.242 1184.04,227.339 1184.61,227.696 1185.17,228.163 1185.74,230.55 1186.31,231.942 1186.88,229.973 1187.45,230.118 1188.02,229.425 1188.58,231.756 1189.15,230.957 1189.72,231.237 1190.29,229.538 1190.86,230.728 1191.43,230.07 1192,232.299 1192.56,232.634 1193.13,234.042 1193.7,230.893 1194.27,232.249 1194.84,233.455 1195.41,234.707 1195.97,238.799 1196.54,238.5 1197.11,237.118 1197.68,236.738 1198.25,233.459 1198.82,234.377 1199.38,233.371 1199.95,232.263 1200.52,232.31 1201.09,232.357 1201.66,234.53 1202.23,234.549 1202.79,236.654 1203.36,235.435 1203.93,234.297 1204.5,235.477 1205.07,234.306 1205.64,235.256 1206.2,236.415 1206.77,237.398 1207.34,237.268 1207.91,237.774 1208.48,239.683 1209.05,239.188 1209.61,237.9 1210.18,237.524 1210.75,238.054 1211.32,236.624 1211.89,236.353 1212.46,235.05 1213.02,234.883 1213.59,233.965 1214.16,235.019 1214.73,233.786 1215.3,233.738 1215.87,231.743 1216.43,231.686 1217,231.536 1217.57,230.481 1218.14,228.517 1218.71,231.996 1219.28,231.973 1219.84,232.195 1220.41,232.186 1220.98,234.546 1221.55,230.153 1222.12,232.634 1222.69,231.644 1223.25,231.799 1223.82,231.925 1224.39,232.052 1224.96,230.223 1225.53,229.439 1226.1,230.762 1226.66,231.906 1227.23,232.927 1227.8,233.853 1228.37,233.713 1228.94,234.747 1229.51,234.587 1230.07,234.543 1230.64,233.436 1231.21,234.48 1231.78,232.464 1232.35,230.26 1232.92,232.749 1233.48,231.06 1234.05,231.243 1234.62,231.432 1235.19,233.604 1235.76,234.655 1236.33,235.833 1236.89,235.596 1237.46,234.541 1238.03,235.65 1238.6,239.519 1239.17,237.118 1239.74,237.854 1240.3,239.886 1240.87,237.412 1241.44,236.317 1242.01,236.111 1242.58,239.174 1243.15,238.84 1243.71,238.447 1244.28,237.955 1244.85,238.597 1245.42,238.204 1245.99,237.758 1246.56,237.45 1247.12,236.055 1247.69,235.803 1248.26,236.351 1248.83,235.205 1249.4,234.103 1249.97,234.045 1250.53,232.957 1251.1,234.028 1251.67,235.066 1252.24,233.843 1252.81,233.689 1253.38,233.546 1253.94,231.325 1254.51,232.351 1255.08,233.452 1255.65,231.396 1256.22,234.596 1256.79,233.418 1257.35,236.352 1257.92,234.184 1258.49,235.071 1259.06,234.963 1259.63,235.556 1260.2,236.391 1260.76,237.139 1261.33,238.734 1261.9,237.444 1262.47,239.19 1263.04,237.697 1263.61,239.327 1264.18,236.904 1264.74,236.658 1265.31,236.334 1265.88,237.041 1266.45,236.876 1267.02,236.422 1267.59,235.097 1268.15,235.71 1268.72,234.289 1269.29,233.166 1269.86,232.183 1270.43,234.116 1271,232.9 1271.56,232.618 1272.13,233.566 1272.7,233.362 1273.27,231.139 1273.84,231.054 1274.41,230.034 1274.97,230.139 1275.54,230.379 1276.11,228.75 1276.68,226.028 1277.25,227.564 1277.82,228.845 1278.38,224.142 1278.95,224.591 1279.52,219.895 1280.09,220.914 1280.66,222.604 1281.23,221.317 1281.79,223.141 1282.36,225.906 1282.93,227.5 1283.5,229.96 1284.07,230.312 1284.64,230.515 1285.2,229.531 1285.77,230.899 1286.34,231.166 1286.91,230.018 1287.48,230.492 1288.05,231.902 1288.61,232.247 1289.18,234.465 1289.75,238.77 1290.32,238.561 1290.89,239.304 1291.46,239.016 1292.02,238.593 1292.59,236.302 1293.16,236.172 1293.73,235.778 1294.3,235.687 1294.87,235.597 1295.43,232.495 1296,234.682 1296.57,237.64 1297.14,236.421 1297.71,235.301 1298.28,235.254 1298.84,237.167 1299.41,236.853 1299.98,237.481 1300.55,236.354 1301.12,235.295 1301.69,237.463 1302.25,238.24 1302.82,239.88 1303.39,238.396 1303.96,236.028 1304.53,235.915 1305.1,232.783 1305.66,235.079 1306.23,232.804 1306.8,232.868 1307.37,231.884 1307.94,229.94 1308.51,233.269 1309.07,231.337 1309.64,231.396 1310.21,232.678 1310.78,231.752 1311.35,231.711 1311.92,231.019 1312.48,232.119 1313.05,232.238 1313.62,231.399 1314.19,232.529 1314.76,235.496 1315.33,232.346 1315.89,232.282 1316.46,232.501 1317.03,233.587 1317.6,233.665 1318.17,232.69 1318.74,231.631 1319.3,232.652 1319.87,234.528 1320.44,235.593 1321.01,237.803 1321.58,238.483 1322.15,237.254 1322.71,236.803 1323.28,235.386 1323.85,236.382 1324.42,236.308 1324.99,235.118 1325.56,234.752 1326.12,234.748 1326.69,234.6 1327.26,235.402 1327.83,235.084 1328.4,235.122 1328.97,234.28 1329.53,235.121 1330.1,236.043 1330.67,235.675 1331.24,234.28 1331.81,233.11 1332.38,229.944 1332.94,231.395 1333.51,231.494 1334.08,232.901 1334.65,232.766 1335.22,234.902 1335.79,232.782 1336.36,232.876 1336.92,233.827 1337.49,232.826 1338.06,233.809 1338.63,233.851 1339.2,232.928 1339.77,230.896 1340.33,231.016 1340.9,229.279 1341.47,228.677 1342.04,229.934 1342.61,229.208 1343.18,228.457 1343.74,226.683 1344.31,227.277 1344.88,229.834 1345.45,232.268 1346.02,233.46 1346.59,234.769 1347.15,234.652 1347.72,232.622 1348.29,233.711 1348.86,233.959 1349.43,234.334 1350,234.497 1350.56,233.688 1351.13,232.739 1351.7,231.785 1352.27,231.712 1352.84,234.07 1353.41,233.043 1353.97,233.021 1354.54,234.231 1355.11,236.295 1355.68,233.942 1356.25,233.851 1356.82,232.731 1357.38,232.833 1357.95,232.951 1358.52,232.008 1359.09,233.989 1359.66,234.122 1360.23,234 1360.79,235.044 1361.36,237.157 1361.93,237.984 1362.5,235.751 1363.07,235.744 1363.64,233.375 1364.2,232.642 1364.77,233.529 1365.34,232.794 1365.91,231.68 1366.48,232.804 1367.05,235.051 1367.61,237.165 1368.18,236.798 1368.75,236.701 1369.32,236.267 1369.89,237.278 1370.46,236.93 1371.02,236.842 1371.59,236.673 1372.16,237.362 1372.73,237.03 1373.3,240.753 1373.87,241.228 1374.43,240.706 1375,240.374 1375.57,239.9 1376.14,239.52 1376.71,236.832 1377.28,236.403 1377.84,236.071 1378.41,234.756 1378.98,234.289 1379.55,233.192 1380.12,232.184 1380.69,231.538 1381.25,234.764 1381.82,235.716 1382.39,238.752 1382.96,237.245 1383.53,233.963 1384.1,232.058 1384.66,233.987 1385.23,233.912 1385.8,234.843 1386.37,233.439 1386.94,233.039 1387.51,233.727 1388.07,234.771 1388.64,233.613 1389.21,232.645 1389.78,233.54 1390.35,233.235 1390.92,233.305 1391.48,233.041 1392.05,232.122 1392.62,231.254 1393.19,232.417 1393.76,232.368 1394.33,233.615 1394.89,233.578 1395.46,234.503 1396.03,233.43 1396.6,234.646 1397.17,234.734 1397.74,236.754 1398.3,236.748 1398.87,233.284 1399.44,232.051 1400.01,234.241 1400.58,233.281 1401.15,229.984 1401.71,230.308 1402.28,229.375 1402.85,229.916 1403.42,230.236 1403.99,231.729 1404.56,232.985 1405.13,232.742 1405.69,232.66 1406.26,232.574 1406.83,231.587 1407.4,230.552 1407.97,231.82 1408.54,232.057 1409.1,234.294 1409.67,236.24 1410.24,236.157 1410.81,236.911 1411.38,236.752 1411.95,235.272 1412.51,235.073 1413.08,234.852 1413.65,234.807 1414.22,233.509 1414.79,234.44 1415.36,234.274 1415.92,233.189 1416.49,233.135 1417.06,233.01 1417.63,231.983 1418.2,234.124 1418.77,233.943 1419.33,231.971 1419.9,232.067 1420.47,232.115 1421.04,233.25 1421.61,233.24 1422.18,235.574 1422.74,233.354 1423.31,233.354 1423.88,234.636 1424.45,235.593 1425.02,235.187 1425.59,235.027 1426.15,233.921 1426.72,233.708 1427.29,233.54 1427.86,233.347 1428.43,233.439 1429,233.324 1429.56,232.302 1430.13,231.207 1430.7,230.285 1431.27,230.187 1431.84,229.331 1432.41,232.001 1432.97,231.211 1433.54,230.175 1434.11,226.48 1434.68,226.97 1435.25,228.6 1435.82,231.19 1436.38,229.336 1436.95,228.792 1437.52,227.974 1438.09,228.449 1438.66,228.049 1439.23,229.561 1439.79,229.742 1440.36,232.053 1440.93,234.427 1441.5,234.55 1442.07,233.494 1442.64,234.618 1443.2,233.432 1443.77,234.574 1444.34,231.663 1444.91,233.917 1445.48,233.906 1446.05,233.073 1446.61,233.09 1447.18,232.134 1447.75,232.398 1448.32,233.447 1448.89,233.375 1449.46,232.379 1450.02,232.664 1450.59,233.811 1451.16,235.117 1451.73,234.346 1452.3,231.173 1452.87,230.35 1453.43,230.89 1454,233.15 1454.57,231.269 1455.14,234.585 1455.71,236.779 1456.28,238.619 1456.84,239.49 1457.41,237.985 1457.98,236.627 1458.55,237.311 1459.12,238.998 1459.69,238.778 1460.25,239.466 1460.82,238.992 1461.39,236.729 1461.96,237.435 1462.53,237.091 1463.1,239.181 1463.66,239.758 1464.23,237.263 1464.8,238.973 1465.37,238.413 1465.94,239.019 1466.51,238.8 1467.07,238.43 1467.64,239.215 1468.21,239.714 1468.78,239.073 1469.35,236.7 1469.92,235.278 1470.48,237.008 1471.05,236.634 1471.62,237.118 1472.19,235.755 1472.76,235.316 1473.33,234.917 1473.89,234.699 1474.46,234.516 1475.03,234.58 1475.6,234.429 1476.17,234.301 1476.74,234.184 1477.31,232.804 1477.87,230.678 1478.44,231.925 1479.01,232.022 1479.58,232.98 1480.15,233.892 1480.72,232.722 1481.28,232.492 1481.85,231.34 1482.42,234.259 1482.99,235.087 1483.56,234.919 1484.13,234.684 1484.69,234.685 1485.26,233.703 1485.83,229.666 1486.4,231.899 1486.97,230.013 1487.54,231.264 1488.1,232.265 1488.67,232.14 1489.24,231.129 1489.81,230.075 1490.38,230.047 1490.95,229.06 1491.51,229.247 1492.08,227.481 1492.65,228.018 1493.22,226.327 1493.79,227.803 1494.36,228.49 1494.92,227.855 1495.49,230.408 1496.06,232.591 1496.63,232.701 1497.2,232.911 1497.77,235.059 1498.33,235.905 1498.9,235.737 1499.47,237.69 1500.04,236.331 1500.61,236.056 1501.18,236.007 1501.74,233.775 1502.31,233.668 1502.88,230.691 1503.45,230.972 1504.02,233.077 1504.59,232.201 1505.15,229.102 1505.72,229.373 1506.29,230.625 1506.86,227.758 1507.43,227.267 1508,227.658 1508.56,228.101 1509.13,231.45 1509.7,236.687 1510.27,238.462 1510.84,238.127 1511.41,237.988 1511.97,236.618 1512.54,236.424 1513.11,234.099 1513.68,234.265 1514.25,235.173 1514.82,235.141 1515.38,235.071 1515.95,235.196 1516.52,237.022 1517.09,236.69 1517.66,236.471 1518.23,237.173 1518.79,236.928 1519.36,237.569 1519.93,238.151 1520.5,234.739 1521.07,233.522 1521.64,233.628 1522.2,233.573 1522.77,232.617 1523.34,233.84 1523.91,231.893 1524.48,230.973 1525.05,233.06 1525.61,232.772 1526.18,231.653 1526.75,230.848 1527.32,230.045 1527.89,233.501 1528.46,233.859 1529.02,233.84 1529.59,233.911 1530.16,231.946 1530.73,231.102 1531.3,230.159 1531.87,230.439 1532.43,233.688 1533,231.84 1533.57,233.087 1534.14,231.945 1534.71,231.881 1535.28,230.992 1535.84,231.307 1536.41,234.738 1536.98,233.511 1537.55,232.689 1538.12,233.83 1538.69,232.626 1539.25,232.692 1539.82,232.9 1540.39,227.679 1540.96,228.264 1541.53,226.709 1542.1,228.043 1542.66,230.431 1543.23,233.683 1543.8,234.017 1544.37,232.04 1544.94,233.356 1545.51,233.416 1546.08,234.325 1546.64,234.399 1547.21,235.566 1547.78,235.497 1548.35,236.575 1548.92,236.499 1549.49,235.312 1550.05,236.207 1550.62,235.034 1551.19,235.892 1551.76,235.756 1552.33,235.567 1552.9,236.534 1553.46,237.535 1554.03,240.476 1554.6,239.236 1555.17,239.847 1555.74,240.557 1556.31,238.068 1556.87,237.984 1557.44,237.427 1558.01,237.092 1558.58,234.637 1559.15,233.62 1559.72,233.513 1560.28,233.484 1560.85,233.337 1561.42,232.472 1561.99,232.614 1562.56,230.68 1563.13,231.921 1563.69,231.144 1564.26,231.522 1564.83,231.765 1565.4,232.83 1565.97,234.041 1566.54,233.139 1567.1,233.225 1567.67,233.229 1568.24,234.273 1568.81,233.075 1569.38,233.251 1569.95,234.431 1570.51,235.464 1571.08,235.45 1571.65,235.481 1572.22,235.3 1572.79,235.298 1573.36,235.158 1573.92,236.371 1574.49,237.21 1575.06,238.025 1575.63,236.443 1576.2,238.296 1576.77,235.998 1577.33,235.648 1577.9,235.355 1578.47,236.503 1579.04,235.119 1579.61,234.051 1580.18,234.132 1580.74,235.019 1581.31,234.808 1581.88,234.651 1582.45,233.542 1583.02,233.418 1583.59,233.485 1584.15,233.398 1584.72,233.408 1585.29,232.413 1585.86,232.468 1586.43,233.532 1587,232.49 1587.56,231.577 1588.13,230.644 1588.7,231.936 1589.27,230.816 1589.84,230.981 1590.41,232.087 1590.97,234.166 1591.54,234.114 1592.11,233.073 1592.68,233.065 1593.25,230.129 1593.82,232.599 1594.38,233.493 1594.95,232.271 1595.52,229.287 1596.09,229.621 1596.66,231.691 1597.23,230.618 1597.79,231.864 1598.36,231.027 1598.93,229.998 1599.5,232.429 1600.07,234.457 1600.64,235.506 1601.2,235.436 1601.77,233.256 1602.34,232.289 1602.91,230.552 1603.48,229.863 1604.05,229.06 1604.61,230.512 1605.18,230.756 1605.75,231.032 1606.32,231.209 1606.89,231.562 1607.46,231.837 1608.02,234.936 1608.59,234.874 1609.16,234.906 1609.73,233.828 1610.3,235.131 1610.87,235.997 1611.43,235.833 1612,235.833 1612.57,236.631 1613.14,236.62 1613.71,234.337 1614.28,234.618 1614.84,234.41 1615.41,234.045 1615.98,232.8 1616.55,232.743 1617.12,232.804 1617.69,232.935 1618.26,237.067 1618.82,240.05 1619.39,237.548 1619.96,234.336 1620.53,234.089 1621.1,232.933 1621.67,230.982 1622.23,232.187 1622.8,233.432 1623.37,233.6 1623.94,231.619 1624.51,231.848 1625.08,232.174 1625.64,231.247 1626.21,231.597 1626.78,230.766 1627.35,232.141 1627.92,231.109 1628.49,231.473 1629.05,231.685 1629.62,231.963 1630.19,233.138 1630.76,233.138 1631.33,233.168 1631.9,234.144 1632.46,235.301 1633.03,234.316 1633.6,234.103 1634.17,236.183 1634.74,234.372 1635.31,236.449 1635.87,234.23 1636.44,232.16 1637.01,232.375 1637.58,230.343 1638.15,230.563 1638.72,230.767 1639.28,230.112 1639.85,231.49 1640.42,233.586 1640.99,233.538 1641.56,232.577 1642.13,234.501 1642.69,236.468 1643.26,238.596 1643.83,238.368 1644.4,238.151 1644.97,239.89 1645.54,240.661 1646.1,239.201 1646.67,239.765 1647.24,238.577 1647.81,238.255 1648.38,236.617 1648.95,236.266 1649.51,235.037 1650.08,234.949 1650.65,236.906 1651.22,234.698 1651.79,233.604 1652.36,232.538 1652.92,233.641 1653.49,230.55 1654.06,227.645 1654.63,228.938 1655.2,230.2 1655.77,230.602 1656.33,229.637 1656.9,230.048 1657.47,230.173 1658.04,230.574 1658.61,227.643 1659.18,230.298 1659.74,232.676 1660.31,231.803 1660.88,232.059 1661.45,230.359 1662.02,230.727 1662.59,231.174 1663.15,231.555 1663.72,231.724 1664.29,231.842 1664.86,233.188 1665.43,236.335 1666,236.101 1666.56,234.032 1667.13,233.028 1667.7,233.211 1668.27,233.142 1668.84,233.228 1669.41,233.149 1669.97,231.313 1670.54,230.459 1671.11,230.731 1671.68,229.892 1672.25,228.002 1672.82,227.459 1673.38,229.117 1673.95,229.477 1674.52,229.868 1675.09,229.117 1675.66,226.577 1676.23,228.077 1676.79,228.721 1677.36,229.283 1677.93,230.123 1678.5,231.609 1679.07,232.978 1679.64,232.464 1680.2,232.699 1680.77,231.646 1681.34,232.986 1681.91,235.197 1682.48,233.222 1683.05,234.39 1683.61,231.304 1684.18,232.702 1684.75,233.103 1685.32,233.579 1685.89,234.737 1686.46,234.952 1687.02,236.139 1687.59,236.25 1688.16,236.179 1688.73,239.186 1689.3,238.91 1689.87,241.669 1690.44,242.304 1691,243.792 1691.57,243.062 1692.14,243.562 1692.71,241.731 1693.28,242.461 1693.85,241.899 1694.41,239.377 1694.98,237.054 1695.55,238.974 1696.12,239.451 1696.69,239.035 1697.26,242.697 1697.82,241.254 1698.39,240.775 1698.96,241.22 1699.53,237.57 1700.1,237.032 1700.67,235.903 1701.23,234.722 1701.8,231.476 1702.37,230.462 1702.94,232.683 1703.51,234.802 1704.08,234.716 1704.64,233.294 1705.21,234.327 1705.78,235.512 1706.35,238.541 1706.92,239.138 1707.49,238.572 1708.05,239.429 1708.62,238.916 1709.19,237.421 1709.76,238.292 1710.33,237.05 1710.9,236.875 1711.46,236.446 1712.03,232.065 1712.6,230.295 1713.17,231.488 1713.74,232.555 1714.31,233.369 1714.87,232.181 1715.44,233.284 1716.01,234.232 1716.58,233.035 1717.15,232.902 1717.72,232.085 1718.28,236.039 1718.85,233.839 1719.42,233.713 1719.99,233.602 1720.56,232.577 1721.13,233.608 1721.69,234.555 1722.26,231.572 1722.83,231.912 1723.4,232.978 1723.97,234.892 1724.54,235.452 1725.1,235.181 1725.67,234.933 1726.24,233.695 1726.81,232.765 1727.38,232.771 1727.95,232.908 1728.51,232.65 1729.08,233.562 1729.65,231.348 1730.22,233.578 1730.79,232.29 1731.36,231.245 1731.92,230.353 1732.49,230.306 1733.06,231.306 1733.63,232.612 1734.2,233.473 1734.77,234.394 1735.33,233.219 1735.9,231.145 1736.47,229.28 1737.04,228.639 1737.61,230.083 1738.18,230.243 1738.74,231.566 1739.31,230.851 1739.88,229.728 1740.45,228.997 1741.02,229.24 1741.59,227.377 1742.15,226.652 1742.72,228.185 1743.29,226.468 1743.86,226.002 1744.43,223.684 1745,225.482 1745.56,227.241 1746.13,227.824 1746.7,228.261 1747.27,231.665 1747.84,231.891 1748.41,235.192 1748.97,234.021 1749.54,233.174 1750.11,233.302 1750.68,234.56 1751.25,235.807 1751.82,236.683 1752.38,236.513 1752.95,237.281 1753.52,234.057 1754.09,234.099 1754.66,237.286 1755.23,236.009 1755.79,235.89 1756.36,233.774 1756.93,230.709 1757.5,231.147 1758.07,232.199 1758.64,232.212 1759.21,233.574 1759.77,235.979 1760.34,236.956 1760.91,234.84 1761.48,237.759 1762.05,238.438 1762.62,239.188 1763.18,237.635 1763.75,236.465 1764.32,236.314 1764.89,234.046 1765.46,235.967 1766.03,235.825 1766.59,236.475 1767.16,236.469 1767.73,234.156 1768.3,234.017 1768.87,233.915 1769.44,233.955 1770,233.912 1770.57,234.668 1771.14,235.446 1771.71,235.295 1772.28,236.145 1772.85,236.995 1773.41,236.795 1773.98,237.395 1774.55,234.165 1775.12,235.162 1775.69,236.066 1776.26,235.841 1776.82,236.599 1777.39,236.615 1777.96,236.408 1778.53,238.552 1779.1,237.307 1779.67,237.909 1780.23,236.462 1780.8,235.237 1781.37,233.832 1781.94,233.733 1782.51,233.499 1783.08,232.521 1783.64,233.643 1784.21,233.641 1784.78,233.712 1785.35,233.58 1785.92,233.577 1786.49,232.663 1787.05,234.997 1787.62,235.855 1788.19,234.513 1788.76,233.519 1789.33,233.539 1789.9,233.539 1790.46,233.572 1791.03,232.639 1791.6,231.67 1792.17,229.753 1792.74,230.071 1793.31,231.358 1793.87,232.482 1794.44,233.704 1795.01,232.583 1795.58,235.744 1796.15,236.646 1796.72,234.304 1797.28,234.327 1797.85,235.399 1798.42,236.043 1798.99,236.96 1799.56,232.664 1800.13,232.761 1800.69,234.786 1801.26,231.353 1801.83,232.421 1802.4,233.699 1802.97,234.733 1803.54,235.579 1804.1,234.257 1804.67,231.421 1805.24,231.433 1805.81,227.441 1806.38,226.833 1806.95,227.213 1807.51,228.649 1808.08,227.905 1808.65,229.495 1809.22,230.858 1809.79,231.964 1810.36,231.037 1810.92,232.101 1811.49,232.204 1812.06,232.474 1812.63,229.412 1813.2,229.682 1813.77,231.011 1814.33,232.187 1814.9,232.288 1815.47,233.422 1816.04,234.63 1816.61,234.521 1817.18,234.592 1817.74,234.643 1818.31,233.486 1818.88,233.577 1819.45,233.518 1820.02,234.528 1820.59,231.484 1821.15,230.668 1821.72,230.916 1822.29,229.065 1822.86,231.543 1823.43,230.778 1824,231.034 1824.56,231.292 1825.13,230.73 1825.7,232.049 1826.27,234.199 1826.84,236.337 1827.41,236.124 1827.97,235.955 1828.54,234.925 1829.11,235.941 1829.68,234.722 1830.25,235.729 1830.82,236.646 1831.39,237.611 1831.95,235.386 1832.52,235.445 1833.09,234.397 1833.66,237.304 1834.23,236.836 1834.8,237.676 1835.36,235.527 1835.93,232.429 1836.5,232.667 1837.07,232.812 1837.64,231.81 1838.21,231.003 1838.77,233.204 1839.34,233.34 1839.91,234.365 1840.48,235.386 1841.05,235.346 1841.62,235.381 1842.18,231.187 1842.75,231.511 1843.32,230.743 1843.89,231.931 1844.46,231.975 1845.03,236.252 1845.59,235.145 1846.16,233.95 1846.73,234.945 1847.3,234.04 1847.87,233.177 1848.44,234.455 1849,235.172 1849.57,237.052 1850.14,236.899 1850.71,237.616 1851.28,237.313 1851.85,234.982 1852.41,235.145 1852.98,236.125 1853.55,236.938 1854.12,237.833 1854.69,237.428 1855.26,236.978 1855.82,234.745 1856.39,233.566 1856.96,233.416 1857.53,232.402 1858.1,233.423 1858.67,232.396 1859.23,232.458 1859.8,234.564 1860.37,233.309 1860.94,233.435 1861.51,233.485 1862.08,232.517 1862.64,232.638 1863.21,233.765 1863.78,234.71 1864.35,234.6 1864.92,234.713 1865.49,233.621 1866.05,234.641 1866.62,234.719 1867.19,235.557 1867.76,235.356 1868.33,234.259 1868.9,232.261 1869.46,232.339 1870.03,233.517 1870.6,232.487 1871.17,233.371 1871.74,232.091 1872.31,232.194 1872.87,231.351 1873.44,230.309 1874.01,230.536 1874.58,230.706 1875.15,231.036 1875.72,231.295 1876.28,230.505 1876.85,229.729 1877.42,227.077 1877.99,226.682 1878.56,226.192 1879.13,228.814 1879.69,231.189 1880.26,233.461 1880.83,234.805 1881.4,234.616 1881.97,237.693 1882.54,236.501 1883.1,235.648 1883.67,234.573 1884.24,232.58 1884.81,232.628 1885.38,234.703 1885.95,235.657 1886.51,234.418 1887.08,234.536 1887.65,236.52 1888.22,236.107 1888.79,234.859 1889.36,239.911 1889.92,239.467 1890.49,238.205 1891.06,238.023 1891.63,238.841 1892.2,238.462 1892.77,240.048 1893.33,241.54 1893.9,242.034 1894.47,242.253 1895.04,242.609 1895.61,242.141 1896.18,242.51 1896.74,243.872 1897.31,242.888 1897.88,242.352 1898.45,241.606 1899.02,241.124 1899.59,240.51 1900.16,241.848 1900.72,241.108 1901.29,239.479 1901.86,237.78 1902.43,233.254 1903,230.123 1903.57,231.199 1904.13,231.131 1904.7,232.195 1905.27,232.402 1905.84,232.238 1906.41,230.198 1906.98,228.235 1907.54,229.504 1908.11,229.504 1908.68,228.691 1909.25,226.813 1909.82,225.354 1910.39,224.9 1910.95,225.501 1911.52,224.006 1912.09,224.554 1912.66,227.253 1913.23,228.726 1913.8,227.912 1914.36,228.251 1914.93,231.557 1915.5,231.662 1916.07,231.75 1916.64,231.687 1917.21,230.9 1917.77,233.272 1918.34,235.297 1918.91,235.22 1919.48,234.17 1920.05,233.249 1920.62,231.069 1921.18,230.138 1921.75,230.471 1922.32,230.775 1922.89,232.041 1923.46,228.947 1924.03,230.342 1924.59,229.608 1925.16,229.735 1925.73,229.931 1926.3,231.216 1926.87,233.643 1927.44,233.733 1928,234.794 1928.57,234.862 1929.14,235.99 1929.71,234.901 1930.28,237.169 1930.85,235.698 1931.41,234.462 1931.98,234.525 1932.55,236.587 1933.12,235.454 1933.69,236.462 1934.26,238.312 1934.82,237.912 1935.39,237.517 1935.96,238.17 1936.53,237.015 1937.1,236.52 1937.67,240.196 1938.23,241.833 1938.8,241.086 1939.37,239.728 1939.94,236.154 1940.51,232.952 1941.08,234.049 1941.64,235.001 1942.21,234.852 1942.78,235.892 1943.35,235.614 1943.92,236.495 1944.49,239.391 1945.05,237.787 1945.62,238.418 1946.19,238.095 1946.76,234.685 1947.33,235.508 1947.9,237.295 1948.46,237.124 1949.03,236.867 1949.6,235.432 1950.17,237.28 1950.74,236.106 1951.31,237.901 1951.87,237.441 1952.44,237.063 1953.01,238.833 1953.58,238.338 1954.15,234.715 1954.72,235.46 1955.28,233.166 1955.85,233.078 1956.42,232.808 1956.99,232.694 1957.56,232.559 1958.13,231.35 1958.69,232.209 1959.26,230.909 1959.83,230.275 1960.4,229.348 1960.97,227.514 1961.54,227.943 1962.1,229.17 1962.67,228.514 1963.24,229.771 1963.81,227.795 1964.38,227.04 1964.95,225.251 1965.51,225.826 1966.08,226.485 1966.65,223.819 1967.22,226.481 1967.79,228.184 1968.36,229.439 1968.92,228.784 1969.49,229.157 1970.06,230.555 1970.63,231.729 1971.2,232.807 1971.77,232.922 1972.34,232.881 1972.9,232.815 1973.47,235.057 1974.04,234.1 1974.61,234.103 1975.18,233.17 1975.75,232.876 1976.31,231.868 1976.88,232.198 1977.45,232.279 1978.02,232.341 1978.59,232.429 1979.16,232.705 1979.72,236.956 1980.29,235.561 1980.86,235.704 1981.43,232.533 1982,233.483 1982.57,232.416 1983.13,232.519 1983.7,232.612 1984.27,232.726 1984.84,232.707 1985.41,229.554 1985.98,228.977 1986.54,231.134 1987.11,232.469 1987.68,230.594 1988.25,230.645 1988.82,231.098 1989.39,231.253 1989.95,231.505 1990.52,231.782 1991.09,231.978 1991.66,231.269 1992.23,232.474 1992.8,234.543 1993.36,236.81 1993.93,235.519 1994.5,233.313 1995.07,234.581 1995.64,234.661 1996.21,235.709 1996.77,234.627 1997.34,234.528 1997.91,235.756 1998.48,235.669 1999.05,235.557 1999.62,234.468 2000.18,234.475 2000.75,230.552 2001.32,229.646 2001.89,227.954 2002.46,230.823 2003.03,231.995 2003.59,232.334 2004.16,230.484 2004.73,230.783 2005.3,231.024 2005.87,233.209 2006.44,234.264 2007,235.24 2007.57,235.249 2008.14,233.185 2008.71,232.452 2009.28,232.68 2009.85,231.619 2010.41,233.143 2010.98,234.292 2011.55,235.495 2012.12,238.427 2012.69,238.029 2013.26,235.702 2013.82,234.509 2014.39,234.428 2014.96,233.131 2015.53,233.21 2016.1,233.365 2016.67,231.642 2017.23,232.956 2017.8,232.888 2018.37,233.064 2018.94,234.182 2019.51,234.237 2020.08,235.424 2020.64,234.295 2021.21,232.088 2021.78,233.368 2022.35,235.566 2022.92,235.499 2023.49,234.384 2024.05,233.501 2024.62,230.462 2025.19,231.773 2025.76,230.824 2026.33,230.11 2026.9,230.676 2027.46,234.225 2028.03,235.161 2028.6,234.143 2029.17,235.224 2029.74,237.113 2030.31,235.023 2030.87,236.044 2031.44,235.808 2032.01,234.713 2032.58,234.647 2033.15,234.891 2033.72,233.659 2034.28,233.729 2034.85,233.719 2035.42,234.014 2035.99,234.07 2036.56,236.113 2037.13,234.76 2037.69,233.601 2038.26,232.606 2038.83,231.669 2039.4,229.838 2039.97,232.302 2040.54,232.387 2041.11,231.642 2041.67,231.751 2042.24,230.84 2042.81,231.194 2043.38,231.296 2043.95,233.709 2044.52,234.953 2045.08,236.077 2045.65,235.808 2046.22,234.619 2046.79,233.651 2047.36,233.771 2047.93,235.938 2048.49,235.719 2049.06,235.655 2049.63,234.6 2050.2,233.655 2050.77,235.839 2051.34,237.957 2051.9,238.707 2052.47,238.341 2053.04,236.017 2053.61,238.048 2054.18,239.886 2054.75,238.485 2055.31,239.252 2055.88,240.087 2056.45,238.669 2057.02,237.08 2057.59,236.831 2058.16,237.715 2058.72,236.391 2059.29,235.48 2059.86,233.318 2060.43,231.384 2061,232.352 2061.57,231.381 2062.13,232.445 2062.7,231.651 2063.27,233.685 2063.84,233.599 2064.41,233.607 2064.98,232.853 2065.54,233.059 2066.11,231.969 2066.68,232.028 2067.25,231.961 2067.82,234.349 2068.39,232.243 2068.95,233.138 2069.52,233.157 2070.09,232.206 2070.66,231.331 2071.23,232.403 2071.8,232.469 2072.36,233.655 2072.93,232.556 2073.5,234.648 2074.07,233.444 2074.64,234.735 2075.21,234.769 2075.77,233.658 2076.34,233.783 2076.91,232.963 2077.48,232.854 2078.05,231.951 2078.62,231.317 2079.18,230.554 2079.75,230.654 2080.32,231.031 2080.89,230.232 2081.46,229.457 2082.03,229.849 2082.59,231.132 2083.16,232.39 2083.73,231.463 2084.3,230.553 2084.87,231.768 2085.44,231.657 2086,232.02 2086.57,234.236 2087.14,233.422 2087.71,232.532 2088.28,232.576 2088.85,235.698 2089.41,235.543 2089.98,236.529 2090.55,235.361 2091.12,236.131 2091.69,238.186 2092.26,235.871 2092.82,233.587 2093.39,232.778 2093.96,232.833 2094.53,232.929 2095.1,235.129 2095.67,235.177 2096.23,235.042 2096.8,234.971 2097.37,234.892 2097.94,233.881 2098.51,234.789 2099.08,234.818 2099.64,233.524 2100.21,234.642 2100.78,234.625 2101.35,235.43 2101.92,235.237 2102.49,237.208 2103.05,236.965 2103.62,237.765 2104.19,238.507 2104.76,240.316 2105.33,239.775 2105.9,239.102 2106.46,238.601 2107.03,239.276 2107.6,238.764 2108.17,237.191 2108.74,238.122 2109.31,237.696 2109.87,235.415 2110.44,234.082 2111.01,236.186 2111.58,235.083 2112.15,234.983 2112.72,232.955 2113.29,233.893 2113.85,233.969 2114.42,235.882 2114.99,234.684 2115.56,231.591 2116.13,232.916 2116.7,231.684 2117.26,231.657 2117.83,231.457 2118.4,232.568 2118.97,236.651 2119.54,238.604 2120.11,236.06 2120.67,234.83 2121.24,235.754 2121.81,234.611 2122.38,234.477 2122.95,235.32 2123.52,235.035 2124.08,234.853 2124.65,235.674 2125.22,235.579 2125.79,235.257 2126.36,233.959 2126.93,233.93 2127.49,234.784 2128.06,231.646 2128.63,229.604 2129.2,229.855 2129.77,232.126 2130.34,231.32 2130.9,231.644 2131.47,232.874 2132.04,233.756 2132.61,234.743 2133.18,235.587 2133.75,236.505 2134.31,237.271 2134.88,238.096 2135.45,239.065 2136.02,238.527 2136.59,236.307 2137.16,237.03 2137.72,236.758 2138.29,235.545 2138.86,234.288 2139.43,234.214 2140,233.187 2140.57,233.221 2141.13,235.993 2141.7,233.44 2142.27,234.369 2142.84,235.22 2143.41,233.973 2143.98,230.642 2144.54,231.556 2145.11,230.816 2145.68,230.89 2146.25,230.01 2146.82,228.021 2147.39,227.463 2147.95,228.943 2148.52,230.361 2149.09,229.388 2149.66,228.477 2150.23,228.741 2150.8,229.026 2151.36,229.306 2151.93,231.647 2152.5,232.754 2153.07,232.901 2153.64,232.944 2154.21,232.79 2154.77,235.974 2155.34,233.704 2155.91,233.736 2156.48,233.812 2157.05,233.614 2157.62,233.415 2158.18,234.507 2158.75,233.751 2159.32,233.657 2159.89,235.839 \"/>\n<path clip-path=\"url(#clip450)\" d=\"M1649.46 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1649.46 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1649.46,1245.03 2150.8,1245.03 2150.8,1089.51 1649.46,1089.51 1649.46,1245.03 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1669.53,1141.35 1789.98,1141.35 \"/>\n<path clip-path=\"url(#clip450)\" d=\"M1817.46 1125.34 L1817.46 1132.71 L1826.23 1132.71 L1826.23 1136.02 L1817.46 1136.02 L1817.46 1150.09 Q1817.46 1153.26 1818.32 1154.16 Q1819.2 1155.07 1821.86 1155.07 L1826.23 1155.07 L1826.23 1158.63 L1821.86 1158.63 Q1816.93 1158.63 1815.05 1156.8 Q1813.18 1154.95 1813.18 1150.09 L1813.18 1136.02 L1810.05 1136.02 L1810.05 1132.71 L1813.18 1132.71 L1813.18 1125.34 L1817.46 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1843.62 1145.6 Q1838.46 1145.6 1836.47 1146.78 Q1834.48 1147.96 1834.48 1150.81 Q1834.48 1153.08 1835.96 1154.42 Q1837.46 1155.74 1840.03 1155.74 Q1843.57 1155.74 1845.7 1153.24 Q1847.86 1150.72 1847.86 1146.55 L1847.86 1145.6 L1843.62 1145.6 M1852.11 1143.84 L1852.11 1158.63 L1847.86 1158.63 L1847.86 1154.7 Q1846.4 1157.06 1844.22 1158.19 Q1842.05 1159.3 1838.9 1159.3 Q1834.92 1159.3 1832.55 1157.08 Q1830.22 1154.84 1830.22 1151.09 Q1830.22 1146.71 1833.13 1144.49 Q1836.07 1142.27 1841.88 1142.27 L1847.86 1142.27 L1847.86 1141.85 Q1847.86 1138.91 1845.91 1137.31 Q1843.99 1135.69 1840.49 1135.69 Q1838.27 1135.69 1836.17 1136.22 Q1834.06 1136.76 1832.11 1137.82 L1832.11 1133.89 Q1834.45 1132.98 1836.65 1132.54 Q1838.85 1132.08 1840.93 1132.08 Q1846.56 1132.08 1849.34 1135 Q1852.11 1137.91 1852.11 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1875.91 1136.69 Q1875.19 1136.27 1874.34 1136.09 Q1873.5 1135.88 1872.48 1135.88 Q1868.87 1135.88 1866.93 1138.24 Q1865.01 1140.58 1865.01 1144.97 L1865.01 1158.63 L1860.73 1158.63 L1860.73 1132.71 L1865.01 1132.71 L1865.01 1136.73 Q1866.35 1134.37 1868.5 1133.24 Q1870.66 1132.08 1873.73 1132.08 Q1874.17 1132.08 1874.71 1132.15 Q1875.24 1132.2 1875.89 1132.31 L1875.91 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1896.6 1145.37 Q1896.6 1140.74 1894.68 1138.19 Q1892.79 1135.65 1889.34 1135.65 Q1885.91 1135.65 1883.99 1138.19 Q1882.09 1140.74 1882.09 1145.37 Q1882.09 1149.97 1883.99 1152.52 Q1885.91 1155.07 1889.34 1155.07 Q1892.79 1155.07 1894.68 1152.52 Q1896.6 1149.97 1896.6 1145.37 M1900.86 1155.41 Q1900.86 1162.03 1897.92 1165.25 Q1894.98 1168.49 1888.92 1168.49 Q1886.67 1168.49 1884.68 1168.15 Q1882.69 1167.82 1880.82 1167.13 L1880.82 1162.98 Q1882.69 1164 1884.52 1164.49 Q1886.35 1164.97 1888.25 1164.97 Q1892.44 1164.97 1894.52 1162.78 Q1896.6 1160.6 1896.6 1156.18 L1896.6 1154.07 Q1895.29 1156.36 1893.23 1157.5 Q1891.17 1158.63 1888.29 1158.63 Q1883.53 1158.63 1880.61 1155 Q1877.69 1151.36 1877.69 1145.37 Q1877.69 1139.35 1880.61 1135.72 Q1883.53 1132.08 1888.29 1132.08 Q1891.17 1132.08 1893.23 1133.22 Q1895.29 1134.35 1896.6 1136.64 L1896.6 1132.71 L1900.86 1132.71 L1900.86 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1931.81 1144.6 L1931.81 1146.69 L1912.23 1146.69 Q1912.51 1151.09 1914.87 1153.4 Q1917.25 1155.69 1921.49 1155.69 Q1923.94 1155.69 1926.23 1155.09 Q1928.55 1154.49 1930.82 1153.28 L1930.82 1157.31 Q1928.53 1158.28 1926.12 1158.79 Q1923.71 1159.3 1921.23 1159.3 Q1915.03 1159.3 1911.4 1155.69 Q1907.79 1152.08 1907.79 1145.92 Q1907.79 1139.56 1911.21 1135.83 Q1914.66 1132.08 1920.49 1132.08 Q1925.73 1132.08 1928.76 1135.46 Q1931.81 1138.82 1931.81 1144.6 M1927.55 1143.35 Q1927.51 1139.86 1925.59 1137.78 Q1923.69 1135.69 1920.54 1135.69 Q1916.98 1135.69 1914.82 1137.71 Q1912.69 1139.72 1912.37 1143.38 L1927.55 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1943.02 1125.34 L1943.02 1132.71 L1951.79 1132.71 L1951.79 1136.02 L1943.02 1136.02 L1943.02 1150.09 Q1943.02 1153.26 1943.87 1154.16 Q1944.75 1155.07 1947.41 1155.07 L1951.79 1155.07 L1951.79 1158.63 L1947.41 1158.63 Q1942.48 1158.63 1940.61 1156.8 Q1938.73 1154.95 1938.73 1150.09 L1938.73 1136.02 L1935.61 1136.02 L1935.61 1132.71 L1938.73 1132.71 L1938.73 1125.34 L1943.02 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip450)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1669.53,1193.19 1789.98,1193.19 \"/>\n<path clip-path=\"url(#clip450)\" d=\"M1831.77 1194.82 L1831.77 1210.47 L1827.51 1210.47 L1827.51 1194.96 Q1827.51 1191.28 1826.07 1189.45 Q1824.64 1187.62 1821.77 1187.62 Q1818.32 1187.62 1816.33 1189.82 Q1814.34 1192.02 1814.34 1195.82 L1814.34 1210.47 L1810.05 1210.47 L1810.05 1184.55 L1814.34 1184.55 L1814.34 1188.57 Q1815.86 1186.24 1817.92 1185.08 Q1820.01 1183.92 1822.72 1183.92 Q1827.18 1183.92 1829.48 1186.7 Q1831.77 1189.45 1831.77 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1850.31 1187.53 Q1846.88 1187.53 1844.89 1190.22 Q1842.9 1192.88 1842.9 1197.53 Q1842.9 1202.18 1844.87 1204.87 Q1846.86 1207.53 1850.31 1207.53 Q1853.71 1207.53 1855.7 1204.85 Q1857.69 1202.16 1857.69 1197.53 Q1857.69 1192.93 1855.7 1190.24 Q1853.71 1187.53 1850.31 1187.53 M1850.31 1183.92 Q1855.86 1183.92 1859.04 1187.53 Q1862.21 1191.14 1862.21 1197.53 Q1862.21 1203.9 1859.04 1207.53 Q1855.86 1211.14 1850.31 1211.14 Q1844.73 1211.14 1841.56 1207.53 Q1838.41 1203.9 1838.41 1197.53 Q1838.41 1191.14 1841.56 1187.53 Q1844.73 1183.92 1850.31 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1884.29 1188.53 Q1883.57 1188.11 1882.72 1187.93 Q1881.88 1187.72 1880.86 1187.72 Q1877.25 1187.72 1875.31 1190.08 Q1873.39 1192.42 1873.39 1196.81 L1873.39 1210.47 L1869.11 1210.47 L1869.11 1184.55 L1873.39 1184.55 L1873.39 1188.57 Q1874.73 1186.21 1876.88 1185.08 Q1879.04 1183.92 1882.11 1183.92 Q1882.55 1183.92 1883.09 1183.99 Q1883.62 1184.04 1884.27 1184.15 L1884.29 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1908.11 1189.52 Q1909.71 1186.65 1911.93 1185.29 Q1914.15 1183.92 1917.16 1183.92 Q1921.21 1183.92 1923.41 1186.77 Q1925.61 1189.59 1925.61 1194.82 L1925.61 1210.47 L1921.33 1210.47 L1921.33 1194.96 Q1921.33 1191.24 1920.01 1189.43 Q1918.69 1187.62 1915.98 1187.62 Q1912.67 1187.62 1910.75 1189.82 Q1908.83 1192.02 1908.83 1195.82 L1908.83 1210.47 L1904.54 1210.47 L1904.54 1194.96 Q1904.54 1191.21 1903.23 1189.43 Q1901.91 1187.62 1899.15 1187.62 Q1895.89 1187.62 1893.97 1189.85 Q1892.04 1192.05 1892.04 1195.82 L1892.04 1210.47 L1887.76 1210.47 L1887.76 1184.55 L1892.04 1184.55 L1892.04 1188.57 Q1893.5 1186.19 1895.54 1185.06 Q1897.58 1183.92 1900.38 1183.92 Q1903.2 1183.92 1905.17 1185.36 Q1907.16 1186.79 1908.11 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.026 ± 0.018\n  with uncertainty of ± 0.0011730670768206439\n  from 125 blocks after 4 transformations (k = 5).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01437 ± (0.00274536, 0.00268349) (MC)\n  95% confidence interval: [-4.02007, -4.00889]) (MC)\n  linear error propagation: -4.01435 ± 0.00267654\n  |δ_y| = |0.00134595| (≤ 0.1 for normal approx)\n  Blocking successful with 31 blocks after 6 transformations (k = 7).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.014370611037659, val_l = 0.0057030184545130425, val_u = 0.005480017806757331)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip480\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip480)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip481\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip480)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip482\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip480)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1220.15 1391.71 L1220.15 1397.25 Q1217.67 1395.98 1214.99 1395.34 Q1212.32 1394.71 1209.46 1394.71 Q1205.1 1394.71 1202.9 1396.04 Q1200.74 1397.38 1200.74 1400.05 Q1200.74 1402.09 1202.3 1403.27 Q1203.85 1404.41 1208.57 1405.46 L1210.57 1405.91 Q1216.81 1407.25 1219.42 1409.7 Q1222.06 1412.12 1222.06 1416.48 Q1222.06 1421.44 1218.11 1424.34 Q1214.2 1427.23 1207.32 1427.23 Q1204.46 1427.23 1201.34 1426.66 Q1198.25 1426.12 1194.82 1425.01 L1194.82 1418.96 Q1198.06 1420.65 1201.21 1421.51 Q1204.36 1422.33 1207.45 1422.33 Q1211.59 1422.33 1213.82 1420.93 Q1216.05 1419.5 1216.05 1416.92 Q1216.05 1414.54 1214.42 1413.26 Q1212.83 1411.99 1207.39 1410.81 L1205.35 1410.33 Q1199.91 1409.19 1197.49 1406.83 Q1195.07 1404.45 1195.07 1400.31 Q1195.07 1395.28 1198.64 1392.54 Q1202.2 1389.8 1208.76 1389.8 Q1212 1389.8 1214.87 1390.28 Q1217.73 1390.76 1220.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1237.18 1380.54 L1237.18 1390.66 L1249.24 1390.66 L1249.24 1395.22 L1237.18 1395.22 L1237.18 1414.57 Q1237.18 1418.93 1238.36 1420.17 Q1239.57 1421.41 1243.23 1421.41 L1249.24 1421.41 L1249.24 1426.31 L1243.23 1426.31 Q1236.45 1426.31 1233.87 1423.8 Q1231.29 1421.25 1231.29 1414.57 L1231.29 1395.22 L1226.99 1395.22 L1226.99 1390.66 L1231.29 1390.66 L1231.29 1380.54 L1237.18 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1287.44 1407.02 L1287.44 1409.89 L1260.51 1409.89 Q1260.89 1415.94 1264.14 1419.12 Q1267.42 1422.27 1273.24 1422.27 Q1276.61 1422.27 1279.77 1421.44 Q1282.95 1420.61 1286.07 1418.96 L1286.07 1424.5 Q1282.92 1425.83 1279.61 1426.53 Q1276.3 1427.23 1272.89 1427.23 Q1264.36 1427.23 1259.36 1422.27 Q1254.4 1417.3 1254.4 1408.84 Q1254.4 1400.08 1259.11 1394.96 Q1263.85 1389.8 1271.87 1389.8 Q1279.07 1389.8 1283.24 1394.45 Q1287.44 1399.07 1287.44 1407.02 M1281.58 1405.3 Q1281.52 1400.5 1278.87 1397.63 Q1276.26 1394.77 1271.94 1394.77 Q1267.03 1394.77 1264.07 1397.54 Q1261.15 1400.31 1260.7 1405.34 L1281.58 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1302.71 1420.96 L1302.71 1439.87 L1296.83 1439.87 L1296.83 1390.66 L1302.71 1390.66 L1302.71 1396.07 Q1304.56 1392.89 1307.36 1391.36 Q1310.19 1389.8 1314.11 1389.8 Q1320.6 1389.8 1324.64 1394.96 Q1328.72 1400.12 1328.72 1408.52 Q1328.72 1416.92 1324.64 1422.08 Q1320.6 1427.23 1314.11 1427.23 Q1310.19 1427.23 1307.36 1425.71 Q1304.56 1424.15 1302.71 1420.96 M1322.64 1408.52 Q1322.64 1402.06 1319.97 1398.4 Q1317.32 1394.71 1312.68 1394.71 Q1308.03 1394.71 1305.36 1398.4 Q1302.71 1402.06 1302.71 1408.52 Q1302.71 1414.98 1305.36 1418.67 Q1308.03 1422.33 1312.68 1422.33 Q1317.32 1422.33 1319.97 1418.67 Q1322.64 1414.98 1322.64 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1361.15 1391.71 L1361.15 1397.25 Q1358.67 1395.98 1356 1395.34 Q1353.32 1394.71 1350.46 1394.71 Q1346.1 1394.71 1343.9 1396.04 Q1341.74 1397.38 1341.74 1400.05 Q1341.74 1402.09 1343.3 1403.27 Q1344.86 1404.41 1349.57 1405.46 L1351.57 1405.91 Q1357.81 1407.25 1360.42 1409.7 Q1363.06 1412.12 1363.06 1416.48 Q1363.06 1421.44 1359.11 1424.34 Q1355.2 1427.23 1348.32 1427.23 Q1345.46 1427.23 1342.34 1426.66 Q1339.25 1426.12 1335.82 1425.01 L1335.82 1418.96 Q1339.06 1420.65 1342.21 1421.51 Q1345.36 1422.33 1348.45 1422.33 Q1352.59 1422.33 1354.82 1420.93 Q1357.05 1419.5 1357.05 1416.92 Q1357.05 1414.54 1355.42 1413.26 Q1353.83 1411.99 1348.39 1410.81 L1346.35 1410.33 Q1340.91 1409.19 1338.49 1406.83 Q1336.07 1404.45 1336.07 1400.31 Q1336.07 1395.28 1339.64 1392.54 Q1343.2 1389.8 1349.76 1389.8 Q1353 1389.8 1355.87 1390.28 Q1358.73 1390.76 1361.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1144.09 2211.02,1144.09 \"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,978.635 2211.02,978.635 \"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,813.177 2211.02,813.177 \"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,647.718 2211.02,647.718 \"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,482.26 2211.02,482.26 \"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,316.802 2211.02,316.802 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1144.09 365.751,1144.09 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,978.635 365.751,978.635 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,813.177 365.751,813.177 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,647.718 365.751,647.718 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,482.26 365.751,482.26 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,316.802 365.751,316.802 \"/>\n<path clip-path=\"url(#clip480)\" d=\"M298.909 1129.89 Q295.298 1129.89 293.469 1133.46 Q291.664 1137 291.664 1144.13 Q291.664 1151.23 293.469 1154.8 Q295.298 1158.34 298.909 1158.34 Q302.543 1158.34 304.349 1154.8 Q306.177 1151.23 306.177 1144.13 Q306.177 1137 304.349 1133.46 Q302.543 1129.89 298.909 1129.89 M298.909 1126.19 Q304.719 1126.19 307.775 1130.79 Q310.853 1135.38 310.853 1144.13 Q310.853 1152.85 307.775 1157.46 Q304.719 1162.04 298.909 1162.04 Q293.099 1162.04 290.02 1157.46 Q286.964 1152.85 286.964 1144.13 Q286.964 1135.38 290.02 1130.79 Q293.099 1126.19 298.909 1126.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M259.557 991.98 L267.196 991.98 L267.196 965.614 L258.886 967.281 L258.886 963.021 L267.15 961.355 L271.826 961.355 L271.826 991.98 L279.465 991.98 L279.465 995.915 L259.557 995.915 L259.557 991.98 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M298.909 964.433 Q295.298 964.433 293.469 967.998 Q291.664 971.54 291.664 978.669 Q291.664 985.776 293.469 989.341 Q295.298 992.882 298.909 992.882 Q302.543 992.882 304.349 989.341 Q306.177 985.776 306.177 978.669 Q306.177 971.54 304.349 967.998 Q302.543 964.433 298.909 964.433 M298.909 960.73 Q304.719 960.73 307.775 965.336 Q310.853 969.92 310.853 978.669 Q310.853 987.396 307.775 992.003 Q304.719 996.586 298.909 996.586 Q293.099 996.586 290.02 992.003 Q286.964 987.396 286.964 978.669 Q286.964 969.92 290.02 965.336 Q293.099 960.73 298.909 960.73 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M262.775 826.521 L279.094 826.521 L279.094 830.457 L257.15 830.457 L257.15 826.521 Q259.812 823.767 264.395 819.137 Q269.002 814.484 270.182 813.142 Q272.428 810.619 273.307 808.883 Q274.21 807.123 274.21 805.434 Q274.21 802.679 272.266 800.943 Q270.344 799.207 267.242 799.207 Q265.043 799.207 262.59 799.971 Q260.159 800.734 257.381 802.285 L257.381 797.563 Q260.205 796.429 262.659 795.85 Q265.113 795.272 267.15 795.272 Q272.52 795.272 275.715 797.957 Q278.909 800.642 278.909 805.133 Q278.909 807.262 278.099 809.183 Q277.312 811.082 275.205 813.674 Q274.627 814.345 271.525 817.563 Q268.423 820.757 262.775 826.521 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M298.909 798.975 Q295.298 798.975 293.469 802.54 Q291.664 806.082 291.664 813.211 Q291.664 820.318 293.469 823.882 Q295.298 827.424 298.909 827.424 Q302.543 827.424 304.349 823.882 Q306.177 820.318 306.177 813.211 Q306.177 806.082 304.349 802.54 Q302.543 798.975 298.909 798.975 M298.909 795.272 Q304.719 795.272 307.775 799.878 Q310.853 804.461 310.853 813.211 Q310.853 821.938 307.775 826.545 Q304.719 831.128 298.909 831.128 Q293.099 831.128 290.02 826.545 Q286.964 821.938 286.964 813.211 Q286.964 804.461 290.02 799.878 Q293.099 795.272 298.909 795.272 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M272.914 646.364 Q276.27 647.082 278.145 649.35 Q280.043 651.619 280.043 654.952 Q280.043 660.068 276.525 662.869 Q273.006 665.67 266.525 665.67 Q264.349 665.67 262.034 665.23 Q259.742 664.813 257.289 663.957 L257.289 659.443 Q259.233 660.577 261.548 661.156 Q263.863 661.734 266.386 661.734 Q270.784 661.734 273.076 659.998 Q275.39 658.262 275.39 654.952 Q275.39 651.896 273.238 650.184 Q271.108 648.447 267.289 648.447 L263.261 648.447 L263.261 644.605 L267.474 644.605 Q270.923 644.605 272.752 643.239 Q274.58 641.85 274.58 639.258 Q274.58 636.596 272.682 635.184 Q270.807 633.748 267.289 633.748 Q265.367 633.748 263.168 634.165 Q260.969 634.582 258.33 635.461 L258.33 631.295 Q260.992 630.554 263.307 630.184 Q265.645 629.813 267.705 629.813 Q273.029 629.813 276.131 632.244 Q279.233 634.651 279.233 638.772 Q279.233 641.642 277.59 643.633 Q275.946 645.6 272.914 646.364 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M298.909 633.517 Q295.298 633.517 293.469 637.082 Q291.664 640.623 291.664 647.753 Q291.664 654.859 293.469 658.424 Q295.298 661.966 298.909 661.966 Q302.543 661.966 304.349 658.424 Q306.177 654.859 306.177 647.753 Q306.177 640.623 304.349 637.082 Q302.543 633.517 298.909 633.517 M298.909 629.813 Q304.719 629.813 307.775 634.42 Q310.853 639.003 310.853 647.753 Q310.853 656.48 307.775 661.086 Q304.719 665.67 298.909 665.67 Q293.099 665.67 290.02 661.086 Q286.964 656.48 286.964 647.753 Q286.964 639.003 290.02 634.42 Q293.099 629.813 298.909 629.813 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M271.594 469.054 L259.789 487.503 L271.594 487.503 L271.594 469.054 M270.367 464.98 L276.247 464.98 L276.247 487.503 L281.177 487.503 L281.177 491.392 L276.247 491.392 L276.247 499.54 L271.594 499.54 L271.594 491.392 L255.992 491.392 L255.992 486.878 L270.367 464.98 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M298.909 468.059 Q295.298 468.059 293.469 471.623 Q291.664 475.165 291.664 482.295 Q291.664 489.401 293.469 492.966 Q295.298 496.508 298.909 496.508 Q302.543 496.508 304.349 492.966 Q306.177 489.401 306.177 482.295 Q306.177 475.165 304.349 471.623 Q302.543 468.059 298.909 468.059 M298.909 464.355 Q304.719 464.355 307.775 468.961 Q310.853 473.545 310.853 482.295 Q310.853 491.022 307.775 495.628 Q304.719 500.211 298.909 500.211 Q293.099 500.211 290.02 495.628 Q286.964 491.022 286.964 482.295 Q286.964 473.545 290.02 468.961 Q293.099 464.355 298.909 464.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M258.793 299.522 L277.15 299.522 L277.15 303.457 L263.076 303.457 L263.076 311.929 Q264.094 311.582 265.113 311.42 Q266.131 311.235 267.15 311.235 Q272.937 311.235 276.316 314.406 Q279.696 317.577 279.696 322.994 Q279.696 328.573 276.224 331.674 Q272.752 334.753 266.432 334.753 Q264.256 334.753 261.988 334.383 Q259.742 334.012 257.335 333.272 L257.335 328.573 Q259.418 329.707 261.641 330.262 Q263.863 330.818 266.34 330.818 Q270.344 330.818 272.682 328.711 Q275.02 326.605 275.02 322.994 Q275.02 319.383 272.682 317.276 Q270.344 315.17 266.34 315.17 Q264.465 315.17 262.59 315.586 Q260.738 316.003 258.793 316.883 L258.793 299.522 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M298.909 302.6 Q295.298 302.6 293.469 306.165 Q291.664 309.707 291.664 316.836 Q291.664 323.943 293.469 327.508 Q295.298 331.049 298.909 331.049 Q302.543 331.049 304.349 327.508 Q306.177 323.943 306.177 316.836 Q306.177 309.707 304.349 306.165 Q302.543 302.6 298.909 302.6 M298.909 298.897 Q304.719 298.897 307.775 303.503 Q310.853 308.087 310.853 316.836 Q310.853 325.563 307.775 330.17 Q304.719 334.753 298.909 334.753 Q293.099 334.753 290.02 330.17 Q286.964 325.563 286.964 316.836 Q286.964 308.087 290.02 303.503 Q293.099 298.897 298.909 298.897 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip482)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1022.18 400.199,910.176 400.786,807.411 401.372,713.26 401.958,627.151 402.545,548.554 403.131,476.976 403.718,411.96 404.304,457.687 404.891,492.814 405.477,598.739 406.063,539.354 406.65,486.594 407.236,437.931 407.823,394.144 408.409,356.097 408.995,321.07 409.582,290.034 410.168,262.726 410.755,288.57 411.341,312.562 411.927,291.326 412.514,273.083 413.1,258.756 413.687,246.478 414.273,235.964 414.86,229.382 415.446,224.239 416.032,219.895 416.619,271.622 417.205,269.789 417.792,268.483 418.378,269.44 418.964,292.089 419.551,294.982 420.137,298.881 420.724,304.139 421.31,309.919 421.896,317.171 422.483,325.22 423.069,334.331 423.656,369.878 424.242,392.057 424.829,402.077 425.415,413.122 426.001,423.662 426.588,434.636 427.174,446.273 427.761,458.19 428.347,478.879 428.933,508.992 429.52,522.162 430.106,543.071 430.693,569.886 431.279,582.242 431.865,600.999 432.452,619.321 433.038,630.848 433.625,648.102 434.211,659.531 434.798,681.501 435.384,692.214 435.97,707.832 436.557,727.647 437.143,751.256 437.73,764.721 438.316,769.434 438.902,795.686 439.489,816.124 440.075,824.078 440.662,835.832 441.248,847.189 441.835,854.733 442.421,865.832 443.007,879.953 443.594,890.528 444.18,897.634 444.767,905.215 445.353,921.225 445.939,933.732 446.526,939.997 447.112,951.773 447.699,963.18 448.285,971.538 448.871,984.591 449.458,997.488 450.044,1007.68 450.631,1017.66 451.217,1024.8 451.804,1031.96 452.39,1038.61 452.976,1045.16 453.563,1049.31 454.149,1055.86 454.736,1059.92 455.322,1066.14 455.908,1074.44 456.495,1080.1 457.081,1087.88 457.668,1099.34 458.254,1104.15 458.84,1110.79 459.427,1119.67 460.013,1122.04 460.6,1128.43 461.186,1132.4 461.773,1134.48 462.359,1138.34 462.945,1143.97 463.532,1149.48 464.118,1151.34 464.705,1152.82 465.291,1154.45 465.877,1157.97 466.464,1163.05 467.05,1166.23 467.637,1169.3 468.223,1170.35 468.809,1174.87 469.396,1182.69 469.982,1188.76 470.569,1191.14 471.155,1193.64 471.742,1197.46 472.328,1204.27 472.914,1206.13 473.501,1206.21 474.087,1208.08 474.674,1213.02 475.26,1214.66 475.846,1217.54 476.433,1218.83 477.019,1220.3 477.606,1221.66 478.192,1224.44 478.778,1225.93 479.365,1226.87 479.951,1226.13 480.538,1226 481.124,1225.51 481.711,1226.65 482.297,1224.93 482.883,1226.32 483.47,1228.94 484.056,1228.71 484.643,1229.89 485.229,1231.12 485.815,1235.15 486.402,1237.62 486.988,1238.36 487.575,1236.17 488.161,1237.24 488.748,1236.84 489.334,1243.39 489.92,1241.17 490.507,1238.81 491.093,1238.14 491.68,1240.21 492.266,1242.39 492.852,1243.05 493.439,1243.51 494.025,1242.85 494.612,1243.49 495.198,1245.81 495.784,1247.89 496.371,1245.36 496.957,1244.69 497.544,1245.08 498.13,1245.71 498.717,1244.85 499.303,1246.81 499.889,1246.26 500.476,1245.52 501.062,1244.82 501.649,1248.48 502.235,1248.9 502.821,1250.53 503.408,1247.99 503.994,1245.31 504.581,1245.97 505.167,1243.89 505.753,1247.28 506.34,1242.17 506.926,1240.3 507.513,1236.99 508.099,1239.88 508.686,1239.39 509.272,1242 509.858,1241.61 510.445,1241.13 511.031,1241.96 511.618,1245.71 512.204,1243.57 512.79,1242.92 513.377,1245.42 513.963,1243.32 514.55,1242.92 515.136,1243.54 515.722,1245.51 516.309,1243.13 516.895,1241.33 517.482,1243.42 518.068,1244.12 518.655,1242.16 519.241,1242.76 519.827,1243.64 520.414,1244.28 521,1244.92 521.587,1245.48 522.173,1244.72 522.759,1244.38 523.346,1242.43 523.932,1243.35 524.519,1242.65 525.105,1243.55 525.691,1244.53 526.278,1243.89 526.864,1241.79 527.451,1244.34 528.037,1242.28 528.624,1243.21 529.21,1241.4 529.796,1240.89 530.383,1240.47 530.969,1241.2 531.556,1236.37 532.142,1237.66 532.728,1238.58 533.315,1239.72 533.901,1236.84 534.488,1240.38 535.074,1239.77 535.661,1240.65 536.247,1238.95 536.833,1238.44 537.42,1238.15 538.006,1240.38 538.593,1238.52 539.179,1236.82 539.765,1237.61 540.352,1242.73 540.938,1241.95 541.525,1242.42 542.111,1240.24 542.697,1242.18 543.284,1244.3 543.87,1243.42 544.457,1244.12 545.043,1243.26 545.63,1243.97 546.216,1242.99 546.802,1241.04 547.389,1240.31 547.975,1238.37 548.562,1237.96 549.148,1242.73 549.734,1242 550.321,1241.17 550.907,1240.84 551.494,1238.71 552.08,1238.36 552.666,1236.29 553.253,1237.11 553.839,1238.01 554.426,1237.34 555.012,1236.82 555.599,1238.85 556.185,1240.74 556.771,1238.48 557.358,1235.17 557.944,1232.31 558.531,1234.87 559.117,1235.68 559.703,1233.97 560.29,1233.86 560.876,1232.21 561.463,1232.22 562.049,1233.39 562.635,1237.2 563.222,1236.73 563.808,1234.82 564.395,1237.04 564.981,1236.59 565.568,1234.55 566.154,1234.28 566.74,1233.92 567.327,1234.71 567.913,1235.63 568.5,1236.55 569.086,1233.33 569.672,1235.7 570.259,1235.11 570.845,1234.7 571.432,1235.47 572.018,1235.06 572.605,1231.73 573.191,1231.62 573.777,1231.33 574.364,1229.99 574.95,1232.46 575.537,1232.24 576.123,1234.52 576.709,1235.34 577.296,1236.11 577.882,1234.09 578.469,1234.95 579.055,1238.36 579.641,1240.07 580.228,1237.81 580.814,1240.9 581.401,1236.36 581.987,1233.33 582.574,1232.65 583.16,1232.18 583.746,1231.71 584.333,1230.2 584.919,1228.4 585.506,1226.93 586.092,1225.37 586.678,1225.5 587.265,1225.55 587.851,1226.75 588.438,1226.52 589.024,1227.6 589.61,1227.5 590.197,1228.72 590.783,1227.24 591.37,1225.4 591.956,1226.57 592.543,1229.35 593.129,1230.46 593.715,1229.01 594.302,1231.04 594.888,1231.85 595.475,1232.6 596.061,1232.18 596.647,1231.75 597.234,1230.1 597.82,1233.89 598.407,1233.59 598.993,1236.99 599.579,1237.45 600.166,1237.87 600.752,1233.04 601.339,1232.59 601.925,1232.96 602.512,1231.06 603.098,1230.46 603.684,1230.34 604.271,1227 604.857,1226.73 605.444,1230.29 606.03,1231.18 606.616,1227.67 607.203,1227.37 607.789,1225.93 608.376,1224.49 608.962,1225.87 609.548,1228.44 610.135,1228.08 610.721,1229.12 611.308,1227.49 611.894,1228.68 612.481,1227.04 613.067,1224.01 613.653,1223.93 614.24,1223.88 614.826,1224.76 615.413,1225.82 615.999,1226.84 616.585,1230.36 617.172,1229.5 617.758,1227.83 618.345,1227.59 618.931,1229.87 619.518,1230.69 620.104,1227.29 620.69,1225.47 621.277,1226.52 621.863,1227.41 622.45,1226.96 623.036,1227.96 623.622,1228.8 624.209,1228.57 624.795,1228.06 625.382,1227.69 625.968,1226.03 626.554,1224.19 627.141,1221.25 627.727,1220.99 628.314,1219.63 628.9,1219.7 629.487,1222.62 630.073,1223.93 630.659,1222.45 631.246,1223.7 631.832,1224.61 632.419,1221.65 633.005,1220.19 633.591,1223.01 634.178,1220.01 634.764,1221.34 635.351,1217.07 635.937,1215.65 636.523,1214.57 637.11,1214.59 637.696,1216.19 638.283,1214.92 638.869,1217.58 639.456,1217.82 640.042,1219.21 640.628,1218.96 641.215,1221.65 641.801,1224.46 642.388,1226.96 642.974,1225.19 643.56,1223.63 644.147,1222.18 644.733,1222.17 645.32,1221.94 645.906,1221.99 646.492,1220.76 647.079,1220.56 647.665,1221.99 648.252,1221.83 648.838,1222.86 649.425,1224.16 650.011,1222.68 650.597,1219.74 651.184,1219.54 651.77,1220.8 652.357,1219.36 652.943,1219.29 653.529,1216.65 654.116,1215.37 654.702,1215.76 655.289,1215.98 655.875,1220.17 656.462,1218.8 657.048,1218.6 657.634,1217.43 658.221,1217.61 658.807,1217.62 659.394,1220.18 659.98,1223 660.566,1225.17 661.153,1224.95 661.739,1227.61 662.326,1226.13 662.912,1229.6 663.498,1228.78 664.085,1229.23 664.671,1229.94 665.258,1229.52 665.844,1227.73 666.431,1228.67 667.017,1227.98 667.603,1224.73 668.19,1224.19 668.776,1222.75 669.363,1221.32 669.949,1222.54 670.535,1218.5 671.122,1217.2 671.708,1214.73 672.295,1214.89 672.881,1215.26 673.467,1215.53 674.054,1215.75 674.64,1216.24 675.227,1217.72 675.813,1216.38 676.4,1220.66 676.986,1220.8 677.572,1219.22 678.159,1219.17 678.745,1220.44 679.332,1222.96 679.918,1223.91 680.504,1226.22 681.091,1225.9 681.677,1226.97 682.264,1226.33 682.85,1225.7 683.436,1222.53 684.023,1220.65 684.609,1221.77 685.196,1220.47 685.782,1219.05 686.369,1218.93 686.955,1221.64 687.541,1220.16 688.128,1221.36 688.714,1219.71 689.301,1222.09 689.887,1220.4 690.473,1220.22 691.06,1221.44 691.646,1224.08 692.233,1225.11 692.819,1226.18 693.405,1225.44 693.992,1222.35 694.578,1222.33 695.165,1224.83 695.751,1222.91 696.338,1224.07 696.924,1225.24 697.51,1226.23 698.097,1224.16 698.683,1223.89 699.27,1223.46 699.856,1218.89 700.442,1217.21 701.029,1215.87 701.615,1215.7 702.202,1218.27 702.788,1218.12 703.375,1220.62 703.961,1222.99 704.547,1223.88 705.134,1225.83 705.72,1226.53 706.307,1226.5 706.893,1227.3 707.479,1225.5 708.066,1222.36 708.652,1225 709.239,1223.19 709.825,1222.72 710.411,1226.42 710.998,1224.15 711.584,1222.59 712.171,1222.04 712.757,1224.41 713.344,1222.73 713.93,1221.11 714.516,1223.28 715.103,1224.14 715.689,1222.21 716.276,1223.36 716.862,1221.66 717.448,1221.57 718.035,1218.41 718.621,1220.76 719.208,1221.81 719.794,1223.93 720.38,1220.77 720.967,1221.62 721.553,1225.49 722.14,1226.16 722.726,1224.19 723.313,1222.47 723.899,1225.93 724.485,1226.72 725.072,1227.56 725.658,1225.61 726.245,1227.86 726.831,1223.06 727.417,1223.85 728.004,1223.23 728.59,1216.09 729.177,1215.93 729.763,1215.89 730.349,1219.85 730.936,1218.11 731.522,1216.44 732.109,1212.34 732.695,1209.68 733.282,1209.67 733.868,1212.36 734.454,1212.36 735.041,1211.08 735.627,1209.9 736.214,1206.22 736.8,1208.24 737.386,1206.95 737.973,1205.82 738.559,1208.93 739.146,1209.38 739.732,1211.13 740.318,1214.25 740.905,1214.44 741.491,1211.73 742.078,1213.36 742.664,1212.16 743.251,1209.85 743.837,1208.86 744.423,1207.91 745.01,1208.37 745.596,1209.93 746.183,1213.09 746.769,1218.76 747.355,1218.41 747.942,1214.12 748.528,1215.62 749.115,1215.44 749.701,1216.88 750.288,1215.5 750.874,1215.04 751.46,1213.7 752.047,1212.45 752.633,1214.07 753.22,1216.83 753.806,1216.48 754.392,1213.81 754.979,1213.85 755.565,1215.11 756.152,1213.48 756.738,1213.43 757.324,1212.36 757.911,1215.24 758.497,1215.18 759.084,1212.58 759.67,1210.19 760.257,1213.07 760.843,1213.36 761.429,1214.98 762.016,1216.64 762.602,1217.98 763.189,1217.75 763.775,1214.97 764.361,1213.48 764.948,1215.06 765.534,1216.4 766.121,1214.97 766.707,1214.85 767.293,1215.04 767.88,1216.49 768.466,1218.1 769.053,1217.67 769.639,1218.75 770.226,1218.57 770.812,1217.12 771.398,1221.28 771.985,1223.44 772.571,1222.95 773.158,1221.05 773.744,1220.87 774.33,1220.64 774.917,1224.32 775.503,1223.79 776.09,1220.62 776.676,1220.3 777.262,1221.37 777.849,1221.15 778.435,1223.51 779.022,1223.1 779.608,1222.73 780.195,1221.98 780.781,1222.54 781.367,1222.26 781.954,1220.86 782.54,1220.71 783.127,1220.55 783.713,1221.67 784.299,1221.5 784.886,1221.26 785.472,1222.25 786.059,1221.9 786.645,1225.59 787.232,1225.97 787.818,1223.92 788.404,1220.88 788.991,1219.26 789.577,1216.3 790.164,1216.29 790.75,1218.94 791.336,1215.73 791.923,1216.93 792.509,1213.91 793.096,1213.75 793.682,1214.94 794.268,1210.71 794.855,1212.23 795.441,1212.42 796.028,1213.73 796.614,1211.34 797.201,1211.5 797.787,1210.37 798.373,1210.61 798.96,1212.2 799.546,1213.58 800.133,1213.57 800.719,1212.33 801.305,1208.28 801.892,1204.62 802.478,1203.55 803.065,1203.76 803.651,1205.41 804.237,1208.51 804.824,1207.42 805.41,1206.46 805.997,1204.18 806.583,1205.84 807.17,1209.92 807.756,1209.74 808.342,1209.73 808.929,1207.27 809.515,1207.77 810.102,1212.03 810.688,1212.1 811.274,1209.59 811.861,1209.8 812.447,1205.78 813.034,1203.52 813.62,1202.39 814.206,1204.58 814.793,1206.69 815.379,1208.24 815.966,1211.27 816.552,1212.79 817.139,1210.08 817.725,1210.44 818.311,1211.91 818.898,1212.22 819.484,1215.15 820.071,1216.49 820.657,1217.45 821.243,1214.84 821.83,1214.48 822.416,1217.26 823.003,1219.94 823.589,1218.23 824.175,1218.52 824.762,1217.13 825.348,1219.43 825.935,1220.51 826.521,1217.31 827.108,1215.83 827.694,1212.95 828.28,1217.02 828.867,1218.19 829.453,1219.22 830.04,1218.92 830.626,1218.5 831.212,1219.42 831.799,1217.71 832.385,1218.9 832.972,1215.73 833.558,1214.21 834.145,1216.81 834.731,1216.29 835.317,1214.98 835.904,1214.95 836.49,1210.83 837.077,1210.86 837.663,1210.79 838.249,1209.54 838.836,1209.66 839.422,1210.23 840.009,1210.78 840.595,1210.71 841.181,1210.82 841.768,1212.21 842.354,1210.73 842.941,1210.94 843.527,1212.48 844.114,1215.14 844.7,1214.97 845.286,1218.82 845.873,1215.59 846.459,1214.11 847.046,1213.82 847.632,1212.61 848.218,1215.14 848.805,1215.29 849.391,1215.07 849.978,1213.83 850.564,1211.26 851.15,1211.45 851.737,1211.48 852.323,1214.29 852.91,1215.58 853.496,1215.4 854.083,1215.4 854.669,1214.07 855.255,1213.94 855.842,1211.14 856.428,1210.07 857.015,1211.55 857.601,1208.84 858.187,1209.53 858.774,1211.01 859.36,1213.69 859.947,1213.61 860.533,1216.37 861.119,1216.26 861.706,1215.74 862.292,1215.67 862.879,1216.76 863.465,1216.53 864.052,1216.42 864.638,1218.8 865.224,1218.64 865.811,1221.05 866.397,1223.25 866.984,1222.69 867.57,1223.86 868.156,1222.12 868.743,1217.66 869.329,1213.47 869.916,1214.76 870.502,1214.69 871.089,1213.12 871.675,1213.13 872.261,1211.77 872.848,1210.47 873.434,1212.01 874.021,1211.97 874.607,1214.75 875.193,1212.07 875.78,1208.13 876.366,1209.58 876.953,1211.13 877.539,1209.61 878.125,1206.9 878.712,1207.28 879.298,1209.09 879.885,1207.97 880.471,1207.3 881.058,1207.72 881.644,1208.08 882.23,1207.03 882.817,1204.46 883.403,1204.7 883.99,1205.04 884.576,1204.05 885.162,1204.23 885.749,1204.51 886.335,1204.76 886.922,1205.24 887.508,1206.68 888.094,1205.44 888.681,1207.16 889.267,1204.91 889.854,1206.4 890.44,1205.2 891.027,1204.32 891.613,1211.51 892.199,1214.49 892.786,1214.46 893.372,1211.94 893.959,1210.89 894.545,1213.35 895.131,1214.43 895.718,1216.92 896.304,1215.15 896.891,1216.47 897.477,1214.98 898.063,1214.88 898.65,1213.22 899.236,1208.92 899.823,1212.94 900.409,1214.08 900.996,1215.34 901.582,1216.16 902.168,1215.83 902.755,1218.61 903.341,1218.38 903.928,1216.31 904.514,1215.78 905.1,1215.55 905.687,1216.49 906.273,1213.52 906.86,1210.69 907.446,1210.98 908.032,1213.83 908.619,1212.22 909.205,1212.11 909.792,1209.21 910.378,1209.27 910.965,1209.27 911.551,1206.77 912.137,1205.8 912.724,1207.25 913.31,1204.96 913.897,1205.19 914.483,1205.61 915.069,1206.03 915.656,1206.34 916.242,1206.69 916.829,1204.27 917.415,1203.38 918.002,1203.9 918.588,1206.8 919.174,1205.74 919.761,1208.83 920.347,1210.38 920.934,1209.2 921.52,1209.42 922.106,1208.16 922.693,1206.92 923.279,1207.23 923.866,1211.46 924.452,1213.04 925.038,1212.67 925.625,1214.03 926.211,1212.79 926.798,1214.3 927.384,1212.8 927.971,1214.11 928.557,1212.91 929.143,1210.14 929.73,1207.57 930.316,1207.81 930.903,1209.57 931.489,1208.34 932.075,1209.55 932.662,1207.25 933.248,1210.03 933.835,1208.75 934.421,1210.47 935.007,1209.36 935.594,1212.31 936.18,1215.14 936.767,1214.99 937.353,1213.44 937.94,1213.28 938.526,1213.28 939.112,1214.63 939.699,1214.65 940.285,1213.14 940.872,1213.22 941.458,1213.13 942.044,1213.15 942.631,1211.73 943.217,1210.55 943.804,1209.27 944.39,1206.58 944.976,1209.34 945.563,1209.49 946.149,1208.49 946.736,1208.72 947.322,1210.06 947.909,1211.38 948.495,1212.5 949.081,1217.72 949.668,1218.74 950.254,1218.19 950.841,1214.98 951.427,1216.12 952.013,1214.28 952.6,1210.14 953.186,1210.26 953.773,1211.79 954.359,1211.85 954.945,1209.09 955.532,1209.49 956.118,1212.17 956.705,1213.49 957.291,1212.01 957.878,1212.43 958.464,1209.61 959.05,1209.76 959.637,1211.09 960.223,1209.83 960.81,1207.13 961.396,1207.31 961.982,1207.41 962.569,1207.69 963.155,1207.9 963.742,1206.53 964.328,1208.07 964.915,1208.34 965.501,1210.15 966.087,1210.22 966.674,1210.22 967.26,1211.65 967.847,1211.46 968.433,1211.49 969.019,1213.02 969.606,1213.17 970.192,1212.99 970.779,1214.4 971.365,1215.62 971.951,1215.36 972.538,1219.39 973.124,1219.43 973.711,1221.63 974.297,1222.33 974.884,1222.18 975.47,1221.75 976.056,1221.26 976.643,1219.26 977.229,1218.7 977.816,1218.41 978.402,1216.66 978.988,1216.36 979.575,1216 980.161,1214.2 980.748,1215.43 981.334,1215.33 981.92,1217.92 982.507,1217.6 983.093,1214.68 983.68,1214.58 984.266,1217.18 984.853,1218.05 985.439,1213.44 986.025,1214.82 986.612,1216 987.198,1215.58 987.785,1212.57 988.371,1214.98 988.957,1216.12 989.544,1214.63 990.13,1211.61 990.717,1210.12 991.303,1207.42 991.889,1208.82 992.476,1208.87 993.062,1209.12 993.649,1207.61 994.235,1205 994.822,1204.19 995.408,1204.62 995.994,1203.66 996.581,1208.3 997.167,1205.65 997.754,1205.7 998.34,1207.44 998.926,1206.34 999.513,1206.57 1000.1,1205.4 1000.69,1205.57 1001.27,1204.51 1001.86,1204.98 1002.44,1205.52 1003.03,1204.51 1003.62,1204.62 1004.2,1206.11 1004.79,1206.43 1005.38,1205.35 1005.96,1205.64 1006.55,1205.87 1007.14,1207.58 1007.72,1207.96 1008.31,1207.9 1008.9,1208.06 1009.48,1206.74 1010.07,1207.16 1010.65,1210.29 1011.24,1211.45 1011.83,1209.98 1012.41,1211.46 1013,1214.19 1013.59,1214.04 1014.17,1215.27 1014.76,1219.15 1015.35,1217.43 1015.93,1213.1 1016.52,1214.23 1017.11,1213.96 1017.69,1213.83 1018.28,1212.42 1018.86,1212.43 1019.45,1211 1020.04,1213.71 1020.62,1213.83 1021.21,1216.5 1021.8,1213.78 1022.38,1212.37 1022.97,1215.36 1023.56,1217.9 1024.14,1216.28 1024.73,1220.38 1025.32,1217.21 1025.9,1216.72 1026.49,1216.35 1027.07,1215.77 1027.66,1215.54 1028.25,1215.2 1028.83,1217.53 1029.42,1217.24 1030.01,1217.01 1030.59,1218.2 1031.18,1213.8 1031.77,1213.6 1032.35,1213.54 1032.94,1212.15 1033.52,1212.1 1034.11,1210.69 1034.7,1209.61 1035.28,1210.93 1035.87,1209.38 1036.46,1209.48 1037.04,1212.04 1037.63,1209.22 1038.22,1213.21 1038.8,1213.21 1039.39,1211.69 1039.98,1214.29 1040.56,1213.87 1041.15,1215.05 1041.73,1214.57 1042.32,1215.82 1042.91,1214.06 1043.49,1212.43 1044.08,1212.21 1044.67,1212.12 1045.25,1209.07 1045.84,1209.07 1046.43,1205.07 1047.01,1203.94 1047.6,1202.82 1048.19,1206 1048.77,1204.93 1049.36,1205.38 1049.94,1208.2 1050.53,1208.4 1051.12,1208.68 1051.7,1210.18 1052.29,1210.35 1052.88,1210.26 1053.46,1210.36 1054.05,1209.11 1054.64,1208.13 1055.22,1209.56 1055.81,1209.42 1056.39,1206.97 1056.98,1208.62 1057.57,1210.08 1058.15,1211.28 1058.74,1212.63 1059.33,1215.47 1059.91,1215.17 1060.5,1219.14 1061.09,1217.16 1061.67,1218.06 1062.26,1221.54 1062.85,1217.95 1063.43,1217.46 1064.02,1216.98 1064.6,1215.22 1065.19,1213.94 1065.78,1213.7 1066.36,1214.82 1066.95,1217.23 1067.54,1218.2 1068.12,1216.93 1068.71,1217.87 1069.3,1216.02 1069.88,1218.16 1070.47,1217.55 1071.06,1217.24 1071.64,1213.93 1072.23,1215.02 1072.81,1216.29 1073.4,1217.52 1073.99,1217.3 1074.57,1218.36 1075.16,1216.19 1075.75,1215.66 1076.33,1218.32 1076.92,1217.89 1077.51,1217.49 1078.09,1218.54 1078.68,1219.43 1079.26,1220.29 1079.85,1217.16 1080.44,1218.29 1081.02,1218.21 1081.61,1213.66 1082.2,1216.33 1082.78,1217.27 1083.37,1216.8 1083.96,1217.98 1084.54,1215.92 1085.13,1215.37 1085.72,1212.43 1086.3,1215.08 1086.89,1214.84 1087.47,1216.06 1088.06,1217.19 1088.65,1218.03 1089.23,1219.05 1089.82,1217.22 1090.41,1219.37 1090.99,1213.36 1091.58,1213.14 1092.17,1214.23 1092.75,1212.62 1093.34,1212.37 1093.93,1212.49 1094.51,1209.53 1095.1,1209.4 1095.68,1206.52 1096.27,1210.6 1096.86,1209.21 1097.44,1207.95 1098.03,1206.94 1098.62,1208.66 1099.2,1205.92 1099.79,1207.26 1100.38,1207.35 1100.96,1205.93 1101.55,1204.8 1102.14,1206.69 1102.72,1209.4 1103.31,1209.05 1103.89,1208.04 1104.48,1208.21 1105.07,1206.87 1105.65,1205.81 1106.24,1204.82 1106.83,1203.76 1107.41,1202.55 1108,1201.73 1108.59,1200.95 1109.17,1202.85 1109.76,1203.01 1110.34,1205.02 1110.93,1204.3 1111.52,1204.74 1112.1,1205.08 1112.69,1206.91 1113.28,1208.51 1113.86,1209.94 1114.45,1210.05 1115.04,1210.27 1115.62,1213.12 1116.21,1212.92 1116.8,1214.42 1117.38,1215.49 1117.97,1216.56 1118.55,1215.19 1119.14,1213.47 1119.73,1213.37 1120.31,1214.92 1120.9,1216.02 1121.49,1216.88 1122.07,1216.72 1122.66,1215.19 1123.25,1214.01 1123.83,1213.78 1124.42,1215.18 1125.01,1215.04 1125.59,1214.79 1126.18,1215.95 1126.76,1215.78 1127.35,1215.44 1127.94,1218.08 1128.52,1214.82 1129.11,1214.22 1129.7,1212.93 1130.28,1212.66 1130.87,1208.56 1131.46,1207.41 1132.04,1209.33 1132.63,1205.27 1133.21,1205.49 1133.8,1207.15 1134.39,1205.85 1134.97,1204.7 1135.56,1204.01 1136.15,1203.36 1136.73,1202.6 1137.32,1207.24 1137.91,1208.63 1138.49,1204.73 1139.08,1204.73 1139.67,1206.47 1140.25,1206.64 1140.84,1208.57 1141.42,1210 1142.01,1211.15 1142.6,1209.61 1143.18,1208.28 1143.77,1207.05 1144.36,1209.8 1144.94,1211.27 1145.53,1210.18 1146.12,1208.87 1146.7,1209.07 1147.29,1209.42 1147.88,1209.68 1148.46,1212.54 1149.05,1211.18 1149.63,1212.6 1150.22,1213.76 1150.81,1213.68 1151.39,1218.85 1151.98,1218.55 1152.57,1218.09 1153.15,1215.11 1153.74,1213.37 1154.33,1216 1154.91,1215.9 1155.5,1216.9 1156.09,1213.96 1156.67,1215.06 1157.26,1214.76 1157.84,1217.05 1158.43,1215.6 1159.02,1216.54 1159.6,1213.71 1160.19,1213.31 1160.78,1211.49 1161.36,1215.61 1161.95,1213.91 1162.54,1212.36 1163.12,1210.72 1163.71,1205.3 1164.29,1205.56 1164.88,1207.27 1165.47,1207.68 1166.05,1211.92 1166.64,1210.72 1167.23,1212.02 1167.81,1213.49 1168.4,1213.46 1168.99,1213.44 1169.57,1210.62 1170.16,1210.57 1170.75,1207.78 1171.33,1209.31 1171.92,1210.76 1172.5,1209.19 1173.09,1210.69 1173.68,1209.43 1174.26,1207.86 1174.85,1206.49 1175.44,1206.57 1176.02,1205.81 1176.61,1203.19 1177.2,1203.69 1177.78,1205.25 1178.37,1205.63 1178.96,1204.84 1179.54,1206.61 1180.13,1206.89 1180.71,1208.54 1181.3,1208.73 1181.89,1209.91 1182.47,1208.51 1183.06,1210.1 1183.65,1210.16 1184.23,1212.78 1184.82,1212.91 1185.41,1213.16 1185.99,1214.6 1186.58,1217.25 1187.16,1212.83 1187.75,1212.9 1188.34,1212.66 1188.92,1212.71 1189.51,1209.65 1190.1,1215.39 1190.68,1212.23 1191.27,1213.56 1191.86,1213.41 1192.44,1213.29 1193.03,1213.17 1193.62,1215.61 1194.2,1216.73 1194.79,1215.11 1195.37,1213.68 1195.96,1212.39 1196.55,1211.19 1197.13,1211.37 1197.72,1210.01 1198.31,1210.2 1198.89,1210.23 1199.48,1211.67 1200.07,1210.3 1200.65,1212.93 1201.24,1215.86 1201.83,1212.68 1202.41,1214.92 1203,1214.75 1203.58,1214.57 1204.17,1211.77 1204.76,1210.4 1205.34,1208.82 1205.93,1209.08 1206.52,1210.42 1207.1,1208.94 1207.69,1203.78 1208.28,1206.8 1208.86,1205.75 1209.45,1202.95 1210.03,1206.06 1210.62,1207.41 1211.21,1207.62 1211.79,1203.51 1212.38,1203.81 1212.97,1204.2 1213.55,1204.73 1214.14,1203.77 1214.73,1204.16 1215.31,1204.64 1215.9,1204.94 1216.49,1206.68 1217.07,1206.95 1217.66,1206.18 1218.24,1207.62 1218.83,1209.03 1219.42,1209.1 1220,1210.52 1220.59,1209.13 1221.18,1207.76 1221.76,1209.33 1222.35,1209.53 1222.94,1209.72 1223.52,1212.64 1224.11,1211.36 1224.7,1209.95 1225.28,1212.65 1225.87,1208.51 1226.45,1210.04 1227.04,1206.18 1227.63,1208.97 1228.21,1207.79 1228.8,1207.9 1229.39,1207.09 1229.97,1205.94 1230.56,1204.88 1231.15,1202.69 1231.73,1204.26 1232.32,1201.86 1232.91,1203.69 1233.49,1201.44 1234.08,1204.49 1234.66,1204.73 1235.25,1205.08 1235.84,1204.08 1236.42,1204.22 1237.01,1204.73 1237.6,1206.41 1238.18,1205.57 1238.77,1207.39 1239.36,1208.85 1239.94,1210.15 1240.53,1207.65 1241.11,1209.24 1241.7,1209.63 1242.29,1208.42 1242.87,1208.69 1243.46,1211.62 1244.05,1211.79 1244.63,1213.2 1245.22,1213.16 1245.81,1212.93 1246.39,1215.15 1246.98,1218.84 1247.57,1217.03 1248.15,1215.51 1248.74,1221.78 1249.32,1221.44 1249.91,1227.78 1250.5,1226.81 1251.08,1224.94 1251.67,1226.9 1252.26,1224.85 1252.84,1221.52 1253.43,1219.64 1254.02,1216.58 1254.6,1216.21 1255.19,1216.03 1255.78,1217.41 1256.36,1215.72 1256.95,1215.44 1257.53,1217.01 1258.12,1216.49 1258.71,1214.72 1259.29,1214.32 1259.88,1211.44 1260.47,1205.75 1261.05,1205.89 1261.64,1204.79 1262.23,1205.02 1262.81,1205.44 1263.4,1208.34 1263.98,1208.45 1264.57,1208.9 1265.16,1208.97 1265.74,1209.04 1266.33,1213.07 1266.92,1210.23 1267.5,1206.3 1268.09,1207.81 1268.68,1209.22 1269.26,1209.24 1269.85,1206.68 1270.44,1207 1271.02,1206.09 1271.61,1207.48 1272.19,1208.81 1272.78,1205.91 1273.37,1204.79 1273.95,1202.5 1274.54,1204.31 1275.13,1207.31 1275.71,1207.4 1276.3,1211.46 1276.89,1208.47 1277.47,1211.42 1278.06,1211.36 1278.65,1212.68 1279.23,1215.27 1279.82,1211 1280.4,1213.55 1280.99,1213.54 1281.58,1211.91 1282.16,1213.16 1282.75,1213.26 1283.34,1214.22 1283.92,1212.85 1284.51,1212.73 1285.1,1213.87 1285.68,1212.45 1286.27,1208.58 1286.86,1212.67 1287.44,1212.79 1288.03,1212.54 1288.61,1211.15 1289.2,1211.05 1289.79,1212.33 1290.37,1213.75 1290.96,1212.46 1291.55,1210.02 1292.13,1208.6 1292.72,1205.64 1293.31,1204.64 1293.89,1206.14 1294.48,1206.64 1295.06,1208.43 1295.65,1207.07 1296.24,1207.1 1296.82,1208.6 1297.41,1209.05 1298,1209.03 1298.58,1209.2 1299.17,1208.12 1299.76,1208.49 1300.34,1208.41 1300.93,1209.48 1301.52,1208.36 1302.1,1207.11 1302.69,1207.53 1303.27,1209.32 1303.86,1210.84 1304.45,1215.01 1305.03,1213.21 1305.62,1213.14 1306.21,1211.35 1306.79,1211.55 1307.38,1208.76 1307.97,1211.52 1308.55,1211.42 1309.14,1210.19 1309.73,1211.51 1310.31,1210.24 1310.9,1210.18 1311.48,1211.39 1312.07,1214.08 1312.66,1213.99 1313.24,1216.34 1313.83,1217.24 1314.42,1215.72 1315,1216.77 1315.59,1217.87 1316.18,1220.32 1316.76,1219.73 1317.35,1216.55 1317.93,1213.46 1318.52,1211.93 1319.11,1210.22 1319.69,1210.34 1320.28,1212.99 1320.87,1211.59 1321.45,1211.26 1322.04,1210.76 1322.63,1210.53 1323.21,1211.57 1323.8,1212.82 1324.39,1214.1 1324.97,1214.25 1325.56,1211.2 1326.14,1212.54 1326.73,1212.59 1327.32,1211.02 1327.9,1208.29 1328.49,1211.32 1329.08,1211.43 1329.66,1212.9 1330.25,1212.79 1330.84,1212.66 1331.42,1213.92 1332.01,1211.36 1332.6,1211.18 1333.18,1211.33 1333.77,1209.95 1334.35,1207.13 1334.94,1205.95 1335.53,1208.78 1336.11,1208.74 1336.7,1211.81 1337.29,1212.78 1337.87,1211.64 1338.46,1212.61 1339.05,1214.1 1339.63,1212.67 1340.22,1209.74 1340.8,1206.92 1341.39,1207.32 1341.98,1207.37 1342.56,1207.86 1343.15,1206.46 1343.74,1206.83 1344.32,1206.86 1344.91,1207.01 1345.5,1206.02 1346.08,1206.37 1346.67,1201.36 1347.26,1200.55 1347.84,1201.05 1348.43,1201.31 1349.01,1201.76 1349.6,1202.11 1350.19,1205.5 1350.77,1205.99 1351.36,1206.36 1351.95,1208.03 1352.53,1208.62 1353.12,1210.04 1353.71,1211.38 1354.29,1212.27 1354.88,1208.09 1355.47,1206.81 1356.05,1202.75 1356.64,1204.61 1357.22,1208.84 1357.81,1211.34 1358.4,1208.85 1358.98,1208.94 1359.57,1207.71 1360.16,1209.53 1360.74,1210.06 1361.33,1209.17 1361.92,1207.8 1362.5,1209.3 1363.09,1210.57 1363.68,1209.42 1364.26,1209.83 1364.85,1209.75 1365.43,1210.11 1366.02,1211.33 1366.61,1212.51 1367.19,1211.05 1367.78,1211.15 1368.37,1209.54 1368.95,1209.6 1369.54,1208.38 1370.13,1209.77 1370.71,1208.18 1371.3,1208.04 1371.88,1205.36 1372.47,1205.29 1373.06,1209.77 1373.64,1211.4 1374.23,1208.56 1374.82,1209.81 1375.4,1214.15 1375.99,1213.82 1376.58,1215.13 1377.16,1214.54 1377.75,1214.21 1378.34,1212.35 1378.92,1210.75 1379.51,1211.09 1380.09,1211.22 1380.68,1211.36 1381.27,1212.69 1381.85,1214.1 1382.44,1212.52 1383.03,1212.25 1383.61,1209.36 1384.2,1206.78 1384.79,1206.83 1385.37,1205.77 1385.96,1205.9 1386.55,1207.77 1387.13,1207.99 1387.72,1208.25 1388.3,1208.28 1388.89,1209.96 1389.48,1208.74 1390.06,1208.94 1390.65,1210.35 1391.24,1210.44 1391.82,1210.61 1392.41,1211.98 1393,1209.21 1393.58,1209.44 1394.17,1212.03 1394.75,1211.94 1395.34,1211.92 1395.93,1210.48 1396.51,1210.5 1397.1,1207.44 1397.69,1210.32 1398.27,1210.33 1398.86,1208.65 1399.45,1207.37 1400.03,1207.85 1400.62,1208.03 1401.21,1209.45 1401.79,1209.72 1402.38,1209.94 1402.96,1210.2 1403.55,1210.09 1404.14,1210.25 1404.72,1211.6 1405.31,1213.07 1405.9,1214.35 1406.48,1214.57 1407.07,1215.78 1407.66,1212.39 1408.24,1213.47 1408.83,1214.89 1409.42,1219.82 1410,1219.36 1410.59,1217.41 1411.17,1214.15 1411.76,1216.64 1412.35,1217.47 1412.93,1218.66 1413.52,1218.19 1414.11,1218.85 1414.69,1217.02 1415.28,1216.89 1415.87,1213.96 1416.45,1210.88 1417.04,1210.7 1417.63,1212.07 1418.21,1210.6 1418.8,1212.13 1419.38,1210.64 1419.97,1214.44 1420.56,1211.54 1421.14,1211.54 1421.73,1212.64 1422.32,1212.63 1422.9,1213.9 1423.49,1213.6 1424.08,1212.25 1424.66,1212.35 1425.25,1213.67 1425.83,1213.33 1426.42,1211.85 1427.01,1210.13 1427.59,1211.11 1428.18,1215.26 1428.77,1216.41 1429.35,1215.79 1429.94,1212.89 1430.53,1215.38 1431.11,1211.08 1431.7,1208.17 1432.29,1205.66 1432.87,1204.39 1433.46,1206.23 1434.04,1207.91 1434.63,1206.93 1435.22,1204.61 1435.8,1204.77 1436.39,1203.73 1436.98,1204.2 1437.56,1207.05 1438.15,1206.05 1438.74,1206.4 1439.32,1203.56 1439.91,1202.65 1440.5,1205.79 1441.08,1203.45 1441.67,1204.05 1442.25,1203.13 1442.84,1203.28 1443.43,1203.64 1444.01,1202.48 1444.6,1201.68 1445.19,1202.37 1445.77,1205.36 1446.36,1207.16 1446.95,1204.84 1447.53,1205.25 1448.12,1204.54 1448.7,1206.25 1449.29,1206.77 1449.88,1207.25 1450.46,1207.51 1451.05,1207.73 1451.64,1207.62 1452.22,1207.8 1452.81,1207.95 1453.4,1208.09 1453.98,1209.89 1454.57,1212.7 1455.16,1211.15 1455.74,1211.07 1456.33,1209.85 1456.91,1208.67 1457.5,1210.2 1458.09,1210.53 1458.67,1212.08 1459.26,1208.3 1459.85,1207.2 1460.43,1207.39 1461.02,1207.67 1461.61,1207.64 1462.19,1208.91 1462.78,1214.2 1463.37,1211.38 1463.95,1213.9 1464.54,1212.36 1465.12,1211.11 1465.71,1211.31 1466.3,1212.68 1466.88,1214.12 1467.47,1214.25 1468.06,1215.64 1468.64,1215.52 1469.23,1217.94 1469.82,1217.4 1470.4,1219.75 1470.99,1218.02 1471.57,1217.27 1472.16,1218.24 1472.75,1215.05 1473.33,1212.27 1473.92,1212.15 1474.51,1211.9 1475.09,1209.1 1475.68,1207.95 1476.27,1208.12 1476.85,1205.49 1477.44,1207.18 1478.03,1207.47 1478.61,1207.48 1479.2,1210.36 1479.78,1210.5 1480.37,1214.41 1480.96,1214.12 1481.54,1211.42 1482.13,1212.59 1482.72,1216.69 1483.3,1216.46 1483.89,1214.93 1484.48,1218.76 1485.06,1219.56 1485.65,1219.21 1486.24,1218.79 1486.82,1214.55 1487.41,1207.72 1487.99,1205.3 1488.58,1205.62 1489.17,1205.69 1489.75,1207.39 1490.34,1207.57 1490.93,1210.56 1491.51,1210.33 1492.1,1209.12 1492.69,1209.13 1493.27,1209.18 1493.86,1208.98 1494.45,1206.54 1495.03,1206.89 1495.62,1207.1 1496.2,1206.11 1496.79,1206.34 1497.38,1205.41 1497.96,1204.55 1498.55,1208.93 1499.14,1210.5 1499.72,1210.37 1500.31,1210.44 1500.9,1211.7 1501.48,1210.13 1502.07,1212.68 1502.65,1213.93 1503.24,1211.27 1503.83,1211.66 1504.41,1213.16 1505,1214.26 1505.59,1215.39 1506.17,1210.95 1506.76,1210.49 1507.35,1210.51 1507.93,1210.41 1508.52,1212.99 1509.11,1214.14 1509.69,1215.44 1510.28,1215.17 1510.86,1210.99 1511.45,1213.42 1512.04,1211.83 1512.62,1213.34 1513.21,1213.47 1513.8,1214.69 1514.38,1214.34 1514.97,1209.9 1515.56,1211.49 1516.14,1212.57 1516.73,1211.1 1517.32,1212.68 1517.9,1212.62 1518.49,1212.38 1519.07,1219.24 1519.66,1218.63 1520.25,1220.8 1520.83,1219.24 1521.42,1216.26 1522.01,1212.07 1522.59,1211.64 1523.18,1214.23 1523.77,1212.54 1524.35,1212.47 1524.94,1211.28 1525.52,1211.17 1526.11,1209.62 1526.7,1209.66 1527.28,1208.2 1527.87,1208.22 1528.46,1209.71 1529.04,1208.49 1529.63,1209.98 1530.22,1208.81 1530.8,1208.94 1531.39,1209.13 1531.98,1207.81 1532.56,1206.42 1533.15,1202.43 1533.73,1203.9 1534.32,1202.95 1534.91,1201.85 1535.49,1204.96 1536.08,1204.96 1536.67,1205.59 1537.25,1205.93 1537.84,1209.08 1538.43,1210.4 1539.01,1210.54 1539.6,1210.58 1540.19,1210.78 1540.77,1211.93 1541.36,1211.77 1541.94,1214.34 1542.53,1212.79 1543.12,1213.86 1543.7,1213.43 1544.29,1213.17 1544.88,1211.82 1545.46,1210.25 1546.05,1211.43 1546.64,1211.33 1547.22,1211.34 1547.81,1209.98 1548.4,1211.54 1548.98,1211.32 1549.57,1209.78 1550.15,1208.41 1550.74,1208.38 1551.33,1208.29 1551.91,1208.49 1552.5,1208.45 1553.09,1208.59 1553.67,1206.96 1554.26,1205.78 1554.85,1204.62 1555.43,1206.59 1556.02,1204.08 1556.6,1206.99 1557.19,1207.39 1557.78,1207.73 1558.36,1206.18 1558.95,1207.93 1559.54,1209.3 1560.12,1209.18 1560.71,1208.01 1561.3,1208.25 1561.88,1208.43 1562.47,1209.86 1563.06,1210.03 1563.64,1209.95 1564.23,1210.07 1564.81,1210.07 1565.4,1211.38 1565.99,1211.34 1566.57,1209.98 1567.16,1211.35 1567.75,1212.58 1568.33,1213.86 1568.92,1212.24 1569.51,1213.76 1570.09,1213.62 1570.68,1212.24 1571.27,1209.55 1571.85,1209.61 1572.44,1210.96 1573.02,1210.99 1573.61,1214.86 1574.2,1211.71 1574.78,1210.57 1575.37,1212.18 1575.96,1216.13 1576.54,1215.8 1577.13,1213.2 1577.72,1214.66 1578.3,1213.1 1578.89,1214.25 1579.47,1215.67 1580.06,1212.57 1580.65,1209.94 1581.23,1208.54 1581.82,1208.59 1582.41,1211.41 1582.99,1212.69 1583.58,1215.01 1584.17,1215.99 1584.75,1217.15 1585.34,1215.36 1585.93,1215.13 1586.51,1214.84 1587.1,1214.68 1587.68,1214.28 1588.27,1213.98 1588.86,1209.95 1589.44,1210 1590.03,1209.93 1590.62,1211.32 1591.2,1209.6 1591.79,1208.42 1592.38,1208.58 1592.96,1208.53 1593.55,1207.42 1594.14,1207.36 1594.72,1210.29 1595.31,1209.91 1595.89,1210.16 1596.48,1210.62 1597.07,1212.25 1597.65,1212.35 1598.24,1212.29 1598.83,1212.14 1599.41,1206.73 1600,1202.7 1600.59,1205.84 1601.17,1209.97 1601.76,1210.28 1602.34,1211.79 1602.93,1214.37 1603.52,1212.86 1604.1,1211.27 1604.69,1211.06 1605.28,1213.66 1605.86,1213.41 1606.45,1213.03 1607.04,1214.29 1607.62,1213.89 1608.21,1215.04 1608.8,1213.31 1609.38,1214.71 1609.97,1214.3 1610.55,1214.08 1611.14,1213.76 1611.73,1212.27 1612.31,1212.28 1612.9,1212.26 1613.49,1210.99 1614.07,1209.46 1614.66,1210.71 1615.25,1210.98 1615.83,1208.23 1616.42,1210.55 1617.01,1207.8 1617.59,1210.65 1618.18,1213.36 1618.76,1213.11 1619.35,1215.81 1619.94,1215.61 1620.52,1215.43 1621.11,1216.36 1621.7,1214.65 1622.28,1211.95 1622.87,1212.02 1623.46,1213.29 1624.04,1210.79 1624.63,1208.18 1625.22,1205.3 1625.8,1205.47 1626.39,1205.64 1626.97,1203.23 1627.56,1202.05 1628.15,1203.8 1628.73,1202.91 1629.32,1204.33 1629.91,1204.63 1630.49,1206.67 1631.08,1207.06 1631.67,1208.61 1632.25,1208.7 1632.84,1206.08 1633.42,1208.91 1634.01,1210.33 1634.6,1211.73 1635.18,1210.31 1635.77,1214.37 1636.36,1218.25 1636.94,1216.72 1637.53,1215.19 1638.12,1214.75 1638.7,1216.1 1639.29,1215.67 1639.88,1215.59 1640.46,1215.16 1641.05,1219.08 1641.63,1215.76 1642.22,1212.73 1642.81,1213.9 1643.39,1213.62 1643.98,1215.89 1644.57,1215.49 1645.15,1214.98 1645.74,1214.55 1646.33,1214.38 1646.91,1214.28 1647.5,1212.56 1648.09,1208.43 1648.67,1208.68 1649.26,1211.34 1649.84,1212.65 1650.43,1212.43 1651.02,1212.53 1651.6,1212.43 1652.19,1212.55 1652.78,1214.97 1653.36,1216.16 1653.95,1215.88 1654.54,1217.06 1655.12,1219.63 1655.71,1220.49 1656.29,1218.48 1656.88,1218.13 1657.47,1217.73 1658.05,1218.81 1658.64,1222.25 1659.23,1220.47 1659.81,1219.77 1660.4,1219.17 1660.99,1218.18 1661.57,1216.33 1662.16,1214.58 1662.75,1215.28 1663.33,1215 1663.92,1216.41 1664.5,1214.71 1665.09,1211.82 1665.68,1214.38 1666.26,1212.85 1666.85,1216.89 1667.44,1215.12 1668.02,1214.62 1668.61,1214.01 1669.2,1212.49 1669.78,1212.18 1670.37,1210.58 1670.96,1210.38 1671.54,1210.4 1672.13,1206.37 1672.71,1206.6 1673.3,1202.81 1673.89,1201.77 1674.47,1199.57 1675.06,1200.28 1675.65,1199.37 1676.23,1201.55 1676.82,1200.37 1677.41,1200.89 1677.99,1204.02 1678.58,1206.94 1679.17,1204.32 1679.75,1203.55 1680.34,1203.95 1680.92,1198.97 1681.51,1200.65 1682.1,1201.09 1682.68,1200.32 1683.27,1204.95 1683.86,1205.56 1684.44,1206.96 1685.03,1208.46 1685.62,1212.7 1686.2,1214.08 1686.79,1211.25 1687.37,1208.5 1687.96,1208.58 1688.55,1210.43 1689.13,1209.08 1689.72,1207.5 1690.31,1203.46 1690.89,1202.55 1691.48,1203.16 1692.07,1201.9 1692.65,1202.43 1693.24,1204.27 1693.83,1203.03 1694.41,1204.55 1695,1204.69 1695.58,1205.18 1696.17,1210.87 1696.76,1213.23 1697.34,1211.76 1697.93,1210.41 1698.52,1209.37 1699.1,1210.94 1699.69,1209.54 1700.28,1208.3 1700.86,1209.86 1701.45,1210.05 1702.04,1211.15 1702.62,1205.99 1703.21,1208.83 1703.79,1208.99 1704.38,1209.13 1704.97,1210.48 1705.55,1209.16 1706.14,1207.92 1706.73,1211.81 1707.31,1211.42 1707.9,1210.07 1708.49,1207.57 1709.07,1206.81 1709.66,1207.12 1710.24,1207.41 1710.83,1209 1711.42,1210.23 1712,1210.24 1712.59,1210.09 1713.18,1210.45 1713.76,1209.28 1714.35,1212.19 1714.94,1209.32 1715.52,1211.02 1716.11,1212.43 1716.7,1213.66 1717.28,1213.81 1717.87,1212.59 1718.45,1210.93 1719.04,1209.83 1719.63,1208.63 1720.21,1210.15 1720.8,1212.89 1721.39,1215.4 1721.97,1216.35 1722.56,1214.59 1723.15,1214.48 1723.73,1212.83 1724.32,1213.83 1724.91,1215.37 1725.49,1216.43 1726.08,1216.23 1726.66,1218.79 1727.25,1219.9 1727.84,1218.07 1728.42,1220.46 1729.01,1221.25 1729.6,1224.47 1730.18,1222.39 1730.77,1220.3 1731.36,1219.71 1731.94,1219.29 1732.53,1214.97 1733.11,1214.73 1733.7,1210.44 1734.29,1211.94 1734.87,1213.05 1735.46,1212.89 1736.05,1211.25 1736.63,1209.59 1737.22,1208.38 1737.81,1208.53 1738.39,1207.44 1738.98,1211.6 1739.57,1211.53 1740.15,1207.32 1740.74,1208.92 1741.32,1209.01 1741.91,1211.74 1742.5,1215.76 1743.08,1215.27 1743.67,1213.95 1744.26,1213.98 1744.84,1212.23 1745.43,1209.06 1746.02,1207.72 1746.6,1210.42 1747.19,1206.55 1747.78,1205.55 1748.36,1204.43 1748.95,1206.35 1749.53,1207.79 1750.12,1207.92 1750.71,1210.83 1751.29,1208.3 1751.88,1208.43 1752.47,1207.52 1753.05,1207.45 1753.64,1210.43 1754.23,1210.6 1754.81,1210.73 1755.4,1210.67 1755.99,1210.72 1756.57,1209.72 1757.16,1208.67 1757.74,1208.83 1758.33,1207.67 1758.92,1206.48 1759.5,1206.66 1760.09,1205.79 1760.68,1209.95 1761.26,1208.63 1761.85,1207.4 1762.44,1207.64 1763.02,1206.58 1763.61,1206.49 1764.19,1206.69 1764.78,1203.79 1765.37,1205.31 1765.95,1204.42 1766.54,1206.22 1767.13,1207.76 1767.71,1209.57 1768.3,1209.7 1768.89,1210.01 1769.47,1211.3 1770.06,1209.86 1770.65,1209.86 1771.23,1209.77 1771.82,1209.94 1772.4,1209.95 1772.99,1211.15 1773.58,1208.11 1774.16,1206.95 1774.75,1208.66 1775.34,1209.95 1775.92,1209.93 1776.51,1209.93 1777.1,1209.9 1777.68,1211.12 1778.27,1212.42 1778.86,1214.99 1779.44,1214.68 1780.03,1213.08 1780.61,1211.67 1781.2,1210.1 1781.79,1211.57 1782.37,1207.44 1782.96,1206.2 1783.55,1209.21 1784.13,1209.16 1784.72,1207.74 1785.31,1206.85 1785.89,1205.58 1786.48,1211.15 1787.06,1211.05 1787.65,1208.41 1788.24,1212.89 1788.82,1211.55 1789.41,1209.91 1790,1208.55 1790.58,1207.41 1791.17,1209.1 1791.76,1212.81 1792.34,1212.86 1792.93,1218.14 1793.52,1219.1 1794.1,1218.78 1794.69,1217.07 1795.27,1218.17 1795.86,1216.24 1796.45,1214.56 1797.03,1213.19 1797.62,1214.45 1798.21,1213.12 1798.79,1213.03 1799.38,1212.71 1799.97,1216.76 1800.55,1216.52 1801.14,1214.88 1801.73,1213.41 1802.31,1213.31 1802.9,1211.86 1803.48,1210.28 1804.07,1210.4 1804.66,1210.29 1805.24,1210.2 1805.83,1211.7 1806.42,1211.58 1807,1211.66 1807.59,1210.34 1808.18,1214.32 1808.76,1215.45 1809.35,1215.2 1809.94,1217.7 1810.52,1214.57 1811.11,1215.63 1811.69,1215.37 1812.28,1215.1 1812.87,1215.9 1813.45,1214.25 1814.04,1211.47 1814.63,1208.64 1815.21,1208.85 1815.8,1209.01 1816.39,1210.31 1816.97,1208.94 1817.56,1210.49 1818.14,1209.14 1818.73,1207.88 1819.32,1206.53 1819.9,1209.36 1820.49,1209.24 1821.08,1210.58 1821.66,1206.73 1822.25,1207.26 1822.84,1206.07 1823.42,1208.8 1824.01,1212.83 1824.6,1212.55 1825.18,1212.38 1825.77,1213.72 1826.35,1214.83 1826.94,1212.01 1827.53,1211.85 1828.11,1210.51 1828.7,1209.15 1829.29,1209.16 1829.87,1209.07 1830.46,1214.54 1831.05,1214.18 1831.63,1215.24 1832.22,1213.76 1832.81,1213.75 1833.39,1208.17 1833.98,1209.56 1834.56,1211.1 1835.15,1209.79 1835.74,1210.94 1836.32,1212.07 1836.91,1210.4 1837.5,1209.44 1838.08,1206.93 1838.67,1207.04 1839.26,1206.02 1839.84,1206.32 1840.43,1209.29 1841.01,1209.05 1841.6,1207.72 1842.19,1206.59 1842.77,1205.32 1843.36,1205.75 1843.95,1206.25 1844.53,1209.11 1845.12,1210.63 1845.71,1210.83 1846.29,1212.17 1846.88,1210.86 1847.47,1212.22 1848.05,1212.17 1848.64,1209.44 1849.22,1211.07 1849.81,1210.91 1850.4,1210.85 1850.98,1212.13 1851.57,1212 1852.16,1210.55 1852.74,1209.31 1853.33,1209.43 1853.92,1209.26 1854.5,1210.67 1855.09,1209.33 1855.68,1209.2 1856.26,1208.07 1856.85,1208.29 1857.43,1209.69 1858.02,1212.3 1858.61,1212.24 1859.19,1210.73 1859.78,1212.08 1860.37,1210.96 1860.95,1212.65 1861.54,1212.55 1862.13,1213.7 1862.71,1215.13 1863.3,1214.92 1863.88,1214.78 1864.47,1214.42 1865.06,1214.15 1865.64,1215.25 1866.23,1216.35 1866.82,1219.92 1867.4,1220.6 1867.99,1221.43 1868.58,1218.19 1869.16,1215.21 1869.75,1212.29 1870.34,1210.53 1870.92,1210.75 1871.51,1206.68 1872.09,1208.14 1872.68,1209.2 1873.27,1210.56 1873.85,1213.16 1874.44,1213.13 1875.03,1210.43 1875.61,1209.15 1876.2,1210.73 1876.79,1210.55 1877.37,1207.92 1877.96,1208.39 1878.55,1209.97 1879.13,1203.28 1879.72,1203.71 1880.3,1205.23 1880.89,1205.35 1881.48,1204.16 1882.06,1204.53 1882.65,1202.31 1883.24,1200.17 1883.82,1199.31 1884.41,1198.81 1885,1198.12 1885.58,1198.51 1886.17,1197.8 1886.76,1195.76 1887.34,1196.81 1887.93,1197.28 1888.51,1198.05 1889.1,1198.48 1889.69,1199.1 1890.27,1197.16 1890.86,1197.93 1891.45,1199.89 1892.03,1201.99 1892.62,1207.84 1893.21,1211.96 1893.79,1210.64 1894.38,1210.8 1894.96,1209.47 1895.55,1209.24 1896.14,1209.49 1896.72,1212.2 1897.31,1214.86 1897.9,1213.34 1898.48,1213.45 1899.07,1214.62 1899.66,1217.2 1900.24,1219.29 1900.83,1220.09 1901.42,1219.54 1902,1221.7 1902.59,1221.23 1903.17,1217.95 1903.76,1216.19 1904.35,1217.38 1904.93,1217.09 1905.52,1212.9 1906.11,1212.81 1906.69,1212.75 1907.28,1212.89 1907.87,1213.97 1908.45,1210.93 1909.04,1208.28 1909.63,1208.34 1910.21,1209.68 1910.8,1210.88 1911.38,1213.75 1911.97,1215.04 1912.56,1214.7 1913.14,1214.38 1913.73,1212.8 1914.32,1216.9 1914.9,1215.19 1915.49,1216.24 1916.08,1216.18 1916.66,1216.03 1917.25,1214.44 1917.83,1211.32 1918.42,1211.2 1919.01,1209.81 1919.59,1209.69 1920.18,1208.18 1920.77,1209.55 1921.35,1206.53 1921.94,1208.38 1922.53,1209.96 1923.11,1209.86 1923.7,1207.12 1924.29,1208.54 1924.87,1207.17 1925.46,1204.66 1926.04,1205.07 1926.63,1205.48 1927.22,1204.52 1927.8,1205.93 1928.39,1206.5 1928.98,1201.57 1929.56,1199.24 1930.15,1200.02 1930.74,1201.62 1931.32,1206.18 1931.91,1210.33 1932.5,1208.91 1933.08,1207.65 1933.67,1207.82 1934.25,1206.42 1934.84,1206.73 1935.43,1205.52 1936.01,1201.62 1936.6,1203.6 1937.19,1202.66 1937.77,1202.96 1938.36,1207.34 1938.95,1206.24 1939.53,1203.84 1940.12,1203.97 1940.71,1204.22 1941.29,1206.03 1941.88,1203.55 1942.46,1205.01 1943.05,1202.58 1943.64,1203.08 1944.22,1203.48 1944.81,1201.06 1945.4,1201.58 1945.98,1206.23 1946.57,1205.23 1947.16,1208.2 1947.74,1208.33 1948.33,1208.7 1948.91,1208.88 1949.5,1209.08 1950.09,1210.7 1950.67,1209.63 1951.26,1211.37 1951.85,1212.28 1952.43,1213.58 1953.02,1216.09 1953.61,1215.69 1954.19,1214.23 1954.78,1215.21 1955.37,1213.7 1955.95,1216.39 1956.54,1217.52 1957.12,1220.03 1957.71,1219.5 1958.3,1218.84 1958.88,1222.5 1959.47,1219.29 1960.06,1217.25 1960.64,1215.75 1961.23,1216.72 1961.82,1216.35 1962.4,1214.64 1962.99,1213.18 1963.58,1211.82 1964.16,1211.69 1964.75,1211.77 1965.33,1211.88 1965.92,1208.95 1966.51,1210.18 1967.09,1210.16 1967.68,1211.38 1968.27,1211.78 1968.85,1213.13 1969.44,1212.74 1970.03,1212.67 1970.61,1212.63 1971.2,1212.55 1971.78,1212.22 1972.37,1206.65 1972.96,1208.41 1973.54,1208.17 1974.13,1212.29 1974.72,1211.07 1975.3,1212.48 1975.89,1212.38 1976.48,1212.29 1977.06,1212.17 1977.65,1212.22 1978.24,1216.38 1978.82,1217.24 1979.41,1214.54 1979.99,1212.85 1980.58,1215.35 1981.17,1215.36 1981.75,1214.84 1982.34,1214.71 1982.93,1214.44 1983.51,1214.14 1984.1,1213.93 1984.69,1214.9 1985.27,1213.39 1985.86,1210.7 1986.45,1207.69 1987.03,1209.31 1987.62,1212.17 1988.2,1210.51 1988.79,1210.39 1989.38,1208.98 1989.96,1210.35 1990.55,1210.46 1991.14,1208.82 1991.72,1208.89 1992.31,1208.98 1992.9,1210.37 1993.48,1210.34 1994.07,1215.47 1994.65,1216.74 1995.24,1219.06 1995.83,1215.45 1996.41,1213.99 1997,1213.59 1997.59,1216.05 1998.17,1215.74 1998.76,1215.5 1999.35,1212.71 1999.93,1211.33 2000.52,1210.03 2001.11,1209.98 2001.69,1212.66 2002.28,1213.63 2002.86,1213.37 2003.45,1214.79 2004.04,1212.84 2004.62,1211.35 2005.21,1209.75 2005.8,1205.84 2006.38,1206.24 2006.97,1209.2 2007.56,1210.72 2008.14,1210.8 2008.73,1212.49 2009.32,1212.4 2009.9,1212.21 2010.49,1214.48 2011.07,1212.81 2011.66,1212.92 2012.25,1212.71 2012.83,1211.26 2013.42,1211.17 2014.01,1209.6 2014.59,1211.04 2015.18,1213.93 2015.77,1212.29 2016.35,1209.41 2016.94,1209.45 2017.53,1210.87 2018.11,1212.01 2018.7,1216.01 2019.28,1214.37 2019.87,1215.66 2020.46,1216.68 2021.04,1216.03 2021.63,1211.45 2022.22,1210.2 2022.8,1211.5 2023.39,1210.07 2023.98,1207.54 2024.56,1210.21 2025.15,1208.83 2025.73,1209.08 2026.32,1210.47 2026.91,1210.53 2027.49,1210.19 2028.08,1211.78 2028.67,1211.69 2029.25,1211.7 2029.84,1211.31 2030.43,1211.23 2031.01,1208.53 2031.6,1210.25 2032.19,1211.75 2032.77,1213.06 2033.36,1214.32 2033.94,1216.77 2034.53,1213.64 2035.12,1213.57 2035.7,1214.58 2036.29,1214.49 2036.88,1215.74 2037.46,1215.35 2038.05,1215.28 2038.64,1212.17 2039.22,1210.54 2039.81,1209.02 2040.4,1209.32 2040.98,1210.83 2041.57,1212.08 2042.15,1211.92 2042.74,1209.07 2043.33,1209.3 2043.91,1209.34 2044.5,1210.67 2045.09,1211.89 2045.67,1209.02 2046.26,1206.17 2046.85,1205.07 2047.43,1205.43 2048.02,1208.38 2048.6,1205.64 2049.19,1203.1 2049.78,1204.79 2050.36,1203.65 2050.95,1202.41 2051.54,1204.12 2052.12,1206.09 2052.71,1206.33 2053.3,1205.08 2053.88,1206.72 2054.47,1207.86 2055.06,1210.65 2055.64,1213.2 2056.23,1211.99 2056.81,1213.3 2057.4,1211.97 2057.99,1213.04 2058.57,1210.43 2059.16,1210.54 2059.75,1210.53 2060.33,1211.53 2060.92,1211.28 2061.51,1212.73 2062.09,1212.69 2062.68,1212.83 2063.27,1209.73 2063.85,1212.49 2064.44,1211.35 2065.02,1211.34 2065.61,1212.6 2066.2,1213.79 2066.78,1212.44 2067.37,1212.39 2067.96,1210.87 2068.54,1212.31 2069.13,1209.59 2069.72,1211.15 2070.3,1209.46 2070.89,1209.39 2071.48,1210.82 2072.06,1210.66 2072.65,1211.74 2073.23,1211.9 2073.82,1213.11 2074.41,1213.99 2074.99,1215.05 2075.58,1215 2076.17,1214.58 2076.75,1215.7 2077.34,1216.81 2077.93,1216.4 2078.51,1214.82 2079.1,1213.24 2079.68,1214.49 2080.27,1215.74 2080.86,1214.23 2081.44,1214.42 2082.03,1214 2082.62,1211.13 2083.2,1212.19 2083.79,1213.37 2084.38,1213.34 2084.96,1209.26 2085.55,1209.42 2086.14,1208.07 2086.72,1209.54 2087.31,1208.48 2087.89,1205.71 2088.48,1208.65 2089.07,1211.6 2089.65,1212.66 2090.24,1212.62 2090.83,1212.51 2091.41,1209.64 2092,1209.54 2092.59,1209.68 2093.17,1209.74 2093.76,1209.81 2094.35,1211.11 2094.93,1209.91 2095.52,1209.85 2096.1,1211.52 2096.69,1210.06 2097.28,1210.05 2097.86,1208.97 2098.45,1209.18 2099.04,1206.55 2099.62,1206.78 2100.21,1205.64 2100.8,1204.55 2101.38,1202.04 2101.97,1202.58 2102.55,1203.32 2103.14,1203.84 2103.73,1202.82 2104.31,1203.36 2104.9,1205.3 2105.49,1203.98 2106.07,1204.43 2106.66,1207.34 2107.25,1209.05 2107.83,1206.27 2108.42,1207.66 2109.01,1207.75 2109.59,1210.39 2110.18,1209.17 2110.76,1209.07 2111.35,1206.55 2111.94,1208.07 2112.52,1212.11 2113.11,1210.42 2113.7,1212.06 2114.28,1212.15 2114.87,1212.47 2115.46,1211.07 2116.04,1205.72 2116.63,1203.07 2117.22,1206.3 2117.8,1207.86 2118.39,1206.62 2118.97,1208.07 2119.56,1208.22 2120.15,1207.09 2120.73,1207.43 2121.32,1207.63 2121.91,1206.52 2122.49,1206.6 2123.08,1206.97 2123.67,1208.64 2124.25,1208.67 2124.84,1207.54 2125.42,1211.64 2126.01,1214.37 2126.6,1214.15 2127.18,1211.27 2127.77,1212.37 2128.36,1212.01 2128.94,1210.44 2129.53,1209.31 2130.12,1208.01 2130.7,1206.87 2131.29,1205.61 2131.88,1204.53 2132.46,1203.35 2133.05,1201.96 2133.63,1202.53 2134.22,1205.34 2134.81,1204.32 2135.39,1204.59 2135.98,1206.11 2136.57,1207.72 2137.15,1207.8 2137.74,1209.14 2138.33,1209.11 2138.91,1205.47 2139.5,1208.77 2140.09,1207.56 2140.67,1206.42 2141.26,1208.03 2141.84,1212.39 2142.43,1211.27 2143.02,1212.3 2143.6,1212.28 2144.19,1213.5 2144.78,1216.2 2145.36,1217.08 2145.95,1215.3 2146.54,1213.57 2147.12,1214.93 2147.71,1216.23 2148.3,1216.02 2148.88,1215.78 2149.47,1215.53 2150.05,1212.58 2150.64,1211.18 2151.23,1211.01 2151.81,1210.98 2152.4,1211.2 2152.99,1207.04 2153.57,1209.96 2154.16,1209.92 2154.75,1209.82 2155.33,1210.08 2155.92,1210.34 2156.5,1208.92 2157.09,1209.89 2157.68,1210.01 2158.26,1207.14 \"/>\n<path clip-path=\"url(#clip482)\" d=\"M986.025 1211.02 L986.612 1211.02 L987.198 1211.02 L987.785 1211.02 L988.371 1211.02 L988.957 1211.02 L989.544 1211.02 L990.13 1211.02 L990.717 1211.02 L991.303 1211.02 L991.889 1211.02 L992.476 1211.02 L993.062 1211.02 L993.649 1211.02 L994.235 1211.02 L994.822 1211.02 L995.408 1211.02 L995.994 1211.02 L996.581 1211.02 L997.167 1211.02 L997.754 1211.02 L998.34 1211.02 L998.926 1211.02 L999.513 1211.02 L1000.1 1211.02 L1000.69 1211.02 L1001.27 1211.02 L1001.86 1211.02 L1002.44 1211.02 L1003.03 1211.02 L1003.62 1211.02 L1004.2 1211.02 L1004.79 1211.02 L1005.38 1211.02 L1005.96 1211.02 L1006.55 1211.02 L1007.14 1211.02 L1007.72 1211.02 L1008.31 1211.02 L1008.9 1211.02 L1009.48 1211.02 L1010.07 1211.02 L1010.65 1211.02 L1011.24 1211.02 L1011.83 1211.02 L1012.41 1211.02 L1013 1211.02 L1013.59 1211.02 L1014.17 1211.02 L1014.76 1211.02 L1015.35 1211.02 L1015.93 1211.02 L1016.52 1211.02 L1017.11 1211.02 L1017.69 1211.02 L1018.28 1211.02 L1018.86 1211.02 L1019.45 1211.02 L1020.04 1211.02 L1020.62 1211.02 L1021.21 1211.02 L1021.8 1211.02 L1022.38 1211.02 L1022.97 1211.02 L1023.56 1211.02 L1024.14 1211.02 L1024.73 1211.02 L1025.32 1211.02 L1025.9 1211.02 L1026.49 1211.02 L1027.07 1211.02 L1027.66 1211.02 L1028.25 1211.02 L1028.83 1211.02 L1029.42 1211.02 L1030.01 1211.02 L1030.59 1211.02 L1031.18 1211.02 L1031.77 1211.02 L1032.35 1211.02 L1032.94 1211.02 L1033.52 1211.02 L1034.11 1211.02 L1034.7 1211.02 L1035.28 1211.02 L1035.87 1211.02 L1036.46 1211.02 L1037.04 1211.02 L1037.63 1211.02 L1038.22 1211.02 L1038.8 1211.02 L1039.39 1211.02 L1039.98 1211.02 L1040.56 1211.02 L1041.15 1211.02 L1041.73 1211.02 L1042.32 1211.02 L1042.91 1211.02 L1043.49 1211.02 L1044.08 1211.02 L1044.67 1211.02 L1045.25 1211.02 L1045.84 1211.02 L1046.43 1211.02 L1047.01 1211.02 L1047.6 1211.02 L1048.19 1211.02 L1048.77 1211.02 L1049.36 1211.02 L1049.94 1211.02 L1050.53 1211.02 L1051.12 1211.02 L1051.7 1211.02 L1052.29 1211.02 L1052.88 1211.02 L1053.46 1211.02 L1054.05 1211.02 L1054.64 1211.02 L1055.22 1211.02 L1055.81 1211.02 L1056.39 1211.02 L1056.98 1211.02 L1057.57 1211.02 L1058.15 1211.02 L1058.74 1211.02 L1059.33 1211.02 L1059.91 1211.02 L1060.5 1211.02 L1061.09 1211.02 L1061.67 1211.02 L1062.26 1211.02 L1062.85 1211.02 L1063.43 1211.02 L1064.02 1211.02 L1064.6 1211.02 L1065.19 1211.02 L1065.78 1211.02 L1066.36 1211.02 L1066.95 1211.02 L1067.54 1211.02 L1068.12 1211.02 L1068.71 1211.02 L1069.3 1211.02 L1069.88 1211.02 L1070.47 1211.02 L1071.06 1211.02 L1071.64 1211.02 L1072.23 1211.02 L1072.81 1211.02 L1073.4 1211.02 L1073.99 1211.02 L1074.57 1211.02 L1075.16 1211.02 L1075.75 1211.02 L1076.33 1211.02 L1076.92 1211.02 L1077.51 1211.02 L1078.09 1211.02 L1078.68 1211.02 L1079.26 1211.02 L1079.85 1211.02 L1080.44 1211.02 L1081.02 1211.02 L1081.61 1211.02 L1082.2 1211.02 L1082.78 1211.02 L1083.37 1211.02 L1083.96 1211.02 L1084.54 1211.02 L1085.13 1211.02 L1085.72 1211.02 L1086.3 1211.02 L1086.89 1211.02 L1087.47 1211.02 L1088.06 1211.02 L1088.65 1211.02 L1089.23 1211.02 L1089.82 1211.02 L1090.41 1211.02 L1090.99 1211.02 L1091.58 1211.02 L1092.17 1211.02 L1092.75 1211.02 L1093.34 1211.02 L1093.93 1211.02 L1094.51 1211.02 L1095.1 1211.02 L1095.68 1211.02 L1096.27 1211.02 L1096.86 1211.02 L1097.44 1211.02 L1098.03 1211.02 L1098.62 1211.02 L1099.2 1211.02 L1099.79 1211.02 L1100.38 1211.02 L1100.96 1211.02 L1101.55 1211.02 L1102.14 1211.02 L1102.72 1211.02 L1103.31 1211.02 L1103.89 1211.02 L1104.48 1211.02 L1105.07 1211.02 L1105.65 1211.02 L1106.24 1211.02 L1106.83 1211.02 L1107.41 1211.02 L1108 1211.02 L1108.59 1211.02 L1109.17 1211.02 L1109.76 1211.02 L1110.34 1211.02 L1110.93 1211.02 L1111.52 1211.02 L1112.1 1211.02 L1112.69 1211.02 L1113.28 1211.02 L1113.86 1211.02 L1114.45 1211.02 L1115.04 1211.02 L1115.62 1211.02 L1116.21 1211.02 L1116.8 1211.02 L1117.38 1211.02 L1117.97 1211.02 L1118.55 1211.02 L1119.14 1211.02 L1119.73 1211.02 L1120.31 1211.02 L1120.9 1211.02 L1121.49 1211.02 L1122.07 1211.02 L1122.66 1211.02 L1123.25 1211.02 L1123.83 1211.02 L1124.42 1211.02 L1125.01 1211.02 L1125.59 1211.02 L1126.18 1211.02 L1126.76 1211.02 L1127.35 1211.02 L1127.94 1211.02 L1128.52 1211.02 L1129.11 1211.02 L1129.7 1211.02 L1130.28 1211.02 L1130.87 1211.02 L1131.46 1211.02 L1132.04 1211.02 L1132.63 1211.02 L1133.21 1211.02 L1133.8 1211.02 L1134.39 1211.02 L1134.97 1211.02 L1135.56 1211.02 L1136.15 1211.02 L1136.73 1211.02 L1137.32 1211.02 L1137.91 1211.02 L1138.49 1211.02 L1139.08 1211.02 L1139.67 1211.02 L1140.25 1211.02 L1140.84 1211.02 L1141.42 1211.02 L1142.01 1211.02 L1142.6 1211.02 L1143.18 1211.02 L1143.77 1211.02 L1144.36 1211.02 L1144.94 1211.02 L1145.53 1211.02 L1146.12 1211.02 L1146.7 1211.02 L1147.29 1211.02 L1147.88 1211.02 L1148.46 1211.02 L1149.05 1211.02 L1149.63 1211.02 L1150.22 1211.02 L1150.81 1211.02 L1151.39 1211.02 L1151.98 1211.02 L1152.57 1211.02 L1153.15 1211.02 L1153.74 1211.02 L1154.33 1211.02 L1154.91 1211.02 L1155.5 1211.02 L1156.09 1211.02 L1156.67 1211.02 L1157.26 1211.02 L1157.84 1211.02 L1158.43 1211.02 L1159.02 1211.02 L1159.6 1211.02 L1160.19 1211.02 L1160.78 1211.02 L1161.36 1211.02 L1161.95 1211.02 L1162.54 1211.02 L1163.12 1211.02 L1163.71 1211.02 L1164.29 1211.02 L1164.88 1211.02 L1165.47 1211.02 L1166.05 1211.02 L1166.64 1211.02 L1167.23 1211.02 L1167.81 1211.02 L1168.4 1211.02 L1168.99 1211.02 L1169.57 1211.02 L1170.16 1211.02 L1170.75 1211.02 L1171.33 1211.02 L1171.92 1211.02 L1172.5 1211.02 L1173.09 1211.02 L1173.68 1211.02 L1174.26 1211.02 L1174.85 1211.02 L1175.44 1211.02 L1176.02 1211.02 L1176.61 1211.02 L1177.2 1211.02 L1177.78 1211.02 L1178.37 1211.02 L1178.96 1211.02 L1179.54 1211.02 L1180.13 1211.02 L1180.71 1211.02 L1181.3 1211.02 L1181.89 1211.02 L1182.47 1211.02 L1183.06 1211.02 L1183.65 1211.02 L1184.23 1211.02 L1184.82 1211.02 L1185.41 1211.02 L1185.99 1211.02 L1186.58 1211.02 L1187.16 1211.02 L1187.75 1211.02 L1188.34 1211.02 L1188.92 1211.02 L1189.51 1211.02 L1190.1 1211.02 L1190.68 1211.02 L1191.27 1211.02 L1191.86 1211.02 L1192.44 1211.02 L1193.03 1211.02 L1193.62 1211.02 L1194.2 1211.02 L1194.79 1211.02 L1195.37 1211.02 L1195.96 1211.02 L1196.55 1211.02 L1197.13 1211.02 L1197.72 1211.02 L1198.31 1211.02 L1198.89 1211.02 L1199.48 1211.02 L1200.07 1211.02 L1200.65 1211.02 L1201.24 1211.02 L1201.83 1211.02 L1202.41 1211.02 L1203 1211.02 L1203.58 1211.02 L1204.17 1211.02 L1204.76 1211.02 L1205.34 1211.02 L1205.93 1211.02 L1206.52 1211.02 L1207.1 1211.02 L1207.69 1211.02 L1208.28 1211.02 L1208.86 1211.02 L1209.45 1211.02 L1210.03 1211.02 L1210.62 1211.02 L1211.21 1211.02 L1211.79 1211.02 L1212.38 1211.02 L1212.97 1211.02 L1213.55 1211.02 L1214.14 1211.02 L1214.73 1211.02 L1215.31 1211.02 L1215.9 1211.02 L1216.49 1211.02 L1217.07 1211.02 L1217.66 1211.02 L1218.24 1211.02 L1218.83 1211.02 L1219.42 1211.02 L1220 1211.02 L1220.59 1211.02 L1221.18 1211.02 L1221.76 1211.02 L1222.35 1211.02 L1222.94 1211.02 L1223.52 1211.02 L1224.11 1211.02 L1224.7 1211.02 L1225.28 1211.02 L1225.87 1211.02 L1226.45 1211.02 L1227.04 1211.02 L1227.63 1211.02 L1228.21 1211.02 L1228.8 1211.02 L1229.39 1211.02 L1229.97 1211.02 L1230.56 1211.02 L1231.15 1211.02 L1231.73 1211.02 L1232.32 1211.02 L1232.91 1211.02 L1233.49 1211.02 L1234.08 1211.02 L1234.66 1211.02 L1235.25 1211.02 L1235.84 1211.02 L1236.42 1211.02 L1237.01 1211.02 L1237.6 1211.02 L1238.18 1211.02 L1238.77 1211.02 L1239.36 1211.02 L1239.94 1211.02 L1240.53 1211.02 L1241.11 1211.02 L1241.7 1211.02 L1242.29 1211.02 L1242.87 1211.02 L1243.46 1211.02 L1244.05 1211.02 L1244.63 1211.02 L1245.22 1211.02 L1245.81 1211.02 L1246.39 1211.02 L1246.98 1211.02 L1247.57 1211.02 L1248.15 1211.02 L1248.74 1211.02 L1249.32 1211.02 L1249.91 1211.02 L1250.5 1211.02 L1251.08 1211.02 L1251.67 1211.02 L1252.26 1211.02 L1252.84 1211.02 L1253.43 1211.02 L1254.02 1211.02 L1254.6 1211.02 L1255.19 1211.02 L1255.78 1211.02 L1256.36 1211.02 L1256.95 1211.02 L1257.53 1211.02 L1258.12 1211.02 L1258.71 1211.02 L1259.29 1211.02 L1259.88 1211.02 L1260.47 1211.02 L1261.05 1211.02 L1261.64 1211.02 L1262.23 1211.02 L1262.81 1211.02 L1263.4 1211.02 L1263.98 1211.02 L1264.57 1211.02 L1265.16 1211.02 L1265.74 1211.02 L1266.33 1211.02 L1266.92 1211.02 L1267.5 1211.02 L1268.09 1211.02 L1268.68 1211.02 L1269.26 1211.02 L1269.85 1211.02 L1270.44 1211.02 L1271.02 1211.02 L1271.61 1211.02 L1272.19 1211.02 L1272.78 1211.02 L1273.37 1211.02 L1273.95 1211.02 L1274.54 1211.02 L1275.13 1211.02 L1275.71 1211.02 L1276.3 1211.02 L1276.89 1211.02 L1277.47 1211.02 L1278.06 1211.02 L1278.65 1211.02 L1279.23 1211.02 L1279.82 1211.02 L1280.4 1211.02 L1280.99 1211.02 L1281.58 1211.02 L1282.16 1211.02 L1282.75 1211.02 L1283.34 1211.02 L1283.92 1211.02 L1284.51 1211.02 L1285.1 1211.02 L1285.68 1211.02 L1286.27 1211.02 L1286.86 1211.02 L1287.44 1211.02 L1288.03 1211.02 L1288.61 1211.02 L1289.2 1211.02 L1289.79 1211.02 L1290.37 1211.02 L1290.96 1211.02 L1291.55 1211.02 L1292.13 1211.02 L1292.72 1211.02 L1293.31 1211.02 L1293.89 1211.02 L1294.48 1211.02 L1295.06 1211.02 L1295.65 1211.02 L1296.24 1211.02 L1296.82 1211.02 L1297.41 1211.02 L1298 1211.02 L1298.58 1211.02 L1299.17 1211.02 L1299.76 1211.02 L1300.34 1211.02 L1300.93 1211.02 L1301.52 1211.02 L1302.1 1211.02 L1302.69 1211.02 L1303.27 1211.02 L1303.86 1211.02 L1304.45 1211.02 L1305.03 1211.02 L1305.62 1211.02 L1306.21 1211.02 L1306.79 1211.02 L1307.38 1211.02 L1307.97 1211.02 L1308.55 1211.02 L1309.14 1211.02 L1309.73 1211.02 L1310.31 1211.02 L1310.9 1211.02 L1311.48 1211.02 L1312.07 1211.02 L1312.66 1211.02 L1313.24 1211.02 L1313.83 1211.02 L1314.42 1211.02 L1315 1211.02 L1315.59 1211.02 L1316.18 1211.02 L1316.76 1211.02 L1317.35 1211.02 L1317.93 1211.02 L1318.52 1211.02 L1319.11 1211.02 L1319.69 1211.02 L1320.28 1211.02 L1320.87 1211.02 L1321.45 1211.02 L1322.04 1211.02 L1322.63 1211.02 L1323.21 1211.02 L1323.8 1211.02 L1324.39 1211.02 L1324.97 1211.02 L1325.56 1211.02 L1326.14 1211.02 L1326.73 1211.02 L1327.32 1211.02 L1327.9 1211.02 L1328.49 1211.02 L1329.08 1211.02 L1329.66 1211.02 L1330.25 1211.02 L1330.84 1211.02 L1331.42 1211.02 L1332.01 1211.02 L1332.6 1211.02 L1333.18 1211.02 L1333.77 1211.02 L1334.35 1211.02 L1334.94 1211.02 L1335.53 1211.02 L1336.11 1211.02 L1336.7 1211.02 L1337.29 1211.02 L1337.87 1211.02 L1338.46 1211.02 L1339.05 1211.02 L1339.63 1211.02 L1340.22 1211.02 L1340.8 1211.02 L1341.39 1211.02 L1341.98 1211.02 L1342.56 1211.02 L1343.15 1211.02 L1343.74 1211.02 L1344.32 1211.02 L1344.91 1211.02 L1345.5 1211.02 L1346.08 1211.02 L1346.67 1211.02 L1347.26 1211.02 L1347.84 1211.02 L1348.43 1211.02 L1349.01 1211.02 L1349.6 1211.02 L1350.19 1211.02 L1350.77 1211.02 L1351.36 1211.02 L1351.95 1211.02 L1352.53 1211.02 L1353.12 1211.02 L1353.71 1211.02 L1354.29 1211.02 L1354.88 1211.02 L1355.47 1211.02 L1356.05 1211.02 L1356.64 1211.02 L1357.22 1211.02 L1357.81 1211.02 L1358.4 1211.02 L1358.98 1211.02 L1359.57 1211.02 L1360.16 1211.02 L1360.74 1211.02 L1361.33 1211.02 L1361.92 1211.02 L1362.5 1211.02 L1363.09 1211.02 L1363.68 1211.02 L1364.26 1211.02 L1364.85 1211.02 L1365.43 1211.02 L1366.02 1211.02 L1366.61 1211.02 L1367.19 1211.02 L1367.78 1211.02 L1368.37 1211.02 L1368.95 1211.02 L1369.54 1211.02 L1370.13 1211.02 L1370.71 1211.02 L1371.3 1211.02 L1371.88 1211.02 L1372.47 1211.02 L1373.06 1211.02 L1373.64 1211.02 L1374.23 1211.02 L1374.82 1211.02 L1375.4 1211.02 L1375.99 1211.02 L1376.58 1211.02 L1377.16 1211.02 L1377.75 1211.02 L1378.34 1211.02 L1378.92 1211.02 L1379.51 1211.02 L1380.09 1211.02 L1380.68 1211.02 L1381.27 1211.02 L1381.85 1211.02 L1382.44 1211.02 L1383.03 1211.02 L1383.61 1211.02 L1384.2 1211.02 L1384.79 1211.02 L1385.37 1211.02 L1385.96 1211.02 L1386.55 1211.02 L1387.13 1211.02 L1387.72 1211.02 L1388.3 1211.02 L1388.89 1211.02 L1389.48 1211.02 L1390.06 1211.02 L1390.65 1211.02 L1391.24 1211.02 L1391.82 1211.02 L1392.41 1211.02 L1393 1211.02 L1393.58 1211.02 L1394.17 1211.02 L1394.75 1211.02 L1395.34 1211.02 L1395.93 1211.02 L1396.51 1211.02 L1397.1 1211.02 L1397.69 1211.02 L1398.27 1211.02 L1398.86 1211.02 L1399.45 1211.02 L1400.03 1211.02 L1400.62 1211.02 L1401.21 1211.02 L1401.79 1211.02 L1402.38 1211.02 L1402.96 1211.02 L1403.55 1211.02 L1404.14 1211.02 L1404.72 1211.02 L1405.31 1211.02 L1405.9 1211.02 L1406.48 1211.02 L1407.07 1211.02 L1407.66 1211.02 L1408.24 1211.02 L1408.83 1211.02 L1409.42 1211.02 L1410 1211.02 L1410.59 1211.02 L1411.17 1211.02 L1411.76 1211.02 L1412.35 1211.02 L1412.93 1211.02 L1413.52 1211.02 L1414.11 1211.02 L1414.69 1211.02 L1415.28 1211.02 L1415.87 1211.02 L1416.45 1211.02 L1417.04 1211.02 L1417.63 1211.02 L1418.21 1211.02 L1418.8 1211.02 L1419.38 1211.02 L1419.97 1211.02 L1420.56 1211.02 L1421.14 1211.02 L1421.73 1211.02 L1422.32 1211.02 L1422.9 1211.02 L1423.49 1211.02 L1424.08 1211.02 L1424.66 1211.02 L1425.25 1211.02 L1425.83 1211.02 L1426.42 1211.02 L1427.01 1211.02 L1427.59 1211.02 L1428.18 1211.02 L1428.77 1211.02 L1429.35 1211.02 L1429.94 1211.02 L1430.53 1211.02 L1431.11 1211.02 L1431.7 1211.02 L1432.29 1211.02 L1432.87 1211.02 L1433.46 1211.02 L1434.04 1211.02 L1434.63 1211.02 L1435.22 1211.02 L1435.8 1211.02 L1436.39 1211.02 L1436.98 1211.02 L1437.56 1211.02 L1438.15 1211.02 L1438.74 1211.02 L1439.32 1211.02 L1439.91 1211.02 L1440.5 1211.02 L1441.08 1211.02 L1441.67 1211.02 L1442.25 1211.02 L1442.84 1211.02 L1443.43 1211.02 L1444.01 1211.02 L1444.6 1211.02 L1445.19 1211.02 L1445.77 1211.02 L1446.36 1211.02 L1446.95 1211.02 L1447.53 1211.02 L1448.12 1211.02 L1448.7 1211.02 L1449.29 1211.02 L1449.88 1211.02 L1450.46 1211.02 L1451.05 1211.02 L1451.64 1211.02 L1452.22 1211.02 L1452.81 1211.02 L1453.4 1211.02 L1453.98 1211.02 L1454.57 1211.02 L1455.16 1211.02 L1455.74 1211.02 L1456.33 1211.02 L1456.91 1211.02 L1457.5 1211.02 L1458.09 1211.02 L1458.67 1211.02 L1459.26 1211.02 L1459.85 1211.02 L1460.43 1211.02 L1461.02 1211.02 L1461.61 1211.02 L1462.19 1211.02 L1462.78 1211.02 L1463.37 1211.02 L1463.95 1211.02 L1464.54 1211.02 L1465.12 1211.02 L1465.71 1211.02 L1466.3 1211.02 L1466.88 1211.02 L1467.47 1211.02 L1468.06 1211.02 L1468.64 1211.02 L1469.23 1211.02 L1469.82 1211.02 L1470.4 1211.02 L1470.99 1211.02 L1471.57 1211.02 L1472.16 1211.02 L1472.75 1211.02 L1473.33 1211.02 L1473.92 1211.02 L1474.51 1211.02 L1475.09 1211.02 L1475.68 1211.02 L1476.27 1211.02 L1476.85 1211.02 L1477.44 1211.02 L1478.03 1211.02 L1478.61 1211.02 L1479.2 1211.02 L1479.78 1211.02 L1480.37 1211.02 L1480.96 1211.02 L1481.54 1211.02 L1482.13 1211.02 L1482.72 1211.02 L1483.3 1211.02 L1483.89 1211.02 L1484.48 1211.02 L1485.06 1211.02 L1485.65 1211.02 L1486.24 1211.02 L1486.82 1211.02 L1487.41 1211.02 L1487.99 1211.02 L1488.58 1211.02 L1489.17 1211.02 L1489.75 1211.02 L1490.34 1211.02 L1490.93 1211.02 L1491.51 1211.02 L1492.1 1211.02 L1492.69 1211.02 L1493.27 1211.02 L1493.86 1211.02 L1494.45 1211.02 L1495.03 1211.02 L1495.62 1211.02 L1496.2 1211.02 L1496.79 1211.02 L1497.38 1211.02 L1497.96 1211.02 L1498.55 1211.02 L1499.14 1211.02 L1499.72 1211.02 L1500.31 1211.02 L1500.9 1211.02 L1501.48 1211.02 L1502.07 1211.02 L1502.65 1211.02 L1503.24 1211.02 L1503.83 1211.02 L1504.41 1211.02 L1505 1211.02 L1505.59 1211.02 L1506.17 1211.02 L1506.76 1211.02 L1507.35 1211.02 L1507.93 1211.02 L1508.52 1211.02 L1509.11 1211.02 L1509.69 1211.02 L1510.28 1211.02 L1510.86 1211.02 L1511.45 1211.02 L1512.04 1211.02 L1512.62 1211.02 L1513.21 1211.02 L1513.8 1211.02 L1514.38 1211.02 L1514.97 1211.02 L1515.56 1211.02 L1516.14 1211.02 L1516.73 1211.02 L1517.32 1211.02 L1517.9 1211.02 L1518.49 1211.02 L1519.07 1211.02 L1519.66 1211.02 L1520.25 1211.02 L1520.83 1211.02 L1521.42 1211.02 L1522.01 1211.02 L1522.59 1211.02 L1523.18 1211.02 L1523.77 1211.02 L1524.35 1211.02 L1524.94 1211.02 L1525.52 1211.02 L1526.11 1211.02 L1526.7 1211.02 L1527.28 1211.02 L1527.87 1211.02 L1528.46 1211.02 L1529.04 1211.02 L1529.63 1211.02 L1530.22 1211.02 L1530.8 1211.02 L1531.39 1211.02 L1531.98 1211.02 L1532.56 1211.02 L1533.15 1211.02 L1533.73 1211.02 L1534.32 1211.02 L1534.91 1211.02 L1535.49 1211.02 L1536.08 1211.02 L1536.67 1211.02 L1537.25 1211.02 L1537.84 1211.02 L1538.43 1211.02 L1539.01 1211.02 L1539.6 1211.02 L1540.19 1211.02 L1540.77 1211.02 L1541.36 1211.02 L1541.94 1211.02 L1542.53 1211.02 L1543.12 1211.02 L1543.7 1211.02 L1544.29 1211.02 L1544.88 1211.02 L1545.46 1211.02 L1546.05 1211.02 L1546.64 1211.02 L1547.22 1211.02 L1547.81 1211.02 L1548.4 1211.02 L1548.98 1211.02 L1549.57 1211.02 L1550.15 1211.02 L1550.74 1211.02 L1551.33 1211.02 L1551.91 1211.02 L1552.5 1211.02 L1553.09 1211.02 L1553.67 1211.02 L1554.26 1211.02 L1554.85 1211.02 L1555.43 1211.02 L1556.02 1211.02 L1556.6 1211.02 L1557.19 1211.02 L1557.78 1211.02 L1558.36 1211.02 L1558.95 1211.02 L1559.54 1211.02 L1560.12 1211.02 L1560.71 1211.02 L1561.3 1211.02 L1561.88 1211.02 L1562.47 1211.02 L1563.06 1211.02 L1563.64 1211.02 L1564.23 1211.02 L1564.81 1211.02 L1565.4 1211.02 L1565.99 1211.02 L1566.57 1211.02 L1567.16 1211.02 L1567.75 1211.02 L1568.33 1211.02 L1568.92 1211.02 L1569.51 1211.02 L1570.09 1211.02 L1570.68 1211.02 L1571.27 1211.02 L1571.85 1211.02 L1572.44 1211.02 L1573.02 1211.02 L1573.61 1211.02 L1574.2 1211.02 L1574.78 1211.02 L1575.37 1211.02 L1575.96 1211.02 L1576.54 1211.02 L1577.13 1211.02 L1577.72 1211.02 L1578.3 1211.02 L1578.89 1211.02 L1579.47 1211.02 L1580.06 1211.02 L1580.65 1211.02 L1581.23 1211.02 L1581.82 1211.02 L1582.41 1211.02 L1582.99 1211.02 L1583.58 1211.02 L1584.17 1211.02 L1584.75 1211.02 L1585.34 1211.02 L1585.93 1211.02 L1586.51 1211.02 L1587.1 1211.02 L1587.68 1211.02 L1588.27 1211.02 L1588.86 1211.02 L1589.44 1211.02 L1590.03 1211.02 L1590.62 1211.02 L1591.2 1211.02 L1591.79 1211.02 L1592.38 1211.02 L1592.96 1211.02 L1593.55 1211.02 L1594.14 1211.02 L1594.72 1211.02 L1595.31 1211.02 L1595.89 1211.02 L1596.48 1211.02 L1597.07 1211.02 L1597.65 1211.02 L1598.24 1211.02 L1598.83 1211.02 L1599.41 1211.02 L1600 1211.02 L1600.59 1211.02 L1601.17 1211.02 L1601.76 1211.02 L1602.34 1211.02 L1602.93 1211.02 L1603.52 1211.02 L1604.1 1211.02 L1604.69 1211.02 L1605.28 1211.02 L1605.86 1211.02 L1606.45 1211.02 L1607.04 1211.02 L1607.62 1211.02 L1608.21 1211.02 L1608.8 1211.02 L1609.38 1211.02 L1609.97 1211.02 L1610.55 1211.02 L1611.14 1211.02 L1611.73 1211.02 L1612.31 1211.02 L1612.9 1211.02 L1613.49 1211.02 L1614.07 1211.02 L1614.66 1211.02 L1615.25 1211.02 L1615.83 1211.02 L1616.42 1211.02 L1617.01 1211.02 L1617.59 1211.02 L1618.18 1211.02 L1618.76 1211.02 L1619.35 1211.02 L1619.94 1211.02 L1620.52 1211.02 L1621.11 1211.02 L1621.7 1211.02 L1622.28 1211.02 L1622.87 1211.02 L1623.46 1211.02 L1624.04 1211.02 L1624.63 1211.02 L1625.22 1211.02 L1625.8 1211.02 L1626.39 1211.02 L1626.97 1211.02 L1627.56 1211.02 L1628.15 1211.02 L1628.73 1211.02 L1629.32 1211.02 L1629.91 1211.02 L1630.49 1211.02 L1631.08 1211.02 L1631.67 1211.02 L1632.25 1211.02 L1632.84 1211.02 L1633.42 1211.02 L1634.01 1211.02 L1634.6 1211.02 L1635.18 1211.02 L1635.77 1211.02 L1636.36 1211.02 L1636.94 1211.02 L1637.53 1211.02 L1638.12 1211.02 L1638.7 1211.02 L1639.29 1211.02 L1639.88 1211.02 L1640.46 1211.02 L1641.05 1211.02 L1641.63 1211.02 L1642.22 1211.02 L1642.81 1211.02 L1643.39 1211.02 L1643.98 1211.02 L1644.57 1211.02 L1645.15 1211.02 L1645.74 1211.02 L1646.33 1211.02 L1646.91 1211.02 L1647.5 1211.02 L1648.09 1211.02 L1648.67 1211.02 L1649.26 1211.02 L1649.84 1211.02 L1650.43 1211.02 L1651.02 1211.02 L1651.6 1211.02 L1652.19 1211.02 L1652.78 1211.02 L1653.36 1211.02 L1653.95 1211.02 L1654.54 1211.02 L1655.12 1211.02 L1655.71 1211.02 L1656.29 1211.02 L1656.88 1211.02 L1657.47 1211.02 L1658.05 1211.02 L1658.64 1211.02 L1659.23 1211.02 L1659.81 1211.02 L1660.4 1211.02 L1660.99 1211.02 L1661.57 1211.02 L1662.16 1211.02 L1662.75 1211.02 L1663.33 1211.02 L1663.92 1211.02 L1664.5 1211.02 L1665.09 1211.02 L1665.68 1211.02 L1666.26 1211.02 L1666.85 1211.02 L1667.44 1211.02 L1668.02 1211.02 L1668.61 1211.02 L1669.2 1211.02 L1669.78 1211.02 L1670.37 1211.02 L1670.96 1211.02 L1671.54 1211.02 L1672.13 1211.02 L1672.71 1211.02 L1673.3 1211.02 L1673.89 1211.02 L1674.47 1211.02 L1675.06 1211.02 L1675.65 1211.02 L1676.23 1211.02 L1676.82 1211.02 L1677.41 1211.02 L1677.99 1211.02 L1678.58 1211.02 L1679.17 1211.02 L1679.75 1211.02 L1680.34 1211.02 L1680.92 1211.02 L1681.51 1211.02 L1682.1 1211.02 L1682.68 1211.02 L1683.27 1211.02 L1683.86 1211.02 L1684.44 1211.02 L1685.03 1211.02 L1685.62 1211.02 L1686.2 1211.02 L1686.79 1211.02 L1687.37 1211.02 L1687.96 1211.02 L1688.55 1211.02 L1689.13 1211.02 L1689.72 1211.02 L1690.31 1211.02 L1690.89 1211.02 L1691.48 1211.02 L1692.07 1211.02 L1692.65 1211.02 L1693.24 1211.02 L1693.83 1211.02 L1694.41 1211.02 L1695 1211.02 L1695.58 1211.02 L1696.17 1211.02 L1696.76 1211.02 L1697.34 1211.02 L1697.93 1211.02 L1698.52 1211.02 L1699.1 1211.02 L1699.69 1211.02 L1700.28 1211.02 L1700.86 1211.02 L1701.45 1211.02 L1702.04 1211.02 L1702.62 1211.02 L1703.21 1211.02 L1703.79 1211.02 L1704.38 1211.02 L1704.97 1211.02 L1705.55 1211.02 L1706.14 1211.02 L1706.73 1211.02 L1707.31 1211.02 L1707.9 1211.02 L1708.49 1211.02 L1709.07 1211.02 L1709.66 1211.02 L1710.24 1211.02 L1710.83 1211.02 L1711.42 1211.02 L1712 1211.02 L1712.59 1211.02 L1713.18 1211.02 L1713.76 1211.02 L1714.35 1211.02 L1714.94 1211.02 L1715.52 1211.02 L1716.11 1211.02 L1716.7 1211.02 L1717.28 1211.02 L1717.87 1211.02 L1718.45 1211.02 L1719.04 1211.02 L1719.63 1211.02 L1720.21 1211.02 L1720.8 1211.02 L1721.39 1211.02 L1721.97 1211.02 L1722.56 1211.02 L1723.15 1211.02 L1723.73 1211.02 L1724.32 1211.02 L1724.91 1211.02 L1725.49 1211.02 L1726.08 1211.02 L1726.66 1211.02 L1727.25 1211.02 L1727.84 1211.02 L1728.42 1211.02 L1729.01 1211.02 L1729.6 1211.02 L1730.18 1211.02 L1730.77 1211.02 L1731.36 1211.02 L1731.94 1211.02 L1732.53 1211.02 L1733.11 1211.02 L1733.7 1211.02 L1734.29 1211.02 L1734.87 1211.02 L1735.46 1211.02 L1736.05 1211.02 L1736.63 1211.02 L1737.22 1211.02 L1737.81 1211.02 L1738.39 1211.02 L1738.98 1211.02 L1739.57 1211.02 L1740.15 1211.02 L1740.74 1211.02 L1741.32 1211.02 L1741.91 1211.02 L1742.5 1211.02 L1743.08 1211.02 L1743.67 1211.02 L1744.26 1211.02 L1744.84 1211.02 L1745.43 1211.02 L1746.02 1211.02 L1746.6 1211.02 L1747.19 1211.02 L1747.78 1211.02 L1748.36 1211.02 L1748.95 1211.02 L1749.53 1211.02 L1750.12 1211.02 L1750.71 1211.02 L1751.29 1211.02 L1751.88 1211.02 L1752.47 1211.02 L1753.05 1211.02 L1753.64 1211.02 L1754.23 1211.02 L1754.81 1211.02 L1755.4 1211.02 L1755.99 1211.02 L1756.57 1211.02 L1757.16 1211.02 L1757.74 1211.02 L1758.33 1211.02 L1758.92 1211.02 L1759.5 1211.02 L1760.09 1211.02 L1760.68 1211.02 L1761.26 1211.02 L1761.85 1211.02 L1762.44 1211.02 L1763.02 1211.02 L1763.61 1211.02 L1764.19 1211.02 L1764.78 1211.02 L1765.37 1211.02 L1765.95 1211.02 L1766.54 1211.02 L1767.13 1211.02 L1767.71 1211.02 L1768.3 1211.02 L1768.89 1211.02 L1769.47 1211.02 L1770.06 1211.02 L1770.65 1211.02 L1771.23 1211.02 L1771.82 1211.02 L1772.4 1211.02 L1772.99 1211.02 L1773.58 1211.02 L1774.16 1211.02 L1774.75 1211.02 L1775.34 1211.02 L1775.92 1211.02 L1776.51 1211.02 L1777.1 1211.02 L1777.68 1211.02 L1778.27 1211.02 L1778.86 1211.02 L1779.44 1211.02 L1780.03 1211.02 L1780.61 1211.02 L1781.2 1211.02 L1781.79 1211.02 L1782.37 1211.02 L1782.96 1211.02 L1783.55 1211.02 L1784.13 1211.02 L1784.72 1211.02 L1785.31 1211.02 L1785.89 1211.02 L1786.48 1211.02 L1787.06 1211.02 L1787.65 1211.02 L1788.24 1211.02 L1788.82 1211.02 L1789.41 1211.02 L1790 1211.02 L1790.58 1211.02 L1791.17 1211.02 L1791.76 1211.02 L1792.34 1211.02 L1792.93 1211.02 L1793.52 1211.02 L1794.1 1211.02 L1794.69 1211.02 L1795.27 1211.02 L1795.86 1211.02 L1796.45 1211.02 L1797.03 1211.02 L1797.62 1211.02 L1798.21 1211.02 L1798.79 1211.02 L1799.38 1211.02 L1799.97 1211.02 L1800.55 1211.02 L1801.14 1211.02 L1801.73 1211.02 L1802.31 1211.02 L1802.9 1211.02 L1803.48 1211.02 L1804.07 1211.02 L1804.66 1211.02 L1805.24 1211.02 L1805.83 1211.02 L1806.42 1211.02 L1807 1211.02 L1807.59 1211.02 L1808.18 1211.02 L1808.76 1211.02 L1809.35 1211.02 L1809.94 1211.02 L1810.52 1211.02 L1811.11 1211.02 L1811.69 1211.02 L1812.28 1211.02 L1812.87 1211.02 L1813.45 1211.02 L1814.04 1211.02 L1814.63 1211.02 L1815.21 1211.02 L1815.8 1211.02 L1816.39 1211.02 L1816.97 1211.02 L1817.56 1211.02 L1818.14 1211.02 L1818.73 1211.02 L1819.32 1211.02 L1819.9 1211.02 L1820.49 1211.02 L1821.08 1211.02 L1821.66 1211.02 L1822.25 1211.02 L1822.84 1211.02 L1823.42 1211.02 L1824.01 1211.02 L1824.6 1211.02 L1825.18 1211.02 L1825.77 1211.02 L1826.35 1211.02 L1826.94 1211.02 L1827.53 1211.02 L1828.11 1211.02 L1828.7 1211.02 L1829.29 1211.02 L1829.87 1211.02 L1830.46 1211.02 L1831.05 1211.02 L1831.63 1211.02 L1832.22 1211.02 L1832.81 1211.02 L1833.39 1211.02 L1833.98 1211.02 L1834.56 1211.02 L1835.15 1211.02 L1835.74 1211.02 L1836.32 1211.02 L1836.91 1211.02 L1837.5 1211.02 L1838.08 1211.02 L1838.67 1211.02 L1839.26 1211.02 L1839.84 1211.02 L1840.43 1211.02 L1841.01 1211.02 L1841.6 1211.02 L1842.19 1211.02 L1842.77 1211.02 L1843.36 1211.02 L1843.95 1211.02 L1844.53 1211.02 L1845.12 1211.02 L1845.71 1211.02 L1846.29 1211.02 L1846.88 1211.02 L1847.47 1211.02 L1848.05 1211.02 L1848.64 1211.02 L1849.22 1211.02 L1849.81 1211.02 L1850.4 1211.02 L1850.98 1211.02 L1851.57 1211.02 L1852.16 1211.02 L1852.74 1211.02 L1853.33 1211.02 L1853.92 1211.02 L1854.5 1211.02 L1855.09 1211.02 L1855.68 1211.02 L1856.26 1211.02 L1856.85 1211.02 L1857.43 1211.02 L1858.02 1211.02 L1858.61 1211.02 L1859.19 1211.02 L1859.78 1211.02 L1860.37 1211.02 L1860.95 1211.02 L1861.54 1211.02 L1862.13 1211.02 L1862.71 1211.02 L1863.3 1211.02 L1863.88 1211.02 L1864.47 1211.02 L1865.06 1211.02 L1865.64 1211.02 L1866.23 1211.02 L1866.82 1211.02 L1867.4 1211.02 L1867.99 1211.02 L1868.58 1211.02 L1869.16 1211.02 L1869.75 1211.02 L1870.34 1211.02 L1870.92 1211.02 L1871.51 1211.02 L1872.09 1211.02 L1872.68 1211.02 L1873.27 1211.02 L1873.85 1211.02 L1874.44 1211.02 L1875.03 1211.02 L1875.61 1211.02 L1876.2 1211.02 L1876.79 1211.02 L1877.37 1211.02 L1877.96 1211.02 L1878.55 1211.02 L1879.13 1211.02 L1879.72 1211.02 L1880.3 1211.02 L1880.89 1211.02 L1881.48 1211.02 L1882.06 1211.02 L1882.65 1211.02 L1883.24 1211.02 L1883.82 1211.02 L1884.41 1211.02 L1885 1211.02 L1885.58 1211.02 L1886.17 1211.02 L1886.76 1211.02 L1887.34 1211.02 L1887.93 1211.02 L1888.51 1211.02 L1889.1 1211.02 L1889.69 1211.02 L1890.27 1211.02 L1890.86 1211.02 L1891.45 1211.02 L1892.03 1211.02 L1892.62 1211.02 L1893.21 1211.02 L1893.79 1211.02 L1894.38 1211.02 L1894.96 1211.02 L1895.55 1211.02 L1896.14 1211.02 L1896.72 1211.02 L1897.31 1211.02 L1897.9 1211.02 L1898.48 1211.02 L1899.07 1211.02 L1899.66 1211.02 L1900.24 1211.02 L1900.83 1211.02 L1901.42 1211.02 L1902 1211.02 L1902.59 1211.02 L1903.17 1211.02 L1903.76 1211.02 L1904.35 1211.02 L1904.93 1211.02 L1905.52 1211.02 L1906.11 1211.02 L1906.69 1211.02 L1907.28 1211.02 L1907.87 1211.02 L1908.45 1211.02 L1909.04 1211.02 L1909.63 1211.02 L1910.21 1211.02 L1910.8 1211.02 L1911.38 1211.02 L1911.97 1211.02 L1912.56 1211.02 L1913.14 1211.02 L1913.73 1211.02 L1914.32 1211.02 L1914.9 1211.02 L1915.49 1211.02 L1916.08 1211.02 L1916.66 1211.02 L1917.25 1211.02 L1917.83 1211.02 L1918.42 1211.02 L1919.01 1211.02 L1919.59 1211.02 L1920.18 1211.02 L1920.77 1211.02 L1921.35 1211.02 L1921.94 1211.02 L1922.53 1211.02 L1923.11 1211.02 L1923.7 1211.02 L1924.29 1211.02 L1924.87 1211.02 L1925.46 1211.02 L1926.04 1211.02 L1926.63 1211.02 L1927.22 1211.02 L1927.8 1211.02 L1928.39 1211.02 L1928.98 1211.02 L1929.56 1211.02 L1930.15 1211.02 L1930.74 1211.02 L1931.32 1211.02 L1931.91 1211.02 L1932.5 1211.02 L1933.08 1211.02 L1933.67 1211.02 L1934.25 1211.02 L1934.84 1211.02 L1935.43 1211.02 L1936.01 1211.02 L1936.6 1211.02 L1937.19 1211.02 L1937.77 1211.02 L1938.36 1211.02 L1938.95 1211.02 L1939.53 1211.02 L1940.12 1211.02 L1940.71 1211.02 L1941.29 1211.02 L1941.88 1211.02 L1942.46 1211.02 L1943.05 1211.02 L1943.64 1211.02 L1944.22 1211.02 L1944.81 1211.02 L1945.4 1211.02 L1945.98 1211.02 L1946.57 1211.02 L1947.16 1211.02 L1947.74 1211.02 L1948.33 1211.02 L1948.91 1211.02 L1949.5 1211.02 L1950.09 1211.02 L1950.67 1211.02 L1951.26 1211.02 L1951.85 1211.02 L1952.43 1211.02 L1953.02 1211.02 L1953.61 1211.02 L1954.19 1211.02 L1954.78 1211.02 L1955.37 1211.02 L1955.95 1211.02 L1956.54 1211.02 L1957.12 1211.02 L1957.71 1211.02 L1958.3 1211.02 L1958.88 1211.02 L1959.47 1211.02 L1960.06 1211.02 L1960.64 1211.02 L1961.23 1211.02 L1961.82 1211.02 L1962.4 1211.02 L1962.99 1211.02 L1963.58 1211.02 L1964.16 1211.02 L1964.75 1211.02 L1965.33 1211.02 L1965.92 1211.02 L1966.51 1211.02 L1967.09 1211.02 L1967.68 1211.02 L1968.27 1211.02 L1968.85 1211.02 L1969.44 1211.02 L1970.03 1211.02 L1970.61 1211.02 L1971.2 1211.02 L1971.78 1211.02 L1972.37 1211.02 L1972.96 1211.02 L1973.54 1211.02 L1974.13 1211.02 L1974.72 1211.02 L1975.3 1211.02 L1975.89 1211.02 L1976.48 1211.02 L1977.06 1211.02 L1977.65 1211.02 L1978.24 1211.02 L1978.82 1211.02 L1979.41 1211.02 L1979.99 1211.02 L1980.58 1211.02 L1981.17 1211.02 L1981.75 1211.02 L1982.34 1211.02 L1982.93 1211.02 L1983.51 1211.02 L1984.1 1211.02 L1984.69 1211.02 L1985.27 1211.02 L1985.86 1211.02 L1986.45 1211.02 L1987.03 1211.02 L1987.62 1211.02 L1988.2 1211.02 L1988.79 1211.02 L1989.38 1211.02 L1989.96 1211.02 L1990.55 1211.02 L1991.14 1211.02 L1991.72 1211.02 L1992.31 1211.02 L1992.9 1211.02 L1993.48 1211.02 L1994.07 1211.02 L1994.65 1211.02 L1995.24 1211.02 L1995.83 1211.02 L1996.41 1211.02 L1997 1211.02 L1997.59 1211.02 L1998.17 1211.02 L1998.76 1211.02 L1999.35 1211.02 L1999.93 1211.02 L2000.52 1211.02 L2001.11 1211.02 L2001.69 1211.02 L2002.28 1211.02 L2002.86 1211.02 L2003.45 1211.02 L2004.04 1211.02 L2004.62 1211.02 L2005.21 1211.02 L2005.8 1211.02 L2006.38 1211.02 L2006.97 1211.02 L2007.56 1211.02 L2008.14 1211.02 L2008.73 1211.02 L2009.32 1211.02 L2009.9 1211.02 L2010.49 1211.02 L2011.07 1211.02 L2011.66 1211.02 L2012.25 1211.02 L2012.83 1211.02 L2013.42 1211.02 L2014.01 1211.02 L2014.59 1211.02 L2015.18 1211.02 L2015.77 1211.02 L2016.35 1211.02 L2016.94 1211.02 L2017.53 1211.02 L2018.11 1211.02 L2018.7 1211.02 L2019.28 1211.02 L2019.87 1211.02 L2020.46 1211.02 L2021.04 1211.02 L2021.63 1211.02 L2022.22 1211.02 L2022.8 1211.02 L2023.39 1211.02 L2023.98 1211.02 L2024.56 1211.02 L2025.15 1211.02 L2025.73 1211.02 L2026.32 1211.02 L2026.91 1211.02 L2027.49 1211.02 L2028.08 1211.02 L2028.67 1211.02 L2029.25 1211.02 L2029.84 1211.02 L2030.43 1211.02 L2031.01 1211.02 L2031.6 1211.02 L2032.19 1211.02 L2032.77 1211.02 L2033.36 1211.02 L2033.94 1211.02 L2034.53 1211.02 L2035.12 1211.02 L2035.7 1211.02 L2036.29 1211.02 L2036.88 1211.02 L2037.46 1211.02 L2038.05 1211.02 L2038.64 1211.02 L2039.22 1211.02 L2039.81 1211.02 L2040.4 1211.02 L2040.98 1211.02 L2041.57 1211.02 L2042.15 1211.02 L2042.74 1211.02 L2043.33 1211.02 L2043.91 1211.02 L2044.5 1211.02 L2045.09 1211.02 L2045.67 1211.02 L2046.26 1211.02 L2046.85 1211.02 L2047.43 1211.02 L2048.02 1211.02 L2048.6 1211.02 L2049.19 1211.02 L2049.78 1211.02 L2050.36 1211.02 L2050.95 1211.02 L2051.54 1211.02 L2052.12 1211.02 L2052.71 1211.02 L2053.3 1211.02 L2053.88 1211.02 L2054.47 1211.02 L2055.06 1211.02 L2055.64 1211.02 L2056.23 1211.02 L2056.81 1211.02 L2057.4 1211.02 L2057.99 1211.02 L2058.57 1211.02 L2059.16 1211.02 L2059.75 1211.02 L2060.33 1211.02 L2060.92 1211.02 L2061.51 1211.02 L2062.09 1211.02 L2062.68 1211.02 L2063.27 1211.02 L2063.85 1211.02 L2064.44 1211.02 L2065.02 1211.02 L2065.61 1211.02 L2066.2 1211.02 L2066.78 1211.02 L2067.37 1211.02 L2067.96 1211.02 L2068.54 1211.02 L2069.13 1211.02 L2069.72 1211.02 L2070.3 1211.02 L2070.89 1211.02 L2071.48 1211.02 L2072.06 1211.02 L2072.65 1211.02 L2073.23 1211.02 L2073.82 1211.02 L2074.41 1211.02 L2074.99 1211.02 L2075.58 1211.02 L2076.17 1211.02 L2076.75 1211.02 L2077.34 1211.02 L2077.93 1211.02 L2078.51 1211.02 L2079.1 1211.02 L2079.68 1211.02 L2080.27 1211.02 L2080.86 1211.02 L2081.44 1211.02 L2082.03 1211.02 L2082.62 1211.02 L2083.2 1211.02 L2083.79 1211.02 L2084.38 1211.02 L2084.96 1211.02 L2085.55 1211.02 L2086.14 1211.02 L2086.72 1211.02 L2087.31 1211.02 L2087.89 1211.02 L2088.48 1211.02 L2089.07 1211.02 L2089.65 1211.02 L2090.24 1211.02 L2090.83 1211.02 L2091.41 1211.02 L2092 1211.02 L2092.59 1211.02 L2093.17 1211.02 L2093.76 1211.02 L2094.35 1211.02 L2094.93 1211.02 L2095.52 1211.02 L2096.1 1211.02 L2096.69 1211.02 L2097.28 1211.02 L2097.86 1211.02 L2098.45 1211.02 L2099.04 1211.02 L2099.62 1211.02 L2100.21 1211.02 L2100.8 1211.02 L2101.38 1211.02 L2101.97 1211.02 L2102.55 1211.02 L2103.14 1211.02 L2103.73 1211.02 L2104.31 1211.02 L2104.9 1211.02 L2105.49 1211.02 L2106.07 1211.02 L2106.66 1211.02 L2107.25 1211.02 L2107.83 1211.02 L2108.42 1211.02 L2109.01 1211.02 L2109.59 1211.02 L2110.18 1211.02 L2110.76 1211.02 L2111.35 1211.02 L2111.94 1211.02 L2112.52 1211.02 L2113.11 1211.02 L2113.7 1211.02 L2114.28 1211.02 L2114.87 1211.02 L2115.46 1211.02 L2116.04 1211.02 L2116.63 1211.02 L2117.22 1211.02 L2117.8 1211.02 L2118.39 1211.02 L2118.97 1211.02 L2119.56 1211.02 L2120.15 1211.02 L2120.73 1211.02 L2121.32 1211.02 L2121.91 1211.02 L2122.49 1211.02 L2123.08 1211.02 L2123.67 1211.02 L2124.25 1211.02 L2124.84 1211.02 L2125.42 1211.02 L2126.01 1211.02 L2126.6 1211.02 L2127.18 1211.02 L2127.77 1211.02 L2128.36 1211.02 L2128.94 1211.02 L2129.53 1211.02 L2130.12 1211.02 L2130.7 1211.02 L2131.29 1211.02 L2131.88 1211.02 L2132.46 1211.02 L2133.05 1211.02 L2133.63 1211.02 L2134.22 1211.02 L2134.81 1211.02 L2135.39 1211.02 L2135.98 1211.02 L2136.57 1211.02 L2137.15 1211.02 L2137.74 1211.02 L2138.33 1211.02 L2138.91 1211.02 L2139.5 1211.02 L2140.09 1211.02 L2140.67 1211.02 L2141.26 1211.02 L2141.84 1211.02 L2142.43 1211.02 L2143.02 1211.02 L2143.6 1211.02 L2144.19 1211.02 L2144.78 1211.02 L2145.36 1211.02 L2145.95 1211.02 L2146.54 1211.02 L2147.12 1211.02 L2147.71 1211.02 L2148.3 1211.02 L2148.88 1211.02 L2149.47 1211.02 L2150.05 1211.02 L2150.64 1211.02 L2151.23 1211.02 L2151.81 1211.02 L2152.4 1211.02 L2152.99 1211.02 L2153.57 1211.02 L2154.16 1211.02 L2154.75 1211.02 L2155.33 1211.02 L2155.92 1211.02 L2156.5 1211.02 L2157.09 1211.02 L2157.68 1211.02 L2158.26 1211.02 L2158.26 1210.41 L2157.68 1210.41 L2157.09 1210.41 L2156.5 1210.41 L2155.92 1210.41 L2155.33 1210.41 L2154.75 1210.41 L2154.16 1210.41 L2153.57 1210.41 L2152.99 1210.41 L2152.4 1210.41 L2151.81 1210.41 L2151.23 1210.41 L2150.64 1210.41 L2150.05 1210.41 L2149.47 1210.41 L2148.88 1210.41 L2148.3 1210.41 L2147.71 1210.41 L2147.12 1210.41 L2146.54 1210.41 L2145.95 1210.41 L2145.36 1210.41 L2144.78 1210.41 L2144.19 1210.41 L2143.6 1210.41 L2143.02 1210.41 L2142.43 1210.41 L2141.84 1210.41 L2141.26 1210.41 L2140.67 1210.41 L2140.09 1210.41 L2139.5 1210.41 L2138.91 1210.41 L2138.33 1210.41 L2137.74 1210.41 L2137.15 1210.41 L2136.57 1210.41 L2135.98 1210.41 L2135.39 1210.41 L2134.81 1210.41 L2134.22 1210.41 L2133.63 1210.41 L2133.05 1210.41 L2132.46 1210.41 L2131.88 1210.41 L2131.29 1210.41 L2130.7 1210.41 L2130.12 1210.41 L2129.53 1210.41 L2128.94 1210.41 L2128.36 1210.41 L2127.77 1210.41 L2127.18 1210.41 L2126.6 1210.41 L2126.01 1210.41 L2125.42 1210.41 L2124.84 1210.41 L2124.25 1210.41 L2123.67 1210.41 L2123.08 1210.41 L2122.49 1210.41 L2121.91 1210.41 L2121.32 1210.41 L2120.73 1210.41 L2120.15 1210.41 L2119.56 1210.41 L2118.97 1210.41 L2118.39 1210.41 L2117.8 1210.41 L2117.22 1210.41 L2116.63 1210.41 L2116.04 1210.41 L2115.46 1210.41 L2114.87 1210.41 L2114.28 1210.41 L2113.7 1210.41 L2113.11 1210.41 L2112.52 1210.41 L2111.94 1210.41 L2111.35 1210.41 L2110.76 1210.41 L2110.18 1210.41 L2109.59 1210.41 L2109.01 1210.41 L2108.42 1210.41 L2107.83 1210.41 L2107.25 1210.41 L2106.66 1210.41 L2106.07 1210.41 L2105.49 1210.41 L2104.9 1210.41 L2104.31 1210.41 L2103.73 1210.41 L2103.14 1210.41 L2102.55 1210.41 L2101.97 1210.41 L2101.38 1210.41 L2100.8 1210.41 L2100.21 1210.41 L2099.62 1210.41 L2099.04 1210.41 L2098.45 1210.41 L2097.86 1210.41 L2097.28 1210.41 L2096.69 1210.41 L2096.1 1210.41 L2095.52 1210.41 L2094.93 1210.41 L2094.35 1210.41 L2093.76 1210.41 L2093.17 1210.41 L2092.59 1210.41 L2092 1210.41 L2091.41 1210.41 L2090.83 1210.41 L2090.24 1210.41 L2089.65 1210.41 L2089.07 1210.41 L2088.48 1210.41 L2087.89 1210.41 L2087.31 1210.41 L2086.72 1210.41 L2086.14 1210.41 L2085.55 1210.41 L2084.96 1210.41 L2084.38 1210.41 L2083.79 1210.41 L2083.2 1210.41 L2082.62 1210.41 L2082.03 1210.41 L2081.44 1210.41 L2080.86 1210.41 L2080.27 1210.41 L2079.68 1210.41 L2079.1 1210.41 L2078.51 1210.41 L2077.93 1210.41 L2077.34 1210.41 L2076.75 1210.41 L2076.17 1210.41 L2075.58 1210.41 L2074.99 1210.41 L2074.41 1210.41 L2073.82 1210.41 L2073.23 1210.41 L2072.65 1210.41 L2072.06 1210.41 L2071.48 1210.41 L2070.89 1210.41 L2070.3 1210.41 L2069.72 1210.41 L2069.13 1210.41 L2068.54 1210.41 L2067.96 1210.41 L2067.37 1210.41 L2066.78 1210.41 L2066.2 1210.41 L2065.61 1210.41 L2065.02 1210.41 L2064.44 1210.41 L2063.85 1210.41 L2063.27 1210.41 L2062.68 1210.41 L2062.09 1210.41 L2061.51 1210.41 L2060.92 1210.41 L2060.33 1210.41 L2059.75 1210.41 L2059.16 1210.41 L2058.57 1210.41 L2057.99 1210.41 L2057.4 1210.41 L2056.81 1210.41 L2056.23 1210.41 L2055.64 1210.41 L2055.06 1210.41 L2054.47 1210.41 L2053.88 1210.41 L2053.3 1210.41 L2052.71 1210.41 L2052.12 1210.41 L2051.54 1210.41 L2050.95 1210.41 L2050.36 1210.41 L2049.78 1210.41 L2049.19 1210.41 L2048.6 1210.41 L2048.02 1210.41 L2047.43 1210.41 L2046.85 1210.41 L2046.26 1210.41 L2045.67 1210.41 L2045.09 1210.41 L2044.5 1210.41 L2043.91 1210.41 L2043.33 1210.41 L2042.74 1210.41 L2042.15 1210.41 L2041.57 1210.41 L2040.98 1210.41 L2040.4 1210.41 L2039.81 1210.41 L2039.22 1210.41 L2038.64 1210.41 L2038.05 1210.41 L2037.46 1210.41 L2036.88 1210.41 L2036.29 1210.41 L2035.7 1210.41 L2035.12 1210.41 L2034.53 1210.41 L2033.94 1210.41 L2033.36 1210.41 L2032.77 1210.41 L2032.19 1210.41 L2031.6 1210.41 L2031.01 1210.41 L2030.43 1210.41 L2029.84 1210.41 L2029.25 1210.41 L2028.67 1210.41 L2028.08 1210.41 L2027.49 1210.41 L2026.91 1210.41 L2026.32 1210.41 L2025.73 1210.41 L2025.15 1210.41 L2024.56 1210.41 L2023.98 1210.41 L2023.39 1210.41 L2022.8 1210.41 L2022.22 1210.41 L2021.63 1210.41 L2021.04 1210.41 L2020.46 1210.41 L2019.87 1210.41 L2019.28 1210.41 L2018.7 1210.41 L2018.11 1210.41 L2017.53 1210.41 L2016.94 1210.41 L2016.35 1210.41 L2015.77 1210.41 L2015.18 1210.41 L2014.59 1210.41 L2014.01 1210.41 L2013.42 1210.41 L2012.83 1210.41 L2012.25 1210.41 L2011.66 1210.41 L2011.07 1210.41 L2010.49 1210.41 L2009.9 1210.41 L2009.32 1210.41 L2008.73 1210.41 L2008.14 1210.41 L2007.56 1210.41 L2006.97 1210.41 L2006.38 1210.41 L2005.8 1210.41 L2005.21 1210.41 L2004.62 1210.41 L2004.04 1210.41 L2003.45 1210.41 L2002.86 1210.41 L2002.28 1210.41 L2001.69 1210.41 L2001.11 1210.41 L2000.52 1210.41 L1999.93 1210.41 L1999.35 1210.41 L1998.76 1210.41 L1998.17 1210.41 L1997.59 1210.41 L1997 1210.41 L1996.41 1210.41 L1995.83 1210.41 L1995.24 1210.41 L1994.65 1210.41 L1994.07 1210.41 L1993.48 1210.41 L1992.9 1210.41 L1992.31 1210.41 L1991.72 1210.41 L1991.14 1210.41 L1990.55 1210.41 L1989.96 1210.41 L1989.38 1210.41 L1988.79 1210.41 L1988.2 1210.41 L1987.62 1210.41 L1987.03 1210.41 L1986.45 1210.41 L1985.86 1210.41 L1985.27 1210.41 L1984.69 1210.41 L1984.1 1210.41 L1983.51 1210.41 L1982.93 1210.41 L1982.34 1210.41 L1981.75 1210.41 L1981.17 1210.41 L1980.58 1210.41 L1979.99 1210.41 L1979.41 1210.41 L1978.82 1210.41 L1978.24 1210.41 L1977.65 1210.41 L1977.06 1210.41 L1976.48 1210.41 L1975.89 1210.41 L1975.3 1210.41 L1974.72 1210.41 L1974.13 1210.41 L1973.54 1210.41 L1972.96 1210.41 L1972.37 1210.41 L1971.78 1210.41 L1971.2 1210.41 L1970.61 1210.41 L1970.03 1210.41 L1969.44 1210.41 L1968.85 1210.41 L1968.27 1210.41 L1967.68 1210.41 L1967.09 1210.41 L1966.51 1210.41 L1965.92 1210.41 L1965.33 1210.41 L1964.75 1210.41 L1964.16 1210.41 L1963.58 1210.41 L1962.99 1210.41 L1962.4 1210.41 L1961.82 1210.41 L1961.23 1210.41 L1960.64 1210.41 L1960.06 1210.41 L1959.47 1210.41 L1958.88 1210.41 L1958.3 1210.41 L1957.71 1210.41 L1957.12 1210.41 L1956.54 1210.41 L1955.95 1210.41 L1955.37 1210.41 L1954.78 1210.41 L1954.19 1210.41 L1953.61 1210.41 L1953.02 1210.41 L1952.43 1210.41 L1951.85 1210.41 L1951.26 1210.41 L1950.67 1210.41 L1950.09 1210.41 L1949.5 1210.41 L1948.91 1210.41 L1948.33 1210.41 L1947.74 1210.41 L1947.16 1210.41 L1946.57 1210.41 L1945.98 1210.41 L1945.4 1210.41 L1944.81 1210.41 L1944.22 1210.41 L1943.64 1210.41 L1943.05 1210.41 L1942.46 1210.41 L1941.88 1210.41 L1941.29 1210.41 L1940.71 1210.41 L1940.12 1210.41 L1939.53 1210.41 L1938.95 1210.41 L1938.36 1210.41 L1937.77 1210.41 L1937.19 1210.41 L1936.6 1210.41 L1936.01 1210.41 L1935.43 1210.41 L1934.84 1210.41 L1934.25 1210.41 L1933.67 1210.41 L1933.08 1210.41 L1932.5 1210.41 L1931.91 1210.41 L1931.32 1210.41 L1930.74 1210.41 L1930.15 1210.41 L1929.56 1210.41 L1928.98 1210.41 L1928.39 1210.41 L1927.8 1210.41 L1927.22 1210.41 L1926.63 1210.41 L1926.04 1210.41 L1925.46 1210.41 L1924.87 1210.41 L1924.29 1210.41 L1923.7 1210.41 L1923.11 1210.41 L1922.53 1210.41 L1921.94 1210.41 L1921.35 1210.41 L1920.77 1210.41 L1920.18 1210.41 L1919.59 1210.41 L1919.01 1210.41 L1918.42 1210.41 L1917.83 1210.41 L1917.25 1210.41 L1916.66 1210.41 L1916.08 1210.41 L1915.49 1210.41 L1914.9 1210.41 L1914.32 1210.41 L1913.73 1210.41 L1913.14 1210.41 L1912.56 1210.41 L1911.97 1210.41 L1911.38 1210.41 L1910.8 1210.41 L1910.21 1210.41 L1909.63 1210.41 L1909.04 1210.41 L1908.45 1210.41 L1907.87 1210.41 L1907.28 1210.41 L1906.69 1210.41 L1906.11 1210.41 L1905.52 1210.41 L1904.93 1210.41 L1904.35 1210.41 L1903.76 1210.41 L1903.17 1210.41 L1902.59 1210.41 L1902 1210.41 L1901.42 1210.41 L1900.83 1210.41 L1900.24 1210.41 L1899.66 1210.41 L1899.07 1210.41 L1898.48 1210.41 L1897.9 1210.41 L1897.31 1210.41 L1896.72 1210.41 L1896.14 1210.41 L1895.55 1210.41 L1894.96 1210.41 L1894.38 1210.41 L1893.79 1210.41 L1893.21 1210.41 L1892.62 1210.41 L1892.03 1210.41 L1891.45 1210.41 L1890.86 1210.41 L1890.27 1210.41 L1889.69 1210.41 L1889.1 1210.41 L1888.51 1210.41 L1887.93 1210.41 L1887.34 1210.41 L1886.76 1210.41 L1886.17 1210.41 L1885.58 1210.41 L1885 1210.41 L1884.41 1210.41 L1883.82 1210.41 L1883.24 1210.41 L1882.65 1210.41 L1882.06 1210.41 L1881.48 1210.41 L1880.89 1210.41 L1880.3 1210.41 L1879.72 1210.41 L1879.13 1210.41 L1878.55 1210.41 L1877.96 1210.41 L1877.37 1210.41 L1876.79 1210.41 L1876.2 1210.41 L1875.61 1210.41 L1875.03 1210.41 L1874.44 1210.41 L1873.85 1210.41 L1873.27 1210.41 L1872.68 1210.41 L1872.09 1210.41 L1871.51 1210.41 L1870.92 1210.41 L1870.34 1210.41 L1869.75 1210.41 L1869.16 1210.41 L1868.58 1210.41 L1867.99 1210.41 L1867.4 1210.41 L1866.82 1210.41 L1866.23 1210.41 L1865.64 1210.41 L1865.06 1210.41 L1864.47 1210.41 L1863.88 1210.41 L1863.3 1210.41 L1862.71 1210.41 L1862.13 1210.41 L1861.54 1210.41 L1860.95 1210.41 L1860.37 1210.41 L1859.78 1210.41 L1859.19 1210.41 L1858.61 1210.41 L1858.02 1210.41 L1857.43 1210.41 L1856.85 1210.41 L1856.26 1210.41 L1855.68 1210.41 L1855.09 1210.41 L1854.5 1210.41 L1853.92 1210.41 L1853.33 1210.41 L1852.74 1210.41 L1852.16 1210.41 L1851.57 1210.41 L1850.98 1210.41 L1850.4 1210.41 L1849.81 1210.41 L1849.22 1210.41 L1848.64 1210.41 L1848.05 1210.41 L1847.47 1210.41 L1846.88 1210.41 L1846.29 1210.41 L1845.71 1210.41 L1845.12 1210.41 L1844.53 1210.41 L1843.95 1210.41 L1843.36 1210.41 L1842.77 1210.41 L1842.19 1210.41 L1841.6 1210.41 L1841.01 1210.41 L1840.43 1210.41 L1839.84 1210.41 L1839.26 1210.41 L1838.67 1210.41 L1838.08 1210.41 L1837.5 1210.41 L1836.91 1210.41 L1836.32 1210.41 L1835.74 1210.41 L1835.15 1210.41 L1834.56 1210.41 L1833.98 1210.41 L1833.39 1210.41 L1832.81 1210.41 L1832.22 1210.41 L1831.63 1210.41 L1831.05 1210.41 L1830.46 1210.41 L1829.87 1210.41 L1829.29 1210.41 L1828.7 1210.41 L1828.11 1210.41 L1827.53 1210.41 L1826.94 1210.41 L1826.35 1210.41 L1825.77 1210.41 L1825.18 1210.41 L1824.6 1210.41 L1824.01 1210.41 L1823.42 1210.41 L1822.84 1210.41 L1822.25 1210.41 L1821.66 1210.41 L1821.08 1210.41 L1820.49 1210.41 L1819.9 1210.41 L1819.32 1210.41 L1818.73 1210.41 L1818.14 1210.41 L1817.56 1210.41 L1816.97 1210.41 L1816.39 1210.41 L1815.8 1210.41 L1815.21 1210.41 L1814.63 1210.41 L1814.04 1210.41 L1813.45 1210.41 L1812.87 1210.41 L1812.28 1210.41 L1811.69 1210.41 L1811.11 1210.41 L1810.52 1210.41 L1809.94 1210.41 L1809.35 1210.41 L1808.76 1210.41 L1808.18 1210.41 L1807.59 1210.41 L1807 1210.41 L1806.42 1210.41 L1805.83 1210.41 L1805.24 1210.41 L1804.66 1210.41 L1804.07 1210.41 L1803.48 1210.41 L1802.9 1210.41 L1802.31 1210.41 L1801.73 1210.41 L1801.14 1210.41 L1800.55 1210.41 L1799.97 1210.41 L1799.38 1210.41 L1798.79 1210.41 L1798.21 1210.41 L1797.62 1210.41 L1797.03 1210.41 L1796.45 1210.41 L1795.86 1210.41 L1795.27 1210.41 L1794.69 1210.41 L1794.1 1210.41 L1793.52 1210.41 L1792.93 1210.41 L1792.34 1210.41 L1791.76 1210.41 L1791.17 1210.41 L1790.58 1210.41 L1790 1210.41 L1789.41 1210.41 L1788.82 1210.41 L1788.24 1210.41 L1787.65 1210.41 L1787.06 1210.41 L1786.48 1210.41 L1785.89 1210.41 L1785.31 1210.41 L1784.72 1210.41 L1784.13 1210.41 L1783.55 1210.41 L1782.96 1210.41 L1782.37 1210.41 L1781.79 1210.41 L1781.2 1210.41 L1780.61 1210.41 L1780.03 1210.41 L1779.44 1210.41 L1778.86 1210.41 L1778.27 1210.41 L1777.68 1210.41 L1777.1 1210.41 L1776.51 1210.41 L1775.92 1210.41 L1775.34 1210.41 L1774.75 1210.41 L1774.16 1210.41 L1773.58 1210.41 L1772.99 1210.41 L1772.4 1210.41 L1771.82 1210.41 L1771.23 1210.41 L1770.65 1210.41 L1770.06 1210.41 L1769.47 1210.41 L1768.89 1210.41 L1768.3 1210.41 L1767.71 1210.41 L1767.13 1210.41 L1766.54 1210.41 L1765.95 1210.41 L1765.37 1210.41 L1764.78 1210.41 L1764.19 1210.41 L1763.61 1210.41 L1763.02 1210.41 L1762.44 1210.41 L1761.85 1210.41 L1761.26 1210.41 L1760.68 1210.41 L1760.09 1210.41 L1759.5 1210.41 L1758.92 1210.41 L1758.33 1210.41 L1757.74 1210.41 L1757.16 1210.41 L1756.57 1210.41 L1755.99 1210.41 L1755.4 1210.41 L1754.81 1210.41 L1754.23 1210.41 L1753.64 1210.41 L1753.05 1210.41 L1752.47 1210.41 L1751.88 1210.41 L1751.29 1210.41 L1750.71 1210.41 L1750.12 1210.41 L1749.53 1210.41 L1748.95 1210.41 L1748.36 1210.41 L1747.78 1210.41 L1747.19 1210.41 L1746.6 1210.41 L1746.02 1210.41 L1745.43 1210.41 L1744.84 1210.41 L1744.26 1210.41 L1743.67 1210.41 L1743.08 1210.41 L1742.5 1210.41 L1741.91 1210.41 L1741.32 1210.41 L1740.74 1210.41 L1740.15 1210.41 L1739.57 1210.41 L1738.98 1210.41 L1738.39 1210.41 L1737.81 1210.41 L1737.22 1210.41 L1736.63 1210.41 L1736.05 1210.41 L1735.46 1210.41 L1734.87 1210.41 L1734.29 1210.41 L1733.7 1210.41 L1733.11 1210.41 L1732.53 1210.41 L1731.94 1210.41 L1731.36 1210.41 L1730.77 1210.41 L1730.18 1210.41 L1729.6 1210.41 L1729.01 1210.41 L1728.42 1210.41 L1727.84 1210.41 L1727.25 1210.41 L1726.66 1210.41 L1726.08 1210.41 L1725.49 1210.41 L1724.91 1210.41 L1724.32 1210.41 L1723.73 1210.41 L1723.15 1210.41 L1722.56 1210.41 L1721.97 1210.41 L1721.39 1210.41 L1720.8 1210.41 L1720.21 1210.41 L1719.63 1210.41 L1719.04 1210.41 L1718.45 1210.41 L1717.87 1210.41 L1717.28 1210.41 L1716.7 1210.41 L1716.11 1210.41 L1715.52 1210.41 L1714.94 1210.41 L1714.35 1210.41 L1713.76 1210.41 L1713.18 1210.41 L1712.59 1210.41 L1712 1210.41 L1711.42 1210.41 L1710.83 1210.41 L1710.24 1210.41 L1709.66 1210.41 L1709.07 1210.41 L1708.49 1210.41 L1707.9 1210.41 L1707.31 1210.41 L1706.73 1210.41 L1706.14 1210.41 L1705.55 1210.41 L1704.97 1210.41 L1704.38 1210.41 L1703.79 1210.41 L1703.21 1210.41 L1702.62 1210.41 L1702.04 1210.41 L1701.45 1210.41 L1700.86 1210.41 L1700.28 1210.41 L1699.69 1210.41 L1699.1 1210.41 L1698.52 1210.41 L1697.93 1210.41 L1697.34 1210.41 L1696.76 1210.41 L1696.17 1210.41 L1695.58 1210.41 L1695 1210.41 L1694.41 1210.41 L1693.83 1210.41 L1693.24 1210.41 L1692.65 1210.41 L1692.07 1210.41 L1691.48 1210.41 L1690.89 1210.41 L1690.31 1210.41 L1689.72 1210.41 L1689.13 1210.41 L1688.55 1210.41 L1687.96 1210.41 L1687.37 1210.41 L1686.79 1210.41 L1686.2 1210.41 L1685.62 1210.41 L1685.03 1210.41 L1684.44 1210.41 L1683.86 1210.41 L1683.27 1210.41 L1682.68 1210.41 L1682.1 1210.41 L1681.51 1210.41 L1680.92 1210.41 L1680.34 1210.41 L1679.75 1210.41 L1679.17 1210.41 L1678.58 1210.41 L1677.99 1210.41 L1677.41 1210.41 L1676.82 1210.41 L1676.23 1210.41 L1675.65 1210.41 L1675.06 1210.41 L1674.47 1210.41 L1673.89 1210.41 L1673.3 1210.41 L1672.71 1210.41 L1672.13 1210.41 L1671.54 1210.41 L1670.96 1210.41 L1670.37 1210.41 L1669.78 1210.41 L1669.2 1210.41 L1668.61 1210.41 L1668.02 1210.41 L1667.44 1210.41 L1666.85 1210.41 L1666.26 1210.41 L1665.68 1210.41 L1665.09 1210.41 L1664.5 1210.41 L1663.92 1210.41 L1663.33 1210.41 L1662.75 1210.41 L1662.16 1210.41 L1661.57 1210.41 L1660.99 1210.41 L1660.4 1210.41 L1659.81 1210.41 L1659.23 1210.41 L1658.64 1210.41 L1658.05 1210.41 L1657.47 1210.41 L1656.88 1210.41 L1656.29 1210.41 L1655.71 1210.41 L1655.12 1210.41 L1654.54 1210.41 L1653.95 1210.41 L1653.36 1210.41 L1652.78 1210.41 L1652.19 1210.41 L1651.6 1210.41 L1651.02 1210.41 L1650.43 1210.41 L1649.84 1210.41 L1649.26 1210.41 L1648.67 1210.41 L1648.09 1210.41 L1647.5 1210.41 L1646.91 1210.41 L1646.33 1210.41 L1645.74 1210.41 L1645.15 1210.41 L1644.57 1210.41 L1643.98 1210.41 L1643.39 1210.41 L1642.81 1210.41 L1642.22 1210.41 L1641.63 1210.41 L1641.05 1210.41 L1640.46 1210.41 L1639.88 1210.41 L1639.29 1210.41 L1638.7 1210.41 L1638.12 1210.41 L1637.53 1210.41 L1636.94 1210.41 L1636.36 1210.41 L1635.77 1210.41 L1635.18 1210.41 L1634.6 1210.41 L1634.01 1210.41 L1633.42 1210.41 L1632.84 1210.41 L1632.25 1210.41 L1631.67 1210.41 L1631.08 1210.41 L1630.49 1210.41 L1629.91 1210.41 L1629.32 1210.41 L1628.73 1210.41 L1628.15 1210.41 L1627.56 1210.41 L1626.97 1210.41 L1626.39 1210.41 L1625.8 1210.41 L1625.22 1210.41 L1624.63 1210.41 L1624.04 1210.41 L1623.46 1210.41 L1622.87 1210.41 L1622.28 1210.41 L1621.7 1210.41 L1621.11 1210.41 L1620.52 1210.41 L1619.94 1210.41 L1619.35 1210.41 L1618.76 1210.41 L1618.18 1210.41 L1617.59 1210.41 L1617.01 1210.41 L1616.42 1210.41 L1615.83 1210.41 L1615.25 1210.41 L1614.66 1210.41 L1614.07 1210.41 L1613.49 1210.41 L1612.9 1210.41 L1612.31 1210.41 L1611.73 1210.41 L1611.14 1210.41 L1610.55 1210.41 L1609.97 1210.41 L1609.38 1210.41 L1608.8 1210.41 L1608.21 1210.41 L1607.62 1210.41 L1607.04 1210.41 L1606.45 1210.41 L1605.86 1210.41 L1605.28 1210.41 L1604.69 1210.41 L1604.1 1210.41 L1603.52 1210.41 L1602.93 1210.41 L1602.34 1210.41 L1601.76 1210.41 L1601.17 1210.41 L1600.59 1210.41 L1600 1210.41 L1599.41 1210.41 L1598.83 1210.41 L1598.24 1210.41 L1597.65 1210.41 L1597.07 1210.41 L1596.48 1210.41 L1595.89 1210.41 L1595.31 1210.41 L1594.72 1210.41 L1594.14 1210.41 L1593.55 1210.41 L1592.96 1210.41 L1592.38 1210.41 L1591.79 1210.41 L1591.2 1210.41 L1590.62 1210.41 L1590.03 1210.41 L1589.44 1210.41 L1588.86 1210.41 L1588.27 1210.41 L1587.68 1210.41 L1587.1 1210.41 L1586.51 1210.41 L1585.93 1210.41 L1585.34 1210.41 L1584.75 1210.41 L1584.17 1210.41 L1583.58 1210.41 L1582.99 1210.41 L1582.41 1210.41 L1581.82 1210.41 L1581.23 1210.41 L1580.65 1210.41 L1580.06 1210.41 L1579.47 1210.41 L1578.89 1210.41 L1578.3 1210.41 L1577.72 1210.41 L1577.13 1210.41 L1576.54 1210.41 L1575.96 1210.41 L1575.37 1210.41 L1574.78 1210.41 L1574.2 1210.41 L1573.61 1210.41 L1573.02 1210.41 L1572.44 1210.41 L1571.85 1210.41 L1571.27 1210.41 L1570.68 1210.41 L1570.09 1210.41 L1569.51 1210.41 L1568.92 1210.41 L1568.33 1210.41 L1567.75 1210.41 L1567.16 1210.41 L1566.57 1210.41 L1565.99 1210.41 L1565.4 1210.41 L1564.81 1210.41 L1564.23 1210.41 L1563.64 1210.41 L1563.06 1210.41 L1562.47 1210.41 L1561.88 1210.41 L1561.3 1210.41 L1560.71 1210.41 L1560.12 1210.41 L1559.54 1210.41 L1558.95 1210.41 L1558.36 1210.41 L1557.78 1210.41 L1557.19 1210.41 L1556.6 1210.41 L1556.02 1210.41 L1555.43 1210.41 L1554.85 1210.41 L1554.26 1210.41 L1553.67 1210.41 L1553.09 1210.41 L1552.5 1210.41 L1551.91 1210.41 L1551.33 1210.41 L1550.74 1210.41 L1550.15 1210.41 L1549.57 1210.41 L1548.98 1210.41 L1548.4 1210.41 L1547.81 1210.41 L1547.22 1210.41 L1546.64 1210.41 L1546.05 1210.41 L1545.46 1210.41 L1544.88 1210.41 L1544.29 1210.41 L1543.7 1210.41 L1543.12 1210.41 L1542.53 1210.41 L1541.94 1210.41 L1541.36 1210.41 L1540.77 1210.41 L1540.19 1210.41 L1539.6 1210.41 L1539.01 1210.41 L1538.43 1210.41 L1537.84 1210.41 L1537.25 1210.41 L1536.67 1210.41 L1536.08 1210.41 L1535.49 1210.41 L1534.91 1210.41 L1534.32 1210.41 L1533.73 1210.41 L1533.15 1210.41 L1532.56 1210.41 L1531.98 1210.41 L1531.39 1210.41 L1530.8 1210.41 L1530.22 1210.41 L1529.63 1210.41 L1529.04 1210.41 L1528.46 1210.41 L1527.87 1210.41 L1527.28 1210.41 L1526.7 1210.41 L1526.11 1210.41 L1525.52 1210.41 L1524.94 1210.41 L1524.35 1210.41 L1523.77 1210.41 L1523.18 1210.41 L1522.59 1210.41 L1522.01 1210.41 L1521.42 1210.41 L1520.83 1210.41 L1520.25 1210.41 L1519.66 1210.41 L1519.07 1210.41 L1518.49 1210.41 L1517.9 1210.41 L1517.32 1210.41 L1516.73 1210.41 L1516.14 1210.41 L1515.56 1210.41 L1514.97 1210.41 L1514.38 1210.41 L1513.8 1210.41 L1513.21 1210.41 L1512.62 1210.41 L1512.04 1210.41 L1511.45 1210.41 L1510.86 1210.41 L1510.28 1210.41 L1509.69 1210.41 L1509.11 1210.41 L1508.52 1210.41 L1507.93 1210.41 L1507.35 1210.41 L1506.76 1210.41 L1506.17 1210.41 L1505.59 1210.41 L1505 1210.41 L1504.41 1210.41 L1503.83 1210.41 L1503.24 1210.41 L1502.65 1210.41 L1502.07 1210.41 L1501.48 1210.41 L1500.9 1210.41 L1500.31 1210.41 L1499.72 1210.41 L1499.14 1210.41 L1498.55 1210.41 L1497.96 1210.41 L1497.38 1210.41 L1496.79 1210.41 L1496.2 1210.41 L1495.62 1210.41 L1495.03 1210.41 L1494.45 1210.41 L1493.86 1210.41 L1493.27 1210.41 L1492.69 1210.41 L1492.1 1210.41 L1491.51 1210.41 L1490.93 1210.41 L1490.34 1210.41 L1489.75 1210.41 L1489.17 1210.41 L1488.58 1210.41 L1487.99 1210.41 L1487.41 1210.41 L1486.82 1210.41 L1486.24 1210.41 L1485.65 1210.41 L1485.06 1210.41 L1484.48 1210.41 L1483.89 1210.41 L1483.3 1210.41 L1482.72 1210.41 L1482.13 1210.41 L1481.54 1210.41 L1480.96 1210.41 L1480.37 1210.41 L1479.78 1210.41 L1479.2 1210.41 L1478.61 1210.41 L1478.03 1210.41 L1477.44 1210.41 L1476.85 1210.41 L1476.27 1210.41 L1475.68 1210.41 L1475.09 1210.41 L1474.51 1210.41 L1473.92 1210.41 L1473.33 1210.41 L1472.75 1210.41 L1472.16 1210.41 L1471.57 1210.41 L1470.99 1210.41 L1470.4 1210.41 L1469.82 1210.41 L1469.23 1210.41 L1468.64 1210.41 L1468.06 1210.41 L1467.47 1210.41 L1466.88 1210.41 L1466.3 1210.41 L1465.71 1210.41 L1465.12 1210.41 L1464.54 1210.41 L1463.95 1210.41 L1463.37 1210.41 L1462.78 1210.41 L1462.19 1210.41 L1461.61 1210.41 L1461.02 1210.41 L1460.43 1210.41 L1459.85 1210.41 L1459.26 1210.41 L1458.67 1210.41 L1458.09 1210.41 L1457.5 1210.41 L1456.91 1210.41 L1456.33 1210.41 L1455.74 1210.41 L1455.16 1210.41 L1454.57 1210.41 L1453.98 1210.41 L1453.4 1210.41 L1452.81 1210.41 L1452.22 1210.41 L1451.64 1210.41 L1451.05 1210.41 L1450.46 1210.41 L1449.88 1210.41 L1449.29 1210.41 L1448.7 1210.41 L1448.12 1210.41 L1447.53 1210.41 L1446.95 1210.41 L1446.36 1210.41 L1445.77 1210.41 L1445.19 1210.41 L1444.6 1210.41 L1444.01 1210.41 L1443.43 1210.41 L1442.84 1210.41 L1442.25 1210.41 L1441.67 1210.41 L1441.08 1210.41 L1440.5 1210.41 L1439.91 1210.41 L1439.32 1210.41 L1438.74 1210.41 L1438.15 1210.41 L1437.56 1210.41 L1436.98 1210.41 L1436.39 1210.41 L1435.8 1210.41 L1435.22 1210.41 L1434.63 1210.41 L1434.04 1210.41 L1433.46 1210.41 L1432.87 1210.41 L1432.29 1210.41 L1431.7 1210.41 L1431.11 1210.41 L1430.53 1210.41 L1429.94 1210.41 L1429.35 1210.41 L1428.77 1210.41 L1428.18 1210.41 L1427.59 1210.41 L1427.01 1210.41 L1426.42 1210.41 L1425.83 1210.41 L1425.25 1210.41 L1424.66 1210.41 L1424.08 1210.41 L1423.49 1210.41 L1422.9 1210.41 L1422.32 1210.41 L1421.73 1210.41 L1421.14 1210.41 L1420.56 1210.41 L1419.97 1210.41 L1419.38 1210.41 L1418.8 1210.41 L1418.21 1210.41 L1417.63 1210.41 L1417.04 1210.41 L1416.45 1210.41 L1415.87 1210.41 L1415.28 1210.41 L1414.69 1210.41 L1414.11 1210.41 L1413.52 1210.41 L1412.93 1210.41 L1412.35 1210.41 L1411.76 1210.41 L1411.17 1210.41 L1410.59 1210.41 L1410 1210.41 L1409.42 1210.41 L1408.83 1210.41 L1408.24 1210.41 L1407.66 1210.41 L1407.07 1210.41 L1406.48 1210.41 L1405.9 1210.41 L1405.31 1210.41 L1404.72 1210.41 L1404.14 1210.41 L1403.55 1210.41 L1402.96 1210.41 L1402.38 1210.41 L1401.79 1210.41 L1401.21 1210.41 L1400.62 1210.41 L1400.03 1210.41 L1399.45 1210.41 L1398.86 1210.41 L1398.27 1210.41 L1397.69 1210.41 L1397.1 1210.41 L1396.51 1210.41 L1395.93 1210.41 L1395.34 1210.41 L1394.75 1210.41 L1394.17 1210.41 L1393.58 1210.41 L1393 1210.41 L1392.41 1210.41 L1391.82 1210.41 L1391.24 1210.41 L1390.65 1210.41 L1390.06 1210.41 L1389.48 1210.41 L1388.89 1210.41 L1388.3 1210.41 L1387.72 1210.41 L1387.13 1210.41 L1386.55 1210.41 L1385.96 1210.41 L1385.37 1210.41 L1384.79 1210.41 L1384.2 1210.41 L1383.61 1210.41 L1383.03 1210.41 L1382.44 1210.41 L1381.85 1210.41 L1381.27 1210.41 L1380.68 1210.41 L1380.09 1210.41 L1379.51 1210.41 L1378.92 1210.41 L1378.34 1210.41 L1377.75 1210.41 L1377.16 1210.41 L1376.58 1210.41 L1375.99 1210.41 L1375.4 1210.41 L1374.82 1210.41 L1374.23 1210.41 L1373.64 1210.41 L1373.06 1210.41 L1372.47 1210.41 L1371.88 1210.41 L1371.3 1210.41 L1370.71 1210.41 L1370.13 1210.41 L1369.54 1210.41 L1368.95 1210.41 L1368.37 1210.41 L1367.78 1210.41 L1367.19 1210.41 L1366.61 1210.41 L1366.02 1210.41 L1365.43 1210.41 L1364.85 1210.41 L1364.26 1210.41 L1363.68 1210.41 L1363.09 1210.41 L1362.5 1210.41 L1361.92 1210.41 L1361.33 1210.41 L1360.74 1210.41 L1360.16 1210.41 L1359.57 1210.41 L1358.98 1210.41 L1358.4 1210.41 L1357.81 1210.41 L1357.22 1210.41 L1356.64 1210.41 L1356.05 1210.41 L1355.47 1210.41 L1354.88 1210.41 L1354.29 1210.41 L1353.71 1210.41 L1353.12 1210.41 L1352.53 1210.41 L1351.95 1210.41 L1351.36 1210.41 L1350.77 1210.41 L1350.19 1210.41 L1349.6 1210.41 L1349.01 1210.41 L1348.43 1210.41 L1347.84 1210.41 L1347.26 1210.41 L1346.67 1210.41 L1346.08 1210.41 L1345.5 1210.41 L1344.91 1210.41 L1344.32 1210.41 L1343.74 1210.41 L1343.15 1210.41 L1342.56 1210.41 L1341.98 1210.41 L1341.39 1210.41 L1340.8 1210.41 L1340.22 1210.41 L1339.63 1210.41 L1339.05 1210.41 L1338.46 1210.41 L1337.87 1210.41 L1337.29 1210.41 L1336.7 1210.41 L1336.11 1210.41 L1335.53 1210.41 L1334.94 1210.41 L1334.35 1210.41 L1333.77 1210.41 L1333.18 1210.41 L1332.6 1210.41 L1332.01 1210.41 L1331.42 1210.41 L1330.84 1210.41 L1330.25 1210.41 L1329.66 1210.41 L1329.08 1210.41 L1328.49 1210.41 L1327.9 1210.41 L1327.32 1210.41 L1326.73 1210.41 L1326.14 1210.41 L1325.56 1210.41 L1324.97 1210.41 L1324.39 1210.41 L1323.8 1210.41 L1323.21 1210.41 L1322.63 1210.41 L1322.04 1210.41 L1321.45 1210.41 L1320.87 1210.41 L1320.28 1210.41 L1319.69 1210.41 L1319.11 1210.41 L1318.52 1210.41 L1317.93 1210.41 L1317.35 1210.41 L1316.76 1210.41 L1316.18 1210.41 L1315.59 1210.41 L1315 1210.41 L1314.42 1210.41 L1313.83 1210.41 L1313.24 1210.41 L1312.66 1210.41 L1312.07 1210.41 L1311.48 1210.41 L1310.9 1210.41 L1310.31 1210.41 L1309.73 1210.41 L1309.14 1210.41 L1308.55 1210.41 L1307.97 1210.41 L1307.38 1210.41 L1306.79 1210.41 L1306.21 1210.41 L1305.62 1210.41 L1305.03 1210.41 L1304.45 1210.41 L1303.86 1210.41 L1303.27 1210.41 L1302.69 1210.41 L1302.1 1210.41 L1301.52 1210.41 L1300.93 1210.41 L1300.34 1210.41 L1299.76 1210.41 L1299.17 1210.41 L1298.58 1210.41 L1298 1210.41 L1297.41 1210.41 L1296.82 1210.41 L1296.24 1210.41 L1295.65 1210.41 L1295.06 1210.41 L1294.48 1210.41 L1293.89 1210.41 L1293.31 1210.41 L1292.72 1210.41 L1292.13 1210.41 L1291.55 1210.41 L1290.96 1210.41 L1290.37 1210.41 L1289.79 1210.41 L1289.2 1210.41 L1288.61 1210.41 L1288.03 1210.41 L1287.44 1210.41 L1286.86 1210.41 L1286.27 1210.41 L1285.68 1210.41 L1285.1 1210.41 L1284.51 1210.41 L1283.92 1210.41 L1283.34 1210.41 L1282.75 1210.41 L1282.16 1210.41 L1281.58 1210.41 L1280.99 1210.41 L1280.4 1210.41 L1279.82 1210.41 L1279.23 1210.41 L1278.65 1210.41 L1278.06 1210.41 L1277.47 1210.41 L1276.89 1210.41 L1276.3 1210.41 L1275.71 1210.41 L1275.13 1210.41 L1274.54 1210.41 L1273.95 1210.41 L1273.37 1210.41 L1272.78 1210.41 L1272.19 1210.41 L1271.61 1210.41 L1271.02 1210.41 L1270.44 1210.41 L1269.85 1210.41 L1269.26 1210.41 L1268.68 1210.41 L1268.09 1210.41 L1267.5 1210.41 L1266.92 1210.41 L1266.33 1210.41 L1265.74 1210.41 L1265.16 1210.41 L1264.57 1210.41 L1263.98 1210.41 L1263.4 1210.41 L1262.81 1210.41 L1262.23 1210.41 L1261.64 1210.41 L1261.05 1210.41 L1260.47 1210.41 L1259.88 1210.41 L1259.29 1210.41 L1258.71 1210.41 L1258.12 1210.41 L1257.53 1210.41 L1256.95 1210.41 L1256.36 1210.41 L1255.78 1210.41 L1255.19 1210.41 L1254.6 1210.41 L1254.02 1210.41 L1253.43 1210.41 L1252.84 1210.41 L1252.26 1210.41 L1251.67 1210.41 L1251.08 1210.41 L1250.5 1210.41 L1249.91 1210.41 L1249.32 1210.41 L1248.74 1210.41 L1248.15 1210.41 L1247.57 1210.41 L1246.98 1210.41 L1246.39 1210.41 L1245.81 1210.41 L1245.22 1210.41 L1244.63 1210.41 L1244.05 1210.41 L1243.46 1210.41 L1242.87 1210.41 L1242.29 1210.41 L1241.7 1210.41 L1241.11 1210.41 L1240.53 1210.41 L1239.94 1210.41 L1239.36 1210.41 L1238.77 1210.41 L1238.18 1210.41 L1237.6 1210.41 L1237.01 1210.41 L1236.42 1210.41 L1235.84 1210.41 L1235.25 1210.41 L1234.66 1210.41 L1234.08 1210.41 L1233.49 1210.41 L1232.91 1210.41 L1232.32 1210.41 L1231.73 1210.41 L1231.15 1210.41 L1230.56 1210.41 L1229.97 1210.41 L1229.39 1210.41 L1228.8 1210.41 L1228.21 1210.41 L1227.63 1210.41 L1227.04 1210.41 L1226.45 1210.41 L1225.87 1210.41 L1225.28 1210.41 L1224.7 1210.41 L1224.11 1210.41 L1223.52 1210.41 L1222.94 1210.41 L1222.35 1210.41 L1221.76 1210.41 L1221.18 1210.41 L1220.59 1210.41 L1220 1210.41 L1219.42 1210.41 L1218.83 1210.41 L1218.24 1210.41 L1217.66 1210.41 L1217.07 1210.41 L1216.49 1210.41 L1215.9 1210.41 L1215.31 1210.41 L1214.73 1210.41 L1214.14 1210.41 L1213.55 1210.41 L1212.97 1210.41 L1212.38 1210.41 L1211.79 1210.41 L1211.21 1210.41 L1210.62 1210.41 L1210.03 1210.41 L1209.45 1210.41 L1208.86 1210.41 L1208.28 1210.41 L1207.69 1210.41 L1207.1 1210.41 L1206.52 1210.41 L1205.93 1210.41 L1205.34 1210.41 L1204.76 1210.41 L1204.17 1210.41 L1203.58 1210.41 L1203 1210.41 L1202.41 1210.41 L1201.83 1210.41 L1201.24 1210.41 L1200.65 1210.41 L1200.07 1210.41 L1199.48 1210.41 L1198.89 1210.41 L1198.31 1210.41 L1197.72 1210.41 L1197.13 1210.41 L1196.55 1210.41 L1195.96 1210.41 L1195.37 1210.41 L1194.79 1210.41 L1194.2 1210.41 L1193.62 1210.41 L1193.03 1210.41 L1192.44 1210.41 L1191.86 1210.41 L1191.27 1210.41 L1190.68 1210.41 L1190.1 1210.41 L1189.51 1210.41 L1188.92 1210.41 L1188.34 1210.41 L1187.75 1210.41 L1187.16 1210.41 L1186.58 1210.41 L1185.99 1210.41 L1185.41 1210.41 L1184.82 1210.41 L1184.23 1210.41 L1183.65 1210.41 L1183.06 1210.41 L1182.47 1210.41 L1181.89 1210.41 L1181.3 1210.41 L1180.71 1210.41 L1180.13 1210.41 L1179.54 1210.41 L1178.96 1210.41 L1178.37 1210.41 L1177.78 1210.41 L1177.2 1210.41 L1176.61 1210.41 L1176.02 1210.41 L1175.44 1210.41 L1174.85 1210.41 L1174.26 1210.41 L1173.68 1210.41 L1173.09 1210.41 L1172.5 1210.41 L1171.92 1210.41 L1171.33 1210.41 L1170.75 1210.41 L1170.16 1210.41 L1169.57 1210.41 L1168.99 1210.41 L1168.4 1210.41 L1167.81 1210.41 L1167.23 1210.41 L1166.64 1210.41 L1166.05 1210.41 L1165.47 1210.41 L1164.88 1210.41 L1164.29 1210.41 L1163.71 1210.41 L1163.12 1210.41 L1162.54 1210.41 L1161.95 1210.41 L1161.36 1210.41 L1160.78 1210.41 L1160.19 1210.41 L1159.6 1210.41 L1159.02 1210.41 L1158.43 1210.41 L1157.84 1210.41 L1157.26 1210.41 L1156.67 1210.41 L1156.09 1210.41 L1155.5 1210.41 L1154.91 1210.41 L1154.33 1210.41 L1153.74 1210.41 L1153.15 1210.41 L1152.57 1210.41 L1151.98 1210.41 L1151.39 1210.41 L1150.81 1210.41 L1150.22 1210.41 L1149.63 1210.41 L1149.05 1210.41 L1148.46 1210.41 L1147.88 1210.41 L1147.29 1210.41 L1146.7 1210.41 L1146.12 1210.41 L1145.53 1210.41 L1144.94 1210.41 L1144.36 1210.41 L1143.77 1210.41 L1143.18 1210.41 L1142.6 1210.41 L1142.01 1210.41 L1141.42 1210.41 L1140.84 1210.41 L1140.25 1210.41 L1139.67 1210.41 L1139.08 1210.41 L1138.49 1210.41 L1137.91 1210.41 L1137.32 1210.41 L1136.73 1210.41 L1136.15 1210.41 L1135.56 1210.41 L1134.97 1210.41 L1134.39 1210.41 L1133.8 1210.41 L1133.21 1210.41 L1132.63 1210.41 L1132.04 1210.41 L1131.46 1210.41 L1130.87 1210.41 L1130.28 1210.41 L1129.7 1210.41 L1129.11 1210.41 L1128.52 1210.41 L1127.94 1210.41 L1127.35 1210.41 L1126.76 1210.41 L1126.18 1210.41 L1125.59 1210.41 L1125.01 1210.41 L1124.42 1210.41 L1123.83 1210.41 L1123.25 1210.41 L1122.66 1210.41 L1122.07 1210.41 L1121.49 1210.41 L1120.9 1210.41 L1120.31 1210.41 L1119.73 1210.41 L1119.14 1210.41 L1118.55 1210.41 L1117.97 1210.41 L1117.38 1210.41 L1116.8 1210.41 L1116.21 1210.41 L1115.62 1210.41 L1115.04 1210.41 L1114.45 1210.41 L1113.86 1210.41 L1113.28 1210.41 L1112.69 1210.41 L1112.1 1210.41 L1111.52 1210.41 L1110.93 1210.41 L1110.34 1210.41 L1109.76 1210.41 L1109.17 1210.41 L1108.59 1210.41 L1108 1210.41 L1107.41 1210.41 L1106.83 1210.41 L1106.24 1210.41 L1105.65 1210.41 L1105.07 1210.41 L1104.48 1210.41 L1103.89 1210.41 L1103.31 1210.41 L1102.72 1210.41 L1102.14 1210.41 L1101.55 1210.41 L1100.96 1210.41 L1100.38 1210.41 L1099.79 1210.41 L1099.2 1210.41 L1098.62 1210.41 L1098.03 1210.41 L1097.44 1210.41 L1096.86 1210.41 L1096.27 1210.41 L1095.68 1210.41 L1095.1 1210.41 L1094.51 1210.41 L1093.93 1210.41 L1093.34 1210.41 L1092.75 1210.41 L1092.17 1210.41 L1091.58 1210.41 L1090.99 1210.41 L1090.41 1210.41 L1089.82 1210.41 L1089.23 1210.41 L1088.65 1210.41 L1088.06 1210.41 L1087.47 1210.41 L1086.89 1210.41 L1086.3 1210.41 L1085.72 1210.41 L1085.13 1210.41 L1084.54 1210.41 L1083.96 1210.41 L1083.37 1210.41 L1082.78 1210.41 L1082.2 1210.41 L1081.61 1210.41 L1081.02 1210.41 L1080.44 1210.41 L1079.85 1210.41 L1079.26 1210.41 L1078.68 1210.41 L1078.09 1210.41 L1077.51 1210.41 L1076.92 1210.41 L1076.33 1210.41 L1075.75 1210.41 L1075.16 1210.41 L1074.57 1210.41 L1073.99 1210.41 L1073.4 1210.41 L1072.81 1210.41 L1072.23 1210.41 L1071.64 1210.41 L1071.06 1210.41 L1070.47 1210.41 L1069.88 1210.41 L1069.3 1210.41 L1068.71 1210.41 L1068.12 1210.41 L1067.54 1210.41 L1066.95 1210.41 L1066.36 1210.41 L1065.78 1210.41 L1065.19 1210.41 L1064.6 1210.41 L1064.02 1210.41 L1063.43 1210.41 L1062.85 1210.41 L1062.26 1210.41 L1061.67 1210.41 L1061.09 1210.41 L1060.5 1210.41 L1059.91 1210.41 L1059.33 1210.41 L1058.74 1210.41 L1058.15 1210.41 L1057.57 1210.41 L1056.98 1210.41 L1056.39 1210.41 L1055.81 1210.41 L1055.22 1210.41 L1054.64 1210.41 L1054.05 1210.41 L1053.46 1210.41 L1052.88 1210.41 L1052.29 1210.41 L1051.7 1210.41 L1051.12 1210.41 L1050.53 1210.41 L1049.94 1210.41 L1049.36 1210.41 L1048.77 1210.41 L1048.19 1210.41 L1047.6 1210.41 L1047.01 1210.41 L1046.43 1210.41 L1045.84 1210.41 L1045.25 1210.41 L1044.67 1210.41 L1044.08 1210.41 L1043.49 1210.41 L1042.91 1210.41 L1042.32 1210.41 L1041.73 1210.41 L1041.15 1210.41 L1040.56 1210.41 L1039.98 1210.41 L1039.39 1210.41 L1038.8 1210.41 L1038.22 1210.41 L1037.63 1210.41 L1037.04 1210.41 L1036.46 1210.41 L1035.87 1210.41 L1035.28 1210.41 L1034.7 1210.41 L1034.11 1210.41 L1033.52 1210.41 L1032.94 1210.41 L1032.35 1210.41 L1031.77 1210.41 L1031.18 1210.41 L1030.59 1210.41 L1030.01 1210.41 L1029.42 1210.41 L1028.83 1210.41 L1028.25 1210.41 L1027.66 1210.41 L1027.07 1210.41 L1026.49 1210.41 L1025.9 1210.41 L1025.32 1210.41 L1024.73 1210.41 L1024.14 1210.41 L1023.56 1210.41 L1022.97 1210.41 L1022.38 1210.41 L1021.8 1210.41 L1021.21 1210.41 L1020.62 1210.41 L1020.04 1210.41 L1019.45 1210.41 L1018.86 1210.41 L1018.28 1210.41 L1017.69 1210.41 L1017.11 1210.41 L1016.52 1210.41 L1015.93 1210.41 L1015.35 1210.41 L1014.76 1210.41 L1014.17 1210.41 L1013.59 1210.41 L1013 1210.41 L1012.41 1210.41 L1011.83 1210.41 L1011.24 1210.41 L1010.65 1210.41 L1010.07 1210.41 L1009.48 1210.41 L1008.9 1210.41 L1008.31 1210.41 L1007.72 1210.41 L1007.14 1210.41 L1006.55 1210.41 L1005.96 1210.41 L1005.38 1210.41 L1004.79 1210.41 L1004.2 1210.41 L1003.62 1210.41 L1003.03 1210.41 L1002.44 1210.41 L1001.86 1210.41 L1001.27 1210.41 L1000.69 1210.41 L1000.1 1210.41 L999.513 1210.41 L998.926 1210.41 L998.34 1210.41 L997.754 1210.41 L997.167 1210.41 L996.581 1210.41 L995.994 1210.41 L995.408 1210.41 L994.822 1210.41 L994.235 1210.41 L993.649 1210.41 L993.062 1210.41 L992.476 1210.41 L991.889 1210.41 L991.303 1210.41 L990.717 1210.41 L990.13 1210.41 L989.544 1210.41 L988.957 1210.41 L988.371 1210.41 L987.785 1210.41 L987.198 1210.41 L986.612 1210.41 L986.025 1210.41  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1210.71 986.612,1210.71 987.198,1210.71 987.785,1210.71 988.371,1210.71 988.957,1210.71 989.544,1210.71 990.13,1210.71 990.717,1210.71 991.303,1210.71 991.889,1210.71 992.476,1210.71 993.062,1210.71 993.649,1210.71 994.235,1210.71 994.822,1210.71 995.408,1210.71 995.994,1210.71 996.581,1210.71 997.167,1210.71 997.754,1210.71 998.34,1210.71 998.926,1210.71 999.513,1210.71 1000.1,1210.71 1000.69,1210.71 1001.27,1210.71 1001.86,1210.71 1002.44,1210.71 1003.03,1210.71 1003.62,1210.71 1004.2,1210.71 1004.79,1210.71 1005.38,1210.71 1005.96,1210.71 1006.55,1210.71 1007.14,1210.71 1007.72,1210.71 1008.31,1210.71 1008.9,1210.71 1009.48,1210.71 1010.07,1210.71 1010.65,1210.71 1011.24,1210.71 1011.83,1210.71 1012.41,1210.71 1013,1210.71 1013.59,1210.71 1014.17,1210.71 1014.76,1210.71 1015.35,1210.71 1015.93,1210.71 1016.52,1210.71 1017.11,1210.71 1017.69,1210.71 1018.28,1210.71 1018.86,1210.71 1019.45,1210.71 1020.04,1210.71 1020.62,1210.71 1021.21,1210.71 1021.8,1210.71 1022.38,1210.71 1022.97,1210.71 1023.56,1210.71 1024.14,1210.71 1024.73,1210.71 1025.32,1210.71 1025.9,1210.71 1026.49,1210.71 1027.07,1210.71 1027.66,1210.71 1028.25,1210.71 1028.83,1210.71 1029.42,1210.71 1030.01,1210.71 1030.59,1210.71 1031.18,1210.71 1031.77,1210.71 1032.35,1210.71 1032.94,1210.71 1033.52,1210.71 1034.11,1210.71 1034.7,1210.71 1035.28,1210.71 1035.87,1210.71 1036.46,1210.71 1037.04,1210.71 1037.63,1210.71 1038.22,1210.71 1038.8,1210.71 1039.39,1210.71 1039.98,1210.71 1040.56,1210.71 1041.15,1210.71 1041.73,1210.71 1042.32,1210.71 1042.91,1210.71 1043.49,1210.71 1044.08,1210.71 1044.67,1210.71 1045.25,1210.71 1045.84,1210.71 1046.43,1210.71 1047.01,1210.71 1047.6,1210.71 1048.19,1210.71 1048.77,1210.71 1049.36,1210.71 1049.94,1210.71 1050.53,1210.71 1051.12,1210.71 1051.7,1210.71 1052.29,1210.71 1052.88,1210.71 1053.46,1210.71 1054.05,1210.71 1054.64,1210.71 1055.22,1210.71 1055.81,1210.71 1056.39,1210.71 1056.98,1210.71 1057.57,1210.71 1058.15,1210.71 1058.74,1210.71 1059.33,1210.71 1059.91,1210.71 1060.5,1210.71 1061.09,1210.71 1061.67,1210.71 1062.26,1210.71 1062.85,1210.71 1063.43,1210.71 1064.02,1210.71 1064.6,1210.71 1065.19,1210.71 1065.78,1210.71 1066.36,1210.71 1066.95,1210.71 1067.54,1210.71 1068.12,1210.71 1068.71,1210.71 1069.3,1210.71 1069.88,1210.71 1070.47,1210.71 1071.06,1210.71 1071.64,1210.71 1072.23,1210.71 1072.81,1210.71 1073.4,1210.71 1073.99,1210.71 1074.57,1210.71 1075.16,1210.71 1075.75,1210.71 1076.33,1210.71 1076.92,1210.71 1077.51,1210.71 1078.09,1210.71 1078.68,1210.71 1079.26,1210.71 1079.85,1210.71 1080.44,1210.71 1081.02,1210.71 1081.61,1210.71 1082.2,1210.71 1082.78,1210.71 1083.37,1210.71 1083.96,1210.71 1084.54,1210.71 1085.13,1210.71 1085.72,1210.71 1086.3,1210.71 1086.89,1210.71 1087.47,1210.71 1088.06,1210.71 1088.65,1210.71 1089.23,1210.71 1089.82,1210.71 1090.41,1210.71 1090.99,1210.71 1091.58,1210.71 1092.17,1210.71 1092.75,1210.71 1093.34,1210.71 1093.93,1210.71 1094.51,1210.71 1095.1,1210.71 1095.68,1210.71 1096.27,1210.71 1096.86,1210.71 1097.44,1210.71 1098.03,1210.71 1098.62,1210.71 1099.2,1210.71 1099.79,1210.71 1100.38,1210.71 1100.96,1210.71 1101.55,1210.71 1102.14,1210.71 1102.72,1210.71 1103.31,1210.71 1103.89,1210.71 1104.48,1210.71 1105.07,1210.71 1105.65,1210.71 1106.24,1210.71 1106.83,1210.71 1107.41,1210.71 1108,1210.71 1108.59,1210.71 1109.17,1210.71 1109.76,1210.71 1110.34,1210.71 1110.93,1210.71 1111.52,1210.71 1112.1,1210.71 1112.69,1210.71 1113.28,1210.71 1113.86,1210.71 1114.45,1210.71 1115.04,1210.71 1115.62,1210.71 1116.21,1210.71 1116.8,1210.71 1117.38,1210.71 1117.97,1210.71 1118.55,1210.71 1119.14,1210.71 1119.73,1210.71 1120.31,1210.71 1120.9,1210.71 1121.49,1210.71 1122.07,1210.71 1122.66,1210.71 1123.25,1210.71 1123.83,1210.71 1124.42,1210.71 1125.01,1210.71 1125.59,1210.71 1126.18,1210.71 1126.76,1210.71 1127.35,1210.71 1127.94,1210.71 1128.52,1210.71 1129.11,1210.71 1129.7,1210.71 1130.28,1210.71 1130.87,1210.71 1131.46,1210.71 1132.04,1210.71 1132.63,1210.71 1133.21,1210.71 1133.8,1210.71 1134.39,1210.71 1134.97,1210.71 1135.56,1210.71 1136.15,1210.71 1136.73,1210.71 1137.32,1210.71 1137.91,1210.71 1138.49,1210.71 1139.08,1210.71 1139.67,1210.71 1140.25,1210.71 1140.84,1210.71 1141.42,1210.71 1142.01,1210.71 1142.6,1210.71 1143.18,1210.71 1143.77,1210.71 1144.36,1210.71 1144.94,1210.71 1145.53,1210.71 1146.12,1210.71 1146.7,1210.71 1147.29,1210.71 1147.88,1210.71 1148.46,1210.71 1149.05,1210.71 1149.63,1210.71 1150.22,1210.71 1150.81,1210.71 1151.39,1210.71 1151.98,1210.71 1152.57,1210.71 1153.15,1210.71 1153.74,1210.71 1154.33,1210.71 1154.91,1210.71 1155.5,1210.71 1156.09,1210.71 1156.67,1210.71 1157.26,1210.71 1157.84,1210.71 1158.43,1210.71 1159.02,1210.71 1159.6,1210.71 1160.19,1210.71 1160.78,1210.71 1161.36,1210.71 1161.95,1210.71 1162.54,1210.71 1163.12,1210.71 1163.71,1210.71 1164.29,1210.71 1164.88,1210.71 1165.47,1210.71 1166.05,1210.71 1166.64,1210.71 1167.23,1210.71 1167.81,1210.71 1168.4,1210.71 1168.99,1210.71 1169.57,1210.71 1170.16,1210.71 1170.75,1210.71 1171.33,1210.71 1171.92,1210.71 1172.5,1210.71 1173.09,1210.71 1173.68,1210.71 1174.26,1210.71 1174.85,1210.71 1175.44,1210.71 1176.02,1210.71 1176.61,1210.71 1177.2,1210.71 1177.78,1210.71 1178.37,1210.71 1178.96,1210.71 1179.54,1210.71 1180.13,1210.71 1180.71,1210.71 1181.3,1210.71 1181.89,1210.71 1182.47,1210.71 1183.06,1210.71 1183.65,1210.71 1184.23,1210.71 1184.82,1210.71 1185.41,1210.71 1185.99,1210.71 1186.58,1210.71 1187.16,1210.71 1187.75,1210.71 1188.34,1210.71 1188.92,1210.71 1189.51,1210.71 1190.1,1210.71 1190.68,1210.71 1191.27,1210.71 1191.86,1210.71 1192.44,1210.71 1193.03,1210.71 1193.62,1210.71 1194.2,1210.71 1194.79,1210.71 1195.37,1210.71 1195.96,1210.71 1196.55,1210.71 1197.13,1210.71 1197.72,1210.71 1198.31,1210.71 1198.89,1210.71 1199.48,1210.71 1200.07,1210.71 1200.65,1210.71 1201.24,1210.71 1201.83,1210.71 1202.41,1210.71 1203,1210.71 1203.58,1210.71 1204.17,1210.71 1204.76,1210.71 1205.34,1210.71 1205.93,1210.71 1206.52,1210.71 1207.1,1210.71 1207.69,1210.71 1208.28,1210.71 1208.86,1210.71 1209.45,1210.71 1210.03,1210.71 1210.62,1210.71 1211.21,1210.71 1211.79,1210.71 1212.38,1210.71 1212.97,1210.71 1213.55,1210.71 1214.14,1210.71 1214.73,1210.71 1215.31,1210.71 1215.9,1210.71 1216.49,1210.71 1217.07,1210.71 1217.66,1210.71 1218.24,1210.71 1218.83,1210.71 1219.42,1210.71 1220,1210.71 1220.59,1210.71 1221.18,1210.71 1221.76,1210.71 1222.35,1210.71 1222.94,1210.71 1223.52,1210.71 1224.11,1210.71 1224.7,1210.71 1225.28,1210.71 1225.87,1210.71 1226.45,1210.71 1227.04,1210.71 1227.63,1210.71 1228.21,1210.71 1228.8,1210.71 1229.39,1210.71 1229.97,1210.71 1230.56,1210.71 1231.15,1210.71 1231.73,1210.71 1232.32,1210.71 1232.91,1210.71 1233.49,1210.71 1234.08,1210.71 1234.66,1210.71 1235.25,1210.71 1235.84,1210.71 1236.42,1210.71 1237.01,1210.71 1237.6,1210.71 1238.18,1210.71 1238.77,1210.71 1239.36,1210.71 1239.94,1210.71 1240.53,1210.71 1241.11,1210.71 1241.7,1210.71 1242.29,1210.71 1242.87,1210.71 1243.46,1210.71 1244.05,1210.71 1244.63,1210.71 1245.22,1210.71 1245.81,1210.71 1246.39,1210.71 1246.98,1210.71 1247.57,1210.71 1248.15,1210.71 1248.74,1210.71 1249.32,1210.71 1249.91,1210.71 1250.5,1210.71 1251.08,1210.71 1251.67,1210.71 1252.26,1210.71 1252.84,1210.71 1253.43,1210.71 1254.02,1210.71 1254.6,1210.71 1255.19,1210.71 1255.78,1210.71 1256.36,1210.71 1256.95,1210.71 1257.53,1210.71 1258.12,1210.71 1258.71,1210.71 1259.29,1210.71 1259.88,1210.71 1260.47,1210.71 1261.05,1210.71 1261.64,1210.71 1262.23,1210.71 1262.81,1210.71 1263.4,1210.71 1263.98,1210.71 1264.57,1210.71 1265.16,1210.71 1265.74,1210.71 1266.33,1210.71 1266.92,1210.71 1267.5,1210.71 1268.09,1210.71 1268.68,1210.71 1269.26,1210.71 1269.85,1210.71 1270.44,1210.71 1271.02,1210.71 1271.61,1210.71 1272.19,1210.71 1272.78,1210.71 1273.37,1210.71 1273.95,1210.71 1274.54,1210.71 1275.13,1210.71 1275.71,1210.71 1276.3,1210.71 1276.89,1210.71 1277.47,1210.71 1278.06,1210.71 1278.65,1210.71 1279.23,1210.71 1279.82,1210.71 1280.4,1210.71 1280.99,1210.71 1281.58,1210.71 1282.16,1210.71 1282.75,1210.71 1283.34,1210.71 1283.92,1210.71 1284.51,1210.71 1285.1,1210.71 1285.68,1210.71 1286.27,1210.71 1286.86,1210.71 1287.44,1210.71 1288.03,1210.71 1288.61,1210.71 1289.2,1210.71 1289.79,1210.71 1290.37,1210.71 1290.96,1210.71 1291.55,1210.71 1292.13,1210.71 1292.72,1210.71 1293.31,1210.71 1293.89,1210.71 1294.48,1210.71 1295.06,1210.71 1295.65,1210.71 1296.24,1210.71 1296.82,1210.71 1297.41,1210.71 1298,1210.71 1298.58,1210.71 1299.17,1210.71 1299.76,1210.71 1300.34,1210.71 1300.93,1210.71 1301.52,1210.71 1302.1,1210.71 1302.69,1210.71 1303.27,1210.71 1303.86,1210.71 1304.45,1210.71 1305.03,1210.71 1305.62,1210.71 1306.21,1210.71 1306.79,1210.71 1307.38,1210.71 1307.97,1210.71 1308.55,1210.71 1309.14,1210.71 1309.73,1210.71 1310.31,1210.71 1310.9,1210.71 1311.48,1210.71 1312.07,1210.71 1312.66,1210.71 1313.24,1210.71 1313.83,1210.71 1314.42,1210.71 1315,1210.71 1315.59,1210.71 1316.18,1210.71 1316.76,1210.71 1317.35,1210.71 1317.93,1210.71 1318.52,1210.71 1319.11,1210.71 1319.69,1210.71 1320.28,1210.71 1320.87,1210.71 1321.45,1210.71 1322.04,1210.71 1322.63,1210.71 1323.21,1210.71 1323.8,1210.71 1324.39,1210.71 1324.97,1210.71 1325.56,1210.71 1326.14,1210.71 1326.73,1210.71 1327.32,1210.71 1327.9,1210.71 1328.49,1210.71 1329.08,1210.71 1329.66,1210.71 1330.25,1210.71 1330.84,1210.71 1331.42,1210.71 1332.01,1210.71 1332.6,1210.71 1333.18,1210.71 1333.77,1210.71 1334.35,1210.71 1334.94,1210.71 1335.53,1210.71 1336.11,1210.71 1336.7,1210.71 1337.29,1210.71 1337.87,1210.71 1338.46,1210.71 1339.05,1210.71 1339.63,1210.71 1340.22,1210.71 1340.8,1210.71 1341.39,1210.71 1341.98,1210.71 1342.56,1210.71 1343.15,1210.71 1343.74,1210.71 1344.32,1210.71 1344.91,1210.71 1345.5,1210.71 1346.08,1210.71 1346.67,1210.71 1347.26,1210.71 1347.84,1210.71 1348.43,1210.71 1349.01,1210.71 1349.6,1210.71 1350.19,1210.71 1350.77,1210.71 1351.36,1210.71 1351.95,1210.71 1352.53,1210.71 1353.12,1210.71 1353.71,1210.71 1354.29,1210.71 1354.88,1210.71 1355.47,1210.71 1356.05,1210.71 1356.64,1210.71 1357.22,1210.71 1357.81,1210.71 1358.4,1210.71 1358.98,1210.71 1359.57,1210.71 1360.16,1210.71 1360.74,1210.71 1361.33,1210.71 1361.92,1210.71 1362.5,1210.71 1363.09,1210.71 1363.68,1210.71 1364.26,1210.71 1364.85,1210.71 1365.43,1210.71 1366.02,1210.71 1366.61,1210.71 1367.19,1210.71 1367.78,1210.71 1368.37,1210.71 1368.95,1210.71 1369.54,1210.71 1370.13,1210.71 1370.71,1210.71 1371.3,1210.71 1371.88,1210.71 1372.47,1210.71 1373.06,1210.71 1373.64,1210.71 1374.23,1210.71 1374.82,1210.71 1375.4,1210.71 1375.99,1210.71 1376.58,1210.71 1377.16,1210.71 1377.75,1210.71 1378.34,1210.71 1378.92,1210.71 1379.51,1210.71 1380.09,1210.71 1380.68,1210.71 1381.27,1210.71 1381.85,1210.71 1382.44,1210.71 1383.03,1210.71 1383.61,1210.71 1384.2,1210.71 1384.79,1210.71 1385.37,1210.71 1385.96,1210.71 1386.55,1210.71 1387.13,1210.71 1387.72,1210.71 1388.3,1210.71 1388.89,1210.71 1389.48,1210.71 1390.06,1210.71 1390.65,1210.71 1391.24,1210.71 1391.82,1210.71 1392.41,1210.71 1393,1210.71 1393.58,1210.71 1394.17,1210.71 1394.75,1210.71 1395.34,1210.71 1395.93,1210.71 1396.51,1210.71 1397.1,1210.71 1397.69,1210.71 1398.27,1210.71 1398.86,1210.71 1399.45,1210.71 1400.03,1210.71 1400.62,1210.71 1401.21,1210.71 1401.79,1210.71 1402.38,1210.71 1402.96,1210.71 1403.55,1210.71 1404.14,1210.71 1404.72,1210.71 1405.31,1210.71 1405.9,1210.71 1406.48,1210.71 1407.07,1210.71 1407.66,1210.71 1408.24,1210.71 1408.83,1210.71 1409.42,1210.71 1410,1210.71 1410.59,1210.71 1411.17,1210.71 1411.76,1210.71 1412.35,1210.71 1412.93,1210.71 1413.52,1210.71 1414.11,1210.71 1414.69,1210.71 1415.28,1210.71 1415.87,1210.71 1416.45,1210.71 1417.04,1210.71 1417.63,1210.71 1418.21,1210.71 1418.8,1210.71 1419.38,1210.71 1419.97,1210.71 1420.56,1210.71 1421.14,1210.71 1421.73,1210.71 1422.32,1210.71 1422.9,1210.71 1423.49,1210.71 1424.08,1210.71 1424.66,1210.71 1425.25,1210.71 1425.83,1210.71 1426.42,1210.71 1427.01,1210.71 1427.59,1210.71 1428.18,1210.71 1428.77,1210.71 1429.35,1210.71 1429.94,1210.71 1430.53,1210.71 1431.11,1210.71 1431.7,1210.71 1432.29,1210.71 1432.87,1210.71 1433.46,1210.71 1434.04,1210.71 1434.63,1210.71 1435.22,1210.71 1435.8,1210.71 1436.39,1210.71 1436.98,1210.71 1437.56,1210.71 1438.15,1210.71 1438.74,1210.71 1439.32,1210.71 1439.91,1210.71 1440.5,1210.71 1441.08,1210.71 1441.67,1210.71 1442.25,1210.71 1442.84,1210.71 1443.43,1210.71 1444.01,1210.71 1444.6,1210.71 1445.19,1210.71 1445.77,1210.71 1446.36,1210.71 1446.95,1210.71 1447.53,1210.71 1448.12,1210.71 1448.7,1210.71 1449.29,1210.71 1449.88,1210.71 1450.46,1210.71 1451.05,1210.71 1451.64,1210.71 1452.22,1210.71 1452.81,1210.71 1453.4,1210.71 1453.98,1210.71 1454.57,1210.71 1455.16,1210.71 1455.74,1210.71 1456.33,1210.71 1456.91,1210.71 1457.5,1210.71 1458.09,1210.71 1458.67,1210.71 1459.26,1210.71 1459.85,1210.71 1460.43,1210.71 1461.02,1210.71 1461.61,1210.71 1462.19,1210.71 1462.78,1210.71 1463.37,1210.71 1463.95,1210.71 1464.54,1210.71 1465.12,1210.71 1465.71,1210.71 1466.3,1210.71 1466.88,1210.71 1467.47,1210.71 1468.06,1210.71 1468.64,1210.71 1469.23,1210.71 1469.82,1210.71 1470.4,1210.71 1470.99,1210.71 1471.57,1210.71 1472.16,1210.71 1472.75,1210.71 1473.33,1210.71 1473.92,1210.71 1474.51,1210.71 1475.09,1210.71 1475.68,1210.71 1476.27,1210.71 1476.85,1210.71 1477.44,1210.71 1478.03,1210.71 1478.61,1210.71 1479.2,1210.71 1479.78,1210.71 1480.37,1210.71 1480.96,1210.71 1481.54,1210.71 1482.13,1210.71 1482.72,1210.71 1483.3,1210.71 1483.89,1210.71 1484.48,1210.71 1485.06,1210.71 1485.65,1210.71 1486.24,1210.71 1486.82,1210.71 1487.41,1210.71 1487.99,1210.71 1488.58,1210.71 1489.17,1210.71 1489.75,1210.71 1490.34,1210.71 1490.93,1210.71 1491.51,1210.71 1492.1,1210.71 1492.69,1210.71 1493.27,1210.71 1493.86,1210.71 1494.45,1210.71 1495.03,1210.71 1495.62,1210.71 1496.2,1210.71 1496.79,1210.71 1497.38,1210.71 1497.96,1210.71 1498.55,1210.71 1499.14,1210.71 1499.72,1210.71 1500.31,1210.71 1500.9,1210.71 1501.48,1210.71 1502.07,1210.71 1502.65,1210.71 1503.24,1210.71 1503.83,1210.71 1504.41,1210.71 1505,1210.71 1505.59,1210.71 1506.17,1210.71 1506.76,1210.71 1507.35,1210.71 1507.93,1210.71 1508.52,1210.71 1509.11,1210.71 1509.69,1210.71 1510.28,1210.71 1510.86,1210.71 1511.45,1210.71 1512.04,1210.71 1512.62,1210.71 1513.21,1210.71 1513.8,1210.71 1514.38,1210.71 1514.97,1210.71 1515.56,1210.71 1516.14,1210.71 1516.73,1210.71 1517.32,1210.71 1517.9,1210.71 1518.49,1210.71 1519.07,1210.71 1519.66,1210.71 1520.25,1210.71 1520.83,1210.71 1521.42,1210.71 1522.01,1210.71 1522.59,1210.71 1523.18,1210.71 1523.77,1210.71 1524.35,1210.71 1524.94,1210.71 1525.52,1210.71 1526.11,1210.71 1526.7,1210.71 1527.28,1210.71 1527.87,1210.71 1528.46,1210.71 1529.04,1210.71 1529.63,1210.71 1530.22,1210.71 1530.8,1210.71 1531.39,1210.71 1531.98,1210.71 1532.56,1210.71 1533.15,1210.71 1533.73,1210.71 1534.32,1210.71 1534.91,1210.71 1535.49,1210.71 1536.08,1210.71 1536.67,1210.71 1537.25,1210.71 1537.84,1210.71 1538.43,1210.71 1539.01,1210.71 1539.6,1210.71 1540.19,1210.71 1540.77,1210.71 1541.36,1210.71 1541.94,1210.71 1542.53,1210.71 1543.12,1210.71 1543.7,1210.71 1544.29,1210.71 1544.88,1210.71 1545.46,1210.71 1546.05,1210.71 1546.64,1210.71 1547.22,1210.71 1547.81,1210.71 1548.4,1210.71 1548.98,1210.71 1549.57,1210.71 1550.15,1210.71 1550.74,1210.71 1551.33,1210.71 1551.91,1210.71 1552.5,1210.71 1553.09,1210.71 1553.67,1210.71 1554.26,1210.71 1554.85,1210.71 1555.43,1210.71 1556.02,1210.71 1556.6,1210.71 1557.19,1210.71 1557.78,1210.71 1558.36,1210.71 1558.95,1210.71 1559.54,1210.71 1560.12,1210.71 1560.71,1210.71 1561.3,1210.71 1561.88,1210.71 1562.47,1210.71 1563.06,1210.71 1563.64,1210.71 1564.23,1210.71 1564.81,1210.71 1565.4,1210.71 1565.99,1210.71 1566.57,1210.71 1567.16,1210.71 1567.75,1210.71 1568.33,1210.71 1568.92,1210.71 1569.51,1210.71 1570.09,1210.71 1570.68,1210.71 1571.27,1210.71 1571.85,1210.71 1572.44,1210.71 1573.02,1210.71 1573.61,1210.71 1574.2,1210.71 1574.78,1210.71 1575.37,1210.71 1575.96,1210.71 1576.54,1210.71 1577.13,1210.71 1577.72,1210.71 1578.3,1210.71 1578.89,1210.71 1579.47,1210.71 1580.06,1210.71 1580.65,1210.71 1581.23,1210.71 1581.82,1210.71 1582.41,1210.71 1582.99,1210.71 1583.58,1210.71 1584.17,1210.71 1584.75,1210.71 1585.34,1210.71 1585.93,1210.71 1586.51,1210.71 1587.1,1210.71 1587.68,1210.71 1588.27,1210.71 1588.86,1210.71 1589.44,1210.71 1590.03,1210.71 1590.62,1210.71 1591.2,1210.71 1591.79,1210.71 1592.38,1210.71 1592.96,1210.71 1593.55,1210.71 1594.14,1210.71 1594.72,1210.71 1595.31,1210.71 1595.89,1210.71 1596.48,1210.71 1597.07,1210.71 1597.65,1210.71 1598.24,1210.71 1598.83,1210.71 1599.41,1210.71 1600,1210.71 1600.59,1210.71 1601.17,1210.71 1601.76,1210.71 1602.34,1210.71 1602.93,1210.71 1603.52,1210.71 1604.1,1210.71 1604.69,1210.71 1605.28,1210.71 1605.86,1210.71 1606.45,1210.71 1607.04,1210.71 1607.62,1210.71 1608.21,1210.71 1608.8,1210.71 1609.38,1210.71 1609.97,1210.71 1610.55,1210.71 1611.14,1210.71 1611.73,1210.71 1612.31,1210.71 1612.9,1210.71 1613.49,1210.71 1614.07,1210.71 1614.66,1210.71 1615.25,1210.71 1615.83,1210.71 1616.42,1210.71 1617.01,1210.71 1617.59,1210.71 1618.18,1210.71 1618.76,1210.71 1619.35,1210.71 1619.94,1210.71 1620.52,1210.71 1621.11,1210.71 1621.7,1210.71 1622.28,1210.71 1622.87,1210.71 1623.46,1210.71 1624.04,1210.71 1624.63,1210.71 1625.22,1210.71 1625.8,1210.71 1626.39,1210.71 1626.97,1210.71 1627.56,1210.71 1628.15,1210.71 1628.73,1210.71 1629.32,1210.71 1629.91,1210.71 1630.49,1210.71 1631.08,1210.71 1631.67,1210.71 1632.25,1210.71 1632.84,1210.71 1633.42,1210.71 1634.01,1210.71 1634.6,1210.71 1635.18,1210.71 1635.77,1210.71 1636.36,1210.71 1636.94,1210.71 1637.53,1210.71 1638.12,1210.71 1638.7,1210.71 1639.29,1210.71 1639.88,1210.71 1640.46,1210.71 1641.05,1210.71 1641.63,1210.71 1642.22,1210.71 1642.81,1210.71 1643.39,1210.71 1643.98,1210.71 1644.57,1210.71 1645.15,1210.71 1645.74,1210.71 1646.33,1210.71 1646.91,1210.71 1647.5,1210.71 1648.09,1210.71 1648.67,1210.71 1649.26,1210.71 1649.84,1210.71 1650.43,1210.71 1651.02,1210.71 1651.6,1210.71 1652.19,1210.71 1652.78,1210.71 1653.36,1210.71 1653.95,1210.71 1654.54,1210.71 1655.12,1210.71 1655.71,1210.71 1656.29,1210.71 1656.88,1210.71 1657.47,1210.71 1658.05,1210.71 1658.64,1210.71 1659.23,1210.71 1659.81,1210.71 1660.4,1210.71 1660.99,1210.71 1661.57,1210.71 1662.16,1210.71 1662.75,1210.71 1663.33,1210.71 1663.92,1210.71 1664.5,1210.71 1665.09,1210.71 1665.68,1210.71 1666.26,1210.71 1666.85,1210.71 1667.44,1210.71 1668.02,1210.71 1668.61,1210.71 1669.2,1210.71 1669.78,1210.71 1670.37,1210.71 1670.96,1210.71 1671.54,1210.71 1672.13,1210.71 1672.71,1210.71 1673.3,1210.71 1673.89,1210.71 1674.47,1210.71 1675.06,1210.71 1675.65,1210.71 1676.23,1210.71 1676.82,1210.71 1677.41,1210.71 1677.99,1210.71 1678.58,1210.71 1679.17,1210.71 1679.75,1210.71 1680.34,1210.71 1680.92,1210.71 1681.51,1210.71 1682.1,1210.71 1682.68,1210.71 1683.27,1210.71 1683.86,1210.71 1684.44,1210.71 1685.03,1210.71 1685.62,1210.71 1686.2,1210.71 1686.79,1210.71 1687.37,1210.71 1687.96,1210.71 1688.55,1210.71 1689.13,1210.71 1689.72,1210.71 1690.31,1210.71 1690.89,1210.71 1691.48,1210.71 1692.07,1210.71 1692.65,1210.71 1693.24,1210.71 1693.83,1210.71 1694.41,1210.71 1695,1210.71 1695.58,1210.71 1696.17,1210.71 1696.76,1210.71 1697.34,1210.71 1697.93,1210.71 1698.52,1210.71 1699.1,1210.71 1699.69,1210.71 1700.28,1210.71 1700.86,1210.71 1701.45,1210.71 1702.04,1210.71 1702.62,1210.71 1703.21,1210.71 1703.79,1210.71 1704.38,1210.71 1704.97,1210.71 1705.55,1210.71 1706.14,1210.71 1706.73,1210.71 1707.31,1210.71 1707.9,1210.71 1708.49,1210.71 1709.07,1210.71 1709.66,1210.71 1710.24,1210.71 1710.83,1210.71 1711.42,1210.71 1712,1210.71 1712.59,1210.71 1713.18,1210.71 1713.76,1210.71 1714.35,1210.71 1714.94,1210.71 1715.52,1210.71 1716.11,1210.71 1716.7,1210.71 1717.28,1210.71 1717.87,1210.71 1718.45,1210.71 1719.04,1210.71 1719.63,1210.71 1720.21,1210.71 1720.8,1210.71 1721.39,1210.71 1721.97,1210.71 1722.56,1210.71 1723.15,1210.71 1723.73,1210.71 1724.32,1210.71 1724.91,1210.71 1725.49,1210.71 1726.08,1210.71 1726.66,1210.71 1727.25,1210.71 1727.84,1210.71 1728.42,1210.71 1729.01,1210.71 1729.6,1210.71 1730.18,1210.71 1730.77,1210.71 1731.36,1210.71 1731.94,1210.71 1732.53,1210.71 1733.11,1210.71 1733.7,1210.71 1734.29,1210.71 1734.87,1210.71 1735.46,1210.71 1736.05,1210.71 1736.63,1210.71 1737.22,1210.71 1737.81,1210.71 1738.39,1210.71 1738.98,1210.71 1739.57,1210.71 1740.15,1210.71 1740.74,1210.71 1741.32,1210.71 1741.91,1210.71 1742.5,1210.71 1743.08,1210.71 1743.67,1210.71 1744.26,1210.71 1744.84,1210.71 1745.43,1210.71 1746.02,1210.71 1746.6,1210.71 1747.19,1210.71 1747.78,1210.71 1748.36,1210.71 1748.95,1210.71 1749.53,1210.71 1750.12,1210.71 1750.71,1210.71 1751.29,1210.71 1751.88,1210.71 1752.47,1210.71 1753.05,1210.71 1753.64,1210.71 1754.23,1210.71 1754.81,1210.71 1755.4,1210.71 1755.99,1210.71 1756.57,1210.71 1757.16,1210.71 1757.74,1210.71 1758.33,1210.71 1758.92,1210.71 1759.5,1210.71 1760.09,1210.71 1760.68,1210.71 1761.26,1210.71 1761.85,1210.71 1762.44,1210.71 1763.02,1210.71 1763.61,1210.71 1764.19,1210.71 1764.78,1210.71 1765.37,1210.71 1765.95,1210.71 1766.54,1210.71 1767.13,1210.71 1767.71,1210.71 1768.3,1210.71 1768.89,1210.71 1769.47,1210.71 1770.06,1210.71 1770.65,1210.71 1771.23,1210.71 1771.82,1210.71 1772.4,1210.71 1772.99,1210.71 1773.58,1210.71 1774.16,1210.71 1774.75,1210.71 1775.34,1210.71 1775.92,1210.71 1776.51,1210.71 1777.1,1210.71 1777.68,1210.71 1778.27,1210.71 1778.86,1210.71 1779.44,1210.71 1780.03,1210.71 1780.61,1210.71 1781.2,1210.71 1781.79,1210.71 1782.37,1210.71 1782.96,1210.71 1783.55,1210.71 1784.13,1210.71 1784.72,1210.71 1785.31,1210.71 1785.89,1210.71 1786.48,1210.71 1787.06,1210.71 1787.65,1210.71 1788.24,1210.71 1788.82,1210.71 1789.41,1210.71 1790,1210.71 1790.58,1210.71 1791.17,1210.71 1791.76,1210.71 1792.34,1210.71 1792.93,1210.71 1793.52,1210.71 1794.1,1210.71 1794.69,1210.71 1795.27,1210.71 1795.86,1210.71 1796.45,1210.71 1797.03,1210.71 1797.62,1210.71 1798.21,1210.71 1798.79,1210.71 1799.38,1210.71 1799.97,1210.71 1800.55,1210.71 1801.14,1210.71 1801.73,1210.71 1802.31,1210.71 1802.9,1210.71 1803.48,1210.71 1804.07,1210.71 1804.66,1210.71 1805.24,1210.71 1805.83,1210.71 1806.42,1210.71 1807,1210.71 1807.59,1210.71 1808.18,1210.71 1808.76,1210.71 1809.35,1210.71 1809.94,1210.71 1810.52,1210.71 1811.11,1210.71 1811.69,1210.71 1812.28,1210.71 1812.87,1210.71 1813.45,1210.71 1814.04,1210.71 1814.63,1210.71 1815.21,1210.71 1815.8,1210.71 1816.39,1210.71 1816.97,1210.71 1817.56,1210.71 1818.14,1210.71 1818.73,1210.71 1819.32,1210.71 1819.9,1210.71 1820.49,1210.71 1821.08,1210.71 1821.66,1210.71 1822.25,1210.71 1822.84,1210.71 1823.42,1210.71 1824.01,1210.71 1824.6,1210.71 1825.18,1210.71 1825.77,1210.71 1826.35,1210.71 1826.94,1210.71 1827.53,1210.71 1828.11,1210.71 1828.7,1210.71 1829.29,1210.71 1829.87,1210.71 1830.46,1210.71 1831.05,1210.71 1831.63,1210.71 1832.22,1210.71 1832.81,1210.71 1833.39,1210.71 1833.98,1210.71 1834.56,1210.71 1835.15,1210.71 1835.74,1210.71 1836.32,1210.71 1836.91,1210.71 1837.5,1210.71 1838.08,1210.71 1838.67,1210.71 1839.26,1210.71 1839.84,1210.71 1840.43,1210.71 1841.01,1210.71 1841.6,1210.71 1842.19,1210.71 1842.77,1210.71 1843.36,1210.71 1843.95,1210.71 1844.53,1210.71 1845.12,1210.71 1845.71,1210.71 1846.29,1210.71 1846.88,1210.71 1847.47,1210.71 1848.05,1210.71 1848.64,1210.71 1849.22,1210.71 1849.81,1210.71 1850.4,1210.71 1850.98,1210.71 1851.57,1210.71 1852.16,1210.71 1852.74,1210.71 1853.33,1210.71 1853.92,1210.71 1854.5,1210.71 1855.09,1210.71 1855.68,1210.71 1856.26,1210.71 1856.85,1210.71 1857.43,1210.71 1858.02,1210.71 1858.61,1210.71 1859.19,1210.71 1859.78,1210.71 1860.37,1210.71 1860.95,1210.71 1861.54,1210.71 1862.13,1210.71 1862.71,1210.71 1863.3,1210.71 1863.88,1210.71 1864.47,1210.71 1865.06,1210.71 1865.64,1210.71 1866.23,1210.71 1866.82,1210.71 1867.4,1210.71 1867.99,1210.71 1868.58,1210.71 1869.16,1210.71 1869.75,1210.71 1870.34,1210.71 1870.92,1210.71 1871.51,1210.71 1872.09,1210.71 1872.68,1210.71 1873.27,1210.71 1873.85,1210.71 1874.44,1210.71 1875.03,1210.71 1875.61,1210.71 1876.2,1210.71 1876.79,1210.71 1877.37,1210.71 1877.96,1210.71 1878.55,1210.71 1879.13,1210.71 1879.72,1210.71 1880.3,1210.71 1880.89,1210.71 1881.48,1210.71 1882.06,1210.71 1882.65,1210.71 1883.24,1210.71 1883.82,1210.71 1884.41,1210.71 1885,1210.71 1885.58,1210.71 1886.17,1210.71 1886.76,1210.71 1887.34,1210.71 1887.93,1210.71 1888.51,1210.71 1889.1,1210.71 1889.69,1210.71 1890.27,1210.71 1890.86,1210.71 1891.45,1210.71 1892.03,1210.71 1892.62,1210.71 1893.21,1210.71 1893.79,1210.71 1894.38,1210.71 1894.96,1210.71 1895.55,1210.71 1896.14,1210.71 1896.72,1210.71 1897.31,1210.71 1897.9,1210.71 1898.48,1210.71 1899.07,1210.71 1899.66,1210.71 1900.24,1210.71 1900.83,1210.71 1901.42,1210.71 1902,1210.71 1902.59,1210.71 1903.17,1210.71 1903.76,1210.71 1904.35,1210.71 1904.93,1210.71 1905.52,1210.71 1906.11,1210.71 1906.69,1210.71 1907.28,1210.71 1907.87,1210.71 1908.45,1210.71 1909.04,1210.71 1909.63,1210.71 1910.21,1210.71 1910.8,1210.71 1911.38,1210.71 1911.97,1210.71 1912.56,1210.71 1913.14,1210.71 1913.73,1210.71 1914.32,1210.71 1914.9,1210.71 1915.49,1210.71 1916.08,1210.71 1916.66,1210.71 1917.25,1210.71 1917.83,1210.71 1918.42,1210.71 1919.01,1210.71 1919.59,1210.71 1920.18,1210.71 1920.77,1210.71 1921.35,1210.71 1921.94,1210.71 1922.53,1210.71 1923.11,1210.71 1923.7,1210.71 1924.29,1210.71 1924.87,1210.71 1925.46,1210.71 1926.04,1210.71 1926.63,1210.71 1927.22,1210.71 1927.8,1210.71 1928.39,1210.71 1928.98,1210.71 1929.56,1210.71 1930.15,1210.71 1930.74,1210.71 1931.32,1210.71 1931.91,1210.71 1932.5,1210.71 1933.08,1210.71 1933.67,1210.71 1934.25,1210.71 1934.84,1210.71 1935.43,1210.71 1936.01,1210.71 1936.6,1210.71 1937.19,1210.71 1937.77,1210.71 1938.36,1210.71 1938.95,1210.71 1939.53,1210.71 1940.12,1210.71 1940.71,1210.71 1941.29,1210.71 1941.88,1210.71 1942.46,1210.71 1943.05,1210.71 1943.64,1210.71 1944.22,1210.71 1944.81,1210.71 1945.4,1210.71 1945.98,1210.71 1946.57,1210.71 1947.16,1210.71 1947.74,1210.71 1948.33,1210.71 1948.91,1210.71 1949.5,1210.71 1950.09,1210.71 1950.67,1210.71 1951.26,1210.71 1951.85,1210.71 1952.43,1210.71 1953.02,1210.71 1953.61,1210.71 1954.19,1210.71 1954.78,1210.71 1955.37,1210.71 1955.95,1210.71 1956.54,1210.71 1957.12,1210.71 1957.71,1210.71 1958.3,1210.71 1958.88,1210.71 1959.47,1210.71 1960.06,1210.71 1960.64,1210.71 1961.23,1210.71 1961.82,1210.71 1962.4,1210.71 1962.99,1210.71 1963.58,1210.71 1964.16,1210.71 1964.75,1210.71 1965.33,1210.71 1965.92,1210.71 1966.51,1210.71 1967.09,1210.71 1967.68,1210.71 1968.27,1210.71 1968.85,1210.71 1969.44,1210.71 1970.03,1210.71 1970.61,1210.71 1971.2,1210.71 1971.78,1210.71 1972.37,1210.71 1972.96,1210.71 1973.54,1210.71 1974.13,1210.71 1974.72,1210.71 1975.3,1210.71 1975.89,1210.71 1976.48,1210.71 1977.06,1210.71 1977.65,1210.71 1978.24,1210.71 1978.82,1210.71 1979.41,1210.71 1979.99,1210.71 1980.58,1210.71 1981.17,1210.71 1981.75,1210.71 1982.34,1210.71 1982.93,1210.71 1983.51,1210.71 1984.1,1210.71 1984.69,1210.71 1985.27,1210.71 1985.86,1210.71 1986.45,1210.71 1987.03,1210.71 1987.62,1210.71 1988.2,1210.71 1988.79,1210.71 1989.38,1210.71 1989.96,1210.71 1990.55,1210.71 1991.14,1210.71 1991.72,1210.71 1992.31,1210.71 1992.9,1210.71 1993.48,1210.71 1994.07,1210.71 1994.65,1210.71 1995.24,1210.71 1995.83,1210.71 1996.41,1210.71 1997,1210.71 1997.59,1210.71 1998.17,1210.71 1998.76,1210.71 1999.35,1210.71 1999.93,1210.71 2000.52,1210.71 2001.11,1210.71 2001.69,1210.71 2002.28,1210.71 2002.86,1210.71 2003.45,1210.71 2004.04,1210.71 2004.62,1210.71 2005.21,1210.71 2005.8,1210.71 2006.38,1210.71 2006.97,1210.71 2007.56,1210.71 2008.14,1210.71 2008.73,1210.71 2009.32,1210.71 2009.9,1210.71 2010.49,1210.71 2011.07,1210.71 2011.66,1210.71 2012.25,1210.71 2012.83,1210.71 2013.42,1210.71 2014.01,1210.71 2014.59,1210.71 2015.18,1210.71 2015.77,1210.71 2016.35,1210.71 2016.94,1210.71 2017.53,1210.71 2018.11,1210.71 2018.7,1210.71 2019.28,1210.71 2019.87,1210.71 2020.46,1210.71 2021.04,1210.71 2021.63,1210.71 2022.22,1210.71 2022.8,1210.71 2023.39,1210.71 2023.98,1210.71 2024.56,1210.71 2025.15,1210.71 2025.73,1210.71 2026.32,1210.71 2026.91,1210.71 2027.49,1210.71 2028.08,1210.71 2028.67,1210.71 2029.25,1210.71 2029.84,1210.71 2030.43,1210.71 2031.01,1210.71 2031.6,1210.71 2032.19,1210.71 2032.77,1210.71 2033.36,1210.71 2033.94,1210.71 2034.53,1210.71 2035.12,1210.71 2035.7,1210.71 2036.29,1210.71 2036.88,1210.71 2037.46,1210.71 2038.05,1210.71 2038.64,1210.71 2039.22,1210.71 2039.81,1210.71 2040.4,1210.71 2040.98,1210.71 2041.57,1210.71 2042.15,1210.71 2042.74,1210.71 2043.33,1210.71 2043.91,1210.71 2044.5,1210.71 2045.09,1210.71 2045.67,1210.71 2046.26,1210.71 2046.85,1210.71 2047.43,1210.71 2048.02,1210.71 2048.6,1210.71 2049.19,1210.71 2049.78,1210.71 2050.36,1210.71 2050.95,1210.71 2051.54,1210.71 2052.12,1210.71 2052.71,1210.71 2053.3,1210.71 2053.88,1210.71 2054.47,1210.71 2055.06,1210.71 2055.64,1210.71 2056.23,1210.71 2056.81,1210.71 2057.4,1210.71 2057.99,1210.71 2058.57,1210.71 2059.16,1210.71 2059.75,1210.71 2060.33,1210.71 2060.92,1210.71 2061.51,1210.71 2062.09,1210.71 2062.68,1210.71 2063.27,1210.71 2063.85,1210.71 2064.44,1210.71 2065.02,1210.71 2065.61,1210.71 2066.2,1210.71 2066.78,1210.71 2067.37,1210.71 2067.96,1210.71 2068.54,1210.71 2069.13,1210.71 2069.72,1210.71 2070.3,1210.71 2070.89,1210.71 2071.48,1210.71 2072.06,1210.71 2072.65,1210.71 2073.23,1210.71 2073.82,1210.71 2074.41,1210.71 2074.99,1210.71 2075.58,1210.71 2076.17,1210.71 2076.75,1210.71 2077.34,1210.71 2077.93,1210.71 2078.51,1210.71 2079.1,1210.71 2079.68,1210.71 2080.27,1210.71 2080.86,1210.71 2081.44,1210.71 2082.03,1210.71 2082.62,1210.71 2083.2,1210.71 2083.79,1210.71 2084.38,1210.71 2084.96,1210.71 2085.55,1210.71 2086.14,1210.71 2086.72,1210.71 2087.31,1210.71 2087.89,1210.71 2088.48,1210.71 2089.07,1210.71 2089.65,1210.71 2090.24,1210.71 2090.83,1210.71 2091.41,1210.71 2092,1210.71 2092.59,1210.71 2093.17,1210.71 2093.76,1210.71 2094.35,1210.71 2094.93,1210.71 2095.52,1210.71 2096.1,1210.71 2096.69,1210.71 2097.28,1210.71 2097.86,1210.71 2098.45,1210.71 2099.04,1210.71 2099.62,1210.71 2100.21,1210.71 2100.8,1210.71 2101.38,1210.71 2101.97,1210.71 2102.55,1210.71 2103.14,1210.71 2103.73,1210.71 2104.31,1210.71 2104.9,1210.71 2105.49,1210.71 2106.07,1210.71 2106.66,1210.71 2107.25,1210.71 2107.83,1210.71 2108.42,1210.71 2109.01,1210.71 2109.59,1210.71 2110.18,1210.71 2110.76,1210.71 2111.35,1210.71 2111.94,1210.71 2112.52,1210.71 2113.11,1210.71 2113.7,1210.71 2114.28,1210.71 2114.87,1210.71 2115.46,1210.71 2116.04,1210.71 2116.63,1210.71 2117.22,1210.71 2117.8,1210.71 2118.39,1210.71 2118.97,1210.71 2119.56,1210.71 2120.15,1210.71 2120.73,1210.71 2121.32,1210.71 2121.91,1210.71 2122.49,1210.71 2123.08,1210.71 2123.67,1210.71 2124.25,1210.71 2124.84,1210.71 2125.42,1210.71 2126.01,1210.71 2126.6,1210.71 2127.18,1210.71 2127.77,1210.71 2128.36,1210.71 2128.94,1210.71 2129.53,1210.71 2130.12,1210.71 2130.7,1210.71 2131.29,1210.71 2131.88,1210.71 2132.46,1210.71 2133.05,1210.71 2133.63,1210.71 2134.22,1210.71 2134.81,1210.71 2135.39,1210.71 2135.98,1210.71 2136.57,1210.71 2137.15,1210.71 2137.74,1210.71 2138.33,1210.71 2138.91,1210.71 2139.5,1210.71 2140.09,1210.71 2140.67,1210.71 2141.26,1210.71 2141.84,1210.71 2142.43,1210.71 2143.02,1210.71 2143.6,1210.71 2144.19,1210.71 2144.78,1210.71 2145.36,1210.71 2145.95,1210.71 2146.54,1210.71 2147.12,1210.71 2147.71,1210.71 2148.3,1210.71 2148.88,1210.71 2149.47,1210.71 2150.05,1210.71 2150.64,1210.71 2151.23,1210.71 2151.81,1210.71 2152.4,1210.71 2152.99,1210.71 2153.57,1210.71 2154.16,1210.71 2154.75,1210.71 2155.33,1210.71 2155.92,1210.71 2156.5,1210.71 2157.09,1210.71 2157.68,1210.71 2158.26,1210.71 \"/>\n<path clip-path=\"url(#clip482)\" d=\"M986.025 1210.61 L986.612 1210.61 L987.198 1210.61 L987.785 1210.61 L988.371 1210.61 L988.957 1210.61 L989.544 1210.61 L990.13 1210.61 L990.717 1210.61 L991.303 1210.61 L991.889 1210.61 L992.476 1210.61 L993.062 1210.61 L993.649 1210.61 L994.235 1210.61 L994.822 1210.61 L995.408 1210.61 L995.994 1210.61 L996.581 1210.61 L997.167 1210.61 L997.754 1210.61 L998.34 1210.61 L998.926 1210.61 L999.513 1210.61 L1000.1 1210.61 L1000.69 1210.61 L1001.27 1210.61 L1001.86 1210.61 L1002.44 1210.61 L1003.03 1210.61 L1003.62 1210.61 L1004.2 1210.61 L1004.79 1210.61 L1005.38 1210.61 L1005.96 1210.61 L1006.55 1210.61 L1007.14 1210.61 L1007.72 1210.61 L1008.31 1210.61 L1008.9 1210.61 L1009.48 1210.61 L1010.07 1210.61 L1010.65 1210.61 L1011.24 1210.61 L1011.83 1210.61 L1012.41 1210.61 L1013 1210.61 L1013.59 1210.61 L1014.17 1210.61 L1014.76 1210.61 L1015.35 1210.61 L1015.93 1210.61 L1016.52 1210.61 L1017.11 1210.61 L1017.69 1210.61 L1018.28 1210.61 L1018.86 1210.61 L1019.45 1210.61 L1020.04 1210.61 L1020.62 1210.61 L1021.21 1210.61 L1021.8 1210.61 L1022.38 1210.61 L1022.97 1210.61 L1023.56 1210.61 L1024.14 1210.61 L1024.73 1210.61 L1025.32 1210.61 L1025.9 1210.61 L1026.49 1210.61 L1027.07 1210.61 L1027.66 1210.61 L1028.25 1210.61 L1028.83 1210.61 L1029.42 1210.61 L1030.01 1210.61 L1030.59 1210.61 L1031.18 1210.61 L1031.77 1210.61 L1032.35 1210.61 L1032.94 1210.61 L1033.52 1210.61 L1034.11 1210.61 L1034.7 1210.61 L1035.28 1210.61 L1035.87 1210.61 L1036.46 1210.61 L1037.04 1210.61 L1037.63 1210.61 L1038.22 1210.61 L1038.8 1210.61 L1039.39 1210.61 L1039.98 1210.61 L1040.56 1210.61 L1041.15 1210.61 L1041.73 1210.61 L1042.32 1210.61 L1042.91 1210.61 L1043.49 1210.61 L1044.08 1210.61 L1044.67 1210.61 L1045.25 1210.61 L1045.84 1210.61 L1046.43 1210.61 L1047.01 1210.61 L1047.6 1210.61 L1048.19 1210.61 L1048.77 1210.61 L1049.36 1210.61 L1049.94 1210.61 L1050.53 1210.61 L1051.12 1210.61 L1051.7 1210.61 L1052.29 1210.61 L1052.88 1210.61 L1053.46 1210.61 L1054.05 1210.61 L1054.64 1210.61 L1055.22 1210.61 L1055.81 1210.61 L1056.39 1210.61 L1056.98 1210.61 L1057.57 1210.61 L1058.15 1210.61 L1058.74 1210.61 L1059.33 1210.61 L1059.91 1210.61 L1060.5 1210.61 L1061.09 1210.61 L1061.67 1210.61 L1062.26 1210.61 L1062.85 1210.61 L1063.43 1210.61 L1064.02 1210.61 L1064.6 1210.61 L1065.19 1210.61 L1065.78 1210.61 L1066.36 1210.61 L1066.95 1210.61 L1067.54 1210.61 L1068.12 1210.61 L1068.71 1210.61 L1069.3 1210.61 L1069.88 1210.61 L1070.47 1210.61 L1071.06 1210.61 L1071.64 1210.61 L1072.23 1210.61 L1072.81 1210.61 L1073.4 1210.61 L1073.99 1210.61 L1074.57 1210.61 L1075.16 1210.61 L1075.75 1210.61 L1076.33 1210.61 L1076.92 1210.61 L1077.51 1210.61 L1078.09 1210.61 L1078.68 1210.61 L1079.26 1210.61 L1079.85 1210.61 L1080.44 1210.61 L1081.02 1210.61 L1081.61 1210.61 L1082.2 1210.61 L1082.78 1210.61 L1083.37 1210.61 L1083.96 1210.61 L1084.54 1210.61 L1085.13 1210.61 L1085.72 1210.61 L1086.3 1210.61 L1086.89 1210.61 L1087.47 1210.61 L1088.06 1210.61 L1088.65 1210.61 L1089.23 1210.61 L1089.82 1210.61 L1090.41 1210.61 L1090.99 1210.61 L1091.58 1210.61 L1092.17 1210.61 L1092.75 1210.61 L1093.34 1210.61 L1093.93 1210.61 L1094.51 1210.61 L1095.1 1210.61 L1095.68 1210.61 L1096.27 1210.61 L1096.86 1210.61 L1097.44 1210.61 L1098.03 1210.61 L1098.62 1210.61 L1099.2 1210.61 L1099.79 1210.61 L1100.38 1210.61 L1100.96 1210.61 L1101.55 1210.61 L1102.14 1210.61 L1102.72 1210.61 L1103.31 1210.61 L1103.89 1210.61 L1104.48 1210.61 L1105.07 1210.61 L1105.65 1210.61 L1106.24 1210.61 L1106.83 1210.61 L1107.41 1210.61 L1108 1210.61 L1108.59 1210.61 L1109.17 1210.61 L1109.76 1210.61 L1110.34 1210.61 L1110.93 1210.61 L1111.52 1210.61 L1112.1 1210.61 L1112.69 1210.61 L1113.28 1210.61 L1113.86 1210.61 L1114.45 1210.61 L1115.04 1210.61 L1115.62 1210.61 L1116.21 1210.61 L1116.8 1210.61 L1117.38 1210.61 L1117.97 1210.61 L1118.55 1210.61 L1119.14 1210.61 L1119.73 1210.61 L1120.31 1210.61 L1120.9 1210.61 L1121.49 1210.61 L1122.07 1210.61 L1122.66 1210.61 L1123.25 1210.61 L1123.83 1210.61 L1124.42 1210.61 L1125.01 1210.61 L1125.59 1210.61 L1126.18 1210.61 L1126.76 1210.61 L1127.35 1210.61 L1127.94 1210.61 L1128.52 1210.61 L1129.11 1210.61 L1129.7 1210.61 L1130.28 1210.61 L1130.87 1210.61 L1131.46 1210.61 L1132.04 1210.61 L1132.63 1210.61 L1133.21 1210.61 L1133.8 1210.61 L1134.39 1210.61 L1134.97 1210.61 L1135.56 1210.61 L1136.15 1210.61 L1136.73 1210.61 L1137.32 1210.61 L1137.91 1210.61 L1138.49 1210.61 L1139.08 1210.61 L1139.67 1210.61 L1140.25 1210.61 L1140.84 1210.61 L1141.42 1210.61 L1142.01 1210.61 L1142.6 1210.61 L1143.18 1210.61 L1143.77 1210.61 L1144.36 1210.61 L1144.94 1210.61 L1145.53 1210.61 L1146.12 1210.61 L1146.7 1210.61 L1147.29 1210.61 L1147.88 1210.61 L1148.46 1210.61 L1149.05 1210.61 L1149.63 1210.61 L1150.22 1210.61 L1150.81 1210.61 L1151.39 1210.61 L1151.98 1210.61 L1152.57 1210.61 L1153.15 1210.61 L1153.74 1210.61 L1154.33 1210.61 L1154.91 1210.61 L1155.5 1210.61 L1156.09 1210.61 L1156.67 1210.61 L1157.26 1210.61 L1157.84 1210.61 L1158.43 1210.61 L1159.02 1210.61 L1159.6 1210.61 L1160.19 1210.61 L1160.78 1210.61 L1161.36 1210.61 L1161.95 1210.61 L1162.54 1210.61 L1163.12 1210.61 L1163.71 1210.61 L1164.29 1210.61 L1164.88 1210.61 L1165.47 1210.61 L1166.05 1210.61 L1166.64 1210.61 L1167.23 1210.61 L1167.81 1210.61 L1168.4 1210.61 L1168.99 1210.61 L1169.57 1210.61 L1170.16 1210.61 L1170.75 1210.61 L1171.33 1210.61 L1171.92 1210.61 L1172.5 1210.61 L1173.09 1210.61 L1173.68 1210.61 L1174.26 1210.61 L1174.85 1210.61 L1175.44 1210.61 L1176.02 1210.61 L1176.61 1210.61 L1177.2 1210.61 L1177.78 1210.61 L1178.37 1210.61 L1178.96 1210.61 L1179.54 1210.61 L1180.13 1210.61 L1180.71 1210.61 L1181.3 1210.61 L1181.89 1210.61 L1182.47 1210.61 L1183.06 1210.61 L1183.65 1210.61 L1184.23 1210.61 L1184.82 1210.61 L1185.41 1210.61 L1185.99 1210.61 L1186.58 1210.61 L1187.16 1210.61 L1187.75 1210.61 L1188.34 1210.61 L1188.92 1210.61 L1189.51 1210.61 L1190.1 1210.61 L1190.68 1210.61 L1191.27 1210.61 L1191.86 1210.61 L1192.44 1210.61 L1193.03 1210.61 L1193.62 1210.61 L1194.2 1210.61 L1194.79 1210.61 L1195.37 1210.61 L1195.96 1210.61 L1196.55 1210.61 L1197.13 1210.61 L1197.72 1210.61 L1198.31 1210.61 L1198.89 1210.61 L1199.48 1210.61 L1200.07 1210.61 L1200.65 1210.61 L1201.24 1210.61 L1201.83 1210.61 L1202.41 1210.61 L1203 1210.61 L1203.58 1210.61 L1204.17 1210.61 L1204.76 1210.61 L1205.34 1210.61 L1205.93 1210.61 L1206.52 1210.61 L1207.1 1210.61 L1207.69 1210.61 L1208.28 1210.61 L1208.86 1210.61 L1209.45 1210.61 L1210.03 1210.61 L1210.62 1210.61 L1211.21 1210.61 L1211.79 1210.61 L1212.38 1210.61 L1212.97 1210.61 L1213.55 1210.61 L1214.14 1210.61 L1214.73 1210.61 L1215.31 1210.61 L1215.9 1210.61 L1216.49 1210.61 L1217.07 1210.61 L1217.66 1210.61 L1218.24 1210.61 L1218.83 1210.61 L1219.42 1210.61 L1220 1210.61 L1220.59 1210.61 L1221.18 1210.61 L1221.76 1210.61 L1222.35 1210.61 L1222.94 1210.61 L1223.52 1210.61 L1224.11 1210.61 L1224.7 1210.61 L1225.28 1210.61 L1225.87 1210.61 L1226.45 1210.61 L1227.04 1210.61 L1227.63 1210.61 L1228.21 1210.61 L1228.8 1210.61 L1229.39 1210.61 L1229.97 1210.61 L1230.56 1210.61 L1231.15 1210.61 L1231.73 1210.61 L1232.32 1210.61 L1232.91 1210.61 L1233.49 1210.61 L1234.08 1210.61 L1234.66 1210.61 L1235.25 1210.61 L1235.84 1210.61 L1236.42 1210.61 L1237.01 1210.61 L1237.6 1210.61 L1238.18 1210.61 L1238.77 1210.61 L1239.36 1210.61 L1239.94 1210.61 L1240.53 1210.61 L1241.11 1210.61 L1241.7 1210.61 L1242.29 1210.61 L1242.87 1210.61 L1243.46 1210.61 L1244.05 1210.61 L1244.63 1210.61 L1245.22 1210.61 L1245.81 1210.61 L1246.39 1210.61 L1246.98 1210.61 L1247.57 1210.61 L1248.15 1210.61 L1248.74 1210.61 L1249.32 1210.61 L1249.91 1210.61 L1250.5 1210.61 L1251.08 1210.61 L1251.67 1210.61 L1252.26 1210.61 L1252.84 1210.61 L1253.43 1210.61 L1254.02 1210.61 L1254.6 1210.61 L1255.19 1210.61 L1255.78 1210.61 L1256.36 1210.61 L1256.95 1210.61 L1257.53 1210.61 L1258.12 1210.61 L1258.71 1210.61 L1259.29 1210.61 L1259.88 1210.61 L1260.47 1210.61 L1261.05 1210.61 L1261.64 1210.61 L1262.23 1210.61 L1262.81 1210.61 L1263.4 1210.61 L1263.98 1210.61 L1264.57 1210.61 L1265.16 1210.61 L1265.74 1210.61 L1266.33 1210.61 L1266.92 1210.61 L1267.5 1210.61 L1268.09 1210.61 L1268.68 1210.61 L1269.26 1210.61 L1269.85 1210.61 L1270.44 1210.61 L1271.02 1210.61 L1271.61 1210.61 L1272.19 1210.61 L1272.78 1210.61 L1273.37 1210.61 L1273.95 1210.61 L1274.54 1210.61 L1275.13 1210.61 L1275.71 1210.61 L1276.3 1210.61 L1276.89 1210.61 L1277.47 1210.61 L1278.06 1210.61 L1278.65 1210.61 L1279.23 1210.61 L1279.82 1210.61 L1280.4 1210.61 L1280.99 1210.61 L1281.58 1210.61 L1282.16 1210.61 L1282.75 1210.61 L1283.34 1210.61 L1283.92 1210.61 L1284.51 1210.61 L1285.1 1210.61 L1285.68 1210.61 L1286.27 1210.61 L1286.86 1210.61 L1287.44 1210.61 L1288.03 1210.61 L1288.61 1210.61 L1289.2 1210.61 L1289.79 1210.61 L1290.37 1210.61 L1290.96 1210.61 L1291.55 1210.61 L1292.13 1210.61 L1292.72 1210.61 L1293.31 1210.61 L1293.89 1210.61 L1294.48 1210.61 L1295.06 1210.61 L1295.65 1210.61 L1296.24 1210.61 L1296.82 1210.61 L1297.41 1210.61 L1298 1210.61 L1298.58 1210.61 L1299.17 1210.61 L1299.76 1210.61 L1300.34 1210.61 L1300.93 1210.61 L1301.52 1210.61 L1302.1 1210.61 L1302.69 1210.61 L1303.27 1210.61 L1303.86 1210.61 L1304.45 1210.61 L1305.03 1210.61 L1305.62 1210.61 L1306.21 1210.61 L1306.79 1210.61 L1307.38 1210.61 L1307.97 1210.61 L1308.55 1210.61 L1309.14 1210.61 L1309.73 1210.61 L1310.31 1210.61 L1310.9 1210.61 L1311.48 1210.61 L1312.07 1210.61 L1312.66 1210.61 L1313.24 1210.61 L1313.83 1210.61 L1314.42 1210.61 L1315 1210.61 L1315.59 1210.61 L1316.18 1210.61 L1316.76 1210.61 L1317.35 1210.61 L1317.93 1210.61 L1318.52 1210.61 L1319.11 1210.61 L1319.69 1210.61 L1320.28 1210.61 L1320.87 1210.61 L1321.45 1210.61 L1322.04 1210.61 L1322.63 1210.61 L1323.21 1210.61 L1323.8 1210.61 L1324.39 1210.61 L1324.97 1210.61 L1325.56 1210.61 L1326.14 1210.61 L1326.73 1210.61 L1327.32 1210.61 L1327.9 1210.61 L1328.49 1210.61 L1329.08 1210.61 L1329.66 1210.61 L1330.25 1210.61 L1330.84 1210.61 L1331.42 1210.61 L1332.01 1210.61 L1332.6 1210.61 L1333.18 1210.61 L1333.77 1210.61 L1334.35 1210.61 L1334.94 1210.61 L1335.53 1210.61 L1336.11 1210.61 L1336.7 1210.61 L1337.29 1210.61 L1337.87 1210.61 L1338.46 1210.61 L1339.05 1210.61 L1339.63 1210.61 L1340.22 1210.61 L1340.8 1210.61 L1341.39 1210.61 L1341.98 1210.61 L1342.56 1210.61 L1343.15 1210.61 L1343.74 1210.61 L1344.32 1210.61 L1344.91 1210.61 L1345.5 1210.61 L1346.08 1210.61 L1346.67 1210.61 L1347.26 1210.61 L1347.84 1210.61 L1348.43 1210.61 L1349.01 1210.61 L1349.6 1210.61 L1350.19 1210.61 L1350.77 1210.61 L1351.36 1210.61 L1351.95 1210.61 L1352.53 1210.61 L1353.12 1210.61 L1353.71 1210.61 L1354.29 1210.61 L1354.88 1210.61 L1355.47 1210.61 L1356.05 1210.61 L1356.64 1210.61 L1357.22 1210.61 L1357.81 1210.61 L1358.4 1210.61 L1358.98 1210.61 L1359.57 1210.61 L1360.16 1210.61 L1360.74 1210.61 L1361.33 1210.61 L1361.92 1210.61 L1362.5 1210.61 L1363.09 1210.61 L1363.68 1210.61 L1364.26 1210.61 L1364.85 1210.61 L1365.43 1210.61 L1366.02 1210.61 L1366.61 1210.61 L1367.19 1210.61 L1367.78 1210.61 L1368.37 1210.61 L1368.95 1210.61 L1369.54 1210.61 L1370.13 1210.61 L1370.71 1210.61 L1371.3 1210.61 L1371.88 1210.61 L1372.47 1210.61 L1373.06 1210.61 L1373.64 1210.61 L1374.23 1210.61 L1374.82 1210.61 L1375.4 1210.61 L1375.99 1210.61 L1376.58 1210.61 L1377.16 1210.61 L1377.75 1210.61 L1378.34 1210.61 L1378.92 1210.61 L1379.51 1210.61 L1380.09 1210.61 L1380.68 1210.61 L1381.27 1210.61 L1381.85 1210.61 L1382.44 1210.61 L1383.03 1210.61 L1383.61 1210.61 L1384.2 1210.61 L1384.79 1210.61 L1385.37 1210.61 L1385.96 1210.61 L1386.55 1210.61 L1387.13 1210.61 L1387.72 1210.61 L1388.3 1210.61 L1388.89 1210.61 L1389.48 1210.61 L1390.06 1210.61 L1390.65 1210.61 L1391.24 1210.61 L1391.82 1210.61 L1392.41 1210.61 L1393 1210.61 L1393.58 1210.61 L1394.17 1210.61 L1394.75 1210.61 L1395.34 1210.61 L1395.93 1210.61 L1396.51 1210.61 L1397.1 1210.61 L1397.69 1210.61 L1398.27 1210.61 L1398.86 1210.61 L1399.45 1210.61 L1400.03 1210.61 L1400.62 1210.61 L1401.21 1210.61 L1401.79 1210.61 L1402.38 1210.61 L1402.96 1210.61 L1403.55 1210.61 L1404.14 1210.61 L1404.72 1210.61 L1405.31 1210.61 L1405.9 1210.61 L1406.48 1210.61 L1407.07 1210.61 L1407.66 1210.61 L1408.24 1210.61 L1408.83 1210.61 L1409.42 1210.61 L1410 1210.61 L1410.59 1210.61 L1411.17 1210.61 L1411.76 1210.61 L1412.35 1210.61 L1412.93 1210.61 L1413.52 1210.61 L1414.11 1210.61 L1414.69 1210.61 L1415.28 1210.61 L1415.87 1210.61 L1416.45 1210.61 L1417.04 1210.61 L1417.63 1210.61 L1418.21 1210.61 L1418.8 1210.61 L1419.38 1210.61 L1419.97 1210.61 L1420.56 1210.61 L1421.14 1210.61 L1421.73 1210.61 L1422.32 1210.61 L1422.9 1210.61 L1423.49 1210.61 L1424.08 1210.61 L1424.66 1210.61 L1425.25 1210.61 L1425.83 1210.61 L1426.42 1210.61 L1427.01 1210.61 L1427.59 1210.61 L1428.18 1210.61 L1428.77 1210.61 L1429.35 1210.61 L1429.94 1210.61 L1430.53 1210.61 L1431.11 1210.61 L1431.7 1210.61 L1432.29 1210.61 L1432.87 1210.61 L1433.46 1210.61 L1434.04 1210.61 L1434.63 1210.61 L1435.22 1210.61 L1435.8 1210.61 L1436.39 1210.61 L1436.98 1210.61 L1437.56 1210.61 L1438.15 1210.61 L1438.74 1210.61 L1439.32 1210.61 L1439.91 1210.61 L1440.5 1210.61 L1441.08 1210.61 L1441.67 1210.61 L1442.25 1210.61 L1442.84 1210.61 L1443.43 1210.61 L1444.01 1210.61 L1444.6 1210.61 L1445.19 1210.61 L1445.77 1210.61 L1446.36 1210.61 L1446.95 1210.61 L1447.53 1210.61 L1448.12 1210.61 L1448.7 1210.61 L1449.29 1210.61 L1449.88 1210.61 L1450.46 1210.61 L1451.05 1210.61 L1451.64 1210.61 L1452.22 1210.61 L1452.81 1210.61 L1453.4 1210.61 L1453.98 1210.61 L1454.57 1210.61 L1455.16 1210.61 L1455.74 1210.61 L1456.33 1210.61 L1456.91 1210.61 L1457.5 1210.61 L1458.09 1210.61 L1458.67 1210.61 L1459.26 1210.61 L1459.85 1210.61 L1460.43 1210.61 L1461.02 1210.61 L1461.61 1210.61 L1462.19 1210.61 L1462.78 1210.61 L1463.37 1210.61 L1463.95 1210.61 L1464.54 1210.61 L1465.12 1210.61 L1465.71 1210.61 L1466.3 1210.61 L1466.88 1210.61 L1467.47 1210.61 L1468.06 1210.61 L1468.64 1210.61 L1469.23 1210.61 L1469.82 1210.61 L1470.4 1210.61 L1470.99 1210.61 L1471.57 1210.61 L1472.16 1210.61 L1472.75 1210.61 L1473.33 1210.61 L1473.92 1210.61 L1474.51 1210.61 L1475.09 1210.61 L1475.68 1210.61 L1476.27 1210.61 L1476.85 1210.61 L1477.44 1210.61 L1478.03 1210.61 L1478.61 1210.61 L1479.2 1210.61 L1479.78 1210.61 L1480.37 1210.61 L1480.96 1210.61 L1481.54 1210.61 L1482.13 1210.61 L1482.72 1210.61 L1483.3 1210.61 L1483.89 1210.61 L1484.48 1210.61 L1485.06 1210.61 L1485.65 1210.61 L1486.24 1210.61 L1486.82 1210.61 L1487.41 1210.61 L1487.99 1210.61 L1488.58 1210.61 L1489.17 1210.61 L1489.75 1210.61 L1490.34 1210.61 L1490.93 1210.61 L1491.51 1210.61 L1492.1 1210.61 L1492.69 1210.61 L1493.27 1210.61 L1493.86 1210.61 L1494.45 1210.61 L1495.03 1210.61 L1495.62 1210.61 L1496.2 1210.61 L1496.79 1210.61 L1497.38 1210.61 L1497.96 1210.61 L1498.55 1210.61 L1499.14 1210.61 L1499.72 1210.61 L1500.31 1210.61 L1500.9 1210.61 L1501.48 1210.61 L1502.07 1210.61 L1502.65 1210.61 L1503.24 1210.61 L1503.83 1210.61 L1504.41 1210.61 L1505 1210.61 L1505.59 1210.61 L1506.17 1210.61 L1506.76 1210.61 L1507.35 1210.61 L1507.93 1210.61 L1508.52 1210.61 L1509.11 1210.61 L1509.69 1210.61 L1510.28 1210.61 L1510.86 1210.61 L1511.45 1210.61 L1512.04 1210.61 L1512.62 1210.61 L1513.21 1210.61 L1513.8 1210.61 L1514.38 1210.61 L1514.97 1210.61 L1515.56 1210.61 L1516.14 1210.61 L1516.73 1210.61 L1517.32 1210.61 L1517.9 1210.61 L1518.49 1210.61 L1519.07 1210.61 L1519.66 1210.61 L1520.25 1210.61 L1520.83 1210.61 L1521.42 1210.61 L1522.01 1210.61 L1522.59 1210.61 L1523.18 1210.61 L1523.77 1210.61 L1524.35 1210.61 L1524.94 1210.61 L1525.52 1210.61 L1526.11 1210.61 L1526.7 1210.61 L1527.28 1210.61 L1527.87 1210.61 L1528.46 1210.61 L1529.04 1210.61 L1529.63 1210.61 L1530.22 1210.61 L1530.8 1210.61 L1531.39 1210.61 L1531.98 1210.61 L1532.56 1210.61 L1533.15 1210.61 L1533.73 1210.61 L1534.32 1210.61 L1534.91 1210.61 L1535.49 1210.61 L1536.08 1210.61 L1536.67 1210.61 L1537.25 1210.61 L1537.84 1210.61 L1538.43 1210.61 L1539.01 1210.61 L1539.6 1210.61 L1540.19 1210.61 L1540.77 1210.61 L1541.36 1210.61 L1541.94 1210.61 L1542.53 1210.61 L1543.12 1210.61 L1543.7 1210.61 L1544.29 1210.61 L1544.88 1210.61 L1545.46 1210.61 L1546.05 1210.61 L1546.64 1210.61 L1547.22 1210.61 L1547.81 1210.61 L1548.4 1210.61 L1548.98 1210.61 L1549.57 1210.61 L1550.15 1210.61 L1550.74 1210.61 L1551.33 1210.61 L1551.91 1210.61 L1552.5 1210.61 L1553.09 1210.61 L1553.67 1210.61 L1554.26 1210.61 L1554.85 1210.61 L1555.43 1210.61 L1556.02 1210.61 L1556.6 1210.61 L1557.19 1210.61 L1557.78 1210.61 L1558.36 1210.61 L1558.95 1210.61 L1559.54 1210.61 L1560.12 1210.61 L1560.71 1210.61 L1561.3 1210.61 L1561.88 1210.61 L1562.47 1210.61 L1563.06 1210.61 L1563.64 1210.61 L1564.23 1210.61 L1564.81 1210.61 L1565.4 1210.61 L1565.99 1210.61 L1566.57 1210.61 L1567.16 1210.61 L1567.75 1210.61 L1568.33 1210.61 L1568.92 1210.61 L1569.51 1210.61 L1570.09 1210.61 L1570.68 1210.61 L1571.27 1210.61 L1571.85 1210.61 L1572.44 1210.61 L1573.02 1210.61 L1573.61 1210.61 L1574.2 1210.61 L1574.78 1210.61 L1575.37 1210.61 L1575.96 1210.61 L1576.54 1210.61 L1577.13 1210.61 L1577.72 1210.61 L1578.3 1210.61 L1578.89 1210.61 L1579.47 1210.61 L1580.06 1210.61 L1580.65 1210.61 L1581.23 1210.61 L1581.82 1210.61 L1582.41 1210.61 L1582.99 1210.61 L1583.58 1210.61 L1584.17 1210.61 L1584.75 1210.61 L1585.34 1210.61 L1585.93 1210.61 L1586.51 1210.61 L1587.1 1210.61 L1587.68 1210.61 L1588.27 1210.61 L1588.86 1210.61 L1589.44 1210.61 L1590.03 1210.61 L1590.62 1210.61 L1591.2 1210.61 L1591.79 1210.61 L1592.38 1210.61 L1592.96 1210.61 L1593.55 1210.61 L1594.14 1210.61 L1594.72 1210.61 L1595.31 1210.61 L1595.89 1210.61 L1596.48 1210.61 L1597.07 1210.61 L1597.65 1210.61 L1598.24 1210.61 L1598.83 1210.61 L1599.41 1210.61 L1600 1210.61 L1600.59 1210.61 L1601.17 1210.61 L1601.76 1210.61 L1602.34 1210.61 L1602.93 1210.61 L1603.52 1210.61 L1604.1 1210.61 L1604.69 1210.61 L1605.28 1210.61 L1605.86 1210.61 L1606.45 1210.61 L1607.04 1210.61 L1607.62 1210.61 L1608.21 1210.61 L1608.8 1210.61 L1609.38 1210.61 L1609.97 1210.61 L1610.55 1210.61 L1611.14 1210.61 L1611.73 1210.61 L1612.31 1210.61 L1612.9 1210.61 L1613.49 1210.61 L1614.07 1210.61 L1614.66 1210.61 L1615.25 1210.61 L1615.83 1210.61 L1616.42 1210.61 L1617.01 1210.61 L1617.59 1210.61 L1618.18 1210.61 L1618.76 1210.61 L1619.35 1210.61 L1619.94 1210.61 L1620.52 1210.61 L1621.11 1210.61 L1621.7 1210.61 L1622.28 1210.61 L1622.87 1210.61 L1623.46 1210.61 L1624.04 1210.61 L1624.63 1210.61 L1625.22 1210.61 L1625.8 1210.61 L1626.39 1210.61 L1626.97 1210.61 L1627.56 1210.61 L1628.15 1210.61 L1628.73 1210.61 L1629.32 1210.61 L1629.91 1210.61 L1630.49 1210.61 L1631.08 1210.61 L1631.67 1210.61 L1632.25 1210.61 L1632.84 1210.61 L1633.42 1210.61 L1634.01 1210.61 L1634.6 1210.61 L1635.18 1210.61 L1635.77 1210.61 L1636.36 1210.61 L1636.94 1210.61 L1637.53 1210.61 L1638.12 1210.61 L1638.7 1210.61 L1639.29 1210.61 L1639.88 1210.61 L1640.46 1210.61 L1641.05 1210.61 L1641.63 1210.61 L1642.22 1210.61 L1642.81 1210.61 L1643.39 1210.61 L1643.98 1210.61 L1644.57 1210.61 L1645.15 1210.61 L1645.74 1210.61 L1646.33 1210.61 L1646.91 1210.61 L1647.5 1210.61 L1648.09 1210.61 L1648.67 1210.61 L1649.26 1210.61 L1649.84 1210.61 L1650.43 1210.61 L1651.02 1210.61 L1651.6 1210.61 L1652.19 1210.61 L1652.78 1210.61 L1653.36 1210.61 L1653.95 1210.61 L1654.54 1210.61 L1655.12 1210.61 L1655.71 1210.61 L1656.29 1210.61 L1656.88 1210.61 L1657.47 1210.61 L1658.05 1210.61 L1658.64 1210.61 L1659.23 1210.61 L1659.81 1210.61 L1660.4 1210.61 L1660.99 1210.61 L1661.57 1210.61 L1662.16 1210.61 L1662.75 1210.61 L1663.33 1210.61 L1663.92 1210.61 L1664.5 1210.61 L1665.09 1210.61 L1665.68 1210.61 L1666.26 1210.61 L1666.85 1210.61 L1667.44 1210.61 L1668.02 1210.61 L1668.61 1210.61 L1669.2 1210.61 L1669.78 1210.61 L1670.37 1210.61 L1670.96 1210.61 L1671.54 1210.61 L1672.13 1210.61 L1672.71 1210.61 L1673.3 1210.61 L1673.89 1210.61 L1674.47 1210.61 L1675.06 1210.61 L1675.65 1210.61 L1676.23 1210.61 L1676.82 1210.61 L1677.41 1210.61 L1677.99 1210.61 L1678.58 1210.61 L1679.17 1210.61 L1679.75 1210.61 L1680.34 1210.61 L1680.92 1210.61 L1681.51 1210.61 L1682.1 1210.61 L1682.68 1210.61 L1683.27 1210.61 L1683.86 1210.61 L1684.44 1210.61 L1685.03 1210.61 L1685.62 1210.61 L1686.2 1210.61 L1686.79 1210.61 L1687.37 1210.61 L1687.96 1210.61 L1688.55 1210.61 L1689.13 1210.61 L1689.72 1210.61 L1690.31 1210.61 L1690.89 1210.61 L1691.48 1210.61 L1692.07 1210.61 L1692.65 1210.61 L1693.24 1210.61 L1693.83 1210.61 L1694.41 1210.61 L1695 1210.61 L1695.58 1210.61 L1696.17 1210.61 L1696.76 1210.61 L1697.34 1210.61 L1697.93 1210.61 L1698.52 1210.61 L1699.1 1210.61 L1699.69 1210.61 L1700.28 1210.61 L1700.86 1210.61 L1701.45 1210.61 L1702.04 1210.61 L1702.62 1210.61 L1703.21 1210.61 L1703.79 1210.61 L1704.38 1210.61 L1704.97 1210.61 L1705.55 1210.61 L1706.14 1210.61 L1706.73 1210.61 L1707.31 1210.61 L1707.9 1210.61 L1708.49 1210.61 L1709.07 1210.61 L1709.66 1210.61 L1710.24 1210.61 L1710.83 1210.61 L1711.42 1210.61 L1712 1210.61 L1712.59 1210.61 L1713.18 1210.61 L1713.76 1210.61 L1714.35 1210.61 L1714.94 1210.61 L1715.52 1210.61 L1716.11 1210.61 L1716.7 1210.61 L1717.28 1210.61 L1717.87 1210.61 L1718.45 1210.61 L1719.04 1210.61 L1719.63 1210.61 L1720.21 1210.61 L1720.8 1210.61 L1721.39 1210.61 L1721.97 1210.61 L1722.56 1210.61 L1723.15 1210.61 L1723.73 1210.61 L1724.32 1210.61 L1724.91 1210.61 L1725.49 1210.61 L1726.08 1210.61 L1726.66 1210.61 L1727.25 1210.61 L1727.84 1210.61 L1728.42 1210.61 L1729.01 1210.61 L1729.6 1210.61 L1730.18 1210.61 L1730.77 1210.61 L1731.36 1210.61 L1731.94 1210.61 L1732.53 1210.61 L1733.11 1210.61 L1733.7 1210.61 L1734.29 1210.61 L1734.87 1210.61 L1735.46 1210.61 L1736.05 1210.61 L1736.63 1210.61 L1737.22 1210.61 L1737.81 1210.61 L1738.39 1210.61 L1738.98 1210.61 L1739.57 1210.61 L1740.15 1210.61 L1740.74 1210.61 L1741.32 1210.61 L1741.91 1210.61 L1742.5 1210.61 L1743.08 1210.61 L1743.67 1210.61 L1744.26 1210.61 L1744.84 1210.61 L1745.43 1210.61 L1746.02 1210.61 L1746.6 1210.61 L1747.19 1210.61 L1747.78 1210.61 L1748.36 1210.61 L1748.95 1210.61 L1749.53 1210.61 L1750.12 1210.61 L1750.71 1210.61 L1751.29 1210.61 L1751.88 1210.61 L1752.47 1210.61 L1753.05 1210.61 L1753.64 1210.61 L1754.23 1210.61 L1754.81 1210.61 L1755.4 1210.61 L1755.99 1210.61 L1756.57 1210.61 L1757.16 1210.61 L1757.74 1210.61 L1758.33 1210.61 L1758.92 1210.61 L1759.5 1210.61 L1760.09 1210.61 L1760.68 1210.61 L1761.26 1210.61 L1761.85 1210.61 L1762.44 1210.61 L1763.02 1210.61 L1763.61 1210.61 L1764.19 1210.61 L1764.78 1210.61 L1765.37 1210.61 L1765.95 1210.61 L1766.54 1210.61 L1767.13 1210.61 L1767.71 1210.61 L1768.3 1210.61 L1768.89 1210.61 L1769.47 1210.61 L1770.06 1210.61 L1770.65 1210.61 L1771.23 1210.61 L1771.82 1210.61 L1772.4 1210.61 L1772.99 1210.61 L1773.58 1210.61 L1774.16 1210.61 L1774.75 1210.61 L1775.34 1210.61 L1775.92 1210.61 L1776.51 1210.61 L1777.1 1210.61 L1777.68 1210.61 L1778.27 1210.61 L1778.86 1210.61 L1779.44 1210.61 L1780.03 1210.61 L1780.61 1210.61 L1781.2 1210.61 L1781.79 1210.61 L1782.37 1210.61 L1782.96 1210.61 L1783.55 1210.61 L1784.13 1210.61 L1784.72 1210.61 L1785.31 1210.61 L1785.89 1210.61 L1786.48 1210.61 L1787.06 1210.61 L1787.65 1210.61 L1788.24 1210.61 L1788.82 1210.61 L1789.41 1210.61 L1790 1210.61 L1790.58 1210.61 L1791.17 1210.61 L1791.76 1210.61 L1792.34 1210.61 L1792.93 1210.61 L1793.52 1210.61 L1794.1 1210.61 L1794.69 1210.61 L1795.27 1210.61 L1795.86 1210.61 L1796.45 1210.61 L1797.03 1210.61 L1797.62 1210.61 L1798.21 1210.61 L1798.79 1210.61 L1799.38 1210.61 L1799.97 1210.61 L1800.55 1210.61 L1801.14 1210.61 L1801.73 1210.61 L1802.31 1210.61 L1802.9 1210.61 L1803.48 1210.61 L1804.07 1210.61 L1804.66 1210.61 L1805.24 1210.61 L1805.83 1210.61 L1806.42 1210.61 L1807 1210.61 L1807.59 1210.61 L1808.18 1210.61 L1808.76 1210.61 L1809.35 1210.61 L1809.94 1210.61 L1810.52 1210.61 L1811.11 1210.61 L1811.69 1210.61 L1812.28 1210.61 L1812.87 1210.61 L1813.45 1210.61 L1814.04 1210.61 L1814.63 1210.61 L1815.21 1210.61 L1815.8 1210.61 L1816.39 1210.61 L1816.97 1210.61 L1817.56 1210.61 L1818.14 1210.61 L1818.73 1210.61 L1819.32 1210.61 L1819.9 1210.61 L1820.49 1210.61 L1821.08 1210.61 L1821.66 1210.61 L1822.25 1210.61 L1822.84 1210.61 L1823.42 1210.61 L1824.01 1210.61 L1824.6 1210.61 L1825.18 1210.61 L1825.77 1210.61 L1826.35 1210.61 L1826.94 1210.61 L1827.53 1210.61 L1828.11 1210.61 L1828.7 1210.61 L1829.29 1210.61 L1829.87 1210.61 L1830.46 1210.61 L1831.05 1210.61 L1831.63 1210.61 L1832.22 1210.61 L1832.81 1210.61 L1833.39 1210.61 L1833.98 1210.61 L1834.56 1210.61 L1835.15 1210.61 L1835.74 1210.61 L1836.32 1210.61 L1836.91 1210.61 L1837.5 1210.61 L1838.08 1210.61 L1838.67 1210.61 L1839.26 1210.61 L1839.84 1210.61 L1840.43 1210.61 L1841.01 1210.61 L1841.6 1210.61 L1842.19 1210.61 L1842.77 1210.61 L1843.36 1210.61 L1843.95 1210.61 L1844.53 1210.61 L1845.12 1210.61 L1845.71 1210.61 L1846.29 1210.61 L1846.88 1210.61 L1847.47 1210.61 L1848.05 1210.61 L1848.64 1210.61 L1849.22 1210.61 L1849.81 1210.61 L1850.4 1210.61 L1850.98 1210.61 L1851.57 1210.61 L1852.16 1210.61 L1852.74 1210.61 L1853.33 1210.61 L1853.92 1210.61 L1854.5 1210.61 L1855.09 1210.61 L1855.68 1210.61 L1856.26 1210.61 L1856.85 1210.61 L1857.43 1210.61 L1858.02 1210.61 L1858.61 1210.61 L1859.19 1210.61 L1859.78 1210.61 L1860.37 1210.61 L1860.95 1210.61 L1861.54 1210.61 L1862.13 1210.61 L1862.71 1210.61 L1863.3 1210.61 L1863.88 1210.61 L1864.47 1210.61 L1865.06 1210.61 L1865.64 1210.61 L1866.23 1210.61 L1866.82 1210.61 L1867.4 1210.61 L1867.99 1210.61 L1868.58 1210.61 L1869.16 1210.61 L1869.75 1210.61 L1870.34 1210.61 L1870.92 1210.61 L1871.51 1210.61 L1872.09 1210.61 L1872.68 1210.61 L1873.27 1210.61 L1873.85 1210.61 L1874.44 1210.61 L1875.03 1210.61 L1875.61 1210.61 L1876.2 1210.61 L1876.79 1210.61 L1877.37 1210.61 L1877.96 1210.61 L1878.55 1210.61 L1879.13 1210.61 L1879.72 1210.61 L1880.3 1210.61 L1880.89 1210.61 L1881.48 1210.61 L1882.06 1210.61 L1882.65 1210.61 L1883.24 1210.61 L1883.82 1210.61 L1884.41 1210.61 L1885 1210.61 L1885.58 1210.61 L1886.17 1210.61 L1886.76 1210.61 L1887.34 1210.61 L1887.93 1210.61 L1888.51 1210.61 L1889.1 1210.61 L1889.69 1210.61 L1890.27 1210.61 L1890.86 1210.61 L1891.45 1210.61 L1892.03 1210.61 L1892.62 1210.61 L1893.21 1210.61 L1893.79 1210.61 L1894.38 1210.61 L1894.96 1210.61 L1895.55 1210.61 L1896.14 1210.61 L1896.72 1210.61 L1897.31 1210.61 L1897.9 1210.61 L1898.48 1210.61 L1899.07 1210.61 L1899.66 1210.61 L1900.24 1210.61 L1900.83 1210.61 L1901.42 1210.61 L1902 1210.61 L1902.59 1210.61 L1903.17 1210.61 L1903.76 1210.61 L1904.35 1210.61 L1904.93 1210.61 L1905.52 1210.61 L1906.11 1210.61 L1906.69 1210.61 L1907.28 1210.61 L1907.87 1210.61 L1908.45 1210.61 L1909.04 1210.61 L1909.63 1210.61 L1910.21 1210.61 L1910.8 1210.61 L1911.38 1210.61 L1911.97 1210.61 L1912.56 1210.61 L1913.14 1210.61 L1913.73 1210.61 L1914.32 1210.61 L1914.9 1210.61 L1915.49 1210.61 L1916.08 1210.61 L1916.66 1210.61 L1917.25 1210.61 L1917.83 1210.61 L1918.42 1210.61 L1919.01 1210.61 L1919.59 1210.61 L1920.18 1210.61 L1920.77 1210.61 L1921.35 1210.61 L1921.94 1210.61 L1922.53 1210.61 L1923.11 1210.61 L1923.7 1210.61 L1924.29 1210.61 L1924.87 1210.61 L1925.46 1210.61 L1926.04 1210.61 L1926.63 1210.61 L1927.22 1210.61 L1927.8 1210.61 L1928.39 1210.61 L1928.98 1210.61 L1929.56 1210.61 L1930.15 1210.61 L1930.74 1210.61 L1931.32 1210.61 L1931.91 1210.61 L1932.5 1210.61 L1933.08 1210.61 L1933.67 1210.61 L1934.25 1210.61 L1934.84 1210.61 L1935.43 1210.61 L1936.01 1210.61 L1936.6 1210.61 L1937.19 1210.61 L1937.77 1210.61 L1938.36 1210.61 L1938.95 1210.61 L1939.53 1210.61 L1940.12 1210.61 L1940.71 1210.61 L1941.29 1210.61 L1941.88 1210.61 L1942.46 1210.61 L1943.05 1210.61 L1943.64 1210.61 L1944.22 1210.61 L1944.81 1210.61 L1945.4 1210.61 L1945.98 1210.61 L1946.57 1210.61 L1947.16 1210.61 L1947.74 1210.61 L1948.33 1210.61 L1948.91 1210.61 L1949.5 1210.61 L1950.09 1210.61 L1950.67 1210.61 L1951.26 1210.61 L1951.85 1210.61 L1952.43 1210.61 L1953.02 1210.61 L1953.61 1210.61 L1954.19 1210.61 L1954.78 1210.61 L1955.37 1210.61 L1955.95 1210.61 L1956.54 1210.61 L1957.12 1210.61 L1957.71 1210.61 L1958.3 1210.61 L1958.88 1210.61 L1959.47 1210.61 L1960.06 1210.61 L1960.64 1210.61 L1961.23 1210.61 L1961.82 1210.61 L1962.4 1210.61 L1962.99 1210.61 L1963.58 1210.61 L1964.16 1210.61 L1964.75 1210.61 L1965.33 1210.61 L1965.92 1210.61 L1966.51 1210.61 L1967.09 1210.61 L1967.68 1210.61 L1968.27 1210.61 L1968.85 1210.61 L1969.44 1210.61 L1970.03 1210.61 L1970.61 1210.61 L1971.2 1210.61 L1971.78 1210.61 L1972.37 1210.61 L1972.96 1210.61 L1973.54 1210.61 L1974.13 1210.61 L1974.72 1210.61 L1975.3 1210.61 L1975.89 1210.61 L1976.48 1210.61 L1977.06 1210.61 L1977.65 1210.61 L1978.24 1210.61 L1978.82 1210.61 L1979.41 1210.61 L1979.99 1210.61 L1980.58 1210.61 L1981.17 1210.61 L1981.75 1210.61 L1982.34 1210.61 L1982.93 1210.61 L1983.51 1210.61 L1984.1 1210.61 L1984.69 1210.61 L1985.27 1210.61 L1985.86 1210.61 L1986.45 1210.61 L1987.03 1210.61 L1987.62 1210.61 L1988.2 1210.61 L1988.79 1210.61 L1989.38 1210.61 L1989.96 1210.61 L1990.55 1210.61 L1991.14 1210.61 L1991.72 1210.61 L1992.31 1210.61 L1992.9 1210.61 L1993.48 1210.61 L1994.07 1210.61 L1994.65 1210.61 L1995.24 1210.61 L1995.83 1210.61 L1996.41 1210.61 L1997 1210.61 L1997.59 1210.61 L1998.17 1210.61 L1998.76 1210.61 L1999.35 1210.61 L1999.93 1210.61 L2000.52 1210.61 L2001.11 1210.61 L2001.69 1210.61 L2002.28 1210.61 L2002.86 1210.61 L2003.45 1210.61 L2004.04 1210.61 L2004.62 1210.61 L2005.21 1210.61 L2005.8 1210.61 L2006.38 1210.61 L2006.97 1210.61 L2007.56 1210.61 L2008.14 1210.61 L2008.73 1210.61 L2009.32 1210.61 L2009.9 1210.61 L2010.49 1210.61 L2011.07 1210.61 L2011.66 1210.61 L2012.25 1210.61 L2012.83 1210.61 L2013.42 1210.61 L2014.01 1210.61 L2014.59 1210.61 L2015.18 1210.61 L2015.77 1210.61 L2016.35 1210.61 L2016.94 1210.61 L2017.53 1210.61 L2018.11 1210.61 L2018.7 1210.61 L2019.28 1210.61 L2019.87 1210.61 L2020.46 1210.61 L2021.04 1210.61 L2021.63 1210.61 L2022.22 1210.61 L2022.8 1210.61 L2023.39 1210.61 L2023.98 1210.61 L2024.56 1210.61 L2025.15 1210.61 L2025.73 1210.61 L2026.32 1210.61 L2026.91 1210.61 L2027.49 1210.61 L2028.08 1210.61 L2028.67 1210.61 L2029.25 1210.61 L2029.84 1210.61 L2030.43 1210.61 L2031.01 1210.61 L2031.6 1210.61 L2032.19 1210.61 L2032.77 1210.61 L2033.36 1210.61 L2033.94 1210.61 L2034.53 1210.61 L2035.12 1210.61 L2035.7 1210.61 L2036.29 1210.61 L2036.88 1210.61 L2037.46 1210.61 L2038.05 1210.61 L2038.64 1210.61 L2039.22 1210.61 L2039.81 1210.61 L2040.4 1210.61 L2040.98 1210.61 L2041.57 1210.61 L2042.15 1210.61 L2042.74 1210.61 L2043.33 1210.61 L2043.91 1210.61 L2044.5 1210.61 L2045.09 1210.61 L2045.67 1210.61 L2046.26 1210.61 L2046.85 1210.61 L2047.43 1210.61 L2048.02 1210.61 L2048.6 1210.61 L2049.19 1210.61 L2049.78 1210.61 L2050.36 1210.61 L2050.95 1210.61 L2051.54 1210.61 L2052.12 1210.61 L2052.71 1210.61 L2053.3 1210.61 L2053.88 1210.61 L2054.47 1210.61 L2055.06 1210.61 L2055.64 1210.61 L2056.23 1210.61 L2056.81 1210.61 L2057.4 1210.61 L2057.99 1210.61 L2058.57 1210.61 L2059.16 1210.61 L2059.75 1210.61 L2060.33 1210.61 L2060.92 1210.61 L2061.51 1210.61 L2062.09 1210.61 L2062.68 1210.61 L2063.27 1210.61 L2063.85 1210.61 L2064.44 1210.61 L2065.02 1210.61 L2065.61 1210.61 L2066.2 1210.61 L2066.78 1210.61 L2067.37 1210.61 L2067.96 1210.61 L2068.54 1210.61 L2069.13 1210.61 L2069.72 1210.61 L2070.3 1210.61 L2070.89 1210.61 L2071.48 1210.61 L2072.06 1210.61 L2072.65 1210.61 L2073.23 1210.61 L2073.82 1210.61 L2074.41 1210.61 L2074.99 1210.61 L2075.58 1210.61 L2076.17 1210.61 L2076.75 1210.61 L2077.34 1210.61 L2077.93 1210.61 L2078.51 1210.61 L2079.1 1210.61 L2079.68 1210.61 L2080.27 1210.61 L2080.86 1210.61 L2081.44 1210.61 L2082.03 1210.61 L2082.62 1210.61 L2083.2 1210.61 L2083.79 1210.61 L2084.38 1210.61 L2084.96 1210.61 L2085.55 1210.61 L2086.14 1210.61 L2086.72 1210.61 L2087.31 1210.61 L2087.89 1210.61 L2088.48 1210.61 L2089.07 1210.61 L2089.65 1210.61 L2090.24 1210.61 L2090.83 1210.61 L2091.41 1210.61 L2092 1210.61 L2092.59 1210.61 L2093.17 1210.61 L2093.76 1210.61 L2094.35 1210.61 L2094.93 1210.61 L2095.52 1210.61 L2096.1 1210.61 L2096.69 1210.61 L2097.28 1210.61 L2097.86 1210.61 L2098.45 1210.61 L2099.04 1210.61 L2099.62 1210.61 L2100.21 1210.61 L2100.8 1210.61 L2101.38 1210.61 L2101.97 1210.61 L2102.55 1210.61 L2103.14 1210.61 L2103.73 1210.61 L2104.31 1210.61 L2104.9 1210.61 L2105.49 1210.61 L2106.07 1210.61 L2106.66 1210.61 L2107.25 1210.61 L2107.83 1210.61 L2108.42 1210.61 L2109.01 1210.61 L2109.59 1210.61 L2110.18 1210.61 L2110.76 1210.61 L2111.35 1210.61 L2111.94 1210.61 L2112.52 1210.61 L2113.11 1210.61 L2113.7 1210.61 L2114.28 1210.61 L2114.87 1210.61 L2115.46 1210.61 L2116.04 1210.61 L2116.63 1210.61 L2117.22 1210.61 L2117.8 1210.61 L2118.39 1210.61 L2118.97 1210.61 L2119.56 1210.61 L2120.15 1210.61 L2120.73 1210.61 L2121.32 1210.61 L2121.91 1210.61 L2122.49 1210.61 L2123.08 1210.61 L2123.67 1210.61 L2124.25 1210.61 L2124.84 1210.61 L2125.42 1210.61 L2126.01 1210.61 L2126.6 1210.61 L2127.18 1210.61 L2127.77 1210.61 L2128.36 1210.61 L2128.94 1210.61 L2129.53 1210.61 L2130.12 1210.61 L2130.7 1210.61 L2131.29 1210.61 L2131.88 1210.61 L2132.46 1210.61 L2133.05 1210.61 L2133.63 1210.61 L2134.22 1210.61 L2134.81 1210.61 L2135.39 1210.61 L2135.98 1210.61 L2136.57 1210.61 L2137.15 1210.61 L2137.74 1210.61 L2138.33 1210.61 L2138.91 1210.61 L2139.5 1210.61 L2140.09 1210.61 L2140.67 1210.61 L2141.26 1210.61 L2141.84 1210.61 L2142.43 1210.61 L2143.02 1210.61 L2143.6 1210.61 L2144.19 1210.61 L2144.78 1210.61 L2145.36 1210.61 L2145.95 1210.61 L2146.54 1210.61 L2147.12 1210.61 L2147.71 1210.61 L2148.3 1210.61 L2148.88 1210.61 L2149.47 1210.61 L2150.05 1210.61 L2150.64 1210.61 L2151.23 1210.61 L2151.81 1210.61 L2152.4 1210.61 L2152.99 1210.61 L2153.57 1210.61 L2154.16 1210.61 L2154.75 1210.61 L2155.33 1210.61 L2155.92 1210.61 L2156.5 1210.61 L2157.09 1210.61 L2157.68 1210.61 L2158.26 1210.61 L2158.26 1210.42 L2157.68 1210.42 L2157.09 1210.42 L2156.5 1210.42 L2155.92 1210.42 L2155.33 1210.42 L2154.75 1210.42 L2154.16 1210.42 L2153.57 1210.42 L2152.99 1210.42 L2152.4 1210.42 L2151.81 1210.42 L2151.23 1210.42 L2150.64 1210.42 L2150.05 1210.42 L2149.47 1210.42 L2148.88 1210.42 L2148.3 1210.42 L2147.71 1210.42 L2147.12 1210.42 L2146.54 1210.42 L2145.95 1210.42 L2145.36 1210.42 L2144.78 1210.42 L2144.19 1210.42 L2143.6 1210.42 L2143.02 1210.42 L2142.43 1210.42 L2141.84 1210.42 L2141.26 1210.42 L2140.67 1210.42 L2140.09 1210.42 L2139.5 1210.42 L2138.91 1210.42 L2138.33 1210.42 L2137.74 1210.42 L2137.15 1210.42 L2136.57 1210.42 L2135.98 1210.42 L2135.39 1210.42 L2134.81 1210.42 L2134.22 1210.42 L2133.63 1210.42 L2133.05 1210.42 L2132.46 1210.42 L2131.88 1210.42 L2131.29 1210.42 L2130.7 1210.42 L2130.12 1210.42 L2129.53 1210.42 L2128.94 1210.42 L2128.36 1210.42 L2127.77 1210.42 L2127.18 1210.42 L2126.6 1210.42 L2126.01 1210.42 L2125.42 1210.42 L2124.84 1210.42 L2124.25 1210.42 L2123.67 1210.42 L2123.08 1210.42 L2122.49 1210.42 L2121.91 1210.42 L2121.32 1210.42 L2120.73 1210.42 L2120.15 1210.42 L2119.56 1210.42 L2118.97 1210.42 L2118.39 1210.42 L2117.8 1210.42 L2117.22 1210.42 L2116.63 1210.42 L2116.04 1210.42 L2115.46 1210.42 L2114.87 1210.42 L2114.28 1210.42 L2113.7 1210.42 L2113.11 1210.42 L2112.52 1210.42 L2111.94 1210.42 L2111.35 1210.42 L2110.76 1210.42 L2110.18 1210.42 L2109.59 1210.42 L2109.01 1210.42 L2108.42 1210.42 L2107.83 1210.42 L2107.25 1210.42 L2106.66 1210.42 L2106.07 1210.42 L2105.49 1210.42 L2104.9 1210.42 L2104.31 1210.42 L2103.73 1210.42 L2103.14 1210.42 L2102.55 1210.42 L2101.97 1210.42 L2101.38 1210.42 L2100.8 1210.42 L2100.21 1210.42 L2099.62 1210.42 L2099.04 1210.42 L2098.45 1210.42 L2097.86 1210.42 L2097.28 1210.42 L2096.69 1210.42 L2096.1 1210.42 L2095.52 1210.42 L2094.93 1210.42 L2094.35 1210.42 L2093.76 1210.42 L2093.17 1210.42 L2092.59 1210.42 L2092 1210.42 L2091.41 1210.42 L2090.83 1210.42 L2090.24 1210.42 L2089.65 1210.42 L2089.07 1210.42 L2088.48 1210.42 L2087.89 1210.42 L2087.31 1210.42 L2086.72 1210.42 L2086.14 1210.42 L2085.55 1210.42 L2084.96 1210.42 L2084.38 1210.42 L2083.79 1210.42 L2083.2 1210.42 L2082.62 1210.42 L2082.03 1210.42 L2081.44 1210.42 L2080.86 1210.42 L2080.27 1210.42 L2079.68 1210.42 L2079.1 1210.42 L2078.51 1210.42 L2077.93 1210.42 L2077.34 1210.42 L2076.75 1210.42 L2076.17 1210.42 L2075.58 1210.42 L2074.99 1210.42 L2074.41 1210.42 L2073.82 1210.42 L2073.23 1210.42 L2072.65 1210.42 L2072.06 1210.42 L2071.48 1210.42 L2070.89 1210.42 L2070.3 1210.42 L2069.72 1210.42 L2069.13 1210.42 L2068.54 1210.42 L2067.96 1210.42 L2067.37 1210.42 L2066.78 1210.42 L2066.2 1210.42 L2065.61 1210.42 L2065.02 1210.42 L2064.44 1210.42 L2063.85 1210.42 L2063.27 1210.42 L2062.68 1210.42 L2062.09 1210.42 L2061.51 1210.42 L2060.92 1210.42 L2060.33 1210.42 L2059.75 1210.42 L2059.16 1210.42 L2058.57 1210.42 L2057.99 1210.42 L2057.4 1210.42 L2056.81 1210.42 L2056.23 1210.42 L2055.64 1210.42 L2055.06 1210.42 L2054.47 1210.42 L2053.88 1210.42 L2053.3 1210.42 L2052.71 1210.42 L2052.12 1210.42 L2051.54 1210.42 L2050.95 1210.42 L2050.36 1210.42 L2049.78 1210.42 L2049.19 1210.42 L2048.6 1210.42 L2048.02 1210.42 L2047.43 1210.42 L2046.85 1210.42 L2046.26 1210.42 L2045.67 1210.42 L2045.09 1210.42 L2044.5 1210.42 L2043.91 1210.42 L2043.33 1210.42 L2042.74 1210.42 L2042.15 1210.42 L2041.57 1210.42 L2040.98 1210.42 L2040.4 1210.42 L2039.81 1210.42 L2039.22 1210.42 L2038.64 1210.42 L2038.05 1210.42 L2037.46 1210.42 L2036.88 1210.42 L2036.29 1210.42 L2035.7 1210.42 L2035.12 1210.42 L2034.53 1210.42 L2033.94 1210.42 L2033.36 1210.42 L2032.77 1210.42 L2032.19 1210.42 L2031.6 1210.42 L2031.01 1210.42 L2030.43 1210.42 L2029.84 1210.42 L2029.25 1210.42 L2028.67 1210.42 L2028.08 1210.42 L2027.49 1210.42 L2026.91 1210.42 L2026.32 1210.42 L2025.73 1210.42 L2025.15 1210.42 L2024.56 1210.42 L2023.98 1210.42 L2023.39 1210.42 L2022.8 1210.42 L2022.22 1210.42 L2021.63 1210.42 L2021.04 1210.42 L2020.46 1210.42 L2019.87 1210.42 L2019.28 1210.42 L2018.7 1210.42 L2018.11 1210.42 L2017.53 1210.42 L2016.94 1210.42 L2016.35 1210.42 L2015.77 1210.42 L2015.18 1210.42 L2014.59 1210.42 L2014.01 1210.42 L2013.42 1210.42 L2012.83 1210.42 L2012.25 1210.42 L2011.66 1210.42 L2011.07 1210.42 L2010.49 1210.42 L2009.9 1210.42 L2009.32 1210.42 L2008.73 1210.42 L2008.14 1210.42 L2007.56 1210.42 L2006.97 1210.42 L2006.38 1210.42 L2005.8 1210.42 L2005.21 1210.42 L2004.62 1210.42 L2004.04 1210.42 L2003.45 1210.42 L2002.86 1210.42 L2002.28 1210.42 L2001.69 1210.42 L2001.11 1210.42 L2000.52 1210.42 L1999.93 1210.42 L1999.35 1210.42 L1998.76 1210.42 L1998.17 1210.42 L1997.59 1210.42 L1997 1210.42 L1996.41 1210.42 L1995.83 1210.42 L1995.24 1210.42 L1994.65 1210.42 L1994.07 1210.42 L1993.48 1210.42 L1992.9 1210.42 L1992.31 1210.42 L1991.72 1210.42 L1991.14 1210.42 L1990.55 1210.42 L1989.96 1210.42 L1989.38 1210.42 L1988.79 1210.42 L1988.2 1210.42 L1987.62 1210.42 L1987.03 1210.42 L1986.45 1210.42 L1985.86 1210.42 L1985.27 1210.42 L1984.69 1210.42 L1984.1 1210.42 L1983.51 1210.42 L1982.93 1210.42 L1982.34 1210.42 L1981.75 1210.42 L1981.17 1210.42 L1980.58 1210.42 L1979.99 1210.42 L1979.41 1210.42 L1978.82 1210.42 L1978.24 1210.42 L1977.65 1210.42 L1977.06 1210.42 L1976.48 1210.42 L1975.89 1210.42 L1975.3 1210.42 L1974.72 1210.42 L1974.13 1210.42 L1973.54 1210.42 L1972.96 1210.42 L1972.37 1210.42 L1971.78 1210.42 L1971.2 1210.42 L1970.61 1210.42 L1970.03 1210.42 L1969.44 1210.42 L1968.85 1210.42 L1968.27 1210.42 L1967.68 1210.42 L1967.09 1210.42 L1966.51 1210.42 L1965.92 1210.42 L1965.33 1210.42 L1964.75 1210.42 L1964.16 1210.42 L1963.58 1210.42 L1962.99 1210.42 L1962.4 1210.42 L1961.82 1210.42 L1961.23 1210.42 L1960.64 1210.42 L1960.06 1210.42 L1959.47 1210.42 L1958.88 1210.42 L1958.3 1210.42 L1957.71 1210.42 L1957.12 1210.42 L1956.54 1210.42 L1955.95 1210.42 L1955.37 1210.42 L1954.78 1210.42 L1954.19 1210.42 L1953.61 1210.42 L1953.02 1210.42 L1952.43 1210.42 L1951.85 1210.42 L1951.26 1210.42 L1950.67 1210.42 L1950.09 1210.42 L1949.5 1210.42 L1948.91 1210.42 L1948.33 1210.42 L1947.74 1210.42 L1947.16 1210.42 L1946.57 1210.42 L1945.98 1210.42 L1945.4 1210.42 L1944.81 1210.42 L1944.22 1210.42 L1943.64 1210.42 L1943.05 1210.42 L1942.46 1210.42 L1941.88 1210.42 L1941.29 1210.42 L1940.71 1210.42 L1940.12 1210.42 L1939.53 1210.42 L1938.95 1210.42 L1938.36 1210.42 L1937.77 1210.42 L1937.19 1210.42 L1936.6 1210.42 L1936.01 1210.42 L1935.43 1210.42 L1934.84 1210.42 L1934.25 1210.42 L1933.67 1210.42 L1933.08 1210.42 L1932.5 1210.42 L1931.91 1210.42 L1931.32 1210.42 L1930.74 1210.42 L1930.15 1210.42 L1929.56 1210.42 L1928.98 1210.42 L1928.39 1210.42 L1927.8 1210.42 L1927.22 1210.42 L1926.63 1210.42 L1926.04 1210.42 L1925.46 1210.42 L1924.87 1210.42 L1924.29 1210.42 L1923.7 1210.42 L1923.11 1210.42 L1922.53 1210.42 L1921.94 1210.42 L1921.35 1210.42 L1920.77 1210.42 L1920.18 1210.42 L1919.59 1210.42 L1919.01 1210.42 L1918.42 1210.42 L1917.83 1210.42 L1917.25 1210.42 L1916.66 1210.42 L1916.08 1210.42 L1915.49 1210.42 L1914.9 1210.42 L1914.32 1210.42 L1913.73 1210.42 L1913.14 1210.42 L1912.56 1210.42 L1911.97 1210.42 L1911.38 1210.42 L1910.8 1210.42 L1910.21 1210.42 L1909.63 1210.42 L1909.04 1210.42 L1908.45 1210.42 L1907.87 1210.42 L1907.28 1210.42 L1906.69 1210.42 L1906.11 1210.42 L1905.52 1210.42 L1904.93 1210.42 L1904.35 1210.42 L1903.76 1210.42 L1903.17 1210.42 L1902.59 1210.42 L1902 1210.42 L1901.42 1210.42 L1900.83 1210.42 L1900.24 1210.42 L1899.66 1210.42 L1899.07 1210.42 L1898.48 1210.42 L1897.9 1210.42 L1897.31 1210.42 L1896.72 1210.42 L1896.14 1210.42 L1895.55 1210.42 L1894.96 1210.42 L1894.38 1210.42 L1893.79 1210.42 L1893.21 1210.42 L1892.62 1210.42 L1892.03 1210.42 L1891.45 1210.42 L1890.86 1210.42 L1890.27 1210.42 L1889.69 1210.42 L1889.1 1210.42 L1888.51 1210.42 L1887.93 1210.42 L1887.34 1210.42 L1886.76 1210.42 L1886.17 1210.42 L1885.58 1210.42 L1885 1210.42 L1884.41 1210.42 L1883.82 1210.42 L1883.24 1210.42 L1882.65 1210.42 L1882.06 1210.42 L1881.48 1210.42 L1880.89 1210.42 L1880.3 1210.42 L1879.72 1210.42 L1879.13 1210.42 L1878.55 1210.42 L1877.96 1210.42 L1877.37 1210.42 L1876.79 1210.42 L1876.2 1210.42 L1875.61 1210.42 L1875.03 1210.42 L1874.44 1210.42 L1873.85 1210.42 L1873.27 1210.42 L1872.68 1210.42 L1872.09 1210.42 L1871.51 1210.42 L1870.92 1210.42 L1870.34 1210.42 L1869.75 1210.42 L1869.16 1210.42 L1868.58 1210.42 L1867.99 1210.42 L1867.4 1210.42 L1866.82 1210.42 L1866.23 1210.42 L1865.64 1210.42 L1865.06 1210.42 L1864.47 1210.42 L1863.88 1210.42 L1863.3 1210.42 L1862.71 1210.42 L1862.13 1210.42 L1861.54 1210.42 L1860.95 1210.42 L1860.37 1210.42 L1859.78 1210.42 L1859.19 1210.42 L1858.61 1210.42 L1858.02 1210.42 L1857.43 1210.42 L1856.85 1210.42 L1856.26 1210.42 L1855.68 1210.42 L1855.09 1210.42 L1854.5 1210.42 L1853.92 1210.42 L1853.33 1210.42 L1852.74 1210.42 L1852.16 1210.42 L1851.57 1210.42 L1850.98 1210.42 L1850.4 1210.42 L1849.81 1210.42 L1849.22 1210.42 L1848.64 1210.42 L1848.05 1210.42 L1847.47 1210.42 L1846.88 1210.42 L1846.29 1210.42 L1845.71 1210.42 L1845.12 1210.42 L1844.53 1210.42 L1843.95 1210.42 L1843.36 1210.42 L1842.77 1210.42 L1842.19 1210.42 L1841.6 1210.42 L1841.01 1210.42 L1840.43 1210.42 L1839.84 1210.42 L1839.26 1210.42 L1838.67 1210.42 L1838.08 1210.42 L1837.5 1210.42 L1836.91 1210.42 L1836.32 1210.42 L1835.74 1210.42 L1835.15 1210.42 L1834.56 1210.42 L1833.98 1210.42 L1833.39 1210.42 L1832.81 1210.42 L1832.22 1210.42 L1831.63 1210.42 L1831.05 1210.42 L1830.46 1210.42 L1829.87 1210.42 L1829.29 1210.42 L1828.7 1210.42 L1828.11 1210.42 L1827.53 1210.42 L1826.94 1210.42 L1826.35 1210.42 L1825.77 1210.42 L1825.18 1210.42 L1824.6 1210.42 L1824.01 1210.42 L1823.42 1210.42 L1822.84 1210.42 L1822.25 1210.42 L1821.66 1210.42 L1821.08 1210.42 L1820.49 1210.42 L1819.9 1210.42 L1819.32 1210.42 L1818.73 1210.42 L1818.14 1210.42 L1817.56 1210.42 L1816.97 1210.42 L1816.39 1210.42 L1815.8 1210.42 L1815.21 1210.42 L1814.63 1210.42 L1814.04 1210.42 L1813.45 1210.42 L1812.87 1210.42 L1812.28 1210.42 L1811.69 1210.42 L1811.11 1210.42 L1810.52 1210.42 L1809.94 1210.42 L1809.35 1210.42 L1808.76 1210.42 L1808.18 1210.42 L1807.59 1210.42 L1807 1210.42 L1806.42 1210.42 L1805.83 1210.42 L1805.24 1210.42 L1804.66 1210.42 L1804.07 1210.42 L1803.48 1210.42 L1802.9 1210.42 L1802.31 1210.42 L1801.73 1210.42 L1801.14 1210.42 L1800.55 1210.42 L1799.97 1210.42 L1799.38 1210.42 L1798.79 1210.42 L1798.21 1210.42 L1797.62 1210.42 L1797.03 1210.42 L1796.45 1210.42 L1795.86 1210.42 L1795.27 1210.42 L1794.69 1210.42 L1794.1 1210.42 L1793.52 1210.42 L1792.93 1210.42 L1792.34 1210.42 L1791.76 1210.42 L1791.17 1210.42 L1790.58 1210.42 L1790 1210.42 L1789.41 1210.42 L1788.82 1210.42 L1788.24 1210.42 L1787.65 1210.42 L1787.06 1210.42 L1786.48 1210.42 L1785.89 1210.42 L1785.31 1210.42 L1784.72 1210.42 L1784.13 1210.42 L1783.55 1210.42 L1782.96 1210.42 L1782.37 1210.42 L1781.79 1210.42 L1781.2 1210.42 L1780.61 1210.42 L1780.03 1210.42 L1779.44 1210.42 L1778.86 1210.42 L1778.27 1210.42 L1777.68 1210.42 L1777.1 1210.42 L1776.51 1210.42 L1775.92 1210.42 L1775.34 1210.42 L1774.75 1210.42 L1774.16 1210.42 L1773.58 1210.42 L1772.99 1210.42 L1772.4 1210.42 L1771.82 1210.42 L1771.23 1210.42 L1770.65 1210.42 L1770.06 1210.42 L1769.47 1210.42 L1768.89 1210.42 L1768.3 1210.42 L1767.71 1210.42 L1767.13 1210.42 L1766.54 1210.42 L1765.95 1210.42 L1765.37 1210.42 L1764.78 1210.42 L1764.19 1210.42 L1763.61 1210.42 L1763.02 1210.42 L1762.44 1210.42 L1761.85 1210.42 L1761.26 1210.42 L1760.68 1210.42 L1760.09 1210.42 L1759.5 1210.42 L1758.92 1210.42 L1758.33 1210.42 L1757.74 1210.42 L1757.16 1210.42 L1756.57 1210.42 L1755.99 1210.42 L1755.4 1210.42 L1754.81 1210.42 L1754.23 1210.42 L1753.64 1210.42 L1753.05 1210.42 L1752.47 1210.42 L1751.88 1210.42 L1751.29 1210.42 L1750.71 1210.42 L1750.12 1210.42 L1749.53 1210.42 L1748.95 1210.42 L1748.36 1210.42 L1747.78 1210.42 L1747.19 1210.42 L1746.6 1210.42 L1746.02 1210.42 L1745.43 1210.42 L1744.84 1210.42 L1744.26 1210.42 L1743.67 1210.42 L1743.08 1210.42 L1742.5 1210.42 L1741.91 1210.42 L1741.32 1210.42 L1740.74 1210.42 L1740.15 1210.42 L1739.57 1210.42 L1738.98 1210.42 L1738.39 1210.42 L1737.81 1210.42 L1737.22 1210.42 L1736.63 1210.42 L1736.05 1210.42 L1735.46 1210.42 L1734.87 1210.42 L1734.29 1210.42 L1733.7 1210.42 L1733.11 1210.42 L1732.53 1210.42 L1731.94 1210.42 L1731.36 1210.42 L1730.77 1210.42 L1730.18 1210.42 L1729.6 1210.42 L1729.01 1210.42 L1728.42 1210.42 L1727.84 1210.42 L1727.25 1210.42 L1726.66 1210.42 L1726.08 1210.42 L1725.49 1210.42 L1724.91 1210.42 L1724.32 1210.42 L1723.73 1210.42 L1723.15 1210.42 L1722.56 1210.42 L1721.97 1210.42 L1721.39 1210.42 L1720.8 1210.42 L1720.21 1210.42 L1719.63 1210.42 L1719.04 1210.42 L1718.45 1210.42 L1717.87 1210.42 L1717.28 1210.42 L1716.7 1210.42 L1716.11 1210.42 L1715.52 1210.42 L1714.94 1210.42 L1714.35 1210.42 L1713.76 1210.42 L1713.18 1210.42 L1712.59 1210.42 L1712 1210.42 L1711.42 1210.42 L1710.83 1210.42 L1710.24 1210.42 L1709.66 1210.42 L1709.07 1210.42 L1708.49 1210.42 L1707.9 1210.42 L1707.31 1210.42 L1706.73 1210.42 L1706.14 1210.42 L1705.55 1210.42 L1704.97 1210.42 L1704.38 1210.42 L1703.79 1210.42 L1703.21 1210.42 L1702.62 1210.42 L1702.04 1210.42 L1701.45 1210.42 L1700.86 1210.42 L1700.28 1210.42 L1699.69 1210.42 L1699.1 1210.42 L1698.52 1210.42 L1697.93 1210.42 L1697.34 1210.42 L1696.76 1210.42 L1696.17 1210.42 L1695.58 1210.42 L1695 1210.42 L1694.41 1210.42 L1693.83 1210.42 L1693.24 1210.42 L1692.65 1210.42 L1692.07 1210.42 L1691.48 1210.42 L1690.89 1210.42 L1690.31 1210.42 L1689.72 1210.42 L1689.13 1210.42 L1688.55 1210.42 L1687.96 1210.42 L1687.37 1210.42 L1686.79 1210.42 L1686.2 1210.42 L1685.62 1210.42 L1685.03 1210.42 L1684.44 1210.42 L1683.86 1210.42 L1683.27 1210.42 L1682.68 1210.42 L1682.1 1210.42 L1681.51 1210.42 L1680.92 1210.42 L1680.34 1210.42 L1679.75 1210.42 L1679.17 1210.42 L1678.58 1210.42 L1677.99 1210.42 L1677.41 1210.42 L1676.82 1210.42 L1676.23 1210.42 L1675.65 1210.42 L1675.06 1210.42 L1674.47 1210.42 L1673.89 1210.42 L1673.3 1210.42 L1672.71 1210.42 L1672.13 1210.42 L1671.54 1210.42 L1670.96 1210.42 L1670.37 1210.42 L1669.78 1210.42 L1669.2 1210.42 L1668.61 1210.42 L1668.02 1210.42 L1667.44 1210.42 L1666.85 1210.42 L1666.26 1210.42 L1665.68 1210.42 L1665.09 1210.42 L1664.5 1210.42 L1663.92 1210.42 L1663.33 1210.42 L1662.75 1210.42 L1662.16 1210.42 L1661.57 1210.42 L1660.99 1210.42 L1660.4 1210.42 L1659.81 1210.42 L1659.23 1210.42 L1658.64 1210.42 L1658.05 1210.42 L1657.47 1210.42 L1656.88 1210.42 L1656.29 1210.42 L1655.71 1210.42 L1655.12 1210.42 L1654.54 1210.42 L1653.95 1210.42 L1653.36 1210.42 L1652.78 1210.42 L1652.19 1210.42 L1651.6 1210.42 L1651.02 1210.42 L1650.43 1210.42 L1649.84 1210.42 L1649.26 1210.42 L1648.67 1210.42 L1648.09 1210.42 L1647.5 1210.42 L1646.91 1210.42 L1646.33 1210.42 L1645.74 1210.42 L1645.15 1210.42 L1644.57 1210.42 L1643.98 1210.42 L1643.39 1210.42 L1642.81 1210.42 L1642.22 1210.42 L1641.63 1210.42 L1641.05 1210.42 L1640.46 1210.42 L1639.88 1210.42 L1639.29 1210.42 L1638.7 1210.42 L1638.12 1210.42 L1637.53 1210.42 L1636.94 1210.42 L1636.36 1210.42 L1635.77 1210.42 L1635.18 1210.42 L1634.6 1210.42 L1634.01 1210.42 L1633.42 1210.42 L1632.84 1210.42 L1632.25 1210.42 L1631.67 1210.42 L1631.08 1210.42 L1630.49 1210.42 L1629.91 1210.42 L1629.32 1210.42 L1628.73 1210.42 L1628.15 1210.42 L1627.56 1210.42 L1626.97 1210.42 L1626.39 1210.42 L1625.8 1210.42 L1625.22 1210.42 L1624.63 1210.42 L1624.04 1210.42 L1623.46 1210.42 L1622.87 1210.42 L1622.28 1210.42 L1621.7 1210.42 L1621.11 1210.42 L1620.52 1210.42 L1619.94 1210.42 L1619.35 1210.42 L1618.76 1210.42 L1618.18 1210.42 L1617.59 1210.42 L1617.01 1210.42 L1616.42 1210.42 L1615.83 1210.42 L1615.25 1210.42 L1614.66 1210.42 L1614.07 1210.42 L1613.49 1210.42 L1612.9 1210.42 L1612.31 1210.42 L1611.73 1210.42 L1611.14 1210.42 L1610.55 1210.42 L1609.97 1210.42 L1609.38 1210.42 L1608.8 1210.42 L1608.21 1210.42 L1607.62 1210.42 L1607.04 1210.42 L1606.45 1210.42 L1605.86 1210.42 L1605.28 1210.42 L1604.69 1210.42 L1604.1 1210.42 L1603.52 1210.42 L1602.93 1210.42 L1602.34 1210.42 L1601.76 1210.42 L1601.17 1210.42 L1600.59 1210.42 L1600 1210.42 L1599.41 1210.42 L1598.83 1210.42 L1598.24 1210.42 L1597.65 1210.42 L1597.07 1210.42 L1596.48 1210.42 L1595.89 1210.42 L1595.31 1210.42 L1594.72 1210.42 L1594.14 1210.42 L1593.55 1210.42 L1592.96 1210.42 L1592.38 1210.42 L1591.79 1210.42 L1591.2 1210.42 L1590.62 1210.42 L1590.03 1210.42 L1589.44 1210.42 L1588.86 1210.42 L1588.27 1210.42 L1587.68 1210.42 L1587.1 1210.42 L1586.51 1210.42 L1585.93 1210.42 L1585.34 1210.42 L1584.75 1210.42 L1584.17 1210.42 L1583.58 1210.42 L1582.99 1210.42 L1582.41 1210.42 L1581.82 1210.42 L1581.23 1210.42 L1580.65 1210.42 L1580.06 1210.42 L1579.47 1210.42 L1578.89 1210.42 L1578.3 1210.42 L1577.72 1210.42 L1577.13 1210.42 L1576.54 1210.42 L1575.96 1210.42 L1575.37 1210.42 L1574.78 1210.42 L1574.2 1210.42 L1573.61 1210.42 L1573.02 1210.42 L1572.44 1210.42 L1571.85 1210.42 L1571.27 1210.42 L1570.68 1210.42 L1570.09 1210.42 L1569.51 1210.42 L1568.92 1210.42 L1568.33 1210.42 L1567.75 1210.42 L1567.16 1210.42 L1566.57 1210.42 L1565.99 1210.42 L1565.4 1210.42 L1564.81 1210.42 L1564.23 1210.42 L1563.64 1210.42 L1563.06 1210.42 L1562.47 1210.42 L1561.88 1210.42 L1561.3 1210.42 L1560.71 1210.42 L1560.12 1210.42 L1559.54 1210.42 L1558.95 1210.42 L1558.36 1210.42 L1557.78 1210.42 L1557.19 1210.42 L1556.6 1210.42 L1556.02 1210.42 L1555.43 1210.42 L1554.85 1210.42 L1554.26 1210.42 L1553.67 1210.42 L1553.09 1210.42 L1552.5 1210.42 L1551.91 1210.42 L1551.33 1210.42 L1550.74 1210.42 L1550.15 1210.42 L1549.57 1210.42 L1548.98 1210.42 L1548.4 1210.42 L1547.81 1210.42 L1547.22 1210.42 L1546.64 1210.42 L1546.05 1210.42 L1545.46 1210.42 L1544.88 1210.42 L1544.29 1210.42 L1543.7 1210.42 L1543.12 1210.42 L1542.53 1210.42 L1541.94 1210.42 L1541.36 1210.42 L1540.77 1210.42 L1540.19 1210.42 L1539.6 1210.42 L1539.01 1210.42 L1538.43 1210.42 L1537.84 1210.42 L1537.25 1210.42 L1536.67 1210.42 L1536.08 1210.42 L1535.49 1210.42 L1534.91 1210.42 L1534.32 1210.42 L1533.73 1210.42 L1533.15 1210.42 L1532.56 1210.42 L1531.98 1210.42 L1531.39 1210.42 L1530.8 1210.42 L1530.22 1210.42 L1529.63 1210.42 L1529.04 1210.42 L1528.46 1210.42 L1527.87 1210.42 L1527.28 1210.42 L1526.7 1210.42 L1526.11 1210.42 L1525.52 1210.42 L1524.94 1210.42 L1524.35 1210.42 L1523.77 1210.42 L1523.18 1210.42 L1522.59 1210.42 L1522.01 1210.42 L1521.42 1210.42 L1520.83 1210.42 L1520.25 1210.42 L1519.66 1210.42 L1519.07 1210.42 L1518.49 1210.42 L1517.9 1210.42 L1517.32 1210.42 L1516.73 1210.42 L1516.14 1210.42 L1515.56 1210.42 L1514.97 1210.42 L1514.38 1210.42 L1513.8 1210.42 L1513.21 1210.42 L1512.62 1210.42 L1512.04 1210.42 L1511.45 1210.42 L1510.86 1210.42 L1510.28 1210.42 L1509.69 1210.42 L1509.11 1210.42 L1508.52 1210.42 L1507.93 1210.42 L1507.35 1210.42 L1506.76 1210.42 L1506.17 1210.42 L1505.59 1210.42 L1505 1210.42 L1504.41 1210.42 L1503.83 1210.42 L1503.24 1210.42 L1502.65 1210.42 L1502.07 1210.42 L1501.48 1210.42 L1500.9 1210.42 L1500.31 1210.42 L1499.72 1210.42 L1499.14 1210.42 L1498.55 1210.42 L1497.96 1210.42 L1497.38 1210.42 L1496.79 1210.42 L1496.2 1210.42 L1495.62 1210.42 L1495.03 1210.42 L1494.45 1210.42 L1493.86 1210.42 L1493.27 1210.42 L1492.69 1210.42 L1492.1 1210.42 L1491.51 1210.42 L1490.93 1210.42 L1490.34 1210.42 L1489.75 1210.42 L1489.17 1210.42 L1488.58 1210.42 L1487.99 1210.42 L1487.41 1210.42 L1486.82 1210.42 L1486.24 1210.42 L1485.65 1210.42 L1485.06 1210.42 L1484.48 1210.42 L1483.89 1210.42 L1483.3 1210.42 L1482.72 1210.42 L1482.13 1210.42 L1481.54 1210.42 L1480.96 1210.42 L1480.37 1210.42 L1479.78 1210.42 L1479.2 1210.42 L1478.61 1210.42 L1478.03 1210.42 L1477.44 1210.42 L1476.85 1210.42 L1476.27 1210.42 L1475.68 1210.42 L1475.09 1210.42 L1474.51 1210.42 L1473.92 1210.42 L1473.33 1210.42 L1472.75 1210.42 L1472.16 1210.42 L1471.57 1210.42 L1470.99 1210.42 L1470.4 1210.42 L1469.82 1210.42 L1469.23 1210.42 L1468.64 1210.42 L1468.06 1210.42 L1467.47 1210.42 L1466.88 1210.42 L1466.3 1210.42 L1465.71 1210.42 L1465.12 1210.42 L1464.54 1210.42 L1463.95 1210.42 L1463.37 1210.42 L1462.78 1210.42 L1462.19 1210.42 L1461.61 1210.42 L1461.02 1210.42 L1460.43 1210.42 L1459.85 1210.42 L1459.26 1210.42 L1458.67 1210.42 L1458.09 1210.42 L1457.5 1210.42 L1456.91 1210.42 L1456.33 1210.42 L1455.74 1210.42 L1455.16 1210.42 L1454.57 1210.42 L1453.98 1210.42 L1453.4 1210.42 L1452.81 1210.42 L1452.22 1210.42 L1451.64 1210.42 L1451.05 1210.42 L1450.46 1210.42 L1449.88 1210.42 L1449.29 1210.42 L1448.7 1210.42 L1448.12 1210.42 L1447.53 1210.42 L1446.95 1210.42 L1446.36 1210.42 L1445.77 1210.42 L1445.19 1210.42 L1444.6 1210.42 L1444.01 1210.42 L1443.43 1210.42 L1442.84 1210.42 L1442.25 1210.42 L1441.67 1210.42 L1441.08 1210.42 L1440.5 1210.42 L1439.91 1210.42 L1439.32 1210.42 L1438.74 1210.42 L1438.15 1210.42 L1437.56 1210.42 L1436.98 1210.42 L1436.39 1210.42 L1435.8 1210.42 L1435.22 1210.42 L1434.63 1210.42 L1434.04 1210.42 L1433.46 1210.42 L1432.87 1210.42 L1432.29 1210.42 L1431.7 1210.42 L1431.11 1210.42 L1430.53 1210.42 L1429.94 1210.42 L1429.35 1210.42 L1428.77 1210.42 L1428.18 1210.42 L1427.59 1210.42 L1427.01 1210.42 L1426.42 1210.42 L1425.83 1210.42 L1425.25 1210.42 L1424.66 1210.42 L1424.08 1210.42 L1423.49 1210.42 L1422.9 1210.42 L1422.32 1210.42 L1421.73 1210.42 L1421.14 1210.42 L1420.56 1210.42 L1419.97 1210.42 L1419.38 1210.42 L1418.8 1210.42 L1418.21 1210.42 L1417.63 1210.42 L1417.04 1210.42 L1416.45 1210.42 L1415.87 1210.42 L1415.28 1210.42 L1414.69 1210.42 L1414.11 1210.42 L1413.52 1210.42 L1412.93 1210.42 L1412.35 1210.42 L1411.76 1210.42 L1411.17 1210.42 L1410.59 1210.42 L1410 1210.42 L1409.42 1210.42 L1408.83 1210.42 L1408.24 1210.42 L1407.66 1210.42 L1407.07 1210.42 L1406.48 1210.42 L1405.9 1210.42 L1405.31 1210.42 L1404.72 1210.42 L1404.14 1210.42 L1403.55 1210.42 L1402.96 1210.42 L1402.38 1210.42 L1401.79 1210.42 L1401.21 1210.42 L1400.62 1210.42 L1400.03 1210.42 L1399.45 1210.42 L1398.86 1210.42 L1398.27 1210.42 L1397.69 1210.42 L1397.1 1210.42 L1396.51 1210.42 L1395.93 1210.42 L1395.34 1210.42 L1394.75 1210.42 L1394.17 1210.42 L1393.58 1210.42 L1393 1210.42 L1392.41 1210.42 L1391.82 1210.42 L1391.24 1210.42 L1390.65 1210.42 L1390.06 1210.42 L1389.48 1210.42 L1388.89 1210.42 L1388.3 1210.42 L1387.72 1210.42 L1387.13 1210.42 L1386.55 1210.42 L1385.96 1210.42 L1385.37 1210.42 L1384.79 1210.42 L1384.2 1210.42 L1383.61 1210.42 L1383.03 1210.42 L1382.44 1210.42 L1381.85 1210.42 L1381.27 1210.42 L1380.68 1210.42 L1380.09 1210.42 L1379.51 1210.42 L1378.92 1210.42 L1378.34 1210.42 L1377.75 1210.42 L1377.16 1210.42 L1376.58 1210.42 L1375.99 1210.42 L1375.4 1210.42 L1374.82 1210.42 L1374.23 1210.42 L1373.64 1210.42 L1373.06 1210.42 L1372.47 1210.42 L1371.88 1210.42 L1371.3 1210.42 L1370.71 1210.42 L1370.13 1210.42 L1369.54 1210.42 L1368.95 1210.42 L1368.37 1210.42 L1367.78 1210.42 L1367.19 1210.42 L1366.61 1210.42 L1366.02 1210.42 L1365.43 1210.42 L1364.85 1210.42 L1364.26 1210.42 L1363.68 1210.42 L1363.09 1210.42 L1362.5 1210.42 L1361.92 1210.42 L1361.33 1210.42 L1360.74 1210.42 L1360.16 1210.42 L1359.57 1210.42 L1358.98 1210.42 L1358.4 1210.42 L1357.81 1210.42 L1357.22 1210.42 L1356.64 1210.42 L1356.05 1210.42 L1355.47 1210.42 L1354.88 1210.42 L1354.29 1210.42 L1353.71 1210.42 L1353.12 1210.42 L1352.53 1210.42 L1351.95 1210.42 L1351.36 1210.42 L1350.77 1210.42 L1350.19 1210.42 L1349.6 1210.42 L1349.01 1210.42 L1348.43 1210.42 L1347.84 1210.42 L1347.26 1210.42 L1346.67 1210.42 L1346.08 1210.42 L1345.5 1210.42 L1344.91 1210.42 L1344.32 1210.42 L1343.74 1210.42 L1343.15 1210.42 L1342.56 1210.42 L1341.98 1210.42 L1341.39 1210.42 L1340.8 1210.42 L1340.22 1210.42 L1339.63 1210.42 L1339.05 1210.42 L1338.46 1210.42 L1337.87 1210.42 L1337.29 1210.42 L1336.7 1210.42 L1336.11 1210.42 L1335.53 1210.42 L1334.94 1210.42 L1334.35 1210.42 L1333.77 1210.42 L1333.18 1210.42 L1332.6 1210.42 L1332.01 1210.42 L1331.42 1210.42 L1330.84 1210.42 L1330.25 1210.42 L1329.66 1210.42 L1329.08 1210.42 L1328.49 1210.42 L1327.9 1210.42 L1327.32 1210.42 L1326.73 1210.42 L1326.14 1210.42 L1325.56 1210.42 L1324.97 1210.42 L1324.39 1210.42 L1323.8 1210.42 L1323.21 1210.42 L1322.63 1210.42 L1322.04 1210.42 L1321.45 1210.42 L1320.87 1210.42 L1320.28 1210.42 L1319.69 1210.42 L1319.11 1210.42 L1318.52 1210.42 L1317.93 1210.42 L1317.35 1210.42 L1316.76 1210.42 L1316.18 1210.42 L1315.59 1210.42 L1315 1210.42 L1314.42 1210.42 L1313.83 1210.42 L1313.24 1210.42 L1312.66 1210.42 L1312.07 1210.42 L1311.48 1210.42 L1310.9 1210.42 L1310.31 1210.42 L1309.73 1210.42 L1309.14 1210.42 L1308.55 1210.42 L1307.97 1210.42 L1307.38 1210.42 L1306.79 1210.42 L1306.21 1210.42 L1305.62 1210.42 L1305.03 1210.42 L1304.45 1210.42 L1303.86 1210.42 L1303.27 1210.42 L1302.69 1210.42 L1302.1 1210.42 L1301.52 1210.42 L1300.93 1210.42 L1300.34 1210.42 L1299.76 1210.42 L1299.17 1210.42 L1298.58 1210.42 L1298 1210.42 L1297.41 1210.42 L1296.82 1210.42 L1296.24 1210.42 L1295.65 1210.42 L1295.06 1210.42 L1294.48 1210.42 L1293.89 1210.42 L1293.31 1210.42 L1292.72 1210.42 L1292.13 1210.42 L1291.55 1210.42 L1290.96 1210.42 L1290.37 1210.42 L1289.79 1210.42 L1289.2 1210.42 L1288.61 1210.42 L1288.03 1210.42 L1287.44 1210.42 L1286.86 1210.42 L1286.27 1210.42 L1285.68 1210.42 L1285.1 1210.42 L1284.51 1210.42 L1283.92 1210.42 L1283.34 1210.42 L1282.75 1210.42 L1282.16 1210.42 L1281.58 1210.42 L1280.99 1210.42 L1280.4 1210.42 L1279.82 1210.42 L1279.23 1210.42 L1278.65 1210.42 L1278.06 1210.42 L1277.47 1210.42 L1276.89 1210.42 L1276.3 1210.42 L1275.71 1210.42 L1275.13 1210.42 L1274.54 1210.42 L1273.95 1210.42 L1273.37 1210.42 L1272.78 1210.42 L1272.19 1210.42 L1271.61 1210.42 L1271.02 1210.42 L1270.44 1210.42 L1269.85 1210.42 L1269.26 1210.42 L1268.68 1210.42 L1268.09 1210.42 L1267.5 1210.42 L1266.92 1210.42 L1266.33 1210.42 L1265.74 1210.42 L1265.16 1210.42 L1264.57 1210.42 L1263.98 1210.42 L1263.4 1210.42 L1262.81 1210.42 L1262.23 1210.42 L1261.64 1210.42 L1261.05 1210.42 L1260.47 1210.42 L1259.88 1210.42 L1259.29 1210.42 L1258.71 1210.42 L1258.12 1210.42 L1257.53 1210.42 L1256.95 1210.42 L1256.36 1210.42 L1255.78 1210.42 L1255.19 1210.42 L1254.6 1210.42 L1254.02 1210.42 L1253.43 1210.42 L1252.84 1210.42 L1252.26 1210.42 L1251.67 1210.42 L1251.08 1210.42 L1250.5 1210.42 L1249.91 1210.42 L1249.32 1210.42 L1248.74 1210.42 L1248.15 1210.42 L1247.57 1210.42 L1246.98 1210.42 L1246.39 1210.42 L1245.81 1210.42 L1245.22 1210.42 L1244.63 1210.42 L1244.05 1210.42 L1243.46 1210.42 L1242.87 1210.42 L1242.29 1210.42 L1241.7 1210.42 L1241.11 1210.42 L1240.53 1210.42 L1239.94 1210.42 L1239.36 1210.42 L1238.77 1210.42 L1238.18 1210.42 L1237.6 1210.42 L1237.01 1210.42 L1236.42 1210.42 L1235.84 1210.42 L1235.25 1210.42 L1234.66 1210.42 L1234.08 1210.42 L1233.49 1210.42 L1232.91 1210.42 L1232.32 1210.42 L1231.73 1210.42 L1231.15 1210.42 L1230.56 1210.42 L1229.97 1210.42 L1229.39 1210.42 L1228.8 1210.42 L1228.21 1210.42 L1227.63 1210.42 L1227.04 1210.42 L1226.45 1210.42 L1225.87 1210.42 L1225.28 1210.42 L1224.7 1210.42 L1224.11 1210.42 L1223.52 1210.42 L1222.94 1210.42 L1222.35 1210.42 L1221.76 1210.42 L1221.18 1210.42 L1220.59 1210.42 L1220 1210.42 L1219.42 1210.42 L1218.83 1210.42 L1218.24 1210.42 L1217.66 1210.42 L1217.07 1210.42 L1216.49 1210.42 L1215.9 1210.42 L1215.31 1210.42 L1214.73 1210.42 L1214.14 1210.42 L1213.55 1210.42 L1212.97 1210.42 L1212.38 1210.42 L1211.79 1210.42 L1211.21 1210.42 L1210.62 1210.42 L1210.03 1210.42 L1209.45 1210.42 L1208.86 1210.42 L1208.28 1210.42 L1207.69 1210.42 L1207.1 1210.42 L1206.52 1210.42 L1205.93 1210.42 L1205.34 1210.42 L1204.76 1210.42 L1204.17 1210.42 L1203.58 1210.42 L1203 1210.42 L1202.41 1210.42 L1201.83 1210.42 L1201.24 1210.42 L1200.65 1210.42 L1200.07 1210.42 L1199.48 1210.42 L1198.89 1210.42 L1198.31 1210.42 L1197.72 1210.42 L1197.13 1210.42 L1196.55 1210.42 L1195.96 1210.42 L1195.37 1210.42 L1194.79 1210.42 L1194.2 1210.42 L1193.62 1210.42 L1193.03 1210.42 L1192.44 1210.42 L1191.86 1210.42 L1191.27 1210.42 L1190.68 1210.42 L1190.1 1210.42 L1189.51 1210.42 L1188.92 1210.42 L1188.34 1210.42 L1187.75 1210.42 L1187.16 1210.42 L1186.58 1210.42 L1185.99 1210.42 L1185.41 1210.42 L1184.82 1210.42 L1184.23 1210.42 L1183.65 1210.42 L1183.06 1210.42 L1182.47 1210.42 L1181.89 1210.42 L1181.3 1210.42 L1180.71 1210.42 L1180.13 1210.42 L1179.54 1210.42 L1178.96 1210.42 L1178.37 1210.42 L1177.78 1210.42 L1177.2 1210.42 L1176.61 1210.42 L1176.02 1210.42 L1175.44 1210.42 L1174.85 1210.42 L1174.26 1210.42 L1173.68 1210.42 L1173.09 1210.42 L1172.5 1210.42 L1171.92 1210.42 L1171.33 1210.42 L1170.75 1210.42 L1170.16 1210.42 L1169.57 1210.42 L1168.99 1210.42 L1168.4 1210.42 L1167.81 1210.42 L1167.23 1210.42 L1166.64 1210.42 L1166.05 1210.42 L1165.47 1210.42 L1164.88 1210.42 L1164.29 1210.42 L1163.71 1210.42 L1163.12 1210.42 L1162.54 1210.42 L1161.95 1210.42 L1161.36 1210.42 L1160.78 1210.42 L1160.19 1210.42 L1159.6 1210.42 L1159.02 1210.42 L1158.43 1210.42 L1157.84 1210.42 L1157.26 1210.42 L1156.67 1210.42 L1156.09 1210.42 L1155.5 1210.42 L1154.91 1210.42 L1154.33 1210.42 L1153.74 1210.42 L1153.15 1210.42 L1152.57 1210.42 L1151.98 1210.42 L1151.39 1210.42 L1150.81 1210.42 L1150.22 1210.42 L1149.63 1210.42 L1149.05 1210.42 L1148.46 1210.42 L1147.88 1210.42 L1147.29 1210.42 L1146.7 1210.42 L1146.12 1210.42 L1145.53 1210.42 L1144.94 1210.42 L1144.36 1210.42 L1143.77 1210.42 L1143.18 1210.42 L1142.6 1210.42 L1142.01 1210.42 L1141.42 1210.42 L1140.84 1210.42 L1140.25 1210.42 L1139.67 1210.42 L1139.08 1210.42 L1138.49 1210.42 L1137.91 1210.42 L1137.32 1210.42 L1136.73 1210.42 L1136.15 1210.42 L1135.56 1210.42 L1134.97 1210.42 L1134.39 1210.42 L1133.8 1210.42 L1133.21 1210.42 L1132.63 1210.42 L1132.04 1210.42 L1131.46 1210.42 L1130.87 1210.42 L1130.28 1210.42 L1129.7 1210.42 L1129.11 1210.42 L1128.52 1210.42 L1127.94 1210.42 L1127.35 1210.42 L1126.76 1210.42 L1126.18 1210.42 L1125.59 1210.42 L1125.01 1210.42 L1124.42 1210.42 L1123.83 1210.42 L1123.25 1210.42 L1122.66 1210.42 L1122.07 1210.42 L1121.49 1210.42 L1120.9 1210.42 L1120.31 1210.42 L1119.73 1210.42 L1119.14 1210.42 L1118.55 1210.42 L1117.97 1210.42 L1117.38 1210.42 L1116.8 1210.42 L1116.21 1210.42 L1115.62 1210.42 L1115.04 1210.42 L1114.45 1210.42 L1113.86 1210.42 L1113.28 1210.42 L1112.69 1210.42 L1112.1 1210.42 L1111.52 1210.42 L1110.93 1210.42 L1110.34 1210.42 L1109.76 1210.42 L1109.17 1210.42 L1108.59 1210.42 L1108 1210.42 L1107.41 1210.42 L1106.83 1210.42 L1106.24 1210.42 L1105.65 1210.42 L1105.07 1210.42 L1104.48 1210.42 L1103.89 1210.42 L1103.31 1210.42 L1102.72 1210.42 L1102.14 1210.42 L1101.55 1210.42 L1100.96 1210.42 L1100.38 1210.42 L1099.79 1210.42 L1099.2 1210.42 L1098.62 1210.42 L1098.03 1210.42 L1097.44 1210.42 L1096.86 1210.42 L1096.27 1210.42 L1095.68 1210.42 L1095.1 1210.42 L1094.51 1210.42 L1093.93 1210.42 L1093.34 1210.42 L1092.75 1210.42 L1092.17 1210.42 L1091.58 1210.42 L1090.99 1210.42 L1090.41 1210.42 L1089.82 1210.42 L1089.23 1210.42 L1088.65 1210.42 L1088.06 1210.42 L1087.47 1210.42 L1086.89 1210.42 L1086.3 1210.42 L1085.72 1210.42 L1085.13 1210.42 L1084.54 1210.42 L1083.96 1210.42 L1083.37 1210.42 L1082.78 1210.42 L1082.2 1210.42 L1081.61 1210.42 L1081.02 1210.42 L1080.44 1210.42 L1079.85 1210.42 L1079.26 1210.42 L1078.68 1210.42 L1078.09 1210.42 L1077.51 1210.42 L1076.92 1210.42 L1076.33 1210.42 L1075.75 1210.42 L1075.16 1210.42 L1074.57 1210.42 L1073.99 1210.42 L1073.4 1210.42 L1072.81 1210.42 L1072.23 1210.42 L1071.64 1210.42 L1071.06 1210.42 L1070.47 1210.42 L1069.88 1210.42 L1069.3 1210.42 L1068.71 1210.42 L1068.12 1210.42 L1067.54 1210.42 L1066.95 1210.42 L1066.36 1210.42 L1065.78 1210.42 L1065.19 1210.42 L1064.6 1210.42 L1064.02 1210.42 L1063.43 1210.42 L1062.85 1210.42 L1062.26 1210.42 L1061.67 1210.42 L1061.09 1210.42 L1060.5 1210.42 L1059.91 1210.42 L1059.33 1210.42 L1058.74 1210.42 L1058.15 1210.42 L1057.57 1210.42 L1056.98 1210.42 L1056.39 1210.42 L1055.81 1210.42 L1055.22 1210.42 L1054.64 1210.42 L1054.05 1210.42 L1053.46 1210.42 L1052.88 1210.42 L1052.29 1210.42 L1051.7 1210.42 L1051.12 1210.42 L1050.53 1210.42 L1049.94 1210.42 L1049.36 1210.42 L1048.77 1210.42 L1048.19 1210.42 L1047.6 1210.42 L1047.01 1210.42 L1046.43 1210.42 L1045.84 1210.42 L1045.25 1210.42 L1044.67 1210.42 L1044.08 1210.42 L1043.49 1210.42 L1042.91 1210.42 L1042.32 1210.42 L1041.73 1210.42 L1041.15 1210.42 L1040.56 1210.42 L1039.98 1210.42 L1039.39 1210.42 L1038.8 1210.42 L1038.22 1210.42 L1037.63 1210.42 L1037.04 1210.42 L1036.46 1210.42 L1035.87 1210.42 L1035.28 1210.42 L1034.7 1210.42 L1034.11 1210.42 L1033.52 1210.42 L1032.94 1210.42 L1032.35 1210.42 L1031.77 1210.42 L1031.18 1210.42 L1030.59 1210.42 L1030.01 1210.42 L1029.42 1210.42 L1028.83 1210.42 L1028.25 1210.42 L1027.66 1210.42 L1027.07 1210.42 L1026.49 1210.42 L1025.9 1210.42 L1025.32 1210.42 L1024.73 1210.42 L1024.14 1210.42 L1023.56 1210.42 L1022.97 1210.42 L1022.38 1210.42 L1021.8 1210.42 L1021.21 1210.42 L1020.62 1210.42 L1020.04 1210.42 L1019.45 1210.42 L1018.86 1210.42 L1018.28 1210.42 L1017.69 1210.42 L1017.11 1210.42 L1016.52 1210.42 L1015.93 1210.42 L1015.35 1210.42 L1014.76 1210.42 L1014.17 1210.42 L1013.59 1210.42 L1013 1210.42 L1012.41 1210.42 L1011.83 1210.42 L1011.24 1210.42 L1010.65 1210.42 L1010.07 1210.42 L1009.48 1210.42 L1008.9 1210.42 L1008.31 1210.42 L1007.72 1210.42 L1007.14 1210.42 L1006.55 1210.42 L1005.96 1210.42 L1005.38 1210.42 L1004.79 1210.42 L1004.2 1210.42 L1003.62 1210.42 L1003.03 1210.42 L1002.44 1210.42 L1001.86 1210.42 L1001.27 1210.42 L1000.69 1210.42 L1000.1 1210.42 L999.513 1210.42 L998.926 1210.42 L998.34 1210.42 L997.754 1210.42 L997.167 1210.42 L996.581 1210.42 L995.994 1210.42 L995.408 1210.42 L994.822 1210.42 L994.235 1210.42 L993.649 1210.42 L993.062 1210.42 L992.476 1210.42 L991.889 1210.42 L991.303 1210.42 L990.717 1210.42 L990.13 1210.42 L989.544 1210.42 L988.957 1210.42 L988.371 1210.42 L987.785 1210.42 L987.198 1210.42 L986.612 1210.42 L986.025 1210.42  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1210.51 986.612,1210.51 987.198,1210.51 987.785,1210.51 988.371,1210.51 988.957,1210.51 989.544,1210.51 990.13,1210.51 990.717,1210.51 991.303,1210.51 991.889,1210.51 992.476,1210.51 993.062,1210.51 993.649,1210.51 994.235,1210.51 994.822,1210.51 995.408,1210.51 995.994,1210.51 996.581,1210.51 997.167,1210.51 997.754,1210.51 998.34,1210.51 998.926,1210.51 999.513,1210.51 1000.1,1210.51 1000.69,1210.51 1001.27,1210.51 1001.86,1210.51 1002.44,1210.51 1003.03,1210.51 1003.62,1210.51 1004.2,1210.51 1004.79,1210.51 1005.38,1210.51 1005.96,1210.51 1006.55,1210.51 1007.14,1210.51 1007.72,1210.51 1008.31,1210.51 1008.9,1210.51 1009.48,1210.51 1010.07,1210.51 1010.65,1210.51 1011.24,1210.51 1011.83,1210.51 1012.41,1210.51 1013,1210.51 1013.59,1210.51 1014.17,1210.51 1014.76,1210.51 1015.35,1210.51 1015.93,1210.51 1016.52,1210.51 1017.11,1210.51 1017.69,1210.51 1018.28,1210.51 1018.86,1210.51 1019.45,1210.51 1020.04,1210.51 1020.62,1210.51 1021.21,1210.51 1021.8,1210.51 1022.38,1210.51 1022.97,1210.51 1023.56,1210.51 1024.14,1210.51 1024.73,1210.51 1025.32,1210.51 1025.9,1210.51 1026.49,1210.51 1027.07,1210.51 1027.66,1210.51 1028.25,1210.51 1028.83,1210.51 1029.42,1210.51 1030.01,1210.51 1030.59,1210.51 1031.18,1210.51 1031.77,1210.51 1032.35,1210.51 1032.94,1210.51 1033.52,1210.51 1034.11,1210.51 1034.7,1210.51 1035.28,1210.51 1035.87,1210.51 1036.46,1210.51 1037.04,1210.51 1037.63,1210.51 1038.22,1210.51 1038.8,1210.51 1039.39,1210.51 1039.98,1210.51 1040.56,1210.51 1041.15,1210.51 1041.73,1210.51 1042.32,1210.51 1042.91,1210.51 1043.49,1210.51 1044.08,1210.51 1044.67,1210.51 1045.25,1210.51 1045.84,1210.51 1046.43,1210.51 1047.01,1210.51 1047.6,1210.51 1048.19,1210.51 1048.77,1210.51 1049.36,1210.51 1049.94,1210.51 1050.53,1210.51 1051.12,1210.51 1051.7,1210.51 1052.29,1210.51 1052.88,1210.51 1053.46,1210.51 1054.05,1210.51 1054.64,1210.51 1055.22,1210.51 1055.81,1210.51 1056.39,1210.51 1056.98,1210.51 1057.57,1210.51 1058.15,1210.51 1058.74,1210.51 1059.33,1210.51 1059.91,1210.51 1060.5,1210.51 1061.09,1210.51 1061.67,1210.51 1062.26,1210.51 1062.85,1210.51 1063.43,1210.51 1064.02,1210.51 1064.6,1210.51 1065.19,1210.51 1065.78,1210.51 1066.36,1210.51 1066.95,1210.51 1067.54,1210.51 1068.12,1210.51 1068.71,1210.51 1069.3,1210.51 1069.88,1210.51 1070.47,1210.51 1071.06,1210.51 1071.64,1210.51 1072.23,1210.51 1072.81,1210.51 1073.4,1210.51 1073.99,1210.51 1074.57,1210.51 1075.16,1210.51 1075.75,1210.51 1076.33,1210.51 1076.92,1210.51 1077.51,1210.51 1078.09,1210.51 1078.68,1210.51 1079.26,1210.51 1079.85,1210.51 1080.44,1210.51 1081.02,1210.51 1081.61,1210.51 1082.2,1210.51 1082.78,1210.51 1083.37,1210.51 1083.96,1210.51 1084.54,1210.51 1085.13,1210.51 1085.72,1210.51 1086.3,1210.51 1086.89,1210.51 1087.47,1210.51 1088.06,1210.51 1088.65,1210.51 1089.23,1210.51 1089.82,1210.51 1090.41,1210.51 1090.99,1210.51 1091.58,1210.51 1092.17,1210.51 1092.75,1210.51 1093.34,1210.51 1093.93,1210.51 1094.51,1210.51 1095.1,1210.51 1095.68,1210.51 1096.27,1210.51 1096.86,1210.51 1097.44,1210.51 1098.03,1210.51 1098.62,1210.51 1099.2,1210.51 1099.79,1210.51 1100.38,1210.51 1100.96,1210.51 1101.55,1210.51 1102.14,1210.51 1102.72,1210.51 1103.31,1210.51 1103.89,1210.51 1104.48,1210.51 1105.07,1210.51 1105.65,1210.51 1106.24,1210.51 1106.83,1210.51 1107.41,1210.51 1108,1210.51 1108.59,1210.51 1109.17,1210.51 1109.76,1210.51 1110.34,1210.51 1110.93,1210.51 1111.52,1210.51 1112.1,1210.51 1112.69,1210.51 1113.28,1210.51 1113.86,1210.51 1114.45,1210.51 1115.04,1210.51 1115.62,1210.51 1116.21,1210.51 1116.8,1210.51 1117.38,1210.51 1117.97,1210.51 1118.55,1210.51 1119.14,1210.51 1119.73,1210.51 1120.31,1210.51 1120.9,1210.51 1121.49,1210.51 1122.07,1210.51 1122.66,1210.51 1123.25,1210.51 1123.83,1210.51 1124.42,1210.51 1125.01,1210.51 1125.59,1210.51 1126.18,1210.51 1126.76,1210.51 1127.35,1210.51 1127.94,1210.51 1128.52,1210.51 1129.11,1210.51 1129.7,1210.51 1130.28,1210.51 1130.87,1210.51 1131.46,1210.51 1132.04,1210.51 1132.63,1210.51 1133.21,1210.51 1133.8,1210.51 1134.39,1210.51 1134.97,1210.51 1135.56,1210.51 1136.15,1210.51 1136.73,1210.51 1137.32,1210.51 1137.91,1210.51 1138.49,1210.51 1139.08,1210.51 1139.67,1210.51 1140.25,1210.51 1140.84,1210.51 1141.42,1210.51 1142.01,1210.51 1142.6,1210.51 1143.18,1210.51 1143.77,1210.51 1144.36,1210.51 1144.94,1210.51 1145.53,1210.51 1146.12,1210.51 1146.7,1210.51 1147.29,1210.51 1147.88,1210.51 1148.46,1210.51 1149.05,1210.51 1149.63,1210.51 1150.22,1210.51 1150.81,1210.51 1151.39,1210.51 1151.98,1210.51 1152.57,1210.51 1153.15,1210.51 1153.74,1210.51 1154.33,1210.51 1154.91,1210.51 1155.5,1210.51 1156.09,1210.51 1156.67,1210.51 1157.26,1210.51 1157.84,1210.51 1158.43,1210.51 1159.02,1210.51 1159.6,1210.51 1160.19,1210.51 1160.78,1210.51 1161.36,1210.51 1161.95,1210.51 1162.54,1210.51 1163.12,1210.51 1163.71,1210.51 1164.29,1210.51 1164.88,1210.51 1165.47,1210.51 1166.05,1210.51 1166.64,1210.51 1167.23,1210.51 1167.81,1210.51 1168.4,1210.51 1168.99,1210.51 1169.57,1210.51 1170.16,1210.51 1170.75,1210.51 1171.33,1210.51 1171.92,1210.51 1172.5,1210.51 1173.09,1210.51 1173.68,1210.51 1174.26,1210.51 1174.85,1210.51 1175.44,1210.51 1176.02,1210.51 1176.61,1210.51 1177.2,1210.51 1177.78,1210.51 1178.37,1210.51 1178.96,1210.51 1179.54,1210.51 1180.13,1210.51 1180.71,1210.51 1181.3,1210.51 1181.89,1210.51 1182.47,1210.51 1183.06,1210.51 1183.65,1210.51 1184.23,1210.51 1184.82,1210.51 1185.41,1210.51 1185.99,1210.51 1186.58,1210.51 1187.16,1210.51 1187.75,1210.51 1188.34,1210.51 1188.92,1210.51 1189.51,1210.51 1190.1,1210.51 1190.68,1210.51 1191.27,1210.51 1191.86,1210.51 1192.44,1210.51 1193.03,1210.51 1193.62,1210.51 1194.2,1210.51 1194.79,1210.51 1195.37,1210.51 1195.96,1210.51 1196.55,1210.51 1197.13,1210.51 1197.72,1210.51 1198.31,1210.51 1198.89,1210.51 1199.48,1210.51 1200.07,1210.51 1200.65,1210.51 1201.24,1210.51 1201.83,1210.51 1202.41,1210.51 1203,1210.51 1203.58,1210.51 1204.17,1210.51 1204.76,1210.51 1205.34,1210.51 1205.93,1210.51 1206.52,1210.51 1207.1,1210.51 1207.69,1210.51 1208.28,1210.51 1208.86,1210.51 1209.45,1210.51 1210.03,1210.51 1210.62,1210.51 1211.21,1210.51 1211.79,1210.51 1212.38,1210.51 1212.97,1210.51 1213.55,1210.51 1214.14,1210.51 1214.73,1210.51 1215.31,1210.51 1215.9,1210.51 1216.49,1210.51 1217.07,1210.51 1217.66,1210.51 1218.24,1210.51 1218.83,1210.51 1219.42,1210.51 1220,1210.51 1220.59,1210.51 1221.18,1210.51 1221.76,1210.51 1222.35,1210.51 1222.94,1210.51 1223.52,1210.51 1224.11,1210.51 1224.7,1210.51 1225.28,1210.51 1225.87,1210.51 1226.45,1210.51 1227.04,1210.51 1227.63,1210.51 1228.21,1210.51 1228.8,1210.51 1229.39,1210.51 1229.97,1210.51 1230.56,1210.51 1231.15,1210.51 1231.73,1210.51 1232.32,1210.51 1232.91,1210.51 1233.49,1210.51 1234.08,1210.51 1234.66,1210.51 1235.25,1210.51 1235.84,1210.51 1236.42,1210.51 1237.01,1210.51 1237.6,1210.51 1238.18,1210.51 1238.77,1210.51 1239.36,1210.51 1239.94,1210.51 1240.53,1210.51 1241.11,1210.51 1241.7,1210.51 1242.29,1210.51 1242.87,1210.51 1243.46,1210.51 1244.05,1210.51 1244.63,1210.51 1245.22,1210.51 1245.81,1210.51 1246.39,1210.51 1246.98,1210.51 1247.57,1210.51 1248.15,1210.51 1248.74,1210.51 1249.32,1210.51 1249.91,1210.51 1250.5,1210.51 1251.08,1210.51 1251.67,1210.51 1252.26,1210.51 1252.84,1210.51 1253.43,1210.51 1254.02,1210.51 1254.6,1210.51 1255.19,1210.51 1255.78,1210.51 1256.36,1210.51 1256.95,1210.51 1257.53,1210.51 1258.12,1210.51 1258.71,1210.51 1259.29,1210.51 1259.88,1210.51 1260.47,1210.51 1261.05,1210.51 1261.64,1210.51 1262.23,1210.51 1262.81,1210.51 1263.4,1210.51 1263.98,1210.51 1264.57,1210.51 1265.16,1210.51 1265.74,1210.51 1266.33,1210.51 1266.92,1210.51 1267.5,1210.51 1268.09,1210.51 1268.68,1210.51 1269.26,1210.51 1269.85,1210.51 1270.44,1210.51 1271.02,1210.51 1271.61,1210.51 1272.19,1210.51 1272.78,1210.51 1273.37,1210.51 1273.95,1210.51 1274.54,1210.51 1275.13,1210.51 1275.71,1210.51 1276.3,1210.51 1276.89,1210.51 1277.47,1210.51 1278.06,1210.51 1278.65,1210.51 1279.23,1210.51 1279.82,1210.51 1280.4,1210.51 1280.99,1210.51 1281.58,1210.51 1282.16,1210.51 1282.75,1210.51 1283.34,1210.51 1283.92,1210.51 1284.51,1210.51 1285.1,1210.51 1285.68,1210.51 1286.27,1210.51 1286.86,1210.51 1287.44,1210.51 1288.03,1210.51 1288.61,1210.51 1289.2,1210.51 1289.79,1210.51 1290.37,1210.51 1290.96,1210.51 1291.55,1210.51 1292.13,1210.51 1292.72,1210.51 1293.31,1210.51 1293.89,1210.51 1294.48,1210.51 1295.06,1210.51 1295.65,1210.51 1296.24,1210.51 1296.82,1210.51 1297.41,1210.51 1298,1210.51 1298.58,1210.51 1299.17,1210.51 1299.76,1210.51 1300.34,1210.51 1300.93,1210.51 1301.52,1210.51 1302.1,1210.51 1302.69,1210.51 1303.27,1210.51 1303.86,1210.51 1304.45,1210.51 1305.03,1210.51 1305.62,1210.51 1306.21,1210.51 1306.79,1210.51 1307.38,1210.51 1307.97,1210.51 1308.55,1210.51 1309.14,1210.51 1309.73,1210.51 1310.31,1210.51 1310.9,1210.51 1311.48,1210.51 1312.07,1210.51 1312.66,1210.51 1313.24,1210.51 1313.83,1210.51 1314.42,1210.51 1315,1210.51 1315.59,1210.51 1316.18,1210.51 1316.76,1210.51 1317.35,1210.51 1317.93,1210.51 1318.52,1210.51 1319.11,1210.51 1319.69,1210.51 1320.28,1210.51 1320.87,1210.51 1321.45,1210.51 1322.04,1210.51 1322.63,1210.51 1323.21,1210.51 1323.8,1210.51 1324.39,1210.51 1324.97,1210.51 1325.56,1210.51 1326.14,1210.51 1326.73,1210.51 1327.32,1210.51 1327.9,1210.51 1328.49,1210.51 1329.08,1210.51 1329.66,1210.51 1330.25,1210.51 1330.84,1210.51 1331.42,1210.51 1332.01,1210.51 1332.6,1210.51 1333.18,1210.51 1333.77,1210.51 1334.35,1210.51 1334.94,1210.51 1335.53,1210.51 1336.11,1210.51 1336.7,1210.51 1337.29,1210.51 1337.87,1210.51 1338.46,1210.51 1339.05,1210.51 1339.63,1210.51 1340.22,1210.51 1340.8,1210.51 1341.39,1210.51 1341.98,1210.51 1342.56,1210.51 1343.15,1210.51 1343.74,1210.51 1344.32,1210.51 1344.91,1210.51 1345.5,1210.51 1346.08,1210.51 1346.67,1210.51 1347.26,1210.51 1347.84,1210.51 1348.43,1210.51 1349.01,1210.51 1349.6,1210.51 1350.19,1210.51 1350.77,1210.51 1351.36,1210.51 1351.95,1210.51 1352.53,1210.51 1353.12,1210.51 1353.71,1210.51 1354.29,1210.51 1354.88,1210.51 1355.47,1210.51 1356.05,1210.51 1356.64,1210.51 1357.22,1210.51 1357.81,1210.51 1358.4,1210.51 1358.98,1210.51 1359.57,1210.51 1360.16,1210.51 1360.74,1210.51 1361.33,1210.51 1361.92,1210.51 1362.5,1210.51 1363.09,1210.51 1363.68,1210.51 1364.26,1210.51 1364.85,1210.51 1365.43,1210.51 1366.02,1210.51 1366.61,1210.51 1367.19,1210.51 1367.78,1210.51 1368.37,1210.51 1368.95,1210.51 1369.54,1210.51 1370.13,1210.51 1370.71,1210.51 1371.3,1210.51 1371.88,1210.51 1372.47,1210.51 1373.06,1210.51 1373.64,1210.51 1374.23,1210.51 1374.82,1210.51 1375.4,1210.51 1375.99,1210.51 1376.58,1210.51 1377.16,1210.51 1377.75,1210.51 1378.34,1210.51 1378.92,1210.51 1379.51,1210.51 1380.09,1210.51 1380.68,1210.51 1381.27,1210.51 1381.85,1210.51 1382.44,1210.51 1383.03,1210.51 1383.61,1210.51 1384.2,1210.51 1384.79,1210.51 1385.37,1210.51 1385.96,1210.51 1386.55,1210.51 1387.13,1210.51 1387.72,1210.51 1388.3,1210.51 1388.89,1210.51 1389.48,1210.51 1390.06,1210.51 1390.65,1210.51 1391.24,1210.51 1391.82,1210.51 1392.41,1210.51 1393,1210.51 1393.58,1210.51 1394.17,1210.51 1394.75,1210.51 1395.34,1210.51 1395.93,1210.51 1396.51,1210.51 1397.1,1210.51 1397.69,1210.51 1398.27,1210.51 1398.86,1210.51 1399.45,1210.51 1400.03,1210.51 1400.62,1210.51 1401.21,1210.51 1401.79,1210.51 1402.38,1210.51 1402.96,1210.51 1403.55,1210.51 1404.14,1210.51 1404.72,1210.51 1405.31,1210.51 1405.9,1210.51 1406.48,1210.51 1407.07,1210.51 1407.66,1210.51 1408.24,1210.51 1408.83,1210.51 1409.42,1210.51 1410,1210.51 1410.59,1210.51 1411.17,1210.51 1411.76,1210.51 1412.35,1210.51 1412.93,1210.51 1413.52,1210.51 1414.11,1210.51 1414.69,1210.51 1415.28,1210.51 1415.87,1210.51 1416.45,1210.51 1417.04,1210.51 1417.63,1210.51 1418.21,1210.51 1418.8,1210.51 1419.38,1210.51 1419.97,1210.51 1420.56,1210.51 1421.14,1210.51 1421.73,1210.51 1422.32,1210.51 1422.9,1210.51 1423.49,1210.51 1424.08,1210.51 1424.66,1210.51 1425.25,1210.51 1425.83,1210.51 1426.42,1210.51 1427.01,1210.51 1427.59,1210.51 1428.18,1210.51 1428.77,1210.51 1429.35,1210.51 1429.94,1210.51 1430.53,1210.51 1431.11,1210.51 1431.7,1210.51 1432.29,1210.51 1432.87,1210.51 1433.46,1210.51 1434.04,1210.51 1434.63,1210.51 1435.22,1210.51 1435.8,1210.51 1436.39,1210.51 1436.98,1210.51 1437.56,1210.51 1438.15,1210.51 1438.74,1210.51 1439.32,1210.51 1439.91,1210.51 1440.5,1210.51 1441.08,1210.51 1441.67,1210.51 1442.25,1210.51 1442.84,1210.51 1443.43,1210.51 1444.01,1210.51 1444.6,1210.51 1445.19,1210.51 1445.77,1210.51 1446.36,1210.51 1446.95,1210.51 1447.53,1210.51 1448.12,1210.51 1448.7,1210.51 1449.29,1210.51 1449.88,1210.51 1450.46,1210.51 1451.05,1210.51 1451.64,1210.51 1452.22,1210.51 1452.81,1210.51 1453.4,1210.51 1453.98,1210.51 1454.57,1210.51 1455.16,1210.51 1455.74,1210.51 1456.33,1210.51 1456.91,1210.51 1457.5,1210.51 1458.09,1210.51 1458.67,1210.51 1459.26,1210.51 1459.85,1210.51 1460.43,1210.51 1461.02,1210.51 1461.61,1210.51 1462.19,1210.51 1462.78,1210.51 1463.37,1210.51 1463.95,1210.51 1464.54,1210.51 1465.12,1210.51 1465.71,1210.51 1466.3,1210.51 1466.88,1210.51 1467.47,1210.51 1468.06,1210.51 1468.64,1210.51 1469.23,1210.51 1469.82,1210.51 1470.4,1210.51 1470.99,1210.51 1471.57,1210.51 1472.16,1210.51 1472.75,1210.51 1473.33,1210.51 1473.92,1210.51 1474.51,1210.51 1475.09,1210.51 1475.68,1210.51 1476.27,1210.51 1476.85,1210.51 1477.44,1210.51 1478.03,1210.51 1478.61,1210.51 1479.2,1210.51 1479.78,1210.51 1480.37,1210.51 1480.96,1210.51 1481.54,1210.51 1482.13,1210.51 1482.72,1210.51 1483.3,1210.51 1483.89,1210.51 1484.48,1210.51 1485.06,1210.51 1485.65,1210.51 1486.24,1210.51 1486.82,1210.51 1487.41,1210.51 1487.99,1210.51 1488.58,1210.51 1489.17,1210.51 1489.75,1210.51 1490.34,1210.51 1490.93,1210.51 1491.51,1210.51 1492.1,1210.51 1492.69,1210.51 1493.27,1210.51 1493.86,1210.51 1494.45,1210.51 1495.03,1210.51 1495.62,1210.51 1496.2,1210.51 1496.79,1210.51 1497.38,1210.51 1497.96,1210.51 1498.55,1210.51 1499.14,1210.51 1499.72,1210.51 1500.31,1210.51 1500.9,1210.51 1501.48,1210.51 1502.07,1210.51 1502.65,1210.51 1503.24,1210.51 1503.83,1210.51 1504.41,1210.51 1505,1210.51 1505.59,1210.51 1506.17,1210.51 1506.76,1210.51 1507.35,1210.51 1507.93,1210.51 1508.52,1210.51 1509.11,1210.51 1509.69,1210.51 1510.28,1210.51 1510.86,1210.51 1511.45,1210.51 1512.04,1210.51 1512.62,1210.51 1513.21,1210.51 1513.8,1210.51 1514.38,1210.51 1514.97,1210.51 1515.56,1210.51 1516.14,1210.51 1516.73,1210.51 1517.32,1210.51 1517.9,1210.51 1518.49,1210.51 1519.07,1210.51 1519.66,1210.51 1520.25,1210.51 1520.83,1210.51 1521.42,1210.51 1522.01,1210.51 1522.59,1210.51 1523.18,1210.51 1523.77,1210.51 1524.35,1210.51 1524.94,1210.51 1525.52,1210.51 1526.11,1210.51 1526.7,1210.51 1527.28,1210.51 1527.87,1210.51 1528.46,1210.51 1529.04,1210.51 1529.63,1210.51 1530.22,1210.51 1530.8,1210.51 1531.39,1210.51 1531.98,1210.51 1532.56,1210.51 1533.15,1210.51 1533.73,1210.51 1534.32,1210.51 1534.91,1210.51 1535.49,1210.51 1536.08,1210.51 1536.67,1210.51 1537.25,1210.51 1537.84,1210.51 1538.43,1210.51 1539.01,1210.51 1539.6,1210.51 1540.19,1210.51 1540.77,1210.51 1541.36,1210.51 1541.94,1210.51 1542.53,1210.51 1543.12,1210.51 1543.7,1210.51 1544.29,1210.51 1544.88,1210.51 1545.46,1210.51 1546.05,1210.51 1546.64,1210.51 1547.22,1210.51 1547.81,1210.51 1548.4,1210.51 1548.98,1210.51 1549.57,1210.51 1550.15,1210.51 1550.74,1210.51 1551.33,1210.51 1551.91,1210.51 1552.5,1210.51 1553.09,1210.51 1553.67,1210.51 1554.26,1210.51 1554.85,1210.51 1555.43,1210.51 1556.02,1210.51 1556.6,1210.51 1557.19,1210.51 1557.78,1210.51 1558.36,1210.51 1558.95,1210.51 1559.54,1210.51 1560.12,1210.51 1560.71,1210.51 1561.3,1210.51 1561.88,1210.51 1562.47,1210.51 1563.06,1210.51 1563.64,1210.51 1564.23,1210.51 1564.81,1210.51 1565.4,1210.51 1565.99,1210.51 1566.57,1210.51 1567.16,1210.51 1567.75,1210.51 1568.33,1210.51 1568.92,1210.51 1569.51,1210.51 1570.09,1210.51 1570.68,1210.51 1571.27,1210.51 1571.85,1210.51 1572.44,1210.51 1573.02,1210.51 1573.61,1210.51 1574.2,1210.51 1574.78,1210.51 1575.37,1210.51 1575.96,1210.51 1576.54,1210.51 1577.13,1210.51 1577.72,1210.51 1578.3,1210.51 1578.89,1210.51 1579.47,1210.51 1580.06,1210.51 1580.65,1210.51 1581.23,1210.51 1581.82,1210.51 1582.41,1210.51 1582.99,1210.51 1583.58,1210.51 1584.17,1210.51 1584.75,1210.51 1585.34,1210.51 1585.93,1210.51 1586.51,1210.51 1587.1,1210.51 1587.68,1210.51 1588.27,1210.51 1588.86,1210.51 1589.44,1210.51 1590.03,1210.51 1590.62,1210.51 1591.2,1210.51 1591.79,1210.51 1592.38,1210.51 1592.96,1210.51 1593.55,1210.51 1594.14,1210.51 1594.72,1210.51 1595.31,1210.51 1595.89,1210.51 1596.48,1210.51 1597.07,1210.51 1597.65,1210.51 1598.24,1210.51 1598.83,1210.51 1599.41,1210.51 1600,1210.51 1600.59,1210.51 1601.17,1210.51 1601.76,1210.51 1602.34,1210.51 1602.93,1210.51 1603.52,1210.51 1604.1,1210.51 1604.69,1210.51 1605.28,1210.51 1605.86,1210.51 1606.45,1210.51 1607.04,1210.51 1607.62,1210.51 1608.21,1210.51 1608.8,1210.51 1609.38,1210.51 1609.97,1210.51 1610.55,1210.51 1611.14,1210.51 1611.73,1210.51 1612.31,1210.51 1612.9,1210.51 1613.49,1210.51 1614.07,1210.51 1614.66,1210.51 1615.25,1210.51 1615.83,1210.51 1616.42,1210.51 1617.01,1210.51 1617.59,1210.51 1618.18,1210.51 1618.76,1210.51 1619.35,1210.51 1619.94,1210.51 1620.52,1210.51 1621.11,1210.51 1621.7,1210.51 1622.28,1210.51 1622.87,1210.51 1623.46,1210.51 1624.04,1210.51 1624.63,1210.51 1625.22,1210.51 1625.8,1210.51 1626.39,1210.51 1626.97,1210.51 1627.56,1210.51 1628.15,1210.51 1628.73,1210.51 1629.32,1210.51 1629.91,1210.51 1630.49,1210.51 1631.08,1210.51 1631.67,1210.51 1632.25,1210.51 1632.84,1210.51 1633.42,1210.51 1634.01,1210.51 1634.6,1210.51 1635.18,1210.51 1635.77,1210.51 1636.36,1210.51 1636.94,1210.51 1637.53,1210.51 1638.12,1210.51 1638.7,1210.51 1639.29,1210.51 1639.88,1210.51 1640.46,1210.51 1641.05,1210.51 1641.63,1210.51 1642.22,1210.51 1642.81,1210.51 1643.39,1210.51 1643.98,1210.51 1644.57,1210.51 1645.15,1210.51 1645.74,1210.51 1646.33,1210.51 1646.91,1210.51 1647.5,1210.51 1648.09,1210.51 1648.67,1210.51 1649.26,1210.51 1649.84,1210.51 1650.43,1210.51 1651.02,1210.51 1651.6,1210.51 1652.19,1210.51 1652.78,1210.51 1653.36,1210.51 1653.95,1210.51 1654.54,1210.51 1655.12,1210.51 1655.71,1210.51 1656.29,1210.51 1656.88,1210.51 1657.47,1210.51 1658.05,1210.51 1658.64,1210.51 1659.23,1210.51 1659.81,1210.51 1660.4,1210.51 1660.99,1210.51 1661.57,1210.51 1662.16,1210.51 1662.75,1210.51 1663.33,1210.51 1663.92,1210.51 1664.5,1210.51 1665.09,1210.51 1665.68,1210.51 1666.26,1210.51 1666.85,1210.51 1667.44,1210.51 1668.02,1210.51 1668.61,1210.51 1669.2,1210.51 1669.78,1210.51 1670.37,1210.51 1670.96,1210.51 1671.54,1210.51 1672.13,1210.51 1672.71,1210.51 1673.3,1210.51 1673.89,1210.51 1674.47,1210.51 1675.06,1210.51 1675.65,1210.51 1676.23,1210.51 1676.82,1210.51 1677.41,1210.51 1677.99,1210.51 1678.58,1210.51 1679.17,1210.51 1679.75,1210.51 1680.34,1210.51 1680.92,1210.51 1681.51,1210.51 1682.1,1210.51 1682.68,1210.51 1683.27,1210.51 1683.86,1210.51 1684.44,1210.51 1685.03,1210.51 1685.62,1210.51 1686.2,1210.51 1686.79,1210.51 1687.37,1210.51 1687.96,1210.51 1688.55,1210.51 1689.13,1210.51 1689.72,1210.51 1690.31,1210.51 1690.89,1210.51 1691.48,1210.51 1692.07,1210.51 1692.65,1210.51 1693.24,1210.51 1693.83,1210.51 1694.41,1210.51 1695,1210.51 1695.58,1210.51 1696.17,1210.51 1696.76,1210.51 1697.34,1210.51 1697.93,1210.51 1698.52,1210.51 1699.1,1210.51 1699.69,1210.51 1700.28,1210.51 1700.86,1210.51 1701.45,1210.51 1702.04,1210.51 1702.62,1210.51 1703.21,1210.51 1703.79,1210.51 1704.38,1210.51 1704.97,1210.51 1705.55,1210.51 1706.14,1210.51 1706.73,1210.51 1707.31,1210.51 1707.9,1210.51 1708.49,1210.51 1709.07,1210.51 1709.66,1210.51 1710.24,1210.51 1710.83,1210.51 1711.42,1210.51 1712,1210.51 1712.59,1210.51 1713.18,1210.51 1713.76,1210.51 1714.35,1210.51 1714.94,1210.51 1715.52,1210.51 1716.11,1210.51 1716.7,1210.51 1717.28,1210.51 1717.87,1210.51 1718.45,1210.51 1719.04,1210.51 1719.63,1210.51 1720.21,1210.51 1720.8,1210.51 1721.39,1210.51 1721.97,1210.51 1722.56,1210.51 1723.15,1210.51 1723.73,1210.51 1724.32,1210.51 1724.91,1210.51 1725.49,1210.51 1726.08,1210.51 1726.66,1210.51 1727.25,1210.51 1727.84,1210.51 1728.42,1210.51 1729.01,1210.51 1729.6,1210.51 1730.18,1210.51 1730.77,1210.51 1731.36,1210.51 1731.94,1210.51 1732.53,1210.51 1733.11,1210.51 1733.7,1210.51 1734.29,1210.51 1734.87,1210.51 1735.46,1210.51 1736.05,1210.51 1736.63,1210.51 1737.22,1210.51 1737.81,1210.51 1738.39,1210.51 1738.98,1210.51 1739.57,1210.51 1740.15,1210.51 1740.74,1210.51 1741.32,1210.51 1741.91,1210.51 1742.5,1210.51 1743.08,1210.51 1743.67,1210.51 1744.26,1210.51 1744.84,1210.51 1745.43,1210.51 1746.02,1210.51 1746.6,1210.51 1747.19,1210.51 1747.78,1210.51 1748.36,1210.51 1748.95,1210.51 1749.53,1210.51 1750.12,1210.51 1750.71,1210.51 1751.29,1210.51 1751.88,1210.51 1752.47,1210.51 1753.05,1210.51 1753.64,1210.51 1754.23,1210.51 1754.81,1210.51 1755.4,1210.51 1755.99,1210.51 1756.57,1210.51 1757.16,1210.51 1757.74,1210.51 1758.33,1210.51 1758.92,1210.51 1759.5,1210.51 1760.09,1210.51 1760.68,1210.51 1761.26,1210.51 1761.85,1210.51 1762.44,1210.51 1763.02,1210.51 1763.61,1210.51 1764.19,1210.51 1764.78,1210.51 1765.37,1210.51 1765.95,1210.51 1766.54,1210.51 1767.13,1210.51 1767.71,1210.51 1768.3,1210.51 1768.89,1210.51 1769.47,1210.51 1770.06,1210.51 1770.65,1210.51 1771.23,1210.51 1771.82,1210.51 1772.4,1210.51 1772.99,1210.51 1773.58,1210.51 1774.16,1210.51 1774.75,1210.51 1775.34,1210.51 1775.92,1210.51 1776.51,1210.51 1777.1,1210.51 1777.68,1210.51 1778.27,1210.51 1778.86,1210.51 1779.44,1210.51 1780.03,1210.51 1780.61,1210.51 1781.2,1210.51 1781.79,1210.51 1782.37,1210.51 1782.96,1210.51 1783.55,1210.51 1784.13,1210.51 1784.72,1210.51 1785.31,1210.51 1785.89,1210.51 1786.48,1210.51 1787.06,1210.51 1787.65,1210.51 1788.24,1210.51 1788.82,1210.51 1789.41,1210.51 1790,1210.51 1790.58,1210.51 1791.17,1210.51 1791.76,1210.51 1792.34,1210.51 1792.93,1210.51 1793.52,1210.51 1794.1,1210.51 1794.69,1210.51 1795.27,1210.51 1795.86,1210.51 1796.45,1210.51 1797.03,1210.51 1797.62,1210.51 1798.21,1210.51 1798.79,1210.51 1799.38,1210.51 1799.97,1210.51 1800.55,1210.51 1801.14,1210.51 1801.73,1210.51 1802.31,1210.51 1802.9,1210.51 1803.48,1210.51 1804.07,1210.51 1804.66,1210.51 1805.24,1210.51 1805.83,1210.51 1806.42,1210.51 1807,1210.51 1807.59,1210.51 1808.18,1210.51 1808.76,1210.51 1809.35,1210.51 1809.94,1210.51 1810.52,1210.51 1811.11,1210.51 1811.69,1210.51 1812.28,1210.51 1812.87,1210.51 1813.45,1210.51 1814.04,1210.51 1814.63,1210.51 1815.21,1210.51 1815.8,1210.51 1816.39,1210.51 1816.97,1210.51 1817.56,1210.51 1818.14,1210.51 1818.73,1210.51 1819.32,1210.51 1819.9,1210.51 1820.49,1210.51 1821.08,1210.51 1821.66,1210.51 1822.25,1210.51 1822.84,1210.51 1823.42,1210.51 1824.01,1210.51 1824.6,1210.51 1825.18,1210.51 1825.77,1210.51 1826.35,1210.51 1826.94,1210.51 1827.53,1210.51 1828.11,1210.51 1828.7,1210.51 1829.29,1210.51 1829.87,1210.51 1830.46,1210.51 1831.05,1210.51 1831.63,1210.51 1832.22,1210.51 1832.81,1210.51 1833.39,1210.51 1833.98,1210.51 1834.56,1210.51 1835.15,1210.51 1835.74,1210.51 1836.32,1210.51 1836.91,1210.51 1837.5,1210.51 1838.08,1210.51 1838.67,1210.51 1839.26,1210.51 1839.84,1210.51 1840.43,1210.51 1841.01,1210.51 1841.6,1210.51 1842.19,1210.51 1842.77,1210.51 1843.36,1210.51 1843.95,1210.51 1844.53,1210.51 1845.12,1210.51 1845.71,1210.51 1846.29,1210.51 1846.88,1210.51 1847.47,1210.51 1848.05,1210.51 1848.64,1210.51 1849.22,1210.51 1849.81,1210.51 1850.4,1210.51 1850.98,1210.51 1851.57,1210.51 1852.16,1210.51 1852.74,1210.51 1853.33,1210.51 1853.92,1210.51 1854.5,1210.51 1855.09,1210.51 1855.68,1210.51 1856.26,1210.51 1856.85,1210.51 1857.43,1210.51 1858.02,1210.51 1858.61,1210.51 1859.19,1210.51 1859.78,1210.51 1860.37,1210.51 1860.95,1210.51 1861.54,1210.51 1862.13,1210.51 1862.71,1210.51 1863.3,1210.51 1863.88,1210.51 1864.47,1210.51 1865.06,1210.51 1865.64,1210.51 1866.23,1210.51 1866.82,1210.51 1867.4,1210.51 1867.99,1210.51 1868.58,1210.51 1869.16,1210.51 1869.75,1210.51 1870.34,1210.51 1870.92,1210.51 1871.51,1210.51 1872.09,1210.51 1872.68,1210.51 1873.27,1210.51 1873.85,1210.51 1874.44,1210.51 1875.03,1210.51 1875.61,1210.51 1876.2,1210.51 1876.79,1210.51 1877.37,1210.51 1877.96,1210.51 1878.55,1210.51 1879.13,1210.51 1879.72,1210.51 1880.3,1210.51 1880.89,1210.51 1881.48,1210.51 1882.06,1210.51 1882.65,1210.51 1883.24,1210.51 1883.82,1210.51 1884.41,1210.51 1885,1210.51 1885.58,1210.51 1886.17,1210.51 1886.76,1210.51 1887.34,1210.51 1887.93,1210.51 1888.51,1210.51 1889.1,1210.51 1889.69,1210.51 1890.27,1210.51 1890.86,1210.51 1891.45,1210.51 1892.03,1210.51 1892.62,1210.51 1893.21,1210.51 1893.79,1210.51 1894.38,1210.51 1894.96,1210.51 1895.55,1210.51 1896.14,1210.51 1896.72,1210.51 1897.31,1210.51 1897.9,1210.51 1898.48,1210.51 1899.07,1210.51 1899.66,1210.51 1900.24,1210.51 1900.83,1210.51 1901.42,1210.51 1902,1210.51 1902.59,1210.51 1903.17,1210.51 1903.76,1210.51 1904.35,1210.51 1904.93,1210.51 1905.52,1210.51 1906.11,1210.51 1906.69,1210.51 1907.28,1210.51 1907.87,1210.51 1908.45,1210.51 1909.04,1210.51 1909.63,1210.51 1910.21,1210.51 1910.8,1210.51 1911.38,1210.51 1911.97,1210.51 1912.56,1210.51 1913.14,1210.51 1913.73,1210.51 1914.32,1210.51 1914.9,1210.51 1915.49,1210.51 1916.08,1210.51 1916.66,1210.51 1917.25,1210.51 1917.83,1210.51 1918.42,1210.51 1919.01,1210.51 1919.59,1210.51 1920.18,1210.51 1920.77,1210.51 1921.35,1210.51 1921.94,1210.51 1922.53,1210.51 1923.11,1210.51 1923.7,1210.51 1924.29,1210.51 1924.87,1210.51 1925.46,1210.51 1926.04,1210.51 1926.63,1210.51 1927.22,1210.51 1927.8,1210.51 1928.39,1210.51 1928.98,1210.51 1929.56,1210.51 1930.15,1210.51 1930.74,1210.51 1931.32,1210.51 1931.91,1210.51 1932.5,1210.51 1933.08,1210.51 1933.67,1210.51 1934.25,1210.51 1934.84,1210.51 1935.43,1210.51 1936.01,1210.51 1936.6,1210.51 1937.19,1210.51 1937.77,1210.51 1938.36,1210.51 1938.95,1210.51 1939.53,1210.51 1940.12,1210.51 1940.71,1210.51 1941.29,1210.51 1941.88,1210.51 1942.46,1210.51 1943.05,1210.51 1943.64,1210.51 1944.22,1210.51 1944.81,1210.51 1945.4,1210.51 1945.98,1210.51 1946.57,1210.51 1947.16,1210.51 1947.74,1210.51 1948.33,1210.51 1948.91,1210.51 1949.5,1210.51 1950.09,1210.51 1950.67,1210.51 1951.26,1210.51 1951.85,1210.51 1952.43,1210.51 1953.02,1210.51 1953.61,1210.51 1954.19,1210.51 1954.78,1210.51 1955.37,1210.51 1955.95,1210.51 1956.54,1210.51 1957.12,1210.51 1957.71,1210.51 1958.3,1210.51 1958.88,1210.51 1959.47,1210.51 1960.06,1210.51 1960.64,1210.51 1961.23,1210.51 1961.82,1210.51 1962.4,1210.51 1962.99,1210.51 1963.58,1210.51 1964.16,1210.51 1964.75,1210.51 1965.33,1210.51 1965.92,1210.51 1966.51,1210.51 1967.09,1210.51 1967.68,1210.51 1968.27,1210.51 1968.85,1210.51 1969.44,1210.51 1970.03,1210.51 1970.61,1210.51 1971.2,1210.51 1971.78,1210.51 1972.37,1210.51 1972.96,1210.51 1973.54,1210.51 1974.13,1210.51 1974.72,1210.51 1975.3,1210.51 1975.89,1210.51 1976.48,1210.51 1977.06,1210.51 1977.65,1210.51 1978.24,1210.51 1978.82,1210.51 1979.41,1210.51 1979.99,1210.51 1980.58,1210.51 1981.17,1210.51 1981.75,1210.51 1982.34,1210.51 1982.93,1210.51 1983.51,1210.51 1984.1,1210.51 1984.69,1210.51 1985.27,1210.51 1985.86,1210.51 1986.45,1210.51 1987.03,1210.51 1987.62,1210.51 1988.2,1210.51 1988.79,1210.51 1989.38,1210.51 1989.96,1210.51 1990.55,1210.51 1991.14,1210.51 1991.72,1210.51 1992.31,1210.51 1992.9,1210.51 1993.48,1210.51 1994.07,1210.51 1994.65,1210.51 1995.24,1210.51 1995.83,1210.51 1996.41,1210.51 1997,1210.51 1997.59,1210.51 1998.17,1210.51 1998.76,1210.51 1999.35,1210.51 1999.93,1210.51 2000.52,1210.51 2001.11,1210.51 2001.69,1210.51 2002.28,1210.51 2002.86,1210.51 2003.45,1210.51 2004.04,1210.51 2004.62,1210.51 2005.21,1210.51 2005.8,1210.51 2006.38,1210.51 2006.97,1210.51 2007.56,1210.51 2008.14,1210.51 2008.73,1210.51 2009.32,1210.51 2009.9,1210.51 2010.49,1210.51 2011.07,1210.51 2011.66,1210.51 2012.25,1210.51 2012.83,1210.51 2013.42,1210.51 2014.01,1210.51 2014.59,1210.51 2015.18,1210.51 2015.77,1210.51 2016.35,1210.51 2016.94,1210.51 2017.53,1210.51 2018.11,1210.51 2018.7,1210.51 2019.28,1210.51 2019.87,1210.51 2020.46,1210.51 2021.04,1210.51 2021.63,1210.51 2022.22,1210.51 2022.8,1210.51 2023.39,1210.51 2023.98,1210.51 2024.56,1210.51 2025.15,1210.51 2025.73,1210.51 2026.32,1210.51 2026.91,1210.51 2027.49,1210.51 2028.08,1210.51 2028.67,1210.51 2029.25,1210.51 2029.84,1210.51 2030.43,1210.51 2031.01,1210.51 2031.6,1210.51 2032.19,1210.51 2032.77,1210.51 2033.36,1210.51 2033.94,1210.51 2034.53,1210.51 2035.12,1210.51 2035.7,1210.51 2036.29,1210.51 2036.88,1210.51 2037.46,1210.51 2038.05,1210.51 2038.64,1210.51 2039.22,1210.51 2039.81,1210.51 2040.4,1210.51 2040.98,1210.51 2041.57,1210.51 2042.15,1210.51 2042.74,1210.51 2043.33,1210.51 2043.91,1210.51 2044.5,1210.51 2045.09,1210.51 2045.67,1210.51 2046.26,1210.51 2046.85,1210.51 2047.43,1210.51 2048.02,1210.51 2048.6,1210.51 2049.19,1210.51 2049.78,1210.51 2050.36,1210.51 2050.95,1210.51 2051.54,1210.51 2052.12,1210.51 2052.71,1210.51 2053.3,1210.51 2053.88,1210.51 2054.47,1210.51 2055.06,1210.51 2055.64,1210.51 2056.23,1210.51 2056.81,1210.51 2057.4,1210.51 2057.99,1210.51 2058.57,1210.51 2059.16,1210.51 2059.75,1210.51 2060.33,1210.51 2060.92,1210.51 2061.51,1210.51 2062.09,1210.51 2062.68,1210.51 2063.27,1210.51 2063.85,1210.51 2064.44,1210.51 2065.02,1210.51 2065.61,1210.51 2066.2,1210.51 2066.78,1210.51 2067.37,1210.51 2067.96,1210.51 2068.54,1210.51 2069.13,1210.51 2069.72,1210.51 2070.3,1210.51 2070.89,1210.51 2071.48,1210.51 2072.06,1210.51 2072.65,1210.51 2073.23,1210.51 2073.82,1210.51 2074.41,1210.51 2074.99,1210.51 2075.58,1210.51 2076.17,1210.51 2076.75,1210.51 2077.34,1210.51 2077.93,1210.51 2078.51,1210.51 2079.1,1210.51 2079.68,1210.51 2080.27,1210.51 2080.86,1210.51 2081.44,1210.51 2082.03,1210.51 2082.62,1210.51 2083.2,1210.51 2083.79,1210.51 2084.38,1210.51 2084.96,1210.51 2085.55,1210.51 2086.14,1210.51 2086.72,1210.51 2087.31,1210.51 2087.89,1210.51 2088.48,1210.51 2089.07,1210.51 2089.65,1210.51 2090.24,1210.51 2090.83,1210.51 2091.41,1210.51 2092,1210.51 2092.59,1210.51 2093.17,1210.51 2093.76,1210.51 2094.35,1210.51 2094.93,1210.51 2095.52,1210.51 2096.1,1210.51 2096.69,1210.51 2097.28,1210.51 2097.86,1210.51 2098.45,1210.51 2099.04,1210.51 2099.62,1210.51 2100.21,1210.51 2100.8,1210.51 2101.38,1210.51 2101.97,1210.51 2102.55,1210.51 2103.14,1210.51 2103.73,1210.51 2104.31,1210.51 2104.9,1210.51 2105.49,1210.51 2106.07,1210.51 2106.66,1210.51 2107.25,1210.51 2107.83,1210.51 2108.42,1210.51 2109.01,1210.51 2109.59,1210.51 2110.18,1210.51 2110.76,1210.51 2111.35,1210.51 2111.94,1210.51 2112.52,1210.51 2113.11,1210.51 2113.7,1210.51 2114.28,1210.51 2114.87,1210.51 2115.46,1210.51 2116.04,1210.51 2116.63,1210.51 2117.22,1210.51 2117.8,1210.51 2118.39,1210.51 2118.97,1210.51 2119.56,1210.51 2120.15,1210.51 2120.73,1210.51 2121.32,1210.51 2121.91,1210.51 2122.49,1210.51 2123.08,1210.51 2123.67,1210.51 2124.25,1210.51 2124.84,1210.51 2125.42,1210.51 2126.01,1210.51 2126.6,1210.51 2127.18,1210.51 2127.77,1210.51 2128.36,1210.51 2128.94,1210.51 2129.53,1210.51 2130.12,1210.51 2130.7,1210.51 2131.29,1210.51 2131.88,1210.51 2132.46,1210.51 2133.05,1210.51 2133.63,1210.51 2134.22,1210.51 2134.81,1210.51 2135.39,1210.51 2135.98,1210.51 2136.57,1210.51 2137.15,1210.51 2137.74,1210.51 2138.33,1210.51 2138.91,1210.51 2139.5,1210.51 2140.09,1210.51 2140.67,1210.51 2141.26,1210.51 2141.84,1210.51 2142.43,1210.51 2143.02,1210.51 2143.6,1210.51 2144.19,1210.51 2144.78,1210.51 2145.36,1210.51 2145.95,1210.51 2146.54,1210.51 2147.12,1210.51 2147.71,1210.51 2148.3,1210.51 2148.88,1210.51 2149.47,1210.51 2150.05,1210.51 2150.64,1210.51 2151.23,1210.51 2151.81,1210.51 2152.4,1210.51 2152.99,1210.51 2153.57,1210.51 2154.16,1210.51 2154.75,1210.51 2155.33,1210.51 2155.92,1210.51 2156.5,1210.51 2157.09,1210.51 2157.68,1210.51 2158.26,1210.51 \"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1561.79,1192.08 1399.76,899.083 \"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1228.48 985.439,1192.08 2158.26,1192.08 2158.26,1228.48 985.439,1228.48 \"/>\n<path clip-path=\"url(#clip480)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip480)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip480)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip480)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip480)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip480)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip483\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip483)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip483)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip483)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip483)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip483)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip480)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip483)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip483)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip483)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip483)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip483)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip480)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip483)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-1577.5 161.555,-2922.08 162.114,-4155.78 162.673,-5286.05 163.232,-6319.78 163.792,-7263.33 164.351,-8122.62 164.91,-8903.13 165.469,-8354.17 166.029,-7932.48 166.588,-6660.87 167.147,-7373.77 167.706,-8007.15 168.266,-8591.35 168.825,-9117.01 169.384,-9573.75 169.943,-9994.25 170.503,-10366.8 171.062,-10694.7 171.621,-10384.4 172.18,-10096.4 172.74,-10351.3 173.299,-10570.3 173.858,-10742.3 174.417,-10889.7 174.977,-11015.9 175.536,-11095 176.095,-11156.7 176.655,-11208.8 177.214,-10587.9 177.773,-10609.9 178.332,-10625.6 178.892,-10614.1 179.451,-10342.2 180.01,-10307.4 180.569,-10260.6 181.129,-10197.5 181.688,-10128.1 182.247,-10041.1 182.806,-9944.43 183.366,-9835.05 183.925,-9408.32 184.484,-9142.06 185.043,-9021.77 185.603,-8889.17 186.162,-8762.65 186.721,-8630.91 187.28,-8491.2 187.84,-8348.14 188.399,-8099.77 188.958,-7738.27 189.517,-7580.16 190.077,-7329.15 190.636,-7007.24 191.195,-6858.9 191.754,-6633.72 192.314,-6413.78 192.873,-6275.4 193.432,-6068.26 193.991,-5931.06 194.551,-5667.31 195.11,-5538.7 195.669,-5351.21 196.228,-5113.33 196.788,-4829.91 197.347,-4668.26 197.906,-4611.69 198.465,-4296.53 199.025,-4051.18 199.584,-3955.68 200.143,-3814.59 200.702,-3678.24 201.262,-3587.68 201.821,-3454.44 202.38,-3284.91 202.939,-3157.96 203.499,-3072.65 204.058,-2981.65 204.617,-2789.45 205.176,-2639.3 205.736,-2564.09 206.295,-2422.72 206.854,-2285.78 207.413,-2185.44 207.973,-2028.75 208.532,-1873.92 209.091,-1751.55 209.65,-1631.7 210.21,-1546.1 210.769,-1460.11 211.328,-1380.27 211.887,-1301.67 212.447,-1251.84 213.006,-1173.16 213.565,-1124.37 214.124,-1049.81 214.684,-950.071 215.243,-882.204 215.802,-788.743 216.361,-651.219 216.921,-593.432 217.48,-513.76 218.039,-407.111 218.598,-378.663 219.158,-301.957 219.717,-254.285 220.276,-229.391 220.835,-183.026 221.395,-115.43 221.954,-49.2746 222.513,-26.9922 223.072,-9.15524 223.632,10.4047 224.191,52.7036 224.75,113.643 225.309,151.871 225.869,188.716 226.428,201.333 226.987,255.598 227.546,349.428 228.106,422.288 228.665,450.912 229.224,480.823 229.783,526.751 230.343,608.482 230.902,630.852 231.461,631.755 232.02,654.278 232.58,713.573 233.139,733.17 233.698,767.827 234.257,783.3 234.817,800.87 235.376,817.192 235.935,850.639 236.494,868.464 237.054,879.786 237.613,870.96 238.172,869.329 238.731,863.453 239.291,877.11 239.85,856.447 240.409,873.177 240.968,904.626 241.528,901.886 242.087,916.048 242.646,930.777 243.205,979.135 243.765,1008.84 244.324,1017.79 244.883,991.457 245.442,1004.33 246.002,999.463 246.561,1078.14 247.12,1051.5 247.679,1023.12 248.239,1015.1 248.798,1039.95 249.357,1066.14 249.916,1074.02 250.476,1079.53 251.035,1071.66 251.594,1079.33 252.153,1107.23 252.713,1132.14 253.272,1101.8 253.831,1093.71 254.39,1098.39 254.95,1105.98 255.509,1095.62 256.068,1119.19 256.627,1112.58 257.187,1103.72 257.746,1095.32 258.305,1139.19 258.864,1144.28 259.424,1163.81 259.983,1133.34 260.542,1101.13 261.101,1109.13 261.661,1084.12 262.22,1124.83 262.779,1063.42 263.338,1040.98 263.898,1001.32 264.457,1036.03 265.016,1030.1 265.575,1061.41 266.135,1056.7 266.694,1050.93 267.253,1060.96 267.812,1105.91 268.372,1080.31 268.931,1072.53 269.49,1102.47 270.049,1077.32 270.609,1072.42 271.168,1079.86 271.727,1103.56 272.286,1074.95 272.846,1053.34 273.405,1078.53 273.964,1086.87 274.523,1063.32 275.083,1070.5 275.642,1081.17 276.201,1088.75 276.76,1096.53 277.32,1103.24 277.879,1094.04 278.438,1089.94 278.997,1066.6 279.557,1077.62 280.116,1069.28 280.675,1080.09 281.234,1091.83 281.794,1084.09 282.353,1058.92 282.912,1089.47 283.471,1064.84 284.031,1075.98 284.59,1054.24 285.149,1048.08 285.708,1043.04 286.268,1051.83 286.827,993.89 287.386,1009.36 287.945,1020.37 288.505,1034.07 289.064,999.442 289.623,1042 290.182,1034.62 290.742,1045.23 291.301,1024.87 291.86,1018.72 292.419,1015.24 292.979,1042.04 293.538,1019.61 294.097,999.197 294.656,1008.74 295.216,1070.14 295.775,1060.86 296.334,1066.51 296.893,1040.29 297.453,1063.59 298.012,1089.04 298.571,1078.52 299.13,1086.88 299.69,1076.51 300.249,1085.07 300.808,1073.27 301.368,1049.92 301.927,1041.15 302.486,1017.88 303.045,1012.91 303.605,1070.18 304.164,1061.47 304.723,1051.44 305.282,1047.54 305.842,1021.94 306.401,1017.78 306.96,992.924 307.519,1002.7 308.079,1013.58 308.638,1005.52 309.197,999.245 309.756,1023.57 310.316,1046.28 310.875,1019.14 311.434,979.383 311.993,945.091 312.553,975.776 313.112,985.526 313.671,965.067 314.23,963.766 314.79,943.91 315.349,944.026 315.908,958.039 316.467,1003.77 317.027,998.103 317.586,975.175 318.145,1001.85 318.704,996.462 319.264,971.989 319.823,968.728 320.382,964.433 320.941,973.909 321.501,984.958 322.06,996.015 322.619,957.401 323.178,985.749 323.738,978.666 324.297,973.775 324.856,982.988 325.415,978.12 325.975,938.189 326.534,936.782 327.093,933.325 327.652,917.213 328.212,946.937 328.771,944.267 329.33,971.578 329.889,981.478 330.449,990.766 331.008,966.506 331.567,976.807 332.126,1017.71 332.686,1038.3 333.245,1011.16 333.804,1048.28 334.363,993.771 334.923,957.316 335.482,949.165 336.041,943.544 336.6,937.859 337.16,919.714 337.719,898.136 338.278,880.507 338.837,861.824 339.397,863.364 339.956,863.888 340.515,878.386 341.074,875.616 341.634,888.513 342.193,887.351 342.752,901.99 343.311,884.183 343.871,862.133 344.43,876.155 344.989,909.585 345.548,922.927 346.108,905.482 346.667,929.838 347.226,939.63 347.785,948.63 348.345,943.525 348.904,938.432 349.463,918.513 350.022,964.08 350.582,960.519 351.141,1001.23 351.7,1006.75 352.259,1011.81 352.819,953.882 353.378,948.473 353.937,952.935 354.496,930.048 355.056,922.847 355.615,921.453 356.174,881.389 356.733,878.168 357.293,920.791 357.852,931.499 358.411,889.435 358.97,885.769 359.53,868.485 360.089,851.244 360.648,867.731 361.207,898.66 361.767,894.299 362.326,906.862 362.885,887.287 363.444,901.567 364.004,881.788 364.563,845.446 365.122,844.487 365.681,843.876 366.241,854.476 366.8,867.166 367.359,879.387 367.918,921.72 368.478,911.358 369.037,891.289 369.596,888.439 370.155,915.852 370.715,925.677 371.274,884.896 371.833,862.932 372.392,875.634 372.952,886.336 373.511,880.878 374.07,892.867 374.629,902.981 375.189,900.223 375.748,894.066 376.307,889.595 376.866,869.715 377.426,847.641 377.985,812.358 378.544,809.254 379.103,792.913 379.663,793.707 380.222,828.738 380.781,844.504 381.34,826.69 381.9,841.704 382.459,852.722 383.018,817.148 383.577,799.569 384.137,833.479 384.696,797.415 385.255,813.398 385.814,762.137 386.374,745.137 386.933,732.102 387.492,732.423 388.051,751.608 388.611,736.39 389.17,768.305 389.729,771.113 390.288,787.894 390.848,784.834 391.407,817.108 391.966,850.83 392.525,880.899 393.085,859.615 393.644,840.842 394.203,823.517 394.762,823.43 395.322,820.571 395.881,821.268 396.44,806.456 396.999,804.037 397.559,821.166 398.118,819.3 398.677,831.598 399.236,847.263 399.796,829.5 400.355,794.161 400.914,791.766 401.473,806.886 402.033,789.671 402.592,788.768 403.151,757.052 403.71,741.734 404.27,746.407 404.829,749.043 405.388,799.392 405.947,782.91 406.507,780.566 407.066,766.426 407.625,768.642 408.184,768.742 408.744,799.422 409.303,833.321 409.862,859.436 410.421,856.687 410.981,888.73 411.54,870.899 412.099,912.609 412.658,902.713 413.218,908.108 413.777,916.622 414.336,911.563 414.895,890.117 415.455,901.381 416.014,893.135 416.573,854.117 417.132,847.652 417.692,830.306 418.251,813.146 418.81,827.777 419.369,779.356 419.929,763.727 420.488,734.034 421.047,736.033 421.606,740.463 422.166,743.6 422.725,746.247 423.284,752.179 423.843,769.998 424.403,753.861 424.962,805.242 425.521,806.959 426.08,787.898 426.64,787.393 427.199,802.595 427.758,832.892 428.318,844.217 428.877,871.942 429.436,868.182 429.995,880.999 430.555,873.295 431.114,865.704 431.673,827.638 432.232,805.137 432.792,818.552 433.351,802.911 433.91,785.869 434.469,784.473 435.029,816.974 435.588,799.219 436.147,813.679 436.706,793.843 437.266,822.416 437.825,802.164 438.384,799.937 438.943,814.643 439.503,846.259 440.062,858.691 440.621,871.52 441.18,862.635 441.74,825.554 442.299,825.263 442.858,855.284 443.417,832.278 443.977,846.122 444.536,860.249 445.095,872.119 445.654,847.248 446.214,844.015 446.773,838.91 447.332,783.937 447.891,763.788 448.451,747.728 449.01,745.711 449.569,776.525 450.128,774.705 450.688,804.727 451.247,833.161 451.806,843.863 452.365,867.311 452.925,875.734 453.484,875.383 454.043,884.988 454.602,863.298 455.162,825.705 455.721,857.292 456.28,835.621 456.839,829.916 457.399,874.367 457.958,847.182 458.517,828.44 459.076,821.793 459.636,850.234 460.195,830.06 460.754,810.606 461.313,836.651 461.873,847.063 462.432,823.828 462.991,837.662 463.55,817.19 464.11,816.137 464.669,778.237 465.228,806.386 465.787,819.091 466.347,844.486 466.906,806.562 467.465,816.785 468.024,863.236 468.584,871.232 469.143,847.622 469.702,826.979 470.261,868.469 470.821,878.027 471.38,888.027 471.939,864.638 472.498,891.703 473.058,834.073 473.617,843.598 474.176,836.147 474.735,750.368 475.295,748.428 475.854,747.92 476.413,795.549 476.972,774.614 477.532,754.528 478.091,705.39 478.65,673.464 479.209,673.352 479.769,705.615 480.328,705.553 480.887,690.204 481.446,676.059 482.006,631.891 482.565,656.187 483.124,640.629 483.683,627.065 484.243,664.382 484.802,669.786 485.361,690.831 485.92,728.328 486.48,730.53 487.039,698.034 487.598,717.628 488.157,703.23 488.717,675.415 489.276,663.554 489.835,652.183 490.394,657.644 490.954,676.439 491.513,714.426 492.072,782.409 492.631,778.212 493.191,726.778 493.75,744.722 494.309,742.59 494.868,759.837 495.428,743.34 495.987,737.788 496.546,721.705 497.105,706.68 497.665,726.145 498.224,759.32 498.783,755.073 499.342,722.977 499.902,723.526 500.461,738.577 501.02,719.03 501.579,718.476 502.139,705.604 502.698,740.173 503.257,739.475 503.816,708.212 504.376,679.584 504.935,714.153 505.494,717.657 506.053,737.093 506.613,756.94 507.172,773.06 507.731,770.334 508.29,736.954 508.85,719.09 509.409,738.046 509.968,754.087 510.527,736.896 511.087,735.487 511.646,737.834 512.205,755.157 512.764,774.528 513.324,769.324 513.883,782.317 514.442,780.203 515.001,762.767 515.561,812.662 516.12,838.593 516.679,832.715 517.238,809.902 517.798,807.724 518.357,805.026 518.916,849.131 519.475,842.86 520.035,804.771 520.594,800.968 521.153,813.733 521.712,811.085 522.272,839.475 522.831,834.549 523.39,830.059 523.949,821.062 524.509,827.767 525.068,824.462 525.627,807.66 526.186,805.815 526.746,803.957 527.305,817.329 527.864,815.291 528.423,812.496 528.983,824.288 529.542,820.118 530.101,864.414 530.66,868.942 531.22,844.431 531.779,807.835 532.338,788.448 532.897,752.955 533.457,752.81 534.016,784.647 534.575,746.092 535.134,760.467 535.694,724.239 536.253,722.25 536.812,736.553 537.371,685.8 537.931,704.014 538.49,706.346 539.049,722.04 539.608,693.378 540.168,695.307 540.727,681.714 541.286,684.588 541.845,703.679 542.405,720.264 542.964,720.187 543.523,705.259 544.082,656.649 544.642,612.664 545.201,599.869 545.76,602.393 546.319,622.161 546.879,659.38 547.438,646.354 547.997,634.822 548.556,607.367 549.116,627.287 549.675,676.264 550.234,674.097 550.793,673.981 551.353,644.515 551.912,650.528 552.471,701.582 553.031,702.443 553.59,672.327 554.149,674.893 554.708,626.569 555.268,599.42 555.827,585.951 556.386,612.2 556.945,637.481 557.505,656.191 558.064,692.524 558.623,710.818 559.182,678.276 559.742,682.5 560.301,700.21 560.86,703.871 561.419,739.097 561.979,755.196 562.538,766.747 563.097,735.371 563.656,731.056 564.216,764.413 564.775,796.577 565.334,776.04 565.893,779.542 566.453,762.886 567.012,790.522 567.571,803.415 568.13,765.037 568.69,747.228 569.249,712.629 569.808,761.598 570.367,775.635 570.927,788.016 571.486,784.332 572.045,779.34 572.604,790.342 573.164,769.829 573.723,784.12 574.282,746.014 574.841,727.778 575.401,759.08 575.96,752.778 576.519,737.08 577.078,736.684 577.638,687.268 578.197,687.575 578.756,686.705 579.315,671.737 579.875,673.196 580.434,680.032 580.993,686.586 581.552,685.779 582.112,687.168 582.671,703.788 583.23,686.053 583.789,688.53 584.349,706.998 584.908,738.951 585.467,736.927 586.026,783.13 586.586,744.408 587.145,726.588 587.704,723.071 588.263,708.65 588.823,738.975 589.382,740.777 589.941,738.182 590.5,723.277 591.06,692.453 591.619,694.648 592.178,695.023 592.737,728.823 593.297,744.239 593.856,742.095 594.415,742.071 594.974,726.098 595.534,724.599 596.093,690.93 596.652,678.126 597.211,695.914 597.771,663.3 598.33,671.672 598.889,689.392 599.448,721.626 600.008,720.559 600.567,753.766 601.126,752.477 601.685,746.184 602.245,745.36 602.804,758.413 603.363,755.717 603.922,754.346 604.482,782.932 605.041,781.039 605.6,809.919 606.159,836.328 606.719,829.63 607.278,843.672 607.837,822.82 608.396,769.191 608.956,718.882 609.515,734.406 610.074,733.604 610.633,714.718 611.193,714.868 611.752,698.551 612.311,682.906 612.87,701.44 613.43,700.917 613.989,734.294 614.548,702.115 615.107,654.858 615.667,672.249 616.226,690.848 616.785,672.614 617.344,640.024 617.904,644.626 618.463,666.385 619.022,652.9 619.581,644.8 620.141,649.879 620.7,654.241 621.259,641.657 621.818,610.705 622.378,613.666 622.937,617.784 623.496,605.823 624.055,608.062 624.615,611.41 625.174,614.311 625.733,620.102 626.292,637.361 626.852,622.495 627.411,643.16 627.97,616.166 628.529,634.031 629.089,619.687 629.648,609.122 630.207,695.348 630.766,731.113 631.326,730.807 631.885,700.585 632.444,687.942 633.003,717.438 633.563,730.454 634.122,760.405 634.681,739.086 635.24,754.93 635.8,737.009 636.359,735.905 636.918,715.92 637.477,664.344 638.037,712.578 638.596,726.197 639.155,741.43 639.714,751.219 640.274,747.238 640.833,780.685 641.392,777.916 641.951,752.992 642.511,746.602 643.07,743.875 643.629,755.146 644.188,719.498 644.748,685.575 645.307,689.016 645.866,723.254 646.425,703.949 646.985,702.626 647.544,667.824 648.103,668.541 648.662,668.529 649.222,638.478 649.781,626.902 650.34,644.298 650.899,616.796 651.459,619.476 652.018,624.575 652.577,629.64 653.136,633.296 653.696,637.505 654.255,608.434 654.814,597.855 655.373,604.091 655.933,638.806 656.492,626.152 657.051,663.225 657.61,681.868 658.17,667.707 658.729,670.309 659.288,655.193 659.847,640.346 660.407,644.027 660.966,694.838 661.525,713.773 662.084,709.319 662.644,725.662 663.203,710.767 663.762,728.856 664.321,710.909 664.881,726.6 665.44,712.261 665.999,678.977 666.558,648.076 667.118,650.969 667.677,672.112 668.236,657.382 668.795,671.858 669.355,644.219 669.914,677.602 670.473,662.254 671.032,682.917 671.592,669.567 672.151,704.992 672.71,738.922 673.269,737.166 673.829,718.575 674.388,716.643 674.947,716.685 675.506,732.859 676.066,733.054 676.625,714.948 677.184,715.947 677.743,714.881 678.303,715.037 678.862,698.081 679.421,683.818 679.981,668.554 680.54,636.175 681.099,669.392 681.658,671.179 682.218,659.162 682.777,661.953 683.336,677.961 683.895,693.808 684.455,707.305 685.014,769.916 685.573,782.251 686.132,775.618 686.692,737.094 687.251,750.703 687.81,728.63 688.369,678.982 688.929,680.363 689.488,698.809 690.047,699.487 690.606,666.322 691.166,671.16 691.725,703.361 692.284,719.218 692.843,701.379 693.403,706.396 693.962,672.585 694.521,674.419 695.08,690.348 695.64,675.204 696.199,642.818 696.758,644.925 697.317,646.189 697.877,649.545 698.436,652.08 698.995,635.643 699.554,654.046 700.114,657.375 700.673,679.067 701.232,679.927 701.791,679.894 702.351,697.106 702.91,694.74 703.469,695.118 704.028,713.578 704.588,715.27 705.147,713.166 705.706,730.086 706.265,744.68 706.825,741.622 707.384,789.963 707.943,790.437 708.502,816.93 709.062,825.304 709.621,823.445 710.18,818.366 710.739,812.482 711.299,788.39 711.858,781.744 712.417,778.204 712.976,757.277 713.536,753.627 714.095,749.256 714.654,727.709 715.213,742.513 715.773,741.26 716.332,772.33 716.891,768.55 717.45,733.444 718.01,732.299 718.569,763.489 719.128,773.945 719.687,718.56 720.247,735.185 720.806,749.249 721.365,744.231 721.924,708.181 722.484,737.068 723.043,750.733 723.602,732.861 724.161,696.541 724.721,678.742 725.28,646.272 725.839,663.162 726.398,663.729 726.958,666.73 727.517,648.614 728.076,617.217 728.635,607.508 729.195,612.695 729.754,601.117 730.313,656.828 730.872,625.064 731.432,625.644 731.991,646.492 732.55,633.361 733.109,636.085 733.669,622.063 734.228,624.109 734.787,611.423 735.346,616.987 735.906,623.546 736.465,611.325 737.024,612.675 737.583,630.519 738.143,634.448 738.702,621.487 739.261,624.989 739.82,627.738 740.38,648.213 740.939,652.833 741.498,652.013 742.057,653.996 742.617,638.099 743.176,643.133 743.735,680.729 744.294,694.632 744.854,677.02 745.413,694.849 745.972,727.555 746.531,725.8 747.091,740.523 747.65,787.132 748.209,766.499 748.768,714.459 749.328,727.998 749.887,724.859 750.446,723.198 751.005,706.315 751.565,706.397 752.124,689.226 752.683,721.759 753.242,723.22 753.802,755.296 754.361,722.598 754.92,705.685 755.479,741.615 756.039,772.11 756.598,752.648 757.157,801.916 757.716,763.821 758.276,757.886 758.835,753.477 759.394,746.534 759.953,743.791 760.513,739.704 761.072,767.695 761.631,764.171 762.19,761.427 762.75,775.667 763.309,722.923 763.868,720.479 764.427,719.732 764.987,703.099 765.546,702.445 766.105,685.558 766.664,672.548 767.224,688.495 767.783,669.852 768.342,670.975 768.901,701.701 769.461,667.86 770.02,715.816 770.579,715.769 771.138,697.52 771.698,728.727 772.257,723.699 772.816,737.908 773.375,732.087 773.935,747.129 774.494,725.965 775.053,706.462 775.612,703.826 776.172,702.753 776.731,666.143 777.29,666.142 777.849,618.131 778.409,604.547 778.968,591.127 779.527,629.279 780.086,616.465 780.646,621.776 781.205,655.715 781.764,658.02 782.323,661.381 782.883,679.461 783.442,681.486 784.001,680.402 784.56,681.564 785.12,666.627 785.679,654.801 786.238,671.986 786.797,670.261 787.357,640.847 787.916,660.737 788.475,678.184 789.034,692.679 789.594,708.87 790.153,742.901 790.712,739.323 791.271,786.943 791.831,763.216 792.39,774.01 792.949,815.778 793.508,772.695 794.068,766.801 794.627,761.022 795.186,739.895 795.745,724.556 796.305,721.724 796.864,735.153 797.423,764.023 797.982,775.67 798.542,760.501 799.101,771.73 799.66,749.491 800.219,775.21 800.779,767.926 801.338,764.177 801.897,724.477 802.456,737.504 803.016,752.775 803.575,767.493 804.134,764.942 804.693,777.588 805.253,751.608 805.812,745.171 806.371,777.201 806.931,772.032 807.49,767.166 808.049,779.826 808.608,790.494 809.168,800.8 809.727,763.274 810.286,776.788 810.845,775.797 811.405,721.236 811.964,753.208 812.523,764.542 813.082,758.933 813.642,773.084 814.201,748.313 814.76,741.735 815.319,706.443 815.879,738.314 816.438,735.385 816.997,750.013 817.556,763.614 818.116,773.619 818.675,785.866 819.234,763.948 819.793,789.703 820.353,717.656 820.912,714.943 821.471,728.061 822.03,708.741 822.59,705.699 823.149,707.208 823.708,671.638 824.267,670.041 824.827,635.496 825.386,684.421 825.945,667.816 826.504,652.646 827.064,640.491 827.623,661.225 828.182,628.32 828.741,644.424 829.301,645.409 829.86,628.44 830.419,614.875 830.978,637.526 831.538,670.016 832.097,665.824 832.656,653.726 833.215,655.732 833.775,639.751 834.334,627.02 834.893,615.116 835.452,602.371 836.012,587.838 836.571,578.016 837.13,568.661 837.689,591.474 838.249,593.301 838.808,617.514 839.367,608.793 839.926,614.171 840.486,618.15 841.045,640.129 841.604,659.441 842.163,676.569 842.723,677.921 843.282,680.472 843.841,714.699 844.4,712.334 844.96,730.308 845.519,743.2 846.078,755.991 846.637,739.582 847.197,718.908 847.756,717.697 848.315,736.288 848.874,749.546 849.434,759.844 849.993,757.985 850.552,739.628 851.111,725.458 851.671,722.622 852.23,739.475 852.789,737.738 853.348,734.73 853.908,748.692 854.467,746.629 855.026,742.626 855.585,774.237 856.145,735.081 856.704,727.875 857.263,712.404 857.822,709.148 858.382,660.023 858.941,646.192 859.5,669.224 860.059,620.464 860.619,623.109 861.178,643.009 861.737,627.491 862.296,613.7 862.856,605.42 863.415,597.606 863.974,588.478 864.533,644.15 865.093,660.847 865.652,614.026 866.211,614.001 866.77,634.862 867.33,636.959 867.889,660.062 868.448,677.262 869.007,691.103 869.567,672.595 870.126,656.623 870.685,641.836 871.244,674.847 871.804,692.538 872.363,679.422 872.922,663.765 873.481,666.098 874.041,670.29 874.6,673.39 875.159,707.795 875.718,691.46 876.278,708.461 876.837,722.369 877.396,721.442 877.955,783.536 878.515,779.905 879.074,774.446 879.633,738.639 880.192,717.713 880.752,749.247 881.311,748.134 881.87,760.134 882.429,724.796 882.989,737.982 883.548,734.439 884.107,761.925 884.666,744.504 885.226,755.778 885.785,721.829 886.344,716.982 886.903,695.116 887.463,744.648 888.022,724.173 888.581,705.616 889.14,685.93 889.7,620.862 890.259,624.022 890.818,644.444 891.377,649.397 891.937,700.286 892.496,685.873 893.055,701.56 893.614,719.138 894.174,718.841 894.733,718.547 895.292,684.69 895.851,684.143 896.411,650.599 896.97,668.977 897.529,686.416 898.088,667.601 898.648,685.561 899.207,670.381 899.766,651.573 900.325,635.185 900.885,636.097 901.444,626.99 902.003,595.464 902.562,601.46 903.122,620.197 903.681,624.849 904.24,615.28 904.799,636.583 905.359,639.97 905.918,659.757 906.477,661.995 907.036,676.133 907.596,659.41 908.155,678.486 908.714,679.219 909.273,710.667 909.833,712.184 910.392,715.173 910.951,732.462 911.51,764.33 912.07,711.209 912.629,712.115 913.188,709.152 913.747,709.764 914.307,673.01 914.866,741.996 915.425,704.043 915.984,719.98 916.544,718.167 917.103,716.779 917.662,715.341 918.221,744.643 918.781,758.057 919.34,738.575 919.899,721.484 920.458,705.955 921.018,691.589 921.577,693.765 922.136,677.443 922.695,679.645 923.255,680.079 923.814,697.305 924.373,680.902 924.932,712.482 925.492,747.571 926.051,709.456 926.61,736.355 927.169,734.301 927.729,732.087 928.288,698.562 928.847,682.02 929.406,663.107 929.966,666.201 930.525,682.296 931.084,664.513 931.644,602.639 932.203,638.9 932.762,626.19 933.321,592.674 933.881,629.991 934.44,646.186 934.999,648.65 935.558,599.375 936.118,602.987 936.677,607.638 937.236,613.971 937.795,602.475 938.355,607.206 938.914,612.873 939.473,616.505 940.032,637.436 940.592,640.692 941.151,631.391 941.71,648.702 942.269,665.641 942.829,666.445 943.388,683.504 943.947,666.854 944.506,650.366 945.066,669.262 945.625,671.654 946.184,673.928 946.743,708.981 947.303,693.57 947.862,676.63 948.421,709.117 948.98,659.381 949.54,677.699 950.099,631.437 950.658,664.887 951.217,650.74 951.777,652.024 952.336,642.278 952.895,628.499 953.454,615.835 954.014,589.5 954.573,608.403 955.132,579.562 955.691,601.537 956.251,574.459 956.81,611.122 957.369,614.033 957.928,618.256 958.488,606.252 959.047,607.84 959.606,614.06 960.165,634.162 960.725,624.05 961.284,645.885 961.843,663.439 962.402,679.103 962.962,649.098 963.521,668.168 964.08,672.863 964.639,658.262 965.199,661.528 965.758,696.668 966.317,698.802 966.876,715.677 967.436,715.174 967.995,712.493 968.554,739.133 969.113,783.369 969.673,761.668 970.232,743.463 970.791,818.667 971.35,814.598 971.91,890.69 972.469,879.072 973.028,856.642 973.587,880.154 974.147,855.498 974.706,815.521 975.265,792.948 975.824,756.234 976.384,751.854 976.943,749.718 977.502,766.184 978.061,745.958 978.621,742.628 979.18,761.482 979.739,755.174 980.298,733.978 980.858,729.1 981.417,694.568 981.976,626.221 982.535,627.969 983.095,614.673 983.654,617.515 984.213,622.581 984.772,657.364 985.332,658.615 985.891,664.096 986.45,664.895 987.009,665.706 987.569,714.109 988.128,679.973 988.687,632.891 989.246,650.964 989.806,667.853 990.365,668.11 990.924,637.368 991.483,641.27 992.043,630.365 992.602,647.04 993.161,662.963 993.72,628.185 994.28,614.703 994.839,587.29 995.398,608.92 995.957,644.982 996.517,646.045 997.076,694.832 997.635,658.877 998.194,694.362 998.754,693.647 999.313,709.419 999.872,740.582 1000.43,689.332 1000.99,719.914 1001.55,719.725 1002.11,700.245 1002.67,715.155 1003.23,716.418 1003.79,727.927 1004.35,711.453 1004.91,710.066 1005.46,723.745 1006.02,706.665 1006.58,660.199 1007.14,709.373 1007.7,710.805 1008.26,707.8 1008.82,691.05 1009.38,689.863 1009.94,705.262 1010.5,722.274 1011.06,706.826 1011.62,677.561 1012.18,660.487 1012.73,624.924 1013.29,612.882 1013.85,630.886 1014.41,636.936 1014.97,658.395 1015.53,642.123 1016.09,642.473 1016.65,660.491 1017.21,665.843 1017.77,665.583 1018.33,667.61 1018.89,654.668 1019.45,659.175 1020.01,658.146 1020.56,671.022 1021.12,657.561 1021.68,642.548 1022.24,647.655 1022.8,669.099 1023.36,687.388 1023.92,737.434 1024.48,715.767 1025.04,714.937 1025.6,693.442 1026.16,695.834 1026.72,662.424 1027.28,695.509 1027.83,694.326 1028.39,679.589 1028.95,695.346 1029.51,680.113 1030.07,679.421 1030.63,693.943 1031.19,726.203 1031.75,725.199 1032.31,753.346 1032.87,764.177 1033.43,745.976 1033.99,758.557 1034.55,771.754 1035.1,801.214 1035.66,794.07 1036.22,755.912 1036.78,718.792 1037.34,700.456 1037.9,679.87 1038.46,681.393 1039.02,713.137 1039.58,696.299 1040.14,692.397 1040.7,686.403 1041.26,683.639 1041.82,696.169 1042.38,711.162 1042.93,726.488 1043.49,728.239 1044.05,691.691 1044.61,707.784 1045.17,708.336 1045.73,689.461 1046.29,656.689 1046.85,693.077 1047.41,694.451 1047.97,712.075 1048.53,710.774 1049.09,709.185 1049.65,724.288 1050.2,693.588 1050.76,691.407 1051.32,693.21 1051.88,676.627 1052.44,642.797 1053,628.643 1053.56,662.667 1054.12,662.152 1054.68,698.942 1055.24,710.602 1055.8,696.949 1056.36,708.607 1056.92,726.442 1057.48,709.366 1058.03,674.189 1058.59,640.345 1059.15,645.085 1059.71,645.662 1060.27,651.617 1060.83,634.823 1061.39,639.236 1061.95,639.63 1062.51,641.337 1063.07,629.526 1063.63,633.657 1064.19,573.575 1064.75,563.838 1065.3,569.808 1065.86,572.923 1066.42,578.387 1066.98,582.502 1067.54,623.295 1068.1,629.127 1068.66,633.552 1069.22,653.611 1069.78,660.666 1070.34,677.804 1070.9,693.855 1071.46,704.514 1072.02,654.312 1072.57,638.939 1073.13,590.25 1073.69,612.574 1074.25,663.364 1074.81,693.346 1075.37,663.429 1075.93,664.537 1076.49,649.779 1077.05,671.595 1077.61,677.993 1078.17,667.352 1078.73,650.868 1079.29,668.827 1079.85,684.135 1080.4,670.353 1080.96,675.217 1081.52,674.265 1082.08,678.555 1082.64,693.254 1083.2,707.42 1083.76,689.872 1084.32,691.045 1084.88,671.795 1085.44,672.413 1086,657.871 1086.56,674.568 1087.12,655.457 1087.67,653.775 1088.23,621.525 1088.79,620.689 1089.35,674.477 1089.91,694.057 1090.47,660.04 1091.03,675.025 1091.59,727.088 1092.15,723.144 1092.71,738.871 1093.27,731.717 1093.83,727.859 1094.39,705.443 1094.94,686.253 1095.5,690.313 1096.06,691.922 1096.62,693.595 1097.18,709.511 1097.74,726.469 1098.3,707.476 1098.86,704.331 1099.42,669.563 1099.98,638.636 1100.54,639.172 1101.1,626.479 1101.66,628.012 1102.22,650.493 1102.77,653.157 1103.33,656.235 1103.89,656.583 1104.45,676.745 1105.01,662.115 1105.57,664.515 1106.13,681.469 1106.69,682.496 1107.25,684.648 1107.81,701.054 1108.37,667.823 1108.93,670.565 1109.49,701.587 1110.04,700.615 1110.6,700.378 1111.16,682.984 1111.72,683.279 1112.28,646.579 1112.84,681.072 1113.4,681.181 1113.96,661.06 1114.52,645.657 1115.08,651.493 1115.64,653.577 1116.2,670.627 1116.76,673.931 1117.31,676.597 1117.87,679.7 1118.43,678.354 1118.99,680.26 1119.55,696.495 1120.11,714.181 1120.67,729.48 1121.23,732.076 1121.79,746.627 1122.35,705.976 1122.91,718.956 1123.47,736.021 1124.03,795.126 1124.59,789.678 1125.14,766.2 1125.7,727.047 1126.26,757.003 1126.82,766.899 1127.38,781.264 1127.94,775.586 1128.5,783.498 1129.06,761.495 1129.62,759.93 1130.18,724.797 1130.74,687.87 1131.3,685.708 1131.86,702.128 1132.41,684.446 1132.97,702.892 1133.53,684.952 1134.09,730.603 1134.65,695.701 1135.21,695.816 1135.77,708.91 1136.33,708.843 1136.89,724.111 1137.45,720.447 1138.01,704.305 1138.57,705.53 1139.13,721.34 1139.68,717.273 1140.24,699.508 1140.8,678.856 1141.36,690.604 1141.92,740.442 1142.48,754.175 1143.04,746.731 1143.6,711.988 1144.16,741.809 1144.72,690.284 1145.28,655.325 1145.84,625.227 1146.4,609.894 1146.96,631.974 1147.51,652.156 1148.07,640.437 1148.63,612.581 1149.19,614.429 1149.75,601.959 1150.31,607.701 1150.87,641.91 1151.43,629.812 1151.99,634.103 1152.55,599.94 1153.11,589.092 1153.67,626.775 1154.23,598.58 1154.78,605.822 1155.34,594.765 1155.9,596.604 1156.46,600.897 1157.02,586.983 1157.58,577.36 1158.14,585.666 1158.7,621.623 1159.26,643.184 1159.82,615.337 1160.38,620.248 1160.94,611.676 1161.5,632.195 1162.05,638.502 1162.61,644.313 1163.17,647.394 1163.73,649.985 1164.29,648.731 1164.85,650.844 1165.41,652.647 1165.97,654.327 1166.53,675.958 1167.09,709.723 1167.65,691.036 1168.21,690.061 1168.77,675.491 1169.33,661.336 1169.88,679.728 1170.44,683.667 1171,702.192 1171.56,656.909 1172.12,643.664 1172.68,645.906 1173.24,649.251 1173.8,648.934 1174.36,664.135 1174.92,727.733 1175.48,693.841 1176.04,724.087 1176.6,705.556 1177.15,690.549 1177.71,692.969 1178.27,709.39 1178.83,726.772 1179.39,728.337 1179.95,744.987 1180.51,743.486 1181.07,772.599 1181.63,766.096 1182.19,794.372 1182.75,773.515 1183.31,764.561 1183.87,776.144 1184.43,737.848 1184.98,704.497 1185.54,703.106 1186.1,700.118 1186.66,666.46 1187.22,652.681 1187.78,654.658 1188.34,623.12 1188.9,643.408 1189.46,646.947 1190.02,647.001 1190.58,681.563 1191.14,683.236 1191.7,730.163 1192.25,726.686 1192.81,694.36 1193.37,708.378 1193.93,757.6 1194.49,754.782 1195.05,736.433 1195.61,782.438 1196.17,791.987 1196.73,787.844 1197.29,782.754 1197.85,731.842 1198.41,649.876 1198.97,620.839 1199.52,624.689 1200.08,625.516 1200.64,645.898 1201.2,648.075 1201.76,683.973 1202.32,681.251 1202.88,666.727 1203.44,666.792 1204,667.466 1204.56,665.065 1205.12,635.723 1205.68,639.968 1206.24,642.514 1206.8,630.545 1207.35,633.359 1207.91,622.218 1208.47,611.797 1209.03,664.417 1209.59,683.325 1210.15,681.71 1210.71,682.604 1211.27,697.738 1211.83,678.777 1212.39,709.453 1212.95,724.503 1213.51,692.467 1214.07,697.213 1214.62,715.152 1215.18,728.454 1215.74,741.981 1216.3,688.689 1216.86,683.104 1217.42,683.364 1217.98,682.202 1218.54,713.137 1219.1,726.978 1219.66,742.63 1220.22,739.318 1220.78,689.14 1221.34,718.301 1221.89,699.217 1222.45,717.413 1223.01,718.977 1223.57,733.54 1224.13,729.431 1224.69,676.069 1225.25,695.132 1225.81,708.164 1226.37,690.491 1226.93,709.439 1227.49,708.739 1228.05,705.787 1228.61,788.15 1229.17,780.837 1229.72,806.917 1230.28,788.157 1230.84,752.391 1231.4,702.172 1231.96,696.916 1232.52,728.01 1233.08,707.773 1233.64,706.937 1234.2,692.691 1234.76,691.342 1235.32,672.698 1235.88,673.22 1236.44,655.621 1236.99,655.936 1237.55,673.846 1238.11,659.201 1238.67,676.982 1239.23,663.014 1239.79,664.493 1240.35,666.859 1240.91,650.99 1241.47,634.265 1242.03,586.439 1242.59,604.028 1243.15,592.622 1243.71,579.443 1244.26,616.823 1244.82,616.801 1245.38,624.302 1245.94,628.464 1246.5,666.242 1247.06,682.021 1247.62,683.732 1248.18,684.269 1248.74,686.654 1249.3,700.418 1249.86,698.56 1250.42,729.372 1250.98,710.775 1251.54,723.57 1252.09,718.406 1252.65,715.272 1253.21,699.081 1253.77,680.266 1254.33,694.399 1254.89,693.219 1255.45,693.31 1256.01,676.991 1256.57,695.723 1257.13,693.148 1257.69,674.675 1258.25,658.135 1258.81,657.825 1259.36,656.798 1259.92,659.117 1260.48,658.649 1261.04,660.387 1261.6,640.751 1262.16,626.656 1262.72,612.668 1263.28,636.377 1263.84,606.189 1264.4,641.16 1264.96,645.993 1265.52,650.027 1266.08,631.371 1266.63,652.39 1267.19,668.832 1267.75,667.455 1268.31,653.326 1268.87,656.244 1269.43,658.398 1269.99,675.623 1270.55,677.631 1271.11,676.672 1271.67,678.112 1272.23,678.068 1272.79,693.851 1273.35,693.383 1273.91,676.992 1274.46,693.492 1275.02,708.252 1275.58,723.608 1276.14,704.214 1276.7,722.407 1277.26,720.704 1277.82,704.142 1278.38,671.859 1278.94,672.543 1279.5,688.852 1280.06,689.177 1280.62,735.62 1281.18,697.837 1281.73,684.093 1282.29,703.422 1282.85,750.829 1283.41,746.949 1283.97,715.652 1284.53,733.181 1285.09,714.523 1285.65,728.273 1286.21,745.288 1286.77,708.171 1287.33,676.586 1287.89,659.786 1288.45,660.336 1289,694.236 1289.56,709.618 1290.12,737.414 1290.68,749.226 1291.24,763.049 1291.8,741.665 1292.36,738.813 1292.92,735.395 1293.48,733.428 1294.04,728.65 1294.6,724.996 1295.16,676.688 1295.72,677.295 1296.28,676.435 1296.83,693.086 1297.39,672.474 1297.95,658.355 1298.51,660.235 1299.07,659.593 1299.63,646.318 1300.19,645.582 1300.75,680.78 1301.31,676.149 1301.87,679.164 1302.43,684.714 1302.99,704.248 1303.55,705.437 1304.1,704.787 1304.66,703.007 1305.22,637.965 1305.78,589.623 1306.34,627.35 1306.9,676.951 1307.46,680.664 1308.02,698.787 1308.58,729.781 1309.14,711.64 1309.7,692.485 1310.26,689.94 1310.82,721.196 1311.38,718.238 1311.93,713.68 1312.49,728.763 1313.05,724.018 1313.61,737.756 1314.17,717.027 1314.73,733.769 1315.29,728.855 1315.85,726.208 1316.41,722.464 1316.97,704.477 1317.53,704.667 1318.09,704.378 1318.65,689.14 1319.2,670.74 1319.76,685.815 1320.32,688.995 1320.88,656.002 1321.44,683.864 1322,650.83 1322.56,685.067 1323.12,717.556 1323.68,714.646 1324.24,747.07 1324.8,744.651 1325.36,742.421 1325.92,753.628 1326.47,733.071 1327.03,700.725 1327.59,701.525 1328.15,716.738 1328.71,686.73 1329.27,655.394 1329.83,620.845 1330.39,622.938 1330.95,624.943 1331.51,595.994 1332.07,581.821 1332.63,602.858 1333.19,592.198 1333.75,609.181 1334.3,612.774 1334.86,637.319 1335.42,641.982 1335.98,660.624 1336.54,661.606 1337.1,630.271 1337.66,664.206 1338.22,681.174 1338.78,698.022 1339.34,680.994 1339.9,729.719 1340.46,776.34 1341.02,757.928 1341.57,739.568 1342.13,734.333 1342.69,750.475 1343.25,745.279 1343.81,744.437 1344.37,739.235 1344.93,786.257 1345.49,746.418 1346.05,710.034 1346.61,724.127 1347.17,720.681 1347.73,747.964 1348.29,743.217 1348.84,737.101 1349.4,731.886 1349.96,729.906 1350.52,728.666 1351.08,708.024 1351.64,658.477 1352.2,661.367 1352.76,693.337 1353.32,709.078 1353.88,706.414 1354.44,707.652 1355,706.484 1355.56,707.879 1356.12,736.989 1356.67,751.183 1357.23,747.908 1357.79,762.033 1358.35,792.898 1358.91,803.182 1359.47,779.085 1360.03,774.86 1360.59,770.021 1361.15,783.011 1361.71,824.29 1362.27,802.983 1362.83,794.607 1363.39,787.327 1363.94,775.487 1364.5,753.221 1365.06,732.296 1365.62,740.631 1366.18,737.317 1366.74,754.232 1367.3,733.76 1367.86,699.074 1368.42,729.801 1368.98,711.529 1369.54,759.977 1370.1,738.712 1370.66,732.705 1371.21,725.386 1371.77,707.145 1372.33,703.429 1372.89,684.285 1373.45,681.793 1374.01,682.133 1374.57,633.738 1375.13,636.408 1375.69,590.981 1376.25,578.423 1376.81,552.054 1377.37,560.551 1377.93,549.683 1378.49,575.783 1379.04,561.681 1379.6,567.9 1380.16,605.434 1380.72,640.504 1381.28,609.042 1381.84,599.851 1382.4,604.676 1382.96,544.83 1383.52,564.996 1384.08,570.276 1384.64,561.01 1385.2,616.612 1385.76,623.934 1386.31,640.77 1386.87,658.764 1387.43,709.65 1387.99,726.309 1388.55,692.334 1389.11,659.219 1389.67,660.237 1390.23,682.383 1390.79,666.212 1391.35,647.312 1391.91,598.79 1392.47,587.84 1393.03,595.128 1393.58,580.04 1394.14,586.398 1394.7,608.486 1395.26,593.545 1395.82,611.804 1396.38,613.541 1396.94,619.363 1397.5,687.691 1398.06,716.071 1398.62,698.351 1399.18,682.225 1399.74,669.749 1400.3,688.594 1400.86,671.689 1401.41,656.865 1401.97,675.594 1402.53,677.902 1403.09,691.029 1403.65,629.132 1404.21,663.168 1404.77,665.116 1405.33,666.882 1405.89,683.087 1406.45,667.179 1407.01,652.256 1407.57,699.046 1408.13,694.368 1408.68,678.122 1409.24,648.145 1409.8,638.935 1410.36,642.674 1410.92,646.15 1411.48,665.322 1412.04,680.002 1412.6,680.195 1413.16,678.345 1413.72,682.662 1414.28,668.61 1414.84,703.557 1415.4,669.138 1415.95,689.503 1416.51,706.405 1417.07,721.204 1417.63,722.977 1418.19,708.307 1418.75,688.482 1419.31,675.238 1419.87,660.785 1420.43,679.116 1420.99,711.966 1421.55,742.088 1422.11,753.524 1422.67,732.411 1423.23,731.021 1423.78,711.277 1424.34,723.197 1424.9,741.745 1425.46,754.464 1426.02,752.116 1426.58,782.743 1427.14,796.064 1427.7,774.203 1428.26,802.85 1428.82,812.383 1429.38,851.026 1429.94,826.001 1430.5,800.978 1431.05,793.828 1431.61,788.797 1432.17,736.96 1432.73,734.036 1433.29,682.514 1433.85,700.569 1434.41,713.841 1434.97,711.978 1435.53,692.26 1436.09,672.295 1436.65,657.787 1437.21,659.57 1437.77,646.55 1438.33,696.425 1438.88,695.657 1439.44,645.154 1440,664.26 1440.56,665.429 1441.12,698.185 1441.68,746.465 1442.24,740.509 1442.8,724.732 1443.36,725.001 1443.92,703.999 1444.48,666.045 1445.04,649.9 1445.6,682.354 1446.15,635.828 1446.71,623.822 1447.27,610.459 1447.83,633.396 1448.39,650.695 1448.95,652.244 1449.51,687.277 1450.07,656.834 1450.63,658.382 1451.19,647.442 1451.75,646.699 1452.31,682.394 1452.87,684.466 1453.42,685.979 1453.98,685.294 1454.54,685.903 1455.1,673.911 1455.66,661.326 1456.22,663.169 1456.78,649.252 1457.34,635.05 1457.9,637.206 1458.46,626.753 1459.02,676.68 1459.58,660.803 1460.14,646.073 1460.7,648.897 1461.25,636.255 1461.81,635.113 1462.37,637.491 1462.93,602.693 1463.49,620.925 1464.05,610.291 1464.61,631.899 1465.17,650.419 1465.73,672.148 1466.29,673.682 1466.85,677.368 1467.41,692.855 1467.97,675.538 1468.52,675.587 1469.08,674.504 1469.64,676.592 1470.2,676.676 1470.76,691.133 1471.32,654.627 1471.88,640.678 1472.44,661.218 1473,676.667 1473.56,676.426 1474.12,676.47 1474.68,676.014 1475.24,690.771 1475.79,706.375 1476.35,737.179 1476.91,733.402 1477.47,714.293 1478.03,697.318 1478.59,678.416 1479.15,696.115 1479.71,646.556 1480.27,631.663 1480.83,667.776 1481.39,667.232 1481.95,650.116 1482.51,639.423 1483.07,624.184 1483.62,691.059 1484.18,689.848 1484.74,658.198 1485.3,712.002 1485.86,695.912 1486.42,676.166 1486.98,659.854 1487.54,646.166 1488.1,666.485 1488.66,711.029 1489.22,711.557 1489.78,774.993 1490.34,786.468 1490.89,782.646 1491.45,762.121 1492.01,775.358 1492.57,752.191 1493.13,732.055 1493.69,715.532 1494.25,730.664 1494.81,714.744 1495.37,713.625 1495.93,709.835 1496.49,758.415 1497.05,755.512 1497.61,735.847 1498.16,718.167 1498.72,717.055 1499.28,699.618 1499.84,680.647 1500.4,682.08 1500.96,680.724 1501.52,679.643 1502.08,697.632 1502.64,696.265 1503.2,697.239 1503.76,681.354 1504.32,729.115 1504.88,742.662 1505.44,739.696 1505.99,769.664 1506.55,732.131 1507.11,744.855 1507.67,741.735 1508.23,738.498 1508.79,748.093 1509.35,728.25 1509.91,694.86 1510.47,660.924 1511.03,663.494 1511.59,665.422 1512.15,681.017 1512.71,664.578 1513.26,683.155 1513.82,666.934 1514.38,651.815 1514.94,635.627 1515.5,669.626 1516.06,668.191 1516.62,684.204 1517.18,638.032 1517.74,644.327 1518.3,630.062 1518.86,662.842 1519.42,711.199 1519.98,707.847 1520.53,705.878 1521.09,721.952 1521.65,735.252 1522.21,701.415 1522.77,699.429 1523.33,683.383 1523.89,667.051 1524.45,667.161 1525.01,666.117 1525.57,731.763 1526.13,727.439 1526.69,740.209 1527.25,722.434 1527.81,722.294 1528.36,655.31 1528.92,672.036 1529.48,690.463 1530.04,674.691 1530.6,688.598 1531.16,702.119 1531.72,682.118 1532.28,670.564 1532.84,640.38 1533.4,641.77 1533.96,629.441 1534.52,633.035 1535.08,668.781 1535.63,665.828 1536.19,649.887 1536.75,636.278 1537.31,621.104 1537.87,626.247 1538.43,632.235 1538.99,666.535 1539.55,684.833 1540.11,687.259 1540.67,703.33 1541.23,687.643 1541.79,703.936 1542.35,703.368 1542.9,670.531 1543.46,690.085 1544.02,688.218 1544.58,687.522 1545.14,702.866 1545.7,701.337 1546.26,683.895 1546.82,668.952 1547.38,670.388 1547.94,668.329 1548.5,685.264 1549.06,669.202 1549.62,667.68 1550.18,654.126 1550.73,656.739 1551.29,673.569 1551.85,704.923 1552.41,704.144 1552.97,685.992 1553.53,702.299 1554.09,688.744 1554.65,709.042 1555.21,707.92 1555.77,721.668 1556.33,738.809 1556.89,736.284 1557.45,734.596 1558,730.334 1558.56,727.089 1559.12,740.283 1559.68,753.481 1560.24,796.352 1560.8,804.581 1561.36,814.436 1561.92,775.637 1562.48,739.802 1563.04,704.777 1563.6,683.654 1564.16,686.296 1564.72,637.356 1565.28,654.985 1565.83,667.627 1566.39,684.013 1566.95,715.204 1567.51,714.791 1568.07,682.402 1568.63,667.022 1569.19,685.988 1569.75,683.917 1570.31,652.297 1570.87,657.974 1571.43,676.957 1571.99,596.592 1572.55,601.727 1573.1,619.962 1573.66,621.454 1574.22,607.159 1574.78,611.581 1575.34,584.94 1575.9,559.282 1576.46,548.984 1577.02,542.921 1577.58,534.611 1578.14,539.293 1578.7,530.811 1579.26,506.378 1579.82,518.905 1580.37,524.598 1580.93,533.78 1581.49,538.991 1582.05,546.458 1582.61,523.085 1583.17,532.324 1583.73,555.901 1584.29,581.059 1584.85,651.35 1585.41,700.802 1585.97,684.995 1586.53,686.836 1587.09,670.888 1587.65,668.103 1588.2,671.091 1588.76,703.674 1589.32,735.6 1589.88,717.36 1590.44,718.666 1591,732.745 1591.56,763.754 1592.12,788.748 1592.68,798.43 1593.24,791.74 1593.8,817.674 1594.36,812.096 1594.92,772.65 1595.47,751.532 1596.03,765.846 1596.59,762.326 1597.15,712.038 1597.71,711.052 1598.27,710.299 1598.83,711.906 1599.39,724.921 1599.95,688.433 1600.51,656.588 1601.07,657.325 1601.63,673.451 1602.19,687.847 1602.74,722.348 1603.3,737.803 1603.86,733.686 1604.42,729.905 1604.98,710.887 1605.54,760.069 1606.1,739.627 1606.66,752.204 1607.22,751.479 1607.78,749.64 1608.34,730.593 1608.9,693.113 1609.46,691.719 1610.02,674.963 1610.57,673.566 1611.13,655.372 1611.69,671.889 1612.25,635.661 1612.81,657.866 1613.37,676.789 1613.93,675.561 1614.49,642.713 1615.05,659.748 1615.61,643.265 1616.17,613.128 1616.73,618.046 1617.29,623.007 1617.84,611.481 1618.4,628.403 1618.96,635.21 1619.52,576.079 1620.08,548.049 1620.64,557.41 1621.2,576.694 1621.76,631.455 1622.32,681.286 1622.88,664.209 1623.44,649.073 1624,651.044 1624.56,634.255 1625.11,637.981 1625.67,623.454 1626.23,576.714 1626.79,600.386 1627.35,589.121 1627.91,592.793 1628.47,645.383 1629.03,632.088 1629.59,603.265 1630.15,604.865 1630.71,607.882 1631.27,629.607 1631.83,599.836 1632.39,617.314 1632.94,588.162 1633.5,594.146 1634.06,598.986 1634.62,569.9 1635.18,576.171 1635.74,632.065 1636.3,619.993 1636.86,655.678 1637.42,657.233 1637.98,661.697 1638.54,663.78 1639.1,666.226 1639.66,685.628 1640.21,672.84 1640.77,693.77 1641.33,704.625 1641.89,720.261 1642.45,750.409 1643.01,745.592 1643.57,728.107 1644.13,739.812 1644.69,721.687 1645.25,753.94 1645.81,767.599 1646.37,797.69 1646.93,791.31 1647.48,783.408 1648.04,827.374 1648.6,788.755 1649.16,764.293 1649.72,746.283 1650.28,757.9 1650.84,753.562 1651.4,733.004 1651.96,715.501 1652.52,699.127 1653.08,697.591 1653.64,698.486 1654.2,699.789 1654.76,664.686 1655.31,679.396 1655.87,679.232 1656.43,693.835 1656.99,698.647 1657.55,714.788 1658.11,710.166 1658.67,709.368 1659.23,708.828 1659.79,707.866 1660.35,703.919 1660.91,637.088 1661.47,658.148 1662.03,655.318 1662.58,704.764 1663.14,690.152 1663.7,707.061 1664.26,705.843 1664.82,704.748 1665.38,703.295 1665.94,703.908 1666.5,753.857 1667.06,764.204 1667.62,731.757 1668.18,711.517 1668.74,741.442 1669.3,741.602 1669.85,735.427 1670.41,733.793 1670.97,730.595 1671.53,726.927 1672.09,724.429 1672.65,736.132 1673.21,717.917 1673.77,685.655 1674.33,649.558 1674.89,669.034 1675.45,703.305 1676.01,683.424 1676.57,681.901 1677.13,665.046 1677.68,681.52 1678.24,682.806 1678.8,663.153 1679.36,663.898 1679.92,665.073 1680.48,681.709 1681.04,681.376 1681.6,742.973 1682.16,758.203 1682.72,786.04 1683.28,742.733 1683.84,725.174 1684.4,720.37 1684.95,749.935 1685.51,746.223 1686.07,743.344 1686.63,709.749 1687.19,693.258 1687.75,677.684 1688.31,677.07 1688.87,709.185 1689.43,720.901 1689.99,717.709 1690.55,734.753 1691.11,711.385 1691.67,693.423 1692.23,674.242 1692.78,627.288 1693.34,632.139 1693.9,667.638 1694.46,685.869 1695.02,686.906 1695.58,707.159 1696.14,706.098 1696.7,703.81 1697.26,731.086 1697.82,711.02 1698.38,712.334 1698.94,709.816 1699.5,692.373 1700.05,691.376 1700.61,672.464 1701.17,689.764 1701.73,724.405 1702.29,704.729 1702.85,670.129 1703.41,670.611 1703.97,687.689 1704.53,701.415 1705.09,749.373 1705.65,729.734 1706.21,745.276 1706.77,757.414 1707.32,749.62 1707.88,694.638 1708.44,679.688 1709,695.334 1709.56,678.13 1710.12,647.781 1710.68,679.786 1711.24,663.246 1711.8,666.249 1712.36,682.918 1712.92,683.661 1713.48,679.516 1714.04,698.6 1714.6,697.525 1715.15,697.68 1715.71,693.029 1716.27,692.052 1716.83,659.656 1717.39,680.308 1717.95,698.292 1718.51,714.028 1719.07,729.138 1719.63,758.576 1720.19,720.99 1720.75,720.088 1721.31,732.252 1721.87,731.174 1722.42,746.126 1722.98,741.446 1723.54,740.625 1724.1,703.343 1724.66,683.704 1725.22,665.546 1725.78,669.078 1726.34,687.219 1726.9,702.232 1727.46,700.358 1728.02,666.103 1728.58,668.881 1729.14,669.29 1729.69,685.36 1730.25,700.01 1730.81,665.533 1731.37,631.345 1731.93,618.145 1732.49,622.409 1733.05,657.775 1733.61,624.899 1734.17,594.416 1734.73,614.727 1735.29,601.08 1735.85,586.111 1736.41,606.638 1736.97,630.293 1737.52,633.193 1738.08,618.231 1738.64,637.952 1739.2,651.539 1739.76,685.134 1740.32,715.738 1740.88,701.211 1741.44,716.929 1742,700.906 1742.56,713.807 1743.12,682.38 1743.68,683.751 1744.24,683.666 1744.79,695.587 1745.35,692.616 1745.91,710 1746.47,709.612 1747.03,711.199 1747.59,674.078 1748.15,707.113 1748.71,693.459 1749.27,693.342 1749.83,708.501 1750.39,722.754 1750.95,706.611 1751.51,705.978 1752.06,687.67 1752.62,705.016 1753.18,672.365 1753.74,691.09 1754.3,670.801 1754.86,669.942 1755.42,687.17 1755.98,685.221 1756.54,698.136 1757.1,700.087 1757.66,714.591 1758.22,725.117 1758.78,737.874 1759.34,737.28 1759.89,732.304 1760.45,745.704 1761.01,758.971 1761.57,754.116 1762.13,735.139 1762.69,716.119 1763.25,731.144 1763.81,746.165 1764.37,728.016 1764.93,730.374 1765.49,725.287 1766.05,690.867 1766.61,703.561 1767.16,717.681 1767.72,717.356 1768.28,668.434 1768.84,670.264 1769.4,654.11 1769.96,671.713 1770.52,659.038 1771.08,625.752 1771.64,661.023 1772.2,696.433 1772.76,709.236 1773.32,708.668 1773.88,707.428 1774.43,672.938 1774.99,671.756 1775.55,673.432 1776.11,674.144 1776.67,675.005 1777.23,690.62 1777.79,676.233 1778.35,675.435 1778.91,695.532 1779.47,677.952 1780.03,677.93 1780.59,664.927 1781.15,667.461 1781.71,635.803 1782.26,638.573 1782.82,624.908 1783.38,611.887 1783.94,581.698 1784.5,588.242 1785.06,597.043 1785.62,603.331 1786.18,591.111 1786.74,597.511 1787.3,620.866 1787.86,605.053 1788.42,610.439 1788.98,645.305 1789.53,665.837 1790.09,632.48 1790.65,649.158 1791.21,650.308 1791.77,681.934 1792.33,667.366 1792.89,666.123 1793.45,635.827 1794.01,654.082 1794.57,702.571 1795.13,682.35 1795.69,702.025 1796.25,703.082 1796.8,706.872 1797.36,690.058 1797.92,625.933 1798.48,594.085 1799.04,632.866 1799.6,651.58 1800.16,636.644 1800.72,654.074 1801.28,655.916 1801.84,642.357 1802.4,646.368 1802.96,648.846 1803.52,635.513 1804.08,636.413 1804.63,640.927 1805.19,660.96 1805.75,661.351 1806.31,647.798 1806.87,696.963 1807.43,729.734 1807.99,727.059 1808.55,692.512 1809.11,705.703 1809.67,701.345 1810.23,682.6 1810.79,668.95 1811.35,653.366 1811.9,639.712 1812.46,624.622 1813.02,611.634 1813.58,597.467 1814.14,580.734 1814.7,587.621 1815.26,621.287 1815.82,609.053 1816.38,612.331 1816.94,630.571 1817.5,649.87 1818.06,650.869 1818.62,666.922 1819.18,666.551 1819.73,622.92 1820.29,662.548 1820.85,647.971 1821.41,634.331 1821.97,653.57 1822.53,705.991 1823.09,692.553 1823.65,704.867 1824.21,704.612 1824.77,719.331 1825.33,751.71 1825.89,762.238 1826.45,740.939 1827,720.126 1827.56,736.464 1828.12,752.111 1828.68,749.577 1829.24,746.638 1829.8,743.698 1830.36,708.229 1830.92,691.434 1831.48,689.413 1832.04,688.995 1832.6,691.667 1833.16,641.677 1833.72,676.832 1834.27,676.348 1834.83,675.137 1835.39,678.239 1835.95,681.406 1836.51,664.266 1837.07,675.967 1837.63,677.433 1838.19,642.991 \"/>\n<path clip-path=\"url(#clip483)\" d=\"M720.247 689.482 L720.806 689.482 L721.365 689.482 L721.924 689.482 L722.484 689.482 L723.043 689.482 L723.602 689.482 L724.161 689.482 L724.721 689.482 L725.28 689.482 L725.839 689.482 L726.398 689.482 L726.958 689.482 L727.517 689.482 L728.076 689.482 L728.635 689.482 L729.195 689.482 L729.754 689.482 L730.313 689.482 L730.872 689.482 L731.432 689.482 L731.991 689.482 L732.55 689.482 L733.109 689.482 L733.669 689.482 L734.228 689.482 L734.787 689.482 L735.346 689.482 L735.906 689.482 L736.465 689.482 L737.024 689.482 L737.583 689.482 L738.143 689.482 L738.702 689.482 L739.261 689.482 L739.82 689.482 L740.38 689.482 L740.939 689.482 L741.498 689.482 L742.057 689.482 L742.617 689.482 L743.176 689.482 L743.735 689.482 L744.294 689.482 L744.854 689.482 L745.413 689.482 L745.972 689.482 L746.531 689.482 L747.091 689.482 L747.65 689.482 L748.209 689.482 L748.768 689.482 L749.328 689.482 L749.887 689.482 L750.446 689.482 L751.005 689.482 L751.565 689.482 L752.124 689.482 L752.683 689.482 L753.242 689.482 L753.802 689.482 L754.361 689.482 L754.92 689.482 L755.479 689.482 L756.039 689.482 L756.598 689.482 L757.157 689.482 L757.716 689.482 L758.276 689.482 L758.835 689.482 L759.394 689.482 L759.953 689.482 L760.513 689.482 L761.072 689.482 L761.631 689.482 L762.19 689.482 L762.75 689.482 L763.309 689.482 L763.868 689.482 L764.427 689.482 L764.987 689.482 L765.546 689.482 L766.105 689.482 L766.664 689.482 L767.224 689.482 L767.783 689.482 L768.342 689.482 L768.901 689.482 L769.461 689.482 L770.02 689.482 L770.579 689.482 L771.138 689.482 L771.698 689.482 L772.257 689.482 L772.816 689.482 L773.375 689.482 L773.935 689.482 L774.494 689.482 L775.053 689.482 L775.612 689.482 L776.172 689.482 L776.731 689.482 L777.29 689.482 L777.849 689.482 L778.409 689.482 L778.968 689.482 L779.527 689.482 L780.086 689.482 L780.646 689.482 L781.205 689.482 L781.764 689.482 L782.323 689.482 L782.883 689.482 L783.442 689.482 L784.001 689.482 L784.56 689.482 L785.12 689.482 L785.679 689.482 L786.238 689.482 L786.797 689.482 L787.357 689.482 L787.916 689.482 L788.475 689.482 L789.034 689.482 L789.594 689.482 L790.153 689.482 L790.712 689.482 L791.271 689.482 L791.831 689.482 L792.39 689.482 L792.949 689.482 L793.508 689.482 L794.068 689.482 L794.627 689.482 L795.186 689.482 L795.745 689.482 L796.305 689.482 L796.864 689.482 L797.423 689.482 L797.982 689.482 L798.542 689.482 L799.101 689.482 L799.66 689.482 L800.219 689.482 L800.779 689.482 L801.338 689.482 L801.897 689.482 L802.456 689.482 L803.016 689.482 L803.575 689.482 L804.134 689.482 L804.693 689.482 L805.253 689.482 L805.812 689.482 L806.371 689.482 L806.931 689.482 L807.49 689.482 L808.049 689.482 L808.608 689.482 L809.168 689.482 L809.727 689.482 L810.286 689.482 L810.845 689.482 L811.405 689.482 L811.964 689.482 L812.523 689.482 L813.082 689.482 L813.642 689.482 L814.201 689.482 L814.76 689.482 L815.319 689.482 L815.879 689.482 L816.438 689.482 L816.997 689.482 L817.556 689.482 L818.116 689.482 L818.675 689.482 L819.234 689.482 L819.793 689.482 L820.353 689.482 L820.912 689.482 L821.471 689.482 L822.03 689.482 L822.59 689.482 L823.149 689.482 L823.708 689.482 L824.267 689.482 L824.827 689.482 L825.386 689.482 L825.945 689.482 L826.504 689.482 L827.064 689.482 L827.623 689.482 L828.182 689.482 L828.741 689.482 L829.301 689.482 L829.86 689.482 L830.419 689.482 L830.978 689.482 L831.538 689.482 L832.097 689.482 L832.656 689.482 L833.215 689.482 L833.775 689.482 L834.334 689.482 L834.893 689.482 L835.452 689.482 L836.012 689.482 L836.571 689.482 L837.13 689.482 L837.689 689.482 L838.249 689.482 L838.808 689.482 L839.367 689.482 L839.926 689.482 L840.486 689.482 L841.045 689.482 L841.604 689.482 L842.163 689.482 L842.723 689.482 L843.282 689.482 L843.841 689.482 L844.4 689.482 L844.96 689.482 L845.519 689.482 L846.078 689.482 L846.637 689.482 L847.197 689.482 L847.756 689.482 L848.315 689.482 L848.874 689.482 L849.434 689.482 L849.993 689.482 L850.552 689.482 L851.111 689.482 L851.671 689.482 L852.23 689.482 L852.789 689.482 L853.348 689.482 L853.908 689.482 L854.467 689.482 L855.026 689.482 L855.585 689.482 L856.145 689.482 L856.704 689.482 L857.263 689.482 L857.822 689.482 L858.382 689.482 L858.941 689.482 L859.5 689.482 L860.059 689.482 L860.619 689.482 L861.178 689.482 L861.737 689.482 L862.296 689.482 L862.856 689.482 L863.415 689.482 L863.974 689.482 L864.533 689.482 L865.093 689.482 L865.652 689.482 L866.211 689.482 L866.77 689.482 L867.33 689.482 L867.889 689.482 L868.448 689.482 L869.007 689.482 L869.567 689.482 L870.126 689.482 L870.685 689.482 L871.244 689.482 L871.804 689.482 L872.363 689.482 L872.922 689.482 L873.481 689.482 L874.041 689.482 L874.6 689.482 L875.159 689.482 L875.718 689.482 L876.278 689.482 L876.837 689.482 L877.396 689.482 L877.955 689.482 L878.515 689.482 L879.074 689.482 L879.633 689.482 L880.192 689.482 L880.752 689.482 L881.311 689.482 L881.87 689.482 L882.429 689.482 L882.989 689.482 L883.548 689.482 L884.107 689.482 L884.666 689.482 L885.226 689.482 L885.785 689.482 L886.344 689.482 L886.903 689.482 L887.463 689.482 L888.022 689.482 L888.581 689.482 L889.14 689.482 L889.7 689.482 L890.259 689.482 L890.818 689.482 L891.377 689.482 L891.937 689.482 L892.496 689.482 L893.055 689.482 L893.614 689.482 L894.174 689.482 L894.733 689.482 L895.292 689.482 L895.851 689.482 L896.411 689.482 L896.97 689.482 L897.529 689.482 L898.088 689.482 L898.648 689.482 L899.207 689.482 L899.766 689.482 L900.325 689.482 L900.885 689.482 L901.444 689.482 L902.003 689.482 L902.562 689.482 L903.122 689.482 L903.681 689.482 L904.24 689.482 L904.799 689.482 L905.359 689.482 L905.918 689.482 L906.477 689.482 L907.036 689.482 L907.596 689.482 L908.155 689.482 L908.714 689.482 L909.273 689.482 L909.833 689.482 L910.392 689.482 L910.951 689.482 L911.51 689.482 L912.07 689.482 L912.629 689.482 L913.188 689.482 L913.747 689.482 L914.307 689.482 L914.866 689.482 L915.425 689.482 L915.984 689.482 L916.544 689.482 L917.103 689.482 L917.662 689.482 L918.221 689.482 L918.781 689.482 L919.34 689.482 L919.899 689.482 L920.458 689.482 L921.018 689.482 L921.577 689.482 L922.136 689.482 L922.695 689.482 L923.255 689.482 L923.814 689.482 L924.373 689.482 L924.932 689.482 L925.492 689.482 L926.051 689.482 L926.61 689.482 L927.169 689.482 L927.729 689.482 L928.288 689.482 L928.847 689.482 L929.406 689.482 L929.966 689.482 L930.525 689.482 L931.084 689.482 L931.644 689.482 L932.203 689.482 L932.762 689.482 L933.321 689.482 L933.881 689.482 L934.44 689.482 L934.999 689.482 L935.558 689.482 L936.118 689.482 L936.677 689.482 L937.236 689.482 L937.795 689.482 L938.355 689.482 L938.914 689.482 L939.473 689.482 L940.032 689.482 L940.592 689.482 L941.151 689.482 L941.71 689.482 L942.269 689.482 L942.829 689.482 L943.388 689.482 L943.947 689.482 L944.506 689.482 L945.066 689.482 L945.625 689.482 L946.184 689.482 L946.743 689.482 L947.303 689.482 L947.862 689.482 L948.421 689.482 L948.98 689.482 L949.54 689.482 L950.099 689.482 L950.658 689.482 L951.217 689.482 L951.777 689.482 L952.336 689.482 L952.895 689.482 L953.454 689.482 L954.014 689.482 L954.573 689.482 L955.132 689.482 L955.691 689.482 L956.251 689.482 L956.81 689.482 L957.369 689.482 L957.928 689.482 L958.488 689.482 L959.047 689.482 L959.606 689.482 L960.165 689.482 L960.725 689.482 L961.284 689.482 L961.843 689.482 L962.402 689.482 L962.962 689.482 L963.521 689.482 L964.08 689.482 L964.639 689.482 L965.199 689.482 L965.758 689.482 L966.317 689.482 L966.876 689.482 L967.436 689.482 L967.995 689.482 L968.554 689.482 L969.113 689.482 L969.673 689.482 L970.232 689.482 L970.791 689.482 L971.35 689.482 L971.91 689.482 L972.469 689.482 L973.028 689.482 L973.587 689.482 L974.147 689.482 L974.706 689.482 L975.265 689.482 L975.824 689.482 L976.384 689.482 L976.943 689.482 L977.502 689.482 L978.061 689.482 L978.621 689.482 L979.18 689.482 L979.739 689.482 L980.298 689.482 L980.858 689.482 L981.417 689.482 L981.976 689.482 L982.535 689.482 L983.095 689.482 L983.654 689.482 L984.213 689.482 L984.772 689.482 L985.332 689.482 L985.891 689.482 L986.45 689.482 L987.009 689.482 L987.569 689.482 L988.128 689.482 L988.687 689.482 L989.246 689.482 L989.806 689.482 L990.365 689.482 L990.924 689.482 L991.483 689.482 L992.043 689.482 L992.602 689.482 L993.161 689.482 L993.72 689.482 L994.28 689.482 L994.839 689.482 L995.398 689.482 L995.957 689.482 L996.517 689.482 L997.076 689.482 L997.635 689.482 L998.194 689.482 L998.754 689.482 L999.313 689.482 L999.872 689.482 L1000.43 689.482 L1000.99 689.482 L1001.55 689.482 L1002.11 689.482 L1002.67 689.482 L1003.23 689.482 L1003.79 689.482 L1004.35 689.482 L1004.91 689.482 L1005.46 689.482 L1006.02 689.482 L1006.58 689.482 L1007.14 689.482 L1007.7 689.482 L1008.26 689.482 L1008.82 689.482 L1009.38 689.482 L1009.94 689.482 L1010.5 689.482 L1011.06 689.482 L1011.62 689.482 L1012.18 689.482 L1012.73 689.482 L1013.29 689.482 L1013.85 689.482 L1014.41 689.482 L1014.97 689.482 L1015.53 689.482 L1016.09 689.482 L1016.65 689.482 L1017.21 689.482 L1017.77 689.482 L1018.33 689.482 L1018.89 689.482 L1019.45 689.482 L1020.01 689.482 L1020.56 689.482 L1021.12 689.482 L1021.68 689.482 L1022.24 689.482 L1022.8 689.482 L1023.36 689.482 L1023.92 689.482 L1024.48 689.482 L1025.04 689.482 L1025.6 689.482 L1026.16 689.482 L1026.72 689.482 L1027.28 689.482 L1027.83 689.482 L1028.39 689.482 L1028.95 689.482 L1029.51 689.482 L1030.07 689.482 L1030.63 689.482 L1031.19 689.482 L1031.75 689.482 L1032.31 689.482 L1032.87 689.482 L1033.43 689.482 L1033.99 689.482 L1034.55 689.482 L1035.1 689.482 L1035.66 689.482 L1036.22 689.482 L1036.78 689.482 L1037.34 689.482 L1037.9 689.482 L1038.46 689.482 L1039.02 689.482 L1039.58 689.482 L1040.14 689.482 L1040.7 689.482 L1041.26 689.482 L1041.82 689.482 L1042.38 689.482 L1042.93 689.482 L1043.49 689.482 L1044.05 689.482 L1044.61 689.482 L1045.17 689.482 L1045.73 689.482 L1046.29 689.482 L1046.85 689.482 L1047.41 689.482 L1047.97 689.482 L1048.53 689.482 L1049.09 689.482 L1049.65 689.482 L1050.2 689.482 L1050.76 689.482 L1051.32 689.482 L1051.88 689.482 L1052.44 689.482 L1053 689.482 L1053.56 689.482 L1054.12 689.482 L1054.68 689.482 L1055.24 689.482 L1055.8 689.482 L1056.36 689.482 L1056.92 689.482 L1057.48 689.482 L1058.03 689.482 L1058.59 689.482 L1059.15 689.482 L1059.71 689.482 L1060.27 689.482 L1060.83 689.482 L1061.39 689.482 L1061.95 689.482 L1062.51 689.482 L1063.07 689.482 L1063.63 689.482 L1064.19 689.482 L1064.75 689.482 L1065.3 689.482 L1065.86 689.482 L1066.42 689.482 L1066.98 689.482 L1067.54 689.482 L1068.1 689.482 L1068.66 689.482 L1069.22 689.482 L1069.78 689.482 L1070.34 689.482 L1070.9 689.482 L1071.46 689.482 L1072.02 689.482 L1072.57 689.482 L1073.13 689.482 L1073.69 689.482 L1074.25 689.482 L1074.81 689.482 L1075.37 689.482 L1075.93 689.482 L1076.49 689.482 L1077.05 689.482 L1077.61 689.482 L1078.17 689.482 L1078.73 689.482 L1079.29 689.482 L1079.85 689.482 L1080.4 689.482 L1080.96 689.482 L1081.52 689.482 L1082.08 689.482 L1082.64 689.482 L1083.2 689.482 L1083.76 689.482 L1084.32 689.482 L1084.88 689.482 L1085.44 689.482 L1086 689.482 L1086.56 689.482 L1087.12 689.482 L1087.67 689.482 L1088.23 689.482 L1088.79 689.482 L1089.35 689.482 L1089.91 689.482 L1090.47 689.482 L1091.03 689.482 L1091.59 689.482 L1092.15 689.482 L1092.71 689.482 L1093.27 689.482 L1093.83 689.482 L1094.39 689.482 L1094.94 689.482 L1095.5 689.482 L1096.06 689.482 L1096.62 689.482 L1097.18 689.482 L1097.74 689.482 L1098.3 689.482 L1098.86 689.482 L1099.42 689.482 L1099.98 689.482 L1100.54 689.482 L1101.1 689.482 L1101.66 689.482 L1102.22 689.482 L1102.77 689.482 L1103.33 689.482 L1103.89 689.482 L1104.45 689.482 L1105.01 689.482 L1105.57 689.482 L1106.13 689.482 L1106.69 689.482 L1107.25 689.482 L1107.81 689.482 L1108.37 689.482 L1108.93 689.482 L1109.49 689.482 L1110.04 689.482 L1110.6 689.482 L1111.16 689.482 L1111.72 689.482 L1112.28 689.482 L1112.84 689.482 L1113.4 689.482 L1113.96 689.482 L1114.52 689.482 L1115.08 689.482 L1115.64 689.482 L1116.2 689.482 L1116.76 689.482 L1117.31 689.482 L1117.87 689.482 L1118.43 689.482 L1118.99 689.482 L1119.55 689.482 L1120.11 689.482 L1120.67 689.482 L1121.23 689.482 L1121.79 689.482 L1122.35 689.482 L1122.91 689.482 L1123.47 689.482 L1124.03 689.482 L1124.59 689.482 L1125.14 689.482 L1125.7 689.482 L1126.26 689.482 L1126.82 689.482 L1127.38 689.482 L1127.94 689.482 L1128.5 689.482 L1129.06 689.482 L1129.62 689.482 L1130.18 689.482 L1130.74 689.482 L1131.3 689.482 L1131.86 689.482 L1132.41 689.482 L1132.97 689.482 L1133.53 689.482 L1134.09 689.482 L1134.65 689.482 L1135.21 689.482 L1135.77 689.482 L1136.33 689.482 L1136.89 689.482 L1137.45 689.482 L1138.01 689.482 L1138.57 689.482 L1139.13 689.482 L1139.68 689.482 L1140.24 689.482 L1140.8 689.482 L1141.36 689.482 L1141.92 689.482 L1142.48 689.482 L1143.04 689.482 L1143.6 689.482 L1144.16 689.482 L1144.72 689.482 L1145.28 689.482 L1145.84 689.482 L1146.4 689.482 L1146.96 689.482 L1147.51 689.482 L1148.07 689.482 L1148.63 689.482 L1149.19 689.482 L1149.75 689.482 L1150.31 689.482 L1150.87 689.482 L1151.43 689.482 L1151.99 689.482 L1152.55 689.482 L1153.11 689.482 L1153.67 689.482 L1154.23 689.482 L1154.78 689.482 L1155.34 689.482 L1155.9 689.482 L1156.46 689.482 L1157.02 689.482 L1157.58 689.482 L1158.14 689.482 L1158.7 689.482 L1159.26 689.482 L1159.82 689.482 L1160.38 689.482 L1160.94 689.482 L1161.5 689.482 L1162.05 689.482 L1162.61 689.482 L1163.17 689.482 L1163.73 689.482 L1164.29 689.482 L1164.85 689.482 L1165.41 689.482 L1165.97 689.482 L1166.53 689.482 L1167.09 689.482 L1167.65 689.482 L1168.21 689.482 L1168.77 689.482 L1169.33 689.482 L1169.88 689.482 L1170.44 689.482 L1171 689.482 L1171.56 689.482 L1172.12 689.482 L1172.68 689.482 L1173.24 689.482 L1173.8 689.482 L1174.36 689.482 L1174.92 689.482 L1175.48 689.482 L1176.04 689.482 L1176.6 689.482 L1177.15 689.482 L1177.71 689.482 L1178.27 689.482 L1178.83 689.482 L1179.39 689.482 L1179.95 689.482 L1180.51 689.482 L1181.07 689.482 L1181.63 689.482 L1182.19 689.482 L1182.75 689.482 L1183.31 689.482 L1183.87 689.482 L1184.43 689.482 L1184.98 689.482 L1185.54 689.482 L1186.1 689.482 L1186.66 689.482 L1187.22 689.482 L1187.78 689.482 L1188.34 689.482 L1188.9 689.482 L1189.46 689.482 L1190.02 689.482 L1190.58 689.482 L1191.14 689.482 L1191.7 689.482 L1192.25 689.482 L1192.81 689.482 L1193.37 689.482 L1193.93 689.482 L1194.49 689.482 L1195.05 689.482 L1195.61 689.482 L1196.17 689.482 L1196.73 689.482 L1197.29 689.482 L1197.85 689.482 L1198.41 689.482 L1198.97 689.482 L1199.52 689.482 L1200.08 689.482 L1200.64 689.482 L1201.2 689.482 L1201.76 689.482 L1202.32 689.482 L1202.88 689.482 L1203.44 689.482 L1204 689.482 L1204.56 689.482 L1205.12 689.482 L1205.68 689.482 L1206.24 689.482 L1206.8 689.482 L1207.35 689.482 L1207.91 689.482 L1208.47 689.482 L1209.03 689.482 L1209.59 689.482 L1210.15 689.482 L1210.71 689.482 L1211.27 689.482 L1211.83 689.482 L1212.39 689.482 L1212.95 689.482 L1213.51 689.482 L1214.07 689.482 L1214.62 689.482 L1215.18 689.482 L1215.74 689.482 L1216.3 689.482 L1216.86 689.482 L1217.42 689.482 L1217.98 689.482 L1218.54 689.482 L1219.1 689.482 L1219.66 689.482 L1220.22 689.482 L1220.78 689.482 L1221.34 689.482 L1221.89 689.482 L1222.45 689.482 L1223.01 689.482 L1223.57 689.482 L1224.13 689.482 L1224.69 689.482 L1225.25 689.482 L1225.81 689.482 L1226.37 689.482 L1226.93 689.482 L1227.49 689.482 L1228.05 689.482 L1228.61 689.482 L1229.17 689.482 L1229.72 689.482 L1230.28 689.482 L1230.84 689.482 L1231.4 689.482 L1231.96 689.482 L1232.52 689.482 L1233.08 689.482 L1233.64 689.482 L1234.2 689.482 L1234.76 689.482 L1235.32 689.482 L1235.88 689.482 L1236.44 689.482 L1236.99 689.482 L1237.55 689.482 L1238.11 689.482 L1238.67 689.482 L1239.23 689.482 L1239.79 689.482 L1240.35 689.482 L1240.91 689.482 L1241.47 689.482 L1242.03 689.482 L1242.59 689.482 L1243.15 689.482 L1243.71 689.482 L1244.26 689.482 L1244.82 689.482 L1245.38 689.482 L1245.94 689.482 L1246.5 689.482 L1247.06 689.482 L1247.62 689.482 L1248.18 689.482 L1248.74 689.482 L1249.3 689.482 L1249.86 689.482 L1250.42 689.482 L1250.98 689.482 L1251.54 689.482 L1252.09 689.482 L1252.65 689.482 L1253.21 689.482 L1253.77 689.482 L1254.33 689.482 L1254.89 689.482 L1255.45 689.482 L1256.01 689.482 L1256.57 689.482 L1257.13 689.482 L1257.69 689.482 L1258.25 689.482 L1258.81 689.482 L1259.36 689.482 L1259.92 689.482 L1260.48 689.482 L1261.04 689.482 L1261.6 689.482 L1262.16 689.482 L1262.72 689.482 L1263.28 689.482 L1263.84 689.482 L1264.4 689.482 L1264.96 689.482 L1265.52 689.482 L1266.08 689.482 L1266.63 689.482 L1267.19 689.482 L1267.75 689.482 L1268.31 689.482 L1268.87 689.482 L1269.43 689.482 L1269.99 689.482 L1270.55 689.482 L1271.11 689.482 L1271.67 689.482 L1272.23 689.482 L1272.79 689.482 L1273.35 689.482 L1273.91 689.482 L1274.46 689.482 L1275.02 689.482 L1275.58 689.482 L1276.14 689.482 L1276.7 689.482 L1277.26 689.482 L1277.82 689.482 L1278.38 689.482 L1278.94 689.482 L1279.5 689.482 L1280.06 689.482 L1280.62 689.482 L1281.18 689.482 L1281.73 689.482 L1282.29 689.482 L1282.85 689.482 L1283.41 689.482 L1283.97 689.482 L1284.53 689.482 L1285.09 689.482 L1285.65 689.482 L1286.21 689.482 L1286.77 689.482 L1287.33 689.482 L1287.89 689.482 L1288.45 689.482 L1289 689.482 L1289.56 689.482 L1290.12 689.482 L1290.68 689.482 L1291.24 689.482 L1291.8 689.482 L1292.36 689.482 L1292.92 689.482 L1293.48 689.482 L1294.04 689.482 L1294.6 689.482 L1295.16 689.482 L1295.72 689.482 L1296.28 689.482 L1296.83 689.482 L1297.39 689.482 L1297.95 689.482 L1298.51 689.482 L1299.07 689.482 L1299.63 689.482 L1300.19 689.482 L1300.75 689.482 L1301.31 689.482 L1301.87 689.482 L1302.43 689.482 L1302.99 689.482 L1303.55 689.482 L1304.1 689.482 L1304.66 689.482 L1305.22 689.482 L1305.78 689.482 L1306.34 689.482 L1306.9 689.482 L1307.46 689.482 L1308.02 689.482 L1308.58 689.482 L1309.14 689.482 L1309.7 689.482 L1310.26 689.482 L1310.82 689.482 L1311.38 689.482 L1311.93 689.482 L1312.49 689.482 L1313.05 689.482 L1313.61 689.482 L1314.17 689.482 L1314.73 689.482 L1315.29 689.482 L1315.85 689.482 L1316.41 689.482 L1316.97 689.482 L1317.53 689.482 L1318.09 689.482 L1318.65 689.482 L1319.2 689.482 L1319.76 689.482 L1320.32 689.482 L1320.88 689.482 L1321.44 689.482 L1322 689.482 L1322.56 689.482 L1323.12 689.482 L1323.68 689.482 L1324.24 689.482 L1324.8 689.482 L1325.36 689.482 L1325.92 689.482 L1326.47 689.482 L1327.03 689.482 L1327.59 689.482 L1328.15 689.482 L1328.71 689.482 L1329.27 689.482 L1329.83 689.482 L1330.39 689.482 L1330.95 689.482 L1331.51 689.482 L1332.07 689.482 L1332.63 689.482 L1333.19 689.482 L1333.75 689.482 L1334.3 689.482 L1334.86 689.482 L1335.42 689.482 L1335.98 689.482 L1336.54 689.482 L1337.1 689.482 L1337.66 689.482 L1338.22 689.482 L1338.78 689.482 L1339.34 689.482 L1339.9 689.482 L1340.46 689.482 L1341.02 689.482 L1341.57 689.482 L1342.13 689.482 L1342.69 689.482 L1343.25 689.482 L1343.81 689.482 L1344.37 689.482 L1344.93 689.482 L1345.49 689.482 L1346.05 689.482 L1346.61 689.482 L1347.17 689.482 L1347.73 689.482 L1348.29 689.482 L1348.84 689.482 L1349.4 689.482 L1349.96 689.482 L1350.52 689.482 L1351.08 689.482 L1351.64 689.482 L1352.2 689.482 L1352.76 689.482 L1353.32 689.482 L1353.88 689.482 L1354.44 689.482 L1355 689.482 L1355.56 689.482 L1356.12 689.482 L1356.67 689.482 L1357.23 689.482 L1357.79 689.482 L1358.35 689.482 L1358.91 689.482 L1359.47 689.482 L1360.03 689.482 L1360.59 689.482 L1361.15 689.482 L1361.71 689.482 L1362.27 689.482 L1362.83 689.482 L1363.39 689.482 L1363.94 689.482 L1364.5 689.482 L1365.06 689.482 L1365.62 689.482 L1366.18 689.482 L1366.74 689.482 L1367.3 689.482 L1367.86 689.482 L1368.42 689.482 L1368.98 689.482 L1369.54 689.482 L1370.1 689.482 L1370.66 689.482 L1371.21 689.482 L1371.77 689.482 L1372.33 689.482 L1372.89 689.482 L1373.45 689.482 L1374.01 689.482 L1374.57 689.482 L1375.13 689.482 L1375.69 689.482 L1376.25 689.482 L1376.81 689.482 L1377.37 689.482 L1377.93 689.482 L1378.49 689.482 L1379.04 689.482 L1379.6 689.482 L1380.16 689.482 L1380.72 689.482 L1381.28 689.482 L1381.84 689.482 L1382.4 689.482 L1382.96 689.482 L1383.52 689.482 L1384.08 689.482 L1384.64 689.482 L1385.2 689.482 L1385.76 689.482 L1386.31 689.482 L1386.87 689.482 L1387.43 689.482 L1387.99 689.482 L1388.55 689.482 L1389.11 689.482 L1389.67 689.482 L1390.23 689.482 L1390.79 689.482 L1391.35 689.482 L1391.91 689.482 L1392.47 689.482 L1393.03 689.482 L1393.58 689.482 L1394.14 689.482 L1394.7 689.482 L1395.26 689.482 L1395.82 689.482 L1396.38 689.482 L1396.94 689.482 L1397.5 689.482 L1398.06 689.482 L1398.62 689.482 L1399.18 689.482 L1399.74 689.482 L1400.3 689.482 L1400.86 689.482 L1401.41 689.482 L1401.97 689.482 L1402.53 689.482 L1403.09 689.482 L1403.65 689.482 L1404.21 689.482 L1404.77 689.482 L1405.33 689.482 L1405.89 689.482 L1406.45 689.482 L1407.01 689.482 L1407.57 689.482 L1408.13 689.482 L1408.68 689.482 L1409.24 689.482 L1409.8 689.482 L1410.36 689.482 L1410.92 689.482 L1411.48 689.482 L1412.04 689.482 L1412.6 689.482 L1413.16 689.482 L1413.72 689.482 L1414.28 689.482 L1414.84 689.482 L1415.4 689.482 L1415.95 689.482 L1416.51 689.482 L1417.07 689.482 L1417.63 689.482 L1418.19 689.482 L1418.75 689.482 L1419.31 689.482 L1419.87 689.482 L1420.43 689.482 L1420.99 689.482 L1421.55 689.482 L1422.11 689.482 L1422.67 689.482 L1423.23 689.482 L1423.78 689.482 L1424.34 689.482 L1424.9 689.482 L1425.46 689.482 L1426.02 689.482 L1426.58 689.482 L1427.14 689.482 L1427.7 689.482 L1428.26 689.482 L1428.82 689.482 L1429.38 689.482 L1429.94 689.482 L1430.5 689.482 L1431.05 689.482 L1431.61 689.482 L1432.17 689.482 L1432.73 689.482 L1433.29 689.482 L1433.85 689.482 L1434.41 689.482 L1434.97 689.482 L1435.53 689.482 L1436.09 689.482 L1436.65 689.482 L1437.21 689.482 L1437.77 689.482 L1438.33 689.482 L1438.88 689.482 L1439.44 689.482 L1440 689.482 L1440.56 689.482 L1441.12 689.482 L1441.68 689.482 L1442.24 689.482 L1442.8 689.482 L1443.36 689.482 L1443.92 689.482 L1444.48 689.482 L1445.04 689.482 L1445.6 689.482 L1446.15 689.482 L1446.71 689.482 L1447.27 689.482 L1447.83 689.482 L1448.39 689.482 L1448.95 689.482 L1449.51 689.482 L1450.07 689.482 L1450.63 689.482 L1451.19 689.482 L1451.75 689.482 L1452.31 689.482 L1452.87 689.482 L1453.42 689.482 L1453.98 689.482 L1454.54 689.482 L1455.1 689.482 L1455.66 689.482 L1456.22 689.482 L1456.78 689.482 L1457.34 689.482 L1457.9 689.482 L1458.46 689.482 L1459.02 689.482 L1459.58 689.482 L1460.14 689.482 L1460.7 689.482 L1461.25 689.482 L1461.81 689.482 L1462.37 689.482 L1462.93 689.482 L1463.49 689.482 L1464.05 689.482 L1464.61 689.482 L1465.17 689.482 L1465.73 689.482 L1466.29 689.482 L1466.85 689.482 L1467.41 689.482 L1467.97 689.482 L1468.52 689.482 L1469.08 689.482 L1469.64 689.482 L1470.2 689.482 L1470.76 689.482 L1471.32 689.482 L1471.88 689.482 L1472.44 689.482 L1473 689.482 L1473.56 689.482 L1474.12 689.482 L1474.68 689.482 L1475.24 689.482 L1475.79 689.482 L1476.35 689.482 L1476.91 689.482 L1477.47 689.482 L1478.03 689.482 L1478.59 689.482 L1479.15 689.482 L1479.71 689.482 L1480.27 689.482 L1480.83 689.482 L1481.39 689.482 L1481.95 689.482 L1482.51 689.482 L1483.07 689.482 L1483.62 689.482 L1484.18 689.482 L1484.74 689.482 L1485.3 689.482 L1485.86 689.482 L1486.42 689.482 L1486.98 689.482 L1487.54 689.482 L1488.1 689.482 L1488.66 689.482 L1489.22 689.482 L1489.78 689.482 L1490.34 689.482 L1490.89 689.482 L1491.45 689.482 L1492.01 689.482 L1492.57 689.482 L1493.13 689.482 L1493.69 689.482 L1494.25 689.482 L1494.81 689.482 L1495.37 689.482 L1495.93 689.482 L1496.49 689.482 L1497.05 689.482 L1497.61 689.482 L1498.16 689.482 L1498.72 689.482 L1499.28 689.482 L1499.84 689.482 L1500.4 689.482 L1500.96 689.482 L1501.52 689.482 L1502.08 689.482 L1502.64 689.482 L1503.2 689.482 L1503.76 689.482 L1504.32 689.482 L1504.88 689.482 L1505.44 689.482 L1505.99 689.482 L1506.55 689.482 L1507.11 689.482 L1507.67 689.482 L1508.23 689.482 L1508.79 689.482 L1509.35 689.482 L1509.91 689.482 L1510.47 689.482 L1511.03 689.482 L1511.59 689.482 L1512.15 689.482 L1512.71 689.482 L1513.26 689.482 L1513.82 689.482 L1514.38 689.482 L1514.94 689.482 L1515.5 689.482 L1516.06 689.482 L1516.62 689.482 L1517.18 689.482 L1517.74 689.482 L1518.3 689.482 L1518.86 689.482 L1519.42 689.482 L1519.98 689.482 L1520.53 689.482 L1521.09 689.482 L1521.65 689.482 L1522.21 689.482 L1522.77 689.482 L1523.33 689.482 L1523.89 689.482 L1524.45 689.482 L1525.01 689.482 L1525.57 689.482 L1526.13 689.482 L1526.69 689.482 L1527.25 689.482 L1527.81 689.482 L1528.36 689.482 L1528.92 689.482 L1529.48 689.482 L1530.04 689.482 L1530.6 689.482 L1531.16 689.482 L1531.72 689.482 L1532.28 689.482 L1532.84 689.482 L1533.4 689.482 L1533.96 689.482 L1534.52 689.482 L1535.08 689.482 L1535.63 689.482 L1536.19 689.482 L1536.75 689.482 L1537.31 689.482 L1537.87 689.482 L1538.43 689.482 L1538.99 689.482 L1539.55 689.482 L1540.11 689.482 L1540.67 689.482 L1541.23 689.482 L1541.79 689.482 L1542.35 689.482 L1542.9 689.482 L1543.46 689.482 L1544.02 689.482 L1544.58 689.482 L1545.14 689.482 L1545.7 689.482 L1546.26 689.482 L1546.82 689.482 L1547.38 689.482 L1547.94 689.482 L1548.5 689.482 L1549.06 689.482 L1549.62 689.482 L1550.18 689.482 L1550.73 689.482 L1551.29 689.482 L1551.85 689.482 L1552.41 689.482 L1552.97 689.482 L1553.53 689.482 L1554.09 689.482 L1554.65 689.482 L1555.21 689.482 L1555.77 689.482 L1556.33 689.482 L1556.89 689.482 L1557.45 689.482 L1558 689.482 L1558.56 689.482 L1559.12 689.482 L1559.68 689.482 L1560.24 689.482 L1560.8 689.482 L1561.36 689.482 L1561.92 689.482 L1562.48 689.482 L1563.04 689.482 L1563.6 689.482 L1564.16 689.482 L1564.72 689.482 L1565.28 689.482 L1565.83 689.482 L1566.39 689.482 L1566.95 689.482 L1567.51 689.482 L1568.07 689.482 L1568.63 689.482 L1569.19 689.482 L1569.75 689.482 L1570.31 689.482 L1570.87 689.482 L1571.43 689.482 L1571.99 689.482 L1572.55 689.482 L1573.1 689.482 L1573.66 689.482 L1574.22 689.482 L1574.78 689.482 L1575.34 689.482 L1575.9 689.482 L1576.46 689.482 L1577.02 689.482 L1577.58 689.482 L1578.14 689.482 L1578.7 689.482 L1579.26 689.482 L1579.82 689.482 L1580.37 689.482 L1580.93 689.482 L1581.49 689.482 L1582.05 689.482 L1582.61 689.482 L1583.17 689.482 L1583.73 689.482 L1584.29 689.482 L1584.85 689.482 L1585.41 689.482 L1585.97 689.482 L1586.53 689.482 L1587.09 689.482 L1587.65 689.482 L1588.2 689.482 L1588.76 689.482 L1589.32 689.482 L1589.88 689.482 L1590.44 689.482 L1591 689.482 L1591.56 689.482 L1592.12 689.482 L1592.68 689.482 L1593.24 689.482 L1593.8 689.482 L1594.36 689.482 L1594.92 689.482 L1595.47 689.482 L1596.03 689.482 L1596.59 689.482 L1597.15 689.482 L1597.71 689.482 L1598.27 689.482 L1598.83 689.482 L1599.39 689.482 L1599.95 689.482 L1600.51 689.482 L1601.07 689.482 L1601.63 689.482 L1602.19 689.482 L1602.74 689.482 L1603.3 689.482 L1603.86 689.482 L1604.42 689.482 L1604.98 689.482 L1605.54 689.482 L1606.1 689.482 L1606.66 689.482 L1607.22 689.482 L1607.78 689.482 L1608.34 689.482 L1608.9 689.482 L1609.46 689.482 L1610.02 689.482 L1610.57 689.482 L1611.13 689.482 L1611.69 689.482 L1612.25 689.482 L1612.81 689.482 L1613.37 689.482 L1613.93 689.482 L1614.49 689.482 L1615.05 689.482 L1615.61 689.482 L1616.17 689.482 L1616.73 689.482 L1617.29 689.482 L1617.84 689.482 L1618.4 689.482 L1618.96 689.482 L1619.52 689.482 L1620.08 689.482 L1620.64 689.482 L1621.2 689.482 L1621.76 689.482 L1622.32 689.482 L1622.88 689.482 L1623.44 689.482 L1624 689.482 L1624.56 689.482 L1625.11 689.482 L1625.67 689.482 L1626.23 689.482 L1626.79 689.482 L1627.35 689.482 L1627.91 689.482 L1628.47 689.482 L1629.03 689.482 L1629.59 689.482 L1630.15 689.482 L1630.71 689.482 L1631.27 689.482 L1631.83 689.482 L1632.39 689.482 L1632.94 689.482 L1633.5 689.482 L1634.06 689.482 L1634.62 689.482 L1635.18 689.482 L1635.74 689.482 L1636.3 689.482 L1636.86 689.482 L1637.42 689.482 L1637.98 689.482 L1638.54 689.482 L1639.1 689.482 L1639.66 689.482 L1640.21 689.482 L1640.77 689.482 L1641.33 689.482 L1641.89 689.482 L1642.45 689.482 L1643.01 689.482 L1643.57 689.482 L1644.13 689.482 L1644.69 689.482 L1645.25 689.482 L1645.81 689.482 L1646.37 689.482 L1646.93 689.482 L1647.48 689.482 L1648.04 689.482 L1648.6 689.482 L1649.16 689.482 L1649.72 689.482 L1650.28 689.482 L1650.84 689.482 L1651.4 689.482 L1651.96 689.482 L1652.52 689.482 L1653.08 689.482 L1653.64 689.482 L1654.2 689.482 L1654.76 689.482 L1655.31 689.482 L1655.87 689.482 L1656.43 689.482 L1656.99 689.482 L1657.55 689.482 L1658.11 689.482 L1658.67 689.482 L1659.23 689.482 L1659.79 689.482 L1660.35 689.482 L1660.91 689.482 L1661.47 689.482 L1662.03 689.482 L1662.58 689.482 L1663.14 689.482 L1663.7 689.482 L1664.26 689.482 L1664.82 689.482 L1665.38 689.482 L1665.94 689.482 L1666.5 689.482 L1667.06 689.482 L1667.62 689.482 L1668.18 689.482 L1668.74 689.482 L1669.3 689.482 L1669.85 689.482 L1670.41 689.482 L1670.97 689.482 L1671.53 689.482 L1672.09 689.482 L1672.65 689.482 L1673.21 689.482 L1673.77 689.482 L1674.33 689.482 L1674.89 689.482 L1675.45 689.482 L1676.01 689.482 L1676.57 689.482 L1677.13 689.482 L1677.68 689.482 L1678.24 689.482 L1678.8 689.482 L1679.36 689.482 L1679.92 689.482 L1680.48 689.482 L1681.04 689.482 L1681.6 689.482 L1682.16 689.482 L1682.72 689.482 L1683.28 689.482 L1683.84 689.482 L1684.4 689.482 L1684.95 689.482 L1685.51 689.482 L1686.07 689.482 L1686.63 689.482 L1687.19 689.482 L1687.75 689.482 L1688.31 689.482 L1688.87 689.482 L1689.43 689.482 L1689.99 689.482 L1690.55 689.482 L1691.11 689.482 L1691.67 689.482 L1692.23 689.482 L1692.78 689.482 L1693.34 689.482 L1693.9 689.482 L1694.46 689.482 L1695.02 689.482 L1695.58 689.482 L1696.14 689.482 L1696.7 689.482 L1697.26 689.482 L1697.82 689.482 L1698.38 689.482 L1698.94 689.482 L1699.5 689.482 L1700.05 689.482 L1700.61 689.482 L1701.17 689.482 L1701.73 689.482 L1702.29 689.482 L1702.85 689.482 L1703.41 689.482 L1703.97 689.482 L1704.53 689.482 L1705.09 689.482 L1705.65 689.482 L1706.21 689.482 L1706.77 689.482 L1707.32 689.482 L1707.88 689.482 L1708.44 689.482 L1709 689.482 L1709.56 689.482 L1710.12 689.482 L1710.68 689.482 L1711.24 689.482 L1711.8 689.482 L1712.36 689.482 L1712.92 689.482 L1713.48 689.482 L1714.04 689.482 L1714.6 689.482 L1715.15 689.482 L1715.71 689.482 L1716.27 689.482 L1716.83 689.482 L1717.39 689.482 L1717.95 689.482 L1718.51 689.482 L1719.07 689.482 L1719.63 689.482 L1720.19 689.482 L1720.75 689.482 L1721.31 689.482 L1721.87 689.482 L1722.42 689.482 L1722.98 689.482 L1723.54 689.482 L1724.1 689.482 L1724.66 689.482 L1725.22 689.482 L1725.78 689.482 L1726.34 689.482 L1726.9 689.482 L1727.46 689.482 L1728.02 689.482 L1728.58 689.482 L1729.14 689.482 L1729.69 689.482 L1730.25 689.482 L1730.81 689.482 L1731.37 689.482 L1731.93 689.482 L1732.49 689.482 L1733.05 689.482 L1733.61 689.482 L1734.17 689.482 L1734.73 689.482 L1735.29 689.482 L1735.85 689.482 L1736.41 689.482 L1736.97 689.482 L1737.52 689.482 L1738.08 689.482 L1738.64 689.482 L1739.2 689.482 L1739.76 689.482 L1740.32 689.482 L1740.88 689.482 L1741.44 689.482 L1742 689.482 L1742.56 689.482 L1743.12 689.482 L1743.68 689.482 L1744.24 689.482 L1744.79 689.482 L1745.35 689.482 L1745.91 689.482 L1746.47 689.482 L1747.03 689.482 L1747.59 689.482 L1748.15 689.482 L1748.71 689.482 L1749.27 689.482 L1749.83 689.482 L1750.39 689.482 L1750.95 689.482 L1751.51 689.482 L1752.06 689.482 L1752.62 689.482 L1753.18 689.482 L1753.74 689.482 L1754.3 689.482 L1754.86 689.482 L1755.42 689.482 L1755.98 689.482 L1756.54 689.482 L1757.1 689.482 L1757.66 689.482 L1758.22 689.482 L1758.78 689.482 L1759.34 689.482 L1759.89 689.482 L1760.45 689.482 L1761.01 689.482 L1761.57 689.482 L1762.13 689.482 L1762.69 689.482 L1763.25 689.482 L1763.81 689.482 L1764.37 689.482 L1764.93 689.482 L1765.49 689.482 L1766.05 689.482 L1766.61 689.482 L1767.16 689.482 L1767.72 689.482 L1768.28 689.482 L1768.84 689.482 L1769.4 689.482 L1769.96 689.482 L1770.52 689.482 L1771.08 689.482 L1771.64 689.482 L1772.2 689.482 L1772.76 689.482 L1773.32 689.482 L1773.88 689.482 L1774.43 689.482 L1774.99 689.482 L1775.55 689.482 L1776.11 689.482 L1776.67 689.482 L1777.23 689.482 L1777.79 689.482 L1778.35 689.482 L1778.91 689.482 L1779.47 689.482 L1780.03 689.482 L1780.59 689.482 L1781.15 689.482 L1781.71 689.482 L1782.26 689.482 L1782.82 689.482 L1783.38 689.482 L1783.94 689.482 L1784.5 689.482 L1785.06 689.482 L1785.62 689.482 L1786.18 689.482 L1786.74 689.482 L1787.3 689.482 L1787.86 689.482 L1788.42 689.482 L1788.98 689.482 L1789.53 689.482 L1790.09 689.482 L1790.65 689.482 L1791.21 689.482 L1791.77 689.482 L1792.33 689.482 L1792.89 689.482 L1793.45 689.482 L1794.01 689.482 L1794.57 689.482 L1795.13 689.482 L1795.69 689.482 L1796.25 689.482 L1796.8 689.482 L1797.36 689.482 L1797.92 689.482 L1798.48 689.482 L1799.04 689.482 L1799.6 689.482 L1800.16 689.482 L1800.72 689.482 L1801.28 689.482 L1801.84 689.482 L1802.4 689.482 L1802.96 689.482 L1803.52 689.482 L1804.08 689.482 L1804.63 689.482 L1805.19 689.482 L1805.75 689.482 L1806.31 689.482 L1806.87 689.482 L1807.43 689.482 L1807.99 689.482 L1808.55 689.482 L1809.11 689.482 L1809.67 689.482 L1810.23 689.482 L1810.79 689.482 L1811.35 689.482 L1811.9 689.482 L1812.46 689.482 L1813.02 689.482 L1813.58 689.482 L1814.14 689.482 L1814.7 689.482 L1815.26 689.482 L1815.82 689.482 L1816.38 689.482 L1816.94 689.482 L1817.5 689.482 L1818.06 689.482 L1818.62 689.482 L1819.18 689.482 L1819.73 689.482 L1820.29 689.482 L1820.85 689.482 L1821.41 689.482 L1821.97 689.482 L1822.53 689.482 L1823.09 689.482 L1823.65 689.482 L1824.21 689.482 L1824.77 689.482 L1825.33 689.482 L1825.89 689.482 L1826.45 689.482 L1827 689.482 L1827.56 689.482 L1828.12 689.482 L1828.68 689.482 L1829.24 689.482 L1829.8 689.482 L1830.36 689.482 L1830.92 689.482 L1831.48 689.482 L1832.04 689.482 L1832.6 689.482 L1833.16 689.482 L1833.72 689.482 L1834.27 689.482 L1834.83 689.482 L1835.39 689.482 L1835.95 689.482 L1836.51 689.482 L1837.07 689.482 L1837.63 689.482 L1838.19 689.482 L1838.19 682.143 L1837.63 682.143 L1837.07 682.143 L1836.51 682.143 L1835.95 682.143 L1835.39 682.143 L1834.83 682.143 L1834.27 682.143 L1833.72 682.143 L1833.16 682.143 L1832.6 682.143 L1832.04 682.143 L1831.48 682.143 L1830.92 682.143 L1830.36 682.143 L1829.8 682.143 L1829.24 682.143 L1828.68 682.143 L1828.12 682.143 L1827.56 682.143 L1827 682.143 L1826.45 682.143 L1825.89 682.143 L1825.33 682.143 L1824.77 682.143 L1824.21 682.143 L1823.65 682.143 L1823.09 682.143 L1822.53 682.143 L1821.97 682.143 L1821.41 682.143 L1820.85 682.143 L1820.29 682.143 L1819.73 682.143 L1819.18 682.143 L1818.62 682.143 L1818.06 682.143 L1817.5 682.143 L1816.94 682.143 L1816.38 682.143 L1815.82 682.143 L1815.26 682.143 L1814.7 682.143 L1814.14 682.143 L1813.58 682.143 L1813.02 682.143 L1812.46 682.143 L1811.9 682.143 L1811.35 682.143 L1810.79 682.143 L1810.23 682.143 L1809.67 682.143 L1809.11 682.143 L1808.55 682.143 L1807.99 682.143 L1807.43 682.143 L1806.87 682.143 L1806.31 682.143 L1805.75 682.143 L1805.19 682.143 L1804.63 682.143 L1804.08 682.143 L1803.52 682.143 L1802.96 682.143 L1802.4 682.143 L1801.84 682.143 L1801.28 682.143 L1800.72 682.143 L1800.16 682.143 L1799.6 682.143 L1799.04 682.143 L1798.48 682.143 L1797.92 682.143 L1797.36 682.143 L1796.8 682.143 L1796.25 682.143 L1795.69 682.143 L1795.13 682.143 L1794.57 682.143 L1794.01 682.143 L1793.45 682.143 L1792.89 682.143 L1792.33 682.143 L1791.77 682.143 L1791.21 682.143 L1790.65 682.143 L1790.09 682.143 L1789.53 682.143 L1788.98 682.143 L1788.42 682.143 L1787.86 682.143 L1787.3 682.143 L1786.74 682.143 L1786.18 682.143 L1785.62 682.143 L1785.06 682.143 L1784.5 682.143 L1783.94 682.143 L1783.38 682.143 L1782.82 682.143 L1782.26 682.143 L1781.71 682.143 L1781.15 682.143 L1780.59 682.143 L1780.03 682.143 L1779.47 682.143 L1778.91 682.143 L1778.35 682.143 L1777.79 682.143 L1777.23 682.143 L1776.67 682.143 L1776.11 682.143 L1775.55 682.143 L1774.99 682.143 L1774.43 682.143 L1773.88 682.143 L1773.32 682.143 L1772.76 682.143 L1772.2 682.143 L1771.64 682.143 L1771.08 682.143 L1770.52 682.143 L1769.96 682.143 L1769.4 682.143 L1768.84 682.143 L1768.28 682.143 L1767.72 682.143 L1767.16 682.143 L1766.61 682.143 L1766.05 682.143 L1765.49 682.143 L1764.93 682.143 L1764.37 682.143 L1763.81 682.143 L1763.25 682.143 L1762.69 682.143 L1762.13 682.143 L1761.57 682.143 L1761.01 682.143 L1760.45 682.143 L1759.89 682.143 L1759.34 682.143 L1758.78 682.143 L1758.22 682.143 L1757.66 682.143 L1757.1 682.143 L1756.54 682.143 L1755.98 682.143 L1755.42 682.143 L1754.86 682.143 L1754.3 682.143 L1753.74 682.143 L1753.18 682.143 L1752.62 682.143 L1752.06 682.143 L1751.51 682.143 L1750.95 682.143 L1750.39 682.143 L1749.83 682.143 L1749.27 682.143 L1748.71 682.143 L1748.15 682.143 L1747.59 682.143 L1747.03 682.143 L1746.47 682.143 L1745.91 682.143 L1745.35 682.143 L1744.79 682.143 L1744.24 682.143 L1743.68 682.143 L1743.12 682.143 L1742.56 682.143 L1742 682.143 L1741.44 682.143 L1740.88 682.143 L1740.32 682.143 L1739.76 682.143 L1739.2 682.143 L1738.64 682.143 L1738.08 682.143 L1737.52 682.143 L1736.97 682.143 L1736.41 682.143 L1735.85 682.143 L1735.29 682.143 L1734.73 682.143 L1734.17 682.143 L1733.61 682.143 L1733.05 682.143 L1732.49 682.143 L1731.93 682.143 L1731.37 682.143 L1730.81 682.143 L1730.25 682.143 L1729.69 682.143 L1729.14 682.143 L1728.58 682.143 L1728.02 682.143 L1727.46 682.143 L1726.9 682.143 L1726.34 682.143 L1725.78 682.143 L1725.22 682.143 L1724.66 682.143 L1724.1 682.143 L1723.54 682.143 L1722.98 682.143 L1722.42 682.143 L1721.87 682.143 L1721.31 682.143 L1720.75 682.143 L1720.19 682.143 L1719.63 682.143 L1719.07 682.143 L1718.51 682.143 L1717.95 682.143 L1717.39 682.143 L1716.83 682.143 L1716.27 682.143 L1715.71 682.143 L1715.15 682.143 L1714.6 682.143 L1714.04 682.143 L1713.48 682.143 L1712.92 682.143 L1712.36 682.143 L1711.8 682.143 L1711.24 682.143 L1710.68 682.143 L1710.12 682.143 L1709.56 682.143 L1709 682.143 L1708.44 682.143 L1707.88 682.143 L1707.32 682.143 L1706.77 682.143 L1706.21 682.143 L1705.65 682.143 L1705.09 682.143 L1704.53 682.143 L1703.97 682.143 L1703.41 682.143 L1702.85 682.143 L1702.29 682.143 L1701.73 682.143 L1701.17 682.143 L1700.61 682.143 L1700.05 682.143 L1699.5 682.143 L1698.94 682.143 L1698.38 682.143 L1697.82 682.143 L1697.26 682.143 L1696.7 682.143 L1696.14 682.143 L1695.58 682.143 L1695.02 682.143 L1694.46 682.143 L1693.9 682.143 L1693.34 682.143 L1692.78 682.143 L1692.23 682.143 L1691.67 682.143 L1691.11 682.143 L1690.55 682.143 L1689.99 682.143 L1689.43 682.143 L1688.87 682.143 L1688.31 682.143 L1687.75 682.143 L1687.19 682.143 L1686.63 682.143 L1686.07 682.143 L1685.51 682.143 L1684.95 682.143 L1684.4 682.143 L1683.84 682.143 L1683.28 682.143 L1682.72 682.143 L1682.16 682.143 L1681.6 682.143 L1681.04 682.143 L1680.48 682.143 L1679.92 682.143 L1679.36 682.143 L1678.8 682.143 L1678.24 682.143 L1677.68 682.143 L1677.13 682.143 L1676.57 682.143 L1676.01 682.143 L1675.45 682.143 L1674.89 682.143 L1674.33 682.143 L1673.77 682.143 L1673.21 682.143 L1672.65 682.143 L1672.09 682.143 L1671.53 682.143 L1670.97 682.143 L1670.41 682.143 L1669.85 682.143 L1669.3 682.143 L1668.74 682.143 L1668.18 682.143 L1667.62 682.143 L1667.06 682.143 L1666.5 682.143 L1665.94 682.143 L1665.38 682.143 L1664.82 682.143 L1664.26 682.143 L1663.7 682.143 L1663.14 682.143 L1662.58 682.143 L1662.03 682.143 L1661.47 682.143 L1660.91 682.143 L1660.35 682.143 L1659.79 682.143 L1659.23 682.143 L1658.67 682.143 L1658.11 682.143 L1657.55 682.143 L1656.99 682.143 L1656.43 682.143 L1655.87 682.143 L1655.31 682.143 L1654.76 682.143 L1654.2 682.143 L1653.64 682.143 L1653.08 682.143 L1652.52 682.143 L1651.96 682.143 L1651.4 682.143 L1650.84 682.143 L1650.28 682.143 L1649.72 682.143 L1649.16 682.143 L1648.6 682.143 L1648.04 682.143 L1647.48 682.143 L1646.93 682.143 L1646.37 682.143 L1645.81 682.143 L1645.25 682.143 L1644.69 682.143 L1644.13 682.143 L1643.57 682.143 L1643.01 682.143 L1642.45 682.143 L1641.89 682.143 L1641.33 682.143 L1640.77 682.143 L1640.21 682.143 L1639.66 682.143 L1639.1 682.143 L1638.54 682.143 L1637.98 682.143 L1637.42 682.143 L1636.86 682.143 L1636.3 682.143 L1635.74 682.143 L1635.18 682.143 L1634.62 682.143 L1634.06 682.143 L1633.5 682.143 L1632.94 682.143 L1632.39 682.143 L1631.83 682.143 L1631.27 682.143 L1630.71 682.143 L1630.15 682.143 L1629.59 682.143 L1629.03 682.143 L1628.47 682.143 L1627.91 682.143 L1627.35 682.143 L1626.79 682.143 L1626.23 682.143 L1625.67 682.143 L1625.11 682.143 L1624.56 682.143 L1624 682.143 L1623.44 682.143 L1622.88 682.143 L1622.32 682.143 L1621.76 682.143 L1621.2 682.143 L1620.64 682.143 L1620.08 682.143 L1619.52 682.143 L1618.96 682.143 L1618.4 682.143 L1617.84 682.143 L1617.29 682.143 L1616.73 682.143 L1616.17 682.143 L1615.61 682.143 L1615.05 682.143 L1614.49 682.143 L1613.93 682.143 L1613.37 682.143 L1612.81 682.143 L1612.25 682.143 L1611.69 682.143 L1611.13 682.143 L1610.57 682.143 L1610.02 682.143 L1609.46 682.143 L1608.9 682.143 L1608.34 682.143 L1607.78 682.143 L1607.22 682.143 L1606.66 682.143 L1606.1 682.143 L1605.54 682.143 L1604.98 682.143 L1604.42 682.143 L1603.86 682.143 L1603.3 682.143 L1602.74 682.143 L1602.19 682.143 L1601.63 682.143 L1601.07 682.143 L1600.51 682.143 L1599.95 682.143 L1599.39 682.143 L1598.83 682.143 L1598.27 682.143 L1597.71 682.143 L1597.15 682.143 L1596.59 682.143 L1596.03 682.143 L1595.47 682.143 L1594.92 682.143 L1594.36 682.143 L1593.8 682.143 L1593.24 682.143 L1592.68 682.143 L1592.12 682.143 L1591.56 682.143 L1591 682.143 L1590.44 682.143 L1589.88 682.143 L1589.32 682.143 L1588.76 682.143 L1588.2 682.143 L1587.65 682.143 L1587.09 682.143 L1586.53 682.143 L1585.97 682.143 L1585.41 682.143 L1584.85 682.143 L1584.29 682.143 L1583.73 682.143 L1583.17 682.143 L1582.61 682.143 L1582.05 682.143 L1581.49 682.143 L1580.93 682.143 L1580.37 682.143 L1579.82 682.143 L1579.26 682.143 L1578.7 682.143 L1578.14 682.143 L1577.58 682.143 L1577.02 682.143 L1576.46 682.143 L1575.9 682.143 L1575.34 682.143 L1574.78 682.143 L1574.22 682.143 L1573.66 682.143 L1573.1 682.143 L1572.55 682.143 L1571.99 682.143 L1571.43 682.143 L1570.87 682.143 L1570.31 682.143 L1569.75 682.143 L1569.19 682.143 L1568.63 682.143 L1568.07 682.143 L1567.51 682.143 L1566.95 682.143 L1566.39 682.143 L1565.83 682.143 L1565.28 682.143 L1564.72 682.143 L1564.16 682.143 L1563.6 682.143 L1563.04 682.143 L1562.48 682.143 L1561.92 682.143 L1561.36 682.143 L1560.8 682.143 L1560.24 682.143 L1559.68 682.143 L1559.12 682.143 L1558.56 682.143 L1558 682.143 L1557.45 682.143 L1556.89 682.143 L1556.33 682.143 L1555.77 682.143 L1555.21 682.143 L1554.65 682.143 L1554.09 682.143 L1553.53 682.143 L1552.97 682.143 L1552.41 682.143 L1551.85 682.143 L1551.29 682.143 L1550.73 682.143 L1550.18 682.143 L1549.62 682.143 L1549.06 682.143 L1548.5 682.143 L1547.94 682.143 L1547.38 682.143 L1546.82 682.143 L1546.26 682.143 L1545.7 682.143 L1545.14 682.143 L1544.58 682.143 L1544.02 682.143 L1543.46 682.143 L1542.9 682.143 L1542.35 682.143 L1541.79 682.143 L1541.23 682.143 L1540.67 682.143 L1540.11 682.143 L1539.55 682.143 L1538.99 682.143 L1538.43 682.143 L1537.87 682.143 L1537.31 682.143 L1536.75 682.143 L1536.19 682.143 L1535.63 682.143 L1535.08 682.143 L1534.52 682.143 L1533.96 682.143 L1533.4 682.143 L1532.84 682.143 L1532.28 682.143 L1531.72 682.143 L1531.16 682.143 L1530.6 682.143 L1530.04 682.143 L1529.48 682.143 L1528.92 682.143 L1528.36 682.143 L1527.81 682.143 L1527.25 682.143 L1526.69 682.143 L1526.13 682.143 L1525.57 682.143 L1525.01 682.143 L1524.45 682.143 L1523.89 682.143 L1523.33 682.143 L1522.77 682.143 L1522.21 682.143 L1521.65 682.143 L1521.09 682.143 L1520.53 682.143 L1519.98 682.143 L1519.42 682.143 L1518.86 682.143 L1518.3 682.143 L1517.74 682.143 L1517.18 682.143 L1516.62 682.143 L1516.06 682.143 L1515.5 682.143 L1514.94 682.143 L1514.38 682.143 L1513.82 682.143 L1513.26 682.143 L1512.71 682.143 L1512.15 682.143 L1511.59 682.143 L1511.03 682.143 L1510.47 682.143 L1509.91 682.143 L1509.35 682.143 L1508.79 682.143 L1508.23 682.143 L1507.67 682.143 L1507.11 682.143 L1506.55 682.143 L1505.99 682.143 L1505.44 682.143 L1504.88 682.143 L1504.32 682.143 L1503.76 682.143 L1503.2 682.143 L1502.64 682.143 L1502.08 682.143 L1501.52 682.143 L1500.96 682.143 L1500.4 682.143 L1499.84 682.143 L1499.28 682.143 L1498.72 682.143 L1498.16 682.143 L1497.61 682.143 L1497.05 682.143 L1496.49 682.143 L1495.93 682.143 L1495.37 682.143 L1494.81 682.143 L1494.25 682.143 L1493.69 682.143 L1493.13 682.143 L1492.57 682.143 L1492.01 682.143 L1491.45 682.143 L1490.89 682.143 L1490.34 682.143 L1489.78 682.143 L1489.22 682.143 L1488.66 682.143 L1488.1 682.143 L1487.54 682.143 L1486.98 682.143 L1486.42 682.143 L1485.86 682.143 L1485.3 682.143 L1484.74 682.143 L1484.18 682.143 L1483.62 682.143 L1483.07 682.143 L1482.51 682.143 L1481.95 682.143 L1481.39 682.143 L1480.83 682.143 L1480.27 682.143 L1479.71 682.143 L1479.15 682.143 L1478.59 682.143 L1478.03 682.143 L1477.47 682.143 L1476.91 682.143 L1476.35 682.143 L1475.79 682.143 L1475.24 682.143 L1474.68 682.143 L1474.12 682.143 L1473.56 682.143 L1473 682.143 L1472.44 682.143 L1471.88 682.143 L1471.32 682.143 L1470.76 682.143 L1470.2 682.143 L1469.64 682.143 L1469.08 682.143 L1468.52 682.143 L1467.97 682.143 L1467.41 682.143 L1466.85 682.143 L1466.29 682.143 L1465.73 682.143 L1465.17 682.143 L1464.61 682.143 L1464.05 682.143 L1463.49 682.143 L1462.93 682.143 L1462.37 682.143 L1461.81 682.143 L1461.25 682.143 L1460.7 682.143 L1460.14 682.143 L1459.58 682.143 L1459.02 682.143 L1458.46 682.143 L1457.9 682.143 L1457.34 682.143 L1456.78 682.143 L1456.22 682.143 L1455.66 682.143 L1455.1 682.143 L1454.54 682.143 L1453.98 682.143 L1453.42 682.143 L1452.87 682.143 L1452.31 682.143 L1451.75 682.143 L1451.19 682.143 L1450.63 682.143 L1450.07 682.143 L1449.51 682.143 L1448.95 682.143 L1448.39 682.143 L1447.83 682.143 L1447.27 682.143 L1446.71 682.143 L1446.15 682.143 L1445.6 682.143 L1445.04 682.143 L1444.48 682.143 L1443.92 682.143 L1443.36 682.143 L1442.8 682.143 L1442.24 682.143 L1441.68 682.143 L1441.12 682.143 L1440.56 682.143 L1440 682.143 L1439.44 682.143 L1438.88 682.143 L1438.33 682.143 L1437.77 682.143 L1437.21 682.143 L1436.65 682.143 L1436.09 682.143 L1435.53 682.143 L1434.97 682.143 L1434.41 682.143 L1433.85 682.143 L1433.29 682.143 L1432.73 682.143 L1432.17 682.143 L1431.61 682.143 L1431.05 682.143 L1430.5 682.143 L1429.94 682.143 L1429.38 682.143 L1428.82 682.143 L1428.26 682.143 L1427.7 682.143 L1427.14 682.143 L1426.58 682.143 L1426.02 682.143 L1425.46 682.143 L1424.9 682.143 L1424.34 682.143 L1423.78 682.143 L1423.23 682.143 L1422.67 682.143 L1422.11 682.143 L1421.55 682.143 L1420.99 682.143 L1420.43 682.143 L1419.87 682.143 L1419.31 682.143 L1418.75 682.143 L1418.19 682.143 L1417.63 682.143 L1417.07 682.143 L1416.51 682.143 L1415.95 682.143 L1415.4 682.143 L1414.84 682.143 L1414.28 682.143 L1413.72 682.143 L1413.16 682.143 L1412.6 682.143 L1412.04 682.143 L1411.48 682.143 L1410.92 682.143 L1410.36 682.143 L1409.8 682.143 L1409.24 682.143 L1408.68 682.143 L1408.13 682.143 L1407.57 682.143 L1407.01 682.143 L1406.45 682.143 L1405.89 682.143 L1405.33 682.143 L1404.77 682.143 L1404.21 682.143 L1403.65 682.143 L1403.09 682.143 L1402.53 682.143 L1401.97 682.143 L1401.41 682.143 L1400.86 682.143 L1400.3 682.143 L1399.74 682.143 L1399.18 682.143 L1398.62 682.143 L1398.06 682.143 L1397.5 682.143 L1396.94 682.143 L1396.38 682.143 L1395.82 682.143 L1395.26 682.143 L1394.7 682.143 L1394.14 682.143 L1393.58 682.143 L1393.03 682.143 L1392.47 682.143 L1391.91 682.143 L1391.35 682.143 L1390.79 682.143 L1390.23 682.143 L1389.67 682.143 L1389.11 682.143 L1388.55 682.143 L1387.99 682.143 L1387.43 682.143 L1386.87 682.143 L1386.31 682.143 L1385.76 682.143 L1385.2 682.143 L1384.64 682.143 L1384.08 682.143 L1383.52 682.143 L1382.96 682.143 L1382.4 682.143 L1381.84 682.143 L1381.28 682.143 L1380.72 682.143 L1380.16 682.143 L1379.6 682.143 L1379.04 682.143 L1378.49 682.143 L1377.93 682.143 L1377.37 682.143 L1376.81 682.143 L1376.25 682.143 L1375.69 682.143 L1375.13 682.143 L1374.57 682.143 L1374.01 682.143 L1373.45 682.143 L1372.89 682.143 L1372.33 682.143 L1371.77 682.143 L1371.21 682.143 L1370.66 682.143 L1370.1 682.143 L1369.54 682.143 L1368.98 682.143 L1368.42 682.143 L1367.86 682.143 L1367.3 682.143 L1366.74 682.143 L1366.18 682.143 L1365.62 682.143 L1365.06 682.143 L1364.5 682.143 L1363.94 682.143 L1363.39 682.143 L1362.83 682.143 L1362.27 682.143 L1361.71 682.143 L1361.15 682.143 L1360.59 682.143 L1360.03 682.143 L1359.47 682.143 L1358.91 682.143 L1358.35 682.143 L1357.79 682.143 L1357.23 682.143 L1356.67 682.143 L1356.12 682.143 L1355.56 682.143 L1355 682.143 L1354.44 682.143 L1353.88 682.143 L1353.32 682.143 L1352.76 682.143 L1352.2 682.143 L1351.64 682.143 L1351.08 682.143 L1350.52 682.143 L1349.96 682.143 L1349.4 682.143 L1348.84 682.143 L1348.29 682.143 L1347.73 682.143 L1347.17 682.143 L1346.61 682.143 L1346.05 682.143 L1345.49 682.143 L1344.93 682.143 L1344.37 682.143 L1343.81 682.143 L1343.25 682.143 L1342.69 682.143 L1342.13 682.143 L1341.57 682.143 L1341.02 682.143 L1340.46 682.143 L1339.9 682.143 L1339.34 682.143 L1338.78 682.143 L1338.22 682.143 L1337.66 682.143 L1337.1 682.143 L1336.54 682.143 L1335.98 682.143 L1335.42 682.143 L1334.86 682.143 L1334.3 682.143 L1333.75 682.143 L1333.19 682.143 L1332.63 682.143 L1332.07 682.143 L1331.51 682.143 L1330.95 682.143 L1330.39 682.143 L1329.83 682.143 L1329.27 682.143 L1328.71 682.143 L1328.15 682.143 L1327.59 682.143 L1327.03 682.143 L1326.47 682.143 L1325.92 682.143 L1325.36 682.143 L1324.8 682.143 L1324.24 682.143 L1323.68 682.143 L1323.12 682.143 L1322.56 682.143 L1322 682.143 L1321.44 682.143 L1320.88 682.143 L1320.32 682.143 L1319.76 682.143 L1319.2 682.143 L1318.65 682.143 L1318.09 682.143 L1317.53 682.143 L1316.97 682.143 L1316.41 682.143 L1315.85 682.143 L1315.29 682.143 L1314.73 682.143 L1314.17 682.143 L1313.61 682.143 L1313.05 682.143 L1312.49 682.143 L1311.93 682.143 L1311.38 682.143 L1310.82 682.143 L1310.26 682.143 L1309.7 682.143 L1309.14 682.143 L1308.58 682.143 L1308.02 682.143 L1307.46 682.143 L1306.9 682.143 L1306.34 682.143 L1305.78 682.143 L1305.22 682.143 L1304.66 682.143 L1304.1 682.143 L1303.55 682.143 L1302.99 682.143 L1302.43 682.143 L1301.87 682.143 L1301.31 682.143 L1300.75 682.143 L1300.19 682.143 L1299.63 682.143 L1299.07 682.143 L1298.51 682.143 L1297.95 682.143 L1297.39 682.143 L1296.83 682.143 L1296.28 682.143 L1295.72 682.143 L1295.16 682.143 L1294.6 682.143 L1294.04 682.143 L1293.48 682.143 L1292.92 682.143 L1292.36 682.143 L1291.8 682.143 L1291.24 682.143 L1290.68 682.143 L1290.12 682.143 L1289.56 682.143 L1289 682.143 L1288.45 682.143 L1287.89 682.143 L1287.33 682.143 L1286.77 682.143 L1286.21 682.143 L1285.65 682.143 L1285.09 682.143 L1284.53 682.143 L1283.97 682.143 L1283.41 682.143 L1282.85 682.143 L1282.29 682.143 L1281.73 682.143 L1281.18 682.143 L1280.62 682.143 L1280.06 682.143 L1279.5 682.143 L1278.94 682.143 L1278.38 682.143 L1277.82 682.143 L1277.26 682.143 L1276.7 682.143 L1276.14 682.143 L1275.58 682.143 L1275.02 682.143 L1274.46 682.143 L1273.91 682.143 L1273.35 682.143 L1272.79 682.143 L1272.23 682.143 L1271.67 682.143 L1271.11 682.143 L1270.55 682.143 L1269.99 682.143 L1269.43 682.143 L1268.87 682.143 L1268.31 682.143 L1267.75 682.143 L1267.19 682.143 L1266.63 682.143 L1266.08 682.143 L1265.52 682.143 L1264.96 682.143 L1264.4 682.143 L1263.84 682.143 L1263.28 682.143 L1262.72 682.143 L1262.16 682.143 L1261.6 682.143 L1261.04 682.143 L1260.48 682.143 L1259.92 682.143 L1259.36 682.143 L1258.81 682.143 L1258.25 682.143 L1257.69 682.143 L1257.13 682.143 L1256.57 682.143 L1256.01 682.143 L1255.45 682.143 L1254.89 682.143 L1254.33 682.143 L1253.77 682.143 L1253.21 682.143 L1252.65 682.143 L1252.09 682.143 L1251.54 682.143 L1250.98 682.143 L1250.42 682.143 L1249.86 682.143 L1249.3 682.143 L1248.74 682.143 L1248.18 682.143 L1247.62 682.143 L1247.06 682.143 L1246.5 682.143 L1245.94 682.143 L1245.38 682.143 L1244.82 682.143 L1244.26 682.143 L1243.71 682.143 L1243.15 682.143 L1242.59 682.143 L1242.03 682.143 L1241.47 682.143 L1240.91 682.143 L1240.35 682.143 L1239.79 682.143 L1239.23 682.143 L1238.67 682.143 L1238.11 682.143 L1237.55 682.143 L1236.99 682.143 L1236.44 682.143 L1235.88 682.143 L1235.32 682.143 L1234.76 682.143 L1234.2 682.143 L1233.64 682.143 L1233.08 682.143 L1232.52 682.143 L1231.96 682.143 L1231.4 682.143 L1230.84 682.143 L1230.28 682.143 L1229.72 682.143 L1229.17 682.143 L1228.61 682.143 L1228.05 682.143 L1227.49 682.143 L1226.93 682.143 L1226.37 682.143 L1225.81 682.143 L1225.25 682.143 L1224.69 682.143 L1224.13 682.143 L1223.57 682.143 L1223.01 682.143 L1222.45 682.143 L1221.89 682.143 L1221.34 682.143 L1220.78 682.143 L1220.22 682.143 L1219.66 682.143 L1219.1 682.143 L1218.54 682.143 L1217.98 682.143 L1217.42 682.143 L1216.86 682.143 L1216.3 682.143 L1215.74 682.143 L1215.18 682.143 L1214.62 682.143 L1214.07 682.143 L1213.51 682.143 L1212.95 682.143 L1212.39 682.143 L1211.83 682.143 L1211.27 682.143 L1210.71 682.143 L1210.15 682.143 L1209.59 682.143 L1209.03 682.143 L1208.47 682.143 L1207.91 682.143 L1207.35 682.143 L1206.8 682.143 L1206.24 682.143 L1205.68 682.143 L1205.12 682.143 L1204.56 682.143 L1204 682.143 L1203.44 682.143 L1202.88 682.143 L1202.32 682.143 L1201.76 682.143 L1201.2 682.143 L1200.64 682.143 L1200.08 682.143 L1199.52 682.143 L1198.97 682.143 L1198.41 682.143 L1197.85 682.143 L1197.29 682.143 L1196.73 682.143 L1196.17 682.143 L1195.61 682.143 L1195.05 682.143 L1194.49 682.143 L1193.93 682.143 L1193.37 682.143 L1192.81 682.143 L1192.25 682.143 L1191.7 682.143 L1191.14 682.143 L1190.58 682.143 L1190.02 682.143 L1189.46 682.143 L1188.9 682.143 L1188.34 682.143 L1187.78 682.143 L1187.22 682.143 L1186.66 682.143 L1186.1 682.143 L1185.54 682.143 L1184.98 682.143 L1184.43 682.143 L1183.87 682.143 L1183.31 682.143 L1182.75 682.143 L1182.19 682.143 L1181.63 682.143 L1181.07 682.143 L1180.51 682.143 L1179.95 682.143 L1179.39 682.143 L1178.83 682.143 L1178.27 682.143 L1177.71 682.143 L1177.15 682.143 L1176.6 682.143 L1176.04 682.143 L1175.48 682.143 L1174.92 682.143 L1174.36 682.143 L1173.8 682.143 L1173.24 682.143 L1172.68 682.143 L1172.12 682.143 L1171.56 682.143 L1171 682.143 L1170.44 682.143 L1169.88 682.143 L1169.33 682.143 L1168.77 682.143 L1168.21 682.143 L1167.65 682.143 L1167.09 682.143 L1166.53 682.143 L1165.97 682.143 L1165.41 682.143 L1164.85 682.143 L1164.29 682.143 L1163.73 682.143 L1163.17 682.143 L1162.61 682.143 L1162.05 682.143 L1161.5 682.143 L1160.94 682.143 L1160.38 682.143 L1159.82 682.143 L1159.26 682.143 L1158.7 682.143 L1158.14 682.143 L1157.58 682.143 L1157.02 682.143 L1156.46 682.143 L1155.9 682.143 L1155.34 682.143 L1154.78 682.143 L1154.23 682.143 L1153.67 682.143 L1153.11 682.143 L1152.55 682.143 L1151.99 682.143 L1151.43 682.143 L1150.87 682.143 L1150.31 682.143 L1149.75 682.143 L1149.19 682.143 L1148.63 682.143 L1148.07 682.143 L1147.51 682.143 L1146.96 682.143 L1146.4 682.143 L1145.84 682.143 L1145.28 682.143 L1144.72 682.143 L1144.16 682.143 L1143.6 682.143 L1143.04 682.143 L1142.48 682.143 L1141.92 682.143 L1141.36 682.143 L1140.8 682.143 L1140.24 682.143 L1139.68 682.143 L1139.13 682.143 L1138.57 682.143 L1138.01 682.143 L1137.45 682.143 L1136.89 682.143 L1136.33 682.143 L1135.77 682.143 L1135.21 682.143 L1134.65 682.143 L1134.09 682.143 L1133.53 682.143 L1132.97 682.143 L1132.41 682.143 L1131.86 682.143 L1131.3 682.143 L1130.74 682.143 L1130.18 682.143 L1129.62 682.143 L1129.06 682.143 L1128.5 682.143 L1127.94 682.143 L1127.38 682.143 L1126.82 682.143 L1126.26 682.143 L1125.7 682.143 L1125.14 682.143 L1124.59 682.143 L1124.03 682.143 L1123.47 682.143 L1122.91 682.143 L1122.35 682.143 L1121.79 682.143 L1121.23 682.143 L1120.67 682.143 L1120.11 682.143 L1119.55 682.143 L1118.99 682.143 L1118.43 682.143 L1117.87 682.143 L1117.31 682.143 L1116.76 682.143 L1116.2 682.143 L1115.64 682.143 L1115.08 682.143 L1114.52 682.143 L1113.96 682.143 L1113.4 682.143 L1112.84 682.143 L1112.28 682.143 L1111.72 682.143 L1111.16 682.143 L1110.6 682.143 L1110.04 682.143 L1109.49 682.143 L1108.93 682.143 L1108.37 682.143 L1107.81 682.143 L1107.25 682.143 L1106.69 682.143 L1106.13 682.143 L1105.57 682.143 L1105.01 682.143 L1104.45 682.143 L1103.89 682.143 L1103.33 682.143 L1102.77 682.143 L1102.22 682.143 L1101.66 682.143 L1101.1 682.143 L1100.54 682.143 L1099.98 682.143 L1099.42 682.143 L1098.86 682.143 L1098.3 682.143 L1097.74 682.143 L1097.18 682.143 L1096.62 682.143 L1096.06 682.143 L1095.5 682.143 L1094.94 682.143 L1094.39 682.143 L1093.83 682.143 L1093.27 682.143 L1092.71 682.143 L1092.15 682.143 L1091.59 682.143 L1091.03 682.143 L1090.47 682.143 L1089.91 682.143 L1089.35 682.143 L1088.79 682.143 L1088.23 682.143 L1087.67 682.143 L1087.12 682.143 L1086.56 682.143 L1086 682.143 L1085.44 682.143 L1084.88 682.143 L1084.32 682.143 L1083.76 682.143 L1083.2 682.143 L1082.64 682.143 L1082.08 682.143 L1081.52 682.143 L1080.96 682.143 L1080.4 682.143 L1079.85 682.143 L1079.29 682.143 L1078.73 682.143 L1078.17 682.143 L1077.61 682.143 L1077.05 682.143 L1076.49 682.143 L1075.93 682.143 L1075.37 682.143 L1074.81 682.143 L1074.25 682.143 L1073.69 682.143 L1073.13 682.143 L1072.57 682.143 L1072.02 682.143 L1071.46 682.143 L1070.9 682.143 L1070.34 682.143 L1069.78 682.143 L1069.22 682.143 L1068.66 682.143 L1068.1 682.143 L1067.54 682.143 L1066.98 682.143 L1066.42 682.143 L1065.86 682.143 L1065.3 682.143 L1064.75 682.143 L1064.19 682.143 L1063.63 682.143 L1063.07 682.143 L1062.51 682.143 L1061.95 682.143 L1061.39 682.143 L1060.83 682.143 L1060.27 682.143 L1059.71 682.143 L1059.15 682.143 L1058.59 682.143 L1058.03 682.143 L1057.48 682.143 L1056.92 682.143 L1056.36 682.143 L1055.8 682.143 L1055.24 682.143 L1054.68 682.143 L1054.12 682.143 L1053.56 682.143 L1053 682.143 L1052.44 682.143 L1051.88 682.143 L1051.32 682.143 L1050.76 682.143 L1050.2 682.143 L1049.65 682.143 L1049.09 682.143 L1048.53 682.143 L1047.97 682.143 L1047.41 682.143 L1046.85 682.143 L1046.29 682.143 L1045.73 682.143 L1045.17 682.143 L1044.61 682.143 L1044.05 682.143 L1043.49 682.143 L1042.93 682.143 L1042.38 682.143 L1041.82 682.143 L1041.26 682.143 L1040.7 682.143 L1040.14 682.143 L1039.58 682.143 L1039.02 682.143 L1038.46 682.143 L1037.9 682.143 L1037.34 682.143 L1036.78 682.143 L1036.22 682.143 L1035.66 682.143 L1035.1 682.143 L1034.55 682.143 L1033.99 682.143 L1033.43 682.143 L1032.87 682.143 L1032.31 682.143 L1031.75 682.143 L1031.19 682.143 L1030.63 682.143 L1030.07 682.143 L1029.51 682.143 L1028.95 682.143 L1028.39 682.143 L1027.83 682.143 L1027.28 682.143 L1026.72 682.143 L1026.16 682.143 L1025.6 682.143 L1025.04 682.143 L1024.48 682.143 L1023.92 682.143 L1023.36 682.143 L1022.8 682.143 L1022.24 682.143 L1021.68 682.143 L1021.12 682.143 L1020.56 682.143 L1020.01 682.143 L1019.45 682.143 L1018.89 682.143 L1018.33 682.143 L1017.77 682.143 L1017.21 682.143 L1016.65 682.143 L1016.09 682.143 L1015.53 682.143 L1014.97 682.143 L1014.41 682.143 L1013.85 682.143 L1013.29 682.143 L1012.73 682.143 L1012.18 682.143 L1011.62 682.143 L1011.06 682.143 L1010.5 682.143 L1009.94 682.143 L1009.38 682.143 L1008.82 682.143 L1008.26 682.143 L1007.7 682.143 L1007.14 682.143 L1006.58 682.143 L1006.02 682.143 L1005.46 682.143 L1004.91 682.143 L1004.35 682.143 L1003.79 682.143 L1003.23 682.143 L1002.67 682.143 L1002.11 682.143 L1001.55 682.143 L1000.99 682.143 L1000.43 682.143 L999.872 682.143 L999.313 682.143 L998.754 682.143 L998.194 682.143 L997.635 682.143 L997.076 682.143 L996.517 682.143 L995.957 682.143 L995.398 682.143 L994.839 682.143 L994.28 682.143 L993.72 682.143 L993.161 682.143 L992.602 682.143 L992.043 682.143 L991.483 682.143 L990.924 682.143 L990.365 682.143 L989.806 682.143 L989.246 682.143 L988.687 682.143 L988.128 682.143 L987.569 682.143 L987.009 682.143 L986.45 682.143 L985.891 682.143 L985.332 682.143 L984.772 682.143 L984.213 682.143 L983.654 682.143 L983.095 682.143 L982.535 682.143 L981.976 682.143 L981.417 682.143 L980.858 682.143 L980.298 682.143 L979.739 682.143 L979.18 682.143 L978.621 682.143 L978.061 682.143 L977.502 682.143 L976.943 682.143 L976.384 682.143 L975.824 682.143 L975.265 682.143 L974.706 682.143 L974.147 682.143 L973.587 682.143 L973.028 682.143 L972.469 682.143 L971.91 682.143 L971.35 682.143 L970.791 682.143 L970.232 682.143 L969.673 682.143 L969.113 682.143 L968.554 682.143 L967.995 682.143 L967.436 682.143 L966.876 682.143 L966.317 682.143 L965.758 682.143 L965.199 682.143 L964.639 682.143 L964.08 682.143 L963.521 682.143 L962.962 682.143 L962.402 682.143 L961.843 682.143 L961.284 682.143 L960.725 682.143 L960.165 682.143 L959.606 682.143 L959.047 682.143 L958.488 682.143 L957.928 682.143 L957.369 682.143 L956.81 682.143 L956.251 682.143 L955.691 682.143 L955.132 682.143 L954.573 682.143 L954.014 682.143 L953.454 682.143 L952.895 682.143 L952.336 682.143 L951.777 682.143 L951.217 682.143 L950.658 682.143 L950.099 682.143 L949.54 682.143 L948.98 682.143 L948.421 682.143 L947.862 682.143 L947.303 682.143 L946.743 682.143 L946.184 682.143 L945.625 682.143 L945.066 682.143 L944.506 682.143 L943.947 682.143 L943.388 682.143 L942.829 682.143 L942.269 682.143 L941.71 682.143 L941.151 682.143 L940.592 682.143 L940.032 682.143 L939.473 682.143 L938.914 682.143 L938.355 682.143 L937.795 682.143 L937.236 682.143 L936.677 682.143 L936.118 682.143 L935.558 682.143 L934.999 682.143 L934.44 682.143 L933.881 682.143 L933.321 682.143 L932.762 682.143 L932.203 682.143 L931.644 682.143 L931.084 682.143 L930.525 682.143 L929.966 682.143 L929.406 682.143 L928.847 682.143 L928.288 682.143 L927.729 682.143 L927.169 682.143 L926.61 682.143 L926.051 682.143 L925.492 682.143 L924.932 682.143 L924.373 682.143 L923.814 682.143 L923.255 682.143 L922.695 682.143 L922.136 682.143 L921.577 682.143 L921.018 682.143 L920.458 682.143 L919.899 682.143 L919.34 682.143 L918.781 682.143 L918.221 682.143 L917.662 682.143 L917.103 682.143 L916.544 682.143 L915.984 682.143 L915.425 682.143 L914.866 682.143 L914.307 682.143 L913.747 682.143 L913.188 682.143 L912.629 682.143 L912.07 682.143 L911.51 682.143 L910.951 682.143 L910.392 682.143 L909.833 682.143 L909.273 682.143 L908.714 682.143 L908.155 682.143 L907.596 682.143 L907.036 682.143 L906.477 682.143 L905.918 682.143 L905.359 682.143 L904.799 682.143 L904.24 682.143 L903.681 682.143 L903.122 682.143 L902.562 682.143 L902.003 682.143 L901.444 682.143 L900.885 682.143 L900.325 682.143 L899.766 682.143 L899.207 682.143 L898.648 682.143 L898.088 682.143 L897.529 682.143 L896.97 682.143 L896.411 682.143 L895.851 682.143 L895.292 682.143 L894.733 682.143 L894.174 682.143 L893.614 682.143 L893.055 682.143 L892.496 682.143 L891.937 682.143 L891.377 682.143 L890.818 682.143 L890.259 682.143 L889.7 682.143 L889.14 682.143 L888.581 682.143 L888.022 682.143 L887.463 682.143 L886.903 682.143 L886.344 682.143 L885.785 682.143 L885.226 682.143 L884.666 682.143 L884.107 682.143 L883.548 682.143 L882.989 682.143 L882.429 682.143 L881.87 682.143 L881.311 682.143 L880.752 682.143 L880.192 682.143 L879.633 682.143 L879.074 682.143 L878.515 682.143 L877.955 682.143 L877.396 682.143 L876.837 682.143 L876.278 682.143 L875.718 682.143 L875.159 682.143 L874.6 682.143 L874.041 682.143 L873.481 682.143 L872.922 682.143 L872.363 682.143 L871.804 682.143 L871.244 682.143 L870.685 682.143 L870.126 682.143 L869.567 682.143 L869.007 682.143 L868.448 682.143 L867.889 682.143 L867.33 682.143 L866.77 682.143 L866.211 682.143 L865.652 682.143 L865.093 682.143 L864.533 682.143 L863.974 682.143 L863.415 682.143 L862.856 682.143 L862.296 682.143 L861.737 682.143 L861.178 682.143 L860.619 682.143 L860.059 682.143 L859.5 682.143 L858.941 682.143 L858.382 682.143 L857.822 682.143 L857.263 682.143 L856.704 682.143 L856.145 682.143 L855.585 682.143 L855.026 682.143 L854.467 682.143 L853.908 682.143 L853.348 682.143 L852.789 682.143 L852.23 682.143 L851.671 682.143 L851.111 682.143 L850.552 682.143 L849.993 682.143 L849.434 682.143 L848.874 682.143 L848.315 682.143 L847.756 682.143 L847.197 682.143 L846.637 682.143 L846.078 682.143 L845.519 682.143 L844.96 682.143 L844.4 682.143 L843.841 682.143 L843.282 682.143 L842.723 682.143 L842.163 682.143 L841.604 682.143 L841.045 682.143 L840.486 682.143 L839.926 682.143 L839.367 682.143 L838.808 682.143 L838.249 682.143 L837.689 682.143 L837.13 682.143 L836.571 682.143 L836.012 682.143 L835.452 682.143 L834.893 682.143 L834.334 682.143 L833.775 682.143 L833.215 682.143 L832.656 682.143 L832.097 682.143 L831.538 682.143 L830.978 682.143 L830.419 682.143 L829.86 682.143 L829.301 682.143 L828.741 682.143 L828.182 682.143 L827.623 682.143 L827.064 682.143 L826.504 682.143 L825.945 682.143 L825.386 682.143 L824.827 682.143 L824.267 682.143 L823.708 682.143 L823.149 682.143 L822.59 682.143 L822.03 682.143 L821.471 682.143 L820.912 682.143 L820.353 682.143 L819.793 682.143 L819.234 682.143 L818.675 682.143 L818.116 682.143 L817.556 682.143 L816.997 682.143 L816.438 682.143 L815.879 682.143 L815.319 682.143 L814.76 682.143 L814.201 682.143 L813.642 682.143 L813.082 682.143 L812.523 682.143 L811.964 682.143 L811.405 682.143 L810.845 682.143 L810.286 682.143 L809.727 682.143 L809.168 682.143 L808.608 682.143 L808.049 682.143 L807.49 682.143 L806.931 682.143 L806.371 682.143 L805.812 682.143 L805.253 682.143 L804.693 682.143 L804.134 682.143 L803.575 682.143 L803.016 682.143 L802.456 682.143 L801.897 682.143 L801.338 682.143 L800.779 682.143 L800.219 682.143 L799.66 682.143 L799.101 682.143 L798.542 682.143 L797.982 682.143 L797.423 682.143 L796.864 682.143 L796.305 682.143 L795.745 682.143 L795.186 682.143 L794.627 682.143 L794.068 682.143 L793.508 682.143 L792.949 682.143 L792.39 682.143 L791.831 682.143 L791.271 682.143 L790.712 682.143 L790.153 682.143 L789.594 682.143 L789.034 682.143 L788.475 682.143 L787.916 682.143 L787.357 682.143 L786.797 682.143 L786.238 682.143 L785.679 682.143 L785.12 682.143 L784.56 682.143 L784.001 682.143 L783.442 682.143 L782.883 682.143 L782.323 682.143 L781.764 682.143 L781.205 682.143 L780.646 682.143 L780.086 682.143 L779.527 682.143 L778.968 682.143 L778.409 682.143 L777.849 682.143 L777.29 682.143 L776.731 682.143 L776.172 682.143 L775.612 682.143 L775.053 682.143 L774.494 682.143 L773.935 682.143 L773.375 682.143 L772.816 682.143 L772.257 682.143 L771.698 682.143 L771.138 682.143 L770.579 682.143 L770.02 682.143 L769.461 682.143 L768.901 682.143 L768.342 682.143 L767.783 682.143 L767.224 682.143 L766.664 682.143 L766.105 682.143 L765.546 682.143 L764.987 682.143 L764.427 682.143 L763.868 682.143 L763.309 682.143 L762.75 682.143 L762.19 682.143 L761.631 682.143 L761.072 682.143 L760.513 682.143 L759.953 682.143 L759.394 682.143 L758.835 682.143 L758.276 682.143 L757.716 682.143 L757.157 682.143 L756.598 682.143 L756.039 682.143 L755.479 682.143 L754.92 682.143 L754.361 682.143 L753.802 682.143 L753.242 682.143 L752.683 682.143 L752.124 682.143 L751.565 682.143 L751.005 682.143 L750.446 682.143 L749.887 682.143 L749.328 682.143 L748.768 682.143 L748.209 682.143 L747.65 682.143 L747.091 682.143 L746.531 682.143 L745.972 682.143 L745.413 682.143 L744.854 682.143 L744.294 682.143 L743.735 682.143 L743.176 682.143 L742.617 682.143 L742.057 682.143 L741.498 682.143 L740.939 682.143 L740.38 682.143 L739.82 682.143 L739.261 682.143 L738.702 682.143 L738.143 682.143 L737.583 682.143 L737.024 682.143 L736.465 682.143 L735.906 682.143 L735.346 682.143 L734.787 682.143 L734.228 682.143 L733.669 682.143 L733.109 682.143 L732.55 682.143 L731.991 682.143 L731.432 682.143 L730.872 682.143 L730.313 682.143 L729.754 682.143 L729.195 682.143 L728.635 682.143 L728.076 682.143 L727.517 682.143 L726.958 682.143 L726.398 682.143 L725.839 682.143 L725.28 682.143 L724.721 682.143 L724.161 682.143 L723.602 682.143 L723.043 682.143 L722.484 682.143 L721.924 682.143 L721.365 682.143 L720.806 682.143 L720.247 682.143  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip483)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,685.813 720.806,685.813 721.365,685.813 721.924,685.813 722.484,685.813 723.043,685.813 723.602,685.813 724.161,685.813 724.721,685.813 725.28,685.813 725.839,685.813 726.398,685.813 726.958,685.813 727.517,685.813 728.076,685.813 728.635,685.813 729.195,685.813 729.754,685.813 730.313,685.813 730.872,685.813 731.432,685.813 731.991,685.813 732.55,685.813 733.109,685.813 733.669,685.813 734.228,685.813 734.787,685.813 735.346,685.813 735.906,685.813 736.465,685.813 737.024,685.813 737.583,685.813 738.143,685.813 738.702,685.813 739.261,685.813 739.82,685.813 740.38,685.813 740.939,685.813 741.498,685.813 742.057,685.813 742.617,685.813 743.176,685.813 743.735,685.813 744.294,685.813 744.854,685.813 745.413,685.813 745.972,685.813 746.531,685.813 747.091,685.813 747.65,685.813 748.209,685.813 748.768,685.813 749.328,685.813 749.887,685.813 750.446,685.813 751.005,685.813 751.565,685.813 752.124,685.813 752.683,685.813 753.242,685.813 753.802,685.813 754.361,685.813 754.92,685.813 755.479,685.813 756.039,685.813 756.598,685.813 757.157,685.813 757.716,685.813 758.276,685.813 758.835,685.813 759.394,685.813 759.953,685.813 760.513,685.813 761.072,685.813 761.631,685.813 762.19,685.813 762.75,685.813 763.309,685.813 763.868,685.813 764.427,685.813 764.987,685.813 765.546,685.813 766.105,685.813 766.664,685.813 767.224,685.813 767.783,685.813 768.342,685.813 768.901,685.813 769.461,685.813 770.02,685.813 770.579,685.813 771.138,685.813 771.698,685.813 772.257,685.813 772.816,685.813 773.375,685.813 773.935,685.813 774.494,685.813 775.053,685.813 775.612,685.813 776.172,685.813 776.731,685.813 777.29,685.813 777.849,685.813 778.409,685.813 778.968,685.813 779.527,685.813 780.086,685.813 780.646,685.813 781.205,685.813 781.764,685.813 782.323,685.813 782.883,685.813 783.442,685.813 784.001,685.813 784.56,685.813 785.12,685.813 785.679,685.813 786.238,685.813 786.797,685.813 787.357,685.813 787.916,685.813 788.475,685.813 789.034,685.813 789.594,685.813 790.153,685.813 790.712,685.813 791.271,685.813 791.831,685.813 792.39,685.813 792.949,685.813 793.508,685.813 794.068,685.813 794.627,685.813 795.186,685.813 795.745,685.813 796.305,685.813 796.864,685.813 797.423,685.813 797.982,685.813 798.542,685.813 799.101,685.813 799.66,685.813 800.219,685.813 800.779,685.813 801.338,685.813 801.897,685.813 802.456,685.813 803.016,685.813 803.575,685.813 804.134,685.813 804.693,685.813 805.253,685.813 805.812,685.813 806.371,685.813 806.931,685.813 807.49,685.813 808.049,685.813 808.608,685.813 809.168,685.813 809.727,685.813 810.286,685.813 810.845,685.813 811.405,685.813 811.964,685.813 812.523,685.813 813.082,685.813 813.642,685.813 814.201,685.813 814.76,685.813 815.319,685.813 815.879,685.813 816.438,685.813 816.997,685.813 817.556,685.813 818.116,685.813 818.675,685.813 819.234,685.813 819.793,685.813 820.353,685.813 820.912,685.813 821.471,685.813 822.03,685.813 822.59,685.813 823.149,685.813 823.708,685.813 824.267,685.813 824.827,685.813 825.386,685.813 825.945,685.813 826.504,685.813 827.064,685.813 827.623,685.813 828.182,685.813 828.741,685.813 829.301,685.813 829.86,685.813 830.419,685.813 830.978,685.813 831.538,685.813 832.097,685.813 832.656,685.813 833.215,685.813 833.775,685.813 834.334,685.813 834.893,685.813 835.452,685.813 836.012,685.813 836.571,685.813 837.13,685.813 837.689,685.813 838.249,685.813 838.808,685.813 839.367,685.813 839.926,685.813 840.486,685.813 841.045,685.813 841.604,685.813 842.163,685.813 842.723,685.813 843.282,685.813 843.841,685.813 844.4,685.813 844.96,685.813 845.519,685.813 846.078,685.813 846.637,685.813 847.197,685.813 847.756,685.813 848.315,685.813 848.874,685.813 849.434,685.813 849.993,685.813 850.552,685.813 851.111,685.813 851.671,685.813 852.23,685.813 852.789,685.813 853.348,685.813 853.908,685.813 854.467,685.813 855.026,685.813 855.585,685.813 856.145,685.813 856.704,685.813 857.263,685.813 857.822,685.813 858.382,685.813 858.941,685.813 859.5,685.813 860.059,685.813 860.619,685.813 861.178,685.813 861.737,685.813 862.296,685.813 862.856,685.813 863.415,685.813 863.974,685.813 864.533,685.813 865.093,685.813 865.652,685.813 866.211,685.813 866.77,685.813 867.33,685.813 867.889,685.813 868.448,685.813 869.007,685.813 869.567,685.813 870.126,685.813 870.685,685.813 871.244,685.813 871.804,685.813 872.363,685.813 872.922,685.813 873.481,685.813 874.041,685.813 874.6,685.813 875.159,685.813 875.718,685.813 876.278,685.813 876.837,685.813 877.396,685.813 877.955,685.813 878.515,685.813 879.074,685.813 879.633,685.813 880.192,685.813 880.752,685.813 881.311,685.813 881.87,685.813 882.429,685.813 882.989,685.813 883.548,685.813 884.107,685.813 884.666,685.813 885.226,685.813 885.785,685.813 886.344,685.813 886.903,685.813 887.463,685.813 888.022,685.813 888.581,685.813 889.14,685.813 889.7,685.813 890.259,685.813 890.818,685.813 891.377,685.813 891.937,685.813 892.496,685.813 893.055,685.813 893.614,685.813 894.174,685.813 894.733,685.813 895.292,685.813 895.851,685.813 896.411,685.813 896.97,685.813 897.529,685.813 898.088,685.813 898.648,685.813 899.207,685.813 899.766,685.813 900.325,685.813 900.885,685.813 901.444,685.813 902.003,685.813 902.562,685.813 903.122,685.813 903.681,685.813 904.24,685.813 904.799,685.813 905.359,685.813 905.918,685.813 906.477,685.813 907.036,685.813 907.596,685.813 908.155,685.813 908.714,685.813 909.273,685.813 909.833,685.813 910.392,685.813 910.951,685.813 911.51,685.813 912.07,685.813 912.629,685.813 913.188,685.813 913.747,685.813 914.307,685.813 914.866,685.813 915.425,685.813 915.984,685.813 916.544,685.813 917.103,685.813 917.662,685.813 918.221,685.813 918.781,685.813 919.34,685.813 919.899,685.813 920.458,685.813 921.018,685.813 921.577,685.813 922.136,685.813 922.695,685.813 923.255,685.813 923.814,685.813 924.373,685.813 924.932,685.813 925.492,685.813 926.051,685.813 926.61,685.813 927.169,685.813 927.729,685.813 928.288,685.813 928.847,685.813 929.406,685.813 929.966,685.813 930.525,685.813 931.084,685.813 931.644,685.813 932.203,685.813 932.762,685.813 933.321,685.813 933.881,685.813 934.44,685.813 934.999,685.813 935.558,685.813 936.118,685.813 936.677,685.813 937.236,685.813 937.795,685.813 938.355,685.813 938.914,685.813 939.473,685.813 940.032,685.813 940.592,685.813 941.151,685.813 941.71,685.813 942.269,685.813 942.829,685.813 943.388,685.813 943.947,685.813 944.506,685.813 945.066,685.813 945.625,685.813 946.184,685.813 946.743,685.813 947.303,685.813 947.862,685.813 948.421,685.813 948.98,685.813 949.54,685.813 950.099,685.813 950.658,685.813 951.217,685.813 951.777,685.813 952.336,685.813 952.895,685.813 953.454,685.813 954.014,685.813 954.573,685.813 955.132,685.813 955.691,685.813 956.251,685.813 956.81,685.813 957.369,685.813 957.928,685.813 958.488,685.813 959.047,685.813 959.606,685.813 960.165,685.813 960.725,685.813 961.284,685.813 961.843,685.813 962.402,685.813 962.962,685.813 963.521,685.813 964.08,685.813 964.639,685.813 965.199,685.813 965.758,685.813 966.317,685.813 966.876,685.813 967.436,685.813 967.995,685.813 968.554,685.813 969.113,685.813 969.673,685.813 970.232,685.813 970.791,685.813 971.35,685.813 971.91,685.813 972.469,685.813 973.028,685.813 973.587,685.813 974.147,685.813 974.706,685.813 975.265,685.813 975.824,685.813 976.384,685.813 976.943,685.813 977.502,685.813 978.061,685.813 978.621,685.813 979.18,685.813 979.739,685.813 980.298,685.813 980.858,685.813 981.417,685.813 981.976,685.813 982.535,685.813 983.095,685.813 983.654,685.813 984.213,685.813 984.772,685.813 985.332,685.813 985.891,685.813 986.45,685.813 987.009,685.813 987.569,685.813 988.128,685.813 988.687,685.813 989.246,685.813 989.806,685.813 990.365,685.813 990.924,685.813 991.483,685.813 992.043,685.813 992.602,685.813 993.161,685.813 993.72,685.813 994.28,685.813 994.839,685.813 995.398,685.813 995.957,685.813 996.517,685.813 997.076,685.813 997.635,685.813 998.194,685.813 998.754,685.813 999.313,685.813 999.872,685.813 1000.43,685.813 1000.99,685.813 1001.55,685.813 1002.11,685.813 1002.67,685.813 1003.23,685.813 1003.79,685.813 1004.35,685.813 1004.91,685.813 1005.46,685.813 1006.02,685.813 1006.58,685.813 1007.14,685.813 1007.7,685.813 1008.26,685.813 1008.82,685.813 1009.38,685.813 1009.94,685.813 1010.5,685.813 1011.06,685.813 1011.62,685.813 1012.18,685.813 1012.73,685.813 1013.29,685.813 1013.85,685.813 1014.41,685.813 1014.97,685.813 1015.53,685.813 1016.09,685.813 1016.65,685.813 1017.21,685.813 1017.77,685.813 1018.33,685.813 1018.89,685.813 1019.45,685.813 1020.01,685.813 1020.56,685.813 1021.12,685.813 1021.68,685.813 1022.24,685.813 1022.8,685.813 1023.36,685.813 1023.92,685.813 1024.48,685.813 1025.04,685.813 1025.6,685.813 1026.16,685.813 1026.72,685.813 1027.28,685.813 1027.83,685.813 1028.39,685.813 1028.95,685.813 1029.51,685.813 1030.07,685.813 1030.63,685.813 1031.19,685.813 1031.75,685.813 1032.31,685.813 1032.87,685.813 1033.43,685.813 1033.99,685.813 1034.55,685.813 1035.1,685.813 1035.66,685.813 1036.22,685.813 1036.78,685.813 1037.34,685.813 1037.9,685.813 1038.46,685.813 1039.02,685.813 1039.58,685.813 1040.14,685.813 1040.7,685.813 1041.26,685.813 1041.82,685.813 1042.38,685.813 1042.93,685.813 1043.49,685.813 1044.05,685.813 1044.61,685.813 1045.17,685.813 1045.73,685.813 1046.29,685.813 1046.85,685.813 1047.41,685.813 1047.97,685.813 1048.53,685.813 1049.09,685.813 1049.65,685.813 1050.2,685.813 1050.76,685.813 1051.32,685.813 1051.88,685.813 1052.44,685.813 1053,685.813 1053.56,685.813 1054.12,685.813 1054.68,685.813 1055.24,685.813 1055.8,685.813 1056.36,685.813 1056.92,685.813 1057.48,685.813 1058.03,685.813 1058.59,685.813 1059.15,685.813 1059.71,685.813 1060.27,685.813 1060.83,685.813 1061.39,685.813 1061.95,685.813 1062.51,685.813 1063.07,685.813 1063.63,685.813 1064.19,685.813 1064.75,685.813 1065.3,685.813 1065.86,685.813 1066.42,685.813 1066.98,685.813 1067.54,685.813 1068.1,685.813 1068.66,685.813 1069.22,685.813 1069.78,685.813 1070.34,685.813 1070.9,685.813 1071.46,685.813 1072.02,685.813 1072.57,685.813 1073.13,685.813 1073.69,685.813 1074.25,685.813 1074.81,685.813 1075.37,685.813 1075.93,685.813 1076.49,685.813 1077.05,685.813 1077.61,685.813 1078.17,685.813 1078.73,685.813 1079.29,685.813 1079.85,685.813 1080.4,685.813 1080.96,685.813 1081.52,685.813 1082.08,685.813 1082.64,685.813 1083.2,685.813 1083.76,685.813 1084.32,685.813 1084.88,685.813 1085.44,685.813 1086,685.813 1086.56,685.813 1087.12,685.813 1087.67,685.813 1088.23,685.813 1088.79,685.813 1089.35,685.813 1089.91,685.813 1090.47,685.813 1091.03,685.813 1091.59,685.813 1092.15,685.813 1092.71,685.813 1093.27,685.813 1093.83,685.813 1094.39,685.813 1094.94,685.813 1095.5,685.813 1096.06,685.813 1096.62,685.813 1097.18,685.813 1097.74,685.813 1098.3,685.813 1098.86,685.813 1099.42,685.813 1099.98,685.813 1100.54,685.813 1101.1,685.813 1101.66,685.813 1102.22,685.813 1102.77,685.813 1103.33,685.813 1103.89,685.813 1104.45,685.813 1105.01,685.813 1105.57,685.813 1106.13,685.813 1106.69,685.813 1107.25,685.813 1107.81,685.813 1108.37,685.813 1108.93,685.813 1109.49,685.813 1110.04,685.813 1110.6,685.813 1111.16,685.813 1111.72,685.813 1112.28,685.813 1112.84,685.813 1113.4,685.813 1113.96,685.813 1114.52,685.813 1115.08,685.813 1115.64,685.813 1116.2,685.813 1116.76,685.813 1117.31,685.813 1117.87,685.813 1118.43,685.813 1118.99,685.813 1119.55,685.813 1120.11,685.813 1120.67,685.813 1121.23,685.813 1121.79,685.813 1122.35,685.813 1122.91,685.813 1123.47,685.813 1124.03,685.813 1124.59,685.813 1125.14,685.813 1125.7,685.813 1126.26,685.813 1126.82,685.813 1127.38,685.813 1127.94,685.813 1128.5,685.813 1129.06,685.813 1129.62,685.813 1130.18,685.813 1130.74,685.813 1131.3,685.813 1131.86,685.813 1132.41,685.813 1132.97,685.813 1133.53,685.813 1134.09,685.813 1134.65,685.813 1135.21,685.813 1135.77,685.813 1136.33,685.813 1136.89,685.813 1137.45,685.813 1138.01,685.813 1138.57,685.813 1139.13,685.813 1139.68,685.813 1140.24,685.813 1140.8,685.813 1141.36,685.813 1141.92,685.813 1142.48,685.813 1143.04,685.813 1143.6,685.813 1144.16,685.813 1144.72,685.813 1145.28,685.813 1145.84,685.813 1146.4,685.813 1146.96,685.813 1147.51,685.813 1148.07,685.813 1148.63,685.813 1149.19,685.813 1149.75,685.813 1150.31,685.813 1150.87,685.813 1151.43,685.813 1151.99,685.813 1152.55,685.813 1153.11,685.813 1153.67,685.813 1154.23,685.813 1154.78,685.813 1155.34,685.813 1155.9,685.813 1156.46,685.813 1157.02,685.813 1157.58,685.813 1158.14,685.813 1158.7,685.813 1159.26,685.813 1159.82,685.813 1160.38,685.813 1160.94,685.813 1161.5,685.813 1162.05,685.813 1162.61,685.813 1163.17,685.813 1163.73,685.813 1164.29,685.813 1164.85,685.813 1165.41,685.813 1165.97,685.813 1166.53,685.813 1167.09,685.813 1167.65,685.813 1168.21,685.813 1168.77,685.813 1169.33,685.813 1169.88,685.813 1170.44,685.813 1171,685.813 1171.56,685.813 1172.12,685.813 1172.68,685.813 1173.24,685.813 1173.8,685.813 1174.36,685.813 1174.92,685.813 1175.48,685.813 1176.04,685.813 1176.6,685.813 1177.15,685.813 1177.71,685.813 1178.27,685.813 1178.83,685.813 1179.39,685.813 1179.95,685.813 1180.51,685.813 1181.07,685.813 1181.63,685.813 1182.19,685.813 1182.75,685.813 1183.31,685.813 1183.87,685.813 1184.43,685.813 1184.98,685.813 1185.54,685.813 1186.1,685.813 1186.66,685.813 1187.22,685.813 1187.78,685.813 1188.34,685.813 1188.9,685.813 1189.46,685.813 1190.02,685.813 1190.58,685.813 1191.14,685.813 1191.7,685.813 1192.25,685.813 1192.81,685.813 1193.37,685.813 1193.93,685.813 1194.49,685.813 1195.05,685.813 1195.61,685.813 1196.17,685.813 1196.73,685.813 1197.29,685.813 1197.85,685.813 1198.41,685.813 1198.97,685.813 1199.52,685.813 1200.08,685.813 1200.64,685.813 1201.2,685.813 1201.76,685.813 1202.32,685.813 1202.88,685.813 1203.44,685.813 1204,685.813 1204.56,685.813 1205.12,685.813 1205.68,685.813 1206.24,685.813 1206.8,685.813 1207.35,685.813 1207.91,685.813 1208.47,685.813 1209.03,685.813 1209.59,685.813 1210.15,685.813 1210.71,685.813 1211.27,685.813 1211.83,685.813 1212.39,685.813 1212.95,685.813 1213.51,685.813 1214.07,685.813 1214.62,685.813 1215.18,685.813 1215.74,685.813 1216.3,685.813 1216.86,685.813 1217.42,685.813 1217.98,685.813 1218.54,685.813 1219.1,685.813 1219.66,685.813 1220.22,685.813 1220.78,685.813 1221.34,685.813 1221.89,685.813 1222.45,685.813 1223.01,685.813 1223.57,685.813 1224.13,685.813 1224.69,685.813 1225.25,685.813 1225.81,685.813 1226.37,685.813 1226.93,685.813 1227.49,685.813 1228.05,685.813 1228.61,685.813 1229.17,685.813 1229.72,685.813 1230.28,685.813 1230.84,685.813 1231.4,685.813 1231.96,685.813 1232.52,685.813 1233.08,685.813 1233.64,685.813 1234.2,685.813 1234.76,685.813 1235.32,685.813 1235.88,685.813 1236.44,685.813 1236.99,685.813 1237.55,685.813 1238.11,685.813 1238.67,685.813 1239.23,685.813 1239.79,685.813 1240.35,685.813 1240.91,685.813 1241.47,685.813 1242.03,685.813 1242.59,685.813 1243.15,685.813 1243.71,685.813 1244.26,685.813 1244.82,685.813 1245.38,685.813 1245.94,685.813 1246.5,685.813 1247.06,685.813 1247.62,685.813 1248.18,685.813 1248.74,685.813 1249.3,685.813 1249.86,685.813 1250.42,685.813 1250.98,685.813 1251.54,685.813 1252.09,685.813 1252.65,685.813 1253.21,685.813 1253.77,685.813 1254.33,685.813 1254.89,685.813 1255.45,685.813 1256.01,685.813 1256.57,685.813 1257.13,685.813 1257.69,685.813 1258.25,685.813 1258.81,685.813 1259.36,685.813 1259.92,685.813 1260.48,685.813 1261.04,685.813 1261.6,685.813 1262.16,685.813 1262.72,685.813 1263.28,685.813 1263.84,685.813 1264.4,685.813 1264.96,685.813 1265.52,685.813 1266.08,685.813 1266.63,685.813 1267.19,685.813 1267.75,685.813 1268.31,685.813 1268.87,685.813 1269.43,685.813 1269.99,685.813 1270.55,685.813 1271.11,685.813 1271.67,685.813 1272.23,685.813 1272.79,685.813 1273.35,685.813 1273.91,685.813 1274.46,685.813 1275.02,685.813 1275.58,685.813 1276.14,685.813 1276.7,685.813 1277.26,685.813 1277.82,685.813 1278.38,685.813 1278.94,685.813 1279.5,685.813 1280.06,685.813 1280.62,685.813 1281.18,685.813 1281.73,685.813 1282.29,685.813 1282.85,685.813 1283.41,685.813 1283.97,685.813 1284.53,685.813 1285.09,685.813 1285.65,685.813 1286.21,685.813 1286.77,685.813 1287.33,685.813 1287.89,685.813 1288.45,685.813 1289,685.813 1289.56,685.813 1290.12,685.813 1290.68,685.813 1291.24,685.813 1291.8,685.813 1292.36,685.813 1292.92,685.813 1293.48,685.813 1294.04,685.813 1294.6,685.813 1295.16,685.813 1295.72,685.813 1296.28,685.813 1296.83,685.813 1297.39,685.813 1297.95,685.813 1298.51,685.813 1299.07,685.813 1299.63,685.813 1300.19,685.813 1300.75,685.813 1301.31,685.813 1301.87,685.813 1302.43,685.813 1302.99,685.813 1303.55,685.813 1304.1,685.813 1304.66,685.813 1305.22,685.813 1305.78,685.813 1306.34,685.813 1306.9,685.813 1307.46,685.813 1308.02,685.813 1308.58,685.813 1309.14,685.813 1309.7,685.813 1310.26,685.813 1310.82,685.813 1311.38,685.813 1311.93,685.813 1312.49,685.813 1313.05,685.813 1313.61,685.813 1314.17,685.813 1314.73,685.813 1315.29,685.813 1315.85,685.813 1316.41,685.813 1316.97,685.813 1317.53,685.813 1318.09,685.813 1318.65,685.813 1319.2,685.813 1319.76,685.813 1320.32,685.813 1320.88,685.813 1321.44,685.813 1322,685.813 1322.56,685.813 1323.12,685.813 1323.68,685.813 1324.24,685.813 1324.8,685.813 1325.36,685.813 1325.92,685.813 1326.47,685.813 1327.03,685.813 1327.59,685.813 1328.15,685.813 1328.71,685.813 1329.27,685.813 1329.83,685.813 1330.39,685.813 1330.95,685.813 1331.51,685.813 1332.07,685.813 1332.63,685.813 1333.19,685.813 1333.75,685.813 1334.3,685.813 1334.86,685.813 1335.42,685.813 1335.98,685.813 1336.54,685.813 1337.1,685.813 1337.66,685.813 1338.22,685.813 1338.78,685.813 1339.34,685.813 1339.9,685.813 1340.46,685.813 1341.02,685.813 1341.57,685.813 1342.13,685.813 1342.69,685.813 1343.25,685.813 1343.81,685.813 1344.37,685.813 1344.93,685.813 1345.49,685.813 1346.05,685.813 1346.61,685.813 1347.17,685.813 1347.73,685.813 1348.29,685.813 1348.84,685.813 1349.4,685.813 1349.96,685.813 1350.52,685.813 1351.08,685.813 1351.64,685.813 1352.2,685.813 1352.76,685.813 1353.32,685.813 1353.88,685.813 1354.44,685.813 1355,685.813 1355.56,685.813 1356.12,685.813 1356.67,685.813 1357.23,685.813 1357.79,685.813 1358.35,685.813 1358.91,685.813 1359.47,685.813 1360.03,685.813 1360.59,685.813 1361.15,685.813 1361.71,685.813 1362.27,685.813 1362.83,685.813 1363.39,685.813 1363.94,685.813 1364.5,685.813 1365.06,685.813 1365.62,685.813 1366.18,685.813 1366.74,685.813 1367.3,685.813 1367.86,685.813 1368.42,685.813 1368.98,685.813 1369.54,685.813 1370.1,685.813 1370.66,685.813 1371.21,685.813 1371.77,685.813 1372.33,685.813 1372.89,685.813 1373.45,685.813 1374.01,685.813 1374.57,685.813 1375.13,685.813 1375.69,685.813 1376.25,685.813 1376.81,685.813 1377.37,685.813 1377.93,685.813 1378.49,685.813 1379.04,685.813 1379.6,685.813 1380.16,685.813 1380.72,685.813 1381.28,685.813 1381.84,685.813 1382.4,685.813 1382.96,685.813 1383.52,685.813 1384.08,685.813 1384.64,685.813 1385.2,685.813 1385.76,685.813 1386.31,685.813 1386.87,685.813 1387.43,685.813 1387.99,685.813 1388.55,685.813 1389.11,685.813 1389.67,685.813 1390.23,685.813 1390.79,685.813 1391.35,685.813 1391.91,685.813 1392.47,685.813 1393.03,685.813 1393.58,685.813 1394.14,685.813 1394.7,685.813 1395.26,685.813 1395.82,685.813 1396.38,685.813 1396.94,685.813 1397.5,685.813 1398.06,685.813 1398.62,685.813 1399.18,685.813 1399.74,685.813 1400.3,685.813 1400.86,685.813 1401.41,685.813 1401.97,685.813 1402.53,685.813 1403.09,685.813 1403.65,685.813 1404.21,685.813 1404.77,685.813 1405.33,685.813 1405.89,685.813 1406.45,685.813 1407.01,685.813 1407.57,685.813 1408.13,685.813 1408.68,685.813 1409.24,685.813 1409.8,685.813 1410.36,685.813 1410.92,685.813 1411.48,685.813 1412.04,685.813 1412.6,685.813 1413.16,685.813 1413.72,685.813 1414.28,685.813 1414.84,685.813 1415.4,685.813 1415.95,685.813 1416.51,685.813 1417.07,685.813 1417.63,685.813 1418.19,685.813 1418.75,685.813 1419.31,685.813 1419.87,685.813 1420.43,685.813 1420.99,685.813 1421.55,685.813 1422.11,685.813 1422.67,685.813 1423.23,685.813 1423.78,685.813 1424.34,685.813 1424.9,685.813 1425.46,685.813 1426.02,685.813 1426.58,685.813 1427.14,685.813 1427.7,685.813 1428.26,685.813 1428.82,685.813 1429.38,685.813 1429.94,685.813 1430.5,685.813 1431.05,685.813 1431.61,685.813 1432.17,685.813 1432.73,685.813 1433.29,685.813 1433.85,685.813 1434.41,685.813 1434.97,685.813 1435.53,685.813 1436.09,685.813 1436.65,685.813 1437.21,685.813 1437.77,685.813 1438.33,685.813 1438.88,685.813 1439.44,685.813 1440,685.813 1440.56,685.813 1441.12,685.813 1441.68,685.813 1442.24,685.813 1442.8,685.813 1443.36,685.813 1443.92,685.813 1444.48,685.813 1445.04,685.813 1445.6,685.813 1446.15,685.813 1446.71,685.813 1447.27,685.813 1447.83,685.813 1448.39,685.813 1448.95,685.813 1449.51,685.813 1450.07,685.813 1450.63,685.813 1451.19,685.813 1451.75,685.813 1452.31,685.813 1452.87,685.813 1453.42,685.813 1453.98,685.813 1454.54,685.813 1455.1,685.813 1455.66,685.813 1456.22,685.813 1456.78,685.813 1457.34,685.813 1457.9,685.813 1458.46,685.813 1459.02,685.813 1459.58,685.813 1460.14,685.813 1460.7,685.813 1461.25,685.813 1461.81,685.813 1462.37,685.813 1462.93,685.813 1463.49,685.813 1464.05,685.813 1464.61,685.813 1465.17,685.813 1465.73,685.813 1466.29,685.813 1466.85,685.813 1467.41,685.813 1467.97,685.813 1468.52,685.813 1469.08,685.813 1469.64,685.813 1470.2,685.813 1470.76,685.813 1471.32,685.813 1471.88,685.813 1472.44,685.813 1473,685.813 1473.56,685.813 1474.12,685.813 1474.68,685.813 1475.24,685.813 1475.79,685.813 1476.35,685.813 1476.91,685.813 1477.47,685.813 1478.03,685.813 1478.59,685.813 1479.15,685.813 1479.71,685.813 1480.27,685.813 1480.83,685.813 1481.39,685.813 1481.95,685.813 1482.51,685.813 1483.07,685.813 1483.62,685.813 1484.18,685.813 1484.74,685.813 1485.3,685.813 1485.86,685.813 1486.42,685.813 1486.98,685.813 1487.54,685.813 1488.1,685.813 1488.66,685.813 1489.22,685.813 1489.78,685.813 1490.34,685.813 1490.89,685.813 1491.45,685.813 1492.01,685.813 1492.57,685.813 1493.13,685.813 1493.69,685.813 1494.25,685.813 1494.81,685.813 1495.37,685.813 1495.93,685.813 1496.49,685.813 1497.05,685.813 1497.61,685.813 1498.16,685.813 1498.72,685.813 1499.28,685.813 1499.84,685.813 1500.4,685.813 1500.96,685.813 1501.52,685.813 1502.08,685.813 1502.64,685.813 1503.2,685.813 1503.76,685.813 1504.32,685.813 1504.88,685.813 1505.44,685.813 1505.99,685.813 1506.55,685.813 1507.11,685.813 1507.67,685.813 1508.23,685.813 1508.79,685.813 1509.35,685.813 1509.91,685.813 1510.47,685.813 1511.03,685.813 1511.59,685.813 1512.15,685.813 1512.71,685.813 1513.26,685.813 1513.82,685.813 1514.38,685.813 1514.94,685.813 1515.5,685.813 1516.06,685.813 1516.62,685.813 1517.18,685.813 1517.74,685.813 1518.3,685.813 1518.86,685.813 1519.42,685.813 1519.98,685.813 1520.53,685.813 1521.09,685.813 1521.65,685.813 1522.21,685.813 1522.77,685.813 1523.33,685.813 1523.89,685.813 1524.45,685.813 1525.01,685.813 1525.57,685.813 1526.13,685.813 1526.69,685.813 1527.25,685.813 1527.81,685.813 1528.36,685.813 1528.92,685.813 1529.48,685.813 1530.04,685.813 1530.6,685.813 1531.16,685.813 1531.72,685.813 1532.28,685.813 1532.84,685.813 1533.4,685.813 1533.96,685.813 1534.52,685.813 1535.08,685.813 1535.63,685.813 1536.19,685.813 1536.75,685.813 1537.31,685.813 1537.87,685.813 1538.43,685.813 1538.99,685.813 1539.55,685.813 1540.11,685.813 1540.67,685.813 1541.23,685.813 1541.79,685.813 1542.35,685.813 1542.9,685.813 1543.46,685.813 1544.02,685.813 1544.58,685.813 1545.14,685.813 1545.7,685.813 1546.26,685.813 1546.82,685.813 1547.38,685.813 1547.94,685.813 1548.5,685.813 1549.06,685.813 1549.62,685.813 1550.18,685.813 1550.73,685.813 1551.29,685.813 1551.85,685.813 1552.41,685.813 1552.97,685.813 1553.53,685.813 1554.09,685.813 1554.65,685.813 1555.21,685.813 1555.77,685.813 1556.33,685.813 1556.89,685.813 1557.45,685.813 1558,685.813 1558.56,685.813 1559.12,685.813 1559.68,685.813 1560.24,685.813 1560.8,685.813 1561.36,685.813 1561.92,685.813 1562.48,685.813 1563.04,685.813 1563.6,685.813 1564.16,685.813 1564.72,685.813 1565.28,685.813 1565.83,685.813 1566.39,685.813 1566.95,685.813 1567.51,685.813 1568.07,685.813 1568.63,685.813 1569.19,685.813 1569.75,685.813 1570.31,685.813 1570.87,685.813 1571.43,685.813 1571.99,685.813 1572.55,685.813 1573.1,685.813 1573.66,685.813 1574.22,685.813 1574.78,685.813 1575.34,685.813 1575.9,685.813 1576.46,685.813 1577.02,685.813 1577.58,685.813 1578.14,685.813 1578.7,685.813 1579.26,685.813 1579.82,685.813 1580.37,685.813 1580.93,685.813 1581.49,685.813 1582.05,685.813 1582.61,685.813 1583.17,685.813 1583.73,685.813 1584.29,685.813 1584.85,685.813 1585.41,685.813 1585.97,685.813 1586.53,685.813 1587.09,685.813 1587.65,685.813 1588.2,685.813 1588.76,685.813 1589.32,685.813 1589.88,685.813 1590.44,685.813 1591,685.813 1591.56,685.813 1592.12,685.813 1592.68,685.813 1593.24,685.813 1593.8,685.813 1594.36,685.813 1594.92,685.813 1595.47,685.813 1596.03,685.813 1596.59,685.813 1597.15,685.813 1597.71,685.813 1598.27,685.813 1598.83,685.813 1599.39,685.813 1599.95,685.813 1600.51,685.813 1601.07,685.813 1601.63,685.813 1602.19,685.813 1602.74,685.813 1603.3,685.813 1603.86,685.813 1604.42,685.813 1604.98,685.813 1605.54,685.813 1606.1,685.813 1606.66,685.813 1607.22,685.813 1607.78,685.813 1608.34,685.813 1608.9,685.813 1609.46,685.813 1610.02,685.813 1610.57,685.813 1611.13,685.813 1611.69,685.813 1612.25,685.813 1612.81,685.813 1613.37,685.813 1613.93,685.813 1614.49,685.813 1615.05,685.813 1615.61,685.813 1616.17,685.813 1616.73,685.813 1617.29,685.813 1617.84,685.813 1618.4,685.813 1618.96,685.813 1619.52,685.813 1620.08,685.813 1620.64,685.813 1621.2,685.813 1621.76,685.813 1622.32,685.813 1622.88,685.813 1623.44,685.813 1624,685.813 1624.56,685.813 1625.11,685.813 1625.67,685.813 1626.23,685.813 1626.79,685.813 1627.35,685.813 1627.91,685.813 1628.47,685.813 1629.03,685.813 1629.59,685.813 1630.15,685.813 1630.71,685.813 1631.27,685.813 1631.83,685.813 1632.39,685.813 1632.94,685.813 1633.5,685.813 1634.06,685.813 1634.62,685.813 1635.18,685.813 1635.74,685.813 1636.3,685.813 1636.86,685.813 1637.42,685.813 1637.98,685.813 1638.54,685.813 1639.1,685.813 1639.66,685.813 1640.21,685.813 1640.77,685.813 1641.33,685.813 1641.89,685.813 1642.45,685.813 1643.01,685.813 1643.57,685.813 1644.13,685.813 1644.69,685.813 1645.25,685.813 1645.81,685.813 1646.37,685.813 1646.93,685.813 1647.48,685.813 1648.04,685.813 1648.6,685.813 1649.16,685.813 1649.72,685.813 1650.28,685.813 1650.84,685.813 1651.4,685.813 1651.96,685.813 1652.52,685.813 1653.08,685.813 1653.64,685.813 1654.2,685.813 1654.76,685.813 1655.31,685.813 1655.87,685.813 1656.43,685.813 1656.99,685.813 1657.55,685.813 1658.11,685.813 1658.67,685.813 1659.23,685.813 1659.79,685.813 1660.35,685.813 1660.91,685.813 1661.47,685.813 1662.03,685.813 1662.58,685.813 1663.14,685.813 1663.7,685.813 1664.26,685.813 1664.82,685.813 1665.38,685.813 1665.94,685.813 1666.5,685.813 1667.06,685.813 1667.62,685.813 1668.18,685.813 1668.74,685.813 1669.3,685.813 1669.85,685.813 1670.41,685.813 1670.97,685.813 1671.53,685.813 1672.09,685.813 1672.65,685.813 1673.21,685.813 1673.77,685.813 1674.33,685.813 1674.89,685.813 1675.45,685.813 1676.01,685.813 1676.57,685.813 1677.13,685.813 1677.68,685.813 1678.24,685.813 1678.8,685.813 1679.36,685.813 1679.92,685.813 1680.48,685.813 1681.04,685.813 1681.6,685.813 1682.16,685.813 1682.72,685.813 1683.28,685.813 1683.84,685.813 1684.4,685.813 1684.95,685.813 1685.51,685.813 1686.07,685.813 1686.63,685.813 1687.19,685.813 1687.75,685.813 1688.31,685.813 1688.87,685.813 1689.43,685.813 1689.99,685.813 1690.55,685.813 1691.11,685.813 1691.67,685.813 1692.23,685.813 1692.78,685.813 1693.34,685.813 1693.9,685.813 1694.46,685.813 1695.02,685.813 1695.58,685.813 1696.14,685.813 1696.7,685.813 1697.26,685.813 1697.82,685.813 1698.38,685.813 1698.94,685.813 1699.5,685.813 1700.05,685.813 1700.61,685.813 1701.17,685.813 1701.73,685.813 1702.29,685.813 1702.85,685.813 1703.41,685.813 1703.97,685.813 1704.53,685.813 1705.09,685.813 1705.65,685.813 1706.21,685.813 1706.77,685.813 1707.32,685.813 1707.88,685.813 1708.44,685.813 1709,685.813 1709.56,685.813 1710.12,685.813 1710.68,685.813 1711.24,685.813 1711.8,685.813 1712.36,685.813 1712.92,685.813 1713.48,685.813 1714.04,685.813 1714.6,685.813 1715.15,685.813 1715.71,685.813 1716.27,685.813 1716.83,685.813 1717.39,685.813 1717.95,685.813 1718.51,685.813 1719.07,685.813 1719.63,685.813 1720.19,685.813 1720.75,685.813 1721.31,685.813 1721.87,685.813 1722.42,685.813 1722.98,685.813 1723.54,685.813 1724.1,685.813 1724.66,685.813 1725.22,685.813 1725.78,685.813 1726.34,685.813 1726.9,685.813 1727.46,685.813 1728.02,685.813 1728.58,685.813 1729.14,685.813 1729.69,685.813 1730.25,685.813 1730.81,685.813 1731.37,685.813 1731.93,685.813 1732.49,685.813 1733.05,685.813 1733.61,685.813 1734.17,685.813 1734.73,685.813 1735.29,685.813 1735.85,685.813 1736.41,685.813 1736.97,685.813 1737.52,685.813 1738.08,685.813 1738.64,685.813 1739.2,685.813 1739.76,685.813 1740.32,685.813 1740.88,685.813 1741.44,685.813 1742,685.813 1742.56,685.813 1743.12,685.813 1743.68,685.813 1744.24,685.813 1744.79,685.813 1745.35,685.813 1745.91,685.813 1746.47,685.813 1747.03,685.813 1747.59,685.813 1748.15,685.813 1748.71,685.813 1749.27,685.813 1749.83,685.813 1750.39,685.813 1750.95,685.813 1751.51,685.813 1752.06,685.813 1752.62,685.813 1753.18,685.813 1753.74,685.813 1754.3,685.813 1754.86,685.813 1755.42,685.813 1755.98,685.813 1756.54,685.813 1757.1,685.813 1757.66,685.813 1758.22,685.813 1758.78,685.813 1759.34,685.813 1759.89,685.813 1760.45,685.813 1761.01,685.813 1761.57,685.813 1762.13,685.813 1762.69,685.813 1763.25,685.813 1763.81,685.813 1764.37,685.813 1764.93,685.813 1765.49,685.813 1766.05,685.813 1766.61,685.813 1767.16,685.813 1767.72,685.813 1768.28,685.813 1768.84,685.813 1769.4,685.813 1769.96,685.813 1770.52,685.813 1771.08,685.813 1771.64,685.813 1772.2,685.813 1772.76,685.813 1773.32,685.813 1773.88,685.813 1774.43,685.813 1774.99,685.813 1775.55,685.813 1776.11,685.813 1776.67,685.813 1777.23,685.813 1777.79,685.813 1778.35,685.813 1778.91,685.813 1779.47,685.813 1780.03,685.813 1780.59,685.813 1781.15,685.813 1781.71,685.813 1782.26,685.813 1782.82,685.813 1783.38,685.813 1783.94,685.813 1784.5,685.813 1785.06,685.813 1785.62,685.813 1786.18,685.813 1786.74,685.813 1787.3,685.813 1787.86,685.813 1788.42,685.813 1788.98,685.813 1789.53,685.813 1790.09,685.813 1790.65,685.813 1791.21,685.813 1791.77,685.813 1792.33,685.813 1792.89,685.813 1793.45,685.813 1794.01,685.813 1794.57,685.813 1795.13,685.813 1795.69,685.813 1796.25,685.813 1796.8,685.813 1797.36,685.813 1797.92,685.813 1798.48,685.813 1799.04,685.813 1799.6,685.813 1800.16,685.813 1800.72,685.813 1801.28,685.813 1801.84,685.813 1802.4,685.813 1802.96,685.813 1803.52,685.813 1804.08,685.813 1804.63,685.813 1805.19,685.813 1805.75,685.813 1806.31,685.813 1806.87,685.813 1807.43,685.813 1807.99,685.813 1808.55,685.813 1809.11,685.813 1809.67,685.813 1810.23,685.813 1810.79,685.813 1811.35,685.813 1811.9,685.813 1812.46,685.813 1813.02,685.813 1813.58,685.813 1814.14,685.813 1814.7,685.813 1815.26,685.813 1815.82,685.813 1816.38,685.813 1816.94,685.813 1817.5,685.813 1818.06,685.813 1818.62,685.813 1819.18,685.813 1819.73,685.813 1820.29,685.813 1820.85,685.813 1821.41,685.813 1821.97,685.813 1822.53,685.813 1823.09,685.813 1823.65,685.813 1824.21,685.813 1824.77,685.813 1825.33,685.813 1825.89,685.813 1826.45,685.813 1827,685.813 1827.56,685.813 1828.12,685.813 1828.68,685.813 1829.24,685.813 1829.8,685.813 1830.36,685.813 1830.92,685.813 1831.48,685.813 1832.04,685.813 1832.6,685.813 1833.16,685.813 1833.72,685.813 1834.27,685.813 1834.83,685.813 1835.39,685.813 1835.95,685.813 1836.51,685.813 1837.07,685.813 1837.63,685.813 1838.19,685.813 \"/>\n<path clip-path=\"url(#clip483)\" d=\"M720.247 684.576 L720.806 684.576 L721.365 684.576 L721.924 684.576 L722.484 684.576 L723.043 684.576 L723.602 684.576 L724.161 684.576 L724.721 684.576 L725.28 684.576 L725.839 684.576 L726.398 684.576 L726.958 684.576 L727.517 684.576 L728.076 684.576 L728.635 684.576 L729.195 684.576 L729.754 684.576 L730.313 684.576 L730.872 684.576 L731.432 684.576 L731.991 684.576 L732.55 684.576 L733.109 684.576 L733.669 684.576 L734.228 684.576 L734.787 684.576 L735.346 684.576 L735.906 684.576 L736.465 684.576 L737.024 684.576 L737.583 684.576 L738.143 684.576 L738.702 684.576 L739.261 684.576 L739.82 684.576 L740.38 684.576 L740.939 684.576 L741.498 684.576 L742.057 684.576 L742.617 684.576 L743.176 684.576 L743.735 684.576 L744.294 684.576 L744.854 684.576 L745.413 684.576 L745.972 684.576 L746.531 684.576 L747.091 684.576 L747.65 684.576 L748.209 684.576 L748.768 684.576 L749.328 684.576 L749.887 684.576 L750.446 684.576 L751.005 684.576 L751.565 684.576 L752.124 684.576 L752.683 684.576 L753.242 684.576 L753.802 684.576 L754.361 684.576 L754.92 684.576 L755.479 684.576 L756.039 684.576 L756.598 684.576 L757.157 684.576 L757.716 684.576 L758.276 684.576 L758.835 684.576 L759.394 684.576 L759.953 684.576 L760.513 684.576 L761.072 684.576 L761.631 684.576 L762.19 684.576 L762.75 684.576 L763.309 684.576 L763.868 684.576 L764.427 684.576 L764.987 684.576 L765.546 684.576 L766.105 684.576 L766.664 684.576 L767.224 684.576 L767.783 684.576 L768.342 684.576 L768.901 684.576 L769.461 684.576 L770.02 684.576 L770.579 684.576 L771.138 684.576 L771.698 684.576 L772.257 684.576 L772.816 684.576 L773.375 684.576 L773.935 684.576 L774.494 684.576 L775.053 684.576 L775.612 684.576 L776.172 684.576 L776.731 684.576 L777.29 684.576 L777.849 684.576 L778.409 684.576 L778.968 684.576 L779.527 684.576 L780.086 684.576 L780.646 684.576 L781.205 684.576 L781.764 684.576 L782.323 684.576 L782.883 684.576 L783.442 684.576 L784.001 684.576 L784.56 684.576 L785.12 684.576 L785.679 684.576 L786.238 684.576 L786.797 684.576 L787.357 684.576 L787.916 684.576 L788.475 684.576 L789.034 684.576 L789.594 684.576 L790.153 684.576 L790.712 684.576 L791.271 684.576 L791.831 684.576 L792.39 684.576 L792.949 684.576 L793.508 684.576 L794.068 684.576 L794.627 684.576 L795.186 684.576 L795.745 684.576 L796.305 684.576 L796.864 684.576 L797.423 684.576 L797.982 684.576 L798.542 684.576 L799.101 684.576 L799.66 684.576 L800.219 684.576 L800.779 684.576 L801.338 684.576 L801.897 684.576 L802.456 684.576 L803.016 684.576 L803.575 684.576 L804.134 684.576 L804.693 684.576 L805.253 684.576 L805.812 684.576 L806.371 684.576 L806.931 684.576 L807.49 684.576 L808.049 684.576 L808.608 684.576 L809.168 684.576 L809.727 684.576 L810.286 684.576 L810.845 684.576 L811.405 684.576 L811.964 684.576 L812.523 684.576 L813.082 684.576 L813.642 684.576 L814.201 684.576 L814.76 684.576 L815.319 684.576 L815.879 684.576 L816.438 684.576 L816.997 684.576 L817.556 684.576 L818.116 684.576 L818.675 684.576 L819.234 684.576 L819.793 684.576 L820.353 684.576 L820.912 684.576 L821.471 684.576 L822.03 684.576 L822.59 684.576 L823.149 684.576 L823.708 684.576 L824.267 684.576 L824.827 684.576 L825.386 684.576 L825.945 684.576 L826.504 684.576 L827.064 684.576 L827.623 684.576 L828.182 684.576 L828.741 684.576 L829.301 684.576 L829.86 684.576 L830.419 684.576 L830.978 684.576 L831.538 684.576 L832.097 684.576 L832.656 684.576 L833.215 684.576 L833.775 684.576 L834.334 684.576 L834.893 684.576 L835.452 684.576 L836.012 684.576 L836.571 684.576 L837.13 684.576 L837.689 684.576 L838.249 684.576 L838.808 684.576 L839.367 684.576 L839.926 684.576 L840.486 684.576 L841.045 684.576 L841.604 684.576 L842.163 684.576 L842.723 684.576 L843.282 684.576 L843.841 684.576 L844.4 684.576 L844.96 684.576 L845.519 684.576 L846.078 684.576 L846.637 684.576 L847.197 684.576 L847.756 684.576 L848.315 684.576 L848.874 684.576 L849.434 684.576 L849.993 684.576 L850.552 684.576 L851.111 684.576 L851.671 684.576 L852.23 684.576 L852.789 684.576 L853.348 684.576 L853.908 684.576 L854.467 684.576 L855.026 684.576 L855.585 684.576 L856.145 684.576 L856.704 684.576 L857.263 684.576 L857.822 684.576 L858.382 684.576 L858.941 684.576 L859.5 684.576 L860.059 684.576 L860.619 684.576 L861.178 684.576 L861.737 684.576 L862.296 684.576 L862.856 684.576 L863.415 684.576 L863.974 684.576 L864.533 684.576 L865.093 684.576 L865.652 684.576 L866.211 684.576 L866.77 684.576 L867.33 684.576 L867.889 684.576 L868.448 684.576 L869.007 684.576 L869.567 684.576 L870.126 684.576 L870.685 684.576 L871.244 684.576 L871.804 684.576 L872.363 684.576 L872.922 684.576 L873.481 684.576 L874.041 684.576 L874.6 684.576 L875.159 684.576 L875.718 684.576 L876.278 684.576 L876.837 684.576 L877.396 684.576 L877.955 684.576 L878.515 684.576 L879.074 684.576 L879.633 684.576 L880.192 684.576 L880.752 684.576 L881.311 684.576 L881.87 684.576 L882.429 684.576 L882.989 684.576 L883.548 684.576 L884.107 684.576 L884.666 684.576 L885.226 684.576 L885.785 684.576 L886.344 684.576 L886.903 684.576 L887.463 684.576 L888.022 684.576 L888.581 684.576 L889.14 684.576 L889.7 684.576 L890.259 684.576 L890.818 684.576 L891.377 684.576 L891.937 684.576 L892.496 684.576 L893.055 684.576 L893.614 684.576 L894.174 684.576 L894.733 684.576 L895.292 684.576 L895.851 684.576 L896.411 684.576 L896.97 684.576 L897.529 684.576 L898.088 684.576 L898.648 684.576 L899.207 684.576 L899.766 684.576 L900.325 684.576 L900.885 684.576 L901.444 684.576 L902.003 684.576 L902.562 684.576 L903.122 684.576 L903.681 684.576 L904.24 684.576 L904.799 684.576 L905.359 684.576 L905.918 684.576 L906.477 684.576 L907.036 684.576 L907.596 684.576 L908.155 684.576 L908.714 684.576 L909.273 684.576 L909.833 684.576 L910.392 684.576 L910.951 684.576 L911.51 684.576 L912.07 684.576 L912.629 684.576 L913.188 684.576 L913.747 684.576 L914.307 684.576 L914.866 684.576 L915.425 684.576 L915.984 684.576 L916.544 684.576 L917.103 684.576 L917.662 684.576 L918.221 684.576 L918.781 684.576 L919.34 684.576 L919.899 684.576 L920.458 684.576 L921.018 684.576 L921.577 684.576 L922.136 684.576 L922.695 684.576 L923.255 684.576 L923.814 684.576 L924.373 684.576 L924.932 684.576 L925.492 684.576 L926.051 684.576 L926.61 684.576 L927.169 684.576 L927.729 684.576 L928.288 684.576 L928.847 684.576 L929.406 684.576 L929.966 684.576 L930.525 684.576 L931.084 684.576 L931.644 684.576 L932.203 684.576 L932.762 684.576 L933.321 684.576 L933.881 684.576 L934.44 684.576 L934.999 684.576 L935.558 684.576 L936.118 684.576 L936.677 684.576 L937.236 684.576 L937.795 684.576 L938.355 684.576 L938.914 684.576 L939.473 684.576 L940.032 684.576 L940.592 684.576 L941.151 684.576 L941.71 684.576 L942.269 684.576 L942.829 684.576 L943.388 684.576 L943.947 684.576 L944.506 684.576 L945.066 684.576 L945.625 684.576 L946.184 684.576 L946.743 684.576 L947.303 684.576 L947.862 684.576 L948.421 684.576 L948.98 684.576 L949.54 684.576 L950.099 684.576 L950.658 684.576 L951.217 684.576 L951.777 684.576 L952.336 684.576 L952.895 684.576 L953.454 684.576 L954.014 684.576 L954.573 684.576 L955.132 684.576 L955.691 684.576 L956.251 684.576 L956.81 684.576 L957.369 684.576 L957.928 684.576 L958.488 684.576 L959.047 684.576 L959.606 684.576 L960.165 684.576 L960.725 684.576 L961.284 684.576 L961.843 684.576 L962.402 684.576 L962.962 684.576 L963.521 684.576 L964.08 684.576 L964.639 684.576 L965.199 684.576 L965.758 684.576 L966.317 684.576 L966.876 684.576 L967.436 684.576 L967.995 684.576 L968.554 684.576 L969.113 684.576 L969.673 684.576 L970.232 684.576 L970.791 684.576 L971.35 684.576 L971.91 684.576 L972.469 684.576 L973.028 684.576 L973.587 684.576 L974.147 684.576 L974.706 684.576 L975.265 684.576 L975.824 684.576 L976.384 684.576 L976.943 684.576 L977.502 684.576 L978.061 684.576 L978.621 684.576 L979.18 684.576 L979.739 684.576 L980.298 684.576 L980.858 684.576 L981.417 684.576 L981.976 684.576 L982.535 684.576 L983.095 684.576 L983.654 684.576 L984.213 684.576 L984.772 684.576 L985.332 684.576 L985.891 684.576 L986.45 684.576 L987.009 684.576 L987.569 684.576 L988.128 684.576 L988.687 684.576 L989.246 684.576 L989.806 684.576 L990.365 684.576 L990.924 684.576 L991.483 684.576 L992.043 684.576 L992.602 684.576 L993.161 684.576 L993.72 684.576 L994.28 684.576 L994.839 684.576 L995.398 684.576 L995.957 684.576 L996.517 684.576 L997.076 684.576 L997.635 684.576 L998.194 684.576 L998.754 684.576 L999.313 684.576 L999.872 684.576 L1000.43 684.576 L1000.99 684.576 L1001.55 684.576 L1002.11 684.576 L1002.67 684.576 L1003.23 684.576 L1003.79 684.576 L1004.35 684.576 L1004.91 684.576 L1005.46 684.576 L1006.02 684.576 L1006.58 684.576 L1007.14 684.576 L1007.7 684.576 L1008.26 684.576 L1008.82 684.576 L1009.38 684.576 L1009.94 684.576 L1010.5 684.576 L1011.06 684.576 L1011.62 684.576 L1012.18 684.576 L1012.73 684.576 L1013.29 684.576 L1013.85 684.576 L1014.41 684.576 L1014.97 684.576 L1015.53 684.576 L1016.09 684.576 L1016.65 684.576 L1017.21 684.576 L1017.77 684.576 L1018.33 684.576 L1018.89 684.576 L1019.45 684.576 L1020.01 684.576 L1020.56 684.576 L1021.12 684.576 L1021.68 684.576 L1022.24 684.576 L1022.8 684.576 L1023.36 684.576 L1023.92 684.576 L1024.48 684.576 L1025.04 684.576 L1025.6 684.576 L1026.16 684.576 L1026.72 684.576 L1027.28 684.576 L1027.83 684.576 L1028.39 684.576 L1028.95 684.576 L1029.51 684.576 L1030.07 684.576 L1030.63 684.576 L1031.19 684.576 L1031.75 684.576 L1032.31 684.576 L1032.87 684.576 L1033.43 684.576 L1033.99 684.576 L1034.55 684.576 L1035.1 684.576 L1035.66 684.576 L1036.22 684.576 L1036.78 684.576 L1037.34 684.576 L1037.9 684.576 L1038.46 684.576 L1039.02 684.576 L1039.58 684.576 L1040.14 684.576 L1040.7 684.576 L1041.26 684.576 L1041.82 684.576 L1042.38 684.576 L1042.93 684.576 L1043.49 684.576 L1044.05 684.576 L1044.61 684.576 L1045.17 684.576 L1045.73 684.576 L1046.29 684.576 L1046.85 684.576 L1047.41 684.576 L1047.97 684.576 L1048.53 684.576 L1049.09 684.576 L1049.65 684.576 L1050.2 684.576 L1050.76 684.576 L1051.32 684.576 L1051.88 684.576 L1052.44 684.576 L1053 684.576 L1053.56 684.576 L1054.12 684.576 L1054.68 684.576 L1055.24 684.576 L1055.8 684.576 L1056.36 684.576 L1056.92 684.576 L1057.48 684.576 L1058.03 684.576 L1058.59 684.576 L1059.15 684.576 L1059.71 684.576 L1060.27 684.576 L1060.83 684.576 L1061.39 684.576 L1061.95 684.576 L1062.51 684.576 L1063.07 684.576 L1063.63 684.576 L1064.19 684.576 L1064.75 684.576 L1065.3 684.576 L1065.86 684.576 L1066.42 684.576 L1066.98 684.576 L1067.54 684.576 L1068.1 684.576 L1068.66 684.576 L1069.22 684.576 L1069.78 684.576 L1070.34 684.576 L1070.9 684.576 L1071.46 684.576 L1072.02 684.576 L1072.57 684.576 L1073.13 684.576 L1073.69 684.576 L1074.25 684.576 L1074.81 684.576 L1075.37 684.576 L1075.93 684.576 L1076.49 684.576 L1077.05 684.576 L1077.61 684.576 L1078.17 684.576 L1078.73 684.576 L1079.29 684.576 L1079.85 684.576 L1080.4 684.576 L1080.96 684.576 L1081.52 684.576 L1082.08 684.576 L1082.64 684.576 L1083.2 684.576 L1083.76 684.576 L1084.32 684.576 L1084.88 684.576 L1085.44 684.576 L1086 684.576 L1086.56 684.576 L1087.12 684.576 L1087.67 684.576 L1088.23 684.576 L1088.79 684.576 L1089.35 684.576 L1089.91 684.576 L1090.47 684.576 L1091.03 684.576 L1091.59 684.576 L1092.15 684.576 L1092.71 684.576 L1093.27 684.576 L1093.83 684.576 L1094.39 684.576 L1094.94 684.576 L1095.5 684.576 L1096.06 684.576 L1096.62 684.576 L1097.18 684.576 L1097.74 684.576 L1098.3 684.576 L1098.86 684.576 L1099.42 684.576 L1099.98 684.576 L1100.54 684.576 L1101.1 684.576 L1101.66 684.576 L1102.22 684.576 L1102.77 684.576 L1103.33 684.576 L1103.89 684.576 L1104.45 684.576 L1105.01 684.576 L1105.57 684.576 L1106.13 684.576 L1106.69 684.576 L1107.25 684.576 L1107.81 684.576 L1108.37 684.576 L1108.93 684.576 L1109.49 684.576 L1110.04 684.576 L1110.6 684.576 L1111.16 684.576 L1111.72 684.576 L1112.28 684.576 L1112.84 684.576 L1113.4 684.576 L1113.96 684.576 L1114.52 684.576 L1115.08 684.576 L1115.64 684.576 L1116.2 684.576 L1116.76 684.576 L1117.31 684.576 L1117.87 684.576 L1118.43 684.576 L1118.99 684.576 L1119.55 684.576 L1120.11 684.576 L1120.67 684.576 L1121.23 684.576 L1121.79 684.576 L1122.35 684.576 L1122.91 684.576 L1123.47 684.576 L1124.03 684.576 L1124.59 684.576 L1125.14 684.576 L1125.7 684.576 L1126.26 684.576 L1126.82 684.576 L1127.38 684.576 L1127.94 684.576 L1128.5 684.576 L1129.06 684.576 L1129.62 684.576 L1130.18 684.576 L1130.74 684.576 L1131.3 684.576 L1131.86 684.576 L1132.41 684.576 L1132.97 684.576 L1133.53 684.576 L1134.09 684.576 L1134.65 684.576 L1135.21 684.576 L1135.77 684.576 L1136.33 684.576 L1136.89 684.576 L1137.45 684.576 L1138.01 684.576 L1138.57 684.576 L1139.13 684.576 L1139.68 684.576 L1140.24 684.576 L1140.8 684.576 L1141.36 684.576 L1141.92 684.576 L1142.48 684.576 L1143.04 684.576 L1143.6 684.576 L1144.16 684.576 L1144.72 684.576 L1145.28 684.576 L1145.84 684.576 L1146.4 684.576 L1146.96 684.576 L1147.51 684.576 L1148.07 684.576 L1148.63 684.576 L1149.19 684.576 L1149.75 684.576 L1150.31 684.576 L1150.87 684.576 L1151.43 684.576 L1151.99 684.576 L1152.55 684.576 L1153.11 684.576 L1153.67 684.576 L1154.23 684.576 L1154.78 684.576 L1155.34 684.576 L1155.9 684.576 L1156.46 684.576 L1157.02 684.576 L1157.58 684.576 L1158.14 684.576 L1158.7 684.576 L1159.26 684.576 L1159.82 684.576 L1160.38 684.576 L1160.94 684.576 L1161.5 684.576 L1162.05 684.576 L1162.61 684.576 L1163.17 684.576 L1163.73 684.576 L1164.29 684.576 L1164.85 684.576 L1165.41 684.576 L1165.97 684.576 L1166.53 684.576 L1167.09 684.576 L1167.65 684.576 L1168.21 684.576 L1168.77 684.576 L1169.33 684.576 L1169.88 684.576 L1170.44 684.576 L1171 684.576 L1171.56 684.576 L1172.12 684.576 L1172.68 684.576 L1173.24 684.576 L1173.8 684.576 L1174.36 684.576 L1174.92 684.576 L1175.48 684.576 L1176.04 684.576 L1176.6 684.576 L1177.15 684.576 L1177.71 684.576 L1178.27 684.576 L1178.83 684.576 L1179.39 684.576 L1179.95 684.576 L1180.51 684.576 L1181.07 684.576 L1181.63 684.576 L1182.19 684.576 L1182.75 684.576 L1183.31 684.576 L1183.87 684.576 L1184.43 684.576 L1184.98 684.576 L1185.54 684.576 L1186.1 684.576 L1186.66 684.576 L1187.22 684.576 L1187.78 684.576 L1188.34 684.576 L1188.9 684.576 L1189.46 684.576 L1190.02 684.576 L1190.58 684.576 L1191.14 684.576 L1191.7 684.576 L1192.25 684.576 L1192.81 684.576 L1193.37 684.576 L1193.93 684.576 L1194.49 684.576 L1195.05 684.576 L1195.61 684.576 L1196.17 684.576 L1196.73 684.576 L1197.29 684.576 L1197.85 684.576 L1198.41 684.576 L1198.97 684.576 L1199.52 684.576 L1200.08 684.576 L1200.64 684.576 L1201.2 684.576 L1201.76 684.576 L1202.32 684.576 L1202.88 684.576 L1203.44 684.576 L1204 684.576 L1204.56 684.576 L1205.12 684.576 L1205.68 684.576 L1206.24 684.576 L1206.8 684.576 L1207.35 684.576 L1207.91 684.576 L1208.47 684.576 L1209.03 684.576 L1209.59 684.576 L1210.15 684.576 L1210.71 684.576 L1211.27 684.576 L1211.83 684.576 L1212.39 684.576 L1212.95 684.576 L1213.51 684.576 L1214.07 684.576 L1214.62 684.576 L1215.18 684.576 L1215.74 684.576 L1216.3 684.576 L1216.86 684.576 L1217.42 684.576 L1217.98 684.576 L1218.54 684.576 L1219.1 684.576 L1219.66 684.576 L1220.22 684.576 L1220.78 684.576 L1221.34 684.576 L1221.89 684.576 L1222.45 684.576 L1223.01 684.576 L1223.57 684.576 L1224.13 684.576 L1224.69 684.576 L1225.25 684.576 L1225.81 684.576 L1226.37 684.576 L1226.93 684.576 L1227.49 684.576 L1228.05 684.576 L1228.61 684.576 L1229.17 684.576 L1229.72 684.576 L1230.28 684.576 L1230.84 684.576 L1231.4 684.576 L1231.96 684.576 L1232.52 684.576 L1233.08 684.576 L1233.64 684.576 L1234.2 684.576 L1234.76 684.576 L1235.32 684.576 L1235.88 684.576 L1236.44 684.576 L1236.99 684.576 L1237.55 684.576 L1238.11 684.576 L1238.67 684.576 L1239.23 684.576 L1239.79 684.576 L1240.35 684.576 L1240.91 684.576 L1241.47 684.576 L1242.03 684.576 L1242.59 684.576 L1243.15 684.576 L1243.71 684.576 L1244.26 684.576 L1244.82 684.576 L1245.38 684.576 L1245.94 684.576 L1246.5 684.576 L1247.06 684.576 L1247.62 684.576 L1248.18 684.576 L1248.74 684.576 L1249.3 684.576 L1249.86 684.576 L1250.42 684.576 L1250.98 684.576 L1251.54 684.576 L1252.09 684.576 L1252.65 684.576 L1253.21 684.576 L1253.77 684.576 L1254.33 684.576 L1254.89 684.576 L1255.45 684.576 L1256.01 684.576 L1256.57 684.576 L1257.13 684.576 L1257.69 684.576 L1258.25 684.576 L1258.81 684.576 L1259.36 684.576 L1259.92 684.576 L1260.48 684.576 L1261.04 684.576 L1261.6 684.576 L1262.16 684.576 L1262.72 684.576 L1263.28 684.576 L1263.84 684.576 L1264.4 684.576 L1264.96 684.576 L1265.52 684.576 L1266.08 684.576 L1266.63 684.576 L1267.19 684.576 L1267.75 684.576 L1268.31 684.576 L1268.87 684.576 L1269.43 684.576 L1269.99 684.576 L1270.55 684.576 L1271.11 684.576 L1271.67 684.576 L1272.23 684.576 L1272.79 684.576 L1273.35 684.576 L1273.91 684.576 L1274.46 684.576 L1275.02 684.576 L1275.58 684.576 L1276.14 684.576 L1276.7 684.576 L1277.26 684.576 L1277.82 684.576 L1278.38 684.576 L1278.94 684.576 L1279.5 684.576 L1280.06 684.576 L1280.62 684.576 L1281.18 684.576 L1281.73 684.576 L1282.29 684.576 L1282.85 684.576 L1283.41 684.576 L1283.97 684.576 L1284.53 684.576 L1285.09 684.576 L1285.65 684.576 L1286.21 684.576 L1286.77 684.576 L1287.33 684.576 L1287.89 684.576 L1288.45 684.576 L1289 684.576 L1289.56 684.576 L1290.12 684.576 L1290.68 684.576 L1291.24 684.576 L1291.8 684.576 L1292.36 684.576 L1292.92 684.576 L1293.48 684.576 L1294.04 684.576 L1294.6 684.576 L1295.16 684.576 L1295.72 684.576 L1296.28 684.576 L1296.83 684.576 L1297.39 684.576 L1297.95 684.576 L1298.51 684.576 L1299.07 684.576 L1299.63 684.576 L1300.19 684.576 L1300.75 684.576 L1301.31 684.576 L1301.87 684.576 L1302.43 684.576 L1302.99 684.576 L1303.55 684.576 L1304.1 684.576 L1304.66 684.576 L1305.22 684.576 L1305.78 684.576 L1306.34 684.576 L1306.9 684.576 L1307.46 684.576 L1308.02 684.576 L1308.58 684.576 L1309.14 684.576 L1309.7 684.576 L1310.26 684.576 L1310.82 684.576 L1311.38 684.576 L1311.93 684.576 L1312.49 684.576 L1313.05 684.576 L1313.61 684.576 L1314.17 684.576 L1314.73 684.576 L1315.29 684.576 L1315.85 684.576 L1316.41 684.576 L1316.97 684.576 L1317.53 684.576 L1318.09 684.576 L1318.65 684.576 L1319.2 684.576 L1319.76 684.576 L1320.32 684.576 L1320.88 684.576 L1321.44 684.576 L1322 684.576 L1322.56 684.576 L1323.12 684.576 L1323.68 684.576 L1324.24 684.576 L1324.8 684.576 L1325.36 684.576 L1325.92 684.576 L1326.47 684.576 L1327.03 684.576 L1327.59 684.576 L1328.15 684.576 L1328.71 684.576 L1329.27 684.576 L1329.83 684.576 L1330.39 684.576 L1330.95 684.576 L1331.51 684.576 L1332.07 684.576 L1332.63 684.576 L1333.19 684.576 L1333.75 684.576 L1334.3 684.576 L1334.86 684.576 L1335.42 684.576 L1335.98 684.576 L1336.54 684.576 L1337.1 684.576 L1337.66 684.576 L1338.22 684.576 L1338.78 684.576 L1339.34 684.576 L1339.9 684.576 L1340.46 684.576 L1341.02 684.576 L1341.57 684.576 L1342.13 684.576 L1342.69 684.576 L1343.25 684.576 L1343.81 684.576 L1344.37 684.576 L1344.93 684.576 L1345.49 684.576 L1346.05 684.576 L1346.61 684.576 L1347.17 684.576 L1347.73 684.576 L1348.29 684.576 L1348.84 684.576 L1349.4 684.576 L1349.96 684.576 L1350.52 684.576 L1351.08 684.576 L1351.64 684.576 L1352.2 684.576 L1352.76 684.576 L1353.32 684.576 L1353.88 684.576 L1354.44 684.576 L1355 684.576 L1355.56 684.576 L1356.12 684.576 L1356.67 684.576 L1357.23 684.576 L1357.79 684.576 L1358.35 684.576 L1358.91 684.576 L1359.47 684.576 L1360.03 684.576 L1360.59 684.576 L1361.15 684.576 L1361.71 684.576 L1362.27 684.576 L1362.83 684.576 L1363.39 684.576 L1363.94 684.576 L1364.5 684.576 L1365.06 684.576 L1365.62 684.576 L1366.18 684.576 L1366.74 684.576 L1367.3 684.576 L1367.86 684.576 L1368.42 684.576 L1368.98 684.576 L1369.54 684.576 L1370.1 684.576 L1370.66 684.576 L1371.21 684.576 L1371.77 684.576 L1372.33 684.576 L1372.89 684.576 L1373.45 684.576 L1374.01 684.576 L1374.57 684.576 L1375.13 684.576 L1375.69 684.576 L1376.25 684.576 L1376.81 684.576 L1377.37 684.576 L1377.93 684.576 L1378.49 684.576 L1379.04 684.576 L1379.6 684.576 L1380.16 684.576 L1380.72 684.576 L1381.28 684.576 L1381.84 684.576 L1382.4 684.576 L1382.96 684.576 L1383.52 684.576 L1384.08 684.576 L1384.64 684.576 L1385.2 684.576 L1385.76 684.576 L1386.31 684.576 L1386.87 684.576 L1387.43 684.576 L1387.99 684.576 L1388.55 684.576 L1389.11 684.576 L1389.67 684.576 L1390.23 684.576 L1390.79 684.576 L1391.35 684.576 L1391.91 684.576 L1392.47 684.576 L1393.03 684.576 L1393.58 684.576 L1394.14 684.576 L1394.7 684.576 L1395.26 684.576 L1395.82 684.576 L1396.38 684.576 L1396.94 684.576 L1397.5 684.576 L1398.06 684.576 L1398.62 684.576 L1399.18 684.576 L1399.74 684.576 L1400.3 684.576 L1400.86 684.576 L1401.41 684.576 L1401.97 684.576 L1402.53 684.576 L1403.09 684.576 L1403.65 684.576 L1404.21 684.576 L1404.77 684.576 L1405.33 684.576 L1405.89 684.576 L1406.45 684.576 L1407.01 684.576 L1407.57 684.576 L1408.13 684.576 L1408.68 684.576 L1409.24 684.576 L1409.8 684.576 L1410.36 684.576 L1410.92 684.576 L1411.48 684.576 L1412.04 684.576 L1412.6 684.576 L1413.16 684.576 L1413.72 684.576 L1414.28 684.576 L1414.84 684.576 L1415.4 684.576 L1415.95 684.576 L1416.51 684.576 L1417.07 684.576 L1417.63 684.576 L1418.19 684.576 L1418.75 684.576 L1419.31 684.576 L1419.87 684.576 L1420.43 684.576 L1420.99 684.576 L1421.55 684.576 L1422.11 684.576 L1422.67 684.576 L1423.23 684.576 L1423.78 684.576 L1424.34 684.576 L1424.9 684.576 L1425.46 684.576 L1426.02 684.576 L1426.58 684.576 L1427.14 684.576 L1427.7 684.576 L1428.26 684.576 L1428.82 684.576 L1429.38 684.576 L1429.94 684.576 L1430.5 684.576 L1431.05 684.576 L1431.61 684.576 L1432.17 684.576 L1432.73 684.576 L1433.29 684.576 L1433.85 684.576 L1434.41 684.576 L1434.97 684.576 L1435.53 684.576 L1436.09 684.576 L1436.65 684.576 L1437.21 684.576 L1437.77 684.576 L1438.33 684.576 L1438.88 684.576 L1439.44 684.576 L1440 684.576 L1440.56 684.576 L1441.12 684.576 L1441.68 684.576 L1442.24 684.576 L1442.8 684.576 L1443.36 684.576 L1443.92 684.576 L1444.48 684.576 L1445.04 684.576 L1445.6 684.576 L1446.15 684.576 L1446.71 684.576 L1447.27 684.576 L1447.83 684.576 L1448.39 684.576 L1448.95 684.576 L1449.51 684.576 L1450.07 684.576 L1450.63 684.576 L1451.19 684.576 L1451.75 684.576 L1452.31 684.576 L1452.87 684.576 L1453.42 684.576 L1453.98 684.576 L1454.54 684.576 L1455.1 684.576 L1455.66 684.576 L1456.22 684.576 L1456.78 684.576 L1457.34 684.576 L1457.9 684.576 L1458.46 684.576 L1459.02 684.576 L1459.58 684.576 L1460.14 684.576 L1460.7 684.576 L1461.25 684.576 L1461.81 684.576 L1462.37 684.576 L1462.93 684.576 L1463.49 684.576 L1464.05 684.576 L1464.61 684.576 L1465.17 684.576 L1465.73 684.576 L1466.29 684.576 L1466.85 684.576 L1467.41 684.576 L1467.97 684.576 L1468.52 684.576 L1469.08 684.576 L1469.64 684.576 L1470.2 684.576 L1470.76 684.576 L1471.32 684.576 L1471.88 684.576 L1472.44 684.576 L1473 684.576 L1473.56 684.576 L1474.12 684.576 L1474.68 684.576 L1475.24 684.576 L1475.79 684.576 L1476.35 684.576 L1476.91 684.576 L1477.47 684.576 L1478.03 684.576 L1478.59 684.576 L1479.15 684.576 L1479.71 684.576 L1480.27 684.576 L1480.83 684.576 L1481.39 684.576 L1481.95 684.576 L1482.51 684.576 L1483.07 684.576 L1483.62 684.576 L1484.18 684.576 L1484.74 684.576 L1485.3 684.576 L1485.86 684.576 L1486.42 684.576 L1486.98 684.576 L1487.54 684.576 L1488.1 684.576 L1488.66 684.576 L1489.22 684.576 L1489.78 684.576 L1490.34 684.576 L1490.89 684.576 L1491.45 684.576 L1492.01 684.576 L1492.57 684.576 L1493.13 684.576 L1493.69 684.576 L1494.25 684.576 L1494.81 684.576 L1495.37 684.576 L1495.93 684.576 L1496.49 684.576 L1497.05 684.576 L1497.61 684.576 L1498.16 684.576 L1498.72 684.576 L1499.28 684.576 L1499.84 684.576 L1500.4 684.576 L1500.96 684.576 L1501.52 684.576 L1502.08 684.576 L1502.64 684.576 L1503.2 684.576 L1503.76 684.576 L1504.32 684.576 L1504.88 684.576 L1505.44 684.576 L1505.99 684.576 L1506.55 684.576 L1507.11 684.576 L1507.67 684.576 L1508.23 684.576 L1508.79 684.576 L1509.35 684.576 L1509.91 684.576 L1510.47 684.576 L1511.03 684.576 L1511.59 684.576 L1512.15 684.576 L1512.71 684.576 L1513.26 684.576 L1513.82 684.576 L1514.38 684.576 L1514.94 684.576 L1515.5 684.576 L1516.06 684.576 L1516.62 684.576 L1517.18 684.576 L1517.74 684.576 L1518.3 684.576 L1518.86 684.576 L1519.42 684.576 L1519.98 684.576 L1520.53 684.576 L1521.09 684.576 L1521.65 684.576 L1522.21 684.576 L1522.77 684.576 L1523.33 684.576 L1523.89 684.576 L1524.45 684.576 L1525.01 684.576 L1525.57 684.576 L1526.13 684.576 L1526.69 684.576 L1527.25 684.576 L1527.81 684.576 L1528.36 684.576 L1528.92 684.576 L1529.48 684.576 L1530.04 684.576 L1530.6 684.576 L1531.16 684.576 L1531.72 684.576 L1532.28 684.576 L1532.84 684.576 L1533.4 684.576 L1533.96 684.576 L1534.52 684.576 L1535.08 684.576 L1535.63 684.576 L1536.19 684.576 L1536.75 684.576 L1537.31 684.576 L1537.87 684.576 L1538.43 684.576 L1538.99 684.576 L1539.55 684.576 L1540.11 684.576 L1540.67 684.576 L1541.23 684.576 L1541.79 684.576 L1542.35 684.576 L1542.9 684.576 L1543.46 684.576 L1544.02 684.576 L1544.58 684.576 L1545.14 684.576 L1545.7 684.576 L1546.26 684.576 L1546.82 684.576 L1547.38 684.576 L1547.94 684.576 L1548.5 684.576 L1549.06 684.576 L1549.62 684.576 L1550.18 684.576 L1550.73 684.576 L1551.29 684.576 L1551.85 684.576 L1552.41 684.576 L1552.97 684.576 L1553.53 684.576 L1554.09 684.576 L1554.65 684.576 L1555.21 684.576 L1555.77 684.576 L1556.33 684.576 L1556.89 684.576 L1557.45 684.576 L1558 684.576 L1558.56 684.576 L1559.12 684.576 L1559.68 684.576 L1560.24 684.576 L1560.8 684.576 L1561.36 684.576 L1561.92 684.576 L1562.48 684.576 L1563.04 684.576 L1563.6 684.576 L1564.16 684.576 L1564.72 684.576 L1565.28 684.576 L1565.83 684.576 L1566.39 684.576 L1566.95 684.576 L1567.51 684.576 L1568.07 684.576 L1568.63 684.576 L1569.19 684.576 L1569.75 684.576 L1570.31 684.576 L1570.87 684.576 L1571.43 684.576 L1571.99 684.576 L1572.55 684.576 L1573.1 684.576 L1573.66 684.576 L1574.22 684.576 L1574.78 684.576 L1575.34 684.576 L1575.9 684.576 L1576.46 684.576 L1577.02 684.576 L1577.58 684.576 L1578.14 684.576 L1578.7 684.576 L1579.26 684.576 L1579.82 684.576 L1580.37 684.576 L1580.93 684.576 L1581.49 684.576 L1582.05 684.576 L1582.61 684.576 L1583.17 684.576 L1583.73 684.576 L1584.29 684.576 L1584.85 684.576 L1585.41 684.576 L1585.97 684.576 L1586.53 684.576 L1587.09 684.576 L1587.65 684.576 L1588.2 684.576 L1588.76 684.576 L1589.32 684.576 L1589.88 684.576 L1590.44 684.576 L1591 684.576 L1591.56 684.576 L1592.12 684.576 L1592.68 684.576 L1593.24 684.576 L1593.8 684.576 L1594.36 684.576 L1594.92 684.576 L1595.47 684.576 L1596.03 684.576 L1596.59 684.576 L1597.15 684.576 L1597.71 684.576 L1598.27 684.576 L1598.83 684.576 L1599.39 684.576 L1599.95 684.576 L1600.51 684.576 L1601.07 684.576 L1601.63 684.576 L1602.19 684.576 L1602.74 684.576 L1603.3 684.576 L1603.86 684.576 L1604.42 684.576 L1604.98 684.576 L1605.54 684.576 L1606.1 684.576 L1606.66 684.576 L1607.22 684.576 L1607.78 684.576 L1608.34 684.576 L1608.9 684.576 L1609.46 684.576 L1610.02 684.576 L1610.57 684.576 L1611.13 684.576 L1611.69 684.576 L1612.25 684.576 L1612.81 684.576 L1613.37 684.576 L1613.93 684.576 L1614.49 684.576 L1615.05 684.576 L1615.61 684.576 L1616.17 684.576 L1616.73 684.576 L1617.29 684.576 L1617.84 684.576 L1618.4 684.576 L1618.96 684.576 L1619.52 684.576 L1620.08 684.576 L1620.64 684.576 L1621.2 684.576 L1621.76 684.576 L1622.32 684.576 L1622.88 684.576 L1623.44 684.576 L1624 684.576 L1624.56 684.576 L1625.11 684.576 L1625.67 684.576 L1626.23 684.576 L1626.79 684.576 L1627.35 684.576 L1627.91 684.576 L1628.47 684.576 L1629.03 684.576 L1629.59 684.576 L1630.15 684.576 L1630.71 684.576 L1631.27 684.576 L1631.83 684.576 L1632.39 684.576 L1632.94 684.576 L1633.5 684.576 L1634.06 684.576 L1634.62 684.576 L1635.18 684.576 L1635.74 684.576 L1636.3 684.576 L1636.86 684.576 L1637.42 684.576 L1637.98 684.576 L1638.54 684.576 L1639.1 684.576 L1639.66 684.576 L1640.21 684.576 L1640.77 684.576 L1641.33 684.576 L1641.89 684.576 L1642.45 684.576 L1643.01 684.576 L1643.57 684.576 L1644.13 684.576 L1644.69 684.576 L1645.25 684.576 L1645.81 684.576 L1646.37 684.576 L1646.93 684.576 L1647.48 684.576 L1648.04 684.576 L1648.6 684.576 L1649.16 684.576 L1649.72 684.576 L1650.28 684.576 L1650.84 684.576 L1651.4 684.576 L1651.96 684.576 L1652.52 684.576 L1653.08 684.576 L1653.64 684.576 L1654.2 684.576 L1654.76 684.576 L1655.31 684.576 L1655.87 684.576 L1656.43 684.576 L1656.99 684.576 L1657.55 684.576 L1658.11 684.576 L1658.67 684.576 L1659.23 684.576 L1659.79 684.576 L1660.35 684.576 L1660.91 684.576 L1661.47 684.576 L1662.03 684.576 L1662.58 684.576 L1663.14 684.576 L1663.7 684.576 L1664.26 684.576 L1664.82 684.576 L1665.38 684.576 L1665.94 684.576 L1666.5 684.576 L1667.06 684.576 L1667.62 684.576 L1668.18 684.576 L1668.74 684.576 L1669.3 684.576 L1669.85 684.576 L1670.41 684.576 L1670.97 684.576 L1671.53 684.576 L1672.09 684.576 L1672.65 684.576 L1673.21 684.576 L1673.77 684.576 L1674.33 684.576 L1674.89 684.576 L1675.45 684.576 L1676.01 684.576 L1676.57 684.576 L1677.13 684.576 L1677.68 684.576 L1678.24 684.576 L1678.8 684.576 L1679.36 684.576 L1679.92 684.576 L1680.48 684.576 L1681.04 684.576 L1681.6 684.576 L1682.16 684.576 L1682.72 684.576 L1683.28 684.576 L1683.84 684.576 L1684.4 684.576 L1684.95 684.576 L1685.51 684.576 L1686.07 684.576 L1686.63 684.576 L1687.19 684.576 L1687.75 684.576 L1688.31 684.576 L1688.87 684.576 L1689.43 684.576 L1689.99 684.576 L1690.55 684.576 L1691.11 684.576 L1691.67 684.576 L1692.23 684.576 L1692.78 684.576 L1693.34 684.576 L1693.9 684.576 L1694.46 684.576 L1695.02 684.576 L1695.58 684.576 L1696.14 684.576 L1696.7 684.576 L1697.26 684.576 L1697.82 684.576 L1698.38 684.576 L1698.94 684.576 L1699.5 684.576 L1700.05 684.576 L1700.61 684.576 L1701.17 684.576 L1701.73 684.576 L1702.29 684.576 L1702.85 684.576 L1703.41 684.576 L1703.97 684.576 L1704.53 684.576 L1705.09 684.576 L1705.65 684.576 L1706.21 684.576 L1706.77 684.576 L1707.32 684.576 L1707.88 684.576 L1708.44 684.576 L1709 684.576 L1709.56 684.576 L1710.12 684.576 L1710.68 684.576 L1711.24 684.576 L1711.8 684.576 L1712.36 684.576 L1712.92 684.576 L1713.48 684.576 L1714.04 684.576 L1714.6 684.576 L1715.15 684.576 L1715.71 684.576 L1716.27 684.576 L1716.83 684.576 L1717.39 684.576 L1717.95 684.576 L1718.51 684.576 L1719.07 684.576 L1719.63 684.576 L1720.19 684.576 L1720.75 684.576 L1721.31 684.576 L1721.87 684.576 L1722.42 684.576 L1722.98 684.576 L1723.54 684.576 L1724.1 684.576 L1724.66 684.576 L1725.22 684.576 L1725.78 684.576 L1726.34 684.576 L1726.9 684.576 L1727.46 684.576 L1728.02 684.576 L1728.58 684.576 L1729.14 684.576 L1729.69 684.576 L1730.25 684.576 L1730.81 684.576 L1731.37 684.576 L1731.93 684.576 L1732.49 684.576 L1733.05 684.576 L1733.61 684.576 L1734.17 684.576 L1734.73 684.576 L1735.29 684.576 L1735.85 684.576 L1736.41 684.576 L1736.97 684.576 L1737.52 684.576 L1738.08 684.576 L1738.64 684.576 L1739.2 684.576 L1739.76 684.576 L1740.32 684.576 L1740.88 684.576 L1741.44 684.576 L1742 684.576 L1742.56 684.576 L1743.12 684.576 L1743.68 684.576 L1744.24 684.576 L1744.79 684.576 L1745.35 684.576 L1745.91 684.576 L1746.47 684.576 L1747.03 684.576 L1747.59 684.576 L1748.15 684.576 L1748.71 684.576 L1749.27 684.576 L1749.83 684.576 L1750.39 684.576 L1750.95 684.576 L1751.51 684.576 L1752.06 684.576 L1752.62 684.576 L1753.18 684.576 L1753.74 684.576 L1754.3 684.576 L1754.86 684.576 L1755.42 684.576 L1755.98 684.576 L1756.54 684.576 L1757.1 684.576 L1757.66 684.576 L1758.22 684.576 L1758.78 684.576 L1759.34 684.576 L1759.89 684.576 L1760.45 684.576 L1761.01 684.576 L1761.57 684.576 L1762.13 684.576 L1762.69 684.576 L1763.25 684.576 L1763.81 684.576 L1764.37 684.576 L1764.93 684.576 L1765.49 684.576 L1766.05 684.576 L1766.61 684.576 L1767.16 684.576 L1767.72 684.576 L1768.28 684.576 L1768.84 684.576 L1769.4 684.576 L1769.96 684.576 L1770.52 684.576 L1771.08 684.576 L1771.64 684.576 L1772.2 684.576 L1772.76 684.576 L1773.32 684.576 L1773.88 684.576 L1774.43 684.576 L1774.99 684.576 L1775.55 684.576 L1776.11 684.576 L1776.67 684.576 L1777.23 684.576 L1777.79 684.576 L1778.35 684.576 L1778.91 684.576 L1779.47 684.576 L1780.03 684.576 L1780.59 684.576 L1781.15 684.576 L1781.71 684.576 L1782.26 684.576 L1782.82 684.576 L1783.38 684.576 L1783.94 684.576 L1784.5 684.576 L1785.06 684.576 L1785.62 684.576 L1786.18 684.576 L1786.74 684.576 L1787.3 684.576 L1787.86 684.576 L1788.42 684.576 L1788.98 684.576 L1789.53 684.576 L1790.09 684.576 L1790.65 684.576 L1791.21 684.576 L1791.77 684.576 L1792.33 684.576 L1792.89 684.576 L1793.45 684.576 L1794.01 684.576 L1794.57 684.576 L1795.13 684.576 L1795.69 684.576 L1796.25 684.576 L1796.8 684.576 L1797.36 684.576 L1797.92 684.576 L1798.48 684.576 L1799.04 684.576 L1799.6 684.576 L1800.16 684.576 L1800.72 684.576 L1801.28 684.576 L1801.84 684.576 L1802.4 684.576 L1802.96 684.576 L1803.52 684.576 L1804.08 684.576 L1804.63 684.576 L1805.19 684.576 L1805.75 684.576 L1806.31 684.576 L1806.87 684.576 L1807.43 684.576 L1807.99 684.576 L1808.55 684.576 L1809.11 684.576 L1809.67 684.576 L1810.23 684.576 L1810.79 684.576 L1811.35 684.576 L1811.9 684.576 L1812.46 684.576 L1813.02 684.576 L1813.58 684.576 L1814.14 684.576 L1814.7 684.576 L1815.26 684.576 L1815.82 684.576 L1816.38 684.576 L1816.94 684.576 L1817.5 684.576 L1818.06 684.576 L1818.62 684.576 L1819.18 684.576 L1819.73 684.576 L1820.29 684.576 L1820.85 684.576 L1821.41 684.576 L1821.97 684.576 L1822.53 684.576 L1823.09 684.576 L1823.65 684.576 L1824.21 684.576 L1824.77 684.576 L1825.33 684.576 L1825.89 684.576 L1826.45 684.576 L1827 684.576 L1827.56 684.576 L1828.12 684.576 L1828.68 684.576 L1829.24 684.576 L1829.8 684.576 L1830.36 684.576 L1830.92 684.576 L1831.48 684.576 L1832.04 684.576 L1832.6 684.576 L1833.16 684.576 L1833.72 684.576 L1834.27 684.576 L1834.83 684.576 L1835.39 684.576 L1835.95 684.576 L1836.51 684.576 L1837.07 684.576 L1837.63 684.576 L1838.19 684.576 L1838.19 682.354 L1837.63 682.354 L1837.07 682.354 L1836.51 682.354 L1835.95 682.354 L1835.39 682.354 L1834.83 682.354 L1834.27 682.354 L1833.72 682.354 L1833.16 682.354 L1832.6 682.354 L1832.04 682.354 L1831.48 682.354 L1830.92 682.354 L1830.36 682.354 L1829.8 682.354 L1829.24 682.354 L1828.68 682.354 L1828.12 682.354 L1827.56 682.354 L1827 682.354 L1826.45 682.354 L1825.89 682.354 L1825.33 682.354 L1824.77 682.354 L1824.21 682.354 L1823.65 682.354 L1823.09 682.354 L1822.53 682.354 L1821.97 682.354 L1821.41 682.354 L1820.85 682.354 L1820.29 682.354 L1819.73 682.354 L1819.18 682.354 L1818.62 682.354 L1818.06 682.354 L1817.5 682.354 L1816.94 682.354 L1816.38 682.354 L1815.82 682.354 L1815.26 682.354 L1814.7 682.354 L1814.14 682.354 L1813.58 682.354 L1813.02 682.354 L1812.46 682.354 L1811.9 682.354 L1811.35 682.354 L1810.79 682.354 L1810.23 682.354 L1809.67 682.354 L1809.11 682.354 L1808.55 682.354 L1807.99 682.354 L1807.43 682.354 L1806.87 682.354 L1806.31 682.354 L1805.75 682.354 L1805.19 682.354 L1804.63 682.354 L1804.08 682.354 L1803.52 682.354 L1802.96 682.354 L1802.4 682.354 L1801.84 682.354 L1801.28 682.354 L1800.72 682.354 L1800.16 682.354 L1799.6 682.354 L1799.04 682.354 L1798.48 682.354 L1797.92 682.354 L1797.36 682.354 L1796.8 682.354 L1796.25 682.354 L1795.69 682.354 L1795.13 682.354 L1794.57 682.354 L1794.01 682.354 L1793.45 682.354 L1792.89 682.354 L1792.33 682.354 L1791.77 682.354 L1791.21 682.354 L1790.65 682.354 L1790.09 682.354 L1789.53 682.354 L1788.98 682.354 L1788.42 682.354 L1787.86 682.354 L1787.3 682.354 L1786.74 682.354 L1786.18 682.354 L1785.62 682.354 L1785.06 682.354 L1784.5 682.354 L1783.94 682.354 L1783.38 682.354 L1782.82 682.354 L1782.26 682.354 L1781.71 682.354 L1781.15 682.354 L1780.59 682.354 L1780.03 682.354 L1779.47 682.354 L1778.91 682.354 L1778.35 682.354 L1777.79 682.354 L1777.23 682.354 L1776.67 682.354 L1776.11 682.354 L1775.55 682.354 L1774.99 682.354 L1774.43 682.354 L1773.88 682.354 L1773.32 682.354 L1772.76 682.354 L1772.2 682.354 L1771.64 682.354 L1771.08 682.354 L1770.52 682.354 L1769.96 682.354 L1769.4 682.354 L1768.84 682.354 L1768.28 682.354 L1767.72 682.354 L1767.16 682.354 L1766.61 682.354 L1766.05 682.354 L1765.49 682.354 L1764.93 682.354 L1764.37 682.354 L1763.81 682.354 L1763.25 682.354 L1762.69 682.354 L1762.13 682.354 L1761.57 682.354 L1761.01 682.354 L1760.45 682.354 L1759.89 682.354 L1759.34 682.354 L1758.78 682.354 L1758.22 682.354 L1757.66 682.354 L1757.1 682.354 L1756.54 682.354 L1755.98 682.354 L1755.42 682.354 L1754.86 682.354 L1754.3 682.354 L1753.74 682.354 L1753.18 682.354 L1752.62 682.354 L1752.06 682.354 L1751.51 682.354 L1750.95 682.354 L1750.39 682.354 L1749.83 682.354 L1749.27 682.354 L1748.71 682.354 L1748.15 682.354 L1747.59 682.354 L1747.03 682.354 L1746.47 682.354 L1745.91 682.354 L1745.35 682.354 L1744.79 682.354 L1744.24 682.354 L1743.68 682.354 L1743.12 682.354 L1742.56 682.354 L1742 682.354 L1741.44 682.354 L1740.88 682.354 L1740.32 682.354 L1739.76 682.354 L1739.2 682.354 L1738.64 682.354 L1738.08 682.354 L1737.52 682.354 L1736.97 682.354 L1736.41 682.354 L1735.85 682.354 L1735.29 682.354 L1734.73 682.354 L1734.17 682.354 L1733.61 682.354 L1733.05 682.354 L1732.49 682.354 L1731.93 682.354 L1731.37 682.354 L1730.81 682.354 L1730.25 682.354 L1729.69 682.354 L1729.14 682.354 L1728.58 682.354 L1728.02 682.354 L1727.46 682.354 L1726.9 682.354 L1726.34 682.354 L1725.78 682.354 L1725.22 682.354 L1724.66 682.354 L1724.1 682.354 L1723.54 682.354 L1722.98 682.354 L1722.42 682.354 L1721.87 682.354 L1721.31 682.354 L1720.75 682.354 L1720.19 682.354 L1719.63 682.354 L1719.07 682.354 L1718.51 682.354 L1717.95 682.354 L1717.39 682.354 L1716.83 682.354 L1716.27 682.354 L1715.71 682.354 L1715.15 682.354 L1714.6 682.354 L1714.04 682.354 L1713.48 682.354 L1712.92 682.354 L1712.36 682.354 L1711.8 682.354 L1711.24 682.354 L1710.68 682.354 L1710.12 682.354 L1709.56 682.354 L1709 682.354 L1708.44 682.354 L1707.88 682.354 L1707.32 682.354 L1706.77 682.354 L1706.21 682.354 L1705.65 682.354 L1705.09 682.354 L1704.53 682.354 L1703.97 682.354 L1703.41 682.354 L1702.85 682.354 L1702.29 682.354 L1701.73 682.354 L1701.17 682.354 L1700.61 682.354 L1700.05 682.354 L1699.5 682.354 L1698.94 682.354 L1698.38 682.354 L1697.82 682.354 L1697.26 682.354 L1696.7 682.354 L1696.14 682.354 L1695.58 682.354 L1695.02 682.354 L1694.46 682.354 L1693.9 682.354 L1693.34 682.354 L1692.78 682.354 L1692.23 682.354 L1691.67 682.354 L1691.11 682.354 L1690.55 682.354 L1689.99 682.354 L1689.43 682.354 L1688.87 682.354 L1688.31 682.354 L1687.75 682.354 L1687.19 682.354 L1686.63 682.354 L1686.07 682.354 L1685.51 682.354 L1684.95 682.354 L1684.4 682.354 L1683.84 682.354 L1683.28 682.354 L1682.72 682.354 L1682.16 682.354 L1681.6 682.354 L1681.04 682.354 L1680.48 682.354 L1679.92 682.354 L1679.36 682.354 L1678.8 682.354 L1678.24 682.354 L1677.68 682.354 L1677.13 682.354 L1676.57 682.354 L1676.01 682.354 L1675.45 682.354 L1674.89 682.354 L1674.33 682.354 L1673.77 682.354 L1673.21 682.354 L1672.65 682.354 L1672.09 682.354 L1671.53 682.354 L1670.97 682.354 L1670.41 682.354 L1669.85 682.354 L1669.3 682.354 L1668.74 682.354 L1668.18 682.354 L1667.62 682.354 L1667.06 682.354 L1666.5 682.354 L1665.94 682.354 L1665.38 682.354 L1664.82 682.354 L1664.26 682.354 L1663.7 682.354 L1663.14 682.354 L1662.58 682.354 L1662.03 682.354 L1661.47 682.354 L1660.91 682.354 L1660.35 682.354 L1659.79 682.354 L1659.23 682.354 L1658.67 682.354 L1658.11 682.354 L1657.55 682.354 L1656.99 682.354 L1656.43 682.354 L1655.87 682.354 L1655.31 682.354 L1654.76 682.354 L1654.2 682.354 L1653.64 682.354 L1653.08 682.354 L1652.52 682.354 L1651.96 682.354 L1651.4 682.354 L1650.84 682.354 L1650.28 682.354 L1649.72 682.354 L1649.16 682.354 L1648.6 682.354 L1648.04 682.354 L1647.48 682.354 L1646.93 682.354 L1646.37 682.354 L1645.81 682.354 L1645.25 682.354 L1644.69 682.354 L1644.13 682.354 L1643.57 682.354 L1643.01 682.354 L1642.45 682.354 L1641.89 682.354 L1641.33 682.354 L1640.77 682.354 L1640.21 682.354 L1639.66 682.354 L1639.1 682.354 L1638.54 682.354 L1637.98 682.354 L1637.42 682.354 L1636.86 682.354 L1636.3 682.354 L1635.74 682.354 L1635.18 682.354 L1634.62 682.354 L1634.06 682.354 L1633.5 682.354 L1632.94 682.354 L1632.39 682.354 L1631.83 682.354 L1631.27 682.354 L1630.71 682.354 L1630.15 682.354 L1629.59 682.354 L1629.03 682.354 L1628.47 682.354 L1627.91 682.354 L1627.35 682.354 L1626.79 682.354 L1626.23 682.354 L1625.67 682.354 L1625.11 682.354 L1624.56 682.354 L1624 682.354 L1623.44 682.354 L1622.88 682.354 L1622.32 682.354 L1621.76 682.354 L1621.2 682.354 L1620.64 682.354 L1620.08 682.354 L1619.52 682.354 L1618.96 682.354 L1618.4 682.354 L1617.84 682.354 L1617.29 682.354 L1616.73 682.354 L1616.17 682.354 L1615.61 682.354 L1615.05 682.354 L1614.49 682.354 L1613.93 682.354 L1613.37 682.354 L1612.81 682.354 L1612.25 682.354 L1611.69 682.354 L1611.13 682.354 L1610.57 682.354 L1610.02 682.354 L1609.46 682.354 L1608.9 682.354 L1608.34 682.354 L1607.78 682.354 L1607.22 682.354 L1606.66 682.354 L1606.1 682.354 L1605.54 682.354 L1604.98 682.354 L1604.42 682.354 L1603.86 682.354 L1603.3 682.354 L1602.74 682.354 L1602.19 682.354 L1601.63 682.354 L1601.07 682.354 L1600.51 682.354 L1599.95 682.354 L1599.39 682.354 L1598.83 682.354 L1598.27 682.354 L1597.71 682.354 L1597.15 682.354 L1596.59 682.354 L1596.03 682.354 L1595.47 682.354 L1594.92 682.354 L1594.36 682.354 L1593.8 682.354 L1593.24 682.354 L1592.68 682.354 L1592.12 682.354 L1591.56 682.354 L1591 682.354 L1590.44 682.354 L1589.88 682.354 L1589.32 682.354 L1588.76 682.354 L1588.2 682.354 L1587.65 682.354 L1587.09 682.354 L1586.53 682.354 L1585.97 682.354 L1585.41 682.354 L1584.85 682.354 L1584.29 682.354 L1583.73 682.354 L1583.17 682.354 L1582.61 682.354 L1582.05 682.354 L1581.49 682.354 L1580.93 682.354 L1580.37 682.354 L1579.82 682.354 L1579.26 682.354 L1578.7 682.354 L1578.14 682.354 L1577.58 682.354 L1577.02 682.354 L1576.46 682.354 L1575.9 682.354 L1575.34 682.354 L1574.78 682.354 L1574.22 682.354 L1573.66 682.354 L1573.1 682.354 L1572.55 682.354 L1571.99 682.354 L1571.43 682.354 L1570.87 682.354 L1570.31 682.354 L1569.75 682.354 L1569.19 682.354 L1568.63 682.354 L1568.07 682.354 L1567.51 682.354 L1566.95 682.354 L1566.39 682.354 L1565.83 682.354 L1565.28 682.354 L1564.72 682.354 L1564.16 682.354 L1563.6 682.354 L1563.04 682.354 L1562.48 682.354 L1561.92 682.354 L1561.36 682.354 L1560.8 682.354 L1560.24 682.354 L1559.68 682.354 L1559.12 682.354 L1558.56 682.354 L1558 682.354 L1557.45 682.354 L1556.89 682.354 L1556.33 682.354 L1555.77 682.354 L1555.21 682.354 L1554.65 682.354 L1554.09 682.354 L1553.53 682.354 L1552.97 682.354 L1552.41 682.354 L1551.85 682.354 L1551.29 682.354 L1550.73 682.354 L1550.18 682.354 L1549.62 682.354 L1549.06 682.354 L1548.5 682.354 L1547.94 682.354 L1547.38 682.354 L1546.82 682.354 L1546.26 682.354 L1545.7 682.354 L1545.14 682.354 L1544.58 682.354 L1544.02 682.354 L1543.46 682.354 L1542.9 682.354 L1542.35 682.354 L1541.79 682.354 L1541.23 682.354 L1540.67 682.354 L1540.11 682.354 L1539.55 682.354 L1538.99 682.354 L1538.43 682.354 L1537.87 682.354 L1537.31 682.354 L1536.75 682.354 L1536.19 682.354 L1535.63 682.354 L1535.08 682.354 L1534.52 682.354 L1533.96 682.354 L1533.4 682.354 L1532.84 682.354 L1532.28 682.354 L1531.72 682.354 L1531.16 682.354 L1530.6 682.354 L1530.04 682.354 L1529.48 682.354 L1528.92 682.354 L1528.36 682.354 L1527.81 682.354 L1527.25 682.354 L1526.69 682.354 L1526.13 682.354 L1525.57 682.354 L1525.01 682.354 L1524.45 682.354 L1523.89 682.354 L1523.33 682.354 L1522.77 682.354 L1522.21 682.354 L1521.65 682.354 L1521.09 682.354 L1520.53 682.354 L1519.98 682.354 L1519.42 682.354 L1518.86 682.354 L1518.3 682.354 L1517.74 682.354 L1517.18 682.354 L1516.62 682.354 L1516.06 682.354 L1515.5 682.354 L1514.94 682.354 L1514.38 682.354 L1513.82 682.354 L1513.26 682.354 L1512.71 682.354 L1512.15 682.354 L1511.59 682.354 L1511.03 682.354 L1510.47 682.354 L1509.91 682.354 L1509.35 682.354 L1508.79 682.354 L1508.23 682.354 L1507.67 682.354 L1507.11 682.354 L1506.55 682.354 L1505.99 682.354 L1505.44 682.354 L1504.88 682.354 L1504.32 682.354 L1503.76 682.354 L1503.2 682.354 L1502.64 682.354 L1502.08 682.354 L1501.52 682.354 L1500.96 682.354 L1500.4 682.354 L1499.84 682.354 L1499.28 682.354 L1498.72 682.354 L1498.16 682.354 L1497.61 682.354 L1497.05 682.354 L1496.49 682.354 L1495.93 682.354 L1495.37 682.354 L1494.81 682.354 L1494.25 682.354 L1493.69 682.354 L1493.13 682.354 L1492.57 682.354 L1492.01 682.354 L1491.45 682.354 L1490.89 682.354 L1490.34 682.354 L1489.78 682.354 L1489.22 682.354 L1488.66 682.354 L1488.1 682.354 L1487.54 682.354 L1486.98 682.354 L1486.42 682.354 L1485.86 682.354 L1485.3 682.354 L1484.74 682.354 L1484.18 682.354 L1483.62 682.354 L1483.07 682.354 L1482.51 682.354 L1481.95 682.354 L1481.39 682.354 L1480.83 682.354 L1480.27 682.354 L1479.71 682.354 L1479.15 682.354 L1478.59 682.354 L1478.03 682.354 L1477.47 682.354 L1476.91 682.354 L1476.35 682.354 L1475.79 682.354 L1475.24 682.354 L1474.68 682.354 L1474.12 682.354 L1473.56 682.354 L1473 682.354 L1472.44 682.354 L1471.88 682.354 L1471.32 682.354 L1470.76 682.354 L1470.2 682.354 L1469.64 682.354 L1469.08 682.354 L1468.52 682.354 L1467.97 682.354 L1467.41 682.354 L1466.85 682.354 L1466.29 682.354 L1465.73 682.354 L1465.17 682.354 L1464.61 682.354 L1464.05 682.354 L1463.49 682.354 L1462.93 682.354 L1462.37 682.354 L1461.81 682.354 L1461.25 682.354 L1460.7 682.354 L1460.14 682.354 L1459.58 682.354 L1459.02 682.354 L1458.46 682.354 L1457.9 682.354 L1457.34 682.354 L1456.78 682.354 L1456.22 682.354 L1455.66 682.354 L1455.1 682.354 L1454.54 682.354 L1453.98 682.354 L1453.42 682.354 L1452.87 682.354 L1452.31 682.354 L1451.75 682.354 L1451.19 682.354 L1450.63 682.354 L1450.07 682.354 L1449.51 682.354 L1448.95 682.354 L1448.39 682.354 L1447.83 682.354 L1447.27 682.354 L1446.71 682.354 L1446.15 682.354 L1445.6 682.354 L1445.04 682.354 L1444.48 682.354 L1443.92 682.354 L1443.36 682.354 L1442.8 682.354 L1442.24 682.354 L1441.68 682.354 L1441.12 682.354 L1440.56 682.354 L1440 682.354 L1439.44 682.354 L1438.88 682.354 L1438.33 682.354 L1437.77 682.354 L1437.21 682.354 L1436.65 682.354 L1436.09 682.354 L1435.53 682.354 L1434.97 682.354 L1434.41 682.354 L1433.85 682.354 L1433.29 682.354 L1432.73 682.354 L1432.17 682.354 L1431.61 682.354 L1431.05 682.354 L1430.5 682.354 L1429.94 682.354 L1429.38 682.354 L1428.82 682.354 L1428.26 682.354 L1427.7 682.354 L1427.14 682.354 L1426.58 682.354 L1426.02 682.354 L1425.46 682.354 L1424.9 682.354 L1424.34 682.354 L1423.78 682.354 L1423.23 682.354 L1422.67 682.354 L1422.11 682.354 L1421.55 682.354 L1420.99 682.354 L1420.43 682.354 L1419.87 682.354 L1419.31 682.354 L1418.75 682.354 L1418.19 682.354 L1417.63 682.354 L1417.07 682.354 L1416.51 682.354 L1415.95 682.354 L1415.4 682.354 L1414.84 682.354 L1414.28 682.354 L1413.72 682.354 L1413.16 682.354 L1412.6 682.354 L1412.04 682.354 L1411.48 682.354 L1410.92 682.354 L1410.36 682.354 L1409.8 682.354 L1409.24 682.354 L1408.68 682.354 L1408.13 682.354 L1407.57 682.354 L1407.01 682.354 L1406.45 682.354 L1405.89 682.354 L1405.33 682.354 L1404.77 682.354 L1404.21 682.354 L1403.65 682.354 L1403.09 682.354 L1402.53 682.354 L1401.97 682.354 L1401.41 682.354 L1400.86 682.354 L1400.3 682.354 L1399.74 682.354 L1399.18 682.354 L1398.62 682.354 L1398.06 682.354 L1397.5 682.354 L1396.94 682.354 L1396.38 682.354 L1395.82 682.354 L1395.26 682.354 L1394.7 682.354 L1394.14 682.354 L1393.58 682.354 L1393.03 682.354 L1392.47 682.354 L1391.91 682.354 L1391.35 682.354 L1390.79 682.354 L1390.23 682.354 L1389.67 682.354 L1389.11 682.354 L1388.55 682.354 L1387.99 682.354 L1387.43 682.354 L1386.87 682.354 L1386.31 682.354 L1385.76 682.354 L1385.2 682.354 L1384.64 682.354 L1384.08 682.354 L1383.52 682.354 L1382.96 682.354 L1382.4 682.354 L1381.84 682.354 L1381.28 682.354 L1380.72 682.354 L1380.16 682.354 L1379.6 682.354 L1379.04 682.354 L1378.49 682.354 L1377.93 682.354 L1377.37 682.354 L1376.81 682.354 L1376.25 682.354 L1375.69 682.354 L1375.13 682.354 L1374.57 682.354 L1374.01 682.354 L1373.45 682.354 L1372.89 682.354 L1372.33 682.354 L1371.77 682.354 L1371.21 682.354 L1370.66 682.354 L1370.1 682.354 L1369.54 682.354 L1368.98 682.354 L1368.42 682.354 L1367.86 682.354 L1367.3 682.354 L1366.74 682.354 L1366.18 682.354 L1365.62 682.354 L1365.06 682.354 L1364.5 682.354 L1363.94 682.354 L1363.39 682.354 L1362.83 682.354 L1362.27 682.354 L1361.71 682.354 L1361.15 682.354 L1360.59 682.354 L1360.03 682.354 L1359.47 682.354 L1358.91 682.354 L1358.35 682.354 L1357.79 682.354 L1357.23 682.354 L1356.67 682.354 L1356.12 682.354 L1355.56 682.354 L1355 682.354 L1354.44 682.354 L1353.88 682.354 L1353.32 682.354 L1352.76 682.354 L1352.2 682.354 L1351.64 682.354 L1351.08 682.354 L1350.52 682.354 L1349.96 682.354 L1349.4 682.354 L1348.84 682.354 L1348.29 682.354 L1347.73 682.354 L1347.17 682.354 L1346.61 682.354 L1346.05 682.354 L1345.49 682.354 L1344.93 682.354 L1344.37 682.354 L1343.81 682.354 L1343.25 682.354 L1342.69 682.354 L1342.13 682.354 L1341.57 682.354 L1341.02 682.354 L1340.46 682.354 L1339.9 682.354 L1339.34 682.354 L1338.78 682.354 L1338.22 682.354 L1337.66 682.354 L1337.1 682.354 L1336.54 682.354 L1335.98 682.354 L1335.42 682.354 L1334.86 682.354 L1334.3 682.354 L1333.75 682.354 L1333.19 682.354 L1332.63 682.354 L1332.07 682.354 L1331.51 682.354 L1330.95 682.354 L1330.39 682.354 L1329.83 682.354 L1329.27 682.354 L1328.71 682.354 L1328.15 682.354 L1327.59 682.354 L1327.03 682.354 L1326.47 682.354 L1325.92 682.354 L1325.36 682.354 L1324.8 682.354 L1324.24 682.354 L1323.68 682.354 L1323.12 682.354 L1322.56 682.354 L1322 682.354 L1321.44 682.354 L1320.88 682.354 L1320.32 682.354 L1319.76 682.354 L1319.2 682.354 L1318.65 682.354 L1318.09 682.354 L1317.53 682.354 L1316.97 682.354 L1316.41 682.354 L1315.85 682.354 L1315.29 682.354 L1314.73 682.354 L1314.17 682.354 L1313.61 682.354 L1313.05 682.354 L1312.49 682.354 L1311.93 682.354 L1311.38 682.354 L1310.82 682.354 L1310.26 682.354 L1309.7 682.354 L1309.14 682.354 L1308.58 682.354 L1308.02 682.354 L1307.46 682.354 L1306.9 682.354 L1306.34 682.354 L1305.78 682.354 L1305.22 682.354 L1304.66 682.354 L1304.1 682.354 L1303.55 682.354 L1302.99 682.354 L1302.43 682.354 L1301.87 682.354 L1301.31 682.354 L1300.75 682.354 L1300.19 682.354 L1299.63 682.354 L1299.07 682.354 L1298.51 682.354 L1297.95 682.354 L1297.39 682.354 L1296.83 682.354 L1296.28 682.354 L1295.72 682.354 L1295.16 682.354 L1294.6 682.354 L1294.04 682.354 L1293.48 682.354 L1292.92 682.354 L1292.36 682.354 L1291.8 682.354 L1291.24 682.354 L1290.68 682.354 L1290.12 682.354 L1289.56 682.354 L1289 682.354 L1288.45 682.354 L1287.89 682.354 L1287.33 682.354 L1286.77 682.354 L1286.21 682.354 L1285.65 682.354 L1285.09 682.354 L1284.53 682.354 L1283.97 682.354 L1283.41 682.354 L1282.85 682.354 L1282.29 682.354 L1281.73 682.354 L1281.18 682.354 L1280.62 682.354 L1280.06 682.354 L1279.5 682.354 L1278.94 682.354 L1278.38 682.354 L1277.82 682.354 L1277.26 682.354 L1276.7 682.354 L1276.14 682.354 L1275.58 682.354 L1275.02 682.354 L1274.46 682.354 L1273.91 682.354 L1273.35 682.354 L1272.79 682.354 L1272.23 682.354 L1271.67 682.354 L1271.11 682.354 L1270.55 682.354 L1269.99 682.354 L1269.43 682.354 L1268.87 682.354 L1268.31 682.354 L1267.75 682.354 L1267.19 682.354 L1266.63 682.354 L1266.08 682.354 L1265.52 682.354 L1264.96 682.354 L1264.4 682.354 L1263.84 682.354 L1263.28 682.354 L1262.72 682.354 L1262.16 682.354 L1261.6 682.354 L1261.04 682.354 L1260.48 682.354 L1259.92 682.354 L1259.36 682.354 L1258.81 682.354 L1258.25 682.354 L1257.69 682.354 L1257.13 682.354 L1256.57 682.354 L1256.01 682.354 L1255.45 682.354 L1254.89 682.354 L1254.33 682.354 L1253.77 682.354 L1253.21 682.354 L1252.65 682.354 L1252.09 682.354 L1251.54 682.354 L1250.98 682.354 L1250.42 682.354 L1249.86 682.354 L1249.3 682.354 L1248.74 682.354 L1248.18 682.354 L1247.62 682.354 L1247.06 682.354 L1246.5 682.354 L1245.94 682.354 L1245.38 682.354 L1244.82 682.354 L1244.26 682.354 L1243.71 682.354 L1243.15 682.354 L1242.59 682.354 L1242.03 682.354 L1241.47 682.354 L1240.91 682.354 L1240.35 682.354 L1239.79 682.354 L1239.23 682.354 L1238.67 682.354 L1238.11 682.354 L1237.55 682.354 L1236.99 682.354 L1236.44 682.354 L1235.88 682.354 L1235.32 682.354 L1234.76 682.354 L1234.2 682.354 L1233.64 682.354 L1233.08 682.354 L1232.52 682.354 L1231.96 682.354 L1231.4 682.354 L1230.84 682.354 L1230.28 682.354 L1229.72 682.354 L1229.17 682.354 L1228.61 682.354 L1228.05 682.354 L1227.49 682.354 L1226.93 682.354 L1226.37 682.354 L1225.81 682.354 L1225.25 682.354 L1224.69 682.354 L1224.13 682.354 L1223.57 682.354 L1223.01 682.354 L1222.45 682.354 L1221.89 682.354 L1221.34 682.354 L1220.78 682.354 L1220.22 682.354 L1219.66 682.354 L1219.1 682.354 L1218.54 682.354 L1217.98 682.354 L1217.42 682.354 L1216.86 682.354 L1216.3 682.354 L1215.74 682.354 L1215.18 682.354 L1214.62 682.354 L1214.07 682.354 L1213.51 682.354 L1212.95 682.354 L1212.39 682.354 L1211.83 682.354 L1211.27 682.354 L1210.71 682.354 L1210.15 682.354 L1209.59 682.354 L1209.03 682.354 L1208.47 682.354 L1207.91 682.354 L1207.35 682.354 L1206.8 682.354 L1206.24 682.354 L1205.68 682.354 L1205.12 682.354 L1204.56 682.354 L1204 682.354 L1203.44 682.354 L1202.88 682.354 L1202.32 682.354 L1201.76 682.354 L1201.2 682.354 L1200.64 682.354 L1200.08 682.354 L1199.52 682.354 L1198.97 682.354 L1198.41 682.354 L1197.85 682.354 L1197.29 682.354 L1196.73 682.354 L1196.17 682.354 L1195.61 682.354 L1195.05 682.354 L1194.49 682.354 L1193.93 682.354 L1193.37 682.354 L1192.81 682.354 L1192.25 682.354 L1191.7 682.354 L1191.14 682.354 L1190.58 682.354 L1190.02 682.354 L1189.46 682.354 L1188.9 682.354 L1188.34 682.354 L1187.78 682.354 L1187.22 682.354 L1186.66 682.354 L1186.1 682.354 L1185.54 682.354 L1184.98 682.354 L1184.43 682.354 L1183.87 682.354 L1183.31 682.354 L1182.75 682.354 L1182.19 682.354 L1181.63 682.354 L1181.07 682.354 L1180.51 682.354 L1179.95 682.354 L1179.39 682.354 L1178.83 682.354 L1178.27 682.354 L1177.71 682.354 L1177.15 682.354 L1176.6 682.354 L1176.04 682.354 L1175.48 682.354 L1174.92 682.354 L1174.36 682.354 L1173.8 682.354 L1173.24 682.354 L1172.68 682.354 L1172.12 682.354 L1171.56 682.354 L1171 682.354 L1170.44 682.354 L1169.88 682.354 L1169.33 682.354 L1168.77 682.354 L1168.21 682.354 L1167.65 682.354 L1167.09 682.354 L1166.53 682.354 L1165.97 682.354 L1165.41 682.354 L1164.85 682.354 L1164.29 682.354 L1163.73 682.354 L1163.17 682.354 L1162.61 682.354 L1162.05 682.354 L1161.5 682.354 L1160.94 682.354 L1160.38 682.354 L1159.82 682.354 L1159.26 682.354 L1158.7 682.354 L1158.14 682.354 L1157.58 682.354 L1157.02 682.354 L1156.46 682.354 L1155.9 682.354 L1155.34 682.354 L1154.78 682.354 L1154.23 682.354 L1153.67 682.354 L1153.11 682.354 L1152.55 682.354 L1151.99 682.354 L1151.43 682.354 L1150.87 682.354 L1150.31 682.354 L1149.75 682.354 L1149.19 682.354 L1148.63 682.354 L1148.07 682.354 L1147.51 682.354 L1146.96 682.354 L1146.4 682.354 L1145.84 682.354 L1145.28 682.354 L1144.72 682.354 L1144.16 682.354 L1143.6 682.354 L1143.04 682.354 L1142.48 682.354 L1141.92 682.354 L1141.36 682.354 L1140.8 682.354 L1140.24 682.354 L1139.68 682.354 L1139.13 682.354 L1138.57 682.354 L1138.01 682.354 L1137.45 682.354 L1136.89 682.354 L1136.33 682.354 L1135.77 682.354 L1135.21 682.354 L1134.65 682.354 L1134.09 682.354 L1133.53 682.354 L1132.97 682.354 L1132.41 682.354 L1131.86 682.354 L1131.3 682.354 L1130.74 682.354 L1130.18 682.354 L1129.62 682.354 L1129.06 682.354 L1128.5 682.354 L1127.94 682.354 L1127.38 682.354 L1126.82 682.354 L1126.26 682.354 L1125.7 682.354 L1125.14 682.354 L1124.59 682.354 L1124.03 682.354 L1123.47 682.354 L1122.91 682.354 L1122.35 682.354 L1121.79 682.354 L1121.23 682.354 L1120.67 682.354 L1120.11 682.354 L1119.55 682.354 L1118.99 682.354 L1118.43 682.354 L1117.87 682.354 L1117.31 682.354 L1116.76 682.354 L1116.2 682.354 L1115.64 682.354 L1115.08 682.354 L1114.52 682.354 L1113.96 682.354 L1113.4 682.354 L1112.84 682.354 L1112.28 682.354 L1111.72 682.354 L1111.16 682.354 L1110.6 682.354 L1110.04 682.354 L1109.49 682.354 L1108.93 682.354 L1108.37 682.354 L1107.81 682.354 L1107.25 682.354 L1106.69 682.354 L1106.13 682.354 L1105.57 682.354 L1105.01 682.354 L1104.45 682.354 L1103.89 682.354 L1103.33 682.354 L1102.77 682.354 L1102.22 682.354 L1101.66 682.354 L1101.1 682.354 L1100.54 682.354 L1099.98 682.354 L1099.42 682.354 L1098.86 682.354 L1098.3 682.354 L1097.74 682.354 L1097.18 682.354 L1096.62 682.354 L1096.06 682.354 L1095.5 682.354 L1094.94 682.354 L1094.39 682.354 L1093.83 682.354 L1093.27 682.354 L1092.71 682.354 L1092.15 682.354 L1091.59 682.354 L1091.03 682.354 L1090.47 682.354 L1089.91 682.354 L1089.35 682.354 L1088.79 682.354 L1088.23 682.354 L1087.67 682.354 L1087.12 682.354 L1086.56 682.354 L1086 682.354 L1085.44 682.354 L1084.88 682.354 L1084.32 682.354 L1083.76 682.354 L1083.2 682.354 L1082.64 682.354 L1082.08 682.354 L1081.52 682.354 L1080.96 682.354 L1080.4 682.354 L1079.85 682.354 L1079.29 682.354 L1078.73 682.354 L1078.17 682.354 L1077.61 682.354 L1077.05 682.354 L1076.49 682.354 L1075.93 682.354 L1075.37 682.354 L1074.81 682.354 L1074.25 682.354 L1073.69 682.354 L1073.13 682.354 L1072.57 682.354 L1072.02 682.354 L1071.46 682.354 L1070.9 682.354 L1070.34 682.354 L1069.78 682.354 L1069.22 682.354 L1068.66 682.354 L1068.1 682.354 L1067.54 682.354 L1066.98 682.354 L1066.42 682.354 L1065.86 682.354 L1065.3 682.354 L1064.75 682.354 L1064.19 682.354 L1063.63 682.354 L1063.07 682.354 L1062.51 682.354 L1061.95 682.354 L1061.39 682.354 L1060.83 682.354 L1060.27 682.354 L1059.71 682.354 L1059.15 682.354 L1058.59 682.354 L1058.03 682.354 L1057.48 682.354 L1056.92 682.354 L1056.36 682.354 L1055.8 682.354 L1055.24 682.354 L1054.68 682.354 L1054.12 682.354 L1053.56 682.354 L1053 682.354 L1052.44 682.354 L1051.88 682.354 L1051.32 682.354 L1050.76 682.354 L1050.2 682.354 L1049.65 682.354 L1049.09 682.354 L1048.53 682.354 L1047.97 682.354 L1047.41 682.354 L1046.85 682.354 L1046.29 682.354 L1045.73 682.354 L1045.17 682.354 L1044.61 682.354 L1044.05 682.354 L1043.49 682.354 L1042.93 682.354 L1042.38 682.354 L1041.82 682.354 L1041.26 682.354 L1040.7 682.354 L1040.14 682.354 L1039.58 682.354 L1039.02 682.354 L1038.46 682.354 L1037.9 682.354 L1037.34 682.354 L1036.78 682.354 L1036.22 682.354 L1035.66 682.354 L1035.1 682.354 L1034.55 682.354 L1033.99 682.354 L1033.43 682.354 L1032.87 682.354 L1032.31 682.354 L1031.75 682.354 L1031.19 682.354 L1030.63 682.354 L1030.07 682.354 L1029.51 682.354 L1028.95 682.354 L1028.39 682.354 L1027.83 682.354 L1027.28 682.354 L1026.72 682.354 L1026.16 682.354 L1025.6 682.354 L1025.04 682.354 L1024.48 682.354 L1023.92 682.354 L1023.36 682.354 L1022.8 682.354 L1022.24 682.354 L1021.68 682.354 L1021.12 682.354 L1020.56 682.354 L1020.01 682.354 L1019.45 682.354 L1018.89 682.354 L1018.33 682.354 L1017.77 682.354 L1017.21 682.354 L1016.65 682.354 L1016.09 682.354 L1015.53 682.354 L1014.97 682.354 L1014.41 682.354 L1013.85 682.354 L1013.29 682.354 L1012.73 682.354 L1012.18 682.354 L1011.62 682.354 L1011.06 682.354 L1010.5 682.354 L1009.94 682.354 L1009.38 682.354 L1008.82 682.354 L1008.26 682.354 L1007.7 682.354 L1007.14 682.354 L1006.58 682.354 L1006.02 682.354 L1005.46 682.354 L1004.91 682.354 L1004.35 682.354 L1003.79 682.354 L1003.23 682.354 L1002.67 682.354 L1002.11 682.354 L1001.55 682.354 L1000.99 682.354 L1000.43 682.354 L999.872 682.354 L999.313 682.354 L998.754 682.354 L998.194 682.354 L997.635 682.354 L997.076 682.354 L996.517 682.354 L995.957 682.354 L995.398 682.354 L994.839 682.354 L994.28 682.354 L993.72 682.354 L993.161 682.354 L992.602 682.354 L992.043 682.354 L991.483 682.354 L990.924 682.354 L990.365 682.354 L989.806 682.354 L989.246 682.354 L988.687 682.354 L988.128 682.354 L987.569 682.354 L987.009 682.354 L986.45 682.354 L985.891 682.354 L985.332 682.354 L984.772 682.354 L984.213 682.354 L983.654 682.354 L983.095 682.354 L982.535 682.354 L981.976 682.354 L981.417 682.354 L980.858 682.354 L980.298 682.354 L979.739 682.354 L979.18 682.354 L978.621 682.354 L978.061 682.354 L977.502 682.354 L976.943 682.354 L976.384 682.354 L975.824 682.354 L975.265 682.354 L974.706 682.354 L974.147 682.354 L973.587 682.354 L973.028 682.354 L972.469 682.354 L971.91 682.354 L971.35 682.354 L970.791 682.354 L970.232 682.354 L969.673 682.354 L969.113 682.354 L968.554 682.354 L967.995 682.354 L967.436 682.354 L966.876 682.354 L966.317 682.354 L965.758 682.354 L965.199 682.354 L964.639 682.354 L964.08 682.354 L963.521 682.354 L962.962 682.354 L962.402 682.354 L961.843 682.354 L961.284 682.354 L960.725 682.354 L960.165 682.354 L959.606 682.354 L959.047 682.354 L958.488 682.354 L957.928 682.354 L957.369 682.354 L956.81 682.354 L956.251 682.354 L955.691 682.354 L955.132 682.354 L954.573 682.354 L954.014 682.354 L953.454 682.354 L952.895 682.354 L952.336 682.354 L951.777 682.354 L951.217 682.354 L950.658 682.354 L950.099 682.354 L949.54 682.354 L948.98 682.354 L948.421 682.354 L947.862 682.354 L947.303 682.354 L946.743 682.354 L946.184 682.354 L945.625 682.354 L945.066 682.354 L944.506 682.354 L943.947 682.354 L943.388 682.354 L942.829 682.354 L942.269 682.354 L941.71 682.354 L941.151 682.354 L940.592 682.354 L940.032 682.354 L939.473 682.354 L938.914 682.354 L938.355 682.354 L937.795 682.354 L937.236 682.354 L936.677 682.354 L936.118 682.354 L935.558 682.354 L934.999 682.354 L934.44 682.354 L933.881 682.354 L933.321 682.354 L932.762 682.354 L932.203 682.354 L931.644 682.354 L931.084 682.354 L930.525 682.354 L929.966 682.354 L929.406 682.354 L928.847 682.354 L928.288 682.354 L927.729 682.354 L927.169 682.354 L926.61 682.354 L926.051 682.354 L925.492 682.354 L924.932 682.354 L924.373 682.354 L923.814 682.354 L923.255 682.354 L922.695 682.354 L922.136 682.354 L921.577 682.354 L921.018 682.354 L920.458 682.354 L919.899 682.354 L919.34 682.354 L918.781 682.354 L918.221 682.354 L917.662 682.354 L917.103 682.354 L916.544 682.354 L915.984 682.354 L915.425 682.354 L914.866 682.354 L914.307 682.354 L913.747 682.354 L913.188 682.354 L912.629 682.354 L912.07 682.354 L911.51 682.354 L910.951 682.354 L910.392 682.354 L909.833 682.354 L909.273 682.354 L908.714 682.354 L908.155 682.354 L907.596 682.354 L907.036 682.354 L906.477 682.354 L905.918 682.354 L905.359 682.354 L904.799 682.354 L904.24 682.354 L903.681 682.354 L903.122 682.354 L902.562 682.354 L902.003 682.354 L901.444 682.354 L900.885 682.354 L900.325 682.354 L899.766 682.354 L899.207 682.354 L898.648 682.354 L898.088 682.354 L897.529 682.354 L896.97 682.354 L896.411 682.354 L895.851 682.354 L895.292 682.354 L894.733 682.354 L894.174 682.354 L893.614 682.354 L893.055 682.354 L892.496 682.354 L891.937 682.354 L891.377 682.354 L890.818 682.354 L890.259 682.354 L889.7 682.354 L889.14 682.354 L888.581 682.354 L888.022 682.354 L887.463 682.354 L886.903 682.354 L886.344 682.354 L885.785 682.354 L885.226 682.354 L884.666 682.354 L884.107 682.354 L883.548 682.354 L882.989 682.354 L882.429 682.354 L881.87 682.354 L881.311 682.354 L880.752 682.354 L880.192 682.354 L879.633 682.354 L879.074 682.354 L878.515 682.354 L877.955 682.354 L877.396 682.354 L876.837 682.354 L876.278 682.354 L875.718 682.354 L875.159 682.354 L874.6 682.354 L874.041 682.354 L873.481 682.354 L872.922 682.354 L872.363 682.354 L871.804 682.354 L871.244 682.354 L870.685 682.354 L870.126 682.354 L869.567 682.354 L869.007 682.354 L868.448 682.354 L867.889 682.354 L867.33 682.354 L866.77 682.354 L866.211 682.354 L865.652 682.354 L865.093 682.354 L864.533 682.354 L863.974 682.354 L863.415 682.354 L862.856 682.354 L862.296 682.354 L861.737 682.354 L861.178 682.354 L860.619 682.354 L860.059 682.354 L859.5 682.354 L858.941 682.354 L858.382 682.354 L857.822 682.354 L857.263 682.354 L856.704 682.354 L856.145 682.354 L855.585 682.354 L855.026 682.354 L854.467 682.354 L853.908 682.354 L853.348 682.354 L852.789 682.354 L852.23 682.354 L851.671 682.354 L851.111 682.354 L850.552 682.354 L849.993 682.354 L849.434 682.354 L848.874 682.354 L848.315 682.354 L847.756 682.354 L847.197 682.354 L846.637 682.354 L846.078 682.354 L845.519 682.354 L844.96 682.354 L844.4 682.354 L843.841 682.354 L843.282 682.354 L842.723 682.354 L842.163 682.354 L841.604 682.354 L841.045 682.354 L840.486 682.354 L839.926 682.354 L839.367 682.354 L838.808 682.354 L838.249 682.354 L837.689 682.354 L837.13 682.354 L836.571 682.354 L836.012 682.354 L835.452 682.354 L834.893 682.354 L834.334 682.354 L833.775 682.354 L833.215 682.354 L832.656 682.354 L832.097 682.354 L831.538 682.354 L830.978 682.354 L830.419 682.354 L829.86 682.354 L829.301 682.354 L828.741 682.354 L828.182 682.354 L827.623 682.354 L827.064 682.354 L826.504 682.354 L825.945 682.354 L825.386 682.354 L824.827 682.354 L824.267 682.354 L823.708 682.354 L823.149 682.354 L822.59 682.354 L822.03 682.354 L821.471 682.354 L820.912 682.354 L820.353 682.354 L819.793 682.354 L819.234 682.354 L818.675 682.354 L818.116 682.354 L817.556 682.354 L816.997 682.354 L816.438 682.354 L815.879 682.354 L815.319 682.354 L814.76 682.354 L814.201 682.354 L813.642 682.354 L813.082 682.354 L812.523 682.354 L811.964 682.354 L811.405 682.354 L810.845 682.354 L810.286 682.354 L809.727 682.354 L809.168 682.354 L808.608 682.354 L808.049 682.354 L807.49 682.354 L806.931 682.354 L806.371 682.354 L805.812 682.354 L805.253 682.354 L804.693 682.354 L804.134 682.354 L803.575 682.354 L803.016 682.354 L802.456 682.354 L801.897 682.354 L801.338 682.354 L800.779 682.354 L800.219 682.354 L799.66 682.354 L799.101 682.354 L798.542 682.354 L797.982 682.354 L797.423 682.354 L796.864 682.354 L796.305 682.354 L795.745 682.354 L795.186 682.354 L794.627 682.354 L794.068 682.354 L793.508 682.354 L792.949 682.354 L792.39 682.354 L791.831 682.354 L791.271 682.354 L790.712 682.354 L790.153 682.354 L789.594 682.354 L789.034 682.354 L788.475 682.354 L787.916 682.354 L787.357 682.354 L786.797 682.354 L786.238 682.354 L785.679 682.354 L785.12 682.354 L784.56 682.354 L784.001 682.354 L783.442 682.354 L782.883 682.354 L782.323 682.354 L781.764 682.354 L781.205 682.354 L780.646 682.354 L780.086 682.354 L779.527 682.354 L778.968 682.354 L778.409 682.354 L777.849 682.354 L777.29 682.354 L776.731 682.354 L776.172 682.354 L775.612 682.354 L775.053 682.354 L774.494 682.354 L773.935 682.354 L773.375 682.354 L772.816 682.354 L772.257 682.354 L771.698 682.354 L771.138 682.354 L770.579 682.354 L770.02 682.354 L769.461 682.354 L768.901 682.354 L768.342 682.354 L767.783 682.354 L767.224 682.354 L766.664 682.354 L766.105 682.354 L765.546 682.354 L764.987 682.354 L764.427 682.354 L763.868 682.354 L763.309 682.354 L762.75 682.354 L762.19 682.354 L761.631 682.354 L761.072 682.354 L760.513 682.354 L759.953 682.354 L759.394 682.354 L758.835 682.354 L758.276 682.354 L757.716 682.354 L757.157 682.354 L756.598 682.354 L756.039 682.354 L755.479 682.354 L754.92 682.354 L754.361 682.354 L753.802 682.354 L753.242 682.354 L752.683 682.354 L752.124 682.354 L751.565 682.354 L751.005 682.354 L750.446 682.354 L749.887 682.354 L749.328 682.354 L748.768 682.354 L748.209 682.354 L747.65 682.354 L747.091 682.354 L746.531 682.354 L745.972 682.354 L745.413 682.354 L744.854 682.354 L744.294 682.354 L743.735 682.354 L743.176 682.354 L742.617 682.354 L742.057 682.354 L741.498 682.354 L740.939 682.354 L740.38 682.354 L739.82 682.354 L739.261 682.354 L738.702 682.354 L738.143 682.354 L737.583 682.354 L737.024 682.354 L736.465 682.354 L735.906 682.354 L735.346 682.354 L734.787 682.354 L734.228 682.354 L733.669 682.354 L733.109 682.354 L732.55 682.354 L731.991 682.354 L731.432 682.354 L730.872 682.354 L730.313 682.354 L729.754 682.354 L729.195 682.354 L728.635 682.354 L728.076 682.354 L727.517 682.354 L726.958 682.354 L726.398 682.354 L725.839 682.354 L725.28 682.354 L724.721 682.354 L724.161 682.354 L723.602 682.354 L723.043 682.354 L722.484 682.354 L721.924 682.354 L721.365 682.354 L720.806 682.354 L720.247 682.354  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip483)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,683.443 720.806,683.443 721.365,683.443 721.924,683.443 722.484,683.443 723.043,683.443 723.602,683.443 724.161,683.443 724.721,683.443 725.28,683.443 725.839,683.443 726.398,683.443 726.958,683.443 727.517,683.443 728.076,683.443 728.635,683.443 729.195,683.443 729.754,683.443 730.313,683.443 730.872,683.443 731.432,683.443 731.991,683.443 732.55,683.443 733.109,683.443 733.669,683.443 734.228,683.443 734.787,683.443 735.346,683.443 735.906,683.443 736.465,683.443 737.024,683.443 737.583,683.443 738.143,683.443 738.702,683.443 739.261,683.443 739.82,683.443 740.38,683.443 740.939,683.443 741.498,683.443 742.057,683.443 742.617,683.443 743.176,683.443 743.735,683.443 744.294,683.443 744.854,683.443 745.413,683.443 745.972,683.443 746.531,683.443 747.091,683.443 747.65,683.443 748.209,683.443 748.768,683.443 749.328,683.443 749.887,683.443 750.446,683.443 751.005,683.443 751.565,683.443 752.124,683.443 752.683,683.443 753.242,683.443 753.802,683.443 754.361,683.443 754.92,683.443 755.479,683.443 756.039,683.443 756.598,683.443 757.157,683.443 757.716,683.443 758.276,683.443 758.835,683.443 759.394,683.443 759.953,683.443 760.513,683.443 761.072,683.443 761.631,683.443 762.19,683.443 762.75,683.443 763.309,683.443 763.868,683.443 764.427,683.443 764.987,683.443 765.546,683.443 766.105,683.443 766.664,683.443 767.224,683.443 767.783,683.443 768.342,683.443 768.901,683.443 769.461,683.443 770.02,683.443 770.579,683.443 771.138,683.443 771.698,683.443 772.257,683.443 772.816,683.443 773.375,683.443 773.935,683.443 774.494,683.443 775.053,683.443 775.612,683.443 776.172,683.443 776.731,683.443 777.29,683.443 777.849,683.443 778.409,683.443 778.968,683.443 779.527,683.443 780.086,683.443 780.646,683.443 781.205,683.443 781.764,683.443 782.323,683.443 782.883,683.443 783.442,683.443 784.001,683.443 784.56,683.443 785.12,683.443 785.679,683.443 786.238,683.443 786.797,683.443 787.357,683.443 787.916,683.443 788.475,683.443 789.034,683.443 789.594,683.443 790.153,683.443 790.712,683.443 791.271,683.443 791.831,683.443 792.39,683.443 792.949,683.443 793.508,683.443 794.068,683.443 794.627,683.443 795.186,683.443 795.745,683.443 796.305,683.443 796.864,683.443 797.423,683.443 797.982,683.443 798.542,683.443 799.101,683.443 799.66,683.443 800.219,683.443 800.779,683.443 801.338,683.443 801.897,683.443 802.456,683.443 803.016,683.443 803.575,683.443 804.134,683.443 804.693,683.443 805.253,683.443 805.812,683.443 806.371,683.443 806.931,683.443 807.49,683.443 808.049,683.443 808.608,683.443 809.168,683.443 809.727,683.443 810.286,683.443 810.845,683.443 811.405,683.443 811.964,683.443 812.523,683.443 813.082,683.443 813.642,683.443 814.201,683.443 814.76,683.443 815.319,683.443 815.879,683.443 816.438,683.443 816.997,683.443 817.556,683.443 818.116,683.443 818.675,683.443 819.234,683.443 819.793,683.443 820.353,683.443 820.912,683.443 821.471,683.443 822.03,683.443 822.59,683.443 823.149,683.443 823.708,683.443 824.267,683.443 824.827,683.443 825.386,683.443 825.945,683.443 826.504,683.443 827.064,683.443 827.623,683.443 828.182,683.443 828.741,683.443 829.301,683.443 829.86,683.443 830.419,683.443 830.978,683.443 831.538,683.443 832.097,683.443 832.656,683.443 833.215,683.443 833.775,683.443 834.334,683.443 834.893,683.443 835.452,683.443 836.012,683.443 836.571,683.443 837.13,683.443 837.689,683.443 838.249,683.443 838.808,683.443 839.367,683.443 839.926,683.443 840.486,683.443 841.045,683.443 841.604,683.443 842.163,683.443 842.723,683.443 843.282,683.443 843.841,683.443 844.4,683.443 844.96,683.443 845.519,683.443 846.078,683.443 846.637,683.443 847.197,683.443 847.756,683.443 848.315,683.443 848.874,683.443 849.434,683.443 849.993,683.443 850.552,683.443 851.111,683.443 851.671,683.443 852.23,683.443 852.789,683.443 853.348,683.443 853.908,683.443 854.467,683.443 855.026,683.443 855.585,683.443 856.145,683.443 856.704,683.443 857.263,683.443 857.822,683.443 858.382,683.443 858.941,683.443 859.5,683.443 860.059,683.443 860.619,683.443 861.178,683.443 861.737,683.443 862.296,683.443 862.856,683.443 863.415,683.443 863.974,683.443 864.533,683.443 865.093,683.443 865.652,683.443 866.211,683.443 866.77,683.443 867.33,683.443 867.889,683.443 868.448,683.443 869.007,683.443 869.567,683.443 870.126,683.443 870.685,683.443 871.244,683.443 871.804,683.443 872.363,683.443 872.922,683.443 873.481,683.443 874.041,683.443 874.6,683.443 875.159,683.443 875.718,683.443 876.278,683.443 876.837,683.443 877.396,683.443 877.955,683.443 878.515,683.443 879.074,683.443 879.633,683.443 880.192,683.443 880.752,683.443 881.311,683.443 881.87,683.443 882.429,683.443 882.989,683.443 883.548,683.443 884.107,683.443 884.666,683.443 885.226,683.443 885.785,683.443 886.344,683.443 886.903,683.443 887.463,683.443 888.022,683.443 888.581,683.443 889.14,683.443 889.7,683.443 890.259,683.443 890.818,683.443 891.377,683.443 891.937,683.443 892.496,683.443 893.055,683.443 893.614,683.443 894.174,683.443 894.733,683.443 895.292,683.443 895.851,683.443 896.411,683.443 896.97,683.443 897.529,683.443 898.088,683.443 898.648,683.443 899.207,683.443 899.766,683.443 900.325,683.443 900.885,683.443 901.444,683.443 902.003,683.443 902.562,683.443 903.122,683.443 903.681,683.443 904.24,683.443 904.799,683.443 905.359,683.443 905.918,683.443 906.477,683.443 907.036,683.443 907.596,683.443 908.155,683.443 908.714,683.443 909.273,683.443 909.833,683.443 910.392,683.443 910.951,683.443 911.51,683.443 912.07,683.443 912.629,683.443 913.188,683.443 913.747,683.443 914.307,683.443 914.866,683.443 915.425,683.443 915.984,683.443 916.544,683.443 917.103,683.443 917.662,683.443 918.221,683.443 918.781,683.443 919.34,683.443 919.899,683.443 920.458,683.443 921.018,683.443 921.577,683.443 922.136,683.443 922.695,683.443 923.255,683.443 923.814,683.443 924.373,683.443 924.932,683.443 925.492,683.443 926.051,683.443 926.61,683.443 927.169,683.443 927.729,683.443 928.288,683.443 928.847,683.443 929.406,683.443 929.966,683.443 930.525,683.443 931.084,683.443 931.644,683.443 932.203,683.443 932.762,683.443 933.321,683.443 933.881,683.443 934.44,683.443 934.999,683.443 935.558,683.443 936.118,683.443 936.677,683.443 937.236,683.443 937.795,683.443 938.355,683.443 938.914,683.443 939.473,683.443 940.032,683.443 940.592,683.443 941.151,683.443 941.71,683.443 942.269,683.443 942.829,683.443 943.388,683.443 943.947,683.443 944.506,683.443 945.066,683.443 945.625,683.443 946.184,683.443 946.743,683.443 947.303,683.443 947.862,683.443 948.421,683.443 948.98,683.443 949.54,683.443 950.099,683.443 950.658,683.443 951.217,683.443 951.777,683.443 952.336,683.443 952.895,683.443 953.454,683.443 954.014,683.443 954.573,683.443 955.132,683.443 955.691,683.443 956.251,683.443 956.81,683.443 957.369,683.443 957.928,683.443 958.488,683.443 959.047,683.443 959.606,683.443 960.165,683.443 960.725,683.443 961.284,683.443 961.843,683.443 962.402,683.443 962.962,683.443 963.521,683.443 964.08,683.443 964.639,683.443 965.199,683.443 965.758,683.443 966.317,683.443 966.876,683.443 967.436,683.443 967.995,683.443 968.554,683.443 969.113,683.443 969.673,683.443 970.232,683.443 970.791,683.443 971.35,683.443 971.91,683.443 972.469,683.443 973.028,683.443 973.587,683.443 974.147,683.443 974.706,683.443 975.265,683.443 975.824,683.443 976.384,683.443 976.943,683.443 977.502,683.443 978.061,683.443 978.621,683.443 979.18,683.443 979.739,683.443 980.298,683.443 980.858,683.443 981.417,683.443 981.976,683.443 982.535,683.443 983.095,683.443 983.654,683.443 984.213,683.443 984.772,683.443 985.332,683.443 985.891,683.443 986.45,683.443 987.009,683.443 987.569,683.443 988.128,683.443 988.687,683.443 989.246,683.443 989.806,683.443 990.365,683.443 990.924,683.443 991.483,683.443 992.043,683.443 992.602,683.443 993.161,683.443 993.72,683.443 994.28,683.443 994.839,683.443 995.398,683.443 995.957,683.443 996.517,683.443 997.076,683.443 997.635,683.443 998.194,683.443 998.754,683.443 999.313,683.443 999.872,683.443 1000.43,683.443 1000.99,683.443 1001.55,683.443 1002.11,683.443 1002.67,683.443 1003.23,683.443 1003.79,683.443 1004.35,683.443 1004.91,683.443 1005.46,683.443 1006.02,683.443 1006.58,683.443 1007.14,683.443 1007.7,683.443 1008.26,683.443 1008.82,683.443 1009.38,683.443 1009.94,683.443 1010.5,683.443 1011.06,683.443 1011.62,683.443 1012.18,683.443 1012.73,683.443 1013.29,683.443 1013.85,683.443 1014.41,683.443 1014.97,683.443 1015.53,683.443 1016.09,683.443 1016.65,683.443 1017.21,683.443 1017.77,683.443 1018.33,683.443 1018.89,683.443 1019.45,683.443 1020.01,683.443 1020.56,683.443 1021.12,683.443 1021.68,683.443 1022.24,683.443 1022.8,683.443 1023.36,683.443 1023.92,683.443 1024.48,683.443 1025.04,683.443 1025.6,683.443 1026.16,683.443 1026.72,683.443 1027.28,683.443 1027.83,683.443 1028.39,683.443 1028.95,683.443 1029.51,683.443 1030.07,683.443 1030.63,683.443 1031.19,683.443 1031.75,683.443 1032.31,683.443 1032.87,683.443 1033.43,683.443 1033.99,683.443 1034.55,683.443 1035.1,683.443 1035.66,683.443 1036.22,683.443 1036.78,683.443 1037.34,683.443 1037.9,683.443 1038.46,683.443 1039.02,683.443 1039.58,683.443 1040.14,683.443 1040.7,683.443 1041.26,683.443 1041.82,683.443 1042.38,683.443 1042.93,683.443 1043.49,683.443 1044.05,683.443 1044.61,683.443 1045.17,683.443 1045.73,683.443 1046.29,683.443 1046.85,683.443 1047.41,683.443 1047.97,683.443 1048.53,683.443 1049.09,683.443 1049.65,683.443 1050.2,683.443 1050.76,683.443 1051.32,683.443 1051.88,683.443 1052.44,683.443 1053,683.443 1053.56,683.443 1054.12,683.443 1054.68,683.443 1055.24,683.443 1055.8,683.443 1056.36,683.443 1056.92,683.443 1057.48,683.443 1058.03,683.443 1058.59,683.443 1059.15,683.443 1059.71,683.443 1060.27,683.443 1060.83,683.443 1061.39,683.443 1061.95,683.443 1062.51,683.443 1063.07,683.443 1063.63,683.443 1064.19,683.443 1064.75,683.443 1065.3,683.443 1065.86,683.443 1066.42,683.443 1066.98,683.443 1067.54,683.443 1068.1,683.443 1068.66,683.443 1069.22,683.443 1069.78,683.443 1070.34,683.443 1070.9,683.443 1071.46,683.443 1072.02,683.443 1072.57,683.443 1073.13,683.443 1073.69,683.443 1074.25,683.443 1074.81,683.443 1075.37,683.443 1075.93,683.443 1076.49,683.443 1077.05,683.443 1077.61,683.443 1078.17,683.443 1078.73,683.443 1079.29,683.443 1079.85,683.443 1080.4,683.443 1080.96,683.443 1081.52,683.443 1082.08,683.443 1082.64,683.443 1083.2,683.443 1083.76,683.443 1084.32,683.443 1084.88,683.443 1085.44,683.443 1086,683.443 1086.56,683.443 1087.12,683.443 1087.67,683.443 1088.23,683.443 1088.79,683.443 1089.35,683.443 1089.91,683.443 1090.47,683.443 1091.03,683.443 1091.59,683.443 1092.15,683.443 1092.71,683.443 1093.27,683.443 1093.83,683.443 1094.39,683.443 1094.94,683.443 1095.5,683.443 1096.06,683.443 1096.62,683.443 1097.18,683.443 1097.74,683.443 1098.3,683.443 1098.86,683.443 1099.42,683.443 1099.98,683.443 1100.54,683.443 1101.1,683.443 1101.66,683.443 1102.22,683.443 1102.77,683.443 1103.33,683.443 1103.89,683.443 1104.45,683.443 1105.01,683.443 1105.57,683.443 1106.13,683.443 1106.69,683.443 1107.25,683.443 1107.81,683.443 1108.37,683.443 1108.93,683.443 1109.49,683.443 1110.04,683.443 1110.6,683.443 1111.16,683.443 1111.72,683.443 1112.28,683.443 1112.84,683.443 1113.4,683.443 1113.96,683.443 1114.52,683.443 1115.08,683.443 1115.64,683.443 1116.2,683.443 1116.76,683.443 1117.31,683.443 1117.87,683.443 1118.43,683.443 1118.99,683.443 1119.55,683.443 1120.11,683.443 1120.67,683.443 1121.23,683.443 1121.79,683.443 1122.35,683.443 1122.91,683.443 1123.47,683.443 1124.03,683.443 1124.59,683.443 1125.14,683.443 1125.7,683.443 1126.26,683.443 1126.82,683.443 1127.38,683.443 1127.94,683.443 1128.5,683.443 1129.06,683.443 1129.62,683.443 1130.18,683.443 1130.74,683.443 1131.3,683.443 1131.86,683.443 1132.41,683.443 1132.97,683.443 1133.53,683.443 1134.09,683.443 1134.65,683.443 1135.21,683.443 1135.77,683.443 1136.33,683.443 1136.89,683.443 1137.45,683.443 1138.01,683.443 1138.57,683.443 1139.13,683.443 1139.68,683.443 1140.24,683.443 1140.8,683.443 1141.36,683.443 1141.92,683.443 1142.48,683.443 1143.04,683.443 1143.6,683.443 1144.16,683.443 1144.72,683.443 1145.28,683.443 1145.84,683.443 1146.4,683.443 1146.96,683.443 1147.51,683.443 1148.07,683.443 1148.63,683.443 1149.19,683.443 1149.75,683.443 1150.31,683.443 1150.87,683.443 1151.43,683.443 1151.99,683.443 1152.55,683.443 1153.11,683.443 1153.67,683.443 1154.23,683.443 1154.78,683.443 1155.34,683.443 1155.9,683.443 1156.46,683.443 1157.02,683.443 1157.58,683.443 1158.14,683.443 1158.7,683.443 1159.26,683.443 1159.82,683.443 1160.38,683.443 1160.94,683.443 1161.5,683.443 1162.05,683.443 1162.61,683.443 1163.17,683.443 1163.73,683.443 1164.29,683.443 1164.85,683.443 1165.41,683.443 1165.97,683.443 1166.53,683.443 1167.09,683.443 1167.65,683.443 1168.21,683.443 1168.77,683.443 1169.33,683.443 1169.88,683.443 1170.44,683.443 1171,683.443 1171.56,683.443 1172.12,683.443 1172.68,683.443 1173.24,683.443 1173.8,683.443 1174.36,683.443 1174.92,683.443 1175.48,683.443 1176.04,683.443 1176.6,683.443 1177.15,683.443 1177.71,683.443 1178.27,683.443 1178.83,683.443 1179.39,683.443 1179.95,683.443 1180.51,683.443 1181.07,683.443 1181.63,683.443 1182.19,683.443 1182.75,683.443 1183.31,683.443 1183.87,683.443 1184.43,683.443 1184.98,683.443 1185.54,683.443 1186.1,683.443 1186.66,683.443 1187.22,683.443 1187.78,683.443 1188.34,683.443 1188.9,683.443 1189.46,683.443 1190.02,683.443 1190.58,683.443 1191.14,683.443 1191.7,683.443 1192.25,683.443 1192.81,683.443 1193.37,683.443 1193.93,683.443 1194.49,683.443 1195.05,683.443 1195.61,683.443 1196.17,683.443 1196.73,683.443 1197.29,683.443 1197.85,683.443 1198.41,683.443 1198.97,683.443 1199.52,683.443 1200.08,683.443 1200.64,683.443 1201.2,683.443 1201.76,683.443 1202.32,683.443 1202.88,683.443 1203.44,683.443 1204,683.443 1204.56,683.443 1205.12,683.443 1205.68,683.443 1206.24,683.443 1206.8,683.443 1207.35,683.443 1207.91,683.443 1208.47,683.443 1209.03,683.443 1209.59,683.443 1210.15,683.443 1210.71,683.443 1211.27,683.443 1211.83,683.443 1212.39,683.443 1212.95,683.443 1213.51,683.443 1214.07,683.443 1214.62,683.443 1215.18,683.443 1215.74,683.443 1216.3,683.443 1216.86,683.443 1217.42,683.443 1217.98,683.443 1218.54,683.443 1219.1,683.443 1219.66,683.443 1220.22,683.443 1220.78,683.443 1221.34,683.443 1221.89,683.443 1222.45,683.443 1223.01,683.443 1223.57,683.443 1224.13,683.443 1224.69,683.443 1225.25,683.443 1225.81,683.443 1226.37,683.443 1226.93,683.443 1227.49,683.443 1228.05,683.443 1228.61,683.443 1229.17,683.443 1229.72,683.443 1230.28,683.443 1230.84,683.443 1231.4,683.443 1231.96,683.443 1232.52,683.443 1233.08,683.443 1233.64,683.443 1234.2,683.443 1234.76,683.443 1235.32,683.443 1235.88,683.443 1236.44,683.443 1236.99,683.443 1237.55,683.443 1238.11,683.443 1238.67,683.443 1239.23,683.443 1239.79,683.443 1240.35,683.443 1240.91,683.443 1241.47,683.443 1242.03,683.443 1242.59,683.443 1243.15,683.443 1243.71,683.443 1244.26,683.443 1244.82,683.443 1245.38,683.443 1245.94,683.443 1246.5,683.443 1247.06,683.443 1247.62,683.443 1248.18,683.443 1248.74,683.443 1249.3,683.443 1249.86,683.443 1250.42,683.443 1250.98,683.443 1251.54,683.443 1252.09,683.443 1252.65,683.443 1253.21,683.443 1253.77,683.443 1254.33,683.443 1254.89,683.443 1255.45,683.443 1256.01,683.443 1256.57,683.443 1257.13,683.443 1257.69,683.443 1258.25,683.443 1258.81,683.443 1259.36,683.443 1259.92,683.443 1260.48,683.443 1261.04,683.443 1261.6,683.443 1262.16,683.443 1262.72,683.443 1263.28,683.443 1263.84,683.443 1264.4,683.443 1264.96,683.443 1265.52,683.443 1266.08,683.443 1266.63,683.443 1267.19,683.443 1267.75,683.443 1268.31,683.443 1268.87,683.443 1269.43,683.443 1269.99,683.443 1270.55,683.443 1271.11,683.443 1271.67,683.443 1272.23,683.443 1272.79,683.443 1273.35,683.443 1273.91,683.443 1274.46,683.443 1275.02,683.443 1275.58,683.443 1276.14,683.443 1276.7,683.443 1277.26,683.443 1277.82,683.443 1278.38,683.443 1278.94,683.443 1279.5,683.443 1280.06,683.443 1280.62,683.443 1281.18,683.443 1281.73,683.443 1282.29,683.443 1282.85,683.443 1283.41,683.443 1283.97,683.443 1284.53,683.443 1285.09,683.443 1285.65,683.443 1286.21,683.443 1286.77,683.443 1287.33,683.443 1287.89,683.443 1288.45,683.443 1289,683.443 1289.56,683.443 1290.12,683.443 1290.68,683.443 1291.24,683.443 1291.8,683.443 1292.36,683.443 1292.92,683.443 1293.48,683.443 1294.04,683.443 1294.6,683.443 1295.16,683.443 1295.72,683.443 1296.28,683.443 1296.83,683.443 1297.39,683.443 1297.95,683.443 1298.51,683.443 1299.07,683.443 1299.63,683.443 1300.19,683.443 1300.75,683.443 1301.31,683.443 1301.87,683.443 1302.43,683.443 1302.99,683.443 1303.55,683.443 1304.1,683.443 1304.66,683.443 1305.22,683.443 1305.78,683.443 1306.34,683.443 1306.9,683.443 1307.46,683.443 1308.02,683.443 1308.58,683.443 1309.14,683.443 1309.7,683.443 1310.26,683.443 1310.82,683.443 1311.38,683.443 1311.93,683.443 1312.49,683.443 1313.05,683.443 1313.61,683.443 1314.17,683.443 1314.73,683.443 1315.29,683.443 1315.85,683.443 1316.41,683.443 1316.97,683.443 1317.53,683.443 1318.09,683.443 1318.65,683.443 1319.2,683.443 1319.76,683.443 1320.32,683.443 1320.88,683.443 1321.44,683.443 1322,683.443 1322.56,683.443 1323.12,683.443 1323.68,683.443 1324.24,683.443 1324.8,683.443 1325.36,683.443 1325.92,683.443 1326.47,683.443 1327.03,683.443 1327.59,683.443 1328.15,683.443 1328.71,683.443 1329.27,683.443 1329.83,683.443 1330.39,683.443 1330.95,683.443 1331.51,683.443 1332.07,683.443 1332.63,683.443 1333.19,683.443 1333.75,683.443 1334.3,683.443 1334.86,683.443 1335.42,683.443 1335.98,683.443 1336.54,683.443 1337.1,683.443 1337.66,683.443 1338.22,683.443 1338.78,683.443 1339.34,683.443 1339.9,683.443 1340.46,683.443 1341.02,683.443 1341.57,683.443 1342.13,683.443 1342.69,683.443 1343.25,683.443 1343.81,683.443 1344.37,683.443 1344.93,683.443 1345.49,683.443 1346.05,683.443 1346.61,683.443 1347.17,683.443 1347.73,683.443 1348.29,683.443 1348.84,683.443 1349.4,683.443 1349.96,683.443 1350.52,683.443 1351.08,683.443 1351.64,683.443 1352.2,683.443 1352.76,683.443 1353.32,683.443 1353.88,683.443 1354.44,683.443 1355,683.443 1355.56,683.443 1356.12,683.443 1356.67,683.443 1357.23,683.443 1357.79,683.443 1358.35,683.443 1358.91,683.443 1359.47,683.443 1360.03,683.443 1360.59,683.443 1361.15,683.443 1361.71,683.443 1362.27,683.443 1362.83,683.443 1363.39,683.443 1363.94,683.443 1364.5,683.443 1365.06,683.443 1365.62,683.443 1366.18,683.443 1366.74,683.443 1367.3,683.443 1367.86,683.443 1368.42,683.443 1368.98,683.443 1369.54,683.443 1370.1,683.443 1370.66,683.443 1371.21,683.443 1371.77,683.443 1372.33,683.443 1372.89,683.443 1373.45,683.443 1374.01,683.443 1374.57,683.443 1375.13,683.443 1375.69,683.443 1376.25,683.443 1376.81,683.443 1377.37,683.443 1377.93,683.443 1378.49,683.443 1379.04,683.443 1379.6,683.443 1380.16,683.443 1380.72,683.443 1381.28,683.443 1381.84,683.443 1382.4,683.443 1382.96,683.443 1383.52,683.443 1384.08,683.443 1384.64,683.443 1385.2,683.443 1385.76,683.443 1386.31,683.443 1386.87,683.443 1387.43,683.443 1387.99,683.443 1388.55,683.443 1389.11,683.443 1389.67,683.443 1390.23,683.443 1390.79,683.443 1391.35,683.443 1391.91,683.443 1392.47,683.443 1393.03,683.443 1393.58,683.443 1394.14,683.443 1394.7,683.443 1395.26,683.443 1395.82,683.443 1396.38,683.443 1396.94,683.443 1397.5,683.443 1398.06,683.443 1398.62,683.443 1399.18,683.443 1399.74,683.443 1400.3,683.443 1400.86,683.443 1401.41,683.443 1401.97,683.443 1402.53,683.443 1403.09,683.443 1403.65,683.443 1404.21,683.443 1404.77,683.443 1405.33,683.443 1405.89,683.443 1406.45,683.443 1407.01,683.443 1407.57,683.443 1408.13,683.443 1408.68,683.443 1409.24,683.443 1409.8,683.443 1410.36,683.443 1410.92,683.443 1411.48,683.443 1412.04,683.443 1412.6,683.443 1413.16,683.443 1413.72,683.443 1414.28,683.443 1414.84,683.443 1415.4,683.443 1415.95,683.443 1416.51,683.443 1417.07,683.443 1417.63,683.443 1418.19,683.443 1418.75,683.443 1419.31,683.443 1419.87,683.443 1420.43,683.443 1420.99,683.443 1421.55,683.443 1422.11,683.443 1422.67,683.443 1423.23,683.443 1423.78,683.443 1424.34,683.443 1424.9,683.443 1425.46,683.443 1426.02,683.443 1426.58,683.443 1427.14,683.443 1427.7,683.443 1428.26,683.443 1428.82,683.443 1429.38,683.443 1429.94,683.443 1430.5,683.443 1431.05,683.443 1431.61,683.443 1432.17,683.443 1432.73,683.443 1433.29,683.443 1433.85,683.443 1434.41,683.443 1434.97,683.443 1435.53,683.443 1436.09,683.443 1436.65,683.443 1437.21,683.443 1437.77,683.443 1438.33,683.443 1438.88,683.443 1439.44,683.443 1440,683.443 1440.56,683.443 1441.12,683.443 1441.68,683.443 1442.24,683.443 1442.8,683.443 1443.36,683.443 1443.92,683.443 1444.48,683.443 1445.04,683.443 1445.6,683.443 1446.15,683.443 1446.71,683.443 1447.27,683.443 1447.83,683.443 1448.39,683.443 1448.95,683.443 1449.51,683.443 1450.07,683.443 1450.63,683.443 1451.19,683.443 1451.75,683.443 1452.31,683.443 1452.87,683.443 1453.42,683.443 1453.98,683.443 1454.54,683.443 1455.1,683.443 1455.66,683.443 1456.22,683.443 1456.78,683.443 1457.34,683.443 1457.9,683.443 1458.46,683.443 1459.02,683.443 1459.58,683.443 1460.14,683.443 1460.7,683.443 1461.25,683.443 1461.81,683.443 1462.37,683.443 1462.93,683.443 1463.49,683.443 1464.05,683.443 1464.61,683.443 1465.17,683.443 1465.73,683.443 1466.29,683.443 1466.85,683.443 1467.41,683.443 1467.97,683.443 1468.52,683.443 1469.08,683.443 1469.64,683.443 1470.2,683.443 1470.76,683.443 1471.32,683.443 1471.88,683.443 1472.44,683.443 1473,683.443 1473.56,683.443 1474.12,683.443 1474.68,683.443 1475.24,683.443 1475.79,683.443 1476.35,683.443 1476.91,683.443 1477.47,683.443 1478.03,683.443 1478.59,683.443 1479.15,683.443 1479.71,683.443 1480.27,683.443 1480.83,683.443 1481.39,683.443 1481.95,683.443 1482.51,683.443 1483.07,683.443 1483.62,683.443 1484.18,683.443 1484.74,683.443 1485.3,683.443 1485.86,683.443 1486.42,683.443 1486.98,683.443 1487.54,683.443 1488.1,683.443 1488.66,683.443 1489.22,683.443 1489.78,683.443 1490.34,683.443 1490.89,683.443 1491.45,683.443 1492.01,683.443 1492.57,683.443 1493.13,683.443 1493.69,683.443 1494.25,683.443 1494.81,683.443 1495.37,683.443 1495.93,683.443 1496.49,683.443 1497.05,683.443 1497.61,683.443 1498.16,683.443 1498.72,683.443 1499.28,683.443 1499.84,683.443 1500.4,683.443 1500.96,683.443 1501.52,683.443 1502.08,683.443 1502.64,683.443 1503.2,683.443 1503.76,683.443 1504.32,683.443 1504.88,683.443 1505.44,683.443 1505.99,683.443 1506.55,683.443 1507.11,683.443 1507.67,683.443 1508.23,683.443 1508.79,683.443 1509.35,683.443 1509.91,683.443 1510.47,683.443 1511.03,683.443 1511.59,683.443 1512.15,683.443 1512.71,683.443 1513.26,683.443 1513.82,683.443 1514.38,683.443 1514.94,683.443 1515.5,683.443 1516.06,683.443 1516.62,683.443 1517.18,683.443 1517.74,683.443 1518.3,683.443 1518.86,683.443 1519.42,683.443 1519.98,683.443 1520.53,683.443 1521.09,683.443 1521.65,683.443 1522.21,683.443 1522.77,683.443 1523.33,683.443 1523.89,683.443 1524.45,683.443 1525.01,683.443 1525.57,683.443 1526.13,683.443 1526.69,683.443 1527.25,683.443 1527.81,683.443 1528.36,683.443 1528.92,683.443 1529.48,683.443 1530.04,683.443 1530.6,683.443 1531.16,683.443 1531.72,683.443 1532.28,683.443 1532.84,683.443 1533.4,683.443 1533.96,683.443 1534.52,683.443 1535.08,683.443 1535.63,683.443 1536.19,683.443 1536.75,683.443 1537.31,683.443 1537.87,683.443 1538.43,683.443 1538.99,683.443 1539.55,683.443 1540.11,683.443 1540.67,683.443 1541.23,683.443 1541.79,683.443 1542.35,683.443 1542.9,683.443 1543.46,683.443 1544.02,683.443 1544.58,683.443 1545.14,683.443 1545.7,683.443 1546.26,683.443 1546.82,683.443 1547.38,683.443 1547.94,683.443 1548.5,683.443 1549.06,683.443 1549.62,683.443 1550.18,683.443 1550.73,683.443 1551.29,683.443 1551.85,683.443 1552.41,683.443 1552.97,683.443 1553.53,683.443 1554.09,683.443 1554.65,683.443 1555.21,683.443 1555.77,683.443 1556.33,683.443 1556.89,683.443 1557.45,683.443 1558,683.443 1558.56,683.443 1559.12,683.443 1559.68,683.443 1560.24,683.443 1560.8,683.443 1561.36,683.443 1561.92,683.443 1562.48,683.443 1563.04,683.443 1563.6,683.443 1564.16,683.443 1564.72,683.443 1565.28,683.443 1565.83,683.443 1566.39,683.443 1566.95,683.443 1567.51,683.443 1568.07,683.443 1568.63,683.443 1569.19,683.443 1569.75,683.443 1570.31,683.443 1570.87,683.443 1571.43,683.443 1571.99,683.443 1572.55,683.443 1573.1,683.443 1573.66,683.443 1574.22,683.443 1574.78,683.443 1575.34,683.443 1575.9,683.443 1576.46,683.443 1577.02,683.443 1577.58,683.443 1578.14,683.443 1578.7,683.443 1579.26,683.443 1579.82,683.443 1580.37,683.443 1580.93,683.443 1581.49,683.443 1582.05,683.443 1582.61,683.443 1583.17,683.443 1583.73,683.443 1584.29,683.443 1584.85,683.443 1585.41,683.443 1585.97,683.443 1586.53,683.443 1587.09,683.443 1587.65,683.443 1588.2,683.443 1588.76,683.443 1589.32,683.443 1589.88,683.443 1590.44,683.443 1591,683.443 1591.56,683.443 1592.12,683.443 1592.68,683.443 1593.24,683.443 1593.8,683.443 1594.36,683.443 1594.92,683.443 1595.47,683.443 1596.03,683.443 1596.59,683.443 1597.15,683.443 1597.71,683.443 1598.27,683.443 1598.83,683.443 1599.39,683.443 1599.95,683.443 1600.51,683.443 1601.07,683.443 1601.63,683.443 1602.19,683.443 1602.74,683.443 1603.3,683.443 1603.86,683.443 1604.42,683.443 1604.98,683.443 1605.54,683.443 1606.1,683.443 1606.66,683.443 1607.22,683.443 1607.78,683.443 1608.34,683.443 1608.9,683.443 1609.46,683.443 1610.02,683.443 1610.57,683.443 1611.13,683.443 1611.69,683.443 1612.25,683.443 1612.81,683.443 1613.37,683.443 1613.93,683.443 1614.49,683.443 1615.05,683.443 1615.61,683.443 1616.17,683.443 1616.73,683.443 1617.29,683.443 1617.84,683.443 1618.4,683.443 1618.96,683.443 1619.52,683.443 1620.08,683.443 1620.64,683.443 1621.2,683.443 1621.76,683.443 1622.32,683.443 1622.88,683.443 1623.44,683.443 1624,683.443 1624.56,683.443 1625.11,683.443 1625.67,683.443 1626.23,683.443 1626.79,683.443 1627.35,683.443 1627.91,683.443 1628.47,683.443 1629.03,683.443 1629.59,683.443 1630.15,683.443 1630.71,683.443 1631.27,683.443 1631.83,683.443 1632.39,683.443 1632.94,683.443 1633.5,683.443 1634.06,683.443 1634.62,683.443 1635.18,683.443 1635.74,683.443 1636.3,683.443 1636.86,683.443 1637.42,683.443 1637.98,683.443 1638.54,683.443 1639.1,683.443 1639.66,683.443 1640.21,683.443 1640.77,683.443 1641.33,683.443 1641.89,683.443 1642.45,683.443 1643.01,683.443 1643.57,683.443 1644.13,683.443 1644.69,683.443 1645.25,683.443 1645.81,683.443 1646.37,683.443 1646.93,683.443 1647.48,683.443 1648.04,683.443 1648.6,683.443 1649.16,683.443 1649.72,683.443 1650.28,683.443 1650.84,683.443 1651.4,683.443 1651.96,683.443 1652.52,683.443 1653.08,683.443 1653.64,683.443 1654.2,683.443 1654.76,683.443 1655.31,683.443 1655.87,683.443 1656.43,683.443 1656.99,683.443 1657.55,683.443 1658.11,683.443 1658.67,683.443 1659.23,683.443 1659.79,683.443 1660.35,683.443 1660.91,683.443 1661.47,683.443 1662.03,683.443 1662.58,683.443 1663.14,683.443 1663.7,683.443 1664.26,683.443 1664.82,683.443 1665.38,683.443 1665.94,683.443 1666.5,683.443 1667.06,683.443 1667.62,683.443 1668.18,683.443 1668.74,683.443 1669.3,683.443 1669.85,683.443 1670.41,683.443 1670.97,683.443 1671.53,683.443 1672.09,683.443 1672.65,683.443 1673.21,683.443 1673.77,683.443 1674.33,683.443 1674.89,683.443 1675.45,683.443 1676.01,683.443 1676.57,683.443 1677.13,683.443 1677.68,683.443 1678.24,683.443 1678.8,683.443 1679.36,683.443 1679.92,683.443 1680.48,683.443 1681.04,683.443 1681.6,683.443 1682.16,683.443 1682.72,683.443 1683.28,683.443 1683.84,683.443 1684.4,683.443 1684.95,683.443 1685.51,683.443 1686.07,683.443 1686.63,683.443 1687.19,683.443 1687.75,683.443 1688.31,683.443 1688.87,683.443 1689.43,683.443 1689.99,683.443 1690.55,683.443 1691.11,683.443 1691.67,683.443 1692.23,683.443 1692.78,683.443 1693.34,683.443 1693.9,683.443 1694.46,683.443 1695.02,683.443 1695.58,683.443 1696.14,683.443 1696.7,683.443 1697.26,683.443 1697.82,683.443 1698.38,683.443 1698.94,683.443 1699.5,683.443 1700.05,683.443 1700.61,683.443 1701.17,683.443 1701.73,683.443 1702.29,683.443 1702.85,683.443 1703.41,683.443 1703.97,683.443 1704.53,683.443 1705.09,683.443 1705.65,683.443 1706.21,683.443 1706.77,683.443 1707.32,683.443 1707.88,683.443 1708.44,683.443 1709,683.443 1709.56,683.443 1710.12,683.443 1710.68,683.443 1711.24,683.443 1711.8,683.443 1712.36,683.443 1712.92,683.443 1713.48,683.443 1714.04,683.443 1714.6,683.443 1715.15,683.443 1715.71,683.443 1716.27,683.443 1716.83,683.443 1717.39,683.443 1717.95,683.443 1718.51,683.443 1719.07,683.443 1719.63,683.443 1720.19,683.443 1720.75,683.443 1721.31,683.443 1721.87,683.443 1722.42,683.443 1722.98,683.443 1723.54,683.443 1724.1,683.443 1724.66,683.443 1725.22,683.443 1725.78,683.443 1726.34,683.443 1726.9,683.443 1727.46,683.443 1728.02,683.443 1728.58,683.443 1729.14,683.443 1729.69,683.443 1730.25,683.443 1730.81,683.443 1731.37,683.443 1731.93,683.443 1732.49,683.443 1733.05,683.443 1733.61,683.443 1734.17,683.443 1734.73,683.443 1735.29,683.443 1735.85,683.443 1736.41,683.443 1736.97,683.443 1737.52,683.443 1738.08,683.443 1738.64,683.443 1739.2,683.443 1739.76,683.443 1740.32,683.443 1740.88,683.443 1741.44,683.443 1742,683.443 1742.56,683.443 1743.12,683.443 1743.68,683.443 1744.24,683.443 1744.79,683.443 1745.35,683.443 1745.91,683.443 1746.47,683.443 1747.03,683.443 1747.59,683.443 1748.15,683.443 1748.71,683.443 1749.27,683.443 1749.83,683.443 1750.39,683.443 1750.95,683.443 1751.51,683.443 1752.06,683.443 1752.62,683.443 1753.18,683.443 1753.74,683.443 1754.3,683.443 1754.86,683.443 1755.42,683.443 1755.98,683.443 1756.54,683.443 1757.1,683.443 1757.66,683.443 1758.22,683.443 1758.78,683.443 1759.34,683.443 1759.89,683.443 1760.45,683.443 1761.01,683.443 1761.57,683.443 1762.13,683.443 1762.69,683.443 1763.25,683.443 1763.81,683.443 1764.37,683.443 1764.93,683.443 1765.49,683.443 1766.05,683.443 1766.61,683.443 1767.16,683.443 1767.72,683.443 1768.28,683.443 1768.84,683.443 1769.4,683.443 1769.96,683.443 1770.52,683.443 1771.08,683.443 1771.64,683.443 1772.2,683.443 1772.76,683.443 1773.32,683.443 1773.88,683.443 1774.43,683.443 1774.99,683.443 1775.55,683.443 1776.11,683.443 1776.67,683.443 1777.23,683.443 1777.79,683.443 1778.35,683.443 1778.91,683.443 1779.47,683.443 1780.03,683.443 1780.59,683.443 1781.15,683.443 1781.71,683.443 1782.26,683.443 1782.82,683.443 1783.38,683.443 1783.94,683.443 1784.5,683.443 1785.06,683.443 1785.62,683.443 1786.18,683.443 1786.74,683.443 1787.3,683.443 1787.86,683.443 1788.42,683.443 1788.98,683.443 1789.53,683.443 1790.09,683.443 1790.65,683.443 1791.21,683.443 1791.77,683.443 1792.33,683.443 1792.89,683.443 1793.45,683.443 1794.01,683.443 1794.57,683.443 1795.13,683.443 1795.69,683.443 1796.25,683.443 1796.8,683.443 1797.36,683.443 1797.92,683.443 1798.48,683.443 1799.04,683.443 1799.6,683.443 1800.16,683.443 1800.72,683.443 1801.28,683.443 1801.84,683.443 1802.4,683.443 1802.96,683.443 1803.52,683.443 1804.08,683.443 1804.63,683.443 1805.19,683.443 1805.75,683.443 1806.31,683.443 1806.87,683.443 1807.43,683.443 1807.99,683.443 1808.55,683.443 1809.11,683.443 1809.67,683.443 1810.23,683.443 1810.79,683.443 1811.35,683.443 1811.9,683.443 1812.46,683.443 1813.02,683.443 1813.58,683.443 1814.14,683.443 1814.7,683.443 1815.26,683.443 1815.82,683.443 1816.38,683.443 1816.94,683.443 1817.5,683.443 1818.06,683.443 1818.62,683.443 1819.18,683.443 1819.73,683.443 1820.29,683.443 1820.85,683.443 1821.41,683.443 1821.97,683.443 1822.53,683.443 1823.09,683.443 1823.65,683.443 1824.21,683.443 1824.77,683.443 1825.33,683.443 1825.89,683.443 1826.45,683.443 1827,683.443 1827.56,683.443 1828.12,683.443 1828.68,683.443 1829.24,683.443 1829.8,683.443 1830.36,683.443 1830.92,683.443 1831.48,683.443 1832.04,683.443 1832.6,683.443 1833.16,683.443 1833.72,683.443 1834.27,683.443 1834.83,683.443 1835.39,683.443 1835.95,683.443 1836.51,683.443 1837.07,683.443 1837.63,683.443 1838.19,683.443 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ± $(se.err)\n    Projected Energy: $(v.val) ± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.026301763699275 ± 0.018473478799259535\nProjected Energy: -4.014370611037659 ± (0.0057030184545130425, 0.005480017806757331)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from lomc! as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; α = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-α.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ± 0.0029\n  with uncertainty of ± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13×6 DataFrame\n Row │ blocks  mean      std_err      std_err_err  p_cov       mj\n     │ Int64   Float64   Float64      Float64      Float64     Float64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 │   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 │   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 │   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 │    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 │    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 │    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 │     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 │     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 │     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 │      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 │      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 │      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ⠀⠀⠀⠀⠀⠀⠀⠀⠀std err vs blocking steps⠀⠀⠀⠀⠀⠀⠀⠀\n               ┌────────────────────────────────────────┐\n    0.00423501 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀│ m test\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢸⠀⠀⠀⠀│ std err\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⡠⢺⠒⠒⢺⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⡀⠀⠀⡆⣀⠤⡗⠉⠀⢸⠀⠀⢸⡆⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡧⠤⠔⡗⠊⠉⡏⠀⠀⡇⠀⠀⢸⠀⠀⢸⢣⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⡇⠀⠀⠁⠀⠀⠁⠀⠀⠁⠀⠀⠀⠀⠀⢸⠸⡀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠁⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⡇⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠊⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣦⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀│\n               │⠀⠀⠀⢀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n               │⠀⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n   -0.00012335 │⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠧⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤│\n               └────────────────────────────────────────┘\n               ⠀0.64⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀k⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀13.36⠀\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; α = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; α=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.σ_f using x_by_y_linear. The standard error estimate r.σ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.δ_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*σ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3×3 DataFrame\n Row │ res      res_l    res_u\n     │ Float64  Float64  Float64\n─────┼───────────────────────────\n   1 │    11.5  1.7282   1.7282\n   2 │    13.0  1.7282   1.7282\n   3 │    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dτ=df.dτ[end], skip=0)\n\nCalculate the growth witness directly from a DataFrame returned by lomc!. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0) -> g\ngrowth_witness(df::DataFrame, [b]; skip=0) -> g\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ≥ 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n) -> r::RatioBlockingResult\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    dτ=df.dτ[end],\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively. Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin().\n\nE_gr = E_r - frac1dτln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the (biased) shift estimator. Error propagation is done with MonteCarloMeasurements. Progagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a DataFrame returned by lomc!. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator() and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\n-> (;df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    dτ=df.dτ[end],\n    kwargs...\n)\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the unweighted ratio. Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame returned by lomc!. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(\n    df::DataFrame;\n    skip=0, hproj=:hproj, vproj=:vproj, kwargs...\n) -> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy() to set these up in lomc!()). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame returned by lomc!. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...) -> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the result of replica lomc! passed as  argument df, using replicas _1 and _2. Calls ratio_of_means() to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |ψ⟩ and |ϕ⟩ is defined as\n\nF(ψϕ) = fracψϕ^2ψψϕϕ \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v⋅v == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame version can extract the relevant information from the result of lomc!. Set up lomc! with the keyword argument replica = AllOverlaps(R) and R ≥ 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ± 0.029\n  with uncertainty of ± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; α = 0.01) -> k\nmtest(table::NamedTuple; α = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-α after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, σ_f, δ_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nσ_f::T: std from linear propagation\nδ_y::T: coefficient of variation for denominator (≤ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, μ, σ)\nparticles(samples, μ::AbstractVector, Σ::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, σ_f, δ_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nσ_f standard deviation of f from linear error propagation (normal approximation)\nδ_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(μ_x,μ_y,σ_x,σ_y,ρ) -> f, σ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013).\n\nσ_f = sqrtfracσ_xμ_y^2 + fracμ_x σ_yμ_y^2^2 - frac2 ρ μ_xμ_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3×7 DataFrame\n Row │ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     │ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 │    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 │    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1×9 DataFrame\n Row │ val       val_l      val_u      val_f     val_σ_f    val_δ_y    val_k  val_blocks  val_success\n     │ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n─────┼────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7×6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS…</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple…</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.474714</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.4918e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">1.2343e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">9.047e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.413e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.725e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">8.827e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ≠ basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10×10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10×10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nΔE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ΔE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(BoseFS{4,5}(0, 0, 4, 0, 0); u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0⟩\"\n fs\"|0 1 2 1 0⟩\"\n fs\"|1 0 2 0 1⟩\"\n fs\"|1 0 1 2 0⟩\"\n fs\"|0 0 1 1 2⟩\"\n fs\"|0 2 1 0 1⟩\"\n fs\"|2 1 1 0 0⟩\"\n fs\"|0 2 0 2 0⟩\"\n fs\"|1 1 0 1 1⟩\"\n fs\"|2 0 0 0 2⟩\"\n fs\"|0 0 0 3 1⟩\"\n fs\"|3 0 0 1 0⟩\"\n fs\"|0 1 0 0 3⟩\"\n fs\"|1 3 0 0 0⟩\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0⟩\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ≈ all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0⟩\" => -0.0214153\n  fs\"|2 0 0 0 2⟩\" => -0.00237613\n  fs\"|0 0 4 0 0⟩\" => -0.980348\n  fs\"|0 0 0 3 1⟩\" => 0.00363555\n  fs\"|2 1 1 0 0⟩\" => -0.0119687\n  fs\"|1 0 2 0 1⟩\" => 0.0768085\n  fs\"|1 3 0 0 0⟩\" => 0.00363555\n  fs\"|0 1 2 1 0⟩\" => 0.177701\n  fs\"|0 0 1 1 2⟩\" => -0.0119687\n  fs\"|3 0 0 1 0⟩\" => 0.00195478\n  fs\"|0 2 0 2 0⟩\" => -0.0138439\n  fs\"|1 1 0 1 1⟩\" => -0.00234782\n  fs\"|0 1 0 0 3⟩\" => 0.00195478\n  fs\"|0 2 1 0 1⟩\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i ϵ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential ϵ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleσ t_σ a^_iσ a_jσ +\n  frac12sum_iσ u_σσ n_iσ (n_iσ - 1) +\n  sum_iστu_στ n_iσ n_iτ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iσd v_σd x_di^2 n_iσ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C × D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(add::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k δ_r+qp+k\n\nArguments\n\nadd: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, η, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl \n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order  degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl \n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and  the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between  basis states of any noninteracting energy level, leading to many more offdiagonals and  fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger  restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The    allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make    the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the    interactions. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without    comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building  a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, η, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i ϵ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that  conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using  first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d) \n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, see four_oscillator_integral_general, with the additional restriction  that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to    make the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function  potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi ϵ_mathbfi n_mathbfi \n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix  representation of this Hamiltonian for a single particle is completely dense in the even-parity  subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nηs = (): a tuple of aspect ratios for the remaining dimensions (η_y, ...). Should be empty    for a 1D trap or contain values greater than 1.0. The maximum index    in other dimensions will be the largest even number less than M/η_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,    including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if    only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of \nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kσk^2 n_kσ \n    quad + sum_pqkσσ T_pqk a^_p-kσ a^_q+kσ a_qσ a_pσ \n    quad + sum_pqskkσσ Q_kka^_p-kσ a^_q+kσ a^_s+k-kσ\n                                       a_sσ a_qσ a_pσ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + ωN - v Σₖ(aₖ^ + aₖ)\n\nwhere p is the total momentum, p_f = Σ_k k aₖ^ aₖ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2πl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons ω.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0⟩{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M÷2, M÷2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M÷2, M÷2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address α is replaced by frac12(α  α) for even and odd parity, respectively, where ᾱ == reverse(α).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(BoseFS{3,3}(0, 2, 1); u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ≈ eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ≈ eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ≤ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0⟩{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ≤ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, σ=1, τ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_στ(d) = frac1M _i n_σi (n_τi+d - δ_0dδ_στ)\n\nFor multicomponent addresses, σ and τ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s b^_p  b_q a_r δ_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s a^_p  a_q a_r δ_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ≤ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ≤ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iσ = hat a^_iσ hat a_iσ\n\nwhere i is the mode and σ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0⟩\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0⟩\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x⋅(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1⟩\", -3.0)\n (fs\"|2 2 2⟩\", -2.449489742783178)\n (fs\"|3 1 2⟩\", -2.0)\n (fs\"|4 1 1⟩\", -2.8284271247461903)\n (fs\"|4 2 0⟩\", -2.0)\n (fs\"|3 3 0⟩\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ….\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb⋅(1:7) == onr(b)⋅(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w⋅op(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ⋅ A ⋅ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions, \n\n    mathcalI(ijkl) = int_-infty^infty dx  \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function,  and is non-zero unless i+j+k+l is odd. See e.g.  Titchmarsh (1948). This is a generalisation of the closed form in  Papenbrock (2002), which is is the special  case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin, \n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state  corresponds to a D-tuple of harmonic oscillator indices mathbfn_i.  S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of  phi_i(0) to speed-up the calculation. The values can be calculated with  log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D  harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1⟩\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ≈ values[1]\ntrue\n\nSee also solve, init, KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian)\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3×3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:\n  0.0  -1.0  -1.0\n -1.0   0.0  -1.0\n -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2×2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:\n  0.0  -1.0\n -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues\n3-element Vector{Float64}:\n -1.9999999999999996\n  0.9999999999999997\n  1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector\n3-element Vector{Float64}:\n -0.5773502691896257\n -0.5773502691896255\n -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec\nDVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()\n  fs\"|0 0 1⟩\" => -0.57735\n  fs\"|0 1 0⟩\" => -0.57735\n  fs\"|1 0 0⟩\" => -0.57735\n\nHas methods for dimension, sparse, Matrix, starting_address.\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nαmathrmnaddrrangle\n\nReturns the new address naddr and the factor α. The value of α is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0⟩\" => 1\n\njulia> fs\"|0 1 2 0⟩\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3⟩⊗|0 1 0⟩\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|↑↓↑⟩\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0⟩{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0⟩{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ≤ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Σ_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen)\n\nCompute the new address of a hopping event for the Bose-Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic.\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ≤ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|⋅↑↑↑⋅⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|↑↓↓⟩\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3⟩{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n→ (nadd, α)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of α is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3⟩{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, α = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dτ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ after projecting onto projector.\n\nS^n+1 = S^n -fracζdτlnleft(fracPΨ^(n+1)PΨ^(n)right)-fracξdτlnleft(fracPΨ^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4, α = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracξdτlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-α)*walkernumber() + α*UniformProjector()⋅ψ computed with walkernumber() and UniformProjector(). When ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)-fracξdτlnleft(fracΨ_1^n+1Ψ_1^texttargetright)\n\nWhen ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08, ξ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ and ξ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, ζ = 0.08,   ξ = ζ^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dτ) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\n𝐓 = 1 + dτ(S - 𝐇)\n\nwhere 𝐇 is the hamiltonian and S is the shift.\n\n𝐓 represents the first order expansion of the exponential evolution operator of the imaginary-time Schrödinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntargetwalkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; targetwalkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nζ = 0.08: Damping parameter for the shift update.\nξ = ζ^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; targetwalkers, ζ, ξ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * targetwalkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dτ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(⋅,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dτ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndτ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> add = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(add);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(BoseFS{6,3}(1, 2, 3); u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nτ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, ζ = 0.08, ξ = ζ^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ≈ num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|⋅↑⇅↓⋅⟩\" => 1.0, fs\"|↓↓⋅↑↑⟩\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|↓↓⋅↑↑⟩\" => 0.5\n  fs\"|⋅↑⇅↓⋅⟩\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dτ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dτ","text":"update_dτ(s<:TimeStepStrategy, dτ, tnorm) -> new dτ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with mpirun julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Next, we construct the starting vector. We use a PDVec, which is automatically MPI-distributed if MPI is available. We set the vector's stochastic style to IsDynamicSemistochastic, which improves statistics and reduces the sign problem.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails. Setting save_if=is_mpi_root() will ensure only the root MPI rank will write to the file. The chunk_size parameter determines how often the data is saved to the file. Progress messages are suppressed with io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    save_if=is_mpi_root(),\n    reporting_interval=1,\n    chunk_size=1000,\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10_000 walkers. We will also compute the projected energy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"s_strat = DoubleLogUpdate(targetwalkers=10_000)\npost_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ProjectedEnergy{HubbardMom1D{Float64, 10, BoseFS{10, 10, BitString{19, 1, UInt32}}, 6.0, 1.0}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}}(:vproj, :hproj, HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 1.0],)), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(1, 0, 0, 0, 8, 0, 0, 0, 1, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 0, 8, 0, 0, 0, 0, 2) => 4.024922359499621, BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 7.0, BoseFS{10,10}(0, 0, 1, 0, 8, 0, 1, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 1, 8, 1, 0, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 1, 0, 0, 8, 0, 0, 1, 0, 0) => 5.692099788303083],)))","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"lomc!(H, initial_vector; reporting_strategy, s_strat, post_step_strategy, dτ=1e-4, laststep=10_000);\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schrödinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Blöte PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schrödinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija Čufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. lomc!.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main lomc!() computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI for use in lomc!() is enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. Čufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelmüller, D. Huber, M. Čufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/π^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↑↓↓⟩\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => 4.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => -1.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => -1.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => -1.0\n  fs\"|↑↑↓↓⟩\" => -4.0\n  fs\"|↓↑↓↑⟩\" => -1.0\n  fs\"|↓↑↑↓⟩\" => 1.0\n  fs\"|⇅⋅⋅⇅⟩\" => -1.0\n  fs\"|↑↓↓↑⟩\" => 1.0\n  fs\"|⋅⇅⇅⋅⟩\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => -2.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => 3.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => 3.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()⋅v == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
