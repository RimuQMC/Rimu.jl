var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndτ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dτ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ± $(r.σ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ± 0.13748856752861724\n   Replica 2: -3.974753826250174 ± 0.12466355058904417\n   Replica 3: -4.011054302602586 ± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlaststep = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dτ = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1⟩\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the lomc! function with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1⟩\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0⟩\"=>-14.1421, fs\"|0 2 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 1 0 2⟩\"=>-14.1421, fs\"|1 2 0 1 1 1⟩\"=>-14.1421, fs\"|2 0 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 2 0 1⟩\"=>-14.1421, fs\"|1 1 2 0 1 1⟩\"=>-14.1421, fs\"|1 1 0 2 1 1⟩\"=>-14.1421, fs\"|1 1 1 0 2 1⟩\"=>-14.1421, fs\"|1 0 2 1 1 1⟩\"=>-14.1421, fs\"|2 1 1 1 1 0⟩\"=>-14.1421, fs\"|0 1 1 1 1 2⟩\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this example, we seed the random number generator in order to get reproducible results. This should not be done for actual computations.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Random\nRandom.seed!(17);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Finally, we can start the FCIQMC run.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df, state = lomc!(\n    H, initial_vector;\n    laststep,\n    dτ,\n    targetwalkers,\n    post_step_strategy,\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, df is a DataFrame containing the time series data, while state contains the internal state of FCIQMC, which can be used to continue computations.","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip930\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip930)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip931\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip930)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip932\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip932)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip932)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip932)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip932)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip930)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip930)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip930)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip930)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip930)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip930)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M1248.87 1391.71 L1248.87 1397.25 Q1246.38 1395.98 1243.71 1395.34 Q1241.04 1394.71 1238.17 1394.71 Q1233.81 1394.71 1231.62 1396.04 Q1229.45 1397.38 1229.45 1400.05 Q1229.45 1402.09 1231.01 1403.27 Q1232.57 1404.41 1237.28 1405.46 L1239.29 1405.91 Q1245.52 1407.25 1248.13 1409.7 Q1250.78 1412.12 1250.78 1416.48 Q1250.78 1421.44 1246.83 1424.34 Q1242.91 1427.23 1236.04 1427.23 Q1233.17 1427.23 1230.06 1426.66 Q1226.97 1426.12 1223.53 1425.01 L1223.53 1418.96 Q1226.78 1420.65 1229.93 1421.51 Q1233.08 1422.33 1236.17 1422.33 Q1240.3 1422.33 1242.53 1420.93 Q1244.76 1419.5 1244.76 1416.92 Q1244.76 1414.54 1243.14 1413.26 Q1241.55 1411.99 1236.1 1410.81 L1234.07 1410.33 Q1228.62 1409.19 1226.2 1406.83 Q1223.79 1404.45 1223.79 1400.31 Q1223.79 1395.28 1227.35 1392.54 Q1230.91 1389.8 1237.47 1389.8 Q1240.72 1389.8 1243.58 1390.28 Q1246.45 1390.76 1248.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M1265.89 1380.54 L1265.89 1390.66 L1277.96 1390.66 L1277.96 1395.22 L1265.89 1395.22 L1265.89 1414.57 Q1265.89 1418.93 1267.07 1420.17 Q1268.28 1421.41 1271.94 1421.41 L1277.96 1421.41 L1277.96 1426.31 L1271.94 1426.31 Q1265.16 1426.31 1262.58 1423.8 Q1260.01 1421.25 1260.01 1414.57 L1260.01 1395.22 L1255.71 1395.22 L1255.71 1390.66 L1260.01 1390.66 L1260.01 1380.54 L1265.89 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M1316.15 1407.02 L1316.15 1409.89 L1289.22 1409.89 Q1289.61 1415.94 1292.85 1419.12 Q1296.13 1422.27 1301.96 1422.27 Q1305.33 1422.27 1308.48 1421.44 Q1311.66 1420.61 1314.78 1418.96 L1314.78 1424.5 Q1311.63 1425.83 1308.32 1426.53 Q1305.01 1427.23 1301.61 1427.23 Q1293.08 1427.23 1288.08 1422.27 Q1283.11 1417.3 1283.11 1408.84 Q1283.11 1400.08 1287.82 1394.96 Q1292.57 1389.8 1300.59 1389.8 Q1307.78 1389.8 1311.95 1394.45 Q1316.15 1399.07 1316.15 1407.02 M1310.3 1405.3 Q1310.23 1400.5 1307.59 1397.63 Q1304.98 1394.77 1300.65 1394.77 Q1295.75 1394.77 1292.79 1397.54 Q1289.86 1400.31 1289.42 1405.34 L1310.3 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M1331.43 1420.96 L1331.43 1439.87 L1325.54 1439.87 L1325.54 1390.66 L1331.43 1390.66 L1331.43 1396.07 Q1333.28 1392.89 1336.08 1391.36 Q1338.91 1389.8 1342.82 1389.8 Q1349.32 1389.8 1353.36 1394.96 Q1357.43 1400.12 1357.43 1408.52 Q1357.43 1416.92 1353.36 1422.08 Q1349.32 1427.23 1342.82 1427.23 Q1338.91 1427.23 1336.08 1425.71 Q1333.28 1424.15 1331.43 1420.96 M1351.35 1408.52 Q1351.35 1402.06 1348.68 1398.4 Q1346.04 1394.71 1341.39 1394.71 Q1336.74 1394.71 1334.07 1398.4 Q1331.43 1402.06 1331.43 1408.52 Q1331.43 1414.98 1334.07 1418.67 Q1336.74 1422.33 1341.39 1422.33 Q1346.04 1422.33 1348.68 1418.67 Q1351.35 1414.98 1351.35 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M1389.87 1391.71 L1389.87 1397.25 Q1387.38 1395.98 1384.71 1395.34 Q1382.04 1394.71 1379.17 1394.71 Q1374.81 1394.71 1372.62 1396.04 Q1370.45 1397.38 1370.45 1400.05 Q1370.45 1402.09 1372.01 1403.27 Q1373.57 1404.41 1378.28 1405.46 L1380.29 1405.91 Q1386.52 1407.25 1389.13 1409.7 Q1391.78 1412.12 1391.78 1416.48 Q1391.78 1421.44 1387.83 1424.34 Q1383.91 1427.23 1377.04 1427.23 Q1374.18 1427.23 1371.06 1426.66 Q1367.97 1426.12 1364.53 1425.01 L1364.53 1418.96 Q1367.78 1420.65 1370.93 1421.51 Q1374.08 1422.33 1377.17 1422.33 Q1381.3 1422.33 1383.53 1420.93 Q1385.76 1419.5 1385.76 1416.92 Q1385.76 1414.54 1384.14 1413.26 Q1382.55 1411.99 1377.1 1410.81 L1375.07 1410.33 Q1369.62 1409.19 1367.2 1406.83 Q1364.79 1404.45 1364.79 1400.31 Q1364.79 1395.28 1368.35 1392.54 Q1371.92 1389.8 1378.47 1389.8 Q1381.72 1389.8 1384.58 1390.28 Q1387.45 1390.76 1389.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip932)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1260.83 2211.02,1260.83 \"/>\n<polyline clip-path=\"url(#clip932)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1003.41 2211.02,1003.41 \"/>\n<polyline clip-path=\"url(#clip932)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,745.985 2211.02,745.985 \"/>\n<polyline clip-path=\"url(#clip932)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,488.564 2211.02,488.564 \"/>\n<polyline clip-path=\"url(#clip932)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,231.144 2211.02,231.144 \"/>\n<polyline clip-path=\"url(#clip930)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip930)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1260.83 423.181,1260.83 \"/>\n<polyline clip-path=\"url(#clip930)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1003.41 423.181,1003.41 \"/>\n<polyline clip-path=\"url(#clip930)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,745.985 423.181,745.985 \"/>\n<polyline clip-path=\"url(#clip930)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,488.564 423.181,488.564 \"/>\n<polyline clip-path=\"url(#clip930)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,231.144 423.181,231.144 \"/>\n<path clip-path=\"url(#clip930)\" d=\"M356.339 1246.62 Q352.728 1246.62 350.899 1250.19 Q349.094 1253.73 349.094 1260.86 Q349.094 1267.97 350.899 1271.53 Q352.728 1275.07 356.339 1275.07 Q359.973 1275.07 361.779 1271.53 Q363.608 1267.97 363.608 1260.86 Q363.608 1253.73 361.779 1250.19 Q359.973 1246.62 356.339 1246.62 M356.339 1242.92 Q362.149 1242.92 365.205 1247.53 Q368.284 1252.11 368.284 1260.86 Q368.284 1269.59 365.205 1274.19 Q362.149 1278.78 356.339 1278.78 Q350.529 1278.78 347.45 1274.19 Q344.395 1269.59 344.395 1260.86 Q344.395 1252.11 347.45 1247.53 Q350.529 1242.92 356.339 1242.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M290.043 1016.75 L306.363 1016.75 L306.363 1020.69 L284.418 1020.69 L284.418 1016.75 Q287.08 1014 291.664 1009.37 Q296.27 1004.71 297.451 1003.37 Q299.696 1000.85 300.576 999.111 Q301.478 997.352 301.478 995.662 Q301.478 992.907 299.534 991.171 Q297.613 989.435 294.511 989.435 Q292.312 989.435 289.858 990.199 Q287.427 990.963 284.65 992.514 L284.65 987.792 Q287.474 986.657 289.927 986.079 Q292.381 985.5 294.418 985.5 Q299.789 985.5 302.983 988.185 Q306.177 990.87 306.177 995.361 Q306.177 997.491 305.367 999.412 Q304.58 1001.31 302.474 1003.9 Q301.895 1004.57 298.793 1007.79 Q295.691 1010.99 290.043 1016.75 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M316.224 986.125 L334.58 986.125 L334.58 990.06 L320.506 990.06 L320.506 998.532 Q321.524 998.185 322.543 998.023 Q323.562 997.838 324.58 997.838 Q330.367 997.838 333.747 1001.01 Q337.126 1004.18 337.126 1009.6 Q337.126 1015.18 333.654 1018.28 Q330.182 1021.36 323.862 1021.36 Q321.687 1021.36 319.418 1020.99 Q317.173 1020.62 314.765 1019.87 L314.765 1015.18 Q316.849 1016.31 319.071 1016.87 Q321.293 1017.42 323.77 1017.42 Q327.774 1017.42 330.112 1015.31 Q332.45 1013.21 332.45 1009.6 Q332.45 1005.99 330.112 1003.88 Q327.774 1001.77 323.77 1001.77 Q321.895 1001.77 320.02 1002.19 Q318.168 1002.61 316.224 1003.49 L316.224 986.125 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M356.339 989.204 Q352.728 989.204 350.899 992.769 Q349.094 996.31 349.094 1003.44 Q349.094 1010.55 350.899 1014.11 Q352.728 1017.65 356.339 1017.65 Q359.973 1017.65 361.779 1014.11 Q363.608 1010.55 363.608 1003.44 Q363.608 996.31 361.779 992.769 Q359.973 989.204 356.339 989.204 M356.339 985.5 Q362.149 985.5 365.205 990.107 Q368.284 994.69 368.284 1003.44 Q368.284 1012.17 365.205 1016.77 Q362.149 1021.36 356.339 1021.36 Q350.529 1021.36 347.45 1016.77 Q344.395 1012.17 344.395 1003.44 Q344.395 994.69 347.45 990.107 Q350.529 985.5 356.339 985.5 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M286.062 728.705 L304.418 728.705 L304.418 732.64 L290.344 732.64 L290.344 741.112 Q291.363 740.765 292.381 740.603 Q293.4 740.418 294.418 740.418 Q300.205 740.418 303.585 743.589 Q306.964 746.76 306.964 752.177 Q306.964 757.755 303.492 760.857 Q300.02 763.936 293.701 763.936 Q291.525 763.936 289.256 763.566 Q287.011 763.195 284.603 762.455 L284.603 757.755 Q286.687 758.89 288.909 759.445 Q291.131 760.001 293.608 760.001 Q297.613 760.001 299.951 757.894 Q302.288 755.788 302.288 752.177 Q302.288 748.566 299.951 746.459 Q297.613 744.353 293.608 744.353 Q291.733 744.353 289.858 744.769 Q288.006 745.186 286.062 746.066 L286.062 728.705 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M326.177 731.783 Q322.566 731.783 320.737 735.348 Q318.932 738.89 318.932 746.019 Q318.932 753.126 320.737 756.691 Q322.566 760.232 326.177 760.232 Q329.811 760.232 331.617 756.691 Q333.446 753.126 333.446 746.019 Q333.446 738.89 331.617 735.348 Q329.811 731.783 326.177 731.783 M326.177 728.08 Q331.987 728.08 335.043 732.686 Q338.122 737.269 338.122 746.019 Q338.122 754.746 335.043 759.353 Q331.987 763.936 326.177 763.936 Q320.367 763.936 317.288 759.353 Q314.233 754.746 314.233 746.019 Q314.233 737.269 317.288 732.686 Q320.367 728.08 326.177 728.08 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M356.339 731.783 Q352.728 731.783 350.899 735.348 Q349.094 738.89 349.094 746.019 Q349.094 753.126 350.899 756.691 Q352.728 760.232 356.339 760.232 Q359.973 760.232 361.779 756.691 Q363.608 753.126 363.608 746.019 Q363.608 738.89 361.779 735.348 Q359.973 731.783 356.339 731.783 M356.339 728.08 Q362.149 728.08 365.205 732.686 Q368.284 737.269 368.284 746.019 Q368.284 754.746 365.205 759.353 Q362.149 763.936 356.339 763.936 Q350.529 763.936 347.45 759.353 Q344.395 754.746 344.395 746.019 Q344.395 737.269 347.45 732.686 Q350.529 728.08 356.339 728.08 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M284.835 471.284 L307.057 471.284 L307.057 473.275 L294.511 505.844 L289.627 505.844 L301.432 475.22 L284.835 475.22 L284.835 471.284 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M316.224 471.284 L334.58 471.284 L334.58 475.22 L320.506 475.22 L320.506 483.692 Q321.524 483.345 322.543 483.182 Q323.562 482.997 324.58 482.997 Q330.367 482.997 333.747 486.169 Q337.126 489.34 337.126 494.757 Q337.126 500.335 333.654 503.437 Q330.182 506.516 323.862 506.516 Q321.687 506.516 319.418 506.145 Q317.173 505.775 314.765 505.034 L314.765 500.335 Q316.849 501.469 319.071 502.025 Q321.293 502.581 323.77 502.581 Q327.774 502.581 330.112 500.474 Q332.45 498.368 332.45 494.757 Q332.45 491.145 330.112 489.039 Q327.774 486.932 323.77 486.932 Q321.895 486.932 320.02 487.349 Q318.168 487.766 316.224 488.645 L316.224 471.284 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M356.339 474.363 Q352.728 474.363 350.899 477.928 Q349.094 481.47 349.094 488.599 Q349.094 495.706 350.899 499.27 Q352.728 502.812 356.339 502.812 Q359.973 502.812 361.779 499.27 Q363.608 495.706 363.608 488.599 Q363.608 481.47 361.779 477.928 Q359.973 474.363 356.339 474.363 M356.339 470.659 Q362.149 470.659 365.205 475.266 Q368.284 479.849 368.284 488.599 Q368.284 497.326 365.205 501.932 Q362.149 506.516 356.339 506.516 Q350.529 506.516 347.45 501.932 Q344.395 497.326 344.395 488.599 Q344.395 479.849 347.45 475.266 Q350.529 470.659 356.339 470.659 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M256.664 244.489 L264.303 244.489 L264.303 218.123 L255.992 219.79 L255.992 215.531 L264.256 213.864 L268.932 213.864 L268.932 244.489 L276.571 244.489 L276.571 248.424 L256.664 248.424 L256.664 244.489 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M296.015 216.943 Q292.404 216.943 290.576 220.508 Q288.77 224.049 288.77 231.179 Q288.77 238.285 290.576 241.85 Q292.404 245.392 296.015 245.392 Q299.65 245.392 301.455 241.85 Q303.284 238.285 303.284 231.179 Q303.284 224.049 301.455 220.508 Q299.65 216.943 296.015 216.943 M296.015 213.239 Q301.826 213.239 304.881 217.846 Q307.96 222.429 307.96 231.179 Q307.96 239.906 304.881 244.512 Q301.826 249.095 296.015 249.095 Q290.205 249.095 287.127 244.512 Q284.071 239.906 284.071 231.179 Q284.071 222.429 287.127 217.846 Q290.205 213.239 296.015 213.239 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M326.177 216.943 Q322.566 216.943 320.737 220.508 Q318.932 224.049 318.932 231.179 Q318.932 238.285 320.737 241.85 Q322.566 245.392 326.177 245.392 Q329.811 245.392 331.617 241.85 Q333.446 238.285 333.446 231.179 Q333.446 224.049 331.617 220.508 Q329.811 216.943 326.177 216.943 M326.177 213.239 Q331.987 213.239 335.043 217.846 Q338.122 222.429 338.122 231.179 Q338.122 239.906 335.043 244.512 Q331.987 249.095 326.177 249.095 Q320.367 249.095 317.288 244.512 Q314.233 239.906 314.233 231.179 Q314.233 222.429 317.288 217.846 Q320.367 213.239 326.177 213.239 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M356.339 216.943 Q352.728 216.943 350.899 220.508 Q349.094 224.049 349.094 231.179 Q349.094 238.285 350.899 241.85 Q352.728 245.392 356.339 245.392 Q359.973 245.392 361.779 241.85 Q363.608 238.285 363.608 231.179 Q363.608 224.049 361.779 220.508 Q359.973 216.943 356.339 216.943 M356.339 213.239 Q362.149 213.239 365.205 217.846 Q368.284 222.429 368.284 231.179 Q368.284 239.906 365.205 244.512 Q362.149 249.095 356.339 249.095 Q350.529 249.095 347.45 244.512 Q344.395 239.906 344.395 231.179 Q344.395 222.429 347.45 217.846 Q350.529 213.239 356.339 213.239 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip932)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,231.144 4017.76,231.144 \"/>\n<polyline clip-path=\"url(#clip932)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1249.42 456.554,1249.32 457.123,1249.18 457.691,1248.95 458.259,1248.63 458.828,1247.22 459.396,1246.82 459.964,1246.33 460.533,1245.8 461.101,1245.17 461.669,1243.44 462.238,1241.67 462.806,1240.89 463.375,1240.01 463.943,1239.04 464.511,1237.95 465.08,1236.76 465.648,1235.46 466.216,1234.04 466.785,1232.5 467.353,1230.86 467.921,1228.04 468.49,1225.1 469.058,1223.09 469.626,1220.92 470.195,1218.61 470.763,1216.13 471.331,1213.44 471.9,1210.59 472.468,1207.6 473.036,1204.39 473.605,1200.94 474.173,1195.31 474.741,1191.5 475.31,1186.38 475.878,1182.07 476.446,1176.53 477.015,1170.81 477.583,1164.82 478.152,1158.39 478.72,1152.87 479.288,1147.05 479.857,1141.01 480.425,1134.72 480.993,1128.29 481.562,1121.65 482.13,1109.56 482.698,1102.48 483.267,1095.2 483.835,1086.65 484.403,1076.93 484.972,1067.88 485.54,1058.82 486.108,1049.53 486.677,1040.07 487.245,1030.53 487.813,1021.75 488.382,1010.84 488.95,999.939 489.518,989.835 490.087,979.723 490.655,969.505 491.224,960.268 491.792,950.81 492.36,940.265 492.929,928.53 493.497,915.849 494.065,905.386 494.634,893.726 495.202,882.945 495.77,870.17 496.339,858.626 496.907,848.086 497.475,834.497 498.044,823.147 498.612,812.003 499.18,800.872 499.749,789.917 500.317,776.954 500.885,768.176 501.454,757.34 502.022,747.558 502.59,735.86 503.159,724.188 503.727,713.592 504.295,704.462 504.864,697.293 505.432,689.07 506.001,678.63 506.569,668.509 507.137,659.421 507.706,650.392 508.274,639.367 508.842,628.649 509.411,619.219 509.979,609.78 510.547,601.586 511.116,594.556 511.684,586.797 512.252,580.016 512.821,570.204 513.389,561.581 513.957,555.163 514.526,547.628 515.094,541.35 515.662,534.125 516.231,525.63 516.799,519.681 517.367,513.664 517.936,506.811 518.504,498.945 519.072,492.384 519.641,486.84 520.209,480.272 520.778,472.978 521.346,467.982 521.914,459.92 522.483,455.135 523.051,449.463 523.619,445.869 524.188,439.363 524.756,434.829 525.324,427.546 525.893,421.433 526.461,417.751 527.029,412.818 527.598,409.127 528.166,404.399 528.734,400.909 529.303,397.51 529.871,394.055 530.439,388.506 531.008,384.259 531.576,382.181 532.144,378.947 532.713,375.889 533.281,369.846 533.85,366.932 534.418,364.024 534.986,360.162 535.555,354.467 536.123,351.229 536.691,345.911 537.26,343.803 537.828,340.85 538.396,336.912 538.965,336.218 539.533,332.387 540.101,331.53 540.67,330.972 541.238,330.174 541.806,327.287 542.375,324.508 542.943,322.836 543.511,320.077 544.08,315.448 544.648,313.086 545.216,311.015 545.785,308.768 546.353,305.422 546.921,304.184 547.49,302.266 548.058,300.226 548.627,299.108 549.195,294.219 549.763,292.602 550.332,292.056 550.9,291.398 551.468,290.969 552.037,290.282 552.605,288.572 553.173,287.919 553.742,287.316 554.31,287.653 554.878,285.851 555.447,285.068 556.015,283.584 556.583,282.002 557.152,283.449 557.72,281.503 558.288,279.977 558.857,279.261 559.425,277.706 559.993,276.932 560.562,273.206 561.13,271.889 561.698,270.502 562.267,270.241 562.835,269.958 563.404,268.693 563.972,266.492 564.54,266.553 565.109,265.515 565.677,263.564 566.245,261.73 566.814,261.774 567.382,261.861 567.95,262.058 568.519,262.144 569.087,260.167 569.655,261.377 570.224,259.294 570.792,259.387 571.36,259.417 571.929,259.261 572.497,258.196 573.065,258.38 573.634,257.401 574.202,255.443 574.77,257.954 575.339,254.695 575.907,254.239 576.476,253.495 577.044,253.939 577.612,254.13 578.181,253.022 578.749,253.225 579.317,255.452 579.886,255.261 580.454,252.309 581.022,252.432 581.591,249.528 582.159,249.902 582.727,252.433 583.296,252.644 583.864,251.789 584.432,252.974 585.001,252.007 585.569,251.128 586.137,251.122 586.706,250.232 587.274,250.403 587.842,252.304 588.411,254.356 588.979,254.812 589.547,255.741 590.116,254.277 590.684,254.19 591.253,256.018 591.821,255.531 592.389,254.12 592.958,253.828 593.526,250.506 594.094,250.148 594.663,251.342 595.231,250.396 595.799,248.112 596.368,247.945 596.936,246.865 597.504,245.918 598.073,246.822 598.641,246.73 599.209,247.774 599.778,245.546 600.346,245.534 600.914,246.624 601.483,248.428 602.051,248.455 602.619,248.339 603.188,248.236 603.756,250.109 604.325,249.976 604.893,248.561 605.461,247.273 606.03,245.915 606.598,245.651 607.166,245.488 607.735,245.276 608.303,247.185 608.871,245.924 609.44,244.921 610.008,243.732 610.576,240.549 611.145,240.905 611.713,240.868 612.281,240.938 612.85,240.999 613.418,238.898 613.986,239.108 614.555,239.467 615.123,238.791 615.691,238.917 616.26,238.169 616.828,237.274 617.396,235.339 617.965,236.597 618.533,235.915 619.102,236.423 619.67,236.973 620.238,235.396 620.807,237 621.375,237.326 621.943,237.538 622.512,237.913 623.08,236.293 623.648,236.666 624.217,237.285 624.785,237.602 625.353,234.905 625.922,236.091 626.49,236.524 627.058,236.748 627.627,236.933 628.195,237.165 628.763,237.518 629.332,237.691 629.9,238.052 630.468,240.505 631.037,239.525 631.605,237.76 632.173,237.047 632.742,237.295 633.31,238.708 633.879,236.918 634.447,237.313 635.015,238.522 635.584,238.728 636.152,239.925 636.72,237.863 637.289,233.111 637.857,234.932 638.425,235.445 638.994,233.634 639.562,235.039 640.13,236.448 640.699,235.393 641.267,234.67 641.835,235.113 642.404,236.431 642.972,236.53 643.54,236.774 644.109,234.989 644.677,233.458 645.245,232.92 645.814,232.419 646.382,232.938 646.951,232.248 647.519,230.854 648.087,235.619 648.656,236.948 649.224,236.124 649.792,236.328 650.361,237.346 650.929,237.563 651.497,239.74 652.066,239.945 652.634,240.957 653.202,239.863 653.771,237.974 654.339,235.176 654.907,236.518 655.476,235.598 656.044,235.927 656.612,234.378 657.181,234.618 657.749,235.976 658.317,235.133 658.886,236.593 659.454,235.715 660.022,235.976 660.591,238.328 661.159,239.402 661.728,239.603 662.296,240.485 662.864,240.299 663.433,240.039 664.001,239.97 664.569,238.751 665.138,237.76 665.706,237.731 666.274,237.887 666.843,239.912 667.411,235.642 667.979,235.913 668.548,236.05 669.116,234.222 669.684,235.503 670.253,235.839 670.821,232.884 671.389,233.349 671.958,233.425 672.526,233.854 673.094,234.039 673.663,232.508 674.231,232.768 674.799,233.496 675.368,232.729 675.936,231.924 676.505,231.454 677.073,231.696 677.641,230.271 678.21,230.849 678.778,231.429 679.346,230.924 679.915,229.339 680.483,230.988 681.051,233.673 681.62,234.914 682.188,237.18 682.756,237.271 683.325,238.519 683.893,238.452 684.461,238.28 685.03,239.416 685.598,239.406 686.166,236.104 686.735,235.194 687.303,236.317 687.871,234.325 688.44,236.693 689.008,237.679 689.577,236.768 690.145,234.715 690.713,235.09 691.282,236.089 691.85,235.199 692.418,235.216 692.987,236.331 693.555,235.344 694.123,236.491 694.692,236.488 695.26,236.403 695.828,237.456 696.397,237.277 696.965,237.319 697.533,238.474 698.102,237.215 698.67,237.346 699.238,237.176 699.807,234.09 700.375,234.323 700.943,234.233 701.512,234.312 702.08,233.428 702.648,234.804 703.217,234.983 703.785,237.039 704.354,238.003 704.922,238.626 705.49,240.457 706.059,240.082 706.627,239.849 707.195,239.38 707.764,239.095 708.332,237.957 708.9,238.84 709.469,238.608 710.037,237.31 710.605,235.066 711.174,234.969 711.742,234.885 712.31,234.941 712.879,233.913 713.447,234.951 714.015,234.888 714.584,237.879 715.152,236.632 715.72,237.459 716.289,239.228 716.857,238.791 717.425,236.381 717.994,237.289 718.562,236.92 719.131,236.527 719.699,234.328 720.267,232.108 720.836,232.943 721.404,233.944 721.972,233.742 722.541,234.676 723.109,234.586 723.677,235.444 724.246,235.297 724.814,236.355 725.382,237.127 725.951,235.65 726.519,236.332 727.087,234.054 727.656,233.122 728.224,231.195 728.792,231.631 729.361,231.862 729.929,233.966 730.497,231.927 731.066,231.222 731.634,230.37 732.203,230.514 732.771,230.875 733.339,230.937 733.908,231.145 734.476,234.219 735.044,234.381 735.613,234.326 736.181,235.305 736.749,236.33 737.318,235.105 737.886,233.001 738.454,231.809 739.023,234.005 739.591,232.812 740.159,234.023 740.728,232.997 741.296,233.08 741.864,235.162 742.433,232.901 743.001,231.79 743.569,230.841 744.138,231.043 744.706,230.181 745.274,230.55 745.843,233.792 746.411,229.81 746.98,228.027 747.548,227.17 748.116,226.719 748.685,228.388 749.253,228.786 749.821,228.134 750.39,228.725 750.958,225.045 751.526,225.618 752.095,226.231 752.663,223.758 753.231,222.352 753.8,225.231 754.368,225.915 754.936,226.403 755.505,229.134 756.073,229.695 756.641,230.807 757.21,232.228 757.778,232.446 758.346,232.524 758.915,231.555 759.483,234.807 760.052,232.679 760.62,232.852 761.188,232.879 761.757,233.979 762.325,233.286 762.893,235.651 763.462,236.711 764.03,236.552 764.598,237.336 765.167,237.02 765.735,236.672 766.303,234.202 766.872,235.306 767.44,235.296 768.008,234.283 768.577,234.158 769.145,233.225 769.713,231.158 770.282,234.734 770.85,232.615 771.418,233.783 771.987,233.725 772.555,235.728 773.123,236.514 773.692,235.341 774.26,234.115 774.829,231.806 775.397,231.773 775.965,231.062 776.534,232.154 777.102,233.276 777.67,233.544 778.239,234.523 778.807,237.569 779.375,237.105 779.944,236.836 780.512,235.511 781.08,235.392 781.649,233.937 782.217,230.92 782.785,231.975 783.354,231.977 783.922,231.816 784.49,230.859 785.059,230.254 785.627,232.632 786.195,233.773 786.764,235.761 787.332,235.501 787.9,235.136 788.469,235.916 789.037,235.689 789.606,234.669 790.174,234.668 790.742,234.47 791.311,234.409 791.879,233.161 792.447,231.139 793.016,229.18 793.584,229.533 794.152,229.794 794.721,230.043 795.289,231.381 795.857,230.483 796.426,230.657 796.994,230.948 797.562,233.103 798.131,233.126 798.699,233.188 799.267,233.069 799.836,232.983 800.404,231.108 800.972,233.245 801.541,234.038 802.109,234.001 802.678,233.93 803.246,232.9 803.814,235.849 804.383,237.744 804.951,235.197 805.519,236.042 806.088,235.972 806.656,233.067 807.224,231.958 807.793,231.871 808.361,228.698 808.929,229.017 809.498,230.101 810.066,231.455 810.634,230.284 811.203,230.661 811.771,230.7 812.339,231.76 812.908,229.877 813.476,230.049 814.044,230.201 814.613,230.277 815.181,229.252 815.749,227.236 816.318,228.264 816.886,226.496 817.455,225.745 818.023,224.344 818.591,225.05 819.16,227.492 819.728,226.703 820.296,230.117 820.865,233.267 821.433,233.322 822.001,234.403 822.57,233.963 823.138,232.714 823.706,232.797 824.275,233.933 824.843,235.911 825.411,234.776 825.98,233.462 826.548,234.445 827.116,234.399 827.685,233.145 828.253,234.156 828.821,232.941 829.39,233.963 829.958,236.019 830.526,235.863 831.095,236.244 831.663,236.152 832.232,236.241 832.8,235.884 833.368,236.698 833.937,236.223 834.505,239.247 835.073,237.575 835.642,236.138 836.21,234.965 836.778,235.736 837.347,235.711 837.915,236.489 838.483,236.224 839.052,235.008 839.62,235.806 840.188,234.176 840.757,234.91 841.325,237.802 841.893,237.302 842.462,238.864 843.03,237.436 843.598,236.924 844.167,235.229 844.735,236.112 845.304,234.908 845.872,234.625 846.44,233.221 847.009,231.181 847.577,233.165 848.145,234.142 848.714,234.899 849.282,234.637 849.85,234.195 850.419,231.827 850.987,231.551 851.555,231.421 852.124,231.369 852.692,230.299 853.26,229.42 853.829,228.543 854.397,225.598 854.965,225.956 855.534,226.381 856.102,225.686 856.67,228.02 857.239,227.39 857.807,226.454 858.375,227.891 858.944,229.227 859.512,228.107 860.081,227.012 860.649,226.275 861.217,228.56 861.786,231.056 862.354,231.094 862.922,229.018 863.491,231.112 864.059,230.126 864.627,228.214 865.196,229.379 865.764,228.573 866.332,228.843 866.901,230.021 867.469,230.31 868.037,229.431 868.606,230.536 869.174,232.768 869.742,233.643 870.311,235.433 870.879,234.987 871.447,232.797 872.016,233.661 872.584,231.611 873.152,230.656 873.721,230.726 874.289,231.971 874.858,235.114 875.426,231.77 875.994,231.797 876.563,230.7 877.131,230.97 877.699,229.078 878.268,229.288 878.836,229.395 879.404,229.618 879.973,232.721 880.541,230.427 881.109,230.653 881.678,232.793 882.246,230.854 882.814,230.947 883.383,230.96 883.951,233.007 884.519,232.916 885.088,231.853 885.656,230.746 886.224,231.978 886.793,232.915 887.361,230.786 887.93,228.737 888.498,230.969 889.066,228.954 889.635,232.24 890.203,232.163 890.771,231.034 891.34,233.025 891.908,232.904 892.476,232.812 893.045,233.979 893.613,233.784 894.181,231.589 894.75,230.354 895.318,228.528 895.886,231.992 896.455,232.021 897.023,231.984 897.591,231.921 898.16,232.054 898.728,234.084 899.296,231.833 899.865,231.932 900.433,231.087 901.001,230.105 901.57,231.107 902.138,230.264 902.707,229.185 903.275,228.035 903.843,228.238 904.412,229.403 904.98,228.484 905.548,228.799 906.117,226.956 906.685,228.151 907.253,228.471 907.822,227.754 908.39,228.119 908.958,229.289 909.527,228.295 910.095,226.654 910.663,226.028 911.232,227.736 911.8,227.06 912.368,227.537 912.937,228.998 913.505,225.215 914.073,225.63 914.642,227.229 915.21,228.618 915.779,230.019 916.347,235.467 916.915,233.022 917.484,233.841 918.052,232.806 918.62,232.837 919.189,233.825 919.757,234.04 920.325,233.804 920.894,232.632 921.462,234.753 922.03,231.54 922.599,231.622 923.167,230.885 923.735,232.159 924.304,231.171 924.872,230.911 925.44,233.261 926.009,233.29 926.577,234.327 927.145,233.094 927.714,231.757 928.282,232.991 928.85,233.778 929.419,235.7 929.987,235.38 930.556,238.098 931.124,236.617 931.692,237.272 932.261,236.974 932.829,234.754 933.397,235.759 933.966,234.486 934.534,234.336 935.102,234.342 935.671,232.882 936.239,235.031 936.807,233.842 937.376,234.656 937.944,235.406 938.512,235.291 939.081,233.162 939.649,232.915 940.217,232.78 940.786,233.76 941.354,231.466 941.922,230.57 942.491,229.536 943.059,229.751 943.627,229.852 944.196,228.997 944.764,229.986 945.333,232.03 945.901,231.127 946.469,229.087 947.038,228.234 947.606,229.281 948.174,229.377 948.743,229.788 949.311,231.922 949.879,231.136 950.448,229.241 951.016,229.734 951.584,229.838 952.153,232.037 952.721,232.153 953.289,232.215 953.858,232.273 954.426,233.296 954.994,233.143 955.563,235.113 956.131,233.638 956.699,233.618 957.268,233.385 957.836,233.178 958.405,234.294 958.973,233.996 959.541,233.782 960.11,232.534 960.678,229.162 961.246,230.364 961.815,229.483 962.383,231.565 962.951,231.541 963.52,231.351 964.088,230.335 964.656,230.451 965.225,233.659 965.793,228.884 966.361,231.08 966.93,229.176 967.498,227.365 968.066,226.918 968.635,225.233 969.203,224.627 969.771,223.115 970.34,223.612 970.908,224.033 971.476,225.554 972.045,225.035 972.613,224.628 973.182,226.03 973.75,227.714 974.318,229.937 974.887,230.133 975.455,230.302 976.023,232.315 976.592,231.217 977.16,227.085 977.728,225.594 978.297,224.867 978.865,226.298 979.433,225.617 980.002,226.991 980.57,226.426 981.138,225.761 981.707,226.348 982.275,226.89 982.843,230.345 983.412,229.349 983.98,228.527 984.548,226.74 985.117,226.042 985.685,226.439 986.253,227.932 986.822,230.496 987.39,228.613 987.959,228.872 988.527,230.093 989.095,228.47 989.664,227.871 990.232,229.344 990.8,229.597 991.369,230.873 991.937,232.074 992.505,231.385 993.074,233.375 993.642,234.41 994.21,234.413 994.779,235.49 995.347,235.385 995.915,237.393 996.484,237.064 997.052,235.762 997.62,237.627 998.189,238.259 998.757,238.151 999.325,238.866 999.894,236.59 1000.46,238.167 1001.03,237.94 1001.6,239.307 1002.17,240.943 1002.74,239.322 1003.3,239.796 1003.87,238.255 1004.44,236.821 1005.01,236.595 1005.58,238.37 1006.15,239.819 1006.71,239.222 1007.28,240.805 1007.85,237.019 1008.42,235.382 1008.99,236.259 1009.56,234.807 1010.12,235.623 1010.69,234.308 1011.26,235.073 1011.83,234.956 1012.4,235.492 1012.97,236.023 1013.53,233.564 1014.1,233.415 1014.67,232.181 1015.24,230.963 1015.81,231.87 1016.38,233.847 1016.94,233.355 1017.51,232.157 1018.08,233.764 1018.65,233.313 1019.22,232.999 1019.79,232.849 1020.35,232.553 1020.92,231.657 1021.49,231.674 1022.06,232.482 1022.63,231.47 1023.2,233.163 1023.76,233.995 1024.33,231.894 1024.9,230.826 1025.47,227.785 1026.04,229.01 1026.61,228.225 1027.17,230.497 1027.74,230.249 1028.31,231.164 1028.88,230.928 1029.45,230.962 1030.02,227.802 1030.58,227.827 1031.15,228.855 1031.72,228.74 1032.29,226.886 1032.86,227.164 1033.43,225.327 1033.99,225.596 1034.56,224.955 1035.13,225.22 1035.7,225.847 1036.27,226.133 1036.84,228.581 1037.4,228.62 1037.97,226.816 1038.54,227.193 1039.11,227.535 1039.68,227.705 1040.25,227.952 1040.81,228.152 1041.38,230.663 1041.95,233.914 1042.52,233.93 1043.09,233.699 1043.66,233.655 1044.22,232.569 1044.79,231.373 1045.36,233.615 1045.93,233.537 1046.5,234.38 1047.07,235.243 1047.63,235.038 1048.2,234.622 1048.77,234.362 1049.34,235.18 1049.91,234.761 1050.48,237.431 1051.05,236.032 1051.61,235.571 1052.18,235.075 1052.75,233.74 1053.32,232.18 1053.89,228.774 1054.46,228.062 1055.02,227.347 1055.59,226.497 1056.16,226.781 1056.73,226.946 1057.3,227.239 1057.87,229.468 1058.43,229.58 1059,230.842 1059.57,230.861 1060.14,230.868 1060.71,229.882 1061.28,228.889 1061.84,227.978 1062.41,227.257 1062.98,228.325 1063.55,230.554 1064.12,229.61 1064.69,229.723 1065.25,230.866 1065.82,231.932 1066.39,231.971 1066.96,230.08 1067.53,230.444 1068.1,230.503 1068.66,230.574 1069.23,229.61 1069.8,230.967 1070.37,232.091 1070.94,231.177 1071.51,232.237 1072.07,233.115 1072.64,232.837 1073.21,231.765 1073.78,233.517 1074.35,234.529 1074.92,233.205 1075.48,235.216 1076.05,236.161 1076.62,235.658 1077.19,236.354 1077.76,235.913 1078.33,235.59 1078.89,235.049 1079.46,236.963 1080.03,236.557 1080.6,237.135 1081.17,237.794 1081.74,235.008 1082.3,233.656 1082.87,233.509 1083.44,232.346 1084.01,232.226 1084.58,230 1085.15,231.213 1085.71,231.094 1086.28,230.988 1086.85,233.621 1087.42,234.401 1087.99,232.999 1088.56,232.718 1089.12,233.65 1089.69,232.401 1090.26,234.429 1090.83,234.965 1091.4,235.761 1091.97,235.565 1092.53,234.021 1093.1,233.862 1093.67,233.552 1094.24,234.339 1094.81,233.765 1095.38,232.533 1095.94,232.335 1096.51,234.145 1097.08,231.776 1097.65,231.631 1098.22,231.219 1098.79,231.004 1099.35,229.988 1099.92,227.067 1100.49,223.282 1101.06,222.631 1101.63,222.263 1102.2,223.805 1102.76,224.345 1103.33,224.871 1103.9,224.208 1104.47,223.686 1105.04,223.385 1105.61,223.724 1106.17,225.225 1106.74,225.515 1107.31,226.931 1107.88,227.388 1108.45,223.657 1109.02,224.273 1109.58,224.828 1110.15,225.397 1110.72,227.75 1111.29,227.98 1111.86,226.293 1112.43,224.776 1112.99,225.381 1113.56,225.969 1114.13,225.428 1114.7,224.619 1115.27,225.088 1115.84,225.543 1116.4,227.944 1116.97,227.324 1117.54,226.713 1118.11,228.063 1118.68,228.446 1119.25,230.876 1119.81,231.131 1120.38,234.294 1120.95,233.428 1121.52,234.46 1122.09,236.654 1122.66,234.288 1123.23,233.19 1123.79,232.104 1124.36,232.246 1124.93,232.269 1125.5,232.248 1126.07,233.37 1126.64,234.99 1127.2,235.693 1127.77,236.412 1128.34,238.343 1128.91,237.945 1129.48,237.366 1130.05,236.879 1130.61,235.287 1131.18,235.307 1131.75,235.783 1132.32,235.568 1132.89,235.321 1133.46,234.097 1134.02,233.971 1134.59,234.793 1135.16,233.458 1135.73,235.343 1136.3,236.075 1136.87,234.582 1137.43,234.418 1138,232.203 1138.57,228.147 1139.14,226.383 1139.71,229.733 1140.28,229.73 1140.84,230.75 1141.41,223.684 1141.98,222.285 1142.55,223.789 1143.12,225.29 1143.69,225.659 1144.25,224.961 1144.82,225.423 1145.39,224.002 1145.96,226.676 1146.53,227.962 1147.1,227.198 1147.66,227.512 1148.23,227.826 1148.8,229.381 1149.37,229.451 1149.94,230.525 1150.51,230.694 1151.07,231.724 1151.64,232.71 1152.21,232.772 1152.78,235.902 1153.35,235.609 1153.92,235.548 1154.48,235.282 1155.05,234.067 1155.62,234.983 1156.19,235.884 1156.76,235.573 1157.33,236.294 1157.89,236.871 1158.46,235.451 1159.03,238.184 1159.6,236.7 1160.17,232.312 1160.74,233.186 1161.3,233.004 1161.87,233.103 1162.44,232.214 1163.01,232.358 1163.58,232.373 1164.15,234.324 1164.71,235.241 1165.28,234.983 1165.85,233.748 1166.42,231.406 1166.99,232.324 1167.56,233.25 1168.12,232.141 1168.69,233.284 1169.26,235.389 1169.83,235.977 1170.4,235.608 1170.97,234.258 1171.53,231.91 1172.1,231.806 1172.67,231.536 1173.24,230.34 1173.81,229.299 1174.38,228.493 1174.94,229.75 1175.51,229.956 1176.08,230.943 1176.65,232.885 1177.22,232.607 1177.79,230.627 1178.35,231.893 1178.92,229.961 1179.49,228.223 1180.06,227.521 1180.63,227.817 1181.2,227.119 1181.76,225.369 1182.33,222.821 1182.9,224.229 1183.47,224.681 1184.04,226.032 1184.61,224.225 1185.17,226.65 1185.74,227.902 1186.31,230.403 1186.88,230.329 1187.45,231.503 1188.02,230.467 1188.58,232.623 1189.15,230.395 1189.72,230.312 1190.29,228.357 1190.86,231.459 1191.43,230.525 1192,231.808 1192.56,230.971 1193.13,227.86 1193.7,230.232 1194.27,229.07 1194.84,230.271 1195.41,231.354 1195.97,230.563 1196.54,230.556 1197.11,231.815 1197.68,230.815 1198.25,228.915 1198.82,226.095 1199.38,226.463 1199.95,224.971 1200.52,225.494 1201.09,225.858 1201.66,225.293 1202.23,225.704 1202.79,226.291 1203.36,224.491 1203.93,224.1 1204.5,224.746 1205.07,223.18 1205.64,221.895 1206.2,225.909 1206.77,225.561 1207.34,228.085 1207.91,228.288 1208.48,230.71 1209.05,230.68 1209.61,233.891 1210.18,233.818 1210.75,233.8 1211.32,234.853 1211.89,233.678 1212.46,234.497 1213.02,234.344 1213.59,238.385 1214.16,240.181 1214.73,236.52 1215.3,235.237 1215.87,235.071 1216.43,234.836 1217,233.729 1217.57,234.877 1218.14,235.313 1218.71,235.278 1219.28,236.107 1219.84,232.812 1220.41,232.621 1220.98,232.458 1221.55,234.524 1222.12,234.491 1222.69,235.386 1223.25,234.367 1223.82,236.244 1224.39,237.794 1224.96,237.379 1225.53,237.062 1226.1,235.519 1226.66,235.364 1227.23,234.939 1227.8,234.547 1228.37,236.447 1228.94,234.962 1229.51,232.669 1230.07,231.373 1230.64,232.39 1231.21,232.438 1231.78,232.31 1232.35,232.287 1232.92,231.2 1233.48,233.272 1234.05,233.083 1234.62,234.044 1235.19,235.825 1235.76,235.438 1236.33,235.198 1236.89,234.863 1237.46,234.442 1238.03,234.21 1238.6,233.848 1239.17,230.688 1239.74,230.46 1240.3,229.368 1240.87,229.29 1241.44,229.354 1242.01,229.378 1242.58,229.53 1243.15,227.608 1243.71,227.757 1244.28,227.858 1244.85,229.186 1245.42,228.389 1245.99,227.618 1246.56,227.81 1247.12,227.207 1247.69,228.254 1248.26,228.362 1248.83,228.547 1249.4,227.984 1249.97,227.998 1250.53,228.292 1251.1,228.4 1251.67,228.633 1252.24,225.851 1252.81,227.212 1253.38,226.534 1253.94,225.884 1254.51,229.28 1255.08,227.308 1255.65,223.446 1256.22,224.962 1256.79,225.72 1257.35,226.25 1257.92,225.575 1258.49,226.06 1259.06,228.506 1259.63,229.796 1260.2,227.836 1260.76,229.302 1261.33,230.51 1261.9,230.567 1262.47,230.776 1263.04,232.951 1263.61,231.75 1264.18,230.734 1264.74,234.965 1265.31,233.801 1265.88,230.786 1266.45,230.001 1267.02,229.301 1267.59,232.599 1268.15,232.681 1268.72,232.696 1269.29,233.93 1269.86,233.881 1270.43,236.064 1271,237.902 1271.56,236.711 1272.13,236.197 1272.7,235.817 1273.27,235.351 1273.84,231.137 1274.41,232.505 1274.97,234.444 1275.54,233.232 1276.11,234.355 1276.68,234.189 1277.25,235.047 1277.82,232.694 1278.38,232.422 1278.95,233.341 1279.52,234.108 1280.09,236.168 1280.66,236.851 1281.23,236.268 1281.79,235.668 1282.36,233.192 1282.93,231.922 1283.5,232.927 1284.07,232.68 1284.64,231.469 1285.2,230.522 1285.77,232.564 1286.34,231.297 1286.91,229.155 1287.48,229.157 1288.05,228.085 1288.61,224.973 1289.18,225.268 1289.75,226.738 1290.32,226.2 1290.89,226.547 1291.46,228.723 1292.02,229.006 1292.59,230.365 1293.16,230.334 1293.73,230.365 1294.3,231.336 1294.87,231.214 1295.43,230.128 1296,230.275 1296.57,231.407 1297.14,230.268 1297.71,228.149 1298.28,228.259 1298.84,231.555 1299.41,231.59 1299.98,231.745 1300.55,230.902 1301.12,229.744 1301.69,233.005 1302.25,232.819 1302.82,231.863 1303.39,230.917 1303.96,230.949 1304.53,232.006 1305.1,233.172 1305.66,235.025 1306.23,234.566 1306.8,235.136 1307.37,231.851 1307.94,232.715 1308.51,231.531 1309.07,231.707 1309.64,231.641 1310.21,229.903 1310.78,230.067 1311.35,230.103 1311.92,230.425 1312.48,232.383 1313.05,233.344 1313.62,233.287 1314.19,236.279 1314.76,235.107 1315.33,232.796 1315.89,231.888 1316.46,228.66 1317.03,228.025 1317.6,227.165 1318.17,228.634 1318.74,231.042 1319.3,231.206 1319.87,231.238 1320.44,232.108 1321.01,232.03 1321.58,232.079 1322.15,231.937 1322.71,232.846 1323.28,235.03 1323.85,238.858 1324.42,238.215 1324.99,238.818 1325.56,239.301 1326.12,237.488 1326.69,239.06 1327.26,241.464 1327.83,241.515 1328.4,240.723 1328.97,239.904 1329.53,242.314 1330.1,238.337 1330.67,239.772 1331.24,238.871 1331.81,238.093 1332.38,237.48 1332.94,236.913 1333.51,235.164 1334.08,235.709 1334.65,236.532 1335.22,237.017 1335.79,236.399 1336.36,235.844 1336.92,234.325 1337.49,232.848 1338.06,229.332 1338.63,229.35 1339.2,230.31 1339.77,232.423 1340.33,233.167 1340.9,232.72 1341.47,231.343 1342.04,232.266 1342.61,232.944 1343.18,233.845 1343.74,233.39 1344.31,232.869 1344.88,234.572 1345.45,234.02 1346.02,232.766 1346.59,233.532 1347.15,233.394 1347.72,232.87 1348.29,231.534 1348.86,230.379 1349.43,230.095 1350,230.914 1350.56,229.722 1351.13,229.559 1351.7,229.29 1352.27,229.43 1352.84,228.302 1353.41,226.382 1353.97,224.47 1354.54,223.746 1355.11,224.396 1355.68,224.763 1356.25,223.831 1356.82,222.126 1357.38,221.627 1357.95,222.033 1358.52,224.62 1359.09,224.777 1359.66,225.388 1360.23,225.656 1360.79,225.213 1361.36,225.527 1361.93,221.664 1362.5,222.249 1363.07,221.746 1363.64,222.279 1364.2,219.895 1364.77,220.709 1365.34,221.459 1365.91,222.021 1366.48,221.918 1367.05,220.555 1367.61,221.384 1368.18,225.116 1368.75,225.401 1369.32,223.759 1369.89,226.502 1370.46,228.942 1371.02,231.161 1371.59,231.224 1372.16,230.491 1372.73,229.636 1373.3,230.883 1373.87,231.995 1374.43,233.023 1375,230.887 1375.57,232.181 1376.14,233.128 1376.71,229.158 1377.28,229.344 1377.84,228.389 1378.41,229.597 1378.98,230.78 1379.55,232.085 1380.12,230.063 1380.69,231.38 1381.25,232.514 1381.82,230.645 1382.39,231.904 1382.96,231.753 1383.53,229.67 1384.1,230.709 1384.66,229.794 1385.23,230.045 1385.8,231.473 1386.37,230.584 1386.94,229.661 1387.51,231.853 1388.07,233.856 1388.64,235.629 1389.21,236.507 1389.78,236.076 1390.35,235.655 1390.92,234.413 1391.48,234.219 1392.05,234.028 1392.62,235.94 1393.19,235.688 1393.76,234.339 1394.33,233.914 1394.89,232.74 1395.46,232.622 1396.03,232.728 1396.6,234.637 1397.17,233.392 1397.74,233.108 1398.3,229.887 1398.87,231.004 1399.44,232.145 1400.01,230.355 1400.58,229.367 1401.15,230.472 1401.71,230.507 1402.28,230.632 1402.85,231.885 1403.42,232.831 1403.99,231.804 1404.56,228.773 1405.13,229.004 1405.69,230.105 1406.26,229.18 1406.83,228.272 1407.4,230.417 1407.97,230.49 1408.54,229.672 1409.1,230.619 1409.67,233.658 1410.24,234.546 1410.81,233.303 1411.38,233.131 1411.95,234.094 1412.51,233.847 1413.08,233.796 1413.65,230.533 1414.22,229.474 1414.79,230.649 1415.36,231.876 1415.92,231.795 1416.49,232.739 1417.06,234.944 1417.63,234.828 1418.2,235.62 1418.77,234.202 1419.33,233.057 1419.9,232.091 1420.47,232.079 1421.04,229.757 1421.61,231.871 1422.18,233.706 1422.74,235.508 1423.31,233.119 1423.88,233.934 1424.45,232.736 1425.02,231.654 1425.59,232.391 1426.15,234.376 1426.72,234.43 1427.29,237.227 1427.86,233.659 1428.43,234.574 1429,233.339 1429.56,233.893 1430.13,233.441 1430.7,233.998 1431.27,233.833 1431.84,233.719 1432.41,234.654 1432.97,234.229 1433.54,234.011 1434.11,232.619 1434.68,232.617 1435.25,231.625 1435.82,232.296 1436.38,230.899 1436.95,230.583 1437.52,230.608 1438.09,230.517 1438.66,230.726 1439.23,229.574 1439.79,229.668 1440.36,228.507 1440.93,228.498 1441.5,230.609 1442.07,231.513 1442.64,232.46 1443.2,233.551 1443.77,234.334 1444.34,233.846 1444.91,232.593 1445.48,232.479 1446.05,231.404 1446.61,230.346 1447.18,230.217 1447.75,231.329 1448.32,232.117 1448.89,233.057 1449.46,233.824 1450.02,233.428 1450.59,232.733 1451.16,230.684 1451.73,232.643 1452.3,232.616 1452.87,231.451 1453.43,231.177 1454,230.788 1454.57,230.777 1455.14,230.764 1455.71,230.768 1456.28,230.672 1456.84,230.599 1457.41,230.502 1457.98,228.223 1458.55,227.347 1459.12,226.471 1459.69,225.541 1460.25,226.909 1460.82,228.044 1461.39,227.313 1461.96,229.449 1462.53,226.159 1463.1,225.419 1463.66,223.687 1464.23,222.154 1464.8,222.701 1465.37,224.455 1465.94,224.58 1466.51,226.142 1467.07,226.343 1467.64,229.74 1468.21,232.991 1468.78,231.722 1469.35,229.604 1469.92,226.752 1470.48,226.099 1471.05,226.607 1471.62,227.076 1472.19,223.265 1472.76,222.864 1473.33,224.489 1473.89,225.978 1474.46,229.535 1475.03,230.665 1475.6,228.842 1476.17,230.159 1476.74,231.591 1477.31,231.618 1477.87,231.862 1478.44,230.702 1479.01,229.769 1479.58,227.932 1480.15,226.985 1480.72,227.312 1481.28,226.823 1481.85,227.068 1482.42,227.39 1482.99,225.728 1483.56,227.497 1484.13,227.019 1484.69,230.657 1485.26,229.886 1485.83,230.026 1486.4,230.13 1486.97,232.373 1487.54,232.469 1488.1,234.571 1488.67,235.275 1489.24,235.006 1489.81,234.935 1490.38,235.989 1490.95,237.954 1491.51,237.605 1492.08,236.403 1492.65,235.968 1493.22,238.044 1493.79,239.819 1494.36,239.255 1494.92,239.912 1495.49,238.264 1496.06,238.571 1496.63,239.032 1497.2,241.514 1497.77,239.7 1498.33,239.21 1498.9,238.672 1499.47,234.202 1500.04,234.064 1500.61,233.773 1501.18,233.615 1501.74,233.252 1502.31,229.802 1502.88,229.055 1503.45,226.887 1504.02,228.079 1504.59,226.539 1505.15,227.943 1505.72,226.146 1506.29,226.599 1506.86,225.629 1507.43,226.048 1508,226.399 1508.56,227.874 1509.13,226.136 1509.7,225.564 1510.27,224.845 1510.84,226.244 1511.41,227.764 1511.97,227.045 1512.54,227.263 1513.11,228.569 1513.68,227.541 1514.25,229.017 1514.82,229.359 1515.38,230.44 1515.95,230.491 1516.52,231.512 1517.09,230.363 1517.66,229.242 1518.23,230.455 1518.79,230.586 1519.36,230.771 1519.93,232.804 1520.5,232.952 1521.07,231.738 1521.64,231.754 1522.2,232.763 1522.77,231.594 1523.34,231.607 1523.91,230.604 1524.48,231.535 1525.05,233.408 1525.61,233.383 1526.18,234.21 1526.75,235.964 1527.32,236.778 1527.89,235.13 1528.46,233.738 1529.02,231.426 1529.59,232.485 1530.16,232.31 1530.73,231.304 1531.3,230.303 1531.87,230.534 1532.43,229.579 1533,229.84 1533.57,228.063 1534.14,229.514 1534.71,228.724 1535.28,228.234 1535.84,227.409 1536.41,226.813 1536.98,222.037 1537.55,222.636 1538.12,223.319 1538.69,226.291 1539.25,226.985 1539.82,224.277 1540.39,225.641 1540.96,226.958 1541.53,224.13 1542.1,225.735 1542.66,226.326 1543.23,227.676 1543.8,228.273 1544.37,225.642 1544.94,225.959 1545.51,226.651 1546.08,226.168 1546.64,226.768 1547.21,229.475 1547.78,229.541 1548.35,229.972 1548.92,231.243 1549.49,233.21 1550.05,232.407 1550.62,234.698 1551.19,233.773 1551.76,234.936 1552.33,232.744 1552.9,233.657 1553.46,237.806 1554.03,238.548 1554.6,236.83 1555.17,235.584 1555.74,237.609 1556.31,239.091 1556.87,238.354 1557.44,236.873 1558.01,237.447 1558.58,238.204 1559.15,238.639 1559.72,240.499 1560.28,238.826 1560.85,238.26 1561.42,240.931 1561.99,242.111 1562.56,241.144 1563.13,240.413 1563.69,239.561 1564.26,240.034 1564.83,240.582 1565.4,237.62 1565.97,235.13 1566.54,234.858 1567.1,234.676 1567.67,234.499 1568.24,232.203 1568.81,231.924 1569.38,231.611 1569.95,233.329 1570.51,232.23 1571.08,232.168 1571.65,232.089 1572.22,231.025 1572.79,231.23 1573.36,230.177 1573.92,229.062 1574.49,229.175 1575.06,227.336 1575.63,226.288 1576.2,226.654 1576.77,229.016 1577.33,228.026 1577.9,228.211 1578.47,228.389 1579.04,228.438 1579.61,229.506 1580.18,230.662 1580.74,231.654 1581.31,231.434 1581.88,231.277 1582.45,233.079 1583.02,231.752 1583.59,234.705 1584.15,233.376 1584.72,231.199 1585.29,230.071 1585.86,228.842 1586.43,227.941 1587,229.026 1587.56,229.343 1588.13,227.464 1588.7,227.609 1589.27,229.652 1589.84,228.852 1590.41,226.993 1590.97,227.402 1591.54,228.865 1592.11,226.888 1592.68,225.137 1593.25,226.536 1593.82,226.888 1594.38,230.188 1594.95,229.369 1595.52,229.225 1596.09,227.167 1596.66,225.555 1597.23,223.925 1597.79,223.638 1598.36,223.887 1598.93,227.451 1599.5,227.973 1600.07,228.11 1600.64,230.373 1601.2,228.543 1601.77,228.991 1602.34,229.228 1602.91,228.333 1603.48,228.485 1604.05,227.611 1604.61,226.852 1605.18,226.229 1605.75,224.577 1606.32,225.323 1606.89,225.922 1607.46,229.636 1608.02,233.017 1608.59,233.115 1609.16,233.016 1609.73,234.128 1610.3,231.735 1610.87,231.721 1611.43,229.556 1612,231.905 1612.57,229.844 1613.14,229.826 1613.71,228.918 1614.28,230.308 1614.84,230.506 1615.41,229.647 1615.98,229.768 1616.55,229.952 1617.12,232.071 1617.69,232.102 1618.26,231.919 1618.82,231.868 1619.39,231.941 1619.96,231.049 1620.53,232.279 1621.1,232.313 1621.67,232.497 1622.23,232.558 1622.8,231.565 1623.37,228.642 1623.94,233.216 1624.51,234.205 1625.08,235.268 1625.64,235.223 1626.21,233.984 1626.78,233.679 1627.35,233.696 1627.92,233.553 1628.49,234.571 1629.05,234.401 1629.62,234.063 1630.19,233.776 1630.76,234.578 1631.33,234.484 1631.9,236.657 1632.46,238.54 1633.03,237.985 1633.6,238.398 1634.17,238.092 1634.74,239.486 1635.31,237.864 1635.87,238.524 1636.44,237.008 1637.01,237.934 1637.58,236.441 1638.15,235.83 1638.72,234.498 1639.28,234.357 1639.85,235.13 1640.42,235.717 1640.99,234.223 1641.56,233.775 1642.13,232.435 1642.69,233.118 1643.26,233.934 1643.83,231.698 1644.4,230.495 1644.97,232.328 1645.54,230.224 1646.1,231.224 1646.67,231.245 1647.24,231.157 1647.81,230.166 1648.38,232.067 1648.95,232.867 1649.51,233.631 1650.08,234.475 1650.65,235.165 1651.22,235.914 1651.79,234.308 1652.36,235.08 1652.92,234.791 1653.49,233.615 1654.06,232.186 1654.63,231.121 1655.2,229.197 1655.77,230.12 1656.33,230.027 1656.9,226.937 1657.47,228.359 1658.04,229.443 1658.61,229.615 1659.18,229.807 1659.74,228.85 1660.31,229.778 1660.88,231.835 1661.45,230.472 1662.02,229.397 1662.59,229.597 1663.15,230.649 1663.72,229.59 1664.29,228.321 1664.86,229.365 1665.43,227.16 1666,229.299 1666.56,228.335 1667.13,227.453 1667.7,226.647 1668.27,229.763 1668.84,234.066 1669.41,234.56 1669.97,233.027 1670.54,233.94 1671.11,233.806 1671.68,233.482 1672.25,234.136 1672.82,233.865 1673.38,233.507 1673.95,231.988 1674.52,233.852 1675.09,232.584 1675.66,232.542 1676.23,232.426 1676.79,229.117 1677.36,228.348 1677.93,226.407 1678.5,226.671 1679.07,227.702 1679.64,227.736 1680.2,228.995 1680.77,228.09 1681.34,227.525 1681.91,228.729 1682.48,229.046 1683.05,227.946 1683.61,227.998 1684.18,227.12 1684.75,227.336 1685.32,227.697 1685.89,228.86 1686.46,232.185 1687.02,230.002 1687.59,230.028 1688.16,229.071 1688.73,232.163 1689.3,232.087 1689.87,231.864 1690.44,229.716 1691,229.858 1691.57,233.014 1692.14,231.955 1692.71,231.973 1693.28,231.76 1693.85,231.437 1694.41,232.402 1694.98,230.23 1695.55,229.216 1696.12,229.42 1696.69,231.659 1697.26,230.749 1697.82,229.512 1698.39,227.52 1698.96,228.729 1699.53,225.795 1700.1,227.039 1700.67,224.121 1701.23,226.797 1701.8,228.179 1702.37,227.344 1702.94,228.628 1703.51,228.848 1704.08,229.941 1704.64,233.008 1705.21,233.046 1705.78,234.172 1706.35,234.889 1706.92,233.775 1707.49,233.502 1708.05,232.099 1708.62,232.139 1709.19,230.857 1709.76,230.964 1710.33,228.811 1710.9,228.897 1711.46,228.965 1712.03,229.238 1712.6,231.429 1713.17,229.54 1713.74,228.806 1714.31,227.704 1714.87,229.007 1715.44,230.165 1716.01,229.229 1716.58,229.63 1717.15,229.716 1717.72,230.779 1718.28,229.908 1718.85,231.08 1719.42,231.267 1719.99,233.448 1720.56,235.351 1721.13,234.15 1721.69,233.863 1722.26,233.999 1722.83,234.901 1723.4,236.702 1723.97,236.357 1724.54,236.139 1725.1,235.532 1725.67,235.295 1726.24,234.917 1726.81,234.57 1727.38,234.344 1727.95,232.166 1728.51,232.17 1729.08,232.973 1729.65,230.811 1730.22,229.677 1730.79,228.711 1731.36,226.952 1731.92,228.204 1732.49,227.069 1733.06,226.284 1733.63,225.859 1734.2,227.107 1734.77,227.3 1735.33,227.7 1735.9,228.977 1736.47,230.427 1737.04,232.649 1737.61,232.654 1738.18,233.576 1738.74,232.349 1739.31,231.262 1739.88,228.201 1740.45,228.548 1741.02,228.901 1741.59,230.223 1742.15,229.504 1742.72,229.655 1743.29,229.934 1743.86,232.253 1744.43,231.098 1745,231.253 1745.56,231.458 1746.13,230.57 1746.7,230.589 1747.27,230.77 1747.84,229.616 1748.41,231.739 1748.97,230.808 1749.54,231.813 1750.11,231.688 1750.68,229.4 1751.25,229.602 1751.82,232.823 1752.38,231.832 1752.95,232.116 1753.52,231.997 1754.09,230.082 1754.66,231.268 1755.23,231.408 1755.79,231.238 1756.36,233.351 1756.93,233.281 1757.5,232.224 1758.07,233.194 1758.64,235.133 1759.21,235.991 1759.77,236.593 1760.34,235.347 1760.91,233.809 1761.48,233.517 1762.05,236.484 1762.62,236.094 1763.18,237.686 1763.75,238.246 1764.32,237.927 1764.89,237.449 1765.46,239.182 1766.03,237.132 1766.59,237.873 1767.16,237.242 1767.73,235.716 1768.3,232.916 1768.87,230.66 1769.44,231.641 1770,230.464 1770.57,231.424 1771.14,229.28 1771.71,231.327 1772.28,231.391 1772.85,229.137 1773.41,229.128 1773.98,231.221 1774.55,230.343 1775.12,230.157 1775.69,230.366 1776.26,230.362 1776.82,229.373 1777.39,229.43 1777.96,229.492 1778.53,229.855 1779.1,229.158 1779.67,229.317 1780.23,230.36 1780.8,233.323 1781.37,232.009 1781.94,232.632 1782.51,232.527 1783.08,230.366 1783.64,230.417 1784.21,229.35 1784.78,226.543 1785.35,227.914 1785.92,228.195 1786.49,229.427 1787.05,229.395 1787.62,231.56 1788.19,231.428 1788.76,232.26 1789.33,230.202 1789.9,231.334 1790.46,232.171 1791.03,232.172 1791.6,232.914 1792.17,231.802 1792.74,231.628 1793.31,231.609 1793.87,232.787 1794.44,231.645 1795.01,232.624 1795.58,232.411 1796.15,232.077 1796.72,231.679 1797.28,230.412 1797.85,229.29 1798.42,230.608 1798.99,230.487 1799.56,229.367 1800.13,228.306 1800.69,230.605 1801.26,229.363 1801.83,228.365 1802.4,228.55 1802.97,229.691 1803.54,226.621 1804.1,226.835 1804.67,230.265 1805.24,231.377 1805.81,230.196 1806.38,230.159 1806.95,230.129 1807.51,231.191 1808.08,230.218 1808.65,230.078 1809.22,229.225 1809.79,227.334 1810.36,228.708 1810.92,226.8 1811.49,226.263 1812.06,224.38 1812.63,224.896 1813.2,227.33 1813.77,228.754 1814.33,226.852 1814.9,227.225 1815.47,225.527 1816.04,226.937 1816.61,227.257 1817.18,229.663 1817.74,232.891 1818.31,234.849 1818.88,235.622 1819.45,236.105 1820.02,237.794 1820.59,234.546 1821.15,235.265 1821.72,232.911 1822.29,231.545 1822.86,231.394 1823.43,231.429 1824,232.348 1824.56,234.223 1825.13,233.915 1825.7,234.682 1826.27,235.333 1826.84,233.755 1827.41,235.68 1827.97,236.46 1828.54,233.87 1829.11,234.662 1829.68,236.457 1830.25,234.953 1830.82,233.52 1831.39,233.316 1831.95,233.045 1832.52,233.93 1833.09,234.733 1833.66,233.357 1834.23,231.254 1834.8,234.081 1835.36,232.837 1835.93,230.607 1836.5,231.535 1837.07,231.741 1837.64,233.711 1838.21,233.498 1838.77,233.424 1839.34,234.238 1839.91,234.03 1840.48,234.617 1841.05,231.24 1841.62,232.002 1842.18,229.694 1842.75,228.769 1843.32,229.67 1843.89,228.598 1844.46,226.537 1845.03,225.758 1845.59,229.287 1846.16,229.161 1846.73,227.071 1847.3,229.266 1847.87,228.26 1848.44,228.603 1849,228.929 1849.57,229.147 1850.14,230.349 1850.71,228.326 1851.28,228.859 1851.85,230.173 1852.41,232.127 1852.98,230.893 1853.55,230.804 1854.12,231.774 1854.69,231.87 1855.26,231.926 1855.82,233.038 1856.39,234.847 1856.96,236.732 1857.53,234.3 1858.1,236.011 1858.67,234.581 1859.23,234.123 1859.8,233.979 1860.37,233.827 1860.94,233.356 1861.51,233.085 1862.08,237.031 1862.64,236.498 1863.21,235.954 1863.78,233.437 1864.35,233.101 1864.92,233.098 1865.49,233.92 1866.05,232.649 1866.62,232.407 1867.19,230.072 1867.76,226.962 1868.33,230.16 1868.9,229.943 1869.46,229.83 1870.03,228.595 1870.6,228.591 1871.17,228.686 1871.74,227.828 1872.31,227.092 1872.87,229.418 1873.44,230.504 1874.01,230.458 1874.58,229.47 1875.15,226.396 1875.72,227.645 1876.28,227.071 1876.85,229.291 1877.42,230.429 1877.99,230.294 1878.56,233.558 1879.13,232.427 1879.69,230.242 1880.26,230.177 1880.83,230.325 1881.4,229.229 1881.97,230.314 1882.54,231.46 1883.1,230.234 1883.67,230.057 1884.24,230.02 1884.81,230.144 1885.38,229.136 1885.95,228.02 1886.51,223.956 1887.08,225.823 1887.65,224.417 1888.22,221.755 1888.79,220.342 1889.36,220.229 1889.92,222.939 1890.49,225.612 1891.06,227.071 1891.63,229.338 1892.2,229.44 1892.77,229.495 1893.33,229.859 1893.9,229.168 1894.47,230.21 1895.04,231.403 1895.61,229.42 1896.18,230.712 1896.74,231.812 1897.31,231.943 1897.88,230.743 1898.45,227.343 1899.02,229.701 1899.59,230.918 1900.16,233.16 1900.72,230.864 1901.29,231.926 1901.86,230.82 1902.43,230.838 1903,231.87 1903.57,232.829 1904.13,231.782 1904.7,230.68 1905.27,230.717 1905.84,233.805 1906.41,230.793 1906.98,229.741 1907.54,229.038 1908.11,228.216 1908.68,228.443 1909.25,228.672 1909.82,228.673 1910.39,228.724 1910.95,228.809 1911.52,229.072 1912.09,231.362 1912.66,229.317 1913.23,229.383 1913.8,229.514 1914.36,229.905 1914.93,231.189 1915.5,231.372 1916.07,232.634 1916.64,232.512 1917.21,232.504 1917.77,231.469 1918.34,229.458 1918.91,231.807 1919.48,233.872 1920.05,233.659 1920.62,233.488 1921.18,234.134 1921.75,233.949 1922.32,232.775 1922.89,232.715 1923.46,231.548 1924.03,233.633 1924.59,233.363 1925.16,233.402 1925.73,233.355 1926.3,232.053 1926.87,230.936 1927.44,229.888 1928,230.022 1928.57,231.173 1929.14,230.994 1929.71,231.099 1930.28,230.052 1930.85,229.951 1931.41,231.903 1931.98,229.589 1932.55,228.71 1933.12,227.947 1933.69,228.192 1934.26,229.509 1934.82,228.734 1935.39,227.895 1935.96,229.169 1936.53,229.311 1937.1,228.588 1937.67,228.054 1938.23,229.425 1938.8,230.761 1939.37,229.928 1939.94,228.937 1940.51,230.265 1941.08,229.17 1941.64,227.127 1942.21,227.545 1942.78,225.921 1943.35,227.409 1943.92,228.638 1944.49,230.819 1945.05,230.928 1945.62,231.143 1946.19,231.28 1946.76,233.344 1947.33,233.318 1947.9,234.375 1948.46,230.329 1949.03,229.344 1949.6,229.481 1950.17,230.616 1950.74,231.971 1951.31,231.067 1951.87,230.024 1952.44,230.516 1953.01,228.547 1953.58,228.889 1954.15,230.046 1954.72,229.218 1955.28,230.561 1955.85,227.7 1956.42,232.36 1956.99,232.283 1957.56,232.259 1958.13,233.32 1958.69,230.333 1959.26,228.116 1959.83,229.459 1960.4,229.644 1960.97,230.014 1961.54,232.022 1962.1,233.009 1962.67,232.857 1963.24,233.683 1963.81,234.475 1964.38,235.424 1964.95,233.1 1965.51,233.095 1966.08,230.91 1966.65,233.001 1967.22,230.797 1967.79,230.732 1968.36,231.799 1968.92,230.497 1969.49,231.72 1970.06,232.834 1970.63,235.831 1971.2,238.78 1971.77,235.3 1972.34,236.138 1972.9,238.762 1973.47,239.46 1974.04,240.967 1974.61,240.284 1975.18,238.62 1975.75,238.119 1976.31,236.733 1976.88,236.24 1977.45,238.028 1978.02,238.593 1978.59,237.239 1979.16,238.883 1979.72,237.091 1980.29,234.428 1980.86,238.257 1981.43,237.525 1982,237.027 1982.57,237.647 1983.13,238.024 1983.7,238.447 1984.27,237.679 1984.84,238.017 1985.41,236.536 1985.98,235.925 1986.54,236.74 1987.11,236.054 1987.68,233.548 1988.25,232.192 1988.82,233.065 1989.39,233.7 1989.95,233.412 1990.52,233.229 1991.09,229.893 1991.66,229.851 1992.23,230.656 1992.8,230.765 1993.36,229.808 1993.93,230.804 1994.5,229.827 1995.07,232.103 1995.64,231.816 1996.21,231.678 1996.77,230.255 1997.34,231.25 1997.91,230.197 1998.48,231.215 1999.05,228.949 1999.62,229.015 2000.18,228.23 2000.75,228.205 2001.32,227.456 2001.89,228.54 2002.46,227.396 2003.03,228.56 2003.59,228.634 2004.16,228.534 2004.73,228.663 2005.3,230.794 2005.87,229.688 2006.44,229.571 2007,230.573 2007.57,230.402 2008.14,230.318 2008.71,231.222 2009.28,230.153 2009.85,230.197 2010.41,229.184 2010.98,229.244 2011.55,229.413 2012.12,228.269 2012.69,229.183 2013.26,229.363 2013.82,228.611 2014.39,228.76 2014.96,226.966 2015.53,227.292 2016.1,228.458 2016.67,225.641 2017.23,225.827 2017.8,225.996 2018.37,224.178 2018.94,225.605 2019.51,227.791 2020.08,230.142 2020.64,233.176 2021.21,231.007 2021.78,228.938 2022.35,226.761 2022.92,227.051 2023.49,225.212 2024.05,224.781 2024.62,225.201 2025.19,227.933 2025.76,230.122 2026.33,229.055 2026.9,229.143 2027.46,230.429 2028.03,232.577 2028.6,233.581 2029.17,232.229 2029.74,231.176 2030.31,230.109 2030.87,233.3 2031.44,234.207 2032.01,234.748 2032.58,233.633 2033.15,231.354 2033.72,231.028 2034.28,229.832 2034.85,229.101 2035.42,228.288 2035.99,229.241 2036.56,231.612 2037.13,230.646 2037.69,229.386 2038.26,230.643 2038.83,228.722 2039.4,229.895 2039.97,229.202 2040.54,228.348 2041.11,227.425 2041.67,227.891 2042.24,228.239 2042.81,226.302 2043.38,224.454 2043.95,225.065 2044.52,225.698 2045.08,225.285 2045.65,226.883 2046.22,227.297 2046.79,227.627 2047.36,231.111 2047.93,230.029 2048.49,229.99 2049.06,230.112 2049.63,230.152 2050.2,229.056 2050.77,227.213 2051.34,227.506 2051.9,226.666 2052.47,227.938 2053.04,228.249 2053.61,229.648 2054.18,227.732 2054.75,229.009 2055.31,229.344 2055.88,229.611 2056.45,230.008 2057.02,231.207 2057.59,228.128 2058.16,227.081 2058.72,225.376 2059.29,223.923 2059.86,225.628 2060.43,226.022 2061,227.479 2061.57,226.612 2062.13,229.257 2062.7,229.535 2063.27,230.668 2063.84,229.734 2064.41,232.033 2064.98,232.251 2065.54,232.522 2066.11,233.633 2066.68,232.521 2067.25,230.758 2067.82,230.997 2068.39,231.151 2068.95,233.345 2069.52,233.429 2070.09,234.275 2070.66,235.068 2071.23,235.798 2071.8,234.622 2072.36,236.578 2072.93,239.258 2073.5,237.776 2074.07,238.501 2074.64,238.178 2075.21,238.762 2075.77,238.467 2076.34,239.14 2076.91,240.673 2077.48,241.344 2078.05,241.526 2078.62,241.191 2079.18,243.817 2079.75,243.832 2080.32,243.953 2080.89,242.977 2081.46,242.198 2082.03,240.308 2082.59,239.418 2083.16,239.017 2083.73,236.312 2084.3,236.967 2084.87,236.461 2085.44,234.828 2086,234.404 2086.57,236.083 2087.14,237.745 2087.71,238.093 2088.28,236.361 2088.85,234.738 2089.41,233.409 2089.98,230.962 2090.55,227.678 2091.12,228.734 2091.69,228.747 2092.26,228.698 2092.82,227.762 2093.39,227.798 2093.96,229.11 2094.53,227.312 2095.1,226.667 2095.67,225.784 2096.23,227.084 2096.8,227.286 2097.37,226.211 2097.94,225.331 2098.51,224.661 2099.08,225.081 2099.64,224.606 2100.21,224.778 2100.78,226.175 2101.35,228.699 2101.92,228.841 2102.49,227.958 2103.05,228.021 2103.62,228.206 2104.19,226.35 2104.76,225.777 2105.33,224.854 2105.9,226.263 2106.46,228.803 2107.03,229.039 2107.6,227.058 2108.17,227.304 2108.74,225.549 2109.31,225.819 2109.87,226.266 2110.44,229.699 2111.01,230.849 2111.58,229.699 2112.15,229.726 2112.72,226.658 2113.29,227.091 2113.85,226.385 2114.42,227.836 2114.99,229.244 2115.56,231.635 2116.13,232.513 2116.7,232.354 2117.26,231.346 2117.83,230.404 2118.4,229.381 2118.97,228.311 2119.54,230.701 2120.11,233.655 2120.67,235.562 2121.24,235.371 2121.81,236.16 2122.38,234.849 2122.95,234.555 2123.52,233.421 2124.08,234.137 2124.65,233.919 2125.22,234.727 2125.79,234.477 2126.36,237.377 2126.93,237.993 2127.49,237.489 2128.06,237.269 2128.63,237.972 2129.2,236.475 2129.77,234.126 2130.34,234.048 2130.9,229.784 2131.47,227.731 2132.04,226.13 2132.61,228.644 2133.18,228.723 2133.75,229.644 2134.31,230.654 2134.88,230.482 2135.45,229.556 2136.02,230.609 2136.59,230.515 2137.16,229.46 2137.72,231.738 2138.29,230.738 2138.86,227.863 2139.43,229.242 2140,229.459 2140.57,229.406 2141.13,227.694 2141.7,228.021 2142.27,229.048 2142.84,230.247 2143.41,230.221 2143.98,231.355 2144.54,233.422 2145.11,234.406 2145.68,236.178 2146.25,232.673 2146.82,232.58 2147.39,230.61 2147.95,231.559 2148.52,234.581 2149.09,234.454 2149.66,235.353 2150.23,234.877 2150.8,234.433 2151.36,234.206 2151.93,236.169 2152.5,235.788 2153.07,233.554 2153.64,233.425 2154.21,233.333 2154.77,233.084 2155.34,232.999 2155.91,233.928 2156.48,232.684 2157.05,231.246 2157.62,230.142 2158.18,229.751 2158.75,230.771 2159.32,231.766 2159.89,230.557 \"/>\n<path clip-path=\"url(#clip930)\" d=\"M1649.46 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1649.46 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip930)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1649.46,1245.03 2150.8,1245.03 2150.8,1089.51 1649.46,1089.51 1649.46,1245.03 \"/>\n<polyline clip-path=\"url(#clip930)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1669.53,1141.35 1789.98,1141.35 \"/>\n<path clip-path=\"url(#clip930)\" d=\"M1817.46 1125.34 L1817.46 1132.71 L1826.23 1132.71 L1826.23 1136.02 L1817.46 1136.02 L1817.46 1150.09 Q1817.46 1153.26 1818.32 1154.16 Q1819.2 1155.07 1821.86 1155.07 L1826.23 1155.07 L1826.23 1158.63 L1821.86 1158.63 Q1816.93 1158.63 1815.05 1156.8 Q1813.18 1154.95 1813.18 1150.09 L1813.18 1136.02 L1810.05 1136.02 L1810.05 1132.71 L1813.18 1132.71 L1813.18 1125.34 L1817.46 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M1843.62 1145.6 Q1838.46 1145.6 1836.47 1146.78 Q1834.48 1147.96 1834.48 1150.81 Q1834.48 1153.08 1835.96 1154.42 Q1837.46 1155.74 1840.03 1155.74 Q1843.57 1155.74 1845.7 1153.24 Q1847.86 1150.72 1847.86 1146.55 L1847.86 1145.6 L1843.62 1145.6 M1852.11 1143.84 L1852.11 1158.63 L1847.86 1158.63 L1847.86 1154.7 Q1846.4 1157.06 1844.22 1158.19 Q1842.05 1159.3 1838.9 1159.3 Q1834.92 1159.3 1832.55 1157.08 Q1830.22 1154.84 1830.22 1151.09 Q1830.22 1146.71 1833.13 1144.49 Q1836.07 1142.27 1841.88 1142.27 L1847.86 1142.27 L1847.86 1141.85 Q1847.86 1138.91 1845.91 1137.31 Q1843.99 1135.69 1840.49 1135.69 Q1838.27 1135.69 1836.17 1136.22 Q1834.06 1136.76 1832.11 1137.82 L1832.11 1133.89 Q1834.45 1132.98 1836.65 1132.54 Q1838.85 1132.08 1840.93 1132.08 Q1846.56 1132.08 1849.34 1135 Q1852.11 1137.91 1852.11 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M1875.91 1136.69 Q1875.19 1136.27 1874.34 1136.09 Q1873.5 1135.88 1872.48 1135.88 Q1868.87 1135.88 1866.93 1138.24 Q1865.01 1140.58 1865.01 1144.97 L1865.01 1158.63 L1860.73 1158.63 L1860.73 1132.71 L1865.01 1132.71 L1865.01 1136.73 Q1866.35 1134.37 1868.5 1133.24 Q1870.66 1132.08 1873.73 1132.08 Q1874.17 1132.08 1874.71 1132.15 Q1875.24 1132.2 1875.89 1132.31 L1875.91 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M1896.6 1145.37 Q1896.6 1140.74 1894.68 1138.19 Q1892.79 1135.65 1889.34 1135.65 Q1885.91 1135.65 1883.99 1138.19 Q1882.09 1140.74 1882.09 1145.37 Q1882.09 1149.97 1883.99 1152.52 Q1885.91 1155.07 1889.34 1155.07 Q1892.79 1155.07 1894.68 1152.52 Q1896.6 1149.97 1896.6 1145.37 M1900.86 1155.41 Q1900.86 1162.03 1897.92 1165.25 Q1894.98 1168.49 1888.92 1168.49 Q1886.67 1168.49 1884.68 1168.15 Q1882.69 1167.82 1880.82 1167.13 L1880.82 1162.98 Q1882.69 1164 1884.52 1164.49 Q1886.35 1164.97 1888.25 1164.97 Q1892.44 1164.97 1894.52 1162.78 Q1896.6 1160.6 1896.6 1156.18 L1896.6 1154.07 Q1895.29 1156.36 1893.23 1157.5 Q1891.17 1158.63 1888.29 1158.63 Q1883.53 1158.63 1880.61 1155 Q1877.69 1151.36 1877.69 1145.37 Q1877.69 1139.35 1880.61 1135.72 Q1883.53 1132.08 1888.29 1132.08 Q1891.17 1132.08 1893.23 1133.22 Q1895.29 1134.35 1896.6 1136.64 L1896.6 1132.71 L1900.86 1132.71 L1900.86 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M1931.81 1144.6 L1931.81 1146.69 L1912.23 1146.69 Q1912.51 1151.09 1914.87 1153.4 Q1917.25 1155.69 1921.49 1155.69 Q1923.94 1155.69 1926.23 1155.09 Q1928.55 1154.49 1930.82 1153.28 L1930.82 1157.31 Q1928.53 1158.28 1926.12 1158.79 Q1923.71 1159.3 1921.23 1159.3 Q1915.03 1159.3 1911.4 1155.69 Q1907.79 1152.08 1907.79 1145.92 Q1907.79 1139.56 1911.21 1135.83 Q1914.66 1132.08 1920.49 1132.08 Q1925.73 1132.08 1928.76 1135.46 Q1931.81 1138.82 1931.81 1144.6 M1927.55 1143.35 Q1927.51 1139.86 1925.59 1137.78 Q1923.69 1135.69 1920.54 1135.69 Q1916.98 1135.69 1914.82 1137.71 Q1912.69 1139.72 1912.37 1143.38 L1927.55 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M1943.02 1125.34 L1943.02 1132.71 L1951.79 1132.71 L1951.79 1136.02 L1943.02 1136.02 L1943.02 1150.09 Q1943.02 1153.26 1943.87 1154.16 Q1944.75 1155.07 1947.41 1155.07 L1951.79 1155.07 L1951.79 1158.63 L1947.41 1158.63 Q1942.48 1158.63 1940.61 1156.8 Q1938.73 1154.95 1938.73 1150.09 L1938.73 1136.02 L1935.61 1136.02 L1935.61 1132.71 L1938.73 1132.71 L1938.73 1125.34 L1943.02 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip930)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1669.53,1193.19 1789.98,1193.19 \"/>\n<path clip-path=\"url(#clip930)\" d=\"M1831.77 1194.82 L1831.77 1210.47 L1827.51 1210.47 L1827.51 1194.96 Q1827.51 1191.28 1826.07 1189.45 Q1824.64 1187.62 1821.77 1187.62 Q1818.32 1187.62 1816.33 1189.82 Q1814.34 1192.02 1814.34 1195.82 L1814.34 1210.47 L1810.05 1210.47 L1810.05 1184.55 L1814.34 1184.55 L1814.34 1188.57 Q1815.86 1186.24 1817.92 1185.08 Q1820.01 1183.92 1822.72 1183.92 Q1827.18 1183.92 1829.48 1186.7 Q1831.77 1189.45 1831.77 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M1850.31 1187.53 Q1846.88 1187.53 1844.89 1190.22 Q1842.9 1192.88 1842.9 1197.53 Q1842.9 1202.18 1844.87 1204.87 Q1846.86 1207.53 1850.31 1207.53 Q1853.71 1207.53 1855.7 1204.85 Q1857.69 1202.16 1857.69 1197.53 Q1857.69 1192.93 1855.7 1190.24 Q1853.71 1187.53 1850.31 1187.53 M1850.31 1183.92 Q1855.86 1183.92 1859.04 1187.53 Q1862.21 1191.14 1862.21 1197.53 Q1862.21 1203.9 1859.04 1207.53 Q1855.86 1211.14 1850.31 1211.14 Q1844.73 1211.14 1841.56 1207.53 Q1838.41 1203.9 1838.41 1197.53 Q1838.41 1191.14 1841.56 1187.53 Q1844.73 1183.92 1850.31 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M1884.29 1188.53 Q1883.57 1188.11 1882.72 1187.93 Q1881.88 1187.72 1880.86 1187.72 Q1877.25 1187.72 1875.31 1190.08 Q1873.39 1192.42 1873.39 1196.81 L1873.39 1210.47 L1869.11 1210.47 L1869.11 1184.55 L1873.39 1184.55 L1873.39 1188.57 Q1874.73 1186.21 1876.88 1185.08 Q1879.04 1183.92 1882.11 1183.92 Q1882.55 1183.92 1883.09 1183.99 Q1883.62 1184.04 1884.27 1184.15 L1884.29 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip930)\" d=\"M1908.11 1189.52 Q1909.71 1186.65 1911.93 1185.29 Q1914.15 1183.92 1917.16 1183.92 Q1921.21 1183.92 1923.41 1186.77 Q1925.61 1189.59 1925.61 1194.82 L1925.61 1210.47 L1921.33 1210.47 L1921.33 1194.96 Q1921.33 1191.24 1920.01 1189.43 Q1918.69 1187.62 1915.98 1187.62 Q1912.67 1187.62 1910.75 1189.82 Q1908.83 1192.02 1908.83 1195.82 L1908.83 1210.47 L1904.54 1210.47 L1904.54 1194.96 Q1904.54 1191.21 1903.23 1189.43 Q1901.91 1187.62 1899.15 1187.62 Q1895.89 1187.62 1893.97 1189.85 Q1892.04 1192.05 1892.04 1195.82 L1892.04 1210.47 L1887.76 1210.47 L1887.76 1184.55 L1892.04 1184.55 L1892.04 1188.57 Q1893.5 1186.19 1895.54 1185.06 Q1897.58 1183.92 1900.38 1183.92 Q1903.2 1183.92 1905.17 1185.36 Q1907.16 1186.79 1908.11 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.028 ± 0.028\n  with uncertainty of ± 0.002502871841141562\n  from 62 blocks after 5 transformations (k = 6).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables. Thankfully, the complications are handled by the following function.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01631 ± (0.00212832, 0.00206379) (MC)\n  95% confidence interval: [-4.02062, -4.01212]) (MC)\n  linear error propagation: -4.01637 ± 0.00215589\n  |δ_y| = |0.00243897| (≤ 0.1 for normal approx)\n  Blocking successful with 15 blocks after 7 transformations (k = 8).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.016314467689391, val_l = 0.0043045446831389, val_u = 0.00419639764247659)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, laststep], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip960\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip960)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip961\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip960)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip962\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip962)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip962)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip962)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip962)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip960)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip960)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip960)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip960)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip960)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip960)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1220.15 1391.71 L1220.15 1397.25 Q1217.67 1395.98 1214.99 1395.34 Q1212.32 1394.71 1209.46 1394.71 Q1205.1 1394.71 1202.9 1396.04 Q1200.74 1397.38 1200.74 1400.05 Q1200.74 1402.09 1202.3 1403.27 Q1203.85 1404.41 1208.57 1405.46 L1210.57 1405.91 Q1216.81 1407.25 1219.42 1409.7 Q1222.06 1412.12 1222.06 1416.48 Q1222.06 1421.44 1218.11 1424.34 Q1214.2 1427.23 1207.32 1427.23 Q1204.46 1427.23 1201.34 1426.66 Q1198.25 1426.12 1194.82 1425.01 L1194.82 1418.96 Q1198.06 1420.65 1201.21 1421.51 Q1204.36 1422.33 1207.45 1422.33 Q1211.59 1422.33 1213.82 1420.93 Q1216.05 1419.5 1216.05 1416.92 Q1216.05 1414.54 1214.42 1413.26 Q1212.83 1411.99 1207.39 1410.81 L1205.35 1410.33 Q1199.91 1409.19 1197.49 1406.83 Q1195.07 1404.45 1195.07 1400.31 Q1195.07 1395.28 1198.64 1392.54 Q1202.2 1389.8 1208.76 1389.8 Q1212 1389.8 1214.87 1390.28 Q1217.73 1390.76 1220.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1237.18 1380.54 L1237.18 1390.66 L1249.24 1390.66 L1249.24 1395.22 L1237.18 1395.22 L1237.18 1414.57 Q1237.18 1418.93 1238.36 1420.17 Q1239.57 1421.41 1243.23 1421.41 L1249.24 1421.41 L1249.24 1426.31 L1243.23 1426.31 Q1236.45 1426.31 1233.87 1423.8 Q1231.29 1421.25 1231.29 1414.57 L1231.29 1395.22 L1226.99 1395.22 L1226.99 1390.66 L1231.29 1390.66 L1231.29 1380.54 L1237.18 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1287.44 1407.02 L1287.44 1409.89 L1260.51 1409.89 Q1260.89 1415.94 1264.14 1419.12 Q1267.42 1422.27 1273.24 1422.27 Q1276.61 1422.27 1279.77 1421.44 Q1282.95 1420.61 1286.07 1418.96 L1286.07 1424.5 Q1282.92 1425.83 1279.61 1426.53 Q1276.3 1427.23 1272.89 1427.23 Q1264.36 1427.23 1259.36 1422.27 Q1254.4 1417.3 1254.4 1408.84 Q1254.4 1400.08 1259.11 1394.96 Q1263.85 1389.8 1271.87 1389.8 Q1279.07 1389.8 1283.24 1394.45 Q1287.44 1399.07 1287.44 1407.02 M1281.58 1405.3 Q1281.52 1400.5 1278.87 1397.63 Q1276.26 1394.77 1271.94 1394.77 Q1267.03 1394.77 1264.07 1397.54 Q1261.15 1400.31 1260.7 1405.34 L1281.58 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1302.71 1420.96 L1302.71 1439.87 L1296.83 1439.87 L1296.83 1390.66 L1302.71 1390.66 L1302.71 1396.07 Q1304.56 1392.89 1307.36 1391.36 Q1310.19 1389.8 1314.11 1389.8 Q1320.6 1389.8 1324.64 1394.96 Q1328.72 1400.12 1328.72 1408.52 Q1328.72 1416.92 1324.64 1422.08 Q1320.6 1427.23 1314.11 1427.23 Q1310.19 1427.23 1307.36 1425.71 Q1304.56 1424.15 1302.71 1420.96 M1322.64 1408.52 Q1322.64 1402.06 1319.97 1398.4 Q1317.32 1394.71 1312.68 1394.71 Q1308.03 1394.71 1305.36 1398.4 Q1302.71 1402.06 1302.71 1408.52 Q1302.71 1414.98 1305.36 1418.67 Q1308.03 1422.33 1312.68 1422.33 Q1317.32 1422.33 1319.97 1418.67 Q1322.64 1414.98 1322.64 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1361.15 1391.71 L1361.15 1397.25 Q1358.67 1395.98 1356 1395.34 Q1353.32 1394.71 1350.46 1394.71 Q1346.1 1394.71 1343.9 1396.04 Q1341.74 1397.38 1341.74 1400.05 Q1341.74 1402.09 1343.3 1403.27 Q1344.86 1404.41 1349.57 1405.46 L1351.57 1405.91 Q1357.81 1407.25 1360.42 1409.7 Q1363.06 1412.12 1363.06 1416.48 Q1363.06 1421.44 1359.11 1424.34 Q1355.2 1427.23 1348.32 1427.23 Q1345.46 1427.23 1342.34 1426.66 Q1339.25 1426.12 1335.82 1425.01 L1335.82 1418.96 Q1339.06 1420.65 1342.21 1421.51 Q1345.36 1422.33 1348.45 1422.33 Q1352.59 1422.33 1354.82 1420.93 Q1357.05 1419.5 1357.05 1416.92 Q1357.05 1414.54 1355.42 1413.26 Q1353.83 1411.99 1348.39 1410.81 L1346.35 1410.33 Q1340.91 1409.19 1338.49 1406.83 Q1336.07 1404.45 1336.07 1400.31 Q1336.07 1395.28 1339.64 1392.54 Q1343.2 1389.8 1349.76 1389.8 Q1353 1389.8 1355.87 1390.28 Q1358.73 1390.76 1361.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip962)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1148.02 2211.02,1148.02 \"/>\n<polyline clip-path=\"url(#clip962)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,990.051 2211.02,990.051 \"/>\n<polyline clip-path=\"url(#clip962)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,832.083 2211.02,832.083 \"/>\n<polyline clip-path=\"url(#clip962)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,674.115 2211.02,674.115 \"/>\n<polyline clip-path=\"url(#clip962)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,516.147 2211.02,516.147 \"/>\n<polyline clip-path=\"url(#clip962)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,358.179 2211.02,358.179 \"/>\n<polyline clip-path=\"url(#clip962)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,200.211 2211.02,200.211 \"/>\n<polyline clip-path=\"url(#clip960)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip960)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1148.02 365.751,1148.02 \"/>\n<polyline clip-path=\"url(#clip960)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,990.051 365.751,990.051 \"/>\n<polyline clip-path=\"url(#clip960)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,832.083 365.751,832.083 \"/>\n<polyline clip-path=\"url(#clip960)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,674.115 365.751,674.115 \"/>\n<polyline clip-path=\"url(#clip960)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,516.147 365.751,516.147 \"/>\n<polyline clip-path=\"url(#clip960)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,358.179 365.751,358.179 \"/>\n<polyline clip-path=\"url(#clip960)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,200.211 365.751,200.211 \"/>\n<path clip-path=\"url(#clip960)\" d=\"M298.909 1133.82 Q295.298 1133.82 293.469 1137.38 Q291.664 1140.92 291.664 1148.05 Q291.664 1155.16 293.469 1158.72 Q295.298 1162.27 298.909 1162.27 Q302.543 1162.27 304.349 1158.72 Q306.177 1155.16 306.177 1148.05 Q306.177 1140.92 304.349 1137.38 Q302.543 1133.82 298.909 1133.82 M298.909 1130.11 Q304.719 1130.11 307.775 1134.72 Q310.853 1139.3 310.853 1148.05 Q310.853 1156.78 307.775 1161.39 Q304.719 1165.97 298.909 1165.97 Q293.099 1165.97 290.02 1161.39 Q286.964 1156.78 286.964 1148.05 Q286.964 1139.3 290.02 1134.72 Q293.099 1130.11 298.909 1130.11 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M259.557 1003.4 L267.196 1003.4 L267.196 977.03 L258.886 978.697 L258.886 974.437 L267.15 972.771 L271.826 972.771 L271.826 1003.4 L279.465 1003.4 L279.465 1007.33 L259.557 1007.33 L259.557 1003.4 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M298.909 975.849 Q295.298 975.849 293.469 979.414 Q291.664 982.956 291.664 990.086 Q291.664 997.192 293.469 1000.76 Q295.298 1004.3 298.909 1004.3 Q302.543 1004.3 304.349 1000.76 Q306.177 997.192 306.177 990.086 Q306.177 982.956 304.349 979.414 Q302.543 975.849 298.909 975.849 M298.909 972.146 Q304.719 972.146 307.775 976.752 Q310.853 981.336 310.853 990.086 Q310.853 998.812 307.775 1003.42 Q304.719 1008 298.909 1008 Q293.099 1008 290.02 1003.42 Q286.964 998.812 286.964 990.086 Q286.964 981.336 290.02 976.752 Q293.099 972.146 298.909 972.146 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M262.775 845.428 L279.094 845.428 L279.094 849.363 L257.15 849.363 L257.15 845.428 Q259.812 842.673 264.395 838.043 Q269.002 833.391 270.182 832.048 Q272.428 829.525 273.307 827.789 Q274.21 826.03 274.21 824.34 Q274.21 821.585 272.266 819.849 Q270.344 818.113 267.242 818.113 Q265.043 818.113 262.59 818.877 Q260.159 819.641 257.381 821.192 L257.381 816.469 Q260.205 815.335 262.659 814.757 Q265.113 814.178 267.15 814.178 Q272.52 814.178 275.715 816.863 Q278.909 819.548 278.909 824.039 Q278.909 826.168 278.099 828.09 Q277.312 829.988 275.205 832.58 Q274.627 833.252 271.525 836.469 Q268.423 839.664 262.775 845.428 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M298.909 817.881 Q295.298 817.881 293.469 821.446 Q291.664 824.988 291.664 832.118 Q291.664 839.224 293.469 842.789 Q295.298 846.33 298.909 846.33 Q302.543 846.33 304.349 842.789 Q306.177 839.224 306.177 832.118 Q306.177 824.988 304.349 821.446 Q302.543 817.881 298.909 817.881 M298.909 814.178 Q304.719 814.178 307.775 818.784 Q310.853 823.368 310.853 832.118 Q310.853 840.844 307.775 845.451 Q304.719 850.034 298.909 850.034 Q293.099 850.034 290.02 845.451 Q286.964 840.844 286.964 832.118 Q286.964 823.368 290.02 818.784 Q293.099 814.178 298.909 814.178 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M272.914 672.761 Q276.27 673.478 278.145 675.747 Q280.043 678.015 280.043 681.349 Q280.043 686.464 276.525 689.265 Q273.006 692.066 266.525 692.066 Q264.349 692.066 262.034 691.626 Q259.742 691.21 257.289 690.353 L257.289 685.839 Q259.233 686.974 261.548 687.552 Q263.863 688.131 266.386 688.131 Q270.784 688.131 273.076 686.395 Q275.39 684.659 275.39 681.349 Q275.39 678.293 273.238 676.58 Q271.108 674.844 267.289 674.844 L263.261 674.844 L263.261 671.001 L267.474 671.001 Q270.923 671.001 272.752 669.636 Q274.58 668.247 274.58 665.654 Q274.58 662.992 272.682 661.58 Q270.807 660.145 267.289 660.145 Q265.367 660.145 263.168 660.562 Q260.969 660.978 258.33 661.858 L258.33 657.691 Q260.992 656.951 263.307 656.58 Q265.645 656.21 267.705 656.21 Q273.029 656.21 276.131 658.64 Q279.233 661.048 279.233 665.168 Q279.233 668.038 277.59 670.029 Q275.946 671.997 272.914 672.761 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M298.909 659.914 Q295.298 659.914 293.469 663.478 Q291.664 667.02 291.664 674.15 Q291.664 681.256 293.469 684.821 Q295.298 688.362 298.909 688.362 Q302.543 688.362 304.349 684.821 Q306.177 681.256 306.177 674.15 Q306.177 667.02 304.349 663.478 Q302.543 659.914 298.909 659.914 M298.909 656.21 Q304.719 656.21 307.775 660.816 Q310.853 665.4 310.853 674.15 Q310.853 682.876 307.775 687.483 Q304.719 692.066 298.909 692.066 Q293.099 692.066 290.02 687.483 Q286.964 682.876 286.964 674.15 Q286.964 665.4 290.02 660.816 Q293.099 656.21 298.909 656.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M271.594 502.941 L259.789 521.39 L271.594 521.39 L271.594 502.941 M270.367 498.867 L276.247 498.867 L276.247 521.39 L281.177 521.39 L281.177 525.279 L276.247 525.279 L276.247 533.427 L271.594 533.427 L271.594 525.279 L255.992 525.279 L255.992 520.765 L270.367 498.867 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M298.909 501.946 Q295.298 501.946 293.469 505.51 Q291.664 509.052 291.664 516.182 Q291.664 523.288 293.469 526.853 Q295.298 530.394 298.909 530.394 Q302.543 530.394 304.349 526.853 Q306.177 523.288 306.177 516.182 Q306.177 509.052 304.349 505.51 Q302.543 501.946 298.909 501.946 M298.909 498.242 Q304.719 498.242 307.775 502.848 Q310.853 507.432 310.853 516.182 Q310.853 524.908 307.775 529.515 Q304.719 534.098 298.909 534.098 Q293.099 534.098 290.02 529.515 Q286.964 524.908 286.964 516.182 Q286.964 507.432 290.02 502.848 Q293.099 498.242 298.909 498.242 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M258.793 340.899 L277.15 340.899 L277.15 344.834 L263.076 344.834 L263.076 353.306 Q264.094 352.959 265.113 352.797 Q266.131 352.612 267.15 352.612 Q272.937 352.612 276.316 355.783 Q279.696 358.954 279.696 364.371 Q279.696 369.95 276.224 373.051 Q272.752 376.13 266.432 376.13 Q264.256 376.13 261.988 375.76 Q259.742 375.389 257.335 374.649 L257.335 369.95 Q259.418 371.084 261.641 371.639 Q263.863 372.195 266.34 372.195 Q270.344 372.195 272.682 370.088 Q275.02 367.982 275.02 364.371 Q275.02 360.76 272.682 358.653 Q270.344 356.547 266.34 356.547 Q264.465 356.547 262.59 356.964 Q260.738 357.38 258.793 358.26 L258.793 340.899 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M298.909 343.978 Q295.298 343.978 293.469 347.542 Q291.664 351.084 291.664 358.214 Q291.664 365.32 293.469 368.885 Q295.298 372.426 298.909 372.426 Q302.543 372.426 304.349 368.885 Q306.177 365.32 306.177 358.214 Q306.177 351.084 304.349 347.542 Q302.543 343.978 298.909 343.978 M298.909 340.274 Q304.719 340.274 307.775 344.88 Q310.853 349.464 310.853 358.214 Q310.853 366.94 307.775 371.547 Q304.719 376.13 298.909 376.13 Q293.099 376.13 290.02 371.547 Q286.964 366.94 286.964 358.214 Q286.964 349.464 290.02 344.88 Q293.099 340.274 298.909 340.274 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M269.326 198.347 Q266.178 198.347 264.326 200.5 Q262.497 202.653 262.497 206.403 Q262.497 210.13 264.326 212.306 Q266.178 214.458 269.326 214.458 Q272.474 214.458 274.303 212.306 Q276.154 210.13 276.154 206.403 Q276.154 202.653 274.303 200.5 Q272.474 198.347 269.326 198.347 M278.608 183.695 L278.608 187.954 Q276.849 187.121 275.043 186.681 Q273.261 186.241 271.502 186.241 Q266.872 186.241 264.418 189.366 Q261.988 192.491 261.641 198.81 Q263.006 196.796 265.066 195.732 Q267.127 194.644 269.603 194.644 Q274.812 194.644 277.821 197.815 Q280.853 200.963 280.853 206.403 Q280.853 211.727 277.705 214.945 Q274.557 218.162 269.326 218.162 Q263.33 218.162 260.159 213.579 Q256.988 208.972 256.988 200.246 Q256.988 192.051 260.877 187.19 Q264.766 182.306 271.316 182.306 Q273.076 182.306 274.858 182.653 Q276.664 183 278.608 183.695 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M298.909 186.01 Q295.298 186.01 293.469 189.574 Q291.664 193.116 291.664 200.246 Q291.664 207.352 293.469 210.917 Q295.298 214.458 298.909 214.458 Q302.543 214.458 304.349 210.917 Q306.177 207.352 306.177 200.246 Q306.177 193.116 304.349 189.574 Q302.543 186.01 298.909 186.01 M298.909 182.306 Q304.719 182.306 307.775 186.912 Q310.853 191.496 310.853 200.246 Q310.853 208.972 307.775 213.579 Q304.719 218.162 298.909 218.162 Q293.099 218.162 290.02 213.579 Q286.964 208.972 286.964 200.246 Q286.964 191.496 290.02 186.912 Q293.099 182.306 298.909 182.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip962)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1031.62 400.199,1046.69 400.786,944.372 401.372,846.584 401.958,758.615 402.545,680.404 403.131,708.583 403.718,636.604 404.304,572.565 404.891,511.237 405.477,457.042 406.063,486.784 406.65,508.407 407.236,458.732 407.823,414.722 408.409,375.236 408.995,340.63 409.582,309.833 410.168,282.727 410.755,259.186 411.341,238.833 411.927,220.716 412.514,247.261 413.1,270.914 413.687,256.528 414.273,245.136 414.86,235.379 415.446,228.249 416.032,224.253 416.619,221.665 417.205,219.895 417.792,220.485 418.378,223.716 418.964,267.642 419.551,270.872 420.137,294.49 420.724,300.627 421.31,323.225 421.896,344.673 422.483,366.115 423.069,389.632 423.656,398.958 424.242,409.678 424.829,420.715 425.415,432.222 426.001,443.301 426.588,454.51 427.174,511.29 427.761,521.748 428.347,532.432 428.933,551.096 429.52,576.22 430.106,594.571 430.693,611.4 431.279,628.208 431.865,644.626 432.452,660.249 433.038,670.587 433.625,691.218 434.211,710.461 434.798,724.741 435.384,738.224 435.97,751.433 436.557,759.759 437.143,768.575 437.73,781.35 438.316,798.201 438.902,817.894 439.489,828.768 440.075,843.492 440.662,854.735 441.248,872.255 441.835,885.298 442.421,894.884 443.007,913.534 443.594,925.115 444.18,935.9 444.767,946.491 445.353,956.464 445.939,971.696 446.526,975.781 447.112,985.196 447.699,991.914 448.285,1003.37 448.871,1014.69 449.458,1023.42 450.044,1028.77 450.631,1029.71 451.217,1033.15 451.804,1041.61 452.39,1049.41 452.976,1055.06 453.563,1060.68 454.149,1070.54 454.736,1079.82 455.322,1086.58 455.908,1093.44 456.495,1097.98 457.081,1100.38 457.668,1104.31 458.254,1106.5 458.84,1114.49 459.427,1120.39 460.013,1122.38 460.6,1126.52 461.186,1128.54 461.773,1132.36 462.359,1138.53 462.945,1140.4 463.532,1142.52 464.118,1146.18 464.705,1151.68 465.291,1155.12 465.877,1156.99 466.464,1160.67 467.05,1165.66 467.637,1167.04 468.223,1173.47 468.809,1174.8 469.396,1177.64 469.982,1177.32 470.569,1181.66 471.155,1183.04 471.742,1188.79 472.328,1192.86 472.914,1193.34 473.501,1195.8 474.087,1196.5 474.674,1198.84 475.26,1199.42 475.846,1199.95 476.433,1200.65 477.019,1204.52 477.606,1206.59 478.192,1205.57 478.778,1206.3 479.365,1206.84 479.951,1211.79 480.538,1212.34 481.124,1212.95 481.711,1215 482.297,1219.74 482.883,1221.11 483.47,1225.49 484.056,1225.47 484.643,1226.69 485.229,1229.35 485.815,1227.58 486.402,1230.18 486.988,1228.76 487.575,1226.94 488.161,1225.47 488.748,1226.9 489.334,1228.26 489.92,1228.16 490.507,1229.58 491.093,1233.63 491.68,1234.69 492.266,1235.4 492.852,1236.41 493.439,1238.95 494.025,1238.73 494.612,1239.45 495.198,1240.38 495.784,1240.12 496.371,1244.94 496.957,1245.49 497.544,1244.66 498.13,1244 498.717,1243.04 499.303,1242.44 499.889,1243.22 500.476,1242.63 501.062,1242 501.649,1240.13 502.235,1241.09 502.821,1240.75 503.408,1241.35 503.994,1242.11 504.581,1238.92 505.167,1240.17 505.753,1240.91 506.34,1240.62 506.926,1241.45 507.513,1241.3 508.099,1245.02 508.686,1245.68 509.272,1246.47 509.858,1245.82 510.445,1245.21 511.031,1245.89 511.618,1247.8 512.204,1246.84 512.79,1247.3 513.377,1248.97 513.963,1250.53 514.55,1249.71 515.136,1248.83 515.722,1247.81 516.309,1246.93 516.895,1248.71 517.482,1246.43 518.068,1248.36 518.655,1247.54 519.241,1246.8 519.827,1246.29 520.414,1246.96 521,1246.05 521.587,1246.63 522.173,1248.49 522.759,1244.67 523.346,1248.18 523.932,1248.18 524.519,1248.56 525.105,1247.44 525.691,1246.63 526.278,1247.47 526.864,1246.67 527.451,1243.27 528.037,1242.91 528.624,1246.09 529.21,1245.41 529.796,1248.59 530.383,1247.66 530.969,1243.96 531.556,1243.16 532.142,1243.72 532.728,1241.7 533.315,1242.39 533.901,1243 534.488,1242.51 535.074,1243.15 535.661,1242.46 536.247,1239.55 536.833,1236.4 537.42,1235.24 538.006,1233.46 538.593,1234.73 539.179,1234.27 539.765,1231.35 540.352,1231.36 540.938,1232.56 541.525,1232.36 542.111,1236.05 542.697,1236.02 543.284,1234.03 543.87,1234.74 544.457,1237.17 545.043,1236.96 545.63,1237.92 546.216,1238.73 546.802,1237.22 547.389,1236.95 547.975,1235.24 548.562,1237.66 549.148,1237.31 549.734,1235.57 550.321,1232.9 550.907,1232.43 551.494,1232.15 552.08,1231.86 552.666,1229.05 553.253,1228.75 553.839,1230.09 554.426,1231.29 555.012,1232.62 555.599,1232.59 556.185,1232.44 556.771,1232.35 557.358,1229.58 557.944,1230.79 558.531,1231.69 559.117,1232.86 559.703,1236.58 560.29,1235.9 560.876,1235.7 561.463,1235.37 562.049,1235.05 562.635,1237.46 563.222,1237.01 563.808,1236.36 564.395,1237.01 564.981,1236.66 565.568,1237.41 566.154,1238.37 566.74,1240.65 567.327,1238.96 567.913,1239.69 568.5,1238.93 569.086,1238.11 569.672,1239.95 570.259,1237.83 570.845,1237.27 571.432,1236.85 572.018,1236.22 572.605,1238.1 573.191,1237.5 573.777,1236.58 574.364,1236.03 574.95,1239.27 575.537,1237.69 576.123,1237.02 576.709,1236.6 577.296,1236.23 577.882,1235.8 578.469,1235.21 579.055,1234.83 579.641,1234.21 580.228,1230.95 580.814,1231.96 581.401,1233.98 581.987,1234.71 582.574,1234.25 583.16,1232.32 583.746,1234.39 584.333,1233.75 584.919,1232.08 585.506,1231.63 586.092,1229.94 586.678,1232.32 587.265,1238.13 587.851,1235.79 588.438,1235.06 589.024,1237.23 589.61,1235.4 590.197,1233.53 590.783,1234.73 591.37,1235.53 591.956,1234.89 592.543,1233.13 593.129,1232.88 593.715,1232.44 594.302,1234.55 594.888,1236.37 595.475,1236.99 596.061,1237.58 596.647,1236.89 597.234,1237.72 597.82,1239.43 598.407,1233.46 598.993,1231.68 599.579,1232.58 600.166,1232.2 600.752,1230.79 601.339,1230.36 601.925,1227.46 602.512,1226.99 603.098,1225.49 603.684,1226.63 604.271,1228.8 604.857,1232.15 605.444,1230.37 606.03,1231.39 606.616,1230.87 607.203,1232.7 607.789,1232.32 608.376,1230.52 608.962,1231.46 609.548,1229.53 610.135,1230.5 610.721,1230.06 611.308,1226.98 611.894,1225.45 612.481,1224.99 613.067,1223.67 613.653,1223.67 614.24,1223.78 614.826,1223.64 615.413,1224.96 615.999,1226.03 616.585,1225.9 617.172,1225.54 617.758,1222.82 618.345,1227.99 618.931,1227.53 619.518,1227.24 620.104,1229.42 620.69,1227.74 621.277,1227.21 621.863,1230.8 622.45,1230.17 623.036,1230.03 623.622,1229.43 624.209,1229.13 624.795,1230.98 625.382,1230.62 625.968,1229.67 626.554,1230.57 627.141,1231.54 627.727,1232.11 628.314,1231.8 628.9,1233.57 629.487,1232.87 630.073,1232.15 630.659,1232.78 631.246,1234.76 631.832,1232.75 632.419,1229.39 633.005,1227.76 633.591,1224.82 634.178,1224.56 634.764,1222.84 635.351,1222.74 635.937,1222.77 636.523,1221.17 637.11,1220.97 637.696,1224.93 638.283,1225.95 638.869,1224.44 639.456,1226.82 640.042,1223.76 640.628,1222.39 641.215,1223.37 641.801,1225.81 642.388,1225.26 642.974,1223.9 643.56,1224.9 644.147,1224.78 644.733,1223.28 645.32,1224.39 645.906,1222.84 646.492,1222.72 647.079,1222.69 647.665,1221.24 648.252,1221.31 648.838,1221.1 649.425,1219.5 650.011,1220.9 650.597,1220.59 651.184,1220.65 651.77,1224.38 652.357,1224.02 652.943,1224.05 653.529,1223.87 654.116,1224.91 654.702,1223.12 655.289,1222.81 655.875,1220.13 656.462,1218.77 657.048,1217.81 657.634,1215.32 658.221,1215.56 658.807,1215.64 659.394,1216.01 659.98,1216.17 660.566,1217.41 661.153,1216.13 661.739,1216.23 662.326,1217.68 662.912,1220.35 663.498,1220.38 664.085,1220.39 664.671,1220.23 665.258,1221.43 665.844,1220.05 666.431,1220.04 667.017,1216.19 667.603,1217.59 668.19,1216.41 668.776,1214.03 669.363,1214.38 669.949,1217.23 670.535,1215.96 671.122,1216.27 671.708,1216.62 672.295,1219.25 672.881,1221.96 673.467,1220.89 674.054,1219.59 674.64,1219.77 675.227,1218.54 675.813,1218.56 676.4,1217.4 676.986,1217.48 677.572,1216.05 678.159,1214.95 678.745,1216.66 679.332,1215.69 679.918,1218.42 680.504,1219.52 681.091,1221.89 681.677,1221.34 682.264,1221.04 682.85,1218.38 683.436,1220.87 684.023,1221.74 684.609,1222.8 685.196,1222.64 685.782,1222.2 686.369,1222.13 686.955,1221.88 687.541,1218.02 688.128,1217.74 688.714,1217.73 689.301,1216.42 689.887,1215.03 690.473,1216.45 691.06,1218.99 691.646,1220.44 692.233,1217.67 692.819,1219.09 693.405,1217.53 693.992,1218.75 694.578,1218.6 695.165,1215.94 695.751,1218.68 696.338,1220.03 696.924,1221.2 697.51,1220.96 698.097,1222.04 698.683,1221.6 699.27,1217.55 699.856,1222.47 700.442,1224.73 701.029,1225.88 701.615,1226.54 702.202,1224.57 702.788,1224.14 703.375,1225.01 703.961,1224.34 704.547,1228.99 705.134,1228.43 705.72,1227.8 706.307,1231 706.893,1232.92 707.479,1229.56 708.066,1228.85 708.652,1228.37 709.239,1225.08 709.825,1224.43 710.411,1223.07 710.998,1221.3 711.584,1221 712.171,1220.87 712.757,1222.05 713.344,1217.96 713.93,1220.55 714.516,1220.29 715.103,1220.21 715.689,1218.79 716.276,1219.59 716.862,1216.57 717.448,1215.12 718.035,1215.19 718.621,1214.07 719.208,1214.31 719.794,1214.61 720.38,1217.58 720.967,1216.11 721.553,1216.02 722.14,1217.19 722.726,1217.27 723.313,1218.37 723.899,1220.91 724.485,1216.42 725.072,1219 725.658,1217.49 726.245,1217.5 726.831,1214.92 727.417,1213.82 728.004,1215.16 728.59,1216.6 729.177,1219.42 729.763,1219.45 730.349,1220.32 730.936,1218.96 731.522,1217.53 732.109,1217.14 732.695,1215.85 733.282,1211.94 733.868,1212.36 734.454,1212.55 735.041,1214.08 735.627,1214.12 736.214,1215.85 736.8,1219.56 737.386,1218.24 737.973,1218.22 738.559,1218.4 739.146,1219.58 739.732,1220.35 740.318,1217.39 740.905,1215.92 741.491,1213.36 742.078,1213.57 742.664,1213.93 743.251,1212.85 743.837,1213.02 744.423,1214.19 745.01,1214.1 745.596,1214.26 746.183,1214.26 746.769,1215.74 747.355,1218.23 747.942,1220.68 748.528,1220.28 749.115,1220 749.701,1219.72 750.288,1218.07 750.874,1219.19 751.46,1218.99 752.047,1218.64 752.633,1215.94 753.22,1215.86 753.806,1215.74 754.392,1215.84 754.979,1215.9 755.565,1218.2 756.152,1215.53 756.738,1214.48 757.324,1214.45 757.911,1214.47 758.497,1215.7 759.084,1211.95 759.67,1209.45 760.257,1212.49 760.843,1211.33 761.429,1211.3 762.016,1214.83 762.602,1216.17 763.189,1216.26 763.775,1220.21 764.361,1219.87 764.948,1218.57 765.534,1216.9 766.121,1218.36 766.707,1217.91 767.293,1217.87 767.88,1216.55 768.466,1218.9 769.053,1218.71 769.639,1218.55 770.226,1218.48 770.812,1219.78 771.398,1222.34 771.985,1221.15 772.571,1223.43 773.158,1224.48 773.744,1226.36 774.33,1225.64 774.917,1222.75 775.503,1223.82 776.09,1219.67 776.676,1215.75 777.262,1215.63 777.849,1214.22 778.435,1214.69 779.022,1216.19 779.608,1216.05 780.195,1214.58 780.781,1212.03 781.367,1213.33 781.954,1214.9 782.54,1213.6 783.127,1213.58 783.713,1215.07 784.299,1213.76 784.886,1215.21 785.472,1213.88 786.059,1211.23 786.645,1211.3 787.232,1210.71 787.818,1210.7 788.404,1210.46 788.991,1210.79 789.577,1209.65 790.164,1210.11 790.75,1206.17 791.336,1208.08 791.923,1209.73 792.509,1211.08 793.096,1210.02 793.682,1209.94 794.268,1208.85 794.855,1209.05 795.441,1210.45 796.028,1209.36 796.614,1211.29 797.201,1210.29 797.787,1206.56 798.373,1207.03 798.96,1204.91 799.546,1206.52 800.133,1207.01 800.719,1209 801.305,1207.79 801.892,1209.18 802.478,1209.44 803.065,1211.12 803.651,1213.62 804.237,1211.14 804.824,1209.86 805.41,1208.84 805.997,1209.07 806.583,1209.54 807.17,1212.44 807.756,1212.76 808.342,1212.92 808.929,1212.98 809.515,1214.31 810.102,1215.43 810.688,1216.57 811.274,1220.3 811.861,1219.99 812.447,1219.59 813.034,1220.57 813.62,1217.8 814.206,1218.66 814.793,1219.92 815.379,1218.24 815.966,1216.65 816.552,1218.1 817.139,1219.54 817.725,1220.56 818.311,1217.83 818.898,1214.77 819.484,1214.72 820.071,1217.32 820.657,1214.76 821.243,1215.99 821.83,1218.4 822.416,1217.02 823.003,1218.07 823.589,1217.8 824.175,1216.38 824.762,1216.05 825.348,1217.17 825.935,1215.83 826.521,1213.05 827.108,1211.91 827.694,1209.6 828.28,1210.05 828.867,1212.71 829.453,1211.58 830.04,1214.09 830.626,1215.28 831.212,1215.2 831.799,1213.65 832.385,1209.69 832.972,1213.79 833.558,1213.74 834.145,1215.09 834.731,1214.77 835.317,1217.14 835.904,1216.93 836.49,1216.84 837.077,1216.6 837.663,1212.76 838.249,1215.59 838.836,1215.32 839.422,1212.66 840.009,1215.04 840.595,1214.93 841.181,1214.92 841.768,1212.36 842.354,1212.43 842.941,1213.72 843.527,1215.09 844.114,1213.56 844.7,1212.36 845.286,1214.98 845.873,1217.55 846.459,1214.82 847.046,1217.35 847.632,1213.29 848.218,1213.36 848.805,1214.75 849.391,1212.26 849.978,1212.36 850.564,1212.43 851.15,1210.93 851.737,1211.1 852.323,1213.79 852.91,1215.33 853.496,1217.63 854.083,1213.36 854.669,1213.3 855.255,1213.33 855.842,1213.38 856.428,1213.2 857.015,1210.63 857.601,1213.38 858.187,1213.24 858.774,1214.28 859.36,1215.51 859.947,1214.28 860.533,1215.34 861.119,1216.71 861.706,1218.19 862.292,1218.01 862.879,1216.63 863.465,1217.82 864.052,1217.49 864.638,1219.85 865.224,1218.46 865.811,1218.14 866.397,1219.1 866.984,1218.72 867.57,1217.34 868.156,1218.62 868.743,1220.74 869.329,1221.63 869.916,1219.63 870.502,1220.55 871.089,1220.06 871.675,1218.32 872.261,1223.09 872.848,1222.72 873.434,1220.86 874.021,1219.23 874.607,1217.54 875.193,1210.73 875.78,1213.7 876.366,1212.62 876.953,1213.86 877.539,1213.78 878.125,1212.49 878.712,1212.16 879.298,1212.38 879.885,1213.79 880.471,1211.09 881.058,1215.03 881.644,1214.92 882.23,1215.83 882.817,1214.24 883.403,1215.45 883.99,1215.78 884.576,1212.84 885.162,1212.75 885.749,1211.4 886.335,1212.87 886.922,1214.5 887.508,1212.93 888.094,1211.9 888.681,1209.42 889.267,1209.71 889.854,1206.19 890.44,1207.88 891.027,1206.92 891.613,1207.15 892.199,1209.79 892.786,1208.44 893.372,1209.93 893.959,1210.03 894.545,1209.95 895.131,1211.7 895.718,1208.96 896.304,1210.36 896.891,1209.27 897.477,1208.24 898.063,1208.28 898.65,1210.85 899.236,1211.11 899.823,1211.24 900.409,1209.97 900.996,1212.78 901.582,1213.89 902.168,1215.2 902.755,1214.97 903.341,1214.88 903.928,1215.98 904.514,1214.8 905.1,1212.27 905.687,1213.38 906.273,1215.93 906.86,1217.04 907.446,1215.81 908.032,1215.73 908.619,1215.26 909.205,1212.63 909.792,1213.59 910.378,1215.96 910.965,1215.39 911.551,1215.3 912.137,1212.57 912.724,1212.41 913.31,1212.31 913.897,1212.21 914.483,1210.9 915.069,1211.04 915.656,1208.51 916.242,1210.27 916.829,1210.23 917.415,1210.46 918.002,1210.67 918.588,1209.22 919.174,1209.51 919.761,1209.71 920.347,1211.21 920.934,1215.4 921.52,1213.94 922.106,1215.07 922.693,1212.5 923.279,1212.52 923.866,1212.75 924.452,1214.01 925.038,1213.89 925.625,1209.89 926.211,1215.8 926.798,1213.11 927.384,1215.5 927.971,1217.81 928.557,1218.45 929.143,1220.66 929.73,1221.56 930.316,1223.6 930.903,1223.17 931.489,1222.83 932.075,1221.12 932.662,1221.9 933.248,1222.56 933.835,1220.97 934.421,1219 935.007,1216.3 935.594,1216.09 936.18,1215.9 936.767,1213.4 937.353,1214.75 937.94,1219.91 938.526,1221.87 939.112,1222.91 939.699,1221.28 940.285,1222.25 940.872,1220.67 941.458,1221.48 942.044,1222.42 942.631,1221.82 943.217,1221.26 943.804,1217.05 944.39,1218.32 944.976,1219.39 945.563,1221.68 946.149,1222.66 946.736,1222.29 947.322,1220.54 947.909,1217.42 948.495,1219.79 949.081,1219.53 949.668,1218.05 950.254,1220.11 950.841,1220.92 951.427,1219.16 952.013,1218.89 952.6,1217.33 953.186,1215.83 953.773,1216.67 954.359,1214.17 954.945,1212.82 955.532,1212.74 956.118,1211.3 956.705,1211.33 957.291,1208.7 957.878,1208.96 958.464,1210.45 959.05,1207.99 959.637,1207.03 960.223,1206.99 960.81,1205.92 961.396,1208.6 961.982,1206.48 962.569,1206.59 963.155,1204.7 963.742,1202.43 964.328,1204.24 964.915,1203.44 965.501,1205.17 966.087,1206.8 966.674,1206.94 967.26,1204.57 967.847,1202.57 968.433,1203.11 969.019,1200.91 969.606,1205.45 970.192,1207.36 970.779,1206.16 971.365,1207.85 971.951,1206.74 972.538,1208.28 973.124,1207.24 973.711,1207.29 974.297,1206.53 974.884,1205.75 975.47,1208.72 976.056,1208.85 976.643,1210.34 977.229,1211.84 977.816,1210.71 978.402,1208.21 978.988,1208.76 979.575,1210.21 980.161,1208.17 980.748,1208.67 981.334,1209.01 981.92,1209.15 982.507,1209.48 983.093,1210.57 983.68,1210.54 984.266,1209.51 984.853,1210.75 985.439,1208.62 986.025,1207.52 986.612,1210.09 987.198,1211.41 987.785,1215.21 988.371,1213.77 988.957,1214.8 989.544,1212.03 990.13,1212.36 990.717,1211.23 991.303,1211.53 991.889,1211.49 992.476,1215.45 993.062,1215.5 993.649,1214.29 994.235,1214.5 994.822,1216.87 995.408,1216.62 995.994,1219.01 996.581,1218.82 997.167,1219.75 997.754,1219.57 998.34,1218.94 998.926,1218.71 999.513,1215.78 1000.1,1215.8 1000.69,1218.11 1001.27,1217.74 1001.86,1217.41 1002.44,1217.29 1003.03,1217.07 1003.62,1216.9 1004.2,1213.83 1004.79,1209.77 1005.38,1209.68 1005.96,1209.9 1006.55,1209.89 1007.14,1211.19 1007.72,1212.66 1008.31,1209.84 1008.9,1209.88 1009.48,1208.76 1010.07,1207.6 1010.65,1207.75 1011.24,1208.18 1011.83,1208.42 1012.41,1207.32 1013,1207.74 1013.59,1204.3 1014.17,1205.9 1014.76,1206.36 1015.35,1206.88 1015.93,1208.46 1016.52,1210.35 1017.11,1214.58 1017.69,1215.53 1018.28,1216.5 1018.86,1217.65 1019.45,1217.41 1020.04,1217.31 1020.62,1217.05 1021.21,1214.36 1021.8,1214.26 1022.38,1212.72 1022.97,1212.71 1023.56,1212.71 1024.14,1213.95 1024.73,1215.22 1025.32,1216.41 1025.9,1217.39 1026.49,1216.15 1027.07,1213.43 1027.66,1214.63 1028.25,1214.52 1028.83,1213.13 1029.42,1211.8 1030.01,1211.73 1030.59,1214.08 1031.18,1213.65 1031.77,1213.59 1032.35,1213.52 1032.94,1214.74 1033.52,1213.08 1034.11,1211.68 1034.7,1212.8 1035.28,1211.47 1035.87,1210.34 1036.46,1210.64 1037.04,1211.95 1037.63,1209.73 1038.22,1208.41 1038.8,1209.98 1039.39,1207.41 1039.98,1206.12 1040.56,1206.63 1041.15,1205.64 1041.73,1206.07 1042.32,1206.36 1042.91,1206.93 1043.49,1204.43 1044.08,1204.79 1044.67,1203.93 1045.25,1202.95 1045.84,1206.3 1046.43,1207.9 1047.01,1208.02 1047.6,1209.42 1048.19,1209.54 1048.77,1212.3 1049.36,1210.81 1049.94,1210.96 1050.53,1211.09 1051.12,1207.8 1051.7,1206.76 1052.29,1208.44 1052.88,1208.75 1053.46,1207.54 1054.05,1209.04 1054.64,1206.47 1055.22,1205.71 1055.81,1204.62 1056.39,1204.75 1056.98,1206.58 1057.57,1206.71 1058.15,1207.03 1058.74,1205.99 1059.33,1206.63 1059.91,1208.11 1060.5,1208.32 1061.09,1206.02 1061.67,1208.92 1062.26,1209.09 1062.85,1209.59 1063.43,1209.86 1064.02,1211.13 1064.6,1214.81 1065.19,1219.62 1065.78,1220.62 1066.36,1221.28 1066.95,1219.59 1067.54,1219.09 1068.12,1218.61 1068.71,1219.58 1069.3,1220.4 1069.88,1220.96 1070.47,1220.73 1071.06,1219.04 1071.64,1218.83 1072.23,1217.2 1072.81,1216.73 1073.4,1221.47 1073.99,1220.89 1074.57,1220.37 1075.16,1219.81 1075.75,1217.02 1076.33,1216.82 1076.92,1219 1077.51,1221.01 1078.09,1220.41 1078.68,1219.82 1079.26,1220.62 1079.85,1221.76 1080.44,1221.34 1081.02,1220.92 1081.61,1218.07 1082.2,1218.92 1082.78,1219.77 1083.37,1218.2 1083.96,1217.8 1084.54,1214.82 1085.13,1214.51 1085.72,1210.55 1086.3,1211.56 1086.89,1210.2 1087.47,1207.36 1088.06,1210.2 1088.65,1211.5 1089.23,1212.82 1089.82,1212.61 1090.41,1212.56 1090.99,1212.56 1091.58,1211.12 1092.17,1209.03 1092.75,1208.05 1093.34,1207.04 1093.93,1204.48 1094.51,1204.8 1095.1,1205.36 1095.68,1205.82 1096.27,1207.68 1096.86,1207.56 1097.44,1206.86 1098.03,1207.01 1098.62,1207.21 1099.2,1208.65 1099.79,1208.74 1100.38,1207.63 1100.96,1209.22 1101.55,1206.8 1102.14,1205.77 1102.72,1207.53 1103.31,1207.65 1103.89,1210.35 1104.48,1215.39 1105.07,1217.67 1105.65,1213.6 1106.24,1213.64 1106.83,1212.4 1107.41,1221.22 1108,1223.14 1108.59,1221.49 1109.17,1219.8 1109.76,1219.49 1110.34,1220.49 1110.93,1220.07 1111.52,1221.97 1112.1,1218.82 1112.69,1217.33 1113.28,1218.36 1113.86,1218.06 1114.45,1217.76 1115.04,1215.9 1115.62,1215.85 1116.21,1214.55 1116.8,1214.36 1117.38,1213.08 1117.97,1211.83 1118.55,1211.71 1119.14,1207.74 1119.73,1207.99 1120.31,1207.96 1120.9,1208.19 1121.49,1209.61 1122.07,1208.39 1122.66,1207.16 1123.25,1207.44 1123.83,1206.42 1124.42,1205.57 1125.01,1207.21 1125.59,1203.67 1126.18,1205.36 1126.76,1210.74 1127.35,1209.61 1127.94,1209.79 1128.52,1209.62 1129.11,1210.69 1129.7,1210.48 1130.28,1210.43 1130.87,1207.95 1131.46,1206.72 1132.04,1206.95 1132.63,1208.4 1133.21,1211.27 1133.8,1210.12 1134.39,1208.93 1134.97,1210.27 1135.56,1208.81 1136.15,1206.11 1136.73,1205.27 1137.32,1205.61 1137.91,1207.2 1138.49,1210.07 1139.08,1210.18 1139.67,1210.5 1140.25,1211.99 1140.84,1213.31 1141.42,1214.36 1142.01,1212.86 1142.6,1212.64 1143.18,1211.43 1143.77,1209 1144.36,1209.31 1144.94,1211.75 1145.53,1210.18 1146.12,1212.58 1146.7,1214.78 1147.29,1215.73 1147.88,1215.45 1148.46,1216.4 1149.05,1218.68 1149.63,1221.99 1150.22,1220.44 1150.81,1220.05 1151.39,1218.52 1151.98,1220.9 1152.57,1218.05 1153.15,1216.6 1153.74,1213.55 1154.33,1213.66 1154.91,1212.21 1155.5,1213.5 1156.09,1210.82 1156.67,1213.57 1157.26,1213.69 1157.84,1216.16 1158.43,1212.35 1159.02,1213.51 1159.6,1211.92 1160.19,1212.95 1160.78,1216.84 1161.36,1213.96 1161.95,1215.43 1162.54,1213.98 1163.12,1212.65 1163.71,1213.63 1164.29,1213.66 1164.88,1212.09 1165.47,1213.33 1166.05,1215.71 1166.64,1219.29 1167.23,1218.95 1167.81,1220.92 1168.4,1220.42 1168.99,1220.11 1169.57,1220.94 1170.16,1220.57 1170.75,1219.98 1171.33,1222.34 1171.92,1222.98 1172.5,1222.35 1173.09,1224.46 1173.68,1226.25 1174.26,1221.48 1174.85,1222.04 1175.44,1219.04 1176.02,1218.86 1176.61,1215.9 1177.2,1215.95 1177.78,1211.93 1178.37,1211.96 1178.96,1211.92 1179.54,1210.53 1180.13,1211.91 1180.71,1210.82 1181.3,1210.93 1181.89,1205.77 1182.47,1203.32 1183.06,1207.72 1183.65,1209.2 1184.23,1209.31 1184.82,1209.5 1185.41,1210.8 1185.99,1209.3 1186.58,1208.66 1187.16,1208.6 1187.75,1207.46 1188.34,1211.47 1188.92,1211.67 1189.51,1211.84 1190.1,1209.21 1190.68,1209.17 1191.27,1207.97 1191.86,1209.14 1192.44,1206.7 1193.03,1204.63 1193.62,1204.98 1194.2,1205.23 1194.79,1207.03 1195.37,1207.11 1195.96,1207.54 1196.55,1207.94 1197.13,1205.47 1197.72,1207.21 1198.31,1209.99 1198.89,1211.58 1199.48,1210.3 1200.07,1210.21 1200.65,1210.34 1201.24,1210.34 1201.83,1211.67 1202.41,1209.07 1203,1209.26 1203.58,1208 1204.17,1205.69 1204.76,1206.06 1205.34,1206.26 1205.93,1206.58 1206.52,1207.02 1207.1,1207.23 1207.69,1207.61 1208.28,1211.5 1208.86,1211.8 1209.45,1213.18 1210.03,1213.32 1210.62,1213.29 1211.21,1213.3 1211.79,1213.16 1212.38,1215.6 1212.97,1215.5 1213.55,1215.45 1214.14,1213.87 1214.73,1214.92 1215.31,1215.95 1215.9,1215.79 1216.49,1216.63 1217.07,1215.42 1217.66,1215.35 1218.24,1215.19 1218.83,1215.96 1219.42,1216.02 1220,1215.73 1220.59,1215.66 1221.18,1215.44 1221.76,1218.97 1222.35,1217.4 1222.94,1218.35 1223.52,1219.27 1224.11,1215.16 1224.7,1217.67 1225.28,1222.57 1225.87,1220.87 1226.45,1220.08 1227.04,1219.55 1227.63,1220.52 1228.21,1220.05 1228.8,1217.12 1229.39,1215.57 1229.97,1218.05 1230.56,1216.31 1231.15,1214.84 1231.73,1214.78 1232.32,1214.54 1232.91,1211.82 1233.49,1213.28 1234.08,1214.54 1234.66,1209.24 1235.25,1210.61 1235.84,1214.33 1236.42,1215.32 1237.01,1216.22 1237.6,1212.14 1238.18,1212 1238.77,1211.94 1239.36,1210.35 1239.94,1210.35 1240.53,1207.54 1241.11,1205.1 1241.7,1206.44 1242.29,1206.95 1242.87,1207.3 1243.46,1207.77 1244.05,1212.95 1244.63,1211.24 1245.22,1208.77 1245.81,1210.21 1246.39,1208.75 1246.98,1208.88 1247.57,1207.73 1248.15,1210.59 1248.74,1210.89 1249.32,1209.71 1249.91,1208.69 1250.5,1206.03 1251.08,1205.04 1251.67,1205.64 1252.26,1206.27 1252.84,1209.26 1253.43,1210.81 1254.02,1209.53 1254.6,1209.79 1255.19,1211.27 1255.78,1212.45 1256.36,1209.91 1256.95,1211.46 1257.53,1214.14 1258.12,1214.18 1258.71,1215.57 1259.29,1219.52 1259.88,1219.31 1260.47,1217.62 1261.05,1218.4 1261.64,1218.09 1262.23,1215.48 1262.81,1215.19 1263.4,1213.54 1263.98,1213.6 1264.57,1213.58 1265.16,1212.39 1265.74,1212.54 1266.33,1213.89 1266.92,1213.73 1267.5,1212.34 1268.09,1213.76 1268.68,1216.43 1269.26,1216.36 1269.85,1212.31 1270.44,1212.26 1271.02,1212.05 1271.61,1213.09 1272.19,1214.55 1272.78,1210.5 1273.37,1210.69 1273.95,1211.84 1274.54,1213.01 1275.13,1212.98 1275.71,1211.66 1276.3,1210.18 1276.89,1207.8 1277.47,1208.28 1278.06,1207.48 1278.65,1211.5 1279.23,1210.4 1279.82,1211.85 1280.4,1211.62 1280.99,1211.69 1281.58,1213.85 1282.16,1213.67 1282.75,1213.66 1283.34,1213.28 1283.92,1210.84 1284.51,1209.61 1285.1,1209.63 1285.68,1205.82 1286.27,1207.16 1286.86,1209.97 1287.44,1211.06 1288.03,1215.08 1288.61,1215.94 1289.2,1217.09 1289.79,1215.35 1290.37,1212.4 1290.96,1212.2 1291.55,1212.16 1292.13,1211.07 1292.72,1211.14 1293.31,1211.06 1293.89,1211.21 1294.48,1210.05 1295.06,1207.27 1295.65,1202.35 1296.24,1202.97 1296.82,1202.04 1297.41,1201.24 1298,1203.33 1298.58,1201.19 1299.17,1197.96 1299.76,1197.64 1300.34,1198.38 1300.93,1199.18 1301.52,1195.92 1302.1,1200.67 1302.69,1198.68 1303.27,1199.6 1303.86,1200.39 1304.45,1201 1305.03,1201.55 1305.62,1203.61 1306.21,1202.83 1306.79,1201.68 1307.38,1200.94 1307.97,1201.57 1308.55,1202.14 1309.14,1203.93 1309.73,1205.71 1310.31,1210.07 1310.9,1210.09 1311.48,1208.93 1312.07,1206.31 1312.66,1205.34 1313.24,1205.85 1313.83,1207.54 1314.42,1206.38 1315,1205.5 1315.59,1204.33 1316.18,1204.83 1316.76,1205.43 1317.35,1203.25 1317.93,1203.86 1318.52,1205.36 1319.11,1204.36 1319.69,1204.47 1320.28,1205.08 1320.87,1206.71 1321.45,1208.15 1322.04,1208.52 1322.63,1207.52 1323.21,1209.02 1323.8,1209.25 1324.39,1209.63 1324.97,1209.5 1325.56,1210.95 1326.14,1213.42 1326.73,1215.91 1327.32,1216.98 1327.9,1216.35 1328.49,1216.06 1329.08,1217.37 1329.66,1219.67 1330.25,1220.51 1330.84,1220.24 1331.42,1217.25 1332.01,1217.21 1332.6,1216.61 1333.18,1216.41 1333.77,1217.1 1334.35,1216.85 1334.94,1221.79 1335.53,1221.3 1336.11,1222.14 1336.7,1221.71 1337.29,1224.88 1337.87,1224.15 1338.46,1223.47 1339.05,1223.01 1339.63,1223.36 1340.22,1225.28 1340.8,1224.51 1341.39,1220.11 1341.98,1219.9 1342.56,1222.09 1343.15,1218.85 1343.74,1215.92 1344.32,1213.2 1344.91,1213.12 1345.5,1214.04 1346.08,1215.12 1346.67,1213.6 1347.26,1212.21 1347.84,1210.9 1348.43,1213.53 1349.01,1211.92 1349.6,1210.71 1350.19,1215.63 1350.77,1215.44 1351.36,1216.68 1351.95,1215.24 1352.53,1213.8 1353.12,1212.17 1353.71,1214.68 1354.29,1213.06 1354.88,1211.63 1355.47,1213.94 1356.05,1212.38 1356.64,1212.55 1357.22,1215.14 1357.81,1213.87 1358.4,1215.03 1358.98,1214.75 1359.57,1212.99 1360.16,1214.09 1360.74,1215.26 1361.33,1212.56 1361.92,1210.03 1362.5,1207.73 1363.09,1206.52 1363.68,1206.93 1364.26,1207.34 1364.85,1208.79 1365.43,1208.95 1366.02,1209.11 1366.61,1206.64 1367.19,1206.84 1367.78,1208.42 1368.37,1208.88 1368.95,1210.28 1369.54,1210.39 1370.13,1210.22 1370.71,1207.79 1371.3,1209.26 1371.88,1209.56 1372.47,1213.55 1373.06,1212.18 1373.64,1210.76 1374.23,1212.97 1374.82,1214.23 1375.4,1212.89 1375.99,1212.86 1376.58,1212.72 1377.16,1211.17 1377.75,1209.96 1378.34,1211.21 1378.92,1214.98 1379.51,1214.75 1380.09,1213.43 1380.68,1214.61 1381.27,1215.79 1381.85,1213.18 1382.44,1213.11 1383.03,1214.15 1383.61,1213 1384.2,1209.21 1384.79,1208.03 1385.37,1209.51 1385.96,1209.67 1386.55,1208.41 1387.13,1208.65 1387.72,1208.65 1388.3,1212.67 1388.89,1214.01 1389.48,1212.58 1390.06,1211.06 1390.65,1211.14 1391.24,1209.94 1391.82,1207.13 1392.41,1207.19 1393,1206.1 1393.58,1207.77 1394.17,1209.13 1394.75,1210.3 1395.34,1210.29 1395.93,1213.17 1396.51,1210.56 1397.1,1208.24 1397.69,1205.92 1398.27,1208.81 1398.86,1207.74 1399.45,1209.17 1400.03,1210.49 1400.62,1209.55 1401.21,1207.03 1401.79,1206.88 1402.38,1203.29 1402.96,1207.62 1403.55,1206.41 1404.14,1207.88 1404.72,1207.13 1405.31,1207.63 1405.9,1206.87 1406.48,1207.01 1407.07,1207.09 1407.66,1205.85 1408.24,1206.3 1408.83,1206.49 1409.42,1208.17 1410,1208.14 1410.59,1209.34 1411.17,1208.49 1411.76,1210.21 1412.35,1210.61 1412.93,1210.6 1413.52,1210.72 1414.11,1210.48 1414.69,1211.93 1415.28,1211.85 1415.87,1213.34 1416.45,1213.41 1417.04,1210.84 1417.63,1209.72 1418.21,1208.52 1418.8,1207.12 1419.38,1206.08 1419.97,1206.62 1420.56,1208.12 1421.14,1208.23 1421.73,1209.54 1422.32,1210.86 1422.9,1211.04 1423.49,1209.67 1424.08,1208.68 1424.66,1207.48 1425.25,1206.47 1425.83,1206.9 1426.42,1207.72 1427.01,1210.24 1427.59,1207.8 1428.18,1207.8 1428.77,1209.22 1429.35,1209.56 1429.94,1210.04 1430.53,1210.07 1431.11,1210.09 1431.7,1210.09 1432.29,1210.22 1432.87,1210.33 1433.46,1210.46 1434.04,1213.33 1434.63,1214.49 1435.22,1215.68 1435.8,1216.95 1436.39,1215.38 1436.98,1214.07 1437.56,1215.06 1438.15,1212.48 1438.74,1216.63 1439.32,1217.68 1439.91,1219.97 1440.5,1222.06 1441.08,1221.6 1441.67,1219.62 1442.25,1219.63 1442.84,1217.85 1443.43,1217.72 1444.01,1213.6 1444.6,1209.56 1445.19,1211.11 1445.77,1213.74 1446.36,1217.34 1446.95,1218.26 1447.53,1217.75 1448.12,1217.28 1448.7,1222.12 1449.29,1222.81 1449.88,1220.99 1450.46,1219.3 1451.05,1214.99 1451.64,1213.62 1452.22,1215.91 1452.81,1214.32 1453.4,1212.55 1453.98,1212.51 1454.57,1212.19 1455.16,1213.62 1455.74,1214.8 1456.33,1217.13 1456.91,1218.39 1457.5,1218.08 1458.09,1218.79 1458.67,1218.59 1459.26,1218.29 1459.85,1220.45 1460.43,1218.38 1461.02,1219.06 1461.61,1214.62 1462.19,1215.6 1462.78,1215.45 1463.37,1215.35 1463.95,1212.57 1464.54,1212.42 1465.12,1209.75 1465.71,1208.78 1466.3,1209.01 1466.88,1209.01 1467.47,1207.59 1468.06,1205 1468.64,1205.27 1469.23,1206.62 1469.82,1207.04 1470.4,1204.31 1470.99,1201.9 1471.57,1202.4 1472.16,1201.37 1472.75,1203.23 1473.33,1202.67 1473.92,1201.9 1474.51,1198.58 1475.09,1200.61 1475.68,1201.02 1476.27,1201.5 1476.85,1206.94 1477.44,1207.04 1478.03,1207.33 1478.61,1207.46 1479.2,1207.86 1479.78,1212.13 1480.37,1213.09 1480.96,1215.85 1481.54,1214.47 1482.13,1216.46 1482.72,1214.83 1483.3,1217.14 1483.89,1216.7 1484.48,1218.02 1485.06,1217.64 1485.65,1217.32 1486.24,1215.6 1486.82,1217.85 1487.41,1218.68 1487.99,1219.71 1488.58,1218.13 1489.17,1216.35 1489.75,1217.33 1490.34,1217.16 1490.93,1215.62 1491.51,1216.97 1492.1,1215.22 1492.69,1214.84 1493.27,1213.53 1493.86,1213.49 1494.45,1212.22 1495.03,1213.65 1495.62,1215.07 1496.2,1213.6 1496.79,1213.46 1497.38,1213.24 1497.96,1210.7 1498.55,1210.48 1499.14,1211.95 1499.72,1211.92 1500.31,1210.64 1500.9,1212.06 1501.48,1212.04 1502.07,1213.28 1502.65,1212.13 1503.24,1209.77 1503.83,1209.75 1504.41,1208.65 1505,1206.37 1505.59,1205.23 1506.17,1207.16 1506.76,1208.82 1507.35,1211.65 1507.93,1210.32 1508.52,1210.5 1509.11,1211.73 1509.69,1212.98 1510.28,1212.71 1510.86,1213.92 1511.45,1213.64 1512.04,1215.89 1512.62,1214.15 1513.21,1215.18 1513.8,1215.85 1514.38,1216.95 1514.97,1217.79 1515.56,1223.83 1516.14,1223.31 1516.73,1222.67 1517.32,1219.16 1517.9,1218.42 1518.49,1221.89 1519.07,1220.36 1519.66,1218.86 1520.25,1222.48 1520.83,1220.65 1521.42,1220.05 1522.01,1218.48 1522.59,1217.82 1523.18,1221.18 1523.77,1220.91 1524.35,1220.18 1524.94,1220.89 1525.52,1220.27 1526.11,1216.99 1526.7,1216.95 1527.28,1216.45 1527.87,1214.89 1528.46,1212.42 1529.04,1213.38 1529.63,1210.47 1530.22,1211.55 1530.8,1210.02 1531.39,1212.68 1531.98,1211.5 1532.56,1206.22 1533.15,1205.12 1533.73,1207.1 1534.32,1208.53 1534.91,1205.87 1535.49,1203.84 1536.08,1204.58 1536.67,1206.26 1537.25,1205.4 1537.84,1204.29 1538.43,1203.57 1539.01,1201.04 1539.6,1202.92 1540.19,1203.44 1540.77,1199.9 1541.36,1198.16 1541.94,1199.11 1542.53,1199.79 1543.12,1200.64 1543.7,1199.83 1544.29,1198.92 1544.88,1202.43 1545.46,1205.4 1546.05,1205.64 1546.64,1205.78 1547.22,1205.92 1547.81,1208.72 1548.4,1209.04 1548.98,1209.41 1549.57,1207.25 1550.15,1208.57 1550.74,1208.62 1551.33,1208.7 1551.91,1210 1552.5,1209.75 1553.09,1211.07 1553.67,1212.48 1554.26,1212.39 1554.85,1214.74 1555.43,1216.14 1556.02,1215.8 1556.6,1212.96 1557.19,1214.25 1557.78,1214.1 1558.36,1213.95 1558.95,1213.95 1559.54,1212.69 1560.12,1211.28 1560.71,1210.05 1561.3,1210.31 1561.88,1210.5 1562.47,1208.24 1563.06,1209.86 1563.64,1206.14 1564.23,1207.72 1564.81,1210.39 1565.4,1211.8 1565.99,1213.36 1566.57,1214.55 1567.16,1213.27 1567.75,1212.93 1568.33,1215.32 1568.92,1215.23 1569.51,1212.76 1570.09,1213.8 1570.68,1216.17 1571.27,1215.76 1571.85,1214.03 1572.44,1216.55 1573.02,1218.84 1573.61,1217.24 1574.2,1216.92 1574.78,1212.9 1575.37,1213.95 1575.96,1214.17 1576.54,1216.79 1577.13,1218.89 1577.72,1221.06 1578.3,1221.59 1578.89,1221.47 1579.47,1217.2 1580.06,1216.64 1580.65,1216.55 1581.23,1213.8 1581.82,1216.1 1582.41,1215.61 1582.99,1215.36 1583.58,1216.53 1584.17,1216.41 1584.75,1217.56 1585.34,1218.6 1585.93,1219.48 1586.51,1221.66 1587.1,1220.89 1587.68,1220.29 1588.27,1215.78 1588.86,1211.58 1589.44,1211.41 1590.03,1211.49 1590.62,1210.05 1591.2,1212.98 1591.79,1212.98 1592.38,1215.67 1592.96,1212.77 1593.55,1215.33 1594.14,1215.39 1594.72,1216.56 1595.31,1214.87 1595.89,1214.65 1596.48,1215.74 1597.07,1215.62 1597.65,1215.42 1598.24,1212.8 1598.83,1212.74 1599.41,1212.95 1600,1212.99 1600.59,1212.88 1601.17,1213.98 1601.76,1212.44 1602.34,1212.37 1602.93,1212.11 1603.52,1212 1604.1,1213.21 1604.69,1216.85 1605.28,1211.19 1605.86,1209.9 1606.45,1208.49 1607.04,1208.44 1607.62,1209.9 1608.21,1210.21 1608.8,1210.13 1609.38,1210.25 1609.97,1208.91 1610.55,1209.04 1611.14,1209.38 1611.73,1209.67 1612.31,1208.6 1612.9,1208.63 1613.49,1205.82 1614.07,1203.31 1614.66,1203.83 1615.25,1203.14 1615.83,1203.35 1616.42,1201.42 1617.01,1203.26 1617.59,1202.26 1618.18,1203.99 1618.76,1202.68 1619.35,1204.39 1619.94,1205.03 1620.52,1206.59 1621.11,1206.68 1621.7,1205.63 1622.28,1204.8 1622.87,1206.56 1623.46,1207.05 1624.04,1208.66 1624.63,1207.78 1625.22,1206.7 1625.8,1209.44 1626.39,1210.93 1626.97,1208.65 1627.56,1211.26 1628.15,1210.03 1628.73,1210 1629.32,1210.11 1629.91,1211.35 1630.49,1208.99 1631.08,1207.96 1631.67,1206.96 1632.25,1205.84 1632.84,1204.89 1633.42,1203.85 1634.01,1205.76 1634.6,1204.71 1635.18,1204.97 1635.77,1206.36 1636.36,1208.09 1636.94,1209.4 1637.53,1211.81 1638.12,1210.7 1638.7,1210.84 1639.29,1214.73 1639.88,1213.06 1640.46,1211.77 1641.05,1211.6 1641.63,1211.4 1642.22,1212.62 1642.81,1211.52 1643.39,1208.98 1643.98,1210.67 1644.57,1212.03 1645.15,1211.82 1645.74,1210.55 1646.33,1211.88 1646.91,1213.51 1647.5,1212.27 1648.09,1215.07 1648.67,1212.49 1649.26,1213.74 1649.84,1214.91 1650.43,1216.01 1651.02,1212.23 1651.6,1206.87 1652.19,1206.18 1652.78,1208.02 1653.36,1206.83 1653.95,1206.93 1654.54,1207.27 1655.12,1206.39 1655.71,1206.66 1656.29,1207.04 1656.88,1208.89 1657.47,1206.53 1658.05,1208.05 1658.64,1208.07 1659.23,1208.18 1659.81,1212.29 1660.4,1213.3 1660.99,1215.79 1661.57,1215.58 1662.16,1214.4 1662.75,1214.44 1663.33,1212.95 1663.92,1214.14 1664.5,1214.92 1665.09,1213.5 1665.68,1213.17 1666.26,1214.59 1666.85,1214.6 1667.44,1215.78 1668.02,1215.61 1668.61,1215.25 1669.2,1213.88 1669.78,1209.78 1670.37,1212.48 1670.96,1212.48 1671.54,1213.7 1672.13,1209.89 1672.71,1209.96 1673.3,1210.21 1673.89,1212.88 1674.47,1212.74 1675.06,1208.82 1675.65,1210.1 1676.23,1210.06 1676.82,1210.31 1677.41,1210.69 1677.99,1209.48 1678.58,1212.17 1679.17,1213.46 1679.75,1213.25 1680.34,1210.49 1680.92,1211.62 1681.51,1213.17 1682.1,1215.7 1682.68,1214.28 1683.27,1218 1683.86,1216.58 1684.44,1220.31 1685.03,1217.15 1685.62,1215.54 1686.2,1216.65 1686.79,1215.14 1687.37,1214.93 1687.96,1213.62 1688.55,1209.81 1689.13,1209.71 1689.72,1208.25 1690.31,1207.28 1690.89,1208.59 1691.48,1208.86 1692.07,1210.57 1692.65,1210.49 1693.24,1212.07 1693.83,1211.95 1694.41,1214.64 1695,1214.59 1695.58,1214.56 1696.17,1214.27 1696.76,1211.58 1697.34,1213.94 1697.93,1214.89 1698.52,1216.33 1699.1,1214.78 1699.69,1213.39 1700.28,1214.58 1700.86,1214.13 1701.45,1214.06 1702.04,1212.76 1702.62,1213.86 1703.21,1212.43 1703.79,1212.19 1704.38,1209.46 1704.97,1207.01 1705.55,1208.42 1706.14,1208.7 1706.73,1208.47 1707.31,1207.26 1707.9,1204.91 1708.49,1205.2 1709.07,1205.35 1709.66,1205.99 1710.24,1206.18 1710.83,1206.55 1711.42,1206.9 1712,1207.09 1712.59,1209.75 1713.18,1209.72 1713.76,1208.69 1714.35,1211.35 1714.94,1212.78 1715.52,1214.02 1716.11,1216.27 1716.7,1214.82 1717.28,1216.3 1717.87,1217.38 1718.45,1218.03 1719.04,1216.6 1719.63,1216.46 1720.21,1216.06 1720.8,1214.55 1721.39,1212.79 1721.97,1210.02 1722.56,1209.98 1723.15,1208.79 1723.73,1210.26 1724.32,1211.6 1724.91,1215.42 1725.49,1215.06 1726.08,1214.68 1726.66,1213.09 1727.25,1214.01 1727.84,1213.86 1728.42,1213.55 1729.01,1210.67 1729.6,1212.09 1730.18,1211.9 1730.77,1211.64 1731.36,1212.74 1731.94,1212.73 1732.53,1212.52 1733.11,1213.97 1733.7,1211.35 1734.29,1212.51 1734.87,1211.25 1735.46,1211.4 1736.05,1214.25 1736.63,1214.03 1737.22,1210.04 1737.81,1211.24 1738.39,1210.87 1738.98,1210.99 1739.57,1213.37 1740.15,1211.91 1740.74,1211.73 1741.32,1211.94 1741.91,1209.29 1742.5,1209.32 1743.08,1210.59 1743.67,1209.35 1744.26,1206.87 1744.84,1205.69 1745.43,1204.81 1746.02,1206.25 1746.6,1208.08 1747.19,1208.38 1747.78,1204.59 1748.36,1204.95 1748.95,1202.82 1749.53,1201.96 1750.12,1202.18 1750.71,1202.62 1751.29,1200.28 1751.88,1202.66 1752.47,1201.58 1753.05,1202.21 1753.64,1203.98 1754.23,1207.39 1754.81,1210.17 1755.4,1208.95 1755.99,1210.41 1756.57,1209.23 1757.16,1211.9 1757.74,1209.39 1758.33,1209.31 1758.92,1212.12 1759.5,1212.18 1760.09,1209.61 1760.68,1210.71 1761.26,1210.96 1761.85,1210.72 1762.44,1210.75 1763.02,1212 1763.61,1211.97 1764.19,1211.94 1764.78,1211.53 1765.37,1212.43 1765.95,1212.28 1766.54,1211.02 1767.13,1207.33 1767.71,1208.92 1768.3,1208.12 1768.89,1208.21 1769.47,1210.89 1770.06,1210.84 1770.65,1212.19 1771.23,1215.74 1771.82,1214.14 1772.4,1213.87 1772.99,1212.41 1773.58,1212.49 1774.16,1209.82 1774.75,1209.98 1775.34,1208.93 1775.92,1211.48 1776.51,1210.08 1777.1,1209.03 1777.68,1209 1778.27,1208.05 1778.86,1209.4 1779.44,1209.6 1780.03,1209.61 1780.61,1208.12 1781.2,1209.52 1781.79,1208.28 1782.37,1208.51 1782.96,1208.89 1783.55,1209.37 1784.13,1210.94 1784.72,1212.36 1785.31,1210.76 1785.89,1210.93 1786.48,1212.34 1787.06,1213.71 1787.65,1210.91 1788.24,1212.47 1788.82,1213.76 1789.41,1213.6 1790,1212.24 1790.58,1216.11 1791.17,1215.95 1791.76,1211.77 1792.34,1210.4 1792.93,1211.88 1793.52,1211.94 1794.1,1212.01 1794.69,1210.7 1795.27,1211.92 1795.86,1212.12 1796.45,1213.21 1797.03,1215.62 1797.62,1214 1798.21,1216.44 1798.79,1217.21 1799.38,1219.68 1799.97,1219.2 1800.55,1216.32 1801.14,1214.64 1801.73,1217.07 1802.31,1216.71 1802.9,1218.92 1803.48,1217.3 1804.07,1217 1804.66,1214.1 1805.24,1210.09 1805.83,1207.59 1806.42,1206.53 1807,1205.81 1807.59,1203.56 1808.18,1207.48 1808.76,1206.5 1809.35,1209.35 1809.94,1211.02 1810.52,1211.2 1811.11,1211.15 1811.69,1209.99 1812.28,1207.61 1812.87,1207.92 1813.45,1206.89 1814.04,1205.98 1814.63,1207.86 1815.21,1205.38 1815.8,1204.29 1816.39,1207.41 1816.97,1206.35 1817.56,1204.01 1818.14,1205.77 1818.73,1207.47 1819.32,1207.67 1819.9,1207.96 1820.49,1206.8 1821.08,1205.72 1821.66,1207.36 1822.25,1209.94 1822.84,1206.4 1823.42,1207.88 1824.01,1210.64 1824.6,1209.49 1825.18,1209.22 1825.77,1206.73 1826.35,1206.94 1826.94,1206.97 1827.53,1205.9 1828.11,1206.08 1828.7,1205.27 1829.29,1209.42 1829.87,1208.47 1830.46,1211.33 1831.05,1212.52 1831.63,1211.46 1832.22,1212.83 1832.81,1215.47 1833.39,1216.55 1833.98,1212.28 1834.56,1212.48 1835.15,1215.14 1835.74,1212.5 1836.32,1213.8 1836.91,1213.45 1837.5,1213.1 1838.08,1212.88 1838.67,1211.43 1839.26,1213.98 1839.84,1213.38 1840.43,1211.79 1841.01,1209.37 1841.6,1210.89 1842.19,1211.01 1842.77,1209.8 1843.36,1209.67 1843.95,1209.58 1844.53,1208.17 1845.12,1205.85 1845.71,1203.39 1846.29,1206.31 1846.88,1204.08 1847.47,1205.76 1848.05,1206.25 1848.64,1206.36 1849.22,1206.48 1849.81,1207 1850.4,1207.29 1850.98,1202.28 1851.57,1202.81 1852.16,1203.36 1852.74,1206.4 1853.33,1206.77 1853.92,1206.72 1854.5,1205.64 1855.09,1207.17 1855.68,1207.44 1856.26,1210.33 1856.85,1214.24 1857.43,1210.35 1858.02,1210.64 1858.61,1210.81 1859.19,1212.39 1859.78,1212.46 1860.37,1212.4 1860.95,1213.53 1861.54,1214.53 1862.13,1211.73 1862.71,1210.41 1863.3,1210.48 1863.88,1211.74 1864.47,1215.61 1865.06,1214.17 1865.64,1214.97 1866.23,1212.3 1866.82,1210.93 1867.4,1211.11 1867.99,1207.05 1868.58,1208.4 1869.16,1211.11 1869.75,1211.21 1870.34,1211.05 1870.92,1212.44 1871.51,1211.13 1872.09,1209.72 1872.68,1211.24 1873.27,1211.49 1873.85,1211.56 1874.44,1211.43 1875.03,1212.72 1875.61,1214.16 1876.2,1219.3 1876.79,1217.15 1877.37,1219.03 1877.96,1222.5 1878.55,1224.48 1879.13,1224.89 1879.72,1221.79 1880.3,1218.67 1880.89,1216.99 1881.48,1214.26 1882.06,1214.17 1882.65,1214.15 1883.24,1213.73 1883.82,1214.63 1884.41,1213.37 1885,1211.9 1885.58,1214.38 1886.17,1212.8 1886.76,1211.44 1887.34,1211.26 1887.93,1212.74 1888.51,1217 1889.1,1214.15 1889.69,1212.66 1890.27,1209.86 1890.86,1212.68 1891.45,1211.36 1892.03,1212.73 1892.62,1212.71 1893.21,1211.43 1893.79,1210.21 1894.38,1211.48 1894.96,1212.84 1895.55,1212.81 1896.14,1208.95 1896.72,1212.66 1897.31,1213.98 1897.9,1214.89 1898.48,1215.97 1899.07,1215.76 1899.66,1215.54 1900.24,1215.6 1900.83,1215.6 1901.42,1215.55 1902,1215.28 1902.59,1212.46 1903.17,1215.02 1903.76,1214.98 1904.35,1214.86 1904.93,1214.41 1905.52,1212.84 1906.11,1212.6 1906.69,1211.02 1907.28,1211.13 1907.87,1211.11 1908.45,1212.37 1909.04,1214.88 1909.63,1211.98 1910.21,1209.38 1910.8,1209.58 1911.38,1209.73 1911.97,1208.86 1912.56,1209.02 1913.14,1210.43 1913.73,1210.46 1914.32,1211.89 1914.9,1209.26 1915.49,1209.54 1916.08,1209.44 1916.66,1209.44 1917.25,1211.02 1917.83,1212.39 1918.42,1213.71 1919.01,1213.57 1919.59,1212.16 1920.18,1212.38 1920.77,1212.26 1921.35,1213.57 1921.94,1213.72 1922.53,1211.31 1923.11,1214.18 1923.7,1215.32 1924.29,1216.33 1924.87,1216.1 1925.46,1214.53 1926.04,1215.54 1926.63,1216.65 1927.22,1215.14 1927.8,1215.01 1928.39,1215.95 1928.98,1216.68 1929.56,1215.05 1930.15,1213.42 1930.74,1214.47 1931.32,1215.74 1931.91,1214.13 1932.5,1215.52 1933.08,1218.12 1933.67,1217.7 1934.25,1219.81 1934.84,1218.08 1935.43,1216.64 1936.01,1213.98 1936.6,1213.85 1937.19,1213.58 1937.77,1213.41 1938.36,1210.82 1938.95,1210.8 1939.53,1209.42 1940.12,1214.41 1940.71,1215.66 1941.29,1215.54 1941.88,1214.16 1942.46,1212.48 1943.05,1213.59 1943.64,1214.89 1944.22,1214.31 1944.81,1216.78 1945.4,1216.42 1945.98,1215.03 1946.57,1216.09 1947.16,1214.46 1947.74,1218.05 1948.33,1212.3 1948.91,1212.37 1949.5,1212.37 1950.09,1211.02 1950.67,1214.7 1951.26,1217.49 1951.85,1215.89 1952.43,1215.7 1953.02,1215.27 1953.61,1212.79 1954.19,1211.53 1954.78,1211.68 1955.37,1210.6 1955.95,1209.54 1956.54,1208.27 1957.12,1211.08 1957.71,1211.04 1958.3,1213.73 1958.88,1211.11 1959.47,1213.83 1960.06,1213.92 1960.64,1212.59 1961.23,1214.21 1961.82,1212.69 1962.4,1211.28 1962.99,1207.48 1963.58,1203.65 1964.16,1207.84 1964.75,1206.68 1965.33,1203.26 1965.92,1202.19 1966.51,1200.08 1967.09,1200.7 1967.68,1202.57 1968.27,1203.02 1968.85,1204.6 1969.44,1205.08 1970.03,1202.7 1970.61,1201.82 1971.2,1203.34 1971.78,1201.12 1972.37,1203.19 1972.96,1206.39 1973.54,1201.49 1974.13,1202.24 1974.72,1202.71 1975.3,1201.78 1975.89,1201.15 1976.48,1200.45 1977.06,1201.23 1977.65,1200.65 1978.24,1202.34 1978.82,1202.98 1979.41,1201.84 1979.99,1202.56 1980.58,1205.59 1981.17,1207.23 1981.75,1206.11 1982.34,1205.27 1982.93,1205.57 1983.51,1205.74 1984.1,1209.86 1984.69,1209.95 1985.27,1208.97 1985.86,1208.85 1986.45,1210.05 1987.03,1208.84 1987.62,1210.07 1988.2,1207.26 1988.79,1207.59 1989.38,1207.75 1989.96,1209.52 1990.55,1208.29 1991.14,1209.61 1991.72,1208.36 1992.31,1211.19 1992.9,1211.16 1993.48,1212.19 1994.07,1212.3 1994.65,1213.3 1995.24,1212.04 1995.83,1213.53 1996.41,1212.17 1997,1212.14 1997.59,1212.33 1998.17,1212.23 1998.76,1209.63 1999.35,1211.02 1999.93,1211.2 2000.52,1209.99 2001.11,1210.22 2001.69,1210.34 2002.28,1209.23 2002.86,1210.56 2003.45,1210.53 2004.04,1211.82 2004.62,1211.8 2005.21,1211.63 2005.8,1213.1 2006.38,1212.03 2006.97,1211.85 2007.56,1212.84 2008.14,1212.71 2008.73,1215.01 2009.32,1214.71 2009.9,1213.35 2010.49,1216.92 2011.07,1216.83 2011.66,1216.75 2012.25,1219.14 2012.83,1217.53 2013.42,1214.94 2014.01,1212.09 2014.59,1208.31 2015.18,1210.98 2015.77,1213.57 2016.35,1216.34 2016.94,1216.09 2017.53,1218.48 2018.11,1219.16 2018.7,1218.79 2019.28,1215.53 2019.87,1212.88 2020.46,1214.23 2021.04,1214.18 2021.63,1212.62 2022.22,1209.95 2022.8,1208.65 2023.39,1210.29 2023.98,1211.58 2024.56,1212.91 2025.15,1208.94 2025.73,1207.75 2026.32,1207 2026.91,1208.31 2027.49,1211.1 2028.08,1211.51 2028.67,1213.01 2029.25,1213.95 2029.84,1215.02 2030.43,1213.9 2031.01,1210.98 2031.6,1212.17 2032.19,1213.76 2032.77,1212.23 2033.36,1214.65 2033.94,1213.24 2034.53,1214.14 2035.12,1215.25 2035.7,1216.47 2036.29,1215.98 2036.88,1215.63 2037.46,1218.11 2038.05,1220.53 2038.64,1219.94 2039.22,1219.3 2039.81,1219.95 2040.4,1218.1 2040.98,1217.69 2041.57,1217.37 2042.15,1213.1 2042.74,1214.46 2043.33,1214.53 2043.91,1214.41 2044.5,1214.38 2045.09,1215.78 2045.67,1218.13 2046.26,1217.86 2046.85,1219 2047.43,1217.52 2048.02,1217.21 2048.6,1215.53 2049.19,1217.96 2049.78,1216.45 2050.36,1216.08 2050.95,1215.8 2051.54,1215.34 2052.12,1213.87 2052.71,1217.71 2053.3,1219.09 2053.88,1221.32 2054.47,1223.27 2055.06,1221.32 2055.64,1220.96 2056.23,1219.27 2056.81,1220.44 2057.4,1217.25 2057.99,1216.95 2058.57,1215.58 2059.16,1216.76 2059.75,1213.91 2060.33,1213.62 2060.92,1213.25 2061.51,1211.82 2062.09,1213.16 2062.68,1215.33 2063.27,1215.04 2063.85,1214.85 2064.44,1212.1 2065.02,1211.94 2065.61,1210.83 2066.2,1209.75 2066.78,1208.74 2067.37,1210.1 2067.96,1207.56 2068.54,1204.05 2069.13,1205.72 2069.72,1204.64 2070.3,1204.86 2070.89,1203.95 2071.48,1204.14 2072.06,1203.11 2072.65,1200.98 2073.23,1199.89 2073.82,1199.41 2074.41,1199.58 2074.99,1196.01 2075.58,1195.67 2076.17,1195.21 2076.75,1196.13 2077.34,1196.82 2077.93,1198.94 2078.51,1199.84 2079.1,1200.14 2079.68,1203.35 2080.27,1202.4 2080.86,1202.9 2081.44,1204.82 2082.03,1205.26 2082.62,1203.07 2083.2,1200.86 2083.79,1200.25 2084.38,1202.26 2084.96,1204.18 2085.55,1205.76 2086.14,1208.77 2086.72,1212.88 2087.31,1211.64 2087.89,1211.69 2088.48,1211.81 2089.07,1213.03 2089.65,1213.07 2090.24,1211.51 2090.83,1213.81 2091.41,1214.71 2092,1215.92 2092.59,1214.43 2093.17,1214.28 2093.76,1215.71 2094.35,1216.93 2094.93,1217.9 2095.52,1217.54 2096.1,1218.28 2096.69,1218.22 2097.28,1216.64 2097.86,1213.61 2098.45,1213.5 2099.04,1214.66 2099.62,1214.66 2100.21,1214.5 2100.8,1216.89 2101.38,1217.72 2101.97,1219 2102.55,1217.4 2103.14,1214.35 2103.73,1214.11 2104.31,1216.64 2104.9,1216.43 2105.49,1218.71 2106.07,1218.51 2106.66,1218.09 2107.25,1213.92 2107.83,1212.52 2108.42,1213.96 2109.01,1213.96 2109.59,1217.83 2110.18,1217.4 2110.76,1218.38 2111.35,1216.69 2111.94,1215.01 2112.52,1212.06 2113.11,1210.95 2113.7,1211.12 2114.28,1212.35 2114.87,1213.53 2115.46,1214.82 2116.04,1216.2 2116.63,1213.28 2117.22,1209.59 2117.8,1207.14 2118.39,1207.27 2118.97,1206.17 2119.56,1207.7 2120.15,1207.97 2120.73,1209.31 2121.32,1208.36 2121.91,1208.56 2122.49,1207.48 2123.08,1207.7 2123.67,1203.97 2124.25,1203.04 2124.84,1203.51 2125.42,1203.63 2126.01,1202.59 2126.6,1204.31 2127.18,1207.13 2127.77,1207.16 2128.36,1212.43 2128.94,1215.03 2129.53,1217.11 2130.12,1214.09 2130.7,1214.06 2131.29,1212.96 2131.88,1211.74 2132.46,1211.96 2133.05,1213.14 2133.63,1211.86 2134.22,1211.99 2134.81,1213.33 2135.39,1210.52 2135.98,1211.75 2136.57,1215.36 2137.15,1213.72 2137.74,1213.49 2138.33,1213.6 2138.91,1215.78 2139.5,1215.46 2140.09,1214.25 2140.67,1212.8 2141.26,1212.86 2141.84,1211.46 2142.43,1208.86 2143.02,1207.57 2143.6,1205.27 2144.19,1209.54 2144.78,1209.62 2145.36,1212.05 2145.95,1210.88 2146.54,1207.08 2147.12,1207.15 2147.71,1205.94 2148.3,1206.44 2148.88,1206.9 2149.47,1207.11 2150.05,1204.57 2150.64,1204.92 2151.23,1207.61 2151.81,1207.72 2152.4,1207.78 2152.99,1208.03 2153.57,1208.09 2154.16,1206.88 2154.75,1208.37 2155.33,1210.14 2155.92,1211.52 2156.5,1212.03 2157.09,1210.79 2157.68,1209.55 2158.26,1211.05 \"/>\n<path clip-path=\"url(#clip962)\" d=\"M986.025 1212.08 L986.612 1212.08 L987.198 1212.08 L987.785 1212.08 L988.371 1212.08 L988.957 1212.08 L989.544 1212.08 L990.13 1212.08 L990.717 1212.08 L991.303 1212.08 L991.889 1212.08 L992.476 1212.08 L993.062 1212.08 L993.649 1212.08 L994.235 1212.08 L994.822 1212.08 L995.408 1212.08 L995.994 1212.08 L996.581 1212.08 L997.167 1212.08 L997.754 1212.08 L998.34 1212.08 L998.926 1212.08 L999.513 1212.08 L1000.1 1212.08 L1000.69 1212.08 L1001.27 1212.08 L1001.86 1212.08 L1002.44 1212.08 L1003.03 1212.08 L1003.62 1212.08 L1004.2 1212.08 L1004.79 1212.08 L1005.38 1212.08 L1005.96 1212.08 L1006.55 1212.08 L1007.14 1212.08 L1007.72 1212.08 L1008.31 1212.08 L1008.9 1212.08 L1009.48 1212.08 L1010.07 1212.08 L1010.65 1212.08 L1011.24 1212.08 L1011.83 1212.08 L1012.41 1212.08 L1013 1212.08 L1013.59 1212.08 L1014.17 1212.08 L1014.76 1212.08 L1015.35 1212.08 L1015.93 1212.08 L1016.52 1212.08 L1017.11 1212.08 L1017.69 1212.08 L1018.28 1212.08 L1018.86 1212.08 L1019.45 1212.08 L1020.04 1212.08 L1020.62 1212.08 L1021.21 1212.08 L1021.8 1212.08 L1022.38 1212.08 L1022.97 1212.08 L1023.56 1212.08 L1024.14 1212.08 L1024.73 1212.08 L1025.32 1212.08 L1025.9 1212.08 L1026.49 1212.08 L1027.07 1212.08 L1027.66 1212.08 L1028.25 1212.08 L1028.83 1212.08 L1029.42 1212.08 L1030.01 1212.08 L1030.59 1212.08 L1031.18 1212.08 L1031.77 1212.08 L1032.35 1212.08 L1032.94 1212.08 L1033.52 1212.08 L1034.11 1212.08 L1034.7 1212.08 L1035.28 1212.08 L1035.87 1212.08 L1036.46 1212.08 L1037.04 1212.08 L1037.63 1212.08 L1038.22 1212.08 L1038.8 1212.08 L1039.39 1212.08 L1039.98 1212.08 L1040.56 1212.08 L1041.15 1212.08 L1041.73 1212.08 L1042.32 1212.08 L1042.91 1212.08 L1043.49 1212.08 L1044.08 1212.08 L1044.67 1212.08 L1045.25 1212.08 L1045.84 1212.08 L1046.43 1212.08 L1047.01 1212.08 L1047.6 1212.08 L1048.19 1212.08 L1048.77 1212.08 L1049.36 1212.08 L1049.94 1212.08 L1050.53 1212.08 L1051.12 1212.08 L1051.7 1212.08 L1052.29 1212.08 L1052.88 1212.08 L1053.46 1212.08 L1054.05 1212.08 L1054.64 1212.08 L1055.22 1212.08 L1055.81 1212.08 L1056.39 1212.08 L1056.98 1212.08 L1057.57 1212.08 L1058.15 1212.08 L1058.74 1212.08 L1059.33 1212.08 L1059.91 1212.08 L1060.5 1212.08 L1061.09 1212.08 L1061.67 1212.08 L1062.26 1212.08 L1062.85 1212.08 L1063.43 1212.08 L1064.02 1212.08 L1064.6 1212.08 L1065.19 1212.08 L1065.78 1212.08 L1066.36 1212.08 L1066.95 1212.08 L1067.54 1212.08 L1068.12 1212.08 L1068.71 1212.08 L1069.3 1212.08 L1069.88 1212.08 L1070.47 1212.08 L1071.06 1212.08 L1071.64 1212.08 L1072.23 1212.08 L1072.81 1212.08 L1073.4 1212.08 L1073.99 1212.08 L1074.57 1212.08 L1075.16 1212.08 L1075.75 1212.08 L1076.33 1212.08 L1076.92 1212.08 L1077.51 1212.08 L1078.09 1212.08 L1078.68 1212.08 L1079.26 1212.08 L1079.85 1212.08 L1080.44 1212.08 L1081.02 1212.08 L1081.61 1212.08 L1082.2 1212.08 L1082.78 1212.08 L1083.37 1212.08 L1083.96 1212.08 L1084.54 1212.08 L1085.13 1212.08 L1085.72 1212.08 L1086.3 1212.08 L1086.89 1212.08 L1087.47 1212.08 L1088.06 1212.08 L1088.65 1212.08 L1089.23 1212.08 L1089.82 1212.08 L1090.41 1212.08 L1090.99 1212.08 L1091.58 1212.08 L1092.17 1212.08 L1092.75 1212.08 L1093.34 1212.08 L1093.93 1212.08 L1094.51 1212.08 L1095.1 1212.08 L1095.68 1212.08 L1096.27 1212.08 L1096.86 1212.08 L1097.44 1212.08 L1098.03 1212.08 L1098.62 1212.08 L1099.2 1212.08 L1099.79 1212.08 L1100.38 1212.08 L1100.96 1212.08 L1101.55 1212.08 L1102.14 1212.08 L1102.72 1212.08 L1103.31 1212.08 L1103.89 1212.08 L1104.48 1212.08 L1105.07 1212.08 L1105.65 1212.08 L1106.24 1212.08 L1106.83 1212.08 L1107.41 1212.08 L1108 1212.08 L1108.59 1212.08 L1109.17 1212.08 L1109.76 1212.08 L1110.34 1212.08 L1110.93 1212.08 L1111.52 1212.08 L1112.1 1212.08 L1112.69 1212.08 L1113.28 1212.08 L1113.86 1212.08 L1114.45 1212.08 L1115.04 1212.08 L1115.62 1212.08 L1116.21 1212.08 L1116.8 1212.08 L1117.38 1212.08 L1117.97 1212.08 L1118.55 1212.08 L1119.14 1212.08 L1119.73 1212.08 L1120.31 1212.08 L1120.9 1212.08 L1121.49 1212.08 L1122.07 1212.08 L1122.66 1212.08 L1123.25 1212.08 L1123.83 1212.08 L1124.42 1212.08 L1125.01 1212.08 L1125.59 1212.08 L1126.18 1212.08 L1126.76 1212.08 L1127.35 1212.08 L1127.94 1212.08 L1128.52 1212.08 L1129.11 1212.08 L1129.7 1212.08 L1130.28 1212.08 L1130.87 1212.08 L1131.46 1212.08 L1132.04 1212.08 L1132.63 1212.08 L1133.21 1212.08 L1133.8 1212.08 L1134.39 1212.08 L1134.97 1212.08 L1135.56 1212.08 L1136.15 1212.08 L1136.73 1212.08 L1137.32 1212.08 L1137.91 1212.08 L1138.49 1212.08 L1139.08 1212.08 L1139.67 1212.08 L1140.25 1212.08 L1140.84 1212.08 L1141.42 1212.08 L1142.01 1212.08 L1142.6 1212.08 L1143.18 1212.08 L1143.77 1212.08 L1144.36 1212.08 L1144.94 1212.08 L1145.53 1212.08 L1146.12 1212.08 L1146.7 1212.08 L1147.29 1212.08 L1147.88 1212.08 L1148.46 1212.08 L1149.05 1212.08 L1149.63 1212.08 L1150.22 1212.08 L1150.81 1212.08 L1151.39 1212.08 L1151.98 1212.08 L1152.57 1212.08 L1153.15 1212.08 L1153.74 1212.08 L1154.33 1212.08 L1154.91 1212.08 L1155.5 1212.08 L1156.09 1212.08 L1156.67 1212.08 L1157.26 1212.08 L1157.84 1212.08 L1158.43 1212.08 L1159.02 1212.08 L1159.6 1212.08 L1160.19 1212.08 L1160.78 1212.08 L1161.36 1212.08 L1161.95 1212.08 L1162.54 1212.08 L1163.12 1212.08 L1163.71 1212.08 L1164.29 1212.08 L1164.88 1212.08 L1165.47 1212.08 L1166.05 1212.08 L1166.64 1212.08 L1167.23 1212.08 L1167.81 1212.08 L1168.4 1212.08 L1168.99 1212.08 L1169.57 1212.08 L1170.16 1212.08 L1170.75 1212.08 L1171.33 1212.08 L1171.92 1212.08 L1172.5 1212.08 L1173.09 1212.08 L1173.68 1212.08 L1174.26 1212.08 L1174.85 1212.08 L1175.44 1212.08 L1176.02 1212.08 L1176.61 1212.08 L1177.2 1212.08 L1177.78 1212.08 L1178.37 1212.08 L1178.96 1212.08 L1179.54 1212.08 L1180.13 1212.08 L1180.71 1212.08 L1181.3 1212.08 L1181.89 1212.08 L1182.47 1212.08 L1183.06 1212.08 L1183.65 1212.08 L1184.23 1212.08 L1184.82 1212.08 L1185.41 1212.08 L1185.99 1212.08 L1186.58 1212.08 L1187.16 1212.08 L1187.75 1212.08 L1188.34 1212.08 L1188.92 1212.08 L1189.51 1212.08 L1190.1 1212.08 L1190.68 1212.08 L1191.27 1212.08 L1191.86 1212.08 L1192.44 1212.08 L1193.03 1212.08 L1193.62 1212.08 L1194.2 1212.08 L1194.79 1212.08 L1195.37 1212.08 L1195.96 1212.08 L1196.55 1212.08 L1197.13 1212.08 L1197.72 1212.08 L1198.31 1212.08 L1198.89 1212.08 L1199.48 1212.08 L1200.07 1212.08 L1200.65 1212.08 L1201.24 1212.08 L1201.83 1212.08 L1202.41 1212.08 L1203 1212.08 L1203.58 1212.08 L1204.17 1212.08 L1204.76 1212.08 L1205.34 1212.08 L1205.93 1212.08 L1206.52 1212.08 L1207.1 1212.08 L1207.69 1212.08 L1208.28 1212.08 L1208.86 1212.08 L1209.45 1212.08 L1210.03 1212.08 L1210.62 1212.08 L1211.21 1212.08 L1211.79 1212.08 L1212.38 1212.08 L1212.97 1212.08 L1213.55 1212.08 L1214.14 1212.08 L1214.73 1212.08 L1215.31 1212.08 L1215.9 1212.08 L1216.49 1212.08 L1217.07 1212.08 L1217.66 1212.08 L1218.24 1212.08 L1218.83 1212.08 L1219.42 1212.08 L1220 1212.08 L1220.59 1212.08 L1221.18 1212.08 L1221.76 1212.08 L1222.35 1212.08 L1222.94 1212.08 L1223.52 1212.08 L1224.11 1212.08 L1224.7 1212.08 L1225.28 1212.08 L1225.87 1212.08 L1226.45 1212.08 L1227.04 1212.08 L1227.63 1212.08 L1228.21 1212.08 L1228.8 1212.08 L1229.39 1212.08 L1229.97 1212.08 L1230.56 1212.08 L1231.15 1212.08 L1231.73 1212.08 L1232.32 1212.08 L1232.91 1212.08 L1233.49 1212.08 L1234.08 1212.08 L1234.66 1212.08 L1235.25 1212.08 L1235.84 1212.08 L1236.42 1212.08 L1237.01 1212.08 L1237.6 1212.08 L1238.18 1212.08 L1238.77 1212.08 L1239.36 1212.08 L1239.94 1212.08 L1240.53 1212.08 L1241.11 1212.08 L1241.7 1212.08 L1242.29 1212.08 L1242.87 1212.08 L1243.46 1212.08 L1244.05 1212.08 L1244.63 1212.08 L1245.22 1212.08 L1245.81 1212.08 L1246.39 1212.08 L1246.98 1212.08 L1247.57 1212.08 L1248.15 1212.08 L1248.74 1212.08 L1249.32 1212.08 L1249.91 1212.08 L1250.5 1212.08 L1251.08 1212.08 L1251.67 1212.08 L1252.26 1212.08 L1252.84 1212.08 L1253.43 1212.08 L1254.02 1212.08 L1254.6 1212.08 L1255.19 1212.08 L1255.78 1212.08 L1256.36 1212.08 L1256.95 1212.08 L1257.53 1212.08 L1258.12 1212.08 L1258.71 1212.08 L1259.29 1212.08 L1259.88 1212.08 L1260.47 1212.08 L1261.05 1212.08 L1261.64 1212.08 L1262.23 1212.08 L1262.81 1212.08 L1263.4 1212.08 L1263.98 1212.08 L1264.57 1212.08 L1265.16 1212.08 L1265.74 1212.08 L1266.33 1212.08 L1266.92 1212.08 L1267.5 1212.08 L1268.09 1212.08 L1268.68 1212.08 L1269.26 1212.08 L1269.85 1212.08 L1270.44 1212.08 L1271.02 1212.08 L1271.61 1212.08 L1272.19 1212.08 L1272.78 1212.08 L1273.37 1212.08 L1273.95 1212.08 L1274.54 1212.08 L1275.13 1212.08 L1275.71 1212.08 L1276.3 1212.08 L1276.89 1212.08 L1277.47 1212.08 L1278.06 1212.08 L1278.65 1212.08 L1279.23 1212.08 L1279.82 1212.08 L1280.4 1212.08 L1280.99 1212.08 L1281.58 1212.08 L1282.16 1212.08 L1282.75 1212.08 L1283.34 1212.08 L1283.92 1212.08 L1284.51 1212.08 L1285.1 1212.08 L1285.68 1212.08 L1286.27 1212.08 L1286.86 1212.08 L1287.44 1212.08 L1288.03 1212.08 L1288.61 1212.08 L1289.2 1212.08 L1289.79 1212.08 L1290.37 1212.08 L1290.96 1212.08 L1291.55 1212.08 L1292.13 1212.08 L1292.72 1212.08 L1293.31 1212.08 L1293.89 1212.08 L1294.48 1212.08 L1295.06 1212.08 L1295.65 1212.08 L1296.24 1212.08 L1296.82 1212.08 L1297.41 1212.08 L1298 1212.08 L1298.58 1212.08 L1299.17 1212.08 L1299.76 1212.08 L1300.34 1212.08 L1300.93 1212.08 L1301.52 1212.08 L1302.1 1212.08 L1302.69 1212.08 L1303.27 1212.08 L1303.86 1212.08 L1304.45 1212.08 L1305.03 1212.08 L1305.62 1212.08 L1306.21 1212.08 L1306.79 1212.08 L1307.38 1212.08 L1307.97 1212.08 L1308.55 1212.08 L1309.14 1212.08 L1309.73 1212.08 L1310.31 1212.08 L1310.9 1212.08 L1311.48 1212.08 L1312.07 1212.08 L1312.66 1212.08 L1313.24 1212.08 L1313.83 1212.08 L1314.42 1212.08 L1315 1212.08 L1315.59 1212.08 L1316.18 1212.08 L1316.76 1212.08 L1317.35 1212.08 L1317.93 1212.08 L1318.52 1212.08 L1319.11 1212.08 L1319.69 1212.08 L1320.28 1212.08 L1320.87 1212.08 L1321.45 1212.08 L1322.04 1212.08 L1322.63 1212.08 L1323.21 1212.08 L1323.8 1212.08 L1324.39 1212.08 L1324.97 1212.08 L1325.56 1212.08 L1326.14 1212.08 L1326.73 1212.08 L1327.32 1212.08 L1327.9 1212.08 L1328.49 1212.08 L1329.08 1212.08 L1329.66 1212.08 L1330.25 1212.08 L1330.84 1212.08 L1331.42 1212.08 L1332.01 1212.08 L1332.6 1212.08 L1333.18 1212.08 L1333.77 1212.08 L1334.35 1212.08 L1334.94 1212.08 L1335.53 1212.08 L1336.11 1212.08 L1336.7 1212.08 L1337.29 1212.08 L1337.87 1212.08 L1338.46 1212.08 L1339.05 1212.08 L1339.63 1212.08 L1340.22 1212.08 L1340.8 1212.08 L1341.39 1212.08 L1341.98 1212.08 L1342.56 1212.08 L1343.15 1212.08 L1343.74 1212.08 L1344.32 1212.08 L1344.91 1212.08 L1345.5 1212.08 L1346.08 1212.08 L1346.67 1212.08 L1347.26 1212.08 L1347.84 1212.08 L1348.43 1212.08 L1349.01 1212.08 L1349.6 1212.08 L1350.19 1212.08 L1350.77 1212.08 L1351.36 1212.08 L1351.95 1212.08 L1352.53 1212.08 L1353.12 1212.08 L1353.71 1212.08 L1354.29 1212.08 L1354.88 1212.08 L1355.47 1212.08 L1356.05 1212.08 L1356.64 1212.08 L1357.22 1212.08 L1357.81 1212.08 L1358.4 1212.08 L1358.98 1212.08 L1359.57 1212.08 L1360.16 1212.08 L1360.74 1212.08 L1361.33 1212.08 L1361.92 1212.08 L1362.5 1212.08 L1363.09 1212.08 L1363.68 1212.08 L1364.26 1212.08 L1364.85 1212.08 L1365.43 1212.08 L1366.02 1212.08 L1366.61 1212.08 L1367.19 1212.08 L1367.78 1212.08 L1368.37 1212.08 L1368.95 1212.08 L1369.54 1212.08 L1370.13 1212.08 L1370.71 1212.08 L1371.3 1212.08 L1371.88 1212.08 L1372.47 1212.08 L1373.06 1212.08 L1373.64 1212.08 L1374.23 1212.08 L1374.82 1212.08 L1375.4 1212.08 L1375.99 1212.08 L1376.58 1212.08 L1377.16 1212.08 L1377.75 1212.08 L1378.34 1212.08 L1378.92 1212.08 L1379.51 1212.08 L1380.09 1212.08 L1380.68 1212.08 L1381.27 1212.08 L1381.85 1212.08 L1382.44 1212.08 L1383.03 1212.08 L1383.61 1212.08 L1384.2 1212.08 L1384.79 1212.08 L1385.37 1212.08 L1385.96 1212.08 L1386.55 1212.08 L1387.13 1212.08 L1387.72 1212.08 L1388.3 1212.08 L1388.89 1212.08 L1389.48 1212.08 L1390.06 1212.08 L1390.65 1212.08 L1391.24 1212.08 L1391.82 1212.08 L1392.41 1212.08 L1393 1212.08 L1393.58 1212.08 L1394.17 1212.08 L1394.75 1212.08 L1395.34 1212.08 L1395.93 1212.08 L1396.51 1212.08 L1397.1 1212.08 L1397.69 1212.08 L1398.27 1212.08 L1398.86 1212.08 L1399.45 1212.08 L1400.03 1212.08 L1400.62 1212.08 L1401.21 1212.08 L1401.79 1212.08 L1402.38 1212.08 L1402.96 1212.08 L1403.55 1212.08 L1404.14 1212.08 L1404.72 1212.08 L1405.31 1212.08 L1405.9 1212.08 L1406.48 1212.08 L1407.07 1212.08 L1407.66 1212.08 L1408.24 1212.08 L1408.83 1212.08 L1409.42 1212.08 L1410 1212.08 L1410.59 1212.08 L1411.17 1212.08 L1411.76 1212.08 L1412.35 1212.08 L1412.93 1212.08 L1413.52 1212.08 L1414.11 1212.08 L1414.69 1212.08 L1415.28 1212.08 L1415.87 1212.08 L1416.45 1212.08 L1417.04 1212.08 L1417.63 1212.08 L1418.21 1212.08 L1418.8 1212.08 L1419.38 1212.08 L1419.97 1212.08 L1420.56 1212.08 L1421.14 1212.08 L1421.73 1212.08 L1422.32 1212.08 L1422.9 1212.08 L1423.49 1212.08 L1424.08 1212.08 L1424.66 1212.08 L1425.25 1212.08 L1425.83 1212.08 L1426.42 1212.08 L1427.01 1212.08 L1427.59 1212.08 L1428.18 1212.08 L1428.77 1212.08 L1429.35 1212.08 L1429.94 1212.08 L1430.53 1212.08 L1431.11 1212.08 L1431.7 1212.08 L1432.29 1212.08 L1432.87 1212.08 L1433.46 1212.08 L1434.04 1212.08 L1434.63 1212.08 L1435.22 1212.08 L1435.8 1212.08 L1436.39 1212.08 L1436.98 1212.08 L1437.56 1212.08 L1438.15 1212.08 L1438.74 1212.08 L1439.32 1212.08 L1439.91 1212.08 L1440.5 1212.08 L1441.08 1212.08 L1441.67 1212.08 L1442.25 1212.08 L1442.84 1212.08 L1443.43 1212.08 L1444.01 1212.08 L1444.6 1212.08 L1445.19 1212.08 L1445.77 1212.08 L1446.36 1212.08 L1446.95 1212.08 L1447.53 1212.08 L1448.12 1212.08 L1448.7 1212.08 L1449.29 1212.08 L1449.88 1212.08 L1450.46 1212.08 L1451.05 1212.08 L1451.64 1212.08 L1452.22 1212.08 L1452.81 1212.08 L1453.4 1212.08 L1453.98 1212.08 L1454.57 1212.08 L1455.16 1212.08 L1455.74 1212.08 L1456.33 1212.08 L1456.91 1212.08 L1457.5 1212.08 L1458.09 1212.08 L1458.67 1212.08 L1459.26 1212.08 L1459.85 1212.08 L1460.43 1212.08 L1461.02 1212.08 L1461.61 1212.08 L1462.19 1212.08 L1462.78 1212.08 L1463.37 1212.08 L1463.95 1212.08 L1464.54 1212.08 L1465.12 1212.08 L1465.71 1212.08 L1466.3 1212.08 L1466.88 1212.08 L1467.47 1212.08 L1468.06 1212.08 L1468.64 1212.08 L1469.23 1212.08 L1469.82 1212.08 L1470.4 1212.08 L1470.99 1212.08 L1471.57 1212.08 L1472.16 1212.08 L1472.75 1212.08 L1473.33 1212.08 L1473.92 1212.08 L1474.51 1212.08 L1475.09 1212.08 L1475.68 1212.08 L1476.27 1212.08 L1476.85 1212.08 L1477.44 1212.08 L1478.03 1212.08 L1478.61 1212.08 L1479.2 1212.08 L1479.78 1212.08 L1480.37 1212.08 L1480.96 1212.08 L1481.54 1212.08 L1482.13 1212.08 L1482.72 1212.08 L1483.3 1212.08 L1483.89 1212.08 L1484.48 1212.08 L1485.06 1212.08 L1485.65 1212.08 L1486.24 1212.08 L1486.82 1212.08 L1487.41 1212.08 L1487.99 1212.08 L1488.58 1212.08 L1489.17 1212.08 L1489.75 1212.08 L1490.34 1212.08 L1490.93 1212.08 L1491.51 1212.08 L1492.1 1212.08 L1492.69 1212.08 L1493.27 1212.08 L1493.86 1212.08 L1494.45 1212.08 L1495.03 1212.08 L1495.62 1212.08 L1496.2 1212.08 L1496.79 1212.08 L1497.38 1212.08 L1497.96 1212.08 L1498.55 1212.08 L1499.14 1212.08 L1499.72 1212.08 L1500.31 1212.08 L1500.9 1212.08 L1501.48 1212.08 L1502.07 1212.08 L1502.65 1212.08 L1503.24 1212.08 L1503.83 1212.08 L1504.41 1212.08 L1505 1212.08 L1505.59 1212.08 L1506.17 1212.08 L1506.76 1212.08 L1507.35 1212.08 L1507.93 1212.08 L1508.52 1212.08 L1509.11 1212.08 L1509.69 1212.08 L1510.28 1212.08 L1510.86 1212.08 L1511.45 1212.08 L1512.04 1212.08 L1512.62 1212.08 L1513.21 1212.08 L1513.8 1212.08 L1514.38 1212.08 L1514.97 1212.08 L1515.56 1212.08 L1516.14 1212.08 L1516.73 1212.08 L1517.32 1212.08 L1517.9 1212.08 L1518.49 1212.08 L1519.07 1212.08 L1519.66 1212.08 L1520.25 1212.08 L1520.83 1212.08 L1521.42 1212.08 L1522.01 1212.08 L1522.59 1212.08 L1523.18 1212.08 L1523.77 1212.08 L1524.35 1212.08 L1524.94 1212.08 L1525.52 1212.08 L1526.11 1212.08 L1526.7 1212.08 L1527.28 1212.08 L1527.87 1212.08 L1528.46 1212.08 L1529.04 1212.08 L1529.63 1212.08 L1530.22 1212.08 L1530.8 1212.08 L1531.39 1212.08 L1531.98 1212.08 L1532.56 1212.08 L1533.15 1212.08 L1533.73 1212.08 L1534.32 1212.08 L1534.91 1212.08 L1535.49 1212.08 L1536.08 1212.08 L1536.67 1212.08 L1537.25 1212.08 L1537.84 1212.08 L1538.43 1212.08 L1539.01 1212.08 L1539.6 1212.08 L1540.19 1212.08 L1540.77 1212.08 L1541.36 1212.08 L1541.94 1212.08 L1542.53 1212.08 L1543.12 1212.08 L1543.7 1212.08 L1544.29 1212.08 L1544.88 1212.08 L1545.46 1212.08 L1546.05 1212.08 L1546.64 1212.08 L1547.22 1212.08 L1547.81 1212.08 L1548.4 1212.08 L1548.98 1212.08 L1549.57 1212.08 L1550.15 1212.08 L1550.74 1212.08 L1551.33 1212.08 L1551.91 1212.08 L1552.5 1212.08 L1553.09 1212.08 L1553.67 1212.08 L1554.26 1212.08 L1554.85 1212.08 L1555.43 1212.08 L1556.02 1212.08 L1556.6 1212.08 L1557.19 1212.08 L1557.78 1212.08 L1558.36 1212.08 L1558.95 1212.08 L1559.54 1212.08 L1560.12 1212.08 L1560.71 1212.08 L1561.3 1212.08 L1561.88 1212.08 L1562.47 1212.08 L1563.06 1212.08 L1563.64 1212.08 L1564.23 1212.08 L1564.81 1212.08 L1565.4 1212.08 L1565.99 1212.08 L1566.57 1212.08 L1567.16 1212.08 L1567.75 1212.08 L1568.33 1212.08 L1568.92 1212.08 L1569.51 1212.08 L1570.09 1212.08 L1570.68 1212.08 L1571.27 1212.08 L1571.85 1212.08 L1572.44 1212.08 L1573.02 1212.08 L1573.61 1212.08 L1574.2 1212.08 L1574.78 1212.08 L1575.37 1212.08 L1575.96 1212.08 L1576.54 1212.08 L1577.13 1212.08 L1577.72 1212.08 L1578.3 1212.08 L1578.89 1212.08 L1579.47 1212.08 L1580.06 1212.08 L1580.65 1212.08 L1581.23 1212.08 L1581.82 1212.08 L1582.41 1212.08 L1582.99 1212.08 L1583.58 1212.08 L1584.17 1212.08 L1584.75 1212.08 L1585.34 1212.08 L1585.93 1212.08 L1586.51 1212.08 L1587.1 1212.08 L1587.68 1212.08 L1588.27 1212.08 L1588.86 1212.08 L1589.44 1212.08 L1590.03 1212.08 L1590.62 1212.08 L1591.2 1212.08 L1591.79 1212.08 L1592.38 1212.08 L1592.96 1212.08 L1593.55 1212.08 L1594.14 1212.08 L1594.72 1212.08 L1595.31 1212.08 L1595.89 1212.08 L1596.48 1212.08 L1597.07 1212.08 L1597.65 1212.08 L1598.24 1212.08 L1598.83 1212.08 L1599.41 1212.08 L1600 1212.08 L1600.59 1212.08 L1601.17 1212.08 L1601.76 1212.08 L1602.34 1212.08 L1602.93 1212.08 L1603.52 1212.08 L1604.1 1212.08 L1604.69 1212.08 L1605.28 1212.08 L1605.86 1212.08 L1606.45 1212.08 L1607.04 1212.08 L1607.62 1212.08 L1608.21 1212.08 L1608.8 1212.08 L1609.38 1212.08 L1609.97 1212.08 L1610.55 1212.08 L1611.14 1212.08 L1611.73 1212.08 L1612.31 1212.08 L1612.9 1212.08 L1613.49 1212.08 L1614.07 1212.08 L1614.66 1212.08 L1615.25 1212.08 L1615.83 1212.08 L1616.42 1212.08 L1617.01 1212.08 L1617.59 1212.08 L1618.18 1212.08 L1618.76 1212.08 L1619.35 1212.08 L1619.94 1212.08 L1620.52 1212.08 L1621.11 1212.08 L1621.7 1212.08 L1622.28 1212.08 L1622.87 1212.08 L1623.46 1212.08 L1624.04 1212.08 L1624.63 1212.08 L1625.22 1212.08 L1625.8 1212.08 L1626.39 1212.08 L1626.97 1212.08 L1627.56 1212.08 L1628.15 1212.08 L1628.73 1212.08 L1629.32 1212.08 L1629.91 1212.08 L1630.49 1212.08 L1631.08 1212.08 L1631.67 1212.08 L1632.25 1212.08 L1632.84 1212.08 L1633.42 1212.08 L1634.01 1212.08 L1634.6 1212.08 L1635.18 1212.08 L1635.77 1212.08 L1636.36 1212.08 L1636.94 1212.08 L1637.53 1212.08 L1638.12 1212.08 L1638.7 1212.08 L1639.29 1212.08 L1639.88 1212.08 L1640.46 1212.08 L1641.05 1212.08 L1641.63 1212.08 L1642.22 1212.08 L1642.81 1212.08 L1643.39 1212.08 L1643.98 1212.08 L1644.57 1212.08 L1645.15 1212.08 L1645.74 1212.08 L1646.33 1212.08 L1646.91 1212.08 L1647.5 1212.08 L1648.09 1212.08 L1648.67 1212.08 L1649.26 1212.08 L1649.84 1212.08 L1650.43 1212.08 L1651.02 1212.08 L1651.6 1212.08 L1652.19 1212.08 L1652.78 1212.08 L1653.36 1212.08 L1653.95 1212.08 L1654.54 1212.08 L1655.12 1212.08 L1655.71 1212.08 L1656.29 1212.08 L1656.88 1212.08 L1657.47 1212.08 L1658.05 1212.08 L1658.64 1212.08 L1659.23 1212.08 L1659.81 1212.08 L1660.4 1212.08 L1660.99 1212.08 L1661.57 1212.08 L1662.16 1212.08 L1662.75 1212.08 L1663.33 1212.08 L1663.92 1212.08 L1664.5 1212.08 L1665.09 1212.08 L1665.68 1212.08 L1666.26 1212.08 L1666.85 1212.08 L1667.44 1212.08 L1668.02 1212.08 L1668.61 1212.08 L1669.2 1212.08 L1669.78 1212.08 L1670.37 1212.08 L1670.96 1212.08 L1671.54 1212.08 L1672.13 1212.08 L1672.71 1212.08 L1673.3 1212.08 L1673.89 1212.08 L1674.47 1212.08 L1675.06 1212.08 L1675.65 1212.08 L1676.23 1212.08 L1676.82 1212.08 L1677.41 1212.08 L1677.99 1212.08 L1678.58 1212.08 L1679.17 1212.08 L1679.75 1212.08 L1680.34 1212.08 L1680.92 1212.08 L1681.51 1212.08 L1682.1 1212.08 L1682.68 1212.08 L1683.27 1212.08 L1683.86 1212.08 L1684.44 1212.08 L1685.03 1212.08 L1685.62 1212.08 L1686.2 1212.08 L1686.79 1212.08 L1687.37 1212.08 L1687.96 1212.08 L1688.55 1212.08 L1689.13 1212.08 L1689.72 1212.08 L1690.31 1212.08 L1690.89 1212.08 L1691.48 1212.08 L1692.07 1212.08 L1692.65 1212.08 L1693.24 1212.08 L1693.83 1212.08 L1694.41 1212.08 L1695 1212.08 L1695.58 1212.08 L1696.17 1212.08 L1696.76 1212.08 L1697.34 1212.08 L1697.93 1212.08 L1698.52 1212.08 L1699.1 1212.08 L1699.69 1212.08 L1700.28 1212.08 L1700.86 1212.08 L1701.45 1212.08 L1702.04 1212.08 L1702.62 1212.08 L1703.21 1212.08 L1703.79 1212.08 L1704.38 1212.08 L1704.97 1212.08 L1705.55 1212.08 L1706.14 1212.08 L1706.73 1212.08 L1707.31 1212.08 L1707.9 1212.08 L1708.49 1212.08 L1709.07 1212.08 L1709.66 1212.08 L1710.24 1212.08 L1710.83 1212.08 L1711.42 1212.08 L1712 1212.08 L1712.59 1212.08 L1713.18 1212.08 L1713.76 1212.08 L1714.35 1212.08 L1714.94 1212.08 L1715.52 1212.08 L1716.11 1212.08 L1716.7 1212.08 L1717.28 1212.08 L1717.87 1212.08 L1718.45 1212.08 L1719.04 1212.08 L1719.63 1212.08 L1720.21 1212.08 L1720.8 1212.08 L1721.39 1212.08 L1721.97 1212.08 L1722.56 1212.08 L1723.15 1212.08 L1723.73 1212.08 L1724.32 1212.08 L1724.91 1212.08 L1725.49 1212.08 L1726.08 1212.08 L1726.66 1212.08 L1727.25 1212.08 L1727.84 1212.08 L1728.42 1212.08 L1729.01 1212.08 L1729.6 1212.08 L1730.18 1212.08 L1730.77 1212.08 L1731.36 1212.08 L1731.94 1212.08 L1732.53 1212.08 L1733.11 1212.08 L1733.7 1212.08 L1734.29 1212.08 L1734.87 1212.08 L1735.46 1212.08 L1736.05 1212.08 L1736.63 1212.08 L1737.22 1212.08 L1737.81 1212.08 L1738.39 1212.08 L1738.98 1212.08 L1739.57 1212.08 L1740.15 1212.08 L1740.74 1212.08 L1741.32 1212.08 L1741.91 1212.08 L1742.5 1212.08 L1743.08 1212.08 L1743.67 1212.08 L1744.26 1212.08 L1744.84 1212.08 L1745.43 1212.08 L1746.02 1212.08 L1746.6 1212.08 L1747.19 1212.08 L1747.78 1212.08 L1748.36 1212.08 L1748.95 1212.08 L1749.53 1212.08 L1750.12 1212.08 L1750.71 1212.08 L1751.29 1212.08 L1751.88 1212.08 L1752.47 1212.08 L1753.05 1212.08 L1753.64 1212.08 L1754.23 1212.08 L1754.81 1212.08 L1755.4 1212.08 L1755.99 1212.08 L1756.57 1212.08 L1757.16 1212.08 L1757.74 1212.08 L1758.33 1212.08 L1758.92 1212.08 L1759.5 1212.08 L1760.09 1212.08 L1760.68 1212.08 L1761.26 1212.08 L1761.85 1212.08 L1762.44 1212.08 L1763.02 1212.08 L1763.61 1212.08 L1764.19 1212.08 L1764.78 1212.08 L1765.37 1212.08 L1765.95 1212.08 L1766.54 1212.08 L1767.13 1212.08 L1767.71 1212.08 L1768.3 1212.08 L1768.89 1212.08 L1769.47 1212.08 L1770.06 1212.08 L1770.65 1212.08 L1771.23 1212.08 L1771.82 1212.08 L1772.4 1212.08 L1772.99 1212.08 L1773.58 1212.08 L1774.16 1212.08 L1774.75 1212.08 L1775.34 1212.08 L1775.92 1212.08 L1776.51 1212.08 L1777.1 1212.08 L1777.68 1212.08 L1778.27 1212.08 L1778.86 1212.08 L1779.44 1212.08 L1780.03 1212.08 L1780.61 1212.08 L1781.2 1212.08 L1781.79 1212.08 L1782.37 1212.08 L1782.96 1212.08 L1783.55 1212.08 L1784.13 1212.08 L1784.72 1212.08 L1785.31 1212.08 L1785.89 1212.08 L1786.48 1212.08 L1787.06 1212.08 L1787.65 1212.08 L1788.24 1212.08 L1788.82 1212.08 L1789.41 1212.08 L1790 1212.08 L1790.58 1212.08 L1791.17 1212.08 L1791.76 1212.08 L1792.34 1212.08 L1792.93 1212.08 L1793.52 1212.08 L1794.1 1212.08 L1794.69 1212.08 L1795.27 1212.08 L1795.86 1212.08 L1796.45 1212.08 L1797.03 1212.08 L1797.62 1212.08 L1798.21 1212.08 L1798.79 1212.08 L1799.38 1212.08 L1799.97 1212.08 L1800.55 1212.08 L1801.14 1212.08 L1801.73 1212.08 L1802.31 1212.08 L1802.9 1212.08 L1803.48 1212.08 L1804.07 1212.08 L1804.66 1212.08 L1805.24 1212.08 L1805.83 1212.08 L1806.42 1212.08 L1807 1212.08 L1807.59 1212.08 L1808.18 1212.08 L1808.76 1212.08 L1809.35 1212.08 L1809.94 1212.08 L1810.52 1212.08 L1811.11 1212.08 L1811.69 1212.08 L1812.28 1212.08 L1812.87 1212.08 L1813.45 1212.08 L1814.04 1212.08 L1814.63 1212.08 L1815.21 1212.08 L1815.8 1212.08 L1816.39 1212.08 L1816.97 1212.08 L1817.56 1212.08 L1818.14 1212.08 L1818.73 1212.08 L1819.32 1212.08 L1819.9 1212.08 L1820.49 1212.08 L1821.08 1212.08 L1821.66 1212.08 L1822.25 1212.08 L1822.84 1212.08 L1823.42 1212.08 L1824.01 1212.08 L1824.6 1212.08 L1825.18 1212.08 L1825.77 1212.08 L1826.35 1212.08 L1826.94 1212.08 L1827.53 1212.08 L1828.11 1212.08 L1828.7 1212.08 L1829.29 1212.08 L1829.87 1212.08 L1830.46 1212.08 L1831.05 1212.08 L1831.63 1212.08 L1832.22 1212.08 L1832.81 1212.08 L1833.39 1212.08 L1833.98 1212.08 L1834.56 1212.08 L1835.15 1212.08 L1835.74 1212.08 L1836.32 1212.08 L1836.91 1212.08 L1837.5 1212.08 L1838.08 1212.08 L1838.67 1212.08 L1839.26 1212.08 L1839.84 1212.08 L1840.43 1212.08 L1841.01 1212.08 L1841.6 1212.08 L1842.19 1212.08 L1842.77 1212.08 L1843.36 1212.08 L1843.95 1212.08 L1844.53 1212.08 L1845.12 1212.08 L1845.71 1212.08 L1846.29 1212.08 L1846.88 1212.08 L1847.47 1212.08 L1848.05 1212.08 L1848.64 1212.08 L1849.22 1212.08 L1849.81 1212.08 L1850.4 1212.08 L1850.98 1212.08 L1851.57 1212.08 L1852.16 1212.08 L1852.74 1212.08 L1853.33 1212.08 L1853.92 1212.08 L1854.5 1212.08 L1855.09 1212.08 L1855.68 1212.08 L1856.26 1212.08 L1856.85 1212.08 L1857.43 1212.08 L1858.02 1212.08 L1858.61 1212.08 L1859.19 1212.08 L1859.78 1212.08 L1860.37 1212.08 L1860.95 1212.08 L1861.54 1212.08 L1862.13 1212.08 L1862.71 1212.08 L1863.3 1212.08 L1863.88 1212.08 L1864.47 1212.08 L1865.06 1212.08 L1865.64 1212.08 L1866.23 1212.08 L1866.82 1212.08 L1867.4 1212.08 L1867.99 1212.08 L1868.58 1212.08 L1869.16 1212.08 L1869.75 1212.08 L1870.34 1212.08 L1870.92 1212.08 L1871.51 1212.08 L1872.09 1212.08 L1872.68 1212.08 L1873.27 1212.08 L1873.85 1212.08 L1874.44 1212.08 L1875.03 1212.08 L1875.61 1212.08 L1876.2 1212.08 L1876.79 1212.08 L1877.37 1212.08 L1877.96 1212.08 L1878.55 1212.08 L1879.13 1212.08 L1879.72 1212.08 L1880.3 1212.08 L1880.89 1212.08 L1881.48 1212.08 L1882.06 1212.08 L1882.65 1212.08 L1883.24 1212.08 L1883.82 1212.08 L1884.41 1212.08 L1885 1212.08 L1885.58 1212.08 L1886.17 1212.08 L1886.76 1212.08 L1887.34 1212.08 L1887.93 1212.08 L1888.51 1212.08 L1889.1 1212.08 L1889.69 1212.08 L1890.27 1212.08 L1890.86 1212.08 L1891.45 1212.08 L1892.03 1212.08 L1892.62 1212.08 L1893.21 1212.08 L1893.79 1212.08 L1894.38 1212.08 L1894.96 1212.08 L1895.55 1212.08 L1896.14 1212.08 L1896.72 1212.08 L1897.31 1212.08 L1897.9 1212.08 L1898.48 1212.08 L1899.07 1212.08 L1899.66 1212.08 L1900.24 1212.08 L1900.83 1212.08 L1901.42 1212.08 L1902 1212.08 L1902.59 1212.08 L1903.17 1212.08 L1903.76 1212.08 L1904.35 1212.08 L1904.93 1212.08 L1905.52 1212.08 L1906.11 1212.08 L1906.69 1212.08 L1907.28 1212.08 L1907.87 1212.08 L1908.45 1212.08 L1909.04 1212.08 L1909.63 1212.08 L1910.21 1212.08 L1910.8 1212.08 L1911.38 1212.08 L1911.97 1212.08 L1912.56 1212.08 L1913.14 1212.08 L1913.73 1212.08 L1914.32 1212.08 L1914.9 1212.08 L1915.49 1212.08 L1916.08 1212.08 L1916.66 1212.08 L1917.25 1212.08 L1917.83 1212.08 L1918.42 1212.08 L1919.01 1212.08 L1919.59 1212.08 L1920.18 1212.08 L1920.77 1212.08 L1921.35 1212.08 L1921.94 1212.08 L1922.53 1212.08 L1923.11 1212.08 L1923.7 1212.08 L1924.29 1212.08 L1924.87 1212.08 L1925.46 1212.08 L1926.04 1212.08 L1926.63 1212.08 L1927.22 1212.08 L1927.8 1212.08 L1928.39 1212.08 L1928.98 1212.08 L1929.56 1212.08 L1930.15 1212.08 L1930.74 1212.08 L1931.32 1212.08 L1931.91 1212.08 L1932.5 1212.08 L1933.08 1212.08 L1933.67 1212.08 L1934.25 1212.08 L1934.84 1212.08 L1935.43 1212.08 L1936.01 1212.08 L1936.6 1212.08 L1937.19 1212.08 L1937.77 1212.08 L1938.36 1212.08 L1938.95 1212.08 L1939.53 1212.08 L1940.12 1212.08 L1940.71 1212.08 L1941.29 1212.08 L1941.88 1212.08 L1942.46 1212.08 L1943.05 1212.08 L1943.64 1212.08 L1944.22 1212.08 L1944.81 1212.08 L1945.4 1212.08 L1945.98 1212.08 L1946.57 1212.08 L1947.16 1212.08 L1947.74 1212.08 L1948.33 1212.08 L1948.91 1212.08 L1949.5 1212.08 L1950.09 1212.08 L1950.67 1212.08 L1951.26 1212.08 L1951.85 1212.08 L1952.43 1212.08 L1953.02 1212.08 L1953.61 1212.08 L1954.19 1212.08 L1954.78 1212.08 L1955.37 1212.08 L1955.95 1212.08 L1956.54 1212.08 L1957.12 1212.08 L1957.71 1212.08 L1958.3 1212.08 L1958.88 1212.08 L1959.47 1212.08 L1960.06 1212.08 L1960.64 1212.08 L1961.23 1212.08 L1961.82 1212.08 L1962.4 1212.08 L1962.99 1212.08 L1963.58 1212.08 L1964.16 1212.08 L1964.75 1212.08 L1965.33 1212.08 L1965.92 1212.08 L1966.51 1212.08 L1967.09 1212.08 L1967.68 1212.08 L1968.27 1212.08 L1968.85 1212.08 L1969.44 1212.08 L1970.03 1212.08 L1970.61 1212.08 L1971.2 1212.08 L1971.78 1212.08 L1972.37 1212.08 L1972.96 1212.08 L1973.54 1212.08 L1974.13 1212.08 L1974.72 1212.08 L1975.3 1212.08 L1975.89 1212.08 L1976.48 1212.08 L1977.06 1212.08 L1977.65 1212.08 L1978.24 1212.08 L1978.82 1212.08 L1979.41 1212.08 L1979.99 1212.08 L1980.58 1212.08 L1981.17 1212.08 L1981.75 1212.08 L1982.34 1212.08 L1982.93 1212.08 L1983.51 1212.08 L1984.1 1212.08 L1984.69 1212.08 L1985.27 1212.08 L1985.86 1212.08 L1986.45 1212.08 L1987.03 1212.08 L1987.62 1212.08 L1988.2 1212.08 L1988.79 1212.08 L1989.38 1212.08 L1989.96 1212.08 L1990.55 1212.08 L1991.14 1212.08 L1991.72 1212.08 L1992.31 1212.08 L1992.9 1212.08 L1993.48 1212.08 L1994.07 1212.08 L1994.65 1212.08 L1995.24 1212.08 L1995.83 1212.08 L1996.41 1212.08 L1997 1212.08 L1997.59 1212.08 L1998.17 1212.08 L1998.76 1212.08 L1999.35 1212.08 L1999.93 1212.08 L2000.52 1212.08 L2001.11 1212.08 L2001.69 1212.08 L2002.28 1212.08 L2002.86 1212.08 L2003.45 1212.08 L2004.04 1212.08 L2004.62 1212.08 L2005.21 1212.08 L2005.8 1212.08 L2006.38 1212.08 L2006.97 1212.08 L2007.56 1212.08 L2008.14 1212.08 L2008.73 1212.08 L2009.32 1212.08 L2009.9 1212.08 L2010.49 1212.08 L2011.07 1212.08 L2011.66 1212.08 L2012.25 1212.08 L2012.83 1212.08 L2013.42 1212.08 L2014.01 1212.08 L2014.59 1212.08 L2015.18 1212.08 L2015.77 1212.08 L2016.35 1212.08 L2016.94 1212.08 L2017.53 1212.08 L2018.11 1212.08 L2018.7 1212.08 L2019.28 1212.08 L2019.87 1212.08 L2020.46 1212.08 L2021.04 1212.08 L2021.63 1212.08 L2022.22 1212.08 L2022.8 1212.08 L2023.39 1212.08 L2023.98 1212.08 L2024.56 1212.08 L2025.15 1212.08 L2025.73 1212.08 L2026.32 1212.08 L2026.91 1212.08 L2027.49 1212.08 L2028.08 1212.08 L2028.67 1212.08 L2029.25 1212.08 L2029.84 1212.08 L2030.43 1212.08 L2031.01 1212.08 L2031.6 1212.08 L2032.19 1212.08 L2032.77 1212.08 L2033.36 1212.08 L2033.94 1212.08 L2034.53 1212.08 L2035.12 1212.08 L2035.7 1212.08 L2036.29 1212.08 L2036.88 1212.08 L2037.46 1212.08 L2038.05 1212.08 L2038.64 1212.08 L2039.22 1212.08 L2039.81 1212.08 L2040.4 1212.08 L2040.98 1212.08 L2041.57 1212.08 L2042.15 1212.08 L2042.74 1212.08 L2043.33 1212.08 L2043.91 1212.08 L2044.5 1212.08 L2045.09 1212.08 L2045.67 1212.08 L2046.26 1212.08 L2046.85 1212.08 L2047.43 1212.08 L2048.02 1212.08 L2048.6 1212.08 L2049.19 1212.08 L2049.78 1212.08 L2050.36 1212.08 L2050.95 1212.08 L2051.54 1212.08 L2052.12 1212.08 L2052.71 1212.08 L2053.3 1212.08 L2053.88 1212.08 L2054.47 1212.08 L2055.06 1212.08 L2055.64 1212.08 L2056.23 1212.08 L2056.81 1212.08 L2057.4 1212.08 L2057.99 1212.08 L2058.57 1212.08 L2059.16 1212.08 L2059.75 1212.08 L2060.33 1212.08 L2060.92 1212.08 L2061.51 1212.08 L2062.09 1212.08 L2062.68 1212.08 L2063.27 1212.08 L2063.85 1212.08 L2064.44 1212.08 L2065.02 1212.08 L2065.61 1212.08 L2066.2 1212.08 L2066.78 1212.08 L2067.37 1212.08 L2067.96 1212.08 L2068.54 1212.08 L2069.13 1212.08 L2069.72 1212.08 L2070.3 1212.08 L2070.89 1212.08 L2071.48 1212.08 L2072.06 1212.08 L2072.65 1212.08 L2073.23 1212.08 L2073.82 1212.08 L2074.41 1212.08 L2074.99 1212.08 L2075.58 1212.08 L2076.17 1212.08 L2076.75 1212.08 L2077.34 1212.08 L2077.93 1212.08 L2078.51 1212.08 L2079.1 1212.08 L2079.68 1212.08 L2080.27 1212.08 L2080.86 1212.08 L2081.44 1212.08 L2082.03 1212.08 L2082.62 1212.08 L2083.2 1212.08 L2083.79 1212.08 L2084.38 1212.08 L2084.96 1212.08 L2085.55 1212.08 L2086.14 1212.08 L2086.72 1212.08 L2087.31 1212.08 L2087.89 1212.08 L2088.48 1212.08 L2089.07 1212.08 L2089.65 1212.08 L2090.24 1212.08 L2090.83 1212.08 L2091.41 1212.08 L2092 1212.08 L2092.59 1212.08 L2093.17 1212.08 L2093.76 1212.08 L2094.35 1212.08 L2094.93 1212.08 L2095.52 1212.08 L2096.1 1212.08 L2096.69 1212.08 L2097.28 1212.08 L2097.86 1212.08 L2098.45 1212.08 L2099.04 1212.08 L2099.62 1212.08 L2100.21 1212.08 L2100.8 1212.08 L2101.38 1212.08 L2101.97 1212.08 L2102.55 1212.08 L2103.14 1212.08 L2103.73 1212.08 L2104.31 1212.08 L2104.9 1212.08 L2105.49 1212.08 L2106.07 1212.08 L2106.66 1212.08 L2107.25 1212.08 L2107.83 1212.08 L2108.42 1212.08 L2109.01 1212.08 L2109.59 1212.08 L2110.18 1212.08 L2110.76 1212.08 L2111.35 1212.08 L2111.94 1212.08 L2112.52 1212.08 L2113.11 1212.08 L2113.7 1212.08 L2114.28 1212.08 L2114.87 1212.08 L2115.46 1212.08 L2116.04 1212.08 L2116.63 1212.08 L2117.22 1212.08 L2117.8 1212.08 L2118.39 1212.08 L2118.97 1212.08 L2119.56 1212.08 L2120.15 1212.08 L2120.73 1212.08 L2121.32 1212.08 L2121.91 1212.08 L2122.49 1212.08 L2123.08 1212.08 L2123.67 1212.08 L2124.25 1212.08 L2124.84 1212.08 L2125.42 1212.08 L2126.01 1212.08 L2126.6 1212.08 L2127.18 1212.08 L2127.77 1212.08 L2128.36 1212.08 L2128.94 1212.08 L2129.53 1212.08 L2130.12 1212.08 L2130.7 1212.08 L2131.29 1212.08 L2131.88 1212.08 L2132.46 1212.08 L2133.05 1212.08 L2133.63 1212.08 L2134.22 1212.08 L2134.81 1212.08 L2135.39 1212.08 L2135.98 1212.08 L2136.57 1212.08 L2137.15 1212.08 L2137.74 1212.08 L2138.33 1212.08 L2138.91 1212.08 L2139.5 1212.08 L2140.09 1212.08 L2140.67 1212.08 L2141.26 1212.08 L2141.84 1212.08 L2142.43 1212.08 L2143.02 1212.08 L2143.6 1212.08 L2144.19 1212.08 L2144.78 1212.08 L2145.36 1212.08 L2145.95 1212.08 L2146.54 1212.08 L2147.12 1212.08 L2147.71 1212.08 L2148.3 1212.08 L2148.88 1212.08 L2149.47 1212.08 L2150.05 1212.08 L2150.64 1212.08 L2151.23 1212.08 L2151.81 1212.08 L2152.4 1212.08 L2152.99 1212.08 L2153.57 1212.08 L2154.16 1212.08 L2154.75 1212.08 L2155.33 1212.08 L2155.92 1212.08 L2156.5 1212.08 L2157.09 1212.08 L2157.68 1212.08 L2158.26 1212.08 L2158.26 1211.21 L2157.68 1211.21 L2157.09 1211.21 L2156.5 1211.21 L2155.92 1211.21 L2155.33 1211.21 L2154.75 1211.21 L2154.16 1211.21 L2153.57 1211.21 L2152.99 1211.21 L2152.4 1211.21 L2151.81 1211.21 L2151.23 1211.21 L2150.64 1211.21 L2150.05 1211.21 L2149.47 1211.21 L2148.88 1211.21 L2148.3 1211.21 L2147.71 1211.21 L2147.12 1211.21 L2146.54 1211.21 L2145.95 1211.21 L2145.36 1211.21 L2144.78 1211.21 L2144.19 1211.21 L2143.6 1211.21 L2143.02 1211.21 L2142.43 1211.21 L2141.84 1211.21 L2141.26 1211.21 L2140.67 1211.21 L2140.09 1211.21 L2139.5 1211.21 L2138.91 1211.21 L2138.33 1211.21 L2137.74 1211.21 L2137.15 1211.21 L2136.57 1211.21 L2135.98 1211.21 L2135.39 1211.21 L2134.81 1211.21 L2134.22 1211.21 L2133.63 1211.21 L2133.05 1211.21 L2132.46 1211.21 L2131.88 1211.21 L2131.29 1211.21 L2130.7 1211.21 L2130.12 1211.21 L2129.53 1211.21 L2128.94 1211.21 L2128.36 1211.21 L2127.77 1211.21 L2127.18 1211.21 L2126.6 1211.21 L2126.01 1211.21 L2125.42 1211.21 L2124.84 1211.21 L2124.25 1211.21 L2123.67 1211.21 L2123.08 1211.21 L2122.49 1211.21 L2121.91 1211.21 L2121.32 1211.21 L2120.73 1211.21 L2120.15 1211.21 L2119.56 1211.21 L2118.97 1211.21 L2118.39 1211.21 L2117.8 1211.21 L2117.22 1211.21 L2116.63 1211.21 L2116.04 1211.21 L2115.46 1211.21 L2114.87 1211.21 L2114.28 1211.21 L2113.7 1211.21 L2113.11 1211.21 L2112.52 1211.21 L2111.94 1211.21 L2111.35 1211.21 L2110.76 1211.21 L2110.18 1211.21 L2109.59 1211.21 L2109.01 1211.21 L2108.42 1211.21 L2107.83 1211.21 L2107.25 1211.21 L2106.66 1211.21 L2106.07 1211.21 L2105.49 1211.21 L2104.9 1211.21 L2104.31 1211.21 L2103.73 1211.21 L2103.14 1211.21 L2102.55 1211.21 L2101.97 1211.21 L2101.38 1211.21 L2100.8 1211.21 L2100.21 1211.21 L2099.62 1211.21 L2099.04 1211.21 L2098.45 1211.21 L2097.86 1211.21 L2097.28 1211.21 L2096.69 1211.21 L2096.1 1211.21 L2095.52 1211.21 L2094.93 1211.21 L2094.35 1211.21 L2093.76 1211.21 L2093.17 1211.21 L2092.59 1211.21 L2092 1211.21 L2091.41 1211.21 L2090.83 1211.21 L2090.24 1211.21 L2089.65 1211.21 L2089.07 1211.21 L2088.48 1211.21 L2087.89 1211.21 L2087.31 1211.21 L2086.72 1211.21 L2086.14 1211.21 L2085.55 1211.21 L2084.96 1211.21 L2084.38 1211.21 L2083.79 1211.21 L2083.2 1211.21 L2082.62 1211.21 L2082.03 1211.21 L2081.44 1211.21 L2080.86 1211.21 L2080.27 1211.21 L2079.68 1211.21 L2079.1 1211.21 L2078.51 1211.21 L2077.93 1211.21 L2077.34 1211.21 L2076.75 1211.21 L2076.17 1211.21 L2075.58 1211.21 L2074.99 1211.21 L2074.41 1211.21 L2073.82 1211.21 L2073.23 1211.21 L2072.65 1211.21 L2072.06 1211.21 L2071.48 1211.21 L2070.89 1211.21 L2070.3 1211.21 L2069.72 1211.21 L2069.13 1211.21 L2068.54 1211.21 L2067.96 1211.21 L2067.37 1211.21 L2066.78 1211.21 L2066.2 1211.21 L2065.61 1211.21 L2065.02 1211.21 L2064.44 1211.21 L2063.85 1211.21 L2063.27 1211.21 L2062.68 1211.21 L2062.09 1211.21 L2061.51 1211.21 L2060.92 1211.21 L2060.33 1211.21 L2059.75 1211.21 L2059.16 1211.21 L2058.57 1211.21 L2057.99 1211.21 L2057.4 1211.21 L2056.81 1211.21 L2056.23 1211.21 L2055.64 1211.21 L2055.06 1211.21 L2054.47 1211.21 L2053.88 1211.21 L2053.3 1211.21 L2052.71 1211.21 L2052.12 1211.21 L2051.54 1211.21 L2050.95 1211.21 L2050.36 1211.21 L2049.78 1211.21 L2049.19 1211.21 L2048.6 1211.21 L2048.02 1211.21 L2047.43 1211.21 L2046.85 1211.21 L2046.26 1211.21 L2045.67 1211.21 L2045.09 1211.21 L2044.5 1211.21 L2043.91 1211.21 L2043.33 1211.21 L2042.74 1211.21 L2042.15 1211.21 L2041.57 1211.21 L2040.98 1211.21 L2040.4 1211.21 L2039.81 1211.21 L2039.22 1211.21 L2038.64 1211.21 L2038.05 1211.21 L2037.46 1211.21 L2036.88 1211.21 L2036.29 1211.21 L2035.7 1211.21 L2035.12 1211.21 L2034.53 1211.21 L2033.94 1211.21 L2033.36 1211.21 L2032.77 1211.21 L2032.19 1211.21 L2031.6 1211.21 L2031.01 1211.21 L2030.43 1211.21 L2029.84 1211.21 L2029.25 1211.21 L2028.67 1211.21 L2028.08 1211.21 L2027.49 1211.21 L2026.91 1211.21 L2026.32 1211.21 L2025.73 1211.21 L2025.15 1211.21 L2024.56 1211.21 L2023.98 1211.21 L2023.39 1211.21 L2022.8 1211.21 L2022.22 1211.21 L2021.63 1211.21 L2021.04 1211.21 L2020.46 1211.21 L2019.87 1211.21 L2019.28 1211.21 L2018.7 1211.21 L2018.11 1211.21 L2017.53 1211.21 L2016.94 1211.21 L2016.35 1211.21 L2015.77 1211.21 L2015.18 1211.21 L2014.59 1211.21 L2014.01 1211.21 L2013.42 1211.21 L2012.83 1211.21 L2012.25 1211.21 L2011.66 1211.21 L2011.07 1211.21 L2010.49 1211.21 L2009.9 1211.21 L2009.32 1211.21 L2008.73 1211.21 L2008.14 1211.21 L2007.56 1211.21 L2006.97 1211.21 L2006.38 1211.21 L2005.8 1211.21 L2005.21 1211.21 L2004.62 1211.21 L2004.04 1211.21 L2003.45 1211.21 L2002.86 1211.21 L2002.28 1211.21 L2001.69 1211.21 L2001.11 1211.21 L2000.52 1211.21 L1999.93 1211.21 L1999.35 1211.21 L1998.76 1211.21 L1998.17 1211.21 L1997.59 1211.21 L1997 1211.21 L1996.41 1211.21 L1995.83 1211.21 L1995.24 1211.21 L1994.65 1211.21 L1994.07 1211.21 L1993.48 1211.21 L1992.9 1211.21 L1992.31 1211.21 L1991.72 1211.21 L1991.14 1211.21 L1990.55 1211.21 L1989.96 1211.21 L1989.38 1211.21 L1988.79 1211.21 L1988.2 1211.21 L1987.62 1211.21 L1987.03 1211.21 L1986.45 1211.21 L1985.86 1211.21 L1985.27 1211.21 L1984.69 1211.21 L1984.1 1211.21 L1983.51 1211.21 L1982.93 1211.21 L1982.34 1211.21 L1981.75 1211.21 L1981.17 1211.21 L1980.58 1211.21 L1979.99 1211.21 L1979.41 1211.21 L1978.82 1211.21 L1978.24 1211.21 L1977.65 1211.21 L1977.06 1211.21 L1976.48 1211.21 L1975.89 1211.21 L1975.3 1211.21 L1974.72 1211.21 L1974.13 1211.21 L1973.54 1211.21 L1972.96 1211.21 L1972.37 1211.21 L1971.78 1211.21 L1971.2 1211.21 L1970.61 1211.21 L1970.03 1211.21 L1969.44 1211.21 L1968.85 1211.21 L1968.27 1211.21 L1967.68 1211.21 L1967.09 1211.21 L1966.51 1211.21 L1965.92 1211.21 L1965.33 1211.21 L1964.75 1211.21 L1964.16 1211.21 L1963.58 1211.21 L1962.99 1211.21 L1962.4 1211.21 L1961.82 1211.21 L1961.23 1211.21 L1960.64 1211.21 L1960.06 1211.21 L1959.47 1211.21 L1958.88 1211.21 L1958.3 1211.21 L1957.71 1211.21 L1957.12 1211.21 L1956.54 1211.21 L1955.95 1211.21 L1955.37 1211.21 L1954.78 1211.21 L1954.19 1211.21 L1953.61 1211.21 L1953.02 1211.21 L1952.43 1211.21 L1951.85 1211.21 L1951.26 1211.21 L1950.67 1211.21 L1950.09 1211.21 L1949.5 1211.21 L1948.91 1211.21 L1948.33 1211.21 L1947.74 1211.21 L1947.16 1211.21 L1946.57 1211.21 L1945.98 1211.21 L1945.4 1211.21 L1944.81 1211.21 L1944.22 1211.21 L1943.64 1211.21 L1943.05 1211.21 L1942.46 1211.21 L1941.88 1211.21 L1941.29 1211.21 L1940.71 1211.21 L1940.12 1211.21 L1939.53 1211.21 L1938.95 1211.21 L1938.36 1211.21 L1937.77 1211.21 L1937.19 1211.21 L1936.6 1211.21 L1936.01 1211.21 L1935.43 1211.21 L1934.84 1211.21 L1934.25 1211.21 L1933.67 1211.21 L1933.08 1211.21 L1932.5 1211.21 L1931.91 1211.21 L1931.32 1211.21 L1930.74 1211.21 L1930.15 1211.21 L1929.56 1211.21 L1928.98 1211.21 L1928.39 1211.21 L1927.8 1211.21 L1927.22 1211.21 L1926.63 1211.21 L1926.04 1211.21 L1925.46 1211.21 L1924.87 1211.21 L1924.29 1211.21 L1923.7 1211.21 L1923.11 1211.21 L1922.53 1211.21 L1921.94 1211.21 L1921.35 1211.21 L1920.77 1211.21 L1920.18 1211.21 L1919.59 1211.21 L1919.01 1211.21 L1918.42 1211.21 L1917.83 1211.21 L1917.25 1211.21 L1916.66 1211.21 L1916.08 1211.21 L1915.49 1211.21 L1914.9 1211.21 L1914.32 1211.21 L1913.73 1211.21 L1913.14 1211.21 L1912.56 1211.21 L1911.97 1211.21 L1911.38 1211.21 L1910.8 1211.21 L1910.21 1211.21 L1909.63 1211.21 L1909.04 1211.21 L1908.45 1211.21 L1907.87 1211.21 L1907.28 1211.21 L1906.69 1211.21 L1906.11 1211.21 L1905.52 1211.21 L1904.93 1211.21 L1904.35 1211.21 L1903.76 1211.21 L1903.17 1211.21 L1902.59 1211.21 L1902 1211.21 L1901.42 1211.21 L1900.83 1211.21 L1900.24 1211.21 L1899.66 1211.21 L1899.07 1211.21 L1898.48 1211.21 L1897.9 1211.21 L1897.31 1211.21 L1896.72 1211.21 L1896.14 1211.21 L1895.55 1211.21 L1894.96 1211.21 L1894.38 1211.21 L1893.79 1211.21 L1893.21 1211.21 L1892.62 1211.21 L1892.03 1211.21 L1891.45 1211.21 L1890.86 1211.21 L1890.27 1211.21 L1889.69 1211.21 L1889.1 1211.21 L1888.51 1211.21 L1887.93 1211.21 L1887.34 1211.21 L1886.76 1211.21 L1886.17 1211.21 L1885.58 1211.21 L1885 1211.21 L1884.41 1211.21 L1883.82 1211.21 L1883.24 1211.21 L1882.65 1211.21 L1882.06 1211.21 L1881.48 1211.21 L1880.89 1211.21 L1880.3 1211.21 L1879.72 1211.21 L1879.13 1211.21 L1878.55 1211.21 L1877.96 1211.21 L1877.37 1211.21 L1876.79 1211.21 L1876.2 1211.21 L1875.61 1211.21 L1875.03 1211.21 L1874.44 1211.21 L1873.85 1211.21 L1873.27 1211.21 L1872.68 1211.21 L1872.09 1211.21 L1871.51 1211.21 L1870.92 1211.21 L1870.34 1211.21 L1869.75 1211.21 L1869.16 1211.21 L1868.58 1211.21 L1867.99 1211.21 L1867.4 1211.21 L1866.82 1211.21 L1866.23 1211.21 L1865.64 1211.21 L1865.06 1211.21 L1864.47 1211.21 L1863.88 1211.21 L1863.3 1211.21 L1862.71 1211.21 L1862.13 1211.21 L1861.54 1211.21 L1860.95 1211.21 L1860.37 1211.21 L1859.78 1211.21 L1859.19 1211.21 L1858.61 1211.21 L1858.02 1211.21 L1857.43 1211.21 L1856.85 1211.21 L1856.26 1211.21 L1855.68 1211.21 L1855.09 1211.21 L1854.5 1211.21 L1853.92 1211.21 L1853.33 1211.21 L1852.74 1211.21 L1852.16 1211.21 L1851.57 1211.21 L1850.98 1211.21 L1850.4 1211.21 L1849.81 1211.21 L1849.22 1211.21 L1848.64 1211.21 L1848.05 1211.21 L1847.47 1211.21 L1846.88 1211.21 L1846.29 1211.21 L1845.71 1211.21 L1845.12 1211.21 L1844.53 1211.21 L1843.95 1211.21 L1843.36 1211.21 L1842.77 1211.21 L1842.19 1211.21 L1841.6 1211.21 L1841.01 1211.21 L1840.43 1211.21 L1839.84 1211.21 L1839.26 1211.21 L1838.67 1211.21 L1838.08 1211.21 L1837.5 1211.21 L1836.91 1211.21 L1836.32 1211.21 L1835.74 1211.21 L1835.15 1211.21 L1834.56 1211.21 L1833.98 1211.21 L1833.39 1211.21 L1832.81 1211.21 L1832.22 1211.21 L1831.63 1211.21 L1831.05 1211.21 L1830.46 1211.21 L1829.87 1211.21 L1829.29 1211.21 L1828.7 1211.21 L1828.11 1211.21 L1827.53 1211.21 L1826.94 1211.21 L1826.35 1211.21 L1825.77 1211.21 L1825.18 1211.21 L1824.6 1211.21 L1824.01 1211.21 L1823.42 1211.21 L1822.84 1211.21 L1822.25 1211.21 L1821.66 1211.21 L1821.08 1211.21 L1820.49 1211.21 L1819.9 1211.21 L1819.32 1211.21 L1818.73 1211.21 L1818.14 1211.21 L1817.56 1211.21 L1816.97 1211.21 L1816.39 1211.21 L1815.8 1211.21 L1815.21 1211.21 L1814.63 1211.21 L1814.04 1211.21 L1813.45 1211.21 L1812.87 1211.21 L1812.28 1211.21 L1811.69 1211.21 L1811.11 1211.21 L1810.52 1211.21 L1809.94 1211.21 L1809.35 1211.21 L1808.76 1211.21 L1808.18 1211.21 L1807.59 1211.21 L1807 1211.21 L1806.42 1211.21 L1805.83 1211.21 L1805.24 1211.21 L1804.66 1211.21 L1804.07 1211.21 L1803.48 1211.21 L1802.9 1211.21 L1802.31 1211.21 L1801.73 1211.21 L1801.14 1211.21 L1800.55 1211.21 L1799.97 1211.21 L1799.38 1211.21 L1798.79 1211.21 L1798.21 1211.21 L1797.62 1211.21 L1797.03 1211.21 L1796.45 1211.21 L1795.86 1211.21 L1795.27 1211.21 L1794.69 1211.21 L1794.1 1211.21 L1793.52 1211.21 L1792.93 1211.21 L1792.34 1211.21 L1791.76 1211.21 L1791.17 1211.21 L1790.58 1211.21 L1790 1211.21 L1789.41 1211.21 L1788.82 1211.21 L1788.24 1211.21 L1787.65 1211.21 L1787.06 1211.21 L1786.48 1211.21 L1785.89 1211.21 L1785.31 1211.21 L1784.72 1211.21 L1784.13 1211.21 L1783.55 1211.21 L1782.96 1211.21 L1782.37 1211.21 L1781.79 1211.21 L1781.2 1211.21 L1780.61 1211.21 L1780.03 1211.21 L1779.44 1211.21 L1778.86 1211.21 L1778.27 1211.21 L1777.68 1211.21 L1777.1 1211.21 L1776.51 1211.21 L1775.92 1211.21 L1775.34 1211.21 L1774.75 1211.21 L1774.16 1211.21 L1773.58 1211.21 L1772.99 1211.21 L1772.4 1211.21 L1771.82 1211.21 L1771.23 1211.21 L1770.65 1211.21 L1770.06 1211.21 L1769.47 1211.21 L1768.89 1211.21 L1768.3 1211.21 L1767.71 1211.21 L1767.13 1211.21 L1766.54 1211.21 L1765.95 1211.21 L1765.37 1211.21 L1764.78 1211.21 L1764.19 1211.21 L1763.61 1211.21 L1763.02 1211.21 L1762.44 1211.21 L1761.85 1211.21 L1761.26 1211.21 L1760.68 1211.21 L1760.09 1211.21 L1759.5 1211.21 L1758.92 1211.21 L1758.33 1211.21 L1757.74 1211.21 L1757.16 1211.21 L1756.57 1211.21 L1755.99 1211.21 L1755.4 1211.21 L1754.81 1211.21 L1754.23 1211.21 L1753.64 1211.21 L1753.05 1211.21 L1752.47 1211.21 L1751.88 1211.21 L1751.29 1211.21 L1750.71 1211.21 L1750.12 1211.21 L1749.53 1211.21 L1748.95 1211.21 L1748.36 1211.21 L1747.78 1211.21 L1747.19 1211.21 L1746.6 1211.21 L1746.02 1211.21 L1745.43 1211.21 L1744.84 1211.21 L1744.26 1211.21 L1743.67 1211.21 L1743.08 1211.21 L1742.5 1211.21 L1741.91 1211.21 L1741.32 1211.21 L1740.74 1211.21 L1740.15 1211.21 L1739.57 1211.21 L1738.98 1211.21 L1738.39 1211.21 L1737.81 1211.21 L1737.22 1211.21 L1736.63 1211.21 L1736.05 1211.21 L1735.46 1211.21 L1734.87 1211.21 L1734.29 1211.21 L1733.7 1211.21 L1733.11 1211.21 L1732.53 1211.21 L1731.94 1211.21 L1731.36 1211.21 L1730.77 1211.21 L1730.18 1211.21 L1729.6 1211.21 L1729.01 1211.21 L1728.42 1211.21 L1727.84 1211.21 L1727.25 1211.21 L1726.66 1211.21 L1726.08 1211.21 L1725.49 1211.21 L1724.91 1211.21 L1724.32 1211.21 L1723.73 1211.21 L1723.15 1211.21 L1722.56 1211.21 L1721.97 1211.21 L1721.39 1211.21 L1720.8 1211.21 L1720.21 1211.21 L1719.63 1211.21 L1719.04 1211.21 L1718.45 1211.21 L1717.87 1211.21 L1717.28 1211.21 L1716.7 1211.21 L1716.11 1211.21 L1715.52 1211.21 L1714.94 1211.21 L1714.35 1211.21 L1713.76 1211.21 L1713.18 1211.21 L1712.59 1211.21 L1712 1211.21 L1711.42 1211.21 L1710.83 1211.21 L1710.24 1211.21 L1709.66 1211.21 L1709.07 1211.21 L1708.49 1211.21 L1707.9 1211.21 L1707.31 1211.21 L1706.73 1211.21 L1706.14 1211.21 L1705.55 1211.21 L1704.97 1211.21 L1704.38 1211.21 L1703.79 1211.21 L1703.21 1211.21 L1702.62 1211.21 L1702.04 1211.21 L1701.45 1211.21 L1700.86 1211.21 L1700.28 1211.21 L1699.69 1211.21 L1699.1 1211.21 L1698.52 1211.21 L1697.93 1211.21 L1697.34 1211.21 L1696.76 1211.21 L1696.17 1211.21 L1695.58 1211.21 L1695 1211.21 L1694.41 1211.21 L1693.83 1211.21 L1693.24 1211.21 L1692.65 1211.21 L1692.07 1211.21 L1691.48 1211.21 L1690.89 1211.21 L1690.31 1211.21 L1689.72 1211.21 L1689.13 1211.21 L1688.55 1211.21 L1687.96 1211.21 L1687.37 1211.21 L1686.79 1211.21 L1686.2 1211.21 L1685.62 1211.21 L1685.03 1211.21 L1684.44 1211.21 L1683.86 1211.21 L1683.27 1211.21 L1682.68 1211.21 L1682.1 1211.21 L1681.51 1211.21 L1680.92 1211.21 L1680.34 1211.21 L1679.75 1211.21 L1679.17 1211.21 L1678.58 1211.21 L1677.99 1211.21 L1677.41 1211.21 L1676.82 1211.21 L1676.23 1211.21 L1675.65 1211.21 L1675.06 1211.21 L1674.47 1211.21 L1673.89 1211.21 L1673.3 1211.21 L1672.71 1211.21 L1672.13 1211.21 L1671.54 1211.21 L1670.96 1211.21 L1670.37 1211.21 L1669.78 1211.21 L1669.2 1211.21 L1668.61 1211.21 L1668.02 1211.21 L1667.44 1211.21 L1666.85 1211.21 L1666.26 1211.21 L1665.68 1211.21 L1665.09 1211.21 L1664.5 1211.21 L1663.92 1211.21 L1663.33 1211.21 L1662.75 1211.21 L1662.16 1211.21 L1661.57 1211.21 L1660.99 1211.21 L1660.4 1211.21 L1659.81 1211.21 L1659.23 1211.21 L1658.64 1211.21 L1658.05 1211.21 L1657.47 1211.21 L1656.88 1211.21 L1656.29 1211.21 L1655.71 1211.21 L1655.12 1211.21 L1654.54 1211.21 L1653.95 1211.21 L1653.36 1211.21 L1652.78 1211.21 L1652.19 1211.21 L1651.6 1211.21 L1651.02 1211.21 L1650.43 1211.21 L1649.84 1211.21 L1649.26 1211.21 L1648.67 1211.21 L1648.09 1211.21 L1647.5 1211.21 L1646.91 1211.21 L1646.33 1211.21 L1645.74 1211.21 L1645.15 1211.21 L1644.57 1211.21 L1643.98 1211.21 L1643.39 1211.21 L1642.81 1211.21 L1642.22 1211.21 L1641.63 1211.21 L1641.05 1211.21 L1640.46 1211.21 L1639.88 1211.21 L1639.29 1211.21 L1638.7 1211.21 L1638.12 1211.21 L1637.53 1211.21 L1636.94 1211.21 L1636.36 1211.21 L1635.77 1211.21 L1635.18 1211.21 L1634.6 1211.21 L1634.01 1211.21 L1633.42 1211.21 L1632.84 1211.21 L1632.25 1211.21 L1631.67 1211.21 L1631.08 1211.21 L1630.49 1211.21 L1629.91 1211.21 L1629.32 1211.21 L1628.73 1211.21 L1628.15 1211.21 L1627.56 1211.21 L1626.97 1211.21 L1626.39 1211.21 L1625.8 1211.21 L1625.22 1211.21 L1624.63 1211.21 L1624.04 1211.21 L1623.46 1211.21 L1622.87 1211.21 L1622.28 1211.21 L1621.7 1211.21 L1621.11 1211.21 L1620.52 1211.21 L1619.94 1211.21 L1619.35 1211.21 L1618.76 1211.21 L1618.18 1211.21 L1617.59 1211.21 L1617.01 1211.21 L1616.42 1211.21 L1615.83 1211.21 L1615.25 1211.21 L1614.66 1211.21 L1614.07 1211.21 L1613.49 1211.21 L1612.9 1211.21 L1612.31 1211.21 L1611.73 1211.21 L1611.14 1211.21 L1610.55 1211.21 L1609.97 1211.21 L1609.38 1211.21 L1608.8 1211.21 L1608.21 1211.21 L1607.62 1211.21 L1607.04 1211.21 L1606.45 1211.21 L1605.86 1211.21 L1605.28 1211.21 L1604.69 1211.21 L1604.1 1211.21 L1603.52 1211.21 L1602.93 1211.21 L1602.34 1211.21 L1601.76 1211.21 L1601.17 1211.21 L1600.59 1211.21 L1600 1211.21 L1599.41 1211.21 L1598.83 1211.21 L1598.24 1211.21 L1597.65 1211.21 L1597.07 1211.21 L1596.48 1211.21 L1595.89 1211.21 L1595.31 1211.21 L1594.72 1211.21 L1594.14 1211.21 L1593.55 1211.21 L1592.96 1211.21 L1592.38 1211.21 L1591.79 1211.21 L1591.2 1211.21 L1590.62 1211.21 L1590.03 1211.21 L1589.44 1211.21 L1588.86 1211.21 L1588.27 1211.21 L1587.68 1211.21 L1587.1 1211.21 L1586.51 1211.21 L1585.93 1211.21 L1585.34 1211.21 L1584.75 1211.21 L1584.17 1211.21 L1583.58 1211.21 L1582.99 1211.21 L1582.41 1211.21 L1581.82 1211.21 L1581.23 1211.21 L1580.65 1211.21 L1580.06 1211.21 L1579.47 1211.21 L1578.89 1211.21 L1578.3 1211.21 L1577.72 1211.21 L1577.13 1211.21 L1576.54 1211.21 L1575.96 1211.21 L1575.37 1211.21 L1574.78 1211.21 L1574.2 1211.21 L1573.61 1211.21 L1573.02 1211.21 L1572.44 1211.21 L1571.85 1211.21 L1571.27 1211.21 L1570.68 1211.21 L1570.09 1211.21 L1569.51 1211.21 L1568.92 1211.21 L1568.33 1211.21 L1567.75 1211.21 L1567.16 1211.21 L1566.57 1211.21 L1565.99 1211.21 L1565.4 1211.21 L1564.81 1211.21 L1564.23 1211.21 L1563.64 1211.21 L1563.06 1211.21 L1562.47 1211.21 L1561.88 1211.21 L1561.3 1211.21 L1560.71 1211.21 L1560.12 1211.21 L1559.54 1211.21 L1558.95 1211.21 L1558.36 1211.21 L1557.78 1211.21 L1557.19 1211.21 L1556.6 1211.21 L1556.02 1211.21 L1555.43 1211.21 L1554.85 1211.21 L1554.26 1211.21 L1553.67 1211.21 L1553.09 1211.21 L1552.5 1211.21 L1551.91 1211.21 L1551.33 1211.21 L1550.74 1211.21 L1550.15 1211.21 L1549.57 1211.21 L1548.98 1211.21 L1548.4 1211.21 L1547.81 1211.21 L1547.22 1211.21 L1546.64 1211.21 L1546.05 1211.21 L1545.46 1211.21 L1544.88 1211.21 L1544.29 1211.21 L1543.7 1211.21 L1543.12 1211.21 L1542.53 1211.21 L1541.94 1211.21 L1541.36 1211.21 L1540.77 1211.21 L1540.19 1211.21 L1539.6 1211.21 L1539.01 1211.21 L1538.43 1211.21 L1537.84 1211.21 L1537.25 1211.21 L1536.67 1211.21 L1536.08 1211.21 L1535.49 1211.21 L1534.91 1211.21 L1534.32 1211.21 L1533.73 1211.21 L1533.15 1211.21 L1532.56 1211.21 L1531.98 1211.21 L1531.39 1211.21 L1530.8 1211.21 L1530.22 1211.21 L1529.63 1211.21 L1529.04 1211.21 L1528.46 1211.21 L1527.87 1211.21 L1527.28 1211.21 L1526.7 1211.21 L1526.11 1211.21 L1525.52 1211.21 L1524.94 1211.21 L1524.35 1211.21 L1523.77 1211.21 L1523.18 1211.21 L1522.59 1211.21 L1522.01 1211.21 L1521.42 1211.21 L1520.83 1211.21 L1520.25 1211.21 L1519.66 1211.21 L1519.07 1211.21 L1518.49 1211.21 L1517.9 1211.21 L1517.32 1211.21 L1516.73 1211.21 L1516.14 1211.21 L1515.56 1211.21 L1514.97 1211.21 L1514.38 1211.21 L1513.8 1211.21 L1513.21 1211.21 L1512.62 1211.21 L1512.04 1211.21 L1511.45 1211.21 L1510.86 1211.21 L1510.28 1211.21 L1509.69 1211.21 L1509.11 1211.21 L1508.52 1211.21 L1507.93 1211.21 L1507.35 1211.21 L1506.76 1211.21 L1506.17 1211.21 L1505.59 1211.21 L1505 1211.21 L1504.41 1211.21 L1503.83 1211.21 L1503.24 1211.21 L1502.65 1211.21 L1502.07 1211.21 L1501.48 1211.21 L1500.9 1211.21 L1500.31 1211.21 L1499.72 1211.21 L1499.14 1211.21 L1498.55 1211.21 L1497.96 1211.21 L1497.38 1211.21 L1496.79 1211.21 L1496.2 1211.21 L1495.62 1211.21 L1495.03 1211.21 L1494.45 1211.21 L1493.86 1211.21 L1493.27 1211.21 L1492.69 1211.21 L1492.1 1211.21 L1491.51 1211.21 L1490.93 1211.21 L1490.34 1211.21 L1489.75 1211.21 L1489.17 1211.21 L1488.58 1211.21 L1487.99 1211.21 L1487.41 1211.21 L1486.82 1211.21 L1486.24 1211.21 L1485.65 1211.21 L1485.06 1211.21 L1484.48 1211.21 L1483.89 1211.21 L1483.3 1211.21 L1482.72 1211.21 L1482.13 1211.21 L1481.54 1211.21 L1480.96 1211.21 L1480.37 1211.21 L1479.78 1211.21 L1479.2 1211.21 L1478.61 1211.21 L1478.03 1211.21 L1477.44 1211.21 L1476.85 1211.21 L1476.27 1211.21 L1475.68 1211.21 L1475.09 1211.21 L1474.51 1211.21 L1473.92 1211.21 L1473.33 1211.21 L1472.75 1211.21 L1472.16 1211.21 L1471.57 1211.21 L1470.99 1211.21 L1470.4 1211.21 L1469.82 1211.21 L1469.23 1211.21 L1468.64 1211.21 L1468.06 1211.21 L1467.47 1211.21 L1466.88 1211.21 L1466.3 1211.21 L1465.71 1211.21 L1465.12 1211.21 L1464.54 1211.21 L1463.95 1211.21 L1463.37 1211.21 L1462.78 1211.21 L1462.19 1211.21 L1461.61 1211.21 L1461.02 1211.21 L1460.43 1211.21 L1459.85 1211.21 L1459.26 1211.21 L1458.67 1211.21 L1458.09 1211.21 L1457.5 1211.21 L1456.91 1211.21 L1456.33 1211.21 L1455.74 1211.21 L1455.16 1211.21 L1454.57 1211.21 L1453.98 1211.21 L1453.4 1211.21 L1452.81 1211.21 L1452.22 1211.21 L1451.64 1211.21 L1451.05 1211.21 L1450.46 1211.21 L1449.88 1211.21 L1449.29 1211.21 L1448.7 1211.21 L1448.12 1211.21 L1447.53 1211.21 L1446.95 1211.21 L1446.36 1211.21 L1445.77 1211.21 L1445.19 1211.21 L1444.6 1211.21 L1444.01 1211.21 L1443.43 1211.21 L1442.84 1211.21 L1442.25 1211.21 L1441.67 1211.21 L1441.08 1211.21 L1440.5 1211.21 L1439.91 1211.21 L1439.32 1211.21 L1438.74 1211.21 L1438.15 1211.21 L1437.56 1211.21 L1436.98 1211.21 L1436.39 1211.21 L1435.8 1211.21 L1435.22 1211.21 L1434.63 1211.21 L1434.04 1211.21 L1433.46 1211.21 L1432.87 1211.21 L1432.29 1211.21 L1431.7 1211.21 L1431.11 1211.21 L1430.53 1211.21 L1429.94 1211.21 L1429.35 1211.21 L1428.77 1211.21 L1428.18 1211.21 L1427.59 1211.21 L1427.01 1211.21 L1426.42 1211.21 L1425.83 1211.21 L1425.25 1211.21 L1424.66 1211.21 L1424.08 1211.21 L1423.49 1211.21 L1422.9 1211.21 L1422.32 1211.21 L1421.73 1211.21 L1421.14 1211.21 L1420.56 1211.21 L1419.97 1211.21 L1419.38 1211.21 L1418.8 1211.21 L1418.21 1211.21 L1417.63 1211.21 L1417.04 1211.21 L1416.45 1211.21 L1415.87 1211.21 L1415.28 1211.21 L1414.69 1211.21 L1414.11 1211.21 L1413.52 1211.21 L1412.93 1211.21 L1412.35 1211.21 L1411.76 1211.21 L1411.17 1211.21 L1410.59 1211.21 L1410 1211.21 L1409.42 1211.21 L1408.83 1211.21 L1408.24 1211.21 L1407.66 1211.21 L1407.07 1211.21 L1406.48 1211.21 L1405.9 1211.21 L1405.31 1211.21 L1404.72 1211.21 L1404.14 1211.21 L1403.55 1211.21 L1402.96 1211.21 L1402.38 1211.21 L1401.79 1211.21 L1401.21 1211.21 L1400.62 1211.21 L1400.03 1211.21 L1399.45 1211.21 L1398.86 1211.21 L1398.27 1211.21 L1397.69 1211.21 L1397.1 1211.21 L1396.51 1211.21 L1395.93 1211.21 L1395.34 1211.21 L1394.75 1211.21 L1394.17 1211.21 L1393.58 1211.21 L1393 1211.21 L1392.41 1211.21 L1391.82 1211.21 L1391.24 1211.21 L1390.65 1211.21 L1390.06 1211.21 L1389.48 1211.21 L1388.89 1211.21 L1388.3 1211.21 L1387.72 1211.21 L1387.13 1211.21 L1386.55 1211.21 L1385.96 1211.21 L1385.37 1211.21 L1384.79 1211.21 L1384.2 1211.21 L1383.61 1211.21 L1383.03 1211.21 L1382.44 1211.21 L1381.85 1211.21 L1381.27 1211.21 L1380.68 1211.21 L1380.09 1211.21 L1379.51 1211.21 L1378.92 1211.21 L1378.34 1211.21 L1377.75 1211.21 L1377.16 1211.21 L1376.58 1211.21 L1375.99 1211.21 L1375.4 1211.21 L1374.82 1211.21 L1374.23 1211.21 L1373.64 1211.21 L1373.06 1211.21 L1372.47 1211.21 L1371.88 1211.21 L1371.3 1211.21 L1370.71 1211.21 L1370.13 1211.21 L1369.54 1211.21 L1368.95 1211.21 L1368.37 1211.21 L1367.78 1211.21 L1367.19 1211.21 L1366.61 1211.21 L1366.02 1211.21 L1365.43 1211.21 L1364.85 1211.21 L1364.26 1211.21 L1363.68 1211.21 L1363.09 1211.21 L1362.5 1211.21 L1361.92 1211.21 L1361.33 1211.21 L1360.74 1211.21 L1360.16 1211.21 L1359.57 1211.21 L1358.98 1211.21 L1358.4 1211.21 L1357.81 1211.21 L1357.22 1211.21 L1356.64 1211.21 L1356.05 1211.21 L1355.47 1211.21 L1354.88 1211.21 L1354.29 1211.21 L1353.71 1211.21 L1353.12 1211.21 L1352.53 1211.21 L1351.95 1211.21 L1351.36 1211.21 L1350.77 1211.21 L1350.19 1211.21 L1349.6 1211.21 L1349.01 1211.21 L1348.43 1211.21 L1347.84 1211.21 L1347.26 1211.21 L1346.67 1211.21 L1346.08 1211.21 L1345.5 1211.21 L1344.91 1211.21 L1344.32 1211.21 L1343.74 1211.21 L1343.15 1211.21 L1342.56 1211.21 L1341.98 1211.21 L1341.39 1211.21 L1340.8 1211.21 L1340.22 1211.21 L1339.63 1211.21 L1339.05 1211.21 L1338.46 1211.21 L1337.87 1211.21 L1337.29 1211.21 L1336.7 1211.21 L1336.11 1211.21 L1335.53 1211.21 L1334.94 1211.21 L1334.35 1211.21 L1333.77 1211.21 L1333.18 1211.21 L1332.6 1211.21 L1332.01 1211.21 L1331.42 1211.21 L1330.84 1211.21 L1330.25 1211.21 L1329.66 1211.21 L1329.08 1211.21 L1328.49 1211.21 L1327.9 1211.21 L1327.32 1211.21 L1326.73 1211.21 L1326.14 1211.21 L1325.56 1211.21 L1324.97 1211.21 L1324.39 1211.21 L1323.8 1211.21 L1323.21 1211.21 L1322.63 1211.21 L1322.04 1211.21 L1321.45 1211.21 L1320.87 1211.21 L1320.28 1211.21 L1319.69 1211.21 L1319.11 1211.21 L1318.52 1211.21 L1317.93 1211.21 L1317.35 1211.21 L1316.76 1211.21 L1316.18 1211.21 L1315.59 1211.21 L1315 1211.21 L1314.42 1211.21 L1313.83 1211.21 L1313.24 1211.21 L1312.66 1211.21 L1312.07 1211.21 L1311.48 1211.21 L1310.9 1211.21 L1310.31 1211.21 L1309.73 1211.21 L1309.14 1211.21 L1308.55 1211.21 L1307.97 1211.21 L1307.38 1211.21 L1306.79 1211.21 L1306.21 1211.21 L1305.62 1211.21 L1305.03 1211.21 L1304.45 1211.21 L1303.86 1211.21 L1303.27 1211.21 L1302.69 1211.21 L1302.1 1211.21 L1301.52 1211.21 L1300.93 1211.21 L1300.34 1211.21 L1299.76 1211.21 L1299.17 1211.21 L1298.58 1211.21 L1298 1211.21 L1297.41 1211.21 L1296.82 1211.21 L1296.24 1211.21 L1295.65 1211.21 L1295.06 1211.21 L1294.48 1211.21 L1293.89 1211.21 L1293.31 1211.21 L1292.72 1211.21 L1292.13 1211.21 L1291.55 1211.21 L1290.96 1211.21 L1290.37 1211.21 L1289.79 1211.21 L1289.2 1211.21 L1288.61 1211.21 L1288.03 1211.21 L1287.44 1211.21 L1286.86 1211.21 L1286.27 1211.21 L1285.68 1211.21 L1285.1 1211.21 L1284.51 1211.21 L1283.92 1211.21 L1283.34 1211.21 L1282.75 1211.21 L1282.16 1211.21 L1281.58 1211.21 L1280.99 1211.21 L1280.4 1211.21 L1279.82 1211.21 L1279.23 1211.21 L1278.65 1211.21 L1278.06 1211.21 L1277.47 1211.21 L1276.89 1211.21 L1276.3 1211.21 L1275.71 1211.21 L1275.13 1211.21 L1274.54 1211.21 L1273.95 1211.21 L1273.37 1211.21 L1272.78 1211.21 L1272.19 1211.21 L1271.61 1211.21 L1271.02 1211.21 L1270.44 1211.21 L1269.85 1211.21 L1269.26 1211.21 L1268.68 1211.21 L1268.09 1211.21 L1267.5 1211.21 L1266.92 1211.21 L1266.33 1211.21 L1265.74 1211.21 L1265.16 1211.21 L1264.57 1211.21 L1263.98 1211.21 L1263.4 1211.21 L1262.81 1211.21 L1262.23 1211.21 L1261.64 1211.21 L1261.05 1211.21 L1260.47 1211.21 L1259.88 1211.21 L1259.29 1211.21 L1258.71 1211.21 L1258.12 1211.21 L1257.53 1211.21 L1256.95 1211.21 L1256.36 1211.21 L1255.78 1211.21 L1255.19 1211.21 L1254.6 1211.21 L1254.02 1211.21 L1253.43 1211.21 L1252.84 1211.21 L1252.26 1211.21 L1251.67 1211.21 L1251.08 1211.21 L1250.5 1211.21 L1249.91 1211.21 L1249.32 1211.21 L1248.74 1211.21 L1248.15 1211.21 L1247.57 1211.21 L1246.98 1211.21 L1246.39 1211.21 L1245.81 1211.21 L1245.22 1211.21 L1244.63 1211.21 L1244.05 1211.21 L1243.46 1211.21 L1242.87 1211.21 L1242.29 1211.21 L1241.7 1211.21 L1241.11 1211.21 L1240.53 1211.21 L1239.94 1211.21 L1239.36 1211.21 L1238.77 1211.21 L1238.18 1211.21 L1237.6 1211.21 L1237.01 1211.21 L1236.42 1211.21 L1235.84 1211.21 L1235.25 1211.21 L1234.66 1211.21 L1234.08 1211.21 L1233.49 1211.21 L1232.91 1211.21 L1232.32 1211.21 L1231.73 1211.21 L1231.15 1211.21 L1230.56 1211.21 L1229.97 1211.21 L1229.39 1211.21 L1228.8 1211.21 L1228.21 1211.21 L1227.63 1211.21 L1227.04 1211.21 L1226.45 1211.21 L1225.87 1211.21 L1225.28 1211.21 L1224.7 1211.21 L1224.11 1211.21 L1223.52 1211.21 L1222.94 1211.21 L1222.35 1211.21 L1221.76 1211.21 L1221.18 1211.21 L1220.59 1211.21 L1220 1211.21 L1219.42 1211.21 L1218.83 1211.21 L1218.24 1211.21 L1217.66 1211.21 L1217.07 1211.21 L1216.49 1211.21 L1215.9 1211.21 L1215.31 1211.21 L1214.73 1211.21 L1214.14 1211.21 L1213.55 1211.21 L1212.97 1211.21 L1212.38 1211.21 L1211.79 1211.21 L1211.21 1211.21 L1210.62 1211.21 L1210.03 1211.21 L1209.45 1211.21 L1208.86 1211.21 L1208.28 1211.21 L1207.69 1211.21 L1207.1 1211.21 L1206.52 1211.21 L1205.93 1211.21 L1205.34 1211.21 L1204.76 1211.21 L1204.17 1211.21 L1203.58 1211.21 L1203 1211.21 L1202.41 1211.21 L1201.83 1211.21 L1201.24 1211.21 L1200.65 1211.21 L1200.07 1211.21 L1199.48 1211.21 L1198.89 1211.21 L1198.31 1211.21 L1197.72 1211.21 L1197.13 1211.21 L1196.55 1211.21 L1195.96 1211.21 L1195.37 1211.21 L1194.79 1211.21 L1194.2 1211.21 L1193.62 1211.21 L1193.03 1211.21 L1192.44 1211.21 L1191.86 1211.21 L1191.27 1211.21 L1190.68 1211.21 L1190.1 1211.21 L1189.51 1211.21 L1188.92 1211.21 L1188.34 1211.21 L1187.75 1211.21 L1187.16 1211.21 L1186.58 1211.21 L1185.99 1211.21 L1185.41 1211.21 L1184.82 1211.21 L1184.23 1211.21 L1183.65 1211.21 L1183.06 1211.21 L1182.47 1211.21 L1181.89 1211.21 L1181.3 1211.21 L1180.71 1211.21 L1180.13 1211.21 L1179.54 1211.21 L1178.96 1211.21 L1178.37 1211.21 L1177.78 1211.21 L1177.2 1211.21 L1176.61 1211.21 L1176.02 1211.21 L1175.44 1211.21 L1174.85 1211.21 L1174.26 1211.21 L1173.68 1211.21 L1173.09 1211.21 L1172.5 1211.21 L1171.92 1211.21 L1171.33 1211.21 L1170.75 1211.21 L1170.16 1211.21 L1169.57 1211.21 L1168.99 1211.21 L1168.4 1211.21 L1167.81 1211.21 L1167.23 1211.21 L1166.64 1211.21 L1166.05 1211.21 L1165.47 1211.21 L1164.88 1211.21 L1164.29 1211.21 L1163.71 1211.21 L1163.12 1211.21 L1162.54 1211.21 L1161.95 1211.21 L1161.36 1211.21 L1160.78 1211.21 L1160.19 1211.21 L1159.6 1211.21 L1159.02 1211.21 L1158.43 1211.21 L1157.84 1211.21 L1157.26 1211.21 L1156.67 1211.21 L1156.09 1211.21 L1155.5 1211.21 L1154.91 1211.21 L1154.33 1211.21 L1153.74 1211.21 L1153.15 1211.21 L1152.57 1211.21 L1151.98 1211.21 L1151.39 1211.21 L1150.81 1211.21 L1150.22 1211.21 L1149.63 1211.21 L1149.05 1211.21 L1148.46 1211.21 L1147.88 1211.21 L1147.29 1211.21 L1146.7 1211.21 L1146.12 1211.21 L1145.53 1211.21 L1144.94 1211.21 L1144.36 1211.21 L1143.77 1211.21 L1143.18 1211.21 L1142.6 1211.21 L1142.01 1211.21 L1141.42 1211.21 L1140.84 1211.21 L1140.25 1211.21 L1139.67 1211.21 L1139.08 1211.21 L1138.49 1211.21 L1137.91 1211.21 L1137.32 1211.21 L1136.73 1211.21 L1136.15 1211.21 L1135.56 1211.21 L1134.97 1211.21 L1134.39 1211.21 L1133.8 1211.21 L1133.21 1211.21 L1132.63 1211.21 L1132.04 1211.21 L1131.46 1211.21 L1130.87 1211.21 L1130.28 1211.21 L1129.7 1211.21 L1129.11 1211.21 L1128.52 1211.21 L1127.94 1211.21 L1127.35 1211.21 L1126.76 1211.21 L1126.18 1211.21 L1125.59 1211.21 L1125.01 1211.21 L1124.42 1211.21 L1123.83 1211.21 L1123.25 1211.21 L1122.66 1211.21 L1122.07 1211.21 L1121.49 1211.21 L1120.9 1211.21 L1120.31 1211.21 L1119.73 1211.21 L1119.14 1211.21 L1118.55 1211.21 L1117.97 1211.21 L1117.38 1211.21 L1116.8 1211.21 L1116.21 1211.21 L1115.62 1211.21 L1115.04 1211.21 L1114.45 1211.21 L1113.86 1211.21 L1113.28 1211.21 L1112.69 1211.21 L1112.1 1211.21 L1111.52 1211.21 L1110.93 1211.21 L1110.34 1211.21 L1109.76 1211.21 L1109.17 1211.21 L1108.59 1211.21 L1108 1211.21 L1107.41 1211.21 L1106.83 1211.21 L1106.24 1211.21 L1105.65 1211.21 L1105.07 1211.21 L1104.48 1211.21 L1103.89 1211.21 L1103.31 1211.21 L1102.72 1211.21 L1102.14 1211.21 L1101.55 1211.21 L1100.96 1211.21 L1100.38 1211.21 L1099.79 1211.21 L1099.2 1211.21 L1098.62 1211.21 L1098.03 1211.21 L1097.44 1211.21 L1096.86 1211.21 L1096.27 1211.21 L1095.68 1211.21 L1095.1 1211.21 L1094.51 1211.21 L1093.93 1211.21 L1093.34 1211.21 L1092.75 1211.21 L1092.17 1211.21 L1091.58 1211.21 L1090.99 1211.21 L1090.41 1211.21 L1089.82 1211.21 L1089.23 1211.21 L1088.65 1211.21 L1088.06 1211.21 L1087.47 1211.21 L1086.89 1211.21 L1086.3 1211.21 L1085.72 1211.21 L1085.13 1211.21 L1084.54 1211.21 L1083.96 1211.21 L1083.37 1211.21 L1082.78 1211.21 L1082.2 1211.21 L1081.61 1211.21 L1081.02 1211.21 L1080.44 1211.21 L1079.85 1211.21 L1079.26 1211.21 L1078.68 1211.21 L1078.09 1211.21 L1077.51 1211.21 L1076.92 1211.21 L1076.33 1211.21 L1075.75 1211.21 L1075.16 1211.21 L1074.57 1211.21 L1073.99 1211.21 L1073.4 1211.21 L1072.81 1211.21 L1072.23 1211.21 L1071.64 1211.21 L1071.06 1211.21 L1070.47 1211.21 L1069.88 1211.21 L1069.3 1211.21 L1068.71 1211.21 L1068.12 1211.21 L1067.54 1211.21 L1066.95 1211.21 L1066.36 1211.21 L1065.78 1211.21 L1065.19 1211.21 L1064.6 1211.21 L1064.02 1211.21 L1063.43 1211.21 L1062.85 1211.21 L1062.26 1211.21 L1061.67 1211.21 L1061.09 1211.21 L1060.5 1211.21 L1059.91 1211.21 L1059.33 1211.21 L1058.74 1211.21 L1058.15 1211.21 L1057.57 1211.21 L1056.98 1211.21 L1056.39 1211.21 L1055.81 1211.21 L1055.22 1211.21 L1054.64 1211.21 L1054.05 1211.21 L1053.46 1211.21 L1052.88 1211.21 L1052.29 1211.21 L1051.7 1211.21 L1051.12 1211.21 L1050.53 1211.21 L1049.94 1211.21 L1049.36 1211.21 L1048.77 1211.21 L1048.19 1211.21 L1047.6 1211.21 L1047.01 1211.21 L1046.43 1211.21 L1045.84 1211.21 L1045.25 1211.21 L1044.67 1211.21 L1044.08 1211.21 L1043.49 1211.21 L1042.91 1211.21 L1042.32 1211.21 L1041.73 1211.21 L1041.15 1211.21 L1040.56 1211.21 L1039.98 1211.21 L1039.39 1211.21 L1038.8 1211.21 L1038.22 1211.21 L1037.63 1211.21 L1037.04 1211.21 L1036.46 1211.21 L1035.87 1211.21 L1035.28 1211.21 L1034.7 1211.21 L1034.11 1211.21 L1033.52 1211.21 L1032.94 1211.21 L1032.35 1211.21 L1031.77 1211.21 L1031.18 1211.21 L1030.59 1211.21 L1030.01 1211.21 L1029.42 1211.21 L1028.83 1211.21 L1028.25 1211.21 L1027.66 1211.21 L1027.07 1211.21 L1026.49 1211.21 L1025.9 1211.21 L1025.32 1211.21 L1024.73 1211.21 L1024.14 1211.21 L1023.56 1211.21 L1022.97 1211.21 L1022.38 1211.21 L1021.8 1211.21 L1021.21 1211.21 L1020.62 1211.21 L1020.04 1211.21 L1019.45 1211.21 L1018.86 1211.21 L1018.28 1211.21 L1017.69 1211.21 L1017.11 1211.21 L1016.52 1211.21 L1015.93 1211.21 L1015.35 1211.21 L1014.76 1211.21 L1014.17 1211.21 L1013.59 1211.21 L1013 1211.21 L1012.41 1211.21 L1011.83 1211.21 L1011.24 1211.21 L1010.65 1211.21 L1010.07 1211.21 L1009.48 1211.21 L1008.9 1211.21 L1008.31 1211.21 L1007.72 1211.21 L1007.14 1211.21 L1006.55 1211.21 L1005.96 1211.21 L1005.38 1211.21 L1004.79 1211.21 L1004.2 1211.21 L1003.62 1211.21 L1003.03 1211.21 L1002.44 1211.21 L1001.86 1211.21 L1001.27 1211.21 L1000.69 1211.21 L1000.1 1211.21 L999.513 1211.21 L998.926 1211.21 L998.34 1211.21 L997.754 1211.21 L997.167 1211.21 L996.581 1211.21 L995.994 1211.21 L995.408 1211.21 L994.822 1211.21 L994.235 1211.21 L993.649 1211.21 L993.062 1211.21 L992.476 1211.21 L991.889 1211.21 L991.303 1211.21 L990.717 1211.21 L990.13 1211.21 L989.544 1211.21 L988.957 1211.21 L988.371 1211.21 L987.785 1211.21 L987.198 1211.21 L986.612 1211.21 L986.025 1211.21  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip962)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1211.65 986.612,1211.65 987.198,1211.65 987.785,1211.65 988.371,1211.65 988.957,1211.65 989.544,1211.65 990.13,1211.65 990.717,1211.65 991.303,1211.65 991.889,1211.65 992.476,1211.65 993.062,1211.65 993.649,1211.65 994.235,1211.65 994.822,1211.65 995.408,1211.65 995.994,1211.65 996.581,1211.65 997.167,1211.65 997.754,1211.65 998.34,1211.65 998.926,1211.65 999.513,1211.65 1000.1,1211.65 1000.69,1211.65 1001.27,1211.65 1001.86,1211.65 1002.44,1211.65 1003.03,1211.65 1003.62,1211.65 1004.2,1211.65 1004.79,1211.65 1005.38,1211.65 1005.96,1211.65 1006.55,1211.65 1007.14,1211.65 1007.72,1211.65 1008.31,1211.65 1008.9,1211.65 1009.48,1211.65 1010.07,1211.65 1010.65,1211.65 1011.24,1211.65 1011.83,1211.65 1012.41,1211.65 1013,1211.65 1013.59,1211.65 1014.17,1211.65 1014.76,1211.65 1015.35,1211.65 1015.93,1211.65 1016.52,1211.65 1017.11,1211.65 1017.69,1211.65 1018.28,1211.65 1018.86,1211.65 1019.45,1211.65 1020.04,1211.65 1020.62,1211.65 1021.21,1211.65 1021.8,1211.65 1022.38,1211.65 1022.97,1211.65 1023.56,1211.65 1024.14,1211.65 1024.73,1211.65 1025.32,1211.65 1025.9,1211.65 1026.49,1211.65 1027.07,1211.65 1027.66,1211.65 1028.25,1211.65 1028.83,1211.65 1029.42,1211.65 1030.01,1211.65 1030.59,1211.65 1031.18,1211.65 1031.77,1211.65 1032.35,1211.65 1032.94,1211.65 1033.52,1211.65 1034.11,1211.65 1034.7,1211.65 1035.28,1211.65 1035.87,1211.65 1036.46,1211.65 1037.04,1211.65 1037.63,1211.65 1038.22,1211.65 1038.8,1211.65 1039.39,1211.65 1039.98,1211.65 1040.56,1211.65 1041.15,1211.65 1041.73,1211.65 1042.32,1211.65 1042.91,1211.65 1043.49,1211.65 1044.08,1211.65 1044.67,1211.65 1045.25,1211.65 1045.84,1211.65 1046.43,1211.65 1047.01,1211.65 1047.6,1211.65 1048.19,1211.65 1048.77,1211.65 1049.36,1211.65 1049.94,1211.65 1050.53,1211.65 1051.12,1211.65 1051.7,1211.65 1052.29,1211.65 1052.88,1211.65 1053.46,1211.65 1054.05,1211.65 1054.64,1211.65 1055.22,1211.65 1055.81,1211.65 1056.39,1211.65 1056.98,1211.65 1057.57,1211.65 1058.15,1211.65 1058.74,1211.65 1059.33,1211.65 1059.91,1211.65 1060.5,1211.65 1061.09,1211.65 1061.67,1211.65 1062.26,1211.65 1062.85,1211.65 1063.43,1211.65 1064.02,1211.65 1064.6,1211.65 1065.19,1211.65 1065.78,1211.65 1066.36,1211.65 1066.95,1211.65 1067.54,1211.65 1068.12,1211.65 1068.71,1211.65 1069.3,1211.65 1069.88,1211.65 1070.47,1211.65 1071.06,1211.65 1071.64,1211.65 1072.23,1211.65 1072.81,1211.65 1073.4,1211.65 1073.99,1211.65 1074.57,1211.65 1075.16,1211.65 1075.75,1211.65 1076.33,1211.65 1076.92,1211.65 1077.51,1211.65 1078.09,1211.65 1078.68,1211.65 1079.26,1211.65 1079.85,1211.65 1080.44,1211.65 1081.02,1211.65 1081.61,1211.65 1082.2,1211.65 1082.78,1211.65 1083.37,1211.65 1083.96,1211.65 1084.54,1211.65 1085.13,1211.65 1085.72,1211.65 1086.3,1211.65 1086.89,1211.65 1087.47,1211.65 1088.06,1211.65 1088.65,1211.65 1089.23,1211.65 1089.82,1211.65 1090.41,1211.65 1090.99,1211.65 1091.58,1211.65 1092.17,1211.65 1092.75,1211.65 1093.34,1211.65 1093.93,1211.65 1094.51,1211.65 1095.1,1211.65 1095.68,1211.65 1096.27,1211.65 1096.86,1211.65 1097.44,1211.65 1098.03,1211.65 1098.62,1211.65 1099.2,1211.65 1099.79,1211.65 1100.38,1211.65 1100.96,1211.65 1101.55,1211.65 1102.14,1211.65 1102.72,1211.65 1103.31,1211.65 1103.89,1211.65 1104.48,1211.65 1105.07,1211.65 1105.65,1211.65 1106.24,1211.65 1106.83,1211.65 1107.41,1211.65 1108,1211.65 1108.59,1211.65 1109.17,1211.65 1109.76,1211.65 1110.34,1211.65 1110.93,1211.65 1111.52,1211.65 1112.1,1211.65 1112.69,1211.65 1113.28,1211.65 1113.86,1211.65 1114.45,1211.65 1115.04,1211.65 1115.62,1211.65 1116.21,1211.65 1116.8,1211.65 1117.38,1211.65 1117.97,1211.65 1118.55,1211.65 1119.14,1211.65 1119.73,1211.65 1120.31,1211.65 1120.9,1211.65 1121.49,1211.65 1122.07,1211.65 1122.66,1211.65 1123.25,1211.65 1123.83,1211.65 1124.42,1211.65 1125.01,1211.65 1125.59,1211.65 1126.18,1211.65 1126.76,1211.65 1127.35,1211.65 1127.94,1211.65 1128.52,1211.65 1129.11,1211.65 1129.7,1211.65 1130.28,1211.65 1130.87,1211.65 1131.46,1211.65 1132.04,1211.65 1132.63,1211.65 1133.21,1211.65 1133.8,1211.65 1134.39,1211.65 1134.97,1211.65 1135.56,1211.65 1136.15,1211.65 1136.73,1211.65 1137.32,1211.65 1137.91,1211.65 1138.49,1211.65 1139.08,1211.65 1139.67,1211.65 1140.25,1211.65 1140.84,1211.65 1141.42,1211.65 1142.01,1211.65 1142.6,1211.65 1143.18,1211.65 1143.77,1211.65 1144.36,1211.65 1144.94,1211.65 1145.53,1211.65 1146.12,1211.65 1146.7,1211.65 1147.29,1211.65 1147.88,1211.65 1148.46,1211.65 1149.05,1211.65 1149.63,1211.65 1150.22,1211.65 1150.81,1211.65 1151.39,1211.65 1151.98,1211.65 1152.57,1211.65 1153.15,1211.65 1153.74,1211.65 1154.33,1211.65 1154.91,1211.65 1155.5,1211.65 1156.09,1211.65 1156.67,1211.65 1157.26,1211.65 1157.84,1211.65 1158.43,1211.65 1159.02,1211.65 1159.6,1211.65 1160.19,1211.65 1160.78,1211.65 1161.36,1211.65 1161.95,1211.65 1162.54,1211.65 1163.12,1211.65 1163.71,1211.65 1164.29,1211.65 1164.88,1211.65 1165.47,1211.65 1166.05,1211.65 1166.64,1211.65 1167.23,1211.65 1167.81,1211.65 1168.4,1211.65 1168.99,1211.65 1169.57,1211.65 1170.16,1211.65 1170.75,1211.65 1171.33,1211.65 1171.92,1211.65 1172.5,1211.65 1173.09,1211.65 1173.68,1211.65 1174.26,1211.65 1174.85,1211.65 1175.44,1211.65 1176.02,1211.65 1176.61,1211.65 1177.2,1211.65 1177.78,1211.65 1178.37,1211.65 1178.96,1211.65 1179.54,1211.65 1180.13,1211.65 1180.71,1211.65 1181.3,1211.65 1181.89,1211.65 1182.47,1211.65 1183.06,1211.65 1183.65,1211.65 1184.23,1211.65 1184.82,1211.65 1185.41,1211.65 1185.99,1211.65 1186.58,1211.65 1187.16,1211.65 1187.75,1211.65 1188.34,1211.65 1188.92,1211.65 1189.51,1211.65 1190.1,1211.65 1190.68,1211.65 1191.27,1211.65 1191.86,1211.65 1192.44,1211.65 1193.03,1211.65 1193.62,1211.65 1194.2,1211.65 1194.79,1211.65 1195.37,1211.65 1195.96,1211.65 1196.55,1211.65 1197.13,1211.65 1197.72,1211.65 1198.31,1211.65 1198.89,1211.65 1199.48,1211.65 1200.07,1211.65 1200.65,1211.65 1201.24,1211.65 1201.83,1211.65 1202.41,1211.65 1203,1211.65 1203.58,1211.65 1204.17,1211.65 1204.76,1211.65 1205.34,1211.65 1205.93,1211.65 1206.52,1211.65 1207.1,1211.65 1207.69,1211.65 1208.28,1211.65 1208.86,1211.65 1209.45,1211.65 1210.03,1211.65 1210.62,1211.65 1211.21,1211.65 1211.79,1211.65 1212.38,1211.65 1212.97,1211.65 1213.55,1211.65 1214.14,1211.65 1214.73,1211.65 1215.31,1211.65 1215.9,1211.65 1216.49,1211.65 1217.07,1211.65 1217.66,1211.65 1218.24,1211.65 1218.83,1211.65 1219.42,1211.65 1220,1211.65 1220.59,1211.65 1221.18,1211.65 1221.76,1211.65 1222.35,1211.65 1222.94,1211.65 1223.52,1211.65 1224.11,1211.65 1224.7,1211.65 1225.28,1211.65 1225.87,1211.65 1226.45,1211.65 1227.04,1211.65 1227.63,1211.65 1228.21,1211.65 1228.8,1211.65 1229.39,1211.65 1229.97,1211.65 1230.56,1211.65 1231.15,1211.65 1231.73,1211.65 1232.32,1211.65 1232.91,1211.65 1233.49,1211.65 1234.08,1211.65 1234.66,1211.65 1235.25,1211.65 1235.84,1211.65 1236.42,1211.65 1237.01,1211.65 1237.6,1211.65 1238.18,1211.65 1238.77,1211.65 1239.36,1211.65 1239.94,1211.65 1240.53,1211.65 1241.11,1211.65 1241.7,1211.65 1242.29,1211.65 1242.87,1211.65 1243.46,1211.65 1244.05,1211.65 1244.63,1211.65 1245.22,1211.65 1245.81,1211.65 1246.39,1211.65 1246.98,1211.65 1247.57,1211.65 1248.15,1211.65 1248.74,1211.65 1249.32,1211.65 1249.91,1211.65 1250.5,1211.65 1251.08,1211.65 1251.67,1211.65 1252.26,1211.65 1252.84,1211.65 1253.43,1211.65 1254.02,1211.65 1254.6,1211.65 1255.19,1211.65 1255.78,1211.65 1256.36,1211.65 1256.95,1211.65 1257.53,1211.65 1258.12,1211.65 1258.71,1211.65 1259.29,1211.65 1259.88,1211.65 1260.47,1211.65 1261.05,1211.65 1261.64,1211.65 1262.23,1211.65 1262.81,1211.65 1263.4,1211.65 1263.98,1211.65 1264.57,1211.65 1265.16,1211.65 1265.74,1211.65 1266.33,1211.65 1266.92,1211.65 1267.5,1211.65 1268.09,1211.65 1268.68,1211.65 1269.26,1211.65 1269.85,1211.65 1270.44,1211.65 1271.02,1211.65 1271.61,1211.65 1272.19,1211.65 1272.78,1211.65 1273.37,1211.65 1273.95,1211.65 1274.54,1211.65 1275.13,1211.65 1275.71,1211.65 1276.3,1211.65 1276.89,1211.65 1277.47,1211.65 1278.06,1211.65 1278.65,1211.65 1279.23,1211.65 1279.82,1211.65 1280.4,1211.65 1280.99,1211.65 1281.58,1211.65 1282.16,1211.65 1282.75,1211.65 1283.34,1211.65 1283.92,1211.65 1284.51,1211.65 1285.1,1211.65 1285.68,1211.65 1286.27,1211.65 1286.86,1211.65 1287.44,1211.65 1288.03,1211.65 1288.61,1211.65 1289.2,1211.65 1289.79,1211.65 1290.37,1211.65 1290.96,1211.65 1291.55,1211.65 1292.13,1211.65 1292.72,1211.65 1293.31,1211.65 1293.89,1211.65 1294.48,1211.65 1295.06,1211.65 1295.65,1211.65 1296.24,1211.65 1296.82,1211.65 1297.41,1211.65 1298,1211.65 1298.58,1211.65 1299.17,1211.65 1299.76,1211.65 1300.34,1211.65 1300.93,1211.65 1301.52,1211.65 1302.1,1211.65 1302.69,1211.65 1303.27,1211.65 1303.86,1211.65 1304.45,1211.65 1305.03,1211.65 1305.62,1211.65 1306.21,1211.65 1306.79,1211.65 1307.38,1211.65 1307.97,1211.65 1308.55,1211.65 1309.14,1211.65 1309.73,1211.65 1310.31,1211.65 1310.9,1211.65 1311.48,1211.65 1312.07,1211.65 1312.66,1211.65 1313.24,1211.65 1313.83,1211.65 1314.42,1211.65 1315,1211.65 1315.59,1211.65 1316.18,1211.65 1316.76,1211.65 1317.35,1211.65 1317.93,1211.65 1318.52,1211.65 1319.11,1211.65 1319.69,1211.65 1320.28,1211.65 1320.87,1211.65 1321.45,1211.65 1322.04,1211.65 1322.63,1211.65 1323.21,1211.65 1323.8,1211.65 1324.39,1211.65 1324.97,1211.65 1325.56,1211.65 1326.14,1211.65 1326.73,1211.65 1327.32,1211.65 1327.9,1211.65 1328.49,1211.65 1329.08,1211.65 1329.66,1211.65 1330.25,1211.65 1330.84,1211.65 1331.42,1211.65 1332.01,1211.65 1332.6,1211.65 1333.18,1211.65 1333.77,1211.65 1334.35,1211.65 1334.94,1211.65 1335.53,1211.65 1336.11,1211.65 1336.7,1211.65 1337.29,1211.65 1337.87,1211.65 1338.46,1211.65 1339.05,1211.65 1339.63,1211.65 1340.22,1211.65 1340.8,1211.65 1341.39,1211.65 1341.98,1211.65 1342.56,1211.65 1343.15,1211.65 1343.74,1211.65 1344.32,1211.65 1344.91,1211.65 1345.5,1211.65 1346.08,1211.65 1346.67,1211.65 1347.26,1211.65 1347.84,1211.65 1348.43,1211.65 1349.01,1211.65 1349.6,1211.65 1350.19,1211.65 1350.77,1211.65 1351.36,1211.65 1351.95,1211.65 1352.53,1211.65 1353.12,1211.65 1353.71,1211.65 1354.29,1211.65 1354.88,1211.65 1355.47,1211.65 1356.05,1211.65 1356.64,1211.65 1357.22,1211.65 1357.81,1211.65 1358.4,1211.65 1358.98,1211.65 1359.57,1211.65 1360.16,1211.65 1360.74,1211.65 1361.33,1211.65 1361.92,1211.65 1362.5,1211.65 1363.09,1211.65 1363.68,1211.65 1364.26,1211.65 1364.85,1211.65 1365.43,1211.65 1366.02,1211.65 1366.61,1211.65 1367.19,1211.65 1367.78,1211.65 1368.37,1211.65 1368.95,1211.65 1369.54,1211.65 1370.13,1211.65 1370.71,1211.65 1371.3,1211.65 1371.88,1211.65 1372.47,1211.65 1373.06,1211.65 1373.64,1211.65 1374.23,1211.65 1374.82,1211.65 1375.4,1211.65 1375.99,1211.65 1376.58,1211.65 1377.16,1211.65 1377.75,1211.65 1378.34,1211.65 1378.92,1211.65 1379.51,1211.65 1380.09,1211.65 1380.68,1211.65 1381.27,1211.65 1381.85,1211.65 1382.44,1211.65 1383.03,1211.65 1383.61,1211.65 1384.2,1211.65 1384.79,1211.65 1385.37,1211.65 1385.96,1211.65 1386.55,1211.65 1387.13,1211.65 1387.72,1211.65 1388.3,1211.65 1388.89,1211.65 1389.48,1211.65 1390.06,1211.65 1390.65,1211.65 1391.24,1211.65 1391.82,1211.65 1392.41,1211.65 1393,1211.65 1393.58,1211.65 1394.17,1211.65 1394.75,1211.65 1395.34,1211.65 1395.93,1211.65 1396.51,1211.65 1397.1,1211.65 1397.69,1211.65 1398.27,1211.65 1398.86,1211.65 1399.45,1211.65 1400.03,1211.65 1400.62,1211.65 1401.21,1211.65 1401.79,1211.65 1402.38,1211.65 1402.96,1211.65 1403.55,1211.65 1404.14,1211.65 1404.72,1211.65 1405.31,1211.65 1405.9,1211.65 1406.48,1211.65 1407.07,1211.65 1407.66,1211.65 1408.24,1211.65 1408.83,1211.65 1409.42,1211.65 1410,1211.65 1410.59,1211.65 1411.17,1211.65 1411.76,1211.65 1412.35,1211.65 1412.93,1211.65 1413.52,1211.65 1414.11,1211.65 1414.69,1211.65 1415.28,1211.65 1415.87,1211.65 1416.45,1211.65 1417.04,1211.65 1417.63,1211.65 1418.21,1211.65 1418.8,1211.65 1419.38,1211.65 1419.97,1211.65 1420.56,1211.65 1421.14,1211.65 1421.73,1211.65 1422.32,1211.65 1422.9,1211.65 1423.49,1211.65 1424.08,1211.65 1424.66,1211.65 1425.25,1211.65 1425.83,1211.65 1426.42,1211.65 1427.01,1211.65 1427.59,1211.65 1428.18,1211.65 1428.77,1211.65 1429.35,1211.65 1429.94,1211.65 1430.53,1211.65 1431.11,1211.65 1431.7,1211.65 1432.29,1211.65 1432.87,1211.65 1433.46,1211.65 1434.04,1211.65 1434.63,1211.65 1435.22,1211.65 1435.8,1211.65 1436.39,1211.65 1436.98,1211.65 1437.56,1211.65 1438.15,1211.65 1438.74,1211.65 1439.32,1211.65 1439.91,1211.65 1440.5,1211.65 1441.08,1211.65 1441.67,1211.65 1442.25,1211.65 1442.84,1211.65 1443.43,1211.65 1444.01,1211.65 1444.6,1211.65 1445.19,1211.65 1445.77,1211.65 1446.36,1211.65 1446.95,1211.65 1447.53,1211.65 1448.12,1211.65 1448.7,1211.65 1449.29,1211.65 1449.88,1211.65 1450.46,1211.65 1451.05,1211.65 1451.64,1211.65 1452.22,1211.65 1452.81,1211.65 1453.4,1211.65 1453.98,1211.65 1454.57,1211.65 1455.16,1211.65 1455.74,1211.65 1456.33,1211.65 1456.91,1211.65 1457.5,1211.65 1458.09,1211.65 1458.67,1211.65 1459.26,1211.65 1459.85,1211.65 1460.43,1211.65 1461.02,1211.65 1461.61,1211.65 1462.19,1211.65 1462.78,1211.65 1463.37,1211.65 1463.95,1211.65 1464.54,1211.65 1465.12,1211.65 1465.71,1211.65 1466.3,1211.65 1466.88,1211.65 1467.47,1211.65 1468.06,1211.65 1468.64,1211.65 1469.23,1211.65 1469.82,1211.65 1470.4,1211.65 1470.99,1211.65 1471.57,1211.65 1472.16,1211.65 1472.75,1211.65 1473.33,1211.65 1473.92,1211.65 1474.51,1211.65 1475.09,1211.65 1475.68,1211.65 1476.27,1211.65 1476.85,1211.65 1477.44,1211.65 1478.03,1211.65 1478.61,1211.65 1479.2,1211.65 1479.78,1211.65 1480.37,1211.65 1480.96,1211.65 1481.54,1211.65 1482.13,1211.65 1482.72,1211.65 1483.3,1211.65 1483.89,1211.65 1484.48,1211.65 1485.06,1211.65 1485.65,1211.65 1486.24,1211.65 1486.82,1211.65 1487.41,1211.65 1487.99,1211.65 1488.58,1211.65 1489.17,1211.65 1489.75,1211.65 1490.34,1211.65 1490.93,1211.65 1491.51,1211.65 1492.1,1211.65 1492.69,1211.65 1493.27,1211.65 1493.86,1211.65 1494.45,1211.65 1495.03,1211.65 1495.62,1211.65 1496.2,1211.65 1496.79,1211.65 1497.38,1211.65 1497.96,1211.65 1498.55,1211.65 1499.14,1211.65 1499.72,1211.65 1500.31,1211.65 1500.9,1211.65 1501.48,1211.65 1502.07,1211.65 1502.65,1211.65 1503.24,1211.65 1503.83,1211.65 1504.41,1211.65 1505,1211.65 1505.59,1211.65 1506.17,1211.65 1506.76,1211.65 1507.35,1211.65 1507.93,1211.65 1508.52,1211.65 1509.11,1211.65 1509.69,1211.65 1510.28,1211.65 1510.86,1211.65 1511.45,1211.65 1512.04,1211.65 1512.62,1211.65 1513.21,1211.65 1513.8,1211.65 1514.38,1211.65 1514.97,1211.65 1515.56,1211.65 1516.14,1211.65 1516.73,1211.65 1517.32,1211.65 1517.9,1211.65 1518.49,1211.65 1519.07,1211.65 1519.66,1211.65 1520.25,1211.65 1520.83,1211.65 1521.42,1211.65 1522.01,1211.65 1522.59,1211.65 1523.18,1211.65 1523.77,1211.65 1524.35,1211.65 1524.94,1211.65 1525.52,1211.65 1526.11,1211.65 1526.7,1211.65 1527.28,1211.65 1527.87,1211.65 1528.46,1211.65 1529.04,1211.65 1529.63,1211.65 1530.22,1211.65 1530.8,1211.65 1531.39,1211.65 1531.98,1211.65 1532.56,1211.65 1533.15,1211.65 1533.73,1211.65 1534.32,1211.65 1534.91,1211.65 1535.49,1211.65 1536.08,1211.65 1536.67,1211.65 1537.25,1211.65 1537.84,1211.65 1538.43,1211.65 1539.01,1211.65 1539.6,1211.65 1540.19,1211.65 1540.77,1211.65 1541.36,1211.65 1541.94,1211.65 1542.53,1211.65 1543.12,1211.65 1543.7,1211.65 1544.29,1211.65 1544.88,1211.65 1545.46,1211.65 1546.05,1211.65 1546.64,1211.65 1547.22,1211.65 1547.81,1211.65 1548.4,1211.65 1548.98,1211.65 1549.57,1211.65 1550.15,1211.65 1550.74,1211.65 1551.33,1211.65 1551.91,1211.65 1552.5,1211.65 1553.09,1211.65 1553.67,1211.65 1554.26,1211.65 1554.85,1211.65 1555.43,1211.65 1556.02,1211.65 1556.6,1211.65 1557.19,1211.65 1557.78,1211.65 1558.36,1211.65 1558.95,1211.65 1559.54,1211.65 1560.12,1211.65 1560.71,1211.65 1561.3,1211.65 1561.88,1211.65 1562.47,1211.65 1563.06,1211.65 1563.64,1211.65 1564.23,1211.65 1564.81,1211.65 1565.4,1211.65 1565.99,1211.65 1566.57,1211.65 1567.16,1211.65 1567.75,1211.65 1568.33,1211.65 1568.92,1211.65 1569.51,1211.65 1570.09,1211.65 1570.68,1211.65 1571.27,1211.65 1571.85,1211.65 1572.44,1211.65 1573.02,1211.65 1573.61,1211.65 1574.2,1211.65 1574.78,1211.65 1575.37,1211.65 1575.96,1211.65 1576.54,1211.65 1577.13,1211.65 1577.72,1211.65 1578.3,1211.65 1578.89,1211.65 1579.47,1211.65 1580.06,1211.65 1580.65,1211.65 1581.23,1211.65 1581.82,1211.65 1582.41,1211.65 1582.99,1211.65 1583.58,1211.65 1584.17,1211.65 1584.75,1211.65 1585.34,1211.65 1585.93,1211.65 1586.51,1211.65 1587.1,1211.65 1587.68,1211.65 1588.27,1211.65 1588.86,1211.65 1589.44,1211.65 1590.03,1211.65 1590.62,1211.65 1591.2,1211.65 1591.79,1211.65 1592.38,1211.65 1592.96,1211.65 1593.55,1211.65 1594.14,1211.65 1594.72,1211.65 1595.31,1211.65 1595.89,1211.65 1596.48,1211.65 1597.07,1211.65 1597.65,1211.65 1598.24,1211.65 1598.83,1211.65 1599.41,1211.65 1600,1211.65 1600.59,1211.65 1601.17,1211.65 1601.76,1211.65 1602.34,1211.65 1602.93,1211.65 1603.52,1211.65 1604.1,1211.65 1604.69,1211.65 1605.28,1211.65 1605.86,1211.65 1606.45,1211.65 1607.04,1211.65 1607.62,1211.65 1608.21,1211.65 1608.8,1211.65 1609.38,1211.65 1609.97,1211.65 1610.55,1211.65 1611.14,1211.65 1611.73,1211.65 1612.31,1211.65 1612.9,1211.65 1613.49,1211.65 1614.07,1211.65 1614.66,1211.65 1615.25,1211.65 1615.83,1211.65 1616.42,1211.65 1617.01,1211.65 1617.59,1211.65 1618.18,1211.65 1618.76,1211.65 1619.35,1211.65 1619.94,1211.65 1620.52,1211.65 1621.11,1211.65 1621.7,1211.65 1622.28,1211.65 1622.87,1211.65 1623.46,1211.65 1624.04,1211.65 1624.63,1211.65 1625.22,1211.65 1625.8,1211.65 1626.39,1211.65 1626.97,1211.65 1627.56,1211.65 1628.15,1211.65 1628.73,1211.65 1629.32,1211.65 1629.91,1211.65 1630.49,1211.65 1631.08,1211.65 1631.67,1211.65 1632.25,1211.65 1632.84,1211.65 1633.42,1211.65 1634.01,1211.65 1634.6,1211.65 1635.18,1211.65 1635.77,1211.65 1636.36,1211.65 1636.94,1211.65 1637.53,1211.65 1638.12,1211.65 1638.7,1211.65 1639.29,1211.65 1639.88,1211.65 1640.46,1211.65 1641.05,1211.65 1641.63,1211.65 1642.22,1211.65 1642.81,1211.65 1643.39,1211.65 1643.98,1211.65 1644.57,1211.65 1645.15,1211.65 1645.74,1211.65 1646.33,1211.65 1646.91,1211.65 1647.5,1211.65 1648.09,1211.65 1648.67,1211.65 1649.26,1211.65 1649.84,1211.65 1650.43,1211.65 1651.02,1211.65 1651.6,1211.65 1652.19,1211.65 1652.78,1211.65 1653.36,1211.65 1653.95,1211.65 1654.54,1211.65 1655.12,1211.65 1655.71,1211.65 1656.29,1211.65 1656.88,1211.65 1657.47,1211.65 1658.05,1211.65 1658.64,1211.65 1659.23,1211.65 1659.81,1211.65 1660.4,1211.65 1660.99,1211.65 1661.57,1211.65 1662.16,1211.65 1662.75,1211.65 1663.33,1211.65 1663.92,1211.65 1664.5,1211.65 1665.09,1211.65 1665.68,1211.65 1666.26,1211.65 1666.85,1211.65 1667.44,1211.65 1668.02,1211.65 1668.61,1211.65 1669.2,1211.65 1669.78,1211.65 1670.37,1211.65 1670.96,1211.65 1671.54,1211.65 1672.13,1211.65 1672.71,1211.65 1673.3,1211.65 1673.89,1211.65 1674.47,1211.65 1675.06,1211.65 1675.65,1211.65 1676.23,1211.65 1676.82,1211.65 1677.41,1211.65 1677.99,1211.65 1678.58,1211.65 1679.17,1211.65 1679.75,1211.65 1680.34,1211.65 1680.92,1211.65 1681.51,1211.65 1682.1,1211.65 1682.68,1211.65 1683.27,1211.65 1683.86,1211.65 1684.44,1211.65 1685.03,1211.65 1685.62,1211.65 1686.2,1211.65 1686.79,1211.65 1687.37,1211.65 1687.96,1211.65 1688.55,1211.65 1689.13,1211.65 1689.72,1211.65 1690.31,1211.65 1690.89,1211.65 1691.48,1211.65 1692.07,1211.65 1692.65,1211.65 1693.24,1211.65 1693.83,1211.65 1694.41,1211.65 1695,1211.65 1695.58,1211.65 1696.17,1211.65 1696.76,1211.65 1697.34,1211.65 1697.93,1211.65 1698.52,1211.65 1699.1,1211.65 1699.69,1211.65 1700.28,1211.65 1700.86,1211.65 1701.45,1211.65 1702.04,1211.65 1702.62,1211.65 1703.21,1211.65 1703.79,1211.65 1704.38,1211.65 1704.97,1211.65 1705.55,1211.65 1706.14,1211.65 1706.73,1211.65 1707.31,1211.65 1707.9,1211.65 1708.49,1211.65 1709.07,1211.65 1709.66,1211.65 1710.24,1211.65 1710.83,1211.65 1711.42,1211.65 1712,1211.65 1712.59,1211.65 1713.18,1211.65 1713.76,1211.65 1714.35,1211.65 1714.94,1211.65 1715.52,1211.65 1716.11,1211.65 1716.7,1211.65 1717.28,1211.65 1717.87,1211.65 1718.45,1211.65 1719.04,1211.65 1719.63,1211.65 1720.21,1211.65 1720.8,1211.65 1721.39,1211.65 1721.97,1211.65 1722.56,1211.65 1723.15,1211.65 1723.73,1211.65 1724.32,1211.65 1724.91,1211.65 1725.49,1211.65 1726.08,1211.65 1726.66,1211.65 1727.25,1211.65 1727.84,1211.65 1728.42,1211.65 1729.01,1211.65 1729.6,1211.65 1730.18,1211.65 1730.77,1211.65 1731.36,1211.65 1731.94,1211.65 1732.53,1211.65 1733.11,1211.65 1733.7,1211.65 1734.29,1211.65 1734.87,1211.65 1735.46,1211.65 1736.05,1211.65 1736.63,1211.65 1737.22,1211.65 1737.81,1211.65 1738.39,1211.65 1738.98,1211.65 1739.57,1211.65 1740.15,1211.65 1740.74,1211.65 1741.32,1211.65 1741.91,1211.65 1742.5,1211.65 1743.08,1211.65 1743.67,1211.65 1744.26,1211.65 1744.84,1211.65 1745.43,1211.65 1746.02,1211.65 1746.6,1211.65 1747.19,1211.65 1747.78,1211.65 1748.36,1211.65 1748.95,1211.65 1749.53,1211.65 1750.12,1211.65 1750.71,1211.65 1751.29,1211.65 1751.88,1211.65 1752.47,1211.65 1753.05,1211.65 1753.64,1211.65 1754.23,1211.65 1754.81,1211.65 1755.4,1211.65 1755.99,1211.65 1756.57,1211.65 1757.16,1211.65 1757.74,1211.65 1758.33,1211.65 1758.92,1211.65 1759.5,1211.65 1760.09,1211.65 1760.68,1211.65 1761.26,1211.65 1761.85,1211.65 1762.44,1211.65 1763.02,1211.65 1763.61,1211.65 1764.19,1211.65 1764.78,1211.65 1765.37,1211.65 1765.95,1211.65 1766.54,1211.65 1767.13,1211.65 1767.71,1211.65 1768.3,1211.65 1768.89,1211.65 1769.47,1211.65 1770.06,1211.65 1770.65,1211.65 1771.23,1211.65 1771.82,1211.65 1772.4,1211.65 1772.99,1211.65 1773.58,1211.65 1774.16,1211.65 1774.75,1211.65 1775.34,1211.65 1775.92,1211.65 1776.51,1211.65 1777.1,1211.65 1777.68,1211.65 1778.27,1211.65 1778.86,1211.65 1779.44,1211.65 1780.03,1211.65 1780.61,1211.65 1781.2,1211.65 1781.79,1211.65 1782.37,1211.65 1782.96,1211.65 1783.55,1211.65 1784.13,1211.65 1784.72,1211.65 1785.31,1211.65 1785.89,1211.65 1786.48,1211.65 1787.06,1211.65 1787.65,1211.65 1788.24,1211.65 1788.82,1211.65 1789.41,1211.65 1790,1211.65 1790.58,1211.65 1791.17,1211.65 1791.76,1211.65 1792.34,1211.65 1792.93,1211.65 1793.52,1211.65 1794.1,1211.65 1794.69,1211.65 1795.27,1211.65 1795.86,1211.65 1796.45,1211.65 1797.03,1211.65 1797.62,1211.65 1798.21,1211.65 1798.79,1211.65 1799.38,1211.65 1799.97,1211.65 1800.55,1211.65 1801.14,1211.65 1801.73,1211.65 1802.31,1211.65 1802.9,1211.65 1803.48,1211.65 1804.07,1211.65 1804.66,1211.65 1805.24,1211.65 1805.83,1211.65 1806.42,1211.65 1807,1211.65 1807.59,1211.65 1808.18,1211.65 1808.76,1211.65 1809.35,1211.65 1809.94,1211.65 1810.52,1211.65 1811.11,1211.65 1811.69,1211.65 1812.28,1211.65 1812.87,1211.65 1813.45,1211.65 1814.04,1211.65 1814.63,1211.65 1815.21,1211.65 1815.8,1211.65 1816.39,1211.65 1816.97,1211.65 1817.56,1211.65 1818.14,1211.65 1818.73,1211.65 1819.32,1211.65 1819.9,1211.65 1820.49,1211.65 1821.08,1211.65 1821.66,1211.65 1822.25,1211.65 1822.84,1211.65 1823.42,1211.65 1824.01,1211.65 1824.6,1211.65 1825.18,1211.65 1825.77,1211.65 1826.35,1211.65 1826.94,1211.65 1827.53,1211.65 1828.11,1211.65 1828.7,1211.65 1829.29,1211.65 1829.87,1211.65 1830.46,1211.65 1831.05,1211.65 1831.63,1211.65 1832.22,1211.65 1832.81,1211.65 1833.39,1211.65 1833.98,1211.65 1834.56,1211.65 1835.15,1211.65 1835.74,1211.65 1836.32,1211.65 1836.91,1211.65 1837.5,1211.65 1838.08,1211.65 1838.67,1211.65 1839.26,1211.65 1839.84,1211.65 1840.43,1211.65 1841.01,1211.65 1841.6,1211.65 1842.19,1211.65 1842.77,1211.65 1843.36,1211.65 1843.95,1211.65 1844.53,1211.65 1845.12,1211.65 1845.71,1211.65 1846.29,1211.65 1846.88,1211.65 1847.47,1211.65 1848.05,1211.65 1848.64,1211.65 1849.22,1211.65 1849.81,1211.65 1850.4,1211.65 1850.98,1211.65 1851.57,1211.65 1852.16,1211.65 1852.74,1211.65 1853.33,1211.65 1853.92,1211.65 1854.5,1211.65 1855.09,1211.65 1855.68,1211.65 1856.26,1211.65 1856.85,1211.65 1857.43,1211.65 1858.02,1211.65 1858.61,1211.65 1859.19,1211.65 1859.78,1211.65 1860.37,1211.65 1860.95,1211.65 1861.54,1211.65 1862.13,1211.65 1862.71,1211.65 1863.3,1211.65 1863.88,1211.65 1864.47,1211.65 1865.06,1211.65 1865.64,1211.65 1866.23,1211.65 1866.82,1211.65 1867.4,1211.65 1867.99,1211.65 1868.58,1211.65 1869.16,1211.65 1869.75,1211.65 1870.34,1211.65 1870.92,1211.65 1871.51,1211.65 1872.09,1211.65 1872.68,1211.65 1873.27,1211.65 1873.85,1211.65 1874.44,1211.65 1875.03,1211.65 1875.61,1211.65 1876.2,1211.65 1876.79,1211.65 1877.37,1211.65 1877.96,1211.65 1878.55,1211.65 1879.13,1211.65 1879.72,1211.65 1880.3,1211.65 1880.89,1211.65 1881.48,1211.65 1882.06,1211.65 1882.65,1211.65 1883.24,1211.65 1883.82,1211.65 1884.41,1211.65 1885,1211.65 1885.58,1211.65 1886.17,1211.65 1886.76,1211.65 1887.34,1211.65 1887.93,1211.65 1888.51,1211.65 1889.1,1211.65 1889.69,1211.65 1890.27,1211.65 1890.86,1211.65 1891.45,1211.65 1892.03,1211.65 1892.62,1211.65 1893.21,1211.65 1893.79,1211.65 1894.38,1211.65 1894.96,1211.65 1895.55,1211.65 1896.14,1211.65 1896.72,1211.65 1897.31,1211.65 1897.9,1211.65 1898.48,1211.65 1899.07,1211.65 1899.66,1211.65 1900.24,1211.65 1900.83,1211.65 1901.42,1211.65 1902,1211.65 1902.59,1211.65 1903.17,1211.65 1903.76,1211.65 1904.35,1211.65 1904.93,1211.65 1905.52,1211.65 1906.11,1211.65 1906.69,1211.65 1907.28,1211.65 1907.87,1211.65 1908.45,1211.65 1909.04,1211.65 1909.63,1211.65 1910.21,1211.65 1910.8,1211.65 1911.38,1211.65 1911.97,1211.65 1912.56,1211.65 1913.14,1211.65 1913.73,1211.65 1914.32,1211.65 1914.9,1211.65 1915.49,1211.65 1916.08,1211.65 1916.66,1211.65 1917.25,1211.65 1917.83,1211.65 1918.42,1211.65 1919.01,1211.65 1919.59,1211.65 1920.18,1211.65 1920.77,1211.65 1921.35,1211.65 1921.94,1211.65 1922.53,1211.65 1923.11,1211.65 1923.7,1211.65 1924.29,1211.65 1924.87,1211.65 1925.46,1211.65 1926.04,1211.65 1926.63,1211.65 1927.22,1211.65 1927.8,1211.65 1928.39,1211.65 1928.98,1211.65 1929.56,1211.65 1930.15,1211.65 1930.74,1211.65 1931.32,1211.65 1931.91,1211.65 1932.5,1211.65 1933.08,1211.65 1933.67,1211.65 1934.25,1211.65 1934.84,1211.65 1935.43,1211.65 1936.01,1211.65 1936.6,1211.65 1937.19,1211.65 1937.77,1211.65 1938.36,1211.65 1938.95,1211.65 1939.53,1211.65 1940.12,1211.65 1940.71,1211.65 1941.29,1211.65 1941.88,1211.65 1942.46,1211.65 1943.05,1211.65 1943.64,1211.65 1944.22,1211.65 1944.81,1211.65 1945.4,1211.65 1945.98,1211.65 1946.57,1211.65 1947.16,1211.65 1947.74,1211.65 1948.33,1211.65 1948.91,1211.65 1949.5,1211.65 1950.09,1211.65 1950.67,1211.65 1951.26,1211.65 1951.85,1211.65 1952.43,1211.65 1953.02,1211.65 1953.61,1211.65 1954.19,1211.65 1954.78,1211.65 1955.37,1211.65 1955.95,1211.65 1956.54,1211.65 1957.12,1211.65 1957.71,1211.65 1958.3,1211.65 1958.88,1211.65 1959.47,1211.65 1960.06,1211.65 1960.64,1211.65 1961.23,1211.65 1961.82,1211.65 1962.4,1211.65 1962.99,1211.65 1963.58,1211.65 1964.16,1211.65 1964.75,1211.65 1965.33,1211.65 1965.92,1211.65 1966.51,1211.65 1967.09,1211.65 1967.68,1211.65 1968.27,1211.65 1968.85,1211.65 1969.44,1211.65 1970.03,1211.65 1970.61,1211.65 1971.2,1211.65 1971.78,1211.65 1972.37,1211.65 1972.96,1211.65 1973.54,1211.65 1974.13,1211.65 1974.72,1211.65 1975.3,1211.65 1975.89,1211.65 1976.48,1211.65 1977.06,1211.65 1977.65,1211.65 1978.24,1211.65 1978.82,1211.65 1979.41,1211.65 1979.99,1211.65 1980.58,1211.65 1981.17,1211.65 1981.75,1211.65 1982.34,1211.65 1982.93,1211.65 1983.51,1211.65 1984.1,1211.65 1984.69,1211.65 1985.27,1211.65 1985.86,1211.65 1986.45,1211.65 1987.03,1211.65 1987.62,1211.65 1988.2,1211.65 1988.79,1211.65 1989.38,1211.65 1989.96,1211.65 1990.55,1211.65 1991.14,1211.65 1991.72,1211.65 1992.31,1211.65 1992.9,1211.65 1993.48,1211.65 1994.07,1211.65 1994.65,1211.65 1995.24,1211.65 1995.83,1211.65 1996.41,1211.65 1997,1211.65 1997.59,1211.65 1998.17,1211.65 1998.76,1211.65 1999.35,1211.65 1999.93,1211.65 2000.52,1211.65 2001.11,1211.65 2001.69,1211.65 2002.28,1211.65 2002.86,1211.65 2003.45,1211.65 2004.04,1211.65 2004.62,1211.65 2005.21,1211.65 2005.8,1211.65 2006.38,1211.65 2006.97,1211.65 2007.56,1211.65 2008.14,1211.65 2008.73,1211.65 2009.32,1211.65 2009.9,1211.65 2010.49,1211.65 2011.07,1211.65 2011.66,1211.65 2012.25,1211.65 2012.83,1211.65 2013.42,1211.65 2014.01,1211.65 2014.59,1211.65 2015.18,1211.65 2015.77,1211.65 2016.35,1211.65 2016.94,1211.65 2017.53,1211.65 2018.11,1211.65 2018.7,1211.65 2019.28,1211.65 2019.87,1211.65 2020.46,1211.65 2021.04,1211.65 2021.63,1211.65 2022.22,1211.65 2022.8,1211.65 2023.39,1211.65 2023.98,1211.65 2024.56,1211.65 2025.15,1211.65 2025.73,1211.65 2026.32,1211.65 2026.91,1211.65 2027.49,1211.65 2028.08,1211.65 2028.67,1211.65 2029.25,1211.65 2029.84,1211.65 2030.43,1211.65 2031.01,1211.65 2031.6,1211.65 2032.19,1211.65 2032.77,1211.65 2033.36,1211.65 2033.94,1211.65 2034.53,1211.65 2035.12,1211.65 2035.7,1211.65 2036.29,1211.65 2036.88,1211.65 2037.46,1211.65 2038.05,1211.65 2038.64,1211.65 2039.22,1211.65 2039.81,1211.65 2040.4,1211.65 2040.98,1211.65 2041.57,1211.65 2042.15,1211.65 2042.74,1211.65 2043.33,1211.65 2043.91,1211.65 2044.5,1211.65 2045.09,1211.65 2045.67,1211.65 2046.26,1211.65 2046.85,1211.65 2047.43,1211.65 2048.02,1211.65 2048.6,1211.65 2049.19,1211.65 2049.78,1211.65 2050.36,1211.65 2050.95,1211.65 2051.54,1211.65 2052.12,1211.65 2052.71,1211.65 2053.3,1211.65 2053.88,1211.65 2054.47,1211.65 2055.06,1211.65 2055.64,1211.65 2056.23,1211.65 2056.81,1211.65 2057.4,1211.65 2057.99,1211.65 2058.57,1211.65 2059.16,1211.65 2059.75,1211.65 2060.33,1211.65 2060.92,1211.65 2061.51,1211.65 2062.09,1211.65 2062.68,1211.65 2063.27,1211.65 2063.85,1211.65 2064.44,1211.65 2065.02,1211.65 2065.61,1211.65 2066.2,1211.65 2066.78,1211.65 2067.37,1211.65 2067.96,1211.65 2068.54,1211.65 2069.13,1211.65 2069.72,1211.65 2070.3,1211.65 2070.89,1211.65 2071.48,1211.65 2072.06,1211.65 2072.65,1211.65 2073.23,1211.65 2073.82,1211.65 2074.41,1211.65 2074.99,1211.65 2075.58,1211.65 2076.17,1211.65 2076.75,1211.65 2077.34,1211.65 2077.93,1211.65 2078.51,1211.65 2079.1,1211.65 2079.68,1211.65 2080.27,1211.65 2080.86,1211.65 2081.44,1211.65 2082.03,1211.65 2082.62,1211.65 2083.2,1211.65 2083.79,1211.65 2084.38,1211.65 2084.96,1211.65 2085.55,1211.65 2086.14,1211.65 2086.72,1211.65 2087.31,1211.65 2087.89,1211.65 2088.48,1211.65 2089.07,1211.65 2089.65,1211.65 2090.24,1211.65 2090.83,1211.65 2091.41,1211.65 2092,1211.65 2092.59,1211.65 2093.17,1211.65 2093.76,1211.65 2094.35,1211.65 2094.93,1211.65 2095.52,1211.65 2096.1,1211.65 2096.69,1211.65 2097.28,1211.65 2097.86,1211.65 2098.45,1211.65 2099.04,1211.65 2099.62,1211.65 2100.21,1211.65 2100.8,1211.65 2101.38,1211.65 2101.97,1211.65 2102.55,1211.65 2103.14,1211.65 2103.73,1211.65 2104.31,1211.65 2104.9,1211.65 2105.49,1211.65 2106.07,1211.65 2106.66,1211.65 2107.25,1211.65 2107.83,1211.65 2108.42,1211.65 2109.01,1211.65 2109.59,1211.65 2110.18,1211.65 2110.76,1211.65 2111.35,1211.65 2111.94,1211.65 2112.52,1211.65 2113.11,1211.65 2113.7,1211.65 2114.28,1211.65 2114.87,1211.65 2115.46,1211.65 2116.04,1211.65 2116.63,1211.65 2117.22,1211.65 2117.8,1211.65 2118.39,1211.65 2118.97,1211.65 2119.56,1211.65 2120.15,1211.65 2120.73,1211.65 2121.32,1211.65 2121.91,1211.65 2122.49,1211.65 2123.08,1211.65 2123.67,1211.65 2124.25,1211.65 2124.84,1211.65 2125.42,1211.65 2126.01,1211.65 2126.6,1211.65 2127.18,1211.65 2127.77,1211.65 2128.36,1211.65 2128.94,1211.65 2129.53,1211.65 2130.12,1211.65 2130.7,1211.65 2131.29,1211.65 2131.88,1211.65 2132.46,1211.65 2133.05,1211.65 2133.63,1211.65 2134.22,1211.65 2134.81,1211.65 2135.39,1211.65 2135.98,1211.65 2136.57,1211.65 2137.15,1211.65 2137.74,1211.65 2138.33,1211.65 2138.91,1211.65 2139.5,1211.65 2140.09,1211.65 2140.67,1211.65 2141.26,1211.65 2141.84,1211.65 2142.43,1211.65 2143.02,1211.65 2143.6,1211.65 2144.19,1211.65 2144.78,1211.65 2145.36,1211.65 2145.95,1211.65 2146.54,1211.65 2147.12,1211.65 2147.71,1211.65 2148.3,1211.65 2148.88,1211.65 2149.47,1211.65 2150.05,1211.65 2150.64,1211.65 2151.23,1211.65 2151.81,1211.65 2152.4,1211.65 2152.99,1211.65 2153.57,1211.65 2154.16,1211.65 2154.75,1211.65 2155.33,1211.65 2155.92,1211.65 2156.5,1211.65 2157.09,1211.65 2157.68,1211.65 2158.26,1211.65 \"/>\n<path clip-path=\"url(#clip962)\" d=\"M986.025 1211.53 L986.612 1211.53 L987.198 1211.53 L987.785 1211.53 L988.371 1211.53 L988.957 1211.53 L989.544 1211.53 L990.13 1211.53 L990.717 1211.53 L991.303 1211.53 L991.889 1211.53 L992.476 1211.53 L993.062 1211.53 L993.649 1211.53 L994.235 1211.53 L994.822 1211.53 L995.408 1211.53 L995.994 1211.53 L996.581 1211.53 L997.167 1211.53 L997.754 1211.53 L998.34 1211.53 L998.926 1211.53 L999.513 1211.53 L1000.1 1211.53 L1000.69 1211.53 L1001.27 1211.53 L1001.86 1211.53 L1002.44 1211.53 L1003.03 1211.53 L1003.62 1211.53 L1004.2 1211.53 L1004.79 1211.53 L1005.38 1211.53 L1005.96 1211.53 L1006.55 1211.53 L1007.14 1211.53 L1007.72 1211.53 L1008.31 1211.53 L1008.9 1211.53 L1009.48 1211.53 L1010.07 1211.53 L1010.65 1211.53 L1011.24 1211.53 L1011.83 1211.53 L1012.41 1211.53 L1013 1211.53 L1013.59 1211.53 L1014.17 1211.53 L1014.76 1211.53 L1015.35 1211.53 L1015.93 1211.53 L1016.52 1211.53 L1017.11 1211.53 L1017.69 1211.53 L1018.28 1211.53 L1018.86 1211.53 L1019.45 1211.53 L1020.04 1211.53 L1020.62 1211.53 L1021.21 1211.53 L1021.8 1211.53 L1022.38 1211.53 L1022.97 1211.53 L1023.56 1211.53 L1024.14 1211.53 L1024.73 1211.53 L1025.32 1211.53 L1025.9 1211.53 L1026.49 1211.53 L1027.07 1211.53 L1027.66 1211.53 L1028.25 1211.53 L1028.83 1211.53 L1029.42 1211.53 L1030.01 1211.53 L1030.59 1211.53 L1031.18 1211.53 L1031.77 1211.53 L1032.35 1211.53 L1032.94 1211.53 L1033.52 1211.53 L1034.11 1211.53 L1034.7 1211.53 L1035.28 1211.53 L1035.87 1211.53 L1036.46 1211.53 L1037.04 1211.53 L1037.63 1211.53 L1038.22 1211.53 L1038.8 1211.53 L1039.39 1211.53 L1039.98 1211.53 L1040.56 1211.53 L1041.15 1211.53 L1041.73 1211.53 L1042.32 1211.53 L1042.91 1211.53 L1043.49 1211.53 L1044.08 1211.53 L1044.67 1211.53 L1045.25 1211.53 L1045.84 1211.53 L1046.43 1211.53 L1047.01 1211.53 L1047.6 1211.53 L1048.19 1211.53 L1048.77 1211.53 L1049.36 1211.53 L1049.94 1211.53 L1050.53 1211.53 L1051.12 1211.53 L1051.7 1211.53 L1052.29 1211.53 L1052.88 1211.53 L1053.46 1211.53 L1054.05 1211.53 L1054.64 1211.53 L1055.22 1211.53 L1055.81 1211.53 L1056.39 1211.53 L1056.98 1211.53 L1057.57 1211.53 L1058.15 1211.53 L1058.74 1211.53 L1059.33 1211.53 L1059.91 1211.53 L1060.5 1211.53 L1061.09 1211.53 L1061.67 1211.53 L1062.26 1211.53 L1062.85 1211.53 L1063.43 1211.53 L1064.02 1211.53 L1064.6 1211.53 L1065.19 1211.53 L1065.78 1211.53 L1066.36 1211.53 L1066.95 1211.53 L1067.54 1211.53 L1068.12 1211.53 L1068.71 1211.53 L1069.3 1211.53 L1069.88 1211.53 L1070.47 1211.53 L1071.06 1211.53 L1071.64 1211.53 L1072.23 1211.53 L1072.81 1211.53 L1073.4 1211.53 L1073.99 1211.53 L1074.57 1211.53 L1075.16 1211.53 L1075.75 1211.53 L1076.33 1211.53 L1076.92 1211.53 L1077.51 1211.53 L1078.09 1211.53 L1078.68 1211.53 L1079.26 1211.53 L1079.85 1211.53 L1080.44 1211.53 L1081.02 1211.53 L1081.61 1211.53 L1082.2 1211.53 L1082.78 1211.53 L1083.37 1211.53 L1083.96 1211.53 L1084.54 1211.53 L1085.13 1211.53 L1085.72 1211.53 L1086.3 1211.53 L1086.89 1211.53 L1087.47 1211.53 L1088.06 1211.53 L1088.65 1211.53 L1089.23 1211.53 L1089.82 1211.53 L1090.41 1211.53 L1090.99 1211.53 L1091.58 1211.53 L1092.17 1211.53 L1092.75 1211.53 L1093.34 1211.53 L1093.93 1211.53 L1094.51 1211.53 L1095.1 1211.53 L1095.68 1211.53 L1096.27 1211.53 L1096.86 1211.53 L1097.44 1211.53 L1098.03 1211.53 L1098.62 1211.53 L1099.2 1211.53 L1099.79 1211.53 L1100.38 1211.53 L1100.96 1211.53 L1101.55 1211.53 L1102.14 1211.53 L1102.72 1211.53 L1103.31 1211.53 L1103.89 1211.53 L1104.48 1211.53 L1105.07 1211.53 L1105.65 1211.53 L1106.24 1211.53 L1106.83 1211.53 L1107.41 1211.53 L1108 1211.53 L1108.59 1211.53 L1109.17 1211.53 L1109.76 1211.53 L1110.34 1211.53 L1110.93 1211.53 L1111.52 1211.53 L1112.1 1211.53 L1112.69 1211.53 L1113.28 1211.53 L1113.86 1211.53 L1114.45 1211.53 L1115.04 1211.53 L1115.62 1211.53 L1116.21 1211.53 L1116.8 1211.53 L1117.38 1211.53 L1117.97 1211.53 L1118.55 1211.53 L1119.14 1211.53 L1119.73 1211.53 L1120.31 1211.53 L1120.9 1211.53 L1121.49 1211.53 L1122.07 1211.53 L1122.66 1211.53 L1123.25 1211.53 L1123.83 1211.53 L1124.42 1211.53 L1125.01 1211.53 L1125.59 1211.53 L1126.18 1211.53 L1126.76 1211.53 L1127.35 1211.53 L1127.94 1211.53 L1128.52 1211.53 L1129.11 1211.53 L1129.7 1211.53 L1130.28 1211.53 L1130.87 1211.53 L1131.46 1211.53 L1132.04 1211.53 L1132.63 1211.53 L1133.21 1211.53 L1133.8 1211.53 L1134.39 1211.53 L1134.97 1211.53 L1135.56 1211.53 L1136.15 1211.53 L1136.73 1211.53 L1137.32 1211.53 L1137.91 1211.53 L1138.49 1211.53 L1139.08 1211.53 L1139.67 1211.53 L1140.25 1211.53 L1140.84 1211.53 L1141.42 1211.53 L1142.01 1211.53 L1142.6 1211.53 L1143.18 1211.53 L1143.77 1211.53 L1144.36 1211.53 L1144.94 1211.53 L1145.53 1211.53 L1146.12 1211.53 L1146.7 1211.53 L1147.29 1211.53 L1147.88 1211.53 L1148.46 1211.53 L1149.05 1211.53 L1149.63 1211.53 L1150.22 1211.53 L1150.81 1211.53 L1151.39 1211.53 L1151.98 1211.53 L1152.57 1211.53 L1153.15 1211.53 L1153.74 1211.53 L1154.33 1211.53 L1154.91 1211.53 L1155.5 1211.53 L1156.09 1211.53 L1156.67 1211.53 L1157.26 1211.53 L1157.84 1211.53 L1158.43 1211.53 L1159.02 1211.53 L1159.6 1211.53 L1160.19 1211.53 L1160.78 1211.53 L1161.36 1211.53 L1161.95 1211.53 L1162.54 1211.53 L1163.12 1211.53 L1163.71 1211.53 L1164.29 1211.53 L1164.88 1211.53 L1165.47 1211.53 L1166.05 1211.53 L1166.64 1211.53 L1167.23 1211.53 L1167.81 1211.53 L1168.4 1211.53 L1168.99 1211.53 L1169.57 1211.53 L1170.16 1211.53 L1170.75 1211.53 L1171.33 1211.53 L1171.92 1211.53 L1172.5 1211.53 L1173.09 1211.53 L1173.68 1211.53 L1174.26 1211.53 L1174.85 1211.53 L1175.44 1211.53 L1176.02 1211.53 L1176.61 1211.53 L1177.2 1211.53 L1177.78 1211.53 L1178.37 1211.53 L1178.96 1211.53 L1179.54 1211.53 L1180.13 1211.53 L1180.71 1211.53 L1181.3 1211.53 L1181.89 1211.53 L1182.47 1211.53 L1183.06 1211.53 L1183.65 1211.53 L1184.23 1211.53 L1184.82 1211.53 L1185.41 1211.53 L1185.99 1211.53 L1186.58 1211.53 L1187.16 1211.53 L1187.75 1211.53 L1188.34 1211.53 L1188.92 1211.53 L1189.51 1211.53 L1190.1 1211.53 L1190.68 1211.53 L1191.27 1211.53 L1191.86 1211.53 L1192.44 1211.53 L1193.03 1211.53 L1193.62 1211.53 L1194.2 1211.53 L1194.79 1211.53 L1195.37 1211.53 L1195.96 1211.53 L1196.55 1211.53 L1197.13 1211.53 L1197.72 1211.53 L1198.31 1211.53 L1198.89 1211.53 L1199.48 1211.53 L1200.07 1211.53 L1200.65 1211.53 L1201.24 1211.53 L1201.83 1211.53 L1202.41 1211.53 L1203 1211.53 L1203.58 1211.53 L1204.17 1211.53 L1204.76 1211.53 L1205.34 1211.53 L1205.93 1211.53 L1206.52 1211.53 L1207.1 1211.53 L1207.69 1211.53 L1208.28 1211.53 L1208.86 1211.53 L1209.45 1211.53 L1210.03 1211.53 L1210.62 1211.53 L1211.21 1211.53 L1211.79 1211.53 L1212.38 1211.53 L1212.97 1211.53 L1213.55 1211.53 L1214.14 1211.53 L1214.73 1211.53 L1215.31 1211.53 L1215.9 1211.53 L1216.49 1211.53 L1217.07 1211.53 L1217.66 1211.53 L1218.24 1211.53 L1218.83 1211.53 L1219.42 1211.53 L1220 1211.53 L1220.59 1211.53 L1221.18 1211.53 L1221.76 1211.53 L1222.35 1211.53 L1222.94 1211.53 L1223.52 1211.53 L1224.11 1211.53 L1224.7 1211.53 L1225.28 1211.53 L1225.87 1211.53 L1226.45 1211.53 L1227.04 1211.53 L1227.63 1211.53 L1228.21 1211.53 L1228.8 1211.53 L1229.39 1211.53 L1229.97 1211.53 L1230.56 1211.53 L1231.15 1211.53 L1231.73 1211.53 L1232.32 1211.53 L1232.91 1211.53 L1233.49 1211.53 L1234.08 1211.53 L1234.66 1211.53 L1235.25 1211.53 L1235.84 1211.53 L1236.42 1211.53 L1237.01 1211.53 L1237.6 1211.53 L1238.18 1211.53 L1238.77 1211.53 L1239.36 1211.53 L1239.94 1211.53 L1240.53 1211.53 L1241.11 1211.53 L1241.7 1211.53 L1242.29 1211.53 L1242.87 1211.53 L1243.46 1211.53 L1244.05 1211.53 L1244.63 1211.53 L1245.22 1211.53 L1245.81 1211.53 L1246.39 1211.53 L1246.98 1211.53 L1247.57 1211.53 L1248.15 1211.53 L1248.74 1211.53 L1249.32 1211.53 L1249.91 1211.53 L1250.5 1211.53 L1251.08 1211.53 L1251.67 1211.53 L1252.26 1211.53 L1252.84 1211.53 L1253.43 1211.53 L1254.02 1211.53 L1254.6 1211.53 L1255.19 1211.53 L1255.78 1211.53 L1256.36 1211.53 L1256.95 1211.53 L1257.53 1211.53 L1258.12 1211.53 L1258.71 1211.53 L1259.29 1211.53 L1259.88 1211.53 L1260.47 1211.53 L1261.05 1211.53 L1261.64 1211.53 L1262.23 1211.53 L1262.81 1211.53 L1263.4 1211.53 L1263.98 1211.53 L1264.57 1211.53 L1265.16 1211.53 L1265.74 1211.53 L1266.33 1211.53 L1266.92 1211.53 L1267.5 1211.53 L1268.09 1211.53 L1268.68 1211.53 L1269.26 1211.53 L1269.85 1211.53 L1270.44 1211.53 L1271.02 1211.53 L1271.61 1211.53 L1272.19 1211.53 L1272.78 1211.53 L1273.37 1211.53 L1273.95 1211.53 L1274.54 1211.53 L1275.13 1211.53 L1275.71 1211.53 L1276.3 1211.53 L1276.89 1211.53 L1277.47 1211.53 L1278.06 1211.53 L1278.65 1211.53 L1279.23 1211.53 L1279.82 1211.53 L1280.4 1211.53 L1280.99 1211.53 L1281.58 1211.53 L1282.16 1211.53 L1282.75 1211.53 L1283.34 1211.53 L1283.92 1211.53 L1284.51 1211.53 L1285.1 1211.53 L1285.68 1211.53 L1286.27 1211.53 L1286.86 1211.53 L1287.44 1211.53 L1288.03 1211.53 L1288.61 1211.53 L1289.2 1211.53 L1289.79 1211.53 L1290.37 1211.53 L1290.96 1211.53 L1291.55 1211.53 L1292.13 1211.53 L1292.72 1211.53 L1293.31 1211.53 L1293.89 1211.53 L1294.48 1211.53 L1295.06 1211.53 L1295.65 1211.53 L1296.24 1211.53 L1296.82 1211.53 L1297.41 1211.53 L1298 1211.53 L1298.58 1211.53 L1299.17 1211.53 L1299.76 1211.53 L1300.34 1211.53 L1300.93 1211.53 L1301.52 1211.53 L1302.1 1211.53 L1302.69 1211.53 L1303.27 1211.53 L1303.86 1211.53 L1304.45 1211.53 L1305.03 1211.53 L1305.62 1211.53 L1306.21 1211.53 L1306.79 1211.53 L1307.38 1211.53 L1307.97 1211.53 L1308.55 1211.53 L1309.14 1211.53 L1309.73 1211.53 L1310.31 1211.53 L1310.9 1211.53 L1311.48 1211.53 L1312.07 1211.53 L1312.66 1211.53 L1313.24 1211.53 L1313.83 1211.53 L1314.42 1211.53 L1315 1211.53 L1315.59 1211.53 L1316.18 1211.53 L1316.76 1211.53 L1317.35 1211.53 L1317.93 1211.53 L1318.52 1211.53 L1319.11 1211.53 L1319.69 1211.53 L1320.28 1211.53 L1320.87 1211.53 L1321.45 1211.53 L1322.04 1211.53 L1322.63 1211.53 L1323.21 1211.53 L1323.8 1211.53 L1324.39 1211.53 L1324.97 1211.53 L1325.56 1211.53 L1326.14 1211.53 L1326.73 1211.53 L1327.32 1211.53 L1327.9 1211.53 L1328.49 1211.53 L1329.08 1211.53 L1329.66 1211.53 L1330.25 1211.53 L1330.84 1211.53 L1331.42 1211.53 L1332.01 1211.53 L1332.6 1211.53 L1333.18 1211.53 L1333.77 1211.53 L1334.35 1211.53 L1334.94 1211.53 L1335.53 1211.53 L1336.11 1211.53 L1336.7 1211.53 L1337.29 1211.53 L1337.87 1211.53 L1338.46 1211.53 L1339.05 1211.53 L1339.63 1211.53 L1340.22 1211.53 L1340.8 1211.53 L1341.39 1211.53 L1341.98 1211.53 L1342.56 1211.53 L1343.15 1211.53 L1343.74 1211.53 L1344.32 1211.53 L1344.91 1211.53 L1345.5 1211.53 L1346.08 1211.53 L1346.67 1211.53 L1347.26 1211.53 L1347.84 1211.53 L1348.43 1211.53 L1349.01 1211.53 L1349.6 1211.53 L1350.19 1211.53 L1350.77 1211.53 L1351.36 1211.53 L1351.95 1211.53 L1352.53 1211.53 L1353.12 1211.53 L1353.71 1211.53 L1354.29 1211.53 L1354.88 1211.53 L1355.47 1211.53 L1356.05 1211.53 L1356.64 1211.53 L1357.22 1211.53 L1357.81 1211.53 L1358.4 1211.53 L1358.98 1211.53 L1359.57 1211.53 L1360.16 1211.53 L1360.74 1211.53 L1361.33 1211.53 L1361.92 1211.53 L1362.5 1211.53 L1363.09 1211.53 L1363.68 1211.53 L1364.26 1211.53 L1364.85 1211.53 L1365.43 1211.53 L1366.02 1211.53 L1366.61 1211.53 L1367.19 1211.53 L1367.78 1211.53 L1368.37 1211.53 L1368.95 1211.53 L1369.54 1211.53 L1370.13 1211.53 L1370.71 1211.53 L1371.3 1211.53 L1371.88 1211.53 L1372.47 1211.53 L1373.06 1211.53 L1373.64 1211.53 L1374.23 1211.53 L1374.82 1211.53 L1375.4 1211.53 L1375.99 1211.53 L1376.58 1211.53 L1377.16 1211.53 L1377.75 1211.53 L1378.34 1211.53 L1378.92 1211.53 L1379.51 1211.53 L1380.09 1211.53 L1380.68 1211.53 L1381.27 1211.53 L1381.85 1211.53 L1382.44 1211.53 L1383.03 1211.53 L1383.61 1211.53 L1384.2 1211.53 L1384.79 1211.53 L1385.37 1211.53 L1385.96 1211.53 L1386.55 1211.53 L1387.13 1211.53 L1387.72 1211.53 L1388.3 1211.53 L1388.89 1211.53 L1389.48 1211.53 L1390.06 1211.53 L1390.65 1211.53 L1391.24 1211.53 L1391.82 1211.53 L1392.41 1211.53 L1393 1211.53 L1393.58 1211.53 L1394.17 1211.53 L1394.75 1211.53 L1395.34 1211.53 L1395.93 1211.53 L1396.51 1211.53 L1397.1 1211.53 L1397.69 1211.53 L1398.27 1211.53 L1398.86 1211.53 L1399.45 1211.53 L1400.03 1211.53 L1400.62 1211.53 L1401.21 1211.53 L1401.79 1211.53 L1402.38 1211.53 L1402.96 1211.53 L1403.55 1211.53 L1404.14 1211.53 L1404.72 1211.53 L1405.31 1211.53 L1405.9 1211.53 L1406.48 1211.53 L1407.07 1211.53 L1407.66 1211.53 L1408.24 1211.53 L1408.83 1211.53 L1409.42 1211.53 L1410 1211.53 L1410.59 1211.53 L1411.17 1211.53 L1411.76 1211.53 L1412.35 1211.53 L1412.93 1211.53 L1413.52 1211.53 L1414.11 1211.53 L1414.69 1211.53 L1415.28 1211.53 L1415.87 1211.53 L1416.45 1211.53 L1417.04 1211.53 L1417.63 1211.53 L1418.21 1211.53 L1418.8 1211.53 L1419.38 1211.53 L1419.97 1211.53 L1420.56 1211.53 L1421.14 1211.53 L1421.73 1211.53 L1422.32 1211.53 L1422.9 1211.53 L1423.49 1211.53 L1424.08 1211.53 L1424.66 1211.53 L1425.25 1211.53 L1425.83 1211.53 L1426.42 1211.53 L1427.01 1211.53 L1427.59 1211.53 L1428.18 1211.53 L1428.77 1211.53 L1429.35 1211.53 L1429.94 1211.53 L1430.53 1211.53 L1431.11 1211.53 L1431.7 1211.53 L1432.29 1211.53 L1432.87 1211.53 L1433.46 1211.53 L1434.04 1211.53 L1434.63 1211.53 L1435.22 1211.53 L1435.8 1211.53 L1436.39 1211.53 L1436.98 1211.53 L1437.56 1211.53 L1438.15 1211.53 L1438.74 1211.53 L1439.32 1211.53 L1439.91 1211.53 L1440.5 1211.53 L1441.08 1211.53 L1441.67 1211.53 L1442.25 1211.53 L1442.84 1211.53 L1443.43 1211.53 L1444.01 1211.53 L1444.6 1211.53 L1445.19 1211.53 L1445.77 1211.53 L1446.36 1211.53 L1446.95 1211.53 L1447.53 1211.53 L1448.12 1211.53 L1448.7 1211.53 L1449.29 1211.53 L1449.88 1211.53 L1450.46 1211.53 L1451.05 1211.53 L1451.64 1211.53 L1452.22 1211.53 L1452.81 1211.53 L1453.4 1211.53 L1453.98 1211.53 L1454.57 1211.53 L1455.16 1211.53 L1455.74 1211.53 L1456.33 1211.53 L1456.91 1211.53 L1457.5 1211.53 L1458.09 1211.53 L1458.67 1211.53 L1459.26 1211.53 L1459.85 1211.53 L1460.43 1211.53 L1461.02 1211.53 L1461.61 1211.53 L1462.19 1211.53 L1462.78 1211.53 L1463.37 1211.53 L1463.95 1211.53 L1464.54 1211.53 L1465.12 1211.53 L1465.71 1211.53 L1466.3 1211.53 L1466.88 1211.53 L1467.47 1211.53 L1468.06 1211.53 L1468.64 1211.53 L1469.23 1211.53 L1469.82 1211.53 L1470.4 1211.53 L1470.99 1211.53 L1471.57 1211.53 L1472.16 1211.53 L1472.75 1211.53 L1473.33 1211.53 L1473.92 1211.53 L1474.51 1211.53 L1475.09 1211.53 L1475.68 1211.53 L1476.27 1211.53 L1476.85 1211.53 L1477.44 1211.53 L1478.03 1211.53 L1478.61 1211.53 L1479.2 1211.53 L1479.78 1211.53 L1480.37 1211.53 L1480.96 1211.53 L1481.54 1211.53 L1482.13 1211.53 L1482.72 1211.53 L1483.3 1211.53 L1483.89 1211.53 L1484.48 1211.53 L1485.06 1211.53 L1485.65 1211.53 L1486.24 1211.53 L1486.82 1211.53 L1487.41 1211.53 L1487.99 1211.53 L1488.58 1211.53 L1489.17 1211.53 L1489.75 1211.53 L1490.34 1211.53 L1490.93 1211.53 L1491.51 1211.53 L1492.1 1211.53 L1492.69 1211.53 L1493.27 1211.53 L1493.86 1211.53 L1494.45 1211.53 L1495.03 1211.53 L1495.62 1211.53 L1496.2 1211.53 L1496.79 1211.53 L1497.38 1211.53 L1497.96 1211.53 L1498.55 1211.53 L1499.14 1211.53 L1499.72 1211.53 L1500.31 1211.53 L1500.9 1211.53 L1501.48 1211.53 L1502.07 1211.53 L1502.65 1211.53 L1503.24 1211.53 L1503.83 1211.53 L1504.41 1211.53 L1505 1211.53 L1505.59 1211.53 L1506.17 1211.53 L1506.76 1211.53 L1507.35 1211.53 L1507.93 1211.53 L1508.52 1211.53 L1509.11 1211.53 L1509.69 1211.53 L1510.28 1211.53 L1510.86 1211.53 L1511.45 1211.53 L1512.04 1211.53 L1512.62 1211.53 L1513.21 1211.53 L1513.8 1211.53 L1514.38 1211.53 L1514.97 1211.53 L1515.56 1211.53 L1516.14 1211.53 L1516.73 1211.53 L1517.32 1211.53 L1517.9 1211.53 L1518.49 1211.53 L1519.07 1211.53 L1519.66 1211.53 L1520.25 1211.53 L1520.83 1211.53 L1521.42 1211.53 L1522.01 1211.53 L1522.59 1211.53 L1523.18 1211.53 L1523.77 1211.53 L1524.35 1211.53 L1524.94 1211.53 L1525.52 1211.53 L1526.11 1211.53 L1526.7 1211.53 L1527.28 1211.53 L1527.87 1211.53 L1528.46 1211.53 L1529.04 1211.53 L1529.63 1211.53 L1530.22 1211.53 L1530.8 1211.53 L1531.39 1211.53 L1531.98 1211.53 L1532.56 1211.53 L1533.15 1211.53 L1533.73 1211.53 L1534.32 1211.53 L1534.91 1211.53 L1535.49 1211.53 L1536.08 1211.53 L1536.67 1211.53 L1537.25 1211.53 L1537.84 1211.53 L1538.43 1211.53 L1539.01 1211.53 L1539.6 1211.53 L1540.19 1211.53 L1540.77 1211.53 L1541.36 1211.53 L1541.94 1211.53 L1542.53 1211.53 L1543.12 1211.53 L1543.7 1211.53 L1544.29 1211.53 L1544.88 1211.53 L1545.46 1211.53 L1546.05 1211.53 L1546.64 1211.53 L1547.22 1211.53 L1547.81 1211.53 L1548.4 1211.53 L1548.98 1211.53 L1549.57 1211.53 L1550.15 1211.53 L1550.74 1211.53 L1551.33 1211.53 L1551.91 1211.53 L1552.5 1211.53 L1553.09 1211.53 L1553.67 1211.53 L1554.26 1211.53 L1554.85 1211.53 L1555.43 1211.53 L1556.02 1211.53 L1556.6 1211.53 L1557.19 1211.53 L1557.78 1211.53 L1558.36 1211.53 L1558.95 1211.53 L1559.54 1211.53 L1560.12 1211.53 L1560.71 1211.53 L1561.3 1211.53 L1561.88 1211.53 L1562.47 1211.53 L1563.06 1211.53 L1563.64 1211.53 L1564.23 1211.53 L1564.81 1211.53 L1565.4 1211.53 L1565.99 1211.53 L1566.57 1211.53 L1567.16 1211.53 L1567.75 1211.53 L1568.33 1211.53 L1568.92 1211.53 L1569.51 1211.53 L1570.09 1211.53 L1570.68 1211.53 L1571.27 1211.53 L1571.85 1211.53 L1572.44 1211.53 L1573.02 1211.53 L1573.61 1211.53 L1574.2 1211.53 L1574.78 1211.53 L1575.37 1211.53 L1575.96 1211.53 L1576.54 1211.53 L1577.13 1211.53 L1577.72 1211.53 L1578.3 1211.53 L1578.89 1211.53 L1579.47 1211.53 L1580.06 1211.53 L1580.65 1211.53 L1581.23 1211.53 L1581.82 1211.53 L1582.41 1211.53 L1582.99 1211.53 L1583.58 1211.53 L1584.17 1211.53 L1584.75 1211.53 L1585.34 1211.53 L1585.93 1211.53 L1586.51 1211.53 L1587.1 1211.53 L1587.68 1211.53 L1588.27 1211.53 L1588.86 1211.53 L1589.44 1211.53 L1590.03 1211.53 L1590.62 1211.53 L1591.2 1211.53 L1591.79 1211.53 L1592.38 1211.53 L1592.96 1211.53 L1593.55 1211.53 L1594.14 1211.53 L1594.72 1211.53 L1595.31 1211.53 L1595.89 1211.53 L1596.48 1211.53 L1597.07 1211.53 L1597.65 1211.53 L1598.24 1211.53 L1598.83 1211.53 L1599.41 1211.53 L1600 1211.53 L1600.59 1211.53 L1601.17 1211.53 L1601.76 1211.53 L1602.34 1211.53 L1602.93 1211.53 L1603.52 1211.53 L1604.1 1211.53 L1604.69 1211.53 L1605.28 1211.53 L1605.86 1211.53 L1606.45 1211.53 L1607.04 1211.53 L1607.62 1211.53 L1608.21 1211.53 L1608.8 1211.53 L1609.38 1211.53 L1609.97 1211.53 L1610.55 1211.53 L1611.14 1211.53 L1611.73 1211.53 L1612.31 1211.53 L1612.9 1211.53 L1613.49 1211.53 L1614.07 1211.53 L1614.66 1211.53 L1615.25 1211.53 L1615.83 1211.53 L1616.42 1211.53 L1617.01 1211.53 L1617.59 1211.53 L1618.18 1211.53 L1618.76 1211.53 L1619.35 1211.53 L1619.94 1211.53 L1620.52 1211.53 L1621.11 1211.53 L1621.7 1211.53 L1622.28 1211.53 L1622.87 1211.53 L1623.46 1211.53 L1624.04 1211.53 L1624.63 1211.53 L1625.22 1211.53 L1625.8 1211.53 L1626.39 1211.53 L1626.97 1211.53 L1627.56 1211.53 L1628.15 1211.53 L1628.73 1211.53 L1629.32 1211.53 L1629.91 1211.53 L1630.49 1211.53 L1631.08 1211.53 L1631.67 1211.53 L1632.25 1211.53 L1632.84 1211.53 L1633.42 1211.53 L1634.01 1211.53 L1634.6 1211.53 L1635.18 1211.53 L1635.77 1211.53 L1636.36 1211.53 L1636.94 1211.53 L1637.53 1211.53 L1638.12 1211.53 L1638.7 1211.53 L1639.29 1211.53 L1639.88 1211.53 L1640.46 1211.53 L1641.05 1211.53 L1641.63 1211.53 L1642.22 1211.53 L1642.81 1211.53 L1643.39 1211.53 L1643.98 1211.53 L1644.57 1211.53 L1645.15 1211.53 L1645.74 1211.53 L1646.33 1211.53 L1646.91 1211.53 L1647.5 1211.53 L1648.09 1211.53 L1648.67 1211.53 L1649.26 1211.53 L1649.84 1211.53 L1650.43 1211.53 L1651.02 1211.53 L1651.6 1211.53 L1652.19 1211.53 L1652.78 1211.53 L1653.36 1211.53 L1653.95 1211.53 L1654.54 1211.53 L1655.12 1211.53 L1655.71 1211.53 L1656.29 1211.53 L1656.88 1211.53 L1657.47 1211.53 L1658.05 1211.53 L1658.64 1211.53 L1659.23 1211.53 L1659.81 1211.53 L1660.4 1211.53 L1660.99 1211.53 L1661.57 1211.53 L1662.16 1211.53 L1662.75 1211.53 L1663.33 1211.53 L1663.92 1211.53 L1664.5 1211.53 L1665.09 1211.53 L1665.68 1211.53 L1666.26 1211.53 L1666.85 1211.53 L1667.44 1211.53 L1668.02 1211.53 L1668.61 1211.53 L1669.2 1211.53 L1669.78 1211.53 L1670.37 1211.53 L1670.96 1211.53 L1671.54 1211.53 L1672.13 1211.53 L1672.71 1211.53 L1673.3 1211.53 L1673.89 1211.53 L1674.47 1211.53 L1675.06 1211.53 L1675.65 1211.53 L1676.23 1211.53 L1676.82 1211.53 L1677.41 1211.53 L1677.99 1211.53 L1678.58 1211.53 L1679.17 1211.53 L1679.75 1211.53 L1680.34 1211.53 L1680.92 1211.53 L1681.51 1211.53 L1682.1 1211.53 L1682.68 1211.53 L1683.27 1211.53 L1683.86 1211.53 L1684.44 1211.53 L1685.03 1211.53 L1685.62 1211.53 L1686.2 1211.53 L1686.79 1211.53 L1687.37 1211.53 L1687.96 1211.53 L1688.55 1211.53 L1689.13 1211.53 L1689.72 1211.53 L1690.31 1211.53 L1690.89 1211.53 L1691.48 1211.53 L1692.07 1211.53 L1692.65 1211.53 L1693.24 1211.53 L1693.83 1211.53 L1694.41 1211.53 L1695 1211.53 L1695.58 1211.53 L1696.17 1211.53 L1696.76 1211.53 L1697.34 1211.53 L1697.93 1211.53 L1698.52 1211.53 L1699.1 1211.53 L1699.69 1211.53 L1700.28 1211.53 L1700.86 1211.53 L1701.45 1211.53 L1702.04 1211.53 L1702.62 1211.53 L1703.21 1211.53 L1703.79 1211.53 L1704.38 1211.53 L1704.97 1211.53 L1705.55 1211.53 L1706.14 1211.53 L1706.73 1211.53 L1707.31 1211.53 L1707.9 1211.53 L1708.49 1211.53 L1709.07 1211.53 L1709.66 1211.53 L1710.24 1211.53 L1710.83 1211.53 L1711.42 1211.53 L1712 1211.53 L1712.59 1211.53 L1713.18 1211.53 L1713.76 1211.53 L1714.35 1211.53 L1714.94 1211.53 L1715.52 1211.53 L1716.11 1211.53 L1716.7 1211.53 L1717.28 1211.53 L1717.87 1211.53 L1718.45 1211.53 L1719.04 1211.53 L1719.63 1211.53 L1720.21 1211.53 L1720.8 1211.53 L1721.39 1211.53 L1721.97 1211.53 L1722.56 1211.53 L1723.15 1211.53 L1723.73 1211.53 L1724.32 1211.53 L1724.91 1211.53 L1725.49 1211.53 L1726.08 1211.53 L1726.66 1211.53 L1727.25 1211.53 L1727.84 1211.53 L1728.42 1211.53 L1729.01 1211.53 L1729.6 1211.53 L1730.18 1211.53 L1730.77 1211.53 L1731.36 1211.53 L1731.94 1211.53 L1732.53 1211.53 L1733.11 1211.53 L1733.7 1211.53 L1734.29 1211.53 L1734.87 1211.53 L1735.46 1211.53 L1736.05 1211.53 L1736.63 1211.53 L1737.22 1211.53 L1737.81 1211.53 L1738.39 1211.53 L1738.98 1211.53 L1739.57 1211.53 L1740.15 1211.53 L1740.74 1211.53 L1741.32 1211.53 L1741.91 1211.53 L1742.5 1211.53 L1743.08 1211.53 L1743.67 1211.53 L1744.26 1211.53 L1744.84 1211.53 L1745.43 1211.53 L1746.02 1211.53 L1746.6 1211.53 L1747.19 1211.53 L1747.78 1211.53 L1748.36 1211.53 L1748.95 1211.53 L1749.53 1211.53 L1750.12 1211.53 L1750.71 1211.53 L1751.29 1211.53 L1751.88 1211.53 L1752.47 1211.53 L1753.05 1211.53 L1753.64 1211.53 L1754.23 1211.53 L1754.81 1211.53 L1755.4 1211.53 L1755.99 1211.53 L1756.57 1211.53 L1757.16 1211.53 L1757.74 1211.53 L1758.33 1211.53 L1758.92 1211.53 L1759.5 1211.53 L1760.09 1211.53 L1760.68 1211.53 L1761.26 1211.53 L1761.85 1211.53 L1762.44 1211.53 L1763.02 1211.53 L1763.61 1211.53 L1764.19 1211.53 L1764.78 1211.53 L1765.37 1211.53 L1765.95 1211.53 L1766.54 1211.53 L1767.13 1211.53 L1767.71 1211.53 L1768.3 1211.53 L1768.89 1211.53 L1769.47 1211.53 L1770.06 1211.53 L1770.65 1211.53 L1771.23 1211.53 L1771.82 1211.53 L1772.4 1211.53 L1772.99 1211.53 L1773.58 1211.53 L1774.16 1211.53 L1774.75 1211.53 L1775.34 1211.53 L1775.92 1211.53 L1776.51 1211.53 L1777.1 1211.53 L1777.68 1211.53 L1778.27 1211.53 L1778.86 1211.53 L1779.44 1211.53 L1780.03 1211.53 L1780.61 1211.53 L1781.2 1211.53 L1781.79 1211.53 L1782.37 1211.53 L1782.96 1211.53 L1783.55 1211.53 L1784.13 1211.53 L1784.72 1211.53 L1785.31 1211.53 L1785.89 1211.53 L1786.48 1211.53 L1787.06 1211.53 L1787.65 1211.53 L1788.24 1211.53 L1788.82 1211.53 L1789.41 1211.53 L1790 1211.53 L1790.58 1211.53 L1791.17 1211.53 L1791.76 1211.53 L1792.34 1211.53 L1792.93 1211.53 L1793.52 1211.53 L1794.1 1211.53 L1794.69 1211.53 L1795.27 1211.53 L1795.86 1211.53 L1796.45 1211.53 L1797.03 1211.53 L1797.62 1211.53 L1798.21 1211.53 L1798.79 1211.53 L1799.38 1211.53 L1799.97 1211.53 L1800.55 1211.53 L1801.14 1211.53 L1801.73 1211.53 L1802.31 1211.53 L1802.9 1211.53 L1803.48 1211.53 L1804.07 1211.53 L1804.66 1211.53 L1805.24 1211.53 L1805.83 1211.53 L1806.42 1211.53 L1807 1211.53 L1807.59 1211.53 L1808.18 1211.53 L1808.76 1211.53 L1809.35 1211.53 L1809.94 1211.53 L1810.52 1211.53 L1811.11 1211.53 L1811.69 1211.53 L1812.28 1211.53 L1812.87 1211.53 L1813.45 1211.53 L1814.04 1211.53 L1814.63 1211.53 L1815.21 1211.53 L1815.8 1211.53 L1816.39 1211.53 L1816.97 1211.53 L1817.56 1211.53 L1818.14 1211.53 L1818.73 1211.53 L1819.32 1211.53 L1819.9 1211.53 L1820.49 1211.53 L1821.08 1211.53 L1821.66 1211.53 L1822.25 1211.53 L1822.84 1211.53 L1823.42 1211.53 L1824.01 1211.53 L1824.6 1211.53 L1825.18 1211.53 L1825.77 1211.53 L1826.35 1211.53 L1826.94 1211.53 L1827.53 1211.53 L1828.11 1211.53 L1828.7 1211.53 L1829.29 1211.53 L1829.87 1211.53 L1830.46 1211.53 L1831.05 1211.53 L1831.63 1211.53 L1832.22 1211.53 L1832.81 1211.53 L1833.39 1211.53 L1833.98 1211.53 L1834.56 1211.53 L1835.15 1211.53 L1835.74 1211.53 L1836.32 1211.53 L1836.91 1211.53 L1837.5 1211.53 L1838.08 1211.53 L1838.67 1211.53 L1839.26 1211.53 L1839.84 1211.53 L1840.43 1211.53 L1841.01 1211.53 L1841.6 1211.53 L1842.19 1211.53 L1842.77 1211.53 L1843.36 1211.53 L1843.95 1211.53 L1844.53 1211.53 L1845.12 1211.53 L1845.71 1211.53 L1846.29 1211.53 L1846.88 1211.53 L1847.47 1211.53 L1848.05 1211.53 L1848.64 1211.53 L1849.22 1211.53 L1849.81 1211.53 L1850.4 1211.53 L1850.98 1211.53 L1851.57 1211.53 L1852.16 1211.53 L1852.74 1211.53 L1853.33 1211.53 L1853.92 1211.53 L1854.5 1211.53 L1855.09 1211.53 L1855.68 1211.53 L1856.26 1211.53 L1856.85 1211.53 L1857.43 1211.53 L1858.02 1211.53 L1858.61 1211.53 L1859.19 1211.53 L1859.78 1211.53 L1860.37 1211.53 L1860.95 1211.53 L1861.54 1211.53 L1862.13 1211.53 L1862.71 1211.53 L1863.3 1211.53 L1863.88 1211.53 L1864.47 1211.53 L1865.06 1211.53 L1865.64 1211.53 L1866.23 1211.53 L1866.82 1211.53 L1867.4 1211.53 L1867.99 1211.53 L1868.58 1211.53 L1869.16 1211.53 L1869.75 1211.53 L1870.34 1211.53 L1870.92 1211.53 L1871.51 1211.53 L1872.09 1211.53 L1872.68 1211.53 L1873.27 1211.53 L1873.85 1211.53 L1874.44 1211.53 L1875.03 1211.53 L1875.61 1211.53 L1876.2 1211.53 L1876.79 1211.53 L1877.37 1211.53 L1877.96 1211.53 L1878.55 1211.53 L1879.13 1211.53 L1879.72 1211.53 L1880.3 1211.53 L1880.89 1211.53 L1881.48 1211.53 L1882.06 1211.53 L1882.65 1211.53 L1883.24 1211.53 L1883.82 1211.53 L1884.41 1211.53 L1885 1211.53 L1885.58 1211.53 L1886.17 1211.53 L1886.76 1211.53 L1887.34 1211.53 L1887.93 1211.53 L1888.51 1211.53 L1889.1 1211.53 L1889.69 1211.53 L1890.27 1211.53 L1890.86 1211.53 L1891.45 1211.53 L1892.03 1211.53 L1892.62 1211.53 L1893.21 1211.53 L1893.79 1211.53 L1894.38 1211.53 L1894.96 1211.53 L1895.55 1211.53 L1896.14 1211.53 L1896.72 1211.53 L1897.31 1211.53 L1897.9 1211.53 L1898.48 1211.53 L1899.07 1211.53 L1899.66 1211.53 L1900.24 1211.53 L1900.83 1211.53 L1901.42 1211.53 L1902 1211.53 L1902.59 1211.53 L1903.17 1211.53 L1903.76 1211.53 L1904.35 1211.53 L1904.93 1211.53 L1905.52 1211.53 L1906.11 1211.53 L1906.69 1211.53 L1907.28 1211.53 L1907.87 1211.53 L1908.45 1211.53 L1909.04 1211.53 L1909.63 1211.53 L1910.21 1211.53 L1910.8 1211.53 L1911.38 1211.53 L1911.97 1211.53 L1912.56 1211.53 L1913.14 1211.53 L1913.73 1211.53 L1914.32 1211.53 L1914.9 1211.53 L1915.49 1211.53 L1916.08 1211.53 L1916.66 1211.53 L1917.25 1211.53 L1917.83 1211.53 L1918.42 1211.53 L1919.01 1211.53 L1919.59 1211.53 L1920.18 1211.53 L1920.77 1211.53 L1921.35 1211.53 L1921.94 1211.53 L1922.53 1211.53 L1923.11 1211.53 L1923.7 1211.53 L1924.29 1211.53 L1924.87 1211.53 L1925.46 1211.53 L1926.04 1211.53 L1926.63 1211.53 L1927.22 1211.53 L1927.8 1211.53 L1928.39 1211.53 L1928.98 1211.53 L1929.56 1211.53 L1930.15 1211.53 L1930.74 1211.53 L1931.32 1211.53 L1931.91 1211.53 L1932.5 1211.53 L1933.08 1211.53 L1933.67 1211.53 L1934.25 1211.53 L1934.84 1211.53 L1935.43 1211.53 L1936.01 1211.53 L1936.6 1211.53 L1937.19 1211.53 L1937.77 1211.53 L1938.36 1211.53 L1938.95 1211.53 L1939.53 1211.53 L1940.12 1211.53 L1940.71 1211.53 L1941.29 1211.53 L1941.88 1211.53 L1942.46 1211.53 L1943.05 1211.53 L1943.64 1211.53 L1944.22 1211.53 L1944.81 1211.53 L1945.4 1211.53 L1945.98 1211.53 L1946.57 1211.53 L1947.16 1211.53 L1947.74 1211.53 L1948.33 1211.53 L1948.91 1211.53 L1949.5 1211.53 L1950.09 1211.53 L1950.67 1211.53 L1951.26 1211.53 L1951.85 1211.53 L1952.43 1211.53 L1953.02 1211.53 L1953.61 1211.53 L1954.19 1211.53 L1954.78 1211.53 L1955.37 1211.53 L1955.95 1211.53 L1956.54 1211.53 L1957.12 1211.53 L1957.71 1211.53 L1958.3 1211.53 L1958.88 1211.53 L1959.47 1211.53 L1960.06 1211.53 L1960.64 1211.53 L1961.23 1211.53 L1961.82 1211.53 L1962.4 1211.53 L1962.99 1211.53 L1963.58 1211.53 L1964.16 1211.53 L1964.75 1211.53 L1965.33 1211.53 L1965.92 1211.53 L1966.51 1211.53 L1967.09 1211.53 L1967.68 1211.53 L1968.27 1211.53 L1968.85 1211.53 L1969.44 1211.53 L1970.03 1211.53 L1970.61 1211.53 L1971.2 1211.53 L1971.78 1211.53 L1972.37 1211.53 L1972.96 1211.53 L1973.54 1211.53 L1974.13 1211.53 L1974.72 1211.53 L1975.3 1211.53 L1975.89 1211.53 L1976.48 1211.53 L1977.06 1211.53 L1977.65 1211.53 L1978.24 1211.53 L1978.82 1211.53 L1979.41 1211.53 L1979.99 1211.53 L1980.58 1211.53 L1981.17 1211.53 L1981.75 1211.53 L1982.34 1211.53 L1982.93 1211.53 L1983.51 1211.53 L1984.1 1211.53 L1984.69 1211.53 L1985.27 1211.53 L1985.86 1211.53 L1986.45 1211.53 L1987.03 1211.53 L1987.62 1211.53 L1988.2 1211.53 L1988.79 1211.53 L1989.38 1211.53 L1989.96 1211.53 L1990.55 1211.53 L1991.14 1211.53 L1991.72 1211.53 L1992.31 1211.53 L1992.9 1211.53 L1993.48 1211.53 L1994.07 1211.53 L1994.65 1211.53 L1995.24 1211.53 L1995.83 1211.53 L1996.41 1211.53 L1997 1211.53 L1997.59 1211.53 L1998.17 1211.53 L1998.76 1211.53 L1999.35 1211.53 L1999.93 1211.53 L2000.52 1211.53 L2001.11 1211.53 L2001.69 1211.53 L2002.28 1211.53 L2002.86 1211.53 L2003.45 1211.53 L2004.04 1211.53 L2004.62 1211.53 L2005.21 1211.53 L2005.8 1211.53 L2006.38 1211.53 L2006.97 1211.53 L2007.56 1211.53 L2008.14 1211.53 L2008.73 1211.53 L2009.32 1211.53 L2009.9 1211.53 L2010.49 1211.53 L2011.07 1211.53 L2011.66 1211.53 L2012.25 1211.53 L2012.83 1211.53 L2013.42 1211.53 L2014.01 1211.53 L2014.59 1211.53 L2015.18 1211.53 L2015.77 1211.53 L2016.35 1211.53 L2016.94 1211.53 L2017.53 1211.53 L2018.11 1211.53 L2018.7 1211.53 L2019.28 1211.53 L2019.87 1211.53 L2020.46 1211.53 L2021.04 1211.53 L2021.63 1211.53 L2022.22 1211.53 L2022.8 1211.53 L2023.39 1211.53 L2023.98 1211.53 L2024.56 1211.53 L2025.15 1211.53 L2025.73 1211.53 L2026.32 1211.53 L2026.91 1211.53 L2027.49 1211.53 L2028.08 1211.53 L2028.67 1211.53 L2029.25 1211.53 L2029.84 1211.53 L2030.43 1211.53 L2031.01 1211.53 L2031.6 1211.53 L2032.19 1211.53 L2032.77 1211.53 L2033.36 1211.53 L2033.94 1211.53 L2034.53 1211.53 L2035.12 1211.53 L2035.7 1211.53 L2036.29 1211.53 L2036.88 1211.53 L2037.46 1211.53 L2038.05 1211.53 L2038.64 1211.53 L2039.22 1211.53 L2039.81 1211.53 L2040.4 1211.53 L2040.98 1211.53 L2041.57 1211.53 L2042.15 1211.53 L2042.74 1211.53 L2043.33 1211.53 L2043.91 1211.53 L2044.5 1211.53 L2045.09 1211.53 L2045.67 1211.53 L2046.26 1211.53 L2046.85 1211.53 L2047.43 1211.53 L2048.02 1211.53 L2048.6 1211.53 L2049.19 1211.53 L2049.78 1211.53 L2050.36 1211.53 L2050.95 1211.53 L2051.54 1211.53 L2052.12 1211.53 L2052.71 1211.53 L2053.3 1211.53 L2053.88 1211.53 L2054.47 1211.53 L2055.06 1211.53 L2055.64 1211.53 L2056.23 1211.53 L2056.81 1211.53 L2057.4 1211.53 L2057.99 1211.53 L2058.57 1211.53 L2059.16 1211.53 L2059.75 1211.53 L2060.33 1211.53 L2060.92 1211.53 L2061.51 1211.53 L2062.09 1211.53 L2062.68 1211.53 L2063.27 1211.53 L2063.85 1211.53 L2064.44 1211.53 L2065.02 1211.53 L2065.61 1211.53 L2066.2 1211.53 L2066.78 1211.53 L2067.37 1211.53 L2067.96 1211.53 L2068.54 1211.53 L2069.13 1211.53 L2069.72 1211.53 L2070.3 1211.53 L2070.89 1211.53 L2071.48 1211.53 L2072.06 1211.53 L2072.65 1211.53 L2073.23 1211.53 L2073.82 1211.53 L2074.41 1211.53 L2074.99 1211.53 L2075.58 1211.53 L2076.17 1211.53 L2076.75 1211.53 L2077.34 1211.53 L2077.93 1211.53 L2078.51 1211.53 L2079.1 1211.53 L2079.68 1211.53 L2080.27 1211.53 L2080.86 1211.53 L2081.44 1211.53 L2082.03 1211.53 L2082.62 1211.53 L2083.2 1211.53 L2083.79 1211.53 L2084.38 1211.53 L2084.96 1211.53 L2085.55 1211.53 L2086.14 1211.53 L2086.72 1211.53 L2087.31 1211.53 L2087.89 1211.53 L2088.48 1211.53 L2089.07 1211.53 L2089.65 1211.53 L2090.24 1211.53 L2090.83 1211.53 L2091.41 1211.53 L2092 1211.53 L2092.59 1211.53 L2093.17 1211.53 L2093.76 1211.53 L2094.35 1211.53 L2094.93 1211.53 L2095.52 1211.53 L2096.1 1211.53 L2096.69 1211.53 L2097.28 1211.53 L2097.86 1211.53 L2098.45 1211.53 L2099.04 1211.53 L2099.62 1211.53 L2100.21 1211.53 L2100.8 1211.53 L2101.38 1211.53 L2101.97 1211.53 L2102.55 1211.53 L2103.14 1211.53 L2103.73 1211.53 L2104.31 1211.53 L2104.9 1211.53 L2105.49 1211.53 L2106.07 1211.53 L2106.66 1211.53 L2107.25 1211.53 L2107.83 1211.53 L2108.42 1211.53 L2109.01 1211.53 L2109.59 1211.53 L2110.18 1211.53 L2110.76 1211.53 L2111.35 1211.53 L2111.94 1211.53 L2112.52 1211.53 L2113.11 1211.53 L2113.7 1211.53 L2114.28 1211.53 L2114.87 1211.53 L2115.46 1211.53 L2116.04 1211.53 L2116.63 1211.53 L2117.22 1211.53 L2117.8 1211.53 L2118.39 1211.53 L2118.97 1211.53 L2119.56 1211.53 L2120.15 1211.53 L2120.73 1211.53 L2121.32 1211.53 L2121.91 1211.53 L2122.49 1211.53 L2123.08 1211.53 L2123.67 1211.53 L2124.25 1211.53 L2124.84 1211.53 L2125.42 1211.53 L2126.01 1211.53 L2126.6 1211.53 L2127.18 1211.53 L2127.77 1211.53 L2128.36 1211.53 L2128.94 1211.53 L2129.53 1211.53 L2130.12 1211.53 L2130.7 1211.53 L2131.29 1211.53 L2131.88 1211.53 L2132.46 1211.53 L2133.05 1211.53 L2133.63 1211.53 L2134.22 1211.53 L2134.81 1211.53 L2135.39 1211.53 L2135.98 1211.53 L2136.57 1211.53 L2137.15 1211.53 L2137.74 1211.53 L2138.33 1211.53 L2138.91 1211.53 L2139.5 1211.53 L2140.09 1211.53 L2140.67 1211.53 L2141.26 1211.53 L2141.84 1211.53 L2142.43 1211.53 L2143.02 1211.53 L2143.6 1211.53 L2144.19 1211.53 L2144.78 1211.53 L2145.36 1211.53 L2145.95 1211.53 L2146.54 1211.53 L2147.12 1211.53 L2147.71 1211.53 L2148.3 1211.53 L2148.88 1211.53 L2149.47 1211.53 L2150.05 1211.53 L2150.64 1211.53 L2151.23 1211.53 L2151.81 1211.53 L2152.4 1211.53 L2152.99 1211.53 L2153.57 1211.53 L2154.16 1211.53 L2154.75 1211.53 L2155.33 1211.53 L2155.92 1211.53 L2156.5 1211.53 L2157.09 1211.53 L2157.68 1211.53 L2158.26 1211.53 L2158.26 1211.4 L2157.68 1211.4 L2157.09 1211.4 L2156.5 1211.4 L2155.92 1211.4 L2155.33 1211.4 L2154.75 1211.4 L2154.16 1211.4 L2153.57 1211.4 L2152.99 1211.4 L2152.4 1211.4 L2151.81 1211.4 L2151.23 1211.4 L2150.64 1211.4 L2150.05 1211.4 L2149.47 1211.4 L2148.88 1211.4 L2148.3 1211.4 L2147.71 1211.4 L2147.12 1211.4 L2146.54 1211.4 L2145.95 1211.4 L2145.36 1211.4 L2144.78 1211.4 L2144.19 1211.4 L2143.6 1211.4 L2143.02 1211.4 L2142.43 1211.4 L2141.84 1211.4 L2141.26 1211.4 L2140.67 1211.4 L2140.09 1211.4 L2139.5 1211.4 L2138.91 1211.4 L2138.33 1211.4 L2137.74 1211.4 L2137.15 1211.4 L2136.57 1211.4 L2135.98 1211.4 L2135.39 1211.4 L2134.81 1211.4 L2134.22 1211.4 L2133.63 1211.4 L2133.05 1211.4 L2132.46 1211.4 L2131.88 1211.4 L2131.29 1211.4 L2130.7 1211.4 L2130.12 1211.4 L2129.53 1211.4 L2128.94 1211.4 L2128.36 1211.4 L2127.77 1211.4 L2127.18 1211.4 L2126.6 1211.4 L2126.01 1211.4 L2125.42 1211.4 L2124.84 1211.4 L2124.25 1211.4 L2123.67 1211.4 L2123.08 1211.4 L2122.49 1211.4 L2121.91 1211.4 L2121.32 1211.4 L2120.73 1211.4 L2120.15 1211.4 L2119.56 1211.4 L2118.97 1211.4 L2118.39 1211.4 L2117.8 1211.4 L2117.22 1211.4 L2116.63 1211.4 L2116.04 1211.4 L2115.46 1211.4 L2114.87 1211.4 L2114.28 1211.4 L2113.7 1211.4 L2113.11 1211.4 L2112.52 1211.4 L2111.94 1211.4 L2111.35 1211.4 L2110.76 1211.4 L2110.18 1211.4 L2109.59 1211.4 L2109.01 1211.4 L2108.42 1211.4 L2107.83 1211.4 L2107.25 1211.4 L2106.66 1211.4 L2106.07 1211.4 L2105.49 1211.4 L2104.9 1211.4 L2104.31 1211.4 L2103.73 1211.4 L2103.14 1211.4 L2102.55 1211.4 L2101.97 1211.4 L2101.38 1211.4 L2100.8 1211.4 L2100.21 1211.4 L2099.62 1211.4 L2099.04 1211.4 L2098.45 1211.4 L2097.86 1211.4 L2097.28 1211.4 L2096.69 1211.4 L2096.1 1211.4 L2095.52 1211.4 L2094.93 1211.4 L2094.35 1211.4 L2093.76 1211.4 L2093.17 1211.4 L2092.59 1211.4 L2092 1211.4 L2091.41 1211.4 L2090.83 1211.4 L2090.24 1211.4 L2089.65 1211.4 L2089.07 1211.4 L2088.48 1211.4 L2087.89 1211.4 L2087.31 1211.4 L2086.72 1211.4 L2086.14 1211.4 L2085.55 1211.4 L2084.96 1211.4 L2084.38 1211.4 L2083.79 1211.4 L2083.2 1211.4 L2082.62 1211.4 L2082.03 1211.4 L2081.44 1211.4 L2080.86 1211.4 L2080.27 1211.4 L2079.68 1211.4 L2079.1 1211.4 L2078.51 1211.4 L2077.93 1211.4 L2077.34 1211.4 L2076.75 1211.4 L2076.17 1211.4 L2075.58 1211.4 L2074.99 1211.4 L2074.41 1211.4 L2073.82 1211.4 L2073.23 1211.4 L2072.65 1211.4 L2072.06 1211.4 L2071.48 1211.4 L2070.89 1211.4 L2070.3 1211.4 L2069.72 1211.4 L2069.13 1211.4 L2068.54 1211.4 L2067.96 1211.4 L2067.37 1211.4 L2066.78 1211.4 L2066.2 1211.4 L2065.61 1211.4 L2065.02 1211.4 L2064.44 1211.4 L2063.85 1211.4 L2063.27 1211.4 L2062.68 1211.4 L2062.09 1211.4 L2061.51 1211.4 L2060.92 1211.4 L2060.33 1211.4 L2059.75 1211.4 L2059.16 1211.4 L2058.57 1211.4 L2057.99 1211.4 L2057.4 1211.4 L2056.81 1211.4 L2056.23 1211.4 L2055.64 1211.4 L2055.06 1211.4 L2054.47 1211.4 L2053.88 1211.4 L2053.3 1211.4 L2052.71 1211.4 L2052.12 1211.4 L2051.54 1211.4 L2050.95 1211.4 L2050.36 1211.4 L2049.78 1211.4 L2049.19 1211.4 L2048.6 1211.4 L2048.02 1211.4 L2047.43 1211.4 L2046.85 1211.4 L2046.26 1211.4 L2045.67 1211.4 L2045.09 1211.4 L2044.5 1211.4 L2043.91 1211.4 L2043.33 1211.4 L2042.74 1211.4 L2042.15 1211.4 L2041.57 1211.4 L2040.98 1211.4 L2040.4 1211.4 L2039.81 1211.4 L2039.22 1211.4 L2038.64 1211.4 L2038.05 1211.4 L2037.46 1211.4 L2036.88 1211.4 L2036.29 1211.4 L2035.7 1211.4 L2035.12 1211.4 L2034.53 1211.4 L2033.94 1211.4 L2033.36 1211.4 L2032.77 1211.4 L2032.19 1211.4 L2031.6 1211.4 L2031.01 1211.4 L2030.43 1211.4 L2029.84 1211.4 L2029.25 1211.4 L2028.67 1211.4 L2028.08 1211.4 L2027.49 1211.4 L2026.91 1211.4 L2026.32 1211.4 L2025.73 1211.4 L2025.15 1211.4 L2024.56 1211.4 L2023.98 1211.4 L2023.39 1211.4 L2022.8 1211.4 L2022.22 1211.4 L2021.63 1211.4 L2021.04 1211.4 L2020.46 1211.4 L2019.87 1211.4 L2019.28 1211.4 L2018.7 1211.4 L2018.11 1211.4 L2017.53 1211.4 L2016.94 1211.4 L2016.35 1211.4 L2015.77 1211.4 L2015.18 1211.4 L2014.59 1211.4 L2014.01 1211.4 L2013.42 1211.4 L2012.83 1211.4 L2012.25 1211.4 L2011.66 1211.4 L2011.07 1211.4 L2010.49 1211.4 L2009.9 1211.4 L2009.32 1211.4 L2008.73 1211.4 L2008.14 1211.4 L2007.56 1211.4 L2006.97 1211.4 L2006.38 1211.4 L2005.8 1211.4 L2005.21 1211.4 L2004.62 1211.4 L2004.04 1211.4 L2003.45 1211.4 L2002.86 1211.4 L2002.28 1211.4 L2001.69 1211.4 L2001.11 1211.4 L2000.52 1211.4 L1999.93 1211.4 L1999.35 1211.4 L1998.76 1211.4 L1998.17 1211.4 L1997.59 1211.4 L1997 1211.4 L1996.41 1211.4 L1995.83 1211.4 L1995.24 1211.4 L1994.65 1211.4 L1994.07 1211.4 L1993.48 1211.4 L1992.9 1211.4 L1992.31 1211.4 L1991.72 1211.4 L1991.14 1211.4 L1990.55 1211.4 L1989.96 1211.4 L1989.38 1211.4 L1988.79 1211.4 L1988.2 1211.4 L1987.62 1211.4 L1987.03 1211.4 L1986.45 1211.4 L1985.86 1211.4 L1985.27 1211.4 L1984.69 1211.4 L1984.1 1211.4 L1983.51 1211.4 L1982.93 1211.4 L1982.34 1211.4 L1981.75 1211.4 L1981.17 1211.4 L1980.58 1211.4 L1979.99 1211.4 L1979.41 1211.4 L1978.82 1211.4 L1978.24 1211.4 L1977.65 1211.4 L1977.06 1211.4 L1976.48 1211.4 L1975.89 1211.4 L1975.3 1211.4 L1974.72 1211.4 L1974.13 1211.4 L1973.54 1211.4 L1972.96 1211.4 L1972.37 1211.4 L1971.78 1211.4 L1971.2 1211.4 L1970.61 1211.4 L1970.03 1211.4 L1969.44 1211.4 L1968.85 1211.4 L1968.27 1211.4 L1967.68 1211.4 L1967.09 1211.4 L1966.51 1211.4 L1965.92 1211.4 L1965.33 1211.4 L1964.75 1211.4 L1964.16 1211.4 L1963.58 1211.4 L1962.99 1211.4 L1962.4 1211.4 L1961.82 1211.4 L1961.23 1211.4 L1960.64 1211.4 L1960.06 1211.4 L1959.47 1211.4 L1958.88 1211.4 L1958.3 1211.4 L1957.71 1211.4 L1957.12 1211.4 L1956.54 1211.4 L1955.95 1211.4 L1955.37 1211.4 L1954.78 1211.4 L1954.19 1211.4 L1953.61 1211.4 L1953.02 1211.4 L1952.43 1211.4 L1951.85 1211.4 L1951.26 1211.4 L1950.67 1211.4 L1950.09 1211.4 L1949.5 1211.4 L1948.91 1211.4 L1948.33 1211.4 L1947.74 1211.4 L1947.16 1211.4 L1946.57 1211.4 L1945.98 1211.4 L1945.4 1211.4 L1944.81 1211.4 L1944.22 1211.4 L1943.64 1211.4 L1943.05 1211.4 L1942.46 1211.4 L1941.88 1211.4 L1941.29 1211.4 L1940.71 1211.4 L1940.12 1211.4 L1939.53 1211.4 L1938.95 1211.4 L1938.36 1211.4 L1937.77 1211.4 L1937.19 1211.4 L1936.6 1211.4 L1936.01 1211.4 L1935.43 1211.4 L1934.84 1211.4 L1934.25 1211.4 L1933.67 1211.4 L1933.08 1211.4 L1932.5 1211.4 L1931.91 1211.4 L1931.32 1211.4 L1930.74 1211.4 L1930.15 1211.4 L1929.56 1211.4 L1928.98 1211.4 L1928.39 1211.4 L1927.8 1211.4 L1927.22 1211.4 L1926.63 1211.4 L1926.04 1211.4 L1925.46 1211.4 L1924.87 1211.4 L1924.29 1211.4 L1923.7 1211.4 L1923.11 1211.4 L1922.53 1211.4 L1921.94 1211.4 L1921.35 1211.4 L1920.77 1211.4 L1920.18 1211.4 L1919.59 1211.4 L1919.01 1211.4 L1918.42 1211.4 L1917.83 1211.4 L1917.25 1211.4 L1916.66 1211.4 L1916.08 1211.4 L1915.49 1211.4 L1914.9 1211.4 L1914.32 1211.4 L1913.73 1211.4 L1913.14 1211.4 L1912.56 1211.4 L1911.97 1211.4 L1911.38 1211.4 L1910.8 1211.4 L1910.21 1211.4 L1909.63 1211.4 L1909.04 1211.4 L1908.45 1211.4 L1907.87 1211.4 L1907.28 1211.4 L1906.69 1211.4 L1906.11 1211.4 L1905.52 1211.4 L1904.93 1211.4 L1904.35 1211.4 L1903.76 1211.4 L1903.17 1211.4 L1902.59 1211.4 L1902 1211.4 L1901.42 1211.4 L1900.83 1211.4 L1900.24 1211.4 L1899.66 1211.4 L1899.07 1211.4 L1898.48 1211.4 L1897.9 1211.4 L1897.31 1211.4 L1896.72 1211.4 L1896.14 1211.4 L1895.55 1211.4 L1894.96 1211.4 L1894.38 1211.4 L1893.79 1211.4 L1893.21 1211.4 L1892.62 1211.4 L1892.03 1211.4 L1891.45 1211.4 L1890.86 1211.4 L1890.27 1211.4 L1889.69 1211.4 L1889.1 1211.4 L1888.51 1211.4 L1887.93 1211.4 L1887.34 1211.4 L1886.76 1211.4 L1886.17 1211.4 L1885.58 1211.4 L1885 1211.4 L1884.41 1211.4 L1883.82 1211.4 L1883.24 1211.4 L1882.65 1211.4 L1882.06 1211.4 L1881.48 1211.4 L1880.89 1211.4 L1880.3 1211.4 L1879.72 1211.4 L1879.13 1211.4 L1878.55 1211.4 L1877.96 1211.4 L1877.37 1211.4 L1876.79 1211.4 L1876.2 1211.4 L1875.61 1211.4 L1875.03 1211.4 L1874.44 1211.4 L1873.85 1211.4 L1873.27 1211.4 L1872.68 1211.4 L1872.09 1211.4 L1871.51 1211.4 L1870.92 1211.4 L1870.34 1211.4 L1869.75 1211.4 L1869.16 1211.4 L1868.58 1211.4 L1867.99 1211.4 L1867.4 1211.4 L1866.82 1211.4 L1866.23 1211.4 L1865.64 1211.4 L1865.06 1211.4 L1864.47 1211.4 L1863.88 1211.4 L1863.3 1211.4 L1862.71 1211.4 L1862.13 1211.4 L1861.54 1211.4 L1860.95 1211.4 L1860.37 1211.4 L1859.78 1211.4 L1859.19 1211.4 L1858.61 1211.4 L1858.02 1211.4 L1857.43 1211.4 L1856.85 1211.4 L1856.26 1211.4 L1855.68 1211.4 L1855.09 1211.4 L1854.5 1211.4 L1853.92 1211.4 L1853.33 1211.4 L1852.74 1211.4 L1852.16 1211.4 L1851.57 1211.4 L1850.98 1211.4 L1850.4 1211.4 L1849.81 1211.4 L1849.22 1211.4 L1848.64 1211.4 L1848.05 1211.4 L1847.47 1211.4 L1846.88 1211.4 L1846.29 1211.4 L1845.71 1211.4 L1845.12 1211.4 L1844.53 1211.4 L1843.95 1211.4 L1843.36 1211.4 L1842.77 1211.4 L1842.19 1211.4 L1841.6 1211.4 L1841.01 1211.4 L1840.43 1211.4 L1839.84 1211.4 L1839.26 1211.4 L1838.67 1211.4 L1838.08 1211.4 L1837.5 1211.4 L1836.91 1211.4 L1836.32 1211.4 L1835.74 1211.4 L1835.15 1211.4 L1834.56 1211.4 L1833.98 1211.4 L1833.39 1211.4 L1832.81 1211.4 L1832.22 1211.4 L1831.63 1211.4 L1831.05 1211.4 L1830.46 1211.4 L1829.87 1211.4 L1829.29 1211.4 L1828.7 1211.4 L1828.11 1211.4 L1827.53 1211.4 L1826.94 1211.4 L1826.35 1211.4 L1825.77 1211.4 L1825.18 1211.4 L1824.6 1211.4 L1824.01 1211.4 L1823.42 1211.4 L1822.84 1211.4 L1822.25 1211.4 L1821.66 1211.4 L1821.08 1211.4 L1820.49 1211.4 L1819.9 1211.4 L1819.32 1211.4 L1818.73 1211.4 L1818.14 1211.4 L1817.56 1211.4 L1816.97 1211.4 L1816.39 1211.4 L1815.8 1211.4 L1815.21 1211.4 L1814.63 1211.4 L1814.04 1211.4 L1813.45 1211.4 L1812.87 1211.4 L1812.28 1211.4 L1811.69 1211.4 L1811.11 1211.4 L1810.52 1211.4 L1809.94 1211.4 L1809.35 1211.4 L1808.76 1211.4 L1808.18 1211.4 L1807.59 1211.4 L1807 1211.4 L1806.42 1211.4 L1805.83 1211.4 L1805.24 1211.4 L1804.66 1211.4 L1804.07 1211.4 L1803.48 1211.4 L1802.9 1211.4 L1802.31 1211.4 L1801.73 1211.4 L1801.14 1211.4 L1800.55 1211.4 L1799.97 1211.4 L1799.38 1211.4 L1798.79 1211.4 L1798.21 1211.4 L1797.62 1211.4 L1797.03 1211.4 L1796.45 1211.4 L1795.86 1211.4 L1795.27 1211.4 L1794.69 1211.4 L1794.1 1211.4 L1793.52 1211.4 L1792.93 1211.4 L1792.34 1211.4 L1791.76 1211.4 L1791.17 1211.4 L1790.58 1211.4 L1790 1211.4 L1789.41 1211.4 L1788.82 1211.4 L1788.24 1211.4 L1787.65 1211.4 L1787.06 1211.4 L1786.48 1211.4 L1785.89 1211.4 L1785.31 1211.4 L1784.72 1211.4 L1784.13 1211.4 L1783.55 1211.4 L1782.96 1211.4 L1782.37 1211.4 L1781.79 1211.4 L1781.2 1211.4 L1780.61 1211.4 L1780.03 1211.4 L1779.44 1211.4 L1778.86 1211.4 L1778.27 1211.4 L1777.68 1211.4 L1777.1 1211.4 L1776.51 1211.4 L1775.92 1211.4 L1775.34 1211.4 L1774.75 1211.4 L1774.16 1211.4 L1773.58 1211.4 L1772.99 1211.4 L1772.4 1211.4 L1771.82 1211.4 L1771.23 1211.4 L1770.65 1211.4 L1770.06 1211.4 L1769.47 1211.4 L1768.89 1211.4 L1768.3 1211.4 L1767.71 1211.4 L1767.13 1211.4 L1766.54 1211.4 L1765.95 1211.4 L1765.37 1211.4 L1764.78 1211.4 L1764.19 1211.4 L1763.61 1211.4 L1763.02 1211.4 L1762.44 1211.4 L1761.85 1211.4 L1761.26 1211.4 L1760.68 1211.4 L1760.09 1211.4 L1759.5 1211.4 L1758.92 1211.4 L1758.33 1211.4 L1757.74 1211.4 L1757.16 1211.4 L1756.57 1211.4 L1755.99 1211.4 L1755.4 1211.4 L1754.81 1211.4 L1754.23 1211.4 L1753.64 1211.4 L1753.05 1211.4 L1752.47 1211.4 L1751.88 1211.4 L1751.29 1211.4 L1750.71 1211.4 L1750.12 1211.4 L1749.53 1211.4 L1748.95 1211.4 L1748.36 1211.4 L1747.78 1211.4 L1747.19 1211.4 L1746.6 1211.4 L1746.02 1211.4 L1745.43 1211.4 L1744.84 1211.4 L1744.26 1211.4 L1743.67 1211.4 L1743.08 1211.4 L1742.5 1211.4 L1741.91 1211.4 L1741.32 1211.4 L1740.74 1211.4 L1740.15 1211.4 L1739.57 1211.4 L1738.98 1211.4 L1738.39 1211.4 L1737.81 1211.4 L1737.22 1211.4 L1736.63 1211.4 L1736.05 1211.4 L1735.46 1211.4 L1734.87 1211.4 L1734.29 1211.4 L1733.7 1211.4 L1733.11 1211.4 L1732.53 1211.4 L1731.94 1211.4 L1731.36 1211.4 L1730.77 1211.4 L1730.18 1211.4 L1729.6 1211.4 L1729.01 1211.4 L1728.42 1211.4 L1727.84 1211.4 L1727.25 1211.4 L1726.66 1211.4 L1726.08 1211.4 L1725.49 1211.4 L1724.91 1211.4 L1724.32 1211.4 L1723.73 1211.4 L1723.15 1211.4 L1722.56 1211.4 L1721.97 1211.4 L1721.39 1211.4 L1720.8 1211.4 L1720.21 1211.4 L1719.63 1211.4 L1719.04 1211.4 L1718.45 1211.4 L1717.87 1211.4 L1717.28 1211.4 L1716.7 1211.4 L1716.11 1211.4 L1715.52 1211.4 L1714.94 1211.4 L1714.35 1211.4 L1713.76 1211.4 L1713.18 1211.4 L1712.59 1211.4 L1712 1211.4 L1711.42 1211.4 L1710.83 1211.4 L1710.24 1211.4 L1709.66 1211.4 L1709.07 1211.4 L1708.49 1211.4 L1707.9 1211.4 L1707.31 1211.4 L1706.73 1211.4 L1706.14 1211.4 L1705.55 1211.4 L1704.97 1211.4 L1704.38 1211.4 L1703.79 1211.4 L1703.21 1211.4 L1702.62 1211.4 L1702.04 1211.4 L1701.45 1211.4 L1700.86 1211.4 L1700.28 1211.4 L1699.69 1211.4 L1699.1 1211.4 L1698.52 1211.4 L1697.93 1211.4 L1697.34 1211.4 L1696.76 1211.4 L1696.17 1211.4 L1695.58 1211.4 L1695 1211.4 L1694.41 1211.4 L1693.83 1211.4 L1693.24 1211.4 L1692.65 1211.4 L1692.07 1211.4 L1691.48 1211.4 L1690.89 1211.4 L1690.31 1211.4 L1689.72 1211.4 L1689.13 1211.4 L1688.55 1211.4 L1687.96 1211.4 L1687.37 1211.4 L1686.79 1211.4 L1686.2 1211.4 L1685.62 1211.4 L1685.03 1211.4 L1684.44 1211.4 L1683.86 1211.4 L1683.27 1211.4 L1682.68 1211.4 L1682.1 1211.4 L1681.51 1211.4 L1680.92 1211.4 L1680.34 1211.4 L1679.75 1211.4 L1679.17 1211.4 L1678.58 1211.4 L1677.99 1211.4 L1677.41 1211.4 L1676.82 1211.4 L1676.23 1211.4 L1675.65 1211.4 L1675.06 1211.4 L1674.47 1211.4 L1673.89 1211.4 L1673.3 1211.4 L1672.71 1211.4 L1672.13 1211.4 L1671.54 1211.4 L1670.96 1211.4 L1670.37 1211.4 L1669.78 1211.4 L1669.2 1211.4 L1668.61 1211.4 L1668.02 1211.4 L1667.44 1211.4 L1666.85 1211.4 L1666.26 1211.4 L1665.68 1211.4 L1665.09 1211.4 L1664.5 1211.4 L1663.92 1211.4 L1663.33 1211.4 L1662.75 1211.4 L1662.16 1211.4 L1661.57 1211.4 L1660.99 1211.4 L1660.4 1211.4 L1659.81 1211.4 L1659.23 1211.4 L1658.64 1211.4 L1658.05 1211.4 L1657.47 1211.4 L1656.88 1211.4 L1656.29 1211.4 L1655.71 1211.4 L1655.12 1211.4 L1654.54 1211.4 L1653.95 1211.4 L1653.36 1211.4 L1652.78 1211.4 L1652.19 1211.4 L1651.6 1211.4 L1651.02 1211.4 L1650.43 1211.4 L1649.84 1211.4 L1649.26 1211.4 L1648.67 1211.4 L1648.09 1211.4 L1647.5 1211.4 L1646.91 1211.4 L1646.33 1211.4 L1645.74 1211.4 L1645.15 1211.4 L1644.57 1211.4 L1643.98 1211.4 L1643.39 1211.4 L1642.81 1211.4 L1642.22 1211.4 L1641.63 1211.4 L1641.05 1211.4 L1640.46 1211.4 L1639.88 1211.4 L1639.29 1211.4 L1638.7 1211.4 L1638.12 1211.4 L1637.53 1211.4 L1636.94 1211.4 L1636.36 1211.4 L1635.77 1211.4 L1635.18 1211.4 L1634.6 1211.4 L1634.01 1211.4 L1633.42 1211.4 L1632.84 1211.4 L1632.25 1211.4 L1631.67 1211.4 L1631.08 1211.4 L1630.49 1211.4 L1629.91 1211.4 L1629.32 1211.4 L1628.73 1211.4 L1628.15 1211.4 L1627.56 1211.4 L1626.97 1211.4 L1626.39 1211.4 L1625.8 1211.4 L1625.22 1211.4 L1624.63 1211.4 L1624.04 1211.4 L1623.46 1211.4 L1622.87 1211.4 L1622.28 1211.4 L1621.7 1211.4 L1621.11 1211.4 L1620.52 1211.4 L1619.94 1211.4 L1619.35 1211.4 L1618.76 1211.4 L1618.18 1211.4 L1617.59 1211.4 L1617.01 1211.4 L1616.42 1211.4 L1615.83 1211.4 L1615.25 1211.4 L1614.66 1211.4 L1614.07 1211.4 L1613.49 1211.4 L1612.9 1211.4 L1612.31 1211.4 L1611.73 1211.4 L1611.14 1211.4 L1610.55 1211.4 L1609.97 1211.4 L1609.38 1211.4 L1608.8 1211.4 L1608.21 1211.4 L1607.62 1211.4 L1607.04 1211.4 L1606.45 1211.4 L1605.86 1211.4 L1605.28 1211.4 L1604.69 1211.4 L1604.1 1211.4 L1603.52 1211.4 L1602.93 1211.4 L1602.34 1211.4 L1601.76 1211.4 L1601.17 1211.4 L1600.59 1211.4 L1600 1211.4 L1599.41 1211.4 L1598.83 1211.4 L1598.24 1211.4 L1597.65 1211.4 L1597.07 1211.4 L1596.48 1211.4 L1595.89 1211.4 L1595.31 1211.4 L1594.72 1211.4 L1594.14 1211.4 L1593.55 1211.4 L1592.96 1211.4 L1592.38 1211.4 L1591.79 1211.4 L1591.2 1211.4 L1590.62 1211.4 L1590.03 1211.4 L1589.44 1211.4 L1588.86 1211.4 L1588.27 1211.4 L1587.68 1211.4 L1587.1 1211.4 L1586.51 1211.4 L1585.93 1211.4 L1585.34 1211.4 L1584.75 1211.4 L1584.17 1211.4 L1583.58 1211.4 L1582.99 1211.4 L1582.41 1211.4 L1581.82 1211.4 L1581.23 1211.4 L1580.65 1211.4 L1580.06 1211.4 L1579.47 1211.4 L1578.89 1211.4 L1578.3 1211.4 L1577.72 1211.4 L1577.13 1211.4 L1576.54 1211.4 L1575.96 1211.4 L1575.37 1211.4 L1574.78 1211.4 L1574.2 1211.4 L1573.61 1211.4 L1573.02 1211.4 L1572.44 1211.4 L1571.85 1211.4 L1571.27 1211.4 L1570.68 1211.4 L1570.09 1211.4 L1569.51 1211.4 L1568.92 1211.4 L1568.33 1211.4 L1567.75 1211.4 L1567.16 1211.4 L1566.57 1211.4 L1565.99 1211.4 L1565.4 1211.4 L1564.81 1211.4 L1564.23 1211.4 L1563.64 1211.4 L1563.06 1211.4 L1562.47 1211.4 L1561.88 1211.4 L1561.3 1211.4 L1560.71 1211.4 L1560.12 1211.4 L1559.54 1211.4 L1558.95 1211.4 L1558.36 1211.4 L1557.78 1211.4 L1557.19 1211.4 L1556.6 1211.4 L1556.02 1211.4 L1555.43 1211.4 L1554.85 1211.4 L1554.26 1211.4 L1553.67 1211.4 L1553.09 1211.4 L1552.5 1211.4 L1551.91 1211.4 L1551.33 1211.4 L1550.74 1211.4 L1550.15 1211.4 L1549.57 1211.4 L1548.98 1211.4 L1548.4 1211.4 L1547.81 1211.4 L1547.22 1211.4 L1546.64 1211.4 L1546.05 1211.4 L1545.46 1211.4 L1544.88 1211.4 L1544.29 1211.4 L1543.7 1211.4 L1543.12 1211.4 L1542.53 1211.4 L1541.94 1211.4 L1541.36 1211.4 L1540.77 1211.4 L1540.19 1211.4 L1539.6 1211.4 L1539.01 1211.4 L1538.43 1211.4 L1537.84 1211.4 L1537.25 1211.4 L1536.67 1211.4 L1536.08 1211.4 L1535.49 1211.4 L1534.91 1211.4 L1534.32 1211.4 L1533.73 1211.4 L1533.15 1211.4 L1532.56 1211.4 L1531.98 1211.4 L1531.39 1211.4 L1530.8 1211.4 L1530.22 1211.4 L1529.63 1211.4 L1529.04 1211.4 L1528.46 1211.4 L1527.87 1211.4 L1527.28 1211.4 L1526.7 1211.4 L1526.11 1211.4 L1525.52 1211.4 L1524.94 1211.4 L1524.35 1211.4 L1523.77 1211.4 L1523.18 1211.4 L1522.59 1211.4 L1522.01 1211.4 L1521.42 1211.4 L1520.83 1211.4 L1520.25 1211.4 L1519.66 1211.4 L1519.07 1211.4 L1518.49 1211.4 L1517.9 1211.4 L1517.32 1211.4 L1516.73 1211.4 L1516.14 1211.4 L1515.56 1211.4 L1514.97 1211.4 L1514.38 1211.4 L1513.8 1211.4 L1513.21 1211.4 L1512.62 1211.4 L1512.04 1211.4 L1511.45 1211.4 L1510.86 1211.4 L1510.28 1211.4 L1509.69 1211.4 L1509.11 1211.4 L1508.52 1211.4 L1507.93 1211.4 L1507.35 1211.4 L1506.76 1211.4 L1506.17 1211.4 L1505.59 1211.4 L1505 1211.4 L1504.41 1211.4 L1503.83 1211.4 L1503.24 1211.4 L1502.65 1211.4 L1502.07 1211.4 L1501.48 1211.4 L1500.9 1211.4 L1500.31 1211.4 L1499.72 1211.4 L1499.14 1211.4 L1498.55 1211.4 L1497.96 1211.4 L1497.38 1211.4 L1496.79 1211.4 L1496.2 1211.4 L1495.62 1211.4 L1495.03 1211.4 L1494.45 1211.4 L1493.86 1211.4 L1493.27 1211.4 L1492.69 1211.4 L1492.1 1211.4 L1491.51 1211.4 L1490.93 1211.4 L1490.34 1211.4 L1489.75 1211.4 L1489.17 1211.4 L1488.58 1211.4 L1487.99 1211.4 L1487.41 1211.4 L1486.82 1211.4 L1486.24 1211.4 L1485.65 1211.4 L1485.06 1211.4 L1484.48 1211.4 L1483.89 1211.4 L1483.3 1211.4 L1482.72 1211.4 L1482.13 1211.4 L1481.54 1211.4 L1480.96 1211.4 L1480.37 1211.4 L1479.78 1211.4 L1479.2 1211.4 L1478.61 1211.4 L1478.03 1211.4 L1477.44 1211.4 L1476.85 1211.4 L1476.27 1211.4 L1475.68 1211.4 L1475.09 1211.4 L1474.51 1211.4 L1473.92 1211.4 L1473.33 1211.4 L1472.75 1211.4 L1472.16 1211.4 L1471.57 1211.4 L1470.99 1211.4 L1470.4 1211.4 L1469.82 1211.4 L1469.23 1211.4 L1468.64 1211.4 L1468.06 1211.4 L1467.47 1211.4 L1466.88 1211.4 L1466.3 1211.4 L1465.71 1211.4 L1465.12 1211.4 L1464.54 1211.4 L1463.95 1211.4 L1463.37 1211.4 L1462.78 1211.4 L1462.19 1211.4 L1461.61 1211.4 L1461.02 1211.4 L1460.43 1211.4 L1459.85 1211.4 L1459.26 1211.4 L1458.67 1211.4 L1458.09 1211.4 L1457.5 1211.4 L1456.91 1211.4 L1456.33 1211.4 L1455.74 1211.4 L1455.16 1211.4 L1454.57 1211.4 L1453.98 1211.4 L1453.4 1211.4 L1452.81 1211.4 L1452.22 1211.4 L1451.64 1211.4 L1451.05 1211.4 L1450.46 1211.4 L1449.88 1211.4 L1449.29 1211.4 L1448.7 1211.4 L1448.12 1211.4 L1447.53 1211.4 L1446.95 1211.4 L1446.36 1211.4 L1445.77 1211.4 L1445.19 1211.4 L1444.6 1211.4 L1444.01 1211.4 L1443.43 1211.4 L1442.84 1211.4 L1442.25 1211.4 L1441.67 1211.4 L1441.08 1211.4 L1440.5 1211.4 L1439.91 1211.4 L1439.32 1211.4 L1438.74 1211.4 L1438.15 1211.4 L1437.56 1211.4 L1436.98 1211.4 L1436.39 1211.4 L1435.8 1211.4 L1435.22 1211.4 L1434.63 1211.4 L1434.04 1211.4 L1433.46 1211.4 L1432.87 1211.4 L1432.29 1211.4 L1431.7 1211.4 L1431.11 1211.4 L1430.53 1211.4 L1429.94 1211.4 L1429.35 1211.4 L1428.77 1211.4 L1428.18 1211.4 L1427.59 1211.4 L1427.01 1211.4 L1426.42 1211.4 L1425.83 1211.4 L1425.25 1211.4 L1424.66 1211.4 L1424.08 1211.4 L1423.49 1211.4 L1422.9 1211.4 L1422.32 1211.4 L1421.73 1211.4 L1421.14 1211.4 L1420.56 1211.4 L1419.97 1211.4 L1419.38 1211.4 L1418.8 1211.4 L1418.21 1211.4 L1417.63 1211.4 L1417.04 1211.4 L1416.45 1211.4 L1415.87 1211.4 L1415.28 1211.4 L1414.69 1211.4 L1414.11 1211.4 L1413.52 1211.4 L1412.93 1211.4 L1412.35 1211.4 L1411.76 1211.4 L1411.17 1211.4 L1410.59 1211.4 L1410 1211.4 L1409.42 1211.4 L1408.83 1211.4 L1408.24 1211.4 L1407.66 1211.4 L1407.07 1211.4 L1406.48 1211.4 L1405.9 1211.4 L1405.31 1211.4 L1404.72 1211.4 L1404.14 1211.4 L1403.55 1211.4 L1402.96 1211.4 L1402.38 1211.4 L1401.79 1211.4 L1401.21 1211.4 L1400.62 1211.4 L1400.03 1211.4 L1399.45 1211.4 L1398.86 1211.4 L1398.27 1211.4 L1397.69 1211.4 L1397.1 1211.4 L1396.51 1211.4 L1395.93 1211.4 L1395.34 1211.4 L1394.75 1211.4 L1394.17 1211.4 L1393.58 1211.4 L1393 1211.4 L1392.41 1211.4 L1391.82 1211.4 L1391.24 1211.4 L1390.65 1211.4 L1390.06 1211.4 L1389.48 1211.4 L1388.89 1211.4 L1388.3 1211.4 L1387.72 1211.4 L1387.13 1211.4 L1386.55 1211.4 L1385.96 1211.4 L1385.37 1211.4 L1384.79 1211.4 L1384.2 1211.4 L1383.61 1211.4 L1383.03 1211.4 L1382.44 1211.4 L1381.85 1211.4 L1381.27 1211.4 L1380.68 1211.4 L1380.09 1211.4 L1379.51 1211.4 L1378.92 1211.4 L1378.34 1211.4 L1377.75 1211.4 L1377.16 1211.4 L1376.58 1211.4 L1375.99 1211.4 L1375.4 1211.4 L1374.82 1211.4 L1374.23 1211.4 L1373.64 1211.4 L1373.06 1211.4 L1372.47 1211.4 L1371.88 1211.4 L1371.3 1211.4 L1370.71 1211.4 L1370.13 1211.4 L1369.54 1211.4 L1368.95 1211.4 L1368.37 1211.4 L1367.78 1211.4 L1367.19 1211.4 L1366.61 1211.4 L1366.02 1211.4 L1365.43 1211.4 L1364.85 1211.4 L1364.26 1211.4 L1363.68 1211.4 L1363.09 1211.4 L1362.5 1211.4 L1361.92 1211.4 L1361.33 1211.4 L1360.74 1211.4 L1360.16 1211.4 L1359.57 1211.4 L1358.98 1211.4 L1358.4 1211.4 L1357.81 1211.4 L1357.22 1211.4 L1356.64 1211.4 L1356.05 1211.4 L1355.47 1211.4 L1354.88 1211.4 L1354.29 1211.4 L1353.71 1211.4 L1353.12 1211.4 L1352.53 1211.4 L1351.95 1211.4 L1351.36 1211.4 L1350.77 1211.4 L1350.19 1211.4 L1349.6 1211.4 L1349.01 1211.4 L1348.43 1211.4 L1347.84 1211.4 L1347.26 1211.4 L1346.67 1211.4 L1346.08 1211.4 L1345.5 1211.4 L1344.91 1211.4 L1344.32 1211.4 L1343.74 1211.4 L1343.15 1211.4 L1342.56 1211.4 L1341.98 1211.4 L1341.39 1211.4 L1340.8 1211.4 L1340.22 1211.4 L1339.63 1211.4 L1339.05 1211.4 L1338.46 1211.4 L1337.87 1211.4 L1337.29 1211.4 L1336.7 1211.4 L1336.11 1211.4 L1335.53 1211.4 L1334.94 1211.4 L1334.35 1211.4 L1333.77 1211.4 L1333.18 1211.4 L1332.6 1211.4 L1332.01 1211.4 L1331.42 1211.4 L1330.84 1211.4 L1330.25 1211.4 L1329.66 1211.4 L1329.08 1211.4 L1328.49 1211.4 L1327.9 1211.4 L1327.32 1211.4 L1326.73 1211.4 L1326.14 1211.4 L1325.56 1211.4 L1324.97 1211.4 L1324.39 1211.4 L1323.8 1211.4 L1323.21 1211.4 L1322.63 1211.4 L1322.04 1211.4 L1321.45 1211.4 L1320.87 1211.4 L1320.28 1211.4 L1319.69 1211.4 L1319.11 1211.4 L1318.52 1211.4 L1317.93 1211.4 L1317.35 1211.4 L1316.76 1211.4 L1316.18 1211.4 L1315.59 1211.4 L1315 1211.4 L1314.42 1211.4 L1313.83 1211.4 L1313.24 1211.4 L1312.66 1211.4 L1312.07 1211.4 L1311.48 1211.4 L1310.9 1211.4 L1310.31 1211.4 L1309.73 1211.4 L1309.14 1211.4 L1308.55 1211.4 L1307.97 1211.4 L1307.38 1211.4 L1306.79 1211.4 L1306.21 1211.4 L1305.62 1211.4 L1305.03 1211.4 L1304.45 1211.4 L1303.86 1211.4 L1303.27 1211.4 L1302.69 1211.4 L1302.1 1211.4 L1301.52 1211.4 L1300.93 1211.4 L1300.34 1211.4 L1299.76 1211.4 L1299.17 1211.4 L1298.58 1211.4 L1298 1211.4 L1297.41 1211.4 L1296.82 1211.4 L1296.24 1211.4 L1295.65 1211.4 L1295.06 1211.4 L1294.48 1211.4 L1293.89 1211.4 L1293.31 1211.4 L1292.72 1211.4 L1292.13 1211.4 L1291.55 1211.4 L1290.96 1211.4 L1290.37 1211.4 L1289.79 1211.4 L1289.2 1211.4 L1288.61 1211.4 L1288.03 1211.4 L1287.44 1211.4 L1286.86 1211.4 L1286.27 1211.4 L1285.68 1211.4 L1285.1 1211.4 L1284.51 1211.4 L1283.92 1211.4 L1283.34 1211.4 L1282.75 1211.4 L1282.16 1211.4 L1281.58 1211.4 L1280.99 1211.4 L1280.4 1211.4 L1279.82 1211.4 L1279.23 1211.4 L1278.65 1211.4 L1278.06 1211.4 L1277.47 1211.4 L1276.89 1211.4 L1276.3 1211.4 L1275.71 1211.4 L1275.13 1211.4 L1274.54 1211.4 L1273.95 1211.4 L1273.37 1211.4 L1272.78 1211.4 L1272.19 1211.4 L1271.61 1211.4 L1271.02 1211.4 L1270.44 1211.4 L1269.85 1211.4 L1269.26 1211.4 L1268.68 1211.4 L1268.09 1211.4 L1267.5 1211.4 L1266.92 1211.4 L1266.33 1211.4 L1265.74 1211.4 L1265.16 1211.4 L1264.57 1211.4 L1263.98 1211.4 L1263.4 1211.4 L1262.81 1211.4 L1262.23 1211.4 L1261.64 1211.4 L1261.05 1211.4 L1260.47 1211.4 L1259.88 1211.4 L1259.29 1211.4 L1258.71 1211.4 L1258.12 1211.4 L1257.53 1211.4 L1256.95 1211.4 L1256.36 1211.4 L1255.78 1211.4 L1255.19 1211.4 L1254.6 1211.4 L1254.02 1211.4 L1253.43 1211.4 L1252.84 1211.4 L1252.26 1211.4 L1251.67 1211.4 L1251.08 1211.4 L1250.5 1211.4 L1249.91 1211.4 L1249.32 1211.4 L1248.74 1211.4 L1248.15 1211.4 L1247.57 1211.4 L1246.98 1211.4 L1246.39 1211.4 L1245.81 1211.4 L1245.22 1211.4 L1244.63 1211.4 L1244.05 1211.4 L1243.46 1211.4 L1242.87 1211.4 L1242.29 1211.4 L1241.7 1211.4 L1241.11 1211.4 L1240.53 1211.4 L1239.94 1211.4 L1239.36 1211.4 L1238.77 1211.4 L1238.18 1211.4 L1237.6 1211.4 L1237.01 1211.4 L1236.42 1211.4 L1235.84 1211.4 L1235.25 1211.4 L1234.66 1211.4 L1234.08 1211.4 L1233.49 1211.4 L1232.91 1211.4 L1232.32 1211.4 L1231.73 1211.4 L1231.15 1211.4 L1230.56 1211.4 L1229.97 1211.4 L1229.39 1211.4 L1228.8 1211.4 L1228.21 1211.4 L1227.63 1211.4 L1227.04 1211.4 L1226.45 1211.4 L1225.87 1211.4 L1225.28 1211.4 L1224.7 1211.4 L1224.11 1211.4 L1223.52 1211.4 L1222.94 1211.4 L1222.35 1211.4 L1221.76 1211.4 L1221.18 1211.4 L1220.59 1211.4 L1220 1211.4 L1219.42 1211.4 L1218.83 1211.4 L1218.24 1211.4 L1217.66 1211.4 L1217.07 1211.4 L1216.49 1211.4 L1215.9 1211.4 L1215.31 1211.4 L1214.73 1211.4 L1214.14 1211.4 L1213.55 1211.4 L1212.97 1211.4 L1212.38 1211.4 L1211.79 1211.4 L1211.21 1211.4 L1210.62 1211.4 L1210.03 1211.4 L1209.45 1211.4 L1208.86 1211.4 L1208.28 1211.4 L1207.69 1211.4 L1207.1 1211.4 L1206.52 1211.4 L1205.93 1211.4 L1205.34 1211.4 L1204.76 1211.4 L1204.17 1211.4 L1203.58 1211.4 L1203 1211.4 L1202.41 1211.4 L1201.83 1211.4 L1201.24 1211.4 L1200.65 1211.4 L1200.07 1211.4 L1199.48 1211.4 L1198.89 1211.4 L1198.31 1211.4 L1197.72 1211.4 L1197.13 1211.4 L1196.55 1211.4 L1195.96 1211.4 L1195.37 1211.4 L1194.79 1211.4 L1194.2 1211.4 L1193.62 1211.4 L1193.03 1211.4 L1192.44 1211.4 L1191.86 1211.4 L1191.27 1211.4 L1190.68 1211.4 L1190.1 1211.4 L1189.51 1211.4 L1188.92 1211.4 L1188.34 1211.4 L1187.75 1211.4 L1187.16 1211.4 L1186.58 1211.4 L1185.99 1211.4 L1185.41 1211.4 L1184.82 1211.4 L1184.23 1211.4 L1183.65 1211.4 L1183.06 1211.4 L1182.47 1211.4 L1181.89 1211.4 L1181.3 1211.4 L1180.71 1211.4 L1180.13 1211.4 L1179.54 1211.4 L1178.96 1211.4 L1178.37 1211.4 L1177.78 1211.4 L1177.2 1211.4 L1176.61 1211.4 L1176.02 1211.4 L1175.44 1211.4 L1174.85 1211.4 L1174.26 1211.4 L1173.68 1211.4 L1173.09 1211.4 L1172.5 1211.4 L1171.92 1211.4 L1171.33 1211.4 L1170.75 1211.4 L1170.16 1211.4 L1169.57 1211.4 L1168.99 1211.4 L1168.4 1211.4 L1167.81 1211.4 L1167.23 1211.4 L1166.64 1211.4 L1166.05 1211.4 L1165.47 1211.4 L1164.88 1211.4 L1164.29 1211.4 L1163.71 1211.4 L1163.12 1211.4 L1162.54 1211.4 L1161.95 1211.4 L1161.36 1211.4 L1160.78 1211.4 L1160.19 1211.4 L1159.6 1211.4 L1159.02 1211.4 L1158.43 1211.4 L1157.84 1211.4 L1157.26 1211.4 L1156.67 1211.4 L1156.09 1211.4 L1155.5 1211.4 L1154.91 1211.4 L1154.33 1211.4 L1153.74 1211.4 L1153.15 1211.4 L1152.57 1211.4 L1151.98 1211.4 L1151.39 1211.4 L1150.81 1211.4 L1150.22 1211.4 L1149.63 1211.4 L1149.05 1211.4 L1148.46 1211.4 L1147.88 1211.4 L1147.29 1211.4 L1146.7 1211.4 L1146.12 1211.4 L1145.53 1211.4 L1144.94 1211.4 L1144.36 1211.4 L1143.77 1211.4 L1143.18 1211.4 L1142.6 1211.4 L1142.01 1211.4 L1141.42 1211.4 L1140.84 1211.4 L1140.25 1211.4 L1139.67 1211.4 L1139.08 1211.4 L1138.49 1211.4 L1137.91 1211.4 L1137.32 1211.4 L1136.73 1211.4 L1136.15 1211.4 L1135.56 1211.4 L1134.97 1211.4 L1134.39 1211.4 L1133.8 1211.4 L1133.21 1211.4 L1132.63 1211.4 L1132.04 1211.4 L1131.46 1211.4 L1130.87 1211.4 L1130.28 1211.4 L1129.7 1211.4 L1129.11 1211.4 L1128.52 1211.4 L1127.94 1211.4 L1127.35 1211.4 L1126.76 1211.4 L1126.18 1211.4 L1125.59 1211.4 L1125.01 1211.4 L1124.42 1211.4 L1123.83 1211.4 L1123.25 1211.4 L1122.66 1211.4 L1122.07 1211.4 L1121.49 1211.4 L1120.9 1211.4 L1120.31 1211.4 L1119.73 1211.4 L1119.14 1211.4 L1118.55 1211.4 L1117.97 1211.4 L1117.38 1211.4 L1116.8 1211.4 L1116.21 1211.4 L1115.62 1211.4 L1115.04 1211.4 L1114.45 1211.4 L1113.86 1211.4 L1113.28 1211.4 L1112.69 1211.4 L1112.1 1211.4 L1111.52 1211.4 L1110.93 1211.4 L1110.34 1211.4 L1109.76 1211.4 L1109.17 1211.4 L1108.59 1211.4 L1108 1211.4 L1107.41 1211.4 L1106.83 1211.4 L1106.24 1211.4 L1105.65 1211.4 L1105.07 1211.4 L1104.48 1211.4 L1103.89 1211.4 L1103.31 1211.4 L1102.72 1211.4 L1102.14 1211.4 L1101.55 1211.4 L1100.96 1211.4 L1100.38 1211.4 L1099.79 1211.4 L1099.2 1211.4 L1098.62 1211.4 L1098.03 1211.4 L1097.44 1211.4 L1096.86 1211.4 L1096.27 1211.4 L1095.68 1211.4 L1095.1 1211.4 L1094.51 1211.4 L1093.93 1211.4 L1093.34 1211.4 L1092.75 1211.4 L1092.17 1211.4 L1091.58 1211.4 L1090.99 1211.4 L1090.41 1211.4 L1089.82 1211.4 L1089.23 1211.4 L1088.65 1211.4 L1088.06 1211.4 L1087.47 1211.4 L1086.89 1211.4 L1086.3 1211.4 L1085.72 1211.4 L1085.13 1211.4 L1084.54 1211.4 L1083.96 1211.4 L1083.37 1211.4 L1082.78 1211.4 L1082.2 1211.4 L1081.61 1211.4 L1081.02 1211.4 L1080.44 1211.4 L1079.85 1211.4 L1079.26 1211.4 L1078.68 1211.4 L1078.09 1211.4 L1077.51 1211.4 L1076.92 1211.4 L1076.33 1211.4 L1075.75 1211.4 L1075.16 1211.4 L1074.57 1211.4 L1073.99 1211.4 L1073.4 1211.4 L1072.81 1211.4 L1072.23 1211.4 L1071.64 1211.4 L1071.06 1211.4 L1070.47 1211.4 L1069.88 1211.4 L1069.3 1211.4 L1068.71 1211.4 L1068.12 1211.4 L1067.54 1211.4 L1066.95 1211.4 L1066.36 1211.4 L1065.78 1211.4 L1065.19 1211.4 L1064.6 1211.4 L1064.02 1211.4 L1063.43 1211.4 L1062.85 1211.4 L1062.26 1211.4 L1061.67 1211.4 L1061.09 1211.4 L1060.5 1211.4 L1059.91 1211.4 L1059.33 1211.4 L1058.74 1211.4 L1058.15 1211.4 L1057.57 1211.4 L1056.98 1211.4 L1056.39 1211.4 L1055.81 1211.4 L1055.22 1211.4 L1054.64 1211.4 L1054.05 1211.4 L1053.46 1211.4 L1052.88 1211.4 L1052.29 1211.4 L1051.7 1211.4 L1051.12 1211.4 L1050.53 1211.4 L1049.94 1211.4 L1049.36 1211.4 L1048.77 1211.4 L1048.19 1211.4 L1047.6 1211.4 L1047.01 1211.4 L1046.43 1211.4 L1045.84 1211.4 L1045.25 1211.4 L1044.67 1211.4 L1044.08 1211.4 L1043.49 1211.4 L1042.91 1211.4 L1042.32 1211.4 L1041.73 1211.4 L1041.15 1211.4 L1040.56 1211.4 L1039.98 1211.4 L1039.39 1211.4 L1038.8 1211.4 L1038.22 1211.4 L1037.63 1211.4 L1037.04 1211.4 L1036.46 1211.4 L1035.87 1211.4 L1035.28 1211.4 L1034.7 1211.4 L1034.11 1211.4 L1033.52 1211.4 L1032.94 1211.4 L1032.35 1211.4 L1031.77 1211.4 L1031.18 1211.4 L1030.59 1211.4 L1030.01 1211.4 L1029.42 1211.4 L1028.83 1211.4 L1028.25 1211.4 L1027.66 1211.4 L1027.07 1211.4 L1026.49 1211.4 L1025.9 1211.4 L1025.32 1211.4 L1024.73 1211.4 L1024.14 1211.4 L1023.56 1211.4 L1022.97 1211.4 L1022.38 1211.4 L1021.8 1211.4 L1021.21 1211.4 L1020.62 1211.4 L1020.04 1211.4 L1019.45 1211.4 L1018.86 1211.4 L1018.28 1211.4 L1017.69 1211.4 L1017.11 1211.4 L1016.52 1211.4 L1015.93 1211.4 L1015.35 1211.4 L1014.76 1211.4 L1014.17 1211.4 L1013.59 1211.4 L1013 1211.4 L1012.41 1211.4 L1011.83 1211.4 L1011.24 1211.4 L1010.65 1211.4 L1010.07 1211.4 L1009.48 1211.4 L1008.9 1211.4 L1008.31 1211.4 L1007.72 1211.4 L1007.14 1211.4 L1006.55 1211.4 L1005.96 1211.4 L1005.38 1211.4 L1004.79 1211.4 L1004.2 1211.4 L1003.62 1211.4 L1003.03 1211.4 L1002.44 1211.4 L1001.86 1211.4 L1001.27 1211.4 L1000.69 1211.4 L1000.1 1211.4 L999.513 1211.4 L998.926 1211.4 L998.34 1211.4 L997.754 1211.4 L997.167 1211.4 L996.581 1211.4 L995.994 1211.4 L995.408 1211.4 L994.822 1211.4 L994.235 1211.4 L993.649 1211.4 L993.062 1211.4 L992.476 1211.4 L991.889 1211.4 L991.303 1211.4 L990.717 1211.4 L990.13 1211.4 L989.544 1211.4 L988.957 1211.4 L988.371 1211.4 L987.785 1211.4 L987.198 1211.4 L986.612 1211.4 L986.025 1211.4  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip962)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1211.46 986.612,1211.46 987.198,1211.46 987.785,1211.46 988.371,1211.46 988.957,1211.46 989.544,1211.46 990.13,1211.46 990.717,1211.46 991.303,1211.46 991.889,1211.46 992.476,1211.46 993.062,1211.46 993.649,1211.46 994.235,1211.46 994.822,1211.46 995.408,1211.46 995.994,1211.46 996.581,1211.46 997.167,1211.46 997.754,1211.46 998.34,1211.46 998.926,1211.46 999.513,1211.46 1000.1,1211.46 1000.69,1211.46 1001.27,1211.46 1001.86,1211.46 1002.44,1211.46 1003.03,1211.46 1003.62,1211.46 1004.2,1211.46 1004.79,1211.46 1005.38,1211.46 1005.96,1211.46 1006.55,1211.46 1007.14,1211.46 1007.72,1211.46 1008.31,1211.46 1008.9,1211.46 1009.48,1211.46 1010.07,1211.46 1010.65,1211.46 1011.24,1211.46 1011.83,1211.46 1012.41,1211.46 1013,1211.46 1013.59,1211.46 1014.17,1211.46 1014.76,1211.46 1015.35,1211.46 1015.93,1211.46 1016.52,1211.46 1017.11,1211.46 1017.69,1211.46 1018.28,1211.46 1018.86,1211.46 1019.45,1211.46 1020.04,1211.46 1020.62,1211.46 1021.21,1211.46 1021.8,1211.46 1022.38,1211.46 1022.97,1211.46 1023.56,1211.46 1024.14,1211.46 1024.73,1211.46 1025.32,1211.46 1025.9,1211.46 1026.49,1211.46 1027.07,1211.46 1027.66,1211.46 1028.25,1211.46 1028.83,1211.46 1029.42,1211.46 1030.01,1211.46 1030.59,1211.46 1031.18,1211.46 1031.77,1211.46 1032.35,1211.46 1032.94,1211.46 1033.52,1211.46 1034.11,1211.46 1034.7,1211.46 1035.28,1211.46 1035.87,1211.46 1036.46,1211.46 1037.04,1211.46 1037.63,1211.46 1038.22,1211.46 1038.8,1211.46 1039.39,1211.46 1039.98,1211.46 1040.56,1211.46 1041.15,1211.46 1041.73,1211.46 1042.32,1211.46 1042.91,1211.46 1043.49,1211.46 1044.08,1211.46 1044.67,1211.46 1045.25,1211.46 1045.84,1211.46 1046.43,1211.46 1047.01,1211.46 1047.6,1211.46 1048.19,1211.46 1048.77,1211.46 1049.36,1211.46 1049.94,1211.46 1050.53,1211.46 1051.12,1211.46 1051.7,1211.46 1052.29,1211.46 1052.88,1211.46 1053.46,1211.46 1054.05,1211.46 1054.64,1211.46 1055.22,1211.46 1055.81,1211.46 1056.39,1211.46 1056.98,1211.46 1057.57,1211.46 1058.15,1211.46 1058.74,1211.46 1059.33,1211.46 1059.91,1211.46 1060.5,1211.46 1061.09,1211.46 1061.67,1211.46 1062.26,1211.46 1062.85,1211.46 1063.43,1211.46 1064.02,1211.46 1064.6,1211.46 1065.19,1211.46 1065.78,1211.46 1066.36,1211.46 1066.95,1211.46 1067.54,1211.46 1068.12,1211.46 1068.71,1211.46 1069.3,1211.46 1069.88,1211.46 1070.47,1211.46 1071.06,1211.46 1071.64,1211.46 1072.23,1211.46 1072.81,1211.46 1073.4,1211.46 1073.99,1211.46 1074.57,1211.46 1075.16,1211.46 1075.75,1211.46 1076.33,1211.46 1076.92,1211.46 1077.51,1211.46 1078.09,1211.46 1078.68,1211.46 1079.26,1211.46 1079.85,1211.46 1080.44,1211.46 1081.02,1211.46 1081.61,1211.46 1082.2,1211.46 1082.78,1211.46 1083.37,1211.46 1083.96,1211.46 1084.54,1211.46 1085.13,1211.46 1085.72,1211.46 1086.3,1211.46 1086.89,1211.46 1087.47,1211.46 1088.06,1211.46 1088.65,1211.46 1089.23,1211.46 1089.82,1211.46 1090.41,1211.46 1090.99,1211.46 1091.58,1211.46 1092.17,1211.46 1092.75,1211.46 1093.34,1211.46 1093.93,1211.46 1094.51,1211.46 1095.1,1211.46 1095.68,1211.46 1096.27,1211.46 1096.86,1211.46 1097.44,1211.46 1098.03,1211.46 1098.62,1211.46 1099.2,1211.46 1099.79,1211.46 1100.38,1211.46 1100.96,1211.46 1101.55,1211.46 1102.14,1211.46 1102.72,1211.46 1103.31,1211.46 1103.89,1211.46 1104.48,1211.46 1105.07,1211.46 1105.65,1211.46 1106.24,1211.46 1106.83,1211.46 1107.41,1211.46 1108,1211.46 1108.59,1211.46 1109.17,1211.46 1109.76,1211.46 1110.34,1211.46 1110.93,1211.46 1111.52,1211.46 1112.1,1211.46 1112.69,1211.46 1113.28,1211.46 1113.86,1211.46 1114.45,1211.46 1115.04,1211.46 1115.62,1211.46 1116.21,1211.46 1116.8,1211.46 1117.38,1211.46 1117.97,1211.46 1118.55,1211.46 1119.14,1211.46 1119.73,1211.46 1120.31,1211.46 1120.9,1211.46 1121.49,1211.46 1122.07,1211.46 1122.66,1211.46 1123.25,1211.46 1123.83,1211.46 1124.42,1211.46 1125.01,1211.46 1125.59,1211.46 1126.18,1211.46 1126.76,1211.46 1127.35,1211.46 1127.94,1211.46 1128.52,1211.46 1129.11,1211.46 1129.7,1211.46 1130.28,1211.46 1130.87,1211.46 1131.46,1211.46 1132.04,1211.46 1132.63,1211.46 1133.21,1211.46 1133.8,1211.46 1134.39,1211.46 1134.97,1211.46 1135.56,1211.46 1136.15,1211.46 1136.73,1211.46 1137.32,1211.46 1137.91,1211.46 1138.49,1211.46 1139.08,1211.46 1139.67,1211.46 1140.25,1211.46 1140.84,1211.46 1141.42,1211.46 1142.01,1211.46 1142.6,1211.46 1143.18,1211.46 1143.77,1211.46 1144.36,1211.46 1144.94,1211.46 1145.53,1211.46 1146.12,1211.46 1146.7,1211.46 1147.29,1211.46 1147.88,1211.46 1148.46,1211.46 1149.05,1211.46 1149.63,1211.46 1150.22,1211.46 1150.81,1211.46 1151.39,1211.46 1151.98,1211.46 1152.57,1211.46 1153.15,1211.46 1153.74,1211.46 1154.33,1211.46 1154.91,1211.46 1155.5,1211.46 1156.09,1211.46 1156.67,1211.46 1157.26,1211.46 1157.84,1211.46 1158.43,1211.46 1159.02,1211.46 1159.6,1211.46 1160.19,1211.46 1160.78,1211.46 1161.36,1211.46 1161.95,1211.46 1162.54,1211.46 1163.12,1211.46 1163.71,1211.46 1164.29,1211.46 1164.88,1211.46 1165.47,1211.46 1166.05,1211.46 1166.64,1211.46 1167.23,1211.46 1167.81,1211.46 1168.4,1211.46 1168.99,1211.46 1169.57,1211.46 1170.16,1211.46 1170.75,1211.46 1171.33,1211.46 1171.92,1211.46 1172.5,1211.46 1173.09,1211.46 1173.68,1211.46 1174.26,1211.46 1174.85,1211.46 1175.44,1211.46 1176.02,1211.46 1176.61,1211.46 1177.2,1211.46 1177.78,1211.46 1178.37,1211.46 1178.96,1211.46 1179.54,1211.46 1180.13,1211.46 1180.71,1211.46 1181.3,1211.46 1181.89,1211.46 1182.47,1211.46 1183.06,1211.46 1183.65,1211.46 1184.23,1211.46 1184.82,1211.46 1185.41,1211.46 1185.99,1211.46 1186.58,1211.46 1187.16,1211.46 1187.75,1211.46 1188.34,1211.46 1188.92,1211.46 1189.51,1211.46 1190.1,1211.46 1190.68,1211.46 1191.27,1211.46 1191.86,1211.46 1192.44,1211.46 1193.03,1211.46 1193.62,1211.46 1194.2,1211.46 1194.79,1211.46 1195.37,1211.46 1195.96,1211.46 1196.55,1211.46 1197.13,1211.46 1197.72,1211.46 1198.31,1211.46 1198.89,1211.46 1199.48,1211.46 1200.07,1211.46 1200.65,1211.46 1201.24,1211.46 1201.83,1211.46 1202.41,1211.46 1203,1211.46 1203.58,1211.46 1204.17,1211.46 1204.76,1211.46 1205.34,1211.46 1205.93,1211.46 1206.52,1211.46 1207.1,1211.46 1207.69,1211.46 1208.28,1211.46 1208.86,1211.46 1209.45,1211.46 1210.03,1211.46 1210.62,1211.46 1211.21,1211.46 1211.79,1211.46 1212.38,1211.46 1212.97,1211.46 1213.55,1211.46 1214.14,1211.46 1214.73,1211.46 1215.31,1211.46 1215.9,1211.46 1216.49,1211.46 1217.07,1211.46 1217.66,1211.46 1218.24,1211.46 1218.83,1211.46 1219.42,1211.46 1220,1211.46 1220.59,1211.46 1221.18,1211.46 1221.76,1211.46 1222.35,1211.46 1222.94,1211.46 1223.52,1211.46 1224.11,1211.46 1224.7,1211.46 1225.28,1211.46 1225.87,1211.46 1226.45,1211.46 1227.04,1211.46 1227.63,1211.46 1228.21,1211.46 1228.8,1211.46 1229.39,1211.46 1229.97,1211.46 1230.56,1211.46 1231.15,1211.46 1231.73,1211.46 1232.32,1211.46 1232.91,1211.46 1233.49,1211.46 1234.08,1211.46 1234.66,1211.46 1235.25,1211.46 1235.84,1211.46 1236.42,1211.46 1237.01,1211.46 1237.6,1211.46 1238.18,1211.46 1238.77,1211.46 1239.36,1211.46 1239.94,1211.46 1240.53,1211.46 1241.11,1211.46 1241.7,1211.46 1242.29,1211.46 1242.87,1211.46 1243.46,1211.46 1244.05,1211.46 1244.63,1211.46 1245.22,1211.46 1245.81,1211.46 1246.39,1211.46 1246.98,1211.46 1247.57,1211.46 1248.15,1211.46 1248.74,1211.46 1249.32,1211.46 1249.91,1211.46 1250.5,1211.46 1251.08,1211.46 1251.67,1211.46 1252.26,1211.46 1252.84,1211.46 1253.43,1211.46 1254.02,1211.46 1254.6,1211.46 1255.19,1211.46 1255.78,1211.46 1256.36,1211.46 1256.95,1211.46 1257.53,1211.46 1258.12,1211.46 1258.71,1211.46 1259.29,1211.46 1259.88,1211.46 1260.47,1211.46 1261.05,1211.46 1261.64,1211.46 1262.23,1211.46 1262.81,1211.46 1263.4,1211.46 1263.98,1211.46 1264.57,1211.46 1265.16,1211.46 1265.74,1211.46 1266.33,1211.46 1266.92,1211.46 1267.5,1211.46 1268.09,1211.46 1268.68,1211.46 1269.26,1211.46 1269.85,1211.46 1270.44,1211.46 1271.02,1211.46 1271.61,1211.46 1272.19,1211.46 1272.78,1211.46 1273.37,1211.46 1273.95,1211.46 1274.54,1211.46 1275.13,1211.46 1275.71,1211.46 1276.3,1211.46 1276.89,1211.46 1277.47,1211.46 1278.06,1211.46 1278.65,1211.46 1279.23,1211.46 1279.82,1211.46 1280.4,1211.46 1280.99,1211.46 1281.58,1211.46 1282.16,1211.46 1282.75,1211.46 1283.34,1211.46 1283.92,1211.46 1284.51,1211.46 1285.1,1211.46 1285.68,1211.46 1286.27,1211.46 1286.86,1211.46 1287.44,1211.46 1288.03,1211.46 1288.61,1211.46 1289.2,1211.46 1289.79,1211.46 1290.37,1211.46 1290.96,1211.46 1291.55,1211.46 1292.13,1211.46 1292.72,1211.46 1293.31,1211.46 1293.89,1211.46 1294.48,1211.46 1295.06,1211.46 1295.65,1211.46 1296.24,1211.46 1296.82,1211.46 1297.41,1211.46 1298,1211.46 1298.58,1211.46 1299.17,1211.46 1299.76,1211.46 1300.34,1211.46 1300.93,1211.46 1301.52,1211.46 1302.1,1211.46 1302.69,1211.46 1303.27,1211.46 1303.86,1211.46 1304.45,1211.46 1305.03,1211.46 1305.62,1211.46 1306.21,1211.46 1306.79,1211.46 1307.38,1211.46 1307.97,1211.46 1308.55,1211.46 1309.14,1211.46 1309.73,1211.46 1310.31,1211.46 1310.9,1211.46 1311.48,1211.46 1312.07,1211.46 1312.66,1211.46 1313.24,1211.46 1313.83,1211.46 1314.42,1211.46 1315,1211.46 1315.59,1211.46 1316.18,1211.46 1316.76,1211.46 1317.35,1211.46 1317.93,1211.46 1318.52,1211.46 1319.11,1211.46 1319.69,1211.46 1320.28,1211.46 1320.87,1211.46 1321.45,1211.46 1322.04,1211.46 1322.63,1211.46 1323.21,1211.46 1323.8,1211.46 1324.39,1211.46 1324.97,1211.46 1325.56,1211.46 1326.14,1211.46 1326.73,1211.46 1327.32,1211.46 1327.9,1211.46 1328.49,1211.46 1329.08,1211.46 1329.66,1211.46 1330.25,1211.46 1330.84,1211.46 1331.42,1211.46 1332.01,1211.46 1332.6,1211.46 1333.18,1211.46 1333.77,1211.46 1334.35,1211.46 1334.94,1211.46 1335.53,1211.46 1336.11,1211.46 1336.7,1211.46 1337.29,1211.46 1337.87,1211.46 1338.46,1211.46 1339.05,1211.46 1339.63,1211.46 1340.22,1211.46 1340.8,1211.46 1341.39,1211.46 1341.98,1211.46 1342.56,1211.46 1343.15,1211.46 1343.74,1211.46 1344.32,1211.46 1344.91,1211.46 1345.5,1211.46 1346.08,1211.46 1346.67,1211.46 1347.26,1211.46 1347.84,1211.46 1348.43,1211.46 1349.01,1211.46 1349.6,1211.46 1350.19,1211.46 1350.77,1211.46 1351.36,1211.46 1351.95,1211.46 1352.53,1211.46 1353.12,1211.46 1353.71,1211.46 1354.29,1211.46 1354.88,1211.46 1355.47,1211.46 1356.05,1211.46 1356.64,1211.46 1357.22,1211.46 1357.81,1211.46 1358.4,1211.46 1358.98,1211.46 1359.57,1211.46 1360.16,1211.46 1360.74,1211.46 1361.33,1211.46 1361.92,1211.46 1362.5,1211.46 1363.09,1211.46 1363.68,1211.46 1364.26,1211.46 1364.85,1211.46 1365.43,1211.46 1366.02,1211.46 1366.61,1211.46 1367.19,1211.46 1367.78,1211.46 1368.37,1211.46 1368.95,1211.46 1369.54,1211.46 1370.13,1211.46 1370.71,1211.46 1371.3,1211.46 1371.88,1211.46 1372.47,1211.46 1373.06,1211.46 1373.64,1211.46 1374.23,1211.46 1374.82,1211.46 1375.4,1211.46 1375.99,1211.46 1376.58,1211.46 1377.16,1211.46 1377.75,1211.46 1378.34,1211.46 1378.92,1211.46 1379.51,1211.46 1380.09,1211.46 1380.68,1211.46 1381.27,1211.46 1381.85,1211.46 1382.44,1211.46 1383.03,1211.46 1383.61,1211.46 1384.2,1211.46 1384.79,1211.46 1385.37,1211.46 1385.96,1211.46 1386.55,1211.46 1387.13,1211.46 1387.72,1211.46 1388.3,1211.46 1388.89,1211.46 1389.48,1211.46 1390.06,1211.46 1390.65,1211.46 1391.24,1211.46 1391.82,1211.46 1392.41,1211.46 1393,1211.46 1393.58,1211.46 1394.17,1211.46 1394.75,1211.46 1395.34,1211.46 1395.93,1211.46 1396.51,1211.46 1397.1,1211.46 1397.69,1211.46 1398.27,1211.46 1398.86,1211.46 1399.45,1211.46 1400.03,1211.46 1400.62,1211.46 1401.21,1211.46 1401.79,1211.46 1402.38,1211.46 1402.96,1211.46 1403.55,1211.46 1404.14,1211.46 1404.72,1211.46 1405.31,1211.46 1405.9,1211.46 1406.48,1211.46 1407.07,1211.46 1407.66,1211.46 1408.24,1211.46 1408.83,1211.46 1409.42,1211.46 1410,1211.46 1410.59,1211.46 1411.17,1211.46 1411.76,1211.46 1412.35,1211.46 1412.93,1211.46 1413.52,1211.46 1414.11,1211.46 1414.69,1211.46 1415.28,1211.46 1415.87,1211.46 1416.45,1211.46 1417.04,1211.46 1417.63,1211.46 1418.21,1211.46 1418.8,1211.46 1419.38,1211.46 1419.97,1211.46 1420.56,1211.46 1421.14,1211.46 1421.73,1211.46 1422.32,1211.46 1422.9,1211.46 1423.49,1211.46 1424.08,1211.46 1424.66,1211.46 1425.25,1211.46 1425.83,1211.46 1426.42,1211.46 1427.01,1211.46 1427.59,1211.46 1428.18,1211.46 1428.77,1211.46 1429.35,1211.46 1429.94,1211.46 1430.53,1211.46 1431.11,1211.46 1431.7,1211.46 1432.29,1211.46 1432.87,1211.46 1433.46,1211.46 1434.04,1211.46 1434.63,1211.46 1435.22,1211.46 1435.8,1211.46 1436.39,1211.46 1436.98,1211.46 1437.56,1211.46 1438.15,1211.46 1438.74,1211.46 1439.32,1211.46 1439.91,1211.46 1440.5,1211.46 1441.08,1211.46 1441.67,1211.46 1442.25,1211.46 1442.84,1211.46 1443.43,1211.46 1444.01,1211.46 1444.6,1211.46 1445.19,1211.46 1445.77,1211.46 1446.36,1211.46 1446.95,1211.46 1447.53,1211.46 1448.12,1211.46 1448.7,1211.46 1449.29,1211.46 1449.88,1211.46 1450.46,1211.46 1451.05,1211.46 1451.64,1211.46 1452.22,1211.46 1452.81,1211.46 1453.4,1211.46 1453.98,1211.46 1454.57,1211.46 1455.16,1211.46 1455.74,1211.46 1456.33,1211.46 1456.91,1211.46 1457.5,1211.46 1458.09,1211.46 1458.67,1211.46 1459.26,1211.46 1459.85,1211.46 1460.43,1211.46 1461.02,1211.46 1461.61,1211.46 1462.19,1211.46 1462.78,1211.46 1463.37,1211.46 1463.95,1211.46 1464.54,1211.46 1465.12,1211.46 1465.71,1211.46 1466.3,1211.46 1466.88,1211.46 1467.47,1211.46 1468.06,1211.46 1468.64,1211.46 1469.23,1211.46 1469.82,1211.46 1470.4,1211.46 1470.99,1211.46 1471.57,1211.46 1472.16,1211.46 1472.75,1211.46 1473.33,1211.46 1473.92,1211.46 1474.51,1211.46 1475.09,1211.46 1475.68,1211.46 1476.27,1211.46 1476.85,1211.46 1477.44,1211.46 1478.03,1211.46 1478.61,1211.46 1479.2,1211.46 1479.78,1211.46 1480.37,1211.46 1480.96,1211.46 1481.54,1211.46 1482.13,1211.46 1482.72,1211.46 1483.3,1211.46 1483.89,1211.46 1484.48,1211.46 1485.06,1211.46 1485.65,1211.46 1486.24,1211.46 1486.82,1211.46 1487.41,1211.46 1487.99,1211.46 1488.58,1211.46 1489.17,1211.46 1489.75,1211.46 1490.34,1211.46 1490.93,1211.46 1491.51,1211.46 1492.1,1211.46 1492.69,1211.46 1493.27,1211.46 1493.86,1211.46 1494.45,1211.46 1495.03,1211.46 1495.62,1211.46 1496.2,1211.46 1496.79,1211.46 1497.38,1211.46 1497.96,1211.46 1498.55,1211.46 1499.14,1211.46 1499.72,1211.46 1500.31,1211.46 1500.9,1211.46 1501.48,1211.46 1502.07,1211.46 1502.65,1211.46 1503.24,1211.46 1503.83,1211.46 1504.41,1211.46 1505,1211.46 1505.59,1211.46 1506.17,1211.46 1506.76,1211.46 1507.35,1211.46 1507.93,1211.46 1508.52,1211.46 1509.11,1211.46 1509.69,1211.46 1510.28,1211.46 1510.86,1211.46 1511.45,1211.46 1512.04,1211.46 1512.62,1211.46 1513.21,1211.46 1513.8,1211.46 1514.38,1211.46 1514.97,1211.46 1515.56,1211.46 1516.14,1211.46 1516.73,1211.46 1517.32,1211.46 1517.9,1211.46 1518.49,1211.46 1519.07,1211.46 1519.66,1211.46 1520.25,1211.46 1520.83,1211.46 1521.42,1211.46 1522.01,1211.46 1522.59,1211.46 1523.18,1211.46 1523.77,1211.46 1524.35,1211.46 1524.94,1211.46 1525.52,1211.46 1526.11,1211.46 1526.7,1211.46 1527.28,1211.46 1527.87,1211.46 1528.46,1211.46 1529.04,1211.46 1529.63,1211.46 1530.22,1211.46 1530.8,1211.46 1531.39,1211.46 1531.98,1211.46 1532.56,1211.46 1533.15,1211.46 1533.73,1211.46 1534.32,1211.46 1534.91,1211.46 1535.49,1211.46 1536.08,1211.46 1536.67,1211.46 1537.25,1211.46 1537.84,1211.46 1538.43,1211.46 1539.01,1211.46 1539.6,1211.46 1540.19,1211.46 1540.77,1211.46 1541.36,1211.46 1541.94,1211.46 1542.53,1211.46 1543.12,1211.46 1543.7,1211.46 1544.29,1211.46 1544.88,1211.46 1545.46,1211.46 1546.05,1211.46 1546.64,1211.46 1547.22,1211.46 1547.81,1211.46 1548.4,1211.46 1548.98,1211.46 1549.57,1211.46 1550.15,1211.46 1550.74,1211.46 1551.33,1211.46 1551.91,1211.46 1552.5,1211.46 1553.09,1211.46 1553.67,1211.46 1554.26,1211.46 1554.85,1211.46 1555.43,1211.46 1556.02,1211.46 1556.6,1211.46 1557.19,1211.46 1557.78,1211.46 1558.36,1211.46 1558.95,1211.46 1559.54,1211.46 1560.12,1211.46 1560.71,1211.46 1561.3,1211.46 1561.88,1211.46 1562.47,1211.46 1563.06,1211.46 1563.64,1211.46 1564.23,1211.46 1564.81,1211.46 1565.4,1211.46 1565.99,1211.46 1566.57,1211.46 1567.16,1211.46 1567.75,1211.46 1568.33,1211.46 1568.92,1211.46 1569.51,1211.46 1570.09,1211.46 1570.68,1211.46 1571.27,1211.46 1571.85,1211.46 1572.44,1211.46 1573.02,1211.46 1573.61,1211.46 1574.2,1211.46 1574.78,1211.46 1575.37,1211.46 1575.96,1211.46 1576.54,1211.46 1577.13,1211.46 1577.72,1211.46 1578.3,1211.46 1578.89,1211.46 1579.47,1211.46 1580.06,1211.46 1580.65,1211.46 1581.23,1211.46 1581.82,1211.46 1582.41,1211.46 1582.99,1211.46 1583.58,1211.46 1584.17,1211.46 1584.75,1211.46 1585.34,1211.46 1585.93,1211.46 1586.51,1211.46 1587.1,1211.46 1587.68,1211.46 1588.27,1211.46 1588.86,1211.46 1589.44,1211.46 1590.03,1211.46 1590.62,1211.46 1591.2,1211.46 1591.79,1211.46 1592.38,1211.46 1592.96,1211.46 1593.55,1211.46 1594.14,1211.46 1594.72,1211.46 1595.31,1211.46 1595.89,1211.46 1596.48,1211.46 1597.07,1211.46 1597.65,1211.46 1598.24,1211.46 1598.83,1211.46 1599.41,1211.46 1600,1211.46 1600.59,1211.46 1601.17,1211.46 1601.76,1211.46 1602.34,1211.46 1602.93,1211.46 1603.52,1211.46 1604.1,1211.46 1604.69,1211.46 1605.28,1211.46 1605.86,1211.46 1606.45,1211.46 1607.04,1211.46 1607.62,1211.46 1608.21,1211.46 1608.8,1211.46 1609.38,1211.46 1609.97,1211.46 1610.55,1211.46 1611.14,1211.46 1611.73,1211.46 1612.31,1211.46 1612.9,1211.46 1613.49,1211.46 1614.07,1211.46 1614.66,1211.46 1615.25,1211.46 1615.83,1211.46 1616.42,1211.46 1617.01,1211.46 1617.59,1211.46 1618.18,1211.46 1618.76,1211.46 1619.35,1211.46 1619.94,1211.46 1620.52,1211.46 1621.11,1211.46 1621.7,1211.46 1622.28,1211.46 1622.87,1211.46 1623.46,1211.46 1624.04,1211.46 1624.63,1211.46 1625.22,1211.46 1625.8,1211.46 1626.39,1211.46 1626.97,1211.46 1627.56,1211.46 1628.15,1211.46 1628.73,1211.46 1629.32,1211.46 1629.91,1211.46 1630.49,1211.46 1631.08,1211.46 1631.67,1211.46 1632.25,1211.46 1632.84,1211.46 1633.42,1211.46 1634.01,1211.46 1634.6,1211.46 1635.18,1211.46 1635.77,1211.46 1636.36,1211.46 1636.94,1211.46 1637.53,1211.46 1638.12,1211.46 1638.7,1211.46 1639.29,1211.46 1639.88,1211.46 1640.46,1211.46 1641.05,1211.46 1641.63,1211.46 1642.22,1211.46 1642.81,1211.46 1643.39,1211.46 1643.98,1211.46 1644.57,1211.46 1645.15,1211.46 1645.74,1211.46 1646.33,1211.46 1646.91,1211.46 1647.5,1211.46 1648.09,1211.46 1648.67,1211.46 1649.26,1211.46 1649.84,1211.46 1650.43,1211.46 1651.02,1211.46 1651.6,1211.46 1652.19,1211.46 1652.78,1211.46 1653.36,1211.46 1653.95,1211.46 1654.54,1211.46 1655.12,1211.46 1655.71,1211.46 1656.29,1211.46 1656.88,1211.46 1657.47,1211.46 1658.05,1211.46 1658.64,1211.46 1659.23,1211.46 1659.81,1211.46 1660.4,1211.46 1660.99,1211.46 1661.57,1211.46 1662.16,1211.46 1662.75,1211.46 1663.33,1211.46 1663.92,1211.46 1664.5,1211.46 1665.09,1211.46 1665.68,1211.46 1666.26,1211.46 1666.85,1211.46 1667.44,1211.46 1668.02,1211.46 1668.61,1211.46 1669.2,1211.46 1669.78,1211.46 1670.37,1211.46 1670.96,1211.46 1671.54,1211.46 1672.13,1211.46 1672.71,1211.46 1673.3,1211.46 1673.89,1211.46 1674.47,1211.46 1675.06,1211.46 1675.65,1211.46 1676.23,1211.46 1676.82,1211.46 1677.41,1211.46 1677.99,1211.46 1678.58,1211.46 1679.17,1211.46 1679.75,1211.46 1680.34,1211.46 1680.92,1211.46 1681.51,1211.46 1682.1,1211.46 1682.68,1211.46 1683.27,1211.46 1683.86,1211.46 1684.44,1211.46 1685.03,1211.46 1685.62,1211.46 1686.2,1211.46 1686.79,1211.46 1687.37,1211.46 1687.96,1211.46 1688.55,1211.46 1689.13,1211.46 1689.72,1211.46 1690.31,1211.46 1690.89,1211.46 1691.48,1211.46 1692.07,1211.46 1692.65,1211.46 1693.24,1211.46 1693.83,1211.46 1694.41,1211.46 1695,1211.46 1695.58,1211.46 1696.17,1211.46 1696.76,1211.46 1697.34,1211.46 1697.93,1211.46 1698.52,1211.46 1699.1,1211.46 1699.69,1211.46 1700.28,1211.46 1700.86,1211.46 1701.45,1211.46 1702.04,1211.46 1702.62,1211.46 1703.21,1211.46 1703.79,1211.46 1704.38,1211.46 1704.97,1211.46 1705.55,1211.46 1706.14,1211.46 1706.73,1211.46 1707.31,1211.46 1707.9,1211.46 1708.49,1211.46 1709.07,1211.46 1709.66,1211.46 1710.24,1211.46 1710.83,1211.46 1711.42,1211.46 1712,1211.46 1712.59,1211.46 1713.18,1211.46 1713.76,1211.46 1714.35,1211.46 1714.94,1211.46 1715.52,1211.46 1716.11,1211.46 1716.7,1211.46 1717.28,1211.46 1717.87,1211.46 1718.45,1211.46 1719.04,1211.46 1719.63,1211.46 1720.21,1211.46 1720.8,1211.46 1721.39,1211.46 1721.97,1211.46 1722.56,1211.46 1723.15,1211.46 1723.73,1211.46 1724.32,1211.46 1724.91,1211.46 1725.49,1211.46 1726.08,1211.46 1726.66,1211.46 1727.25,1211.46 1727.84,1211.46 1728.42,1211.46 1729.01,1211.46 1729.6,1211.46 1730.18,1211.46 1730.77,1211.46 1731.36,1211.46 1731.94,1211.46 1732.53,1211.46 1733.11,1211.46 1733.7,1211.46 1734.29,1211.46 1734.87,1211.46 1735.46,1211.46 1736.05,1211.46 1736.63,1211.46 1737.22,1211.46 1737.81,1211.46 1738.39,1211.46 1738.98,1211.46 1739.57,1211.46 1740.15,1211.46 1740.74,1211.46 1741.32,1211.46 1741.91,1211.46 1742.5,1211.46 1743.08,1211.46 1743.67,1211.46 1744.26,1211.46 1744.84,1211.46 1745.43,1211.46 1746.02,1211.46 1746.6,1211.46 1747.19,1211.46 1747.78,1211.46 1748.36,1211.46 1748.95,1211.46 1749.53,1211.46 1750.12,1211.46 1750.71,1211.46 1751.29,1211.46 1751.88,1211.46 1752.47,1211.46 1753.05,1211.46 1753.64,1211.46 1754.23,1211.46 1754.81,1211.46 1755.4,1211.46 1755.99,1211.46 1756.57,1211.46 1757.16,1211.46 1757.74,1211.46 1758.33,1211.46 1758.92,1211.46 1759.5,1211.46 1760.09,1211.46 1760.68,1211.46 1761.26,1211.46 1761.85,1211.46 1762.44,1211.46 1763.02,1211.46 1763.61,1211.46 1764.19,1211.46 1764.78,1211.46 1765.37,1211.46 1765.95,1211.46 1766.54,1211.46 1767.13,1211.46 1767.71,1211.46 1768.3,1211.46 1768.89,1211.46 1769.47,1211.46 1770.06,1211.46 1770.65,1211.46 1771.23,1211.46 1771.82,1211.46 1772.4,1211.46 1772.99,1211.46 1773.58,1211.46 1774.16,1211.46 1774.75,1211.46 1775.34,1211.46 1775.92,1211.46 1776.51,1211.46 1777.1,1211.46 1777.68,1211.46 1778.27,1211.46 1778.86,1211.46 1779.44,1211.46 1780.03,1211.46 1780.61,1211.46 1781.2,1211.46 1781.79,1211.46 1782.37,1211.46 1782.96,1211.46 1783.55,1211.46 1784.13,1211.46 1784.72,1211.46 1785.31,1211.46 1785.89,1211.46 1786.48,1211.46 1787.06,1211.46 1787.65,1211.46 1788.24,1211.46 1788.82,1211.46 1789.41,1211.46 1790,1211.46 1790.58,1211.46 1791.17,1211.46 1791.76,1211.46 1792.34,1211.46 1792.93,1211.46 1793.52,1211.46 1794.1,1211.46 1794.69,1211.46 1795.27,1211.46 1795.86,1211.46 1796.45,1211.46 1797.03,1211.46 1797.62,1211.46 1798.21,1211.46 1798.79,1211.46 1799.38,1211.46 1799.97,1211.46 1800.55,1211.46 1801.14,1211.46 1801.73,1211.46 1802.31,1211.46 1802.9,1211.46 1803.48,1211.46 1804.07,1211.46 1804.66,1211.46 1805.24,1211.46 1805.83,1211.46 1806.42,1211.46 1807,1211.46 1807.59,1211.46 1808.18,1211.46 1808.76,1211.46 1809.35,1211.46 1809.94,1211.46 1810.52,1211.46 1811.11,1211.46 1811.69,1211.46 1812.28,1211.46 1812.87,1211.46 1813.45,1211.46 1814.04,1211.46 1814.63,1211.46 1815.21,1211.46 1815.8,1211.46 1816.39,1211.46 1816.97,1211.46 1817.56,1211.46 1818.14,1211.46 1818.73,1211.46 1819.32,1211.46 1819.9,1211.46 1820.49,1211.46 1821.08,1211.46 1821.66,1211.46 1822.25,1211.46 1822.84,1211.46 1823.42,1211.46 1824.01,1211.46 1824.6,1211.46 1825.18,1211.46 1825.77,1211.46 1826.35,1211.46 1826.94,1211.46 1827.53,1211.46 1828.11,1211.46 1828.7,1211.46 1829.29,1211.46 1829.87,1211.46 1830.46,1211.46 1831.05,1211.46 1831.63,1211.46 1832.22,1211.46 1832.81,1211.46 1833.39,1211.46 1833.98,1211.46 1834.56,1211.46 1835.15,1211.46 1835.74,1211.46 1836.32,1211.46 1836.91,1211.46 1837.5,1211.46 1838.08,1211.46 1838.67,1211.46 1839.26,1211.46 1839.84,1211.46 1840.43,1211.46 1841.01,1211.46 1841.6,1211.46 1842.19,1211.46 1842.77,1211.46 1843.36,1211.46 1843.95,1211.46 1844.53,1211.46 1845.12,1211.46 1845.71,1211.46 1846.29,1211.46 1846.88,1211.46 1847.47,1211.46 1848.05,1211.46 1848.64,1211.46 1849.22,1211.46 1849.81,1211.46 1850.4,1211.46 1850.98,1211.46 1851.57,1211.46 1852.16,1211.46 1852.74,1211.46 1853.33,1211.46 1853.92,1211.46 1854.5,1211.46 1855.09,1211.46 1855.68,1211.46 1856.26,1211.46 1856.85,1211.46 1857.43,1211.46 1858.02,1211.46 1858.61,1211.46 1859.19,1211.46 1859.78,1211.46 1860.37,1211.46 1860.95,1211.46 1861.54,1211.46 1862.13,1211.46 1862.71,1211.46 1863.3,1211.46 1863.88,1211.46 1864.47,1211.46 1865.06,1211.46 1865.64,1211.46 1866.23,1211.46 1866.82,1211.46 1867.4,1211.46 1867.99,1211.46 1868.58,1211.46 1869.16,1211.46 1869.75,1211.46 1870.34,1211.46 1870.92,1211.46 1871.51,1211.46 1872.09,1211.46 1872.68,1211.46 1873.27,1211.46 1873.85,1211.46 1874.44,1211.46 1875.03,1211.46 1875.61,1211.46 1876.2,1211.46 1876.79,1211.46 1877.37,1211.46 1877.96,1211.46 1878.55,1211.46 1879.13,1211.46 1879.72,1211.46 1880.3,1211.46 1880.89,1211.46 1881.48,1211.46 1882.06,1211.46 1882.65,1211.46 1883.24,1211.46 1883.82,1211.46 1884.41,1211.46 1885,1211.46 1885.58,1211.46 1886.17,1211.46 1886.76,1211.46 1887.34,1211.46 1887.93,1211.46 1888.51,1211.46 1889.1,1211.46 1889.69,1211.46 1890.27,1211.46 1890.86,1211.46 1891.45,1211.46 1892.03,1211.46 1892.62,1211.46 1893.21,1211.46 1893.79,1211.46 1894.38,1211.46 1894.96,1211.46 1895.55,1211.46 1896.14,1211.46 1896.72,1211.46 1897.31,1211.46 1897.9,1211.46 1898.48,1211.46 1899.07,1211.46 1899.66,1211.46 1900.24,1211.46 1900.83,1211.46 1901.42,1211.46 1902,1211.46 1902.59,1211.46 1903.17,1211.46 1903.76,1211.46 1904.35,1211.46 1904.93,1211.46 1905.52,1211.46 1906.11,1211.46 1906.69,1211.46 1907.28,1211.46 1907.87,1211.46 1908.45,1211.46 1909.04,1211.46 1909.63,1211.46 1910.21,1211.46 1910.8,1211.46 1911.38,1211.46 1911.97,1211.46 1912.56,1211.46 1913.14,1211.46 1913.73,1211.46 1914.32,1211.46 1914.9,1211.46 1915.49,1211.46 1916.08,1211.46 1916.66,1211.46 1917.25,1211.46 1917.83,1211.46 1918.42,1211.46 1919.01,1211.46 1919.59,1211.46 1920.18,1211.46 1920.77,1211.46 1921.35,1211.46 1921.94,1211.46 1922.53,1211.46 1923.11,1211.46 1923.7,1211.46 1924.29,1211.46 1924.87,1211.46 1925.46,1211.46 1926.04,1211.46 1926.63,1211.46 1927.22,1211.46 1927.8,1211.46 1928.39,1211.46 1928.98,1211.46 1929.56,1211.46 1930.15,1211.46 1930.74,1211.46 1931.32,1211.46 1931.91,1211.46 1932.5,1211.46 1933.08,1211.46 1933.67,1211.46 1934.25,1211.46 1934.84,1211.46 1935.43,1211.46 1936.01,1211.46 1936.6,1211.46 1937.19,1211.46 1937.77,1211.46 1938.36,1211.46 1938.95,1211.46 1939.53,1211.46 1940.12,1211.46 1940.71,1211.46 1941.29,1211.46 1941.88,1211.46 1942.46,1211.46 1943.05,1211.46 1943.64,1211.46 1944.22,1211.46 1944.81,1211.46 1945.4,1211.46 1945.98,1211.46 1946.57,1211.46 1947.16,1211.46 1947.74,1211.46 1948.33,1211.46 1948.91,1211.46 1949.5,1211.46 1950.09,1211.46 1950.67,1211.46 1951.26,1211.46 1951.85,1211.46 1952.43,1211.46 1953.02,1211.46 1953.61,1211.46 1954.19,1211.46 1954.78,1211.46 1955.37,1211.46 1955.95,1211.46 1956.54,1211.46 1957.12,1211.46 1957.71,1211.46 1958.3,1211.46 1958.88,1211.46 1959.47,1211.46 1960.06,1211.46 1960.64,1211.46 1961.23,1211.46 1961.82,1211.46 1962.4,1211.46 1962.99,1211.46 1963.58,1211.46 1964.16,1211.46 1964.75,1211.46 1965.33,1211.46 1965.92,1211.46 1966.51,1211.46 1967.09,1211.46 1967.68,1211.46 1968.27,1211.46 1968.85,1211.46 1969.44,1211.46 1970.03,1211.46 1970.61,1211.46 1971.2,1211.46 1971.78,1211.46 1972.37,1211.46 1972.96,1211.46 1973.54,1211.46 1974.13,1211.46 1974.72,1211.46 1975.3,1211.46 1975.89,1211.46 1976.48,1211.46 1977.06,1211.46 1977.65,1211.46 1978.24,1211.46 1978.82,1211.46 1979.41,1211.46 1979.99,1211.46 1980.58,1211.46 1981.17,1211.46 1981.75,1211.46 1982.34,1211.46 1982.93,1211.46 1983.51,1211.46 1984.1,1211.46 1984.69,1211.46 1985.27,1211.46 1985.86,1211.46 1986.45,1211.46 1987.03,1211.46 1987.62,1211.46 1988.2,1211.46 1988.79,1211.46 1989.38,1211.46 1989.96,1211.46 1990.55,1211.46 1991.14,1211.46 1991.72,1211.46 1992.31,1211.46 1992.9,1211.46 1993.48,1211.46 1994.07,1211.46 1994.65,1211.46 1995.24,1211.46 1995.83,1211.46 1996.41,1211.46 1997,1211.46 1997.59,1211.46 1998.17,1211.46 1998.76,1211.46 1999.35,1211.46 1999.93,1211.46 2000.52,1211.46 2001.11,1211.46 2001.69,1211.46 2002.28,1211.46 2002.86,1211.46 2003.45,1211.46 2004.04,1211.46 2004.62,1211.46 2005.21,1211.46 2005.8,1211.46 2006.38,1211.46 2006.97,1211.46 2007.56,1211.46 2008.14,1211.46 2008.73,1211.46 2009.32,1211.46 2009.9,1211.46 2010.49,1211.46 2011.07,1211.46 2011.66,1211.46 2012.25,1211.46 2012.83,1211.46 2013.42,1211.46 2014.01,1211.46 2014.59,1211.46 2015.18,1211.46 2015.77,1211.46 2016.35,1211.46 2016.94,1211.46 2017.53,1211.46 2018.11,1211.46 2018.7,1211.46 2019.28,1211.46 2019.87,1211.46 2020.46,1211.46 2021.04,1211.46 2021.63,1211.46 2022.22,1211.46 2022.8,1211.46 2023.39,1211.46 2023.98,1211.46 2024.56,1211.46 2025.15,1211.46 2025.73,1211.46 2026.32,1211.46 2026.91,1211.46 2027.49,1211.46 2028.08,1211.46 2028.67,1211.46 2029.25,1211.46 2029.84,1211.46 2030.43,1211.46 2031.01,1211.46 2031.6,1211.46 2032.19,1211.46 2032.77,1211.46 2033.36,1211.46 2033.94,1211.46 2034.53,1211.46 2035.12,1211.46 2035.7,1211.46 2036.29,1211.46 2036.88,1211.46 2037.46,1211.46 2038.05,1211.46 2038.64,1211.46 2039.22,1211.46 2039.81,1211.46 2040.4,1211.46 2040.98,1211.46 2041.57,1211.46 2042.15,1211.46 2042.74,1211.46 2043.33,1211.46 2043.91,1211.46 2044.5,1211.46 2045.09,1211.46 2045.67,1211.46 2046.26,1211.46 2046.85,1211.46 2047.43,1211.46 2048.02,1211.46 2048.6,1211.46 2049.19,1211.46 2049.78,1211.46 2050.36,1211.46 2050.95,1211.46 2051.54,1211.46 2052.12,1211.46 2052.71,1211.46 2053.3,1211.46 2053.88,1211.46 2054.47,1211.46 2055.06,1211.46 2055.64,1211.46 2056.23,1211.46 2056.81,1211.46 2057.4,1211.46 2057.99,1211.46 2058.57,1211.46 2059.16,1211.46 2059.75,1211.46 2060.33,1211.46 2060.92,1211.46 2061.51,1211.46 2062.09,1211.46 2062.68,1211.46 2063.27,1211.46 2063.85,1211.46 2064.44,1211.46 2065.02,1211.46 2065.61,1211.46 2066.2,1211.46 2066.78,1211.46 2067.37,1211.46 2067.96,1211.46 2068.54,1211.46 2069.13,1211.46 2069.72,1211.46 2070.3,1211.46 2070.89,1211.46 2071.48,1211.46 2072.06,1211.46 2072.65,1211.46 2073.23,1211.46 2073.82,1211.46 2074.41,1211.46 2074.99,1211.46 2075.58,1211.46 2076.17,1211.46 2076.75,1211.46 2077.34,1211.46 2077.93,1211.46 2078.51,1211.46 2079.1,1211.46 2079.68,1211.46 2080.27,1211.46 2080.86,1211.46 2081.44,1211.46 2082.03,1211.46 2082.62,1211.46 2083.2,1211.46 2083.79,1211.46 2084.38,1211.46 2084.96,1211.46 2085.55,1211.46 2086.14,1211.46 2086.72,1211.46 2087.31,1211.46 2087.89,1211.46 2088.48,1211.46 2089.07,1211.46 2089.65,1211.46 2090.24,1211.46 2090.83,1211.46 2091.41,1211.46 2092,1211.46 2092.59,1211.46 2093.17,1211.46 2093.76,1211.46 2094.35,1211.46 2094.93,1211.46 2095.52,1211.46 2096.1,1211.46 2096.69,1211.46 2097.28,1211.46 2097.86,1211.46 2098.45,1211.46 2099.04,1211.46 2099.62,1211.46 2100.21,1211.46 2100.8,1211.46 2101.38,1211.46 2101.97,1211.46 2102.55,1211.46 2103.14,1211.46 2103.73,1211.46 2104.31,1211.46 2104.9,1211.46 2105.49,1211.46 2106.07,1211.46 2106.66,1211.46 2107.25,1211.46 2107.83,1211.46 2108.42,1211.46 2109.01,1211.46 2109.59,1211.46 2110.18,1211.46 2110.76,1211.46 2111.35,1211.46 2111.94,1211.46 2112.52,1211.46 2113.11,1211.46 2113.7,1211.46 2114.28,1211.46 2114.87,1211.46 2115.46,1211.46 2116.04,1211.46 2116.63,1211.46 2117.22,1211.46 2117.8,1211.46 2118.39,1211.46 2118.97,1211.46 2119.56,1211.46 2120.15,1211.46 2120.73,1211.46 2121.32,1211.46 2121.91,1211.46 2122.49,1211.46 2123.08,1211.46 2123.67,1211.46 2124.25,1211.46 2124.84,1211.46 2125.42,1211.46 2126.01,1211.46 2126.6,1211.46 2127.18,1211.46 2127.77,1211.46 2128.36,1211.46 2128.94,1211.46 2129.53,1211.46 2130.12,1211.46 2130.7,1211.46 2131.29,1211.46 2131.88,1211.46 2132.46,1211.46 2133.05,1211.46 2133.63,1211.46 2134.22,1211.46 2134.81,1211.46 2135.39,1211.46 2135.98,1211.46 2136.57,1211.46 2137.15,1211.46 2137.74,1211.46 2138.33,1211.46 2138.91,1211.46 2139.5,1211.46 2140.09,1211.46 2140.67,1211.46 2141.26,1211.46 2141.84,1211.46 2142.43,1211.46 2143.02,1211.46 2143.6,1211.46 2144.19,1211.46 2144.78,1211.46 2145.36,1211.46 2145.95,1211.46 2146.54,1211.46 2147.12,1211.46 2147.71,1211.46 2148.3,1211.46 2148.88,1211.46 2149.47,1211.46 2150.05,1211.46 2150.64,1211.46 2151.23,1211.46 2151.81,1211.46 2152.4,1211.46 2152.99,1211.46 2153.57,1211.46 2154.16,1211.46 2154.75,1211.46 2155.33,1211.46 2155.92,1211.46 2156.5,1211.46 2157.09,1211.46 2157.68,1211.46 2158.26,1211.46 \"/>\n<polyline clip-path=\"url(#clip962)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1562.26,1193.83 1399.55,899.083 \"/>\n<polyline clip-path=\"url(#clip962)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1228.58 985.439,1193.83 2158.26,1193.83 2158.26,1228.58 985.439,1228.58 \"/>\n<path clip-path=\"url(#clip960)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip960)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip960)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip960)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip960)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip960)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip960)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip960)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip963\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip963)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip963)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip963)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip963)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip963)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip960)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip960)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip960)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip960)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip960)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip960)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip960)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip963)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip963)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip963)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip963)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip963)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip960)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip960)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip960)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip960)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip960)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip960)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip960)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip960)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip963)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-1577.5 161.555,-1388.05 162.114,-2674.62 162.673,-3904.22 163.232,-5010.35 163.792,-5993.78 164.351,-5639.46 164.91,-6544.54 165.469,-7349.77 166.029,-8120.92 166.588,-8802.37 167.147,-8428.39 167.706,-8156.51 168.266,-8781.13 168.825,-9334.51 169.384,-9831.02 169.943,-10266.1 170.503,-10653.4 171.062,-10994.2 171.621,-11290.2 172.18,-11546.2 172.74,-11774 173.299,-11440.2 173.858,-11142.8 174.417,-11323.7 174.977,-11466.9 175.536,-11589.6 176.095,-11679.2 176.655,-11729.5 177.214,-11762 177.773,-11784.3 178.332,-11776.9 178.892,-11736.2 179.451,-11183.9 180.01,-11143.3 180.569,-10846.3 181.129,-10769.2 181.688,-10485 182.247,-10215.3 182.806,-9945.7 183.366,-9650 183.925,-9532.73 184.484,-9397.93 185.043,-9259.15 185.603,-9114.46 186.162,-8975.15 186.721,-8834.22 187.28,-8120.25 187.84,-7988.75 188.399,-7854.41 188.958,-7619.72 189.517,-7303.81 190.077,-7073.06 190.636,-6861.46 191.195,-6650.11 191.754,-6443.67 192.314,-6247.22 192.873,-6117.23 193.432,-5857.82 193.991,-5615.85 194.551,-5436.29 195.11,-5266.75 195.669,-5100.66 196.228,-4995.97 196.788,-4885.11 197.347,-4724.48 197.906,-4512.59 198.465,-4264.98 199.025,-4128.24 199.584,-3943.1 200.143,-3801.73 200.702,-3581.43 201.262,-3417.42 201.821,-3296.89 202.38,-3062.38 202.939,-2916.76 203.499,-2781.14 204.058,-2647.97 204.617,-2522.57 205.176,-2331.05 205.736,-2279.68 206.295,-2161.3 206.854,-2076.82 207.413,-1932.81 207.973,-1790.48 208.532,-1680.68 209.091,-1613.38 209.65,-1601.51 210.21,-1558.27 210.769,-1451.96 211.328,-1353.82 211.887,-1282.75 212.447,-1212.12 213.006,-1088.16 213.565,-971.488 214.124,-886.529 214.684,-800.161 215.243,-743.118 215.802,-712.924 216.361,-663.594 216.921,-636.015 217.48,-535.572 218.039,-461.392 218.598,-436.297 219.158,-384.221 219.717,-358.886 220.276,-310.87 220.835,-233.253 221.395,-209.675 221.954,-183.13 222.513,-137.067 223.072,-67.8862 223.632,-24.6268 224.191,-1.11955 224.75,45.1224 225.309,107.856 225.869,125.222 226.428,206.147 226.987,222.844 227.546,258.574 228.106,254.491 228.665,309.039 229.224,326.463 229.783,398.692 230.343,449.912 230.902,455.918 231.461,486.921 232.02,495.621 232.58,525.044 233.139,532.404 233.698,539.096 234.257,547.825 234.817,596.512 235.376,622.525 235.935,609.742 236.494,618.87 237.054,625.738 237.613,687.899 238.172,694.839 238.731,702.539 239.291,728.287 239.85,787.894 240.409,805.154 240.968,860.238 241.528,859.971 242.087,875.255 242.646,908.684 243.205,886.419 243.765,919.233 244.324,901.286 244.883,878.418 245.442,859.915 246.002,877.973 246.561,895.007 247.12,893.709 247.679,911.675 248.239,962.533 248.798,975.83 249.357,984.856 249.916,997.494 250.476,1029.44 251.035,1026.63 251.594,1035.71 252.153,1047.43 252.713,1044.2 253.272,1104.7 253.831,1111.7 254.39,1101.28 254.95,1092.9 255.509,1080.91 256.068,1073.36 256.627,1083.1 257.187,1075.74 257.746,1067.77 258.305,1044.32 258.864,1056.36 259.424,1052.03 259.983,1059.57 260.542,1069.18 261.101,1029.09 261.661,1044.77 262.22,1054.07 262.779,1050.45 263.338,1060.9 263.898,1058.95 264.457,1105.76 265.016,1114.1 265.575,1123.98 266.135,1115.87 266.694,1108.21 267.253,1116.67 267.812,1140.78 268.372,1128.68 268.931,1134.47 269.49,1155.42 270.049,1175.04 270.609,1164.74 271.168,1153.72 271.727,1140.91 272.286,1129.83 272.846,1152.16 273.405,1123.47 273.964,1147.74 274.523,1137.43 275.083,1128.1 275.642,1121.77 276.201,1130.21 276.76,1118.77 277.32,1126.07 277.879,1149.46 278.438,1101.34 278.997,1145.54 279.557,1145.54 280.116,1150.3 280.675,1136.18 281.234,1125.98 281.794,1136.64 282.353,1126.55 282.912,1083.8 283.471,1079.29 284.031,1119.26 284.59,1110.7 285.149,1150.65 285.708,1138.94 286.268,1092.46 286.827,1082.43 287.386,1089.46 287.945,1063.99 288.505,1072.72 289.064,1080.33 289.623,1074.19 290.182,1082.25 290.742,1073.56 291.301,1037.04 291.86,997.429 292.419,982.832 292.979,960.47 293.538,976.372 294.097,970.565 294.656,933.895 295.216,933.978 295.775,949.099 296.334,946.623 296.893,992.933 297.453,992.648 298.012,967.559 298.571,976.453 299.13,1007.05 299.69,1004.44 300.249,1016.48 300.808,1026.72 301.368,1007.69 301.927,1004.28 302.486,982.738 303.045,1013.18 303.605,1008.88 304.164,987.001 304.723,953.325 305.282,947.515 305.842,943.983 306.401,940.285 306.96,904.952 307.519,901.186 308.079,917.985 308.638,933.183 309.197,949.868 309.756,949.486 310.316,947.576 310.875,946.508 311.434,911.621 311.993,926.783 312.553,938.189 313.112,952.876 313.671,999.608 314.23,991.037 314.79,988.598 315.349,984.473 315.908,980.467 316.467,1010.76 317.027,1005.03 317.586,996.87 318.145,1005.01 318.704,1000.64 319.264,1010.1 319.823,1022.1 320.382,1050.82 320.941,1029.62 321.501,1038.72 322.06,1029.21 322.619,1018.87 323.178,1042.01 323.738,1015.33 324.297,1008.35 324.856,1003.08 325.415,995.156 325.975,1018.71 326.534,1011.21 327.093,999.702 327.652,992.782 328.212,1033.44 328.771,1013.54 329.33,1005.15 329.889,999.953 330.449,995.292 331.008,989.829 331.567,982.361 332.126,977.661 332.686,969.904 333.245,928.854 333.804,941.497 334.363,966.9 334.923,976.144 335.482,970.386 336.041,946.095 336.6,972.101 337.16,964.072 337.719,942.999 338.278,937.44 338.837,916.109 339.397,946.083 339.956,1019.12 340.515,989.77 341.074,980.485 341.634,1007.76 342.193,984.811 342.752,961.331 343.311,976.373 343.871,986.48 344.43,978.391 344.989,956.316 345.548,953.12 346.108,947.591 346.667,974.077 347.226,997.066 347.785,1004.83 348.345,1012.18 348.904,1003.6 349.463,1013.93 350.022,1035.54 350.582,960.475 351.141,938.066 351.7,949.307 352.259,944.536 352.819,926.81 353.378,921.46 353.937,884.955 354.496,879.038 355.056,860.237 355.615,874.572 356.174,901.826 356.733,943.979 357.293,921.512 357.852,934.403 358.411,927.832 358.97,950.817 359.53,946.028 360.089,923.495 360.648,935.322 361.207,911.01 361.767,923.211 362.326,917.663 362.885,878.928 363.444,859.675 364.004,853.922 364.563,837.306 365.122,837.351 365.681,838.646 366.241,836.986 366.8,853.585 367.359,866.946 367.918,865.358 368.478,860.848 369.037,826.638 369.596,891.571 370.155,885.9 370.715,882.254 371.274,909.628 371.833,888.434 372.392,881.769 372.952,926.987 373.511,919.102 374.07,917.236 374.629,909.757 375.189,906.002 375.748,929.247 376.307,924.74 376.866,912.744 377.426,924.122 377.985,936.319 378.544,943.481 379.103,939.568 379.663,961.831 380.222,953.005 380.781,943.958 381.34,951.828 381.9,976.816 382.459,951.447 383.018,909.181 383.577,888.794 384.137,851.802 384.696,848.487 385.255,826.821 385.814,825.588 386.374,826.057 386.933,805.831 387.492,803.422 388.051,853.171 388.611,866.031 389.17,847.026 389.729,876.903 390.288,838.492 390.848,821.163 391.407,833.562 391.966,864.278 392.525,857.246 393.085,840.241 393.644,852.785 394.203,851.253 394.762,832.37 395.322,846.377 395.881,826.934 396.44,825.32 396.999,825.019 397.559,806.722 398.118,807.601 398.677,805.043 399.236,784.824 399.796,802.502 400.355,798.549 400.914,799.313 401.473,846.238 402.033,841.66 402.592,842.096 403.151,839.882 403.71,852.862 404.27,830.427 404.829,826.468 405.388,792.776 405.947,775.678 406.507,763.68 407.066,732.294 407.625,735.37 408.184,736.293 408.744,741.035 409.303,743.011 409.862,758.592 410.421,742.483 410.981,743.779 411.54,762.033 412.099,795.628 412.658,795.935 413.218,796.083 413.777,794.049 414.336,809.11 414.895,791.857 415.455,791.67 416.014,743.199 416.573,760.855 417.132,746.064 417.692,716.07 418.251,720.488 418.81,756.297 419.369,740.306 419.929,744.246 420.488,748.677 421.047,781.773 421.606,815.811 422.166,802.345 422.725,786.002 423.284,788.313 423.843,772.778 424.403,773.097 424.962,758.472 425.521,759.47 426.08,741.454 426.64,727.631 427.199,749.147 427.758,736.967 428.318,771.356 428.877,785.167 429.436,814.915 429.995,808.035 430.555,804.246 431.114,770.847 431.673,802.131 432.232,812.991 432.792,826.367 433.351,824.346 433.91,818.855 434.469,817.966 435.029,814.76 435.588,766.299 436.147,762.797 436.706,762.656 437.266,746.207 437.825,728.716 438.384,746.483 438.943,778.459 439.503,796.682 440.062,761.851 440.621,779.778 441.18,760.155 441.74,775.455 442.299,773.574 442.858,740.119 443.417,774.553 443.977,791.534 444.536,806.27 445.095,803.177 445.654,816.781 446.214,811.271 446.773,760.363 447.332,822.268 447.891,850.686 448.451,865.099 449.01,873.382 449.569,848.575 450.128,843.172 450.688,854.13 451.247,845.781 451.806,904.223 452.365,897.131 452.925,889.227 453.484,929.431 454.043,953.666 454.602,911.367 455.162,902.488 455.721,896.443 456.28,855.058 456.839,846.868 457.399,829.823 457.958,807.553 458.517,803.771 459.076,802.142 459.636,816.981 460.195,765.561 460.754,798.025 461.313,794.813 461.873,793.858 462.432,775.967 462.991,786.024 463.55,748.018 464.11,729.853 464.669,730.655 465.228,716.561 465.787,719.656 466.347,723.34 466.906,760.681 467.465,742.293 468.024,741.165 468.584,755.886 469.143,756.891 469.702,770.672 470.261,802.599 470.821,746.208 471.38,778.531 471.939,759.655 472.498,759.767 473.058,727.329 473.617,713.473 474.176,730.361 474.735,748.435 475.295,783.922 475.854,784.244 476.413,795.241 476.972,778.068 477.532,760.066 478.091,755.18 478.65,738.983 479.209,689.762 479.769,695.116 480.328,697.528 480.887,716.726 481.446,717.254 482.006,738.93 482.565,785.611 483.124,769.077 483.683,768.79 484.243,771.058 484.802,785.93 485.361,795.526 485.92,758.37 486.48,739.903 487.039,707.684 487.598,710.375 488.157,714.799 488.717,701.234 489.276,703.342 489.835,718.059 490.394,716.986 490.954,719.019 491.513,718.955 492.072,737.635 492.631,768.88 493.191,799.692 493.75,794.743 494.309,791.132 494.868,787.638 495.428,766.934 495.987,780.979 496.546,778.45 497.105,774.028 497.665,740.138 498.224,739.162 498.783,737.583 499.342,738.828 499.902,739.589 500.461,768.549 501.02,734.898 501.579,721.731 502.139,721.421 502.698,721.659 503.257,737.04 503.816,689.944 504.376,658.482 504.935,696.738 505.494,682.134 506.053,681.73 506.613,726.107 507.172,743.002 507.731,744.112 508.29,793.803 508.85,789.539 509.409,773.165 509.968,752.168 510.527,770.507 511.087,764.836 511.646,764.37 512.205,747.832 512.764,777.273 513.324,774.947 513.883,772.9 514.442,771.993 515.001,788.383 515.561,820.601 516.12,805.683 516.679,834.297 517.238,847.49 517.798,871.074 518.357,862.128 518.916,825.748 519.475,839.246 520.035,787.007 520.594,737.721 521.153,736.199 521.712,718.46 522.272,724.403 522.831,743.225 523.39,741.437 523.949,722.998 524.509,690.89 525.068,707.358 525.627,726.979 526.186,710.739 526.746,710.444 527.305,729.228 527.864,712.665 528.423,730.897 528.983,714.229 529.542,680.861 530.101,681.826 530.66,674.344 531.22,674.22 531.779,671.262 532.338,675.323 532.897,660.982 533.457,666.775 534.016,617.305 534.575,641.305 535.134,662.05 535.694,679.046 536.253,665.686 536.812,664.659 537.371,650.933 537.931,653.477 538.49,671.137 539.049,657.321 539.608,681.634 540.168,669.102 540.727,622.182 541.286,628.051 541.845,601.388 542.405,621.623 542.964,627.779 543.523,652.807 544.082,637.576 544.642,655.082 545.201,658.388 545.76,679.461 546.319,710.969 546.879,679.703 547.438,663.649 547.997,650.781 548.556,653.756 549.116,659.646 549.675,696.051 550.234,700.191 550.793,702.113 551.353,702.843 551.912,719.61 552.471,733.691 553.031,747.99 553.59,794.982 554.149,791.083 554.708,786.012 555.268,798.369 555.827,763.465 556.386,774.308 556.945,790.131 557.505,769.046 558.064,749.074 558.623,767.254 559.182,785.366 559.742,798.183 560.301,763.843 560.86,725.4 561.419,724.83 561.979,757.503 562.538,725.225 563.097,740.752 563.656,771.099 564.216,753.702 564.775,766.913 565.334,763.458 565.893,745.664 566.453,741.47 567.012,755.544 567.571,738.689 568.13,703.731 568.69,689.427 569.249,660.378 569.808,666.108 570.367,699.491 570.927,685.345 571.486,716.884 572.045,731.78 572.604,730.815 573.164,711.35 573.723,661.498 574.282,713.032 574.841,712.409 575.401,729.48 575.96,725.376 576.519,755.17 577.078,752.505 577.638,751.408 578.197,748.433 578.756,700.066 579.315,735.7 579.875,732.359 580.434,698.819 580.993,728.848 581.552,727.468 582.112,727.321 582.671,695.131 583.23,696 583.789,712.193 584.349,729.407 584.908,710.138 585.467,695.116 586.026,728.094 586.586,760.417 587.145,726.073 587.704,757.802 588.263,706.779 588.823,707.655 589.382,725.121 589.941,693.787 590.5,695.11 591.06,696.028 591.619,677.091 592.178,679.296 592.737,713.085 593.297,732.385 593.856,761.321 594.415,707.645 594.974,706.94 595.534,707.254 596.093,707.977 596.652,705.639 597.211,673.356 597.771,707.932 598.33,706.164 598.889,719.224 599.448,734.7 600.008,719.243 600.567,732.517 601.126,749.759 601.685,768.414 602.245,766.194 602.804,748.783 603.363,763.756 603.922,759.641 604.482,789.272 605.041,771.822 605.6,767.723 606.159,779.806 606.719,775.109 607.278,757.679 607.837,773.859 608.396,800.478 608.956,811.665 609.515,786.466 610.074,798.118 610.633,791.889 611.193,770.072 611.752,830.054 612.311,825.382 612.87,802.015 613.43,781.428 613.989,760.189 614.548,674.654 615.107,711.923 615.667,698.421 616.226,713.91 616.785,712.911 617.344,696.795 617.904,692.585 618.463,695.412 619.022,713.077 619.581,679.138 620.141,728.702 620.7,727.284 621.259,738.744 621.818,718.759 622.378,734.006 622.937,738.091 623.496,701.133 624.055,700.023 624.615,682.995 625.174,701.478 625.733,721.947 626.292,702.309 626.852,689.321 627.411,658.147 627.97,661.798 628.529,617.463 629.089,638.774 629.648,626.7 630.207,629.525 630.766,662.829 631.326,645.834 631.885,664.512 632.444,665.854 633.003,664.778 633.563,686.823 634.122,652.357 634.681,669.942 635.24,656.256 635.8,643.315 636.359,643.807 636.918,676.143 637.477,679.411 638.037,680.994 638.596,665.04 639.155,700.389 639.714,714.384 640.274,730.823 640.833,727.937 641.392,726.789 641.951,740.613 642.511,725.739 643.07,693.927 643.629,707.877 644.188,739.962 644.748,753.98 645.307,738.434 645.866,737.511 646.425,731.594 646.985,698.434 647.544,710.565 648.103,740.362 648.662,733.208 649.222,732.008 649.781,697.802 650.34,695.698 650.899,694.412 651.459,693.174 652.018,676.687 652.577,678.44 653.136,646.72 653.696,668.778 654.255,668.334 654.814,671.232 655.373,673.812 655.933,655.576 656.492,659.296 657.051,661.804 657.61,680.675 658.17,733.296 658.729,715.022 659.288,729.112 659.847,696.868 660.407,697.115 660.966,699.981 661.525,715.906 662.084,714.333 662.644,664.008 663.203,738.409 663.762,704.578 664.321,734.537 664.881,763.565 665.44,771.733 665.999,799.435 666.558,810.741 667.118,836.371 667.677,831.081 668.236,826.809 668.795,805.209 669.355,815.049 669.914,823.294 670.473,803.362 671.032,778.534 671.592,744.682 672.151,741.975 672.71,739.622 673.269,708.184 673.829,725.119 674.388,790.011 674.947,814.629 675.506,827.722 676.066,807.25 676.625,819.401 677.184,799.578 677.743,809.715 678.303,821.575 678.862,814.049 679.421,807.022 679.981,754.081 680.54,769.988 681.099,783.459 681.658,812.299 682.218,824.588 682.777,819.935 683.336,797.97 683.895,758.676 684.455,788.471 685.014,785.194 685.573,766.692 686.132,792.519 686.692,802.747 687.251,780.637 687.81,777.205 688.369,757.612 688.929,738.793 689.488,749.348 690.047,717.916 690.606,700.89 691.166,699.833 691.725,681.808 692.284,682.131 692.843,649.045 693.403,652.312 693.962,671.086 694.521,640.141 695.08,628.118 695.64,627.632 696.199,614.12 696.758,647.782 697.317,621.132 697.877,622.543 698.436,598.765 698.995,570.264 699.554,592.966 700.114,582.908 700.673,604.669 701.232,625.18 701.791,626.996 702.351,597.199 702.91,571.968 703.469,578.763 704.028,551.121 704.588,608.172 705.147,632.249 705.706,617.08 706.265,638.452 706.825,624.423 707.384,643.802 707.943,630.748 708.502,631.383 709.062,621.73 709.621,611.995 710.18,649.323 710.739,650.924 711.299,669.686 711.858,688.535 712.417,674.325 712.976,642.917 713.536,649.841 714.095,668.056 714.654,642.4 715.213,648.711 715.773,652.986 716.332,654.784 716.891,658.918 717.45,672.609 718.01,672.175 718.569,659.286 719.128,674.805 719.687,648.033 720.247,634.282 720.806,666.53 721.365,683.11 721.924,730.997 722.484,712.792 723.043,725.787 723.602,690.985 724.161,695.078 724.721,680.953 725.28,684.669 725.839,684.205 726.398,733.917 726.958,734.551 727.517,719.43 728.076,721.95 728.635,751.775 729.195,748.728 729.754,778.737 730.313,776.32 730.872,788.063 731.432,785.82 731.991,777.818 732.55,774.973 733.109,738.117 733.669,738.298 734.228,767.372 734.787,762.803 735.346,758.659 735.906,757.094 736.465,754.283 737.024,752.131 737.583,713.59 738.143,662.509 738.702,661.394 739.261,664.18 739.82,664.083 740.38,680.449 740.939,698.841 741.498,663.434 742.057,663.901 742.617,649.862 743.176,635.22 743.735,637.189 744.294,642.557 744.854,645.597 745.413,631.684 745.972,637.056 746.531,593.698 747.091,613.899 747.65,619.677 748.209,626.148 748.768,646.003 749.328,669.811 749.887,723.059 750.446,734.973 751.005,747.133 751.565,761.636 752.124,758.615 752.683,757.37 753.242,754.079 753.802,720.278 754.361,719.034 754.92,699.681 755.479,699.466 756.039,699.441 756.598,715.034 757.157,731.04 757.716,746.025 758.276,758.31 758.835,742.751 759.394,708.605 759.953,723.62 760.513,722.317 761.072,704.784 761.631,688.077 762.19,687.222 762.75,716.727 763.309,711.333 763.868,710.623 764.427,709.702 764.987,725.033 765.546,704.169 766.105,686.527 766.664,700.623 767.224,683.917 767.783,669.743 768.342,673.522 768.901,689.883 769.461,662.075 770.02,645.375 770.579,665.224 771.138,632.835 771.698,616.629 772.257,623.032 772.816,610.625 773.375,615.992 773.935,619.624 774.494,626.799 775.053,595.325 775.612,599.945 776.172,589.122 776.731,576.835 777.29,618.86 777.849,639.011 778.409,640.552 778.968,658.156 779.527,659.67 780.086,694.379 780.646,675.643 781.205,677.497 781.764,679.188 782.323,637.742 782.883,624.664 783.442,645.788 784.001,649.645 784.56,634.455 785.12,653.382 785.679,620.994 786.238,611.508 786.797,597.753 787.357,599.414 787.916,622.445 788.475,624.059 789.034,628.12 789.594,614.948 790.153,623.028 790.712,641.641 791.271,644.341 791.831,615.423 792.39,651.842 792.949,653.931 793.508,660.278 794.068,663.636 794.627,679.659 795.186,725.875 795.745,786.366 796.305,798.953 796.864,807.309 797.423,785.957 797.982,779.784 798.542,773.637 799.101,785.939 799.66,796.239 800.219,803.225 800.779,800.327 801.338,779.124 801.897,776.405 802.456,755.965 803.016,750.098 803.575,809.653 804.134,802.337 804.693,795.772 805.253,788.81 805.812,753.703 806.371,751.142 806.931,778.564 807.49,803.813 808.049,796.306 808.608,788.871 809.168,798.927 809.727,813.343 810.286,808.016 810.845,802.76 811.405,766.853 811.964,777.569 812.523,788.316 813.082,768.511 813.642,763.451 814.201,726.091 814.76,722.152 815.319,672.299 815.879,684.99 816.438,667.997 816.997,632.277 817.556,667.973 818.116,684.326 818.675,700.828 819.234,698.286 819.793,697.582 820.353,697.571 820.912,679.536 821.471,653.277 822.03,640.965 822.59,628.191 823.149,595.981 823.708,600.063 824.267,607.128 824.827,612.918 825.386,636.315 825.945,634.714 826.504,625.9 827.064,627.872 827.623,630.404 828.182,648.448 828.741,649.521 829.301,635.672 829.86,655.623 830.419,625.14 830.978,612.257 831.538,634.342 832.097,635.871 832.656,669.788 833.215,733.243 833.775,761.843 834.334,710.726 834.893,711.204 835.452,695.613 836.012,806.529 836.571,830.679 837.13,809.905 837.689,788.7 838.249,784.711 838.808,797.327 839.367,792.006 839.926,815.996 840.486,776.338 841.045,757.546 841.604,770.509 842.163,766.801 842.723,762.993 843.282,739.594 843.841,739.036 844.4,722.682 844.96,720.213 845.519,704.127 846.078,688.417 846.637,686.956 847.197,637.03 847.756,640.195 848.315,639.776 848.874,642.611 849.434,660.525 849.993,645.153 850.552,629.725 851.111,633.175 851.671,620.404 852.23,609.676 852.789,630.376 853.348,585.789 853.908,607.101 854.467,674.686 855.026,660.545 855.585,662.789 856.145,660.642 856.704,674.053 857.263,671.459 857.822,670.846 858.382,639.692 858.941,624.216 859.5,627.032 860.059,645.35 860.619,681.453 861.178,666.913 861.737,651.95 862.296,668.787 862.856,650.46 863.415,616.551 863.974,605.947 864.533,610.284 865.093,630.239 865.652,666.302 866.211,667.705 866.77,671.756 867.33,690.453 867.889,707.073 868.448,720.3 869.007,701.373 869.567,698.563 870.126,683.399 870.685,652.863 871.244,656.714 871.804,687.438 872.363,667.676 872.922,697.85 873.481,725.509 874.041,737.432 874.6,733.904 875.159,745.873 875.718,774.53 876.278,816.14 876.837,796.705 877.396,791.76 877.955,772.602 878.515,802.461 879.074,766.624 879.633,748.369 880.192,710.077 880.752,711.468 881.311,693.241 881.87,709.434 882.429,675.699 882.989,710.331 883.548,711.87 884.107,742.845 884.666,694.922 885.226,709.531 885.785,689.525 886.344,702.495 886.903,751.447 887.463,715.184 888.022,733.743 888.581,715.501 889.14,698.733 889.7,711.117 890.259,711.405 890.818,691.755 891.377,707.297 891.937,737.268 892.496,782.199 893.055,777.984 893.614,802.781 894.174,796.502 894.733,792.545 895.292,803.015 895.851,798.378 896.411,790.852 896.97,820.53 897.529,828.697 898.088,820.754 898.648,847.199 899.207,869.71 899.766,809.807 900.325,816.867 900.885,779.032 901.444,776.777 902.003,739.596 902.562,740.2 903.122,689.747 903.681,690.043 904.24,689.506 904.799,672.065 905.359,689.463 905.918,675.751 906.477,677.134 907.036,612.216 907.596,581.467 908.155,636.696 908.714,655.33 909.273,656.691 909.833,659.178 910.392,675.514 910.951,656.593 911.51,648.555 912.07,647.812 912.629,633.425 913.188,683.932 913.747,686.419 914.307,688.542 914.866,655.539 915.425,655.02 915.984,639.846 916.544,654.618 917.103,623.966 917.662,597.841 918.221,602.36 918.781,605.452 919.34,628.03 919.899,629.13 920.458,634.534 921.018,639.557 921.577,608.47 922.136,630.313 922.695,665.321 923.255,685.257 923.814,669.163 924.373,668.034 924.932,669.64 925.492,669.649 926.051,686.417 926.61,653.753 927.169,656.075 927.729,640.312 928.288,611.278 928.847,615.944 929.406,618.414 929.966,622.446 930.525,627.949 931.084,630.6 931.644,635.361 932.203,684.316 932.762,688.054 933.321,705.429 933.881,707.204 934.44,706.777 934.999,706.95 935.558,705.096 936.118,735.777 936.677,734.528 937.236,733.986 937.795,714.148 938.355,727.273 938.914,740.222 939.473,738.291 940.032,748.772 940.592,733.563 941.151,732.756 941.71,730.719 942.269,740.349 942.829,741.111 943.388,737.457 943.947,736.637 944.506,733.83 945.066,778.228 945.625,758.527 946.184,770.369 946.743,781.972 947.303,730.323 947.862,761.858 948.421,823.486 948.98,802.155 949.54,792.197 950.099,785.559 950.658,797.644 951.217,791.75 951.777,754.963 952.336,735.51 952.895,766.707 953.454,744.709 954.014,726.288 954.573,725.586 955.132,722.469 955.691,688.322 956.251,706.7 956.81,722.494 957.369,655.914 957.928,673.122 958.488,719.814 959.047,732.272 959.606,743.62 960.165,692.281 960.725,690.549 961.284,689.829 961.843,669.884 962.402,669.806 962.962,634.458 963.521,603.837 964.08,620.609 964.639,627.028 965.199,631.475 965.758,637.395 966.317,702.554 966.876,681.017 967.436,650.001 967.995,668.114 968.554,649.74 969.113,651.361 969.673,636.876 970.232,672.807 970.791,676.613 971.35,661.726 971.91,648.942 972.469,615.475 973.028,603.108 973.587,610.578 974.147,618.481 974.706,656.172 975.265,675.564 975.824,659.486 976.384,662.826 976.943,681.426 977.502,696.244 978.061,664.272 978.621,683.787 979.18,717.432 979.739,718.009 980.298,735.46 980.858,785.175 981.417,782.456 981.976,761.242 982.535,771.026 983.095,767.112 983.654,734.388 984.213,730.698 984.772,709.997 985.332,710.724 985.891,710.479 986.45,695.436 987.009,697.304 987.569,714.373 988.128,712.369 988.687,694.817 989.246,712.666 989.806,746.231 990.365,745.425 990.924,694.497 991.483,693.817 992.043,691.241 992.602,704.322 993.161,722.607 993.72,671.702 994.28,674.054 994.839,688.608 995.398,703.285 995.957,702.854 996.517,686.263 997.076,667.625 997.635,637.747 998.194,643.798 998.754,633.728 999.313,684.313 999.872,670.494 1000.43,688.653 1000.99,685.76 1001.55,686.63 1002.11,713.826 1002.67,711.63 1003.23,711.401 1003.79,706.658 1004.35,676.045 1004.91,660.518 1005.46,660.727 1006.02,612.807 1006.58,629.739 1007.14,664.998 1007.7,678.792 1008.26,729.331 1008.82,740.064 1009.38,754.522 1009.94,732.701 1010.5,695.608 1011.06,693.061 1011.62,692.546 1012.18,678.818 1012.73,679.742 1013.29,678.69 1013.85,680.647 1014.41,666.073 1014.97,631.071 1015.53,569.28 1016.09,577.076 1016.65,565.326 1017.21,555.295 1017.77,581.51 1018.33,554.631 1018.89,513.998 1019.45,509.972 1020.01,519.344 1020.56,529.384 1021.12,488.359 1021.68,548.062 1022.24,523.079 1022.8,534.693 1023.36,544.639 1023.92,552.196 1024.48,559.205 1025.04,585.085 1025.6,575.229 1026.16,560.795 1026.72,551.453 1027.28,559.419 1027.83,566.566 1028.39,589.127 1028.95,611.442 1029.51,666.263 1030.07,666.532 1030.63,651.99 1031.19,618.981 1031.75,606.853 1032.31,613.288 1032.87,634.498 1033.43,619.888 1033.99,608.851 1034.55,594.094 1035.1,600.427 1035.66,607.961 1036.22,580.547 1036.78,588.197 1037.34,607.094 1037.9,594.52 1038.46,595.95 1039.02,603.519 1039.58,624.035 1040.14,642.104 1040.7,646.796 1041.26,634.241 1041.82,653.056 1042.38,656.056 1042.93,660.784 1043.49,659.144 1044.05,677.39 1044.61,708.381 1045.17,739.783 1045.73,753.15 1046.29,745.263 1046.85,741.598 1047.41,758.143 1047.97,787.013 1048.53,797.576 1049.09,794.166 1049.65,756.538 1050.2,756.093 1050.76,748.498 1051.32,746.07 1051.88,754.698 1052.44,751.603 1053,813.698 1053.56,807.479 1054.12,818.07 1054.68,812.633 1055.24,852.52 1055.8,843.298 1056.36,834.818 1056.92,829.025 1057.48,833.435 1058.03,857.521 1058.59,847.85 1059.15,792.544 1059.71,789.942 1060.27,817.398 1060.83,776.737 1061.39,739.879 1061.95,705.669 1062.51,704.667 1063.07,716.186 1063.63,729.831 1064.19,710.677 1064.75,693.253 1065.3,676.791 1065.86,709.864 1066.42,689.567 1066.98,674.314 1067.54,736.185 1068.1,733.883 1068.66,749.441 1069.22,731.316 1069.78,713.18 1070.34,692.741 1070.9,724.289 1071.46,703.896 1072.02,685.955 1072.57,714.969 1073.13,695.293 1073.69,697.444 1074.25,730.024 1074.81,714.142 1075.37,728.667 1075.93,725.142 1076.49,703.003 1077.05,716.905 1077.61,731.587 1078.17,697.555 1078.73,665.748 1079.29,636.913 1079.85,621.63 1080.4,626.795 1080.96,631.919 1081.52,650.147 1082.08,652.202 1082.64,654.27 1083.2,623.162 1083.76,625.67 1084.32,645.576 1084.88,651.295 1085.44,668.962 1086,670.324 1086.56,668.199 1087.12,637.585 1087.67,656.162 1088.23,659.949 1088.79,710.061 1089.35,692.879 1089.91,674.953 1090.47,702.823 1091.03,718.603 1091.59,701.777 1092.15,701.434 1092.71,699.662 1093.27,680.1 1093.83,664.955 1094.39,680.624 1094.94,728.083 1095.5,725.197 1096.06,708.538 1096.62,723.413 1097.18,738.275 1097.74,705.457 1098.3,704.527 1098.86,717.587 1099.42,703.145 1099.98,655.433 1100.54,640.628 1101.1,659.207 1101.66,661.254 1102.22,645.439 1102.77,648.433 1103.33,648.399 1103.89,698.985 1104.45,715.824 1105.01,697.863 1105.57,678.713 1106.13,679.759 1106.69,664.679 1107.25,629.382 1107.81,630.041 1108.37,616.388 1108.93,637.413 1109.49,654.53 1110.04,669.172 1110.6,669.066 1111.16,705.309 1111.72,672.481 1112.28,643.316 1112.84,614.073 1113.4,650.447 1113.96,636.965 1114.52,655.013 1115.08,671.571 1115.64,659.799 1116.2,628.103 1116.76,626.249 1117.31,581.001 1117.87,635.515 1118.43,620.303 1118.99,638.734 1119.55,629.316 1120.11,635.585 1120.67,626.092 1121.23,627.817 1121.79,628.784 1122.35,613.232 1122.91,618.856 1123.47,621.337 1124.03,642.413 1124.59,641.987 1125.14,657.17 1125.7,646.443 1126.26,668.09 1126.82,673.14 1127.38,672.924 1127.94,674.513 1128.5,671.416 1129.06,689.669 1129.62,688.665 1130.18,707.371 1130.74,708.313 1131.3,675.962 1131.86,661.893 1132.41,646.866 1132.97,629.256 1133.53,616.148 1134.09,622.861 1134.65,641.8 1135.21,643.145 1135.77,659.671 1136.33,676.238 1136.89,678.516 1137.45,661.303 1138.01,648.826 1138.57,633.708 1139.13,621.028 1139.68,626.444 1140.24,636.701 1140.8,668.48 1141.36,637.769 1141.92,637.73 1142.48,655.632 1143.04,659.853 1143.6,665.967 1144.16,666.242 1144.72,666.568 1145.28,666.611 1145.84,668.243 1146.4,669.543 1146.96,671.232 1147.51,707.238 1148.07,721.889 1148.63,736.792 1149.19,752.795 1149.75,733.085 1150.31,716.582 1150.87,729.013 1151.43,696.664 1151.99,748.804 1152.55,761.931 1153.11,790.785 1153.67,817.013 1154.23,811.237 1154.78,786.424 1155.34,786.528 1155.9,764.096 1156.46,762.492 1157.02,710.65 1157.58,659.895 1158.14,679.326 1158.7,712.472 1159.26,757.721 1159.82,769.299 1160.38,762.893 1160.94,756.932 1161.5,817.834 1162.05,826.513 1162.61,803.673 1163.17,782.413 1163.73,728.2 1164.29,710.927 1164.85,739.73 1165.41,719.735 1165.97,697.514 1166.53,696.941 1167.09,692.957 1167.65,711 1168.21,725.806 1168.77,755.088 1169.33,770.924 1169.88,767.08 1170.44,775.923 1171,773.421 1171.56,769.618 1172.12,796.821 1172.68,770.769 1173.24,779.396 1173.8,723.515 1174.36,735.792 1174.92,733.98 1175.48,732.698 1176.04,697.701 1176.6,695.811 1177.15,662.236 1177.71,650.042 1178.27,653.02 1178.83,652.948 1179.39,635.111 1179.95,602.508 1180.51,605.925 1181.07,622.958 1181.63,628.209 1182.19,593.862 1182.75,563.568 1183.31,569.821 1183.87,556.88 1184.43,580.309 1184.98,573.241 1185.54,563.624 1186.1,521.769 1186.66,547.373 1187.22,552.489 1187.78,558.523 1188.34,626.92 1188.9,628.156 1189.46,631.847 1190.02,633.531 1190.58,638.49 1191.14,692.165 1191.7,704.314 1192.25,738.988 1192.81,721.601 1193.37,746.697 1193.93,726.098 1194.49,755.261 1195.05,749.7 1195.61,766.293 1196.17,761.433 1196.73,757.493 1197.29,735.837 1197.85,764.087 1198.41,774.585 1198.97,787.558 1199.52,767.589 1200.08,745.274 1200.64,757.584 1201.2,755.432 1201.76,736.134 1202.32,753.065 1202.88,731 1203.44,726.291 1204,709.844 1204.56,709.261 1205.12,693.392 1205.68,711.358 1206.24,729.223 1206.8,710.742 1207.35,708.885 1207.91,706.147 1208.47,674.251 1209.03,671.397 1209.59,689.965 1210.15,689.534 1210.71,673.445 1211.27,691.364 1211.83,691.021 1212.39,706.668 1212.95,692.189 1213.51,662.536 1214.07,662.227 1214.62,648.49 1215.18,619.832 1215.74,605.457 1216.3,629.774 1216.86,650.53 1217.42,686.173 1217.98,669.395 1218.54,671.741 1219.1,687.223 1219.66,702.929 1220.22,699.551 1220.78,714.754 1221.34,711.144 1221.89,739.454 1222.45,717.613 1223.01,730.535 1223.57,738.974 1224.13,752.805 1224.69,763.315 1225.25,839.338 1225.81,832.784 1226.37,824.729 1226.93,780.648 1227.49,771.26 1228.05,814.948 1228.61,795.713 1229.17,776.779 1229.72,822.333 1230.28,799.374 1230.84,791.789 1231.4,772.103 1231.96,763.799 1232.52,805.945 1233.08,802.665 1233.64,793.427 1234.2,802.368 1234.76,794.501 1235.32,753.371 1235.88,752.845 1236.44,746.562 1236.99,726.93 1237.55,695.898 1238.11,707.925 1238.67,671.388 1239.23,684.898 1239.79,665.709 1240.35,699.131 1240.91,684.239 1241.47,617.871 1242.03,604.044 1242.59,628.966 1243.15,646.917 1243.71,613.494 1244.26,587.999 1244.82,597.22 1245.38,618.447 1245.94,607.584 1246.5,593.638 1247.06,584.569 1247.62,552.725 1248.18,576.381 1248.74,582.969 1249.3,538.376 1249.86,516.567 1250.42,528.548 1250.98,537.07 1251.54,547.714 1252.09,537.6 1252.65,526.136 1253.21,570.195 1253.77,607.591 1254.33,610.661 1254.89,612.386 1255.45,614.089 1256.01,649.27 1256.57,653.331 1257.13,658.035 1257.69,630.801 1258.25,647.463 1258.81,648.095 1259.36,649.035 1259.92,665.484 1260.48,662.299 1261.04,678.836 1261.6,696.661 1262.16,695.535 1262.72,725.012 1263.28,742.61 1263.84,738.372 1264.4,702.686 1264.96,718.887 1265.52,716.941 1266.08,715.049 1266.63,715.141 1267.19,699.189 1267.75,681.528 1268.31,666.061 1268.87,669.36 1269.43,671.738 1269.99,643.305 1270.55,663.626 1271.11,616.854 1271.67,636.737 1272.23,670.356 1272.79,688.084 1273.35,707.723 1273.91,722.592 1274.46,706.54 1275.02,702.213 1275.58,732.261 1276.14,731.124 1276.7,700.131 1277.26,713.163 1277.82,743.041 1278.38,737.905 1278.94,716.091 1279.5,747.815 1280.06,776.549 1280.62,756.494 1281.18,752.402 1281.73,701.894 1282.29,715.063 1282.85,717.878 1283.41,750.775 1283.97,777.255 1284.53,804.477 1285.09,811.185 1285.65,809.601 1286.21,756.02 1286.77,748.968 1287.33,747.796 1287.89,713.17 1288.45,742.179 1289,735.935 1289.56,732.873 1290.12,747.525 1290.68,746.002 1291.24,760.544 1291.8,773.534 1292.36,784.619 1292.92,811.999 1293.48,802.339 1294.04,794.752 1294.6,738.096 1295.16,685.327 1295.72,683.197 1296.28,684.153 1296.83,666.03 1297.39,702.848 1297.95,702.885 1298.51,736.758 1299.07,700.295 1299.63,732.492 1300.19,733.171 1300.75,747.848 1301.31,726.693 1301.87,723.838 1302.43,737.54 1302.99,736.101 1303.55,733.622 1304.1,700.648 1304.66,699.864 1305.22,702.462 1305.78,703.019 1306.34,701.648 1306.9,715.442 1307.46,696.102 1308.02,695.213 1308.58,691.954 1309.14,690.582 1309.7,705.783 1310.26,751.615 1310.82,680.412 1311.38,664.155 1311.93,646.419 1312.49,645.859 1313.05,664.167 1313.61,668.107 1314.17,667.049 1314.73,668.512 1315.29,651.702 1315.85,653.326 1316.41,657.667 1316.97,661.291 1317.53,647.811 1318.09,648.227 1318.65,612.844 1319.2,581.308 1319.76,587.824 1320.32,579.151 1320.88,581.761 1321.44,557.509 1322,580.635 1322.56,568.099 1323.12,589.829 1323.68,573.346 1324.24,594.883 1324.8,602.907 1325.36,622.503 1325.92,623.702 1326.47,610.5 1327.03,599.982 1327.59,622.179 1328.15,628.287 1328.71,648.61 1329.27,637.447 1329.83,623.962 1330.39,658.357 1330.95,677.119 1331.51,648.465 1332.07,681.215 1332.63,665.764 1333.19,665.416 1333.75,666.767 1334.3,682.358 1334.86,652.738 1335.42,639.834 1335.98,627.25 1336.54,613.163 1337.1,601.227 1337.66,588.154 1338.22,612.058 1338.78,598.882 1339.34,602.23 1339.9,619.662 1340.46,641.43 1341.02,657.884 1341.57,688.147 1342.13,674.246 1342.69,676.017 1343.25,724.881 1343.81,703.874 1344.37,687.703 1344.93,685.514 1345.49,682.974 1346.05,698.421 1346.61,684.547 1347.17,652.598 1347.73,673.852 1348.29,690.952 1348.84,688.357 1349.4,672.279 1349.96,689.087 1350.52,709.508 1351.08,693.978 1351.64,729.137 1352.2,696.784 1352.76,712.502 1353.32,727.196 1353.88,740.983 1354.44,693.458 1355,626.098 1355.56,617.386 1356.12,640.529 1356.67,625.541 1357.23,626.797 1357.79,631.079 1358.35,620.045 1358.91,623.395 1359.47,628.204 1360.03,651.417 1360.59,621.762 1361.15,640.931 1361.71,641.143 1362.27,642.547 1362.83,694.211 1363.39,706.924 1363.94,738.223 1364.5,735.537 1365.06,720.757 1365.62,721.285 1366.18,702.568 1366.74,717.444 1367.3,727.246 1367.86,709.457 1368.42,705.233 1368.98,723.139 1369.54,723.314 1370.1,738.065 1370.66,735.918 1371.21,731.422 1371.77,714.229 1372.33,662.629 1372.89,696.657 1373.45,696.599 1374.01,711.997 1374.57,663.991 1375.13,664.873 1375.69,668.091 1376.25,701.661 1376.81,699.868 1377.37,650.573 1377.93,666.69 1378.49,666.153 1379.04,669.265 1379.6,674.161 1380.16,658.861 1380.72,692.674 1381.28,708.897 1381.84,706.287 1382.4,671.596 1382.96,685.756 1383.52,705.33 1384.08,737.116 1384.64,719.251 1385.2,766.002 1385.76,748.16 1386.31,795.108 1386.87,755.382 1387.43,735.043 1387.99,749.053 1388.55,730.074 1389.11,727.394 1389.67,710.929 1390.23,663.002 1390.79,661.839 1391.35,643.48 1391.91,631.222 1392.47,647.654 1393.03,651.144 1393.58,672.531 1394.14,671.615 1394.7,691.485 1395.26,689.896 1395.82,723.795 1396.38,723.163 1396.94,722.789 1397.5,719.178 1398.06,685.304 1398.62,714.937 1399.18,726.95 1399.74,744.984 1400.3,725.588 1400.86,708.043 1401.41,723.057 1401.97,717.345 1402.53,716.462 1403.09,700.178 1403.65,713.994 1404.21,695.938 1404.77,693.009 1405.33,658.61 1405.89,627.835 1406.45,645.519 1407.01,649.112 1407.57,646.13 1408.13,630.997 1408.68,601.361 1409.24,605.099 1409.8,606.927 1410.36,614.993 1410.92,617.377 1411.48,622.073 1412.04,626.383 1412.6,628.883 1413.16,662.256 1413.72,661.872 1414.28,648.902 1414.84,682.396 1415.4,700.338 1415.95,715.96 1416.51,744.312 1417.07,725.969 1417.63,744.668 1418.19,758.232 1418.75,766.388 1419.31,748.452 1419.87,746.68 1420.43,741.583 1420.99,722.597 1421.55,700.474 1422.11,665.707 1422.67,665.163 1423.23,650.159 1423.78,668.753 1424.34,685.495 1424.9,733.588 1425.46,729.036 1426.02,724.292 1426.58,704.215 1427.14,715.796 1427.7,713.929 1428.26,710.005 1428.82,673.88 1429.38,691.726 1429.94,689.305 1430.5,686.031 1431.05,699.921 1431.61,699.8 1432.17,697.114 1432.73,715.378 1433.29,682.458 1433.85,696.932 1434.41,681.202 1434.97,682.968 1435.53,718.802 1436.09,716.153 1436.65,665.932 1437.21,681.024 1437.77,676.345 1438.33,677.91 1438.88,707.796 1439.44,689.454 1440,687.221 1440.56,689.81 1441.12,656.493 1441.68,656.911 1442.24,672.905 1442.8,657.284 1443.36,626.04 1443.92,611.24 1444.48,600.225 1445.04,618.24 1445.6,641.228 1446.15,645.018 1446.71,597.402 1447.27,601.917 1447.83,575.193 1448.39,564.288 1448.95,567.14 1449.51,572.609 1450.07,543.189 1450.63,573.187 1451.19,559.607 1451.75,567.513 1452.31,589.778 1452.87,632.573 1453.42,667.55 1453.98,652.264 1454.54,670.629 1455.1,655.735 1455.66,689.372 1456.22,657.758 1456.78,656.687 1457.34,692.063 1457.9,692.826 1458.46,660.533 1459.02,674.325 1459.58,677.487 1460.14,674.518 1460.7,674.816 1461.25,690.602 1461.81,690.254 1462.37,689.809 1462.93,684.613 1463.49,695.968 1464.05,694.074 1464.61,678.243 1465.17,631.813 1465.73,651.858 1466.29,641.778 1466.85,642.969 1467.41,676.571 1467.97,676 1468.52,693.004 1469.08,737.61 1469.64,717.53 1470.2,714.115 1470.76,695.67 1471.32,696.693 1471.88,663.179 1472.44,665.131 1473,651.932 1473.56,683.999 1474.12,666.469 1474.68,653.232 1475.24,652.89 1475.79,640.875 1476.35,657.853 1476.91,660.396 1477.47,660.541 1478.03,641.843 1478.59,659.332 1479.15,643.755 1479.71,646.648 1480.27,651.522 1480.83,657.511 1481.39,677.282 1481.95,695.148 1482.51,674.988 1483.07,677.069 1483.62,694.871 1484.18,712.09 1484.74,676.836 1485.3,696.529 1485.86,712.757 1486.42,710.697 1486.98,693.585 1487.54,742.211 1488.1,740.255 1488.66,687.716 1489.22,670.489 1489.78,689.001 1490.34,689.873 1490.89,690.652 1491.45,674.261 1492.01,689.554 1492.57,692.037 1493.13,705.78 1493.69,736.06 1494.25,715.666 1494.81,746.346 1495.37,756.104 1495.93,787.088 1496.49,781.085 1497.05,744.883 1497.61,723.715 1498.16,754.293 1498.72,749.767 1499.28,777.581 1499.84,757.223 1500.4,753.491 1500.96,716.916 1501.52,666.563 1502.08,635.116 1502.64,621.751 1503.2,612.729 1503.76,584.464 1504.32,633.776 1504.88,621.37 1505.44,657.247 1505.99,678.236 1506.55,680.488 1507.11,679.851 1507.67,665.298 1508.23,635.352 1508.79,639.258 1509.35,626.29 1509.91,614.911 1510.47,638.541 1511.03,607.328 1511.59,593.576 1512.15,632.861 1512.71,619.522 1513.26,590.057 1513.82,612.194 1514.38,633.638 1514.94,636.119 1515.5,639.72 1516.06,625.177 1516.62,611.636 1517.18,632.238 1517.74,664.701 1518.3,620.095 1518.86,638.823 1519.42,673.415 1519.98,658.983 1520.53,655.606 1521.09,624.369 1521.65,626.931 1522.21,627.376 1522.77,613.827 1523.33,616.153 1523.89,605.994 1524.45,658.174 1525.01,646.146 1525.57,682.19 1526.13,697.172 1526.69,683.755 1527.25,701.052 1527.81,734.167 1528.36,747.779 1528.92,694.092 1529.48,696.635 1530.04,730.054 1530.6,696.863 1531.16,713.227 1531.72,708.742 1532.28,704.407 1532.84,701.661 1533.4,683.389 1533.96,715.421 1534.52,707.909 1535.08,687.961 1535.63,657.517 1536.19,676.64 1536.75,678.12 1537.31,662.952 1537.87,661.246 1538.43,660.135 1538.99,642.364 1539.55,613.229 1540.11,582.277 1540.67,618.997 1541.23,590.985 1541.79,612.078 1542.35,618.249 1542.9,619.604 1543.46,621.116 1544.02,627.718 1544.58,631.32 1545.14,568.37 1545.7,574.974 1546.26,581.92 1546.82,620.192 1547.38,624.779 1547.94,624.237 1548.5,610.661 1549.06,629.843 1549.62,633.203 1550.18,669.56 1550.73,718.73 1551.29,669.799 1551.85,673.512 1552.41,675.661 1552.97,695.47 1553.53,696.325 1554.09,695.614 1554.65,709.849 1555.21,722.414 1555.77,687.145 1556.33,670.606 1556.89,671.517 1557.45,687.268 1558,736.019 1558.56,717.897 1559.12,727.978 1559.68,694.398 1560.24,677.078 1560.8,679.424 1561.36,628.27 1561.92,645.355 1562.48,679.359 1563.04,680.665 1563.6,678.628 1564.16,696.11 1564.72,679.641 1565.28,661.863 1565.83,681.055 1566.39,684.119 1566.95,685.035 1567.51,683.44 1568.07,699.587 1568.63,717.727 1569.19,782.347 1569.75,755.353 1570.31,778.992 1570.87,822.63 1571.43,847.544 1571.99,852.623 1572.55,813.715 1573.1,774.435 1573.66,753.286 1574.22,718.953 1574.78,717.902 1575.34,717.561 1575.9,712.354 1576.46,723.612 1577.02,707.841 1577.58,689.35 1578.14,720.471 1578.7,700.681 1579.26,683.499 1579.82,681.223 1580.37,699.868 1580.93,753.411 1581.49,717.556 1582.05,698.856 1582.61,663.614 1583.17,699.165 1583.73,682.529 1584.29,699.693 1584.85,699.514 1585.41,683.365 1585.97,668.023 1586.53,684.004 1587.09,701.156 1587.65,700.706 1588.2,652.178 1588.76,698.826 1589.32,715.475 1589.88,726.954 1590.44,740.51 1591,737.856 1591.56,735.099 1592.12,735.837 1592.68,735.8 1593.24,735.217 1593.8,731.806 1594.36,696.419 1594.92,728.525 1595.47,728.051 1596.03,726.539 1596.59,720.897 1597.15,701.077 1597.71,698.178 1598.27,678.229 1598.83,679.694 1599.39,679.385 1599.95,695.277 1600.51,726.811 1601.07,690.378 1601.63,657.609 1602.19,660.131 1602.74,662.044 1603.3,651.131 1603.86,653.127 1604.42,670.781 1604.98,671.22 1605.54,689.127 1606.1,656.139 1606.66,659.618 1607.22,658.328 1607.78,658.374 1608.34,678.202 1608.9,695.511 1609.46,712.062 1610.02,710.341 1610.57,692.587 1611.13,695.397 1611.69,693.781 1612.25,710.267 1612.81,712.191 1613.37,681.848 1613.93,718.023 1614.49,732.31 1615.05,745.037 1615.61,742.173 1616.17,722.398 1616.73,735.083 1617.29,748.99 1617.84,730.002 1618.4,728.374 1618.96,740.3 1619.52,749.465 1620.08,728.887 1620.64,708.408 1621.2,721.622 1621.76,737.573 1622.32,717.392 1622.88,734.866 1623.44,767.549 1624,762.225 1624.56,788.784 1625.11,767.074 1625.67,748.935 1626.23,715.423 1626.79,713.815 1627.35,710.492 1627.91,708.345 1628.47,675.775 1629.03,675.5 1629.59,658.14 1630.15,720.903 1630.71,736.654 1631.27,735.042 1631.83,717.717 1632.39,696.549 1632.94,710.53 1633.5,726.964 1634.06,719.568 1634.62,750.699 1635.18,746.134 1635.74,728.649 1636.3,742 1636.86,721.475 1637.42,766.615 1637.98,694.397 1638.54,695.233 1639.1,695.264 1639.66,678.193 1640.21,724.569 1640.77,759.642 1641.33,739.487 1641.89,737.095 1642.45,731.752 1643.01,700.492 1643.57,684.669 1644.13,686.49 1644.69,672.927 1645.25,659.631 1645.81,643.622 1646.37,678.986 1646.93,678.46 1647.48,712.273 1648.04,679.417 1648.6,713.559 1649.16,714.689 1649.72,698.015 1650.28,718.316 1650.84,699.26 1651.4,681.52 1651.96,633.681 1652.52,585.523 1653.08,638.254 1653.64,623.727 1654.2,580.615 1654.76,567.191 1655.31,540.678 1655.87,548.487 1656.43,572.06 1656.99,577.674 1657.55,597.47 1658.11,603.544 1658.67,573.661 1659.23,562.565 1659.79,581.708 1660.35,553.782 1660.91,579.775 1661.47,620.046 1662.03,558.441 1662.58,567.837 1663.14,573.76 1663.7,562.117 1664.26,554.122 1664.82,545.286 1665.38,555.203 1665.94,547.829 1666.5,569.138 1667.06,577.138 1667.62,562.765 1668.18,571.898 1668.74,609.959 1669.3,630.6 1669.85,616.505 1670.41,605.908 1670.97,609.661 1671.53,611.841 1672.09,663.724 1672.65,664.772 1673.21,652.51 1673.77,650.953 1674.33,666.114 1674.89,650.859 1675.45,666.331 1676.01,630.923 1676.57,635.148 1677.13,637.121 1677.68,659.345 1678.24,643.97 1678.8,660.499 1679.36,644.78 1679.92,680.386 1680.48,680.019 1681.04,693.008 1681.6,694.304 1682.16,706.964 1682.72,691.083 1683.28,709.844 1683.84,692.721 1684.4,692.352 1684.95,694.71 1685.51,693.475 1686.07,660.747 1686.63,678.256 1687.19,680.541 1687.75,665.271 1688.31,668.142 1688.87,669.691 1689.43,655.716 1689.99,672.516 1690.55,672.132 1691.11,688.333 1691.67,688.008 1692.23,685.928 1692.78,704.429 1693.34,690.971 1693.9,688.744 1694.46,701.112 1695.02,699.543 1695.58,728.432 1696.14,724.606 1696.7,707.5 1697.26,752.491 1697.82,751.28 1698.38,750.259 1698.94,780.293 1699.5,760.107 1700.05,727.55 1700.61,691.665 1701.17,644.182 1701.73,677.728 1702.29,710.301 1702.85,745.151 1703.41,741.956 1703.97,772.016 1704.53,780.585 1705.09,775.976 1705.65,734.997 1706.21,701.591 1706.77,718.675 1707.32,717.941 1707.88,698.344 1708.44,664.742 1709,648.46 1709.56,669.024 1710.12,685.276 1710.68,702.052 1711.24,652.116 1711.8,637.128 1712.36,627.641 1712.92,644.13 1713.48,679.289 1714.04,684.359 1714.6,703.21 1715.15,715.103 1715.71,728.492 1716.27,714.411 1716.83,677.703 1717.39,692.762 1717.95,712.72 1718.51,693.502 1719.07,723.857 1719.63,706.166 1720.19,717.45 1720.75,731.452 1721.31,746.798 1721.87,740.639 1722.42,736.182 1722.98,767.452 1723.54,797.864 1724.1,790.362 1724.66,782.33 1725.22,790.476 1725.78,767.248 1726.34,762.067 1726.9,758.068 1727.46,704.415 1728.02,721.447 1728.58,722.395 1729.14,720.842 1729.69,720.523 1730.25,738.065 1730.81,767.628 1731.37,764.24 1731.93,778.543 1732.49,759.964 1733.05,756.078 1733.61,734.985 1734.17,765.537 1734.73,746.549 1735.29,741.934 1735.85,738.303 1736.41,732.529 1736.97,714.023 1737.52,762.388 1738.08,779.757 1738.64,807.71 1739.2,832.22 1739.76,807.76 1740.32,803.286 1740.88,782.03 1741.44,796.759 1742,756.643 1742.56,752.859 1743.12,735.542 1743.68,750.38 1744.24,714.624 1744.79,710.923 1745.35,706.306 1745.91,688.366 1746.47,705.131 1747.03,732.469 1747.59,728.817 1748.15,726.451 1748.71,691.866 1749.27,689.858 1749.83,675.805 1750.39,662.317 1750.95,649.569 1751.51,666.703 1752.06,634.705 1752.62,590.561 1753.18,611.549 1753.74,597.996 1754.3,600.835 1754.86,589.399 1755.42,591.722 1755.98,578.777 1756.54,551.971 1757.1,538.347 1757.66,532.279 1758.22,534.385 1758.78,489.473 1759.34,485.297 1759.89,479.428 1760.45,491.013 1761.01,499.732 1761.57,526.349 1762.13,537.63 1762.69,541.435 1763.25,581.84 1763.81,569.885 1764.37,576.088 1764.93,600.263 1765.49,605.814 1766.05,578.274 1766.61,550.443 1767.16,542.883 1767.72,568.146 1768.28,592.196 1768.84,612.069 1769.4,649.922 1769.96,701.585 1770.52,686.077 1771.08,686.615 1771.64,688.123 1772.2,703.565 1772.76,704.052 1773.32,684.474 1773.88,713.331 1774.43,724.618 1774.99,739.837 1775.55,721.11 1776.11,719.192 1776.67,737.237 1777.23,752.524 1777.79,764.799 1778.35,760.222 1778.91,769.528 1779.47,768.845 1780.03,748.943 1780.59,710.871 1781.15,709.406 1781.71,723.966 1782.26,723.969 1782.82,722.025 1783.38,752.043 1783.94,762.485 1784.5,778.583 1785.06,758.461 1785.62,720.123 1786.18,717.147 1786.74,748.88 1787.3,746.28 1787.86,774.964 1788.42,772.455 1788.98,767.099 1789.53,714.715 1790.09,697.079 1790.65,715.26 1791.21,715.274 1791.77,763.871 1792.33,758.468 1792.89,770.776 1793.45,749.502 1794.01,728.408 1794.57,691.383 1795.13,677.391 1795.69,679.476 1796.25,694.984 1796.8,709.753 1797.36,726.062 1797.92,743.409 1798.48,706.722 1799.04,660.313 1799.6,629.42 1800.16,631.073 1800.72,617.287 1801.28,636.454 1801.84,639.955 1802.4,656.803 1802.96,644.794 1803.52,647.313 1804.08,633.697 1804.63,636.541 1805.19,589.641 1805.75,577.953 1806.31,583.817 1806.87,585.336 1807.43,572.302 1807.99,593.896 1808.55,629.376 1809.11,629.681 1809.67,695.965 1810.23,728.613 1810.79,754.775 1811.35,716.88 1811.9,716.42 1812.46,702.697 1813.02,687.274 1813.58,690.129 1814.14,704.896 1814.7,688.824 1815.26,690.468 1815.82,707.255 1816.38,671.925 1816.94,687.484 1817.5,732.795 1818.06,712.151 1818.62,709.323 1819.18,710.679 1819.73,738.088 1820.29,734.022 1820.85,718.859 1821.41,700.663 1821.97,701.356 1822.53,683.793 1823.09,651.15 1823.65,634.909 1824.21,605.895 1824.77,659.689 1825.33,660.678 1825.89,691.259 1826.45,676.491 1827,628.707 1827.56,629.646 1828.12,614.428 1828.68,620.638 1829.24,626.497 1829.8,629.065 1830.36,597.099 1830.92,601.572 1831.48,635.419 1832.04,636.703 1832.6,637.457 1833.16,640.712 1833.72,641.453 1834.27,626.228 1834.83,644.99 1835.39,667.163 1835.95,684.494 1836.51,690.953 1837.07,675.34 1837.63,659.792 1838.19,678.642 \"/>\n<path clip-path=\"url(#clip963)\" d=\"M720.247 691.626 L720.806 691.626 L721.365 691.626 L721.924 691.626 L722.484 691.626 L723.043 691.626 L723.602 691.626 L724.161 691.626 L724.721 691.626 L725.28 691.626 L725.839 691.626 L726.398 691.626 L726.958 691.626 L727.517 691.626 L728.076 691.626 L728.635 691.626 L729.195 691.626 L729.754 691.626 L730.313 691.626 L730.872 691.626 L731.432 691.626 L731.991 691.626 L732.55 691.626 L733.109 691.626 L733.669 691.626 L734.228 691.626 L734.787 691.626 L735.346 691.626 L735.906 691.626 L736.465 691.626 L737.024 691.626 L737.583 691.626 L738.143 691.626 L738.702 691.626 L739.261 691.626 L739.82 691.626 L740.38 691.626 L740.939 691.626 L741.498 691.626 L742.057 691.626 L742.617 691.626 L743.176 691.626 L743.735 691.626 L744.294 691.626 L744.854 691.626 L745.413 691.626 L745.972 691.626 L746.531 691.626 L747.091 691.626 L747.65 691.626 L748.209 691.626 L748.768 691.626 L749.328 691.626 L749.887 691.626 L750.446 691.626 L751.005 691.626 L751.565 691.626 L752.124 691.626 L752.683 691.626 L753.242 691.626 L753.802 691.626 L754.361 691.626 L754.92 691.626 L755.479 691.626 L756.039 691.626 L756.598 691.626 L757.157 691.626 L757.716 691.626 L758.276 691.626 L758.835 691.626 L759.394 691.626 L759.953 691.626 L760.513 691.626 L761.072 691.626 L761.631 691.626 L762.19 691.626 L762.75 691.626 L763.309 691.626 L763.868 691.626 L764.427 691.626 L764.987 691.626 L765.546 691.626 L766.105 691.626 L766.664 691.626 L767.224 691.626 L767.783 691.626 L768.342 691.626 L768.901 691.626 L769.461 691.626 L770.02 691.626 L770.579 691.626 L771.138 691.626 L771.698 691.626 L772.257 691.626 L772.816 691.626 L773.375 691.626 L773.935 691.626 L774.494 691.626 L775.053 691.626 L775.612 691.626 L776.172 691.626 L776.731 691.626 L777.29 691.626 L777.849 691.626 L778.409 691.626 L778.968 691.626 L779.527 691.626 L780.086 691.626 L780.646 691.626 L781.205 691.626 L781.764 691.626 L782.323 691.626 L782.883 691.626 L783.442 691.626 L784.001 691.626 L784.56 691.626 L785.12 691.626 L785.679 691.626 L786.238 691.626 L786.797 691.626 L787.357 691.626 L787.916 691.626 L788.475 691.626 L789.034 691.626 L789.594 691.626 L790.153 691.626 L790.712 691.626 L791.271 691.626 L791.831 691.626 L792.39 691.626 L792.949 691.626 L793.508 691.626 L794.068 691.626 L794.627 691.626 L795.186 691.626 L795.745 691.626 L796.305 691.626 L796.864 691.626 L797.423 691.626 L797.982 691.626 L798.542 691.626 L799.101 691.626 L799.66 691.626 L800.219 691.626 L800.779 691.626 L801.338 691.626 L801.897 691.626 L802.456 691.626 L803.016 691.626 L803.575 691.626 L804.134 691.626 L804.693 691.626 L805.253 691.626 L805.812 691.626 L806.371 691.626 L806.931 691.626 L807.49 691.626 L808.049 691.626 L808.608 691.626 L809.168 691.626 L809.727 691.626 L810.286 691.626 L810.845 691.626 L811.405 691.626 L811.964 691.626 L812.523 691.626 L813.082 691.626 L813.642 691.626 L814.201 691.626 L814.76 691.626 L815.319 691.626 L815.879 691.626 L816.438 691.626 L816.997 691.626 L817.556 691.626 L818.116 691.626 L818.675 691.626 L819.234 691.626 L819.793 691.626 L820.353 691.626 L820.912 691.626 L821.471 691.626 L822.03 691.626 L822.59 691.626 L823.149 691.626 L823.708 691.626 L824.267 691.626 L824.827 691.626 L825.386 691.626 L825.945 691.626 L826.504 691.626 L827.064 691.626 L827.623 691.626 L828.182 691.626 L828.741 691.626 L829.301 691.626 L829.86 691.626 L830.419 691.626 L830.978 691.626 L831.538 691.626 L832.097 691.626 L832.656 691.626 L833.215 691.626 L833.775 691.626 L834.334 691.626 L834.893 691.626 L835.452 691.626 L836.012 691.626 L836.571 691.626 L837.13 691.626 L837.689 691.626 L838.249 691.626 L838.808 691.626 L839.367 691.626 L839.926 691.626 L840.486 691.626 L841.045 691.626 L841.604 691.626 L842.163 691.626 L842.723 691.626 L843.282 691.626 L843.841 691.626 L844.4 691.626 L844.96 691.626 L845.519 691.626 L846.078 691.626 L846.637 691.626 L847.197 691.626 L847.756 691.626 L848.315 691.626 L848.874 691.626 L849.434 691.626 L849.993 691.626 L850.552 691.626 L851.111 691.626 L851.671 691.626 L852.23 691.626 L852.789 691.626 L853.348 691.626 L853.908 691.626 L854.467 691.626 L855.026 691.626 L855.585 691.626 L856.145 691.626 L856.704 691.626 L857.263 691.626 L857.822 691.626 L858.382 691.626 L858.941 691.626 L859.5 691.626 L860.059 691.626 L860.619 691.626 L861.178 691.626 L861.737 691.626 L862.296 691.626 L862.856 691.626 L863.415 691.626 L863.974 691.626 L864.533 691.626 L865.093 691.626 L865.652 691.626 L866.211 691.626 L866.77 691.626 L867.33 691.626 L867.889 691.626 L868.448 691.626 L869.007 691.626 L869.567 691.626 L870.126 691.626 L870.685 691.626 L871.244 691.626 L871.804 691.626 L872.363 691.626 L872.922 691.626 L873.481 691.626 L874.041 691.626 L874.6 691.626 L875.159 691.626 L875.718 691.626 L876.278 691.626 L876.837 691.626 L877.396 691.626 L877.955 691.626 L878.515 691.626 L879.074 691.626 L879.633 691.626 L880.192 691.626 L880.752 691.626 L881.311 691.626 L881.87 691.626 L882.429 691.626 L882.989 691.626 L883.548 691.626 L884.107 691.626 L884.666 691.626 L885.226 691.626 L885.785 691.626 L886.344 691.626 L886.903 691.626 L887.463 691.626 L888.022 691.626 L888.581 691.626 L889.14 691.626 L889.7 691.626 L890.259 691.626 L890.818 691.626 L891.377 691.626 L891.937 691.626 L892.496 691.626 L893.055 691.626 L893.614 691.626 L894.174 691.626 L894.733 691.626 L895.292 691.626 L895.851 691.626 L896.411 691.626 L896.97 691.626 L897.529 691.626 L898.088 691.626 L898.648 691.626 L899.207 691.626 L899.766 691.626 L900.325 691.626 L900.885 691.626 L901.444 691.626 L902.003 691.626 L902.562 691.626 L903.122 691.626 L903.681 691.626 L904.24 691.626 L904.799 691.626 L905.359 691.626 L905.918 691.626 L906.477 691.626 L907.036 691.626 L907.596 691.626 L908.155 691.626 L908.714 691.626 L909.273 691.626 L909.833 691.626 L910.392 691.626 L910.951 691.626 L911.51 691.626 L912.07 691.626 L912.629 691.626 L913.188 691.626 L913.747 691.626 L914.307 691.626 L914.866 691.626 L915.425 691.626 L915.984 691.626 L916.544 691.626 L917.103 691.626 L917.662 691.626 L918.221 691.626 L918.781 691.626 L919.34 691.626 L919.899 691.626 L920.458 691.626 L921.018 691.626 L921.577 691.626 L922.136 691.626 L922.695 691.626 L923.255 691.626 L923.814 691.626 L924.373 691.626 L924.932 691.626 L925.492 691.626 L926.051 691.626 L926.61 691.626 L927.169 691.626 L927.729 691.626 L928.288 691.626 L928.847 691.626 L929.406 691.626 L929.966 691.626 L930.525 691.626 L931.084 691.626 L931.644 691.626 L932.203 691.626 L932.762 691.626 L933.321 691.626 L933.881 691.626 L934.44 691.626 L934.999 691.626 L935.558 691.626 L936.118 691.626 L936.677 691.626 L937.236 691.626 L937.795 691.626 L938.355 691.626 L938.914 691.626 L939.473 691.626 L940.032 691.626 L940.592 691.626 L941.151 691.626 L941.71 691.626 L942.269 691.626 L942.829 691.626 L943.388 691.626 L943.947 691.626 L944.506 691.626 L945.066 691.626 L945.625 691.626 L946.184 691.626 L946.743 691.626 L947.303 691.626 L947.862 691.626 L948.421 691.626 L948.98 691.626 L949.54 691.626 L950.099 691.626 L950.658 691.626 L951.217 691.626 L951.777 691.626 L952.336 691.626 L952.895 691.626 L953.454 691.626 L954.014 691.626 L954.573 691.626 L955.132 691.626 L955.691 691.626 L956.251 691.626 L956.81 691.626 L957.369 691.626 L957.928 691.626 L958.488 691.626 L959.047 691.626 L959.606 691.626 L960.165 691.626 L960.725 691.626 L961.284 691.626 L961.843 691.626 L962.402 691.626 L962.962 691.626 L963.521 691.626 L964.08 691.626 L964.639 691.626 L965.199 691.626 L965.758 691.626 L966.317 691.626 L966.876 691.626 L967.436 691.626 L967.995 691.626 L968.554 691.626 L969.113 691.626 L969.673 691.626 L970.232 691.626 L970.791 691.626 L971.35 691.626 L971.91 691.626 L972.469 691.626 L973.028 691.626 L973.587 691.626 L974.147 691.626 L974.706 691.626 L975.265 691.626 L975.824 691.626 L976.384 691.626 L976.943 691.626 L977.502 691.626 L978.061 691.626 L978.621 691.626 L979.18 691.626 L979.739 691.626 L980.298 691.626 L980.858 691.626 L981.417 691.626 L981.976 691.626 L982.535 691.626 L983.095 691.626 L983.654 691.626 L984.213 691.626 L984.772 691.626 L985.332 691.626 L985.891 691.626 L986.45 691.626 L987.009 691.626 L987.569 691.626 L988.128 691.626 L988.687 691.626 L989.246 691.626 L989.806 691.626 L990.365 691.626 L990.924 691.626 L991.483 691.626 L992.043 691.626 L992.602 691.626 L993.161 691.626 L993.72 691.626 L994.28 691.626 L994.839 691.626 L995.398 691.626 L995.957 691.626 L996.517 691.626 L997.076 691.626 L997.635 691.626 L998.194 691.626 L998.754 691.626 L999.313 691.626 L999.872 691.626 L1000.43 691.626 L1000.99 691.626 L1001.55 691.626 L1002.11 691.626 L1002.67 691.626 L1003.23 691.626 L1003.79 691.626 L1004.35 691.626 L1004.91 691.626 L1005.46 691.626 L1006.02 691.626 L1006.58 691.626 L1007.14 691.626 L1007.7 691.626 L1008.26 691.626 L1008.82 691.626 L1009.38 691.626 L1009.94 691.626 L1010.5 691.626 L1011.06 691.626 L1011.62 691.626 L1012.18 691.626 L1012.73 691.626 L1013.29 691.626 L1013.85 691.626 L1014.41 691.626 L1014.97 691.626 L1015.53 691.626 L1016.09 691.626 L1016.65 691.626 L1017.21 691.626 L1017.77 691.626 L1018.33 691.626 L1018.89 691.626 L1019.45 691.626 L1020.01 691.626 L1020.56 691.626 L1021.12 691.626 L1021.68 691.626 L1022.24 691.626 L1022.8 691.626 L1023.36 691.626 L1023.92 691.626 L1024.48 691.626 L1025.04 691.626 L1025.6 691.626 L1026.16 691.626 L1026.72 691.626 L1027.28 691.626 L1027.83 691.626 L1028.39 691.626 L1028.95 691.626 L1029.51 691.626 L1030.07 691.626 L1030.63 691.626 L1031.19 691.626 L1031.75 691.626 L1032.31 691.626 L1032.87 691.626 L1033.43 691.626 L1033.99 691.626 L1034.55 691.626 L1035.1 691.626 L1035.66 691.626 L1036.22 691.626 L1036.78 691.626 L1037.34 691.626 L1037.9 691.626 L1038.46 691.626 L1039.02 691.626 L1039.58 691.626 L1040.14 691.626 L1040.7 691.626 L1041.26 691.626 L1041.82 691.626 L1042.38 691.626 L1042.93 691.626 L1043.49 691.626 L1044.05 691.626 L1044.61 691.626 L1045.17 691.626 L1045.73 691.626 L1046.29 691.626 L1046.85 691.626 L1047.41 691.626 L1047.97 691.626 L1048.53 691.626 L1049.09 691.626 L1049.65 691.626 L1050.2 691.626 L1050.76 691.626 L1051.32 691.626 L1051.88 691.626 L1052.44 691.626 L1053 691.626 L1053.56 691.626 L1054.12 691.626 L1054.68 691.626 L1055.24 691.626 L1055.8 691.626 L1056.36 691.626 L1056.92 691.626 L1057.48 691.626 L1058.03 691.626 L1058.59 691.626 L1059.15 691.626 L1059.71 691.626 L1060.27 691.626 L1060.83 691.626 L1061.39 691.626 L1061.95 691.626 L1062.51 691.626 L1063.07 691.626 L1063.63 691.626 L1064.19 691.626 L1064.75 691.626 L1065.3 691.626 L1065.86 691.626 L1066.42 691.626 L1066.98 691.626 L1067.54 691.626 L1068.1 691.626 L1068.66 691.626 L1069.22 691.626 L1069.78 691.626 L1070.34 691.626 L1070.9 691.626 L1071.46 691.626 L1072.02 691.626 L1072.57 691.626 L1073.13 691.626 L1073.69 691.626 L1074.25 691.626 L1074.81 691.626 L1075.37 691.626 L1075.93 691.626 L1076.49 691.626 L1077.05 691.626 L1077.61 691.626 L1078.17 691.626 L1078.73 691.626 L1079.29 691.626 L1079.85 691.626 L1080.4 691.626 L1080.96 691.626 L1081.52 691.626 L1082.08 691.626 L1082.64 691.626 L1083.2 691.626 L1083.76 691.626 L1084.32 691.626 L1084.88 691.626 L1085.44 691.626 L1086 691.626 L1086.56 691.626 L1087.12 691.626 L1087.67 691.626 L1088.23 691.626 L1088.79 691.626 L1089.35 691.626 L1089.91 691.626 L1090.47 691.626 L1091.03 691.626 L1091.59 691.626 L1092.15 691.626 L1092.71 691.626 L1093.27 691.626 L1093.83 691.626 L1094.39 691.626 L1094.94 691.626 L1095.5 691.626 L1096.06 691.626 L1096.62 691.626 L1097.18 691.626 L1097.74 691.626 L1098.3 691.626 L1098.86 691.626 L1099.42 691.626 L1099.98 691.626 L1100.54 691.626 L1101.1 691.626 L1101.66 691.626 L1102.22 691.626 L1102.77 691.626 L1103.33 691.626 L1103.89 691.626 L1104.45 691.626 L1105.01 691.626 L1105.57 691.626 L1106.13 691.626 L1106.69 691.626 L1107.25 691.626 L1107.81 691.626 L1108.37 691.626 L1108.93 691.626 L1109.49 691.626 L1110.04 691.626 L1110.6 691.626 L1111.16 691.626 L1111.72 691.626 L1112.28 691.626 L1112.84 691.626 L1113.4 691.626 L1113.96 691.626 L1114.52 691.626 L1115.08 691.626 L1115.64 691.626 L1116.2 691.626 L1116.76 691.626 L1117.31 691.626 L1117.87 691.626 L1118.43 691.626 L1118.99 691.626 L1119.55 691.626 L1120.11 691.626 L1120.67 691.626 L1121.23 691.626 L1121.79 691.626 L1122.35 691.626 L1122.91 691.626 L1123.47 691.626 L1124.03 691.626 L1124.59 691.626 L1125.14 691.626 L1125.7 691.626 L1126.26 691.626 L1126.82 691.626 L1127.38 691.626 L1127.94 691.626 L1128.5 691.626 L1129.06 691.626 L1129.62 691.626 L1130.18 691.626 L1130.74 691.626 L1131.3 691.626 L1131.86 691.626 L1132.41 691.626 L1132.97 691.626 L1133.53 691.626 L1134.09 691.626 L1134.65 691.626 L1135.21 691.626 L1135.77 691.626 L1136.33 691.626 L1136.89 691.626 L1137.45 691.626 L1138.01 691.626 L1138.57 691.626 L1139.13 691.626 L1139.68 691.626 L1140.24 691.626 L1140.8 691.626 L1141.36 691.626 L1141.92 691.626 L1142.48 691.626 L1143.04 691.626 L1143.6 691.626 L1144.16 691.626 L1144.72 691.626 L1145.28 691.626 L1145.84 691.626 L1146.4 691.626 L1146.96 691.626 L1147.51 691.626 L1148.07 691.626 L1148.63 691.626 L1149.19 691.626 L1149.75 691.626 L1150.31 691.626 L1150.87 691.626 L1151.43 691.626 L1151.99 691.626 L1152.55 691.626 L1153.11 691.626 L1153.67 691.626 L1154.23 691.626 L1154.78 691.626 L1155.34 691.626 L1155.9 691.626 L1156.46 691.626 L1157.02 691.626 L1157.58 691.626 L1158.14 691.626 L1158.7 691.626 L1159.26 691.626 L1159.82 691.626 L1160.38 691.626 L1160.94 691.626 L1161.5 691.626 L1162.05 691.626 L1162.61 691.626 L1163.17 691.626 L1163.73 691.626 L1164.29 691.626 L1164.85 691.626 L1165.41 691.626 L1165.97 691.626 L1166.53 691.626 L1167.09 691.626 L1167.65 691.626 L1168.21 691.626 L1168.77 691.626 L1169.33 691.626 L1169.88 691.626 L1170.44 691.626 L1171 691.626 L1171.56 691.626 L1172.12 691.626 L1172.68 691.626 L1173.24 691.626 L1173.8 691.626 L1174.36 691.626 L1174.92 691.626 L1175.48 691.626 L1176.04 691.626 L1176.6 691.626 L1177.15 691.626 L1177.71 691.626 L1178.27 691.626 L1178.83 691.626 L1179.39 691.626 L1179.95 691.626 L1180.51 691.626 L1181.07 691.626 L1181.63 691.626 L1182.19 691.626 L1182.75 691.626 L1183.31 691.626 L1183.87 691.626 L1184.43 691.626 L1184.98 691.626 L1185.54 691.626 L1186.1 691.626 L1186.66 691.626 L1187.22 691.626 L1187.78 691.626 L1188.34 691.626 L1188.9 691.626 L1189.46 691.626 L1190.02 691.626 L1190.58 691.626 L1191.14 691.626 L1191.7 691.626 L1192.25 691.626 L1192.81 691.626 L1193.37 691.626 L1193.93 691.626 L1194.49 691.626 L1195.05 691.626 L1195.61 691.626 L1196.17 691.626 L1196.73 691.626 L1197.29 691.626 L1197.85 691.626 L1198.41 691.626 L1198.97 691.626 L1199.52 691.626 L1200.08 691.626 L1200.64 691.626 L1201.2 691.626 L1201.76 691.626 L1202.32 691.626 L1202.88 691.626 L1203.44 691.626 L1204 691.626 L1204.56 691.626 L1205.12 691.626 L1205.68 691.626 L1206.24 691.626 L1206.8 691.626 L1207.35 691.626 L1207.91 691.626 L1208.47 691.626 L1209.03 691.626 L1209.59 691.626 L1210.15 691.626 L1210.71 691.626 L1211.27 691.626 L1211.83 691.626 L1212.39 691.626 L1212.95 691.626 L1213.51 691.626 L1214.07 691.626 L1214.62 691.626 L1215.18 691.626 L1215.74 691.626 L1216.3 691.626 L1216.86 691.626 L1217.42 691.626 L1217.98 691.626 L1218.54 691.626 L1219.1 691.626 L1219.66 691.626 L1220.22 691.626 L1220.78 691.626 L1221.34 691.626 L1221.89 691.626 L1222.45 691.626 L1223.01 691.626 L1223.57 691.626 L1224.13 691.626 L1224.69 691.626 L1225.25 691.626 L1225.81 691.626 L1226.37 691.626 L1226.93 691.626 L1227.49 691.626 L1228.05 691.626 L1228.61 691.626 L1229.17 691.626 L1229.72 691.626 L1230.28 691.626 L1230.84 691.626 L1231.4 691.626 L1231.96 691.626 L1232.52 691.626 L1233.08 691.626 L1233.64 691.626 L1234.2 691.626 L1234.76 691.626 L1235.32 691.626 L1235.88 691.626 L1236.44 691.626 L1236.99 691.626 L1237.55 691.626 L1238.11 691.626 L1238.67 691.626 L1239.23 691.626 L1239.79 691.626 L1240.35 691.626 L1240.91 691.626 L1241.47 691.626 L1242.03 691.626 L1242.59 691.626 L1243.15 691.626 L1243.71 691.626 L1244.26 691.626 L1244.82 691.626 L1245.38 691.626 L1245.94 691.626 L1246.5 691.626 L1247.06 691.626 L1247.62 691.626 L1248.18 691.626 L1248.74 691.626 L1249.3 691.626 L1249.86 691.626 L1250.42 691.626 L1250.98 691.626 L1251.54 691.626 L1252.09 691.626 L1252.65 691.626 L1253.21 691.626 L1253.77 691.626 L1254.33 691.626 L1254.89 691.626 L1255.45 691.626 L1256.01 691.626 L1256.57 691.626 L1257.13 691.626 L1257.69 691.626 L1258.25 691.626 L1258.81 691.626 L1259.36 691.626 L1259.92 691.626 L1260.48 691.626 L1261.04 691.626 L1261.6 691.626 L1262.16 691.626 L1262.72 691.626 L1263.28 691.626 L1263.84 691.626 L1264.4 691.626 L1264.96 691.626 L1265.52 691.626 L1266.08 691.626 L1266.63 691.626 L1267.19 691.626 L1267.75 691.626 L1268.31 691.626 L1268.87 691.626 L1269.43 691.626 L1269.99 691.626 L1270.55 691.626 L1271.11 691.626 L1271.67 691.626 L1272.23 691.626 L1272.79 691.626 L1273.35 691.626 L1273.91 691.626 L1274.46 691.626 L1275.02 691.626 L1275.58 691.626 L1276.14 691.626 L1276.7 691.626 L1277.26 691.626 L1277.82 691.626 L1278.38 691.626 L1278.94 691.626 L1279.5 691.626 L1280.06 691.626 L1280.62 691.626 L1281.18 691.626 L1281.73 691.626 L1282.29 691.626 L1282.85 691.626 L1283.41 691.626 L1283.97 691.626 L1284.53 691.626 L1285.09 691.626 L1285.65 691.626 L1286.21 691.626 L1286.77 691.626 L1287.33 691.626 L1287.89 691.626 L1288.45 691.626 L1289 691.626 L1289.56 691.626 L1290.12 691.626 L1290.68 691.626 L1291.24 691.626 L1291.8 691.626 L1292.36 691.626 L1292.92 691.626 L1293.48 691.626 L1294.04 691.626 L1294.6 691.626 L1295.16 691.626 L1295.72 691.626 L1296.28 691.626 L1296.83 691.626 L1297.39 691.626 L1297.95 691.626 L1298.51 691.626 L1299.07 691.626 L1299.63 691.626 L1300.19 691.626 L1300.75 691.626 L1301.31 691.626 L1301.87 691.626 L1302.43 691.626 L1302.99 691.626 L1303.55 691.626 L1304.1 691.626 L1304.66 691.626 L1305.22 691.626 L1305.78 691.626 L1306.34 691.626 L1306.9 691.626 L1307.46 691.626 L1308.02 691.626 L1308.58 691.626 L1309.14 691.626 L1309.7 691.626 L1310.26 691.626 L1310.82 691.626 L1311.38 691.626 L1311.93 691.626 L1312.49 691.626 L1313.05 691.626 L1313.61 691.626 L1314.17 691.626 L1314.73 691.626 L1315.29 691.626 L1315.85 691.626 L1316.41 691.626 L1316.97 691.626 L1317.53 691.626 L1318.09 691.626 L1318.65 691.626 L1319.2 691.626 L1319.76 691.626 L1320.32 691.626 L1320.88 691.626 L1321.44 691.626 L1322 691.626 L1322.56 691.626 L1323.12 691.626 L1323.68 691.626 L1324.24 691.626 L1324.8 691.626 L1325.36 691.626 L1325.92 691.626 L1326.47 691.626 L1327.03 691.626 L1327.59 691.626 L1328.15 691.626 L1328.71 691.626 L1329.27 691.626 L1329.83 691.626 L1330.39 691.626 L1330.95 691.626 L1331.51 691.626 L1332.07 691.626 L1332.63 691.626 L1333.19 691.626 L1333.75 691.626 L1334.3 691.626 L1334.86 691.626 L1335.42 691.626 L1335.98 691.626 L1336.54 691.626 L1337.1 691.626 L1337.66 691.626 L1338.22 691.626 L1338.78 691.626 L1339.34 691.626 L1339.9 691.626 L1340.46 691.626 L1341.02 691.626 L1341.57 691.626 L1342.13 691.626 L1342.69 691.626 L1343.25 691.626 L1343.81 691.626 L1344.37 691.626 L1344.93 691.626 L1345.49 691.626 L1346.05 691.626 L1346.61 691.626 L1347.17 691.626 L1347.73 691.626 L1348.29 691.626 L1348.84 691.626 L1349.4 691.626 L1349.96 691.626 L1350.52 691.626 L1351.08 691.626 L1351.64 691.626 L1352.2 691.626 L1352.76 691.626 L1353.32 691.626 L1353.88 691.626 L1354.44 691.626 L1355 691.626 L1355.56 691.626 L1356.12 691.626 L1356.67 691.626 L1357.23 691.626 L1357.79 691.626 L1358.35 691.626 L1358.91 691.626 L1359.47 691.626 L1360.03 691.626 L1360.59 691.626 L1361.15 691.626 L1361.71 691.626 L1362.27 691.626 L1362.83 691.626 L1363.39 691.626 L1363.94 691.626 L1364.5 691.626 L1365.06 691.626 L1365.62 691.626 L1366.18 691.626 L1366.74 691.626 L1367.3 691.626 L1367.86 691.626 L1368.42 691.626 L1368.98 691.626 L1369.54 691.626 L1370.1 691.626 L1370.66 691.626 L1371.21 691.626 L1371.77 691.626 L1372.33 691.626 L1372.89 691.626 L1373.45 691.626 L1374.01 691.626 L1374.57 691.626 L1375.13 691.626 L1375.69 691.626 L1376.25 691.626 L1376.81 691.626 L1377.37 691.626 L1377.93 691.626 L1378.49 691.626 L1379.04 691.626 L1379.6 691.626 L1380.16 691.626 L1380.72 691.626 L1381.28 691.626 L1381.84 691.626 L1382.4 691.626 L1382.96 691.626 L1383.52 691.626 L1384.08 691.626 L1384.64 691.626 L1385.2 691.626 L1385.76 691.626 L1386.31 691.626 L1386.87 691.626 L1387.43 691.626 L1387.99 691.626 L1388.55 691.626 L1389.11 691.626 L1389.67 691.626 L1390.23 691.626 L1390.79 691.626 L1391.35 691.626 L1391.91 691.626 L1392.47 691.626 L1393.03 691.626 L1393.58 691.626 L1394.14 691.626 L1394.7 691.626 L1395.26 691.626 L1395.82 691.626 L1396.38 691.626 L1396.94 691.626 L1397.5 691.626 L1398.06 691.626 L1398.62 691.626 L1399.18 691.626 L1399.74 691.626 L1400.3 691.626 L1400.86 691.626 L1401.41 691.626 L1401.97 691.626 L1402.53 691.626 L1403.09 691.626 L1403.65 691.626 L1404.21 691.626 L1404.77 691.626 L1405.33 691.626 L1405.89 691.626 L1406.45 691.626 L1407.01 691.626 L1407.57 691.626 L1408.13 691.626 L1408.68 691.626 L1409.24 691.626 L1409.8 691.626 L1410.36 691.626 L1410.92 691.626 L1411.48 691.626 L1412.04 691.626 L1412.6 691.626 L1413.16 691.626 L1413.72 691.626 L1414.28 691.626 L1414.84 691.626 L1415.4 691.626 L1415.95 691.626 L1416.51 691.626 L1417.07 691.626 L1417.63 691.626 L1418.19 691.626 L1418.75 691.626 L1419.31 691.626 L1419.87 691.626 L1420.43 691.626 L1420.99 691.626 L1421.55 691.626 L1422.11 691.626 L1422.67 691.626 L1423.23 691.626 L1423.78 691.626 L1424.34 691.626 L1424.9 691.626 L1425.46 691.626 L1426.02 691.626 L1426.58 691.626 L1427.14 691.626 L1427.7 691.626 L1428.26 691.626 L1428.82 691.626 L1429.38 691.626 L1429.94 691.626 L1430.5 691.626 L1431.05 691.626 L1431.61 691.626 L1432.17 691.626 L1432.73 691.626 L1433.29 691.626 L1433.85 691.626 L1434.41 691.626 L1434.97 691.626 L1435.53 691.626 L1436.09 691.626 L1436.65 691.626 L1437.21 691.626 L1437.77 691.626 L1438.33 691.626 L1438.88 691.626 L1439.44 691.626 L1440 691.626 L1440.56 691.626 L1441.12 691.626 L1441.68 691.626 L1442.24 691.626 L1442.8 691.626 L1443.36 691.626 L1443.92 691.626 L1444.48 691.626 L1445.04 691.626 L1445.6 691.626 L1446.15 691.626 L1446.71 691.626 L1447.27 691.626 L1447.83 691.626 L1448.39 691.626 L1448.95 691.626 L1449.51 691.626 L1450.07 691.626 L1450.63 691.626 L1451.19 691.626 L1451.75 691.626 L1452.31 691.626 L1452.87 691.626 L1453.42 691.626 L1453.98 691.626 L1454.54 691.626 L1455.1 691.626 L1455.66 691.626 L1456.22 691.626 L1456.78 691.626 L1457.34 691.626 L1457.9 691.626 L1458.46 691.626 L1459.02 691.626 L1459.58 691.626 L1460.14 691.626 L1460.7 691.626 L1461.25 691.626 L1461.81 691.626 L1462.37 691.626 L1462.93 691.626 L1463.49 691.626 L1464.05 691.626 L1464.61 691.626 L1465.17 691.626 L1465.73 691.626 L1466.29 691.626 L1466.85 691.626 L1467.41 691.626 L1467.97 691.626 L1468.52 691.626 L1469.08 691.626 L1469.64 691.626 L1470.2 691.626 L1470.76 691.626 L1471.32 691.626 L1471.88 691.626 L1472.44 691.626 L1473 691.626 L1473.56 691.626 L1474.12 691.626 L1474.68 691.626 L1475.24 691.626 L1475.79 691.626 L1476.35 691.626 L1476.91 691.626 L1477.47 691.626 L1478.03 691.626 L1478.59 691.626 L1479.15 691.626 L1479.71 691.626 L1480.27 691.626 L1480.83 691.626 L1481.39 691.626 L1481.95 691.626 L1482.51 691.626 L1483.07 691.626 L1483.62 691.626 L1484.18 691.626 L1484.74 691.626 L1485.3 691.626 L1485.86 691.626 L1486.42 691.626 L1486.98 691.626 L1487.54 691.626 L1488.1 691.626 L1488.66 691.626 L1489.22 691.626 L1489.78 691.626 L1490.34 691.626 L1490.89 691.626 L1491.45 691.626 L1492.01 691.626 L1492.57 691.626 L1493.13 691.626 L1493.69 691.626 L1494.25 691.626 L1494.81 691.626 L1495.37 691.626 L1495.93 691.626 L1496.49 691.626 L1497.05 691.626 L1497.61 691.626 L1498.16 691.626 L1498.72 691.626 L1499.28 691.626 L1499.84 691.626 L1500.4 691.626 L1500.96 691.626 L1501.52 691.626 L1502.08 691.626 L1502.64 691.626 L1503.2 691.626 L1503.76 691.626 L1504.32 691.626 L1504.88 691.626 L1505.44 691.626 L1505.99 691.626 L1506.55 691.626 L1507.11 691.626 L1507.67 691.626 L1508.23 691.626 L1508.79 691.626 L1509.35 691.626 L1509.91 691.626 L1510.47 691.626 L1511.03 691.626 L1511.59 691.626 L1512.15 691.626 L1512.71 691.626 L1513.26 691.626 L1513.82 691.626 L1514.38 691.626 L1514.94 691.626 L1515.5 691.626 L1516.06 691.626 L1516.62 691.626 L1517.18 691.626 L1517.74 691.626 L1518.3 691.626 L1518.86 691.626 L1519.42 691.626 L1519.98 691.626 L1520.53 691.626 L1521.09 691.626 L1521.65 691.626 L1522.21 691.626 L1522.77 691.626 L1523.33 691.626 L1523.89 691.626 L1524.45 691.626 L1525.01 691.626 L1525.57 691.626 L1526.13 691.626 L1526.69 691.626 L1527.25 691.626 L1527.81 691.626 L1528.36 691.626 L1528.92 691.626 L1529.48 691.626 L1530.04 691.626 L1530.6 691.626 L1531.16 691.626 L1531.72 691.626 L1532.28 691.626 L1532.84 691.626 L1533.4 691.626 L1533.96 691.626 L1534.52 691.626 L1535.08 691.626 L1535.63 691.626 L1536.19 691.626 L1536.75 691.626 L1537.31 691.626 L1537.87 691.626 L1538.43 691.626 L1538.99 691.626 L1539.55 691.626 L1540.11 691.626 L1540.67 691.626 L1541.23 691.626 L1541.79 691.626 L1542.35 691.626 L1542.9 691.626 L1543.46 691.626 L1544.02 691.626 L1544.58 691.626 L1545.14 691.626 L1545.7 691.626 L1546.26 691.626 L1546.82 691.626 L1547.38 691.626 L1547.94 691.626 L1548.5 691.626 L1549.06 691.626 L1549.62 691.626 L1550.18 691.626 L1550.73 691.626 L1551.29 691.626 L1551.85 691.626 L1552.41 691.626 L1552.97 691.626 L1553.53 691.626 L1554.09 691.626 L1554.65 691.626 L1555.21 691.626 L1555.77 691.626 L1556.33 691.626 L1556.89 691.626 L1557.45 691.626 L1558 691.626 L1558.56 691.626 L1559.12 691.626 L1559.68 691.626 L1560.24 691.626 L1560.8 691.626 L1561.36 691.626 L1561.92 691.626 L1562.48 691.626 L1563.04 691.626 L1563.6 691.626 L1564.16 691.626 L1564.72 691.626 L1565.28 691.626 L1565.83 691.626 L1566.39 691.626 L1566.95 691.626 L1567.51 691.626 L1568.07 691.626 L1568.63 691.626 L1569.19 691.626 L1569.75 691.626 L1570.31 691.626 L1570.87 691.626 L1571.43 691.626 L1571.99 691.626 L1572.55 691.626 L1573.1 691.626 L1573.66 691.626 L1574.22 691.626 L1574.78 691.626 L1575.34 691.626 L1575.9 691.626 L1576.46 691.626 L1577.02 691.626 L1577.58 691.626 L1578.14 691.626 L1578.7 691.626 L1579.26 691.626 L1579.82 691.626 L1580.37 691.626 L1580.93 691.626 L1581.49 691.626 L1582.05 691.626 L1582.61 691.626 L1583.17 691.626 L1583.73 691.626 L1584.29 691.626 L1584.85 691.626 L1585.41 691.626 L1585.97 691.626 L1586.53 691.626 L1587.09 691.626 L1587.65 691.626 L1588.2 691.626 L1588.76 691.626 L1589.32 691.626 L1589.88 691.626 L1590.44 691.626 L1591 691.626 L1591.56 691.626 L1592.12 691.626 L1592.68 691.626 L1593.24 691.626 L1593.8 691.626 L1594.36 691.626 L1594.92 691.626 L1595.47 691.626 L1596.03 691.626 L1596.59 691.626 L1597.15 691.626 L1597.71 691.626 L1598.27 691.626 L1598.83 691.626 L1599.39 691.626 L1599.95 691.626 L1600.51 691.626 L1601.07 691.626 L1601.63 691.626 L1602.19 691.626 L1602.74 691.626 L1603.3 691.626 L1603.86 691.626 L1604.42 691.626 L1604.98 691.626 L1605.54 691.626 L1606.1 691.626 L1606.66 691.626 L1607.22 691.626 L1607.78 691.626 L1608.34 691.626 L1608.9 691.626 L1609.46 691.626 L1610.02 691.626 L1610.57 691.626 L1611.13 691.626 L1611.69 691.626 L1612.25 691.626 L1612.81 691.626 L1613.37 691.626 L1613.93 691.626 L1614.49 691.626 L1615.05 691.626 L1615.61 691.626 L1616.17 691.626 L1616.73 691.626 L1617.29 691.626 L1617.84 691.626 L1618.4 691.626 L1618.96 691.626 L1619.52 691.626 L1620.08 691.626 L1620.64 691.626 L1621.2 691.626 L1621.76 691.626 L1622.32 691.626 L1622.88 691.626 L1623.44 691.626 L1624 691.626 L1624.56 691.626 L1625.11 691.626 L1625.67 691.626 L1626.23 691.626 L1626.79 691.626 L1627.35 691.626 L1627.91 691.626 L1628.47 691.626 L1629.03 691.626 L1629.59 691.626 L1630.15 691.626 L1630.71 691.626 L1631.27 691.626 L1631.83 691.626 L1632.39 691.626 L1632.94 691.626 L1633.5 691.626 L1634.06 691.626 L1634.62 691.626 L1635.18 691.626 L1635.74 691.626 L1636.3 691.626 L1636.86 691.626 L1637.42 691.626 L1637.98 691.626 L1638.54 691.626 L1639.1 691.626 L1639.66 691.626 L1640.21 691.626 L1640.77 691.626 L1641.33 691.626 L1641.89 691.626 L1642.45 691.626 L1643.01 691.626 L1643.57 691.626 L1644.13 691.626 L1644.69 691.626 L1645.25 691.626 L1645.81 691.626 L1646.37 691.626 L1646.93 691.626 L1647.48 691.626 L1648.04 691.626 L1648.6 691.626 L1649.16 691.626 L1649.72 691.626 L1650.28 691.626 L1650.84 691.626 L1651.4 691.626 L1651.96 691.626 L1652.52 691.626 L1653.08 691.626 L1653.64 691.626 L1654.2 691.626 L1654.76 691.626 L1655.31 691.626 L1655.87 691.626 L1656.43 691.626 L1656.99 691.626 L1657.55 691.626 L1658.11 691.626 L1658.67 691.626 L1659.23 691.626 L1659.79 691.626 L1660.35 691.626 L1660.91 691.626 L1661.47 691.626 L1662.03 691.626 L1662.58 691.626 L1663.14 691.626 L1663.7 691.626 L1664.26 691.626 L1664.82 691.626 L1665.38 691.626 L1665.94 691.626 L1666.5 691.626 L1667.06 691.626 L1667.62 691.626 L1668.18 691.626 L1668.74 691.626 L1669.3 691.626 L1669.85 691.626 L1670.41 691.626 L1670.97 691.626 L1671.53 691.626 L1672.09 691.626 L1672.65 691.626 L1673.21 691.626 L1673.77 691.626 L1674.33 691.626 L1674.89 691.626 L1675.45 691.626 L1676.01 691.626 L1676.57 691.626 L1677.13 691.626 L1677.68 691.626 L1678.24 691.626 L1678.8 691.626 L1679.36 691.626 L1679.92 691.626 L1680.48 691.626 L1681.04 691.626 L1681.6 691.626 L1682.16 691.626 L1682.72 691.626 L1683.28 691.626 L1683.84 691.626 L1684.4 691.626 L1684.95 691.626 L1685.51 691.626 L1686.07 691.626 L1686.63 691.626 L1687.19 691.626 L1687.75 691.626 L1688.31 691.626 L1688.87 691.626 L1689.43 691.626 L1689.99 691.626 L1690.55 691.626 L1691.11 691.626 L1691.67 691.626 L1692.23 691.626 L1692.78 691.626 L1693.34 691.626 L1693.9 691.626 L1694.46 691.626 L1695.02 691.626 L1695.58 691.626 L1696.14 691.626 L1696.7 691.626 L1697.26 691.626 L1697.82 691.626 L1698.38 691.626 L1698.94 691.626 L1699.5 691.626 L1700.05 691.626 L1700.61 691.626 L1701.17 691.626 L1701.73 691.626 L1702.29 691.626 L1702.85 691.626 L1703.41 691.626 L1703.97 691.626 L1704.53 691.626 L1705.09 691.626 L1705.65 691.626 L1706.21 691.626 L1706.77 691.626 L1707.32 691.626 L1707.88 691.626 L1708.44 691.626 L1709 691.626 L1709.56 691.626 L1710.12 691.626 L1710.68 691.626 L1711.24 691.626 L1711.8 691.626 L1712.36 691.626 L1712.92 691.626 L1713.48 691.626 L1714.04 691.626 L1714.6 691.626 L1715.15 691.626 L1715.71 691.626 L1716.27 691.626 L1716.83 691.626 L1717.39 691.626 L1717.95 691.626 L1718.51 691.626 L1719.07 691.626 L1719.63 691.626 L1720.19 691.626 L1720.75 691.626 L1721.31 691.626 L1721.87 691.626 L1722.42 691.626 L1722.98 691.626 L1723.54 691.626 L1724.1 691.626 L1724.66 691.626 L1725.22 691.626 L1725.78 691.626 L1726.34 691.626 L1726.9 691.626 L1727.46 691.626 L1728.02 691.626 L1728.58 691.626 L1729.14 691.626 L1729.69 691.626 L1730.25 691.626 L1730.81 691.626 L1731.37 691.626 L1731.93 691.626 L1732.49 691.626 L1733.05 691.626 L1733.61 691.626 L1734.17 691.626 L1734.73 691.626 L1735.29 691.626 L1735.85 691.626 L1736.41 691.626 L1736.97 691.626 L1737.52 691.626 L1738.08 691.626 L1738.64 691.626 L1739.2 691.626 L1739.76 691.626 L1740.32 691.626 L1740.88 691.626 L1741.44 691.626 L1742 691.626 L1742.56 691.626 L1743.12 691.626 L1743.68 691.626 L1744.24 691.626 L1744.79 691.626 L1745.35 691.626 L1745.91 691.626 L1746.47 691.626 L1747.03 691.626 L1747.59 691.626 L1748.15 691.626 L1748.71 691.626 L1749.27 691.626 L1749.83 691.626 L1750.39 691.626 L1750.95 691.626 L1751.51 691.626 L1752.06 691.626 L1752.62 691.626 L1753.18 691.626 L1753.74 691.626 L1754.3 691.626 L1754.86 691.626 L1755.42 691.626 L1755.98 691.626 L1756.54 691.626 L1757.1 691.626 L1757.66 691.626 L1758.22 691.626 L1758.78 691.626 L1759.34 691.626 L1759.89 691.626 L1760.45 691.626 L1761.01 691.626 L1761.57 691.626 L1762.13 691.626 L1762.69 691.626 L1763.25 691.626 L1763.81 691.626 L1764.37 691.626 L1764.93 691.626 L1765.49 691.626 L1766.05 691.626 L1766.61 691.626 L1767.16 691.626 L1767.72 691.626 L1768.28 691.626 L1768.84 691.626 L1769.4 691.626 L1769.96 691.626 L1770.52 691.626 L1771.08 691.626 L1771.64 691.626 L1772.2 691.626 L1772.76 691.626 L1773.32 691.626 L1773.88 691.626 L1774.43 691.626 L1774.99 691.626 L1775.55 691.626 L1776.11 691.626 L1776.67 691.626 L1777.23 691.626 L1777.79 691.626 L1778.35 691.626 L1778.91 691.626 L1779.47 691.626 L1780.03 691.626 L1780.59 691.626 L1781.15 691.626 L1781.71 691.626 L1782.26 691.626 L1782.82 691.626 L1783.38 691.626 L1783.94 691.626 L1784.5 691.626 L1785.06 691.626 L1785.62 691.626 L1786.18 691.626 L1786.74 691.626 L1787.3 691.626 L1787.86 691.626 L1788.42 691.626 L1788.98 691.626 L1789.53 691.626 L1790.09 691.626 L1790.65 691.626 L1791.21 691.626 L1791.77 691.626 L1792.33 691.626 L1792.89 691.626 L1793.45 691.626 L1794.01 691.626 L1794.57 691.626 L1795.13 691.626 L1795.69 691.626 L1796.25 691.626 L1796.8 691.626 L1797.36 691.626 L1797.92 691.626 L1798.48 691.626 L1799.04 691.626 L1799.6 691.626 L1800.16 691.626 L1800.72 691.626 L1801.28 691.626 L1801.84 691.626 L1802.4 691.626 L1802.96 691.626 L1803.52 691.626 L1804.08 691.626 L1804.63 691.626 L1805.19 691.626 L1805.75 691.626 L1806.31 691.626 L1806.87 691.626 L1807.43 691.626 L1807.99 691.626 L1808.55 691.626 L1809.11 691.626 L1809.67 691.626 L1810.23 691.626 L1810.79 691.626 L1811.35 691.626 L1811.9 691.626 L1812.46 691.626 L1813.02 691.626 L1813.58 691.626 L1814.14 691.626 L1814.7 691.626 L1815.26 691.626 L1815.82 691.626 L1816.38 691.626 L1816.94 691.626 L1817.5 691.626 L1818.06 691.626 L1818.62 691.626 L1819.18 691.626 L1819.73 691.626 L1820.29 691.626 L1820.85 691.626 L1821.41 691.626 L1821.97 691.626 L1822.53 691.626 L1823.09 691.626 L1823.65 691.626 L1824.21 691.626 L1824.77 691.626 L1825.33 691.626 L1825.89 691.626 L1826.45 691.626 L1827 691.626 L1827.56 691.626 L1828.12 691.626 L1828.68 691.626 L1829.24 691.626 L1829.8 691.626 L1830.36 691.626 L1830.92 691.626 L1831.48 691.626 L1832.04 691.626 L1832.6 691.626 L1833.16 691.626 L1833.72 691.626 L1834.27 691.626 L1834.83 691.626 L1835.39 691.626 L1835.95 691.626 L1836.51 691.626 L1837.07 691.626 L1837.63 691.626 L1838.19 691.626 L1838.19 680.644 L1837.63 680.644 L1837.07 680.644 L1836.51 680.644 L1835.95 680.644 L1835.39 680.644 L1834.83 680.644 L1834.27 680.644 L1833.72 680.644 L1833.16 680.644 L1832.6 680.644 L1832.04 680.644 L1831.48 680.644 L1830.92 680.644 L1830.36 680.644 L1829.8 680.644 L1829.24 680.644 L1828.68 680.644 L1828.12 680.644 L1827.56 680.644 L1827 680.644 L1826.45 680.644 L1825.89 680.644 L1825.33 680.644 L1824.77 680.644 L1824.21 680.644 L1823.65 680.644 L1823.09 680.644 L1822.53 680.644 L1821.97 680.644 L1821.41 680.644 L1820.85 680.644 L1820.29 680.644 L1819.73 680.644 L1819.18 680.644 L1818.62 680.644 L1818.06 680.644 L1817.5 680.644 L1816.94 680.644 L1816.38 680.644 L1815.82 680.644 L1815.26 680.644 L1814.7 680.644 L1814.14 680.644 L1813.58 680.644 L1813.02 680.644 L1812.46 680.644 L1811.9 680.644 L1811.35 680.644 L1810.79 680.644 L1810.23 680.644 L1809.67 680.644 L1809.11 680.644 L1808.55 680.644 L1807.99 680.644 L1807.43 680.644 L1806.87 680.644 L1806.31 680.644 L1805.75 680.644 L1805.19 680.644 L1804.63 680.644 L1804.08 680.644 L1803.52 680.644 L1802.96 680.644 L1802.4 680.644 L1801.84 680.644 L1801.28 680.644 L1800.72 680.644 L1800.16 680.644 L1799.6 680.644 L1799.04 680.644 L1798.48 680.644 L1797.92 680.644 L1797.36 680.644 L1796.8 680.644 L1796.25 680.644 L1795.69 680.644 L1795.13 680.644 L1794.57 680.644 L1794.01 680.644 L1793.45 680.644 L1792.89 680.644 L1792.33 680.644 L1791.77 680.644 L1791.21 680.644 L1790.65 680.644 L1790.09 680.644 L1789.53 680.644 L1788.98 680.644 L1788.42 680.644 L1787.86 680.644 L1787.3 680.644 L1786.74 680.644 L1786.18 680.644 L1785.62 680.644 L1785.06 680.644 L1784.5 680.644 L1783.94 680.644 L1783.38 680.644 L1782.82 680.644 L1782.26 680.644 L1781.71 680.644 L1781.15 680.644 L1780.59 680.644 L1780.03 680.644 L1779.47 680.644 L1778.91 680.644 L1778.35 680.644 L1777.79 680.644 L1777.23 680.644 L1776.67 680.644 L1776.11 680.644 L1775.55 680.644 L1774.99 680.644 L1774.43 680.644 L1773.88 680.644 L1773.32 680.644 L1772.76 680.644 L1772.2 680.644 L1771.64 680.644 L1771.08 680.644 L1770.52 680.644 L1769.96 680.644 L1769.4 680.644 L1768.84 680.644 L1768.28 680.644 L1767.72 680.644 L1767.16 680.644 L1766.61 680.644 L1766.05 680.644 L1765.49 680.644 L1764.93 680.644 L1764.37 680.644 L1763.81 680.644 L1763.25 680.644 L1762.69 680.644 L1762.13 680.644 L1761.57 680.644 L1761.01 680.644 L1760.45 680.644 L1759.89 680.644 L1759.34 680.644 L1758.78 680.644 L1758.22 680.644 L1757.66 680.644 L1757.1 680.644 L1756.54 680.644 L1755.98 680.644 L1755.42 680.644 L1754.86 680.644 L1754.3 680.644 L1753.74 680.644 L1753.18 680.644 L1752.62 680.644 L1752.06 680.644 L1751.51 680.644 L1750.95 680.644 L1750.39 680.644 L1749.83 680.644 L1749.27 680.644 L1748.71 680.644 L1748.15 680.644 L1747.59 680.644 L1747.03 680.644 L1746.47 680.644 L1745.91 680.644 L1745.35 680.644 L1744.79 680.644 L1744.24 680.644 L1743.68 680.644 L1743.12 680.644 L1742.56 680.644 L1742 680.644 L1741.44 680.644 L1740.88 680.644 L1740.32 680.644 L1739.76 680.644 L1739.2 680.644 L1738.64 680.644 L1738.08 680.644 L1737.52 680.644 L1736.97 680.644 L1736.41 680.644 L1735.85 680.644 L1735.29 680.644 L1734.73 680.644 L1734.17 680.644 L1733.61 680.644 L1733.05 680.644 L1732.49 680.644 L1731.93 680.644 L1731.37 680.644 L1730.81 680.644 L1730.25 680.644 L1729.69 680.644 L1729.14 680.644 L1728.58 680.644 L1728.02 680.644 L1727.46 680.644 L1726.9 680.644 L1726.34 680.644 L1725.78 680.644 L1725.22 680.644 L1724.66 680.644 L1724.1 680.644 L1723.54 680.644 L1722.98 680.644 L1722.42 680.644 L1721.87 680.644 L1721.31 680.644 L1720.75 680.644 L1720.19 680.644 L1719.63 680.644 L1719.07 680.644 L1718.51 680.644 L1717.95 680.644 L1717.39 680.644 L1716.83 680.644 L1716.27 680.644 L1715.71 680.644 L1715.15 680.644 L1714.6 680.644 L1714.04 680.644 L1713.48 680.644 L1712.92 680.644 L1712.36 680.644 L1711.8 680.644 L1711.24 680.644 L1710.68 680.644 L1710.12 680.644 L1709.56 680.644 L1709 680.644 L1708.44 680.644 L1707.88 680.644 L1707.32 680.644 L1706.77 680.644 L1706.21 680.644 L1705.65 680.644 L1705.09 680.644 L1704.53 680.644 L1703.97 680.644 L1703.41 680.644 L1702.85 680.644 L1702.29 680.644 L1701.73 680.644 L1701.17 680.644 L1700.61 680.644 L1700.05 680.644 L1699.5 680.644 L1698.94 680.644 L1698.38 680.644 L1697.82 680.644 L1697.26 680.644 L1696.7 680.644 L1696.14 680.644 L1695.58 680.644 L1695.02 680.644 L1694.46 680.644 L1693.9 680.644 L1693.34 680.644 L1692.78 680.644 L1692.23 680.644 L1691.67 680.644 L1691.11 680.644 L1690.55 680.644 L1689.99 680.644 L1689.43 680.644 L1688.87 680.644 L1688.31 680.644 L1687.75 680.644 L1687.19 680.644 L1686.63 680.644 L1686.07 680.644 L1685.51 680.644 L1684.95 680.644 L1684.4 680.644 L1683.84 680.644 L1683.28 680.644 L1682.72 680.644 L1682.16 680.644 L1681.6 680.644 L1681.04 680.644 L1680.48 680.644 L1679.92 680.644 L1679.36 680.644 L1678.8 680.644 L1678.24 680.644 L1677.68 680.644 L1677.13 680.644 L1676.57 680.644 L1676.01 680.644 L1675.45 680.644 L1674.89 680.644 L1674.33 680.644 L1673.77 680.644 L1673.21 680.644 L1672.65 680.644 L1672.09 680.644 L1671.53 680.644 L1670.97 680.644 L1670.41 680.644 L1669.85 680.644 L1669.3 680.644 L1668.74 680.644 L1668.18 680.644 L1667.62 680.644 L1667.06 680.644 L1666.5 680.644 L1665.94 680.644 L1665.38 680.644 L1664.82 680.644 L1664.26 680.644 L1663.7 680.644 L1663.14 680.644 L1662.58 680.644 L1662.03 680.644 L1661.47 680.644 L1660.91 680.644 L1660.35 680.644 L1659.79 680.644 L1659.23 680.644 L1658.67 680.644 L1658.11 680.644 L1657.55 680.644 L1656.99 680.644 L1656.43 680.644 L1655.87 680.644 L1655.31 680.644 L1654.76 680.644 L1654.2 680.644 L1653.64 680.644 L1653.08 680.644 L1652.52 680.644 L1651.96 680.644 L1651.4 680.644 L1650.84 680.644 L1650.28 680.644 L1649.72 680.644 L1649.16 680.644 L1648.6 680.644 L1648.04 680.644 L1647.48 680.644 L1646.93 680.644 L1646.37 680.644 L1645.81 680.644 L1645.25 680.644 L1644.69 680.644 L1644.13 680.644 L1643.57 680.644 L1643.01 680.644 L1642.45 680.644 L1641.89 680.644 L1641.33 680.644 L1640.77 680.644 L1640.21 680.644 L1639.66 680.644 L1639.1 680.644 L1638.54 680.644 L1637.98 680.644 L1637.42 680.644 L1636.86 680.644 L1636.3 680.644 L1635.74 680.644 L1635.18 680.644 L1634.62 680.644 L1634.06 680.644 L1633.5 680.644 L1632.94 680.644 L1632.39 680.644 L1631.83 680.644 L1631.27 680.644 L1630.71 680.644 L1630.15 680.644 L1629.59 680.644 L1629.03 680.644 L1628.47 680.644 L1627.91 680.644 L1627.35 680.644 L1626.79 680.644 L1626.23 680.644 L1625.67 680.644 L1625.11 680.644 L1624.56 680.644 L1624 680.644 L1623.44 680.644 L1622.88 680.644 L1622.32 680.644 L1621.76 680.644 L1621.2 680.644 L1620.64 680.644 L1620.08 680.644 L1619.52 680.644 L1618.96 680.644 L1618.4 680.644 L1617.84 680.644 L1617.29 680.644 L1616.73 680.644 L1616.17 680.644 L1615.61 680.644 L1615.05 680.644 L1614.49 680.644 L1613.93 680.644 L1613.37 680.644 L1612.81 680.644 L1612.25 680.644 L1611.69 680.644 L1611.13 680.644 L1610.57 680.644 L1610.02 680.644 L1609.46 680.644 L1608.9 680.644 L1608.34 680.644 L1607.78 680.644 L1607.22 680.644 L1606.66 680.644 L1606.1 680.644 L1605.54 680.644 L1604.98 680.644 L1604.42 680.644 L1603.86 680.644 L1603.3 680.644 L1602.74 680.644 L1602.19 680.644 L1601.63 680.644 L1601.07 680.644 L1600.51 680.644 L1599.95 680.644 L1599.39 680.644 L1598.83 680.644 L1598.27 680.644 L1597.71 680.644 L1597.15 680.644 L1596.59 680.644 L1596.03 680.644 L1595.47 680.644 L1594.92 680.644 L1594.36 680.644 L1593.8 680.644 L1593.24 680.644 L1592.68 680.644 L1592.12 680.644 L1591.56 680.644 L1591 680.644 L1590.44 680.644 L1589.88 680.644 L1589.32 680.644 L1588.76 680.644 L1588.2 680.644 L1587.65 680.644 L1587.09 680.644 L1586.53 680.644 L1585.97 680.644 L1585.41 680.644 L1584.85 680.644 L1584.29 680.644 L1583.73 680.644 L1583.17 680.644 L1582.61 680.644 L1582.05 680.644 L1581.49 680.644 L1580.93 680.644 L1580.37 680.644 L1579.82 680.644 L1579.26 680.644 L1578.7 680.644 L1578.14 680.644 L1577.58 680.644 L1577.02 680.644 L1576.46 680.644 L1575.9 680.644 L1575.34 680.644 L1574.78 680.644 L1574.22 680.644 L1573.66 680.644 L1573.1 680.644 L1572.55 680.644 L1571.99 680.644 L1571.43 680.644 L1570.87 680.644 L1570.31 680.644 L1569.75 680.644 L1569.19 680.644 L1568.63 680.644 L1568.07 680.644 L1567.51 680.644 L1566.95 680.644 L1566.39 680.644 L1565.83 680.644 L1565.28 680.644 L1564.72 680.644 L1564.16 680.644 L1563.6 680.644 L1563.04 680.644 L1562.48 680.644 L1561.92 680.644 L1561.36 680.644 L1560.8 680.644 L1560.24 680.644 L1559.68 680.644 L1559.12 680.644 L1558.56 680.644 L1558 680.644 L1557.45 680.644 L1556.89 680.644 L1556.33 680.644 L1555.77 680.644 L1555.21 680.644 L1554.65 680.644 L1554.09 680.644 L1553.53 680.644 L1552.97 680.644 L1552.41 680.644 L1551.85 680.644 L1551.29 680.644 L1550.73 680.644 L1550.18 680.644 L1549.62 680.644 L1549.06 680.644 L1548.5 680.644 L1547.94 680.644 L1547.38 680.644 L1546.82 680.644 L1546.26 680.644 L1545.7 680.644 L1545.14 680.644 L1544.58 680.644 L1544.02 680.644 L1543.46 680.644 L1542.9 680.644 L1542.35 680.644 L1541.79 680.644 L1541.23 680.644 L1540.67 680.644 L1540.11 680.644 L1539.55 680.644 L1538.99 680.644 L1538.43 680.644 L1537.87 680.644 L1537.31 680.644 L1536.75 680.644 L1536.19 680.644 L1535.63 680.644 L1535.08 680.644 L1534.52 680.644 L1533.96 680.644 L1533.4 680.644 L1532.84 680.644 L1532.28 680.644 L1531.72 680.644 L1531.16 680.644 L1530.6 680.644 L1530.04 680.644 L1529.48 680.644 L1528.92 680.644 L1528.36 680.644 L1527.81 680.644 L1527.25 680.644 L1526.69 680.644 L1526.13 680.644 L1525.57 680.644 L1525.01 680.644 L1524.45 680.644 L1523.89 680.644 L1523.33 680.644 L1522.77 680.644 L1522.21 680.644 L1521.65 680.644 L1521.09 680.644 L1520.53 680.644 L1519.98 680.644 L1519.42 680.644 L1518.86 680.644 L1518.3 680.644 L1517.74 680.644 L1517.18 680.644 L1516.62 680.644 L1516.06 680.644 L1515.5 680.644 L1514.94 680.644 L1514.38 680.644 L1513.82 680.644 L1513.26 680.644 L1512.71 680.644 L1512.15 680.644 L1511.59 680.644 L1511.03 680.644 L1510.47 680.644 L1509.91 680.644 L1509.35 680.644 L1508.79 680.644 L1508.23 680.644 L1507.67 680.644 L1507.11 680.644 L1506.55 680.644 L1505.99 680.644 L1505.44 680.644 L1504.88 680.644 L1504.32 680.644 L1503.76 680.644 L1503.2 680.644 L1502.64 680.644 L1502.08 680.644 L1501.52 680.644 L1500.96 680.644 L1500.4 680.644 L1499.84 680.644 L1499.28 680.644 L1498.72 680.644 L1498.16 680.644 L1497.61 680.644 L1497.05 680.644 L1496.49 680.644 L1495.93 680.644 L1495.37 680.644 L1494.81 680.644 L1494.25 680.644 L1493.69 680.644 L1493.13 680.644 L1492.57 680.644 L1492.01 680.644 L1491.45 680.644 L1490.89 680.644 L1490.34 680.644 L1489.78 680.644 L1489.22 680.644 L1488.66 680.644 L1488.1 680.644 L1487.54 680.644 L1486.98 680.644 L1486.42 680.644 L1485.86 680.644 L1485.3 680.644 L1484.74 680.644 L1484.18 680.644 L1483.62 680.644 L1483.07 680.644 L1482.51 680.644 L1481.95 680.644 L1481.39 680.644 L1480.83 680.644 L1480.27 680.644 L1479.71 680.644 L1479.15 680.644 L1478.59 680.644 L1478.03 680.644 L1477.47 680.644 L1476.91 680.644 L1476.35 680.644 L1475.79 680.644 L1475.24 680.644 L1474.68 680.644 L1474.12 680.644 L1473.56 680.644 L1473 680.644 L1472.44 680.644 L1471.88 680.644 L1471.32 680.644 L1470.76 680.644 L1470.2 680.644 L1469.64 680.644 L1469.08 680.644 L1468.52 680.644 L1467.97 680.644 L1467.41 680.644 L1466.85 680.644 L1466.29 680.644 L1465.73 680.644 L1465.17 680.644 L1464.61 680.644 L1464.05 680.644 L1463.49 680.644 L1462.93 680.644 L1462.37 680.644 L1461.81 680.644 L1461.25 680.644 L1460.7 680.644 L1460.14 680.644 L1459.58 680.644 L1459.02 680.644 L1458.46 680.644 L1457.9 680.644 L1457.34 680.644 L1456.78 680.644 L1456.22 680.644 L1455.66 680.644 L1455.1 680.644 L1454.54 680.644 L1453.98 680.644 L1453.42 680.644 L1452.87 680.644 L1452.31 680.644 L1451.75 680.644 L1451.19 680.644 L1450.63 680.644 L1450.07 680.644 L1449.51 680.644 L1448.95 680.644 L1448.39 680.644 L1447.83 680.644 L1447.27 680.644 L1446.71 680.644 L1446.15 680.644 L1445.6 680.644 L1445.04 680.644 L1444.48 680.644 L1443.92 680.644 L1443.36 680.644 L1442.8 680.644 L1442.24 680.644 L1441.68 680.644 L1441.12 680.644 L1440.56 680.644 L1440 680.644 L1439.44 680.644 L1438.88 680.644 L1438.33 680.644 L1437.77 680.644 L1437.21 680.644 L1436.65 680.644 L1436.09 680.644 L1435.53 680.644 L1434.97 680.644 L1434.41 680.644 L1433.85 680.644 L1433.29 680.644 L1432.73 680.644 L1432.17 680.644 L1431.61 680.644 L1431.05 680.644 L1430.5 680.644 L1429.94 680.644 L1429.38 680.644 L1428.82 680.644 L1428.26 680.644 L1427.7 680.644 L1427.14 680.644 L1426.58 680.644 L1426.02 680.644 L1425.46 680.644 L1424.9 680.644 L1424.34 680.644 L1423.78 680.644 L1423.23 680.644 L1422.67 680.644 L1422.11 680.644 L1421.55 680.644 L1420.99 680.644 L1420.43 680.644 L1419.87 680.644 L1419.31 680.644 L1418.75 680.644 L1418.19 680.644 L1417.63 680.644 L1417.07 680.644 L1416.51 680.644 L1415.95 680.644 L1415.4 680.644 L1414.84 680.644 L1414.28 680.644 L1413.72 680.644 L1413.16 680.644 L1412.6 680.644 L1412.04 680.644 L1411.48 680.644 L1410.92 680.644 L1410.36 680.644 L1409.8 680.644 L1409.24 680.644 L1408.68 680.644 L1408.13 680.644 L1407.57 680.644 L1407.01 680.644 L1406.45 680.644 L1405.89 680.644 L1405.33 680.644 L1404.77 680.644 L1404.21 680.644 L1403.65 680.644 L1403.09 680.644 L1402.53 680.644 L1401.97 680.644 L1401.41 680.644 L1400.86 680.644 L1400.3 680.644 L1399.74 680.644 L1399.18 680.644 L1398.62 680.644 L1398.06 680.644 L1397.5 680.644 L1396.94 680.644 L1396.38 680.644 L1395.82 680.644 L1395.26 680.644 L1394.7 680.644 L1394.14 680.644 L1393.58 680.644 L1393.03 680.644 L1392.47 680.644 L1391.91 680.644 L1391.35 680.644 L1390.79 680.644 L1390.23 680.644 L1389.67 680.644 L1389.11 680.644 L1388.55 680.644 L1387.99 680.644 L1387.43 680.644 L1386.87 680.644 L1386.31 680.644 L1385.76 680.644 L1385.2 680.644 L1384.64 680.644 L1384.08 680.644 L1383.52 680.644 L1382.96 680.644 L1382.4 680.644 L1381.84 680.644 L1381.28 680.644 L1380.72 680.644 L1380.16 680.644 L1379.6 680.644 L1379.04 680.644 L1378.49 680.644 L1377.93 680.644 L1377.37 680.644 L1376.81 680.644 L1376.25 680.644 L1375.69 680.644 L1375.13 680.644 L1374.57 680.644 L1374.01 680.644 L1373.45 680.644 L1372.89 680.644 L1372.33 680.644 L1371.77 680.644 L1371.21 680.644 L1370.66 680.644 L1370.1 680.644 L1369.54 680.644 L1368.98 680.644 L1368.42 680.644 L1367.86 680.644 L1367.3 680.644 L1366.74 680.644 L1366.18 680.644 L1365.62 680.644 L1365.06 680.644 L1364.5 680.644 L1363.94 680.644 L1363.39 680.644 L1362.83 680.644 L1362.27 680.644 L1361.71 680.644 L1361.15 680.644 L1360.59 680.644 L1360.03 680.644 L1359.47 680.644 L1358.91 680.644 L1358.35 680.644 L1357.79 680.644 L1357.23 680.644 L1356.67 680.644 L1356.12 680.644 L1355.56 680.644 L1355 680.644 L1354.44 680.644 L1353.88 680.644 L1353.32 680.644 L1352.76 680.644 L1352.2 680.644 L1351.64 680.644 L1351.08 680.644 L1350.52 680.644 L1349.96 680.644 L1349.4 680.644 L1348.84 680.644 L1348.29 680.644 L1347.73 680.644 L1347.17 680.644 L1346.61 680.644 L1346.05 680.644 L1345.49 680.644 L1344.93 680.644 L1344.37 680.644 L1343.81 680.644 L1343.25 680.644 L1342.69 680.644 L1342.13 680.644 L1341.57 680.644 L1341.02 680.644 L1340.46 680.644 L1339.9 680.644 L1339.34 680.644 L1338.78 680.644 L1338.22 680.644 L1337.66 680.644 L1337.1 680.644 L1336.54 680.644 L1335.98 680.644 L1335.42 680.644 L1334.86 680.644 L1334.3 680.644 L1333.75 680.644 L1333.19 680.644 L1332.63 680.644 L1332.07 680.644 L1331.51 680.644 L1330.95 680.644 L1330.39 680.644 L1329.83 680.644 L1329.27 680.644 L1328.71 680.644 L1328.15 680.644 L1327.59 680.644 L1327.03 680.644 L1326.47 680.644 L1325.92 680.644 L1325.36 680.644 L1324.8 680.644 L1324.24 680.644 L1323.68 680.644 L1323.12 680.644 L1322.56 680.644 L1322 680.644 L1321.44 680.644 L1320.88 680.644 L1320.32 680.644 L1319.76 680.644 L1319.2 680.644 L1318.65 680.644 L1318.09 680.644 L1317.53 680.644 L1316.97 680.644 L1316.41 680.644 L1315.85 680.644 L1315.29 680.644 L1314.73 680.644 L1314.17 680.644 L1313.61 680.644 L1313.05 680.644 L1312.49 680.644 L1311.93 680.644 L1311.38 680.644 L1310.82 680.644 L1310.26 680.644 L1309.7 680.644 L1309.14 680.644 L1308.58 680.644 L1308.02 680.644 L1307.46 680.644 L1306.9 680.644 L1306.34 680.644 L1305.78 680.644 L1305.22 680.644 L1304.66 680.644 L1304.1 680.644 L1303.55 680.644 L1302.99 680.644 L1302.43 680.644 L1301.87 680.644 L1301.31 680.644 L1300.75 680.644 L1300.19 680.644 L1299.63 680.644 L1299.07 680.644 L1298.51 680.644 L1297.95 680.644 L1297.39 680.644 L1296.83 680.644 L1296.28 680.644 L1295.72 680.644 L1295.16 680.644 L1294.6 680.644 L1294.04 680.644 L1293.48 680.644 L1292.92 680.644 L1292.36 680.644 L1291.8 680.644 L1291.24 680.644 L1290.68 680.644 L1290.12 680.644 L1289.56 680.644 L1289 680.644 L1288.45 680.644 L1287.89 680.644 L1287.33 680.644 L1286.77 680.644 L1286.21 680.644 L1285.65 680.644 L1285.09 680.644 L1284.53 680.644 L1283.97 680.644 L1283.41 680.644 L1282.85 680.644 L1282.29 680.644 L1281.73 680.644 L1281.18 680.644 L1280.62 680.644 L1280.06 680.644 L1279.5 680.644 L1278.94 680.644 L1278.38 680.644 L1277.82 680.644 L1277.26 680.644 L1276.7 680.644 L1276.14 680.644 L1275.58 680.644 L1275.02 680.644 L1274.46 680.644 L1273.91 680.644 L1273.35 680.644 L1272.79 680.644 L1272.23 680.644 L1271.67 680.644 L1271.11 680.644 L1270.55 680.644 L1269.99 680.644 L1269.43 680.644 L1268.87 680.644 L1268.31 680.644 L1267.75 680.644 L1267.19 680.644 L1266.63 680.644 L1266.08 680.644 L1265.52 680.644 L1264.96 680.644 L1264.4 680.644 L1263.84 680.644 L1263.28 680.644 L1262.72 680.644 L1262.16 680.644 L1261.6 680.644 L1261.04 680.644 L1260.48 680.644 L1259.92 680.644 L1259.36 680.644 L1258.81 680.644 L1258.25 680.644 L1257.69 680.644 L1257.13 680.644 L1256.57 680.644 L1256.01 680.644 L1255.45 680.644 L1254.89 680.644 L1254.33 680.644 L1253.77 680.644 L1253.21 680.644 L1252.65 680.644 L1252.09 680.644 L1251.54 680.644 L1250.98 680.644 L1250.42 680.644 L1249.86 680.644 L1249.3 680.644 L1248.74 680.644 L1248.18 680.644 L1247.62 680.644 L1247.06 680.644 L1246.5 680.644 L1245.94 680.644 L1245.38 680.644 L1244.82 680.644 L1244.26 680.644 L1243.71 680.644 L1243.15 680.644 L1242.59 680.644 L1242.03 680.644 L1241.47 680.644 L1240.91 680.644 L1240.35 680.644 L1239.79 680.644 L1239.23 680.644 L1238.67 680.644 L1238.11 680.644 L1237.55 680.644 L1236.99 680.644 L1236.44 680.644 L1235.88 680.644 L1235.32 680.644 L1234.76 680.644 L1234.2 680.644 L1233.64 680.644 L1233.08 680.644 L1232.52 680.644 L1231.96 680.644 L1231.4 680.644 L1230.84 680.644 L1230.28 680.644 L1229.72 680.644 L1229.17 680.644 L1228.61 680.644 L1228.05 680.644 L1227.49 680.644 L1226.93 680.644 L1226.37 680.644 L1225.81 680.644 L1225.25 680.644 L1224.69 680.644 L1224.13 680.644 L1223.57 680.644 L1223.01 680.644 L1222.45 680.644 L1221.89 680.644 L1221.34 680.644 L1220.78 680.644 L1220.22 680.644 L1219.66 680.644 L1219.1 680.644 L1218.54 680.644 L1217.98 680.644 L1217.42 680.644 L1216.86 680.644 L1216.3 680.644 L1215.74 680.644 L1215.18 680.644 L1214.62 680.644 L1214.07 680.644 L1213.51 680.644 L1212.95 680.644 L1212.39 680.644 L1211.83 680.644 L1211.27 680.644 L1210.71 680.644 L1210.15 680.644 L1209.59 680.644 L1209.03 680.644 L1208.47 680.644 L1207.91 680.644 L1207.35 680.644 L1206.8 680.644 L1206.24 680.644 L1205.68 680.644 L1205.12 680.644 L1204.56 680.644 L1204 680.644 L1203.44 680.644 L1202.88 680.644 L1202.32 680.644 L1201.76 680.644 L1201.2 680.644 L1200.64 680.644 L1200.08 680.644 L1199.52 680.644 L1198.97 680.644 L1198.41 680.644 L1197.85 680.644 L1197.29 680.644 L1196.73 680.644 L1196.17 680.644 L1195.61 680.644 L1195.05 680.644 L1194.49 680.644 L1193.93 680.644 L1193.37 680.644 L1192.81 680.644 L1192.25 680.644 L1191.7 680.644 L1191.14 680.644 L1190.58 680.644 L1190.02 680.644 L1189.46 680.644 L1188.9 680.644 L1188.34 680.644 L1187.78 680.644 L1187.22 680.644 L1186.66 680.644 L1186.1 680.644 L1185.54 680.644 L1184.98 680.644 L1184.43 680.644 L1183.87 680.644 L1183.31 680.644 L1182.75 680.644 L1182.19 680.644 L1181.63 680.644 L1181.07 680.644 L1180.51 680.644 L1179.95 680.644 L1179.39 680.644 L1178.83 680.644 L1178.27 680.644 L1177.71 680.644 L1177.15 680.644 L1176.6 680.644 L1176.04 680.644 L1175.48 680.644 L1174.92 680.644 L1174.36 680.644 L1173.8 680.644 L1173.24 680.644 L1172.68 680.644 L1172.12 680.644 L1171.56 680.644 L1171 680.644 L1170.44 680.644 L1169.88 680.644 L1169.33 680.644 L1168.77 680.644 L1168.21 680.644 L1167.65 680.644 L1167.09 680.644 L1166.53 680.644 L1165.97 680.644 L1165.41 680.644 L1164.85 680.644 L1164.29 680.644 L1163.73 680.644 L1163.17 680.644 L1162.61 680.644 L1162.05 680.644 L1161.5 680.644 L1160.94 680.644 L1160.38 680.644 L1159.82 680.644 L1159.26 680.644 L1158.7 680.644 L1158.14 680.644 L1157.58 680.644 L1157.02 680.644 L1156.46 680.644 L1155.9 680.644 L1155.34 680.644 L1154.78 680.644 L1154.23 680.644 L1153.67 680.644 L1153.11 680.644 L1152.55 680.644 L1151.99 680.644 L1151.43 680.644 L1150.87 680.644 L1150.31 680.644 L1149.75 680.644 L1149.19 680.644 L1148.63 680.644 L1148.07 680.644 L1147.51 680.644 L1146.96 680.644 L1146.4 680.644 L1145.84 680.644 L1145.28 680.644 L1144.72 680.644 L1144.16 680.644 L1143.6 680.644 L1143.04 680.644 L1142.48 680.644 L1141.92 680.644 L1141.36 680.644 L1140.8 680.644 L1140.24 680.644 L1139.68 680.644 L1139.13 680.644 L1138.57 680.644 L1138.01 680.644 L1137.45 680.644 L1136.89 680.644 L1136.33 680.644 L1135.77 680.644 L1135.21 680.644 L1134.65 680.644 L1134.09 680.644 L1133.53 680.644 L1132.97 680.644 L1132.41 680.644 L1131.86 680.644 L1131.3 680.644 L1130.74 680.644 L1130.18 680.644 L1129.62 680.644 L1129.06 680.644 L1128.5 680.644 L1127.94 680.644 L1127.38 680.644 L1126.82 680.644 L1126.26 680.644 L1125.7 680.644 L1125.14 680.644 L1124.59 680.644 L1124.03 680.644 L1123.47 680.644 L1122.91 680.644 L1122.35 680.644 L1121.79 680.644 L1121.23 680.644 L1120.67 680.644 L1120.11 680.644 L1119.55 680.644 L1118.99 680.644 L1118.43 680.644 L1117.87 680.644 L1117.31 680.644 L1116.76 680.644 L1116.2 680.644 L1115.64 680.644 L1115.08 680.644 L1114.52 680.644 L1113.96 680.644 L1113.4 680.644 L1112.84 680.644 L1112.28 680.644 L1111.72 680.644 L1111.16 680.644 L1110.6 680.644 L1110.04 680.644 L1109.49 680.644 L1108.93 680.644 L1108.37 680.644 L1107.81 680.644 L1107.25 680.644 L1106.69 680.644 L1106.13 680.644 L1105.57 680.644 L1105.01 680.644 L1104.45 680.644 L1103.89 680.644 L1103.33 680.644 L1102.77 680.644 L1102.22 680.644 L1101.66 680.644 L1101.1 680.644 L1100.54 680.644 L1099.98 680.644 L1099.42 680.644 L1098.86 680.644 L1098.3 680.644 L1097.74 680.644 L1097.18 680.644 L1096.62 680.644 L1096.06 680.644 L1095.5 680.644 L1094.94 680.644 L1094.39 680.644 L1093.83 680.644 L1093.27 680.644 L1092.71 680.644 L1092.15 680.644 L1091.59 680.644 L1091.03 680.644 L1090.47 680.644 L1089.91 680.644 L1089.35 680.644 L1088.79 680.644 L1088.23 680.644 L1087.67 680.644 L1087.12 680.644 L1086.56 680.644 L1086 680.644 L1085.44 680.644 L1084.88 680.644 L1084.32 680.644 L1083.76 680.644 L1083.2 680.644 L1082.64 680.644 L1082.08 680.644 L1081.52 680.644 L1080.96 680.644 L1080.4 680.644 L1079.85 680.644 L1079.29 680.644 L1078.73 680.644 L1078.17 680.644 L1077.61 680.644 L1077.05 680.644 L1076.49 680.644 L1075.93 680.644 L1075.37 680.644 L1074.81 680.644 L1074.25 680.644 L1073.69 680.644 L1073.13 680.644 L1072.57 680.644 L1072.02 680.644 L1071.46 680.644 L1070.9 680.644 L1070.34 680.644 L1069.78 680.644 L1069.22 680.644 L1068.66 680.644 L1068.1 680.644 L1067.54 680.644 L1066.98 680.644 L1066.42 680.644 L1065.86 680.644 L1065.3 680.644 L1064.75 680.644 L1064.19 680.644 L1063.63 680.644 L1063.07 680.644 L1062.51 680.644 L1061.95 680.644 L1061.39 680.644 L1060.83 680.644 L1060.27 680.644 L1059.71 680.644 L1059.15 680.644 L1058.59 680.644 L1058.03 680.644 L1057.48 680.644 L1056.92 680.644 L1056.36 680.644 L1055.8 680.644 L1055.24 680.644 L1054.68 680.644 L1054.12 680.644 L1053.56 680.644 L1053 680.644 L1052.44 680.644 L1051.88 680.644 L1051.32 680.644 L1050.76 680.644 L1050.2 680.644 L1049.65 680.644 L1049.09 680.644 L1048.53 680.644 L1047.97 680.644 L1047.41 680.644 L1046.85 680.644 L1046.29 680.644 L1045.73 680.644 L1045.17 680.644 L1044.61 680.644 L1044.05 680.644 L1043.49 680.644 L1042.93 680.644 L1042.38 680.644 L1041.82 680.644 L1041.26 680.644 L1040.7 680.644 L1040.14 680.644 L1039.58 680.644 L1039.02 680.644 L1038.46 680.644 L1037.9 680.644 L1037.34 680.644 L1036.78 680.644 L1036.22 680.644 L1035.66 680.644 L1035.1 680.644 L1034.55 680.644 L1033.99 680.644 L1033.43 680.644 L1032.87 680.644 L1032.31 680.644 L1031.75 680.644 L1031.19 680.644 L1030.63 680.644 L1030.07 680.644 L1029.51 680.644 L1028.95 680.644 L1028.39 680.644 L1027.83 680.644 L1027.28 680.644 L1026.72 680.644 L1026.16 680.644 L1025.6 680.644 L1025.04 680.644 L1024.48 680.644 L1023.92 680.644 L1023.36 680.644 L1022.8 680.644 L1022.24 680.644 L1021.68 680.644 L1021.12 680.644 L1020.56 680.644 L1020.01 680.644 L1019.45 680.644 L1018.89 680.644 L1018.33 680.644 L1017.77 680.644 L1017.21 680.644 L1016.65 680.644 L1016.09 680.644 L1015.53 680.644 L1014.97 680.644 L1014.41 680.644 L1013.85 680.644 L1013.29 680.644 L1012.73 680.644 L1012.18 680.644 L1011.62 680.644 L1011.06 680.644 L1010.5 680.644 L1009.94 680.644 L1009.38 680.644 L1008.82 680.644 L1008.26 680.644 L1007.7 680.644 L1007.14 680.644 L1006.58 680.644 L1006.02 680.644 L1005.46 680.644 L1004.91 680.644 L1004.35 680.644 L1003.79 680.644 L1003.23 680.644 L1002.67 680.644 L1002.11 680.644 L1001.55 680.644 L1000.99 680.644 L1000.43 680.644 L999.872 680.644 L999.313 680.644 L998.754 680.644 L998.194 680.644 L997.635 680.644 L997.076 680.644 L996.517 680.644 L995.957 680.644 L995.398 680.644 L994.839 680.644 L994.28 680.644 L993.72 680.644 L993.161 680.644 L992.602 680.644 L992.043 680.644 L991.483 680.644 L990.924 680.644 L990.365 680.644 L989.806 680.644 L989.246 680.644 L988.687 680.644 L988.128 680.644 L987.569 680.644 L987.009 680.644 L986.45 680.644 L985.891 680.644 L985.332 680.644 L984.772 680.644 L984.213 680.644 L983.654 680.644 L983.095 680.644 L982.535 680.644 L981.976 680.644 L981.417 680.644 L980.858 680.644 L980.298 680.644 L979.739 680.644 L979.18 680.644 L978.621 680.644 L978.061 680.644 L977.502 680.644 L976.943 680.644 L976.384 680.644 L975.824 680.644 L975.265 680.644 L974.706 680.644 L974.147 680.644 L973.587 680.644 L973.028 680.644 L972.469 680.644 L971.91 680.644 L971.35 680.644 L970.791 680.644 L970.232 680.644 L969.673 680.644 L969.113 680.644 L968.554 680.644 L967.995 680.644 L967.436 680.644 L966.876 680.644 L966.317 680.644 L965.758 680.644 L965.199 680.644 L964.639 680.644 L964.08 680.644 L963.521 680.644 L962.962 680.644 L962.402 680.644 L961.843 680.644 L961.284 680.644 L960.725 680.644 L960.165 680.644 L959.606 680.644 L959.047 680.644 L958.488 680.644 L957.928 680.644 L957.369 680.644 L956.81 680.644 L956.251 680.644 L955.691 680.644 L955.132 680.644 L954.573 680.644 L954.014 680.644 L953.454 680.644 L952.895 680.644 L952.336 680.644 L951.777 680.644 L951.217 680.644 L950.658 680.644 L950.099 680.644 L949.54 680.644 L948.98 680.644 L948.421 680.644 L947.862 680.644 L947.303 680.644 L946.743 680.644 L946.184 680.644 L945.625 680.644 L945.066 680.644 L944.506 680.644 L943.947 680.644 L943.388 680.644 L942.829 680.644 L942.269 680.644 L941.71 680.644 L941.151 680.644 L940.592 680.644 L940.032 680.644 L939.473 680.644 L938.914 680.644 L938.355 680.644 L937.795 680.644 L937.236 680.644 L936.677 680.644 L936.118 680.644 L935.558 680.644 L934.999 680.644 L934.44 680.644 L933.881 680.644 L933.321 680.644 L932.762 680.644 L932.203 680.644 L931.644 680.644 L931.084 680.644 L930.525 680.644 L929.966 680.644 L929.406 680.644 L928.847 680.644 L928.288 680.644 L927.729 680.644 L927.169 680.644 L926.61 680.644 L926.051 680.644 L925.492 680.644 L924.932 680.644 L924.373 680.644 L923.814 680.644 L923.255 680.644 L922.695 680.644 L922.136 680.644 L921.577 680.644 L921.018 680.644 L920.458 680.644 L919.899 680.644 L919.34 680.644 L918.781 680.644 L918.221 680.644 L917.662 680.644 L917.103 680.644 L916.544 680.644 L915.984 680.644 L915.425 680.644 L914.866 680.644 L914.307 680.644 L913.747 680.644 L913.188 680.644 L912.629 680.644 L912.07 680.644 L911.51 680.644 L910.951 680.644 L910.392 680.644 L909.833 680.644 L909.273 680.644 L908.714 680.644 L908.155 680.644 L907.596 680.644 L907.036 680.644 L906.477 680.644 L905.918 680.644 L905.359 680.644 L904.799 680.644 L904.24 680.644 L903.681 680.644 L903.122 680.644 L902.562 680.644 L902.003 680.644 L901.444 680.644 L900.885 680.644 L900.325 680.644 L899.766 680.644 L899.207 680.644 L898.648 680.644 L898.088 680.644 L897.529 680.644 L896.97 680.644 L896.411 680.644 L895.851 680.644 L895.292 680.644 L894.733 680.644 L894.174 680.644 L893.614 680.644 L893.055 680.644 L892.496 680.644 L891.937 680.644 L891.377 680.644 L890.818 680.644 L890.259 680.644 L889.7 680.644 L889.14 680.644 L888.581 680.644 L888.022 680.644 L887.463 680.644 L886.903 680.644 L886.344 680.644 L885.785 680.644 L885.226 680.644 L884.666 680.644 L884.107 680.644 L883.548 680.644 L882.989 680.644 L882.429 680.644 L881.87 680.644 L881.311 680.644 L880.752 680.644 L880.192 680.644 L879.633 680.644 L879.074 680.644 L878.515 680.644 L877.955 680.644 L877.396 680.644 L876.837 680.644 L876.278 680.644 L875.718 680.644 L875.159 680.644 L874.6 680.644 L874.041 680.644 L873.481 680.644 L872.922 680.644 L872.363 680.644 L871.804 680.644 L871.244 680.644 L870.685 680.644 L870.126 680.644 L869.567 680.644 L869.007 680.644 L868.448 680.644 L867.889 680.644 L867.33 680.644 L866.77 680.644 L866.211 680.644 L865.652 680.644 L865.093 680.644 L864.533 680.644 L863.974 680.644 L863.415 680.644 L862.856 680.644 L862.296 680.644 L861.737 680.644 L861.178 680.644 L860.619 680.644 L860.059 680.644 L859.5 680.644 L858.941 680.644 L858.382 680.644 L857.822 680.644 L857.263 680.644 L856.704 680.644 L856.145 680.644 L855.585 680.644 L855.026 680.644 L854.467 680.644 L853.908 680.644 L853.348 680.644 L852.789 680.644 L852.23 680.644 L851.671 680.644 L851.111 680.644 L850.552 680.644 L849.993 680.644 L849.434 680.644 L848.874 680.644 L848.315 680.644 L847.756 680.644 L847.197 680.644 L846.637 680.644 L846.078 680.644 L845.519 680.644 L844.96 680.644 L844.4 680.644 L843.841 680.644 L843.282 680.644 L842.723 680.644 L842.163 680.644 L841.604 680.644 L841.045 680.644 L840.486 680.644 L839.926 680.644 L839.367 680.644 L838.808 680.644 L838.249 680.644 L837.689 680.644 L837.13 680.644 L836.571 680.644 L836.012 680.644 L835.452 680.644 L834.893 680.644 L834.334 680.644 L833.775 680.644 L833.215 680.644 L832.656 680.644 L832.097 680.644 L831.538 680.644 L830.978 680.644 L830.419 680.644 L829.86 680.644 L829.301 680.644 L828.741 680.644 L828.182 680.644 L827.623 680.644 L827.064 680.644 L826.504 680.644 L825.945 680.644 L825.386 680.644 L824.827 680.644 L824.267 680.644 L823.708 680.644 L823.149 680.644 L822.59 680.644 L822.03 680.644 L821.471 680.644 L820.912 680.644 L820.353 680.644 L819.793 680.644 L819.234 680.644 L818.675 680.644 L818.116 680.644 L817.556 680.644 L816.997 680.644 L816.438 680.644 L815.879 680.644 L815.319 680.644 L814.76 680.644 L814.201 680.644 L813.642 680.644 L813.082 680.644 L812.523 680.644 L811.964 680.644 L811.405 680.644 L810.845 680.644 L810.286 680.644 L809.727 680.644 L809.168 680.644 L808.608 680.644 L808.049 680.644 L807.49 680.644 L806.931 680.644 L806.371 680.644 L805.812 680.644 L805.253 680.644 L804.693 680.644 L804.134 680.644 L803.575 680.644 L803.016 680.644 L802.456 680.644 L801.897 680.644 L801.338 680.644 L800.779 680.644 L800.219 680.644 L799.66 680.644 L799.101 680.644 L798.542 680.644 L797.982 680.644 L797.423 680.644 L796.864 680.644 L796.305 680.644 L795.745 680.644 L795.186 680.644 L794.627 680.644 L794.068 680.644 L793.508 680.644 L792.949 680.644 L792.39 680.644 L791.831 680.644 L791.271 680.644 L790.712 680.644 L790.153 680.644 L789.594 680.644 L789.034 680.644 L788.475 680.644 L787.916 680.644 L787.357 680.644 L786.797 680.644 L786.238 680.644 L785.679 680.644 L785.12 680.644 L784.56 680.644 L784.001 680.644 L783.442 680.644 L782.883 680.644 L782.323 680.644 L781.764 680.644 L781.205 680.644 L780.646 680.644 L780.086 680.644 L779.527 680.644 L778.968 680.644 L778.409 680.644 L777.849 680.644 L777.29 680.644 L776.731 680.644 L776.172 680.644 L775.612 680.644 L775.053 680.644 L774.494 680.644 L773.935 680.644 L773.375 680.644 L772.816 680.644 L772.257 680.644 L771.698 680.644 L771.138 680.644 L770.579 680.644 L770.02 680.644 L769.461 680.644 L768.901 680.644 L768.342 680.644 L767.783 680.644 L767.224 680.644 L766.664 680.644 L766.105 680.644 L765.546 680.644 L764.987 680.644 L764.427 680.644 L763.868 680.644 L763.309 680.644 L762.75 680.644 L762.19 680.644 L761.631 680.644 L761.072 680.644 L760.513 680.644 L759.953 680.644 L759.394 680.644 L758.835 680.644 L758.276 680.644 L757.716 680.644 L757.157 680.644 L756.598 680.644 L756.039 680.644 L755.479 680.644 L754.92 680.644 L754.361 680.644 L753.802 680.644 L753.242 680.644 L752.683 680.644 L752.124 680.644 L751.565 680.644 L751.005 680.644 L750.446 680.644 L749.887 680.644 L749.328 680.644 L748.768 680.644 L748.209 680.644 L747.65 680.644 L747.091 680.644 L746.531 680.644 L745.972 680.644 L745.413 680.644 L744.854 680.644 L744.294 680.644 L743.735 680.644 L743.176 680.644 L742.617 680.644 L742.057 680.644 L741.498 680.644 L740.939 680.644 L740.38 680.644 L739.82 680.644 L739.261 680.644 L738.702 680.644 L738.143 680.644 L737.583 680.644 L737.024 680.644 L736.465 680.644 L735.906 680.644 L735.346 680.644 L734.787 680.644 L734.228 680.644 L733.669 680.644 L733.109 680.644 L732.55 680.644 L731.991 680.644 L731.432 680.644 L730.872 680.644 L730.313 680.644 L729.754 680.644 L729.195 680.644 L728.635 680.644 L728.076 680.644 L727.517 680.644 L726.958 680.644 L726.398 680.644 L725.839 680.644 L725.28 680.644 L724.721 680.644 L724.161 680.644 L723.602 680.644 L723.043 680.644 L722.484 680.644 L721.924 680.644 L721.365 680.644 L720.806 680.644 L720.247 680.644  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip963)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,686.135 720.806,686.135 721.365,686.135 721.924,686.135 722.484,686.135 723.043,686.135 723.602,686.135 724.161,686.135 724.721,686.135 725.28,686.135 725.839,686.135 726.398,686.135 726.958,686.135 727.517,686.135 728.076,686.135 728.635,686.135 729.195,686.135 729.754,686.135 730.313,686.135 730.872,686.135 731.432,686.135 731.991,686.135 732.55,686.135 733.109,686.135 733.669,686.135 734.228,686.135 734.787,686.135 735.346,686.135 735.906,686.135 736.465,686.135 737.024,686.135 737.583,686.135 738.143,686.135 738.702,686.135 739.261,686.135 739.82,686.135 740.38,686.135 740.939,686.135 741.498,686.135 742.057,686.135 742.617,686.135 743.176,686.135 743.735,686.135 744.294,686.135 744.854,686.135 745.413,686.135 745.972,686.135 746.531,686.135 747.091,686.135 747.65,686.135 748.209,686.135 748.768,686.135 749.328,686.135 749.887,686.135 750.446,686.135 751.005,686.135 751.565,686.135 752.124,686.135 752.683,686.135 753.242,686.135 753.802,686.135 754.361,686.135 754.92,686.135 755.479,686.135 756.039,686.135 756.598,686.135 757.157,686.135 757.716,686.135 758.276,686.135 758.835,686.135 759.394,686.135 759.953,686.135 760.513,686.135 761.072,686.135 761.631,686.135 762.19,686.135 762.75,686.135 763.309,686.135 763.868,686.135 764.427,686.135 764.987,686.135 765.546,686.135 766.105,686.135 766.664,686.135 767.224,686.135 767.783,686.135 768.342,686.135 768.901,686.135 769.461,686.135 770.02,686.135 770.579,686.135 771.138,686.135 771.698,686.135 772.257,686.135 772.816,686.135 773.375,686.135 773.935,686.135 774.494,686.135 775.053,686.135 775.612,686.135 776.172,686.135 776.731,686.135 777.29,686.135 777.849,686.135 778.409,686.135 778.968,686.135 779.527,686.135 780.086,686.135 780.646,686.135 781.205,686.135 781.764,686.135 782.323,686.135 782.883,686.135 783.442,686.135 784.001,686.135 784.56,686.135 785.12,686.135 785.679,686.135 786.238,686.135 786.797,686.135 787.357,686.135 787.916,686.135 788.475,686.135 789.034,686.135 789.594,686.135 790.153,686.135 790.712,686.135 791.271,686.135 791.831,686.135 792.39,686.135 792.949,686.135 793.508,686.135 794.068,686.135 794.627,686.135 795.186,686.135 795.745,686.135 796.305,686.135 796.864,686.135 797.423,686.135 797.982,686.135 798.542,686.135 799.101,686.135 799.66,686.135 800.219,686.135 800.779,686.135 801.338,686.135 801.897,686.135 802.456,686.135 803.016,686.135 803.575,686.135 804.134,686.135 804.693,686.135 805.253,686.135 805.812,686.135 806.371,686.135 806.931,686.135 807.49,686.135 808.049,686.135 808.608,686.135 809.168,686.135 809.727,686.135 810.286,686.135 810.845,686.135 811.405,686.135 811.964,686.135 812.523,686.135 813.082,686.135 813.642,686.135 814.201,686.135 814.76,686.135 815.319,686.135 815.879,686.135 816.438,686.135 816.997,686.135 817.556,686.135 818.116,686.135 818.675,686.135 819.234,686.135 819.793,686.135 820.353,686.135 820.912,686.135 821.471,686.135 822.03,686.135 822.59,686.135 823.149,686.135 823.708,686.135 824.267,686.135 824.827,686.135 825.386,686.135 825.945,686.135 826.504,686.135 827.064,686.135 827.623,686.135 828.182,686.135 828.741,686.135 829.301,686.135 829.86,686.135 830.419,686.135 830.978,686.135 831.538,686.135 832.097,686.135 832.656,686.135 833.215,686.135 833.775,686.135 834.334,686.135 834.893,686.135 835.452,686.135 836.012,686.135 836.571,686.135 837.13,686.135 837.689,686.135 838.249,686.135 838.808,686.135 839.367,686.135 839.926,686.135 840.486,686.135 841.045,686.135 841.604,686.135 842.163,686.135 842.723,686.135 843.282,686.135 843.841,686.135 844.4,686.135 844.96,686.135 845.519,686.135 846.078,686.135 846.637,686.135 847.197,686.135 847.756,686.135 848.315,686.135 848.874,686.135 849.434,686.135 849.993,686.135 850.552,686.135 851.111,686.135 851.671,686.135 852.23,686.135 852.789,686.135 853.348,686.135 853.908,686.135 854.467,686.135 855.026,686.135 855.585,686.135 856.145,686.135 856.704,686.135 857.263,686.135 857.822,686.135 858.382,686.135 858.941,686.135 859.5,686.135 860.059,686.135 860.619,686.135 861.178,686.135 861.737,686.135 862.296,686.135 862.856,686.135 863.415,686.135 863.974,686.135 864.533,686.135 865.093,686.135 865.652,686.135 866.211,686.135 866.77,686.135 867.33,686.135 867.889,686.135 868.448,686.135 869.007,686.135 869.567,686.135 870.126,686.135 870.685,686.135 871.244,686.135 871.804,686.135 872.363,686.135 872.922,686.135 873.481,686.135 874.041,686.135 874.6,686.135 875.159,686.135 875.718,686.135 876.278,686.135 876.837,686.135 877.396,686.135 877.955,686.135 878.515,686.135 879.074,686.135 879.633,686.135 880.192,686.135 880.752,686.135 881.311,686.135 881.87,686.135 882.429,686.135 882.989,686.135 883.548,686.135 884.107,686.135 884.666,686.135 885.226,686.135 885.785,686.135 886.344,686.135 886.903,686.135 887.463,686.135 888.022,686.135 888.581,686.135 889.14,686.135 889.7,686.135 890.259,686.135 890.818,686.135 891.377,686.135 891.937,686.135 892.496,686.135 893.055,686.135 893.614,686.135 894.174,686.135 894.733,686.135 895.292,686.135 895.851,686.135 896.411,686.135 896.97,686.135 897.529,686.135 898.088,686.135 898.648,686.135 899.207,686.135 899.766,686.135 900.325,686.135 900.885,686.135 901.444,686.135 902.003,686.135 902.562,686.135 903.122,686.135 903.681,686.135 904.24,686.135 904.799,686.135 905.359,686.135 905.918,686.135 906.477,686.135 907.036,686.135 907.596,686.135 908.155,686.135 908.714,686.135 909.273,686.135 909.833,686.135 910.392,686.135 910.951,686.135 911.51,686.135 912.07,686.135 912.629,686.135 913.188,686.135 913.747,686.135 914.307,686.135 914.866,686.135 915.425,686.135 915.984,686.135 916.544,686.135 917.103,686.135 917.662,686.135 918.221,686.135 918.781,686.135 919.34,686.135 919.899,686.135 920.458,686.135 921.018,686.135 921.577,686.135 922.136,686.135 922.695,686.135 923.255,686.135 923.814,686.135 924.373,686.135 924.932,686.135 925.492,686.135 926.051,686.135 926.61,686.135 927.169,686.135 927.729,686.135 928.288,686.135 928.847,686.135 929.406,686.135 929.966,686.135 930.525,686.135 931.084,686.135 931.644,686.135 932.203,686.135 932.762,686.135 933.321,686.135 933.881,686.135 934.44,686.135 934.999,686.135 935.558,686.135 936.118,686.135 936.677,686.135 937.236,686.135 937.795,686.135 938.355,686.135 938.914,686.135 939.473,686.135 940.032,686.135 940.592,686.135 941.151,686.135 941.71,686.135 942.269,686.135 942.829,686.135 943.388,686.135 943.947,686.135 944.506,686.135 945.066,686.135 945.625,686.135 946.184,686.135 946.743,686.135 947.303,686.135 947.862,686.135 948.421,686.135 948.98,686.135 949.54,686.135 950.099,686.135 950.658,686.135 951.217,686.135 951.777,686.135 952.336,686.135 952.895,686.135 953.454,686.135 954.014,686.135 954.573,686.135 955.132,686.135 955.691,686.135 956.251,686.135 956.81,686.135 957.369,686.135 957.928,686.135 958.488,686.135 959.047,686.135 959.606,686.135 960.165,686.135 960.725,686.135 961.284,686.135 961.843,686.135 962.402,686.135 962.962,686.135 963.521,686.135 964.08,686.135 964.639,686.135 965.199,686.135 965.758,686.135 966.317,686.135 966.876,686.135 967.436,686.135 967.995,686.135 968.554,686.135 969.113,686.135 969.673,686.135 970.232,686.135 970.791,686.135 971.35,686.135 971.91,686.135 972.469,686.135 973.028,686.135 973.587,686.135 974.147,686.135 974.706,686.135 975.265,686.135 975.824,686.135 976.384,686.135 976.943,686.135 977.502,686.135 978.061,686.135 978.621,686.135 979.18,686.135 979.739,686.135 980.298,686.135 980.858,686.135 981.417,686.135 981.976,686.135 982.535,686.135 983.095,686.135 983.654,686.135 984.213,686.135 984.772,686.135 985.332,686.135 985.891,686.135 986.45,686.135 987.009,686.135 987.569,686.135 988.128,686.135 988.687,686.135 989.246,686.135 989.806,686.135 990.365,686.135 990.924,686.135 991.483,686.135 992.043,686.135 992.602,686.135 993.161,686.135 993.72,686.135 994.28,686.135 994.839,686.135 995.398,686.135 995.957,686.135 996.517,686.135 997.076,686.135 997.635,686.135 998.194,686.135 998.754,686.135 999.313,686.135 999.872,686.135 1000.43,686.135 1000.99,686.135 1001.55,686.135 1002.11,686.135 1002.67,686.135 1003.23,686.135 1003.79,686.135 1004.35,686.135 1004.91,686.135 1005.46,686.135 1006.02,686.135 1006.58,686.135 1007.14,686.135 1007.7,686.135 1008.26,686.135 1008.82,686.135 1009.38,686.135 1009.94,686.135 1010.5,686.135 1011.06,686.135 1011.62,686.135 1012.18,686.135 1012.73,686.135 1013.29,686.135 1013.85,686.135 1014.41,686.135 1014.97,686.135 1015.53,686.135 1016.09,686.135 1016.65,686.135 1017.21,686.135 1017.77,686.135 1018.33,686.135 1018.89,686.135 1019.45,686.135 1020.01,686.135 1020.56,686.135 1021.12,686.135 1021.68,686.135 1022.24,686.135 1022.8,686.135 1023.36,686.135 1023.92,686.135 1024.48,686.135 1025.04,686.135 1025.6,686.135 1026.16,686.135 1026.72,686.135 1027.28,686.135 1027.83,686.135 1028.39,686.135 1028.95,686.135 1029.51,686.135 1030.07,686.135 1030.63,686.135 1031.19,686.135 1031.75,686.135 1032.31,686.135 1032.87,686.135 1033.43,686.135 1033.99,686.135 1034.55,686.135 1035.1,686.135 1035.66,686.135 1036.22,686.135 1036.78,686.135 1037.34,686.135 1037.9,686.135 1038.46,686.135 1039.02,686.135 1039.58,686.135 1040.14,686.135 1040.7,686.135 1041.26,686.135 1041.82,686.135 1042.38,686.135 1042.93,686.135 1043.49,686.135 1044.05,686.135 1044.61,686.135 1045.17,686.135 1045.73,686.135 1046.29,686.135 1046.85,686.135 1047.41,686.135 1047.97,686.135 1048.53,686.135 1049.09,686.135 1049.65,686.135 1050.2,686.135 1050.76,686.135 1051.32,686.135 1051.88,686.135 1052.44,686.135 1053,686.135 1053.56,686.135 1054.12,686.135 1054.68,686.135 1055.24,686.135 1055.8,686.135 1056.36,686.135 1056.92,686.135 1057.48,686.135 1058.03,686.135 1058.59,686.135 1059.15,686.135 1059.71,686.135 1060.27,686.135 1060.83,686.135 1061.39,686.135 1061.95,686.135 1062.51,686.135 1063.07,686.135 1063.63,686.135 1064.19,686.135 1064.75,686.135 1065.3,686.135 1065.86,686.135 1066.42,686.135 1066.98,686.135 1067.54,686.135 1068.1,686.135 1068.66,686.135 1069.22,686.135 1069.78,686.135 1070.34,686.135 1070.9,686.135 1071.46,686.135 1072.02,686.135 1072.57,686.135 1073.13,686.135 1073.69,686.135 1074.25,686.135 1074.81,686.135 1075.37,686.135 1075.93,686.135 1076.49,686.135 1077.05,686.135 1077.61,686.135 1078.17,686.135 1078.73,686.135 1079.29,686.135 1079.85,686.135 1080.4,686.135 1080.96,686.135 1081.52,686.135 1082.08,686.135 1082.64,686.135 1083.2,686.135 1083.76,686.135 1084.32,686.135 1084.88,686.135 1085.44,686.135 1086,686.135 1086.56,686.135 1087.12,686.135 1087.67,686.135 1088.23,686.135 1088.79,686.135 1089.35,686.135 1089.91,686.135 1090.47,686.135 1091.03,686.135 1091.59,686.135 1092.15,686.135 1092.71,686.135 1093.27,686.135 1093.83,686.135 1094.39,686.135 1094.94,686.135 1095.5,686.135 1096.06,686.135 1096.62,686.135 1097.18,686.135 1097.74,686.135 1098.3,686.135 1098.86,686.135 1099.42,686.135 1099.98,686.135 1100.54,686.135 1101.1,686.135 1101.66,686.135 1102.22,686.135 1102.77,686.135 1103.33,686.135 1103.89,686.135 1104.45,686.135 1105.01,686.135 1105.57,686.135 1106.13,686.135 1106.69,686.135 1107.25,686.135 1107.81,686.135 1108.37,686.135 1108.93,686.135 1109.49,686.135 1110.04,686.135 1110.6,686.135 1111.16,686.135 1111.72,686.135 1112.28,686.135 1112.84,686.135 1113.4,686.135 1113.96,686.135 1114.52,686.135 1115.08,686.135 1115.64,686.135 1116.2,686.135 1116.76,686.135 1117.31,686.135 1117.87,686.135 1118.43,686.135 1118.99,686.135 1119.55,686.135 1120.11,686.135 1120.67,686.135 1121.23,686.135 1121.79,686.135 1122.35,686.135 1122.91,686.135 1123.47,686.135 1124.03,686.135 1124.59,686.135 1125.14,686.135 1125.7,686.135 1126.26,686.135 1126.82,686.135 1127.38,686.135 1127.94,686.135 1128.5,686.135 1129.06,686.135 1129.62,686.135 1130.18,686.135 1130.74,686.135 1131.3,686.135 1131.86,686.135 1132.41,686.135 1132.97,686.135 1133.53,686.135 1134.09,686.135 1134.65,686.135 1135.21,686.135 1135.77,686.135 1136.33,686.135 1136.89,686.135 1137.45,686.135 1138.01,686.135 1138.57,686.135 1139.13,686.135 1139.68,686.135 1140.24,686.135 1140.8,686.135 1141.36,686.135 1141.92,686.135 1142.48,686.135 1143.04,686.135 1143.6,686.135 1144.16,686.135 1144.72,686.135 1145.28,686.135 1145.84,686.135 1146.4,686.135 1146.96,686.135 1147.51,686.135 1148.07,686.135 1148.63,686.135 1149.19,686.135 1149.75,686.135 1150.31,686.135 1150.87,686.135 1151.43,686.135 1151.99,686.135 1152.55,686.135 1153.11,686.135 1153.67,686.135 1154.23,686.135 1154.78,686.135 1155.34,686.135 1155.9,686.135 1156.46,686.135 1157.02,686.135 1157.58,686.135 1158.14,686.135 1158.7,686.135 1159.26,686.135 1159.82,686.135 1160.38,686.135 1160.94,686.135 1161.5,686.135 1162.05,686.135 1162.61,686.135 1163.17,686.135 1163.73,686.135 1164.29,686.135 1164.85,686.135 1165.41,686.135 1165.97,686.135 1166.53,686.135 1167.09,686.135 1167.65,686.135 1168.21,686.135 1168.77,686.135 1169.33,686.135 1169.88,686.135 1170.44,686.135 1171,686.135 1171.56,686.135 1172.12,686.135 1172.68,686.135 1173.24,686.135 1173.8,686.135 1174.36,686.135 1174.92,686.135 1175.48,686.135 1176.04,686.135 1176.6,686.135 1177.15,686.135 1177.71,686.135 1178.27,686.135 1178.83,686.135 1179.39,686.135 1179.95,686.135 1180.51,686.135 1181.07,686.135 1181.63,686.135 1182.19,686.135 1182.75,686.135 1183.31,686.135 1183.87,686.135 1184.43,686.135 1184.98,686.135 1185.54,686.135 1186.1,686.135 1186.66,686.135 1187.22,686.135 1187.78,686.135 1188.34,686.135 1188.9,686.135 1189.46,686.135 1190.02,686.135 1190.58,686.135 1191.14,686.135 1191.7,686.135 1192.25,686.135 1192.81,686.135 1193.37,686.135 1193.93,686.135 1194.49,686.135 1195.05,686.135 1195.61,686.135 1196.17,686.135 1196.73,686.135 1197.29,686.135 1197.85,686.135 1198.41,686.135 1198.97,686.135 1199.52,686.135 1200.08,686.135 1200.64,686.135 1201.2,686.135 1201.76,686.135 1202.32,686.135 1202.88,686.135 1203.44,686.135 1204,686.135 1204.56,686.135 1205.12,686.135 1205.68,686.135 1206.24,686.135 1206.8,686.135 1207.35,686.135 1207.91,686.135 1208.47,686.135 1209.03,686.135 1209.59,686.135 1210.15,686.135 1210.71,686.135 1211.27,686.135 1211.83,686.135 1212.39,686.135 1212.95,686.135 1213.51,686.135 1214.07,686.135 1214.62,686.135 1215.18,686.135 1215.74,686.135 1216.3,686.135 1216.86,686.135 1217.42,686.135 1217.98,686.135 1218.54,686.135 1219.1,686.135 1219.66,686.135 1220.22,686.135 1220.78,686.135 1221.34,686.135 1221.89,686.135 1222.45,686.135 1223.01,686.135 1223.57,686.135 1224.13,686.135 1224.69,686.135 1225.25,686.135 1225.81,686.135 1226.37,686.135 1226.93,686.135 1227.49,686.135 1228.05,686.135 1228.61,686.135 1229.17,686.135 1229.72,686.135 1230.28,686.135 1230.84,686.135 1231.4,686.135 1231.96,686.135 1232.52,686.135 1233.08,686.135 1233.64,686.135 1234.2,686.135 1234.76,686.135 1235.32,686.135 1235.88,686.135 1236.44,686.135 1236.99,686.135 1237.55,686.135 1238.11,686.135 1238.67,686.135 1239.23,686.135 1239.79,686.135 1240.35,686.135 1240.91,686.135 1241.47,686.135 1242.03,686.135 1242.59,686.135 1243.15,686.135 1243.71,686.135 1244.26,686.135 1244.82,686.135 1245.38,686.135 1245.94,686.135 1246.5,686.135 1247.06,686.135 1247.62,686.135 1248.18,686.135 1248.74,686.135 1249.3,686.135 1249.86,686.135 1250.42,686.135 1250.98,686.135 1251.54,686.135 1252.09,686.135 1252.65,686.135 1253.21,686.135 1253.77,686.135 1254.33,686.135 1254.89,686.135 1255.45,686.135 1256.01,686.135 1256.57,686.135 1257.13,686.135 1257.69,686.135 1258.25,686.135 1258.81,686.135 1259.36,686.135 1259.92,686.135 1260.48,686.135 1261.04,686.135 1261.6,686.135 1262.16,686.135 1262.72,686.135 1263.28,686.135 1263.84,686.135 1264.4,686.135 1264.96,686.135 1265.52,686.135 1266.08,686.135 1266.63,686.135 1267.19,686.135 1267.75,686.135 1268.31,686.135 1268.87,686.135 1269.43,686.135 1269.99,686.135 1270.55,686.135 1271.11,686.135 1271.67,686.135 1272.23,686.135 1272.79,686.135 1273.35,686.135 1273.91,686.135 1274.46,686.135 1275.02,686.135 1275.58,686.135 1276.14,686.135 1276.7,686.135 1277.26,686.135 1277.82,686.135 1278.38,686.135 1278.94,686.135 1279.5,686.135 1280.06,686.135 1280.62,686.135 1281.18,686.135 1281.73,686.135 1282.29,686.135 1282.85,686.135 1283.41,686.135 1283.97,686.135 1284.53,686.135 1285.09,686.135 1285.65,686.135 1286.21,686.135 1286.77,686.135 1287.33,686.135 1287.89,686.135 1288.45,686.135 1289,686.135 1289.56,686.135 1290.12,686.135 1290.68,686.135 1291.24,686.135 1291.8,686.135 1292.36,686.135 1292.92,686.135 1293.48,686.135 1294.04,686.135 1294.6,686.135 1295.16,686.135 1295.72,686.135 1296.28,686.135 1296.83,686.135 1297.39,686.135 1297.95,686.135 1298.51,686.135 1299.07,686.135 1299.63,686.135 1300.19,686.135 1300.75,686.135 1301.31,686.135 1301.87,686.135 1302.43,686.135 1302.99,686.135 1303.55,686.135 1304.1,686.135 1304.66,686.135 1305.22,686.135 1305.78,686.135 1306.34,686.135 1306.9,686.135 1307.46,686.135 1308.02,686.135 1308.58,686.135 1309.14,686.135 1309.7,686.135 1310.26,686.135 1310.82,686.135 1311.38,686.135 1311.93,686.135 1312.49,686.135 1313.05,686.135 1313.61,686.135 1314.17,686.135 1314.73,686.135 1315.29,686.135 1315.85,686.135 1316.41,686.135 1316.97,686.135 1317.53,686.135 1318.09,686.135 1318.65,686.135 1319.2,686.135 1319.76,686.135 1320.32,686.135 1320.88,686.135 1321.44,686.135 1322,686.135 1322.56,686.135 1323.12,686.135 1323.68,686.135 1324.24,686.135 1324.8,686.135 1325.36,686.135 1325.92,686.135 1326.47,686.135 1327.03,686.135 1327.59,686.135 1328.15,686.135 1328.71,686.135 1329.27,686.135 1329.83,686.135 1330.39,686.135 1330.95,686.135 1331.51,686.135 1332.07,686.135 1332.63,686.135 1333.19,686.135 1333.75,686.135 1334.3,686.135 1334.86,686.135 1335.42,686.135 1335.98,686.135 1336.54,686.135 1337.1,686.135 1337.66,686.135 1338.22,686.135 1338.78,686.135 1339.34,686.135 1339.9,686.135 1340.46,686.135 1341.02,686.135 1341.57,686.135 1342.13,686.135 1342.69,686.135 1343.25,686.135 1343.81,686.135 1344.37,686.135 1344.93,686.135 1345.49,686.135 1346.05,686.135 1346.61,686.135 1347.17,686.135 1347.73,686.135 1348.29,686.135 1348.84,686.135 1349.4,686.135 1349.96,686.135 1350.52,686.135 1351.08,686.135 1351.64,686.135 1352.2,686.135 1352.76,686.135 1353.32,686.135 1353.88,686.135 1354.44,686.135 1355,686.135 1355.56,686.135 1356.12,686.135 1356.67,686.135 1357.23,686.135 1357.79,686.135 1358.35,686.135 1358.91,686.135 1359.47,686.135 1360.03,686.135 1360.59,686.135 1361.15,686.135 1361.71,686.135 1362.27,686.135 1362.83,686.135 1363.39,686.135 1363.94,686.135 1364.5,686.135 1365.06,686.135 1365.62,686.135 1366.18,686.135 1366.74,686.135 1367.3,686.135 1367.86,686.135 1368.42,686.135 1368.98,686.135 1369.54,686.135 1370.1,686.135 1370.66,686.135 1371.21,686.135 1371.77,686.135 1372.33,686.135 1372.89,686.135 1373.45,686.135 1374.01,686.135 1374.57,686.135 1375.13,686.135 1375.69,686.135 1376.25,686.135 1376.81,686.135 1377.37,686.135 1377.93,686.135 1378.49,686.135 1379.04,686.135 1379.6,686.135 1380.16,686.135 1380.72,686.135 1381.28,686.135 1381.84,686.135 1382.4,686.135 1382.96,686.135 1383.52,686.135 1384.08,686.135 1384.64,686.135 1385.2,686.135 1385.76,686.135 1386.31,686.135 1386.87,686.135 1387.43,686.135 1387.99,686.135 1388.55,686.135 1389.11,686.135 1389.67,686.135 1390.23,686.135 1390.79,686.135 1391.35,686.135 1391.91,686.135 1392.47,686.135 1393.03,686.135 1393.58,686.135 1394.14,686.135 1394.7,686.135 1395.26,686.135 1395.82,686.135 1396.38,686.135 1396.94,686.135 1397.5,686.135 1398.06,686.135 1398.62,686.135 1399.18,686.135 1399.74,686.135 1400.3,686.135 1400.86,686.135 1401.41,686.135 1401.97,686.135 1402.53,686.135 1403.09,686.135 1403.65,686.135 1404.21,686.135 1404.77,686.135 1405.33,686.135 1405.89,686.135 1406.45,686.135 1407.01,686.135 1407.57,686.135 1408.13,686.135 1408.68,686.135 1409.24,686.135 1409.8,686.135 1410.36,686.135 1410.92,686.135 1411.48,686.135 1412.04,686.135 1412.6,686.135 1413.16,686.135 1413.72,686.135 1414.28,686.135 1414.84,686.135 1415.4,686.135 1415.95,686.135 1416.51,686.135 1417.07,686.135 1417.63,686.135 1418.19,686.135 1418.75,686.135 1419.31,686.135 1419.87,686.135 1420.43,686.135 1420.99,686.135 1421.55,686.135 1422.11,686.135 1422.67,686.135 1423.23,686.135 1423.78,686.135 1424.34,686.135 1424.9,686.135 1425.46,686.135 1426.02,686.135 1426.58,686.135 1427.14,686.135 1427.7,686.135 1428.26,686.135 1428.82,686.135 1429.38,686.135 1429.94,686.135 1430.5,686.135 1431.05,686.135 1431.61,686.135 1432.17,686.135 1432.73,686.135 1433.29,686.135 1433.85,686.135 1434.41,686.135 1434.97,686.135 1435.53,686.135 1436.09,686.135 1436.65,686.135 1437.21,686.135 1437.77,686.135 1438.33,686.135 1438.88,686.135 1439.44,686.135 1440,686.135 1440.56,686.135 1441.12,686.135 1441.68,686.135 1442.24,686.135 1442.8,686.135 1443.36,686.135 1443.92,686.135 1444.48,686.135 1445.04,686.135 1445.6,686.135 1446.15,686.135 1446.71,686.135 1447.27,686.135 1447.83,686.135 1448.39,686.135 1448.95,686.135 1449.51,686.135 1450.07,686.135 1450.63,686.135 1451.19,686.135 1451.75,686.135 1452.31,686.135 1452.87,686.135 1453.42,686.135 1453.98,686.135 1454.54,686.135 1455.1,686.135 1455.66,686.135 1456.22,686.135 1456.78,686.135 1457.34,686.135 1457.9,686.135 1458.46,686.135 1459.02,686.135 1459.58,686.135 1460.14,686.135 1460.7,686.135 1461.25,686.135 1461.81,686.135 1462.37,686.135 1462.93,686.135 1463.49,686.135 1464.05,686.135 1464.61,686.135 1465.17,686.135 1465.73,686.135 1466.29,686.135 1466.85,686.135 1467.41,686.135 1467.97,686.135 1468.52,686.135 1469.08,686.135 1469.64,686.135 1470.2,686.135 1470.76,686.135 1471.32,686.135 1471.88,686.135 1472.44,686.135 1473,686.135 1473.56,686.135 1474.12,686.135 1474.68,686.135 1475.24,686.135 1475.79,686.135 1476.35,686.135 1476.91,686.135 1477.47,686.135 1478.03,686.135 1478.59,686.135 1479.15,686.135 1479.71,686.135 1480.27,686.135 1480.83,686.135 1481.39,686.135 1481.95,686.135 1482.51,686.135 1483.07,686.135 1483.62,686.135 1484.18,686.135 1484.74,686.135 1485.3,686.135 1485.86,686.135 1486.42,686.135 1486.98,686.135 1487.54,686.135 1488.1,686.135 1488.66,686.135 1489.22,686.135 1489.78,686.135 1490.34,686.135 1490.89,686.135 1491.45,686.135 1492.01,686.135 1492.57,686.135 1493.13,686.135 1493.69,686.135 1494.25,686.135 1494.81,686.135 1495.37,686.135 1495.93,686.135 1496.49,686.135 1497.05,686.135 1497.61,686.135 1498.16,686.135 1498.72,686.135 1499.28,686.135 1499.84,686.135 1500.4,686.135 1500.96,686.135 1501.52,686.135 1502.08,686.135 1502.64,686.135 1503.2,686.135 1503.76,686.135 1504.32,686.135 1504.88,686.135 1505.44,686.135 1505.99,686.135 1506.55,686.135 1507.11,686.135 1507.67,686.135 1508.23,686.135 1508.79,686.135 1509.35,686.135 1509.91,686.135 1510.47,686.135 1511.03,686.135 1511.59,686.135 1512.15,686.135 1512.71,686.135 1513.26,686.135 1513.82,686.135 1514.38,686.135 1514.94,686.135 1515.5,686.135 1516.06,686.135 1516.62,686.135 1517.18,686.135 1517.74,686.135 1518.3,686.135 1518.86,686.135 1519.42,686.135 1519.98,686.135 1520.53,686.135 1521.09,686.135 1521.65,686.135 1522.21,686.135 1522.77,686.135 1523.33,686.135 1523.89,686.135 1524.45,686.135 1525.01,686.135 1525.57,686.135 1526.13,686.135 1526.69,686.135 1527.25,686.135 1527.81,686.135 1528.36,686.135 1528.92,686.135 1529.48,686.135 1530.04,686.135 1530.6,686.135 1531.16,686.135 1531.72,686.135 1532.28,686.135 1532.84,686.135 1533.4,686.135 1533.96,686.135 1534.52,686.135 1535.08,686.135 1535.63,686.135 1536.19,686.135 1536.75,686.135 1537.31,686.135 1537.87,686.135 1538.43,686.135 1538.99,686.135 1539.55,686.135 1540.11,686.135 1540.67,686.135 1541.23,686.135 1541.79,686.135 1542.35,686.135 1542.9,686.135 1543.46,686.135 1544.02,686.135 1544.58,686.135 1545.14,686.135 1545.7,686.135 1546.26,686.135 1546.82,686.135 1547.38,686.135 1547.94,686.135 1548.5,686.135 1549.06,686.135 1549.62,686.135 1550.18,686.135 1550.73,686.135 1551.29,686.135 1551.85,686.135 1552.41,686.135 1552.97,686.135 1553.53,686.135 1554.09,686.135 1554.65,686.135 1555.21,686.135 1555.77,686.135 1556.33,686.135 1556.89,686.135 1557.45,686.135 1558,686.135 1558.56,686.135 1559.12,686.135 1559.68,686.135 1560.24,686.135 1560.8,686.135 1561.36,686.135 1561.92,686.135 1562.48,686.135 1563.04,686.135 1563.6,686.135 1564.16,686.135 1564.72,686.135 1565.28,686.135 1565.83,686.135 1566.39,686.135 1566.95,686.135 1567.51,686.135 1568.07,686.135 1568.63,686.135 1569.19,686.135 1569.75,686.135 1570.31,686.135 1570.87,686.135 1571.43,686.135 1571.99,686.135 1572.55,686.135 1573.1,686.135 1573.66,686.135 1574.22,686.135 1574.78,686.135 1575.34,686.135 1575.9,686.135 1576.46,686.135 1577.02,686.135 1577.58,686.135 1578.14,686.135 1578.7,686.135 1579.26,686.135 1579.82,686.135 1580.37,686.135 1580.93,686.135 1581.49,686.135 1582.05,686.135 1582.61,686.135 1583.17,686.135 1583.73,686.135 1584.29,686.135 1584.85,686.135 1585.41,686.135 1585.97,686.135 1586.53,686.135 1587.09,686.135 1587.65,686.135 1588.2,686.135 1588.76,686.135 1589.32,686.135 1589.88,686.135 1590.44,686.135 1591,686.135 1591.56,686.135 1592.12,686.135 1592.68,686.135 1593.24,686.135 1593.8,686.135 1594.36,686.135 1594.92,686.135 1595.47,686.135 1596.03,686.135 1596.59,686.135 1597.15,686.135 1597.71,686.135 1598.27,686.135 1598.83,686.135 1599.39,686.135 1599.95,686.135 1600.51,686.135 1601.07,686.135 1601.63,686.135 1602.19,686.135 1602.74,686.135 1603.3,686.135 1603.86,686.135 1604.42,686.135 1604.98,686.135 1605.54,686.135 1606.1,686.135 1606.66,686.135 1607.22,686.135 1607.78,686.135 1608.34,686.135 1608.9,686.135 1609.46,686.135 1610.02,686.135 1610.57,686.135 1611.13,686.135 1611.69,686.135 1612.25,686.135 1612.81,686.135 1613.37,686.135 1613.93,686.135 1614.49,686.135 1615.05,686.135 1615.61,686.135 1616.17,686.135 1616.73,686.135 1617.29,686.135 1617.84,686.135 1618.4,686.135 1618.96,686.135 1619.52,686.135 1620.08,686.135 1620.64,686.135 1621.2,686.135 1621.76,686.135 1622.32,686.135 1622.88,686.135 1623.44,686.135 1624,686.135 1624.56,686.135 1625.11,686.135 1625.67,686.135 1626.23,686.135 1626.79,686.135 1627.35,686.135 1627.91,686.135 1628.47,686.135 1629.03,686.135 1629.59,686.135 1630.15,686.135 1630.71,686.135 1631.27,686.135 1631.83,686.135 1632.39,686.135 1632.94,686.135 1633.5,686.135 1634.06,686.135 1634.62,686.135 1635.18,686.135 1635.74,686.135 1636.3,686.135 1636.86,686.135 1637.42,686.135 1637.98,686.135 1638.54,686.135 1639.1,686.135 1639.66,686.135 1640.21,686.135 1640.77,686.135 1641.33,686.135 1641.89,686.135 1642.45,686.135 1643.01,686.135 1643.57,686.135 1644.13,686.135 1644.69,686.135 1645.25,686.135 1645.81,686.135 1646.37,686.135 1646.93,686.135 1647.48,686.135 1648.04,686.135 1648.6,686.135 1649.16,686.135 1649.72,686.135 1650.28,686.135 1650.84,686.135 1651.4,686.135 1651.96,686.135 1652.52,686.135 1653.08,686.135 1653.64,686.135 1654.2,686.135 1654.76,686.135 1655.31,686.135 1655.87,686.135 1656.43,686.135 1656.99,686.135 1657.55,686.135 1658.11,686.135 1658.67,686.135 1659.23,686.135 1659.79,686.135 1660.35,686.135 1660.91,686.135 1661.47,686.135 1662.03,686.135 1662.58,686.135 1663.14,686.135 1663.7,686.135 1664.26,686.135 1664.82,686.135 1665.38,686.135 1665.94,686.135 1666.5,686.135 1667.06,686.135 1667.62,686.135 1668.18,686.135 1668.74,686.135 1669.3,686.135 1669.85,686.135 1670.41,686.135 1670.97,686.135 1671.53,686.135 1672.09,686.135 1672.65,686.135 1673.21,686.135 1673.77,686.135 1674.33,686.135 1674.89,686.135 1675.45,686.135 1676.01,686.135 1676.57,686.135 1677.13,686.135 1677.68,686.135 1678.24,686.135 1678.8,686.135 1679.36,686.135 1679.92,686.135 1680.48,686.135 1681.04,686.135 1681.6,686.135 1682.16,686.135 1682.72,686.135 1683.28,686.135 1683.84,686.135 1684.4,686.135 1684.95,686.135 1685.51,686.135 1686.07,686.135 1686.63,686.135 1687.19,686.135 1687.75,686.135 1688.31,686.135 1688.87,686.135 1689.43,686.135 1689.99,686.135 1690.55,686.135 1691.11,686.135 1691.67,686.135 1692.23,686.135 1692.78,686.135 1693.34,686.135 1693.9,686.135 1694.46,686.135 1695.02,686.135 1695.58,686.135 1696.14,686.135 1696.7,686.135 1697.26,686.135 1697.82,686.135 1698.38,686.135 1698.94,686.135 1699.5,686.135 1700.05,686.135 1700.61,686.135 1701.17,686.135 1701.73,686.135 1702.29,686.135 1702.85,686.135 1703.41,686.135 1703.97,686.135 1704.53,686.135 1705.09,686.135 1705.65,686.135 1706.21,686.135 1706.77,686.135 1707.32,686.135 1707.88,686.135 1708.44,686.135 1709,686.135 1709.56,686.135 1710.12,686.135 1710.68,686.135 1711.24,686.135 1711.8,686.135 1712.36,686.135 1712.92,686.135 1713.48,686.135 1714.04,686.135 1714.6,686.135 1715.15,686.135 1715.71,686.135 1716.27,686.135 1716.83,686.135 1717.39,686.135 1717.95,686.135 1718.51,686.135 1719.07,686.135 1719.63,686.135 1720.19,686.135 1720.75,686.135 1721.31,686.135 1721.87,686.135 1722.42,686.135 1722.98,686.135 1723.54,686.135 1724.1,686.135 1724.66,686.135 1725.22,686.135 1725.78,686.135 1726.34,686.135 1726.9,686.135 1727.46,686.135 1728.02,686.135 1728.58,686.135 1729.14,686.135 1729.69,686.135 1730.25,686.135 1730.81,686.135 1731.37,686.135 1731.93,686.135 1732.49,686.135 1733.05,686.135 1733.61,686.135 1734.17,686.135 1734.73,686.135 1735.29,686.135 1735.85,686.135 1736.41,686.135 1736.97,686.135 1737.52,686.135 1738.08,686.135 1738.64,686.135 1739.2,686.135 1739.76,686.135 1740.32,686.135 1740.88,686.135 1741.44,686.135 1742,686.135 1742.56,686.135 1743.12,686.135 1743.68,686.135 1744.24,686.135 1744.79,686.135 1745.35,686.135 1745.91,686.135 1746.47,686.135 1747.03,686.135 1747.59,686.135 1748.15,686.135 1748.71,686.135 1749.27,686.135 1749.83,686.135 1750.39,686.135 1750.95,686.135 1751.51,686.135 1752.06,686.135 1752.62,686.135 1753.18,686.135 1753.74,686.135 1754.3,686.135 1754.86,686.135 1755.42,686.135 1755.98,686.135 1756.54,686.135 1757.1,686.135 1757.66,686.135 1758.22,686.135 1758.78,686.135 1759.34,686.135 1759.89,686.135 1760.45,686.135 1761.01,686.135 1761.57,686.135 1762.13,686.135 1762.69,686.135 1763.25,686.135 1763.81,686.135 1764.37,686.135 1764.93,686.135 1765.49,686.135 1766.05,686.135 1766.61,686.135 1767.16,686.135 1767.72,686.135 1768.28,686.135 1768.84,686.135 1769.4,686.135 1769.96,686.135 1770.52,686.135 1771.08,686.135 1771.64,686.135 1772.2,686.135 1772.76,686.135 1773.32,686.135 1773.88,686.135 1774.43,686.135 1774.99,686.135 1775.55,686.135 1776.11,686.135 1776.67,686.135 1777.23,686.135 1777.79,686.135 1778.35,686.135 1778.91,686.135 1779.47,686.135 1780.03,686.135 1780.59,686.135 1781.15,686.135 1781.71,686.135 1782.26,686.135 1782.82,686.135 1783.38,686.135 1783.94,686.135 1784.5,686.135 1785.06,686.135 1785.62,686.135 1786.18,686.135 1786.74,686.135 1787.3,686.135 1787.86,686.135 1788.42,686.135 1788.98,686.135 1789.53,686.135 1790.09,686.135 1790.65,686.135 1791.21,686.135 1791.77,686.135 1792.33,686.135 1792.89,686.135 1793.45,686.135 1794.01,686.135 1794.57,686.135 1795.13,686.135 1795.69,686.135 1796.25,686.135 1796.8,686.135 1797.36,686.135 1797.92,686.135 1798.48,686.135 1799.04,686.135 1799.6,686.135 1800.16,686.135 1800.72,686.135 1801.28,686.135 1801.84,686.135 1802.4,686.135 1802.96,686.135 1803.52,686.135 1804.08,686.135 1804.63,686.135 1805.19,686.135 1805.75,686.135 1806.31,686.135 1806.87,686.135 1807.43,686.135 1807.99,686.135 1808.55,686.135 1809.11,686.135 1809.67,686.135 1810.23,686.135 1810.79,686.135 1811.35,686.135 1811.9,686.135 1812.46,686.135 1813.02,686.135 1813.58,686.135 1814.14,686.135 1814.7,686.135 1815.26,686.135 1815.82,686.135 1816.38,686.135 1816.94,686.135 1817.5,686.135 1818.06,686.135 1818.62,686.135 1819.18,686.135 1819.73,686.135 1820.29,686.135 1820.85,686.135 1821.41,686.135 1821.97,686.135 1822.53,686.135 1823.09,686.135 1823.65,686.135 1824.21,686.135 1824.77,686.135 1825.33,686.135 1825.89,686.135 1826.45,686.135 1827,686.135 1827.56,686.135 1828.12,686.135 1828.68,686.135 1829.24,686.135 1829.8,686.135 1830.36,686.135 1830.92,686.135 1831.48,686.135 1832.04,686.135 1832.6,686.135 1833.16,686.135 1833.72,686.135 1834.27,686.135 1834.83,686.135 1835.39,686.135 1835.95,686.135 1836.51,686.135 1837.07,686.135 1837.63,686.135 1838.19,686.135 \"/>\n<path clip-path=\"url(#clip963)\" d=\"M720.247 684.684 L720.806 684.684 L721.365 684.684 L721.924 684.684 L722.484 684.684 L723.043 684.684 L723.602 684.684 L724.161 684.684 L724.721 684.684 L725.28 684.684 L725.839 684.684 L726.398 684.684 L726.958 684.684 L727.517 684.684 L728.076 684.684 L728.635 684.684 L729.195 684.684 L729.754 684.684 L730.313 684.684 L730.872 684.684 L731.432 684.684 L731.991 684.684 L732.55 684.684 L733.109 684.684 L733.669 684.684 L734.228 684.684 L734.787 684.684 L735.346 684.684 L735.906 684.684 L736.465 684.684 L737.024 684.684 L737.583 684.684 L738.143 684.684 L738.702 684.684 L739.261 684.684 L739.82 684.684 L740.38 684.684 L740.939 684.684 L741.498 684.684 L742.057 684.684 L742.617 684.684 L743.176 684.684 L743.735 684.684 L744.294 684.684 L744.854 684.684 L745.413 684.684 L745.972 684.684 L746.531 684.684 L747.091 684.684 L747.65 684.684 L748.209 684.684 L748.768 684.684 L749.328 684.684 L749.887 684.684 L750.446 684.684 L751.005 684.684 L751.565 684.684 L752.124 684.684 L752.683 684.684 L753.242 684.684 L753.802 684.684 L754.361 684.684 L754.92 684.684 L755.479 684.684 L756.039 684.684 L756.598 684.684 L757.157 684.684 L757.716 684.684 L758.276 684.684 L758.835 684.684 L759.394 684.684 L759.953 684.684 L760.513 684.684 L761.072 684.684 L761.631 684.684 L762.19 684.684 L762.75 684.684 L763.309 684.684 L763.868 684.684 L764.427 684.684 L764.987 684.684 L765.546 684.684 L766.105 684.684 L766.664 684.684 L767.224 684.684 L767.783 684.684 L768.342 684.684 L768.901 684.684 L769.461 684.684 L770.02 684.684 L770.579 684.684 L771.138 684.684 L771.698 684.684 L772.257 684.684 L772.816 684.684 L773.375 684.684 L773.935 684.684 L774.494 684.684 L775.053 684.684 L775.612 684.684 L776.172 684.684 L776.731 684.684 L777.29 684.684 L777.849 684.684 L778.409 684.684 L778.968 684.684 L779.527 684.684 L780.086 684.684 L780.646 684.684 L781.205 684.684 L781.764 684.684 L782.323 684.684 L782.883 684.684 L783.442 684.684 L784.001 684.684 L784.56 684.684 L785.12 684.684 L785.679 684.684 L786.238 684.684 L786.797 684.684 L787.357 684.684 L787.916 684.684 L788.475 684.684 L789.034 684.684 L789.594 684.684 L790.153 684.684 L790.712 684.684 L791.271 684.684 L791.831 684.684 L792.39 684.684 L792.949 684.684 L793.508 684.684 L794.068 684.684 L794.627 684.684 L795.186 684.684 L795.745 684.684 L796.305 684.684 L796.864 684.684 L797.423 684.684 L797.982 684.684 L798.542 684.684 L799.101 684.684 L799.66 684.684 L800.219 684.684 L800.779 684.684 L801.338 684.684 L801.897 684.684 L802.456 684.684 L803.016 684.684 L803.575 684.684 L804.134 684.684 L804.693 684.684 L805.253 684.684 L805.812 684.684 L806.371 684.684 L806.931 684.684 L807.49 684.684 L808.049 684.684 L808.608 684.684 L809.168 684.684 L809.727 684.684 L810.286 684.684 L810.845 684.684 L811.405 684.684 L811.964 684.684 L812.523 684.684 L813.082 684.684 L813.642 684.684 L814.201 684.684 L814.76 684.684 L815.319 684.684 L815.879 684.684 L816.438 684.684 L816.997 684.684 L817.556 684.684 L818.116 684.684 L818.675 684.684 L819.234 684.684 L819.793 684.684 L820.353 684.684 L820.912 684.684 L821.471 684.684 L822.03 684.684 L822.59 684.684 L823.149 684.684 L823.708 684.684 L824.267 684.684 L824.827 684.684 L825.386 684.684 L825.945 684.684 L826.504 684.684 L827.064 684.684 L827.623 684.684 L828.182 684.684 L828.741 684.684 L829.301 684.684 L829.86 684.684 L830.419 684.684 L830.978 684.684 L831.538 684.684 L832.097 684.684 L832.656 684.684 L833.215 684.684 L833.775 684.684 L834.334 684.684 L834.893 684.684 L835.452 684.684 L836.012 684.684 L836.571 684.684 L837.13 684.684 L837.689 684.684 L838.249 684.684 L838.808 684.684 L839.367 684.684 L839.926 684.684 L840.486 684.684 L841.045 684.684 L841.604 684.684 L842.163 684.684 L842.723 684.684 L843.282 684.684 L843.841 684.684 L844.4 684.684 L844.96 684.684 L845.519 684.684 L846.078 684.684 L846.637 684.684 L847.197 684.684 L847.756 684.684 L848.315 684.684 L848.874 684.684 L849.434 684.684 L849.993 684.684 L850.552 684.684 L851.111 684.684 L851.671 684.684 L852.23 684.684 L852.789 684.684 L853.348 684.684 L853.908 684.684 L854.467 684.684 L855.026 684.684 L855.585 684.684 L856.145 684.684 L856.704 684.684 L857.263 684.684 L857.822 684.684 L858.382 684.684 L858.941 684.684 L859.5 684.684 L860.059 684.684 L860.619 684.684 L861.178 684.684 L861.737 684.684 L862.296 684.684 L862.856 684.684 L863.415 684.684 L863.974 684.684 L864.533 684.684 L865.093 684.684 L865.652 684.684 L866.211 684.684 L866.77 684.684 L867.33 684.684 L867.889 684.684 L868.448 684.684 L869.007 684.684 L869.567 684.684 L870.126 684.684 L870.685 684.684 L871.244 684.684 L871.804 684.684 L872.363 684.684 L872.922 684.684 L873.481 684.684 L874.041 684.684 L874.6 684.684 L875.159 684.684 L875.718 684.684 L876.278 684.684 L876.837 684.684 L877.396 684.684 L877.955 684.684 L878.515 684.684 L879.074 684.684 L879.633 684.684 L880.192 684.684 L880.752 684.684 L881.311 684.684 L881.87 684.684 L882.429 684.684 L882.989 684.684 L883.548 684.684 L884.107 684.684 L884.666 684.684 L885.226 684.684 L885.785 684.684 L886.344 684.684 L886.903 684.684 L887.463 684.684 L888.022 684.684 L888.581 684.684 L889.14 684.684 L889.7 684.684 L890.259 684.684 L890.818 684.684 L891.377 684.684 L891.937 684.684 L892.496 684.684 L893.055 684.684 L893.614 684.684 L894.174 684.684 L894.733 684.684 L895.292 684.684 L895.851 684.684 L896.411 684.684 L896.97 684.684 L897.529 684.684 L898.088 684.684 L898.648 684.684 L899.207 684.684 L899.766 684.684 L900.325 684.684 L900.885 684.684 L901.444 684.684 L902.003 684.684 L902.562 684.684 L903.122 684.684 L903.681 684.684 L904.24 684.684 L904.799 684.684 L905.359 684.684 L905.918 684.684 L906.477 684.684 L907.036 684.684 L907.596 684.684 L908.155 684.684 L908.714 684.684 L909.273 684.684 L909.833 684.684 L910.392 684.684 L910.951 684.684 L911.51 684.684 L912.07 684.684 L912.629 684.684 L913.188 684.684 L913.747 684.684 L914.307 684.684 L914.866 684.684 L915.425 684.684 L915.984 684.684 L916.544 684.684 L917.103 684.684 L917.662 684.684 L918.221 684.684 L918.781 684.684 L919.34 684.684 L919.899 684.684 L920.458 684.684 L921.018 684.684 L921.577 684.684 L922.136 684.684 L922.695 684.684 L923.255 684.684 L923.814 684.684 L924.373 684.684 L924.932 684.684 L925.492 684.684 L926.051 684.684 L926.61 684.684 L927.169 684.684 L927.729 684.684 L928.288 684.684 L928.847 684.684 L929.406 684.684 L929.966 684.684 L930.525 684.684 L931.084 684.684 L931.644 684.684 L932.203 684.684 L932.762 684.684 L933.321 684.684 L933.881 684.684 L934.44 684.684 L934.999 684.684 L935.558 684.684 L936.118 684.684 L936.677 684.684 L937.236 684.684 L937.795 684.684 L938.355 684.684 L938.914 684.684 L939.473 684.684 L940.032 684.684 L940.592 684.684 L941.151 684.684 L941.71 684.684 L942.269 684.684 L942.829 684.684 L943.388 684.684 L943.947 684.684 L944.506 684.684 L945.066 684.684 L945.625 684.684 L946.184 684.684 L946.743 684.684 L947.303 684.684 L947.862 684.684 L948.421 684.684 L948.98 684.684 L949.54 684.684 L950.099 684.684 L950.658 684.684 L951.217 684.684 L951.777 684.684 L952.336 684.684 L952.895 684.684 L953.454 684.684 L954.014 684.684 L954.573 684.684 L955.132 684.684 L955.691 684.684 L956.251 684.684 L956.81 684.684 L957.369 684.684 L957.928 684.684 L958.488 684.684 L959.047 684.684 L959.606 684.684 L960.165 684.684 L960.725 684.684 L961.284 684.684 L961.843 684.684 L962.402 684.684 L962.962 684.684 L963.521 684.684 L964.08 684.684 L964.639 684.684 L965.199 684.684 L965.758 684.684 L966.317 684.684 L966.876 684.684 L967.436 684.684 L967.995 684.684 L968.554 684.684 L969.113 684.684 L969.673 684.684 L970.232 684.684 L970.791 684.684 L971.35 684.684 L971.91 684.684 L972.469 684.684 L973.028 684.684 L973.587 684.684 L974.147 684.684 L974.706 684.684 L975.265 684.684 L975.824 684.684 L976.384 684.684 L976.943 684.684 L977.502 684.684 L978.061 684.684 L978.621 684.684 L979.18 684.684 L979.739 684.684 L980.298 684.684 L980.858 684.684 L981.417 684.684 L981.976 684.684 L982.535 684.684 L983.095 684.684 L983.654 684.684 L984.213 684.684 L984.772 684.684 L985.332 684.684 L985.891 684.684 L986.45 684.684 L987.009 684.684 L987.569 684.684 L988.128 684.684 L988.687 684.684 L989.246 684.684 L989.806 684.684 L990.365 684.684 L990.924 684.684 L991.483 684.684 L992.043 684.684 L992.602 684.684 L993.161 684.684 L993.72 684.684 L994.28 684.684 L994.839 684.684 L995.398 684.684 L995.957 684.684 L996.517 684.684 L997.076 684.684 L997.635 684.684 L998.194 684.684 L998.754 684.684 L999.313 684.684 L999.872 684.684 L1000.43 684.684 L1000.99 684.684 L1001.55 684.684 L1002.11 684.684 L1002.67 684.684 L1003.23 684.684 L1003.79 684.684 L1004.35 684.684 L1004.91 684.684 L1005.46 684.684 L1006.02 684.684 L1006.58 684.684 L1007.14 684.684 L1007.7 684.684 L1008.26 684.684 L1008.82 684.684 L1009.38 684.684 L1009.94 684.684 L1010.5 684.684 L1011.06 684.684 L1011.62 684.684 L1012.18 684.684 L1012.73 684.684 L1013.29 684.684 L1013.85 684.684 L1014.41 684.684 L1014.97 684.684 L1015.53 684.684 L1016.09 684.684 L1016.65 684.684 L1017.21 684.684 L1017.77 684.684 L1018.33 684.684 L1018.89 684.684 L1019.45 684.684 L1020.01 684.684 L1020.56 684.684 L1021.12 684.684 L1021.68 684.684 L1022.24 684.684 L1022.8 684.684 L1023.36 684.684 L1023.92 684.684 L1024.48 684.684 L1025.04 684.684 L1025.6 684.684 L1026.16 684.684 L1026.72 684.684 L1027.28 684.684 L1027.83 684.684 L1028.39 684.684 L1028.95 684.684 L1029.51 684.684 L1030.07 684.684 L1030.63 684.684 L1031.19 684.684 L1031.75 684.684 L1032.31 684.684 L1032.87 684.684 L1033.43 684.684 L1033.99 684.684 L1034.55 684.684 L1035.1 684.684 L1035.66 684.684 L1036.22 684.684 L1036.78 684.684 L1037.34 684.684 L1037.9 684.684 L1038.46 684.684 L1039.02 684.684 L1039.58 684.684 L1040.14 684.684 L1040.7 684.684 L1041.26 684.684 L1041.82 684.684 L1042.38 684.684 L1042.93 684.684 L1043.49 684.684 L1044.05 684.684 L1044.61 684.684 L1045.17 684.684 L1045.73 684.684 L1046.29 684.684 L1046.85 684.684 L1047.41 684.684 L1047.97 684.684 L1048.53 684.684 L1049.09 684.684 L1049.65 684.684 L1050.2 684.684 L1050.76 684.684 L1051.32 684.684 L1051.88 684.684 L1052.44 684.684 L1053 684.684 L1053.56 684.684 L1054.12 684.684 L1054.68 684.684 L1055.24 684.684 L1055.8 684.684 L1056.36 684.684 L1056.92 684.684 L1057.48 684.684 L1058.03 684.684 L1058.59 684.684 L1059.15 684.684 L1059.71 684.684 L1060.27 684.684 L1060.83 684.684 L1061.39 684.684 L1061.95 684.684 L1062.51 684.684 L1063.07 684.684 L1063.63 684.684 L1064.19 684.684 L1064.75 684.684 L1065.3 684.684 L1065.86 684.684 L1066.42 684.684 L1066.98 684.684 L1067.54 684.684 L1068.1 684.684 L1068.66 684.684 L1069.22 684.684 L1069.78 684.684 L1070.34 684.684 L1070.9 684.684 L1071.46 684.684 L1072.02 684.684 L1072.57 684.684 L1073.13 684.684 L1073.69 684.684 L1074.25 684.684 L1074.81 684.684 L1075.37 684.684 L1075.93 684.684 L1076.49 684.684 L1077.05 684.684 L1077.61 684.684 L1078.17 684.684 L1078.73 684.684 L1079.29 684.684 L1079.85 684.684 L1080.4 684.684 L1080.96 684.684 L1081.52 684.684 L1082.08 684.684 L1082.64 684.684 L1083.2 684.684 L1083.76 684.684 L1084.32 684.684 L1084.88 684.684 L1085.44 684.684 L1086 684.684 L1086.56 684.684 L1087.12 684.684 L1087.67 684.684 L1088.23 684.684 L1088.79 684.684 L1089.35 684.684 L1089.91 684.684 L1090.47 684.684 L1091.03 684.684 L1091.59 684.684 L1092.15 684.684 L1092.71 684.684 L1093.27 684.684 L1093.83 684.684 L1094.39 684.684 L1094.94 684.684 L1095.5 684.684 L1096.06 684.684 L1096.62 684.684 L1097.18 684.684 L1097.74 684.684 L1098.3 684.684 L1098.86 684.684 L1099.42 684.684 L1099.98 684.684 L1100.54 684.684 L1101.1 684.684 L1101.66 684.684 L1102.22 684.684 L1102.77 684.684 L1103.33 684.684 L1103.89 684.684 L1104.45 684.684 L1105.01 684.684 L1105.57 684.684 L1106.13 684.684 L1106.69 684.684 L1107.25 684.684 L1107.81 684.684 L1108.37 684.684 L1108.93 684.684 L1109.49 684.684 L1110.04 684.684 L1110.6 684.684 L1111.16 684.684 L1111.72 684.684 L1112.28 684.684 L1112.84 684.684 L1113.4 684.684 L1113.96 684.684 L1114.52 684.684 L1115.08 684.684 L1115.64 684.684 L1116.2 684.684 L1116.76 684.684 L1117.31 684.684 L1117.87 684.684 L1118.43 684.684 L1118.99 684.684 L1119.55 684.684 L1120.11 684.684 L1120.67 684.684 L1121.23 684.684 L1121.79 684.684 L1122.35 684.684 L1122.91 684.684 L1123.47 684.684 L1124.03 684.684 L1124.59 684.684 L1125.14 684.684 L1125.7 684.684 L1126.26 684.684 L1126.82 684.684 L1127.38 684.684 L1127.94 684.684 L1128.5 684.684 L1129.06 684.684 L1129.62 684.684 L1130.18 684.684 L1130.74 684.684 L1131.3 684.684 L1131.86 684.684 L1132.41 684.684 L1132.97 684.684 L1133.53 684.684 L1134.09 684.684 L1134.65 684.684 L1135.21 684.684 L1135.77 684.684 L1136.33 684.684 L1136.89 684.684 L1137.45 684.684 L1138.01 684.684 L1138.57 684.684 L1139.13 684.684 L1139.68 684.684 L1140.24 684.684 L1140.8 684.684 L1141.36 684.684 L1141.92 684.684 L1142.48 684.684 L1143.04 684.684 L1143.6 684.684 L1144.16 684.684 L1144.72 684.684 L1145.28 684.684 L1145.84 684.684 L1146.4 684.684 L1146.96 684.684 L1147.51 684.684 L1148.07 684.684 L1148.63 684.684 L1149.19 684.684 L1149.75 684.684 L1150.31 684.684 L1150.87 684.684 L1151.43 684.684 L1151.99 684.684 L1152.55 684.684 L1153.11 684.684 L1153.67 684.684 L1154.23 684.684 L1154.78 684.684 L1155.34 684.684 L1155.9 684.684 L1156.46 684.684 L1157.02 684.684 L1157.58 684.684 L1158.14 684.684 L1158.7 684.684 L1159.26 684.684 L1159.82 684.684 L1160.38 684.684 L1160.94 684.684 L1161.5 684.684 L1162.05 684.684 L1162.61 684.684 L1163.17 684.684 L1163.73 684.684 L1164.29 684.684 L1164.85 684.684 L1165.41 684.684 L1165.97 684.684 L1166.53 684.684 L1167.09 684.684 L1167.65 684.684 L1168.21 684.684 L1168.77 684.684 L1169.33 684.684 L1169.88 684.684 L1170.44 684.684 L1171 684.684 L1171.56 684.684 L1172.12 684.684 L1172.68 684.684 L1173.24 684.684 L1173.8 684.684 L1174.36 684.684 L1174.92 684.684 L1175.48 684.684 L1176.04 684.684 L1176.6 684.684 L1177.15 684.684 L1177.71 684.684 L1178.27 684.684 L1178.83 684.684 L1179.39 684.684 L1179.95 684.684 L1180.51 684.684 L1181.07 684.684 L1181.63 684.684 L1182.19 684.684 L1182.75 684.684 L1183.31 684.684 L1183.87 684.684 L1184.43 684.684 L1184.98 684.684 L1185.54 684.684 L1186.1 684.684 L1186.66 684.684 L1187.22 684.684 L1187.78 684.684 L1188.34 684.684 L1188.9 684.684 L1189.46 684.684 L1190.02 684.684 L1190.58 684.684 L1191.14 684.684 L1191.7 684.684 L1192.25 684.684 L1192.81 684.684 L1193.37 684.684 L1193.93 684.684 L1194.49 684.684 L1195.05 684.684 L1195.61 684.684 L1196.17 684.684 L1196.73 684.684 L1197.29 684.684 L1197.85 684.684 L1198.41 684.684 L1198.97 684.684 L1199.52 684.684 L1200.08 684.684 L1200.64 684.684 L1201.2 684.684 L1201.76 684.684 L1202.32 684.684 L1202.88 684.684 L1203.44 684.684 L1204 684.684 L1204.56 684.684 L1205.12 684.684 L1205.68 684.684 L1206.24 684.684 L1206.8 684.684 L1207.35 684.684 L1207.91 684.684 L1208.47 684.684 L1209.03 684.684 L1209.59 684.684 L1210.15 684.684 L1210.71 684.684 L1211.27 684.684 L1211.83 684.684 L1212.39 684.684 L1212.95 684.684 L1213.51 684.684 L1214.07 684.684 L1214.62 684.684 L1215.18 684.684 L1215.74 684.684 L1216.3 684.684 L1216.86 684.684 L1217.42 684.684 L1217.98 684.684 L1218.54 684.684 L1219.1 684.684 L1219.66 684.684 L1220.22 684.684 L1220.78 684.684 L1221.34 684.684 L1221.89 684.684 L1222.45 684.684 L1223.01 684.684 L1223.57 684.684 L1224.13 684.684 L1224.69 684.684 L1225.25 684.684 L1225.81 684.684 L1226.37 684.684 L1226.93 684.684 L1227.49 684.684 L1228.05 684.684 L1228.61 684.684 L1229.17 684.684 L1229.72 684.684 L1230.28 684.684 L1230.84 684.684 L1231.4 684.684 L1231.96 684.684 L1232.52 684.684 L1233.08 684.684 L1233.64 684.684 L1234.2 684.684 L1234.76 684.684 L1235.32 684.684 L1235.88 684.684 L1236.44 684.684 L1236.99 684.684 L1237.55 684.684 L1238.11 684.684 L1238.67 684.684 L1239.23 684.684 L1239.79 684.684 L1240.35 684.684 L1240.91 684.684 L1241.47 684.684 L1242.03 684.684 L1242.59 684.684 L1243.15 684.684 L1243.71 684.684 L1244.26 684.684 L1244.82 684.684 L1245.38 684.684 L1245.94 684.684 L1246.5 684.684 L1247.06 684.684 L1247.62 684.684 L1248.18 684.684 L1248.74 684.684 L1249.3 684.684 L1249.86 684.684 L1250.42 684.684 L1250.98 684.684 L1251.54 684.684 L1252.09 684.684 L1252.65 684.684 L1253.21 684.684 L1253.77 684.684 L1254.33 684.684 L1254.89 684.684 L1255.45 684.684 L1256.01 684.684 L1256.57 684.684 L1257.13 684.684 L1257.69 684.684 L1258.25 684.684 L1258.81 684.684 L1259.36 684.684 L1259.92 684.684 L1260.48 684.684 L1261.04 684.684 L1261.6 684.684 L1262.16 684.684 L1262.72 684.684 L1263.28 684.684 L1263.84 684.684 L1264.4 684.684 L1264.96 684.684 L1265.52 684.684 L1266.08 684.684 L1266.63 684.684 L1267.19 684.684 L1267.75 684.684 L1268.31 684.684 L1268.87 684.684 L1269.43 684.684 L1269.99 684.684 L1270.55 684.684 L1271.11 684.684 L1271.67 684.684 L1272.23 684.684 L1272.79 684.684 L1273.35 684.684 L1273.91 684.684 L1274.46 684.684 L1275.02 684.684 L1275.58 684.684 L1276.14 684.684 L1276.7 684.684 L1277.26 684.684 L1277.82 684.684 L1278.38 684.684 L1278.94 684.684 L1279.5 684.684 L1280.06 684.684 L1280.62 684.684 L1281.18 684.684 L1281.73 684.684 L1282.29 684.684 L1282.85 684.684 L1283.41 684.684 L1283.97 684.684 L1284.53 684.684 L1285.09 684.684 L1285.65 684.684 L1286.21 684.684 L1286.77 684.684 L1287.33 684.684 L1287.89 684.684 L1288.45 684.684 L1289 684.684 L1289.56 684.684 L1290.12 684.684 L1290.68 684.684 L1291.24 684.684 L1291.8 684.684 L1292.36 684.684 L1292.92 684.684 L1293.48 684.684 L1294.04 684.684 L1294.6 684.684 L1295.16 684.684 L1295.72 684.684 L1296.28 684.684 L1296.83 684.684 L1297.39 684.684 L1297.95 684.684 L1298.51 684.684 L1299.07 684.684 L1299.63 684.684 L1300.19 684.684 L1300.75 684.684 L1301.31 684.684 L1301.87 684.684 L1302.43 684.684 L1302.99 684.684 L1303.55 684.684 L1304.1 684.684 L1304.66 684.684 L1305.22 684.684 L1305.78 684.684 L1306.34 684.684 L1306.9 684.684 L1307.46 684.684 L1308.02 684.684 L1308.58 684.684 L1309.14 684.684 L1309.7 684.684 L1310.26 684.684 L1310.82 684.684 L1311.38 684.684 L1311.93 684.684 L1312.49 684.684 L1313.05 684.684 L1313.61 684.684 L1314.17 684.684 L1314.73 684.684 L1315.29 684.684 L1315.85 684.684 L1316.41 684.684 L1316.97 684.684 L1317.53 684.684 L1318.09 684.684 L1318.65 684.684 L1319.2 684.684 L1319.76 684.684 L1320.32 684.684 L1320.88 684.684 L1321.44 684.684 L1322 684.684 L1322.56 684.684 L1323.12 684.684 L1323.68 684.684 L1324.24 684.684 L1324.8 684.684 L1325.36 684.684 L1325.92 684.684 L1326.47 684.684 L1327.03 684.684 L1327.59 684.684 L1328.15 684.684 L1328.71 684.684 L1329.27 684.684 L1329.83 684.684 L1330.39 684.684 L1330.95 684.684 L1331.51 684.684 L1332.07 684.684 L1332.63 684.684 L1333.19 684.684 L1333.75 684.684 L1334.3 684.684 L1334.86 684.684 L1335.42 684.684 L1335.98 684.684 L1336.54 684.684 L1337.1 684.684 L1337.66 684.684 L1338.22 684.684 L1338.78 684.684 L1339.34 684.684 L1339.9 684.684 L1340.46 684.684 L1341.02 684.684 L1341.57 684.684 L1342.13 684.684 L1342.69 684.684 L1343.25 684.684 L1343.81 684.684 L1344.37 684.684 L1344.93 684.684 L1345.49 684.684 L1346.05 684.684 L1346.61 684.684 L1347.17 684.684 L1347.73 684.684 L1348.29 684.684 L1348.84 684.684 L1349.4 684.684 L1349.96 684.684 L1350.52 684.684 L1351.08 684.684 L1351.64 684.684 L1352.2 684.684 L1352.76 684.684 L1353.32 684.684 L1353.88 684.684 L1354.44 684.684 L1355 684.684 L1355.56 684.684 L1356.12 684.684 L1356.67 684.684 L1357.23 684.684 L1357.79 684.684 L1358.35 684.684 L1358.91 684.684 L1359.47 684.684 L1360.03 684.684 L1360.59 684.684 L1361.15 684.684 L1361.71 684.684 L1362.27 684.684 L1362.83 684.684 L1363.39 684.684 L1363.94 684.684 L1364.5 684.684 L1365.06 684.684 L1365.62 684.684 L1366.18 684.684 L1366.74 684.684 L1367.3 684.684 L1367.86 684.684 L1368.42 684.684 L1368.98 684.684 L1369.54 684.684 L1370.1 684.684 L1370.66 684.684 L1371.21 684.684 L1371.77 684.684 L1372.33 684.684 L1372.89 684.684 L1373.45 684.684 L1374.01 684.684 L1374.57 684.684 L1375.13 684.684 L1375.69 684.684 L1376.25 684.684 L1376.81 684.684 L1377.37 684.684 L1377.93 684.684 L1378.49 684.684 L1379.04 684.684 L1379.6 684.684 L1380.16 684.684 L1380.72 684.684 L1381.28 684.684 L1381.84 684.684 L1382.4 684.684 L1382.96 684.684 L1383.52 684.684 L1384.08 684.684 L1384.64 684.684 L1385.2 684.684 L1385.76 684.684 L1386.31 684.684 L1386.87 684.684 L1387.43 684.684 L1387.99 684.684 L1388.55 684.684 L1389.11 684.684 L1389.67 684.684 L1390.23 684.684 L1390.79 684.684 L1391.35 684.684 L1391.91 684.684 L1392.47 684.684 L1393.03 684.684 L1393.58 684.684 L1394.14 684.684 L1394.7 684.684 L1395.26 684.684 L1395.82 684.684 L1396.38 684.684 L1396.94 684.684 L1397.5 684.684 L1398.06 684.684 L1398.62 684.684 L1399.18 684.684 L1399.74 684.684 L1400.3 684.684 L1400.86 684.684 L1401.41 684.684 L1401.97 684.684 L1402.53 684.684 L1403.09 684.684 L1403.65 684.684 L1404.21 684.684 L1404.77 684.684 L1405.33 684.684 L1405.89 684.684 L1406.45 684.684 L1407.01 684.684 L1407.57 684.684 L1408.13 684.684 L1408.68 684.684 L1409.24 684.684 L1409.8 684.684 L1410.36 684.684 L1410.92 684.684 L1411.48 684.684 L1412.04 684.684 L1412.6 684.684 L1413.16 684.684 L1413.72 684.684 L1414.28 684.684 L1414.84 684.684 L1415.4 684.684 L1415.95 684.684 L1416.51 684.684 L1417.07 684.684 L1417.63 684.684 L1418.19 684.684 L1418.75 684.684 L1419.31 684.684 L1419.87 684.684 L1420.43 684.684 L1420.99 684.684 L1421.55 684.684 L1422.11 684.684 L1422.67 684.684 L1423.23 684.684 L1423.78 684.684 L1424.34 684.684 L1424.9 684.684 L1425.46 684.684 L1426.02 684.684 L1426.58 684.684 L1427.14 684.684 L1427.7 684.684 L1428.26 684.684 L1428.82 684.684 L1429.38 684.684 L1429.94 684.684 L1430.5 684.684 L1431.05 684.684 L1431.61 684.684 L1432.17 684.684 L1432.73 684.684 L1433.29 684.684 L1433.85 684.684 L1434.41 684.684 L1434.97 684.684 L1435.53 684.684 L1436.09 684.684 L1436.65 684.684 L1437.21 684.684 L1437.77 684.684 L1438.33 684.684 L1438.88 684.684 L1439.44 684.684 L1440 684.684 L1440.56 684.684 L1441.12 684.684 L1441.68 684.684 L1442.24 684.684 L1442.8 684.684 L1443.36 684.684 L1443.92 684.684 L1444.48 684.684 L1445.04 684.684 L1445.6 684.684 L1446.15 684.684 L1446.71 684.684 L1447.27 684.684 L1447.83 684.684 L1448.39 684.684 L1448.95 684.684 L1449.51 684.684 L1450.07 684.684 L1450.63 684.684 L1451.19 684.684 L1451.75 684.684 L1452.31 684.684 L1452.87 684.684 L1453.42 684.684 L1453.98 684.684 L1454.54 684.684 L1455.1 684.684 L1455.66 684.684 L1456.22 684.684 L1456.78 684.684 L1457.34 684.684 L1457.9 684.684 L1458.46 684.684 L1459.02 684.684 L1459.58 684.684 L1460.14 684.684 L1460.7 684.684 L1461.25 684.684 L1461.81 684.684 L1462.37 684.684 L1462.93 684.684 L1463.49 684.684 L1464.05 684.684 L1464.61 684.684 L1465.17 684.684 L1465.73 684.684 L1466.29 684.684 L1466.85 684.684 L1467.41 684.684 L1467.97 684.684 L1468.52 684.684 L1469.08 684.684 L1469.64 684.684 L1470.2 684.684 L1470.76 684.684 L1471.32 684.684 L1471.88 684.684 L1472.44 684.684 L1473 684.684 L1473.56 684.684 L1474.12 684.684 L1474.68 684.684 L1475.24 684.684 L1475.79 684.684 L1476.35 684.684 L1476.91 684.684 L1477.47 684.684 L1478.03 684.684 L1478.59 684.684 L1479.15 684.684 L1479.71 684.684 L1480.27 684.684 L1480.83 684.684 L1481.39 684.684 L1481.95 684.684 L1482.51 684.684 L1483.07 684.684 L1483.62 684.684 L1484.18 684.684 L1484.74 684.684 L1485.3 684.684 L1485.86 684.684 L1486.42 684.684 L1486.98 684.684 L1487.54 684.684 L1488.1 684.684 L1488.66 684.684 L1489.22 684.684 L1489.78 684.684 L1490.34 684.684 L1490.89 684.684 L1491.45 684.684 L1492.01 684.684 L1492.57 684.684 L1493.13 684.684 L1493.69 684.684 L1494.25 684.684 L1494.81 684.684 L1495.37 684.684 L1495.93 684.684 L1496.49 684.684 L1497.05 684.684 L1497.61 684.684 L1498.16 684.684 L1498.72 684.684 L1499.28 684.684 L1499.84 684.684 L1500.4 684.684 L1500.96 684.684 L1501.52 684.684 L1502.08 684.684 L1502.64 684.684 L1503.2 684.684 L1503.76 684.684 L1504.32 684.684 L1504.88 684.684 L1505.44 684.684 L1505.99 684.684 L1506.55 684.684 L1507.11 684.684 L1507.67 684.684 L1508.23 684.684 L1508.79 684.684 L1509.35 684.684 L1509.91 684.684 L1510.47 684.684 L1511.03 684.684 L1511.59 684.684 L1512.15 684.684 L1512.71 684.684 L1513.26 684.684 L1513.82 684.684 L1514.38 684.684 L1514.94 684.684 L1515.5 684.684 L1516.06 684.684 L1516.62 684.684 L1517.18 684.684 L1517.74 684.684 L1518.3 684.684 L1518.86 684.684 L1519.42 684.684 L1519.98 684.684 L1520.53 684.684 L1521.09 684.684 L1521.65 684.684 L1522.21 684.684 L1522.77 684.684 L1523.33 684.684 L1523.89 684.684 L1524.45 684.684 L1525.01 684.684 L1525.57 684.684 L1526.13 684.684 L1526.69 684.684 L1527.25 684.684 L1527.81 684.684 L1528.36 684.684 L1528.92 684.684 L1529.48 684.684 L1530.04 684.684 L1530.6 684.684 L1531.16 684.684 L1531.72 684.684 L1532.28 684.684 L1532.84 684.684 L1533.4 684.684 L1533.96 684.684 L1534.52 684.684 L1535.08 684.684 L1535.63 684.684 L1536.19 684.684 L1536.75 684.684 L1537.31 684.684 L1537.87 684.684 L1538.43 684.684 L1538.99 684.684 L1539.55 684.684 L1540.11 684.684 L1540.67 684.684 L1541.23 684.684 L1541.79 684.684 L1542.35 684.684 L1542.9 684.684 L1543.46 684.684 L1544.02 684.684 L1544.58 684.684 L1545.14 684.684 L1545.7 684.684 L1546.26 684.684 L1546.82 684.684 L1547.38 684.684 L1547.94 684.684 L1548.5 684.684 L1549.06 684.684 L1549.62 684.684 L1550.18 684.684 L1550.73 684.684 L1551.29 684.684 L1551.85 684.684 L1552.41 684.684 L1552.97 684.684 L1553.53 684.684 L1554.09 684.684 L1554.65 684.684 L1555.21 684.684 L1555.77 684.684 L1556.33 684.684 L1556.89 684.684 L1557.45 684.684 L1558 684.684 L1558.56 684.684 L1559.12 684.684 L1559.68 684.684 L1560.24 684.684 L1560.8 684.684 L1561.36 684.684 L1561.92 684.684 L1562.48 684.684 L1563.04 684.684 L1563.6 684.684 L1564.16 684.684 L1564.72 684.684 L1565.28 684.684 L1565.83 684.684 L1566.39 684.684 L1566.95 684.684 L1567.51 684.684 L1568.07 684.684 L1568.63 684.684 L1569.19 684.684 L1569.75 684.684 L1570.31 684.684 L1570.87 684.684 L1571.43 684.684 L1571.99 684.684 L1572.55 684.684 L1573.1 684.684 L1573.66 684.684 L1574.22 684.684 L1574.78 684.684 L1575.34 684.684 L1575.9 684.684 L1576.46 684.684 L1577.02 684.684 L1577.58 684.684 L1578.14 684.684 L1578.7 684.684 L1579.26 684.684 L1579.82 684.684 L1580.37 684.684 L1580.93 684.684 L1581.49 684.684 L1582.05 684.684 L1582.61 684.684 L1583.17 684.684 L1583.73 684.684 L1584.29 684.684 L1584.85 684.684 L1585.41 684.684 L1585.97 684.684 L1586.53 684.684 L1587.09 684.684 L1587.65 684.684 L1588.2 684.684 L1588.76 684.684 L1589.32 684.684 L1589.88 684.684 L1590.44 684.684 L1591 684.684 L1591.56 684.684 L1592.12 684.684 L1592.68 684.684 L1593.24 684.684 L1593.8 684.684 L1594.36 684.684 L1594.92 684.684 L1595.47 684.684 L1596.03 684.684 L1596.59 684.684 L1597.15 684.684 L1597.71 684.684 L1598.27 684.684 L1598.83 684.684 L1599.39 684.684 L1599.95 684.684 L1600.51 684.684 L1601.07 684.684 L1601.63 684.684 L1602.19 684.684 L1602.74 684.684 L1603.3 684.684 L1603.86 684.684 L1604.42 684.684 L1604.98 684.684 L1605.54 684.684 L1606.1 684.684 L1606.66 684.684 L1607.22 684.684 L1607.78 684.684 L1608.34 684.684 L1608.9 684.684 L1609.46 684.684 L1610.02 684.684 L1610.57 684.684 L1611.13 684.684 L1611.69 684.684 L1612.25 684.684 L1612.81 684.684 L1613.37 684.684 L1613.93 684.684 L1614.49 684.684 L1615.05 684.684 L1615.61 684.684 L1616.17 684.684 L1616.73 684.684 L1617.29 684.684 L1617.84 684.684 L1618.4 684.684 L1618.96 684.684 L1619.52 684.684 L1620.08 684.684 L1620.64 684.684 L1621.2 684.684 L1621.76 684.684 L1622.32 684.684 L1622.88 684.684 L1623.44 684.684 L1624 684.684 L1624.56 684.684 L1625.11 684.684 L1625.67 684.684 L1626.23 684.684 L1626.79 684.684 L1627.35 684.684 L1627.91 684.684 L1628.47 684.684 L1629.03 684.684 L1629.59 684.684 L1630.15 684.684 L1630.71 684.684 L1631.27 684.684 L1631.83 684.684 L1632.39 684.684 L1632.94 684.684 L1633.5 684.684 L1634.06 684.684 L1634.62 684.684 L1635.18 684.684 L1635.74 684.684 L1636.3 684.684 L1636.86 684.684 L1637.42 684.684 L1637.98 684.684 L1638.54 684.684 L1639.1 684.684 L1639.66 684.684 L1640.21 684.684 L1640.77 684.684 L1641.33 684.684 L1641.89 684.684 L1642.45 684.684 L1643.01 684.684 L1643.57 684.684 L1644.13 684.684 L1644.69 684.684 L1645.25 684.684 L1645.81 684.684 L1646.37 684.684 L1646.93 684.684 L1647.48 684.684 L1648.04 684.684 L1648.6 684.684 L1649.16 684.684 L1649.72 684.684 L1650.28 684.684 L1650.84 684.684 L1651.4 684.684 L1651.96 684.684 L1652.52 684.684 L1653.08 684.684 L1653.64 684.684 L1654.2 684.684 L1654.76 684.684 L1655.31 684.684 L1655.87 684.684 L1656.43 684.684 L1656.99 684.684 L1657.55 684.684 L1658.11 684.684 L1658.67 684.684 L1659.23 684.684 L1659.79 684.684 L1660.35 684.684 L1660.91 684.684 L1661.47 684.684 L1662.03 684.684 L1662.58 684.684 L1663.14 684.684 L1663.7 684.684 L1664.26 684.684 L1664.82 684.684 L1665.38 684.684 L1665.94 684.684 L1666.5 684.684 L1667.06 684.684 L1667.62 684.684 L1668.18 684.684 L1668.74 684.684 L1669.3 684.684 L1669.85 684.684 L1670.41 684.684 L1670.97 684.684 L1671.53 684.684 L1672.09 684.684 L1672.65 684.684 L1673.21 684.684 L1673.77 684.684 L1674.33 684.684 L1674.89 684.684 L1675.45 684.684 L1676.01 684.684 L1676.57 684.684 L1677.13 684.684 L1677.68 684.684 L1678.24 684.684 L1678.8 684.684 L1679.36 684.684 L1679.92 684.684 L1680.48 684.684 L1681.04 684.684 L1681.6 684.684 L1682.16 684.684 L1682.72 684.684 L1683.28 684.684 L1683.84 684.684 L1684.4 684.684 L1684.95 684.684 L1685.51 684.684 L1686.07 684.684 L1686.63 684.684 L1687.19 684.684 L1687.75 684.684 L1688.31 684.684 L1688.87 684.684 L1689.43 684.684 L1689.99 684.684 L1690.55 684.684 L1691.11 684.684 L1691.67 684.684 L1692.23 684.684 L1692.78 684.684 L1693.34 684.684 L1693.9 684.684 L1694.46 684.684 L1695.02 684.684 L1695.58 684.684 L1696.14 684.684 L1696.7 684.684 L1697.26 684.684 L1697.82 684.684 L1698.38 684.684 L1698.94 684.684 L1699.5 684.684 L1700.05 684.684 L1700.61 684.684 L1701.17 684.684 L1701.73 684.684 L1702.29 684.684 L1702.85 684.684 L1703.41 684.684 L1703.97 684.684 L1704.53 684.684 L1705.09 684.684 L1705.65 684.684 L1706.21 684.684 L1706.77 684.684 L1707.32 684.684 L1707.88 684.684 L1708.44 684.684 L1709 684.684 L1709.56 684.684 L1710.12 684.684 L1710.68 684.684 L1711.24 684.684 L1711.8 684.684 L1712.36 684.684 L1712.92 684.684 L1713.48 684.684 L1714.04 684.684 L1714.6 684.684 L1715.15 684.684 L1715.71 684.684 L1716.27 684.684 L1716.83 684.684 L1717.39 684.684 L1717.95 684.684 L1718.51 684.684 L1719.07 684.684 L1719.63 684.684 L1720.19 684.684 L1720.75 684.684 L1721.31 684.684 L1721.87 684.684 L1722.42 684.684 L1722.98 684.684 L1723.54 684.684 L1724.1 684.684 L1724.66 684.684 L1725.22 684.684 L1725.78 684.684 L1726.34 684.684 L1726.9 684.684 L1727.46 684.684 L1728.02 684.684 L1728.58 684.684 L1729.14 684.684 L1729.69 684.684 L1730.25 684.684 L1730.81 684.684 L1731.37 684.684 L1731.93 684.684 L1732.49 684.684 L1733.05 684.684 L1733.61 684.684 L1734.17 684.684 L1734.73 684.684 L1735.29 684.684 L1735.85 684.684 L1736.41 684.684 L1736.97 684.684 L1737.52 684.684 L1738.08 684.684 L1738.64 684.684 L1739.2 684.684 L1739.76 684.684 L1740.32 684.684 L1740.88 684.684 L1741.44 684.684 L1742 684.684 L1742.56 684.684 L1743.12 684.684 L1743.68 684.684 L1744.24 684.684 L1744.79 684.684 L1745.35 684.684 L1745.91 684.684 L1746.47 684.684 L1747.03 684.684 L1747.59 684.684 L1748.15 684.684 L1748.71 684.684 L1749.27 684.684 L1749.83 684.684 L1750.39 684.684 L1750.95 684.684 L1751.51 684.684 L1752.06 684.684 L1752.62 684.684 L1753.18 684.684 L1753.74 684.684 L1754.3 684.684 L1754.86 684.684 L1755.42 684.684 L1755.98 684.684 L1756.54 684.684 L1757.1 684.684 L1757.66 684.684 L1758.22 684.684 L1758.78 684.684 L1759.34 684.684 L1759.89 684.684 L1760.45 684.684 L1761.01 684.684 L1761.57 684.684 L1762.13 684.684 L1762.69 684.684 L1763.25 684.684 L1763.81 684.684 L1764.37 684.684 L1764.93 684.684 L1765.49 684.684 L1766.05 684.684 L1766.61 684.684 L1767.16 684.684 L1767.72 684.684 L1768.28 684.684 L1768.84 684.684 L1769.4 684.684 L1769.96 684.684 L1770.52 684.684 L1771.08 684.684 L1771.64 684.684 L1772.2 684.684 L1772.76 684.684 L1773.32 684.684 L1773.88 684.684 L1774.43 684.684 L1774.99 684.684 L1775.55 684.684 L1776.11 684.684 L1776.67 684.684 L1777.23 684.684 L1777.79 684.684 L1778.35 684.684 L1778.91 684.684 L1779.47 684.684 L1780.03 684.684 L1780.59 684.684 L1781.15 684.684 L1781.71 684.684 L1782.26 684.684 L1782.82 684.684 L1783.38 684.684 L1783.94 684.684 L1784.5 684.684 L1785.06 684.684 L1785.62 684.684 L1786.18 684.684 L1786.74 684.684 L1787.3 684.684 L1787.86 684.684 L1788.42 684.684 L1788.98 684.684 L1789.53 684.684 L1790.09 684.684 L1790.65 684.684 L1791.21 684.684 L1791.77 684.684 L1792.33 684.684 L1792.89 684.684 L1793.45 684.684 L1794.01 684.684 L1794.57 684.684 L1795.13 684.684 L1795.69 684.684 L1796.25 684.684 L1796.8 684.684 L1797.36 684.684 L1797.92 684.684 L1798.48 684.684 L1799.04 684.684 L1799.6 684.684 L1800.16 684.684 L1800.72 684.684 L1801.28 684.684 L1801.84 684.684 L1802.4 684.684 L1802.96 684.684 L1803.52 684.684 L1804.08 684.684 L1804.63 684.684 L1805.19 684.684 L1805.75 684.684 L1806.31 684.684 L1806.87 684.684 L1807.43 684.684 L1807.99 684.684 L1808.55 684.684 L1809.11 684.684 L1809.67 684.684 L1810.23 684.684 L1810.79 684.684 L1811.35 684.684 L1811.9 684.684 L1812.46 684.684 L1813.02 684.684 L1813.58 684.684 L1814.14 684.684 L1814.7 684.684 L1815.26 684.684 L1815.82 684.684 L1816.38 684.684 L1816.94 684.684 L1817.5 684.684 L1818.06 684.684 L1818.62 684.684 L1819.18 684.684 L1819.73 684.684 L1820.29 684.684 L1820.85 684.684 L1821.41 684.684 L1821.97 684.684 L1822.53 684.684 L1823.09 684.684 L1823.65 684.684 L1824.21 684.684 L1824.77 684.684 L1825.33 684.684 L1825.89 684.684 L1826.45 684.684 L1827 684.684 L1827.56 684.684 L1828.12 684.684 L1828.68 684.684 L1829.24 684.684 L1829.8 684.684 L1830.36 684.684 L1830.92 684.684 L1831.48 684.684 L1832.04 684.684 L1832.6 684.684 L1833.16 684.684 L1833.72 684.684 L1834.27 684.684 L1834.83 684.684 L1835.39 684.684 L1835.95 684.684 L1836.51 684.684 L1837.07 684.684 L1837.63 684.684 L1838.19 684.684 L1838.19 682.995 L1837.63 682.995 L1837.07 682.995 L1836.51 682.995 L1835.95 682.995 L1835.39 682.995 L1834.83 682.995 L1834.27 682.995 L1833.72 682.995 L1833.16 682.995 L1832.6 682.995 L1832.04 682.995 L1831.48 682.995 L1830.92 682.995 L1830.36 682.995 L1829.8 682.995 L1829.24 682.995 L1828.68 682.995 L1828.12 682.995 L1827.56 682.995 L1827 682.995 L1826.45 682.995 L1825.89 682.995 L1825.33 682.995 L1824.77 682.995 L1824.21 682.995 L1823.65 682.995 L1823.09 682.995 L1822.53 682.995 L1821.97 682.995 L1821.41 682.995 L1820.85 682.995 L1820.29 682.995 L1819.73 682.995 L1819.18 682.995 L1818.62 682.995 L1818.06 682.995 L1817.5 682.995 L1816.94 682.995 L1816.38 682.995 L1815.82 682.995 L1815.26 682.995 L1814.7 682.995 L1814.14 682.995 L1813.58 682.995 L1813.02 682.995 L1812.46 682.995 L1811.9 682.995 L1811.35 682.995 L1810.79 682.995 L1810.23 682.995 L1809.67 682.995 L1809.11 682.995 L1808.55 682.995 L1807.99 682.995 L1807.43 682.995 L1806.87 682.995 L1806.31 682.995 L1805.75 682.995 L1805.19 682.995 L1804.63 682.995 L1804.08 682.995 L1803.52 682.995 L1802.96 682.995 L1802.4 682.995 L1801.84 682.995 L1801.28 682.995 L1800.72 682.995 L1800.16 682.995 L1799.6 682.995 L1799.04 682.995 L1798.48 682.995 L1797.92 682.995 L1797.36 682.995 L1796.8 682.995 L1796.25 682.995 L1795.69 682.995 L1795.13 682.995 L1794.57 682.995 L1794.01 682.995 L1793.45 682.995 L1792.89 682.995 L1792.33 682.995 L1791.77 682.995 L1791.21 682.995 L1790.65 682.995 L1790.09 682.995 L1789.53 682.995 L1788.98 682.995 L1788.42 682.995 L1787.86 682.995 L1787.3 682.995 L1786.74 682.995 L1786.18 682.995 L1785.62 682.995 L1785.06 682.995 L1784.5 682.995 L1783.94 682.995 L1783.38 682.995 L1782.82 682.995 L1782.26 682.995 L1781.71 682.995 L1781.15 682.995 L1780.59 682.995 L1780.03 682.995 L1779.47 682.995 L1778.91 682.995 L1778.35 682.995 L1777.79 682.995 L1777.23 682.995 L1776.67 682.995 L1776.11 682.995 L1775.55 682.995 L1774.99 682.995 L1774.43 682.995 L1773.88 682.995 L1773.32 682.995 L1772.76 682.995 L1772.2 682.995 L1771.64 682.995 L1771.08 682.995 L1770.52 682.995 L1769.96 682.995 L1769.4 682.995 L1768.84 682.995 L1768.28 682.995 L1767.72 682.995 L1767.16 682.995 L1766.61 682.995 L1766.05 682.995 L1765.49 682.995 L1764.93 682.995 L1764.37 682.995 L1763.81 682.995 L1763.25 682.995 L1762.69 682.995 L1762.13 682.995 L1761.57 682.995 L1761.01 682.995 L1760.45 682.995 L1759.89 682.995 L1759.34 682.995 L1758.78 682.995 L1758.22 682.995 L1757.66 682.995 L1757.1 682.995 L1756.54 682.995 L1755.98 682.995 L1755.42 682.995 L1754.86 682.995 L1754.3 682.995 L1753.74 682.995 L1753.18 682.995 L1752.62 682.995 L1752.06 682.995 L1751.51 682.995 L1750.95 682.995 L1750.39 682.995 L1749.83 682.995 L1749.27 682.995 L1748.71 682.995 L1748.15 682.995 L1747.59 682.995 L1747.03 682.995 L1746.47 682.995 L1745.91 682.995 L1745.35 682.995 L1744.79 682.995 L1744.24 682.995 L1743.68 682.995 L1743.12 682.995 L1742.56 682.995 L1742 682.995 L1741.44 682.995 L1740.88 682.995 L1740.32 682.995 L1739.76 682.995 L1739.2 682.995 L1738.64 682.995 L1738.08 682.995 L1737.52 682.995 L1736.97 682.995 L1736.41 682.995 L1735.85 682.995 L1735.29 682.995 L1734.73 682.995 L1734.17 682.995 L1733.61 682.995 L1733.05 682.995 L1732.49 682.995 L1731.93 682.995 L1731.37 682.995 L1730.81 682.995 L1730.25 682.995 L1729.69 682.995 L1729.14 682.995 L1728.58 682.995 L1728.02 682.995 L1727.46 682.995 L1726.9 682.995 L1726.34 682.995 L1725.78 682.995 L1725.22 682.995 L1724.66 682.995 L1724.1 682.995 L1723.54 682.995 L1722.98 682.995 L1722.42 682.995 L1721.87 682.995 L1721.31 682.995 L1720.75 682.995 L1720.19 682.995 L1719.63 682.995 L1719.07 682.995 L1718.51 682.995 L1717.95 682.995 L1717.39 682.995 L1716.83 682.995 L1716.27 682.995 L1715.71 682.995 L1715.15 682.995 L1714.6 682.995 L1714.04 682.995 L1713.48 682.995 L1712.92 682.995 L1712.36 682.995 L1711.8 682.995 L1711.24 682.995 L1710.68 682.995 L1710.12 682.995 L1709.56 682.995 L1709 682.995 L1708.44 682.995 L1707.88 682.995 L1707.32 682.995 L1706.77 682.995 L1706.21 682.995 L1705.65 682.995 L1705.09 682.995 L1704.53 682.995 L1703.97 682.995 L1703.41 682.995 L1702.85 682.995 L1702.29 682.995 L1701.73 682.995 L1701.17 682.995 L1700.61 682.995 L1700.05 682.995 L1699.5 682.995 L1698.94 682.995 L1698.38 682.995 L1697.82 682.995 L1697.26 682.995 L1696.7 682.995 L1696.14 682.995 L1695.58 682.995 L1695.02 682.995 L1694.46 682.995 L1693.9 682.995 L1693.34 682.995 L1692.78 682.995 L1692.23 682.995 L1691.67 682.995 L1691.11 682.995 L1690.55 682.995 L1689.99 682.995 L1689.43 682.995 L1688.87 682.995 L1688.31 682.995 L1687.75 682.995 L1687.19 682.995 L1686.63 682.995 L1686.07 682.995 L1685.51 682.995 L1684.95 682.995 L1684.4 682.995 L1683.84 682.995 L1683.28 682.995 L1682.72 682.995 L1682.16 682.995 L1681.6 682.995 L1681.04 682.995 L1680.48 682.995 L1679.92 682.995 L1679.36 682.995 L1678.8 682.995 L1678.24 682.995 L1677.68 682.995 L1677.13 682.995 L1676.57 682.995 L1676.01 682.995 L1675.45 682.995 L1674.89 682.995 L1674.33 682.995 L1673.77 682.995 L1673.21 682.995 L1672.65 682.995 L1672.09 682.995 L1671.53 682.995 L1670.97 682.995 L1670.41 682.995 L1669.85 682.995 L1669.3 682.995 L1668.74 682.995 L1668.18 682.995 L1667.62 682.995 L1667.06 682.995 L1666.5 682.995 L1665.94 682.995 L1665.38 682.995 L1664.82 682.995 L1664.26 682.995 L1663.7 682.995 L1663.14 682.995 L1662.58 682.995 L1662.03 682.995 L1661.47 682.995 L1660.91 682.995 L1660.35 682.995 L1659.79 682.995 L1659.23 682.995 L1658.67 682.995 L1658.11 682.995 L1657.55 682.995 L1656.99 682.995 L1656.43 682.995 L1655.87 682.995 L1655.31 682.995 L1654.76 682.995 L1654.2 682.995 L1653.64 682.995 L1653.08 682.995 L1652.52 682.995 L1651.96 682.995 L1651.4 682.995 L1650.84 682.995 L1650.28 682.995 L1649.72 682.995 L1649.16 682.995 L1648.6 682.995 L1648.04 682.995 L1647.48 682.995 L1646.93 682.995 L1646.37 682.995 L1645.81 682.995 L1645.25 682.995 L1644.69 682.995 L1644.13 682.995 L1643.57 682.995 L1643.01 682.995 L1642.45 682.995 L1641.89 682.995 L1641.33 682.995 L1640.77 682.995 L1640.21 682.995 L1639.66 682.995 L1639.1 682.995 L1638.54 682.995 L1637.98 682.995 L1637.42 682.995 L1636.86 682.995 L1636.3 682.995 L1635.74 682.995 L1635.18 682.995 L1634.62 682.995 L1634.06 682.995 L1633.5 682.995 L1632.94 682.995 L1632.39 682.995 L1631.83 682.995 L1631.27 682.995 L1630.71 682.995 L1630.15 682.995 L1629.59 682.995 L1629.03 682.995 L1628.47 682.995 L1627.91 682.995 L1627.35 682.995 L1626.79 682.995 L1626.23 682.995 L1625.67 682.995 L1625.11 682.995 L1624.56 682.995 L1624 682.995 L1623.44 682.995 L1622.88 682.995 L1622.32 682.995 L1621.76 682.995 L1621.2 682.995 L1620.64 682.995 L1620.08 682.995 L1619.52 682.995 L1618.96 682.995 L1618.4 682.995 L1617.84 682.995 L1617.29 682.995 L1616.73 682.995 L1616.17 682.995 L1615.61 682.995 L1615.05 682.995 L1614.49 682.995 L1613.93 682.995 L1613.37 682.995 L1612.81 682.995 L1612.25 682.995 L1611.69 682.995 L1611.13 682.995 L1610.57 682.995 L1610.02 682.995 L1609.46 682.995 L1608.9 682.995 L1608.34 682.995 L1607.78 682.995 L1607.22 682.995 L1606.66 682.995 L1606.1 682.995 L1605.54 682.995 L1604.98 682.995 L1604.42 682.995 L1603.86 682.995 L1603.3 682.995 L1602.74 682.995 L1602.19 682.995 L1601.63 682.995 L1601.07 682.995 L1600.51 682.995 L1599.95 682.995 L1599.39 682.995 L1598.83 682.995 L1598.27 682.995 L1597.71 682.995 L1597.15 682.995 L1596.59 682.995 L1596.03 682.995 L1595.47 682.995 L1594.92 682.995 L1594.36 682.995 L1593.8 682.995 L1593.24 682.995 L1592.68 682.995 L1592.12 682.995 L1591.56 682.995 L1591 682.995 L1590.44 682.995 L1589.88 682.995 L1589.32 682.995 L1588.76 682.995 L1588.2 682.995 L1587.65 682.995 L1587.09 682.995 L1586.53 682.995 L1585.97 682.995 L1585.41 682.995 L1584.85 682.995 L1584.29 682.995 L1583.73 682.995 L1583.17 682.995 L1582.61 682.995 L1582.05 682.995 L1581.49 682.995 L1580.93 682.995 L1580.37 682.995 L1579.82 682.995 L1579.26 682.995 L1578.7 682.995 L1578.14 682.995 L1577.58 682.995 L1577.02 682.995 L1576.46 682.995 L1575.9 682.995 L1575.34 682.995 L1574.78 682.995 L1574.22 682.995 L1573.66 682.995 L1573.1 682.995 L1572.55 682.995 L1571.99 682.995 L1571.43 682.995 L1570.87 682.995 L1570.31 682.995 L1569.75 682.995 L1569.19 682.995 L1568.63 682.995 L1568.07 682.995 L1567.51 682.995 L1566.95 682.995 L1566.39 682.995 L1565.83 682.995 L1565.28 682.995 L1564.72 682.995 L1564.16 682.995 L1563.6 682.995 L1563.04 682.995 L1562.48 682.995 L1561.92 682.995 L1561.36 682.995 L1560.8 682.995 L1560.24 682.995 L1559.68 682.995 L1559.12 682.995 L1558.56 682.995 L1558 682.995 L1557.45 682.995 L1556.89 682.995 L1556.33 682.995 L1555.77 682.995 L1555.21 682.995 L1554.65 682.995 L1554.09 682.995 L1553.53 682.995 L1552.97 682.995 L1552.41 682.995 L1551.85 682.995 L1551.29 682.995 L1550.73 682.995 L1550.18 682.995 L1549.62 682.995 L1549.06 682.995 L1548.5 682.995 L1547.94 682.995 L1547.38 682.995 L1546.82 682.995 L1546.26 682.995 L1545.7 682.995 L1545.14 682.995 L1544.58 682.995 L1544.02 682.995 L1543.46 682.995 L1542.9 682.995 L1542.35 682.995 L1541.79 682.995 L1541.23 682.995 L1540.67 682.995 L1540.11 682.995 L1539.55 682.995 L1538.99 682.995 L1538.43 682.995 L1537.87 682.995 L1537.31 682.995 L1536.75 682.995 L1536.19 682.995 L1535.63 682.995 L1535.08 682.995 L1534.52 682.995 L1533.96 682.995 L1533.4 682.995 L1532.84 682.995 L1532.28 682.995 L1531.72 682.995 L1531.16 682.995 L1530.6 682.995 L1530.04 682.995 L1529.48 682.995 L1528.92 682.995 L1528.36 682.995 L1527.81 682.995 L1527.25 682.995 L1526.69 682.995 L1526.13 682.995 L1525.57 682.995 L1525.01 682.995 L1524.45 682.995 L1523.89 682.995 L1523.33 682.995 L1522.77 682.995 L1522.21 682.995 L1521.65 682.995 L1521.09 682.995 L1520.53 682.995 L1519.98 682.995 L1519.42 682.995 L1518.86 682.995 L1518.3 682.995 L1517.74 682.995 L1517.18 682.995 L1516.62 682.995 L1516.06 682.995 L1515.5 682.995 L1514.94 682.995 L1514.38 682.995 L1513.82 682.995 L1513.26 682.995 L1512.71 682.995 L1512.15 682.995 L1511.59 682.995 L1511.03 682.995 L1510.47 682.995 L1509.91 682.995 L1509.35 682.995 L1508.79 682.995 L1508.23 682.995 L1507.67 682.995 L1507.11 682.995 L1506.55 682.995 L1505.99 682.995 L1505.44 682.995 L1504.88 682.995 L1504.32 682.995 L1503.76 682.995 L1503.2 682.995 L1502.64 682.995 L1502.08 682.995 L1501.52 682.995 L1500.96 682.995 L1500.4 682.995 L1499.84 682.995 L1499.28 682.995 L1498.72 682.995 L1498.16 682.995 L1497.61 682.995 L1497.05 682.995 L1496.49 682.995 L1495.93 682.995 L1495.37 682.995 L1494.81 682.995 L1494.25 682.995 L1493.69 682.995 L1493.13 682.995 L1492.57 682.995 L1492.01 682.995 L1491.45 682.995 L1490.89 682.995 L1490.34 682.995 L1489.78 682.995 L1489.22 682.995 L1488.66 682.995 L1488.1 682.995 L1487.54 682.995 L1486.98 682.995 L1486.42 682.995 L1485.86 682.995 L1485.3 682.995 L1484.74 682.995 L1484.18 682.995 L1483.62 682.995 L1483.07 682.995 L1482.51 682.995 L1481.95 682.995 L1481.39 682.995 L1480.83 682.995 L1480.27 682.995 L1479.71 682.995 L1479.15 682.995 L1478.59 682.995 L1478.03 682.995 L1477.47 682.995 L1476.91 682.995 L1476.35 682.995 L1475.79 682.995 L1475.24 682.995 L1474.68 682.995 L1474.12 682.995 L1473.56 682.995 L1473 682.995 L1472.44 682.995 L1471.88 682.995 L1471.32 682.995 L1470.76 682.995 L1470.2 682.995 L1469.64 682.995 L1469.08 682.995 L1468.52 682.995 L1467.97 682.995 L1467.41 682.995 L1466.85 682.995 L1466.29 682.995 L1465.73 682.995 L1465.17 682.995 L1464.61 682.995 L1464.05 682.995 L1463.49 682.995 L1462.93 682.995 L1462.37 682.995 L1461.81 682.995 L1461.25 682.995 L1460.7 682.995 L1460.14 682.995 L1459.58 682.995 L1459.02 682.995 L1458.46 682.995 L1457.9 682.995 L1457.34 682.995 L1456.78 682.995 L1456.22 682.995 L1455.66 682.995 L1455.1 682.995 L1454.54 682.995 L1453.98 682.995 L1453.42 682.995 L1452.87 682.995 L1452.31 682.995 L1451.75 682.995 L1451.19 682.995 L1450.63 682.995 L1450.07 682.995 L1449.51 682.995 L1448.95 682.995 L1448.39 682.995 L1447.83 682.995 L1447.27 682.995 L1446.71 682.995 L1446.15 682.995 L1445.6 682.995 L1445.04 682.995 L1444.48 682.995 L1443.92 682.995 L1443.36 682.995 L1442.8 682.995 L1442.24 682.995 L1441.68 682.995 L1441.12 682.995 L1440.56 682.995 L1440 682.995 L1439.44 682.995 L1438.88 682.995 L1438.33 682.995 L1437.77 682.995 L1437.21 682.995 L1436.65 682.995 L1436.09 682.995 L1435.53 682.995 L1434.97 682.995 L1434.41 682.995 L1433.85 682.995 L1433.29 682.995 L1432.73 682.995 L1432.17 682.995 L1431.61 682.995 L1431.05 682.995 L1430.5 682.995 L1429.94 682.995 L1429.38 682.995 L1428.82 682.995 L1428.26 682.995 L1427.7 682.995 L1427.14 682.995 L1426.58 682.995 L1426.02 682.995 L1425.46 682.995 L1424.9 682.995 L1424.34 682.995 L1423.78 682.995 L1423.23 682.995 L1422.67 682.995 L1422.11 682.995 L1421.55 682.995 L1420.99 682.995 L1420.43 682.995 L1419.87 682.995 L1419.31 682.995 L1418.75 682.995 L1418.19 682.995 L1417.63 682.995 L1417.07 682.995 L1416.51 682.995 L1415.95 682.995 L1415.4 682.995 L1414.84 682.995 L1414.28 682.995 L1413.72 682.995 L1413.16 682.995 L1412.6 682.995 L1412.04 682.995 L1411.48 682.995 L1410.92 682.995 L1410.36 682.995 L1409.8 682.995 L1409.24 682.995 L1408.68 682.995 L1408.13 682.995 L1407.57 682.995 L1407.01 682.995 L1406.45 682.995 L1405.89 682.995 L1405.33 682.995 L1404.77 682.995 L1404.21 682.995 L1403.65 682.995 L1403.09 682.995 L1402.53 682.995 L1401.97 682.995 L1401.41 682.995 L1400.86 682.995 L1400.3 682.995 L1399.74 682.995 L1399.18 682.995 L1398.62 682.995 L1398.06 682.995 L1397.5 682.995 L1396.94 682.995 L1396.38 682.995 L1395.82 682.995 L1395.26 682.995 L1394.7 682.995 L1394.14 682.995 L1393.58 682.995 L1393.03 682.995 L1392.47 682.995 L1391.91 682.995 L1391.35 682.995 L1390.79 682.995 L1390.23 682.995 L1389.67 682.995 L1389.11 682.995 L1388.55 682.995 L1387.99 682.995 L1387.43 682.995 L1386.87 682.995 L1386.31 682.995 L1385.76 682.995 L1385.2 682.995 L1384.64 682.995 L1384.08 682.995 L1383.52 682.995 L1382.96 682.995 L1382.4 682.995 L1381.84 682.995 L1381.28 682.995 L1380.72 682.995 L1380.16 682.995 L1379.6 682.995 L1379.04 682.995 L1378.49 682.995 L1377.93 682.995 L1377.37 682.995 L1376.81 682.995 L1376.25 682.995 L1375.69 682.995 L1375.13 682.995 L1374.57 682.995 L1374.01 682.995 L1373.45 682.995 L1372.89 682.995 L1372.33 682.995 L1371.77 682.995 L1371.21 682.995 L1370.66 682.995 L1370.1 682.995 L1369.54 682.995 L1368.98 682.995 L1368.42 682.995 L1367.86 682.995 L1367.3 682.995 L1366.74 682.995 L1366.18 682.995 L1365.62 682.995 L1365.06 682.995 L1364.5 682.995 L1363.94 682.995 L1363.39 682.995 L1362.83 682.995 L1362.27 682.995 L1361.71 682.995 L1361.15 682.995 L1360.59 682.995 L1360.03 682.995 L1359.47 682.995 L1358.91 682.995 L1358.35 682.995 L1357.79 682.995 L1357.23 682.995 L1356.67 682.995 L1356.12 682.995 L1355.56 682.995 L1355 682.995 L1354.44 682.995 L1353.88 682.995 L1353.32 682.995 L1352.76 682.995 L1352.2 682.995 L1351.64 682.995 L1351.08 682.995 L1350.52 682.995 L1349.96 682.995 L1349.4 682.995 L1348.84 682.995 L1348.29 682.995 L1347.73 682.995 L1347.17 682.995 L1346.61 682.995 L1346.05 682.995 L1345.49 682.995 L1344.93 682.995 L1344.37 682.995 L1343.81 682.995 L1343.25 682.995 L1342.69 682.995 L1342.13 682.995 L1341.57 682.995 L1341.02 682.995 L1340.46 682.995 L1339.9 682.995 L1339.34 682.995 L1338.78 682.995 L1338.22 682.995 L1337.66 682.995 L1337.1 682.995 L1336.54 682.995 L1335.98 682.995 L1335.42 682.995 L1334.86 682.995 L1334.3 682.995 L1333.75 682.995 L1333.19 682.995 L1332.63 682.995 L1332.07 682.995 L1331.51 682.995 L1330.95 682.995 L1330.39 682.995 L1329.83 682.995 L1329.27 682.995 L1328.71 682.995 L1328.15 682.995 L1327.59 682.995 L1327.03 682.995 L1326.47 682.995 L1325.92 682.995 L1325.36 682.995 L1324.8 682.995 L1324.24 682.995 L1323.68 682.995 L1323.12 682.995 L1322.56 682.995 L1322 682.995 L1321.44 682.995 L1320.88 682.995 L1320.32 682.995 L1319.76 682.995 L1319.2 682.995 L1318.65 682.995 L1318.09 682.995 L1317.53 682.995 L1316.97 682.995 L1316.41 682.995 L1315.85 682.995 L1315.29 682.995 L1314.73 682.995 L1314.17 682.995 L1313.61 682.995 L1313.05 682.995 L1312.49 682.995 L1311.93 682.995 L1311.38 682.995 L1310.82 682.995 L1310.26 682.995 L1309.7 682.995 L1309.14 682.995 L1308.58 682.995 L1308.02 682.995 L1307.46 682.995 L1306.9 682.995 L1306.34 682.995 L1305.78 682.995 L1305.22 682.995 L1304.66 682.995 L1304.1 682.995 L1303.55 682.995 L1302.99 682.995 L1302.43 682.995 L1301.87 682.995 L1301.31 682.995 L1300.75 682.995 L1300.19 682.995 L1299.63 682.995 L1299.07 682.995 L1298.51 682.995 L1297.95 682.995 L1297.39 682.995 L1296.83 682.995 L1296.28 682.995 L1295.72 682.995 L1295.16 682.995 L1294.6 682.995 L1294.04 682.995 L1293.48 682.995 L1292.92 682.995 L1292.36 682.995 L1291.8 682.995 L1291.24 682.995 L1290.68 682.995 L1290.12 682.995 L1289.56 682.995 L1289 682.995 L1288.45 682.995 L1287.89 682.995 L1287.33 682.995 L1286.77 682.995 L1286.21 682.995 L1285.65 682.995 L1285.09 682.995 L1284.53 682.995 L1283.97 682.995 L1283.41 682.995 L1282.85 682.995 L1282.29 682.995 L1281.73 682.995 L1281.18 682.995 L1280.62 682.995 L1280.06 682.995 L1279.5 682.995 L1278.94 682.995 L1278.38 682.995 L1277.82 682.995 L1277.26 682.995 L1276.7 682.995 L1276.14 682.995 L1275.58 682.995 L1275.02 682.995 L1274.46 682.995 L1273.91 682.995 L1273.35 682.995 L1272.79 682.995 L1272.23 682.995 L1271.67 682.995 L1271.11 682.995 L1270.55 682.995 L1269.99 682.995 L1269.43 682.995 L1268.87 682.995 L1268.31 682.995 L1267.75 682.995 L1267.19 682.995 L1266.63 682.995 L1266.08 682.995 L1265.52 682.995 L1264.96 682.995 L1264.4 682.995 L1263.84 682.995 L1263.28 682.995 L1262.72 682.995 L1262.16 682.995 L1261.6 682.995 L1261.04 682.995 L1260.48 682.995 L1259.92 682.995 L1259.36 682.995 L1258.81 682.995 L1258.25 682.995 L1257.69 682.995 L1257.13 682.995 L1256.57 682.995 L1256.01 682.995 L1255.45 682.995 L1254.89 682.995 L1254.33 682.995 L1253.77 682.995 L1253.21 682.995 L1252.65 682.995 L1252.09 682.995 L1251.54 682.995 L1250.98 682.995 L1250.42 682.995 L1249.86 682.995 L1249.3 682.995 L1248.74 682.995 L1248.18 682.995 L1247.62 682.995 L1247.06 682.995 L1246.5 682.995 L1245.94 682.995 L1245.38 682.995 L1244.82 682.995 L1244.26 682.995 L1243.71 682.995 L1243.15 682.995 L1242.59 682.995 L1242.03 682.995 L1241.47 682.995 L1240.91 682.995 L1240.35 682.995 L1239.79 682.995 L1239.23 682.995 L1238.67 682.995 L1238.11 682.995 L1237.55 682.995 L1236.99 682.995 L1236.44 682.995 L1235.88 682.995 L1235.32 682.995 L1234.76 682.995 L1234.2 682.995 L1233.64 682.995 L1233.08 682.995 L1232.52 682.995 L1231.96 682.995 L1231.4 682.995 L1230.84 682.995 L1230.28 682.995 L1229.72 682.995 L1229.17 682.995 L1228.61 682.995 L1228.05 682.995 L1227.49 682.995 L1226.93 682.995 L1226.37 682.995 L1225.81 682.995 L1225.25 682.995 L1224.69 682.995 L1224.13 682.995 L1223.57 682.995 L1223.01 682.995 L1222.45 682.995 L1221.89 682.995 L1221.34 682.995 L1220.78 682.995 L1220.22 682.995 L1219.66 682.995 L1219.1 682.995 L1218.54 682.995 L1217.98 682.995 L1217.42 682.995 L1216.86 682.995 L1216.3 682.995 L1215.74 682.995 L1215.18 682.995 L1214.62 682.995 L1214.07 682.995 L1213.51 682.995 L1212.95 682.995 L1212.39 682.995 L1211.83 682.995 L1211.27 682.995 L1210.71 682.995 L1210.15 682.995 L1209.59 682.995 L1209.03 682.995 L1208.47 682.995 L1207.91 682.995 L1207.35 682.995 L1206.8 682.995 L1206.24 682.995 L1205.68 682.995 L1205.12 682.995 L1204.56 682.995 L1204 682.995 L1203.44 682.995 L1202.88 682.995 L1202.32 682.995 L1201.76 682.995 L1201.2 682.995 L1200.64 682.995 L1200.08 682.995 L1199.52 682.995 L1198.97 682.995 L1198.41 682.995 L1197.85 682.995 L1197.29 682.995 L1196.73 682.995 L1196.17 682.995 L1195.61 682.995 L1195.05 682.995 L1194.49 682.995 L1193.93 682.995 L1193.37 682.995 L1192.81 682.995 L1192.25 682.995 L1191.7 682.995 L1191.14 682.995 L1190.58 682.995 L1190.02 682.995 L1189.46 682.995 L1188.9 682.995 L1188.34 682.995 L1187.78 682.995 L1187.22 682.995 L1186.66 682.995 L1186.1 682.995 L1185.54 682.995 L1184.98 682.995 L1184.43 682.995 L1183.87 682.995 L1183.31 682.995 L1182.75 682.995 L1182.19 682.995 L1181.63 682.995 L1181.07 682.995 L1180.51 682.995 L1179.95 682.995 L1179.39 682.995 L1178.83 682.995 L1178.27 682.995 L1177.71 682.995 L1177.15 682.995 L1176.6 682.995 L1176.04 682.995 L1175.48 682.995 L1174.92 682.995 L1174.36 682.995 L1173.8 682.995 L1173.24 682.995 L1172.68 682.995 L1172.12 682.995 L1171.56 682.995 L1171 682.995 L1170.44 682.995 L1169.88 682.995 L1169.33 682.995 L1168.77 682.995 L1168.21 682.995 L1167.65 682.995 L1167.09 682.995 L1166.53 682.995 L1165.97 682.995 L1165.41 682.995 L1164.85 682.995 L1164.29 682.995 L1163.73 682.995 L1163.17 682.995 L1162.61 682.995 L1162.05 682.995 L1161.5 682.995 L1160.94 682.995 L1160.38 682.995 L1159.82 682.995 L1159.26 682.995 L1158.7 682.995 L1158.14 682.995 L1157.58 682.995 L1157.02 682.995 L1156.46 682.995 L1155.9 682.995 L1155.34 682.995 L1154.78 682.995 L1154.23 682.995 L1153.67 682.995 L1153.11 682.995 L1152.55 682.995 L1151.99 682.995 L1151.43 682.995 L1150.87 682.995 L1150.31 682.995 L1149.75 682.995 L1149.19 682.995 L1148.63 682.995 L1148.07 682.995 L1147.51 682.995 L1146.96 682.995 L1146.4 682.995 L1145.84 682.995 L1145.28 682.995 L1144.72 682.995 L1144.16 682.995 L1143.6 682.995 L1143.04 682.995 L1142.48 682.995 L1141.92 682.995 L1141.36 682.995 L1140.8 682.995 L1140.24 682.995 L1139.68 682.995 L1139.13 682.995 L1138.57 682.995 L1138.01 682.995 L1137.45 682.995 L1136.89 682.995 L1136.33 682.995 L1135.77 682.995 L1135.21 682.995 L1134.65 682.995 L1134.09 682.995 L1133.53 682.995 L1132.97 682.995 L1132.41 682.995 L1131.86 682.995 L1131.3 682.995 L1130.74 682.995 L1130.18 682.995 L1129.62 682.995 L1129.06 682.995 L1128.5 682.995 L1127.94 682.995 L1127.38 682.995 L1126.82 682.995 L1126.26 682.995 L1125.7 682.995 L1125.14 682.995 L1124.59 682.995 L1124.03 682.995 L1123.47 682.995 L1122.91 682.995 L1122.35 682.995 L1121.79 682.995 L1121.23 682.995 L1120.67 682.995 L1120.11 682.995 L1119.55 682.995 L1118.99 682.995 L1118.43 682.995 L1117.87 682.995 L1117.31 682.995 L1116.76 682.995 L1116.2 682.995 L1115.64 682.995 L1115.08 682.995 L1114.52 682.995 L1113.96 682.995 L1113.4 682.995 L1112.84 682.995 L1112.28 682.995 L1111.72 682.995 L1111.16 682.995 L1110.6 682.995 L1110.04 682.995 L1109.49 682.995 L1108.93 682.995 L1108.37 682.995 L1107.81 682.995 L1107.25 682.995 L1106.69 682.995 L1106.13 682.995 L1105.57 682.995 L1105.01 682.995 L1104.45 682.995 L1103.89 682.995 L1103.33 682.995 L1102.77 682.995 L1102.22 682.995 L1101.66 682.995 L1101.1 682.995 L1100.54 682.995 L1099.98 682.995 L1099.42 682.995 L1098.86 682.995 L1098.3 682.995 L1097.74 682.995 L1097.18 682.995 L1096.62 682.995 L1096.06 682.995 L1095.5 682.995 L1094.94 682.995 L1094.39 682.995 L1093.83 682.995 L1093.27 682.995 L1092.71 682.995 L1092.15 682.995 L1091.59 682.995 L1091.03 682.995 L1090.47 682.995 L1089.91 682.995 L1089.35 682.995 L1088.79 682.995 L1088.23 682.995 L1087.67 682.995 L1087.12 682.995 L1086.56 682.995 L1086 682.995 L1085.44 682.995 L1084.88 682.995 L1084.32 682.995 L1083.76 682.995 L1083.2 682.995 L1082.64 682.995 L1082.08 682.995 L1081.52 682.995 L1080.96 682.995 L1080.4 682.995 L1079.85 682.995 L1079.29 682.995 L1078.73 682.995 L1078.17 682.995 L1077.61 682.995 L1077.05 682.995 L1076.49 682.995 L1075.93 682.995 L1075.37 682.995 L1074.81 682.995 L1074.25 682.995 L1073.69 682.995 L1073.13 682.995 L1072.57 682.995 L1072.02 682.995 L1071.46 682.995 L1070.9 682.995 L1070.34 682.995 L1069.78 682.995 L1069.22 682.995 L1068.66 682.995 L1068.1 682.995 L1067.54 682.995 L1066.98 682.995 L1066.42 682.995 L1065.86 682.995 L1065.3 682.995 L1064.75 682.995 L1064.19 682.995 L1063.63 682.995 L1063.07 682.995 L1062.51 682.995 L1061.95 682.995 L1061.39 682.995 L1060.83 682.995 L1060.27 682.995 L1059.71 682.995 L1059.15 682.995 L1058.59 682.995 L1058.03 682.995 L1057.48 682.995 L1056.92 682.995 L1056.36 682.995 L1055.8 682.995 L1055.24 682.995 L1054.68 682.995 L1054.12 682.995 L1053.56 682.995 L1053 682.995 L1052.44 682.995 L1051.88 682.995 L1051.32 682.995 L1050.76 682.995 L1050.2 682.995 L1049.65 682.995 L1049.09 682.995 L1048.53 682.995 L1047.97 682.995 L1047.41 682.995 L1046.85 682.995 L1046.29 682.995 L1045.73 682.995 L1045.17 682.995 L1044.61 682.995 L1044.05 682.995 L1043.49 682.995 L1042.93 682.995 L1042.38 682.995 L1041.82 682.995 L1041.26 682.995 L1040.7 682.995 L1040.14 682.995 L1039.58 682.995 L1039.02 682.995 L1038.46 682.995 L1037.9 682.995 L1037.34 682.995 L1036.78 682.995 L1036.22 682.995 L1035.66 682.995 L1035.1 682.995 L1034.55 682.995 L1033.99 682.995 L1033.43 682.995 L1032.87 682.995 L1032.31 682.995 L1031.75 682.995 L1031.19 682.995 L1030.63 682.995 L1030.07 682.995 L1029.51 682.995 L1028.95 682.995 L1028.39 682.995 L1027.83 682.995 L1027.28 682.995 L1026.72 682.995 L1026.16 682.995 L1025.6 682.995 L1025.04 682.995 L1024.48 682.995 L1023.92 682.995 L1023.36 682.995 L1022.8 682.995 L1022.24 682.995 L1021.68 682.995 L1021.12 682.995 L1020.56 682.995 L1020.01 682.995 L1019.45 682.995 L1018.89 682.995 L1018.33 682.995 L1017.77 682.995 L1017.21 682.995 L1016.65 682.995 L1016.09 682.995 L1015.53 682.995 L1014.97 682.995 L1014.41 682.995 L1013.85 682.995 L1013.29 682.995 L1012.73 682.995 L1012.18 682.995 L1011.62 682.995 L1011.06 682.995 L1010.5 682.995 L1009.94 682.995 L1009.38 682.995 L1008.82 682.995 L1008.26 682.995 L1007.7 682.995 L1007.14 682.995 L1006.58 682.995 L1006.02 682.995 L1005.46 682.995 L1004.91 682.995 L1004.35 682.995 L1003.79 682.995 L1003.23 682.995 L1002.67 682.995 L1002.11 682.995 L1001.55 682.995 L1000.99 682.995 L1000.43 682.995 L999.872 682.995 L999.313 682.995 L998.754 682.995 L998.194 682.995 L997.635 682.995 L997.076 682.995 L996.517 682.995 L995.957 682.995 L995.398 682.995 L994.839 682.995 L994.28 682.995 L993.72 682.995 L993.161 682.995 L992.602 682.995 L992.043 682.995 L991.483 682.995 L990.924 682.995 L990.365 682.995 L989.806 682.995 L989.246 682.995 L988.687 682.995 L988.128 682.995 L987.569 682.995 L987.009 682.995 L986.45 682.995 L985.891 682.995 L985.332 682.995 L984.772 682.995 L984.213 682.995 L983.654 682.995 L983.095 682.995 L982.535 682.995 L981.976 682.995 L981.417 682.995 L980.858 682.995 L980.298 682.995 L979.739 682.995 L979.18 682.995 L978.621 682.995 L978.061 682.995 L977.502 682.995 L976.943 682.995 L976.384 682.995 L975.824 682.995 L975.265 682.995 L974.706 682.995 L974.147 682.995 L973.587 682.995 L973.028 682.995 L972.469 682.995 L971.91 682.995 L971.35 682.995 L970.791 682.995 L970.232 682.995 L969.673 682.995 L969.113 682.995 L968.554 682.995 L967.995 682.995 L967.436 682.995 L966.876 682.995 L966.317 682.995 L965.758 682.995 L965.199 682.995 L964.639 682.995 L964.08 682.995 L963.521 682.995 L962.962 682.995 L962.402 682.995 L961.843 682.995 L961.284 682.995 L960.725 682.995 L960.165 682.995 L959.606 682.995 L959.047 682.995 L958.488 682.995 L957.928 682.995 L957.369 682.995 L956.81 682.995 L956.251 682.995 L955.691 682.995 L955.132 682.995 L954.573 682.995 L954.014 682.995 L953.454 682.995 L952.895 682.995 L952.336 682.995 L951.777 682.995 L951.217 682.995 L950.658 682.995 L950.099 682.995 L949.54 682.995 L948.98 682.995 L948.421 682.995 L947.862 682.995 L947.303 682.995 L946.743 682.995 L946.184 682.995 L945.625 682.995 L945.066 682.995 L944.506 682.995 L943.947 682.995 L943.388 682.995 L942.829 682.995 L942.269 682.995 L941.71 682.995 L941.151 682.995 L940.592 682.995 L940.032 682.995 L939.473 682.995 L938.914 682.995 L938.355 682.995 L937.795 682.995 L937.236 682.995 L936.677 682.995 L936.118 682.995 L935.558 682.995 L934.999 682.995 L934.44 682.995 L933.881 682.995 L933.321 682.995 L932.762 682.995 L932.203 682.995 L931.644 682.995 L931.084 682.995 L930.525 682.995 L929.966 682.995 L929.406 682.995 L928.847 682.995 L928.288 682.995 L927.729 682.995 L927.169 682.995 L926.61 682.995 L926.051 682.995 L925.492 682.995 L924.932 682.995 L924.373 682.995 L923.814 682.995 L923.255 682.995 L922.695 682.995 L922.136 682.995 L921.577 682.995 L921.018 682.995 L920.458 682.995 L919.899 682.995 L919.34 682.995 L918.781 682.995 L918.221 682.995 L917.662 682.995 L917.103 682.995 L916.544 682.995 L915.984 682.995 L915.425 682.995 L914.866 682.995 L914.307 682.995 L913.747 682.995 L913.188 682.995 L912.629 682.995 L912.07 682.995 L911.51 682.995 L910.951 682.995 L910.392 682.995 L909.833 682.995 L909.273 682.995 L908.714 682.995 L908.155 682.995 L907.596 682.995 L907.036 682.995 L906.477 682.995 L905.918 682.995 L905.359 682.995 L904.799 682.995 L904.24 682.995 L903.681 682.995 L903.122 682.995 L902.562 682.995 L902.003 682.995 L901.444 682.995 L900.885 682.995 L900.325 682.995 L899.766 682.995 L899.207 682.995 L898.648 682.995 L898.088 682.995 L897.529 682.995 L896.97 682.995 L896.411 682.995 L895.851 682.995 L895.292 682.995 L894.733 682.995 L894.174 682.995 L893.614 682.995 L893.055 682.995 L892.496 682.995 L891.937 682.995 L891.377 682.995 L890.818 682.995 L890.259 682.995 L889.7 682.995 L889.14 682.995 L888.581 682.995 L888.022 682.995 L887.463 682.995 L886.903 682.995 L886.344 682.995 L885.785 682.995 L885.226 682.995 L884.666 682.995 L884.107 682.995 L883.548 682.995 L882.989 682.995 L882.429 682.995 L881.87 682.995 L881.311 682.995 L880.752 682.995 L880.192 682.995 L879.633 682.995 L879.074 682.995 L878.515 682.995 L877.955 682.995 L877.396 682.995 L876.837 682.995 L876.278 682.995 L875.718 682.995 L875.159 682.995 L874.6 682.995 L874.041 682.995 L873.481 682.995 L872.922 682.995 L872.363 682.995 L871.804 682.995 L871.244 682.995 L870.685 682.995 L870.126 682.995 L869.567 682.995 L869.007 682.995 L868.448 682.995 L867.889 682.995 L867.33 682.995 L866.77 682.995 L866.211 682.995 L865.652 682.995 L865.093 682.995 L864.533 682.995 L863.974 682.995 L863.415 682.995 L862.856 682.995 L862.296 682.995 L861.737 682.995 L861.178 682.995 L860.619 682.995 L860.059 682.995 L859.5 682.995 L858.941 682.995 L858.382 682.995 L857.822 682.995 L857.263 682.995 L856.704 682.995 L856.145 682.995 L855.585 682.995 L855.026 682.995 L854.467 682.995 L853.908 682.995 L853.348 682.995 L852.789 682.995 L852.23 682.995 L851.671 682.995 L851.111 682.995 L850.552 682.995 L849.993 682.995 L849.434 682.995 L848.874 682.995 L848.315 682.995 L847.756 682.995 L847.197 682.995 L846.637 682.995 L846.078 682.995 L845.519 682.995 L844.96 682.995 L844.4 682.995 L843.841 682.995 L843.282 682.995 L842.723 682.995 L842.163 682.995 L841.604 682.995 L841.045 682.995 L840.486 682.995 L839.926 682.995 L839.367 682.995 L838.808 682.995 L838.249 682.995 L837.689 682.995 L837.13 682.995 L836.571 682.995 L836.012 682.995 L835.452 682.995 L834.893 682.995 L834.334 682.995 L833.775 682.995 L833.215 682.995 L832.656 682.995 L832.097 682.995 L831.538 682.995 L830.978 682.995 L830.419 682.995 L829.86 682.995 L829.301 682.995 L828.741 682.995 L828.182 682.995 L827.623 682.995 L827.064 682.995 L826.504 682.995 L825.945 682.995 L825.386 682.995 L824.827 682.995 L824.267 682.995 L823.708 682.995 L823.149 682.995 L822.59 682.995 L822.03 682.995 L821.471 682.995 L820.912 682.995 L820.353 682.995 L819.793 682.995 L819.234 682.995 L818.675 682.995 L818.116 682.995 L817.556 682.995 L816.997 682.995 L816.438 682.995 L815.879 682.995 L815.319 682.995 L814.76 682.995 L814.201 682.995 L813.642 682.995 L813.082 682.995 L812.523 682.995 L811.964 682.995 L811.405 682.995 L810.845 682.995 L810.286 682.995 L809.727 682.995 L809.168 682.995 L808.608 682.995 L808.049 682.995 L807.49 682.995 L806.931 682.995 L806.371 682.995 L805.812 682.995 L805.253 682.995 L804.693 682.995 L804.134 682.995 L803.575 682.995 L803.016 682.995 L802.456 682.995 L801.897 682.995 L801.338 682.995 L800.779 682.995 L800.219 682.995 L799.66 682.995 L799.101 682.995 L798.542 682.995 L797.982 682.995 L797.423 682.995 L796.864 682.995 L796.305 682.995 L795.745 682.995 L795.186 682.995 L794.627 682.995 L794.068 682.995 L793.508 682.995 L792.949 682.995 L792.39 682.995 L791.831 682.995 L791.271 682.995 L790.712 682.995 L790.153 682.995 L789.594 682.995 L789.034 682.995 L788.475 682.995 L787.916 682.995 L787.357 682.995 L786.797 682.995 L786.238 682.995 L785.679 682.995 L785.12 682.995 L784.56 682.995 L784.001 682.995 L783.442 682.995 L782.883 682.995 L782.323 682.995 L781.764 682.995 L781.205 682.995 L780.646 682.995 L780.086 682.995 L779.527 682.995 L778.968 682.995 L778.409 682.995 L777.849 682.995 L777.29 682.995 L776.731 682.995 L776.172 682.995 L775.612 682.995 L775.053 682.995 L774.494 682.995 L773.935 682.995 L773.375 682.995 L772.816 682.995 L772.257 682.995 L771.698 682.995 L771.138 682.995 L770.579 682.995 L770.02 682.995 L769.461 682.995 L768.901 682.995 L768.342 682.995 L767.783 682.995 L767.224 682.995 L766.664 682.995 L766.105 682.995 L765.546 682.995 L764.987 682.995 L764.427 682.995 L763.868 682.995 L763.309 682.995 L762.75 682.995 L762.19 682.995 L761.631 682.995 L761.072 682.995 L760.513 682.995 L759.953 682.995 L759.394 682.995 L758.835 682.995 L758.276 682.995 L757.716 682.995 L757.157 682.995 L756.598 682.995 L756.039 682.995 L755.479 682.995 L754.92 682.995 L754.361 682.995 L753.802 682.995 L753.242 682.995 L752.683 682.995 L752.124 682.995 L751.565 682.995 L751.005 682.995 L750.446 682.995 L749.887 682.995 L749.328 682.995 L748.768 682.995 L748.209 682.995 L747.65 682.995 L747.091 682.995 L746.531 682.995 L745.972 682.995 L745.413 682.995 L744.854 682.995 L744.294 682.995 L743.735 682.995 L743.176 682.995 L742.617 682.995 L742.057 682.995 L741.498 682.995 L740.939 682.995 L740.38 682.995 L739.82 682.995 L739.261 682.995 L738.702 682.995 L738.143 682.995 L737.583 682.995 L737.024 682.995 L736.465 682.995 L735.906 682.995 L735.346 682.995 L734.787 682.995 L734.228 682.995 L733.669 682.995 L733.109 682.995 L732.55 682.995 L731.991 682.995 L731.432 682.995 L730.872 682.995 L730.313 682.995 L729.754 682.995 L729.195 682.995 L728.635 682.995 L728.076 682.995 L727.517 682.995 L726.958 682.995 L726.398 682.995 L725.839 682.995 L725.28 682.995 L724.721 682.995 L724.161 682.995 L723.602 682.995 L723.043 682.995 L722.484 682.995 L721.924 682.995 L721.365 682.995 L720.806 682.995 L720.247 682.995  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip963)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,683.829 720.806,683.829 721.365,683.829 721.924,683.829 722.484,683.829 723.043,683.829 723.602,683.829 724.161,683.829 724.721,683.829 725.28,683.829 725.839,683.829 726.398,683.829 726.958,683.829 727.517,683.829 728.076,683.829 728.635,683.829 729.195,683.829 729.754,683.829 730.313,683.829 730.872,683.829 731.432,683.829 731.991,683.829 732.55,683.829 733.109,683.829 733.669,683.829 734.228,683.829 734.787,683.829 735.346,683.829 735.906,683.829 736.465,683.829 737.024,683.829 737.583,683.829 738.143,683.829 738.702,683.829 739.261,683.829 739.82,683.829 740.38,683.829 740.939,683.829 741.498,683.829 742.057,683.829 742.617,683.829 743.176,683.829 743.735,683.829 744.294,683.829 744.854,683.829 745.413,683.829 745.972,683.829 746.531,683.829 747.091,683.829 747.65,683.829 748.209,683.829 748.768,683.829 749.328,683.829 749.887,683.829 750.446,683.829 751.005,683.829 751.565,683.829 752.124,683.829 752.683,683.829 753.242,683.829 753.802,683.829 754.361,683.829 754.92,683.829 755.479,683.829 756.039,683.829 756.598,683.829 757.157,683.829 757.716,683.829 758.276,683.829 758.835,683.829 759.394,683.829 759.953,683.829 760.513,683.829 761.072,683.829 761.631,683.829 762.19,683.829 762.75,683.829 763.309,683.829 763.868,683.829 764.427,683.829 764.987,683.829 765.546,683.829 766.105,683.829 766.664,683.829 767.224,683.829 767.783,683.829 768.342,683.829 768.901,683.829 769.461,683.829 770.02,683.829 770.579,683.829 771.138,683.829 771.698,683.829 772.257,683.829 772.816,683.829 773.375,683.829 773.935,683.829 774.494,683.829 775.053,683.829 775.612,683.829 776.172,683.829 776.731,683.829 777.29,683.829 777.849,683.829 778.409,683.829 778.968,683.829 779.527,683.829 780.086,683.829 780.646,683.829 781.205,683.829 781.764,683.829 782.323,683.829 782.883,683.829 783.442,683.829 784.001,683.829 784.56,683.829 785.12,683.829 785.679,683.829 786.238,683.829 786.797,683.829 787.357,683.829 787.916,683.829 788.475,683.829 789.034,683.829 789.594,683.829 790.153,683.829 790.712,683.829 791.271,683.829 791.831,683.829 792.39,683.829 792.949,683.829 793.508,683.829 794.068,683.829 794.627,683.829 795.186,683.829 795.745,683.829 796.305,683.829 796.864,683.829 797.423,683.829 797.982,683.829 798.542,683.829 799.101,683.829 799.66,683.829 800.219,683.829 800.779,683.829 801.338,683.829 801.897,683.829 802.456,683.829 803.016,683.829 803.575,683.829 804.134,683.829 804.693,683.829 805.253,683.829 805.812,683.829 806.371,683.829 806.931,683.829 807.49,683.829 808.049,683.829 808.608,683.829 809.168,683.829 809.727,683.829 810.286,683.829 810.845,683.829 811.405,683.829 811.964,683.829 812.523,683.829 813.082,683.829 813.642,683.829 814.201,683.829 814.76,683.829 815.319,683.829 815.879,683.829 816.438,683.829 816.997,683.829 817.556,683.829 818.116,683.829 818.675,683.829 819.234,683.829 819.793,683.829 820.353,683.829 820.912,683.829 821.471,683.829 822.03,683.829 822.59,683.829 823.149,683.829 823.708,683.829 824.267,683.829 824.827,683.829 825.386,683.829 825.945,683.829 826.504,683.829 827.064,683.829 827.623,683.829 828.182,683.829 828.741,683.829 829.301,683.829 829.86,683.829 830.419,683.829 830.978,683.829 831.538,683.829 832.097,683.829 832.656,683.829 833.215,683.829 833.775,683.829 834.334,683.829 834.893,683.829 835.452,683.829 836.012,683.829 836.571,683.829 837.13,683.829 837.689,683.829 838.249,683.829 838.808,683.829 839.367,683.829 839.926,683.829 840.486,683.829 841.045,683.829 841.604,683.829 842.163,683.829 842.723,683.829 843.282,683.829 843.841,683.829 844.4,683.829 844.96,683.829 845.519,683.829 846.078,683.829 846.637,683.829 847.197,683.829 847.756,683.829 848.315,683.829 848.874,683.829 849.434,683.829 849.993,683.829 850.552,683.829 851.111,683.829 851.671,683.829 852.23,683.829 852.789,683.829 853.348,683.829 853.908,683.829 854.467,683.829 855.026,683.829 855.585,683.829 856.145,683.829 856.704,683.829 857.263,683.829 857.822,683.829 858.382,683.829 858.941,683.829 859.5,683.829 860.059,683.829 860.619,683.829 861.178,683.829 861.737,683.829 862.296,683.829 862.856,683.829 863.415,683.829 863.974,683.829 864.533,683.829 865.093,683.829 865.652,683.829 866.211,683.829 866.77,683.829 867.33,683.829 867.889,683.829 868.448,683.829 869.007,683.829 869.567,683.829 870.126,683.829 870.685,683.829 871.244,683.829 871.804,683.829 872.363,683.829 872.922,683.829 873.481,683.829 874.041,683.829 874.6,683.829 875.159,683.829 875.718,683.829 876.278,683.829 876.837,683.829 877.396,683.829 877.955,683.829 878.515,683.829 879.074,683.829 879.633,683.829 880.192,683.829 880.752,683.829 881.311,683.829 881.87,683.829 882.429,683.829 882.989,683.829 883.548,683.829 884.107,683.829 884.666,683.829 885.226,683.829 885.785,683.829 886.344,683.829 886.903,683.829 887.463,683.829 888.022,683.829 888.581,683.829 889.14,683.829 889.7,683.829 890.259,683.829 890.818,683.829 891.377,683.829 891.937,683.829 892.496,683.829 893.055,683.829 893.614,683.829 894.174,683.829 894.733,683.829 895.292,683.829 895.851,683.829 896.411,683.829 896.97,683.829 897.529,683.829 898.088,683.829 898.648,683.829 899.207,683.829 899.766,683.829 900.325,683.829 900.885,683.829 901.444,683.829 902.003,683.829 902.562,683.829 903.122,683.829 903.681,683.829 904.24,683.829 904.799,683.829 905.359,683.829 905.918,683.829 906.477,683.829 907.036,683.829 907.596,683.829 908.155,683.829 908.714,683.829 909.273,683.829 909.833,683.829 910.392,683.829 910.951,683.829 911.51,683.829 912.07,683.829 912.629,683.829 913.188,683.829 913.747,683.829 914.307,683.829 914.866,683.829 915.425,683.829 915.984,683.829 916.544,683.829 917.103,683.829 917.662,683.829 918.221,683.829 918.781,683.829 919.34,683.829 919.899,683.829 920.458,683.829 921.018,683.829 921.577,683.829 922.136,683.829 922.695,683.829 923.255,683.829 923.814,683.829 924.373,683.829 924.932,683.829 925.492,683.829 926.051,683.829 926.61,683.829 927.169,683.829 927.729,683.829 928.288,683.829 928.847,683.829 929.406,683.829 929.966,683.829 930.525,683.829 931.084,683.829 931.644,683.829 932.203,683.829 932.762,683.829 933.321,683.829 933.881,683.829 934.44,683.829 934.999,683.829 935.558,683.829 936.118,683.829 936.677,683.829 937.236,683.829 937.795,683.829 938.355,683.829 938.914,683.829 939.473,683.829 940.032,683.829 940.592,683.829 941.151,683.829 941.71,683.829 942.269,683.829 942.829,683.829 943.388,683.829 943.947,683.829 944.506,683.829 945.066,683.829 945.625,683.829 946.184,683.829 946.743,683.829 947.303,683.829 947.862,683.829 948.421,683.829 948.98,683.829 949.54,683.829 950.099,683.829 950.658,683.829 951.217,683.829 951.777,683.829 952.336,683.829 952.895,683.829 953.454,683.829 954.014,683.829 954.573,683.829 955.132,683.829 955.691,683.829 956.251,683.829 956.81,683.829 957.369,683.829 957.928,683.829 958.488,683.829 959.047,683.829 959.606,683.829 960.165,683.829 960.725,683.829 961.284,683.829 961.843,683.829 962.402,683.829 962.962,683.829 963.521,683.829 964.08,683.829 964.639,683.829 965.199,683.829 965.758,683.829 966.317,683.829 966.876,683.829 967.436,683.829 967.995,683.829 968.554,683.829 969.113,683.829 969.673,683.829 970.232,683.829 970.791,683.829 971.35,683.829 971.91,683.829 972.469,683.829 973.028,683.829 973.587,683.829 974.147,683.829 974.706,683.829 975.265,683.829 975.824,683.829 976.384,683.829 976.943,683.829 977.502,683.829 978.061,683.829 978.621,683.829 979.18,683.829 979.739,683.829 980.298,683.829 980.858,683.829 981.417,683.829 981.976,683.829 982.535,683.829 983.095,683.829 983.654,683.829 984.213,683.829 984.772,683.829 985.332,683.829 985.891,683.829 986.45,683.829 987.009,683.829 987.569,683.829 988.128,683.829 988.687,683.829 989.246,683.829 989.806,683.829 990.365,683.829 990.924,683.829 991.483,683.829 992.043,683.829 992.602,683.829 993.161,683.829 993.72,683.829 994.28,683.829 994.839,683.829 995.398,683.829 995.957,683.829 996.517,683.829 997.076,683.829 997.635,683.829 998.194,683.829 998.754,683.829 999.313,683.829 999.872,683.829 1000.43,683.829 1000.99,683.829 1001.55,683.829 1002.11,683.829 1002.67,683.829 1003.23,683.829 1003.79,683.829 1004.35,683.829 1004.91,683.829 1005.46,683.829 1006.02,683.829 1006.58,683.829 1007.14,683.829 1007.7,683.829 1008.26,683.829 1008.82,683.829 1009.38,683.829 1009.94,683.829 1010.5,683.829 1011.06,683.829 1011.62,683.829 1012.18,683.829 1012.73,683.829 1013.29,683.829 1013.85,683.829 1014.41,683.829 1014.97,683.829 1015.53,683.829 1016.09,683.829 1016.65,683.829 1017.21,683.829 1017.77,683.829 1018.33,683.829 1018.89,683.829 1019.45,683.829 1020.01,683.829 1020.56,683.829 1021.12,683.829 1021.68,683.829 1022.24,683.829 1022.8,683.829 1023.36,683.829 1023.92,683.829 1024.48,683.829 1025.04,683.829 1025.6,683.829 1026.16,683.829 1026.72,683.829 1027.28,683.829 1027.83,683.829 1028.39,683.829 1028.95,683.829 1029.51,683.829 1030.07,683.829 1030.63,683.829 1031.19,683.829 1031.75,683.829 1032.31,683.829 1032.87,683.829 1033.43,683.829 1033.99,683.829 1034.55,683.829 1035.1,683.829 1035.66,683.829 1036.22,683.829 1036.78,683.829 1037.34,683.829 1037.9,683.829 1038.46,683.829 1039.02,683.829 1039.58,683.829 1040.14,683.829 1040.7,683.829 1041.26,683.829 1041.82,683.829 1042.38,683.829 1042.93,683.829 1043.49,683.829 1044.05,683.829 1044.61,683.829 1045.17,683.829 1045.73,683.829 1046.29,683.829 1046.85,683.829 1047.41,683.829 1047.97,683.829 1048.53,683.829 1049.09,683.829 1049.65,683.829 1050.2,683.829 1050.76,683.829 1051.32,683.829 1051.88,683.829 1052.44,683.829 1053,683.829 1053.56,683.829 1054.12,683.829 1054.68,683.829 1055.24,683.829 1055.8,683.829 1056.36,683.829 1056.92,683.829 1057.48,683.829 1058.03,683.829 1058.59,683.829 1059.15,683.829 1059.71,683.829 1060.27,683.829 1060.83,683.829 1061.39,683.829 1061.95,683.829 1062.51,683.829 1063.07,683.829 1063.63,683.829 1064.19,683.829 1064.75,683.829 1065.3,683.829 1065.86,683.829 1066.42,683.829 1066.98,683.829 1067.54,683.829 1068.1,683.829 1068.66,683.829 1069.22,683.829 1069.78,683.829 1070.34,683.829 1070.9,683.829 1071.46,683.829 1072.02,683.829 1072.57,683.829 1073.13,683.829 1073.69,683.829 1074.25,683.829 1074.81,683.829 1075.37,683.829 1075.93,683.829 1076.49,683.829 1077.05,683.829 1077.61,683.829 1078.17,683.829 1078.73,683.829 1079.29,683.829 1079.85,683.829 1080.4,683.829 1080.96,683.829 1081.52,683.829 1082.08,683.829 1082.64,683.829 1083.2,683.829 1083.76,683.829 1084.32,683.829 1084.88,683.829 1085.44,683.829 1086,683.829 1086.56,683.829 1087.12,683.829 1087.67,683.829 1088.23,683.829 1088.79,683.829 1089.35,683.829 1089.91,683.829 1090.47,683.829 1091.03,683.829 1091.59,683.829 1092.15,683.829 1092.71,683.829 1093.27,683.829 1093.83,683.829 1094.39,683.829 1094.94,683.829 1095.5,683.829 1096.06,683.829 1096.62,683.829 1097.18,683.829 1097.74,683.829 1098.3,683.829 1098.86,683.829 1099.42,683.829 1099.98,683.829 1100.54,683.829 1101.1,683.829 1101.66,683.829 1102.22,683.829 1102.77,683.829 1103.33,683.829 1103.89,683.829 1104.45,683.829 1105.01,683.829 1105.57,683.829 1106.13,683.829 1106.69,683.829 1107.25,683.829 1107.81,683.829 1108.37,683.829 1108.93,683.829 1109.49,683.829 1110.04,683.829 1110.6,683.829 1111.16,683.829 1111.72,683.829 1112.28,683.829 1112.84,683.829 1113.4,683.829 1113.96,683.829 1114.52,683.829 1115.08,683.829 1115.64,683.829 1116.2,683.829 1116.76,683.829 1117.31,683.829 1117.87,683.829 1118.43,683.829 1118.99,683.829 1119.55,683.829 1120.11,683.829 1120.67,683.829 1121.23,683.829 1121.79,683.829 1122.35,683.829 1122.91,683.829 1123.47,683.829 1124.03,683.829 1124.59,683.829 1125.14,683.829 1125.7,683.829 1126.26,683.829 1126.82,683.829 1127.38,683.829 1127.94,683.829 1128.5,683.829 1129.06,683.829 1129.62,683.829 1130.18,683.829 1130.74,683.829 1131.3,683.829 1131.86,683.829 1132.41,683.829 1132.97,683.829 1133.53,683.829 1134.09,683.829 1134.65,683.829 1135.21,683.829 1135.77,683.829 1136.33,683.829 1136.89,683.829 1137.45,683.829 1138.01,683.829 1138.57,683.829 1139.13,683.829 1139.68,683.829 1140.24,683.829 1140.8,683.829 1141.36,683.829 1141.92,683.829 1142.48,683.829 1143.04,683.829 1143.6,683.829 1144.16,683.829 1144.72,683.829 1145.28,683.829 1145.84,683.829 1146.4,683.829 1146.96,683.829 1147.51,683.829 1148.07,683.829 1148.63,683.829 1149.19,683.829 1149.75,683.829 1150.31,683.829 1150.87,683.829 1151.43,683.829 1151.99,683.829 1152.55,683.829 1153.11,683.829 1153.67,683.829 1154.23,683.829 1154.78,683.829 1155.34,683.829 1155.9,683.829 1156.46,683.829 1157.02,683.829 1157.58,683.829 1158.14,683.829 1158.7,683.829 1159.26,683.829 1159.82,683.829 1160.38,683.829 1160.94,683.829 1161.5,683.829 1162.05,683.829 1162.61,683.829 1163.17,683.829 1163.73,683.829 1164.29,683.829 1164.85,683.829 1165.41,683.829 1165.97,683.829 1166.53,683.829 1167.09,683.829 1167.65,683.829 1168.21,683.829 1168.77,683.829 1169.33,683.829 1169.88,683.829 1170.44,683.829 1171,683.829 1171.56,683.829 1172.12,683.829 1172.68,683.829 1173.24,683.829 1173.8,683.829 1174.36,683.829 1174.92,683.829 1175.48,683.829 1176.04,683.829 1176.6,683.829 1177.15,683.829 1177.71,683.829 1178.27,683.829 1178.83,683.829 1179.39,683.829 1179.95,683.829 1180.51,683.829 1181.07,683.829 1181.63,683.829 1182.19,683.829 1182.75,683.829 1183.31,683.829 1183.87,683.829 1184.43,683.829 1184.98,683.829 1185.54,683.829 1186.1,683.829 1186.66,683.829 1187.22,683.829 1187.78,683.829 1188.34,683.829 1188.9,683.829 1189.46,683.829 1190.02,683.829 1190.58,683.829 1191.14,683.829 1191.7,683.829 1192.25,683.829 1192.81,683.829 1193.37,683.829 1193.93,683.829 1194.49,683.829 1195.05,683.829 1195.61,683.829 1196.17,683.829 1196.73,683.829 1197.29,683.829 1197.85,683.829 1198.41,683.829 1198.97,683.829 1199.52,683.829 1200.08,683.829 1200.64,683.829 1201.2,683.829 1201.76,683.829 1202.32,683.829 1202.88,683.829 1203.44,683.829 1204,683.829 1204.56,683.829 1205.12,683.829 1205.68,683.829 1206.24,683.829 1206.8,683.829 1207.35,683.829 1207.91,683.829 1208.47,683.829 1209.03,683.829 1209.59,683.829 1210.15,683.829 1210.71,683.829 1211.27,683.829 1211.83,683.829 1212.39,683.829 1212.95,683.829 1213.51,683.829 1214.07,683.829 1214.62,683.829 1215.18,683.829 1215.74,683.829 1216.3,683.829 1216.86,683.829 1217.42,683.829 1217.98,683.829 1218.54,683.829 1219.1,683.829 1219.66,683.829 1220.22,683.829 1220.78,683.829 1221.34,683.829 1221.89,683.829 1222.45,683.829 1223.01,683.829 1223.57,683.829 1224.13,683.829 1224.69,683.829 1225.25,683.829 1225.81,683.829 1226.37,683.829 1226.93,683.829 1227.49,683.829 1228.05,683.829 1228.61,683.829 1229.17,683.829 1229.72,683.829 1230.28,683.829 1230.84,683.829 1231.4,683.829 1231.96,683.829 1232.52,683.829 1233.08,683.829 1233.64,683.829 1234.2,683.829 1234.76,683.829 1235.32,683.829 1235.88,683.829 1236.44,683.829 1236.99,683.829 1237.55,683.829 1238.11,683.829 1238.67,683.829 1239.23,683.829 1239.79,683.829 1240.35,683.829 1240.91,683.829 1241.47,683.829 1242.03,683.829 1242.59,683.829 1243.15,683.829 1243.71,683.829 1244.26,683.829 1244.82,683.829 1245.38,683.829 1245.94,683.829 1246.5,683.829 1247.06,683.829 1247.62,683.829 1248.18,683.829 1248.74,683.829 1249.3,683.829 1249.86,683.829 1250.42,683.829 1250.98,683.829 1251.54,683.829 1252.09,683.829 1252.65,683.829 1253.21,683.829 1253.77,683.829 1254.33,683.829 1254.89,683.829 1255.45,683.829 1256.01,683.829 1256.57,683.829 1257.13,683.829 1257.69,683.829 1258.25,683.829 1258.81,683.829 1259.36,683.829 1259.92,683.829 1260.48,683.829 1261.04,683.829 1261.6,683.829 1262.16,683.829 1262.72,683.829 1263.28,683.829 1263.84,683.829 1264.4,683.829 1264.96,683.829 1265.52,683.829 1266.08,683.829 1266.63,683.829 1267.19,683.829 1267.75,683.829 1268.31,683.829 1268.87,683.829 1269.43,683.829 1269.99,683.829 1270.55,683.829 1271.11,683.829 1271.67,683.829 1272.23,683.829 1272.79,683.829 1273.35,683.829 1273.91,683.829 1274.46,683.829 1275.02,683.829 1275.58,683.829 1276.14,683.829 1276.7,683.829 1277.26,683.829 1277.82,683.829 1278.38,683.829 1278.94,683.829 1279.5,683.829 1280.06,683.829 1280.62,683.829 1281.18,683.829 1281.73,683.829 1282.29,683.829 1282.85,683.829 1283.41,683.829 1283.97,683.829 1284.53,683.829 1285.09,683.829 1285.65,683.829 1286.21,683.829 1286.77,683.829 1287.33,683.829 1287.89,683.829 1288.45,683.829 1289,683.829 1289.56,683.829 1290.12,683.829 1290.68,683.829 1291.24,683.829 1291.8,683.829 1292.36,683.829 1292.92,683.829 1293.48,683.829 1294.04,683.829 1294.6,683.829 1295.16,683.829 1295.72,683.829 1296.28,683.829 1296.83,683.829 1297.39,683.829 1297.95,683.829 1298.51,683.829 1299.07,683.829 1299.63,683.829 1300.19,683.829 1300.75,683.829 1301.31,683.829 1301.87,683.829 1302.43,683.829 1302.99,683.829 1303.55,683.829 1304.1,683.829 1304.66,683.829 1305.22,683.829 1305.78,683.829 1306.34,683.829 1306.9,683.829 1307.46,683.829 1308.02,683.829 1308.58,683.829 1309.14,683.829 1309.7,683.829 1310.26,683.829 1310.82,683.829 1311.38,683.829 1311.93,683.829 1312.49,683.829 1313.05,683.829 1313.61,683.829 1314.17,683.829 1314.73,683.829 1315.29,683.829 1315.85,683.829 1316.41,683.829 1316.97,683.829 1317.53,683.829 1318.09,683.829 1318.65,683.829 1319.2,683.829 1319.76,683.829 1320.32,683.829 1320.88,683.829 1321.44,683.829 1322,683.829 1322.56,683.829 1323.12,683.829 1323.68,683.829 1324.24,683.829 1324.8,683.829 1325.36,683.829 1325.92,683.829 1326.47,683.829 1327.03,683.829 1327.59,683.829 1328.15,683.829 1328.71,683.829 1329.27,683.829 1329.83,683.829 1330.39,683.829 1330.95,683.829 1331.51,683.829 1332.07,683.829 1332.63,683.829 1333.19,683.829 1333.75,683.829 1334.3,683.829 1334.86,683.829 1335.42,683.829 1335.98,683.829 1336.54,683.829 1337.1,683.829 1337.66,683.829 1338.22,683.829 1338.78,683.829 1339.34,683.829 1339.9,683.829 1340.46,683.829 1341.02,683.829 1341.57,683.829 1342.13,683.829 1342.69,683.829 1343.25,683.829 1343.81,683.829 1344.37,683.829 1344.93,683.829 1345.49,683.829 1346.05,683.829 1346.61,683.829 1347.17,683.829 1347.73,683.829 1348.29,683.829 1348.84,683.829 1349.4,683.829 1349.96,683.829 1350.52,683.829 1351.08,683.829 1351.64,683.829 1352.2,683.829 1352.76,683.829 1353.32,683.829 1353.88,683.829 1354.44,683.829 1355,683.829 1355.56,683.829 1356.12,683.829 1356.67,683.829 1357.23,683.829 1357.79,683.829 1358.35,683.829 1358.91,683.829 1359.47,683.829 1360.03,683.829 1360.59,683.829 1361.15,683.829 1361.71,683.829 1362.27,683.829 1362.83,683.829 1363.39,683.829 1363.94,683.829 1364.5,683.829 1365.06,683.829 1365.62,683.829 1366.18,683.829 1366.74,683.829 1367.3,683.829 1367.86,683.829 1368.42,683.829 1368.98,683.829 1369.54,683.829 1370.1,683.829 1370.66,683.829 1371.21,683.829 1371.77,683.829 1372.33,683.829 1372.89,683.829 1373.45,683.829 1374.01,683.829 1374.57,683.829 1375.13,683.829 1375.69,683.829 1376.25,683.829 1376.81,683.829 1377.37,683.829 1377.93,683.829 1378.49,683.829 1379.04,683.829 1379.6,683.829 1380.16,683.829 1380.72,683.829 1381.28,683.829 1381.84,683.829 1382.4,683.829 1382.96,683.829 1383.52,683.829 1384.08,683.829 1384.64,683.829 1385.2,683.829 1385.76,683.829 1386.31,683.829 1386.87,683.829 1387.43,683.829 1387.99,683.829 1388.55,683.829 1389.11,683.829 1389.67,683.829 1390.23,683.829 1390.79,683.829 1391.35,683.829 1391.91,683.829 1392.47,683.829 1393.03,683.829 1393.58,683.829 1394.14,683.829 1394.7,683.829 1395.26,683.829 1395.82,683.829 1396.38,683.829 1396.94,683.829 1397.5,683.829 1398.06,683.829 1398.62,683.829 1399.18,683.829 1399.74,683.829 1400.3,683.829 1400.86,683.829 1401.41,683.829 1401.97,683.829 1402.53,683.829 1403.09,683.829 1403.65,683.829 1404.21,683.829 1404.77,683.829 1405.33,683.829 1405.89,683.829 1406.45,683.829 1407.01,683.829 1407.57,683.829 1408.13,683.829 1408.68,683.829 1409.24,683.829 1409.8,683.829 1410.36,683.829 1410.92,683.829 1411.48,683.829 1412.04,683.829 1412.6,683.829 1413.16,683.829 1413.72,683.829 1414.28,683.829 1414.84,683.829 1415.4,683.829 1415.95,683.829 1416.51,683.829 1417.07,683.829 1417.63,683.829 1418.19,683.829 1418.75,683.829 1419.31,683.829 1419.87,683.829 1420.43,683.829 1420.99,683.829 1421.55,683.829 1422.11,683.829 1422.67,683.829 1423.23,683.829 1423.78,683.829 1424.34,683.829 1424.9,683.829 1425.46,683.829 1426.02,683.829 1426.58,683.829 1427.14,683.829 1427.7,683.829 1428.26,683.829 1428.82,683.829 1429.38,683.829 1429.94,683.829 1430.5,683.829 1431.05,683.829 1431.61,683.829 1432.17,683.829 1432.73,683.829 1433.29,683.829 1433.85,683.829 1434.41,683.829 1434.97,683.829 1435.53,683.829 1436.09,683.829 1436.65,683.829 1437.21,683.829 1437.77,683.829 1438.33,683.829 1438.88,683.829 1439.44,683.829 1440,683.829 1440.56,683.829 1441.12,683.829 1441.68,683.829 1442.24,683.829 1442.8,683.829 1443.36,683.829 1443.92,683.829 1444.48,683.829 1445.04,683.829 1445.6,683.829 1446.15,683.829 1446.71,683.829 1447.27,683.829 1447.83,683.829 1448.39,683.829 1448.95,683.829 1449.51,683.829 1450.07,683.829 1450.63,683.829 1451.19,683.829 1451.75,683.829 1452.31,683.829 1452.87,683.829 1453.42,683.829 1453.98,683.829 1454.54,683.829 1455.1,683.829 1455.66,683.829 1456.22,683.829 1456.78,683.829 1457.34,683.829 1457.9,683.829 1458.46,683.829 1459.02,683.829 1459.58,683.829 1460.14,683.829 1460.7,683.829 1461.25,683.829 1461.81,683.829 1462.37,683.829 1462.93,683.829 1463.49,683.829 1464.05,683.829 1464.61,683.829 1465.17,683.829 1465.73,683.829 1466.29,683.829 1466.85,683.829 1467.41,683.829 1467.97,683.829 1468.52,683.829 1469.08,683.829 1469.64,683.829 1470.2,683.829 1470.76,683.829 1471.32,683.829 1471.88,683.829 1472.44,683.829 1473,683.829 1473.56,683.829 1474.12,683.829 1474.68,683.829 1475.24,683.829 1475.79,683.829 1476.35,683.829 1476.91,683.829 1477.47,683.829 1478.03,683.829 1478.59,683.829 1479.15,683.829 1479.71,683.829 1480.27,683.829 1480.83,683.829 1481.39,683.829 1481.95,683.829 1482.51,683.829 1483.07,683.829 1483.62,683.829 1484.18,683.829 1484.74,683.829 1485.3,683.829 1485.86,683.829 1486.42,683.829 1486.98,683.829 1487.54,683.829 1488.1,683.829 1488.66,683.829 1489.22,683.829 1489.78,683.829 1490.34,683.829 1490.89,683.829 1491.45,683.829 1492.01,683.829 1492.57,683.829 1493.13,683.829 1493.69,683.829 1494.25,683.829 1494.81,683.829 1495.37,683.829 1495.93,683.829 1496.49,683.829 1497.05,683.829 1497.61,683.829 1498.16,683.829 1498.72,683.829 1499.28,683.829 1499.84,683.829 1500.4,683.829 1500.96,683.829 1501.52,683.829 1502.08,683.829 1502.64,683.829 1503.2,683.829 1503.76,683.829 1504.32,683.829 1504.88,683.829 1505.44,683.829 1505.99,683.829 1506.55,683.829 1507.11,683.829 1507.67,683.829 1508.23,683.829 1508.79,683.829 1509.35,683.829 1509.91,683.829 1510.47,683.829 1511.03,683.829 1511.59,683.829 1512.15,683.829 1512.71,683.829 1513.26,683.829 1513.82,683.829 1514.38,683.829 1514.94,683.829 1515.5,683.829 1516.06,683.829 1516.62,683.829 1517.18,683.829 1517.74,683.829 1518.3,683.829 1518.86,683.829 1519.42,683.829 1519.98,683.829 1520.53,683.829 1521.09,683.829 1521.65,683.829 1522.21,683.829 1522.77,683.829 1523.33,683.829 1523.89,683.829 1524.45,683.829 1525.01,683.829 1525.57,683.829 1526.13,683.829 1526.69,683.829 1527.25,683.829 1527.81,683.829 1528.36,683.829 1528.92,683.829 1529.48,683.829 1530.04,683.829 1530.6,683.829 1531.16,683.829 1531.72,683.829 1532.28,683.829 1532.84,683.829 1533.4,683.829 1533.96,683.829 1534.52,683.829 1535.08,683.829 1535.63,683.829 1536.19,683.829 1536.75,683.829 1537.31,683.829 1537.87,683.829 1538.43,683.829 1538.99,683.829 1539.55,683.829 1540.11,683.829 1540.67,683.829 1541.23,683.829 1541.79,683.829 1542.35,683.829 1542.9,683.829 1543.46,683.829 1544.02,683.829 1544.58,683.829 1545.14,683.829 1545.7,683.829 1546.26,683.829 1546.82,683.829 1547.38,683.829 1547.94,683.829 1548.5,683.829 1549.06,683.829 1549.62,683.829 1550.18,683.829 1550.73,683.829 1551.29,683.829 1551.85,683.829 1552.41,683.829 1552.97,683.829 1553.53,683.829 1554.09,683.829 1554.65,683.829 1555.21,683.829 1555.77,683.829 1556.33,683.829 1556.89,683.829 1557.45,683.829 1558,683.829 1558.56,683.829 1559.12,683.829 1559.68,683.829 1560.24,683.829 1560.8,683.829 1561.36,683.829 1561.92,683.829 1562.48,683.829 1563.04,683.829 1563.6,683.829 1564.16,683.829 1564.72,683.829 1565.28,683.829 1565.83,683.829 1566.39,683.829 1566.95,683.829 1567.51,683.829 1568.07,683.829 1568.63,683.829 1569.19,683.829 1569.75,683.829 1570.31,683.829 1570.87,683.829 1571.43,683.829 1571.99,683.829 1572.55,683.829 1573.1,683.829 1573.66,683.829 1574.22,683.829 1574.78,683.829 1575.34,683.829 1575.9,683.829 1576.46,683.829 1577.02,683.829 1577.58,683.829 1578.14,683.829 1578.7,683.829 1579.26,683.829 1579.82,683.829 1580.37,683.829 1580.93,683.829 1581.49,683.829 1582.05,683.829 1582.61,683.829 1583.17,683.829 1583.73,683.829 1584.29,683.829 1584.85,683.829 1585.41,683.829 1585.97,683.829 1586.53,683.829 1587.09,683.829 1587.65,683.829 1588.2,683.829 1588.76,683.829 1589.32,683.829 1589.88,683.829 1590.44,683.829 1591,683.829 1591.56,683.829 1592.12,683.829 1592.68,683.829 1593.24,683.829 1593.8,683.829 1594.36,683.829 1594.92,683.829 1595.47,683.829 1596.03,683.829 1596.59,683.829 1597.15,683.829 1597.71,683.829 1598.27,683.829 1598.83,683.829 1599.39,683.829 1599.95,683.829 1600.51,683.829 1601.07,683.829 1601.63,683.829 1602.19,683.829 1602.74,683.829 1603.3,683.829 1603.86,683.829 1604.42,683.829 1604.98,683.829 1605.54,683.829 1606.1,683.829 1606.66,683.829 1607.22,683.829 1607.78,683.829 1608.34,683.829 1608.9,683.829 1609.46,683.829 1610.02,683.829 1610.57,683.829 1611.13,683.829 1611.69,683.829 1612.25,683.829 1612.81,683.829 1613.37,683.829 1613.93,683.829 1614.49,683.829 1615.05,683.829 1615.61,683.829 1616.17,683.829 1616.73,683.829 1617.29,683.829 1617.84,683.829 1618.4,683.829 1618.96,683.829 1619.52,683.829 1620.08,683.829 1620.64,683.829 1621.2,683.829 1621.76,683.829 1622.32,683.829 1622.88,683.829 1623.44,683.829 1624,683.829 1624.56,683.829 1625.11,683.829 1625.67,683.829 1626.23,683.829 1626.79,683.829 1627.35,683.829 1627.91,683.829 1628.47,683.829 1629.03,683.829 1629.59,683.829 1630.15,683.829 1630.71,683.829 1631.27,683.829 1631.83,683.829 1632.39,683.829 1632.94,683.829 1633.5,683.829 1634.06,683.829 1634.62,683.829 1635.18,683.829 1635.74,683.829 1636.3,683.829 1636.86,683.829 1637.42,683.829 1637.98,683.829 1638.54,683.829 1639.1,683.829 1639.66,683.829 1640.21,683.829 1640.77,683.829 1641.33,683.829 1641.89,683.829 1642.45,683.829 1643.01,683.829 1643.57,683.829 1644.13,683.829 1644.69,683.829 1645.25,683.829 1645.81,683.829 1646.37,683.829 1646.93,683.829 1647.48,683.829 1648.04,683.829 1648.6,683.829 1649.16,683.829 1649.72,683.829 1650.28,683.829 1650.84,683.829 1651.4,683.829 1651.96,683.829 1652.52,683.829 1653.08,683.829 1653.64,683.829 1654.2,683.829 1654.76,683.829 1655.31,683.829 1655.87,683.829 1656.43,683.829 1656.99,683.829 1657.55,683.829 1658.11,683.829 1658.67,683.829 1659.23,683.829 1659.79,683.829 1660.35,683.829 1660.91,683.829 1661.47,683.829 1662.03,683.829 1662.58,683.829 1663.14,683.829 1663.7,683.829 1664.26,683.829 1664.82,683.829 1665.38,683.829 1665.94,683.829 1666.5,683.829 1667.06,683.829 1667.62,683.829 1668.18,683.829 1668.74,683.829 1669.3,683.829 1669.85,683.829 1670.41,683.829 1670.97,683.829 1671.53,683.829 1672.09,683.829 1672.65,683.829 1673.21,683.829 1673.77,683.829 1674.33,683.829 1674.89,683.829 1675.45,683.829 1676.01,683.829 1676.57,683.829 1677.13,683.829 1677.68,683.829 1678.24,683.829 1678.8,683.829 1679.36,683.829 1679.92,683.829 1680.48,683.829 1681.04,683.829 1681.6,683.829 1682.16,683.829 1682.72,683.829 1683.28,683.829 1683.84,683.829 1684.4,683.829 1684.95,683.829 1685.51,683.829 1686.07,683.829 1686.63,683.829 1687.19,683.829 1687.75,683.829 1688.31,683.829 1688.87,683.829 1689.43,683.829 1689.99,683.829 1690.55,683.829 1691.11,683.829 1691.67,683.829 1692.23,683.829 1692.78,683.829 1693.34,683.829 1693.9,683.829 1694.46,683.829 1695.02,683.829 1695.58,683.829 1696.14,683.829 1696.7,683.829 1697.26,683.829 1697.82,683.829 1698.38,683.829 1698.94,683.829 1699.5,683.829 1700.05,683.829 1700.61,683.829 1701.17,683.829 1701.73,683.829 1702.29,683.829 1702.85,683.829 1703.41,683.829 1703.97,683.829 1704.53,683.829 1705.09,683.829 1705.65,683.829 1706.21,683.829 1706.77,683.829 1707.32,683.829 1707.88,683.829 1708.44,683.829 1709,683.829 1709.56,683.829 1710.12,683.829 1710.68,683.829 1711.24,683.829 1711.8,683.829 1712.36,683.829 1712.92,683.829 1713.48,683.829 1714.04,683.829 1714.6,683.829 1715.15,683.829 1715.71,683.829 1716.27,683.829 1716.83,683.829 1717.39,683.829 1717.95,683.829 1718.51,683.829 1719.07,683.829 1719.63,683.829 1720.19,683.829 1720.75,683.829 1721.31,683.829 1721.87,683.829 1722.42,683.829 1722.98,683.829 1723.54,683.829 1724.1,683.829 1724.66,683.829 1725.22,683.829 1725.78,683.829 1726.34,683.829 1726.9,683.829 1727.46,683.829 1728.02,683.829 1728.58,683.829 1729.14,683.829 1729.69,683.829 1730.25,683.829 1730.81,683.829 1731.37,683.829 1731.93,683.829 1732.49,683.829 1733.05,683.829 1733.61,683.829 1734.17,683.829 1734.73,683.829 1735.29,683.829 1735.85,683.829 1736.41,683.829 1736.97,683.829 1737.52,683.829 1738.08,683.829 1738.64,683.829 1739.2,683.829 1739.76,683.829 1740.32,683.829 1740.88,683.829 1741.44,683.829 1742,683.829 1742.56,683.829 1743.12,683.829 1743.68,683.829 1744.24,683.829 1744.79,683.829 1745.35,683.829 1745.91,683.829 1746.47,683.829 1747.03,683.829 1747.59,683.829 1748.15,683.829 1748.71,683.829 1749.27,683.829 1749.83,683.829 1750.39,683.829 1750.95,683.829 1751.51,683.829 1752.06,683.829 1752.62,683.829 1753.18,683.829 1753.74,683.829 1754.3,683.829 1754.86,683.829 1755.42,683.829 1755.98,683.829 1756.54,683.829 1757.1,683.829 1757.66,683.829 1758.22,683.829 1758.78,683.829 1759.34,683.829 1759.89,683.829 1760.45,683.829 1761.01,683.829 1761.57,683.829 1762.13,683.829 1762.69,683.829 1763.25,683.829 1763.81,683.829 1764.37,683.829 1764.93,683.829 1765.49,683.829 1766.05,683.829 1766.61,683.829 1767.16,683.829 1767.72,683.829 1768.28,683.829 1768.84,683.829 1769.4,683.829 1769.96,683.829 1770.52,683.829 1771.08,683.829 1771.64,683.829 1772.2,683.829 1772.76,683.829 1773.32,683.829 1773.88,683.829 1774.43,683.829 1774.99,683.829 1775.55,683.829 1776.11,683.829 1776.67,683.829 1777.23,683.829 1777.79,683.829 1778.35,683.829 1778.91,683.829 1779.47,683.829 1780.03,683.829 1780.59,683.829 1781.15,683.829 1781.71,683.829 1782.26,683.829 1782.82,683.829 1783.38,683.829 1783.94,683.829 1784.5,683.829 1785.06,683.829 1785.62,683.829 1786.18,683.829 1786.74,683.829 1787.3,683.829 1787.86,683.829 1788.42,683.829 1788.98,683.829 1789.53,683.829 1790.09,683.829 1790.65,683.829 1791.21,683.829 1791.77,683.829 1792.33,683.829 1792.89,683.829 1793.45,683.829 1794.01,683.829 1794.57,683.829 1795.13,683.829 1795.69,683.829 1796.25,683.829 1796.8,683.829 1797.36,683.829 1797.92,683.829 1798.48,683.829 1799.04,683.829 1799.6,683.829 1800.16,683.829 1800.72,683.829 1801.28,683.829 1801.84,683.829 1802.4,683.829 1802.96,683.829 1803.52,683.829 1804.08,683.829 1804.63,683.829 1805.19,683.829 1805.75,683.829 1806.31,683.829 1806.87,683.829 1807.43,683.829 1807.99,683.829 1808.55,683.829 1809.11,683.829 1809.67,683.829 1810.23,683.829 1810.79,683.829 1811.35,683.829 1811.9,683.829 1812.46,683.829 1813.02,683.829 1813.58,683.829 1814.14,683.829 1814.7,683.829 1815.26,683.829 1815.82,683.829 1816.38,683.829 1816.94,683.829 1817.5,683.829 1818.06,683.829 1818.62,683.829 1819.18,683.829 1819.73,683.829 1820.29,683.829 1820.85,683.829 1821.41,683.829 1821.97,683.829 1822.53,683.829 1823.09,683.829 1823.65,683.829 1824.21,683.829 1824.77,683.829 1825.33,683.829 1825.89,683.829 1826.45,683.829 1827,683.829 1827.56,683.829 1828.12,683.829 1828.68,683.829 1829.24,683.829 1829.8,683.829 1830.36,683.829 1830.92,683.829 1831.48,683.829 1832.04,683.829 1832.6,683.829 1833.16,683.829 1833.72,683.829 1834.27,683.829 1834.83,683.829 1835.39,683.829 1835.95,683.829 1836.51,683.829 1837.07,683.829 1837.63,683.829 1838.19,683.829 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalisation in the example \"Exact diagonalisation\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using LinearAlgebra\nexact_energy = eigvals(Matrix(H))[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.0215024069064915","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ± $(se.err)\n    Projected Energy: $(v.val) ± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.027923810504714 ± 0.027645123065160718\nProjected Energy: -4.016314467689391 ± (0.0043045446831389, 0.00419639764247659)\nExact Energy: -4.0215024069064915\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from lomc! as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; α = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-α.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ± 0.0029\n  with uncertainty of ± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13×6 DataFrame\n Row │ blocks  mean      std_err      std_err_err  p_cov       mj\n     │ Int64   Float64   Float64      Float64      Float64     Float64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 │   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 │   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 │   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 │    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 │    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 │    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 │     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 │     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 │     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 │      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 │      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 │      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ⠀⠀⠀⠀⠀⠀⠀⠀⠀std err vs blocking steps⠀⠀⠀⠀⠀⠀⠀⠀\n               ┌────────────────────────────────────────┐\n    0.00423501 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀│ m test\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢸⠀⠀⠀⠀│ std err\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⡠⢺⠒⠒⢺⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⡀⠀⠀⡆⣀⠤⡗⠉⠀⢸⠀⠀⢸⡆⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡧⠤⠔⡗⠊⠉⡏⠀⠀⡇⠀⠀⢸⠀⠀⢸⢣⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⡇⠀⠀⠁⠀⠀⠁⠀⠀⠁⠀⠀⠀⠀⠀⢸⠸⡀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠁⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⡇⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠊⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣦⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀│\n               │⠀⠀⠀⢀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n               │⠀⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n   -0.00012335 │⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠧⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤│\n               └────────────────────────────────────────┘\n               ⠀0.64⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀k⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀13.36⠀\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; α = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; α=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.σ_f using x_by_y_linear. The standard error estimate r.σ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.δ_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*σ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3×3 DataFrame\n Row │ res      res_l    res_u\n     │ Float64  Float64  Float64\n─────┼───────────────────────────\n   1 │    11.5  1.7282   1.7282\n   2 │    13.0  1.7282   1.7282\n   3 │    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dτ=df.dτ[end], skip=0)\n\nCalculate the growth witness directly from a DataFrame returned by lomc!. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0) -> g\ngrowth_witness(df::DataFrame, [b]; skip=0) -> g\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ≥ 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n) -> r::RatioBlockingResult\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    dτ=df.dτ[end],\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively. Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin().\n\nE_gr = E_r - frac1dτln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the (biased) shift estimator. Error propagation is done with MonteCarloMeasurements. Progagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a DataFrame returned by lomc!. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator() and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\n-> (;df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    dτ=df.dτ[end],\n    kwargs...\n)\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the unweighted ratio. Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame returned by lomc!. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(\n    df::DataFrame;\n    skip=0, hproj=:hproj, vproj=:vproj, kwargs...\n) -> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy() to set these up in lomc!()). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame returned by lomc!. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...) -> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the result of replica lomc! passed as  argument df, using replicas _1 and _2. Calls ratio_of_means() to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |ψ⟩ and |ϕ⟩ is defined as\n\nF(ψϕ) = fracψϕ^2ψψϕϕ \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v⋅v == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame version can extract the relevant information from the result of lomc!. Set up lomc! with the keyword argument replica = AllOverlaps(R) and R ≥ 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ± 0.029\n  with uncertainty of ± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; α = 0.01) -> k\nmtest(table::NamedTuple; α = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-α after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, σ_f, δ_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nσ_f::T: std from linear propagation\nδ_y::T: coefficient of variation for denominator (≤ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, μ, σ)\nparticles(samples, μ::AbstractVector, Σ::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, σ_f, δ_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nσ_f standard deviation of f from linear error propagation (normal approximation)\nδ_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(μ_x,μ_y,σ_x,σ_y,ρ) -> f, σ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013).\n\nσ_f = sqrtfracσ_xμ_y^2 + fracμ_x σ_yμ_y^2^2 - frac2 ρ μ_xμ_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3×7 DataFrame\n Row │ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     │ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 │    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 │    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1×9 DataFrame\n Row │ val       val_l      val_u      val_f     val_σ_f    val_δ_y    val_k  val_blocks  val_success\n     │ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n─────┼────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7×6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS…</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple…</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.455199</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.3344e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">1.3525e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">9.868e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.403e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.865e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">8.616e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ≠ basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10×10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10×10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nΔE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ΔE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(BoseFS{4,5}(0, 0, 4, 0, 0); u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0⟩\"\n fs\"|0 1 2 1 0⟩\"\n fs\"|1 0 2 0 1⟩\"\n fs\"|1 0 1 2 0⟩\"\n fs\"|0 0 1 1 2⟩\"\n fs\"|0 2 1 0 1⟩\"\n fs\"|2 1 1 0 0⟩\"\n fs\"|0 2 0 2 0⟩\"\n fs\"|1 1 0 1 1⟩\"\n fs\"|2 0 0 0 2⟩\"\n fs\"|0 0 0 3 1⟩\"\n fs\"|3 0 0 1 0⟩\"\n fs\"|0 1 0 0 3⟩\"\n fs\"|1 3 0 0 0⟩\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0⟩\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ≈ all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0⟩\" => -0.0214153\n  fs\"|2 0 0 0 2⟩\" => -0.00237613\n  fs\"|0 0 4 0 0⟩\" => -0.980348\n  fs\"|0 0 0 3 1⟩\" => 0.00363555\n  fs\"|2 1 1 0 0⟩\" => -0.0119687\n  fs\"|1 0 2 0 1⟩\" => 0.0768085\n  fs\"|1 3 0 0 0⟩\" => 0.00363555\n  fs\"|0 1 2 1 0⟩\" => 0.177701\n  fs\"|0 0 1 1 2⟩\" => -0.0119687\n  fs\"|3 0 0 1 0⟩\" => 0.00195478\n  fs\"|0 2 0 2 0⟩\" => -0.0138439\n  fs\"|1 1 0 1 1⟩\" => -0.00234782\n  fs\"|0 1 0 0 3⟩\" => 0.00195478\n  fs\"|0 2 1 0 1⟩\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i ϵ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential ϵ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleσ t_σ a^_iσ a_jσ +\n  frac12sum_iσ u_σσ n_iσ (n_iσ - 1) +\n  sum_iστu_στ n_iσ n_iτ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iσd v_σd x_di^2 n_iσ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C × D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(add::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k δ_r+qp+k\n\nArguments\n\nadd: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, η, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl \n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order  degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl \n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and  the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between  basis states of any noninteracting energy level, leading to many more offdiagonals and  fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger  restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The    allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make    the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the    interactions. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without    comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building  a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, η, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i ϵ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that  conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using  first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d) \n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, see four_oscillator_integral_general, with the additional restriction  that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to    make the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function  potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi ϵ_mathbfi n_mathbfi \n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix  representation of this Hamiltonian for a single particle is completely dense in the even-parity  subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nηs = (): a tuple of aspect ratios for the remaining dimensions (η_y, ...). Should be empty    for a 1D trap or contain values greater than 1.0. The maximum index    in other dimensions will be the largest even number less than M/η_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,    including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if    only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of \nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kσk^2 n_kσ \n    quad + sum_pqkσσ T_pqk a^_p-kσ a^_q+kσ a_qσ a_pσ \n    quad + sum_pqskkσσ Q_kka^_p-kσ a^_q+kσ a^_s+k-kσ\n                                       a_sσ a_qσ a_pσ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + ωN - v Σₖ(aₖ^ + aₖ)\n\nwhere p is the total momentum, p_f = Σ_k k aₖ^ aₖ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2πl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons ω.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0⟩{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M÷2, M÷2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M÷2, M÷2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address α is replaced by frac12(α  α) for even and odd parity, respectively, where ᾱ == reverse(α).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(BoseFS{3,3}(0, 2, 1); u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ≈ eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ≈ eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ≤ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0⟩{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ≤ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, σ=1, τ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_στ(d) = frac1M _i n_σi (n_τi+d - δ_0dδ_στ)\n\nFor multicomponent addresses, σ and τ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s b^_p  b_q a_r δ_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s a^_p  a_q a_r δ_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ≤ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ≤ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iσ = hat a^_iσ hat a_iσ\n\nwhere i is the mode and σ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0⟩\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0⟩\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x⋅(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1⟩\", -3.0)\n (fs\"|2 2 2⟩\", -2.449489742783178)\n (fs\"|3 1 2⟩\", -2.0)\n (fs\"|4 1 1⟩\", -2.8284271247461903)\n (fs\"|4 2 0⟩\", -2.0)\n (fs\"|3 3 0⟩\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ….\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb⋅(1:7) == onr(b)⋅(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w⋅op(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ⋅ A ⋅ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions, \n\n    mathcalI(ijkl) = int_-infty^infty dx  \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function,  and is non-zero unless i+j+k+l is odd. See e.g.  Titchmarsh (1948). This is a generalisation of the closed form in  Papenbrock (2002), which is is the special  case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin, \n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state  corresponds to a D-tuple of harmonic oscillator indices mathbfn_i.  S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of  phi_i(0) to speed-up the calculation. The values can be calculated with  log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D  harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1⟩\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ≈ values[1]\ntrue\n\nSee also solve, init, KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian)\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3×3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:\n  0.0  -1.0  -1.0\n -1.0   0.0  -1.0\n -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2×2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:\n  0.0  -1.0\n -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues\n3-element Vector{Float64}:\n -1.9999999999999996\n  0.9999999999999997\n  1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector\n3-element Vector{Float64}:\n -0.5773502691896257\n -0.5773502691896255\n -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec\nDVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()\n  fs\"|0 0 1⟩\" => -0.57735\n  fs\"|0 1 0⟩\" => -0.57735\n  fs\"|1 0 0⟩\" => -0.57735\n\nHas methods for dimension, sparse, Matrix, starting_address.\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nαmathrmnaddrrangle\n\nReturns the new address naddr and the factor α. The value of α is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0⟩\" => 1\n\njulia> fs\"|0 1 2 0⟩\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3⟩⊗|0 1 0⟩\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|↑↓↑⟩\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0⟩{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0⟩{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ≤ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Σ_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen)\n\nCompute the new address of a hopping event for the Bose-Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic.\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ≤ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|⋅↑↑↑⋅⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|↑↓↓⟩\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3⟩{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n→ (nadd, α)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of α is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3⟩{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, α = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dτ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ after projecting onto projector.\n\nS^n+1 = S^n -fracζdτlnleft(fracPΨ^(n+1)PΨ^(n)right)-fracξdτlnleft(fracPΨ^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4, α = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracξdτlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-α)*walkernumber() + α*UniformProjector()⋅ψ computed with walkernumber() and UniformProjector(). When ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)-fracξdτlnleft(fracΨ_1^n+1Ψ_1^texttargetright)\n\nWhen ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08, ξ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ and ξ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, ζ = 0.08,   ξ = ζ^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dτ) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\n𝐓 = 1 + dτ(S - 𝐇)\n\nwhere 𝐇 is the hamiltonian and S is the shift.\n\n𝐓 represents the first order expansion of the exponential evolution operator of the imaginary-time Schrödinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also StateVectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntargetwalkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; targetwalkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nζ = 0.08: Damping parameter for the shift update.\nξ = ζ^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; targetwalkers, ζ, ξ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * targetwalkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralStates, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dτ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(⋅,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors(state::ReplicaState) <: AbstractMatrix{V}\nStateVectors(sim::PMCSimulation)\n\nRepresents a matrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dτ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsStochasticInteger(),\n    initiator=NonInitiator(),\n    threading=nothing\n)\n\nReturn a default starting vector for lomc!. The default choice for the starting vector is\n\nv = PDVec(address => 10; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => 10; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => 10; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and [InitiatorRule].\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndτ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> add = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(add);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(BoseFS{6,3}(1, 2, 3); u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nτ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, ζ = 0.08, ξ = ζ^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(algorithm::FCIQMC, hamiltonian,\nstarting_vectors, shift, time_step, initial_shift_parameters\n\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ≈ num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|⋅↑⇅↓⋅⟩\" => 1.0, fs\"|↓↓⋅↑↑⟩\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|↓↓⋅↑↑⟩\" => 0.5\n  fs\"|⋅↑⇅↓⋅⟩\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{Rimu.SingleState}","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state)\n\nReturns a collection of configuration vectors from the state.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dτ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dτ","text":"update_dτ(s<:TimeStepStrategy, dτ, tnorm) -> new dτ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with mpirun julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Next, we construct the starting vector. We use a PDVec, which is automatically MPI-distributed if MPI is available. We set the vector's stochastic style to IsDynamicSemistochastic, which improves statistics and reduces the sign problem.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails. Setting save_if=is_mpi_root() will ensure only the root MPI rank will write to the file. The chunk_size parameter determines how often the data is saved to the file. Progress messages are suppressed with io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    save_if=is_mpi_root(),\n    reporting_interval=1,\n    chunk_size=1000,\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10_000 walkers. We will also compute the projected energy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"s_strat = DoubleLogUpdate(targetwalkers=10_000)\npost_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ProjectedEnergy{HubbardMom1D{Float64, 10, BoseFS{10, 10, BitString{19, 1, UInt32}}, 6.0, 1.0}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}}(:vproj, :hproj, HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 1.0],)), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(1, 0, 0, 0, 8, 0, 0, 0, 1, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 0, 8, 0, 0, 0, 0, 2) => 4.024922359499621, BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 7.0, BoseFS{10,10}(0, 0, 1, 0, 8, 0, 1, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 1, 8, 1, 0, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 1, 0, 0, 8, 0, 0, 1, 0, 0) => 5.692099788303083],)))","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"lomc!(H, initial_vector; reporting_strategy, s_strat, post_step_strategy, dτ=1e-4, laststep=10_000);\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schrödinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Blöte PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schrödinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija Čufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. lomc!.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main lomc!() computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI for use in lomc!() is enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. Čufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelmüller, D. Huber, M. Čufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/π^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↑↓↓⟩\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => 4.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => -1.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => -1.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => -1.0\n  fs\"|↑↑↓↓⟩\" => -4.0\n  fs\"|↓↑↓↑⟩\" => -1.0\n  fs\"|↓↑↑↓⟩\" => 1.0\n  fs\"|⇅⋅⋅⇅⟩\" => -1.0\n  fs\"|↑↓↓↑⟩\" => 1.0\n  fs\"|⋅⇅⇅⋅⟩\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => -2.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => 3.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => 3.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()⋅v == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
