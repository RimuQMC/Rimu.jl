var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndτ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dτ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ± $(r.σ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ± 0.13748856752861724\n   Replica 2: -3.974753826250174 ± 0.12466355058904417\n   Replica 3: -4.011054302602586 ± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1⟩\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1⟩\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0⟩\"=>-14.1421, fs\"|0 2 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 1 0 2⟩\"=>-14.1421, fs\"|1 2 0 1 1 1⟩\"=>-14.1421, fs\"|2 0 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 2 0 1⟩\"=>-14.1421, fs\"|1 1 2 0 1 1⟩\"=>-14.1421, fs\"|1 1 0 2 1 1⟩\"=>-14.1421, fs\"|1 1 1 0 2 1⟩\"=>-14.1421, fs\"|1 0 2 1 1 1⟩\"=>-14.1421, fs\"|2 1 1 1 1 0⟩\"=>-14.1421, fs\"|0 1 1 1 1 2⟩\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    targetwalkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip300\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip300)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip301\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip300)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip302\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip300)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1248.87 1391.71 L1248.87 1397.25 Q1246.38 1395.98 1243.71 1395.34 Q1241.04 1394.71 1238.17 1394.71 Q1233.81 1394.71 1231.62 1396.04 Q1229.45 1397.38 1229.45 1400.05 Q1229.45 1402.09 1231.01 1403.27 Q1232.57 1404.41 1237.28 1405.46 L1239.29 1405.91 Q1245.52 1407.25 1248.13 1409.7 Q1250.78 1412.12 1250.78 1416.48 Q1250.78 1421.44 1246.83 1424.34 Q1242.91 1427.23 1236.04 1427.23 Q1233.17 1427.23 1230.06 1426.66 Q1226.97 1426.12 1223.53 1425.01 L1223.53 1418.96 Q1226.78 1420.65 1229.93 1421.51 Q1233.08 1422.33 1236.17 1422.33 Q1240.3 1422.33 1242.53 1420.93 Q1244.76 1419.5 1244.76 1416.92 Q1244.76 1414.54 1243.14 1413.26 Q1241.55 1411.99 1236.1 1410.81 L1234.07 1410.33 Q1228.62 1409.19 1226.2 1406.83 Q1223.79 1404.45 1223.79 1400.31 Q1223.79 1395.28 1227.35 1392.54 Q1230.91 1389.8 1237.47 1389.8 Q1240.72 1389.8 1243.58 1390.28 Q1246.45 1390.76 1248.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1265.89 1380.54 L1265.89 1390.66 L1277.96 1390.66 L1277.96 1395.22 L1265.89 1395.22 L1265.89 1414.57 Q1265.89 1418.93 1267.07 1420.17 Q1268.28 1421.41 1271.94 1421.41 L1277.96 1421.41 L1277.96 1426.31 L1271.94 1426.31 Q1265.16 1426.31 1262.58 1423.8 Q1260.01 1421.25 1260.01 1414.57 L1260.01 1395.22 L1255.71 1395.22 L1255.71 1390.66 L1260.01 1390.66 L1260.01 1380.54 L1265.89 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1316.15 1407.02 L1316.15 1409.89 L1289.22 1409.89 Q1289.61 1415.94 1292.85 1419.12 Q1296.13 1422.27 1301.96 1422.27 Q1305.33 1422.27 1308.48 1421.44 Q1311.66 1420.61 1314.78 1418.96 L1314.78 1424.5 Q1311.63 1425.83 1308.32 1426.53 Q1305.01 1427.23 1301.61 1427.23 Q1293.08 1427.23 1288.08 1422.27 Q1283.11 1417.3 1283.11 1408.84 Q1283.11 1400.08 1287.82 1394.96 Q1292.57 1389.8 1300.59 1389.8 Q1307.78 1389.8 1311.95 1394.45 Q1316.15 1399.07 1316.15 1407.02 M1310.3 1405.3 Q1310.23 1400.5 1307.59 1397.63 Q1304.98 1394.77 1300.65 1394.77 Q1295.75 1394.77 1292.79 1397.54 Q1289.86 1400.31 1289.42 1405.34 L1310.3 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1331.43 1420.96 L1331.43 1439.87 L1325.54 1439.87 L1325.54 1390.66 L1331.43 1390.66 L1331.43 1396.07 Q1333.28 1392.89 1336.08 1391.36 Q1338.91 1389.8 1342.82 1389.8 Q1349.32 1389.8 1353.36 1394.96 Q1357.43 1400.12 1357.43 1408.52 Q1357.43 1416.92 1353.36 1422.08 Q1349.32 1427.23 1342.82 1427.23 Q1338.91 1427.23 1336.08 1425.71 Q1333.28 1424.15 1331.43 1420.96 M1351.35 1408.52 Q1351.35 1402.06 1348.68 1398.4 Q1346.04 1394.71 1341.39 1394.71 Q1336.74 1394.71 1334.07 1398.4 Q1331.43 1402.06 1331.43 1408.52 Q1331.43 1414.98 1334.07 1418.67 Q1336.74 1422.33 1341.39 1422.33 Q1346.04 1422.33 1348.68 1418.67 Q1351.35 1414.98 1351.35 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1389.87 1391.71 L1389.87 1397.25 Q1387.38 1395.98 1384.71 1395.34 Q1382.04 1394.71 1379.17 1394.71 Q1374.81 1394.71 1372.62 1396.04 Q1370.45 1397.38 1370.45 1400.05 Q1370.45 1402.09 1372.01 1403.27 Q1373.57 1404.41 1378.28 1405.46 L1380.29 1405.91 Q1386.52 1407.25 1389.13 1409.7 Q1391.78 1412.12 1391.78 1416.48 Q1391.78 1421.44 1387.83 1424.34 Q1383.91 1427.23 1377.04 1427.23 Q1374.18 1427.23 1371.06 1426.66 Q1367.97 1426.12 1364.53 1425.01 L1364.53 1418.96 Q1367.78 1420.65 1370.93 1421.51 Q1374.08 1422.33 1377.17 1422.33 Q1381.3 1422.33 1383.53 1420.93 Q1385.76 1419.5 1385.76 1416.92 Q1385.76 1414.54 1384.14 1413.26 Q1382.55 1411.99 1377.1 1410.81 L1375.07 1410.33 Q1369.62 1409.19 1367.2 1406.83 Q1364.79 1404.45 1364.79 1400.31 Q1364.79 1395.28 1368.35 1392.54 Q1371.92 1389.8 1378.47 1389.8 Q1381.72 1389.8 1384.58 1390.28 Q1387.45 1390.76 1389.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1260.82 2211.02,1260.82 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1003.45 2211.02,1003.45 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,746.071 2211.02,746.071 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,488.695 2211.02,488.695 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,231.318 2211.02,231.318 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1260.82 423.181,1260.82 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1003.45 423.181,1003.45 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,746.071 423.181,746.071 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,488.695 423.181,488.695 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,231.318 423.181,231.318 \"/>\n<path clip-path=\"url(#clip300)\" d=\"M356.339 1246.62 Q352.728 1246.62 350.899 1250.19 Q349.094 1253.73 349.094 1260.86 Q349.094 1267.96 350.899 1271.53 Q352.728 1275.07 356.339 1275.07 Q359.973 1275.07 361.779 1271.53 Q363.608 1267.96 363.608 1260.86 Q363.608 1253.73 361.779 1250.19 Q359.973 1246.62 356.339 1246.62 M356.339 1242.92 Q362.149 1242.92 365.205 1247.53 Q368.284 1252.11 368.284 1260.86 Q368.284 1269.59 365.205 1274.19 Q362.149 1278.77 356.339 1278.77 Q350.529 1278.77 347.45 1274.19 Q344.395 1269.59 344.395 1260.86 Q344.395 1252.11 347.45 1247.53 Q350.529 1242.92 356.339 1242.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M290.043 1016.79 L306.363 1016.79 L306.363 1020.73 L284.418 1020.73 L284.418 1016.79 Q287.08 1014.04 291.664 1009.41 Q296.27 1004.76 297.451 1003.41 Q299.696 1000.89 300.576 999.153 Q301.478 997.394 301.478 995.704 Q301.478 992.95 299.534 991.214 Q297.613 989.477 294.511 989.477 Q292.312 989.477 289.858 990.241 Q287.427 991.005 284.65 992.556 L284.65 987.834 Q287.474 986.7 289.927 986.121 Q292.381 985.542 294.418 985.542 Q299.789 985.542 302.983 988.227 Q306.177 990.913 306.177 995.403 Q306.177 997.533 305.367 999.454 Q304.58 1001.35 302.474 1003.95 Q301.895 1004.62 298.793 1007.83 Q295.691 1011.03 290.043 1016.79 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M316.224 986.167 L334.58 986.167 L334.58 990.102 L320.506 990.102 L320.506 998.575 Q321.524 998.227 322.543 998.065 Q323.562 997.88 324.58 997.88 Q330.367 997.88 333.747 1001.05 Q337.126 1004.22 337.126 1009.64 Q337.126 1015.22 333.654 1018.32 Q330.182 1021.4 323.862 1021.4 Q321.687 1021.4 319.418 1021.03 Q317.173 1020.66 314.765 1019.92 L314.765 1015.22 Q316.849 1016.35 319.071 1016.91 Q321.293 1017.46 323.77 1017.46 Q327.774 1017.46 330.112 1015.36 Q332.45 1013.25 332.45 1009.64 Q332.45 1006.03 330.112 1003.92 Q327.774 1001.82 323.77 1001.82 Q321.895 1001.82 320.02 1002.23 Q318.168 1002.65 316.224 1003.53 L316.224 986.167 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M356.339 989.246 Q352.728 989.246 350.899 992.811 Q349.094 996.352 349.094 1003.48 Q349.094 1010.59 350.899 1014.15 Q352.728 1017.69 356.339 1017.69 Q359.973 1017.69 361.779 1014.15 Q363.608 1010.59 363.608 1003.48 Q363.608 996.352 361.779 992.811 Q359.973 989.246 356.339 989.246 M356.339 985.542 Q362.149 985.542 365.205 990.149 Q368.284 994.732 368.284 1003.48 Q368.284 1012.21 365.205 1016.82 Q362.149 1021.4 356.339 1021.4 Q350.529 1021.4 347.45 1016.82 Q344.395 1012.21 344.395 1003.48 Q344.395 994.732 347.45 990.149 Q350.529 985.542 356.339 985.542 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M286.062 728.791 L304.418 728.791 L304.418 732.726 L290.344 732.726 L290.344 741.198 Q291.363 740.851 292.381 740.689 Q293.4 740.504 294.418 740.504 Q300.205 740.504 303.585 743.675 Q306.964 746.846 306.964 752.263 Q306.964 757.842 303.492 760.944 Q300.02 764.022 293.701 764.022 Q291.525 764.022 289.256 763.652 Q287.011 763.282 284.603 762.541 L284.603 757.842 Q286.687 758.976 288.909 759.532 Q291.131 760.087 293.608 760.087 Q297.613 760.087 299.951 757.981 Q302.288 755.874 302.288 752.263 Q302.288 748.652 299.951 746.546 Q297.613 744.439 293.608 744.439 Q291.733 744.439 289.858 744.856 Q288.006 745.272 286.062 746.152 L286.062 728.791 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M326.177 731.87 Q322.566 731.87 320.737 735.435 Q318.932 738.976 318.932 746.106 Q318.932 753.212 320.737 756.777 Q322.566 760.319 326.177 760.319 Q329.811 760.319 331.617 756.777 Q333.446 753.212 333.446 746.106 Q333.446 738.976 331.617 735.435 Q329.811 731.87 326.177 731.87 M326.177 728.166 Q331.987 728.166 335.043 732.772 Q338.122 737.356 338.122 746.106 Q338.122 754.833 335.043 759.439 Q331.987 764.022 326.177 764.022 Q320.367 764.022 317.288 759.439 Q314.233 754.833 314.233 746.106 Q314.233 737.356 317.288 732.772 Q320.367 728.166 326.177 728.166 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M356.339 731.87 Q352.728 731.87 350.899 735.435 Q349.094 738.976 349.094 746.106 Q349.094 753.212 350.899 756.777 Q352.728 760.319 356.339 760.319 Q359.973 760.319 361.779 756.777 Q363.608 753.212 363.608 746.106 Q363.608 738.976 361.779 735.435 Q359.973 731.87 356.339 731.87 M356.339 728.166 Q362.149 728.166 365.205 732.772 Q368.284 737.356 368.284 746.106 Q368.284 754.833 365.205 759.439 Q362.149 764.022 356.339 764.022 Q350.529 764.022 347.45 759.439 Q344.395 754.833 344.395 746.106 Q344.395 737.356 347.45 732.772 Q350.529 728.166 356.339 728.166 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M284.835 471.415 L307.057 471.415 L307.057 473.405 L294.511 505.975 L289.627 505.975 L301.432 475.35 L284.835 475.35 L284.835 471.415 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M316.224 471.415 L334.58 471.415 L334.58 475.35 L320.506 475.35 L320.506 483.822 Q321.524 483.475 322.543 483.313 Q323.562 483.128 324.58 483.128 Q330.367 483.128 333.747 486.299 Q337.126 489.47 337.126 494.887 Q337.126 500.465 333.654 503.567 Q330.182 506.646 323.862 506.646 Q321.687 506.646 319.418 506.276 Q317.173 505.905 314.765 505.165 L314.765 500.465 Q316.849 501.6 319.071 502.155 Q321.293 502.711 323.77 502.711 Q327.774 502.711 330.112 500.604 Q332.45 498.498 332.45 494.887 Q332.45 491.276 330.112 489.169 Q327.774 487.063 323.77 487.063 Q321.895 487.063 320.02 487.479 Q318.168 487.896 316.224 488.776 L316.224 471.415 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M356.339 474.493 Q352.728 474.493 350.899 478.058 Q349.094 481.6 349.094 488.729 Q349.094 495.836 350.899 499.401 Q352.728 502.942 356.339 502.942 Q359.973 502.942 361.779 499.401 Q363.608 495.836 363.608 488.729 Q363.608 481.6 361.779 478.058 Q359.973 474.493 356.339 474.493 M356.339 470.79 Q362.149 470.79 365.205 475.396 Q368.284 479.979 368.284 488.729 Q368.284 497.456 365.205 502.063 Q362.149 506.646 356.339 506.646 Q350.529 506.646 347.45 502.063 Q344.395 497.456 344.395 488.729 Q344.395 479.979 347.45 475.396 Q350.529 470.79 356.339 470.79 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M256.664 244.663 L264.303 244.663 L264.303 218.298 L255.992 219.964 L255.992 215.705 L264.256 214.038 L268.932 214.038 L268.932 244.663 L276.571 244.663 L276.571 248.598 L256.664 248.598 L256.664 244.663 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M296.015 217.117 Q292.404 217.117 290.576 220.682 Q288.77 224.224 288.77 231.353 Q288.77 238.46 290.576 242.024 Q292.404 245.566 296.015 245.566 Q299.65 245.566 301.455 242.024 Q303.284 238.46 303.284 231.353 Q303.284 224.224 301.455 220.682 Q299.65 217.117 296.015 217.117 M296.015 213.413 Q301.826 213.413 304.881 218.02 Q307.96 222.603 307.96 231.353 Q307.96 240.08 304.881 244.686 Q301.826 249.27 296.015 249.27 Q290.205 249.27 287.127 244.686 Q284.071 240.08 284.071 231.353 Q284.071 222.603 287.127 218.02 Q290.205 213.413 296.015 213.413 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M326.177 217.117 Q322.566 217.117 320.737 220.682 Q318.932 224.224 318.932 231.353 Q318.932 238.46 320.737 242.024 Q322.566 245.566 326.177 245.566 Q329.811 245.566 331.617 242.024 Q333.446 238.46 333.446 231.353 Q333.446 224.224 331.617 220.682 Q329.811 217.117 326.177 217.117 M326.177 213.413 Q331.987 213.413 335.043 218.02 Q338.122 222.603 338.122 231.353 Q338.122 240.08 335.043 244.686 Q331.987 249.27 326.177 249.27 Q320.367 249.27 317.288 244.686 Q314.233 240.08 314.233 231.353 Q314.233 222.603 317.288 218.02 Q320.367 213.413 326.177 213.413 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M356.339 217.117 Q352.728 217.117 350.899 220.682 Q349.094 224.224 349.094 231.353 Q349.094 238.46 350.899 242.024 Q352.728 245.566 356.339 245.566 Q359.973 245.566 361.779 242.024 Q363.608 238.46 363.608 231.353 Q363.608 224.224 361.779 220.682 Q359.973 217.117 356.339 217.117 M356.339 213.413 Q362.149 213.413 365.205 218.02 Q368.284 222.603 368.284 231.353 Q368.284 240.08 365.205 244.686 Q362.149 249.27 356.339 249.27 Q350.529 249.27 347.45 244.686 Q344.395 240.08 344.395 231.353 Q344.395 222.603 347.45 218.02 Q350.529 213.413 356.339 213.413 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip302)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,231.318 4017.76,231.318 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1250.45 456.554,1250.31 457.123,1250.09 457.691,1249.81 458.259,1249.47 458.828,1249.06 459.396,1248.59 459.964,1248.04 460.533,1247.43 461.101,1246.75 461.669,1245.99 462.238,1245.15 462.806,1244.23 463.375,1243.22 463.943,1242.12 464.511,1240.92 465.08,1238.59 465.648,1237.17 466.216,1235.63 466.785,1233.97 467.353,1232.19 467.921,1230.27 468.49,1228.2 469.058,1225.99 469.626,1223.59 470.195,1221.06 470.763,1217.32 471.331,1214.39 471.9,1211.3 472.468,1208 473.036,1203.49 473.605,1198.71 474.173,1192.66 474.741,1187.42 475.31,1181.91 475.878,1177.13 476.446,1172.14 477.015,1163.82 477.583,1158.22 478.152,1152.39 478.72,1145.36 479.288,1139.11 479.857,1131.66 480.425,1123.89 480.993,1116.96 481.562,1109.75 482.13,1102.35 482.698,1094.77 483.267,1083.85 483.835,1074.55 484.403,1066.11 484.972,1057.54 485.54,1048.78 486.108,1039.81 486.677,1030.71 487.245,1020.37 487.813,1011.08 488.382,1001.59 488.95,990.977 489.518,978.278 490.087,965.447 490.655,954.805 491.224,945.117 491.792,932.255 492.36,920.429 492.929,910.752 493.497,899.911 494.065,885.06 494.634,872.367 495.202,860.855 495.77,851.505 496.339,842.021 496.907,830.53 497.475,818.094 498.044,807.784 498.612,797.461 499.18,787.244 499.749,777.017 500.317,766.904 500.885,757.867 501.454,748.794 502.022,735.678 502.59,724.832 503.159,714.98 503.727,705.194 504.295,694.514 504.864,683.964 505.432,672.566 506.001,662.28 506.569,653.307 507.137,644.376 507.706,636.604 508.274,628.962 508.842,619.29 509.411,611.747 509.979,604.347 510.547,594.899 511.116,586.527 511.684,577.417 512.252,568.422 512.821,558.651 513.389,552.109 513.957,544.593 514.526,537.145 515.094,531.098 515.662,522.814 516.231,516.961 516.799,510.259 517.367,503.644 517.936,496.132 518.504,491.855 519.072,482.178 519.641,477.044 520.209,470.986 520.778,465.242 521.346,463.912 521.914,458.947 522.483,454.135 523.051,445.245 523.619,440.851 524.188,433.537 524.756,427.33 525.324,423.591 525.893,419.994 526.461,415.068 527.029,412.559 527.598,404.893 528.166,397.341 528.734,393.084 529.303,390.168 529.871,386.284 530.439,382.485 531.008,379.829 531.576,376.194 532.144,372.601 532.713,369.211 533.281,366.883 533.85,365.509 534.418,359.026 534.986,357.941 535.555,352.791 536.123,350.824 536.691,344.644 537.26,344.96 537.828,342.042 538.396,339.147 538.965,337.409 539.533,334.723 540.101,331.129 540.67,329.797 541.238,327.197 541.806,322.572 542.375,319.36 542.943,315.403 543.511,314.711 544.08,313.79 544.648,313.142 545.216,312.048 545.785,309.149 546.353,308.237 546.921,307.21 547.49,306.212 548.058,303.244 548.627,302.254 549.195,299.607 549.763,297.716 550.332,296.136 550.9,293.567 551.468,291.992 552.037,291.565 552.605,290.1 553.173,289.663 553.742,290.213 554.31,288.62 554.878,288.86 555.447,284.386 556.015,284.038 556.583,283.619 557.152,280.162 557.72,278.934 558.288,279.79 558.857,279.734 559.425,277.516 559.993,276.178 560.562,275.954 561.13,275.778 561.698,275.379 562.267,274.072 562.835,271.904 563.404,271.836 563.972,270.836 564.54,272.781 565.109,272.413 565.677,272.261 566.245,267.859 566.814,266.956 567.382,264.767 567.95,263.773 568.519,262.947 569.087,263.179 569.655,264.331 570.224,265.57 570.792,263.348 571.36,264.535 571.929,264.438 572.497,264.149 573.065,263.98 573.634,262.858 574.202,261.737 574.77,261.907 575.339,261.84 575.907,261.701 576.476,260.513 577.044,259.391 577.612,260.627 578.181,258.484 578.749,258.375 579.317,258.409 579.886,258.425 580.454,259.319 581.022,259.158 581.591,260.151 582.159,259.062 582.727,259.908 583.296,260.648 583.864,261.228 584.432,260.79 585.001,260.281 585.569,258.866 586.137,259.367 586.706,256.952 587.274,255.707 587.842,253.706 588.411,254.439 588.979,253.25 589.547,252.371 590.116,250.402 590.684,248.45 591.253,246.498 591.821,245.809 592.389,244.321 592.958,244.533 593.526,243.887 594.094,244.452 594.663,243.771 595.231,245.356 595.799,243.581 596.368,244.986 596.936,244.308 597.504,244.817 598.073,245.22 598.641,245.431 599.209,243.647 599.778,246.123 600.346,247.456 600.914,246.65 601.483,247.829 602.051,245.844 602.619,245.117 603.188,244.479 603.756,242.689 604.325,243.151 604.893,243.551 605.461,242.901 606.03,242.263 606.598,242.621 607.166,243.144 607.735,246.493 608.303,245.771 608.871,245.938 609.44,246.192 610.008,243 610.576,244.143 611.145,244.261 611.713,244.412 612.281,246.507 612.85,245.491 613.418,248.556 613.986,249.614 614.555,249.283 615.123,249.1 615.691,246.782 616.26,244.717 616.828,242.622 617.396,240.758 617.965,239.861 618.533,239.96 619.102,239.456 619.67,240.64 620.238,241.046 620.807,242.143 621.375,240.261 621.943,241.675 622.512,242.934 623.08,242.851 623.648,243.036 624.217,242.101 624.785,241.133 625.353,238.428 625.922,239.484 626.49,239.857 627.058,242.174 627.627,241.141 628.195,237.006 628.763,238.366 629.332,240.905 629.9,240.892 630.468,241.189 631.037,241.178 631.605,241.486 632.173,240.338 632.742,240.474 633.31,241.4 633.879,240.324 634.447,240.441 635.015,239.529 635.584,238.627 636.152,239.893 636.72,240.057 637.289,238.099 637.857,239.366 638.425,239.539 638.994,238.53 639.562,239.746 640.13,239.002 640.699,239.149 641.267,239.203 641.835,240.431 642.404,241.531 642.972,241.661 643.54,241.533 644.109,239.545 644.677,238.346 645.245,238.387 645.814,239.451 646.382,238.341 646.951,240.346 647.519,240.622 648.087,241.725 648.656,240.741 649.224,240.557 649.792,240.503 650.361,238.358 650.929,237.584 651.497,237.814 652.066,239.709 652.634,240.82 653.202,240.698 653.771,239.65 654.339,238.807 654.907,237.858 655.476,237.918 656.044,241.065 656.612,239.869 657.181,237.63 657.749,237.742 658.317,236.685 658.886,237.824 659.454,239.823 660.022,240.707 660.591,241.652 661.159,241.575 661.728,240.282 662.296,240.096 662.864,238.777 663.433,238.802 664.001,239.681 664.569,239.277 665.138,239.142 665.706,239.91 666.274,238.829 666.843,237.98 667.411,236.861 667.979,235.746 668.548,236.844 669.116,236.825 669.684,238.848 670.253,236.506 670.821,237.699 671.389,235.515 671.958,233.426 672.526,234.948 673.094,236.222 673.663,236.34 674.231,235.345 674.799,238.487 675.368,235.194 675.936,234.362 676.505,235.34 677.073,234.408 677.641,234.393 678.21,234.657 678.778,234.644 679.346,234.814 679.915,233.208 680.483,233.292 681.051,233.521 681.62,234.675 682.188,231.105 682.756,232.515 683.325,231.632 683.893,232.956 684.461,230.259 685.03,228.701 685.598,229.225 686.166,229.818 686.735,229.334 687.303,229.779 687.871,230.18 688.44,231.693 689.008,230.105 689.577,228.42 690.145,229.171 690.713,229.788 691.282,231.538 691.85,233.052 692.418,230.409 692.987,230.917 693.555,231.283 694.123,230.48 694.692,231.871 695.26,235.403 695.828,232.408 696.397,232.693 696.965,232.19 697.533,232.39 698.102,231.878 698.67,227.305 699.238,228.298 699.807,230.013 700.375,229.652 700.943,229.36 701.512,231.814 702.08,233.113 702.648,233.286 703.217,235.454 703.785,234.531 704.354,234.609 704.922,235.795 705.49,237.941 706.059,237.9 706.627,237.068 707.195,237.202 707.764,235.246 708.332,235.137 708.9,234.448 709.469,236.581 710.037,235.846 710.605,235.946 711.174,238.093 711.742,239.268 712.31,239.077 712.879,237.81 713.447,237.759 714.015,235.831 714.584,235.705 715.152,235.81 715.72,233.72 716.289,234.807 716.857,234.813 717.425,236.001 717.994,236.392 718.562,238.329 719.131,238.38 719.699,234.224 720.267,233.263 720.836,230.597 721.404,231.178 721.972,230.416 722.541,231.9 723.109,231.104 723.677,231.51 724.246,230.793 724.814,232.385 725.382,232.888 725.951,234.394 726.519,233.384 727.087,233.449 727.656,232.635 728.224,232.028 728.792,233.425 729.361,233.674 729.929,235.983 730.497,236.247 731.066,235.034 731.634,236.08 732.203,235.994 732.771,238.257 733.339,240.081 733.908,237.713 734.476,235.466 735.044,235.443 735.613,236.506 736.181,236.468 736.749,236.374 737.318,239.173 737.886,239.831 738.454,240.447 739.023,240.198 739.591,239.605 740.159,239.403 740.728,239.029 741.296,239.758 741.864,235.156 742.433,236.038 743.001,235.94 743.569,235.728 744.138,234.374 744.706,236.242 745.274,236.013 745.843,237.856 746.411,238.542 746.98,234.185 747.548,234.316 748.116,235.248 748.685,235.002 749.253,232.851 749.821,232.792 750.39,233.093 750.958,231.132 751.526,230.292 752.095,233.742 752.663,230.577 753.231,231.855 753.8,232.061 754.368,230.082 754.936,232.471 755.505,233.454 756.073,231.65 756.641,230.915 757.21,229.928 757.778,232.38 758.346,232.435 758.915,230.609 759.483,229.793 760.052,229.94 760.62,227.903 761.188,229.306 761.757,229.36 762.325,232.801 762.893,231.717 763.462,232.166 764.03,233.273 764.598,232.319 765.167,232.507 765.735,232.67 766.303,231.738 766.872,231.573 767.44,231.566 768.008,231.613 768.577,227.672 769.145,225.093 769.713,224.868 770.282,226.695 770.85,230.408 771.418,230.099 771.987,231.446 772.555,232.586 773.123,232.773 773.692,231.843 774.26,231.019 774.829,230.084 775.397,232.373 775.965,230.605 776.534,231.881 777.102,232.214 777.67,234.407 778.239,235.524 778.807,234.341 779.375,234.34 779.944,233.392 780.512,234.455 781.08,234.39 781.649,233.279 782.217,231.338 782.785,232.635 783.354,233.796 783.922,236.031 784.49,237.002 785.059,238.615 785.627,237.158 786.195,237.834 786.764,238.516 787.332,237.09 787.9,235.74 788.469,235.538 789.037,234.398 789.606,233.288 790.174,233.373 790.742,234.524 791.311,234.492 791.879,233.322 792.447,233.405 793.016,234.614 793.584,234.487 794.152,234.594 794.721,233.57 795.289,234.514 795.857,235.388 796.426,235.145 796.994,236.041 797.562,234.896 798.131,232.725 798.699,234.966 799.267,233.025 799.836,235.253 800.404,236.032 800.972,234.595 801.541,233.443 802.109,233.463 802.678,233.393 803.246,231.368 803.814,231.327 804.383,230.169 804.951,228.22 805.519,228.395 806.088,232.059 806.656,234.185 807.224,237.225 807.793,237.908 808.361,239.528 808.929,239.029 809.498,237.536 810.066,239.121 810.634,239.763 811.203,237.013 811.771,234.67 812.339,234.337 812.908,233.377 813.476,233.238 814.044,233.954 814.613,233.768 815.181,233.493 815.749,233.389 816.318,233.252 816.886,234.162 817.455,234.094 818.023,232.91 818.591,232.68 819.16,232.594 819.728,233.368 820.296,232.163 820.865,232.008 821.433,231.92 822.001,231.825 822.57,232.955 823.138,232.842 823.706,232.604 824.275,231.254 824.843,229.18 825.411,229.464 825.98,227.296 826.548,226.723 827.116,226.016 827.685,224.342 828.253,224.876 828.821,225.588 829.39,225.894 829.958,224.278 830.526,222.775 831.095,223.421 831.663,223.007 832.232,224.54 832.8,227.227 833.368,227.698 833.937,229.227 834.505,230.582 835.073,230.953 835.642,230.273 836.21,229.483 836.778,229.784 837.347,228.786 837.915,229.079 838.483,228.487 839.052,231.749 839.62,234.765 840.188,235.863 840.757,234.491 841.325,233.505 841.893,233.662 842.462,231.622 843.03,230.709 843.598,229.778 844.167,227.864 844.735,231.437 845.304,230.564 845.872,231.814 846.44,234.06 847.009,234.024 847.577,233.858 848.145,234.921 848.714,233.899 849.282,232.647 849.85,231.848 850.419,232.959 850.987,233.177 851.555,232.16 852.124,233.411 852.692,233.304 853.26,234.563 853.829,234.464 854.397,234.53 854.965,234.285 855.534,236.46 856.102,235.347 856.67,234.193 857.239,234.111 857.807,236.139 858.375,233.673 858.944,233.629 859.512,233.631 860.081,232.61 860.649,231.866 861.217,231.903 861.786,231.091 862.354,231.227 862.922,233.527 863.491,233.5 864.059,233.355 864.627,234.348 865.196,234.226 865.764,233.111 866.332,233.112 866.901,233.224 867.469,231.283 868.037,231.318 868.606,231.115 869.174,232.394 869.742,232.382 870.311,234.272 870.879,232.035 871.447,233.283 872.016,231.428 872.584,233.508 873.152,232.245 873.721,235.399 874.289,235.162 874.858,235.034 875.426,236.038 875.994,235.565 876.563,235.252 877.131,236.022 877.699,236.718 878.268,236.418 878.836,236.01 879.404,235.798 879.973,234.53 880.541,235.464 881.109,235.318 881.678,235.14 882.246,236.969 882.814,235.662 883.383,234.387 883.951,235.172 884.519,234.88 885.088,236.557 885.656,234.929 886.224,236.524 886.793,236.163 887.361,234.791 887.93,233.487 888.498,235.52 889.066,235.057 889.635,234.673 890.203,233.181 890.771,231.039 891.34,229.798 891.908,229.647 892.476,228.906 893.045,229.173 893.613,229.258 894.181,230.471 894.75,231.723 895.318,230.68 895.886,230.698 896.455,228.77 897.023,228.71 897.591,228.833 898.16,230.91 898.728,230.708 899.296,228.778 899.865,226.754 900.433,227.83 901.001,225.979 901.57,226.427 902.138,227.885 902.707,231.285 903.275,232.534 903.843,232.602 904.412,232.233 904.98,231.357 905.548,232.464 906.117,229.138 906.685,230.388 907.253,229.607 907.822,229.813 908.39,230.882 908.958,229.955 909.527,229.205 910.095,231.574 910.663,232.528 911.232,232.317 911.8,232.293 912.368,233.265 912.937,232.303 913.505,231.002 914.073,232.063 914.642,231.064 915.21,231.036 915.779,231.221 916.347,228.16 916.915,227.283 917.484,226.534 918.052,229.989 918.62,228.215 919.189,228.436 919.757,228.858 920.325,230.284 920.894,230.462 921.462,231.737 922.03,230.589 922.599,229.597 923.167,230.566 923.735,229.632 924.304,228.689 924.872,230.206 925.44,230.252 926.009,227.345 926.577,226.601 927.145,227.936 927.714,229.189 928.282,228.393 928.85,227.509 929.419,229.042 929.987,230.402 930.556,232.812 931.124,231.682 931.692,232.038 932.261,231.487 932.829,230.567 933.397,228.727 933.966,229.117 934.534,229.326 935.102,229.795 935.671,226.853 936.239,228.266 936.807,228.619 937.376,229.926 937.944,229 938.512,229.251 939.081,229.245 939.649,228.535 940.217,228.94 940.786,229.105 941.354,228.187 941.922,229.775 942.491,231.939 943.059,233.056 943.627,233.115 944.196,234.011 944.764,237.454 945.333,237.254 945.901,237.658 946.469,238.405 947.038,238.1 947.606,235.75 948.174,235.55 948.743,235.153 949.311,235.68 949.879,236.265 950.448,236.079 951.016,235.961 951.584,234.609 952.153,238.584 952.721,236.93 953.289,236.771 953.858,236.505 954.426,236.971 954.994,236.627 955.563,235.325 956.131,235.09 956.699,235.081 957.268,236.154 957.836,236.919 958.405,237.519 958.973,236.806 959.541,237.489 960.11,235.847 960.678,234.298 961.246,234.008 961.815,233.868 962.383,235.623 962.951,236.546 963.52,238.063 964.088,238.701 964.656,238.172 965.225,238.572 965.793,236.962 966.361,237.526 966.93,236.002 967.498,237.605 968.066,235.918 968.635,236.419 969.203,234.979 969.771,232.73 970.34,231.463 970.908,232.329 971.476,232.213 972.045,230.128 972.613,229.089 973.182,229.012 973.75,229.274 974.318,230.24 974.887,231.008 975.455,232.007 976.023,230.974 976.592,230.655 977.16,231.013 977.728,230.882 978.297,230.72 978.865,230.695 979.433,228.592 980.002,228.704 980.57,228.725 981.138,228.651 981.707,227.725 982.275,225.902 982.843,227.131 983.412,226.558 983.98,228.83 984.548,227.912 985.117,229.195 985.685,232.297 986.253,233.318 986.822,233.273 987.39,231.082 987.959,233.21 988.527,232.847 989.095,233.569 989.664,235.297 990.232,237.068 990.8,237.537 991.369,235.884 991.937,234.566 992.505,235.032 993.074,234.561 993.642,233.081 994.21,234.797 994.779,234.26 995.347,231.945 995.915,231.724 996.484,232.326 997.052,231.023 997.62,230.935 998.189,230.758 998.757,228.522 999.325,226.578 999.894,226.758 1000.46,225.743 1001.03,227.258 1001.6,228.446 1002.17,227.587 1002.74,225.781 1003.3,227.337 1003.87,228.555 1004.44,227.643 1005.01,225.929 1005.58,226.37 1006.15,225.508 1006.71,223.693 1007.28,227.265 1007.85,227.339 1008.42,228.79 1008.99,228.927 1009.56,231.412 1010.12,229.436 1010.69,228.494 1011.26,228.546 1011.83,228.658 1012.4,228.731 1012.97,227.737 1013.53,227.066 1014.1,227.452 1014.67,227.781 1015.24,227.968 1015.81,226.942 1016.38,225.477 1016.94,228.806 1017.51,228.158 1018.08,229.41 1018.65,228.57 1019.22,229.84 1019.79,232.128 1020.35,233.245 1020.92,233.094 1021.49,235.118 1022.06,234.869 1022.63,233.669 1023.2,234.495 1023.76,233.216 1024.33,232.163 1024.9,228.994 1025.47,230.082 1026.04,229.365 1026.61,230.646 1027.17,230.788 1027.74,230.71 1028.31,230.787 1028.88,228.719 1029.45,230.042 1030.02,228.053 1030.58,230.234 1031.15,231.421 1031.72,232.644 1032.29,233.921 1032.86,232.749 1033.43,232.806 1033.99,232.745 1034.56,232.018 1035.13,233.292 1035.7,235.238 1036.27,234.054 1036.84,231.747 1037.4,234.857 1037.97,234.613 1038.54,235.358 1039.11,235.995 1039.68,235.574 1040.25,234.469 1040.81,234.215 1041.38,234.189 1041.95,230.759 1042.52,227.627 1043.09,227.809 1043.66,227.115 1044.22,228.446 1044.79,228.603 1045.36,228.96 1045.93,226.924 1046.5,228.244 1047.07,228.574 1047.63,228.964 1048.2,226.007 1048.77,225.36 1049.34,222.652 1049.91,223.276 1050.48,223.065 1051.05,222.693 1051.61,224.656 1052.18,227.52 1052.75,229.003 1053.32,229.285 1053.89,231.755 1054.46,231.923 1055.02,232.72 1055.59,236.038 1056.16,236.031 1056.73,236.91 1057.3,235.703 1057.87,236.627 1058.43,235.435 1059,235.017 1059.57,236.95 1060.14,235.624 1060.71,235.245 1061.28,232.711 1061.84,231.68 1062.41,232.623 1062.98,232.524 1063.55,233.544 1064.12,236.183 1064.69,234.754 1065.25,232.489 1065.82,233.533 1066.39,233.513 1066.96,233.291 1067.53,231.95 1068.1,230.905 1068.66,231.95 1069.23,230.994 1069.8,232.285 1070.37,232.37 1070.94,232.513 1071.51,233.282 1072.07,235.346 1072.64,235.01 1073.21,238.056 1073.78,237.575 1074.35,234.108 1074.92,233.906 1075.48,232.842 1076.05,232.553 1076.62,233.416 1077.19,232.268 1077.76,233.198 1078.33,232.892 1078.89,230.448 1079.46,231.691 1080.03,230.712 1080.6,231.647 1081.17,230.404 1081.74,228.506 1082.3,228.741 1082.87,228.855 1083.44,232.273 1084.01,231.48 1084.58,230.561 1085.15,232.624 1085.71,231.693 1086.28,229.608 1086.85,228.999 1087.42,230.226 1087.99,229.41 1088.56,231.567 1089.12,229.516 1089.69,228.643 1090.26,229.771 1090.83,229.905 1091.4,230.285 1091.97,230.391 1092.53,230.351 1093.1,227.442 1093.67,225.609 1094.24,230.181 1094.81,230.711 1095.38,234.967 1095.94,234.849 1096.51,233.485 1097.08,235.292 1097.65,233.055 1098.22,233.133 1098.79,232.779 1099.35,233.543 1099.92,231.515 1100.49,229.562 1101.06,229.661 1101.63,231.59 1102.2,230.609 1102.76,229.412 1103.33,228.662 1103.9,229.958 1104.47,230.07 1105.04,230.322 1105.61,231.619 1106.17,231.625 1106.74,232.405 1107.31,232.38 1107.88,231.314 1108.45,233.33 1109.02,235.127 1109.58,235.82 1110.15,230.424 1110.72,230.415 1111.29,227.227 1111.86,228.44 1112.43,229.669 1112.99,229.899 1113.56,229.835 1114.13,229.248 1114.7,228.31 1115.27,227.397 1115.84,227.837 1116.4,229.079 1116.97,227.104 1117.54,227.193 1118.11,227.633 1118.68,226.846 1119.25,227.131 1119.81,228.839 1120.38,228.022 1120.95,227.094 1121.52,225.4 1122.09,223.666 1122.66,222.252 1123.23,225.064 1123.79,227.801 1124.36,230.3 1124.93,232.615 1125.5,233.601 1126.07,234.457 1126.64,235.389 1127.2,236.02 1127.77,234.729 1128.34,236.704 1128.91,237.419 1129.48,236.914 1130.05,237.596 1130.61,237.194 1131.18,236.604 1131.75,236.37 1132.32,237.341 1132.89,236.875 1133.46,237.535 1134.02,236.845 1134.59,237.516 1135.16,239.155 1135.73,238.784 1136.3,239.274 1136.87,235.631 1137.43,234.196 1138,232.899 1138.57,231.648 1139.14,231.671 1139.71,232.488 1140.28,231.235 1140.84,231.168 1141.41,231.191 1141.98,231.173 1142.55,234.406 1143.12,230.931 1143.69,231.766 1144.25,229.581 1144.82,227.661 1145.39,227.99 1145.96,227.089 1146.53,229.339 1147.1,227.561 1147.66,229.939 1148.23,230.003 1148.8,228.994 1149.37,228.343 1149.94,229.546 1150.51,229.758 1151.07,228.721 1151.64,225.831 1152.21,228.197 1152.78,230.579 1153.35,230.822 1153.92,230.968 1154.48,232.019 1155.05,231.017 1155.62,231.128 1156.19,232.108 1156.76,230.812 1157.33,229.739 1157.89,233.023 1158.46,232.699 1159.03,232.69 1159.6,231.435 1160.17,232.508 1160.74,231.528 1161.3,230.437 1161.87,229.532 1162.44,230.704 1163.01,230.856 1163.58,232.038 1164.15,231.074 1164.71,232.103 1165.28,233.272 1165.85,233.157 1166.42,234.029 1166.99,232.89 1167.56,231.805 1168.12,232.691 1168.69,234.652 1169.26,234.322 1169.83,234.242 1170.4,233.832 1170.97,235.549 1171.53,234.122 1172.1,234.74 1172.67,234.671 1173.24,233.468 1173.81,233.269 1174.38,233.312 1174.94,234.17 1175.51,233.992 1176.08,232.701 1176.65,230.382 1177.22,230.219 1177.79,230.465 1178.35,229.537 1178.92,229.529 1179.49,229.72 1180.06,231.008 1180.63,232.998 1181.2,230.667 1181.76,230.683 1182.33,230.512 1182.9,231.511 1183.47,234.62 1184.04,235.438 1184.61,232.263 1185.17,229.064 1185.74,228.351 1186.31,227.46 1186.88,228.654 1187.45,230.674 1188.02,228.652 1188.58,228.81 1189.15,230.019 1189.72,232.241 1190.29,232.096 1190.86,232.131 1191.43,234.085 1192,233.763 1192.56,232.476 1193.13,232.513 1193.7,232.328 1194.27,230.101 1194.84,230.135 1195.41,229.194 1195.97,231.307 1196.54,233.189 1197.11,233.119 1197.68,231.915 1198.25,229.592 1198.82,228.445 1199.38,228.648 1199.95,227.849 1200.52,230.277 1201.09,232.25 1201.66,235.196 1202.23,235.867 1202.79,233.633 1203.36,233.383 1203.93,233.109 1204.5,231.847 1205.07,232.772 1205.64,231.705 1206.2,231.669 1206.77,235.533 1207.34,234.98 1207.91,233.642 1208.48,232.438 1209.05,231.123 1209.61,232.188 1210.18,233.248 1210.75,231.87 1211.32,231.725 1211.89,232.812 1212.46,233.682 1213.02,233.259 1213.59,234.042 1214.16,233.878 1214.73,234.622 1215.3,232.332 1215.87,234.147 1216.43,236.036 1217,236.542 1217.57,236.014 1218.14,235.453 1218.71,233.922 1219.28,232.614 1219.84,233.508 1220.41,232.323 1220.98,232.412 1221.55,233.163 1222.12,229.83 1222.69,230.783 1223.25,229.474 1223.82,228.281 1224.39,227.384 1224.96,227.744 1225.53,226.853 1226.1,226.895 1226.66,224.079 1227.23,225.55 1227.8,224.908 1228.37,228.534 1228.94,226.433 1229.51,226.867 1230.07,225.209 1230.64,224.6 1231.21,222.892 1231.78,223.417 1232.35,224.054 1232.92,224.562 1233.48,223.971 1234.05,224.53 1234.62,225.155 1235.19,226.691 1235.76,225.074 1236.33,224.558 1236.89,225.884 1237.46,226.241 1238.03,225.753 1238.6,223.924 1239.17,226.488 1239.74,228.077 1240.3,228.499 1240.87,229.047 1241.44,230.282 1242.01,230.452 1242.58,231.65 1243.15,230.787 1243.71,230.782 1244.28,231.706 1244.85,227.671 1245.42,227.728 1245.99,229.266 1246.56,224.351 1247.12,224.653 1247.69,222.246 1248.26,222.115 1248.83,222.866 1249.4,226.775 1249.97,226.229 1250.53,227.679 1251.1,228.323 1251.67,227.515 1252.24,232.272 1252.81,230.417 1253.38,229.655 1253.94,232.074 1254.51,233.271 1255.08,233.231 1255.65,231.638 1256.22,233.956 1256.79,232.926 1257.35,228.97 1257.92,228.201 1258.49,228.482 1259.06,229.799 1259.63,231.171 1260.2,232.431 1260.76,232.348 1261.33,232.364 1261.9,231.359 1262.47,232.755 1263.04,232.821 1263.61,235.926 1264.18,235.949 1264.74,235.684 1265.31,234.875 1265.88,231.592 1266.45,233.729 1267.02,233.913 1267.59,231.011 1268.15,234.146 1268.72,236.172 1269.29,238.159 1269.86,237.907 1270.43,234.445 1271,235.552 1271.56,237.263 1272.13,235.975 1272.7,236.956 1273.27,236.858 1273.84,236.391 1274.41,236.108 1274.97,237.034 1275.54,236.641 1276.11,237.374 1276.68,234.912 1277.25,233.772 1277.82,234.557 1278.38,234.456 1278.95,232.198 1279.52,233.114 1280.09,233.264 1280.66,234.074 1281.23,231.785 1281.79,232.778 1282.36,231.668 1282.93,231.68 1283.5,231.455 1284.07,231.473 1284.64,232.572 1285.2,232.403 1285.77,233.459 1286.34,233.283 1286.91,233.137 1287.48,233.143 1288.05,233.86 1288.61,233.67 1289.18,232.416 1289.75,234.399 1290.32,236.187 1290.89,235.726 1291.46,236.296 1292.02,236.107 1292.59,235.675 1293.16,233.332 1293.73,232.02 1294.3,230.929 1294.87,232.009 1295.43,231.903 1296,232.946 1296.57,234.71 1297.14,233.534 1297.71,232.221 1298.28,231.004 1298.84,230.901 1299.41,230.954 1299.98,229.803 1300.55,227.924 1301.12,229.165 1301.69,230.21 1302.25,230.307 1302.82,230.341 1303.39,228.463 1303.96,228.971 1304.53,232.023 1305.1,232.007 1305.66,232.006 1306.23,232.936 1306.8,232.853 1307.37,232.674 1307.94,232.596 1308.51,234.336 1309.07,232.971 1309.64,232.054 1310.21,232.076 1310.78,231.951 1311.35,234.823 1311.92,234.6 1312.48,235.381 1313.05,235.116 1313.62,237.992 1314.19,239.639 1314.76,236.003 1315.33,233.806 1315.89,234.468 1316.46,235.19 1317.03,232.851 1317.6,232.8 1318.17,233.861 1318.74,234.651 1319.3,235.429 1319.87,232.279 1320.44,231.241 1321.01,231.254 1321.58,231.001 1322.15,231.057 1322.71,229.858 1323.28,228.807 1323.85,229.903 1324.42,229.925 1324.99,230.83 1325.56,230.763 1326.12,229.817 1326.69,228.972 1327.26,229.983 1327.83,230.892 1328.4,230.78 1328.97,231.872 1329.53,230.819 1330.1,232.976 1330.67,233.858 1331.24,233.469 1331.81,233.352 1332.38,234.091 1332.94,236.765 1333.51,235.373 1334.08,234.09 1334.65,233.046 1335.22,234.924 1335.79,234.558 1336.36,233.318 1336.92,234.038 1337.49,233.505 1338.06,232.308 1338.63,231.333 1339.2,233.363 1339.77,235.108 1340.33,236.727 1340.9,236.256 1341.47,234.519 1342.04,233.033 1342.61,229.659 1343.18,229.475 1343.74,231.559 1344.31,231.343 1344.88,230.492 1345.45,231.425 1346.02,231.556 1346.59,231.245 1347.15,229.08 1347.72,228.976 1348.29,228.909 1348.86,226.815 1349.43,226.719 1350,226.874 1350.56,228.927 1351.13,227.895 1351.7,227.924 1352.27,227.117 1352.84,228.47 1353.41,229.646 1353.97,229.421 1354.54,231.603 1355.11,229.422 1355.68,228.533 1356.25,223.479 1356.82,225 1357.38,225.512 1357.95,229.244 1358.52,230.459 1359.09,231.611 1359.66,227.582 1360.23,228.785 1360.79,227.737 1361.36,227.906 1361.93,228.157 1362.5,229.374 1363.07,228.562 1363.64,228.757 1364.2,229.045 1364.77,231.368 1365.34,233.348 1365.91,233.231 1366.48,235.142 1367.05,232.626 1367.61,231.36 1368.18,232.314 1368.75,232.025 1369.32,231.812 1369.89,234.715 1370.46,234.253 1371.02,234.158 1371.59,235.946 1372.16,234.531 1372.73,232.092 1373.3,229.692 1373.87,229.483 1374.43,230.563 1375,232.528 1375.57,232.235 1376.14,230.824 1376.71,231.771 1377.28,231.896 1377.84,230.709 1378.41,230.742 1378.98,230.939 1379.55,231.966 1380.12,230.782 1380.69,230.733 1381.25,228.679 1381.82,226.603 1382.39,225.973 1382.96,226.22 1383.53,225.622 1384.1,226.053 1384.66,224.266 1385.23,224.569 1385.8,224.911 1386.37,225.524 1386.94,226.803 1387.51,227.1 1388.07,228.423 1388.64,226.584 1389.21,226.906 1389.78,228.309 1390.35,229.469 1390.92,229.697 1391.48,229.936 1392.05,227.249 1392.62,227.607 1393.19,226.927 1393.76,226.41 1394.33,227.657 1394.89,229.86 1395.46,230.092 1396.03,232.337 1396.6,232.606 1397.17,232.516 1397.74,231.356 1398.3,231.529 1398.87,232.592 1399.44,232.502 1400.01,233.445 1400.58,234.319 1401.15,234.11 1401.71,232.852 1402.28,230.628 1402.85,229.727 1403.42,227.799 1403.99,226.973 1404.56,227.455 1405.13,227.922 1405.69,228.294 1406.26,228.465 1406.83,228.768 1407.4,230.129 1407.97,231.416 1408.54,231.495 1409.1,231.516 1409.67,231.496 1410.24,231.499 1410.81,229.69 1411.38,228.996 1411.95,230.45 1412.51,230.517 1413.08,228.591 1413.65,229.968 1414.22,232.062 1414.79,231.903 1415.36,230.876 1415.92,232.041 1416.49,232.213 1417.06,232.295 1417.63,232.36 1418.2,230.467 1418.77,228.768 1419.33,232.247 1419.9,232.258 1420.47,233.179 1421.04,230.89 1421.61,230.119 1422.18,231.258 1422.74,231.095 1423.31,233.234 1423.88,233.12 1424.45,234.084 1425.02,233.963 1425.59,233.942 1426.15,232.708 1426.72,231.607 1427.29,231.668 1427.86,231.518 1428.43,231.576 1429,233.788 1429.56,232.444 1430.13,230.278 1430.7,230.427 1431.27,231.523 1431.84,230.642 1432.41,229.673 1432.97,229.984 1433.54,229.294 1434.11,231.651 1434.68,231.692 1435.25,231.678 1435.82,233.825 1436.38,232.671 1436.95,230.66 1437.52,229.829 1438.09,230.982 1438.66,229.124 1439.23,229.457 1439.79,228.581 1440.36,231.859 1440.93,232.673 1441.5,229.543 1442.07,229.917 1442.64,230.17 1443.2,229.436 1443.77,227.84 1444.34,227.292 1444.91,227.75 1445.48,226.841 1446.05,228.423 1446.61,227.712 1447.18,227.171 1447.75,228.615 1448.32,226.965 1448.89,226.5 1449.46,225.853 1450.02,228.573 1450.59,229.103 1451.16,229.453 1451.73,229.931 1452.3,229.929 1452.87,230.123 1453.43,230.46 1454,229.695 1454.57,232.086 1455.14,235.049 1455.71,238.03 1456.28,236.731 1456.84,238.388 1457.41,235.039 1457.98,236.901 1458.55,236.726 1459.12,237.494 1459.69,239.188 1460.25,240.916 1460.82,239.175 1461.39,238.686 1461.96,239.36 1462.53,237.734 1463.1,237.359 1463.66,236.856 1464.23,237.768 1464.8,239.314 1465.37,239.862 1465.94,239.284 1466.51,237.62 1467.07,234.979 1467.64,234.632 1468.21,233.253 1468.78,231.186 1469.35,233.265 1469.92,234.171 1470.48,233.887 1471.05,232.731 1471.62,233.578 1472.19,232.22 1472.76,231.189 1473.33,231.106 1473.89,232.152 1474.46,236.135 1475.03,234.294 1475.6,234.887 1476.17,233.731 1476.74,233.433 1477.31,234.079 1477.87,232.968 1478.44,234.709 1479.01,235.513 1479.58,231.045 1480.15,227.781 1480.72,227.909 1481.28,227.044 1481.85,229.312 1482.42,227.617 1482.99,226.695 1483.56,224.011 1484.13,225.549 1484.69,226.865 1485.26,227.14 1485.83,228.507 1486.4,227.926 1486.97,226.182 1487.54,227.266 1488.1,224.398 1488.67,220.824 1489.24,221.709 1489.81,223.445 1490.38,225.056 1490.95,224.513 1491.51,223.165 1492.08,224.829 1492.65,225.406 1493.22,227.092 1493.79,229.635 1494.36,229.753 1494.92,229.835 1495.49,228.184 1496.06,228.562 1496.63,229.798 1497.2,230.887 1497.77,230.99 1498.33,231.114 1498.9,232.421 1499.47,234.478 1500.04,236.306 1500.61,237.022 1501.18,236.766 1501.74,237.312 1502.31,238.848 1502.88,239.479 1503.45,239.014 1504.02,236.649 1504.59,235.299 1505.15,234.829 1505.72,234.662 1506.29,234.432 1506.86,233.059 1507.43,231.596 1508,232.458 1508.56,231.467 1509.13,230.456 1509.7,230.282 1510.27,228.469 1510.84,227.677 1511.41,229.942 1511.97,229.139 1512.54,231.522 1513.11,230.809 1513.68,232.903 1514.25,231.581 1514.82,234.446 1515.38,236.231 1515.95,236.007 1516.52,232.654 1517.09,230.503 1517.66,230.478 1518.23,231.577 1518.79,234.613 1519.36,233.363 1519.93,231.263 1520.5,232.364 1521.07,232.054 1521.64,231.878 1522.2,231.693 1522.77,232.579 1523.34,231.462 1523.91,233.419 1524.48,232.276 1525.05,232.034 1525.61,232.12 1526.18,230.781 1526.75,230.843 1527.32,230.953 1527.89,230.988 1528.46,232.17 1529.02,231.081 1529.59,230.046 1530.16,232.27 1530.73,233.242 1531.3,233.198 1531.87,235.434 1532.43,236.172 1533,232.839 1533.57,232.57 1534.14,232.322 1534.71,232.066 1535.28,232.031 1535.84,231.3 1536.41,233.231 1536.98,232.91 1537.55,232.855 1538.12,231.599 1538.69,233.524 1539.25,232.405 1539.82,231.211 1540.39,229.079 1540.96,228.371 1541.53,229.359 1542.1,231.574 1542.66,230.539 1543.23,229.618 1543.8,227.569 1544.37,228.679 1544.94,230.049 1545.51,229.005 1546.08,228.153 1546.64,229.46 1547.21,229.639 1547.78,228.693 1548.35,228.899 1548.92,228.946 1549.49,230.086 1550.05,228.999 1550.62,229.193 1551.19,230.266 1551.76,230.372 1552.33,228.6 1552.9,226.444 1553.46,228.868 1554.03,231.132 1554.6,235.413 1555.17,236.204 1555.74,237.913 1556.31,235.478 1556.87,235.068 1557.44,234.561 1558.01,234.592 1558.58,234.2 1559.15,234.059 1559.72,233.006 1560.28,233.177 1560.85,235.042 1561.42,233.676 1561.99,232.539 1562.56,234.588 1563.13,234.213 1563.69,233.888 1564.26,230.478 1564.83,231.539 1565.4,232.527 1565.97,231.201 1566.54,228.931 1567.1,231.314 1567.67,229.541 1568.24,232.515 1568.81,232.415 1569.38,232.236 1569.95,231.2 1570.51,231.221 1571.08,231.234 1571.65,231.277 1572.22,230.143 1572.79,231.085 1573.36,227.836 1573.92,229.251 1574.49,230.282 1575.06,227.177 1575.63,228.421 1576.2,227.753 1576.77,226.981 1577.33,228.508 1577.9,229.741 1578.47,228.796 1579.04,228.726 1579.61,228.044 1580.18,224.874 1580.74,225.23 1581.31,226.653 1581.88,228 1582.45,228.005 1583.02,228.567 1583.59,228.757 1584.15,229.04 1584.72,230.242 1585.29,230.292 1585.86,231.214 1586.43,229.302 1587,229.636 1587.56,232.664 1588.13,233.645 1588.7,233.395 1589.27,233.558 1589.84,232.417 1590.41,232.601 1590.97,236.626 1591.54,237.195 1592.11,236.872 1592.68,237.774 1593.25,239.38 1593.82,238.747 1594.38,238.132 1594.95,238.644 1595.52,237.901 1596.09,236.263 1596.66,235.78 1597.23,237.281 1597.79,236.682 1598.36,233.098 1598.93,233.957 1599.5,233.594 1600.07,234.34 1600.64,237.138 1601.2,236.391 1601.77,235.931 1602.34,236.379 1602.91,236.064 1603.48,233.573 1604.05,234.619 1604.61,233.258 1605.18,235.134 1605.75,237.934 1606.32,237.34 1606.89,236.717 1607.46,238.284 1608.02,237.553 1608.59,238.926 1609.16,239.574 1609.73,238.748 1610.3,239.058 1610.87,238.458 1611.43,237.958 1612,238.373 1612.57,236.488 1613.14,237.054 1613.71,234.086 1614.28,233.552 1614.84,234.222 1615.41,231.883 1615.98,230.743 1616.55,230.504 1617.12,230.338 1617.69,228.135 1618.26,226.013 1618.82,227.186 1619.39,229.327 1619.96,228.13 1620.53,224.801 1621.1,225.061 1621.67,224.163 1622.23,223.677 1622.8,223.708 1623.37,222.959 1623.94,224.447 1624.51,223.905 1625.08,225.576 1625.64,223.624 1626.21,224.176 1626.78,225.401 1627.35,226.667 1627.92,227.15 1628.49,226.377 1629.05,230.926 1629.62,230.892 1630.19,232.01 1630.76,232.821 1631.33,232.957 1631.9,230.727 1632.46,229.523 1633.03,229.794 1633.6,229.879 1634.17,231.764 1634.74,231.714 1635.31,233.729 1635.87,233.404 1636.44,234.301 1637.01,232.126 1637.58,231.856 1638.15,231.471 1638.72,231.33 1639.28,231.074 1639.85,233.044 1640.42,232.51 1640.99,234.222 1641.56,231.928 1642.13,231.715 1642.69,230.626 1643.26,231.376 1643.83,231.352 1644.4,230.198 1644.97,231.027 1645.54,229.923 1646.1,230.943 1646.67,228.917 1647.24,227.963 1647.81,228.105 1648.38,226.202 1648.95,226.51 1649.51,227.887 1650.08,228.099 1650.65,228.117 1651.22,227.302 1651.79,227.624 1652.36,224.898 1652.92,224.23 1653.49,224.613 1654.06,224.98 1654.63,225.43 1655.2,225.932 1655.77,227.327 1656.33,227.464 1656.9,226.922 1657.47,227.294 1658.04,226.505 1658.61,225.691 1659.18,227.091 1659.74,227.399 1660.31,227.704 1660.88,225.981 1661.45,227.41 1662.02,227.829 1662.59,227.078 1663.15,228.418 1663.72,227.657 1664.29,228.082 1664.86,228.378 1665.43,227.633 1666,230.91 1666.56,229.913 1667.13,229.95 1667.7,230.736 1668.27,228.921 1668.84,231.065 1669.41,229.903 1669.97,228.955 1670.54,228.188 1671.11,228.441 1671.68,226.696 1672.25,226.144 1672.82,226.664 1673.38,228.186 1673.95,227.675 1674.52,228.31 1675.09,228.561 1675.66,228.131 1676.23,228.376 1676.79,226.608 1677.36,226.295 1677.93,225.794 1678.5,225.375 1679.07,227.095 1679.64,227.732 1680.2,228.152 1680.77,228.681 1681.34,229.234 1681.91,228.65 1682.48,228.813 1683.05,226.976 1683.61,229.704 1684.18,229.9 1684.75,231.241 1685.32,230.549 1685.89,229.979 1686.46,228.429 1687.02,232.124 1687.59,232.327 1688.16,232.304 1688.73,231.592 1689.3,231.888 1689.87,233.184 1690.44,235.113 1691,234.915 1691.57,233.842 1692.14,237.73 1692.71,236.319 1693.28,239.027 1693.85,238.673 1694.41,236.15 1694.98,236.94 1695.55,232.377 1696.12,233.568 1696.69,233.776 1697.26,230.651 1697.82,231.769 1698.39,231.825 1698.96,230.654 1699.53,230.804 1700.1,233.013 1700.67,235.964 1701.23,234.86 1701.8,237.85 1702.37,238.754 1702.94,237.294 1703.51,240.272 1704.08,240.673 1704.64,239.976 1705.21,237.531 1705.78,236.022 1706.35,238.049 1706.92,238.646 1707.49,238.31 1708.05,236.89 1708.62,235.645 1709.19,236.394 1709.76,233.845 1710.33,232.635 1710.9,231.517 1711.46,232.61 1712.03,233.605 1712.6,231.537 1713.17,233.827 1713.74,235.902 1714.31,235.407 1714.87,236.205 1715.44,236.934 1716.01,237.451 1716.58,234.953 1717.15,232.669 1717.72,233.297 1718.28,231.142 1718.85,230.873 1719.42,228.851 1719.99,225.053 1720.56,222.393 1721.13,222.087 1721.69,220.614 1722.26,221.312 1722.83,219.895 1723.4,221.872 1723.97,223.745 1724.54,225.399 1725.1,226.681 1725.67,227.248 1726.24,229.64 1726.81,229.903 1727.38,229.138 1727.95,230.369 1728.51,233.574 1729.08,232.248 1729.65,233.196 1730.22,233.261 1730.79,235.372 1731.36,237.026 1731.92,236.603 1732.49,236.349 1733.06,237.219 1733.63,235.494 1734.2,237.137 1734.77,232.574 1735.33,231.346 1735.9,230.322 1736.47,231.193 1737.04,234.09 1737.61,235.068 1738.18,233.807 1738.74,232.575 1739.31,234.695 1739.88,234.362 1740.45,236.209 1741.02,235.869 1741.59,235.399 1742.15,234.047 1742.72,233.932 1743.29,232.849 1743.86,229.67 1744.43,229.907 1745,229.922 1745.56,233.011 1746.13,232.82 1746.7,231.616 1747.27,232.878 1747.84,234.76 1748.41,233.224 1748.97,233.063 1749.54,232.834 1750.11,231.533 1750.68,231.359 1751.25,233.425 1751.82,234.029 1752.38,232.655 1752.95,235.527 1753.52,234.082 1754.09,231.72 1754.66,229.858 1755.23,228.923 1755.79,228.9 1756.36,229.173 1756.93,229.173 1757.5,228.179 1758.07,230.536 1758.64,231.41 1759.21,231.601 1759.77,231.412 1760.34,231.238 1760.91,227.93 1761.48,227.333 1762.05,225.444 1762.62,224.975 1763.18,225.428 1763.75,227.891 1764.32,229.132 1764.89,231.456 1765.46,234.261 1766.03,234.151 1766.59,233.974 1767.16,231.589 1767.73,233.629 1768.3,234.52 1768.87,234.968 1769.44,233.589 1770,232.965 1770.57,231.858 1771.14,231.942 1771.71,228.709 1772.28,229.064 1772.85,231.012 1773.41,229.058 1773.98,228.267 1774.55,231.612 1775.12,230.68 1775.69,228.867 1776.26,230.18 1776.82,229.211 1777.39,229.451 1777.96,228.658 1778.53,228.635 1779.1,228.74 1779.67,229.957 1780.23,229.17 1780.8,230.369 1781.37,230.439 1781.94,231.333 1782.51,231.256 1783.08,231.04 1783.64,232.192 1784.21,232.309 1784.78,233.357 1785.35,234.289 1785.92,234.018 1786.49,232.783 1787.05,233.795 1787.62,233.642 1788.19,233.931 1788.76,233.76 1789.33,232.369 1789.9,235.605 1790.46,235.239 1791.03,233.998 1791.6,233.063 1792.17,234.92 1792.74,233.58 1793.31,233.578 1793.87,233.479 1794.44,235.476 1795.01,236.035 1795.58,235.724 1796.15,236.248 1796.72,236.752 1797.28,235.173 1797.85,233.903 1798.42,234.615 1798.99,233.267 1799.56,233.207 1800.13,232.913 1800.69,233.713 1801.26,233.714 1801.83,235.652 1802.4,233.194 1802.97,232.035 1803.54,229.906 1804.1,231.05 1804.67,230.881 1805.24,230.823 1805.81,230.658 1806.38,229.684 1806.95,231.653 1807.51,230.413 1808.08,232.188 1808.65,233.291 1809.22,234.081 1809.79,233.754 1810.36,233.57 1810.92,233.326 1811.49,234.271 1812.06,234.757 1812.63,234.348 1813.2,231.866 1813.77,230.661 1814.33,231.733 1814.9,229.408 1815.47,229.417 1816.04,229.409 1816.61,230.232 1817.18,230.116 1817.74,229.39 1818.31,228.205 1818.88,228.151 1819.45,227.289 1820.02,224.397 1820.59,226.926 1821.15,226.928 1821.72,228.214 1822.29,229.462 1822.86,227.547 1823.43,227.665 1824,228.845 1824.56,225.999 1825.13,225.354 1825.7,225.708 1826.27,225.317 1826.84,227.761 1827.41,228.842 1827.97,229.026 1828.54,229.175 1829.11,228.27 1829.68,229.41 1830.25,229.475 1830.82,230.804 1831.39,228.803 1831.95,230.874 1832.52,228.808 1833.09,231.11 1833.66,232.309 1834.23,231.474 1834.8,231.432 1835.36,228.417 1835.93,228.403 1836.5,228.75 1837.07,228.897 1837.64,227.971 1838.21,230.375 1838.77,228.34 1839.34,226.482 1839.91,226.863 1840.48,228.227 1841.05,226.711 1841.62,225.886 1842.18,226.354 1842.75,226.374 1843.32,223.799 1843.89,224.32 1844.46,225.696 1845.03,225.105 1845.59,225.363 1846.16,226.021 1846.73,226.295 1847.3,226.725 1847.87,226.192 1848.44,224.673 1849,224.321 1849.57,224.975 1850.14,225.617 1850.71,224.136 1851.28,225.821 1851.85,227.468 1852.41,225.825 1852.98,225.416 1853.55,228.11 1854.12,230.474 1854.69,230.782 1855.26,234.164 1855.82,232.128 1856.39,232.333 1856.96,232.506 1857.53,233.505 1858.1,234.387 1858.67,235.363 1859.23,238.365 1859.8,241.053 1860.37,240.663 1860.94,240.201 1861.51,240.723 1862.08,242.194 1862.64,241.55 1863.21,239.856 1863.78,239.168 1864.35,237.587 1864.92,236.156 1865.49,234.651 1866.05,235.699 1866.62,236.5 1867.19,235.259 1867.76,231.812 1868.33,233.807 1868.9,232.717 1869.46,231.613 1870.03,232.576 1870.6,231.524 1871.17,231.45 1871.74,232.708 1872.31,231.571 1872.87,231.238 1873.44,232.257 1874.01,233.261 1874.58,233.15 1875.15,234.962 1875.72,233.623 1876.28,230.405 1876.85,230.251 1877.42,231.164 1877.99,234.228 1878.56,233.888 1879.13,233.489 1879.69,233.07 1880.26,230.861 1880.83,230.842 1881.4,231.838 1881.97,236.087 1882.54,237.758 1883.1,236.263 1883.67,235.903 1884.24,235.54 1884.81,235.141 1885.38,234.731 1885.95,234.3 1886.51,233.892 1887.08,231.515 1887.65,231.373 1888.22,230.405 1888.79,229.521 1889.36,229.672 1889.92,230.85 1890.49,230.709 1891.06,229.969 1891.63,232.229 1892.2,232.038 1892.77,230.805 1893.33,230.428 1893.9,229.42 1894.47,229.617 1895.04,230.754 1895.61,230.893 1896.18,229.884 1896.74,230.093 1897.31,229.108 1897.88,227.005 1898.45,225.272 1899.02,223.671 1899.59,223.235 1900.16,223.754 1900.72,222.339 1901.29,223.912 1901.86,225.509 1902.43,229.042 1903,232.092 1903.57,233.017 1904.13,232.981 1904.7,233.128 1905.27,231.927 1905.84,234.084 1906.41,235.809 1906.98,235.418 1907.54,237.404 1908.11,239.23 1908.68,238.519 1909.25,237.784 1909.82,237.403 1910.39,236.022 1910.95,235.731 1911.52,235.247 1912.09,236.134 1912.66,234.603 1913.23,234.311 1913.8,233.89 1914.36,233.638 1914.93,234.372 1915.5,234.968 1916.07,234.535 1916.64,232.118 1917.21,232.16 1917.77,231.006 1918.34,229.975 1918.91,230.844 1919.48,229.801 1920.05,230.937 1920.62,230.973 1921.18,231.103 1921.75,230.949 1922.32,229.869 1922.89,228.772 1923.46,227.969 1924.03,228.07 1924.59,228.33 1925.16,227.738 1925.73,228.919 1926.3,229.079 1926.87,229.244 1927.44,230.25 1928,228.122 1928.57,229.156 1929.14,230.235 1929.71,230.247 1930.28,229.29 1930.85,232.689 1931.41,233.324 1931.98,231.211 1932.55,231.071 1933.12,231.937 1933.69,233.039 1934.26,233.756 1934.82,231.387 1935.39,232.98 1935.96,232.56 1936.53,233.382 1937.1,234.277 1937.67,233.835 1938.23,230.635 1938.8,230.586 1939.37,232.762 1939.94,230.391 1940.51,230.36 1941.08,229.358 1941.64,228.421 1942.21,228.772 1942.78,227.863 1943.35,227.072 1943.92,226.396 1944.49,227.691 1945.05,228.929 1945.62,229.069 1946.19,229.662 1946.76,227.684 1947.33,227.849 1947.9,228.095 1948.46,227.334 1949.03,227.575 1949.6,228.87 1950.17,228.161 1950.74,228.525 1951.31,227.833 1951.87,226.001 1952.44,226.527 1953.01,227.993 1953.58,228.223 1954.15,227.27 1954.72,226.613 1955.28,227.92 1955.85,232.386 1956.42,230.258 1956.99,231.302 1957.56,230.411 1958.13,229.596 1958.69,232.709 1959.26,234.783 1959.83,234.705 1960.4,233.399 1960.97,232.284 1961.54,232.32 1962.1,233.32 1962.67,232.187 1963.24,232.173 1963.81,230.093 1964.38,231.353 1964.95,231.593 1965.51,231.766 1966.08,231.603 1966.65,231.735 1967.22,230.883 1967.79,227.858 1968.36,227.179 1968.92,227.694 1969.49,228.034 1970.06,229.611 1970.63,229.784 1971.2,231.199 1971.77,232.343 1972.34,231.298 1972.9,231.593 1973.47,232.564 1974.04,231.466 1974.61,231.491 1975.18,231.52 1975.75,231.723 1976.31,231.81 1976.88,233.715 1977.45,234.506 1978.02,233.297 1978.59,234.122 1979.16,230.921 1979.72,231.936 1980.29,231.023 1980.86,233.182 1981.43,232.908 1982,233.853 1982.57,235.776 1983.13,235.67 1983.7,232.391 1984.27,230.372 1984.84,231.628 1985.41,232.659 1985.98,234.802 1986.54,233.688 1987.11,232.515 1987.68,231.285 1988.25,231.272 1988.82,230.351 1989.39,229.401 1989.95,227.439 1990.52,228.719 1991.09,229.964 1991.66,230.021 1992.23,229.125 1992.8,227.236 1993.36,228.703 1993.93,228.903 1994.5,230.015 1995.07,231.305 1995.64,231.397 1996.21,230.564 1996.77,231.844 1997.34,232.993 1997.91,234.285 1998.48,233.874 1999.05,232.984 1999.62,233.74 2000.18,236.66 2000.75,235.021 2001.32,235.694 2001.89,233.461 2002.46,236.305 2003.03,238.921 2003.59,237.285 2004.16,235.77 2004.73,234.517 2005.3,232.034 2005.87,229.941 2006.44,229.139 2007,228.186 2007.57,229.251 2008.14,229.41 2008.71,228.462 2009.28,228.723 2009.85,230.903 2010.41,231.986 2010.98,234.115 2011.55,231.752 2012.12,231.875 2012.69,229.744 2013.26,228.86 2013.82,228.982 2014.39,229.071 2014.96,227.249 2015.53,225.463 2016.1,224.809 2016.67,224.131 2017.23,223.838 2017.8,224.601 2018.37,225.251 2018.94,225.744 2019.51,225.002 2020.08,223.406 2020.64,223.064 2021.21,223.868 2021.78,226.568 2022.35,225.978 2022.92,226.475 2023.49,227.827 2024.05,228.266 2024.62,228.606 2025.19,227.989 2025.76,229.616 2026.33,229.702 2026.9,230.797 2027.46,232.204 2028.03,235.386 2028.6,236.416 2029.17,235.923 2029.74,233.874 2030.31,235.625 2030.87,237.541 2031.44,237.988 2032.01,236.532 2032.58,235.202 2033.15,235.966 2033.72,238.953 2034.28,238.382 2034.85,241.204 2035.42,242.727 2035.99,242.874 2036.56,241.095 2037.13,239.437 2037.69,241.662 2038.26,243.099 2038.83,240.347 2039.4,239.77 2039.97,240.065 2040.54,238.444 2041.11,238.563 2041.67,232.878 2042.24,231.691 2042.81,232.528 2043.38,232.347 2043.95,230.065 2044.52,232.282 2045.08,232.282 2045.65,231.201 2046.22,228.113 2046.79,228.45 2047.36,228.517 2047.93,228.536 2048.49,228.831 2049.06,229.699 2049.63,230.782 2050.2,230.106 2050.77,227.013 2051.34,226.121 2051.9,226.329 2052.47,227.571 2053.04,229.983 2053.61,230.096 2054.18,230.11 2054.75,230.236 2055.31,230.365 2055.88,229.605 2056.45,228.701 2057.02,229.843 2057.59,228.901 2058.16,229.185 2058.72,230.245 2059.29,229.94 2059.86,228.994 2060.43,231.065 2061,231.148 2061.57,231.125 2062.13,232.322 2062.7,233.179 2063.27,235.125 2063.84,234.946 2064.41,232.703 2064.98,232.554 2065.54,233.497 2066.11,234.344 2066.68,235.269 2067.25,238.078 2067.82,236.46 2068.39,236.121 2068.95,235.735 2069.52,235.333 2070.09,234.073 2070.66,234.815 2071.23,234.769 2071.8,234.614 2072.36,235.411 2072.93,234.072 2073.5,233.755 2074.07,233.601 2074.64,232.285 2075.21,230.1 2075.77,231.062 2076.34,227.784 2076.91,227.019 2077.48,227.076 2078.05,226.314 2078.62,226.706 2079.18,226.895 2079.75,228.361 2080.32,229.511 2080.89,230.623 2081.46,228.6 2082.03,228.803 2082.59,228.888 2083.16,225.985 2083.73,226.446 2084.3,227.66 2084.87,227.755 2085.44,229.112 2086,230.251 2086.57,229.312 2087.14,229.63 2087.71,229.829 2088.28,229.887 2088.85,228.875 2089.41,229.875 2089.98,230.896 2090.55,231.105 2091.12,230.067 2091.69,231.053 2092.26,231.008 2092.82,231.263 2093.39,231.468 2093.96,230.425 2094.53,230.735 2095.1,232.603 2095.67,232.534 2096.23,231.38 2096.8,230.275 2097.37,231.303 2097.94,232.502 2098.51,231.442 2099.08,231.381 2099.64,231.547 2100.21,233.667 2100.78,232.559 2101.35,231.481 2101.92,231.553 2102.49,229.373 2103.05,231.48 2103.62,229.343 2104.19,230.645 2104.76,230.681 2105.33,230.845 2105.9,233.932 2106.46,233.754 2107.03,233.511 2107.6,234.178 2108.17,234.796 2108.74,233.483 2109.31,233.179 2109.87,232.077 2110.44,232.084 2111.01,233.117 2111.58,232.093 2112.15,234.156 2112.72,235.27 2113.29,236.937 2113.85,235.131 2114.42,235.073 2114.99,237.729 2115.56,238.313 2116.13,237.426 2116.7,236.99 2117.26,237.724 2117.83,235.265 2118.4,232.758 2118.97,231.461 2119.54,231.153 2120.11,232.078 2120.67,232.949 2121.24,231.631 2121.81,230.436 2122.38,229.562 2122.95,229.783 2123.52,230.851 2124.08,231.954 2124.65,231.71 2125.22,232.504 2125.79,231.107 2126.36,230.98 2126.93,230.933 2127.49,229.621 2128.06,228.776 2128.63,228.944 2129.2,224.997 2129.77,227.39 2130.34,229.64 2130.9,229.642 2131.47,227.456 2132.04,228.622 2132.61,228.626 2133.18,227.633 2133.75,227.923 2134.31,227.155 2134.88,229.532 2135.45,228.492 2136.02,228.37 2136.59,229.474 2137.16,228.466 2137.72,226.558 2138.29,225.945 2138.86,228.137 2139.43,228.238 2140,228.369 2140.57,230.484 2141.13,231.399 2141.7,230.446 2142.27,230.526 2142.84,231.609 2143.41,229.509 2143.98,228.524 2144.54,225.363 2145.11,227.05 2145.68,225.267 2146.25,226.795 2146.82,228.267 2147.39,228.47 2147.95,226.697 2148.52,227.064 2149.09,229.388 2149.66,230.732 2150.23,233.005 2150.8,232.93 2151.36,233.836 2151.93,233.803 2152.5,232.572 2153.07,233.361 2153.64,230.191 2154.21,230.369 2154.77,230.523 2155.34,230.735 2155.91,232.099 2156.48,230.046 2157.05,232.206 2157.62,231.304 2158.18,230.433 2158.75,230.647 2159.32,230.756 2159.89,228.786 \"/>\n<path clip-path=\"url(#clip300)\" d=\"M1649.46 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1649.46 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1649.46,1245.03 2150.8,1245.03 2150.8,1089.51 1649.46,1089.51 1649.46,1245.03 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1669.53,1141.35 1789.98,1141.35 \"/>\n<path clip-path=\"url(#clip300)\" d=\"M1817.46 1125.34 L1817.46 1132.71 L1826.23 1132.71 L1826.23 1136.02 L1817.46 1136.02 L1817.46 1150.09 Q1817.46 1153.26 1818.32 1154.16 Q1819.2 1155.07 1821.86 1155.07 L1826.23 1155.07 L1826.23 1158.63 L1821.86 1158.63 Q1816.93 1158.63 1815.05 1156.8 Q1813.18 1154.95 1813.18 1150.09 L1813.18 1136.02 L1810.05 1136.02 L1810.05 1132.71 L1813.18 1132.71 L1813.18 1125.34 L1817.46 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1843.62 1145.6 Q1838.46 1145.6 1836.47 1146.78 Q1834.48 1147.96 1834.48 1150.81 Q1834.48 1153.08 1835.96 1154.42 Q1837.46 1155.74 1840.03 1155.74 Q1843.57 1155.74 1845.7 1153.24 Q1847.86 1150.72 1847.86 1146.55 L1847.86 1145.6 L1843.62 1145.6 M1852.11 1143.84 L1852.11 1158.63 L1847.86 1158.63 L1847.86 1154.7 Q1846.4 1157.06 1844.22 1158.19 Q1842.05 1159.3 1838.9 1159.3 Q1834.92 1159.3 1832.55 1157.08 Q1830.22 1154.84 1830.22 1151.09 Q1830.22 1146.71 1833.13 1144.49 Q1836.07 1142.27 1841.88 1142.27 L1847.86 1142.27 L1847.86 1141.85 Q1847.86 1138.91 1845.91 1137.31 Q1843.99 1135.69 1840.49 1135.69 Q1838.27 1135.69 1836.17 1136.22 Q1834.06 1136.76 1832.11 1137.82 L1832.11 1133.89 Q1834.45 1132.98 1836.65 1132.54 Q1838.85 1132.08 1840.93 1132.08 Q1846.56 1132.08 1849.34 1135 Q1852.11 1137.91 1852.11 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1875.91 1136.69 Q1875.19 1136.27 1874.34 1136.09 Q1873.5 1135.88 1872.48 1135.88 Q1868.87 1135.88 1866.93 1138.24 Q1865.01 1140.58 1865.01 1144.97 L1865.01 1158.63 L1860.73 1158.63 L1860.73 1132.71 L1865.01 1132.71 L1865.01 1136.73 Q1866.35 1134.37 1868.5 1133.24 Q1870.66 1132.08 1873.73 1132.08 Q1874.17 1132.08 1874.71 1132.15 Q1875.24 1132.2 1875.89 1132.31 L1875.91 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1896.6 1145.37 Q1896.6 1140.74 1894.68 1138.19 Q1892.79 1135.65 1889.34 1135.65 Q1885.91 1135.65 1883.99 1138.19 Q1882.09 1140.74 1882.09 1145.37 Q1882.09 1149.97 1883.99 1152.52 Q1885.91 1155.07 1889.34 1155.07 Q1892.79 1155.07 1894.68 1152.52 Q1896.6 1149.97 1896.6 1145.37 M1900.86 1155.41 Q1900.86 1162.03 1897.92 1165.25 Q1894.98 1168.49 1888.92 1168.49 Q1886.67 1168.49 1884.68 1168.15 Q1882.69 1167.82 1880.82 1167.13 L1880.82 1162.98 Q1882.69 1164 1884.52 1164.49 Q1886.35 1164.97 1888.25 1164.97 Q1892.44 1164.97 1894.52 1162.78 Q1896.6 1160.6 1896.6 1156.18 L1896.6 1154.07 Q1895.29 1156.36 1893.23 1157.5 Q1891.17 1158.63 1888.29 1158.63 Q1883.53 1158.63 1880.61 1155 Q1877.69 1151.36 1877.69 1145.37 Q1877.69 1139.35 1880.61 1135.72 Q1883.53 1132.08 1888.29 1132.08 Q1891.17 1132.08 1893.23 1133.22 Q1895.29 1134.35 1896.6 1136.64 L1896.6 1132.71 L1900.86 1132.71 L1900.86 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1931.81 1144.6 L1931.81 1146.69 L1912.23 1146.69 Q1912.51 1151.09 1914.87 1153.4 Q1917.25 1155.69 1921.49 1155.69 Q1923.94 1155.69 1926.23 1155.09 Q1928.55 1154.49 1930.82 1153.28 L1930.82 1157.31 Q1928.53 1158.28 1926.12 1158.79 Q1923.71 1159.3 1921.23 1159.3 Q1915.03 1159.3 1911.4 1155.69 Q1907.79 1152.08 1907.79 1145.92 Q1907.79 1139.56 1911.21 1135.83 Q1914.66 1132.08 1920.49 1132.08 Q1925.73 1132.08 1928.76 1135.46 Q1931.81 1138.82 1931.81 1144.6 M1927.55 1143.35 Q1927.51 1139.86 1925.59 1137.78 Q1923.69 1135.69 1920.54 1135.69 Q1916.98 1135.69 1914.82 1137.71 Q1912.69 1139.72 1912.37 1143.38 L1927.55 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1943.02 1125.34 L1943.02 1132.71 L1951.79 1132.71 L1951.79 1136.02 L1943.02 1136.02 L1943.02 1150.09 Q1943.02 1153.26 1943.87 1154.16 Q1944.75 1155.07 1947.41 1155.07 L1951.79 1155.07 L1951.79 1158.63 L1947.41 1158.63 Q1942.48 1158.63 1940.61 1156.8 Q1938.73 1154.95 1938.73 1150.09 L1938.73 1136.02 L1935.61 1136.02 L1935.61 1132.71 L1938.73 1132.71 L1938.73 1125.34 L1943.02 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip300)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1669.53,1193.19 1789.98,1193.19 \"/>\n<path clip-path=\"url(#clip300)\" d=\"M1831.77 1194.82 L1831.77 1210.47 L1827.51 1210.47 L1827.51 1194.96 Q1827.51 1191.28 1826.07 1189.45 Q1824.64 1187.62 1821.77 1187.62 Q1818.32 1187.62 1816.33 1189.82 Q1814.34 1192.02 1814.34 1195.82 L1814.34 1210.47 L1810.05 1210.47 L1810.05 1184.55 L1814.34 1184.55 L1814.34 1188.57 Q1815.86 1186.24 1817.92 1185.08 Q1820.01 1183.92 1822.72 1183.92 Q1827.18 1183.92 1829.48 1186.7 Q1831.77 1189.45 1831.77 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1850.31 1187.53 Q1846.88 1187.53 1844.89 1190.22 Q1842.9 1192.88 1842.9 1197.53 Q1842.9 1202.18 1844.87 1204.87 Q1846.86 1207.53 1850.31 1207.53 Q1853.71 1207.53 1855.7 1204.85 Q1857.69 1202.16 1857.69 1197.53 Q1857.69 1192.93 1855.7 1190.24 Q1853.71 1187.53 1850.31 1187.53 M1850.31 1183.92 Q1855.86 1183.92 1859.04 1187.53 Q1862.21 1191.14 1862.21 1197.53 Q1862.21 1203.9 1859.04 1207.53 Q1855.86 1211.14 1850.31 1211.14 Q1844.73 1211.14 1841.56 1207.53 Q1838.41 1203.9 1838.41 1197.53 Q1838.41 1191.14 1841.56 1187.53 Q1844.73 1183.92 1850.31 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1884.29 1188.53 Q1883.57 1188.11 1882.72 1187.93 Q1881.88 1187.72 1880.86 1187.72 Q1877.25 1187.72 1875.31 1190.08 Q1873.39 1192.42 1873.39 1196.81 L1873.39 1210.47 L1869.11 1210.47 L1869.11 1184.55 L1873.39 1184.55 L1873.39 1188.57 Q1874.73 1186.21 1876.88 1185.08 Q1879.04 1183.92 1882.11 1183.92 Q1882.55 1183.92 1883.09 1183.99 Q1883.62 1184.04 1884.27 1184.15 L1884.29 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1908.11 1189.52 Q1909.71 1186.65 1911.93 1185.29 Q1914.15 1183.92 1917.16 1183.92 Q1921.21 1183.92 1923.41 1186.77 Q1925.61 1189.59 1925.61 1194.82 L1925.61 1210.47 L1921.33 1210.47 L1921.33 1194.96 Q1921.33 1191.24 1920.01 1189.43 Q1918.69 1187.62 1915.98 1187.62 Q1912.67 1187.62 1910.75 1189.82 Q1908.83 1192.02 1908.83 1195.82 L1908.83 1210.47 L1904.54 1210.47 L1904.54 1194.96 Q1904.54 1191.21 1903.23 1189.43 Q1901.91 1187.62 1899.15 1187.62 Q1895.89 1187.62 1893.97 1189.85 Q1892.04 1192.05 1892.04 1195.82 L1892.04 1210.47 L1887.76 1210.47 L1887.76 1184.55 L1892.04 1184.55 L1892.04 1188.57 Q1893.5 1186.19 1895.54 1185.06 Q1897.58 1183.92 1900.38 1183.92 Q1903.2 1183.92 1905.17 1185.36 Q1907.16 1186.79 1908.11 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.037 ± 0.021\n  with uncertainty of ± 0.0013553719219227497\n  from 125 blocks after 4 transformations (k = 5).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01807 ± (0.00214934, 0.00226987) (MC)\n  95% confidence interval: [-4.0225, -4.01378]) (MC)\n  linear error propagation: -4.01821 ± 0.00229535\n  |δ_y| = |0.00184564| (≤ 0.1 for normal approx)\n  Blocking successful with 31 blocks after 6 transformations (k = 7).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.018072363758144, val_l = 0.0044242912335112905, val_u = 0.004293825886498404)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip330\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip330)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip331\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip330)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip332\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip332)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip332)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip332)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip332)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip330)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1220.15 1391.71 L1220.15 1397.25 Q1217.67 1395.98 1214.99 1395.34 Q1212.32 1394.71 1209.46 1394.71 Q1205.1 1394.71 1202.9 1396.04 Q1200.74 1397.38 1200.74 1400.05 Q1200.74 1402.09 1202.3 1403.27 Q1203.85 1404.41 1208.57 1405.46 L1210.57 1405.91 Q1216.81 1407.25 1219.42 1409.7 Q1222.06 1412.12 1222.06 1416.48 Q1222.06 1421.44 1218.11 1424.34 Q1214.2 1427.23 1207.32 1427.23 Q1204.46 1427.23 1201.34 1426.66 Q1198.25 1426.12 1194.82 1425.01 L1194.82 1418.96 Q1198.06 1420.65 1201.21 1421.51 Q1204.36 1422.33 1207.45 1422.33 Q1211.59 1422.33 1213.82 1420.93 Q1216.05 1419.5 1216.05 1416.92 Q1216.05 1414.54 1214.42 1413.26 Q1212.83 1411.99 1207.39 1410.81 L1205.35 1410.33 Q1199.91 1409.19 1197.49 1406.83 Q1195.07 1404.45 1195.07 1400.31 Q1195.07 1395.28 1198.64 1392.54 Q1202.2 1389.8 1208.76 1389.8 Q1212 1389.8 1214.87 1390.28 Q1217.73 1390.76 1220.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1237.18 1380.54 L1237.18 1390.66 L1249.24 1390.66 L1249.24 1395.22 L1237.18 1395.22 L1237.18 1414.57 Q1237.18 1418.93 1238.36 1420.17 Q1239.57 1421.41 1243.23 1421.41 L1249.24 1421.41 L1249.24 1426.31 L1243.23 1426.31 Q1236.45 1426.31 1233.87 1423.8 Q1231.29 1421.25 1231.29 1414.57 L1231.29 1395.22 L1226.99 1395.22 L1226.99 1390.66 L1231.29 1390.66 L1231.29 1380.54 L1237.18 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1287.44 1407.02 L1287.44 1409.89 L1260.51 1409.89 Q1260.89 1415.94 1264.14 1419.12 Q1267.42 1422.27 1273.24 1422.27 Q1276.61 1422.27 1279.77 1421.44 Q1282.95 1420.61 1286.07 1418.96 L1286.07 1424.5 Q1282.92 1425.83 1279.61 1426.53 Q1276.3 1427.23 1272.89 1427.23 Q1264.36 1427.23 1259.36 1422.27 Q1254.4 1417.3 1254.4 1408.84 Q1254.4 1400.08 1259.11 1394.96 Q1263.85 1389.8 1271.87 1389.8 Q1279.07 1389.8 1283.24 1394.45 Q1287.44 1399.07 1287.44 1407.02 M1281.58 1405.3 Q1281.52 1400.5 1278.87 1397.63 Q1276.26 1394.77 1271.94 1394.77 Q1267.03 1394.77 1264.07 1397.54 Q1261.15 1400.31 1260.7 1405.34 L1281.58 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1302.71 1420.96 L1302.71 1439.87 L1296.83 1439.87 L1296.83 1390.66 L1302.71 1390.66 L1302.71 1396.07 Q1304.56 1392.89 1307.36 1391.36 Q1310.19 1389.8 1314.11 1389.8 Q1320.6 1389.8 1324.64 1394.96 Q1328.72 1400.12 1328.72 1408.52 Q1328.72 1416.92 1324.64 1422.08 Q1320.6 1427.23 1314.11 1427.23 Q1310.19 1427.23 1307.36 1425.71 Q1304.56 1424.15 1302.71 1420.96 M1322.64 1408.52 Q1322.64 1402.06 1319.97 1398.4 Q1317.32 1394.71 1312.68 1394.71 Q1308.03 1394.71 1305.36 1398.4 Q1302.71 1402.06 1302.71 1408.52 Q1302.71 1414.98 1305.36 1418.67 Q1308.03 1422.33 1312.68 1422.33 Q1317.32 1422.33 1319.97 1418.67 Q1322.64 1414.98 1322.64 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1361.15 1391.71 L1361.15 1397.25 Q1358.67 1395.98 1356 1395.34 Q1353.32 1394.71 1350.46 1394.71 Q1346.1 1394.71 1343.9 1396.04 Q1341.74 1397.38 1341.74 1400.05 Q1341.74 1402.09 1343.3 1403.27 Q1344.86 1404.41 1349.57 1405.46 L1351.57 1405.91 Q1357.81 1407.25 1360.42 1409.7 Q1363.06 1412.12 1363.06 1416.48 Q1363.06 1421.44 1359.11 1424.34 Q1355.2 1427.23 1348.32 1427.23 Q1345.46 1427.23 1342.34 1426.66 Q1339.25 1426.12 1335.82 1425.01 L1335.82 1418.96 Q1339.06 1420.65 1342.21 1421.51 Q1345.36 1422.33 1348.45 1422.33 Q1352.59 1422.33 1354.82 1420.93 Q1357.05 1419.5 1357.05 1416.92 Q1357.05 1414.54 1355.42 1413.26 Q1353.83 1411.99 1348.39 1410.81 L1346.35 1410.33 Q1340.91 1409.19 1338.49 1406.83 Q1336.07 1404.45 1336.07 1400.31 Q1336.07 1395.28 1339.64 1392.54 Q1343.2 1389.8 1349.76 1389.8 Q1353 1389.8 1355.87 1390.28 Q1358.73 1390.76 1361.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip332)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1155.69 2211.02,1155.69 \"/>\n<polyline clip-path=\"url(#clip332)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1015.95 2211.02,1015.95 \"/>\n<polyline clip-path=\"url(#clip332)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,876.211 2211.02,876.211 \"/>\n<polyline clip-path=\"url(#clip332)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,736.473 2211.02,736.473 \"/>\n<polyline clip-path=\"url(#clip332)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,596.735 2211.02,596.735 \"/>\n<polyline clip-path=\"url(#clip332)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,456.997 2211.02,456.997 \"/>\n<polyline clip-path=\"url(#clip332)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,317.259 2211.02,317.259 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1155.69 365.751,1155.69 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1015.95 365.751,1015.95 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,876.211 365.751,876.211 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,736.473 365.751,736.473 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,596.735 365.751,596.735 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,456.997 365.751,456.997 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,317.259 365.751,317.259 \"/>\n<path clip-path=\"url(#clip330)\" d=\"M298.909 1141.49 Q295.298 1141.49 293.469 1145.05 Q291.664 1148.59 291.664 1155.72 Q291.664 1162.83 293.469 1166.39 Q295.298 1169.93 298.909 1169.93 Q302.543 1169.93 304.349 1166.39 Q306.177 1162.83 306.177 1155.72 Q306.177 1148.59 304.349 1145.05 Q302.543 1141.49 298.909 1141.49 M298.909 1137.78 Q304.719 1137.78 307.775 1142.39 Q310.853 1146.97 310.853 1155.72 Q310.853 1164.45 307.775 1169.05 Q304.719 1173.64 298.909 1173.64 Q293.099 1173.64 290.02 1169.05 Q286.964 1164.45 286.964 1155.72 Q286.964 1146.97 290.02 1142.39 Q293.099 1137.78 298.909 1137.78 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M259.557 1029.29 L267.196 1029.29 L267.196 1002.93 L258.886 1004.59 L258.886 1000.34 L267.15 998.669 L271.826 998.669 L271.826 1029.29 L279.465 1029.29 L279.465 1033.23 L259.557 1033.23 L259.557 1029.29 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M298.909 1001.75 Q295.298 1001.75 293.469 1005.31 Q291.664 1008.85 291.664 1015.98 Q291.664 1023.09 293.469 1026.65 Q295.298 1030.2 298.909 1030.2 Q302.543 1030.2 304.349 1026.65 Q306.177 1023.09 306.177 1015.98 Q306.177 1008.85 304.349 1005.31 Q302.543 1001.75 298.909 1001.75 M298.909 998.044 Q304.719 998.044 307.775 1002.65 Q310.853 1007.23 310.853 1015.98 Q310.853 1024.71 307.775 1029.32 Q304.719 1033.9 298.909 1033.9 Q293.099 1033.9 290.02 1029.32 Q286.964 1024.71 286.964 1015.98 Q286.964 1007.23 290.02 1002.65 Q293.099 998.044 298.909 998.044 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M262.775 889.556 L279.094 889.556 L279.094 893.491 L257.15 893.491 L257.15 889.556 Q259.812 886.801 264.395 882.171 Q269.002 877.519 270.182 876.176 Q272.428 873.653 273.307 871.917 Q274.21 870.158 274.21 868.468 Q274.21 865.713 272.266 863.977 Q270.344 862.241 267.242 862.241 Q265.043 862.241 262.59 863.005 Q260.159 863.769 257.381 865.32 L257.381 860.597 Q260.205 859.463 262.659 858.884 Q265.113 858.306 267.15 858.306 Q272.52 858.306 275.715 860.991 Q278.909 863.676 278.909 868.167 Q278.909 870.296 278.099 872.218 Q277.312 874.116 275.205 876.708 Q274.627 877.38 271.525 880.597 Q268.423 883.792 262.775 889.556 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M298.909 862.009 Q295.298 862.009 293.469 865.574 Q291.664 869.116 291.664 876.245 Q291.664 883.352 293.469 886.917 Q295.298 890.458 298.909 890.458 Q302.543 890.458 304.349 886.917 Q306.177 883.352 306.177 876.245 Q306.177 869.116 304.349 865.574 Q302.543 862.009 298.909 862.009 M298.909 858.306 Q304.719 858.306 307.775 862.912 Q310.853 867.496 310.853 876.245 Q310.853 884.972 307.775 889.579 Q304.719 894.162 298.909 894.162 Q293.099 894.162 290.02 889.579 Q286.964 884.972 286.964 876.245 Q286.964 867.496 290.02 862.912 Q293.099 858.306 298.909 858.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M272.914 735.119 Q276.27 735.836 278.145 738.105 Q280.043 740.373 280.043 743.707 Q280.043 748.822 276.525 751.623 Q273.006 754.424 266.525 754.424 Q264.349 754.424 262.034 753.984 Q259.742 753.568 257.289 752.711 L257.289 748.197 Q259.233 749.332 261.548 749.91 Q263.863 750.489 266.386 750.489 Q270.784 750.489 273.076 748.753 Q275.39 747.017 275.39 743.707 Q275.39 740.651 273.238 738.938 Q271.108 737.202 267.289 737.202 L263.261 737.202 L263.261 733.36 L267.474 733.36 Q270.923 733.36 272.752 731.994 Q274.58 730.605 274.58 728.012 Q274.58 725.35 272.682 723.938 Q270.807 722.503 267.289 722.503 Q265.367 722.503 263.168 722.92 Q260.969 723.336 258.33 724.216 L258.33 720.049 Q260.992 719.309 263.307 718.938 Q265.645 718.568 267.705 718.568 Q273.029 718.568 276.131 720.998 Q279.233 723.406 279.233 727.526 Q279.233 730.397 277.59 732.387 Q275.946 734.355 272.914 735.119 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M298.909 722.272 Q295.298 722.272 293.469 725.836 Q291.664 729.378 291.664 736.508 Q291.664 743.614 293.469 747.179 Q295.298 750.721 298.909 750.721 Q302.543 750.721 304.349 747.179 Q306.177 743.614 306.177 736.508 Q306.177 729.378 304.349 725.836 Q302.543 722.272 298.909 722.272 M298.909 718.568 Q304.719 718.568 307.775 723.174 Q310.853 727.758 310.853 736.508 Q310.853 745.234 307.775 749.841 Q304.719 754.424 298.909 754.424 Q293.099 754.424 290.02 749.841 Q286.964 745.234 286.964 736.508 Q286.964 727.758 290.02 723.174 Q293.099 718.568 298.909 718.568 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M271.594 583.529 L259.789 601.978 L271.594 601.978 L271.594 583.529 M270.367 579.455 L276.247 579.455 L276.247 601.978 L281.177 601.978 L281.177 605.867 L276.247 605.867 L276.247 614.015 L271.594 614.015 L271.594 605.867 L255.992 605.867 L255.992 601.353 L270.367 579.455 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M298.909 582.534 Q295.298 582.534 293.469 586.099 Q291.664 589.64 291.664 596.77 Q291.664 603.876 293.469 607.441 Q295.298 610.983 298.909 610.983 Q302.543 610.983 304.349 607.441 Q306.177 603.876 306.177 596.77 Q306.177 589.64 304.349 586.099 Q302.543 582.534 298.909 582.534 M298.909 578.83 Q304.719 578.83 307.775 583.437 Q310.853 588.02 310.853 596.77 Q310.853 605.497 307.775 610.103 Q304.719 614.686 298.909 614.686 Q293.099 614.686 290.02 610.103 Q286.964 605.497 286.964 596.77 Q286.964 588.02 290.02 583.437 Q293.099 578.83 298.909 578.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M258.793 439.717 L277.15 439.717 L277.15 443.652 L263.076 443.652 L263.076 452.125 Q264.094 451.777 265.113 451.615 Q266.131 451.43 267.15 451.43 Q272.937 451.43 276.316 454.601 Q279.696 457.773 279.696 463.189 Q279.696 468.768 276.224 471.87 Q272.752 474.949 266.432 474.949 Q264.256 474.949 261.988 474.578 Q259.742 474.208 257.335 473.467 L257.335 468.768 Q259.418 469.902 261.641 470.458 Q263.863 471.013 266.34 471.013 Q270.344 471.013 272.682 468.907 Q275.02 466.8 275.02 463.189 Q275.02 459.578 272.682 457.472 Q270.344 455.365 266.34 455.365 Q264.465 455.365 262.59 455.782 Q260.738 456.199 258.793 457.078 L258.793 439.717 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M298.909 442.796 Q295.298 442.796 293.469 446.361 Q291.664 449.902 291.664 457.032 Q291.664 464.138 293.469 467.703 Q295.298 471.245 298.909 471.245 Q302.543 471.245 304.349 467.703 Q306.177 464.138 306.177 457.032 Q306.177 449.902 304.349 446.361 Q302.543 442.796 298.909 442.796 M298.909 439.092 Q304.719 439.092 307.775 443.699 Q310.853 448.282 310.853 457.032 Q310.853 465.759 307.775 470.365 Q304.719 474.949 298.909 474.949 Q293.099 474.949 290.02 470.365 Q286.964 465.759 286.964 457.032 Q286.964 448.282 290.02 443.699 Q293.099 439.092 298.909 439.092 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M269.326 315.396 Q266.178 315.396 264.326 317.549 Q262.497 319.702 262.497 323.451 Q262.497 327.178 264.326 329.354 Q266.178 331.507 269.326 331.507 Q272.474 331.507 274.303 329.354 Q276.154 327.178 276.154 323.451 Q276.154 319.702 274.303 317.549 Q272.474 315.396 269.326 315.396 M278.608 300.743 L278.608 305.003 Q276.849 304.169 275.043 303.729 Q273.261 303.29 271.502 303.29 Q266.872 303.29 264.418 306.415 Q261.988 309.54 261.641 315.859 Q263.006 313.845 265.066 312.78 Q267.127 311.692 269.603 311.692 Q274.812 311.692 277.821 314.864 Q280.853 318.012 280.853 323.451 Q280.853 328.776 277.705 331.993 Q274.557 335.211 269.326 335.211 Q263.33 335.211 260.159 330.627 Q256.988 326.021 256.988 317.294 Q256.988 309.1 260.877 304.239 Q264.766 299.354 271.316 299.354 Q273.076 299.354 274.858 299.702 Q276.664 300.049 278.608 300.743 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M298.909 303.058 Q295.298 303.058 293.469 306.623 Q291.664 310.165 291.664 317.294 Q291.664 324.401 293.469 327.965 Q295.298 331.507 298.909 331.507 Q302.543 331.507 304.349 327.965 Q306.177 324.401 306.177 317.294 Q306.177 310.165 304.349 306.623 Q302.543 303.058 298.909 303.058 M298.909 299.354 Q304.719 299.354 307.775 303.961 Q310.853 308.544 310.853 317.294 Q310.853 326.021 307.775 330.627 Q304.719 335.211 298.909 335.211 Q293.099 335.211 290.02 330.627 Q286.964 326.021 286.964 317.294 Q286.964 308.544 290.02 303.961 Q293.099 299.354 298.909 299.354 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip332)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1052.72 400.199,958.132 400.786,871.341 401.372,791.826 401.958,719.103 402.545,652.723 403.131,592.272 403.718,537.363 404.304,487.636 404.891,442.757 405.477,402.412 406.063,366.307 406.65,334.168 407.236,305.737 407.823,280.773 408.409,259.047 408.995,240.346 409.582,278.524 410.168,263.346 410.755,250.708 411.341,240.436 411.927,232.369 412.514,226.352 413.1,222.239 413.687,219.895 414.273,219.988 414.86,220.756 415.446,250.648 416.032,254.114 416.619,258.396 417.205,264.164 417.792,291.187 418.378,317.843 418.964,361.02 419.551,384.812 420.137,408.351 420.724,417.945 421.31,427.82 421.896,475.241 422.483,486.5 423.069,497.887 423.656,519.205 424.242,530.38 424.829,550.439 425.415,570.587 426.001,581.841 426.588,593.599 427.174,605.195 427.761,616.649 428.347,648.478 428.933,667.518 429.52,679.78 430.106,691.698 430.693,703.537 431.279,715.431 431.865,727.055 432.452,743.669 433.038,754.361 433.625,765.23 434.211,780.151 434.798,802.653 435.384,824.383 435.97,836.828 436.557,845.241 437.143,864.346 437.73,879.133 438.316,886.352 438.902,897.011 439.489,919.555 440.075,934.902 440.662,946.41 441.248,951.621 441.835,957.117 442.421,967.872 443.007,980.856 443.594,988.238 444.18,995.577 444.767,1002.6 445.353,1009.6 445.939,1016.3 446.526,1020.56 447.112,1024.93 447.699,1038.15 448.285,1046.41 448.871,1052.59 449.458,1058.66 450.044,1066.58 450.631,1074.27 451.217,1083.63 451.804,1090.88 452.39,1095.72 452.976,1100.57 453.563,1103.39 454.149,1106.08 454.736,1112.48 455.322,1115.24 455.908,1117.85 456.495,1124.08 457.081,1128.59 457.668,1134.43 458.254,1140.18 458.84,1147.29 459.427,1149.31 460.013,1152.99 460.6,1156.67 461.186,1158.28 461.773,1163.46 462.359,1165.02 462.945,1167.98 463.532,1170.93 464.118,1175.31 464.705,1175.02 465.291,1182.76 465.877,1184.01 466.464,1186.69 467.05,1189.03 467.637,1185.17 468.223,1186.53 468.809,1187.76 469.396,1194.81 469.982,1195.73 470.569,1200.76 471.155,1204.4 471.742,1204.78 472.328,1205.05 472.914,1207.18 473.501,1206.16 474.087,1212.09 474.674,1217.98 475.26,1219.65 475.846,1219.66 476.433,1220.99 477.019,1222.28 477.606,1222.17 478.192,1223.39 478.778,1224.62 479.365,1225.66 479.951,1225.42 480.538,1224.01 481.124,1229.12 481.711,1227.53 482.297,1231.08 482.883,1230.74 483.47,1235.7 484.056,1232.7 484.643,1233.71 485.229,1234.75 485.815,1234.43 486.402,1235.31 486.988,1237.36 487.575,1236.71 488.161,1237.64 488.748,1241.09 489.334,1242.91 489.92,1245.7 490.507,1244.63 491.093,1243.85 491.68,1242.76 492.266,1242.22 492.852,1243.88 493.439,1243.21 494.025,1242.7 494.612,1242.18 495.198,1244.04 495.784,1243.59 496.371,1245.14 496.957,1245.85 497.544,1246.23 498.13,1247.81 498.717,1248.27 499.303,1247.41 499.889,1247.79 500.476,1246.98 501.062,1245.03 501.649,1245.59 502.235,1244.02 502.821,1247.98 503.408,1247.2 503.994,1246.51 504.581,1249.37 505.167,1249.71 505.753,1247.66 506.34,1246.65 506.926,1248.15 507.513,1248.67 508.099,1247.93 508.686,1247.14 509.272,1246.62 509.858,1247.15 510.445,1248.71 511.031,1247.89 511.618,1248.14 512.204,1245.02 512.79,1244.53 513.377,1243.79 513.963,1247.95 514.55,1248.18 515.136,1249.9 515.722,1250.3 516.309,1250.53 516.895,1249.57 517.482,1247.55 518.068,1245.4 518.655,1247.19 519.241,1245.12 519.827,1244.5 520.414,1244.1 521,1243.57 521.587,1244.13 522.173,1244.71 522.759,1243.85 523.346,1243.25 523.932,1242.74 524.519,1243.42 525.105,1244.06 525.691,1242.03 526.278,1243.83 526.864,1243.35 527.451,1242.72 528.037,1242.1 528.624,1240.49 529.21,1240.06 529.796,1238.31 530.383,1238.92 530.969,1237.34 531.556,1235.87 532.142,1234.56 532.728,1234.4 533.315,1234.33 533.901,1235.31 534.488,1234.13 535.074,1236.26 535.661,1237.11 536.247,1238.84 536.833,1237.52 537.42,1238.36 538.006,1238.87 538.593,1240.63 539.179,1242.41 539.765,1244.24 540.352,1244.68 540.938,1246.03 541.525,1245.51 542.111,1245.94 542.697,1245.04 543.284,1245.51 543.87,1243.46 544.457,1245.15 545.043,1243.3 545.63,1243.76 546.216,1242.91 546.802,1242.16 547.389,1241.62 547.975,1243.31 548.562,1240.27 549.148,1238.44 549.734,1239 550.321,1237.33 550.907,1239.21 551.494,1239.7 552.08,1240.12 552.666,1241.84 553.253,1241.07 553.839,1240.37 554.426,1240.83 555.012,1241.29 555.599,1240.65 556.185,1239.81 556.771,1235.8 557.358,1236.28 557.944,1235.77 558.531,1235.17 559.117,1238.43 559.703,1236.89 560.29,1236.48 560.876,1236.02 561.463,1233.39 562.049,1234.19 562.635,1230.44 563.222,1228.87 563.808,1228.84 564.395,1228.65 564.981,1230.87 565.568,1232.85 566.154,1234.91 566.74,1236.75 567.327,1237.54 567.913,1237.25 568.5,1237.62 569.086,1236.12 569.672,1235.46 570.259,1234.02 570.845,1235.89 571.432,1234.12 572.018,1232.48 572.605,1232.32 573.191,1231.86 573.777,1232.65 574.364,1233.5 574.95,1236.31 575.537,1234.97 576.123,1234.38 576.709,1231.6 577.296,1232.52 577.882,1236.92 578.469,1235.28 579.055,1232.29 579.641,1232.1 580.228,1231.56 580.814,1231.35 581.401,1230.79 581.987,1231.86 582.574,1231.51 583.16,1230.27 583.746,1231.26 584.333,1230.93 584.919,1231.75 585.506,1232.58 586.092,1231 586.678,1230.63 587.265,1232.63 587.851,1231.07 588.438,1230.7 589.024,1231.64 589.61,1230.13 590.197,1230.78 590.783,1230.44 591.37,1230.21 591.956,1228.67 592.543,1227.24 593.129,1226.87 593.715,1226.79 594.302,1228.79 594.888,1229.95 595.475,1229.75 596.061,1228.41 596.647,1229.47 597.234,1227.08 597.82,1226.57 598.407,1225.14 598.993,1226.01 599.579,1226.01 600.166,1225.87 600.752,1228.06 601.339,1228.77 601.925,1228.38 602.512,1226.12 603.098,1224.7 603.684,1224.63 604.271,1225.6 604.857,1226.36 605.444,1227.25 606.03,1227.04 606.616,1223.38 607.203,1224.51 607.789,1226.82 608.376,1226.56 608.962,1227.59 609.548,1226.21 610.135,1223.84 610.721,1222.66 611.308,1221.4 611.894,1221.26 612.481,1222.48 613.067,1222.5 613.653,1223.78 614.24,1223.59 614.826,1222.44 615.413,1222.71 615.999,1222.69 616.585,1221.66 617.172,1222.68 617.758,1223.46 618.345,1224.56 618.931,1225.68 619.518,1224.37 620.104,1224.27 620.69,1221.89 621.277,1224.34 621.863,1222.9 622.45,1225.19 623.036,1227.42 623.622,1225.68 624.209,1224.19 624.795,1223.95 625.382,1224.95 625.968,1221.36 626.554,1224.87 627.141,1225.71 627.727,1224.56 628.314,1225.51 628.9,1225.45 629.487,1225.09 630.073,1225.04 630.659,1224.77 631.246,1226.48 631.832,1226.35 632.419,1226.05 633.005,1224.72 633.591,1228.61 634.178,1227.05 634.764,1228 635.351,1226.53 635.937,1229.48 636.523,1231.23 637.11,1230.7 637.696,1230.09 638.283,1230.66 638.869,1230.21 639.456,1229.8 640.042,1228.15 640.628,1229.9 641.215,1231.79 641.801,1231.02 642.388,1230.39 642.974,1228.49 643.56,1226.8 644.147,1229.69 644.733,1229.15 645.32,1228.75 645.906,1229.64 646.492,1228.12 647.079,1224.19 647.665,1227.42 648.252,1227.08 648.838,1227.61 649.425,1227.37 650.011,1227.92 650.597,1232.96 651.184,1231.95 651.77,1230.12 652.357,1230.55 652.943,1230.91 653.529,1228.23 654.116,1226.78 654.702,1226.55 655.289,1224.1 655.875,1225.04 656.462,1224.88 657.048,1223.49 657.634,1221 658.221,1220.91 658.807,1221.69 659.394,1221.41 659.98,1223.46 660.566,1223.5 661.153,1224.18 661.739,1221.74 662.326,1222.44 662.912,1222.23 663.498,1219.74 664.085,1218.28 664.671,1218.32 665.258,1219.57 665.844,1219.48 666.431,1221.49 667.017,1221.53 667.603,1221.32 668.19,1223.55 668.776,1222.29 669.363,1222.2 669.949,1220.81 670.535,1220.27 671.122,1218 671.708,1217.79 672.295,1222.26 672.881,1223.27 673.467,1226.18 674.054,1225.55 674.64,1226.4 675.227,1224.77 675.813,1225.64 676.4,1225.2 676.986,1225.99 677.572,1224.24 678.159,1223.65 678.745,1221.95 679.332,1223 679.918,1222.89 680.504,1223.74 681.091,1224.39 681.677,1222.82 682.264,1222.5 682.85,1219.88 683.436,1219.49 684.023,1220.73 684.609,1219.48 685.196,1219.48 685.782,1216.85 686.369,1214.67 686.955,1217.12 687.541,1219.48 688.128,1219.42 688.714,1218.14 689.301,1218.07 689.887,1218.07 690.473,1214.84 691.06,1213.93 691.646,1213.06 692.233,1213.14 692.819,1213.6 693.405,1213.65 693.992,1213.89 694.578,1212.91 695.165,1217.85 695.751,1216.79 696.338,1216.79 696.924,1216.93 697.51,1218.34 698.097,1216.19 698.683,1216.34 699.27,1214.19 699.856,1213.28 700.442,1217.97 701.029,1217.76 701.615,1216.66 702.202,1216.85 702.788,1219.16 703.375,1219.19 703.961,1218.83 704.547,1220.96 705.134,1221.89 705.72,1218.09 706.307,1221.55 706.893,1220.15 707.479,1219.91 708.066,1222.08 708.652,1219.47 709.239,1218.35 709.825,1220.3 710.411,1221.11 710.998,1222.21 711.584,1219.53 712.171,1219.44 712.757,1221.44 713.344,1222.36 713.93,1222.23 714.516,1224.51 715.103,1223.03 715.689,1223.02 716.276,1219.25 716.862,1220.42 717.448,1219.91 718.035,1218.67 718.621,1219.68 719.208,1219.45 719.794,1219.25 720.38,1220.25 720.967,1220.42 721.553,1220.43 722.14,1220.37 722.726,1224.72 723.313,1227.64 723.899,1228.03 724.485,1226.15 725.072,1222.15 725.658,1222.51 726.245,1221.05 726.831,1219.78 727.417,1219.55 728.004,1220.55 728.59,1221.45 729.177,1222.49 729.763,1219.98 730.349,1221.92 730.936,1220.52 731.522,1220.14 732.109,1217.68 732.695,1216.38 733.282,1217.6 733.868,1217.53 734.454,1218.52 735.041,1217.3 735.627,1217.3 736.214,1218.47 736.8,1220.58 737.386,1219.14 737.973,1217.82 738.559,1215.28 739.146,1214.1 739.732,1212.18 740.318,1213.64 740.905,1212.76 741.491,1211.86 742.078,1213.29 742.664,1214.67 743.251,1214.8 743.837,1215.97 744.423,1217.14 745.01,1217 745.596,1215.68 746.183,1215.65 746.769,1216.87 747.355,1216.74 747.942,1215.35 748.528,1215.42 749.115,1215.23 749.701,1216.3 750.288,1215.2 750.874,1214.16 751.46,1214.34 752.047,1213.26 752.633,1214.43 753.22,1216.77 753.806,1214.25 754.392,1216.32 754.979,1213.81 755.565,1212.86 756.152,1214.35 756.738,1215.56 757.324,1215.49 757.911,1215.52 758.497,1217.72 759.084,1217.77 759.67,1219.05 760.257,1221.23 760.843,1221.1 761.429,1217.11 762.016,1214.74 762.602,1211.29 763.189,1210.41 763.775,1208.45 764.361,1208.83 764.948,1210.33 765.534,1208.43 766.121,1207.54 766.707,1210.42 767.293,1212.9 767.88,1213.2 768.466,1214.2 769.053,1214.31 769.639,1213.48 770.226,1213.62 770.812,1213.88 771.398,1213.94 771.985,1214.05 772.571,1213 773.158,1213.01 773.744,1214.27 774.33,1214.49 774.917,1214.55 775.503,1213.67 776.09,1214.96 776.676,1215.11 777.262,1215.19 777.849,1215.29 778.435,1214.02 779.022,1214.11 779.608,1214.34 780.195,1215.81 780.781,1218.11 781.367,1217.84 781.954,1220.27 782.54,1220.99 783.127,1221.87 783.713,1223.83 784.299,1223.39 784.886,1222.75 785.472,1222.54 786.059,1224.43 786.645,1226.24 787.232,1225.71 787.818,1226.34 788.404,1224.83 788.991,1222.02 789.577,1221.59 790.164,1219.98 790.75,1218.52 791.336,1218.13 791.923,1218.89 792.509,1219.79 793.096,1219.49 793.682,1220.63 794.268,1220.36 794.855,1221.06 795.441,1217.52 796.028,1214.16 796.614,1212.86 797.201,1214.29 797.787,1215.32 798.373,1215.1 798.96,1217.31 799.546,1218.31 800.133,1219.35 800.719,1221.5 801.305,1217.63 801.892,1218.59 802.478,1217.22 803.065,1214.72 803.651,1214.7 804.237,1214.83 804.824,1213.59 805.41,1214.65 805.997,1215.98 806.583,1216.84 807.17,1215.59 807.756,1215.32 808.342,1216.4 808.929,1215 809.515,1215.07 810.102,1213.63 810.688,1213.67 811.274,1213.53 811.861,1213.73 812.447,1211.25 813.034,1212.37 813.62,1213.57 814.206,1213.6 814.793,1211.28 815.379,1213.92 815.966,1213.92 816.552,1213.86 817.139,1214.94 817.725,1215.74 818.311,1215.69 818.898,1216.58 819.484,1216.43 820.071,1213.88 820.657,1213.86 821.243,1213.98 821.83,1212.83 822.416,1212.9 823.003,1214.08 823.589,1214.03 824.175,1213.87 824.762,1215.98 825.348,1215.94 825.935,1216.17 826.521,1214.76 827.108,1214.75 827.694,1212.63 828.28,1215.04 828.867,1213.64 829.453,1215.66 830.04,1213.35 830.626,1214.7 831.212,1211.18 831.799,1211.35 832.385,1211.41 832.972,1210.22 833.558,1210.64 834.145,1210.89 834.731,1209.95 835.317,1209.08 835.904,1209.29 836.49,1209.64 837.077,1209.77 837.663,1211.08 838.249,1209.97 838.836,1210.05 839.422,1210.16 840.009,1208.04 840.595,1209.37 841.181,1210.69 841.768,1209.75 842.354,1209.99 842.941,1208.05 843.527,1209.75 844.114,1207.9 844.7,1208.18 845.286,1209.6 845.873,1210.98 846.459,1208.67 847.046,1209.09 847.632,1209.44 848.218,1211.02 848.805,1213.36 849.391,1214.74 849.978,1214.94 850.564,1215.79 851.15,1215.55 851.737,1215.5 852.323,1214.2 852.91,1212.84 853.496,1213.98 854.083,1213.98 854.669,1216.12 855.255,1216.24 855.842,1216.17 856.428,1213.92 857.015,1214.15 857.601,1216.3 858.187,1218.59 858.774,1217.5 859.36,1219.62 859.947,1219.24 860.533,1217.74 861.119,1214.05 861.706,1212.67 862.292,1212.57 862.879,1212.95 863.465,1213.9 864.052,1212.67 864.638,1216.33 865.224,1215 865.811,1215.88 866.397,1215.69 866.984,1214.54 867.57,1215.57 868.156,1216.43 868.743,1213.86 869.329,1212.79 869.916,1213 870.502,1213.01 871.089,1211.91 871.675,1212.93 872.261,1214.35 872.848,1213.18 873.434,1214.27 874.021,1214.31 874.607,1214.11 875.193,1217.5 875.78,1218.54 876.366,1219.45 876.953,1215.74 877.539,1217.73 878.125,1217.55 878.712,1217.15 879.298,1215.62 879.885,1215.45 880.471,1214.06 881.058,1215.32 881.644,1216.43 882.23,1215.4 882.817,1216.45 883.403,1217.52 883.99,1215.9 884.576,1215.88 885.162,1219.11 885.749,1220.02 886.335,1218.65 886.922,1217.34 887.508,1218.26 888.094,1219.3 888.681,1217.69 889.267,1216.24 889.854,1213.59 890.44,1214.81 891.027,1214.41 891.613,1215 892.199,1216.02 892.786,1218.07 893.372,1217.69 893.959,1217.51 894.545,1217.03 895.131,1220.32 895.718,1218.85 896.304,1218.53 896.891,1217.14 897.477,1218.2 898.063,1217.97 898.65,1218.02 899.236,1218.85 899.823,1218.46 900.409,1218.33 900.996,1219.4 901.582,1217.71 902.168,1215.35 902.755,1214.09 903.341,1213.99 903.928,1212.96 904.514,1209.07 905.1,1209.16 905.687,1208.58 906.273,1207.61 906.86,1207.79 907.446,1210.26 908.032,1210.39 908.619,1210.74 909.205,1210.07 909.792,1209.32 910.378,1209.42 910.965,1209.45 911.551,1210.85 912.137,1206.35 912.724,1208.04 913.31,1208.09 913.897,1208.27 914.483,1207.64 915.069,1207.9 915.656,1209.23 916.242,1209.41 916.829,1209.34 917.415,1208.06 918.002,1207.1 918.588,1206.31 919.174,1206.97 919.761,1206.09 920.347,1207.79 920.934,1209.41 921.52,1209.67 922.106,1209.76 922.693,1207.76 923.279,1206.64 923.866,1204.83 924.452,1203.97 925.038,1204.4 925.625,1203.81 926.211,1205.45 926.798,1204.69 927.384,1206.26 927.971,1204.37 928.557,1206.11 929.143,1205.45 929.73,1206.94 930.316,1209.36 930.903,1210.73 931.489,1209.77 932.075,1209.88 932.662,1212.17 933.248,1213.34 933.835,1213.48 934.421,1213.24 935.007,1212.21 935.594,1211.39 936.18,1210.29 936.767,1211.42 937.353,1211.78 937.94,1211.39 938.526,1211.55 939.112,1211.73 939.699,1211.77 940.285,1214.11 940.872,1214.05 941.458,1214.08 942.044,1214.22 942.631,1215.3 943.217,1217.39 943.804,1216.15 944.39,1216.87 944.976,1214.47 945.563,1215.54 946.149,1214.19 946.736,1210.81 947.322,1209.65 947.909,1209.66 948.495,1212.05 949.081,1209.69 949.668,1210.05 950.254,1209.22 950.841,1207.25 951.427,1205.19 952.013,1204.55 952.6,1206.25 953.186,1207.62 953.773,1207.03 954.359,1207.47 954.945,1209.04 955.532,1207.1 956.118,1207.62 956.705,1210.12 957.291,1210.36 957.878,1209.68 958.464,1211.1 959.05,1211.21 959.637,1211.41 960.223,1213.89 960.81,1216.1 961.396,1216 961.982,1217.22 962.569,1215.67 963.155,1214.45 963.742,1215.46 964.328,1217.53 964.915,1215.94 965.501,1214.68 966.087,1215.75 966.674,1217.71 967.26,1217.35 967.847,1218.4 968.433,1220.53 969.019,1216.76 969.606,1216.76 970.192,1215.25 970.779,1215.15 971.365,1212.45 971.951,1214.64 972.538,1215.72 973.124,1215.72 973.711,1215.66 974.297,1215.64 974.884,1216.79 975.47,1217.61 976.056,1217.28 976.643,1217 977.229,1216.87 977.816,1218.07 978.402,1219.78 978.988,1216.23 979.575,1217.01 980.161,1215.69 980.748,1216.66 981.334,1215.32 981.92,1212.81 982.507,1211.56 983.093,1211.68 983.68,1209.4 984.266,1209.59 984.853,1210.85 985.439,1209.88 986.025,1211.23 986.612,1212.36 987.198,1215.85 987.785,1214.69 988.371,1215.51 988.957,1214.14 989.544,1214 990.13,1214.09 990.717,1214.02 991.303,1216.32 991.889,1214.91 992.476,1217.14 993.062,1214.8 993.649,1213.51 994.235,1212.15 994.822,1210.71 995.408,1211.95 995.994,1211.85 996.581,1211.89 997.167,1212.67 997.754,1211.24 998.34,1209.03 998.926,1210.26 999.513,1212.76 1000.1,1209.3 1000.69,1209.5 1001.27,1208.6 1001.86,1207.8 1002.44,1208.17 1003.03,1209.3 1003.62,1209.52 1004.2,1209.48 1004.79,1213.22 1005.38,1216.7 1005.96,1216.58 1006.55,1217.42 1007.14,1216.04 1007.72,1215.93 1008.31,1215.59 1008.9,1217.89 1009.48,1216.53 1010.07,1216.23 1010.65,1215.86 1011.24,1219.18 1011.83,1220 1012.41,1223.11 1013,1222.61 1013.59,1223.02 1014.17,1223.61 1014.76,1221.63 1015.35,1218.62 1015.93,1217.07 1016.52,1216.8 1017.11,1214.12 1017.69,1213.92 1018.28,1213.02 1018.86,1209.31 1019.45,1209.21 1020.04,1208.13 1020.62,1209.35 1021.21,1208.23 1021.8,1209.44 1022.38,1209.81 1022.97,1207.58 1023.56,1208.94 1024.14,1209.26 1024.73,1211.99 1025.32,1213.1 1025.9,1212.05 1026.49,1212.13 1027.07,1210.98 1027.66,1207.99 1028.25,1209.48 1028.83,1211.92 1029.42,1210.73 1030.01,1210.71 1030.59,1210.91 1031.18,1212.35 1031.77,1213.49 1032.35,1212.35 1032.94,1213.39 1033.52,1211.97 1034.11,1211.85 1034.7,1211.67 1035.28,1210.79 1035.87,1208.46 1036.46,1208.74 1037.04,1205.27 1037.63,1205.66 1038.22,1209.38 1038.8,1209.54 1039.39,1210.67 1039.98,1210.96 1040.56,1209.97 1041.15,1211.2 1041.73,1210.15 1042.32,1210.45 1042.91,1213.12 1043.49,1211.76 1044.08,1212.84 1044.67,1211.82 1045.25,1213.19 1045.84,1215.3 1046.43,1215.11 1047.01,1215.04 1047.6,1211.31 1048.19,1212.16 1048.77,1213.18 1049.36,1210.91 1049.94,1211.91 1050.53,1214.21 1051.12,1214.92 1051.7,1213.62 1052.29,1214.54 1052.88,1212.2 1053.46,1214.46 1054.05,1215.47 1054.64,1214.28 1055.22,1214.16 1055.81,1213.77 1056.39,1213.68 1056.98,1213.74 1057.57,1216.98 1058.15,1219.08 1058.74,1214.16 1059.33,1213.6 1059.91,1208.89 1060.5,1208.94 1061.09,1210.38 1061.67,1208.33 1062.26,1210.72 1062.85,1210.6 1063.43,1210.95 1064.02,1210.07 1064.6,1212.27 1065.19,1214.43 1065.78,1214.36 1066.36,1212.26 1066.95,1213.34 1067.54,1214.68 1068.12,1215.55 1068.71,1214.17 1069.3,1214.08 1069.88,1213.83 1070.47,1212.41 1071.06,1212.4 1071.64,1211.53 1072.23,1211.53 1072.81,1212.69 1073.4,1210.46 1073.99,1208.42 1074.57,1207.56 1075.16,1213.45 1075.75,1213.48 1076.33,1217.02 1076.92,1215.77 1077.51,1214.48 1078.09,1214.26 1078.68,1214.36 1079.26,1215.04 1079.85,1216.12 1080.44,1217.2 1081.02,1216.8 1081.61,1215.5 1082.2,1217.73 1082.78,1217.72 1083.37,1217.33 1083.96,1218.27 1084.54,1218.06 1085.13,1216.26 1085.72,1217.22 1086.3,1218.31 1086.89,1220.27 1087.47,1222.31 1088.06,1224.03 1088.65,1221.13 1089.23,1218.25 1089.82,1215.56 1090.41,1213.02 1090.99,1211.9 1091.58,1210.9 1092.17,1209.8 1092.75,1209.01 1093.34,1210.34 1093.93,1208.07 1094.51,1207.15 1095.1,1207.58 1095.68,1206.7 1096.27,1207.01 1096.86,1207.54 1097.44,1207.69 1098.03,1206.5 1098.62,1206.88 1099.2,1206.03 1099.79,1206.66 1100.38,1205.79 1100.96,1203.83 1101.55,1204.07 1102.14,1203.36 1102.72,1207.25 1103.31,1208.75 1103.89,1210.13 1104.48,1211.48 1105.07,1211.45 1105.65,1210.54 1106.24,1211.9 1106.83,1211.97 1107.41,1211.95 1108,1211.97 1108.59,1208.39 1109.17,1212.18 1109.76,1211.26 1110.34,1213.67 1110.93,1215.83 1111.52,1215.55 1112.1,1216.61 1112.69,1214.22 1113.28,1216.23 1113.86,1213.68 1114.45,1213.64 1115.04,1214.78 1115.62,1215.55 1116.21,1214.29 1116.8,1214.09 1117.38,1215.27 1117.97,1218.52 1118.55,1216.03 1119.14,1213.46 1119.73,1213.21 1120.31,1213.06 1120.9,1211.9 1121.49,1213 1122.07,1212.88 1122.66,1211.8 1123.25,1213.22 1123.83,1214.41 1124.42,1210.81 1125.01,1211.13 1125.59,1211.11 1126.18,1212.47 1126.76,1211.28 1127.35,1212.34 1127.94,1213.55 1128.52,1214.57 1129.11,1213.31 1129.7,1213.15 1130.28,1211.85 1130.87,1212.91 1131.46,1211.77 1132.04,1210.46 1132.63,1210.54 1133.21,1209.54 1133.8,1210.74 1134.39,1211.91 1134.97,1210.92 1135.56,1208.71 1136.15,1209 1136.73,1209.03 1137.32,1209.42 1137.91,1207.46 1138.49,1208.95 1139.08,1208.2 1139.67,1208.21 1140.25,1209.47 1140.84,1209.64 1141.42,1209.55 1142.01,1208.56 1142.6,1208.69 1143.18,1210.07 1143.77,1212.61 1144.36,1212.81 1144.94,1212.56 1145.53,1213.6 1146.12,1213.65 1146.7,1213.48 1147.29,1212.09 1147.88,1209.89 1148.46,1212.44 1149.05,1212.43 1149.63,1212.64 1150.22,1211.55 1150.81,1208.09 1151.39,1207.11 1151.98,1210.55 1152.57,1214.07 1153.15,1214.9 1153.74,1215.95 1154.33,1214.72 1154.91,1212.54 1155.5,1214.79 1156.09,1214.68 1156.67,1213.39 1157.26,1210.96 1157.84,1211.1 1158.43,1211.04 1159.02,1208.86 1159.6,1209.16 1160.19,1210.53 1160.78,1210.47 1161.36,1210.64 1161.95,1213.09 1162.54,1213.08 1163.12,1214.14 1163.71,1211.85 1164.29,1209.77 1164.88,1209.8 1165.47,1211.1 1166.05,1213.66 1166.64,1214.96 1167.23,1214.8 1167.81,1215.74 1168.4,1213.13 1168.99,1210.97 1169.57,1207.68 1170.16,1206.85 1170.75,1209.23 1171.33,1209.46 1171.92,1209.72 1172.5,1211.08 1173.09,1210.04 1173.68,1211.19 1174.26,1211.23 1174.85,1206.93 1175.44,1207.45 1176.02,1208.86 1176.61,1210.14 1177.2,1211.58 1177.78,1210.4 1178.37,1209.21 1178.96,1210.69 1179.54,1210.84 1180.13,1209.63 1180.71,1208.63 1181.3,1209.05 1181.89,1208.14 1182.47,1208.26 1183.06,1207.38 1183.65,1209.85 1184.23,1207.81 1184.82,1205.65 1185.41,1204.98 1185.99,1205.46 1186.58,1205.98 1187.16,1207.59 1187.75,1208.99 1188.34,1207.97 1188.92,1209.23 1189.51,1209.11 1190.1,1208.25 1190.68,1211.91 1191.27,1210.88 1191.86,1212.34 1192.44,1213.7 1193.03,1214.76 1193.62,1214.45 1194.2,1215.51 1194.79,1215.56 1195.37,1218.75 1195.96,1217.29 1196.55,1218.12 1197.13,1214.27 1197.72,1216.64 1198.31,1216.27 1198.89,1218.19 1199.48,1219 1200.07,1221.02 1200.65,1220.63 1201.24,1220.1 1201.83,1219.7 1202.41,1220.49 1203,1220.03 1203.58,1219.49 1204.17,1217.93 1204.76,1219.82 1205.34,1220.52 1205.93,1219.21 1206.52,1218.93 1207.1,1219.58 1207.69,1221.71 1208.28,1219.05 1208.86,1217.4 1209.45,1217 1210.03,1216.46 1210.62,1215.14 1211.21,1214.98 1211.79,1213.67 1212.38,1214.62 1212.97,1214.64 1213.55,1213.63 1214.14,1218.08 1214.73,1218.09 1215.31,1216.47 1215.9,1221.94 1216.49,1221.76 1217.07,1224.55 1217.66,1224.89 1218.24,1224.26 1218.83,1220.14 1219.42,1220.84 1220,1219.35 1220.59,1218.72 1221.18,1219.68 1221.76,1214.5 1222.35,1216.53 1222.94,1217.4 1223.52,1214.75 1224.11,1213.41 1224.7,1213.41 1225.28,1215.14 1225.87,1212.56 1226.45,1213.64 1227.04,1217.99 1227.63,1218.89 1228.21,1218.65 1228.8,1217.25 1229.39,1215.77 1229.97,1214.37 1230.56,1214.44 1231.15,1214.4 1231.73,1215.49 1232.32,1213.94 1232.91,1213.84 1233.49,1210.36 1234.08,1210.23 1234.66,1210.43 1235.25,1211.23 1235.84,1214.8 1236.42,1212.42 1237.01,1212.16 1237.6,1215.32 1238.18,1211.86 1238.77,1209.54 1239.36,1207.22 1239.94,1207.35 1240.53,1211.06 1241.11,1209.77 1241.7,1207.77 1242.29,1209.07 1242.87,1207.88 1243.46,1207.87 1244.05,1208.27 1244.63,1208.47 1245.22,1207.33 1245.81,1207.65 1246.39,1206.71 1246.98,1209.32 1247.57,1210.51 1248.15,1209.59 1248.74,1209.63 1249.32,1212.06 1249.91,1211.03 1250.5,1210.83 1251.08,1209.88 1251.67,1212.36 1252.26,1211.25 1252.84,1212.45 1253.43,1212.43 1254.02,1212.67 1254.6,1212.65 1255.19,1211.43 1255.78,1211.59 1256.36,1210.39 1256.95,1210.54 1257.53,1210.66 1258.12,1210.61 1258.71,1209.78 1259.29,1209.93 1259.88,1211.27 1260.47,1209.05 1261.05,1206.99 1261.64,1207.4 1262.23,1206.67 1262.81,1206.77 1263.4,1207.15 1263.98,1209.66 1264.57,1211.07 1265.16,1212.26 1265.74,1211.07 1266.33,1211.18 1266.92,1210.01 1267.5,1208.01 1268.09,1209.25 1268.68,1210.65 1269.26,1211.98 1269.85,1212.1 1270.44,1212.05 1271.02,1213.34 1271.61,1215.45 1272.19,1214.15 1272.78,1213.04 1273.37,1212.96 1273.95,1212.94 1274.54,1215.04 1275.13,1214.54 1275.71,1211.21 1276.3,1211.21 1276.89,1211.2 1277.47,1210.15 1278.06,1210.21 1278.65,1210.38 1279.23,1210.43 1279.82,1208.47 1280.4,1209.92 1280.99,1210.9 1281.58,1210.86 1282.16,1210.99 1282.75,1207.79 1283.34,1207.96 1283.92,1207.02 1284.51,1207.22 1285.1,1203.94 1285.68,1201.96 1286.27,1205.83 1286.86,1208.17 1287.44,1207.38 1288.03,1206.51 1288.61,1209.02 1289.2,1209.04 1289.79,1207.83 1290.37,1206.9 1290.96,1205.96 1291.55,1209.37 1292.13,1210.5 1292.72,1210.49 1293.31,1210.77 1293.89,1210.72 1294.48,1212.05 1295.06,1213.24 1295.65,1212.08 1296.24,1212.09 1296.82,1211.12 1297.41,1211.2 1298,1212.26 1298.58,1213.23 1299.17,1212.16 1299.76,1211.19 1300.34,1211.32 1300.93,1210.12 1301.52,1211.28 1302.1,1208.9 1302.69,1207.88 1303.27,1208.26 1303.86,1208.34 1304.45,1207.48 1305.03,1204.44 1305.62,1205.87 1306.21,1207.21 1306.79,1208.31 1307.38,1206.19 1307.97,1206.51 1308.55,1207.82 1309.14,1206.98 1309.73,1207.51 1310.31,1208.79 1310.9,1209.85 1311.48,1207.6 1312.07,1205.62 1312.66,1203.73 1313.24,1204.14 1313.83,1205.96 1314.42,1207.54 1315,1211.24 1315.59,1211.48 1316.18,1209.22 1316.76,1209.45 1317.35,1210.39 1317.93,1209.38 1318.52,1209.23 1319.11,1209.57 1319.69,1211.97 1320.28,1212.13 1320.87,1212.25 1321.45,1214.62 1322.04,1214.82 1322.63,1214.75 1323.21,1212.58 1323.8,1213.77 1324.39,1213.81 1324.97,1214.78 1325.56,1213.38 1326.14,1212.14 1326.73,1212.42 1327.32,1210.05 1327.9,1212.46 1328.49,1213.48 1329.08,1219.11 1329.66,1217.61 1330.25,1217.18 1330.84,1213.19 1331.42,1211.89 1332.01,1210.63 1332.6,1215.08 1333.18,1213.83 1333.77,1215.04 1334.35,1214.94 1334.94,1214.73 1335.53,1213.46 1336.11,1214.4 1336.7,1214.24 1337.29,1213.98 1337.87,1211.46 1338.46,1209.26 1339.05,1209.35 1339.63,1207.18 1340.22,1209.89 1340.8,1211.27 1341.39,1210.21 1341.98,1210.51 1342.56,1210.73 1343.15,1207.5 1343.74,1207.94 1344.32,1207.98 1344.91,1205.93 1345.5,1207.4 1346.08,1210.04 1346.67,1212.68 1347.26,1212.94 1347.84,1211.79 1348.43,1209.63 1349.01,1209.93 1349.6,1211.47 1350.19,1210.43 1350.77,1210.28 1351.36,1211.59 1351.95,1211.56 1352.53,1211.36 1353.12,1210.23 1353.71,1211.53 1354.29,1211.59 1354.88,1213.88 1355.47,1216.22 1356.05,1217.02 1356.64,1216.86 1357.22,1217.63 1357.81,1217.28 1358.4,1219.36 1358.98,1219.18 1359.57,1218.95 1360.16,1218.42 1360.74,1217.13 1361.33,1216.9 1361.92,1215.53 1362.5,1217.63 1363.09,1217.37 1363.68,1215.92 1364.26,1214.7 1364.85,1214.49 1365.43,1214.26 1366.02,1217.26 1366.61,1216.95 1367.19,1217.78 1367.78,1218.45 1368.37,1217.18 1368.95,1214.83 1369.54,1214.6 1370.13,1212.14 1370.71,1211.82 1371.3,1211.89 1371.88,1213.15 1372.47,1212.96 1373.06,1211.78 1373.64,1211.85 1374.23,1210.78 1374.82,1209.76 1375.4,1209.93 1375.99,1211.26 1376.58,1213.69 1377.16,1214.71 1377.75,1216.87 1378.34,1217.86 1378.92,1217.42 1379.51,1216.99 1380.09,1216.65 1380.68,1216.53 1381.27,1216.26 1381.85,1214.81 1382.44,1213.41 1383.03,1213.32 1383.61,1213.29 1384.2,1213.31 1384.79,1213.3 1385.37,1215.3 1385.96,1216.1 1386.55,1214.54 1387.13,1214.49 1387.72,1216.64 1388.3,1215.17 1388.89,1212.89 1389.48,1213.04 1390.06,1214.17 1390.65,1212.89 1391.24,1212.68 1391.82,1212.57 1392.41,1212.48 1393,1214.55 1393.58,1216.45 1394.17,1212.65 1394.75,1212.62 1395.34,1211.58 1395.93,1214.08 1396.51,1214.94 1397.1,1213.71 1397.69,1213.89 1398.27,1211.52 1398.86,1211.61 1399.45,1210.5 1400.03,1210.57 1400.62,1210.54 1401.21,1211.85 1401.79,1213.04 1402.38,1212.97 1402.96,1213.12 1403.55,1213.06 1404.14,1210.6 1404.72,1212.03 1405.31,1214.41 1405.9,1214.27 1406.48,1213.07 1407.07,1214.04 1407.66,1215.13 1408.24,1214.82 1408.83,1215.61 1409.42,1213.05 1410,1213 1410.59,1213 1411.17,1210.62 1411.76,1211.84 1412.35,1214.04 1412.93,1214.97 1413.52,1213.73 1414.11,1215.79 1414.69,1215.47 1415.28,1216.48 1415.87,1212.91 1416.45,1212 1417.04,1215.44 1417.63,1215.06 1418.21,1214.81 1418.8,1215.65 1419.38,1217.45 1419.97,1218.13 1420.56,1217.71 1421.14,1218.79 1421.73,1217.15 1422.32,1217.99 1422.9,1218.67 1423.49,1217.16 1424.08,1219.04 1424.66,1219.65 1425.25,1220.47 1425.83,1217.59 1426.42,1217.06 1427.01,1216.72 1427.59,1216.23 1428.18,1216.27 1428.77,1216.08 1429.35,1215.73 1429.94,1216.6 1430.53,1213.99 1431.11,1210.68 1431.7,1207.28 1432.29,1208.58 1432.87,1206.62 1433.46,1210.19 1434.04,1208.04 1434.63,1208.11 1435.22,1207.14 1435.8,1205.12 1436.39,1203.01 1436.98,1204.75 1437.56,1205.12 1438.15,1204.21 1438.74,1205.85 1439.32,1206.13 1439.91,1206.56 1440.5,1205.42 1441.08,1203.56 1441.67,1202.77 1442.25,1203.23 1442.84,1204.91 1443.43,1207.71 1444.01,1208.02 1444.6,1209.48 1445.19,1211.73 1445.77,1209.43 1446.36,1208.38 1446.95,1208.63 1447.53,1209.86 1448.12,1208.89 1448.7,1210.34 1449.29,1211.47 1449.88,1211.56 1450.46,1210.41 1451.05,1205.97 1451.64,1207.91 1452.22,1207.18 1452.81,1208.39 1453.4,1208.67 1453.98,1207.91 1454.57,1209.08 1455.16,1207.11 1455.74,1206.14 1456.33,1211.01 1456.91,1214.62 1457.5,1214.56 1458.09,1215.59 1458.67,1213.18 1459.26,1215.09 1459.85,1216.19 1460.43,1219.24 1461.02,1217.71 1461.61,1216.38 1462.19,1216.18 1462.78,1214.76 1463.37,1215.46 1463.95,1217.46 1464.54,1216.37 1465.12,1219.62 1465.71,1223.7 1466.3,1222.95 1466.88,1221.26 1467.47,1219.65 1468.06,1220.39 1468.64,1222.02 1469.23,1220.36 1469.82,1219.87 1470.4,1218.14 1470.99,1215.42 1471.57,1215.33 1472.16,1215.27 1472.75,1217.13 1473.33,1216.78 1473.92,1215.47 1474.51,1214.3 1475.09,1214.19 1475.68,1214.06 1476.27,1212.62 1476.85,1210.31 1477.44,1208.21 1478.03,1207.31 1478.61,1207.47 1479.2,1206.74 1479.78,1204.9 1480.37,1204.03 1480.96,1204.37 1481.54,1206.84 1482.13,1208.22 1482.72,1208.66 1483.3,1208.77 1483.89,1208.95 1484.48,1210.41 1485.06,1211.99 1485.65,1211.03 1486.24,1212.1 1486.82,1213.22 1487.41,1213.43 1487.99,1215.46 1488.58,1216.4 1489.17,1213.97 1489.75,1214.89 1490.34,1212.3 1490.93,1213.08 1491.51,1210.78 1492.1,1212.21 1492.69,1209.02 1493.27,1206.97 1493.86,1207.11 1494.45,1210.73 1495.03,1213.09 1495.62,1213.13 1496.2,1211.94 1496.79,1208.56 1497.38,1209.88 1497.96,1212.16 1498.55,1210.94 1499.14,1211.26 1499.72,1211.44 1500.31,1211.64 1500.9,1210.64 1501.48,1211.86 1502.07,1209.68 1502.65,1210.91 1503.24,1211.15 1503.83,1211.04 1504.41,1212.51 1505,1212.45 1505.59,1212.34 1506.17,1212.31 1506.76,1211.01 1507.35,1212.19 1507.93,1213.34 1508.52,1210.91 1509.11,1209.81 1509.69,1209.82 1510.28,1207.29 1510.86,1206.38 1511.45,1209.98 1512.04,1210.24 1512.62,1210.49 1513.21,1210.76 1513.8,1210.78 1514.38,1211.57 1514.97,1209.43 1515.56,1209.75 1516.14,1209.77 1516.73,1211.13 1517.32,1208.99 1517.9,1210.18 1518.49,1211.48 1519.07,1213.84 1519.66,1214.68 1520.25,1213.65 1520.83,1211.24 1521.42,1212.38 1522.01,1213.42 1522.59,1215.72 1523.18,1214.57 1523.77,1213.11 1524.35,1214.3 1524.94,1215.29 1525.52,1213.91 1526.11,1213.75 1526.7,1214.84 1527.28,1214.66 1527.87,1214.67 1528.46,1213.46 1529.04,1214.69 1529.63,1214.52 1530.22,1213.38 1530.8,1213.29 1531.39,1215.27 1531.98,1217.7 1532.56,1215.13 1533.15,1212.68 1533.73,1207.94 1534.32,1206.97 1534.91,1204.96 1535.49,1207.53 1536.08,1207.89 1536.67,1208.37 1537.25,1208.27 1537.84,1208.63 1538.43,1208.73 1539.01,1209.84 1539.6,1209.61 1540.19,1207.5 1540.77,1208.93 1541.36,1210.14 1541.94,1207.84 1542.53,1208.19 1543.12,1208.49 1543.7,1212.21 1544.29,1211.05 1544.88,1209.95 1545.46,1211.4 1546.05,1213.91 1546.64,1211.33 1547.22,1213.29 1547.81,1210.03 1548.4,1210.12 1548.98,1210.29 1549.57,1211.42 1550.15,1211.4 1550.74,1211.39 1551.33,1211.34 1551.91,1212.6 1552.5,1211.58 1553.09,1215.18 1553.67,1213.69 1554.26,1212.6 1554.85,1216.05 1555.43,1214.77 1556.02,1215.57 1556.6,1216.49 1557.19,1214.9 1557.78,1213.6 1558.36,1214.68 1558.95,1214.81 1559.54,1215.62 1560.12,1219.19 1560.71,1218.94 1561.3,1217.5 1561.88,1216.11 1562.47,1216.18 1563.06,1215.63 1563.64,1215.48 1564.23,1215.22 1564.81,1213.94 1565.4,1213.91 1565.99,1212.91 1566.57,1215.03 1567.16,1214.71 1567.75,1211.39 1568.33,1210.27 1568.92,1210.5 1569.51,1210.27 1570.09,1211.49 1570.68,1211.26 1571.27,1206.76 1571.85,1206.01 1572.44,1206.24 1573.02,1205.12 1573.61,1203.19 1574.2,1203.72 1574.78,1204.24 1575.37,1203.52 1575.96,1204.19 1576.54,1205.87 1577.13,1206.3 1577.72,1204.53 1578.3,1205.07 1578.89,1208.94 1579.47,1207.95 1580.06,1208.29 1580.65,1207.41 1581.23,1204.23 1581.82,1204.94 1582.41,1205.34 1582.99,1204.74 1583.58,1204.98 1584.17,1207.65 1584.75,1206.44 1585.34,1207.88 1585.93,1205.75 1586.51,1202.55 1587.1,1203.07 1587.68,1203.63 1588.27,1201.77 1588.86,1202.43 1589.44,1200.76 1590.03,1199.88 1590.62,1200.62 1591.2,1200.11 1591.79,1200.61 1592.38,1201.01 1592.96,1200.4 1593.55,1202.35 1594.14,1201.61 1594.72,1204.78 1595.31,1205.32 1595.89,1204.52 1596.48,1207.06 1597.07,1208.31 1597.65,1208.58 1598.24,1208.78 1598.83,1211.24 1599.41,1213.65 1600,1212.47 1600.59,1210.2 1601.17,1211.56 1601.76,1215.3 1602.34,1215.16 1602.93,1216.28 1603.52,1216.97 1604.1,1217.1 1604.69,1218.09 1605.28,1216.63 1605.86,1217.38 1606.45,1215.7 1607.04,1217.97 1607.62,1217.53 1608.21,1216.34 1608.8,1215.07 1609.38,1214.64 1609.97,1215.58 1610.55,1210.66 1611.14,1210.71 1611.73,1209.48 1612.31,1208.57 1612.9,1208.38 1613.49,1210.82 1614.07,1212.16 1614.66,1211.9 1615.25,1211.84 1615.83,1209.79 1616.42,1209.83 1617.01,1207.59 1617.59,1207.9 1618.18,1206.86 1618.76,1209.21 1619.35,1209.49 1619.94,1209.9 1620.52,1210.05 1621.11,1210.34 1621.7,1208.16 1622.28,1208.71 1622.87,1206.79 1623.46,1209.27 1624.04,1209.49 1624.63,1210.69 1625.22,1209.87 1625.8,1209.9 1626.39,1211.18 1626.97,1210.28 1627.56,1211.51 1628.15,1210.41 1628.73,1212.66 1629.32,1213.77 1629.91,1213.68 1630.49,1215.85 1631.08,1215.62 1631.67,1214.21 1632.25,1214.05 1632.84,1214.1 1633.42,1215.07 1634.01,1214.8 1634.6,1217.88 1635.18,1218.76 1635.77,1218.49 1636.36,1218.23 1636.94,1217.87 1637.53,1217.45 1638.12,1216.03 1638.7,1215.96 1639.29,1216.64 1639.88,1216.33 1640.46,1217.29 1641.05,1218.29 1641.63,1216.87 1642.22,1216.62 1642.81,1216.37 1643.39,1218.34 1643.98,1216.88 1644.57,1216.51 1645.15,1217.41 1645.74,1216.03 1646.33,1216.93 1646.91,1216.54 1647.5,1216.28 1648.09,1217.17 1648.67,1213.62 1649.26,1214.74 1649.84,1214.73 1650.43,1213.89 1651.02,1215.91 1651.6,1213.59 1652.19,1214.88 1652.78,1215.96 1653.36,1216.86 1653.95,1216.64 1654.54,1218.63 1655.12,1219.34 1655.71,1218.88 1656.29,1217.3 1656.88,1217.93 1657.47,1217.31 1658.05,1217.1 1658.64,1217.63 1659.23,1217.43 1659.81,1219.45 1660.4,1219.89 1660.99,1220.56 1661.57,1221.14 1662.16,1219.37 1662.75,1218.76 1663.33,1218.37 1663.92,1217.86 1664.5,1217.3 1665.09,1217.99 1665.68,1217.87 1666.26,1219.95 1666.85,1217.04 1667.44,1216.85 1668.02,1215.4 1668.61,1216.17 1669.2,1216.82 1669.78,1218.56 1670.37,1214.53 1670.96,1214.29 1671.54,1214.29 1672.13,1215.06 1672.71,1214.73 1673.3,1213.28 1673.89,1211.09 1674.47,1211.23 1675.06,1212.35 1675.65,1207.97 1676.23,1209.4 1676.82,1206.27 1677.41,1206.5 1677.99,1209.15 1678.58,1208.16 1679.17,1213.11 1679.75,1211.77 1680.34,1211.49 1680.92,1214.9 1681.51,1213.67 1682.1,1213.6 1682.68,1214.89 1683.27,1214.74 1683.86,1212.3 1684.44,1208.98 1685.03,1210.11 1685.62,1206.71 1686.2,1205.56 1686.79,1207.02 1687.37,1203.57 1687.96,1202.93 1688.55,1203.5 1689.13,1206.04 1689.72,1207.58 1690.31,1205.22 1690.89,1204.41 1691.48,1204.63 1692.07,1206.06 1692.65,1207.32 1693.24,1206.39 1693.83,1209.12 1694.41,1210.4 1695,1211.61 1695.58,1210.4 1696.17,1209.27 1696.76,1211.51 1697.34,1208.97 1697.93,1206.6 1698.52,1207.06 1699.1,1206.08 1699.69,1205.16 1700.28,1204.46 1700.86,1207.11 1701.45,1209.57 1702.04,1208.84 1702.62,1211.19 1703.21,1211.49 1703.79,1213.73 1704.38,1217.98 1704.97,1221.04 1705.55,1221.57 1706.14,1223.38 1706.73,1222.85 1707.31,1224.62 1707.9,1222.7 1708.49,1220.84 1709.07,1219.19 1709.66,1217.9 1710.24,1217.38 1710.83,1214.82 1711.42,1214.57 1712,1215.44 1712.59,1214.13 1713.18,1210.6 1713.76,1212.02 1714.35,1210.95 1714.94,1210.84 1715.52,1208.45 1716.11,1206.52 1716.7,1206.87 1717.28,1207.04 1717.87,1205.96 1718.45,1207.75 1719.04,1205.83 1719.63,1210.77 1720.21,1212.11 1720.8,1213.24 1721.39,1212.3 1721.97,1209.09 1722.56,1207.94 1723.15,1209.26 1723.73,1210.57 1724.32,1208.19 1724.91,1208.49 1725.49,1206.37 1726.08,1206.64 1726.66,1207.06 1727.25,1208.48 1727.84,1208.55 1728.42,1209.69 1729.01,1213.18 1729.6,1212.95 1730.18,1212.97 1730.77,1209.58 1731.36,1209.75 1731.94,1211.05 1732.53,1209.65 1733.11,1207.52 1733.7,1209.15 1734.29,1209.29 1734.87,1209.51 1735.46,1210.92 1736.05,1211.1 1736.63,1208.81 1737.22,1208.1 1737.81,1209.56 1738.39,1206.34 1738.98,1207.86 1739.57,1210.42 1740.15,1212.47 1740.74,1213.54 1741.32,1213.61 1741.91,1213.36 1742.5,1213.41 1743.08,1214.56 1743.67,1212.02 1744.26,1211.07 1744.84,1210.85 1745.43,1211.06 1746.02,1211.25 1746.6,1214.91 1747.19,1215.64 1747.78,1217.81 1748.36,1218.45 1748.95,1218.09 1749.53,1215.5 1750.12,1214.21 1750.71,1211.68 1751.29,1208.57 1751.88,1208.63 1752.47,1208.76 1753.05,1211.35 1753.64,1209.08 1754.23,1208.04 1754.81,1207.47 1755.4,1208.93 1755.99,1209.57 1756.57,1210.76 1757.16,1210.66 1757.74,1214.22 1758.33,1213.88 1758.92,1211.78 1759.5,1213.94 1760.09,1214.87 1760.68,1211.23 1761.26,1212.26 1761.85,1214.28 1762.44,1212.88 1763.02,1213.98 1763.61,1213.76 1764.19,1214.67 1764.78,1214.76 1765.37,1214.7 1765.95,1213.41 1766.54,1214.31 1767.13,1213.03 1767.71,1212.97 1768.3,1212 1768.89,1212.09 1769.47,1212.33 1770.06,1211.06 1770.65,1210.91 1771.23,1209.73 1771.82,1208.65 1772.4,1208.88 1772.99,1210.19 1773.58,1209.04 1774.16,1209.16 1774.75,1208.78 1775.34,1208.92 1775.92,1210.41 1776.51,1206.79 1777.1,1207.11 1777.68,1208.4 1778.27,1209.38 1778.86,1207.28 1779.44,1208.69 1780.03,1208.64 1780.61,1208.7 1781.2,1206.44 1781.79,1205.72 1782.37,1205.97 1782.96,1205.29 1783.55,1204.62 1784.13,1206.26 1784.72,1207.59 1785.31,1206.74 1785.89,1208.16 1786.48,1208.19 1787.06,1208.47 1787.65,1207.55 1788.24,1207.5 1788.82,1205.29 1789.41,1207.93 1790,1209.17 1790.58,1211.51 1791.17,1210.28 1791.76,1210.47 1792.34,1210.55 1792.93,1210.74 1793.52,1211.83 1794.1,1209.69 1794.69,1211.05 1795.27,1209.11 1795.86,1207.86 1796.45,1206.94 1797.03,1207.25 1797.62,1207.4 1798.21,1207.62 1798.79,1206.53 1799.38,1205.92 1799.97,1206.3 1800.55,1208.99 1801.14,1210.31 1801.73,1209.14 1802.31,1211.71 1802.9,1211.74 1803.48,1211.79 1804.07,1210.92 1804.66,1211.07 1805.24,1211.9 1805.83,1213.25 1806.42,1213.38 1807,1214.4 1807.59,1217.67 1808.18,1215.04 1808.76,1215.13 1809.35,1213.8 1809.94,1212.49 1810.52,1214.65 1811.11,1214.6 1811.69,1213.38 1812.28,1216.57 1812.87,1217.4 1813.45,1217.13 1814.04,1217.69 1814.63,1215.12 1815.21,1214.01 1815.8,1213.86 1816.39,1213.74 1816.97,1214.79 1817.56,1213.59 1818.14,1213.56 1818.73,1212.13 1819.32,1214.36 1819.9,1212.12 1820.49,1214.42 1821.08,1211.92 1821.66,1210.6 1822.25,1211.5 1822.84,1211.55 1823.42,1214.88 1824.01,1214.96 1824.6,1214.64 1825.18,1214.53 1825.77,1215.61 1826.35,1213.02 1826.94,1215.29 1827.53,1217.41 1828.11,1217.09 1828.7,1215.68 1829.29,1217.42 1829.87,1218.43 1830.46,1218.03 1831.05,1218.12 1831.63,1221.06 1832.22,1220.65 1832.81,1219.29 1833.39,1220.06 1833.98,1219.91 1834.56,1219.31 1835.15,1219.13 1835.74,1218.76 1836.32,1219.45 1836.91,1221.23 1837.5,1221.76 1838.08,1221.2 1838.67,1220.63 1839.26,1222.38 1839.84,1220.68 1840.43,1218.98 1841.01,1220.88 1841.6,1221.45 1842.19,1218.61 1842.77,1216.06 1843.36,1215.74 1843.95,1212 1844.53,1214.2 1845.12,1213.95 1845.71,1213.74 1846.29,1212.61 1846.88,1211.58 1847.47,1210.43 1848.05,1207 1848.64,1203.84 1849.22,1204.06 1849.81,1204.38 1850.4,1203.6 1850.98,1201.75 1851.57,1202.23 1852.16,1203.9 1852.74,1204.48 1853.33,1206.08 1853.92,1207.53 1854.5,1209.1 1855.09,1207.86 1855.68,1206.88 1856.26,1208.15 1856.85,1211.89 1857.43,1209.66 1858.02,1210.82 1858.61,1212.01 1859.19,1210.94 1859.78,1212.08 1860.37,1212.15 1860.95,1210.76 1861.54,1211.99 1862.13,1212.35 1862.71,1211.22 1863.3,1210.09 1863.88,1210.17 1864.47,1208.12 1865.06,1209.53 1865.64,1213.04 1866.23,1213.23 1866.82,1212.24 1867.4,1208.85 1867.99,1209.16 1868.58,1209.55 1869.16,1209.97 1869.75,1212.38 1870.34,1212.41 1870.92,1211.32 1871.51,1206.59 1872.09,1204.62 1872.68,1206.15 1873.27,1206.44 1873.85,1206.74 1874.44,1207.1 1875.03,1207.47 1875.61,1207.87 1876.2,1208.26 1876.79,1210.84 1877.37,1211 1877.96,1212.07 1878.55,1213.06 1879.13,1212.94 1879.72,1211.67 1880.3,1211.83 1880.89,1212.67 1881.48,1210.19 1882.06,1210.38 1882.65,1211.74 1883.24,1212.16 1883.82,1213.3 1884.41,1213.12 1885,1211.9 1885.58,1211.76 1886.17,1212.88 1886.76,1212.68 1887.34,1213.8 1887.93,1216.17 1888.51,1218.17 1889.1,1220.06 1889.69,1220.71 1890.27,1220.31 1890.86,1222.03 1891.45,1220.5 1892.03,1218.9 1892.62,1215.13 1893.21,1211.8 1893.79,1210.76 1894.38,1210.76 1894.96,1210.56 1895.55,1211.86 1896.14,1209.45 1896.72,1207.47 1897.31,1207.81 1897.9,1205.51 1898.48,1203.34 1899.07,1203.96 1899.66,1204.62 1900.24,1204.91 1900.83,1206.31 1901.42,1206.54 1902,1206.98 1902.59,1205.9 1903.17,1207.5 1903.76,1207.76 1904.35,1208.16 1904.93,1208.38 1905.52,1207.52 1906.11,1206.79 1906.69,1207.19 1907.28,1209.8 1907.87,1209.74 1908.45,1211 1909.04,1212.15 1909.63,1211.21 1910.21,1212.38 1910.8,1211.15 1911.38,1211.12 1911.97,1210.99 1912.56,1211.16 1913.14,1212.36 1913.73,1213.61 1914.32,1214.55 1914.9,1214.51 1915.49,1214.29 1916.08,1215.01 1916.66,1213.79 1917.25,1213.66 1917.83,1213.53 1918.42,1212.46 1919.01,1214.84 1919.59,1213.76 1920.18,1212.62 1920.77,1212.63 1921.35,1213.71 1921.94,1209.99 1922.53,1209.25 1923.11,1211.55 1923.7,1211.71 1924.29,1210.76 1924.87,1209.52 1925.46,1208.69 1926.04,1211.26 1926.63,1209.49 1927.22,1209.92 1927.8,1208.99 1928.39,1207.95 1928.98,1208.37 1929.56,1211.87 1930.15,1211.94 1930.74,1209.54 1931.32,1212.14 1931.91,1212.19 1932.5,1213.32 1933.08,1214.4 1933.67,1214.07 1934.25,1215.13 1934.84,1216.08 1935.43,1216.92 1936.01,1215.59 1936.6,1214.31 1937.19,1214.2 1937.77,1213.6 1938.36,1215.82 1938.95,1215.71 1939.53,1215.52 1940.12,1216.43 1940.71,1216.25 1941.29,1214.9 1941.88,1215.74 1942.46,1215.4 1943.05,1216.23 1943.64,1218.32 1944.22,1217.86 1944.81,1216.34 1945.4,1216.16 1945.98,1217.28 1946.57,1218.09 1947.16,1216.75 1947.74,1211.89 1948.33,1214.22 1948.91,1213.09 1949.5,1214.07 1950.09,1215 1950.67,1211.59 1951.26,1209.25 1951.85,1209.26 1952.43,1210.64 1953.02,1211.83 1953.61,1211.77 1954.19,1210.64 1954.78,1211.85 1955.37,1211.85 1955.95,1214.14 1956.54,1212.77 1957.12,1212.5 1957.71,1212.3 1958.3,1212.47 1958.88,1212.32 1959.47,1213.26 1960.06,1216.61 1960.64,1217.43 1961.23,1216.96 1961.82,1216.66 1962.4,1214.99 1962.99,1214.83 1963.58,1213.3 1964.16,1212.04 1964.75,1213.17 1965.33,1212.85 1965.92,1211.76 1966.51,1212.95 1967.09,1212.92 1967.68,1212.89 1968.27,1212.66 1968.85,1212.55 1969.44,1210.43 1970.03,1209.5 1970.61,1210.77 1971.2,1209.81 1971.78,1213.3 1972.37,1212.18 1972.96,1213.18 1973.54,1210.8 1974.13,1211.06 1974.72,1209.98 1975.3,1207.78 1975.89,1207.8 1976.48,1211.35 1977.06,1213.56 1977.65,1212.19 1978.24,1211.05 1978.82,1208.64 1979.41,1209.8 1979.99,1211.05 1980.58,1212.39 1981.17,1212.4 1981.75,1213.42 1982.34,1214.49 1982.93,1216.7 1983.51,1215.37 1984.1,1214.05 1984.69,1214.02 1985.27,1215.04 1985.86,1217.17 1986.45,1215.64 1987.03,1215.48 1987.62,1214.3 1988.2,1212.9 1988.79,1212.8 1989.38,1213.72 1989.96,1212.32 1990.55,1211.03 1991.14,1209.56 1991.72,1209.95 1992.31,1210.88 1992.9,1210.01 1993.48,1206.71 1994.07,1208.42 1994.65,1207.59 1995.24,1209.97 1995.83,1206.77 1996.41,1203.74 1997,1205.4 1997.59,1206.96 1998.17,1208.25 1998.76,1210.94 1999.35,1213.24 1999.93,1214.16 2000.52,1215.26 2001.11,1214.15 2001.69,1214.02 2002.28,1215.11 2002.86,1214.88 2003.45,1212.53 2004.04,1211.34 2004.62,1208.96 2005.21,1211.52 2005.8,1211.37 2006.38,1213.72 2006.97,1214.73 2007.56,1214.65 2008.14,1214.6 2008.73,1216.66 2009.32,1218.72 2009.9,1219.57 2010.49,1220.45 2011.07,1220.93 2011.66,1220.26 2012.25,1219.68 2012.83,1219.27 2013.42,1220.21 2014.01,1222.1 2014.59,1222.65 2015.18,1221.95 2015.77,1219.13 2016.35,1219.89 2016.94,1219.46 2017.53,1218.07 2018.11,1217.66 2018.7,1217.35 2019.28,1218.09 2019.87,1216.36 2020.46,1216.31 2021.04,1215.13 2021.63,1213.58 2022.22,1210.03 2022.8,1208.8 2023.39,1209.23 2023.98,1211.41 2024.56,1209.41 2025.15,1207.18 2025.73,1206.55 2026.32,1208.03 2026.91,1209.39 2027.49,1208.46 2028.08,1205.03 2028.67,1205.5 2029.25,1202.19 2029.84,1200.27 2030.43,1199.86 2031.01,1201.6 2031.6,1203.24 2032.19,1200.57 2032.77,1198.74 2033.36,1201.56 2033.94,1202.01 2034.53,1201.49 2035.12,1203.11 2035.7,1202.83 2036.29,1208.99 2036.88,1210.27 2037.46,1209.34 2038.05,1209.51 2038.64,1212.02 2039.22,1209.59 2039.81,1209.57 2040.4,1210.74 2040.98,1214.16 2041.57,1213.86 2042.15,1213.85 2042.74,1213.89 2043.33,1213.62 2043.91,1212.72 2044.5,1211.55 2045.09,1212.31 2045.67,1215.76 2046.26,1216.83 2046.85,1216.72 2047.43,1215.45 2048.02,1212.87 2048.6,1212.77 2049.19,1212.78 2049.78,1212.67 2050.36,1212.55 2050.95,1213.41 2051.54,1214.45 2052.12,1213.24 2052.71,1214.32 2053.3,1214.06 2053.88,1212.93 2054.47,1213.29 2055.06,1214.37 2055.64,1212.13 2056.23,1212.04 2056.81,1212.07 2057.4,1210.75 2057.99,1209.77 2058.57,1207.57 2059.16,1207.69 2059.75,1210.1 2060.33,1210.24 2060.92,1209.16 2061.51,1208.17 2062.09,1207.08 2062.68,1203.87 2063.27,1205.52 2063.85,1205.79 2064.44,1206.11 2065.02,1206.46 2065.61,1207.78 2066.2,1206.89 2066.78,1206.87 2067.37,1206.97 2067.96,1206.01 2068.54,1207.41 2069.13,1207.7 2069.72,1207.82 2070.3,1209.23 2070.89,1211.63 2071.48,1210.59 2072.06,1214.22 2072.65,1215.14 2073.23,1215.17 2073.82,1216.1 2074.41,1215.78 2074.99,1215.67 2075.58,1214.15 2076.17,1212.94 2076.75,1211.75 2077.34,1214 2077.93,1213.84 2078.51,1213.8 2079.1,1217.05 2079.68,1216.66 2080.27,1215.43 2080.86,1215.4 2081.44,1213.98 2082.03,1212.77 2082.62,1213.83 2083.2,1213.52 2083.79,1213.34 2084.38,1213.31 2084.96,1214.45 2085.55,1213.4 2086.14,1212.3 2086.72,1212.08 2087.31,1213.24 2087.89,1212.17 2088.48,1212.23 2089.07,1211.95 2089.65,1211.72 2090.24,1212.88 2090.83,1212.55 2091.41,1210.5 2092,1210.55 2092.59,1211.8 2093.17,1213.02 2093.76,1211.9 2094.35,1210.58 2094.93,1211.72 2095.52,1211.79 2096.1,1211.6 2096.69,1209.25 2097.28,1210.43 2097.86,1211.59 2098.45,1211.51 2099.04,1213.92 2099.62,1211.63 2100.21,1213.99 2100.8,1212.59 2101.38,1212.57 2101.97,1212.4 2102.55,1208.99 2103.14,1209.13 2103.73,1209.35 2104.31,1208.56 2104.9,1207.81 2105.49,1209.19 2106.07,1209.48 2106.66,1210.66 2107.25,1210.64 2107.83,1209.48 2108.42,1210.57 2109.01,1208.27 2109.59,1206.97 2110.18,1205.03 2110.76,1206.91 2111.35,1206.89 2111.94,1203.86 2112.52,1203.07 2113.11,1203.9 2113.7,1204.26 2114.28,1203.31 2114.87,1205.91 2115.46,1208.61 2116.04,1210.02 2116.63,1210.35 2117.22,1209.33 2117.8,1208.35 2118.39,1209.78 2118.97,1211.09 2119.56,1212.08 2120.15,1211.87 2120.73,1210.72 2121.32,1209.51 2121.91,1209.77 2122.49,1208.88 2123.08,1210.4 2123.67,1210.55 2124.25,1210.61 2124.84,1212.07 2125.42,1213.04 2126.01,1212.91 2126.6,1217.31 2127.18,1214.81 2127.77,1212.41 2128.36,1212.45 2128.94,1214.9 2129.53,1213.69 2130.12,1213.75 2130.7,1214.9 2131.29,1214.66 2131.88,1215.58 2132.46,1213.05 2133.05,1214.24 2133.63,1214.43 2134.22,1213.28 2134.81,1214.43 2135.39,1216.6 2135.98,1217.38 2136.57,1215.08 2137.15,1215.03 2137.74,1214.95 2138.33,1212.68 2138.91,1211.69 2139.5,1212.74 2140.09,1212.67 2140.67,1211.49 2141.26,1213.81 2141.84,1214.93 2142.43,1218.48 2143.02,1216.75 2143.6,1218.81 2144.19,1217.25 2144.78,1215.73 2145.36,1215.57 2145.95,1217.59 2146.54,1217.28 2147.12,1214.81 2147.71,1213.36 2148.3,1210.86 2148.88,1210.91 2149.47,1209.87 2150.05,1209.85 2150.64,1211.16 2151.23,1210.26 2151.81,1213.72 2152.4,1213.55 2152.99,1213.4 2153.57,1213.18 2154.16,1211.69 2154.75,1213.94 2155.33,1211.58 2155.92,1212.56 2156.5,1213.52 2157.09,1213.31 2157.68,1213.2 2158.26,1215.39 \"/>\n<path clip-path=\"url(#clip332)\" d=\"M986.025 1212.39 L986.612 1212.39 L987.198 1212.39 L987.785 1212.39 L988.371 1212.39 L988.957 1212.39 L989.544 1212.39 L990.13 1212.39 L990.717 1212.39 L991.303 1212.39 L991.889 1212.39 L992.476 1212.39 L993.062 1212.39 L993.649 1212.39 L994.235 1212.39 L994.822 1212.39 L995.408 1212.39 L995.994 1212.39 L996.581 1212.39 L997.167 1212.39 L997.754 1212.39 L998.34 1212.39 L998.926 1212.39 L999.513 1212.39 L1000.1 1212.39 L1000.69 1212.39 L1001.27 1212.39 L1001.86 1212.39 L1002.44 1212.39 L1003.03 1212.39 L1003.62 1212.39 L1004.2 1212.39 L1004.79 1212.39 L1005.38 1212.39 L1005.96 1212.39 L1006.55 1212.39 L1007.14 1212.39 L1007.72 1212.39 L1008.31 1212.39 L1008.9 1212.39 L1009.48 1212.39 L1010.07 1212.39 L1010.65 1212.39 L1011.24 1212.39 L1011.83 1212.39 L1012.41 1212.39 L1013 1212.39 L1013.59 1212.39 L1014.17 1212.39 L1014.76 1212.39 L1015.35 1212.39 L1015.93 1212.39 L1016.52 1212.39 L1017.11 1212.39 L1017.69 1212.39 L1018.28 1212.39 L1018.86 1212.39 L1019.45 1212.39 L1020.04 1212.39 L1020.62 1212.39 L1021.21 1212.39 L1021.8 1212.39 L1022.38 1212.39 L1022.97 1212.39 L1023.56 1212.39 L1024.14 1212.39 L1024.73 1212.39 L1025.32 1212.39 L1025.9 1212.39 L1026.49 1212.39 L1027.07 1212.39 L1027.66 1212.39 L1028.25 1212.39 L1028.83 1212.39 L1029.42 1212.39 L1030.01 1212.39 L1030.59 1212.39 L1031.18 1212.39 L1031.77 1212.39 L1032.35 1212.39 L1032.94 1212.39 L1033.52 1212.39 L1034.11 1212.39 L1034.7 1212.39 L1035.28 1212.39 L1035.87 1212.39 L1036.46 1212.39 L1037.04 1212.39 L1037.63 1212.39 L1038.22 1212.39 L1038.8 1212.39 L1039.39 1212.39 L1039.98 1212.39 L1040.56 1212.39 L1041.15 1212.39 L1041.73 1212.39 L1042.32 1212.39 L1042.91 1212.39 L1043.49 1212.39 L1044.08 1212.39 L1044.67 1212.39 L1045.25 1212.39 L1045.84 1212.39 L1046.43 1212.39 L1047.01 1212.39 L1047.6 1212.39 L1048.19 1212.39 L1048.77 1212.39 L1049.36 1212.39 L1049.94 1212.39 L1050.53 1212.39 L1051.12 1212.39 L1051.7 1212.39 L1052.29 1212.39 L1052.88 1212.39 L1053.46 1212.39 L1054.05 1212.39 L1054.64 1212.39 L1055.22 1212.39 L1055.81 1212.39 L1056.39 1212.39 L1056.98 1212.39 L1057.57 1212.39 L1058.15 1212.39 L1058.74 1212.39 L1059.33 1212.39 L1059.91 1212.39 L1060.5 1212.39 L1061.09 1212.39 L1061.67 1212.39 L1062.26 1212.39 L1062.85 1212.39 L1063.43 1212.39 L1064.02 1212.39 L1064.6 1212.39 L1065.19 1212.39 L1065.78 1212.39 L1066.36 1212.39 L1066.95 1212.39 L1067.54 1212.39 L1068.12 1212.39 L1068.71 1212.39 L1069.3 1212.39 L1069.88 1212.39 L1070.47 1212.39 L1071.06 1212.39 L1071.64 1212.39 L1072.23 1212.39 L1072.81 1212.39 L1073.4 1212.39 L1073.99 1212.39 L1074.57 1212.39 L1075.16 1212.39 L1075.75 1212.39 L1076.33 1212.39 L1076.92 1212.39 L1077.51 1212.39 L1078.09 1212.39 L1078.68 1212.39 L1079.26 1212.39 L1079.85 1212.39 L1080.44 1212.39 L1081.02 1212.39 L1081.61 1212.39 L1082.2 1212.39 L1082.78 1212.39 L1083.37 1212.39 L1083.96 1212.39 L1084.54 1212.39 L1085.13 1212.39 L1085.72 1212.39 L1086.3 1212.39 L1086.89 1212.39 L1087.47 1212.39 L1088.06 1212.39 L1088.65 1212.39 L1089.23 1212.39 L1089.82 1212.39 L1090.41 1212.39 L1090.99 1212.39 L1091.58 1212.39 L1092.17 1212.39 L1092.75 1212.39 L1093.34 1212.39 L1093.93 1212.39 L1094.51 1212.39 L1095.1 1212.39 L1095.68 1212.39 L1096.27 1212.39 L1096.86 1212.39 L1097.44 1212.39 L1098.03 1212.39 L1098.62 1212.39 L1099.2 1212.39 L1099.79 1212.39 L1100.38 1212.39 L1100.96 1212.39 L1101.55 1212.39 L1102.14 1212.39 L1102.72 1212.39 L1103.31 1212.39 L1103.89 1212.39 L1104.48 1212.39 L1105.07 1212.39 L1105.65 1212.39 L1106.24 1212.39 L1106.83 1212.39 L1107.41 1212.39 L1108 1212.39 L1108.59 1212.39 L1109.17 1212.39 L1109.76 1212.39 L1110.34 1212.39 L1110.93 1212.39 L1111.52 1212.39 L1112.1 1212.39 L1112.69 1212.39 L1113.28 1212.39 L1113.86 1212.39 L1114.45 1212.39 L1115.04 1212.39 L1115.62 1212.39 L1116.21 1212.39 L1116.8 1212.39 L1117.38 1212.39 L1117.97 1212.39 L1118.55 1212.39 L1119.14 1212.39 L1119.73 1212.39 L1120.31 1212.39 L1120.9 1212.39 L1121.49 1212.39 L1122.07 1212.39 L1122.66 1212.39 L1123.25 1212.39 L1123.83 1212.39 L1124.42 1212.39 L1125.01 1212.39 L1125.59 1212.39 L1126.18 1212.39 L1126.76 1212.39 L1127.35 1212.39 L1127.94 1212.39 L1128.52 1212.39 L1129.11 1212.39 L1129.7 1212.39 L1130.28 1212.39 L1130.87 1212.39 L1131.46 1212.39 L1132.04 1212.39 L1132.63 1212.39 L1133.21 1212.39 L1133.8 1212.39 L1134.39 1212.39 L1134.97 1212.39 L1135.56 1212.39 L1136.15 1212.39 L1136.73 1212.39 L1137.32 1212.39 L1137.91 1212.39 L1138.49 1212.39 L1139.08 1212.39 L1139.67 1212.39 L1140.25 1212.39 L1140.84 1212.39 L1141.42 1212.39 L1142.01 1212.39 L1142.6 1212.39 L1143.18 1212.39 L1143.77 1212.39 L1144.36 1212.39 L1144.94 1212.39 L1145.53 1212.39 L1146.12 1212.39 L1146.7 1212.39 L1147.29 1212.39 L1147.88 1212.39 L1148.46 1212.39 L1149.05 1212.39 L1149.63 1212.39 L1150.22 1212.39 L1150.81 1212.39 L1151.39 1212.39 L1151.98 1212.39 L1152.57 1212.39 L1153.15 1212.39 L1153.74 1212.39 L1154.33 1212.39 L1154.91 1212.39 L1155.5 1212.39 L1156.09 1212.39 L1156.67 1212.39 L1157.26 1212.39 L1157.84 1212.39 L1158.43 1212.39 L1159.02 1212.39 L1159.6 1212.39 L1160.19 1212.39 L1160.78 1212.39 L1161.36 1212.39 L1161.95 1212.39 L1162.54 1212.39 L1163.12 1212.39 L1163.71 1212.39 L1164.29 1212.39 L1164.88 1212.39 L1165.47 1212.39 L1166.05 1212.39 L1166.64 1212.39 L1167.23 1212.39 L1167.81 1212.39 L1168.4 1212.39 L1168.99 1212.39 L1169.57 1212.39 L1170.16 1212.39 L1170.75 1212.39 L1171.33 1212.39 L1171.92 1212.39 L1172.5 1212.39 L1173.09 1212.39 L1173.68 1212.39 L1174.26 1212.39 L1174.85 1212.39 L1175.44 1212.39 L1176.02 1212.39 L1176.61 1212.39 L1177.2 1212.39 L1177.78 1212.39 L1178.37 1212.39 L1178.96 1212.39 L1179.54 1212.39 L1180.13 1212.39 L1180.71 1212.39 L1181.3 1212.39 L1181.89 1212.39 L1182.47 1212.39 L1183.06 1212.39 L1183.65 1212.39 L1184.23 1212.39 L1184.82 1212.39 L1185.41 1212.39 L1185.99 1212.39 L1186.58 1212.39 L1187.16 1212.39 L1187.75 1212.39 L1188.34 1212.39 L1188.92 1212.39 L1189.51 1212.39 L1190.1 1212.39 L1190.68 1212.39 L1191.27 1212.39 L1191.86 1212.39 L1192.44 1212.39 L1193.03 1212.39 L1193.62 1212.39 L1194.2 1212.39 L1194.79 1212.39 L1195.37 1212.39 L1195.96 1212.39 L1196.55 1212.39 L1197.13 1212.39 L1197.72 1212.39 L1198.31 1212.39 L1198.89 1212.39 L1199.48 1212.39 L1200.07 1212.39 L1200.65 1212.39 L1201.24 1212.39 L1201.83 1212.39 L1202.41 1212.39 L1203 1212.39 L1203.58 1212.39 L1204.17 1212.39 L1204.76 1212.39 L1205.34 1212.39 L1205.93 1212.39 L1206.52 1212.39 L1207.1 1212.39 L1207.69 1212.39 L1208.28 1212.39 L1208.86 1212.39 L1209.45 1212.39 L1210.03 1212.39 L1210.62 1212.39 L1211.21 1212.39 L1211.79 1212.39 L1212.38 1212.39 L1212.97 1212.39 L1213.55 1212.39 L1214.14 1212.39 L1214.73 1212.39 L1215.31 1212.39 L1215.9 1212.39 L1216.49 1212.39 L1217.07 1212.39 L1217.66 1212.39 L1218.24 1212.39 L1218.83 1212.39 L1219.42 1212.39 L1220 1212.39 L1220.59 1212.39 L1221.18 1212.39 L1221.76 1212.39 L1222.35 1212.39 L1222.94 1212.39 L1223.52 1212.39 L1224.11 1212.39 L1224.7 1212.39 L1225.28 1212.39 L1225.87 1212.39 L1226.45 1212.39 L1227.04 1212.39 L1227.63 1212.39 L1228.21 1212.39 L1228.8 1212.39 L1229.39 1212.39 L1229.97 1212.39 L1230.56 1212.39 L1231.15 1212.39 L1231.73 1212.39 L1232.32 1212.39 L1232.91 1212.39 L1233.49 1212.39 L1234.08 1212.39 L1234.66 1212.39 L1235.25 1212.39 L1235.84 1212.39 L1236.42 1212.39 L1237.01 1212.39 L1237.6 1212.39 L1238.18 1212.39 L1238.77 1212.39 L1239.36 1212.39 L1239.94 1212.39 L1240.53 1212.39 L1241.11 1212.39 L1241.7 1212.39 L1242.29 1212.39 L1242.87 1212.39 L1243.46 1212.39 L1244.05 1212.39 L1244.63 1212.39 L1245.22 1212.39 L1245.81 1212.39 L1246.39 1212.39 L1246.98 1212.39 L1247.57 1212.39 L1248.15 1212.39 L1248.74 1212.39 L1249.32 1212.39 L1249.91 1212.39 L1250.5 1212.39 L1251.08 1212.39 L1251.67 1212.39 L1252.26 1212.39 L1252.84 1212.39 L1253.43 1212.39 L1254.02 1212.39 L1254.6 1212.39 L1255.19 1212.39 L1255.78 1212.39 L1256.36 1212.39 L1256.95 1212.39 L1257.53 1212.39 L1258.12 1212.39 L1258.71 1212.39 L1259.29 1212.39 L1259.88 1212.39 L1260.47 1212.39 L1261.05 1212.39 L1261.64 1212.39 L1262.23 1212.39 L1262.81 1212.39 L1263.4 1212.39 L1263.98 1212.39 L1264.57 1212.39 L1265.16 1212.39 L1265.74 1212.39 L1266.33 1212.39 L1266.92 1212.39 L1267.5 1212.39 L1268.09 1212.39 L1268.68 1212.39 L1269.26 1212.39 L1269.85 1212.39 L1270.44 1212.39 L1271.02 1212.39 L1271.61 1212.39 L1272.19 1212.39 L1272.78 1212.39 L1273.37 1212.39 L1273.95 1212.39 L1274.54 1212.39 L1275.13 1212.39 L1275.71 1212.39 L1276.3 1212.39 L1276.89 1212.39 L1277.47 1212.39 L1278.06 1212.39 L1278.65 1212.39 L1279.23 1212.39 L1279.82 1212.39 L1280.4 1212.39 L1280.99 1212.39 L1281.58 1212.39 L1282.16 1212.39 L1282.75 1212.39 L1283.34 1212.39 L1283.92 1212.39 L1284.51 1212.39 L1285.1 1212.39 L1285.68 1212.39 L1286.27 1212.39 L1286.86 1212.39 L1287.44 1212.39 L1288.03 1212.39 L1288.61 1212.39 L1289.2 1212.39 L1289.79 1212.39 L1290.37 1212.39 L1290.96 1212.39 L1291.55 1212.39 L1292.13 1212.39 L1292.72 1212.39 L1293.31 1212.39 L1293.89 1212.39 L1294.48 1212.39 L1295.06 1212.39 L1295.65 1212.39 L1296.24 1212.39 L1296.82 1212.39 L1297.41 1212.39 L1298 1212.39 L1298.58 1212.39 L1299.17 1212.39 L1299.76 1212.39 L1300.34 1212.39 L1300.93 1212.39 L1301.52 1212.39 L1302.1 1212.39 L1302.69 1212.39 L1303.27 1212.39 L1303.86 1212.39 L1304.45 1212.39 L1305.03 1212.39 L1305.62 1212.39 L1306.21 1212.39 L1306.79 1212.39 L1307.38 1212.39 L1307.97 1212.39 L1308.55 1212.39 L1309.14 1212.39 L1309.73 1212.39 L1310.31 1212.39 L1310.9 1212.39 L1311.48 1212.39 L1312.07 1212.39 L1312.66 1212.39 L1313.24 1212.39 L1313.83 1212.39 L1314.42 1212.39 L1315 1212.39 L1315.59 1212.39 L1316.18 1212.39 L1316.76 1212.39 L1317.35 1212.39 L1317.93 1212.39 L1318.52 1212.39 L1319.11 1212.39 L1319.69 1212.39 L1320.28 1212.39 L1320.87 1212.39 L1321.45 1212.39 L1322.04 1212.39 L1322.63 1212.39 L1323.21 1212.39 L1323.8 1212.39 L1324.39 1212.39 L1324.97 1212.39 L1325.56 1212.39 L1326.14 1212.39 L1326.73 1212.39 L1327.32 1212.39 L1327.9 1212.39 L1328.49 1212.39 L1329.08 1212.39 L1329.66 1212.39 L1330.25 1212.39 L1330.84 1212.39 L1331.42 1212.39 L1332.01 1212.39 L1332.6 1212.39 L1333.18 1212.39 L1333.77 1212.39 L1334.35 1212.39 L1334.94 1212.39 L1335.53 1212.39 L1336.11 1212.39 L1336.7 1212.39 L1337.29 1212.39 L1337.87 1212.39 L1338.46 1212.39 L1339.05 1212.39 L1339.63 1212.39 L1340.22 1212.39 L1340.8 1212.39 L1341.39 1212.39 L1341.98 1212.39 L1342.56 1212.39 L1343.15 1212.39 L1343.74 1212.39 L1344.32 1212.39 L1344.91 1212.39 L1345.5 1212.39 L1346.08 1212.39 L1346.67 1212.39 L1347.26 1212.39 L1347.84 1212.39 L1348.43 1212.39 L1349.01 1212.39 L1349.6 1212.39 L1350.19 1212.39 L1350.77 1212.39 L1351.36 1212.39 L1351.95 1212.39 L1352.53 1212.39 L1353.12 1212.39 L1353.71 1212.39 L1354.29 1212.39 L1354.88 1212.39 L1355.47 1212.39 L1356.05 1212.39 L1356.64 1212.39 L1357.22 1212.39 L1357.81 1212.39 L1358.4 1212.39 L1358.98 1212.39 L1359.57 1212.39 L1360.16 1212.39 L1360.74 1212.39 L1361.33 1212.39 L1361.92 1212.39 L1362.5 1212.39 L1363.09 1212.39 L1363.68 1212.39 L1364.26 1212.39 L1364.85 1212.39 L1365.43 1212.39 L1366.02 1212.39 L1366.61 1212.39 L1367.19 1212.39 L1367.78 1212.39 L1368.37 1212.39 L1368.95 1212.39 L1369.54 1212.39 L1370.13 1212.39 L1370.71 1212.39 L1371.3 1212.39 L1371.88 1212.39 L1372.47 1212.39 L1373.06 1212.39 L1373.64 1212.39 L1374.23 1212.39 L1374.82 1212.39 L1375.4 1212.39 L1375.99 1212.39 L1376.58 1212.39 L1377.16 1212.39 L1377.75 1212.39 L1378.34 1212.39 L1378.92 1212.39 L1379.51 1212.39 L1380.09 1212.39 L1380.68 1212.39 L1381.27 1212.39 L1381.85 1212.39 L1382.44 1212.39 L1383.03 1212.39 L1383.61 1212.39 L1384.2 1212.39 L1384.79 1212.39 L1385.37 1212.39 L1385.96 1212.39 L1386.55 1212.39 L1387.13 1212.39 L1387.72 1212.39 L1388.3 1212.39 L1388.89 1212.39 L1389.48 1212.39 L1390.06 1212.39 L1390.65 1212.39 L1391.24 1212.39 L1391.82 1212.39 L1392.41 1212.39 L1393 1212.39 L1393.58 1212.39 L1394.17 1212.39 L1394.75 1212.39 L1395.34 1212.39 L1395.93 1212.39 L1396.51 1212.39 L1397.1 1212.39 L1397.69 1212.39 L1398.27 1212.39 L1398.86 1212.39 L1399.45 1212.39 L1400.03 1212.39 L1400.62 1212.39 L1401.21 1212.39 L1401.79 1212.39 L1402.38 1212.39 L1402.96 1212.39 L1403.55 1212.39 L1404.14 1212.39 L1404.72 1212.39 L1405.31 1212.39 L1405.9 1212.39 L1406.48 1212.39 L1407.07 1212.39 L1407.66 1212.39 L1408.24 1212.39 L1408.83 1212.39 L1409.42 1212.39 L1410 1212.39 L1410.59 1212.39 L1411.17 1212.39 L1411.76 1212.39 L1412.35 1212.39 L1412.93 1212.39 L1413.52 1212.39 L1414.11 1212.39 L1414.69 1212.39 L1415.28 1212.39 L1415.87 1212.39 L1416.45 1212.39 L1417.04 1212.39 L1417.63 1212.39 L1418.21 1212.39 L1418.8 1212.39 L1419.38 1212.39 L1419.97 1212.39 L1420.56 1212.39 L1421.14 1212.39 L1421.73 1212.39 L1422.32 1212.39 L1422.9 1212.39 L1423.49 1212.39 L1424.08 1212.39 L1424.66 1212.39 L1425.25 1212.39 L1425.83 1212.39 L1426.42 1212.39 L1427.01 1212.39 L1427.59 1212.39 L1428.18 1212.39 L1428.77 1212.39 L1429.35 1212.39 L1429.94 1212.39 L1430.53 1212.39 L1431.11 1212.39 L1431.7 1212.39 L1432.29 1212.39 L1432.87 1212.39 L1433.46 1212.39 L1434.04 1212.39 L1434.63 1212.39 L1435.22 1212.39 L1435.8 1212.39 L1436.39 1212.39 L1436.98 1212.39 L1437.56 1212.39 L1438.15 1212.39 L1438.74 1212.39 L1439.32 1212.39 L1439.91 1212.39 L1440.5 1212.39 L1441.08 1212.39 L1441.67 1212.39 L1442.25 1212.39 L1442.84 1212.39 L1443.43 1212.39 L1444.01 1212.39 L1444.6 1212.39 L1445.19 1212.39 L1445.77 1212.39 L1446.36 1212.39 L1446.95 1212.39 L1447.53 1212.39 L1448.12 1212.39 L1448.7 1212.39 L1449.29 1212.39 L1449.88 1212.39 L1450.46 1212.39 L1451.05 1212.39 L1451.64 1212.39 L1452.22 1212.39 L1452.81 1212.39 L1453.4 1212.39 L1453.98 1212.39 L1454.57 1212.39 L1455.16 1212.39 L1455.74 1212.39 L1456.33 1212.39 L1456.91 1212.39 L1457.5 1212.39 L1458.09 1212.39 L1458.67 1212.39 L1459.26 1212.39 L1459.85 1212.39 L1460.43 1212.39 L1461.02 1212.39 L1461.61 1212.39 L1462.19 1212.39 L1462.78 1212.39 L1463.37 1212.39 L1463.95 1212.39 L1464.54 1212.39 L1465.12 1212.39 L1465.71 1212.39 L1466.3 1212.39 L1466.88 1212.39 L1467.47 1212.39 L1468.06 1212.39 L1468.64 1212.39 L1469.23 1212.39 L1469.82 1212.39 L1470.4 1212.39 L1470.99 1212.39 L1471.57 1212.39 L1472.16 1212.39 L1472.75 1212.39 L1473.33 1212.39 L1473.92 1212.39 L1474.51 1212.39 L1475.09 1212.39 L1475.68 1212.39 L1476.27 1212.39 L1476.85 1212.39 L1477.44 1212.39 L1478.03 1212.39 L1478.61 1212.39 L1479.2 1212.39 L1479.78 1212.39 L1480.37 1212.39 L1480.96 1212.39 L1481.54 1212.39 L1482.13 1212.39 L1482.72 1212.39 L1483.3 1212.39 L1483.89 1212.39 L1484.48 1212.39 L1485.06 1212.39 L1485.65 1212.39 L1486.24 1212.39 L1486.82 1212.39 L1487.41 1212.39 L1487.99 1212.39 L1488.58 1212.39 L1489.17 1212.39 L1489.75 1212.39 L1490.34 1212.39 L1490.93 1212.39 L1491.51 1212.39 L1492.1 1212.39 L1492.69 1212.39 L1493.27 1212.39 L1493.86 1212.39 L1494.45 1212.39 L1495.03 1212.39 L1495.62 1212.39 L1496.2 1212.39 L1496.79 1212.39 L1497.38 1212.39 L1497.96 1212.39 L1498.55 1212.39 L1499.14 1212.39 L1499.72 1212.39 L1500.31 1212.39 L1500.9 1212.39 L1501.48 1212.39 L1502.07 1212.39 L1502.65 1212.39 L1503.24 1212.39 L1503.83 1212.39 L1504.41 1212.39 L1505 1212.39 L1505.59 1212.39 L1506.17 1212.39 L1506.76 1212.39 L1507.35 1212.39 L1507.93 1212.39 L1508.52 1212.39 L1509.11 1212.39 L1509.69 1212.39 L1510.28 1212.39 L1510.86 1212.39 L1511.45 1212.39 L1512.04 1212.39 L1512.62 1212.39 L1513.21 1212.39 L1513.8 1212.39 L1514.38 1212.39 L1514.97 1212.39 L1515.56 1212.39 L1516.14 1212.39 L1516.73 1212.39 L1517.32 1212.39 L1517.9 1212.39 L1518.49 1212.39 L1519.07 1212.39 L1519.66 1212.39 L1520.25 1212.39 L1520.83 1212.39 L1521.42 1212.39 L1522.01 1212.39 L1522.59 1212.39 L1523.18 1212.39 L1523.77 1212.39 L1524.35 1212.39 L1524.94 1212.39 L1525.52 1212.39 L1526.11 1212.39 L1526.7 1212.39 L1527.28 1212.39 L1527.87 1212.39 L1528.46 1212.39 L1529.04 1212.39 L1529.63 1212.39 L1530.22 1212.39 L1530.8 1212.39 L1531.39 1212.39 L1531.98 1212.39 L1532.56 1212.39 L1533.15 1212.39 L1533.73 1212.39 L1534.32 1212.39 L1534.91 1212.39 L1535.49 1212.39 L1536.08 1212.39 L1536.67 1212.39 L1537.25 1212.39 L1537.84 1212.39 L1538.43 1212.39 L1539.01 1212.39 L1539.6 1212.39 L1540.19 1212.39 L1540.77 1212.39 L1541.36 1212.39 L1541.94 1212.39 L1542.53 1212.39 L1543.12 1212.39 L1543.7 1212.39 L1544.29 1212.39 L1544.88 1212.39 L1545.46 1212.39 L1546.05 1212.39 L1546.64 1212.39 L1547.22 1212.39 L1547.81 1212.39 L1548.4 1212.39 L1548.98 1212.39 L1549.57 1212.39 L1550.15 1212.39 L1550.74 1212.39 L1551.33 1212.39 L1551.91 1212.39 L1552.5 1212.39 L1553.09 1212.39 L1553.67 1212.39 L1554.26 1212.39 L1554.85 1212.39 L1555.43 1212.39 L1556.02 1212.39 L1556.6 1212.39 L1557.19 1212.39 L1557.78 1212.39 L1558.36 1212.39 L1558.95 1212.39 L1559.54 1212.39 L1560.12 1212.39 L1560.71 1212.39 L1561.3 1212.39 L1561.88 1212.39 L1562.47 1212.39 L1563.06 1212.39 L1563.64 1212.39 L1564.23 1212.39 L1564.81 1212.39 L1565.4 1212.39 L1565.99 1212.39 L1566.57 1212.39 L1567.16 1212.39 L1567.75 1212.39 L1568.33 1212.39 L1568.92 1212.39 L1569.51 1212.39 L1570.09 1212.39 L1570.68 1212.39 L1571.27 1212.39 L1571.85 1212.39 L1572.44 1212.39 L1573.02 1212.39 L1573.61 1212.39 L1574.2 1212.39 L1574.78 1212.39 L1575.37 1212.39 L1575.96 1212.39 L1576.54 1212.39 L1577.13 1212.39 L1577.72 1212.39 L1578.3 1212.39 L1578.89 1212.39 L1579.47 1212.39 L1580.06 1212.39 L1580.65 1212.39 L1581.23 1212.39 L1581.82 1212.39 L1582.41 1212.39 L1582.99 1212.39 L1583.58 1212.39 L1584.17 1212.39 L1584.75 1212.39 L1585.34 1212.39 L1585.93 1212.39 L1586.51 1212.39 L1587.1 1212.39 L1587.68 1212.39 L1588.27 1212.39 L1588.86 1212.39 L1589.44 1212.39 L1590.03 1212.39 L1590.62 1212.39 L1591.2 1212.39 L1591.79 1212.39 L1592.38 1212.39 L1592.96 1212.39 L1593.55 1212.39 L1594.14 1212.39 L1594.72 1212.39 L1595.31 1212.39 L1595.89 1212.39 L1596.48 1212.39 L1597.07 1212.39 L1597.65 1212.39 L1598.24 1212.39 L1598.83 1212.39 L1599.41 1212.39 L1600 1212.39 L1600.59 1212.39 L1601.17 1212.39 L1601.76 1212.39 L1602.34 1212.39 L1602.93 1212.39 L1603.52 1212.39 L1604.1 1212.39 L1604.69 1212.39 L1605.28 1212.39 L1605.86 1212.39 L1606.45 1212.39 L1607.04 1212.39 L1607.62 1212.39 L1608.21 1212.39 L1608.8 1212.39 L1609.38 1212.39 L1609.97 1212.39 L1610.55 1212.39 L1611.14 1212.39 L1611.73 1212.39 L1612.31 1212.39 L1612.9 1212.39 L1613.49 1212.39 L1614.07 1212.39 L1614.66 1212.39 L1615.25 1212.39 L1615.83 1212.39 L1616.42 1212.39 L1617.01 1212.39 L1617.59 1212.39 L1618.18 1212.39 L1618.76 1212.39 L1619.35 1212.39 L1619.94 1212.39 L1620.52 1212.39 L1621.11 1212.39 L1621.7 1212.39 L1622.28 1212.39 L1622.87 1212.39 L1623.46 1212.39 L1624.04 1212.39 L1624.63 1212.39 L1625.22 1212.39 L1625.8 1212.39 L1626.39 1212.39 L1626.97 1212.39 L1627.56 1212.39 L1628.15 1212.39 L1628.73 1212.39 L1629.32 1212.39 L1629.91 1212.39 L1630.49 1212.39 L1631.08 1212.39 L1631.67 1212.39 L1632.25 1212.39 L1632.84 1212.39 L1633.42 1212.39 L1634.01 1212.39 L1634.6 1212.39 L1635.18 1212.39 L1635.77 1212.39 L1636.36 1212.39 L1636.94 1212.39 L1637.53 1212.39 L1638.12 1212.39 L1638.7 1212.39 L1639.29 1212.39 L1639.88 1212.39 L1640.46 1212.39 L1641.05 1212.39 L1641.63 1212.39 L1642.22 1212.39 L1642.81 1212.39 L1643.39 1212.39 L1643.98 1212.39 L1644.57 1212.39 L1645.15 1212.39 L1645.74 1212.39 L1646.33 1212.39 L1646.91 1212.39 L1647.5 1212.39 L1648.09 1212.39 L1648.67 1212.39 L1649.26 1212.39 L1649.84 1212.39 L1650.43 1212.39 L1651.02 1212.39 L1651.6 1212.39 L1652.19 1212.39 L1652.78 1212.39 L1653.36 1212.39 L1653.95 1212.39 L1654.54 1212.39 L1655.12 1212.39 L1655.71 1212.39 L1656.29 1212.39 L1656.88 1212.39 L1657.47 1212.39 L1658.05 1212.39 L1658.64 1212.39 L1659.23 1212.39 L1659.81 1212.39 L1660.4 1212.39 L1660.99 1212.39 L1661.57 1212.39 L1662.16 1212.39 L1662.75 1212.39 L1663.33 1212.39 L1663.92 1212.39 L1664.5 1212.39 L1665.09 1212.39 L1665.68 1212.39 L1666.26 1212.39 L1666.85 1212.39 L1667.44 1212.39 L1668.02 1212.39 L1668.61 1212.39 L1669.2 1212.39 L1669.78 1212.39 L1670.37 1212.39 L1670.96 1212.39 L1671.54 1212.39 L1672.13 1212.39 L1672.71 1212.39 L1673.3 1212.39 L1673.89 1212.39 L1674.47 1212.39 L1675.06 1212.39 L1675.65 1212.39 L1676.23 1212.39 L1676.82 1212.39 L1677.41 1212.39 L1677.99 1212.39 L1678.58 1212.39 L1679.17 1212.39 L1679.75 1212.39 L1680.34 1212.39 L1680.92 1212.39 L1681.51 1212.39 L1682.1 1212.39 L1682.68 1212.39 L1683.27 1212.39 L1683.86 1212.39 L1684.44 1212.39 L1685.03 1212.39 L1685.62 1212.39 L1686.2 1212.39 L1686.79 1212.39 L1687.37 1212.39 L1687.96 1212.39 L1688.55 1212.39 L1689.13 1212.39 L1689.72 1212.39 L1690.31 1212.39 L1690.89 1212.39 L1691.48 1212.39 L1692.07 1212.39 L1692.65 1212.39 L1693.24 1212.39 L1693.83 1212.39 L1694.41 1212.39 L1695 1212.39 L1695.58 1212.39 L1696.17 1212.39 L1696.76 1212.39 L1697.34 1212.39 L1697.93 1212.39 L1698.52 1212.39 L1699.1 1212.39 L1699.69 1212.39 L1700.28 1212.39 L1700.86 1212.39 L1701.45 1212.39 L1702.04 1212.39 L1702.62 1212.39 L1703.21 1212.39 L1703.79 1212.39 L1704.38 1212.39 L1704.97 1212.39 L1705.55 1212.39 L1706.14 1212.39 L1706.73 1212.39 L1707.31 1212.39 L1707.9 1212.39 L1708.49 1212.39 L1709.07 1212.39 L1709.66 1212.39 L1710.24 1212.39 L1710.83 1212.39 L1711.42 1212.39 L1712 1212.39 L1712.59 1212.39 L1713.18 1212.39 L1713.76 1212.39 L1714.35 1212.39 L1714.94 1212.39 L1715.52 1212.39 L1716.11 1212.39 L1716.7 1212.39 L1717.28 1212.39 L1717.87 1212.39 L1718.45 1212.39 L1719.04 1212.39 L1719.63 1212.39 L1720.21 1212.39 L1720.8 1212.39 L1721.39 1212.39 L1721.97 1212.39 L1722.56 1212.39 L1723.15 1212.39 L1723.73 1212.39 L1724.32 1212.39 L1724.91 1212.39 L1725.49 1212.39 L1726.08 1212.39 L1726.66 1212.39 L1727.25 1212.39 L1727.84 1212.39 L1728.42 1212.39 L1729.01 1212.39 L1729.6 1212.39 L1730.18 1212.39 L1730.77 1212.39 L1731.36 1212.39 L1731.94 1212.39 L1732.53 1212.39 L1733.11 1212.39 L1733.7 1212.39 L1734.29 1212.39 L1734.87 1212.39 L1735.46 1212.39 L1736.05 1212.39 L1736.63 1212.39 L1737.22 1212.39 L1737.81 1212.39 L1738.39 1212.39 L1738.98 1212.39 L1739.57 1212.39 L1740.15 1212.39 L1740.74 1212.39 L1741.32 1212.39 L1741.91 1212.39 L1742.5 1212.39 L1743.08 1212.39 L1743.67 1212.39 L1744.26 1212.39 L1744.84 1212.39 L1745.43 1212.39 L1746.02 1212.39 L1746.6 1212.39 L1747.19 1212.39 L1747.78 1212.39 L1748.36 1212.39 L1748.95 1212.39 L1749.53 1212.39 L1750.12 1212.39 L1750.71 1212.39 L1751.29 1212.39 L1751.88 1212.39 L1752.47 1212.39 L1753.05 1212.39 L1753.64 1212.39 L1754.23 1212.39 L1754.81 1212.39 L1755.4 1212.39 L1755.99 1212.39 L1756.57 1212.39 L1757.16 1212.39 L1757.74 1212.39 L1758.33 1212.39 L1758.92 1212.39 L1759.5 1212.39 L1760.09 1212.39 L1760.68 1212.39 L1761.26 1212.39 L1761.85 1212.39 L1762.44 1212.39 L1763.02 1212.39 L1763.61 1212.39 L1764.19 1212.39 L1764.78 1212.39 L1765.37 1212.39 L1765.95 1212.39 L1766.54 1212.39 L1767.13 1212.39 L1767.71 1212.39 L1768.3 1212.39 L1768.89 1212.39 L1769.47 1212.39 L1770.06 1212.39 L1770.65 1212.39 L1771.23 1212.39 L1771.82 1212.39 L1772.4 1212.39 L1772.99 1212.39 L1773.58 1212.39 L1774.16 1212.39 L1774.75 1212.39 L1775.34 1212.39 L1775.92 1212.39 L1776.51 1212.39 L1777.1 1212.39 L1777.68 1212.39 L1778.27 1212.39 L1778.86 1212.39 L1779.44 1212.39 L1780.03 1212.39 L1780.61 1212.39 L1781.2 1212.39 L1781.79 1212.39 L1782.37 1212.39 L1782.96 1212.39 L1783.55 1212.39 L1784.13 1212.39 L1784.72 1212.39 L1785.31 1212.39 L1785.89 1212.39 L1786.48 1212.39 L1787.06 1212.39 L1787.65 1212.39 L1788.24 1212.39 L1788.82 1212.39 L1789.41 1212.39 L1790 1212.39 L1790.58 1212.39 L1791.17 1212.39 L1791.76 1212.39 L1792.34 1212.39 L1792.93 1212.39 L1793.52 1212.39 L1794.1 1212.39 L1794.69 1212.39 L1795.27 1212.39 L1795.86 1212.39 L1796.45 1212.39 L1797.03 1212.39 L1797.62 1212.39 L1798.21 1212.39 L1798.79 1212.39 L1799.38 1212.39 L1799.97 1212.39 L1800.55 1212.39 L1801.14 1212.39 L1801.73 1212.39 L1802.31 1212.39 L1802.9 1212.39 L1803.48 1212.39 L1804.07 1212.39 L1804.66 1212.39 L1805.24 1212.39 L1805.83 1212.39 L1806.42 1212.39 L1807 1212.39 L1807.59 1212.39 L1808.18 1212.39 L1808.76 1212.39 L1809.35 1212.39 L1809.94 1212.39 L1810.52 1212.39 L1811.11 1212.39 L1811.69 1212.39 L1812.28 1212.39 L1812.87 1212.39 L1813.45 1212.39 L1814.04 1212.39 L1814.63 1212.39 L1815.21 1212.39 L1815.8 1212.39 L1816.39 1212.39 L1816.97 1212.39 L1817.56 1212.39 L1818.14 1212.39 L1818.73 1212.39 L1819.32 1212.39 L1819.9 1212.39 L1820.49 1212.39 L1821.08 1212.39 L1821.66 1212.39 L1822.25 1212.39 L1822.84 1212.39 L1823.42 1212.39 L1824.01 1212.39 L1824.6 1212.39 L1825.18 1212.39 L1825.77 1212.39 L1826.35 1212.39 L1826.94 1212.39 L1827.53 1212.39 L1828.11 1212.39 L1828.7 1212.39 L1829.29 1212.39 L1829.87 1212.39 L1830.46 1212.39 L1831.05 1212.39 L1831.63 1212.39 L1832.22 1212.39 L1832.81 1212.39 L1833.39 1212.39 L1833.98 1212.39 L1834.56 1212.39 L1835.15 1212.39 L1835.74 1212.39 L1836.32 1212.39 L1836.91 1212.39 L1837.5 1212.39 L1838.08 1212.39 L1838.67 1212.39 L1839.26 1212.39 L1839.84 1212.39 L1840.43 1212.39 L1841.01 1212.39 L1841.6 1212.39 L1842.19 1212.39 L1842.77 1212.39 L1843.36 1212.39 L1843.95 1212.39 L1844.53 1212.39 L1845.12 1212.39 L1845.71 1212.39 L1846.29 1212.39 L1846.88 1212.39 L1847.47 1212.39 L1848.05 1212.39 L1848.64 1212.39 L1849.22 1212.39 L1849.81 1212.39 L1850.4 1212.39 L1850.98 1212.39 L1851.57 1212.39 L1852.16 1212.39 L1852.74 1212.39 L1853.33 1212.39 L1853.92 1212.39 L1854.5 1212.39 L1855.09 1212.39 L1855.68 1212.39 L1856.26 1212.39 L1856.85 1212.39 L1857.43 1212.39 L1858.02 1212.39 L1858.61 1212.39 L1859.19 1212.39 L1859.78 1212.39 L1860.37 1212.39 L1860.95 1212.39 L1861.54 1212.39 L1862.13 1212.39 L1862.71 1212.39 L1863.3 1212.39 L1863.88 1212.39 L1864.47 1212.39 L1865.06 1212.39 L1865.64 1212.39 L1866.23 1212.39 L1866.82 1212.39 L1867.4 1212.39 L1867.99 1212.39 L1868.58 1212.39 L1869.16 1212.39 L1869.75 1212.39 L1870.34 1212.39 L1870.92 1212.39 L1871.51 1212.39 L1872.09 1212.39 L1872.68 1212.39 L1873.27 1212.39 L1873.85 1212.39 L1874.44 1212.39 L1875.03 1212.39 L1875.61 1212.39 L1876.2 1212.39 L1876.79 1212.39 L1877.37 1212.39 L1877.96 1212.39 L1878.55 1212.39 L1879.13 1212.39 L1879.72 1212.39 L1880.3 1212.39 L1880.89 1212.39 L1881.48 1212.39 L1882.06 1212.39 L1882.65 1212.39 L1883.24 1212.39 L1883.82 1212.39 L1884.41 1212.39 L1885 1212.39 L1885.58 1212.39 L1886.17 1212.39 L1886.76 1212.39 L1887.34 1212.39 L1887.93 1212.39 L1888.51 1212.39 L1889.1 1212.39 L1889.69 1212.39 L1890.27 1212.39 L1890.86 1212.39 L1891.45 1212.39 L1892.03 1212.39 L1892.62 1212.39 L1893.21 1212.39 L1893.79 1212.39 L1894.38 1212.39 L1894.96 1212.39 L1895.55 1212.39 L1896.14 1212.39 L1896.72 1212.39 L1897.31 1212.39 L1897.9 1212.39 L1898.48 1212.39 L1899.07 1212.39 L1899.66 1212.39 L1900.24 1212.39 L1900.83 1212.39 L1901.42 1212.39 L1902 1212.39 L1902.59 1212.39 L1903.17 1212.39 L1903.76 1212.39 L1904.35 1212.39 L1904.93 1212.39 L1905.52 1212.39 L1906.11 1212.39 L1906.69 1212.39 L1907.28 1212.39 L1907.87 1212.39 L1908.45 1212.39 L1909.04 1212.39 L1909.63 1212.39 L1910.21 1212.39 L1910.8 1212.39 L1911.38 1212.39 L1911.97 1212.39 L1912.56 1212.39 L1913.14 1212.39 L1913.73 1212.39 L1914.32 1212.39 L1914.9 1212.39 L1915.49 1212.39 L1916.08 1212.39 L1916.66 1212.39 L1917.25 1212.39 L1917.83 1212.39 L1918.42 1212.39 L1919.01 1212.39 L1919.59 1212.39 L1920.18 1212.39 L1920.77 1212.39 L1921.35 1212.39 L1921.94 1212.39 L1922.53 1212.39 L1923.11 1212.39 L1923.7 1212.39 L1924.29 1212.39 L1924.87 1212.39 L1925.46 1212.39 L1926.04 1212.39 L1926.63 1212.39 L1927.22 1212.39 L1927.8 1212.39 L1928.39 1212.39 L1928.98 1212.39 L1929.56 1212.39 L1930.15 1212.39 L1930.74 1212.39 L1931.32 1212.39 L1931.91 1212.39 L1932.5 1212.39 L1933.08 1212.39 L1933.67 1212.39 L1934.25 1212.39 L1934.84 1212.39 L1935.43 1212.39 L1936.01 1212.39 L1936.6 1212.39 L1937.19 1212.39 L1937.77 1212.39 L1938.36 1212.39 L1938.95 1212.39 L1939.53 1212.39 L1940.12 1212.39 L1940.71 1212.39 L1941.29 1212.39 L1941.88 1212.39 L1942.46 1212.39 L1943.05 1212.39 L1943.64 1212.39 L1944.22 1212.39 L1944.81 1212.39 L1945.4 1212.39 L1945.98 1212.39 L1946.57 1212.39 L1947.16 1212.39 L1947.74 1212.39 L1948.33 1212.39 L1948.91 1212.39 L1949.5 1212.39 L1950.09 1212.39 L1950.67 1212.39 L1951.26 1212.39 L1951.85 1212.39 L1952.43 1212.39 L1953.02 1212.39 L1953.61 1212.39 L1954.19 1212.39 L1954.78 1212.39 L1955.37 1212.39 L1955.95 1212.39 L1956.54 1212.39 L1957.12 1212.39 L1957.71 1212.39 L1958.3 1212.39 L1958.88 1212.39 L1959.47 1212.39 L1960.06 1212.39 L1960.64 1212.39 L1961.23 1212.39 L1961.82 1212.39 L1962.4 1212.39 L1962.99 1212.39 L1963.58 1212.39 L1964.16 1212.39 L1964.75 1212.39 L1965.33 1212.39 L1965.92 1212.39 L1966.51 1212.39 L1967.09 1212.39 L1967.68 1212.39 L1968.27 1212.39 L1968.85 1212.39 L1969.44 1212.39 L1970.03 1212.39 L1970.61 1212.39 L1971.2 1212.39 L1971.78 1212.39 L1972.37 1212.39 L1972.96 1212.39 L1973.54 1212.39 L1974.13 1212.39 L1974.72 1212.39 L1975.3 1212.39 L1975.89 1212.39 L1976.48 1212.39 L1977.06 1212.39 L1977.65 1212.39 L1978.24 1212.39 L1978.82 1212.39 L1979.41 1212.39 L1979.99 1212.39 L1980.58 1212.39 L1981.17 1212.39 L1981.75 1212.39 L1982.34 1212.39 L1982.93 1212.39 L1983.51 1212.39 L1984.1 1212.39 L1984.69 1212.39 L1985.27 1212.39 L1985.86 1212.39 L1986.45 1212.39 L1987.03 1212.39 L1987.62 1212.39 L1988.2 1212.39 L1988.79 1212.39 L1989.38 1212.39 L1989.96 1212.39 L1990.55 1212.39 L1991.14 1212.39 L1991.72 1212.39 L1992.31 1212.39 L1992.9 1212.39 L1993.48 1212.39 L1994.07 1212.39 L1994.65 1212.39 L1995.24 1212.39 L1995.83 1212.39 L1996.41 1212.39 L1997 1212.39 L1997.59 1212.39 L1998.17 1212.39 L1998.76 1212.39 L1999.35 1212.39 L1999.93 1212.39 L2000.52 1212.39 L2001.11 1212.39 L2001.69 1212.39 L2002.28 1212.39 L2002.86 1212.39 L2003.45 1212.39 L2004.04 1212.39 L2004.62 1212.39 L2005.21 1212.39 L2005.8 1212.39 L2006.38 1212.39 L2006.97 1212.39 L2007.56 1212.39 L2008.14 1212.39 L2008.73 1212.39 L2009.32 1212.39 L2009.9 1212.39 L2010.49 1212.39 L2011.07 1212.39 L2011.66 1212.39 L2012.25 1212.39 L2012.83 1212.39 L2013.42 1212.39 L2014.01 1212.39 L2014.59 1212.39 L2015.18 1212.39 L2015.77 1212.39 L2016.35 1212.39 L2016.94 1212.39 L2017.53 1212.39 L2018.11 1212.39 L2018.7 1212.39 L2019.28 1212.39 L2019.87 1212.39 L2020.46 1212.39 L2021.04 1212.39 L2021.63 1212.39 L2022.22 1212.39 L2022.8 1212.39 L2023.39 1212.39 L2023.98 1212.39 L2024.56 1212.39 L2025.15 1212.39 L2025.73 1212.39 L2026.32 1212.39 L2026.91 1212.39 L2027.49 1212.39 L2028.08 1212.39 L2028.67 1212.39 L2029.25 1212.39 L2029.84 1212.39 L2030.43 1212.39 L2031.01 1212.39 L2031.6 1212.39 L2032.19 1212.39 L2032.77 1212.39 L2033.36 1212.39 L2033.94 1212.39 L2034.53 1212.39 L2035.12 1212.39 L2035.7 1212.39 L2036.29 1212.39 L2036.88 1212.39 L2037.46 1212.39 L2038.05 1212.39 L2038.64 1212.39 L2039.22 1212.39 L2039.81 1212.39 L2040.4 1212.39 L2040.98 1212.39 L2041.57 1212.39 L2042.15 1212.39 L2042.74 1212.39 L2043.33 1212.39 L2043.91 1212.39 L2044.5 1212.39 L2045.09 1212.39 L2045.67 1212.39 L2046.26 1212.39 L2046.85 1212.39 L2047.43 1212.39 L2048.02 1212.39 L2048.6 1212.39 L2049.19 1212.39 L2049.78 1212.39 L2050.36 1212.39 L2050.95 1212.39 L2051.54 1212.39 L2052.12 1212.39 L2052.71 1212.39 L2053.3 1212.39 L2053.88 1212.39 L2054.47 1212.39 L2055.06 1212.39 L2055.64 1212.39 L2056.23 1212.39 L2056.81 1212.39 L2057.4 1212.39 L2057.99 1212.39 L2058.57 1212.39 L2059.16 1212.39 L2059.75 1212.39 L2060.33 1212.39 L2060.92 1212.39 L2061.51 1212.39 L2062.09 1212.39 L2062.68 1212.39 L2063.27 1212.39 L2063.85 1212.39 L2064.44 1212.39 L2065.02 1212.39 L2065.61 1212.39 L2066.2 1212.39 L2066.78 1212.39 L2067.37 1212.39 L2067.96 1212.39 L2068.54 1212.39 L2069.13 1212.39 L2069.72 1212.39 L2070.3 1212.39 L2070.89 1212.39 L2071.48 1212.39 L2072.06 1212.39 L2072.65 1212.39 L2073.23 1212.39 L2073.82 1212.39 L2074.41 1212.39 L2074.99 1212.39 L2075.58 1212.39 L2076.17 1212.39 L2076.75 1212.39 L2077.34 1212.39 L2077.93 1212.39 L2078.51 1212.39 L2079.1 1212.39 L2079.68 1212.39 L2080.27 1212.39 L2080.86 1212.39 L2081.44 1212.39 L2082.03 1212.39 L2082.62 1212.39 L2083.2 1212.39 L2083.79 1212.39 L2084.38 1212.39 L2084.96 1212.39 L2085.55 1212.39 L2086.14 1212.39 L2086.72 1212.39 L2087.31 1212.39 L2087.89 1212.39 L2088.48 1212.39 L2089.07 1212.39 L2089.65 1212.39 L2090.24 1212.39 L2090.83 1212.39 L2091.41 1212.39 L2092 1212.39 L2092.59 1212.39 L2093.17 1212.39 L2093.76 1212.39 L2094.35 1212.39 L2094.93 1212.39 L2095.52 1212.39 L2096.1 1212.39 L2096.69 1212.39 L2097.28 1212.39 L2097.86 1212.39 L2098.45 1212.39 L2099.04 1212.39 L2099.62 1212.39 L2100.21 1212.39 L2100.8 1212.39 L2101.38 1212.39 L2101.97 1212.39 L2102.55 1212.39 L2103.14 1212.39 L2103.73 1212.39 L2104.31 1212.39 L2104.9 1212.39 L2105.49 1212.39 L2106.07 1212.39 L2106.66 1212.39 L2107.25 1212.39 L2107.83 1212.39 L2108.42 1212.39 L2109.01 1212.39 L2109.59 1212.39 L2110.18 1212.39 L2110.76 1212.39 L2111.35 1212.39 L2111.94 1212.39 L2112.52 1212.39 L2113.11 1212.39 L2113.7 1212.39 L2114.28 1212.39 L2114.87 1212.39 L2115.46 1212.39 L2116.04 1212.39 L2116.63 1212.39 L2117.22 1212.39 L2117.8 1212.39 L2118.39 1212.39 L2118.97 1212.39 L2119.56 1212.39 L2120.15 1212.39 L2120.73 1212.39 L2121.32 1212.39 L2121.91 1212.39 L2122.49 1212.39 L2123.08 1212.39 L2123.67 1212.39 L2124.25 1212.39 L2124.84 1212.39 L2125.42 1212.39 L2126.01 1212.39 L2126.6 1212.39 L2127.18 1212.39 L2127.77 1212.39 L2128.36 1212.39 L2128.94 1212.39 L2129.53 1212.39 L2130.12 1212.39 L2130.7 1212.39 L2131.29 1212.39 L2131.88 1212.39 L2132.46 1212.39 L2133.05 1212.39 L2133.63 1212.39 L2134.22 1212.39 L2134.81 1212.39 L2135.39 1212.39 L2135.98 1212.39 L2136.57 1212.39 L2137.15 1212.39 L2137.74 1212.39 L2138.33 1212.39 L2138.91 1212.39 L2139.5 1212.39 L2140.09 1212.39 L2140.67 1212.39 L2141.26 1212.39 L2141.84 1212.39 L2142.43 1212.39 L2143.02 1212.39 L2143.6 1212.39 L2144.19 1212.39 L2144.78 1212.39 L2145.36 1212.39 L2145.95 1212.39 L2146.54 1212.39 L2147.12 1212.39 L2147.71 1212.39 L2148.3 1212.39 L2148.88 1212.39 L2149.47 1212.39 L2150.05 1212.39 L2150.64 1212.39 L2151.23 1212.39 L2151.81 1212.39 L2152.4 1212.39 L2152.99 1212.39 L2153.57 1212.39 L2154.16 1212.39 L2154.75 1212.39 L2155.33 1212.39 L2155.92 1212.39 L2156.5 1212.39 L2157.09 1212.39 L2157.68 1212.39 L2158.26 1212.39 L2158.26 1211.79 L2157.68 1211.79 L2157.09 1211.79 L2156.5 1211.79 L2155.92 1211.79 L2155.33 1211.79 L2154.75 1211.79 L2154.16 1211.79 L2153.57 1211.79 L2152.99 1211.79 L2152.4 1211.79 L2151.81 1211.79 L2151.23 1211.79 L2150.64 1211.79 L2150.05 1211.79 L2149.47 1211.79 L2148.88 1211.79 L2148.3 1211.79 L2147.71 1211.79 L2147.12 1211.79 L2146.54 1211.79 L2145.95 1211.79 L2145.36 1211.79 L2144.78 1211.79 L2144.19 1211.79 L2143.6 1211.79 L2143.02 1211.79 L2142.43 1211.79 L2141.84 1211.79 L2141.26 1211.79 L2140.67 1211.79 L2140.09 1211.79 L2139.5 1211.79 L2138.91 1211.79 L2138.33 1211.79 L2137.74 1211.79 L2137.15 1211.79 L2136.57 1211.79 L2135.98 1211.79 L2135.39 1211.79 L2134.81 1211.79 L2134.22 1211.79 L2133.63 1211.79 L2133.05 1211.79 L2132.46 1211.79 L2131.88 1211.79 L2131.29 1211.79 L2130.7 1211.79 L2130.12 1211.79 L2129.53 1211.79 L2128.94 1211.79 L2128.36 1211.79 L2127.77 1211.79 L2127.18 1211.79 L2126.6 1211.79 L2126.01 1211.79 L2125.42 1211.79 L2124.84 1211.79 L2124.25 1211.79 L2123.67 1211.79 L2123.08 1211.79 L2122.49 1211.79 L2121.91 1211.79 L2121.32 1211.79 L2120.73 1211.79 L2120.15 1211.79 L2119.56 1211.79 L2118.97 1211.79 L2118.39 1211.79 L2117.8 1211.79 L2117.22 1211.79 L2116.63 1211.79 L2116.04 1211.79 L2115.46 1211.79 L2114.87 1211.79 L2114.28 1211.79 L2113.7 1211.79 L2113.11 1211.79 L2112.52 1211.79 L2111.94 1211.79 L2111.35 1211.79 L2110.76 1211.79 L2110.18 1211.79 L2109.59 1211.79 L2109.01 1211.79 L2108.42 1211.79 L2107.83 1211.79 L2107.25 1211.79 L2106.66 1211.79 L2106.07 1211.79 L2105.49 1211.79 L2104.9 1211.79 L2104.31 1211.79 L2103.73 1211.79 L2103.14 1211.79 L2102.55 1211.79 L2101.97 1211.79 L2101.38 1211.79 L2100.8 1211.79 L2100.21 1211.79 L2099.62 1211.79 L2099.04 1211.79 L2098.45 1211.79 L2097.86 1211.79 L2097.28 1211.79 L2096.69 1211.79 L2096.1 1211.79 L2095.52 1211.79 L2094.93 1211.79 L2094.35 1211.79 L2093.76 1211.79 L2093.17 1211.79 L2092.59 1211.79 L2092 1211.79 L2091.41 1211.79 L2090.83 1211.79 L2090.24 1211.79 L2089.65 1211.79 L2089.07 1211.79 L2088.48 1211.79 L2087.89 1211.79 L2087.31 1211.79 L2086.72 1211.79 L2086.14 1211.79 L2085.55 1211.79 L2084.96 1211.79 L2084.38 1211.79 L2083.79 1211.79 L2083.2 1211.79 L2082.62 1211.79 L2082.03 1211.79 L2081.44 1211.79 L2080.86 1211.79 L2080.27 1211.79 L2079.68 1211.79 L2079.1 1211.79 L2078.51 1211.79 L2077.93 1211.79 L2077.34 1211.79 L2076.75 1211.79 L2076.17 1211.79 L2075.58 1211.79 L2074.99 1211.79 L2074.41 1211.79 L2073.82 1211.79 L2073.23 1211.79 L2072.65 1211.79 L2072.06 1211.79 L2071.48 1211.79 L2070.89 1211.79 L2070.3 1211.79 L2069.72 1211.79 L2069.13 1211.79 L2068.54 1211.79 L2067.96 1211.79 L2067.37 1211.79 L2066.78 1211.79 L2066.2 1211.79 L2065.61 1211.79 L2065.02 1211.79 L2064.44 1211.79 L2063.85 1211.79 L2063.27 1211.79 L2062.68 1211.79 L2062.09 1211.79 L2061.51 1211.79 L2060.92 1211.79 L2060.33 1211.79 L2059.75 1211.79 L2059.16 1211.79 L2058.57 1211.79 L2057.99 1211.79 L2057.4 1211.79 L2056.81 1211.79 L2056.23 1211.79 L2055.64 1211.79 L2055.06 1211.79 L2054.47 1211.79 L2053.88 1211.79 L2053.3 1211.79 L2052.71 1211.79 L2052.12 1211.79 L2051.54 1211.79 L2050.95 1211.79 L2050.36 1211.79 L2049.78 1211.79 L2049.19 1211.79 L2048.6 1211.79 L2048.02 1211.79 L2047.43 1211.79 L2046.85 1211.79 L2046.26 1211.79 L2045.67 1211.79 L2045.09 1211.79 L2044.5 1211.79 L2043.91 1211.79 L2043.33 1211.79 L2042.74 1211.79 L2042.15 1211.79 L2041.57 1211.79 L2040.98 1211.79 L2040.4 1211.79 L2039.81 1211.79 L2039.22 1211.79 L2038.64 1211.79 L2038.05 1211.79 L2037.46 1211.79 L2036.88 1211.79 L2036.29 1211.79 L2035.7 1211.79 L2035.12 1211.79 L2034.53 1211.79 L2033.94 1211.79 L2033.36 1211.79 L2032.77 1211.79 L2032.19 1211.79 L2031.6 1211.79 L2031.01 1211.79 L2030.43 1211.79 L2029.84 1211.79 L2029.25 1211.79 L2028.67 1211.79 L2028.08 1211.79 L2027.49 1211.79 L2026.91 1211.79 L2026.32 1211.79 L2025.73 1211.79 L2025.15 1211.79 L2024.56 1211.79 L2023.98 1211.79 L2023.39 1211.79 L2022.8 1211.79 L2022.22 1211.79 L2021.63 1211.79 L2021.04 1211.79 L2020.46 1211.79 L2019.87 1211.79 L2019.28 1211.79 L2018.7 1211.79 L2018.11 1211.79 L2017.53 1211.79 L2016.94 1211.79 L2016.35 1211.79 L2015.77 1211.79 L2015.18 1211.79 L2014.59 1211.79 L2014.01 1211.79 L2013.42 1211.79 L2012.83 1211.79 L2012.25 1211.79 L2011.66 1211.79 L2011.07 1211.79 L2010.49 1211.79 L2009.9 1211.79 L2009.32 1211.79 L2008.73 1211.79 L2008.14 1211.79 L2007.56 1211.79 L2006.97 1211.79 L2006.38 1211.79 L2005.8 1211.79 L2005.21 1211.79 L2004.62 1211.79 L2004.04 1211.79 L2003.45 1211.79 L2002.86 1211.79 L2002.28 1211.79 L2001.69 1211.79 L2001.11 1211.79 L2000.52 1211.79 L1999.93 1211.79 L1999.35 1211.79 L1998.76 1211.79 L1998.17 1211.79 L1997.59 1211.79 L1997 1211.79 L1996.41 1211.79 L1995.83 1211.79 L1995.24 1211.79 L1994.65 1211.79 L1994.07 1211.79 L1993.48 1211.79 L1992.9 1211.79 L1992.31 1211.79 L1991.72 1211.79 L1991.14 1211.79 L1990.55 1211.79 L1989.96 1211.79 L1989.38 1211.79 L1988.79 1211.79 L1988.2 1211.79 L1987.62 1211.79 L1987.03 1211.79 L1986.45 1211.79 L1985.86 1211.79 L1985.27 1211.79 L1984.69 1211.79 L1984.1 1211.79 L1983.51 1211.79 L1982.93 1211.79 L1982.34 1211.79 L1981.75 1211.79 L1981.17 1211.79 L1980.58 1211.79 L1979.99 1211.79 L1979.41 1211.79 L1978.82 1211.79 L1978.24 1211.79 L1977.65 1211.79 L1977.06 1211.79 L1976.48 1211.79 L1975.89 1211.79 L1975.3 1211.79 L1974.72 1211.79 L1974.13 1211.79 L1973.54 1211.79 L1972.96 1211.79 L1972.37 1211.79 L1971.78 1211.79 L1971.2 1211.79 L1970.61 1211.79 L1970.03 1211.79 L1969.44 1211.79 L1968.85 1211.79 L1968.27 1211.79 L1967.68 1211.79 L1967.09 1211.79 L1966.51 1211.79 L1965.92 1211.79 L1965.33 1211.79 L1964.75 1211.79 L1964.16 1211.79 L1963.58 1211.79 L1962.99 1211.79 L1962.4 1211.79 L1961.82 1211.79 L1961.23 1211.79 L1960.64 1211.79 L1960.06 1211.79 L1959.47 1211.79 L1958.88 1211.79 L1958.3 1211.79 L1957.71 1211.79 L1957.12 1211.79 L1956.54 1211.79 L1955.95 1211.79 L1955.37 1211.79 L1954.78 1211.79 L1954.19 1211.79 L1953.61 1211.79 L1953.02 1211.79 L1952.43 1211.79 L1951.85 1211.79 L1951.26 1211.79 L1950.67 1211.79 L1950.09 1211.79 L1949.5 1211.79 L1948.91 1211.79 L1948.33 1211.79 L1947.74 1211.79 L1947.16 1211.79 L1946.57 1211.79 L1945.98 1211.79 L1945.4 1211.79 L1944.81 1211.79 L1944.22 1211.79 L1943.64 1211.79 L1943.05 1211.79 L1942.46 1211.79 L1941.88 1211.79 L1941.29 1211.79 L1940.71 1211.79 L1940.12 1211.79 L1939.53 1211.79 L1938.95 1211.79 L1938.36 1211.79 L1937.77 1211.79 L1937.19 1211.79 L1936.6 1211.79 L1936.01 1211.79 L1935.43 1211.79 L1934.84 1211.79 L1934.25 1211.79 L1933.67 1211.79 L1933.08 1211.79 L1932.5 1211.79 L1931.91 1211.79 L1931.32 1211.79 L1930.74 1211.79 L1930.15 1211.79 L1929.56 1211.79 L1928.98 1211.79 L1928.39 1211.79 L1927.8 1211.79 L1927.22 1211.79 L1926.63 1211.79 L1926.04 1211.79 L1925.46 1211.79 L1924.87 1211.79 L1924.29 1211.79 L1923.7 1211.79 L1923.11 1211.79 L1922.53 1211.79 L1921.94 1211.79 L1921.35 1211.79 L1920.77 1211.79 L1920.18 1211.79 L1919.59 1211.79 L1919.01 1211.79 L1918.42 1211.79 L1917.83 1211.79 L1917.25 1211.79 L1916.66 1211.79 L1916.08 1211.79 L1915.49 1211.79 L1914.9 1211.79 L1914.32 1211.79 L1913.73 1211.79 L1913.14 1211.79 L1912.56 1211.79 L1911.97 1211.79 L1911.38 1211.79 L1910.8 1211.79 L1910.21 1211.79 L1909.63 1211.79 L1909.04 1211.79 L1908.45 1211.79 L1907.87 1211.79 L1907.28 1211.79 L1906.69 1211.79 L1906.11 1211.79 L1905.52 1211.79 L1904.93 1211.79 L1904.35 1211.79 L1903.76 1211.79 L1903.17 1211.79 L1902.59 1211.79 L1902 1211.79 L1901.42 1211.79 L1900.83 1211.79 L1900.24 1211.79 L1899.66 1211.79 L1899.07 1211.79 L1898.48 1211.79 L1897.9 1211.79 L1897.31 1211.79 L1896.72 1211.79 L1896.14 1211.79 L1895.55 1211.79 L1894.96 1211.79 L1894.38 1211.79 L1893.79 1211.79 L1893.21 1211.79 L1892.62 1211.79 L1892.03 1211.79 L1891.45 1211.79 L1890.86 1211.79 L1890.27 1211.79 L1889.69 1211.79 L1889.1 1211.79 L1888.51 1211.79 L1887.93 1211.79 L1887.34 1211.79 L1886.76 1211.79 L1886.17 1211.79 L1885.58 1211.79 L1885 1211.79 L1884.41 1211.79 L1883.82 1211.79 L1883.24 1211.79 L1882.65 1211.79 L1882.06 1211.79 L1881.48 1211.79 L1880.89 1211.79 L1880.3 1211.79 L1879.72 1211.79 L1879.13 1211.79 L1878.55 1211.79 L1877.96 1211.79 L1877.37 1211.79 L1876.79 1211.79 L1876.2 1211.79 L1875.61 1211.79 L1875.03 1211.79 L1874.44 1211.79 L1873.85 1211.79 L1873.27 1211.79 L1872.68 1211.79 L1872.09 1211.79 L1871.51 1211.79 L1870.92 1211.79 L1870.34 1211.79 L1869.75 1211.79 L1869.16 1211.79 L1868.58 1211.79 L1867.99 1211.79 L1867.4 1211.79 L1866.82 1211.79 L1866.23 1211.79 L1865.64 1211.79 L1865.06 1211.79 L1864.47 1211.79 L1863.88 1211.79 L1863.3 1211.79 L1862.71 1211.79 L1862.13 1211.79 L1861.54 1211.79 L1860.95 1211.79 L1860.37 1211.79 L1859.78 1211.79 L1859.19 1211.79 L1858.61 1211.79 L1858.02 1211.79 L1857.43 1211.79 L1856.85 1211.79 L1856.26 1211.79 L1855.68 1211.79 L1855.09 1211.79 L1854.5 1211.79 L1853.92 1211.79 L1853.33 1211.79 L1852.74 1211.79 L1852.16 1211.79 L1851.57 1211.79 L1850.98 1211.79 L1850.4 1211.79 L1849.81 1211.79 L1849.22 1211.79 L1848.64 1211.79 L1848.05 1211.79 L1847.47 1211.79 L1846.88 1211.79 L1846.29 1211.79 L1845.71 1211.79 L1845.12 1211.79 L1844.53 1211.79 L1843.95 1211.79 L1843.36 1211.79 L1842.77 1211.79 L1842.19 1211.79 L1841.6 1211.79 L1841.01 1211.79 L1840.43 1211.79 L1839.84 1211.79 L1839.26 1211.79 L1838.67 1211.79 L1838.08 1211.79 L1837.5 1211.79 L1836.91 1211.79 L1836.32 1211.79 L1835.74 1211.79 L1835.15 1211.79 L1834.56 1211.79 L1833.98 1211.79 L1833.39 1211.79 L1832.81 1211.79 L1832.22 1211.79 L1831.63 1211.79 L1831.05 1211.79 L1830.46 1211.79 L1829.87 1211.79 L1829.29 1211.79 L1828.7 1211.79 L1828.11 1211.79 L1827.53 1211.79 L1826.94 1211.79 L1826.35 1211.79 L1825.77 1211.79 L1825.18 1211.79 L1824.6 1211.79 L1824.01 1211.79 L1823.42 1211.79 L1822.84 1211.79 L1822.25 1211.79 L1821.66 1211.79 L1821.08 1211.79 L1820.49 1211.79 L1819.9 1211.79 L1819.32 1211.79 L1818.73 1211.79 L1818.14 1211.79 L1817.56 1211.79 L1816.97 1211.79 L1816.39 1211.79 L1815.8 1211.79 L1815.21 1211.79 L1814.63 1211.79 L1814.04 1211.79 L1813.45 1211.79 L1812.87 1211.79 L1812.28 1211.79 L1811.69 1211.79 L1811.11 1211.79 L1810.52 1211.79 L1809.94 1211.79 L1809.35 1211.79 L1808.76 1211.79 L1808.18 1211.79 L1807.59 1211.79 L1807 1211.79 L1806.42 1211.79 L1805.83 1211.79 L1805.24 1211.79 L1804.66 1211.79 L1804.07 1211.79 L1803.48 1211.79 L1802.9 1211.79 L1802.31 1211.79 L1801.73 1211.79 L1801.14 1211.79 L1800.55 1211.79 L1799.97 1211.79 L1799.38 1211.79 L1798.79 1211.79 L1798.21 1211.79 L1797.62 1211.79 L1797.03 1211.79 L1796.45 1211.79 L1795.86 1211.79 L1795.27 1211.79 L1794.69 1211.79 L1794.1 1211.79 L1793.52 1211.79 L1792.93 1211.79 L1792.34 1211.79 L1791.76 1211.79 L1791.17 1211.79 L1790.58 1211.79 L1790 1211.79 L1789.41 1211.79 L1788.82 1211.79 L1788.24 1211.79 L1787.65 1211.79 L1787.06 1211.79 L1786.48 1211.79 L1785.89 1211.79 L1785.31 1211.79 L1784.72 1211.79 L1784.13 1211.79 L1783.55 1211.79 L1782.96 1211.79 L1782.37 1211.79 L1781.79 1211.79 L1781.2 1211.79 L1780.61 1211.79 L1780.03 1211.79 L1779.44 1211.79 L1778.86 1211.79 L1778.27 1211.79 L1777.68 1211.79 L1777.1 1211.79 L1776.51 1211.79 L1775.92 1211.79 L1775.34 1211.79 L1774.75 1211.79 L1774.16 1211.79 L1773.58 1211.79 L1772.99 1211.79 L1772.4 1211.79 L1771.82 1211.79 L1771.23 1211.79 L1770.65 1211.79 L1770.06 1211.79 L1769.47 1211.79 L1768.89 1211.79 L1768.3 1211.79 L1767.71 1211.79 L1767.13 1211.79 L1766.54 1211.79 L1765.95 1211.79 L1765.37 1211.79 L1764.78 1211.79 L1764.19 1211.79 L1763.61 1211.79 L1763.02 1211.79 L1762.44 1211.79 L1761.85 1211.79 L1761.26 1211.79 L1760.68 1211.79 L1760.09 1211.79 L1759.5 1211.79 L1758.92 1211.79 L1758.33 1211.79 L1757.74 1211.79 L1757.16 1211.79 L1756.57 1211.79 L1755.99 1211.79 L1755.4 1211.79 L1754.81 1211.79 L1754.23 1211.79 L1753.64 1211.79 L1753.05 1211.79 L1752.47 1211.79 L1751.88 1211.79 L1751.29 1211.79 L1750.71 1211.79 L1750.12 1211.79 L1749.53 1211.79 L1748.95 1211.79 L1748.36 1211.79 L1747.78 1211.79 L1747.19 1211.79 L1746.6 1211.79 L1746.02 1211.79 L1745.43 1211.79 L1744.84 1211.79 L1744.26 1211.79 L1743.67 1211.79 L1743.08 1211.79 L1742.5 1211.79 L1741.91 1211.79 L1741.32 1211.79 L1740.74 1211.79 L1740.15 1211.79 L1739.57 1211.79 L1738.98 1211.79 L1738.39 1211.79 L1737.81 1211.79 L1737.22 1211.79 L1736.63 1211.79 L1736.05 1211.79 L1735.46 1211.79 L1734.87 1211.79 L1734.29 1211.79 L1733.7 1211.79 L1733.11 1211.79 L1732.53 1211.79 L1731.94 1211.79 L1731.36 1211.79 L1730.77 1211.79 L1730.18 1211.79 L1729.6 1211.79 L1729.01 1211.79 L1728.42 1211.79 L1727.84 1211.79 L1727.25 1211.79 L1726.66 1211.79 L1726.08 1211.79 L1725.49 1211.79 L1724.91 1211.79 L1724.32 1211.79 L1723.73 1211.79 L1723.15 1211.79 L1722.56 1211.79 L1721.97 1211.79 L1721.39 1211.79 L1720.8 1211.79 L1720.21 1211.79 L1719.63 1211.79 L1719.04 1211.79 L1718.45 1211.79 L1717.87 1211.79 L1717.28 1211.79 L1716.7 1211.79 L1716.11 1211.79 L1715.52 1211.79 L1714.94 1211.79 L1714.35 1211.79 L1713.76 1211.79 L1713.18 1211.79 L1712.59 1211.79 L1712 1211.79 L1711.42 1211.79 L1710.83 1211.79 L1710.24 1211.79 L1709.66 1211.79 L1709.07 1211.79 L1708.49 1211.79 L1707.9 1211.79 L1707.31 1211.79 L1706.73 1211.79 L1706.14 1211.79 L1705.55 1211.79 L1704.97 1211.79 L1704.38 1211.79 L1703.79 1211.79 L1703.21 1211.79 L1702.62 1211.79 L1702.04 1211.79 L1701.45 1211.79 L1700.86 1211.79 L1700.28 1211.79 L1699.69 1211.79 L1699.1 1211.79 L1698.52 1211.79 L1697.93 1211.79 L1697.34 1211.79 L1696.76 1211.79 L1696.17 1211.79 L1695.58 1211.79 L1695 1211.79 L1694.41 1211.79 L1693.83 1211.79 L1693.24 1211.79 L1692.65 1211.79 L1692.07 1211.79 L1691.48 1211.79 L1690.89 1211.79 L1690.31 1211.79 L1689.72 1211.79 L1689.13 1211.79 L1688.55 1211.79 L1687.96 1211.79 L1687.37 1211.79 L1686.79 1211.79 L1686.2 1211.79 L1685.62 1211.79 L1685.03 1211.79 L1684.44 1211.79 L1683.86 1211.79 L1683.27 1211.79 L1682.68 1211.79 L1682.1 1211.79 L1681.51 1211.79 L1680.92 1211.79 L1680.34 1211.79 L1679.75 1211.79 L1679.17 1211.79 L1678.58 1211.79 L1677.99 1211.79 L1677.41 1211.79 L1676.82 1211.79 L1676.23 1211.79 L1675.65 1211.79 L1675.06 1211.79 L1674.47 1211.79 L1673.89 1211.79 L1673.3 1211.79 L1672.71 1211.79 L1672.13 1211.79 L1671.54 1211.79 L1670.96 1211.79 L1670.37 1211.79 L1669.78 1211.79 L1669.2 1211.79 L1668.61 1211.79 L1668.02 1211.79 L1667.44 1211.79 L1666.85 1211.79 L1666.26 1211.79 L1665.68 1211.79 L1665.09 1211.79 L1664.5 1211.79 L1663.92 1211.79 L1663.33 1211.79 L1662.75 1211.79 L1662.16 1211.79 L1661.57 1211.79 L1660.99 1211.79 L1660.4 1211.79 L1659.81 1211.79 L1659.23 1211.79 L1658.64 1211.79 L1658.05 1211.79 L1657.47 1211.79 L1656.88 1211.79 L1656.29 1211.79 L1655.71 1211.79 L1655.12 1211.79 L1654.54 1211.79 L1653.95 1211.79 L1653.36 1211.79 L1652.78 1211.79 L1652.19 1211.79 L1651.6 1211.79 L1651.02 1211.79 L1650.43 1211.79 L1649.84 1211.79 L1649.26 1211.79 L1648.67 1211.79 L1648.09 1211.79 L1647.5 1211.79 L1646.91 1211.79 L1646.33 1211.79 L1645.74 1211.79 L1645.15 1211.79 L1644.57 1211.79 L1643.98 1211.79 L1643.39 1211.79 L1642.81 1211.79 L1642.22 1211.79 L1641.63 1211.79 L1641.05 1211.79 L1640.46 1211.79 L1639.88 1211.79 L1639.29 1211.79 L1638.7 1211.79 L1638.12 1211.79 L1637.53 1211.79 L1636.94 1211.79 L1636.36 1211.79 L1635.77 1211.79 L1635.18 1211.79 L1634.6 1211.79 L1634.01 1211.79 L1633.42 1211.79 L1632.84 1211.79 L1632.25 1211.79 L1631.67 1211.79 L1631.08 1211.79 L1630.49 1211.79 L1629.91 1211.79 L1629.32 1211.79 L1628.73 1211.79 L1628.15 1211.79 L1627.56 1211.79 L1626.97 1211.79 L1626.39 1211.79 L1625.8 1211.79 L1625.22 1211.79 L1624.63 1211.79 L1624.04 1211.79 L1623.46 1211.79 L1622.87 1211.79 L1622.28 1211.79 L1621.7 1211.79 L1621.11 1211.79 L1620.52 1211.79 L1619.94 1211.79 L1619.35 1211.79 L1618.76 1211.79 L1618.18 1211.79 L1617.59 1211.79 L1617.01 1211.79 L1616.42 1211.79 L1615.83 1211.79 L1615.25 1211.79 L1614.66 1211.79 L1614.07 1211.79 L1613.49 1211.79 L1612.9 1211.79 L1612.31 1211.79 L1611.73 1211.79 L1611.14 1211.79 L1610.55 1211.79 L1609.97 1211.79 L1609.38 1211.79 L1608.8 1211.79 L1608.21 1211.79 L1607.62 1211.79 L1607.04 1211.79 L1606.45 1211.79 L1605.86 1211.79 L1605.28 1211.79 L1604.69 1211.79 L1604.1 1211.79 L1603.52 1211.79 L1602.93 1211.79 L1602.34 1211.79 L1601.76 1211.79 L1601.17 1211.79 L1600.59 1211.79 L1600 1211.79 L1599.41 1211.79 L1598.83 1211.79 L1598.24 1211.79 L1597.65 1211.79 L1597.07 1211.79 L1596.48 1211.79 L1595.89 1211.79 L1595.31 1211.79 L1594.72 1211.79 L1594.14 1211.79 L1593.55 1211.79 L1592.96 1211.79 L1592.38 1211.79 L1591.79 1211.79 L1591.2 1211.79 L1590.62 1211.79 L1590.03 1211.79 L1589.44 1211.79 L1588.86 1211.79 L1588.27 1211.79 L1587.68 1211.79 L1587.1 1211.79 L1586.51 1211.79 L1585.93 1211.79 L1585.34 1211.79 L1584.75 1211.79 L1584.17 1211.79 L1583.58 1211.79 L1582.99 1211.79 L1582.41 1211.79 L1581.82 1211.79 L1581.23 1211.79 L1580.65 1211.79 L1580.06 1211.79 L1579.47 1211.79 L1578.89 1211.79 L1578.3 1211.79 L1577.72 1211.79 L1577.13 1211.79 L1576.54 1211.79 L1575.96 1211.79 L1575.37 1211.79 L1574.78 1211.79 L1574.2 1211.79 L1573.61 1211.79 L1573.02 1211.79 L1572.44 1211.79 L1571.85 1211.79 L1571.27 1211.79 L1570.68 1211.79 L1570.09 1211.79 L1569.51 1211.79 L1568.92 1211.79 L1568.33 1211.79 L1567.75 1211.79 L1567.16 1211.79 L1566.57 1211.79 L1565.99 1211.79 L1565.4 1211.79 L1564.81 1211.79 L1564.23 1211.79 L1563.64 1211.79 L1563.06 1211.79 L1562.47 1211.79 L1561.88 1211.79 L1561.3 1211.79 L1560.71 1211.79 L1560.12 1211.79 L1559.54 1211.79 L1558.95 1211.79 L1558.36 1211.79 L1557.78 1211.79 L1557.19 1211.79 L1556.6 1211.79 L1556.02 1211.79 L1555.43 1211.79 L1554.85 1211.79 L1554.26 1211.79 L1553.67 1211.79 L1553.09 1211.79 L1552.5 1211.79 L1551.91 1211.79 L1551.33 1211.79 L1550.74 1211.79 L1550.15 1211.79 L1549.57 1211.79 L1548.98 1211.79 L1548.4 1211.79 L1547.81 1211.79 L1547.22 1211.79 L1546.64 1211.79 L1546.05 1211.79 L1545.46 1211.79 L1544.88 1211.79 L1544.29 1211.79 L1543.7 1211.79 L1543.12 1211.79 L1542.53 1211.79 L1541.94 1211.79 L1541.36 1211.79 L1540.77 1211.79 L1540.19 1211.79 L1539.6 1211.79 L1539.01 1211.79 L1538.43 1211.79 L1537.84 1211.79 L1537.25 1211.79 L1536.67 1211.79 L1536.08 1211.79 L1535.49 1211.79 L1534.91 1211.79 L1534.32 1211.79 L1533.73 1211.79 L1533.15 1211.79 L1532.56 1211.79 L1531.98 1211.79 L1531.39 1211.79 L1530.8 1211.79 L1530.22 1211.79 L1529.63 1211.79 L1529.04 1211.79 L1528.46 1211.79 L1527.87 1211.79 L1527.28 1211.79 L1526.7 1211.79 L1526.11 1211.79 L1525.52 1211.79 L1524.94 1211.79 L1524.35 1211.79 L1523.77 1211.79 L1523.18 1211.79 L1522.59 1211.79 L1522.01 1211.79 L1521.42 1211.79 L1520.83 1211.79 L1520.25 1211.79 L1519.66 1211.79 L1519.07 1211.79 L1518.49 1211.79 L1517.9 1211.79 L1517.32 1211.79 L1516.73 1211.79 L1516.14 1211.79 L1515.56 1211.79 L1514.97 1211.79 L1514.38 1211.79 L1513.8 1211.79 L1513.21 1211.79 L1512.62 1211.79 L1512.04 1211.79 L1511.45 1211.79 L1510.86 1211.79 L1510.28 1211.79 L1509.69 1211.79 L1509.11 1211.79 L1508.52 1211.79 L1507.93 1211.79 L1507.35 1211.79 L1506.76 1211.79 L1506.17 1211.79 L1505.59 1211.79 L1505 1211.79 L1504.41 1211.79 L1503.83 1211.79 L1503.24 1211.79 L1502.65 1211.79 L1502.07 1211.79 L1501.48 1211.79 L1500.9 1211.79 L1500.31 1211.79 L1499.72 1211.79 L1499.14 1211.79 L1498.55 1211.79 L1497.96 1211.79 L1497.38 1211.79 L1496.79 1211.79 L1496.2 1211.79 L1495.62 1211.79 L1495.03 1211.79 L1494.45 1211.79 L1493.86 1211.79 L1493.27 1211.79 L1492.69 1211.79 L1492.1 1211.79 L1491.51 1211.79 L1490.93 1211.79 L1490.34 1211.79 L1489.75 1211.79 L1489.17 1211.79 L1488.58 1211.79 L1487.99 1211.79 L1487.41 1211.79 L1486.82 1211.79 L1486.24 1211.79 L1485.65 1211.79 L1485.06 1211.79 L1484.48 1211.79 L1483.89 1211.79 L1483.3 1211.79 L1482.72 1211.79 L1482.13 1211.79 L1481.54 1211.79 L1480.96 1211.79 L1480.37 1211.79 L1479.78 1211.79 L1479.2 1211.79 L1478.61 1211.79 L1478.03 1211.79 L1477.44 1211.79 L1476.85 1211.79 L1476.27 1211.79 L1475.68 1211.79 L1475.09 1211.79 L1474.51 1211.79 L1473.92 1211.79 L1473.33 1211.79 L1472.75 1211.79 L1472.16 1211.79 L1471.57 1211.79 L1470.99 1211.79 L1470.4 1211.79 L1469.82 1211.79 L1469.23 1211.79 L1468.64 1211.79 L1468.06 1211.79 L1467.47 1211.79 L1466.88 1211.79 L1466.3 1211.79 L1465.71 1211.79 L1465.12 1211.79 L1464.54 1211.79 L1463.95 1211.79 L1463.37 1211.79 L1462.78 1211.79 L1462.19 1211.79 L1461.61 1211.79 L1461.02 1211.79 L1460.43 1211.79 L1459.85 1211.79 L1459.26 1211.79 L1458.67 1211.79 L1458.09 1211.79 L1457.5 1211.79 L1456.91 1211.79 L1456.33 1211.79 L1455.74 1211.79 L1455.16 1211.79 L1454.57 1211.79 L1453.98 1211.79 L1453.4 1211.79 L1452.81 1211.79 L1452.22 1211.79 L1451.64 1211.79 L1451.05 1211.79 L1450.46 1211.79 L1449.88 1211.79 L1449.29 1211.79 L1448.7 1211.79 L1448.12 1211.79 L1447.53 1211.79 L1446.95 1211.79 L1446.36 1211.79 L1445.77 1211.79 L1445.19 1211.79 L1444.6 1211.79 L1444.01 1211.79 L1443.43 1211.79 L1442.84 1211.79 L1442.25 1211.79 L1441.67 1211.79 L1441.08 1211.79 L1440.5 1211.79 L1439.91 1211.79 L1439.32 1211.79 L1438.74 1211.79 L1438.15 1211.79 L1437.56 1211.79 L1436.98 1211.79 L1436.39 1211.79 L1435.8 1211.79 L1435.22 1211.79 L1434.63 1211.79 L1434.04 1211.79 L1433.46 1211.79 L1432.87 1211.79 L1432.29 1211.79 L1431.7 1211.79 L1431.11 1211.79 L1430.53 1211.79 L1429.94 1211.79 L1429.35 1211.79 L1428.77 1211.79 L1428.18 1211.79 L1427.59 1211.79 L1427.01 1211.79 L1426.42 1211.79 L1425.83 1211.79 L1425.25 1211.79 L1424.66 1211.79 L1424.08 1211.79 L1423.49 1211.79 L1422.9 1211.79 L1422.32 1211.79 L1421.73 1211.79 L1421.14 1211.79 L1420.56 1211.79 L1419.97 1211.79 L1419.38 1211.79 L1418.8 1211.79 L1418.21 1211.79 L1417.63 1211.79 L1417.04 1211.79 L1416.45 1211.79 L1415.87 1211.79 L1415.28 1211.79 L1414.69 1211.79 L1414.11 1211.79 L1413.52 1211.79 L1412.93 1211.79 L1412.35 1211.79 L1411.76 1211.79 L1411.17 1211.79 L1410.59 1211.79 L1410 1211.79 L1409.42 1211.79 L1408.83 1211.79 L1408.24 1211.79 L1407.66 1211.79 L1407.07 1211.79 L1406.48 1211.79 L1405.9 1211.79 L1405.31 1211.79 L1404.72 1211.79 L1404.14 1211.79 L1403.55 1211.79 L1402.96 1211.79 L1402.38 1211.79 L1401.79 1211.79 L1401.21 1211.79 L1400.62 1211.79 L1400.03 1211.79 L1399.45 1211.79 L1398.86 1211.79 L1398.27 1211.79 L1397.69 1211.79 L1397.1 1211.79 L1396.51 1211.79 L1395.93 1211.79 L1395.34 1211.79 L1394.75 1211.79 L1394.17 1211.79 L1393.58 1211.79 L1393 1211.79 L1392.41 1211.79 L1391.82 1211.79 L1391.24 1211.79 L1390.65 1211.79 L1390.06 1211.79 L1389.48 1211.79 L1388.89 1211.79 L1388.3 1211.79 L1387.72 1211.79 L1387.13 1211.79 L1386.55 1211.79 L1385.96 1211.79 L1385.37 1211.79 L1384.79 1211.79 L1384.2 1211.79 L1383.61 1211.79 L1383.03 1211.79 L1382.44 1211.79 L1381.85 1211.79 L1381.27 1211.79 L1380.68 1211.79 L1380.09 1211.79 L1379.51 1211.79 L1378.92 1211.79 L1378.34 1211.79 L1377.75 1211.79 L1377.16 1211.79 L1376.58 1211.79 L1375.99 1211.79 L1375.4 1211.79 L1374.82 1211.79 L1374.23 1211.79 L1373.64 1211.79 L1373.06 1211.79 L1372.47 1211.79 L1371.88 1211.79 L1371.3 1211.79 L1370.71 1211.79 L1370.13 1211.79 L1369.54 1211.79 L1368.95 1211.79 L1368.37 1211.79 L1367.78 1211.79 L1367.19 1211.79 L1366.61 1211.79 L1366.02 1211.79 L1365.43 1211.79 L1364.85 1211.79 L1364.26 1211.79 L1363.68 1211.79 L1363.09 1211.79 L1362.5 1211.79 L1361.92 1211.79 L1361.33 1211.79 L1360.74 1211.79 L1360.16 1211.79 L1359.57 1211.79 L1358.98 1211.79 L1358.4 1211.79 L1357.81 1211.79 L1357.22 1211.79 L1356.64 1211.79 L1356.05 1211.79 L1355.47 1211.79 L1354.88 1211.79 L1354.29 1211.79 L1353.71 1211.79 L1353.12 1211.79 L1352.53 1211.79 L1351.95 1211.79 L1351.36 1211.79 L1350.77 1211.79 L1350.19 1211.79 L1349.6 1211.79 L1349.01 1211.79 L1348.43 1211.79 L1347.84 1211.79 L1347.26 1211.79 L1346.67 1211.79 L1346.08 1211.79 L1345.5 1211.79 L1344.91 1211.79 L1344.32 1211.79 L1343.74 1211.79 L1343.15 1211.79 L1342.56 1211.79 L1341.98 1211.79 L1341.39 1211.79 L1340.8 1211.79 L1340.22 1211.79 L1339.63 1211.79 L1339.05 1211.79 L1338.46 1211.79 L1337.87 1211.79 L1337.29 1211.79 L1336.7 1211.79 L1336.11 1211.79 L1335.53 1211.79 L1334.94 1211.79 L1334.35 1211.79 L1333.77 1211.79 L1333.18 1211.79 L1332.6 1211.79 L1332.01 1211.79 L1331.42 1211.79 L1330.84 1211.79 L1330.25 1211.79 L1329.66 1211.79 L1329.08 1211.79 L1328.49 1211.79 L1327.9 1211.79 L1327.32 1211.79 L1326.73 1211.79 L1326.14 1211.79 L1325.56 1211.79 L1324.97 1211.79 L1324.39 1211.79 L1323.8 1211.79 L1323.21 1211.79 L1322.63 1211.79 L1322.04 1211.79 L1321.45 1211.79 L1320.87 1211.79 L1320.28 1211.79 L1319.69 1211.79 L1319.11 1211.79 L1318.52 1211.79 L1317.93 1211.79 L1317.35 1211.79 L1316.76 1211.79 L1316.18 1211.79 L1315.59 1211.79 L1315 1211.79 L1314.42 1211.79 L1313.83 1211.79 L1313.24 1211.79 L1312.66 1211.79 L1312.07 1211.79 L1311.48 1211.79 L1310.9 1211.79 L1310.31 1211.79 L1309.73 1211.79 L1309.14 1211.79 L1308.55 1211.79 L1307.97 1211.79 L1307.38 1211.79 L1306.79 1211.79 L1306.21 1211.79 L1305.62 1211.79 L1305.03 1211.79 L1304.45 1211.79 L1303.86 1211.79 L1303.27 1211.79 L1302.69 1211.79 L1302.1 1211.79 L1301.52 1211.79 L1300.93 1211.79 L1300.34 1211.79 L1299.76 1211.79 L1299.17 1211.79 L1298.58 1211.79 L1298 1211.79 L1297.41 1211.79 L1296.82 1211.79 L1296.24 1211.79 L1295.65 1211.79 L1295.06 1211.79 L1294.48 1211.79 L1293.89 1211.79 L1293.31 1211.79 L1292.72 1211.79 L1292.13 1211.79 L1291.55 1211.79 L1290.96 1211.79 L1290.37 1211.79 L1289.79 1211.79 L1289.2 1211.79 L1288.61 1211.79 L1288.03 1211.79 L1287.44 1211.79 L1286.86 1211.79 L1286.27 1211.79 L1285.68 1211.79 L1285.1 1211.79 L1284.51 1211.79 L1283.92 1211.79 L1283.34 1211.79 L1282.75 1211.79 L1282.16 1211.79 L1281.58 1211.79 L1280.99 1211.79 L1280.4 1211.79 L1279.82 1211.79 L1279.23 1211.79 L1278.65 1211.79 L1278.06 1211.79 L1277.47 1211.79 L1276.89 1211.79 L1276.3 1211.79 L1275.71 1211.79 L1275.13 1211.79 L1274.54 1211.79 L1273.95 1211.79 L1273.37 1211.79 L1272.78 1211.79 L1272.19 1211.79 L1271.61 1211.79 L1271.02 1211.79 L1270.44 1211.79 L1269.85 1211.79 L1269.26 1211.79 L1268.68 1211.79 L1268.09 1211.79 L1267.5 1211.79 L1266.92 1211.79 L1266.33 1211.79 L1265.74 1211.79 L1265.16 1211.79 L1264.57 1211.79 L1263.98 1211.79 L1263.4 1211.79 L1262.81 1211.79 L1262.23 1211.79 L1261.64 1211.79 L1261.05 1211.79 L1260.47 1211.79 L1259.88 1211.79 L1259.29 1211.79 L1258.71 1211.79 L1258.12 1211.79 L1257.53 1211.79 L1256.95 1211.79 L1256.36 1211.79 L1255.78 1211.79 L1255.19 1211.79 L1254.6 1211.79 L1254.02 1211.79 L1253.43 1211.79 L1252.84 1211.79 L1252.26 1211.79 L1251.67 1211.79 L1251.08 1211.79 L1250.5 1211.79 L1249.91 1211.79 L1249.32 1211.79 L1248.74 1211.79 L1248.15 1211.79 L1247.57 1211.79 L1246.98 1211.79 L1246.39 1211.79 L1245.81 1211.79 L1245.22 1211.79 L1244.63 1211.79 L1244.05 1211.79 L1243.46 1211.79 L1242.87 1211.79 L1242.29 1211.79 L1241.7 1211.79 L1241.11 1211.79 L1240.53 1211.79 L1239.94 1211.79 L1239.36 1211.79 L1238.77 1211.79 L1238.18 1211.79 L1237.6 1211.79 L1237.01 1211.79 L1236.42 1211.79 L1235.84 1211.79 L1235.25 1211.79 L1234.66 1211.79 L1234.08 1211.79 L1233.49 1211.79 L1232.91 1211.79 L1232.32 1211.79 L1231.73 1211.79 L1231.15 1211.79 L1230.56 1211.79 L1229.97 1211.79 L1229.39 1211.79 L1228.8 1211.79 L1228.21 1211.79 L1227.63 1211.79 L1227.04 1211.79 L1226.45 1211.79 L1225.87 1211.79 L1225.28 1211.79 L1224.7 1211.79 L1224.11 1211.79 L1223.52 1211.79 L1222.94 1211.79 L1222.35 1211.79 L1221.76 1211.79 L1221.18 1211.79 L1220.59 1211.79 L1220 1211.79 L1219.42 1211.79 L1218.83 1211.79 L1218.24 1211.79 L1217.66 1211.79 L1217.07 1211.79 L1216.49 1211.79 L1215.9 1211.79 L1215.31 1211.79 L1214.73 1211.79 L1214.14 1211.79 L1213.55 1211.79 L1212.97 1211.79 L1212.38 1211.79 L1211.79 1211.79 L1211.21 1211.79 L1210.62 1211.79 L1210.03 1211.79 L1209.45 1211.79 L1208.86 1211.79 L1208.28 1211.79 L1207.69 1211.79 L1207.1 1211.79 L1206.52 1211.79 L1205.93 1211.79 L1205.34 1211.79 L1204.76 1211.79 L1204.17 1211.79 L1203.58 1211.79 L1203 1211.79 L1202.41 1211.79 L1201.83 1211.79 L1201.24 1211.79 L1200.65 1211.79 L1200.07 1211.79 L1199.48 1211.79 L1198.89 1211.79 L1198.31 1211.79 L1197.72 1211.79 L1197.13 1211.79 L1196.55 1211.79 L1195.96 1211.79 L1195.37 1211.79 L1194.79 1211.79 L1194.2 1211.79 L1193.62 1211.79 L1193.03 1211.79 L1192.44 1211.79 L1191.86 1211.79 L1191.27 1211.79 L1190.68 1211.79 L1190.1 1211.79 L1189.51 1211.79 L1188.92 1211.79 L1188.34 1211.79 L1187.75 1211.79 L1187.16 1211.79 L1186.58 1211.79 L1185.99 1211.79 L1185.41 1211.79 L1184.82 1211.79 L1184.23 1211.79 L1183.65 1211.79 L1183.06 1211.79 L1182.47 1211.79 L1181.89 1211.79 L1181.3 1211.79 L1180.71 1211.79 L1180.13 1211.79 L1179.54 1211.79 L1178.96 1211.79 L1178.37 1211.79 L1177.78 1211.79 L1177.2 1211.79 L1176.61 1211.79 L1176.02 1211.79 L1175.44 1211.79 L1174.85 1211.79 L1174.26 1211.79 L1173.68 1211.79 L1173.09 1211.79 L1172.5 1211.79 L1171.92 1211.79 L1171.33 1211.79 L1170.75 1211.79 L1170.16 1211.79 L1169.57 1211.79 L1168.99 1211.79 L1168.4 1211.79 L1167.81 1211.79 L1167.23 1211.79 L1166.64 1211.79 L1166.05 1211.79 L1165.47 1211.79 L1164.88 1211.79 L1164.29 1211.79 L1163.71 1211.79 L1163.12 1211.79 L1162.54 1211.79 L1161.95 1211.79 L1161.36 1211.79 L1160.78 1211.79 L1160.19 1211.79 L1159.6 1211.79 L1159.02 1211.79 L1158.43 1211.79 L1157.84 1211.79 L1157.26 1211.79 L1156.67 1211.79 L1156.09 1211.79 L1155.5 1211.79 L1154.91 1211.79 L1154.33 1211.79 L1153.74 1211.79 L1153.15 1211.79 L1152.57 1211.79 L1151.98 1211.79 L1151.39 1211.79 L1150.81 1211.79 L1150.22 1211.79 L1149.63 1211.79 L1149.05 1211.79 L1148.46 1211.79 L1147.88 1211.79 L1147.29 1211.79 L1146.7 1211.79 L1146.12 1211.79 L1145.53 1211.79 L1144.94 1211.79 L1144.36 1211.79 L1143.77 1211.79 L1143.18 1211.79 L1142.6 1211.79 L1142.01 1211.79 L1141.42 1211.79 L1140.84 1211.79 L1140.25 1211.79 L1139.67 1211.79 L1139.08 1211.79 L1138.49 1211.79 L1137.91 1211.79 L1137.32 1211.79 L1136.73 1211.79 L1136.15 1211.79 L1135.56 1211.79 L1134.97 1211.79 L1134.39 1211.79 L1133.8 1211.79 L1133.21 1211.79 L1132.63 1211.79 L1132.04 1211.79 L1131.46 1211.79 L1130.87 1211.79 L1130.28 1211.79 L1129.7 1211.79 L1129.11 1211.79 L1128.52 1211.79 L1127.94 1211.79 L1127.35 1211.79 L1126.76 1211.79 L1126.18 1211.79 L1125.59 1211.79 L1125.01 1211.79 L1124.42 1211.79 L1123.83 1211.79 L1123.25 1211.79 L1122.66 1211.79 L1122.07 1211.79 L1121.49 1211.79 L1120.9 1211.79 L1120.31 1211.79 L1119.73 1211.79 L1119.14 1211.79 L1118.55 1211.79 L1117.97 1211.79 L1117.38 1211.79 L1116.8 1211.79 L1116.21 1211.79 L1115.62 1211.79 L1115.04 1211.79 L1114.45 1211.79 L1113.86 1211.79 L1113.28 1211.79 L1112.69 1211.79 L1112.1 1211.79 L1111.52 1211.79 L1110.93 1211.79 L1110.34 1211.79 L1109.76 1211.79 L1109.17 1211.79 L1108.59 1211.79 L1108 1211.79 L1107.41 1211.79 L1106.83 1211.79 L1106.24 1211.79 L1105.65 1211.79 L1105.07 1211.79 L1104.48 1211.79 L1103.89 1211.79 L1103.31 1211.79 L1102.72 1211.79 L1102.14 1211.79 L1101.55 1211.79 L1100.96 1211.79 L1100.38 1211.79 L1099.79 1211.79 L1099.2 1211.79 L1098.62 1211.79 L1098.03 1211.79 L1097.44 1211.79 L1096.86 1211.79 L1096.27 1211.79 L1095.68 1211.79 L1095.1 1211.79 L1094.51 1211.79 L1093.93 1211.79 L1093.34 1211.79 L1092.75 1211.79 L1092.17 1211.79 L1091.58 1211.79 L1090.99 1211.79 L1090.41 1211.79 L1089.82 1211.79 L1089.23 1211.79 L1088.65 1211.79 L1088.06 1211.79 L1087.47 1211.79 L1086.89 1211.79 L1086.3 1211.79 L1085.72 1211.79 L1085.13 1211.79 L1084.54 1211.79 L1083.96 1211.79 L1083.37 1211.79 L1082.78 1211.79 L1082.2 1211.79 L1081.61 1211.79 L1081.02 1211.79 L1080.44 1211.79 L1079.85 1211.79 L1079.26 1211.79 L1078.68 1211.79 L1078.09 1211.79 L1077.51 1211.79 L1076.92 1211.79 L1076.33 1211.79 L1075.75 1211.79 L1075.16 1211.79 L1074.57 1211.79 L1073.99 1211.79 L1073.4 1211.79 L1072.81 1211.79 L1072.23 1211.79 L1071.64 1211.79 L1071.06 1211.79 L1070.47 1211.79 L1069.88 1211.79 L1069.3 1211.79 L1068.71 1211.79 L1068.12 1211.79 L1067.54 1211.79 L1066.95 1211.79 L1066.36 1211.79 L1065.78 1211.79 L1065.19 1211.79 L1064.6 1211.79 L1064.02 1211.79 L1063.43 1211.79 L1062.85 1211.79 L1062.26 1211.79 L1061.67 1211.79 L1061.09 1211.79 L1060.5 1211.79 L1059.91 1211.79 L1059.33 1211.79 L1058.74 1211.79 L1058.15 1211.79 L1057.57 1211.79 L1056.98 1211.79 L1056.39 1211.79 L1055.81 1211.79 L1055.22 1211.79 L1054.64 1211.79 L1054.05 1211.79 L1053.46 1211.79 L1052.88 1211.79 L1052.29 1211.79 L1051.7 1211.79 L1051.12 1211.79 L1050.53 1211.79 L1049.94 1211.79 L1049.36 1211.79 L1048.77 1211.79 L1048.19 1211.79 L1047.6 1211.79 L1047.01 1211.79 L1046.43 1211.79 L1045.84 1211.79 L1045.25 1211.79 L1044.67 1211.79 L1044.08 1211.79 L1043.49 1211.79 L1042.91 1211.79 L1042.32 1211.79 L1041.73 1211.79 L1041.15 1211.79 L1040.56 1211.79 L1039.98 1211.79 L1039.39 1211.79 L1038.8 1211.79 L1038.22 1211.79 L1037.63 1211.79 L1037.04 1211.79 L1036.46 1211.79 L1035.87 1211.79 L1035.28 1211.79 L1034.7 1211.79 L1034.11 1211.79 L1033.52 1211.79 L1032.94 1211.79 L1032.35 1211.79 L1031.77 1211.79 L1031.18 1211.79 L1030.59 1211.79 L1030.01 1211.79 L1029.42 1211.79 L1028.83 1211.79 L1028.25 1211.79 L1027.66 1211.79 L1027.07 1211.79 L1026.49 1211.79 L1025.9 1211.79 L1025.32 1211.79 L1024.73 1211.79 L1024.14 1211.79 L1023.56 1211.79 L1022.97 1211.79 L1022.38 1211.79 L1021.8 1211.79 L1021.21 1211.79 L1020.62 1211.79 L1020.04 1211.79 L1019.45 1211.79 L1018.86 1211.79 L1018.28 1211.79 L1017.69 1211.79 L1017.11 1211.79 L1016.52 1211.79 L1015.93 1211.79 L1015.35 1211.79 L1014.76 1211.79 L1014.17 1211.79 L1013.59 1211.79 L1013 1211.79 L1012.41 1211.79 L1011.83 1211.79 L1011.24 1211.79 L1010.65 1211.79 L1010.07 1211.79 L1009.48 1211.79 L1008.9 1211.79 L1008.31 1211.79 L1007.72 1211.79 L1007.14 1211.79 L1006.55 1211.79 L1005.96 1211.79 L1005.38 1211.79 L1004.79 1211.79 L1004.2 1211.79 L1003.62 1211.79 L1003.03 1211.79 L1002.44 1211.79 L1001.86 1211.79 L1001.27 1211.79 L1000.69 1211.79 L1000.1 1211.79 L999.513 1211.79 L998.926 1211.79 L998.34 1211.79 L997.754 1211.79 L997.167 1211.79 L996.581 1211.79 L995.994 1211.79 L995.408 1211.79 L994.822 1211.79 L994.235 1211.79 L993.649 1211.79 L993.062 1211.79 L992.476 1211.79 L991.889 1211.79 L991.303 1211.79 L990.717 1211.79 L990.13 1211.79 L989.544 1211.79 L988.957 1211.79 L988.371 1211.79 L987.785 1211.79 L987.198 1211.79 L986.612 1211.79 L986.025 1211.79  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip332)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1212.09 986.612,1212.09 987.198,1212.09 987.785,1212.09 988.371,1212.09 988.957,1212.09 989.544,1212.09 990.13,1212.09 990.717,1212.09 991.303,1212.09 991.889,1212.09 992.476,1212.09 993.062,1212.09 993.649,1212.09 994.235,1212.09 994.822,1212.09 995.408,1212.09 995.994,1212.09 996.581,1212.09 997.167,1212.09 997.754,1212.09 998.34,1212.09 998.926,1212.09 999.513,1212.09 1000.1,1212.09 1000.69,1212.09 1001.27,1212.09 1001.86,1212.09 1002.44,1212.09 1003.03,1212.09 1003.62,1212.09 1004.2,1212.09 1004.79,1212.09 1005.38,1212.09 1005.96,1212.09 1006.55,1212.09 1007.14,1212.09 1007.72,1212.09 1008.31,1212.09 1008.9,1212.09 1009.48,1212.09 1010.07,1212.09 1010.65,1212.09 1011.24,1212.09 1011.83,1212.09 1012.41,1212.09 1013,1212.09 1013.59,1212.09 1014.17,1212.09 1014.76,1212.09 1015.35,1212.09 1015.93,1212.09 1016.52,1212.09 1017.11,1212.09 1017.69,1212.09 1018.28,1212.09 1018.86,1212.09 1019.45,1212.09 1020.04,1212.09 1020.62,1212.09 1021.21,1212.09 1021.8,1212.09 1022.38,1212.09 1022.97,1212.09 1023.56,1212.09 1024.14,1212.09 1024.73,1212.09 1025.32,1212.09 1025.9,1212.09 1026.49,1212.09 1027.07,1212.09 1027.66,1212.09 1028.25,1212.09 1028.83,1212.09 1029.42,1212.09 1030.01,1212.09 1030.59,1212.09 1031.18,1212.09 1031.77,1212.09 1032.35,1212.09 1032.94,1212.09 1033.52,1212.09 1034.11,1212.09 1034.7,1212.09 1035.28,1212.09 1035.87,1212.09 1036.46,1212.09 1037.04,1212.09 1037.63,1212.09 1038.22,1212.09 1038.8,1212.09 1039.39,1212.09 1039.98,1212.09 1040.56,1212.09 1041.15,1212.09 1041.73,1212.09 1042.32,1212.09 1042.91,1212.09 1043.49,1212.09 1044.08,1212.09 1044.67,1212.09 1045.25,1212.09 1045.84,1212.09 1046.43,1212.09 1047.01,1212.09 1047.6,1212.09 1048.19,1212.09 1048.77,1212.09 1049.36,1212.09 1049.94,1212.09 1050.53,1212.09 1051.12,1212.09 1051.7,1212.09 1052.29,1212.09 1052.88,1212.09 1053.46,1212.09 1054.05,1212.09 1054.64,1212.09 1055.22,1212.09 1055.81,1212.09 1056.39,1212.09 1056.98,1212.09 1057.57,1212.09 1058.15,1212.09 1058.74,1212.09 1059.33,1212.09 1059.91,1212.09 1060.5,1212.09 1061.09,1212.09 1061.67,1212.09 1062.26,1212.09 1062.85,1212.09 1063.43,1212.09 1064.02,1212.09 1064.6,1212.09 1065.19,1212.09 1065.78,1212.09 1066.36,1212.09 1066.95,1212.09 1067.54,1212.09 1068.12,1212.09 1068.71,1212.09 1069.3,1212.09 1069.88,1212.09 1070.47,1212.09 1071.06,1212.09 1071.64,1212.09 1072.23,1212.09 1072.81,1212.09 1073.4,1212.09 1073.99,1212.09 1074.57,1212.09 1075.16,1212.09 1075.75,1212.09 1076.33,1212.09 1076.92,1212.09 1077.51,1212.09 1078.09,1212.09 1078.68,1212.09 1079.26,1212.09 1079.85,1212.09 1080.44,1212.09 1081.02,1212.09 1081.61,1212.09 1082.2,1212.09 1082.78,1212.09 1083.37,1212.09 1083.96,1212.09 1084.54,1212.09 1085.13,1212.09 1085.72,1212.09 1086.3,1212.09 1086.89,1212.09 1087.47,1212.09 1088.06,1212.09 1088.65,1212.09 1089.23,1212.09 1089.82,1212.09 1090.41,1212.09 1090.99,1212.09 1091.58,1212.09 1092.17,1212.09 1092.75,1212.09 1093.34,1212.09 1093.93,1212.09 1094.51,1212.09 1095.1,1212.09 1095.68,1212.09 1096.27,1212.09 1096.86,1212.09 1097.44,1212.09 1098.03,1212.09 1098.62,1212.09 1099.2,1212.09 1099.79,1212.09 1100.38,1212.09 1100.96,1212.09 1101.55,1212.09 1102.14,1212.09 1102.72,1212.09 1103.31,1212.09 1103.89,1212.09 1104.48,1212.09 1105.07,1212.09 1105.65,1212.09 1106.24,1212.09 1106.83,1212.09 1107.41,1212.09 1108,1212.09 1108.59,1212.09 1109.17,1212.09 1109.76,1212.09 1110.34,1212.09 1110.93,1212.09 1111.52,1212.09 1112.1,1212.09 1112.69,1212.09 1113.28,1212.09 1113.86,1212.09 1114.45,1212.09 1115.04,1212.09 1115.62,1212.09 1116.21,1212.09 1116.8,1212.09 1117.38,1212.09 1117.97,1212.09 1118.55,1212.09 1119.14,1212.09 1119.73,1212.09 1120.31,1212.09 1120.9,1212.09 1121.49,1212.09 1122.07,1212.09 1122.66,1212.09 1123.25,1212.09 1123.83,1212.09 1124.42,1212.09 1125.01,1212.09 1125.59,1212.09 1126.18,1212.09 1126.76,1212.09 1127.35,1212.09 1127.94,1212.09 1128.52,1212.09 1129.11,1212.09 1129.7,1212.09 1130.28,1212.09 1130.87,1212.09 1131.46,1212.09 1132.04,1212.09 1132.63,1212.09 1133.21,1212.09 1133.8,1212.09 1134.39,1212.09 1134.97,1212.09 1135.56,1212.09 1136.15,1212.09 1136.73,1212.09 1137.32,1212.09 1137.91,1212.09 1138.49,1212.09 1139.08,1212.09 1139.67,1212.09 1140.25,1212.09 1140.84,1212.09 1141.42,1212.09 1142.01,1212.09 1142.6,1212.09 1143.18,1212.09 1143.77,1212.09 1144.36,1212.09 1144.94,1212.09 1145.53,1212.09 1146.12,1212.09 1146.7,1212.09 1147.29,1212.09 1147.88,1212.09 1148.46,1212.09 1149.05,1212.09 1149.63,1212.09 1150.22,1212.09 1150.81,1212.09 1151.39,1212.09 1151.98,1212.09 1152.57,1212.09 1153.15,1212.09 1153.74,1212.09 1154.33,1212.09 1154.91,1212.09 1155.5,1212.09 1156.09,1212.09 1156.67,1212.09 1157.26,1212.09 1157.84,1212.09 1158.43,1212.09 1159.02,1212.09 1159.6,1212.09 1160.19,1212.09 1160.78,1212.09 1161.36,1212.09 1161.95,1212.09 1162.54,1212.09 1163.12,1212.09 1163.71,1212.09 1164.29,1212.09 1164.88,1212.09 1165.47,1212.09 1166.05,1212.09 1166.64,1212.09 1167.23,1212.09 1167.81,1212.09 1168.4,1212.09 1168.99,1212.09 1169.57,1212.09 1170.16,1212.09 1170.75,1212.09 1171.33,1212.09 1171.92,1212.09 1172.5,1212.09 1173.09,1212.09 1173.68,1212.09 1174.26,1212.09 1174.85,1212.09 1175.44,1212.09 1176.02,1212.09 1176.61,1212.09 1177.2,1212.09 1177.78,1212.09 1178.37,1212.09 1178.96,1212.09 1179.54,1212.09 1180.13,1212.09 1180.71,1212.09 1181.3,1212.09 1181.89,1212.09 1182.47,1212.09 1183.06,1212.09 1183.65,1212.09 1184.23,1212.09 1184.82,1212.09 1185.41,1212.09 1185.99,1212.09 1186.58,1212.09 1187.16,1212.09 1187.75,1212.09 1188.34,1212.09 1188.92,1212.09 1189.51,1212.09 1190.1,1212.09 1190.68,1212.09 1191.27,1212.09 1191.86,1212.09 1192.44,1212.09 1193.03,1212.09 1193.62,1212.09 1194.2,1212.09 1194.79,1212.09 1195.37,1212.09 1195.96,1212.09 1196.55,1212.09 1197.13,1212.09 1197.72,1212.09 1198.31,1212.09 1198.89,1212.09 1199.48,1212.09 1200.07,1212.09 1200.65,1212.09 1201.24,1212.09 1201.83,1212.09 1202.41,1212.09 1203,1212.09 1203.58,1212.09 1204.17,1212.09 1204.76,1212.09 1205.34,1212.09 1205.93,1212.09 1206.52,1212.09 1207.1,1212.09 1207.69,1212.09 1208.28,1212.09 1208.86,1212.09 1209.45,1212.09 1210.03,1212.09 1210.62,1212.09 1211.21,1212.09 1211.79,1212.09 1212.38,1212.09 1212.97,1212.09 1213.55,1212.09 1214.14,1212.09 1214.73,1212.09 1215.31,1212.09 1215.9,1212.09 1216.49,1212.09 1217.07,1212.09 1217.66,1212.09 1218.24,1212.09 1218.83,1212.09 1219.42,1212.09 1220,1212.09 1220.59,1212.09 1221.18,1212.09 1221.76,1212.09 1222.35,1212.09 1222.94,1212.09 1223.52,1212.09 1224.11,1212.09 1224.7,1212.09 1225.28,1212.09 1225.87,1212.09 1226.45,1212.09 1227.04,1212.09 1227.63,1212.09 1228.21,1212.09 1228.8,1212.09 1229.39,1212.09 1229.97,1212.09 1230.56,1212.09 1231.15,1212.09 1231.73,1212.09 1232.32,1212.09 1232.91,1212.09 1233.49,1212.09 1234.08,1212.09 1234.66,1212.09 1235.25,1212.09 1235.84,1212.09 1236.42,1212.09 1237.01,1212.09 1237.6,1212.09 1238.18,1212.09 1238.77,1212.09 1239.36,1212.09 1239.94,1212.09 1240.53,1212.09 1241.11,1212.09 1241.7,1212.09 1242.29,1212.09 1242.87,1212.09 1243.46,1212.09 1244.05,1212.09 1244.63,1212.09 1245.22,1212.09 1245.81,1212.09 1246.39,1212.09 1246.98,1212.09 1247.57,1212.09 1248.15,1212.09 1248.74,1212.09 1249.32,1212.09 1249.91,1212.09 1250.5,1212.09 1251.08,1212.09 1251.67,1212.09 1252.26,1212.09 1252.84,1212.09 1253.43,1212.09 1254.02,1212.09 1254.6,1212.09 1255.19,1212.09 1255.78,1212.09 1256.36,1212.09 1256.95,1212.09 1257.53,1212.09 1258.12,1212.09 1258.71,1212.09 1259.29,1212.09 1259.88,1212.09 1260.47,1212.09 1261.05,1212.09 1261.64,1212.09 1262.23,1212.09 1262.81,1212.09 1263.4,1212.09 1263.98,1212.09 1264.57,1212.09 1265.16,1212.09 1265.74,1212.09 1266.33,1212.09 1266.92,1212.09 1267.5,1212.09 1268.09,1212.09 1268.68,1212.09 1269.26,1212.09 1269.85,1212.09 1270.44,1212.09 1271.02,1212.09 1271.61,1212.09 1272.19,1212.09 1272.78,1212.09 1273.37,1212.09 1273.95,1212.09 1274.54,1212.09 1275.13,1212.09 1275.71,1212.09 1276.3,1212.09 1276.89,1212.09 1277.47,1212.09 1278.06,1212.09 1278.65,1212.09 1279.23,1212.09 1279.82,1212.09 1280.4,1212.09 1280.99,1212.09 1281.58,1212.09 1282.16,1212.09 1282.75,1212.09 1283.34,1212.09 1283.92,1212.09 1284.51,1212.09 1285.1,1212.09 1285.68,1212.09 1286.27,1212.09 1286.86,1212.09 1287.44,1212.09 1288.03,1212.09 1288.61,1212.09 1289.2,1212.09 1289.79,1212.09 1290.37,1212.09 1290.96,1212.09 1291.55,1212.09 1292.13,1212.09 1292.72,1212.09 1293.31,1212.09 1293.89,1212.09 1294.48,1212.09 1295.06,1212.09 1295.65,1212.09 1296.24,1212.09 1296.82,1212.09 1297.41,1212.09 1298,1212.09 1298.58,1212.09 1299.17,1212.09 1299.76,1212.09 1300.34,1212.09 1300.93,1212.09 1301.52,1212.09 1302.1,1212.09 1302.69,1212.09 1303.27,1212.09 1303.86,1212.09 1304.45,1212.09 1305.03,1212.09 1305.62,1212.09 1306.21,1212.09 1306.79,1212.09 1307.38,1212.09 1307.97,1212.09 1308.55,1212.09 1309.14,1212.09 1309.73,1212.09 1310.31,1212.09 1310.9,1212.09 1311.48,1212.09 1312.07,1212.09 1312.66,1212.09 1313.24,1212.09 1313.83,1212.09 1314.42,1212.09 1315,1212.09 1315.59,1212.09 1316.18,1212.09 1316.76,1212.09 1317.35,1212.09 1317.93,1212.09 1318.52,1212.09 1319.11,1212.09 1319.69,1212.09 1320.28,1212.09 1320.87,1212.09 1321.45,1212.09 1322.04,1212.09 1322.63,1212.09 1323.21,1212.09 1323.8,1212.09 1324.39,1212.09 1324.97,1212.09 1325.56,1212.09 1326.14,1212.09 1326.73,1212.09 1327.32,1212.09 1327.9,1212.09 1328.49,1212.09 1329.08,1212.09 1329.66,1212.09 1330.25,1212.09 1330.84,1212.09 1331.42,1212.09 1332.01,1212.09 1332.6,1212.09 1333.18,1212.09 1333.77,1212.09 1334.35,1212.09 1334.94,1212.09 1335.53,1212.09 1336.11,1212.09 1336.7,1212.09 1337.29,1212.09 1337.87,1212.09 1338.46,1212.09 1339.05,1212.09 1339.63,1212.09 1340.22,1212.09 1340.8,1212.09 1341.39,1212.09 1341.98,1212.09 1342.56,1212.09 1343.15,1212.09 1343.74,1212.09 1344.32,1212.09 1344.91,1212.09 1345.5,1212.09 1346.08,1212.09 1346.67,1212.09 1347.26,1212.09 1347.84,1212.09 1348.43,1212.09 1349.01,1212.09 1349.6,1212.09 1350.19,1212.09 1350.77,1212.09 1351.36,1212.09 1351.95,1212.09 1352.53,1212.09 1353.12,1212.09 1353.71,1212.09 1354.29,1212.09 1354.88,1212.09 1355.47,1212.09 1356.05,1212.09 1356.64,1212.09 1357.22,1212.09 1357.81,1212.09 1358.4,1212.09 1358.98,1212.09 1359.57,1212.09 1360.16,1212.09 1360.74,1212.09 1361.33,1212.09 1361.92,1212.09 1362.5,1212.09 1363.09,1212.09 1363.68,1212.09 1364.26,1212.09 1364.85,1212.09 1365.43,1212.09 1366.02,1212.09 1366.61,1212.09 1367.19,1212.09 1367.78,1212.09 1368.37,1212.09 1368.95,1212.09 1369.54,1212.09 1370.13,1212.09 1370.71,1212.09 1371.3,1212.09 1371.88,1212.09 1372.47,1212.09 1373.06,1212.09 1373.64,1212.09 1374.23,1212.09 1374.82,1212.09 1375.4,1212.09 1375.99,1212.09 1376.58,1212.09 1377.16,1212.09 1377.75,1212.09 1378.34,1212.09 1378.92,1212.09 1379.51,1212.09 1380.09,1212.09 1380.68,1212.09 1381.27,1212.09 1381.85,1212.09 1382.44,1212.09 1383.03,1212.09 1383.61,1212.09 1384.2,1212.09 1384.79,1212.09 1385.37,1212.09 1385.96,1212.09 1386.55,1212.09 1387.13,1212.09 1387.72,1212.09 1388.3,1212.09 1388.89,1212.09 1389.48,1212.09 1390.06,1212.09 1390.65,1212.09 1391.24,1212.09 1391.82,1212.09 1392.41,1212.09 1393,1212.09 1393.58,1212.09 1394.17,1212.09 1394.75,1212.09 1395.34,1212.09 1395.93,1212.09 1396.51,1212.09 1397.1,1212.09 1397.69,1212.09 1398.27,1212.09 1398.86,1212.09 1399.45,1212.09 1400.03,1212.09 1400.62,1212.09 1401.21,1212.09 1401.79,1212.09 1402.38,1212.09 1402.96,1212.09 1403.55,1212.09 1404.14,1212.09 1404.72,1212.09 1405.31,1212.09 1405.9,1212.09 1406.48,1212.09 1407.07,1212.09 1407.66,1212.09 1408.24,1212.09 1408.83,1212.09 1409.42,1212.09 1410,1212.09 1410.59,1212.09 1411.17,1212.09 1411.76,1212.09 1412.35,1212.09 1412.93,1212.09 1413.52,1212.09 1414.11,1212.09 1414.69,1212.09 1415.28,1212.09 1415.87,1212.09 1416.45,1212.09 1417.04,1212.09 1417.63,1212.09 1418.21,1212.09 1418.8,1212.09 1419.38,1212.09 1419.97,1212.09 1420.56,1212.09 1421.14,1212.09 1421.73,1212.09 1422.32,1212.09 1422.9,1212.09 1423.49,1212.09 1424.08,1212.09 1424.66,1212.09 1425.25,1212.09 1425.83,1212.09 1426.42,1212.09 1427.01,1212.09 1427.59,1212.09 1428.18,1212.09 1428.77,1212.09 1429.35,1212.09 1429.94,1212.09 1430.53,1212.09 1431.11,1212.09 1431.7,1212.09 1432.29,1212.09 1432.87,1212.09 1433.46,1212.09 1434.04,1212.09 1434.63,1212.09 1435.22,1212.09 1435.8,1212.09 1436.39,1212.09 1436.98,1212.09 1437.56,1212.09 1438.15,1212.09 1438.74,1212.09 1439.32,1212.09 1439.91,1212.09 1440.5,1212.09 1441.08,1212.09 1441.67,1212.09 1442.25,1212.09 1442.84,1212.09 1443.43,1212.09 1444.01,1212.09 1444.6,1212.09 1445.19,1212.09 1445.77,1212.09 1446.36,1212.09 1446.95,1212.09 1447.53,1212.09 1448.12,1212.09 1448.7,1212.09 1449.29,1212.09 1449.88,1212.09 1450.46,1212.09 1451.05,1212.09 1451.64,1212.09 1452.22,1212.09 1452.81,1212.09 1453.4,1212.09 1453.98,1212.09 1454.57,1212.09 1455.16,1212.09 1455.74,1212.09 1456.33,1212.09 1456.91,1212.09 1457.5,1212.09 1458.09,1212.09 1458.67,1212.09 1459.26,1212.09 1459.85,1212.09 1460.43,1212.09 1461.02,1212.09 1461.61,1212.09 1462.19,1212.09 1462.78,1212.09 1463.37,1212.09 1463.95,1212.09 1464.54,1212.09 1465.12,1212.09 1465.71,1212.09 1466.3,1212.09 1466.88,1212.09 1467.47,1212.09 1468.06,1212.09 1468.64,1212.09 1469.23,1212.09 1469.82,1212.09 1470.4,1212.09 1470.99,1212.09 1471.57,1212.09 1472.16,1212.09 1472.75,1212.09 1473.33,1212.09 1473.92,1212.09 1474.51,1212.09 1475.09,1212.09 1475.68,1212.09 1476.27,1212.09 1476.85,1212.09 1477.44,1212.09 1478.03,1212.09 1478.61,1212.09 1479.2,1212.09 1479.78,1212.09 1480.37,1212.09 1480.96,1212.09 1481.54,1212.09 1482.13,1212.09 1482.72,1212.09 1483.3,1212.09 1483.89,1212.09 1484.48,1212.09 1485.06,1212.09 1485.65,1212.09 1486.24,1212.09 1486.82,1212.09 1487.41,1212.09 1487.99,1212.09 1488.58,1212.09 1489.17,1212.09 1489.75,1212.09 1490.34,1212.09 1490.93,1212.09 1491.51,1212.09 1492.1,1212.09 1492.69,1212.09 1493.27,1212.09 1493.86,1212.09 1494.45,1212.09 1495.03,1212.09 1495.62,1212.09 1496.2,1212.09 1496.79,1212.09 1497.38,1212.09 1497.96,1212.09 1498.55,1212.09 1499.14,1212.09 1499.72,1212.09 1500.31,1212.09 1500.9,1212.09 1501.48,1212.09 1502.07,1212.09 1502.65,1212.09 1503.24,1212.09 1503.83,1212.09 1504.41,1212.09 1505,1212.09 1505.59,1212.09 1506.17,1212.09 1506.76,1212.09 1507.35,1212.09 1507.93,1212.09 1508.52,1212.09 1509.11,1212.09 1509.69,1212.09 1510.28,1212.09 1510.86,1212.09 1511.45,1212.09 1512.04,1212.09 1512.62,1212.09 1513.21,1212.09 1513.8,1212.09 1514.38,1212.09 1514.97,1212.09 1515.56,1212.09 1516.14,1212.09 1516.73,1212.09 1517.32,1212.09 1517.9,1212.09 1518.49,1212.09 1519.07,1212.09 1519.66,1212.09 1520.25,1212.09 1520.83,1212.09 1521.42,1212.09 1522.01,1212.09 1522.59,1212.09 1523.18,1212.09 1523.77,1212.09 1524.35,1212.09 1524.94,1212.09 1525.52,1212.09 1526.11,1212.09 1526.7,1212.09 1527.28,1212.09 1527.87,1212.09 1528.46,1212.09 1529.04,1212.09 1529.63,1212.09 1530.22,1212.09 1530.8,1212.09 1531.39,1212.09 1531.98,1212.09 1532.56,1212.09 1533.15,1212.09 1533.73,1212.09 1534.32,1212.09 1534.91,1212.09 1535.49,1212.09 1536.08,1212.09 1536.67,1212.09 1537.25,1212.09 1537.84,1212.09 1538.43,1212.09 1539.01,1212.09 1539.6,1212.09 1540.19,1212.09 1540.77,1212.09 1541.36,1212.09 1541.94,1212.09 1542.53,1212.09 1543.12,1212.09 1543.7,1212.09 1544.29,1212.09 1544.88,1212.09 1545.46,1212.09 1546.05,1212.09 1546.64,1212.09 1547.22,1212.09 1547.81,1212.09 1548.4,1212.09 1548.98,1212.09 1549.57,1212.09 1550.15,1212.09 1550.74,1212.09 1551.33,1212.09 1551.91,1212.09 1552.5,1212.09 1553.09,1212.09 1553.67,1212.09 1554.26,1212.09 1554.85,1212.09 1555.43,1212.09 1556.02,1212.09 1556.6,1212.09 1557.19,1212.09 1557.78,1212.09 1558.36,1212.09 1558.95,1212.09 1559.54,1212.09 1560.12,1212.09 1560.71,1212.09 1561.3,1212.09 1561.88,1212.09 1562.47,1212.09 1563.06,1212.09 1563.64,1212.09 1564.23,1212.09 1564.81,1212.09 1565.4,1212.09 1565.99,1212.09 1566.57,1212.09 1567.16,1212.09 1567.75,1212.09 1568.33,1212.09 1568.92,1212.09 1569.51,1212.09 1570.09,1212.09 1570.68,1212.09 1571.27,1212.09 1571.85,1212.09 1572.44,1212.09 1573.02,1212.09 1573.61,1212.09 1574.2,1212.09 1574.78,1212.09 1575.37,1212.09 1575.96,1212.09 1576.54,1212.09 1577.13,1212.09 1577.72,1212.09 1578.3,1212.09 1578.89,1212.09 1579.47,1212.09 1580.06,1212.09 1580.65,1212.09 1581.23,1212.09 1581.82,1212.09 1582.41,1212.09 1582.99,1212.09 1583.58,1212.09 1584.17,1212.09 1584.75,1212.09 1585.34,1212.09 1585.93,1212.09 1586.51,1212.09 1587.1,1212.09 1587.68,1212.09 1588.27,1212.09 1588.86,1212.09 1589.44,1212.09 1590.03,1212.09 1590.62,1212.09 1591.2,1212.09 1591.79,1212.09 1592.38,1212.09 1592.96,1212.09 1593.55,1212.09 1594.14,1212.09 1594.72,1212.09 1595.31,1212.09 1595.89,1212.09 1596.48,1212.09 1597.07,1212.09 1597.65,1212.09 1598.24,1212.09 1598.83,1212.09 1599.41,1212.09 1600,1212.09 1600.59,1212.09 1601.17,1212.09 1601.76,1212.09 1602.34,1212.09 1602.93,1212.09 1603.52,1212.09 1604.1,1212.09 1604.69,1212.09 1605.28,1212.09 1605.86,1212.09 1606.45,1212.09 1607.04,1212.09 1607.62,1212.09 1608.21,1212.09 1608.8,1212.09 1609.38,1212.09 1609.97,1212.09 1610.55,1212.09 1611.14,1212.09 1611.73,1212.09 1612.31,1212.09 1612.9,1212.09 1613.49,1212.09 1614.07,1212.09 1614.66,1212.09 1615.25,1212.09 1615.83,1212.09 1616.42,1212.09 1617.01,1212.09 1617.59,1212.09 1618.18,1212.09 1618.76,1212.09 1619.35,1212.09 1619.94,1212.09 1620.52,1212.09 1621.11,1212.09 1621.7,1212.09 1622.28,1212.09 1622.87,1212.09 1623.46,1212.09 1624.04,1212.09 1624.63,1212.09 1625.22,1212.09 1625.8,1212.09 1626.39,1212.09 1626.97,1212.09 1627.56,1212.09 1628.15,1212.09 1628.73,1212.09 1629.32,1212.09 1629.91,1212.09 1630.49,1212.09 1631.08,1212.09 1631.67,1212.09 1632.25,1212.09 1632.84,1212.09 1633.42,1212.09 1634.01,1212.09 1634.6,1212.09 1635.18,1212.09 1635.77,1212.09 1636.36,1212.09 1636.94,1212.09 1637.53,1212.09 1638.12,1212.09 1638.7,1212.09 1639.29,1212.09 1639.88,1212.09 1640.46,1212.09 1641.05,1212.09 1641.63,1212.09 1642.22,1212.09 1642.81,1212.09 1643.39,1212.09 1643.98,1212.09 1644.57,1212.09 1645.15,1212.09 1645.74,1212.09 1646.33,1212.09 1646.91,1212.09 1647.5,1212.09 1648.09,1212.09 1648.67,1212.09 1649.26,1212.09 1649.84,1212.09 1650.43,1212.09 1651.02,1212.09 1651.6,1212.09 1652.19,1212.09 1652.78,1212.09 1653.36,1212.09 1653.95,1212.09 1654.54,1212.09 1655.12,1212.09 1655.71,1212.09 1656.29,1212.09 1656.88,1212.09 1657.47,1212.09 1658.05,1212.09 1658.64,1212.09 1659.23,1212.09 1659.81,1212.09 1660.4,1212.09 1660.99,1212.09 1661.57,1212.09 1662.16,1212.09 1662.75,1212.09 1663.33,1212.09 1663.92,1212.09 1664.5,1212.09 1665.09,1212.09 1665.68,1212.09 1666.26,1212.09 1666.85,1212.09 1667.44,1212.09 1668.02,1212.09 1668.61,1212.09 1669.2,1212.09 1669.78,1212.09 1670.37,1212.09 1670.96,1212.09 1671.54,1212.09 1672.13,1212.09 1672.71,1212.09 1673.3,1212.09 1673.89,1212.09 1674.47,1212.09 1675.06,1212.09 1675.65,1212.09 1676.23,1212.09 1676.82,1212.09 1677.41,1212.09 1677.99,1212.09 1678.58,1212.09 1679.17,1212.09 1679.75,1212.09 1680.34,1212.09 1680.92,1212.09 1681.51,1212.09 1682.1,1212.09 1682.68,1212.09 1683.27,1212.09 1683.86,1212.09 1684.44,1212.09 1685.03,1212.09 1685.62,1212.09 1686.2,1212.09 1686.79,1212.09 1687.37,1212.09 1687.96,1212.09 1688.55,1212.09 1689.13,1212.09 1689.72,1212.09 1690.31,1212.09 1690.89,1212.09 1691.48,1212.09 1692.07,1212.09 1692.65,1212.09 1693.24,1212.09 1693.83,1212.09 1694.41,1212.09 1695,1212.09 1695.58,1212.09 1696.17,1212.09 1696.76,1212.09 1697.34,1212.09 1697.93,1212.09 1698.52,1212.09 1699.1,1212.09 1699.69,1212.09 1700.28,1212.09 1700.86,1212.09 1701.45,1212.09 1702.04,1212.09 1702.62,1212.09 1703.21,1212.09 1703.79,1212.09 1704.38,1212.09 1704.97,1212.09 1705.55,1212.09 1706.14,1212.09 1706.73,1212.09 1707.31,1212.09 1707.9,1212.09 1708.49,1212.09 1709.07,1212.09 1709.66,1212.09 1710.24,1212.09 1710.83,1212.09 1711.42,1212.09 1712,1212.09 1712.59,1212.09 1713.18,1212.09 1713.76,1212.09 1714.35,1212.09 1714.94,1212.09 1715.52,1212.09 1716.11,1212.09 1716.7,1212.09 1717.28,1212.09 1717.87,1212.09 1718.45,1212.09 1719.04,1212.09 1719.63,1212.09 1720.21,1212.09 1720.8,1212.09 1721.39,1212.09 1721.97,1212.09 1722.56,1212.09 1723.15,1212.09 1723.73,1212.09 1724.32,1212.09 1724.91,1212.09 1725.49,1212.09 1726.08,1212.09 1726.66,1212.09 1727.25,1212.09 1727.84,1212.09 1728.42,1212.09 1729.01,1212.09 1729.6,1212.09 1730.18,1212.09 1730.77,1212.09 1731.36,1212.09 1731.94,1212.09 1732.53,1212.09 1733.11,1212.09 1733.7,1212.09 1734.29,1212.09 1734.87,1212.09 1735.46,1212.09 1736.05,1212.09 1736.63,1212.09 1737.22,1212.09 1737.81,1212.09 1738.39,1212.09 1738.98,1212.09 1739.57,1212.09 1740.15,1212.09 1740.74,1212.09 1741.32,1212.09 1741.91,1212.09 1742.5,1212.09 1743.08,1212.09 1743.67,1212.09 1744.26,1212.09 1744.84,1212.09 1745.43,1212.09 1746.02,1212.09 1746.6,1212.09 1747.19,1212.09 1747.78,1212.09 1748.36,1212.09 1748.95,1212.09 1749.53,1212.09 1750.12,1212.09 1750.71,1212.09 1751.29,1212.09 1751.88,1212.09 1752.47,1212.09 1753.05,1212.09 1753.64,1212.09 1754.23,1212.09 1754.81,1212.09 1755.4,1212.09 1755.99,1212.09 1756.57,1212.09 1757.16,1212.09 1757.74,1212.09 1758.33,1212.09 1758.92,1212.09 1759.5,1212.09 1760.09,1212.09 1760.68,1212.09 1761.26,1212.09 1761.85,1212.09 1762.44,1212.09 1763.02,1212.09 1763.61,1212.09 1764.19,1212.09 1764.78,1212.09 1765.37,1212.09 1765.95,1212.09 1766.54,1212.09 1767.13,1212.09 1767.71,1212.09 1768.3,1212.09 1768.89,1212.09 1769.47,1212.09 1770.06,1212.09 1770.65,1212.09 1771.23,1212.09 1771.82,1212.09 1772.4,1212.09 1772.99,1212.09 1773.58,1212.09 1774.16,1212.09 1774.75,1212.09 1775.34,1212.09 1775.92,1212.09 1776.51,1212.09 1777.1,1212.09 1777.68,1212.09 1778.27,1212.09 1778.86,1212.09 1779.44,1212.09 1780.03,1212.09 1780.61,1212.09 1781.2,1212.09 1781.79,1212.09 1782.37,1212.09 1782.96,1212.09 1783.55,1212.09 1784.13,1212.09 1784.72,1212.09 1785.31,1212.09 1785.89,1212.09 1786.48,1212.09 1787.06,1212.09 1787.65,1212.09 1788.24,1212.09 1788.82,1212.09 1789.41,1212.09 1790,1212.09 1790.58,1212.09 1791.17,1212.09 1791.76,1212.09 1792.34,1212.09 1792.93,1212.09 1793.52,1212.09 1794.1,1212.09 1794.69,1212.09 1795.27,1212.09 1795.86,1212.09 1796.45,1212.09 1797.03,1212.09 1797.62,1212.09 1798.21,1212.09 1798.79,1212.09 1799.38,1212.09 1799.97,1212.09 1800.55,1212.09 1801.14,1212.09 1801.73,1212.09 1802.31,1212.09 1802.9,1212.09 1803.48,1212.09 1804.07,1212.09 1804.66,1212.09 1805.24,1212.09 1805.83,1212.09 1806.42,1212.09 1807,1212.09 1807.59,1212.09 1808.18,1212.09 1808.76,1212.09 1809.35,1212.09 1809.94,1212.09 1810.52,1212.09 1811.11,1212.09 1811.69,1212.09 1812.28,1212.09 1812.87,1212.09 1813.45,1212.09 1814.04,1212.09 1814.63,1212.09 1815.21,1212.09 1815.8,1212.09 1816.39,1212.09 1816.97,1212.09 1817.56,1212.09 1818.14,1212.09 1818.73,1212.09 1819.32,1212.09 1819.9,1212.09 1820.49,1212.09 1821.08,1212.09 1821.66,1212.09 1822.25,1212.09 1822.84,1212.09 1823.42,1212.09 1824.01,1212.09 1824.6,1212.09 1825.18,1212.09 1825.77,1212.09 1826.35,1212.09 1826.94,1212.09 1827.53,1212.09 1828.11,1212.09 1828.7,1212.09 1829.29,1212.09 1829.87,1212.09 1830.46,1212.09 1831.05,1212.09 1831.63,1212.09 1832.22,1212.09 1832.81,1212.09 1833.39,1212.09 1833.98,1212.09 1834.56,1212.09 1835.15,1212.09 1835.74,1212.09 1836.32,1212.09 1836.91,1212.09 1837.5,1212.09 1838.08,1212.09 1838.67,1212.09 1839.26,1212.09 1839.84,1212.09 1840.43,1212.09 1841.01,1212.09 1841.6,1212.09 1842.19,1212.09 1842.77,1212.09 1843.36,1212.09 1843.95,1212.09 1844.53,1212.09 1845.12,1212.09 1845.71,1212.09 1846.29,1212.09 1846.88,1212.09 1847.47,1212.09 1848.05,1212.09 1848.64,1212.09 1849.22,1212.09 1849.81,1212.09 1850.4,1212.09 1850.98,1212.09 1851.57,1212.09 1852.16,1212.09 1852.74,1212.09 1853.33,1212.09 1853.92,1212.09 1854.5,1212.09 1855.09,1212.09 1855.68,1212.09 1856.26,1212.09 1856.85,1212.09 1857.43,1212.09 1858.02,1212.09 1858.61,1212.09 1859.19,1212.09 1859.78,1212.09 1860.37,1212.09 1860.95,1212.09 1861.54,1212.09 1862.13,1212.09 1862.71,1212.09 1863.3,1212.09 1863.88,1212.09 1864.47,1212.09 1865.06,1212.09 1865.64,1212.09 1866.23,1212.09 1866.82,1212.09 1867.4,1212.09 1867.99,1212.09 1868.58,1212.09 1869.16,1212.09 1869.75,1212.09 1870.34,1212.09 1870.92,1212.09 1871.51,1212.09 1872.09,1212.09 1872.68,1212.09 1873.27,1212.09 1873.85,1212.09 1874.44,1212.09 1875.03,1212.09 1875.61,1212.09 1876.2,1212.09 1876.79,1212.09 1877.37,1212.09 1877.96,1212.09 1878.55,1212.09 1879.13,1212.09 1879.72,1212.09 1880.3,1212.09 1880.89,1212.09 1881.48,1212.09 1882.06,1212.09 1882.65,1212.09 1883.24,1212.09 1883.82,1212.09 1884.41,1212.09 1885,1212.09 1885.58,1212.09 1886.17,1212.09 1886.76,1212.09 1887.34,1212.09 1887.93,1212.09 1888.51,1212.09 1889.1,1212.09 1889.69,1212.09 1890.27,1212.09 1890.86,1212.09 1891.45,1212.09 1892.03,1212.09 1892.62,1212.09 1893.21,1212.09 1893.79,1212.09 1894.38,1212.09 1894.96,1212.09 1895.55,1212.09 1896.14,1212.09 1896.72,1212.09 1897.31,1212.09 1897.9,1212.09 1898.48,1212.09 1899.07,1212.09 1899.66,1212.09 1900.24,1212.09 1900.83,1212.09 1901.42,1212.09 1902,1212.09 1902.59,1212.09 1903.17,1212.09 1903.76,1212.09 1904.35,1212.09 1904.93,1212.09 1905.52,1212.09 1906.11,1212.09 1906.69,1212.09 1907.28,1212.09 1907.87,1212.09 1908.45,1212.09 1909.04,1212.09 1909.63,1212.09 1910.21,1212.09 1910.8,1212.09 1911.38,1212.09 1911.97,1212.09 1912.56,1212.09 1913.14,1212.09 1913.73,1212.09 1914.32,1212.09 1914.9,1212.09 1915.49,1212.09 1916.08,1212.09 1916.66,1212.09 1917.25,1212.09 1917.83,1212.09 1918.42,1212.09 1919.01,1212.09 1919.59,1212.09 1920.18,1212.09 1920.77,1212.09 1921.35,1212.09 1921.94,1212.09 1922.53,1212.09 1923.11,1212.09 1923.7,1212.09 1924.29,1212.09 1924.87,1212.09 1925.46,1212.09 1926.04,1212.09 1926.63,1212.09 1927.22,1212.09 1927.8,1212.09 1928.39,1212.09 1928.98,1212.09 1929.56,1212.09 1930.15,1212.09 1930.74,1212.09 1931.32,1212.09 1931.91,1212.09 1932.5,1212.09 1933.08,1212.09 1933.67,1212.09 1934.25,1212.09 1934.84,1212.09 1935.43,1212.09 1936.01,1212.09 1936.6,1212.09 1937.19,1212.09 1937.77,1212.09 1938.36,1212.09 1938.95,1212.09 1939.53,1212.09 1940.12,1212.09 1940.71,1212.09 1941.29,1212.09 1941.88,1212.09 1942.46,1212.09 1943.05,1212.09 1943.64,1212.09 1944.22,1212.09 1944.81,1212.09 1945.4,1212.09 1945.98,1212.09 1946.57,1212.09 1947.16,1212.09 1947.74,1212.09 1948.33,1212.09 1948.91,1212.09 1949.5,1212.09 1950.09,1212.09 1950.67,1212.09 1951.26,1212.09 1951.85,1212.09 1952.43,1212.09 1953.02,1212.09 1953.61,1212.09 1954.19,1212.09 1954.78,1212.09 1955.37,1212.09 1955.95,1212.09 1956.54,1212.09 1957.12,1212.09 1957.71,1212.09 1958.3,1212.09 1958.88,1212.09 1959.47,1212.09 1960.06,1212.09 1960.64,1212.09 1961.23,1212.09 1961.82,1212.09 1962.4,1212.09 1962.99,1212.09 1963.58,1212.09 1964.16,1212.09 1964.75,1212.09 1965.33,1212.09 1965.92,1212.09 1966.51,1212.09 1967.09,1212.09 1967.68,1212.09 1968.27,1212.09 1968.85,1212.09 1969.44,1212.09 1970.03,1212.09 1970.61,1212.09 1971.2,1212.09 1971.78,1212.09 1972.37,1212.09 1972.96,1212.09 1973.54,1212.09 1974.13,1212.09 1974.72,1212.09 1975.3,1212.09 1975.89,1212.09 1976.48,1212.09 1977.06,1212.09 1977.65,1212.09 1978.24,1212.09 1978.82,1212.09 1979.41,1212.09 1979.99,1212.09 1980.58,1212.09 1981.17,1212.09 1981.75,1212.09 1982.34,1212.09 1982.93,1212.09 1983.51,1212.09 1984.1,1212.09 1984.69,1212.09 1985.27,1212.09 1985.86,1212.09 1986.45,1212.09 1987.03,1212.09 1987.62,1212.09 1988.2,1212.09 1988.79,1212.09 1989.38,1212.09 1989.96,1212.09 1990.55,1212.09 1991.14,1212.09 1991.72,1212.09 1992.31,1212.09 1992.9,1212.09 1993.48,1212.09 1994.07,1212.09 1994.65,1212.09 1995.24,1212.09 1995.83,1212.09 1996.41,1212.09 1997,1212.09 1997.59,1212.09 1998.17,1212.09 1998.76,1212.09 1999.35,1212.09 1999.93,1212.09 2000.52,1212.09 2001.11,1212.09 2001.69,1212.09 2002.28,1212.09 2002.86,1212.09 2003.45,1212.09 2004.04,1212.09 2004.62,1212.09 2005.21,1212.09 2005.8,1212.09 2006.38,1212.09 2006.97,1212.09 2007.56,1212.09 2008.14,1212.09 2008.73,1212.09 2009.32,1212.09 2009.9,1212.09 2010.49,1212.09 2011.07,1212.09 2011.66,1212.09 2012.25,1212.09 2012.83,1212.09 2013.42,1212.09 2014.01,1212.09 2014.59,1212.09 2015.18,1212.09 2015.77,1212.09 2016.35,1212.09 2016.94,1212.09 2017.53,1212.09 2018.11,1212.09 2018.7,1212.09 2019.28,1212.09 2019.87,1212.09 2020.46,1212.09 2021.04,1212.09 2021.63,1212.09 2022.22,1212.09 2022.8,1212.09 2023.39,1212.09 2023.98,1212.09 2024.56,1212.09 2025.15,1212.09 2025.73,1212.09 2026.32,1212.09 2026.91,1212.09 2027.49,1212.09 2028.08,1212.09 2028.67,1212.09 2029.25,1212.09 2029.84,1212.09 2030.43,1212.09 2031.01,1212.09 2031.6,1212.09 2032.19,1212.09 2032.77,1212.09 2033.36,1212.09 2033.94,1212.09 2034.53,1212.09 2035.12,1212.09 2035.7,1212.09 2036.29,1212.09 2036.88,1212.09 2037.46,1212.09 2038.05,1212.09 2038.64,1212.09 2039.22,1212.09 2039.81,1212.09 2040.4,1212.09 2040.98,1212.09 2041.57,1212.09 2042.15,1212.09 2042.74,1212.09 2043.33,1212.09 2043.91,1212.09 2044.5,1212.09 2045.09,1212.09 2045.67,1212.09 2046.26,1212.09 2046.85,1212.09 2047.43,1212.09 2048.02,1212.09 2048.6,1212.09 2049.19,1212.09 2049.78,1212.09 2050.36,1212.09 2050.95,1212.09 2051.54,1212.09 2052.12,1212.09 2052.71,1212.09 2053.3,1212.09 2053.88,1212.09 2054.47,1212.09 2055.06,1212.09 2055.64,1212.09 2056.23,1212.09 2056.81,1212.09 2057.4,1212.09 2057.99,1212.09 2058.57,1212.09 2059.16,1212.09 2059.75,1212.09 2060.33,1212.09 2060.92,1212.09 2061.51,1212.09 2062.09,1212.09 2062.68,1212.09 2063.27,1212.09 2063.85,1212.09 2064.44,1212.09 2065.02,1212.09 2065.61,1212.09 2066.2,1212.09 2066.78,1212.09 2067.37,1212.09 2067.96,1212.09 2068.54,1212.09 2069.13,1212.09 2069.72,1212.09 2070.3,1212.09 2070.89,1212.09 2071.48,1212.09 2072.06,1212.09 2072.65,1212.09 2073.23,1212.09 2073.82,1212.09 2074.41,1212.09 2074.99,1212.09 2075.58,1212.09 2076.17,1212.09 2076.75,1212.09 2077.34,1212.09 2077.93,1212.09 2078.51,1212.09 2079.1,1212.09 2079.68,1212.09 2080.27,1212.09 2080.86,1212.09 2081.44,1212.09 2082.03,1212.09 2082.62,1212.09 2083.2,1212.09 2083.79,1212.09 2084.38,1212.09 2084.96,1212.09 2085.55,1212.09 2086.14,1212.09 2086.72,1212.09 2087.31,1212.09 2087.89,1212.09 2088.48,1212.09 2089.07,1212.09 2089.65,1212.09 2090.24,1212.09 2090.83,1212.09 2091.41,1212.09 2092,1212.09 2092.59,1212.09 2093.17,1212.09 2093.76,1212.09 2094.35,1212.09 2094.93,1212.09 2095.52,1212.09 2096.1,1212.09 2096.69,1212.09 2097.28,1212.09 2097.86,1212.09 2098.45,1212.09 2099.04,1212.09 2099.62,1212.09 2100.21,1212.09 2100.8,1212.09 2101.38,1212.09 2101.97,1212.09 2102.55,1212.09 2103.14,1212.09 2103.73,1212.09 2104.31,1212.09 2104.9,1212.09 2105.49,1212.09 2106.07,1212.09 2106.66,1212.09 2107.25,1212.09 2107.83,1212.09 2108.42,1212.09 2109.01,1212.09 2109.59,1212.09 2110.18,1212.09 2110.76,1212.09 2111.35,1212.09 2111.94,1212.09 2112.52,1212.09 2113.11,1212.09 2113.7,1212.09 2114.28,1212.09 2114.87,1212.09 2115.46,1212.09 2116.04,1212.09 2116.63,1212.09 2117.22,1212.09 2117.8,1212.09 2118.39,1212.09 2118.97,1212.09 2119.56,1212.09 2120.15,1212.09 2120.73,1212.09 2121.32,1212.09 2121.91,1212.09 2122.49,1212.09 2123.08,1212.09 2123.67,1212.09 2124.25,1212.09 2124.84,1212.09 2125.42,1212.09 2126.01,1212.09 2126.6,1212.09 2127.18,1212.09 2127.77,1212.09 2128.36,1212.09 2128.94,1212.09 2129.53,1212.09 2130.12,1212.09 2130.7,1212.09 2131.29,1212.09 2131.88,1212.09 2132.46,1212.09 2133.05,1212.09 2133.63,1212.09 2134.22,1212.09 2134.81,1212.09 2135.39,1212.09 2135.98,1212.09 2136.57,1212.09 2137.15,1212.09 2137.74,1212.09 2138.33,1212.09 2138.91,1212.09 2139.5,1212.09 2140.09,1212.09 2140.67,1212.09 2141.26,1212.09 2141.84,1212.09 2142.43,1212.09 2143.02,1212.09 2143.6,1212.09 2144.19,1212.09 2144.78,1212.09 2145.36,1212.09 2145.95,1212.09 2146.54,1212.09 2147.12,1212.09 2147.71,1212.09 2148.3,1212.09 2148.88,1212.09 2149.47,1212.09 2150.05,1212.09 2150.64,1212.09 2151.23,1212.09 2151.81,1212.09 2152.4,1212.09 2152.99,1212.09 2153.57,1212.09 2154.16,1212.09 2154.75,1212.09 2155.33,1212.09 2155.92,1212.09 2156.5,1212.09 2157.09,1212.09 2157.68,1212.09 2158.26,1212.09 \"/>\n<path clip-path=\"url(#clip332)\" d=\"M986.025 1211.9 L986.612 1211.9 L987.198 1211.9 L987.785 1211.9 L988.371 1211.9 L988.957 1211.9 L989.544 1211.9 L990.13 1211.9 L990.717 1211.9 L991.303 1211.9 L991.889 1211.9 L992.476 1211.9 L993.062 1211.9 L993.649 1211.9 L994.235 1211.9 L994.822 1211.9 L995.408 1211.9 L995.994 1211.9 L996.581 1211.9 L997.167 1211.9 L997.754 1211.9 L998.34 1211.9 L998.926 1211.9 L999.513 1211.9 L1000.1 1211.9 L1000.69 1211.9 L1001.27 1211.9 L1001.86 1211.9 L1002.44 1211.9 L1003.03 1211.9 L1003.62 1211.9 L1004.2 1211.9 L1004.79 1211.9 L1005.38 1211.9 L1005.96 1211.9 L1006.55 1211.9 L1007.14 1211.9 L1007.72 1211.9 L1008.31 1211.9 L1008.9 1211.9 L1009.48 1211.9 L1010.07 1211.9 L1010.65 1211.9 L1011.24 1211.9 L1011.83 1211.9 L1012.41 1211.9 L1013 1211.9 L1013.59 1211.9 L1014.17 1211.9 L1014.76 1211.9 L1015.35 1211.9 L1015.93 1211.9 L1016.52 1211.9 L1017.11 1211.9 L1017.69 1211.9 L1018.28 1211.9 L1018.86 1211.9 L1019.45 1211.9 L1020.04 1211.9 L1020.62 1211.9 L1021.21 1211.9 L1021.8 1211.9 L1022.38 1211.9 L1022.97 1211.9 L1023.56 1211.9 L1024.14 1211.9 L1024.73 1211.9 L1025.32 1211.9 L1025.9 1211.9 L1026.49 1211.9 L1027.07 1211.9 L1027.66 1211.9 L1028.25 1211.9 L1028.83 1211.9 L1029.42 1211.9 L1030.01 1211.9 L1030.59 1211.9 L1031.18 1211.9 L1031.77 1211.9 L1032.35 1211.9 L1032.94 1211.9 L1033.52 1211.9 L1034.11 1211.9 L1034.7 1211.9 L1035.28 1211.9 L1035.87 1211.9 L1036.46 1211.9 L1037.04 1211.9 L1037.63 1211.9 L1038.22 1211.9 L1038.8 1211.9 L1039.39 1211.9 L1039.98 1211.9 L1040.56 1211.9 L1041.15 1211.9 L1041.73 1211.9 L1042.32 1211.9 L1042.91 1211.9 L1043.49 1211.9 L1044.08 1211.9 L1044.67 1211.9 L1045.25 1211.9 L1045.84 1211.9 L1046.43 1211.9 L1047.01 1211.9 L1047.6 1211.9 L1048.19 1211.9 L1048.77 1211.9 L1049.36 1211.9 L1049.94 1211.9 L1050.53 1211.9 L1051.12 1211.9 L1051.7 1211.9 L1052.29 1211.9 L1052.88 1211.9 L1053.46 1211.9 L1054.05 1211.9 L1054.64 1211.9 L1055.22 1211.9 L1055.81 1211.9 L1056.39 1211.9 L1056.98 1211.9 L1057.57 1211.9 L1058.15 1211.9 L1058.74 1211.9 L1059.33 1211.9 L1059.91 1211.9 L1060.5 1211.9 L1061.09 1211.9 L1061.67 1211.9 L1062.26 1211.9 L1062.85 1211.9 L1063.43 1211.9 L1064.02 1211.9 L1064.6 1211.9 L1065.19 1211.9 L1065.78 1211.9 L1066.36 1211.9 L1066.95 1211.9 L1067.54 1211.9 L1068.12 1211.9 L1068.71 1211.9 L1069.3 1211.9 L1069.88 1211.9 L1070.47 1211.9 L1071.06 1211.9 L1071.64 1211.9 L1072.23 1211.9 L1072.81 1211.9 L1073.4 1211.9 L1073.99 1211.9 L1074.57 1211.9 L1075.16 1211.9 L1075.75 1211.9 L1076.33 1211.9 L1076.92 1211.9 L1077.51 1211.9 L1078.09 1211.9 L1078.68 1211.9 L1079.26 1211.9 L1079.85 1211.9 L1080.44 1211.9 L1081.02 1211.9 L1081.61 1211.9 L1082.2 1211.9 L1082.78 1211.9 L1083.37 1211.9 L1083.96 1211.9 L1084.54 1211.9 L1085.13 1211.9 L1085.72 1211.9 L1086.3 1211.9 L1086.89 1211.9 L1087.47 1211.9 L1088.06 1211.9 L1088.65 1211.9 L1089.23 1211.9 L1089.82 1211.9 L1090.41 1211.9 L1090.99 1211.9 L1091.58 1211.9 L1092.17 1211.9 L1092.75 1211.9 L1093.34 1211.9 L1093.93 1211.9 L1094.51 1211.9 L1095.1 1211.9 L1095.68 1211.9 L1096.27 1211.9 L1096.86 1211.9 L1097.44 1211.9 L1098.03 1211.9 L1098.62 1211.9 L1099.2 1211.9 L1099.79 1211.9 L1100.38 1211.9 L1100.96 1211.9 L1101.55 1211.9 L1102.14 1211.9 L1102.72 1211.9 L1103.31 1211.9 L1103.89 1211.9 L1104.48 1211.9 L1105.07 1211.9 L1105.65 1211.9 L1106.24 1211.9 L1106.83 1211.9 L1107.41 1211.9 L1108 1211.9 L1108.59 1211.9 L1109.17 1211.9 L1109.76 1211.9 L1110.34 1211.9 L1110.93 1211.9 L1111.52 1211.9 L1112.1 1211.9 L1112.69 1211.9 L1113.28 1211.9 L1113.86 1211.9 L1114.45 1211.9 L1115.04 1211.9 L1115.62 1211.9 L1116.21 1211.9 L1116.8 1211.9 L1117.38 1211.9 L1117.97 1211.9 L1118.55 1211.9 L1119.14 1211.9 L1119.73 1211.9 L1120.31 1211.9 L1120.9 1211.9 L1121.49 1211.9 L1122.07 1211.9 L1122.66 1211.9 L1123.25 1211.9 L1123.83 1211.9 L1124.42 1211.9 L1125.01 1211.9 L1125.59 1211.9 L1126.18 1211.9 L1126.76 1211.9 L1127.35 1211.9 L1127.94 1211.9 L1128.52 1211.9 L1129.11 1211.9 L1129.7 1211.9 L1130.28 1211.9 L1130.87 1211.9 L1131.46 1211.9 L1132.04 1211.9 L1132.63 1211.9 L1133.21 1211.9 L1133.8 1211.9 L1134.39 1211.9 L1134.97 1211.9 L1135.56 1211.9 L1136.15 1211.9 L1136.73 1211.9 L1137.32 1211.9 L1137.91 1211.9 L1138.49 1211.9 L1139.08 1211.9 L1139.67 1211.9 L1140.25 1211.9 L1140.84 1211.9 L1141.42 1211.9 L1142.01 1211.9 L1142.6 1211.9 L1143.18 1211.9 L1143.77 1211.9 L1144.36 1211.9 L1144.94 1211.9 L1145.53 1211.9 L1146.12 1211.9 L1146.7 1211.9 L1147.29 1211.9 L1147.88 1211.9 L1148.46 1211.9 L1149.05 1211.9 L1149.63 1211.9 L1150.22 1211.9 L1150.81 1211.9 L1151.39 1211.9 L1151.98 1211.9 L1152.57 1211.9 L1153.15 1211.9 L1153.74 1211.9 L1154.33 1211.9 L1154.91 1211.9 L1155.5 1211.9 L1156.09 1211.9 L1156.67 1211.9 L1157.26 1211.9 L1157.84 1211.9 L1158.43 1211.9 L1159.02 1211.9 L1159.6 1211.9 L1160.19 1211.9 L1160.78 1211.9 L1161.36 1211.9 L1161.95 1211.9 L1162.54 1211.9 L1163.12 1211.9 L1163.71 1211.9 L1164.29 1211.9 L1164.88 1211.9 L1165.47 1211.9 L1166.05 1211.9 L1166.64 1211.9 L1167.23 1211.9 L1167.81 1211.9 L1168.4 1211.9 L1168.99 1211.9 L1169.57 1211.9 L1170.16 1211.9 L1170.75 1211.9 L1171.33 1211.9 L1171.92 1211.9 L1172.5 1211.9 L1173.09 1211.9 L1173.68 1211.9 L1174.26 1211.9 L1174.85 1211.9 L1175.44 1211.9 L1176.02 1211.9 L1176.61 1211.9 L1177.2 1211.9 L1177.78 1211.9 L1178.37 1211.9 L1178.96 1211.9 L1179.54 1211.9 L1180.13 1211.9 L1180.71 1211.9 L1181.3 1211.9 L1181.89 1211.9 L1182.47 1211.9 L1183.06 1211.9 L1183.65 1211.9 L1184.23 1211.9 L1184.82 1211.9 L1185.41 1211.9 L1185.99 1211.9 L1186.58 1211.9 L1187.16 1211.9 L1187.75 1211.9 L1188.34 1211.9 L1188.92 1211.9 L1189.51 1211.9 L1190.1 1211.9 L1190.68 1211.9 L1191.27 1211.9 L1191.86 1211.9 L1192.44 1211.9 L1193.03 1211.9 L1193.62 1211.9 L1194.2 1211.9 L1194.79 1211.9 L1195.37 1211.9 L1195.96 1211.9 L1196.55 1211.9 L1197.13 1211.9 L1197.72 1211.9 L1198.31 1211.9 L1198.89 1211.9 L1199.48 1211.9 L1200.07 1211.9 L1200.65 1211.9 L1201.24 1211.9 L1201.83 1211.9 L1202.41 1211.9 L1203 1211.9 L1203.58 1211.9 L1204.17 1211.9 L1204.76 1211.9 L1205.34 1211.9 L1205.93 1211.9 L1206.52 1211.9 L1207.1 1211.9 L1207.69 1211.9 L1208.28 1211.9 L1208.86 1211.9 L1209.45 1211.9 L1210.03 1211.9 L1210.62 1211.9 L1211.21 1211.9 L1211.79 1211.9 L1212.38 1211.9 L1212.97 1211.9 L1213.55 1211.9 L1214.14 1211.9 L1214.73 1211.9 L1215.31 1211.9 L1215.9 1211.9 L1216.49 1211.9 L1217.07 1211.9 L1217.66 1211.9 L1218.24 1211.9 L1218.83 1211.9 L1219.42 1211.9 L1220 1211.9 L1220.59 1211.9 L1221.18 1211.9 L1221.76 1211.9 L1222.35 1211.9 L1222.94 1211.9 L1223.52 1211.9 L1224.11 1211.9 L1224.7 1211.9 L1225.28 1211.9 L1225.87 1211.9 L1226.45 1211.9 L1227.04 1211.9 L1227.63 1211.9 L1228.21 1211.9 L1228.8 1211.9 L1229.39 1211.9 L1229.97 1211.9 L1230.56 1211.9 L1231.15 1211.9 L1231.73 1211.9 L1232.32 1211.9 L1232.91 1211.9 L1233.49 1211.9 L1234.08 1211.9 L1234.66 1211.9 L1235.25 1211.9 L1235.84 1211.9 L1236.42 1211.9 L1237.01 1211.9 L1237.6 1211.9 L1238.18 1211.9 L1238.77 1211.9 L1239.36 1211.9 L1239.94 1211.9 L1240.53 1211.9 L1241.11 1211.9 L1241.7 1211.9 L1242.29 1211.9 L1242.87 1211.9 L1243.46 1211.9 L1244.05 1211.9 L1244.63 1211.9 L1245.22 1211.9 L1245.81 1211.9 L1246.39 1211.9 L1246.98 1211.9 L1247.57 1211.9 L1248.15 1211.9 L1248.74 1211.9 L1249.32 1211.9 L1249.91 1211.9 L1250.5 1211.9 L1251.08 1211.9 L1251.67 1211.9 L1252.26 1211.9 L1252.84 1211.9 L1253.43 1211.9 L1254.02 1211.9 L1254.6 1211.9 L1255.19 1211.9 L1255.78 1211.9 L1256.36 1211.9 L1256.95 1211.9 L1257.53 1211.9 L1258.12 1211.9 L1258.71 1211.9 L1259.29 1211.9 L1259.88 1211.9 L1260.47 1211.9 L1261.05 1211.9 L1261.64 1211.9 L1262.23 1211.9 L1262.81 1211.9 L1263.4 1211.9 L1263.98 1211.9 L1264.57 1211.9 L1265.16 1211.9 L1265.74 1211.9 L1266.33 1211.9 L1266.92 1211.9 L1267.5 1211.9 L1268.09 1211.9 L1268.68 1211.9 L1269.26 1211.9 L1269.85 1211.9 L1270.44 1211.9 L1271.02 1211.9 L1271.61 1211.9 L1272.19 1211.9 L1272.78 1211.9 L1273.37 1211.9 L1273.95 1211.9 L1274.54 1211.9 L1275.13 1211.9 L1275.71 1211.9 L1276.3 1211.9 L1276.89 1211.9 L1277.47 1211.9 L1278.06 1211.9 L1278.65 1211.9 L1279.23 1211.9 L1279.82 1211.9 L1280.4 1211.9 L1280.99 1211.9 L1281.58 1211.9 L1282.16 1211.9 L1282.75 1211.9 L1283.34 1211.9 L1283.92 1211.9 L1284.51 1211.9 L1285.1 1211.9 L1285.68 1211.9 L1286.27 1211.9 L1286.86 1211.9 L1287.44 1211.9 L1288.03 1211.9 L1288.61 1211.9 L1289.2 1211.9 L1289.79 1211.9 L1290.37 1211.9 L1290.96 1211.9 L1291.55 1211.9 L1292.13 1211.9 L1292.72 1211.9 L1293.31 1211.9 L1293.89 1211.9 L1294.48 1211.9 L1295.06 1211.9 L1295.65 1211.9 L1296.24 1211.9 L1296.82 1211.9 L1297.41 1211.9 L1298 1211.9 L1298.58 1211.9 L1299.17 1211.9 L1299.76 1211.9 L1300.34 1211.9 L1300.93 1211.9 L1301.52 1211.9 L1302.1 1211.9 L1302.69 1211.9 L1303.27 1211.9 L1303.86 1211.9 L1304.45 1211.9 L1305.03 1211.9 L1305.62 1211.9 L1306.21 1211.9 L1306.79 1211.9 L1307.38 1211.9 L1307.97 1211.9 L1308.55 1211.9 L1309.14 1211.9 L1309.73 1211.9 L1310.31 1211.9 L1310.9 1211.9 L1311.48 1211.9 L1312.07 1211.9 L1312.66 1211.9 L1313.24 1211.9 L1313.83 1211.9 L1314.42 1211.9 L1315 1211.9 L1315.59 1211.9 L1316.18 1211.9 L1316.76 1211.9 L1317.35 1211.9 L1317.93 1211.9 L1318.52 1211.9 L1319.11 1211.9 L1319.69 1211.9 L1320.28 1211.9 L1320.87 1211.9 L1321.45 1211.9 L1322.04 1211.9 L1322.63 1211.9 L1323.21 1211.9 L1323.8 1211.9 L1324.39 1211.9 L1324.97 1211.9 L1325.56 1211.9 L1326.14 1211.9 L1326.73 1211.9 L1327.32 1211.9 L1327.9 1211.9 L1328.49 1211.9 L1329.08 1211.9 L1329.66 1211.9 L1330.25 1211.9 L1330.84 1211.9 L1331.42 1211.9 L1332.01 1211.9 L1332.6 1211.9 L1333.18 1211.9 L1333.77 1211.9 L1334.35 1211.9 L1334.94 1211.9 L1335.53 1211.9 L1336.11 1211.9 L1336.7 1211.9 L1337.29 1211.9 L1337.87 1211.9 L1338.46 1211.9 L1339.05 1211.9 L1339.63 1211.9 L1340.22 1211.9 L1340.8 1211.9 L1341.39 1211.9 L1341.98 1211.9 L1342.56 1211.9 L1343.15 1211.9 L1343.74 1211.9 L1344.32 1211.9 L1344.91 1211.9 L1345.5 1211.9 L1346.08 1211.9 L1346.67 1211.9 L1347.26 1211.9 L1347.84 1211.9 L1348.43 1211.9 L1349.01 1211.9 L1349.6 1211.9 L1350.19 1211.9 L1350.77 1211.9 L1351.36 1211.9 L1351.95 1211.9 L1352.53 1211.9 L1353.12 1211.9 L1353.71 1211.9 L1354.29 1211.9 L1354.88 1211.9 L1355.47 1211.9 L1356.05 1211.9 L1356.64 1211.9 L1357.22 1211.9 L1357.81 1211.9 L1358.4 1211.9 L1358.98 1211.9 L1359.57 1211.9 L1360.16 1211.9 L1360.74 1211.9 L1361.33 1211.9 L1361.92 1211.9 L1362.5 1211.9 L1363.09 1211.9 L1363.68 1211.9 L1364.26 1211.9 L1364.85 1211.9 L1365.43 1211.9 L1366.02 1211.9 L1366.61 1211.9 L1367.19 1211.9 L1367.78 1211.9 L1368.37 1211.9 L1368.95 1211.9 L1369.54 1211.9 L1370.13 1211.9 L1370.71 1211.9 L1371.3 1211.9 L1371.88 1211.9 L1372.47 1211.9 L1373.06 1211.9 L1373.64 1211.9 L1374.23 1211.9 L1374.82 1211.9 L1375.4 1211.9 L1375.99 1211.9 L1376.58 1211.9 L1377.16 1211.9 L1377.75 1211.9 L1378.34 1211.9 L1378.92 1211.9 L1379.51 1211.9 L1380.09 1211.9 L1380.68 1211.9 L1381.27 1211.9 L1381.85 1211.9 L1382.44 1211.9 L1383.03 1211.9 L1383.61 1211.9 L1384.2 1211.9 L1384.79 1211.9 L1385.37 1211.9 L1385.96 1211.9 L1386.55 1211.9 L1387.13 1211.9 L1387.72 1211.9 L1388.3 1211.9 L1388.89 1211.9 L1389.48 1211.9 L1390.06 1211.9 L1390.65 1211.9 L1391.24 1211.9 L1391.82 1211.9 L1392.41 1211.9 L1393 1211.9 L1393.58 1211.9 L1394.17 1211.9 L1394.75 1211.9 L1395.34 1211.9 L1395.93 1211.9 L1396.51 1211.9 L1397.1 1211.9 L1397.69 1211.9 L1398.27 1211.9 L1398.86 1211.9 L1399.45 1211.9 L1400.03 1211.9 L1400.62 1211.9 L1401.21 1211.9 L1401.79 1211.9 L1402.38 1211.9 L1402.96 1211.9 L1403.55 1211.9 L1404.14 1211.9 L1404.72 1211.9 L1405.31 1211.9 L1405.9 1211.9 L1406.48 1211.9 L1407.07 1211.9 L1407.66 1211.9 L1408.24 1211.9 L1408.83 1211.9 L1409.42 1211.9 L1410 1211.9 L1410.59 1211.9 L1411.17 1211.9 L1411.76 1211.9 L1412.35 1211.9 L1412.93 1211.9 L1413.52 1211.9 L1414.11 1211.9 L1414.69 1211.9 L1415.28 1211.9 L1415.87 1211.9 L1416.45 1211.9 L1417.04 1211.9 L1417.63 1211.9 L1418.21 1211.9 L1418.8 1211.9 L1419.38 1211.9 L1419.97 1211.9 L1420.56 1211.9 L1421.14 1211.9 L1421.73 1211.9 L1422.32 1211.9 L1422.9 1211.9 L1423.49 1211.9 L1424.08 1211.9 L1424.66 1211.9 L1425.25 1211.9 L1425.83 1211.9 L1426.42 1211.9 L1427.01 1211.9 L1427.59 1211.9 L1428.18 1211.9 L1428.77 1211.9 L1429.35 1211.9 L1429.94 1211.9 L1430.53 1211.9 L1431.11 1211.9 L1431.7 1211.9 L1432.29 1211.9 L1432.87 1211.9 L1433.46 1211.9 L1434.04 1211.9 L1434.63 1211.9 L1435.22 1211.9 L1435.8 1211.9 L1436.39 1211.9 L1436.98 1211.9 L1437.56 1211.9 L1438.15 1211.9 L1438.74 1211.9 L1439.32 1211.9 L1439.91 1211.9 L1440.5 1211.9 L1441.08 1211.9 L1441.67 1211.9 L1442.25 1211.9 L1442.84 1211.9 L1443.43 1211.9 L1444.01 1211.9 L1444.6 1211.9 L1445.19 1211.9 L1445.77 1211.9 L1446.36 1211.9 L1446.95 1211.9 L1447.53 1211.9 L1448.12 1211.9 L1448.7 1211.9 L1449.29 1211.9 L1449.88 1211.9 L1450.46 1211.9 L1451.05 1211.9 L1451.64 1211.9 L1452.22 1211.9 L1452.81 1211.9 L1453.4 1211.9 L1453.98 1211.9 L1454.57 1211.9 L1455.16 1211.9 L1455.74 1211.9 L1456.33 1211.9 L1456.91 1211.9 L1457.5 1211.9 L1458.09 1211.9 L1458.67 1211.9 L1459.26 1211.9 L1459.85 1211.9 L1460.43 1211.9 L1461.02 1211.9 L1461.61 1211.9 L1462.19 1211.9 L1462.78 1211.9 L1463.37 1211.9 L1463.95 1211.9 L1464.54 1211.9 L1465.12 1211.9 L1465.71 1211.9 L1466.3 1211.9 L1466.88 1211.9 L1467.47 1211.9 L1468.06 1211.9 L1468.64 1211.9 L1469.23 1211.9 L1469.82 1211.9 L1470.4 1211.9 L1470.99 1211.9 L1471.57 1211.9 L1472.16 1211.9 L1472.75 1211.9 L1473.33 1211.9 L1473.92 1211.9 L1474.51 1211.9 L1475.09 1211.9 L1475.68 1211.9 L1476.27 1211.9 L1476.85 1211.9 L1477.44 1211.9 L1478.03 1211.9 L1478.61 1211.9 L1479.2 1211.9 L1479.78 1211.9 L1480.37 1211.9 L1480.96 1211.9 L1481.54 1211.9 L1482.13 1211.9 L1482.72 1211.9 L1483.3 1211.9 L1483.89 1211.9 L1484.48 1211.9 L1485.06 1211.9 L1485.65 1211.9 L1486.24 1211.9 L1486.82 1211.9 L1487.41 1211.9 L1487.99 1211.9 L1488.58 1211.9 L1489.17 1211.9 L1489.75 1211.9 L1490.34 1211.9 L1490.93 1211.9 L1491.51 1211.9 L1492.1 1211.9 L1492.69 1211.9 L1493.27 1211.9 L1493.86 1211.9 L1494.45 1211.9 L1495.03 1211.9 L1495.62 1211.9 L1496.2 1211.9 L1496.79 1211.9 L1497.38 1211.9 L1497.96 1211.9 L1498.55 1211.9 L1499.14 1211.9 L1499.72 1211.9 L1500.31 1211.9 L1500.9 1211.9 L1501.48 1211.9 L1502.07 1211.9 L1502.65 1211.9 L1503.24 1211.9 L1503.83 1211.9 L1504.41 1211.9 L1505 1211.9 L1505.59 1211.9 L1506.17 1211.9 L1506.76 1211.9 L1507.35 1211.9 L1507.93 1211.9 L1508.52 1211.9 L1509.11 1211.9 L1509.69 1211.9 L1510.28 1211.9 L1510.86 1211.9 L1511.45 1211.9 L1512.04 1211.9 L1512.62 1211.9 L1513.21 1211.9 L1513.8 1211.9 L1514.38 1211.9 L1514.97 1211.9 L1515.56 1211.9 L1516.14 1211.9 L1516.73 1211.9 L1517.32 1211.9 L1517.9 1211.9 L1518.49 1211.9 L1519.07 1211.9 L1519.66 1211.9 L1520.25 1211.9 L1520.83 1211.9 L1521.42 1211.9 L1522.01 1211.9 L1522.59 1211.9 L1523.18 1211.9 L1523.77 1211.9 L1524.35 1211.9 L1524.94 1211.9 L1525.52 1211.9 L1526.11 1211.9 L1526.7 1211.9 L1527.28 1211.9 L1527.87 1211.9 L1528.46 1211.9 L1529.04 1211.9 L1529.63 1211.9 L1530.22 1211.9 L1530.8 1211.9 L1531.39 1211.9 L1531.98 1211.9 L1532.56 1211.9 L1533.15 1211.9 L1533.73 1211.9 L1534.32 1211.9 L1534.91 1211.9 L1535.49 1211.9 L1536.08 1211.9 L1536.67 1211.9 L1537.25 1211.9 L1537.84 1211.9 L1538.43 1211.9 L1539.01 1211.9 L1539.6 1211.9 L1540.19 1211.9 L1540.77 1211.9 L1541.36 1211.9 L1541.94 1211.9 L1542.53 1211.9 L1543.12 1211.9 L1543.7 1211.9 L1544.29 1211.9 L1544.88 1211.9 L1545.46 1211.9 L1546.05 1211.9 L1546.64 1211.9 L1547.22 1211.9 L1547.81 1211.9 L1548.4 1211.9 L1548.98 1211.9 L1549.57 1211.9 L1550.15 1211.9 L1550.74 1211.9 L1551.33 1211.9 L1551.91 1211.9 L1552.5 1211.9 L1553.09 1211.9 L1553.67 1211.9 L1554.26 1211.9 L1554.85 1211.9 L1555.43 1211.9 L1556.02 1211.9 L1556.6 1211.9 L1557.19 1211.9 L1557.78 1211.9 L1558.36 1211.9 L1558.95 1211.9 L1559.54 1211.9 L1560.12 1211.9 L1560.71 1211.9 L1561.3 1211.9 L1561.88 1211.9 L1562.47 1211.9 L1563.06 1211.9 L1563.64 1211.9 L1564.23 1211.9 L1564.81 1211.9 L1565.4 1211.9 L1565.99 1211.9 L1566.57 1211.9 L1567.16 1211.9 L1567.75 1211.9 L1568.33 1211.9 L1568.92 1211.9 L1569.51 1211.9 L1570.09 1211.9 L1570.68 1211.9 L1571.27 1211.9 L1571.85 1211.9 L1572.44 1211.9 L1573.02 1211.9 L1573.61 1211.9 L1574.2 1211.9 L1574.78 1211.9 L1575.37 1211.9 L1575.96 1211.9 L1576.54 1211.9 L1577.13 1211.9 L1577.72 1211.9 L1578.3 1211.9 L1578.89 1211.9 L1579.47 1211.9 L1580.06 1211.9 L1580.65 1211.9 L1581.23 1211.9 L1581.82 1211.9 L1582.41 1211.9 L1582.99 1211.9 L1583.58 1211.9 L1584.17 1211.9 L1584.75 1211.9 L1585.34 1211.9 L1585.93 1211.9 L1586.51 1211.9 L1587.1 1211.9 L1587.68 1211.9 L1588.27 1211.9 L1588.86 1211.9 L1589.44 1211.9 L1590.03 1211.9 L1590.62 1211.9 L1591.2 1211.9 L1591.79 1211.9 L1592.38 1211.9 L1592.96 1211.9 L1593.55 1211.9 L1594.14 1211.9 L1594.72 1211.9 L1595.31 1211.9 L1595.89 1211.9 L1596.48 1211.9 L1597.07 1211.9 L1597.65 1211.9 L1598.24 1211.9 L1598.83 1211.9 L1599.41 1211.9 L1600 1211.9 L1600.59 1211.9 L1601.17 1211.9 L1601.76 1211.9 L1602.34 1211.9 L1602.93 1211.9 L1603.52 1211.9 L1604.1 1211.9 L1604.69 1211.9 L1605.28 1211.9 L1605.86 1211.9 L1606.45 1211.9 L1607.04 1211.9 L1607.62 1211.9 L1608.21 1211.9 L1608.8 1211.9 L1609.38 1211.9 L1609.97 1211.9 L1610.55 1211.9 L1611.14 1211.9 L1611.73 1211.9 L1612.31 1211.9 L1612.9 1211.9 L1613.49 1211.9 L1614.07 1211.9 L1614.66 1211.9 L1615.25 1211.9 L1615.83 1211.9 L1616.42 1211.9 L1617.01 1211.9 L1617.59 1211.9 L1618.18 1211.9 L1618.76 1211.9 L1619.35 1211.9 L1619.94 1211.9 L1620.52 1211.9 L1621.11 1211.9 L1621.7 1211.9 L1622.28 1211.9 L1622.87 1211.9 L1623.46 1211.9 L1624.04 1211.9 L1624.63 1211.9 L1625.22 1211.9 L1625.8 1211.9 L1626.39 1211.9 L1626.97 1211.9 L1627.56 1211.9 L1628.15 1211.9 L1628.73 1211.9 L1629.32 1211.9 L1629.91 1211.9 L1630.49 1211.9 L1631.08 1211.9 L1631.67 1211.9 L1632.25 1211.9 L1632.84 1211.9 L1633.42 1211.9 L1634.01 1211.9 L1634.6 1211.9 L1635.18 1211.9 L1635.77 1211.9 L1636.36 1211.9 L1636.94 1211.9 L1637.53 1211.9 L1638.12 1211.9 L1638.7 1211.9 L1639.29 1211.9 L1639.88 1211.9 L1640.46 1211.9 L1641.05 1211.9 L1641.63 1211.9 L1642.22 1211.9 L1642.81 1211.9 L1643.39 1211.9 L1643.98 1211.9 L1644.57 1211.9 L1645.15 1211.9 L1645.74 1211.9 L1646.33 1211.9 L1646.91 1211.9 L1647.5 1211.9 L1648.09 1211.9 L1648.67 1211.9 L1649.26 1211.9 L1649.84 1211.9 L1650.43 1211.9 L1651.02 1211.9 L1651.6 1211.9 L1652.19 1211.9 L1652.78 1211.9 L1653.36 1211.9 L1653.95 1211.9 L1654.54 1211.9 L1655.12 1211.9 L1655.71 1211.9 L1656.29 1211.9 L1656.88 1211.9 L1657.47 1211.9 L1658.05 1211.9 L1658.64 1211.9 L1659.23 1211.9 L1659.81 1211.9 L1660.4 1211.9 L1660.99 1211.9 L1661.57 1211.9 L1662.16 1211.9 L1662.75 1211.9 L1663.33 1211.9 L1663.92 1211.9 L1664.5 1211.9 L1665.09 1211.9 L1665.68 1211.9 L1666.26 1211.9 L1666.85 1211.9 L1667.44 1211.9 L1668.02 1211.9 L1668.61 1211.9 L1669.2 1211.9 L1669.78 1211.9 L1670.37 1211.9 L1670.96 1211.9 L1671.54 1211.9 L1672.13 1211.9 L1672.71 1211.9 L1673.3 1211.9 L1673.89 1211.9 L1674.47 1211.9 L1675.06 1211.9 L1675.65 1211.9 L1676.23 1211.9 L1676.82 1211.9 L1677.41 1211.9 L1677.99 1211.9 L1678.58 1211.9 L1679.17 1211.9 L1679.75 1211.9 L1680.34 1211.9 L1680.92 1211.9 L1681.51 1211.9 L1682.1 1211.9 L1682.68 1211.9 L1683.27 1211.9 L1683.86 1211.9 L1684.44 1211.9 L1685.03 1211.9 L1685.62 1211.9 L1686.2 1211.9 L1686.79 1211.9 L1687.37 1211.9 L1687.96 1211.9 L1688.55 1211.9 L1689.13 1211.9 L1689.72 1211.9 L1690.31 1211.9 L1690.89 1211.9 L1691.48 1211.9 L1692.07 1211.9 L1692.65 1211.9 L1693.24 1211.9 L1693.83 1211.9 L1694.41 1211.9 L1695 1211.9 L1695.58 1211.9 L1696.17 1211.9 L1696.76 1211.9 L1697.34 1211.9 L1697.93 1211.9 L1698.52 1211.9 L1699.1 1211.9 L1699.69 1211.9 L1700.28 1211.9 L1700.86 1211.9 L1701.45 1211.9 L1702.04 1211.9 L1702.62 1211.9 L1703.21 1211.9 L1703.79 1211.9 L1704.38 1211.9 L1704.97 1211.9 L1705.55 1211.9 L1706.14 1211.9 L1706.73 1211.9 L1707.31 1211.9 L1707.9 1211.9 L1708.49 1211.9 L1709.07 1211.9 L1709.66 1211.9 L1710.24 1211.9 L1710.83 1211.9 L1711.42 1211.9 L1712 1211.9 L1712.59 1211.9 L1713.18 1211.9 L1713.76 1211.9 L1714.35 1211.9 L1714.94 1211.9 L1715.52 1211.9 L1716.11 1211.9 L1716.7 1211.9 L1717.28 1211.9 L1717.87 1211.9 L1718.45 1211.9 L1719.04 1211.9 L1719.63 1211.9 L1720.21 1211.9 L1720.8 1211.9 L1721.39 1211.9 L1721.97 1211.9 L1722.56 1211.9 L1723.15 1211.9 L1723.73 1211.9 L1724.32 1211.9 L1724.91 1211.9 L1725.49 1211.9 L1726.08 1211.9 L1726.66 1211.9 L1727.25 1211.9 L1727.84 1211.9 L1728.42 1211.9 L1729.01 1211.9 L1729.6 1211.9 L1730.18 1211.9 L1730.77 1211.9 L1731.36 1211.9 L1731.94 1211.9 L1732.53 1211.9 L1733.11 1211.9 L1733.7 1211.9 L1734.29 1211.9 L1734.87 1211.9 L1735.46 1211.9 L1736.05 1211.9 L1736.63 1211.9 L1737.22 1211.9 L1737.81 1211.9 L1738.39 1211.9 L1738.98 1211.9 L1739.57 1211.9 L1740.15 1211.9 L1740.74 1211.9 L1741.32 1211.9 L1741.91 1211.9 L1742.5 1211.9 L1743.08 1211.9 L1743.67 1211.9 L1744.26 1211.9 L1744.84 1211.9 L1745.43 1211.9 L1746.02 1211.9 L1746.6 1211.9 L1747.19 1211.9 L1747.78 1211.9 L1748.36 1211.9 L1748.95 1211.9 L1749.53 1211.9 L1750.12 1211.9 L1750.71 1211.9 L1751.29 1211.9 L1751.88 1211.9 L1752.47 1211.9 L1753.05 1211.9 L1753.64 1211.9 L1754.23 1211.9 L1754.81 1211.9 L1755.4 1211.9 L1755.99 1211.9 L1756.57 1211.9 L1757.16 1211.9 L1757.74 1211.9 L1758.33 1211.9 L1758.92 1211.9 L1759.5 1211.9 L1760.09 1211.9 L1760.68 1211.9 L1761.26 1211.9 L1761.85 1211.9 L1762.44 1211.9 L1763.02 1211.9 L1763.61 1211.9 L1764.19 1211.9 L1764.78 1211.9 L1765.37 1211.9 L1765.95 1211.9 L1766.54 1211.9 L1767.13 1211.9 L1767.71 1211.9 L1768.3 1211.9 L1768.89 1211.9 L1769.47 1211.9 L1770.06 1211.9 L1770.65 1211.9 L1771.23 1211.9 L1771.82 1211.9 L1772.4 1211.9 L1772.99 1211.9 L1773.58 1211.9 L1774.16 1211.9 L1774.75 1211.9 L1775.34 1211.9 L1775.92 1211.9 L1776.51 1211.9 L1777.1 1211.9 L1777.68 1211.9 L1778.27 1211.9 L1778.86 1211.9 L1779.44 1211.9 L1780.03 1211.9 L1780.61 1211.9 L1781.2 1211.9 L1781.79 1211.9 L1782.37 1211.9 L1782.96 1211.9 L1783.55 1211.9 L1784.13 1211.9 L1784.72 1211.9 L1785.31 1211.9 L1785.89 1211.9 L1786.48 1211.9 L1787.06 1211.9 L1787.65 1211.9 L1788.24 1211.9 L1788.82 1211.9 L1789.41 1211.9 L1790 1211.9 L1790.58 1211.9 L1791.17 1211.9 L1791.76 1211.9 L1792.34 1211.9 L1792.93 1211.9 L1793.52 1211.9 L1794.1 1211.9 L1794.69 1211.9 L1795.27 1211.9 L1795.86 1211.9 L1796.45 1211.9 L1797.03 1211.9 L1797.62 1211.9 L1798.21 1211.9 L1798.79 1211.9 L1799.38 1211.9 L1799.97 1211.9 L1800.55 1211.9 L1801.14 1211.9 L1801.73 1211.9 L1802.31 1211.9 L1802.9 1211.9 L1803.48 1211.9 L1804.07 1211.9 L1804.66 1211.9 L1805.24 1211.9 L1805.83 1211.9 L1806.42 1211.9 L1807 1211.9 L1807.59 1211.9 L1808.18 1211.9 L1808.76 1211.9 L1809.35 1211.9 L1809.94 1211.9 L1810.52 1211.9 L1811.11 1211.9 L1811.69 1211.9 L1812.28 1211.9 L1812.87 1211.9 L1813.45 1211.9 L1814.04 1211.9 L1814.63 1211.9 L1815.21 1211.9 L1815.8 1211.9 L1816.39 1211.9 L1816.97 1211.9 L1817.56 1211.9 L1818.14 1211.9 L1818.73 1211.9 L1819.32 1211.9 L1819.9 1211.9 L1820.49 1211.9 L1821.08 1211.9 L1821.66 1211.9 L1822.25 1211.9 L1822.84 1211.9 L1823.42 1211.9 L1824.01 1211.9 L1824.6 1211.9 L1825.18 1211.9 L1825.77 1211.9 L1826.35 1211.9 L1826.94 1211.9 L1827.53 1211.9 L1828.11 1211.9 L1828.7 1211.9 L1829.29 1211.9 L1829.87 1211.9 L1830.46 1211.9 L1831.05 1211.9 L1831.63 1211.9 L1832.22 1211.9 L1832.81 1211.9 L1833.39 1211.9 L1833.98 1211.9 L1834.56 1211.9 L1835.15 1211.9 L1835.74 1211.9 L1836.32 1211.9 L1836.91 1211.9 L1837.5 1211.9 L1838.08 1211.9 L1838.67 1211.9 L1839.26 1211.9 L1839.84 1211.9 L1840.43 1211.9 L1841.01 1211.9 L1841.6 1211.9 L1842.19 1211.9 L1842.77 1211.9 L1843.36 1211.9 L1843.95 1211.9 L1844.53 1211.9 L1845.12 1211.9 L1845.71 1211.9 L1846.29 1211.9 L1846.88 1211.9 L1847.47 1211.9 L1848.05 1211.9 L1848.64 1211.9 L1849.22 1211.9 L1849.81 1211.9 L1850.4 1211.9 L1850.98 1211.9 L1851.57 1211.9 L1852.16 1211.9 L1852.74 1211.9 L1853.33 1211.9 L1853.92 1211.9 L1854.5 1211.9 L1855.09 1211.9 L1855.68 1211.9 L1856.26 1211.9 L1856.85 1211.9 L1857.43 1211.9 L1858.02 1211.9 L1858.61 1211.9 L1859.19 1211.9 L1859.78 1211.9 L1860.37 1211.9 L1860.95 1211.9 L1861.54 1211.9 L1862.13 1211.9 L1862.71 1211.9 L1863.3 1211.9 L1863.88 1211.9 L1864.47 1211.9 L1865.06 1211.9 L1865.64 1211.9 L1866.23 1211.9 L1866.82 1211.9 L1867.4 1211.9 L1867.99 1211.9 L1868.58 1211.9 L1869.16 1211.9 L1869.75 1211.9 L1870.34 1211.9 L1870.92 1211.9 L1871.51 1211.9 L1872.09 1211.9 L1872.68 1211.9 L1873.27 1211.9 L1873.85 1211.9 L1874.44 1211.9 L1875.03 1211.9 L1875.61 1211.9 L1876.2 1211.9 L1876.79 1211.9 L1877.37 1211.9 L1877.96 1211.9 L1878.55 1211.9 L1879.13 1211.9 L1879.72 1211.9 L1880.3 1211.9 L1880.89 1211.9 L1881.48 1211.9 L1882.06 1211.9 L1882.65 1211.9 L1883.24 1211.9 L1883.82 1211.9 L1884.41 1211.9 L1885 1211.9 L1885.58 1211.9 L1886.17 1211.9 L1886.76 1211.9 L1887.34 1211.9 L1887.93 1211.9 L1888.51 1211.9 L1889.1 1211.9 L1889.69 1211.9 L1890.27 1211.9 L1890.86 1211.9 L1891.45 1211.9 L1892.03 1211.9 L1892.62 1211.9 L1893.21 1211.9 L1893.79 1211.9 L1894.38 1211.9 L1894.96 1211.9 L1895.55 1211.9 L1896.14 1211.9 L1896.72 1211.9 L1897.31 1211.9 L1897.9 1211.9 L1898.48 1211.9 L1899.07 1211.9 L1899.66 1211.9 L1900.24 1211.9 L1900.83 1211.9 L1901.42 1211.9 L1902 1211.9 L1902.59 1211.9 L1903.17 1211.9 L1903.76 1211.9 L1904.35 1211.9 L1904.93 1211.9 L1905.52 1211.9 L1906.11 1211.9 L1906.69 1211.9 L1907.28 1211.9 L1907.87 1211.9 L1908.45 1211.9 L1909.04 1211.9 L1909.63 1211.9 L1910.21 1211.9 L1910.8 1211.9 L1911.38 1211.9 L1911.97 1211.9 L1912.56 1211.9 L1913.14 1211.9 L1913.73 1211.9 L1914.32 1211.9 L1914.9 1211.9 L1915.49 1211.9 L1916.08 1211.9 L1916.66 1211.9 L1917.25 1211.9 L1917.83 1211.9 L1918.42 1211.9 L1919.01 1211.9 L1919.59 1211.9 L1920.18 1211.9 L1920.77 1211.9 L1921.35 1211.9 L1921.94 1211.9 L1922.53 1211.9 L1923.11 1211.9 L1923.7 1211.9 L1924.29 1211.9 L1924.87 1211.9 L1925.46 1211.9 L1926.04 1211.9 L1926.63 1211.9 L1927.22 1211.9 L1927.8 1211.9 L1928.39 1211.9 L1928.98 1211.9 L1929.56 1211.9 L1930.15 1211.9 L1930.74 1211.9 L1931.32 1211.9 L1931.91 1211.9 L1932.5 1211.9 L1933.08 1211.9 L1933.67 1211.9 L1934.25 1211.9 L1934.84 1211.9 L1935.43 1211.9 L1936.01 1211.9 L1936.6 1211.9 L1937.19 1211.9 L1937.77 1211.9 L1938.36 1211.9 L1938.95 1211.9 L1939.53 1211.9 L1940.12 1211.9 L1940.71 1211.9 L1941.29 1211.9 L1941.88 1211.9 L1942.46 1211.9 L1943.05 1211.9 L1943.64 1211.9 L1944.22 1211.9 L1944.81 1211.9 L1945.4 1211.9 L1945.98 1211.9 L1946.57 1211.9 L1947.16 1211.9 L1947.74 1211.9 L1948.33 1211.9 L1948.91 1211.9 L1949.5 1211.9 L1950.09 1211.9 L1950.67 1211.9 L1951.26 1211.9 L1951.85 1211.9 L1952.43 1211.9 L1953.02 1211.9 L1953.61 1211.9 L1954.19 1211.9 L1954.78 1211.9 L1955.37 1211.9 L1955.95 1211.9 L1956.54 1211.9 L1957.12 1211.9 L1957.71 1211.9 L1958.3 1211.9 L1958.88 1211.9 L1959.47 1211.9 L1960.06 1211.9 L1960.64 1211.9 L1961.23 1211.9 L1961.82 1211.9 L1962.4 1211.9 L1962.99 1211.9 L1963.58 1211.9 L1964.16 1211.9 L1964.75 1211.9 L1965.33 1211.9 L1965.92 1211.9 L1966.51 1211.9 L1967.09 1211.9 L1967.68 1211.9 L1968.27 1211.9 L1968.85 1211.9 L1969.44 1211.9 L1970.03 1211.9 L1970.61 1211.9 L1971.2 1211.9 L1971.78 1211.9 L1972.37 1211.9 L1972.96 1211.9 L1973.54 1211.9 L1974.13 1211.9 L1974.72 1211.9 L1975.3 1211.9 L1975.89 1211.9 L1976.48 1211.9 L1977.06 1211.9 L1977.65 1211.9 L1978.24 1211.9 L1978.82 1211.9 L1979.41 1211.9 L1979.99 1211.9 L1980.58 1211.9 L1981.17 1211.9 L1981.75 1211.9 L1982.34 1211.9 L1982.93 1211.9 L1983.51 1211.9 L1984.1 1211.9 L1984.69 1211.9 L1985.27 1211.9 L1985.86 1211.9 L1986.45 1211.9 L1987.03 1211.9 L1987.62 1211.9 L1988.2 1211.9 L1988.79 1211.9 L1989.38 1211.9 L1989.96 1211.9 L1990.55 1211.9 L1991.14 1211.9 L1991.72 1211.9 L1992.31 1211.9 L1992.9 1211.9 L1993.48 1211.9 L1994.07 1211.9 L1994.65 1211.9 L1995.24 1211.9 L1995.83 1211.9 L1996.41 1211.9 L1997 1211.9 L1997.59 1211.9 L1998.17 1211.9 L1998.76 1211.9 L1999.35 1211.9 L1999.93 1211.9 L2000.52 1211.9 L2001.11 1211.9 L2001.69 1211.9 L2002.28 1211.9 L2002.86 1211.9 L2003.45 1211.9 L2004.04 1211.9 L2004.62 1211.9 L2005.21 1211.9 L2005.8 1211.9 L2006.38 1211.9 L2006.97 1211.9 L2007.56 1211.9 L2008.14 1211.9 L2008.73 1211.9 L2009.32 1211.9 L2009.9 1211.9 L2010.49 1211.9 L2011.07 1211.9 L2011.66 1211.9 L2012.25 1211.9 L2012.83 1211.9 L2013.42 1211.9 L2014.01 1211.9 L2014.59 1211.9 L2015.18 1211.9 L2015.77 1211.9 L2016.35 1211.9 L2016.94 1211.9 L2017.53 1211.9 L2018.11 1211.9 L2018.7 1211.9 L2019.28 1211.9 L2019.87 1211.9 L2020.46 1211.9 L2021.04 1211.9 L2021.63 1211.9 L2022.22 1211.9 L2022.8 1211.9 L2023.39 1211.9 L2023.98 1211.9 L2024.56 1211.9 L2025.15 1211.9 L2025.73 1211.9 L2026.32 1211.9 L2026.91 1211.9 L2027.49 1211.9 L2028.08 1211.9 L2028.67 1211.9 L2029.25 1211.9 L2029.84 1211.9 L2030.43 1211.9 L2031.01 1211.9 L2031.6 1211.9 L2032.19 1211.9 L2032.77 1211.9 L2033.36 1211.9 L2033.94 1211.9 L2034.53 1211.9 L2035.12 1211.9 L2035.7 1211.9 L2036.29 1211.9 L2036.88 1211.9 L2037.46 1211.9 L2038.05 1211.9 L2038.64 1211.9 L2039.22 1211.9 L2039.81 1211.9 L2040.4 1211.9 L2040.98 1211.9 L2041.57 1211.9 L2042.15 1211.9 L2042.74 1211.9 L2043.33 1211.9 L2043.91 1211.9 L2044.5 1211.9 L2045.09 1211.9 L2045.67 1211.9 L2046.26 1211.9 L2046.85 1211.9 L2047.43 1211.9 L2048.02 1211.9 L2048.6 1211.9 L2049.19 1211.9 L2049.78 1211.9 L2050.36 1211.9 L2050.95 1211.9 L2051.54 1211.9 L2052.12 1211.9 L2052.71 1211.9 L2053.3 1211.9 L2053.88 1211.9 L2054.47 1211.9 L2055.06 1211.9 L2055.64 1211.9 L2056.23 1211.9 L2056.81 1211.9 L2057.4 1211.9 L2057.99 1211.9 L2058.57 1211.9 L2059.16 1211.9 L2059.75 1211.9 L2060.33 1211.9 L2060.92 1211.9 L2061.51 1211.9 L2062.09 1211.9 L2062.68 1211.9 L2063.27 1211.9 L2063.85 1211.9 L2064.44 1211.9 L2065.02 1211.9 L2065.61 1211.9 L2066.2 1211.9 L2066.78 1211.9 L2067.37 1211.9 L2067.96 1211.9 L2068.54 1211.9 L2069.13 1211.9 L2069.72 1211.9 L2070.3 1211.9 L2070.89 1211.9 L2071.48 1211.9 L2072.06 1211.9 L2072.65 1211.9 L2073.23 1211.9 L2073.82 1211.9 L2074.41 1211.9 L2074.99 1211.9 L2075.58 1211.9 L2076.17 1211.9 L2076.75 1211.9 L2077.34 1211.9 L2077.93 1211.9 L2078.51 1211.9 L2079.1 1211.9 L2079.68 1211.9 L2080.27 1211.9 L2080.86 1211.9 L2081.44 1211.9 L2082.03 1211.9 L2082.62 1211.9 L2083.2 1211.9 L2083.79 1211.9 L2084.38 1211.9 L2084.96 1211.9 L2085.55 1211.9 L2086.14 1211.9 L2086.72 1211.9 L2087.31 1211.9 L2087.89 1211.9 L2088.48 1211.9 L2089.07 1211.9 L2089.65 1211.9 L2090.24 1211.9 L2090.83 1211.9 L2091.41 1211.9 L2092 1211.9 L2092.59 1211.9 L2093.17 1211.9 L2093.76 1211.9 L2094.35 1211.9 L2094.93 1211.9 L2095.52 1211.9 L2096.1 1211.9 L2096.69 1211.9 L2097.28 1211.9 L2097.86 1211.9 L2098.45 1211.9 L2099.04 1211.9 L2099.62 1211.9 L2100.21 1211.9 L2100.8 1211.9 L2101.38 1211.9 L2101.97 1211.9 L2102.55 1211.9 L2103.14 1211.9 L2103.73 1211.9 L2104.31 1211.9 L2104.9 1211.9 L2105.49 1211.9 L2106.07 1211.9 L2106.66 1211.9 L2107.25 1211.9 L2107.83 1211.9 L2108.42 1211.9 L2109.01 1211.9 L2109.59 1211.9 L2110.18 1211.9 L2110.76 1211.9 L2111.35 1211.9 L2111.94 1211.9 L2112.52 1211.9 L2113.11 1211.9 L2113.7 1211.9 L2114.28 1211.9 L2114.87 1211.9 L2115.46 1211.9 L2116.04 1211.9 L2116.63 1211.9 L2117.22 1211.9 L2117.8 1211.9 L2118.39 1211.9 L2118.97 1211.9 L2119.56 1211.9 L2120.15 1211.9 L2120.73 1211.9 L2121.32 1211.9 L2121.91 1211.9 L2122.49 1211.9 L2123.08 1211.9 L2123.67 1211.9 L2124.25 1211.9 L2124.84 1211.9 L2125.42 1211.9 L2126.01 1211.9 L2126.6 1211.9 L2127.18 1211.9 L2127.77 1211.9 L2128.36 1211.9 L2128.94 1211.9 L2129.53 1211.9 L2130.12 1211.9 L2130.7 1211.9 L2131.29 1211.9 L2131.88 1211.9 L2132.46 1211.9 L2133.05 1211.9 L2133.63 1211.9 L2134.22 1211.9 L2134.81 1211.9 L2135.39 1211.9 L2135.98 1211.9 L2136.57 1211.9 L2137.15 1211.9 L2137.74 1211.9 L2138.33 1211.9 L2138.91 1211.9 L2139.5 1211.9 L2140.09 1211.9 L2140.67 1211.9 L2141.26 1211.9 L2141.84 1211.9 L2142.43 1211.9 L2143.02 1211.9 L2143.6 1211.9 L2144.19 1211.9 L2144.78 1211.9 L2145.36 1211.9 L2145.95 1211.9 L2146.54 1211.9 L2147.12 1211.9 L2147.71 1211.9 L2148.3 1211.9 L2148.88 1211.9 L2149.47 1211.9 L2150.05 1211.9 L2150.64 1211.9 L2151.23 1211.9 L2151.81 1211.9 L2152.4 1211.9 L2152.99 1211.9 L2153.57 1211.9 L2154.16 1211.9 L2154.75 1211.9 L2155.33 1211.9 L2155.92 1211.9 L2156.5 1211.9 L2157.09 1211.9 L2157.68 1211.9 L2158.26 1211.9 L2158.26 1211.77 L2157.68 1211.77 L2157.09 1211.77 L2156.5 1211.77 L2155.92 1211.77 L2155.33 1211.77 L2154.75 1211.77 L2154.16 1211.77 L2153.57 1211.77 L2152.99 1211.77 L2152.4 1211.77 L2151.81 1211.77 L2151.23 1211.77 L2150.64 1211.77 L2150.05 1211.77 L2149.47 1211.77 L2148.88 1211.77 L2148.3 1211.77 L2147.71 1211.77 L2147.12 1211.77 L2146.54 1211.77 L2145.95 1211.77 L2145.36 1211.77 L2144.78 1211.77 L2144.19 1211.77 L2143.6 1211.77 L2143.02 1211.77 L2142.43 1211.77 L2141.84 1211.77 L2141.26 1211.77 L2140.67 1211.77 L2140.09 1211.77 L2139.5 1211.77 L2138.91 1211.77 L2138.33 1211.77 L2137.74 1211.77 L2137.15 1211.77 L2136.57 1211.77 L2135.98 1211.77 L2135.39 1211.77 L2134.81 1211.77 L2134.22 1211.77 L2133.63 1211.77 L2133.05 1211.77 L2132.46 1211.77 L2131.88 1211.77 L2131.29 1211.77 L2130.7 1211.77 L2130.12 1211.77 L2129.53 1211.77 L2128.94 1211.77 L2128.36 1211.77 L2127.77 1211.77 L2127.18 1211.77 L2126.6 1211.77 L2126.01 1211.77 L2125.42 1211.77 L2124.84 1211.77 L2124.25 1211.77 L2123.67 1211.77 L2123.08 1211.77 L2122.49 1211.77 L2121.91 1211.77 L2121.32 1211.77 L2120.73 1211.77 L2120.15 1211.77 L2119.56 1211.77 L2118.97 1211.77 L2118.39 1211.77 L2117.8 1211.77 L2117.22 1211.77 L2116.63 1211.77 L2116.04 1211.77 L2115.46 1211.77 L2114.87 1211.77 L2114.28 1211.77 L2113.7 1211.77 L2113.11 1211.77 L2112.52 1211.77 L2111.94 1211.77 L2111.35 1211.77 L2110.76 1211.77 L2110.18 1211.77 L2109.59 1211.77 L2109.01 1211.77 L2108.42 1211.77 L2107.83 1211.77 L2107.25 1211.77 L2106.66 1211.77 L2106.07 1211.77 L2105.49 1211.77 L2104.9 1211.77 L2104.31 1211.77 L2103.73 1211.77 L2103.14 1211.77 L2102.55 1211.77 L2101.97 1211.77 L2101.38 1211.77 L2100.8 1211.77 L2100.21 1211.77 L2099.62 1211.77 L2099.04 1211.77 L2098.45 1211.77 L2097.86 1211.77 L2097.28 1211.77 L2096.69 1211.77 L2096.1 1211.77 L2095.52 1211.77 L2094.93 1211.77 L2094.35 1211.77 L2093.76 1211.77 L2093.17 1211.77 L2092.59 1211.77 L2092 1211.77 L2091.41 1211.77 L2090.83 1211.77 L2090.24 1211.77 L2089.65 1211.77 L2089.07 1211.77 L2088.48 1211.77 L2087.89 1211.77 L2087.31 1211.77 L2086.72 1211.77 L2086.14 1211.77 L2085.55 1211.77 L2084.96 1211.77 L2084.38 1211.77 L2083.79 1211.77 L2083.2 1211.77 L2082.62 1211.77 L2082.03 1211.77 L2081.44 1211.77 L2080.86 1211.77 L2080.27 1211.77 L2079.68 1211.77 L2079.1 1211.77 L2078.51 1211.77 L2077.93 1211.77 L2077.34 1211.77 L2076.75 1211.77 L2076.17 1211.77 L2075.58 1211.77 L2074.99 1211.77 L2074.41 1211.77 L2073.82 1211.77 L2073.23 1211.77 L2072.65 1211.77 L2072.06 1211.77 L2071.48 1211.77 L2070.89 1211.77 L2070.3 1211.77 L2069.72 1211.77 L2069.13 1211.77 L2068.54 1211.77 L2067.96 1211.77 L2067.37 1211.77 L2066.78 1211.77 L2066.2 1211.77 L2065.61 1211.77 L2065.02 1211.77 L2064.44 1211.77 L2063.85 1211.77 L2063.27 1211.77 L2062.68 1211.77 L2062.09 1211.77 L2061.51 1211.77 L2060.92 1211.77 L2060.33 1211.77 L2059.75 1211.77 L2059.16 1211.77 L2058.57 1211.77 L2057.99 1211.77 L2057.4 1211.77 L2056.81 1211.77 L2056.23 1211.77 L2055.64 1211.77 L2055.06 1211.77 L2054.47 1211.77 L2053.88 1211.77 L2053.3 1211.77 L2052.71 1211.77 L2052.12 1211.77 L2051.54 1211.77 L2050.95 1211.77 L2050.36 1211.77 L2049.78 1211.77 L2049.19 1211.77 L2048.6 1211.77 L2048.02 1211.77 L2047.43 1211.77 L2046.85 1211.77 L2046.26 1211.77 L2045.67 1211.77 L2045.09 1211.77 L2044.5 1211.77 L2043.91 1211.77 L2043.33 1211.77 L2042.74 1211.77 L2042.15 1211.77 L2041.57 1211.77 L2040.98 1211.77 L2040.4 1211.77 L2039.81 1211.77 L2039.22 1211.77 L2038.64 1211.77 L2038.05 1211.77 L2037.46 1211.77 L2036.88 1211.77 L2036.29 1211.77 L2035.7 1211.77 L2035.12 1211.77 L2034.53 1211.77 L2033.94 1211.77 L2033.36 1211.77 L2032.77 1211.77 L2032.19 1211.77 L2031.6 1211.77 L2031.01 1211.77 L2030.43 1211.77 L2029.84 1211.77 L2029.25 1211.77 L2028.67 1211.77 L2028.08 1211.77 L2027.49 1211.77 L2026.91 1211.77 L2026.32 1211.77 L2025.73 1211.77 L2025.15 1211.77 L2024.56 1211.77 L2023.98 1211.77 L2023.39 1211.77 L2022.8 1211.77 L2022.22 1211.77 L2021.63 1211.77 L2021.04 1211.77 L2020.46 1211.77 L2019.87 1211.77 L2019.28 1211.77 L2018.7 1211.77 L2018.11 1211.77 L2017.53 1211.77 L2016.94 1211.77 L2016.35 1211.77 L2015.77 1211.77 L2015.18 1211.77 L2014.59 1211.77 L2014.01 1211.77 L2013.42 1211.77 L2012.83 1211.77 L2012.25 1211.77 L2011.66 1211.77 L2011.07 1211.77 L2010.49 1211.77 L2009.9 1211.77 L2009.32 1211.77 L2008.73 1211.77 L2008.14 1211.77 L2007.56 1211.77 L2006.97 1211.77 L2006.38 1211.77 L2005.8 1211.77 L2005.21 1211.77 L2004.62 1211.77 L2004.04 1211.77 L2003.45 1211.77 L2002.86 1211.77 L2002.28 1211.77 L2001.69 1211.77 L2001.11 1211.77 L2000.52 1211.77 L1999.93 1211.77 L1999.35 1211.77 L1998.76 1211.77 L1998.17 1211.77 L1997.59 1211.77 L1997 1211.77 L1996.41 1211.77 L1995.83 1211.77 L1995.24 1211.77 L1994.65 1211.77 L1994.07 1211.77 L1993.48 1211.77 L1992.9 1211.77 L1992.31 1211.77 L1991.72 1211.77 L1991.14 1211.77 L1990.55 1211.77 L1989.96 1211.77 L1989.38 1211.77 L1988.79 1211.77 L1988.2 1211.77 L1987.62 1211.77 L1987.03 1211.77 L1986.45 1211.77 L1985.86 1211.77 L1985.27 1211.77 L1984.69 1211.77 L1984.1 1211.77 L1983.51 1211.77 L1982.93 1211.77 L1982.34 1211.77 L1981.75 1211.77 L1981.17 1211.77 L1980.58 1211.77 L1979.99 1211.77 L1979.41 1211.77 L1978.82 1211.77 L1978.24 1211.77 L1977.65 1211.77 L1977.06 1211.77 L1976.48 1211.77 L1975.89 1211.77 L1975.3 1211.77 L1974.72 1211.77 L1974.13 1211.77 L1973.54 1211.77 L1972.96 1211.77 L1972.37 1211.77 L1971.78 1211.77 L1971.2 1211.77 L1970.61 1211.77 L1970.03 1211.77 L1969.44 1211.77 L1968.85 1211.77 L1968.27 1211.77 L1967.68 1211.77 L1967.09 1211.77 L1966.51 1211.77 L1965.92 1211.77 L1965.33 1211.77 L1964.75 1211.77 L1964.16 1211.77 L1963.58 1211.77 L1962.99 1211.77 L1962.4 1211.77 L1961.82 1211.77 L1961.23 1211.77 L1960.64 1211.77 L1960.06 1211.77 L1959.47 1211.77 L1958.88 1211.77 L1958.3 1211.77 L1957.71 1211.77 L1957.12 1211.77 L1956.54 1211.77 L1955.95 1211.77 L1955.37 1211.77 L1954.78 1211.77 L1954.19 1211.77 L1953.61 1211.77 L1953.02 1211.77 L1952.43 1211.77 L1951.85 1211.77 L1951.26 1211.77 L1950.67 1211.77 L1950.09 1211.77 L1949.5 1211.77 L1948.91 1211.77 L1948.33 1211.77 L1947.74 1211.77 L1947.16 1211.77 L1946.57 1211.77 L1945.98 1211.77 L1945.4 1211.77 L1944.81 1211.77 L1944.22 1211.77 L1943.64 1211.77 L1943.05 1211.77 L1942.46 1211.77 L1941.88 1211.77 L1941.29 1211.77 L1940.71 1211.77 L1940.12 1211.77 L1939.53 1211.77 L1938.95 1211.77 L1938.36 1211.77 L1937.77 1211.77 L1937.19 1211.77 L1936.6 1211.77 L1936.01 1211.77 L1935.43 1211.77 L1934.84 1211.77 L1934.25 1211.77 L1933.67 1211.77 L1933.08 1211.77 L1932.5 1211.77 L1931.91 1211.77 L1931.32 1211.77 L1930.74 1211.77 L1930.15 1211.77 L1929.56 1211.77 L1928.98 1211.77 L1928.39 1211.77 L1927.8 1211.77 L1927.22 1211.77 L1926.63 1211.77 L1926.04 1211.77 L1925.46 1211.77 L1924.87 1211.77 L1924.29 1211.77 L1923.7 1211.77 L1923.11 1211.77 L1922.53 1211.77 L1921.94 1211.77 L1921.35 1211.77 L1920.77 1211.77 L1920.18 1211.77 L1919.59 1211.77 L1919.01 1211.77 L1918.42 1211.77 L1917.83 1211.77 L1917.25 1211.77 L1916.66 1211.77 L1916.08 1211.77 L1915.49 1211.77 L1914.9 1211.77 L1914.32 1211.77 L1913.73 1211.77 L1913.14 1211.77 L1912.56 1211.77 L1911.97 1211.77 L1911.38 1211.77 L1910.8 1211.77 L1910.21 1211.77 L1909.63 1211.77 L1909.04 1211.77 L1908.45 1211.77 L1907.87 1211.77 L1907.28 1211.77 L1906.69 1211.77 L1906.11 1211.77 L1905.52 1211.77 L1904.93 1211.77 L1904.35 1211.77 L1903.76 1211.77 L1903.17 1211.77 L1902.59 1211.77 L1902 1211.77 L1901.42 1211.77 L1900.83 1211.77 L1900.24 1211.77 L1899.66 1211.77 L1899.07 1211.77 L1898.48 1211.77 L1897.9 1211.77 L1897.31 1211.77 L1896.72 1211.77 L1896.14 1211.77 L1895.55 1211.77 L1894.96 1211.77 L1894.38 1211.77 L1893.79 1211.77 L1893.21 1211.77 L1892.62 1211.77 L1892.03 1211.77 L1891.45 1211.77 L1890.86 1211.77 L1890.27 1211.77 L1889.69 1211.77 L1889.1 1211.77 L1888.51 1211.77 L1887.93 1211.77 L1887.34 1211.77 L1886.76 1211.77 L1886.17 1211.77 L1885.58 1211.77 L1885 1211.77 L1884.41 1211.77 L1883.82 1211.77 L1883.24 1211.77 L1882.65 1211.77 L1882.06 1211.77 L1881.48 1211.77 L1880.89 1211.77 L1880.3 1211.77 L1879.72 1211.77 L1879.13 1211.77 L1878.55 1211.77 L1877.96 1211.77 L1877.37 1211.77 L1876.79 1211.77 L1876.2 1211.77 L1875.61 1211.77 L1875.03 1211.77 L1874.44 1211.77 L1873.85 1211.77 L1873.27 1211.77 L1872.68 1211.77 L1872.09 1211.77 L1871.51 1211.77 L1870.92 1211.77 L1870.34 1211.77 L1869.75 1211.77 L1869.16 1211.77 L1868.58 1211.77 L1867.99 1211.77 L1867.4 1211.77 L1866.82 1211.77 L1866.23 1211.77 L1865.64 1211.77 L1865.06 1211.77 L1864.47 1211.77 L1863.88 1211.77 L1863.3 1211.77 L1862.71 1211.77 L1862.13 1211.77 L1861.54 1211.77 L1860.95 1211.77 L1860.37 1211.77 L1859.78 1211.77 L1859.19 1211.77 L1858.61 1211.77 L1858.02 1211.77 L1857.43 1211.77 L1856.85 1211.77 L1856.26 1211.77 L1855.68 1211.77 L1855.09 1211.77 L1854.5 1211.77 L1853.92 1211.77 L1853.33 1211.77 L1852.74 1211.77 L1852.16 1211.77 L1851.57 1211.77 L1850.98 1211.77 L1850.4 1211.77 L1849.81 1211.77 L1849.22 1211.77 L1848.64 1211.77 L1848.05 1211.77 L1847.47 1211.77 L1846.88 1211.77 L1846.29 1211.77 L1845.71 1211.77 L1845.12 1211.77 L1844.53 1211.77 L1843.95 1211.77 L1843.36 1211.77 L1842.77 1211.77 L1842.19 1211.77 L1841.6 1211.77 L1841.01 1211.77 L1840.43 1211.77 L1839.84 1211.77 L1839.26 1211.77 L1838.67 1211.77 L1838.08 1211.77 L1837.5 1211.77 L1836.91 1211.77 L1836.32 1211.77 L1835.74 1211.77 L1835.15 1211.77 L1834.56 1211.77 L1833.98 1211.77 L1833.39 1211.77 L1832.81 1211.77 L1832.22 1211.77 L1831.63 1211.77 L1831.05 1211.77 L1830.46 1211.77 L1829.87 1211.77 L1829.29 1211.77 L1828.7 1211.77 L1828.11 1211.77 L1827.53 1211.77 L1826.94 1211.77 L1826.35 1211.77 L1825.77 1211.77 L1825.18 1211.77 L1824.6 1211.77 L1824.01 1211.77 L1823.42 1211.77 L1822.84 1211.77 L1822.25 1211.77 L1821.66 1211.77 L1821.08 1211.77 L1820.49 1211.77 L1819.9 1211.77 L1819.32 1211.77 L1818.73 1211.77 L1818.14 1211.77 L1817.56 1211.77 L1816.97 1211.77 L1816.39 1211.77 L1815.8 1211.77 L1815.21 1211.77 L1814.63 1211.77 L1814.04 1211.77 L1813.45 1211.77 L1812.87 1211.77 L1812.28 1211.77 L1811.69 1211.77 L1811.11 1211.77 L1810.52 1211.77 L1809.94 1211.77 L1809.35 1211.77 L1808.76 1211.77 L1808.18 1211.77 L1807.59 1211.77 L1807 1211.77 L1806.42 1211.77 L1805.83 1211.77 L1805.24 1211.77 L1804.66 1211.77 L1804.07 1211.77 L1803.48 1211.77 L1802.9 1211.77 L1802.31 1211.77 L1801.73 1211.77 L1801.14 1211.77 L1800.55 1211.77 L1799.97 1211.77 L1799.38 1211.77 L1798.79 1211.77 L1798.21 1211.77 L1797.62 1211.77 L1797.03 1211.77 L1796.45 1211.77 L1795.86 1211.77 L1795.27 1211.77 L1794.69 1211.77 L1794.1 1211.77 L1793.52 1211.77 L1792.93 1211.77 L1792.34 1211.77 L1791.76 1211.77 L1791.17 1211.77 L1790.58 1211.77 L1790 1211.77 L1789.41 1211.77 L1788.82 1211.77 L1788.24 1211.77 L1787.65 1211.77 L1787.06 1211.77 L1786.48 1211.77 L1785.89 1211.77 L1785.31 1211.77 L1784.72 1211.77 L1784.13 1211.77 L1783.55 1211.77 L1782.96 1211.77 L1782.37 1211.77 L1781.79 1211.77 L1781.2 1211.77 L1780.61 1211.77 L1780.03 1211.77 L1779.44 1211.77 L1778.86 1211.77 L1778.27 1211.77 L1777.68 1211.77 L1777.1 1211.77 L1776.51 1211.77 L1775.92 1211.77 L1775.34 1211.77 L1774.75 1211.77 L1774.16 1211.77 L1773.58 1211.77 L1772.99 1211.77 L1772.4 1211.77 L1771.82 1211.77 L1771.23 1211.77 L1770.65 1211.77 L1770.06 1211.77 L1769.47 1211.77 L1768.89 1211.77 L1768.3 1211.77 L1767.71 1211.77 L1767.13 1211.77 L1766.54 1211.77 L1765.95 1211.77 L1765.37 1211.77 L1764.78 1211.77 L1764.19 1211.77 L1763.61 1211.77 L1763.02 1211.77 L1762.44 1211.77 L1761.85 1211.77 L1761.26 1211.77 L1760.68 1211.77 L1760.09 1211.77 L1759.5 1211.77 L1758.92 1211.77 L1758.33 1211.77 L1757.74 1211.77 L1757.16 1211.77 L1756.57 1211.77 L1755.99 1211.77 L1755.4 1211.77 L1754.81 1211.77 L1754.23 1211.77 L1753.64 1211.77 L1753.05 1211.77 L1752.47 1211.77 L1751.88 1211.77 L1751.29 1211.77 L1750.71 1211.77 L1750.12 1211.77 L1749.53 1211.77 L1748.95 1211.77 L1748.36 1211.77 L1747.78 1211.77 L1747.19 1211.77 L1746.6 1211.77 L1746.02 1211.77 L1745.43 1211.77 L1744.84 1211.77 L1744.26 1211.77 L1743.67 1211.77 L1743.08 1211.77 L1742.5 1211.77 L1741.91 1211.77 L1741.32 1211.77 L1740.74 1211.77 L1740.15 1211.77 L1739.57 1211.77 L1738.98 1211.77 L1738.39 1211.77 L1737.81 1211.77 L1737.22 1211.77 L1736.63 1211.77 L1736.05 1211.77 L1735.46 1211.77 L1734.87 1211.77 L1734.29 1211.77 L1733.7 1211.77 L1733.11 1211.77 L1732.53 1211.77 L1731.94 1211.77 L1731.36 1211.77 L1730.77 1211.77 L1730.18 1211.77 L1729.6 1211.77 L1729.01 1211.77 L1728.42 1211.77 L1727.84 1211.77 L1727.25 1211.77 L1726.66 1211.77 L1726.08 1211.77 L1725.49 1211.77 L1724.91 1211.77 L1724.32 1211.77 L1723.73 1211.77 L1723.15 1211.77 L1722.56 1211.77 L1721.97 1211.77 L1721.39 1211.77 L1720.8 1211.77 L1720.21 1211.77 L1719.63 1211.77 L1719.04 1211.77 L1718.45 1211.77 L1717.87 1211.77 L1717.28 1211.77 L1716.7 1211.77 L1716.11 1211.77 L1715.52 1211.77 L1714.94 1211.77 L1714.35 1211.77 L1713.76 1211.77 L1713.18 1211.77 L1712.59 1211.77 L1712 1211.77 L1711.42 1211.77 L1710.83 1211.77 L1710.24 1211.77 L1709.66 1211.77 L1709.07 1211.77 L1708.49 1211.77 L1707.9 1211.77 L1707.31 1211.77 L1706.73 1211.77 L1706.14 1211.77 L1705.55 1211.77 L1704.97 1211.77 L1704.38 1211.77 L1703.79 1211.77 L1703.21 1211.77 L1702.62 1211.77 L1702.04 1211.77 L1701.45 1211.77 L1700.86 1211.77 L1700.28 1211.77 L1699.69 1211.77 L1699.1 1211.77 L1698.52 1211.77 L1697.93 1211.77 L1697.34 1211.77 L1696.76 1211.77 L1696.17 1211.77 L1695.58 1211.77 L1695 1211.77 L1694.41 1211.77 L1693.83 1211.77 L1693.24 1211.77 L1692.65 1211.77 L1692.07 1211.77 L1691.48 1211.77 L1690.89 1211.77 L1690.31 1211.77 L1689.72 1211.77 L1689.13 1211.77 L1688.55 1211.77 L1687.96 1211.77 L1687.37 1211.77 L1686.79 1211.77 L1686.2 1211.77 L1685.62 1211.77 L1685.03 1211.77 L1684.44 1211.77 L1683.86 1211.77 L1683.27 1211.77 L1682.68 1211.77 L1682.1 1211.77 L1681.51 1211.77 L1680.92 1211.77 L1680.34 1211.77 L1679.75 1211.77 L1679.17 1211.77 L1678.58 1211.77 L1677.99 1211.77 L1677.41 1211.77 L1676.82 1211.77 L1676.23 1211.77 L1675.65 1211.77 L1675.06 1211.77 L1674.47 1211.77 L1673.89 1211.77 L1673.3 1211.77 L1672.71 1211.77 L1672.13 1211.77 L1671.54 1211.77 L1670.96 1211.77 L1670.37 1211.77 L1669.78 1211.77 L1669.2 1211.77 L1668.61 1211.77 L1668.02 1211.77 L1667.44 1211.77 L1666.85 1211.77 L1666.26 1211.77 L1665.68 1211.77 L1665.09 1211.77 L1664.5 1211.77 L1663.92 1211.77 L1663.33 1211.77 L1662.75 1211.77 L1662.16 1211.77 L1661.57 1211.77 L1660.99 1211.77 L1660.4 1211.77 L1659.81 1211.77 L1659.23 1211.77 L1658.64 1211.77 L1658.05 1211.77 L1657.47 1211.77 L1656.88 1211.77 L1656.29 1211.77 L1655.71 1211.77 L1655.12 1211.77 L1654.54 1211.77 L1653.95 1211.77 L1653.36 1211.77 L1652.78 1211.77 L1652.19 1211.77 L1651.6 1211.77 L1651.02 1211.77 L1650.43 1211.77 L1649.84 1211.77 L1649.26 1211.77 L1648.67 1211.77 L1648.09 1211.77 L1647.5 1211.77 L1646.91 1211.77 L1646.33 1211.77 L1645.74 1211.77 L1645.15 1211.77 L1644.57 1211.77 L1643.98 1211.77 L1643.39 1211.77 L1642.81 1211.77 L1642.22 1211.77 L1641.63 1211.77 L1641.05 1211.77 L1640.46 1211.77 L1639.88 1211.77 L1639.29 1211.77 L1638.7 1211.77 L1638.12 1211.77 L1637.53 1211.77 L1636.94 1211.77 L1636.36 1211.77 L1635.77 1211.77 L1635.18 1211.77 L1634.6 1211.77 L1634.01 1211.77 L1633.42 1211.77 L1632.84 1211.77 L1632.25 1211.77 L1631.67 1211.77 L1631.08 1211.77 L1630.49 1211.77 L1629.91 1211.77 L1629.32 1211.77 L1628.73 1211.77 L1628.15 1211.77 L1627.56 1211.77 L1626.97 1211.77 L1626.39 1211.77 L1625.8 1211.77 L1625.22 1211.77 L1624.63 1211.77 L1624.04 1211.77 L1623.46 1211.77 L1622.87 1211.77 L1622.28 1211.77 L1621.7 1211.77 L1621.11 1211.77 L1620.52 1211.77 L1619.94 1211.77 L1619.35 1211.77 L1618.76 1211.77 L1618.18 1211.77 L1617.59 1211.77 L1617.01 1211.77 L1616.42 1211.77 L1615.83 1211.77 L1615.25 1211.77 L1614.66 1211.77 L1614.07 1211.77 L1613.49 1211.77 L1612.9 1211.77 L1612.31 1211.77 L1611.73 1211.77 L1611.14 1211.77 L1610.55 1211.77 L1609.97 1211.77 L1609.38 1211.77 L1608.8 1211.77 L1608.21 1211.77 L1607.62 1211.77 L1607.04 1211.77 L1606.45 1211.77 L1605.86 1211.77 L1605.28 1211.77 L1604.69 1211.77 L1604.1 1211.77 L1603.52 1211.77 L1602.93 1211.77 L1602.34 1211.77 L1601.76 1211.77 L1601.17 1211.77 L1600.59 1211.77 L1600 1211.77 L1599.41 1211.77 L1598.83 1211.77 L1598.24 1211.77 L1597.65 1211.77 L1597.07 1211.77 L1596.48 1211.77 L1595.89 1211.77 L1595.31 1211.77 L1594.72 1211.77 L1594.14 1211.77 L1593.55 1211.77 L1592.96 1211.77 L1592.38 1211.77 L1591.79 1211.77 L1591.2 1211.77 L1590.62 1211.77 L1590.03 1211.77 L1589.44 1211.77 L1588.86 1211.77 L1588.27 1211.77 L1587.68 1211.77 L1587.1 1211.77 L1586.51 1211.77 L1585.93 1211.77 L1585.34 1211.77 L1584.75 1211.77 L1584.17 1211.77 L1583.58 1211.77 L1582.99 1211.77 L1582.41 1211.77 L1581.82 1211.77 L1581.23 1211.77 L1580.65 1211.77 L1580.06 1211.77 L1579.47 1211.77 L1578.89 1211.77 L1578.3 1211.77 L1577.72 1211.77 L1577.13 1211.77 L1576.54 1211.77 L1575.96 1211.77 L1575.37 1211.77 L1574.78 1211.77 L1574.2 1211.77 L1573.61 1211.77 L1573.02 1211.77 L1572.44 1211.77 L1571.85 1211.77 L1571.27 1211.77 L1570.68 1211.77 L1570.09 1211.77 L1569.51 1211.77 L1568.92 1211.77 L1568.33 1211.77 L1567.75 1211.77 L1567.16 1211.77 L1566.57 1211.77 L1565.99 1211.77 L1565.4 1211.77 L1564.81 1211.77 L1564.23 1211.77 L1563.64 1211.77 L1563.06 1211.77 L1562.47 1211.77 L1561.88 1211.77 L1561.3 1211.77 L1560.71 1211.77 L1560.12 1211.77 L1559.54 1211.77 L1558.95 1211.77 L1558.36 1211.77 L1557.78 1211.77 L1557.19 1211.77 L1556.6 1211.77 L1556.02 1211.77 L1555.43 1211.77 L1554.85 1211.77 L1554.26 1211.77 L1553.67 1211.77 L1553.09 1211.77 L1552.5 1211.77 L1551.91 1211.77 L1551.33 1211.77 L1550.74 1211.77 L1550.15 1211.77 L1549.57 1211.77 L1548.98 1211.77 L1548.4 1211.77 L1547.81 1211.77 L1547.22 1211.77 L1546.64 1211.77 L1546.05 1211.77 L1545.46 1211.77 L1544.88 1211.77 L1544.29 1211.77 L1543.7 1211.77 L1543.12 1211.77 L1542.53 1211.77 L1541.94 1211.77 L1541.36 1211.77 L1540.77 1211.77 L1540.19 1211.77 L1539.6 1211.77 L1539.01 1211.77 L1538.43 1211.77 L1537.84 1211.77 L1537.25 1211.77 L1536.67 1211.77 L1536.08 1211.77 L1535.49 1211.77 L1534.91 1211.77 L1534.32 1211.77 L1533.73 1211.77 L1533.15 1211.77 L1532.56 1211.77 L1531.98 1211.77 L1531.39 1211.77 L1530.8 1211.77 L1530.22 1211.77 L1529.63 1211.77 L1529.04 1211.77 L1528.46 1211.77 L1527.87 1211.77 L1527.28 1211.77 L1526.7 1211.77 L1526.11 1211.77 L1525.52 1211.77 L1524.94 1211.77 L1524.35 1211.77 L1523.77 1211.77 L1523.18 1211.77 L1522.59 1211.77 L1522.01 1211.77 L1521.42 1211.77 L1520.83 1211.77 L1520.25 1211.77 L1519.66 1211.77 L1519.07 1211.77 L1518.49 1211.77 L1517.9 1211.77 L1517.32 1211.77 L1516.73 1211.77 L1516.14 1211.77 L1515.56 1211.77 L1514.97 1211.77 L1514.38 1211.77 L1513.8 1211.77 L1513.21 1211.77 L1512.62 1211.77 L1512.04 1211.77 L1511.45 1211.77 L1510.86 1211.77 L1510.28 1211.77 L1509.69 1211.77 L1509.11 1211.77 L1508.52 1211.77 L1507.93 1211.77 L1507.35 1211.77 L1506.76 1211.77 L1506.17 1211.77 L1505.59 1211.77 L1505 1211.77 L1504.41 1211.77 L1503.83 1211.77 L1503.24 1211.77 L1502.65 1211.77 L1502.07 1211.77 L1501.48 1211.77 L1500.9 1211.77 L1500.31 1211.77 L1499.72 1211.77 L1499.14 1211.77 L1498.55 1211.77 L1497.96 1211.77 L1497.38 1211.77 L1496.79 1211.77 L1496.2 1211.77 L1495.62 1211.77 L1495.03 1211.77 L1494.45 1211.77 L1493.86 1211.77 L1493.27 1211.77 L1492.69 1211.77 L1492.1 1211.77 L1491.51 1211.77 L1490.93 1211.77 L1490.34 1211.77 L1489.75 1211.77 L1489.17 1211.77 L1488.58 1211.77 L1487.99 1211.77 L1487.41 1211.77 L1486.82 1211.77 L1486.24 1211.77 L1485.65 1211.77 L1485.06 1211.77 L1484.48 1211.77 L1483.89 1211.77 L1483.3 1211.77 L1482.72 1211.77 L1482.13 1211.77 L1481.54 1211.77 L1480.96 1211.77 L1480.37 1211.77 L1479.78 1211.77 L1479.2 1211.77 L1478.61 1211.77 L1478.03 1211.77 L1477.44 1211.77 L1476.85 1211.77 L1476.27 1211.77 L1475.68 1211.77 L1475.09 1211.77 L1474.51 1211.77 L1473.92 1211.77 L1473.33 1211.77 L1472.75 1211.77 L1472.16 1211.77 L1471.57 1211.77 L1470.99 1211.77 L1470.4 1211.77 L1469.82 1211.77 L1469.23 1211.77 L1468.64 1211.77 L1468.06 1211.77 L1467.47 1211.77 L1466.88 1211.77 L1466.3 1211.77 L1465.71 1211.77 L1465.12 1211.77 L1464.54 1211.77 L1463.95 1211.77 L1463.37 1211.77 L1462.78 1211.77 L1462.19 1211.77 L1461.61 1211.77 L1461.02 1211.77 L1460.43 1211.77 L1459.85 1211.77 L1459.26 1211.77 L1458.67 1211.77 L1458.09 1211.77 L1457.5 1211.77 L1456.91 1211.77 L1456.33 1211.77 L1455.74 1211.77 L1455.16 1211.77 L1454.57 1211.77 L1453.98 1211.77 L1453.4 1211.77 L1452.81 1211.77 L1452.22 1211.77 L1451.64 1211.77 L1451.05 1211.77 L1450.46 1211.77 L1449.88 1211.77 L1449.29 1211.77 L1448.7 1211.77 L1448.12 1211.77 L1447.53 1211.77 L1446.95 1211.77 L1446.36 1211.77 L1445.77 1211.77 L1445.19 1211.77 L1444.6 1211.77 L1444.01 1211.77 L1443.43 1211.77 L1442.84 1211.77 L1442.25 1211.77 L1441.67 1211.77 L1441.08 1211.77 L1440.5 1211.77 L1439.91 1211.77 L1439.32 1211.77 L1438.74 1211.77 L1438.15 1211.77 L1437.56 1211.77 L1436.98 1211.77 L1436.39 1211.77 L1435.8 1211.77 L1435.22 1211.77 L1434.63 1211.77 L1434.04 1211.77 L1433.46 1211.77 L1432.87 1211.77 L1432.29 1211.77 L1431.7 1211.77 L1431.11 1211.77 L1430.53 1211.77 L1429.94 1211.77 L1429.35 1211.77 L1428.77 1211.77 L1428.18 1211.77 L1427.59 1211.77 L1427.01 1211.77 L1426.42 1211.77 L1425.83 1211.77 L1425.25 1211.77 L1424.66 1211.77 L1424.08 1211.77 L1423.49 1211.77 L1422.9 1211.77 L1422.32 1211.77 L1421.73 1211.77 L1421.14 1211.77 L1420.56 1211.77 L1419.97 1211.77 L1419.38 1211.77 L1418.8 1211.77 L1418.21 1211.77 L1417.63 1211.77 L1417.04 1211.77 L1416.45 1211.77 L1415.87 1211.77 L1415.28 1211.77 L1414.69 1211.77 L1414.11 1211.77 L1413.52 1211.77 L1412.93 1211.77 L1412.35 1211.77 L1411.76 1211.77 L1411.17 1211.77 L1410.59 1211.77 L1410 1211.77 L1409.42 1211.77 L1408.83 1211.77 L1408.24 1211.77 L1407.66 1211.77 L1407.07 1211.77 L1406.48 1211.77 L1405.9 1211.77 L1405.31 1211.77 L1404.72 1211.77 L1404.14 1211.77 L1403.55 1211.77 L1402.96 1211.77 L1402.38 1211.77 L1401.79 1211.77 L1401.21 1211.77 L1400.62 1211.77 L1400.03 1211.77 L1399.45 1211.77 L1398.86 1211.77 L1398.27 1211.77 L1397.69 1211.77 L1397.1 1211.77 L1396.51 1211.77 L1395.93 1211.77 L1395.34 1211.77 L1394.75 1211.77 L1394.17 1211.77 L1393.58 1211.77 L1393 1211.77 L1392.41 1211.77 L1391.82 1211.77 L1391.24 1211.77 L1390.65 1211.77 L1390.06 1211.77 L1389.48 1211.77 L1388.89 1211.77 L1388.3 1211.77 L1387.72 1211.77 L1387.13 1211.77 L1386.55 1211.77 L1385.96 1211.77 L1385.37 1211.77 L1384.79 1211.77 L1384.2 1211.77 L1383.61 1211.77 L1383.03 1211.77 L1382.44 1211.77 L1381.85 1211.77 L1381.27 1211.77 L1380.68 1211.77 L1380.09 1211.77 L1379.51 1211.77 L1378.92 1211.77 L1378.34 1211.77 L1377.75 1211.77 L1377.16 1211.77 L1376.58 1211.77 L1375.99 1211.77 L1375.4 1211.77 L1374.82 1211.77 L1374.23 1211.77 L1373.64 1211.77 L1373.06 1211.77 L1372.47 1211.77 L1371.88 1211.77 L1371.3 1211.77 L1370.71 1211.77 L1370.13 1211.77 L1369.54 1211.77 L1368.95 1211.77 L1368.37 1211.77 L1367.78 1211.77 L1367.19 1211.77 L1366.61 1211.77 L1366.02 1211.77 L1365.43 1211.77 L1364.85 1211.77 L1364.26 1211.77 L1363.68 1211.77 L1363.09 1211.77 L1362.5 1211.77 L1361.92 1211.77 L1361.33 1211.77 L1360.74 1211.77 L1360.16 1211.77 L1359.57 1211.77 L1358.98 1211.77 L1358.4 1211.77 L1357.81 1211.77 L1357.22 1211.77 L1356.64 1211.77 L1356.05 1211.77 L1355.47 1211.77 L1354.88 1211.77 L1354.29 1211.77 L1353.71 1211.77 L1353.12 1211.77 L1352.53 1211.77 L1351.95 1211.77 L1351.36 1211.77 L1350.77 1211.77 L1350.19 1211.77 L1349.6 1211.77 L1349.01 1211.77 L1348.43 1211.77 L1347.84 1211.77 L1347.26 1211.77 L1346.67 1211.77 L1346.08 1211.77 L1345.5 1211.77 L1344.91 1211.77 L1344.32 1211.77 L1343.74 1211.77 L1343.15 1211.77 L1342.56 1211.77 L1341.98 1211.77 L1341.39 1211.77 L1340.8 1211.77 L1340.22 1211.77 L1339.63 1211.77 L1339.05 1211.77 L1338.46 1211.77 L1337.87 1211.77 L1337.29 1211.77 L1336.7 1211.77 L1336.11 1211.77 L1335.53 1211.77 L1334.94 1211.77 L1334.35 1211.77 L1333.77 1211.77 L1333.18 1211.77 L1332.6 1211.77 L1332.01 1211.77 L1331.42 1211.77 L1330.84 1211.77 L1330.25 1211.77 L1329.66 1211.77 L1329.08 1211.77 L1328.49 1211.77 L1327.9 1211.77 L1327.32 1211.77 L1326.73 1211.77 L1326.14 1211.77 L1325.56 1211.77 L1324.97 1211.77 L1324.39 1211.77 L1323.8 1211.77 L1323.21 1211.77 L1322.63 1211.77 L1322.04 1211.77 L1321.45 1211.77 L1320.87 1211.77 L1320.28 1211.77 L1319.69 1211.77 L1319.11 1211.77 L1318.52 1211.77 L1317.93 1211.77 L1317.35 1211.77 L1316.76 1211.77 L1316.18 1211.77 L1315.59 1211.77 L1315 1211.77 L1314.42 1211.77 L1313.83 1211.77 L1313.24 1211.77 L1312.66 1211.77 L1312.07 1211.77 L1311.48 1211.77 L1310.9 1211.77 L1310.31 1211.77 L1309.73 1211.77 L1309.14 1211.77 L1308.55 1211.77 L1307.97 1211.77 L1307.38 1211.77 L1306.79 1211.77 L1306.21 1211.77 L1305.62 1211.77 L1305.03 1211.77 L1304.45 1211.77 L1303.86 1211.77 L1303.27 1211.77 L1302.69 1211.77 L1302.1 1211.77 L1301.52 1211.77 L1300.93 1211.77 L1300.34 1211.77 L1299.76 1211.77 L1299.17 1211.77 L1298.58 1211.77 L1298 1211.77 L1297.41 1211.77 L1296.82 1211.77 L1296.24 1211.77 L1295.65 1211.77 L1295.06 1211.77 L1294.48 1211.77 L1293.89 1211.77 L1293.31 1211.77 L1292.72 1211.77 L1292.13 1211.77 L1291.55 1211.77 L1290.96 1211.77 L1290.37 1211.77 L1289.79 1211.77 L1289.2 1211.77 L1288.61 1211.77 L1288.03 1211.77 L1287.44 1211.77 L1286.86 1211.77 L1286.27 1211.77 L1285.68 1211.77 L1285.1 1211.77 L1284.51 1211.77 L1283.92 1211.77 L1283.34 1211.77 L1282.75 1211.77 L1282.16 1211.77 L1281.58 1211.77 L1280.99 1211.77 L1280.4 1211.77 L1279.82 1211.77 L1279.23 1211.77 L1278.65 1211.77 L1278.06 1211.77 L1277.47 1211.77 L1276.89 1211.77 L1276.3 1211.77 L1275.71 1211.77 L1275.13 1211.77 L1274.54 1211.77 L1273.95 1211.77 L1273.37 1211.77 L1272.78 1211.77 L1272.19 1211.77 L1271.61 1211.77 L1271.02 1211.77 L1270.44 1211.77 L1269.85 1211.77 L1269.26 1211.77 L1268.68 1211.77 L1268.09 1211.77 L1267.5 1211.77 L1266.92 1211.77 L1266.33 1211.77 L1265.74 1211.77 L1265.16 1211.77 L1264.57 1211.77 L1263.98 1211.77 L1263.4 1211.77 L1262.81 1211.77 L1262.23 1211.77 L1261.64 1211.77 L1261.05 1211.77 L1260.47 1211.77 L1259.88 1211.77 L1259.29 1211.77 L1258.71 1211.77 L1258.12 1211.77 L1257.53 1211.77 L1256.95 1211.77 L1256.36 1211.77 L1255.78 1211.77 L1255.19 1211.77 L1254.6 1211.77 L1254.02 1211.77 L1253.43 1211.77 L1252.84 1211.77 L1252.26 1211.77 L1251.67 1211.77 L1251.08 1211.77 L1250.5 1211.77 L1249.91 1211.77 L1249.32 1211.77 L1248.74 1211.77 L1248.15 1211.77 L1247.57 1211.77 L1246.98 1211.77 L1246.39 1211.77 L1245.81 1211.77 L1245.22 1211.77 L1244.63 1211.77 L1244.05 1211.77 L1243.46 1211.77 L1242.87 1211.77 L1242.29 1211.77 L1241.7 1211.77 L1241.11 1211.77 L1240.53 1211.77 L1239.94 1211.77 L1239.36 1211.77 L1238.77 1211.77 L1238.18 1211.77 L1237.6 1211.77 L1237.01 1211.77 L1236.42 1211.77 L1235.84 1211.77 L1235.25 1211.77 L1234.66 1211.77 L1234.08 1211.77 L1233.49 1211.77 L1232.91 1211.77 L1232.32 1211.77 L1231.73 1211.77 L1231.15 1211.77 L1230.56 1211.77 L1229.97 1211.77 L1229.39 1211.77 L1228.8 1211.77 L1228.21 1211.77 L1227.63 1211.77 L1227.04 1211.77 L1226.45 1211.77 L1225.87 1211.77 L1225.28 1211.77 L1224.7 1211.77 L1224.11 1211.77 L1223.52 1211.77 L1222.94 1211.77 L1222.35 1211.77 L1221.76 1211.77 L1221.18 1211.77 L1220.59 1211.77 L1220 1211.77 L1219.42 1211.77 L1218.83 1211.77 L1218.24 1211.77 L1217.66 1211.77 L1217.07 1211.77 L1216.49 1211.77 L1215.9 1211.77 L1215.31 1211.77 L1214.73 1211.77 L1214.14 1211.77 L1213.55 1211.77 L1212.97 1211.77 L1212.38 1211.77 L1211.79 1211.77 L1211.21 1211.77 L1210.62 1211.77 L1210.03 1211.77 L1209.45 1211.77 L1208.86 1211.77 L1208.28 1211.77 L1207.69 1211.77 L1207.1 1211.77 L1206.52 1211.77 L1205.93 1211.77 L1205.34 1211.77 L1204.76 1211.77 L1204.17 1211.77 L1203.58 1211.77 L1203 1211.77 L1202.41 1211.77 L1201.83 1211.77 L1201.24 1211.77 L1200.65 1211.77 L1200.07 1211.77 L1199.48 1211.77 L1198.89 1211.77 L1198.31 1211.77 L1197.72 1211.77 L1197.13 1211.77 L1196.55 1211.77 L1195.96 1211.77 L1195.37 1211.77 L1194.79 1211.77 L1194.2 1211.77 L1193.62 1211.77 L1193.03 1211.77 L1192.44 1211.77 L1191.86 1211.77 L1191.27 1211.77 L1190.68 1211.77 L1190.1 1211.77 L1189.51 1211.77 L1188.92 1211.77 L1188.34 1211.77 L1187.75 1211.77 L1187.16 1211.77 L1186.58 1211.77 L1185.99 1211.77 L1185.41 1211.77 L1184.82 1211.77 L1184.23 1211.77 L1183.65 1211.77 L1183.06 1211.77 L1182.47 1211.77 L1181.89 1211.77 L1181.3 1211.77 L1180.71 1211.77 L1180.13 1211.77 L1179.54 1211.77 L1178.96 1211.77 L1178.37 1211.77 L1177.78 1211.77 L1177.2 1211.77 L1176.61 1211.77 L1176.02 1211.77 L1175.44 1211.77 L1174.85 1211.77 L1174.26 1211.77 L1173.68 1211.77 L1173.09 1211.77 L1172.5 1211.77 L1171.92 1211.77 L1171.33 1211.77 L1170.75 1211.77 L1170.16 1211.77 L1169.57 1211.77 L1168.99 1211.77 L1168.4 1211.77 L1167.81 1211.77 L1167.23 1211.77 L1166.64 1211.77 L1166.05 1211.77 L1165.47 1211.77 L1164.88 1211.77 L1164.29 1211.77 L1163.71 1211.77 L1163.12 1211.77 L1162.54 1211.77 L1161.95 1211.77 L1161.36 1211.77 L1160.78 1211.77 L1160.19 1211.77 L1159.6 1211.77 L1159.02 1211.77 L1158.43 1211.77 L1157.84 1211.77 L1157.26 1211.77 L1156.67 1211.77 L1156.09 1211.77 L1155.5 1211.77 L1154.91 1211.77 L1154.33 1211.77 L1153.74 1211.77 L1153.15 1211.77 L1152.57 1211.77 L1151.98 1211.77 L1151.39 1211.77 L1150.81 1211.77 L1150.22 1211.77 L1149.63 1211.77 L1149.05 1211.77 L1148.46 1211.77 L1147.88 1211.77 L1147.29 1211.77 L1146.7 1211.77 L1146.12 1211.77 L1145.53 1211.77 L1144.94 1211.77 L1144.36 1211.77 L1143.77 1211.77 L1143.18 1211.77 L1142.6 1211.77 L1142.01 1211.77 L1141.42 1211.77 L1140.84 1211.77 L1140.25 1211.77 L1139.67 1211.77 L1139.08 1211.77 L1138.49 1211.77 L1137.91 1211.77 L1137.32 1211.77 L1136.73 1211.77 L1136.15 1211.77 L1135.56 1211.77 L1134.97 1211.77 L1134.39 1211.77 L1133.8 1211.77 L1133.21 1211.77 L1132.63 1211.77 L1132.04 1211.77 L1131.46 1211.77 L1130.87 1211.77 L1130.28 1211.77 L1129.7 1211.77 L1129.11 1211.77 L1128.52 1211.77 L1127.94 1211.77 L1127.35 1211.77 L1126.76 1211.77 L1126.18 1211.77 L1125.59 1211.77 L1125.01 1211.77 L1124.42 1211.77 L1123.83 1211.77 L1123.25 1211.77 L1122.66 1211.77 L1122.07 1211.77 L1121.49 1211.77 L1120.9 1211.77 L1120.31 1211.77 L1119.73 1211.77 L1119.14 1211.77 L1118.55 1211.77 L1117.97 1211.77 L1117.38 1211.77 L1116.8 1211.77 L1116.21 1211.77 L1115.62 1211.77 L1115.04 1211.77 L1114.45 1211.77 L1113.86 1211.77 L1113.28 1211.77 L1112.69 1211.77 L1112.1 1211.77 L1111.52 1211.77 L1110.93 1211.77 L1110.34 1211.77 L1109.76 1211.77 L1109.17 1211.77 L1108.59 1211.77 L1108 1211.77 L1107.41 1211.77 L1106.83 1211.77 L1106.24 1211.77 L1105.65 1211.77 L1105.07 1211.77 L1104.48 1211.77 L1103.89 1211.77 L1103.31 1211.77 L1102.72 1211.77 L1102.14 1211.77 L1101.55 1211.77 L1100.96 1211.77 L1100.38 1211.77 L1099.79 1211.77 L1099.2 1211.77 L1098.62 1211.77 L1098.03 1211.77 L1097.44 1211.77 L1096.86 1211.77 L1096.27 1211.77 L1095.68 1211.77 L1095.1 1211.77 L1094.51 1211.77 L1093.93 1211.77 L1093.34 1211.77 L1092.75 1211.77 L1092.17 1211.77 L1091.58 1211.77 L1090.99 1211.77 L1090.41 1211.77 L1089.82 1211.77 L1089.23 1211.77 L1088.65 1211.77 L1088.06 1211.77 L1087.47 1211.77 L1086.89 1211.77 L1086.3 1211.77 L1085.72 1211.77 L1085.13 1211.77 L1084.54 1211.77 L1083.96 1211.77 L1083.37 1211.77 L1082.78 1211.77 L1082.2 1211.77 L1081.61 1211.77 L1081.02 1211.77 L1080.44 1211.77 L1079.85 1211.77 L1079.26 1211.77 L1078.68 1211.77 L1078.09 1211.77 L1077.51 1211.77 L1076.92 1211.77 L1076.33 1211.77 L1075.75 1211.77 L1075.16 1211.77 L1074.57 1211.77 L1073.99 1211.77 L1073.4 1211.77 L1072.81 1211.77 L1072.23 1211.77 L1071.64 1211.77 L1071.06 1211.77 L1070.47 1211.77 L1069.88 1211.77 L1069.3 1211.77 L1068.71 1211.77 L1068.12 1211.77 L1067.54 1211.77 L1066.95 1211.77 L1066.36 1211.77 L1065.78 1211.77 L1065.19 1211.77 L1064.6 1211.77 L1064.02 1211.77 L1063.43 1211.77 L1062.85 1211.77 L1062.26 1211.77 L1061.67 1211.77 L1061.09 1211.77 L1060.5 1211.77 L1059.91 1211.77 L1059.33 1211.77 L1058.74 1211.77 L1058.15 1211.77 L1057.57 1211.77 L1056.98 1211.77 L1056.39 1211.77 L1055.81 1211.77 L1055.22 1211.77 L1054.64 1211.77 L1054.05 1211.77 L1053.46 1211.77 L1052.88 1211.77 L1052.29 1211.77 L1051.7 1211.77 L1051.12 1211.77 L1050.53 1211.77 L1049.94 1211.77 L1049.36 1211.77 L1048.77 1211.77 L1048.19 1211.77 L1047.6 1211.77 L1047.01 1211.77 L1046.43 1211.77 L1045.84 1211.77 L1045.25 1211.77 L1044.67 1211.77 L1044.08 1211.77 L1043.49 1211.77 L1042.91 1211.77 L1042.32 1211.77 L1041.73 1211.77 L1041.15 1211.77 L1040.56 1211.77 L1039.98 1211.77 L1039.39 1211.77 L1038.8 1211.77 L1038.22 1211.77 L1037.63 1211.77 L1037.04 1211.77 L1036.46 1211.77 L1035.87 1211.77 L1035.28 1211.77 L1034.7 1211.77 L1034.11 1211.77 L1033.52 1211.77 L1032.94 1211.77 L1032.35 1211.77 L1031.77 1211.77 L1031.18 1211.77 L1030.59 1211.77 L1030.01 1211.77 L1029.42 1211.77 L1028.83 1211.77 L1028.25 1211.77 L1027.66 1211.77 L1027.07 1211.77 L1026.49 1211.77 L1025.9 1211.77 L1025.32 1211.77 L1024.73 1211.77 L1024.14 1211.77 L1023.56 1211.77 L1022.97 1211.77 L1022.38 1211.77 L1021.8 1211.77 L1021.21 1211.77 L1020.62 1211.77 L1020.04 1211.77 L1019.45 1211.77 L1018.86 1211.77 L1018.28 1211.77 L1017.69 1211.77 L1017.11 1211.77 L1016.52 1211.77 L1015.93 1211.77 L1015.35 1211.77 L1014.76 1211.77 L1014.17 1211.77 L1013.59 1211.77 L1013 1211.77 L1012.41 1211.77 L1011.83 1211.77 L1011.24 1211.77 L1010.65 1211.77 L1010.07 1211.77 L1009.48 1211.77 L1008.9 1211.77 L1008.31 1211.77 L1007.72 1211.77 L1007.14 1211.77 L1006.55 1211.77 L1005.96 1211.77 L1005.38 1211.77 L1004.79 1211.77 L1004.2 1211.77 L1003.62 1211.77 L1003.03 1211.77 L1002.44 1211.77 L1001.86 1211.77 L1001.27 1211.77 L1000.69 1211.77 L1000.1 1211.77 L999.513 1211.77 L998.926 1211.77 L998.34 1211.77 L997.754 1211.77 L997.167 1211.77 L996.581 1211.77 L995.994 1211.77 L995.408 1211.77 L994.822 1211.77 L994.235 1211.77 L993.649 1211.77 L993.062 1211.77 L992.476 1211.77 L991.889 1211.77 L991.303 1211.77 L990.717 1211.77 L990.13 1211.77 L989.544 1211.77 L988.957 1211.77 L988.371 1211.77 L987.785 1211.77 L987.198 1211.77 L986.612 1211.77 L986.025 1211.77  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip332)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1211.83 986.612,1211.83 987.198,1211.83 987.785,1211.83 988.371,1211.83 988.957,1211.83 989.544,1211.83 990.13,1211.83 990.717,1211.83 991.303,1211.83 991.889,1211.83 992.476,1211.83 993.062,1211.83 993.649,1211.83 994.235,1211.83 994.822,1211.83 995.408,1211.83 995.994,1211.83 996.581,1211.83 997.167,1211.83 997.754,1211.83 998.34,1211.83 998.926,1211.83 999.513,1211.83 1000.1,1211.83 1000.69,1211.83 1001.27,1211.83 1001.86,1211.83 1002.44,1211.83 1003.03,1211.83 1003.62,1211.83 1004.2,1211.83 1004.79,1211.83 1005.38,1211.83 1005.96,1211.83 1006.55,1211.83 1007.14,1211.83 1007.72,1211.83 1008.31,1211.83 1008.9,1211.83 1009.48,1211.83 1010.07,1211.83 1010.65,1211.83 1011.24,1211.83 1011.83,1211.83 1012.41,1211.83 1013,1211.83 1013.59,1211.83 1014.17,1211.83 1014.76,1211.83 1015.35,1211.83 1015.93,1211.83 1016.52,1211.83 1017.11,1211.83 1017.69,1211.83 1018.28,1211.83 1018.86,1211.83 1019.45,1211.83 1020.04,1211.83 1020.62,1211.83 1021.21,1211.83 1021.8,1211.83 1022.38,1211.83 1022.97,1211.83 1023.56,1211.83 1024.14,1211.83 1024.73,1211.83 1025.32,1211.83 1025.9,1211.83 1026.49,1211.83 1027.07,1211.83 1027.66,1211.83 1028.25,1211.83 1028.83,1211.83 1029.42,1211.83 1030.01,1211.83 1030.59,1211.83 1031.18,1211.83 1031.77,1211.83 1032.35,1211.83 1032.94,1211.83 1033.52,1211.83 1034.11,1211.83 1034.7,1211.83 1035.28,1211.83 1035.87,1211.83 1036.46,1211.83 1037.04,1211.83 1037.63,1211.83 1038.22,1211.83 1038.8,1211.83 1039.39,1211.83 1039.98,1211.83 1040.56,1211.83 1041.15,1211.83 1041.73,1211.83 1042.32,1211.83 1042.91,1211.83 1043.49,1211.83 1044.08,1211.83 1044.67,1211.83 1045.25,1211.83 1045.84,1211.83 1046.43,1211.83 1047.01,1211.83 1047.6,1211.83 1048.19,1211.83 1048.77,1211.83 1049.36,1211.83 1049.94,1211.83 1050.53,1211.83 1051.12,1211.83 1051.7,1211.83 1052.29,1211.83 1052.88,1211.83 1053.46,1211.83 1054.05,1211.83 1054.64,1211.83 1055.22,1211.83 1055.81,1211.83 1056.39,1211.83 1056.98,1211.83 1057.57,1211.83 1058.15,1211.83 1058.74,1211.83 1059.33,1211.83 1059.91,1211.83 1060.5,1211.83 1061.09,1211.83 1061.67,1211.83 1062.26,1211.83 1062.85,1211.83 1063.43,1211.83 1064.02,1211.83 1064.6,1211.83 1065.19,1211.83 1065.78,1211.83 1066.36,1211.83 1066.95,1211.83 1067.54,1211.83 1068.12,1211.83 1068.71,1211.83 1069.3,1211.83 1069.88,1211.83 1070.47,1211.83 1071.06,1211.83 1071.64,1211.83 1072.23,1211.83 1072.81,1211.83 1073.4,1211.83 1073.99,1211.83 1074.57,1211.83 1075.16,1211.83 1075.75,1211.83 1076.33,1211.83 1076.92,1211.83 1077.51,1211.83 1078.09,1211.83 1078.68,1211.83 1079.26,1211.83 1079.85,1211.83 1080.44,1211.83 1081.02,1211.83 1081.61,1211.83 1082.2,1211.83 1082.78,1211.83 1083.37,1211.83 1083.96,1211.83 1084.54,1211.83 1085.13,1211.83 1085.72,1211.83 1086.3,1211.83 1086.89,1211.83 1087.47,1211.83 1088.06,1211.83 1088.65,1211.83 1089.23,1211.83 1089.82,1211.83 1090.41,1211.83 1090.99,1211.83 1091.58,1211.83 1092.17,1211.83 1092.75,1211.83 1093.34,1211.83 1093.93,1211.83 1094.51,1211.83 1095.1,1211.83 1095.68,1211.83 1096.27,1211.83 1096.86,1211.83 1097.44,1211.83 1098.03,1211.83 1098.62,1211.83 1099.2,1211.83 1099.79,1211.83 1100.38,1211.83 1100.96,1211.83 1101.55,1211.83 1102.14,1211.83 1102.72,1211.83 1103.31,1211.83 1103.89,1211.83 1104.48,1211.83 1105.07,1211.83 1105.65,1211.83 1106.24,1211.83 1106.83,1211.83 1107.41,1211.83 1108,1211.83 1108.59,1211.83 1109.17,1211.83 1109.76,1211.83 1110.34,1211.83 1110.93,1211.83 1111.52,1211.83 1112.1,1211.83 1112.69,1211.83 1113.28,1211.83 1113.86,1211.83 1114.45,1211.83 1115.04,1211.83 1115.62,1211.83 1116.21,1211.83 1116.8,1211.83 1117.38,1211.83 1117.97,1211.83 1118.55,1211.83 1119.14,1211.83 1119.73,1211.83 1120.31,1211.83 1120.9,1211.83 1121.49,1211.83 1122.07,1211.83 1122.66,1211.83 1123.25,1211.83 1123.83,1211.83 1124.42,1211.83 1125.01,1211.83 1125.59,1211.83 1126.18,1211.83 1126.76,1211.83 1127.35,1211.83 1127.94,1211.83 1128.52,1211.83 1129.11,1211.83 1129.7,1211.83 1130.28,1211.83 1130.87,1211.83 1131.46,1211.83 1132.04,1211.83 1132.63,1211.83 1133.21,1211.83 1133.8,1211.83 1134.39,1211.83 1134.97,1211.83 1135.56,1211.83 1136.15,1211.83 1136.73,1211.83 1137.32,1211.83 1137.91,1211.83 1138.49,1211.83 1139.08,1211.83 1139.67,1211.83 1140.25,1211.83 1140.84,1211.83 1141.42,1211.83 1142.01,1211.83 1142.6,1211.83 1143.18,1211.83 1143.77,1211.83 1144.36,1211.83 1144.94,1211.83 1145.53,1211.83 1146.12,1211.83 1146.7,1211.83 1147.29,1211.83 1147.88,1211.83 1148.46,1211.83 1149.05,1211.83 1149.63,1211.83 1150.22,1211.83 1150.81,1211.83 1151.39,1211.83 1151.98,1211.83 1152.57,1211.83 1153.15,1211.83 1153.74,1211.83 1154.33,1211.83 1154.91,1211.83 1155.5,1211.83 1156.09,1211.83 1156.67,1211.83 1157.26,1211.83 1157.84,1211.83 1158.43,1211.83 1159.02,1211.83 1159.6,1211.83 1160.19,1211.83 1160.78,1211.83 1161.36,1211.83 1161.95,1211.83 1162.54,1211.83 1163.12,1211.83 1163.71,1211.83 1164.29,1211.83 1164.88,1211.83 1165.47,1211.83 1166.05,1211.83 1166.64,1211.83 1167.23,1211.83 1167.81,1211.83 1168.4,1211.83 1168.99,1211.83 1169.57,1211.83 1170.16,1211.83 1170.75,1211.83 1171.33,1211.83 1171.92,1211.83 1172.5,1211.83 1173.09,1211.83 1173.68,1211.83 1174.26,1211.83 1174.85,1211.83 1175.44,1211.83 1176.02,1211.83 1176.61,1211.83 1177.2,1211.83 1177.78,1211.83 1178.37,1211.83 1178.96,1211.83 1179.54,1211.83 1180.13,1211.83 1180.71,1211.83 1181.3,1211.83 1181.89,1211.83 1182.47,1211.83 1183.06,1211.83 1183.65,1211.83 1184.23,1211.83 1184.82,1211.83 1185.41,1211.83 1185.99,1211.83 1186.58,1211.83 1187.16,1211.83 1187.75,1211.83 1188.34,1211.83 1188.92,1211.83 1189.51,1211.83 1190.1,1211.83 1190.68,1211.83 1191.27,1211.83 1191.86,1211.83 1192.44,1211.83 1193.03,1211.83 1193.62,1211.83 1194.2,1211.83 1194.79,1211.83 1195.37,1211.83 1195.96,1211.83 1196.55,1211.83 1197.13,1211.83 1197.72,1211.83 1198.31,1211.83 1198.89,1211.83 1199.48,1211.83 1200.07,1211.83 1200.65,1211.83 1201.24,1211.83 1201.83,1211.83 1202.41,1211.83 1203,1211.83 1203.58,1211.83 1204.17,1211.83 1204.76,1211.83 1205.34,1211.83 1205.93,1211.83 1206.52,1211.83 1207.1,1211.83 1207.69,1211.83 1208.28,1211.83 1208.86,1211.83 1209.45,1211.83 1210.03,1211.83 1210.62,1211.83 1211.21,1211.83 1211.79,1211.83 1212.38,1211.83 1212.97,1211.83 1213.55,1211.83 1214.14,1211.83 1214.73,1211.83 1215.31,1211.83 1215.9,1211.83 1216.49,1211.83 1217.07,1211.83 1217.66,1211.83 1218.24,1211.83 1218.83,1211.83 1219.42,1211.83 1220,1211.83 1220.59,1211.83 1221.18,1211.83 1221.76,1211.83 1222.35,1211.83 1222.94,1211.83 1223.52,1211.83 1224.11,1211.83 1224.7,1211.83 1225.28,1211.83 1225.87,1211.83 1226.45,1211.83 1227.04,1211.83 1227.63,1211.83 1228.21,1211.83 1228.8,1211.83 1229.39,1211.83 1229.97,1211.83 1230.56,1211.83 1231.15,1211.83 1231.73,1211.83 1232.32,1211.83 1232.91,1211.83 1233.49,1211.83 1234.08,1211.83 1234.66,1211.83 1235.25,1211.83 1235.84,1211.83 1236.42,1211.83 1237.01,1211.83 1237.6,1211.83 1238.18,1211.83 1238.77,1211.83 1239.36,1211.83 1239.94,1211.83 1240.53,1211.83 1241.11,1211.83 1241.7,1211.83 1242.29,1211.83 1242.87,1211.83 1243.46,1211.83 1244.05,1211.83 1244.63,1211.83 1245.22,1211.83 1245.81,1211.83 1246.39,1211.83 1246.98,1211.83 1247.57,1211.83 1248.15,1211.83 1248.74,1211.83 1249.32,1211.83 1249.91,1211.83 1250.5,1211.83 1251.08,1211.83 1251.67,1211.83 1252.26,1211.83 1252.84,1211.83 1253.43,1211.83 1254.02,1211.83 1254.6,1211.83 1255.19,1211.83 1255.78,1211.83 1256.36,1211.83 1256.95,1211.83 1257.53,1211.83 1258.12,1211.83 1258.71,1211.83 1259.29,1211.83 1259.88,1211.83 1260.47,1211.83 1261.05,1211.83 1261.64,1211.83 1262.23,1211.83 1262.81,1211.83 1263.4,1211.83 1263.98,1211.83 1264.57,1211.83 1265.16,1211.83 1265.74,1211.83 1266.33,1211.83 1266.92,1211.83 1267.5,1211.83 1268.09,1211.83 1268.68,1211.83 1269.26,1211.83 1269.85,1211.83 1270.44,1211.83 1271.02,1211.83 1271.61,1211.83 1272.19,1211.83 1272.78,1211.83 1273.37,1211.83 1273.95,1211.83 1274.54,1211.83 1275.13,1211.83 1275.71,1211.83 1276.3,1211.83 1276.89,1211.83 1277.47,1211.83 1278.06,1211.83 1278.65,1211.83 1279.23,1211.83 1279.82,1211.83 1280.4,1211.83 1280.99,1211.83 1281.58,1211.83 1282.16,1211.83 1282.75,1211.83 1283.34,1211.83 1283.92,1211.83 1284.51,1211.83 1285.1,1211.83 1285.68,1211.83 1286.27,1211.83 1286.86,1211.83 1287.44,1211.83 1288.03,1211.83 1288.61,1211.83 1289.2,1211.83 1289.79,1211.83 1290.37,1211.83 1290.96,1211.83 1291.55,1211.83 1292.13,1211.83 1292.72,1211.83 1293.31,1211.83 1293.89,1211.83 1294.48,1211.83 1295.06,1211.83 1295.65,1211.83 1296.24,1211.83 1296.82,1211.83 1297.41,1211.83 1298,1211.83 1298.58,1211.83 1299.17,1211.83 1299.76,1211.83 1300.34,1211.83 1300.93,1211.83 1301.52,1211.83 1302.1,1211.83 1302.69,1211.83 1303.27,1211.83 1303.86,1211.83 1304.45,1211.83 1305.03,1211.83 1305.62,1211.83 1306.21,1211.83 1306.79,1211.83 1307.38,1211.83 1307.97,1211.83 1308.55,1211.83 1309.14,1211.83 1309.73,1211.83 1310.31,1211.83 1310.9,1211.83 1311.48,1211.83 1312.07,1211.83 1312.66,1211.83 1313.24,1211.83 1313.83,1211.83 1314.42,1211.83 1315,1211.83 1315.59,1211.83 1316.18,1211.83 1316.76,1211.83 1317.35,1211.83 1317.93,1211.83 1318.52,1211.83 1319.11,1211.83 1319.69,1211.83 1320.28,1211.83 1320.87,1211.83 1321.45,1211.83 1322.04,1211.83 1322.63,1211.83 1323.21,1211.83 1323.8,1211.83 1324.39,1211.83 1324.97,1211.83 1325.56,1211.83 1326.14,1211.83 1326.73,1211.83 1327.32,1211.83 1327.9,1211.83 1328.49,1211.83 1329.08,1211.83 1329.66,1211.83 1330.25,1211.83 1330.84,1211.83 1331.42,1211.83 1332.01,1211.83 1332.6,1211.83 1333.18,1211.83 1333.77,1211.83 1334.35,1211.83 1334.94,1211.83 1335.53,1211.83 1336.11,1211.83 1336.7,1211.83 1337.29,1211.83 1337.87,1211.83 1338.46,1211.83 1339.05,1211.83 1339.63,1211.83 1340.22,1211.83 1340.8,1211.83 1341.39,1211.83 1341.98,1211.83 1342.56,1211.83 1343.15,1211.83 1343.74,1211.83 1344.32,1211.83 1344.91,1211.83 1345.5,1211.83 1346.08,1211.83 1346.67,1211.83 1347.26,1211.83 1347.84,1211.83 1348.43,1211.83 1349.01,1211.83 1349.6,1211.83 1350.19,1211.83 1350.77,1211.83 1351.36,1211.83 1351.95,1211.83 1352.53,1211.83 1353.12,1211.83 1353.71,1211.83 1354.29,1211.83 1354.88,1211.83 1355.47,1211.83 1356.05,1211.83 1356.64,1211.83 1357.22,1211.83 1357.81,1211.83 1358.4,1211.83 1358.98,1211.83 1359.57,1211.83 1360.16,1211.83 1360.74,1211.83 1361.33,1211.83 1361.92,1211.83 1362.5,1211.83 1363.09,1211.83 1363.68,1211.83 1364.26,1211.83 1364.85,1211.83 1365.43,1211.83 1366.02,1211.83 1366.61,1211.83 1367.19,1211.83 1367.78,1211.83 1368.37,1211.83 1368.95,1211.83 1369.54,1211.83 1370.13,1211.83 1370.71,1211.83 1371.3,1211.83 1371.88,1211.83 1372.47,1211.83 1373.06,1211.83 1373.64,1211.83 1374.23,1211.83 1374.82,1211.83 1375.4,1211.83 1375.99,1211.83 1376.58,1211.83 1377.16,1211.83 1377.75,1211.83 1378.34,1211.83 1378.92,1211.83 1379.51,1211.83 1380.09,1211.83 1380.68,1211.83 1381.27,1211.83 1381.85,1211.83 1382.44,1211.83 1383.03,1211.83 1383.61,1211.83 1384.2,1211.83 1384.79,1211.83 1385.37,1211.83 1385.96,1211.83 1386.55,1211.83 1387.13,1211.83 1387.72,1211.83 1388.3,1211.83 1388.89,1211.83 1389.48,1211.83 1390.06,1211.83 1390.65,1211.83 1391.24,1211.83 1391.82,1211.83 1392.41,1211.83 1393,1211.83 1393.58,1211.83 1394.17,1211.83 1394.75,1211.83 1395.34,1211.83 1395.93,1211.83 1396.51,1211.83 1397.1,1211.83 1397.69,1211.83 1398.27,1211.83 1398.86,1211.83 1399.45,1211.83 1400.03,1211.83 1400.62,1211.83 1401.21,1211.83 1401.79,1211.83 1402.38,1211.83 1402.96,1211.83 1403.55,1211.83 1404.14,1211.83 1404.72,1211.83 1405.31,1211.83 1405.9,1211.83 1406.48,1211.83 1407.07,1211.83 1407.66,1211.83 1408.24,1211.83 1408.83,1211.83 1409.42,1211.83 1410,1211.83 1410.59,1211.83 1411.17,1211.83 1411.76,1211.83 1412.35,1211.83 1412.93,1211.83 1413.52,1211.83 1414.11,1211.83 1414.69,1211.83 1415.28,1211.83 1415.87,1211.83 1416.45,1211.83 1417.04,1211.83 1417.63,1211.83 1418.21,1211.83 1418.8,1211.83 1419.38,1211.83 1419.97,1211.83 1420.56,1211.83 1421.14,1211.83 1421.73,1211.83 1422.32,1211.83 1422.9,1211.83 1423.49,1211.83 1424.08,1211.83 1424.66,1211.83 1425.25,1211.83 1425.83,1211.83 1426.42,1211.83 1427.01,1211.83 1427.59,1211.83 1428.18,1211.83 1428.77,1211.83 1429.35,1211.83 1429.94,1211.83 1430.53,1211.83 1431.11,1211.83 1431.7,1211.83 1432.29,1211.83 1432.87,1211.83 1433.46,1211.83 1434.04,1211.83 1434.63,1211.83 1435.22,1211.83 1435.8,1211.83 1436.39,1211.83 1436.98,1211.83 1437.56,1211.83 1438.15,1211.83 1438.74,1211.83 1439.32,1211.83 1439.91,1211.83 1440.5,1211.83 1441.08,1211.83 1441.67,1211.83 1442.25,1211.83 1442.84,1211.83 1443.43,1211.83 1444.01,1211.83 1444.6,1211.83 1445.19,1211.83 1445.77,1211.83 1446.36,1211.83 1446.95,1211.83 1447.53,1211.83 1448.12,1211.83 1448.7,1211.83 1449.29,1211.83 1449.88,1211.83 1450.46,1211.83 1451.05,1211.83 1451.64,1211.83 1452.22,1211.83 1452.81,1211.83 1453.4,1211.83 1453.98,1211.83 1454.57,1211.83 1455.16,1211.83 1455.74,1211.83 1456.33,1211.83 1456.91,1211.83 1457.5,1211.83 1458.09,1211.83 1458.67,1211.83 1459.26,1211.83 1459.85,1211.83 1460.43,1211.83 1461.02,1211.83 1461.61,1211.83 1462.19,1211.83 1462.78,1211.83 1463.37,1211.83 1463.95,1211.83 1464.54,1211.83 1465.12,1211.83 1465.71,1211.83 1466.3,1211.83 1466.88,1211.83 1467.47,1211.83 1468.06,1211.83 1468.64,1211.83 1469.23,1211.83 1469.82,1211.83 1470.4,1211.83 1470.99,1211.83 1471.57,1211.83 1472.16,1211.83 1472.75,1211.83 1473.33,1211.83 1473.92,1211.83 1474.51,1211.83 1475.09,1211.83 1475.68,1211.83 1476.27,1211.83 1476.85,1211.83 1477.44,1211.83 1478.03,1211.83 1478.61,1211.83 1479.2,1211.83 1479.78,1211.83 1480.37,1211.83 1480.96,1211.83 1481.54,1211.83 1482.13,1211.83 1482.72,1211.83 1483.3,1211.83 1483.89,1211.83 1484.48,1211.83 1485.06,1211.83 1485.65,1211.83 1486.24,1211.83 1486.82,1211.83 1487.41,1211.83 1487.99,1211.83 1488.58,1211.83 1489.17,1211.83 1489.75,1211.83 1490.34,1211.83 1490.93,1211.83 1491.51,1211.83 1492.1,1211.83 1492.69,1211.83 1493.27,1211.83 1493.86,1211.83 1494.45,1211.83 1495.03,1211.83 1495.62,1211.83 1496.2,1211.83 1496.79,1211.83 1497.38,1211.83 1497.96,1211.83 1498.55,1211.83 1499.14,1211.83 1499.72,1211.83 1500.31,1211.83 1500.9,1211.83 1501.48,1211.83 1502.07,1211.83 1502.65,1211.83 1503.24,1211.83 1503.83,1211.83 1504.41,1211.83 1505,1211.83 1505.59,1211.83 1506.17,1211.83 1506.76,1211.83 1507.35,1211.83 1507.93,1211.83 1508.52,1211.83 1509.11,1211.83 1509.69,1211.83 1510.28,1211.83 1510.86,1211.83 1511.45,1211.83 1512.04,1211.83 1512.62,1211.83 1513.21,1211.83 1513.8,1211.83 1514.38,1211.83 1514.97,1211.83 1515.56,1211.83 1516.14,1211.83 1516.73,1211.83 1517.32,1211.83 1517.9,1211.83 1518.49,1211.83 1519.07,1211.83 1519.66,1211.83 1520.25,1211.83 1520.83,1211.83 1521.42,1211.83 1522.01,1211.83 1522.59,1211.83 1523.18,1211.83 1523.77,1211.83 1524.35,1211.83 1524.94,1211.83 1525.52,1211.83 1526.11,1211.83 1526.7,1211.83 1527.28,1211.83 1527.87,1211.83 1528.46,1211.83 1529.04,1211.83 1529.63,1211.83 1530.22,1211.83 1530.8,1211.83 1531.39,1211.83 1531.98,1211.83 1532.56,1211.83 1533.15,1211.83 1533.73,1211.83 1534.32,1211.83 1534.91,1211.83 1535.49,1211.83 1536.08,1211.83 1536.67,1211.83 1537.25,1211.83 1537.84,1211.83 1538.43,1211.83 1539.01,1211.83 1539.6,1211.83 1540.19,1211.83 1540.77,1211.83 1541.36,1211.83 1541.94,1211.83 1542.53,1211.83 1543.12,1211.83 1543.7,1211.83 1544.29,1211.83 1544.88,1211.83 1545.46,1211.83 1546.05,1211.83 1546.64,1211.83 1547.22,1211.83 1547.81,1211.83 1548.4,1211.83 1548.98,1211.83 1549.57,1211.83 1550.15,1211.83 1550.74,1211.83 1551.33,1211.83 1551.91,1211.83 1552.5,1211.83 1553.09,1211.83 1553.67,1211.83 1554.26,1211.83 1554.85,1211.83 1555.43,1211.83 1556.02,1211.83 1556.6,1211.83 1557.19,1211.83 1557.78,1211.83 1558.36,1211.83 1558.95,1211.83 1559.54,1211.83 1560.12,1211.83 1560.71,1211.83 1561.3,1211.83 1561.88,1211.83 1562.47,1211.83 1563.06,1211.83 1563.64,1211.83 1564.23,1211.83 1564.81,1211.83 1565.4,1211.83 1565.99,1211.83 1566.57,1211.83 1567.16,1211.83 1567.75,1211.83 1568.33,1211.83 1568.92,1211.83 1569.51,1211.83 1570.09,1211.83 1570.68,1211.83 1571.27,1211.83 1571.85,1211.83 1572.44,1211.83 1573.02,1211.83 1573.61,1211.83 1574.2,1211.83 1574.78,1211.83 1575.37,1211.83 1575.96,1211.83 1576.54,1211.83 1577.13,1211.83 1577.72,1211.83 1578.3,1211.83 1578.89,1211.83 1579.47,1211.83 1580.06,1211.83 1580.65,1211.83 1581.23,1211.83 1581.82,1211.83 1582.41,1211.83 1582.99,1211.83 1583.58,1211.83 1584.17,1211.83 1584.75,1211.83 1585.34,1211.83 1585.93,1211.83 1586.51,1211.83 1587.1,1211.83 1587.68,1211.83 1588.27,1211.83 1588.86,1211.83 1589.44,1211.83 1590.03,1211.83 1590.62,1211.83 1591.2,1211.83 1591.79,1211.83 1592.38,1211.83 1592.96,1211.83 1593.55,1211.83 1594.14,1211.83 1594.72,1211.83 1595.31,1211.83 1595.89,1211.83 1596.48,1211.83 1597.07,1211.83 1597.65,1211.83 1598.24,1211.83 1598.83,1211.83 1599.41,1211.83 1600,1211.83 1600.59,1211.83 1601.17,1211.83 1601.76,1211.83 1602.34,1211.83 1602.93,1211.83 1603.52,1211.83 1604.1,1211.83 1604.69,1211.83 1605.28,1211.83 1605.86,1211.83 1606.45,1211.83 1607.04,1211.83 1607.62,1211.83 1608.21,1211.83 1608.8,1211.83 1609.38,1211.83 1609.97,1211.83 1610.55,1211.83 1611.14,1211.83 1611.73,1211.83 1612.31,1211.83 1612.9,1211.83 1613.49,1211.83 1614.07,1211.83 1614.66,1211.83 1615.25,1211.83 1615.83,1211.83 1616.42,1211.83 1617.01,1211.83 1617.59,1211.83 1618.18,1211.83 1618.76,1211.83 1619.35,1211.83 1619.94,1211.83 1620.52,1211.83 1621.11,1211.83 1621.7,1211.83 1622.28,1211.83 1622.87,1211.83 1623.46,1211.83 1624.04,1211.83 1624.63,1211.83 1625.22,1211.83 1625.8,1211.83 1626.39,1211.83 1626.97,1211.83 1627.56,1211.83 1628.15,1211.83 1628.73,1211.83 1629.32,1211.83 1629.91,1211.83 1630.49,1211.83 1631.08,1211.83 1631.67,1211.83 1632.25,1211.83 1632.84,1211.83 1633.42,1211.83 1634.01,1211.83 1634.6,1211.83 1635.18,1211.83 1635.77,1211.83 1636.36,1211.83 1636.94,1211.83 1637.53,1211.83 1638.12,1211.83 1638.7,1211.83 1639.29,1211.83 1639.88,1211.83 1640.46,1211.83 1641.05,1211.83 1641.63,1211.83 1642.22,1211.83 1642.81,1211.83 1643.39,1211.83 1643.98,1211.83 1644.57,1211.83 1645.15,1211.83 1645.74,1211.83 1646.33,1211.83 1646.91,1211.83 1647.5,1211.83 1648.09,1211.83 1648.67,1211.83 1649.26,1211.83 1649.84,1211.83 1650.43,1211.83 1651.02,1211.83 1651.6,1211.83 1652.19,1211.83 1652.78,1211.83 1653.36,1211.83 1653.95,1211.83 1654.54,1211.83 1655.12,1211.83 1655.71,1211.83 1656.29,1211.83 1656.88,1211.83 1657.47,1211.83 1658.05,1211.83 1658.64,1211.83 1659.23,1211.83 1659.81,1211.83 1660.4,1211.83 1660.99,1211.83 1661.57,1211.83 1662.16,1211.83 1662.75,1211.83 1663.33,1211.83 1663.92,1211.83 1664.5,1211.83 1665.09,1211.83 1665.68,1211.83 1666.26,1211.83 1666.85,1211.83 1667.44,1211.83 1668.02,1211.83 1668.61,1211.83 1669.2,1211.83 1669.78,1211.83 1670.37,1211.83 1670.96,1211.83 1671.54,1211.83 1672.13,1211.83 1672.71,1211.83 1673.3,1211.83 1673.89,1211.83 1674.47,1211.83 1675.06,1211.83 1675.65,1211.83 1676.23,1211.83 1676.82,1211.83 1677.41,1211.83 1677.99,1211.83 1678.58,1211.83 1679.17,1211.83 1679.75,1211.83 1680.34,1211.83 1680.92,1211.83 1681.51,1211.83 1682.1,1211.83 1682.68,1211.83 1683.27,1211.83 1683.86,1211.83 1684.44,1211.83 1685.03,1211.83 1685.62,1211.83 1686.2,1211.83 1686.79,1211.83 1687.37,1211.83 1687.96,1211.83 1688.55,1211.83 1689.13,1211.83 1689.72,1211.83 1690.31,1211.83 1690.89,1211.83 1691.48,1211.83 1692.07,1211.83 1692.65,1211.83 1693.24,1211.83 1693.83,1211.83 1694.41,1211.83 1695,1211.83 1695.58,1211.83 1696.17,1211.83 1696.76,1211.83 1697.34,1211.83 1697.93,1211.83 1698.52,1211.83 1699.1,1211.83 1699.69,1211.83 1700.28,1211.83 1700.86,1211.83 1701.45,1211.83 1702.04,1211.83 1702.62,1211.83 1703.21,1211.83 1703.79,1211.83 1704.38,1211.83 1704.97,1211.83 1705.55,1211.83 1706.14,1211.83 1706.73,1211.83 1707.31,1211.83 1707.9,1211.83 1708.49,1211.83 1709.07,1211.83 1709.66,1211.83 1710.24,1211.83 1710.83,1211.83 1711.42,1211.83 1712,1211.83 1712.59,1211.83 1713.18,1211.83 1713.76,1211.83 1714.35,1211.83 1714.94,1211.83 1715.52,1211.83 1716.11,1211.83 1716.7,1211.83 1717.28,1211.83 1717.87,1211.83 1718.45,1211.83 1719.04,1211.83 1719.63,1211.83 1720.21,1211.83 1720.8,1211.83 1721.39,1211.83 1721.97,1211.83 1722.56,1211.83 1723.15,1211.83 1723.73,1211.83 1724.32,1211.83 1724.91,1211.83 1725.49,1211.83 1726.08,1211.83 1726.66,1211.83 1727.25,1211.83 1727.84,1211.83 1728.42,1211.83 1729.01,1211.83 1729.6,1211.83 1730.18,1211.83 1730.77,1211.83 1731.36,1211.83 1731.94,1211.83 1732.53,1211.83 1733.11,1211.83 1733.7,1211.83 1734.29,1211.83 1734.87,1211.83 1735.46,1211.83 1736.05,1211.83 1736.63,1211.83 1737.22,1211.83 1737.81,1211.83 1738.39,1211.83 1738.98,1211.83 1739.57,1211.83 1740.15,1211.83 1740.74,1211.83 1741.32,1211.83 1741.91,1211.83 1742.5,1211.83 1743.08,1211.83 1743.67,1211.83 1744.26,1211.83 1744.84,1211.83 1745.43,1211.83 1746.02,1211.83 1746.6,1211.83 1747.19,1211.83 1747.78,1211.83 1748.36,1211.83 1748.95,1211.83 1749.53,1211.83 1750.12,1211.83 1750.71,1211.83 1751.29,1211.83 1751.88,1211.83 1752.47,1211.83 1753.05,1211.83 1753.64,1211.83 1754.23,1211.83 1754.81,1211.83 1755.4,1211.83 1755.99,1211.83 1756.57,1211.83 1757.16,1211.83 1757.74,1211.83 1758.33,1211.83 1758.92,1211.83 1759.5,1211.83 1760.09,1211.83 1760.68,1211.83 1761.26,1211.83 1761.85,1211.83 1762.44,1211.83 1763.02,1211.83 1763.61,1211.83 1764.19,1211.83 1764.78,1211.83 1765.37,1211.83 1765.95,1211.83 1766.54,1211.83 1767.13,1211.83 1767.71,1211.83 1768.3,1211.83 1768.89,1211.83 1769.47,1211.83 1770.06,1211.83 1770.65,1211.83 1771.23,1211.83 1771.82,1211.83 1772.4,1211.83 1772.99,1211.83 1773.58,1211.83 1774.16,1211.83 1774.75,1211.83 1775.34,1211.83 1775.92,1211.83 1776.51,1211.83 1777.1,1211.83 1777.68,1211.83 1778.27,1211.83 1778.86,1211.83 1779.44,1211.83 1780.03,1211.83 1780.61,1211.83 1781.2,1211.83 1781.79,1211.83 1782.37,1211.83 1782.96,1211.83 1783.55,1211.83 1784.13,1211.83 1784.72,1211.83 1785.31,1211.83 1785.89,1211.83 1786.48,1211.83 1787.06,1211.83 1787.65,1211.83 1788.24,1211.83 1788.82,1211.83 1789.41,1211.83 1790,1211.83 1790.58,1211.83 1791.17,1211.83 1791.76,1211.83 1792.34,1211.83 1792.93,1211.83 1793.52,1211.83 1794.1,1211.83 1794.69,1211.83 1795.27,1211.83 1795.86,1211.83 1796.45,1211.83 1797.03,1211.83 1797.62,1211.83 1798.21,1211.83 1798.79,1211.83 1799.38,1211.83 1799.97,1211.83 1800.55,1211.83 1801.14,1211.83 1801.73,1211.83 1802.31,1211.83 1802.9,1211.83 1803.48,1211.83 1804.07,1211.83 1804.66,1211.83 1805.24,1211.83 1805.83,1211.83 1806.42,1211.83 1807,1211.83 1807.59,1211.83 1808.18,1211.83 1808.76,1211.83 1809.35,1211.83 1809.94,1211.83 1810.52,1211.83 1811.11,1211.83 1811.69,1211.83 1812.28,1211.83 1812.87,1211.83 1813.45,1211.83 1814.04,1211.83 1814.63,1211.83 1815.21,1211.83 1815.8,1211.83 1816.39,1211.83 1816.97,1211.83 1817.56,1211.83 1818.14,1211.83 1818.73,1211.83 1819.32,1211.83 1819.9,1211.83 1820.49,1211.83 1821.08,1211.83 1821.66,1211.83 1822.25,1211.83 1822.84,1211.83 1823.42,1211.83 1824.01,1211.83 1824.6,1211.83 1825.18,1211.83 1825.77,1211.83 1826.35,1211.83 1826.94,1211.83 1827.53,1211.83 1828.11,1211.83 1828.7,1211.83 1829.29,1211.83 1829.87,1211.83 1830.46,1211.83 1831.05,1211.83 1831.63,1211.83 1832.22,1211.83 1832.81,1211.83 1833.39,1211.83 1833.98,1211.83 1834.56,1211.83 1835.15,1211.83 1835.74,1211.83 1836.32,1211.83 1836.91,1211.83 1837.5,1211.83 1838.08,1211.83 1838.67,1211.83 1839.26,1211.83 1839.84,1211.83 1840.43,1211.83 1841.01,1211.83 1841.6,1211.83 1842.19,1211.83 1842.77,1211.83 1843.36,1211.83 1843.95,1211.83 1844.53,1211.83 1845.12,1211.83 1845.71,1211.83 1846.29,1211.83 1846.88,1211.83 1847.47,1211.83 1848.05,1211.83 1848.64,1211.83 1849.22,1211.83 1849.81,1211.83 1850.4,1211.83 1850.98,1211.83 1851.57,1211.83 1852.16,1211.83 1852.74,1211.83 1853.33,1211.83 1853.92,1211.83 1854.5,1211.83 1855.09,1211.83 1855.68,1211.83 1856.26,1211.83 1856.85,1211.83 1857.43,1211.83 1858.02,1211.83 1858.61,1211.83 1859.19,1211.83 1859.78,1211.83 1860.37,1211.83 1860.95,1211.83 1861.54,1211.83 1862.13,1211.83 1862.71,1211.83 1863.3,1211.83 1863.88,1211.83 1864.47,1211.83 1865.06,1211.83 1865.64,1211.83 1866.23,1211.83 1866.82,1211.83 1867.4,1211.83 1867.99,1211.83 1868.58,1211.83 1869.16,1211.83 1869.75,1211.83 1870.34,1211.83 1870.92,1211.83 1871.51,1211.83 1872.09,1211.83 1872.68,1211.83 1873.27,1211.83 1873.85,1211.83 1874.44,1211.83 1875.03,1211.83 1875.61,1211.83 1876.2,1211.83 1876.79,1211.83 1877.37,1211.83 1877.96,1211.83 1878.55,1211.83 1879.13,1211.83 1879.72,1211.83 1880.3,1211.83 1880.89,1211.83 1881.48,1211.83 1882.06,1211.83 1882.65,1211.83 1883.24,1211.83 1883.82,1211.83 1884.41,1211.83 1885,1211.83 1885.58,1211.83 1886.17,1211.83 1886.76,1211.83 1887.34,1211.83 1887.93,1211.83 1888.51,1211.83 1889.1,1211.83 1889.69,1211.83 1890.27,1211.83 1890.86,1211.83 1891.45,1211.83 1892.03,1211.83 1892.62,1211.83 1893.21,1211.83 1893.79,1211.83 1894.38,1211.83 1894.96,1211.83 1895.55,1211.83 1896.14,1211.83 1896.72,1211.83 1897.31,1211.83 1897.9,1211.83 1898.48,1211.83 1899.07,1211.83 1899.66,1211.83 1900.24,1211.83 1900.83,1211.83 1901.42,1211.83 1902,1211.83 1902.59,1211.83 1903.17,1211.83 1903.76,1211.83 1904.35,1211.83 1904.93,1211.83 1905.52,1211.83 1906.11,1211.83 1906.69,1211.83 1907.28,1211.83 1907.87,1211.83 1908.45,1211.83 1909.04,1211.83 1909.63,1211.83 1910.21,1211.83 1910.8,1211.83 1911.38,1211.83 1911.97,1211.83 1912.56,1211.83 1913.14,1211.83 1913.73,1211.83 1914.32,1211.83 1914.9,1211.83 1915.49,1211.83 1916.08,1211.83 1916.66,1211.83 1917.25,1211.83 1917.83,1211.83 1918.42,1211.83 1919.01,1211.83 1919.59,1211.83 1920.18,1211.83 1920.77,1211.83 1921.35,1211.83 1921.94,1211.83 1922.53,1211.83 1923.11,1211.83 1923.7,1211.83 1924.29,1211.83 1924.87,1211.83 1925.46,1211.83 1926.04,1211.83 1926.63,1211.83 1927.22,1211.83 1927.8,1211.83 1928.39,1211.83 1928.98,1211.83 1929.56,1211.83 1930.15,1211.83 1930.74,1211.83 1931.32,1211.83 1931.91,1211.83 1932.5,1211.83 1933.08,1211.83 1933.67,1211.83 1934.25,1211.83 1934.84,1211.83 1935.43,1211.83 1936.01,1211.83 1936.6,1211.83 1937.19,1211.83 1937.77,1211.83 1938.36,1211.83 1938.95,1211.83 1939.53,1211.83 1940.12,1211.83 1940.71,1211.83 1941.29,1211.83 1941.88,1211.83 1942.46,1211.83 1943.05,1211.83 1943.64,1211.83 1944.22,1211.83 1944.81,1211.83 1945.4,1211.83 1945.98,1211.83 1946.57,1211.83 1947.16,1211.83 1947.74,1211.83 1948.33,1211.83 1948.91,1211.83 1949.5,1211.83 1950.09,1211.83 1950.67,1211.83 1951.26,1211.83 1951.85,1211.83 1952.43,1211.83 1953.02,1211.83 1953.61,1211.83 1954.19,1211.83 1954.78,1211.83 1955.37,1211.83 1955.95,1211.83 1956.54,1211.83 1957.12,1211.83 1957.71,1211.83 1958.3,1211.83 1958.88,1211.83 1959.47,1211.83 1960.06,1211.83 1960.64,1211.83 1961.23,1211.83 1961.82,1211.83 1962.4,1211.83 1962.99,1211.83 1963.58,1211.83 1964.16,1211.83 1964.75,1211.83 1965.33,1211.83 1965.92,1211.83 1966.51,1211.83 1967.09,1211.83 1967.68,1211.83 1968.27,1211.83 1968.85,1211.83 1969.44,1211.83 1970.03,1211.83 1970.61,1211.83 1971.2,1211.83 1971.78,1211.83 1972.37,1211.83 1972.96,1211.83 1973.54,1211.83 1974.13,1211.83 1974.72,1211.83 1975.3,1211.83 1975.89,1211.83 1976.48,1211.83 1977.06,1211.83 1977.65,1211.83 1978.24,1211.83 1978.82,1211.83 1979.41,1211.83 1979.99,1211.83 1980.58,1211.83 1981.17,1211.83 1981.75,1211.83 1982.34,1211.83 1982.93,1211.83 1983.51,1211.83 1984.1,1211.83 1984.69,1211.83 1985.27,1211.83 1985.86,1211.83 1986.45,1211.83 1987.03,1211.83 1987.62,1211.83 1988.2,1211.83 1988.79,1211.83 1989.38,1211.83 1989.96,1211.83 1990.55,1211.83 1991.14,1211.83 1991.72,1211.83 1992.31,1211.83 1992.9,1211.83 1993.48,1211.83 1994.07,1211.83 1994.65,1211.83 1995.24,1211.83 1995.83,1211.83 1996.41,1211.83 1997,1211.83 1997.59,1211.83 1998.17,1211.83 1998.76,1211.83 1999.35,1211.83 1999.93,1211.83 2000.52,1211.83 2001.11,1211.83 2001.69,1211.83 2002.28,1211.83 2002.86,1211.83 2003.45,1211.83 2004.04,1211.83 2004.62,1211.83 2005.21,1211.83 2005.8,1211.83 2006.38,1211.83 2006.97,1211.83 2007.56,1211.83 2008.14,1211.83 2008.73,1211.83 2009.32,1211.83 2009.9,1211.83 2010.49,1211.83 2011.07,1211.83 2011.66,1211.83 2012.25,1211.83 2012.83,1211.83 2013.42,1211.83 2014.01,1211.83 2014.59,1211.83 2015.18,1211.83 2015.77,1211.83 2016.35,1211.83 2016.94,1211.83 2017.53,1211.83 2018.11,1211.83 2018.7,1211.83 2019.28,1211.83 2019.87,1211.83 2020.46,1211.83 2021.04,1211.83 2021.63,1211.83 2022.22,1211.83 2022.8,1211.83 2023.39,1211.83 2023.98,1211.83 2024.56,1211.83 2025.15,1211.83 2025.73,1211.83 2026.32,1211.83 2026.91,1211.83 2027.49,1211.83 2028.08,1211.83 2028.67,1211.83 2029.25,1211.83 2029.84,1211.83 2030.43,1211.83 2031.01,1211.83 2031.6,1211.83 2032.19,1211.83 2032.77,1211.83 2033.36,1211.83 2033.94,1211.83 2034.53,1211.83 2035.12,1211.83 2035.7,1211.83 2036.29,1211.83 2036.88,1211.83 2037.46,1211.83 2038.05,1211.83 2038.64,1211.83 2039.22,1211.83 2039.81,1211.83 2040.4,1211.83 2040.98,1211.83 2041.57,1211.83 2042.15,1211.83 2042.74,1211.83 2043.33,1211.83 2043.91,1211.83 2044.5,1211.83 2045.09,1211.83 2045.67,1211.83 2046.26,1211.83 2046.85,1211.83 2047.43,1211.83 2048.02,1211.83 2048.6,1211.83 2049.19,1211.83 2049.78,1211.83 2050.36,1211.83 2050.95,1211.83 2051.54,1211.83 2052.12,1211.83 2052.71,1211.83 2053.3,1211.83 2053.88,1211.83 2054.47,1211.83 2055.06,1211.83 2055.64,1211.83 2056.23,1211.83 2056.81,1211.83 2057.4,1211.83 2057.99,1211.83 2058.57,1211.83 2059.16,1211.83 2059.75,1211.83 2060.33,1211.83 2060.92,1211.83 2061.51,1211.83 2062.09,1211.83 2062.68,1211.83 2063.27,1211.83 2063.85,1211.83 2064.44,1211.83 2065.02,1211.83 2065.61,1211.83 2066.2,1211.83 2066.78,1211.83 2067.37,1211.83 2067.96,1211.83 2068.54,1211.83 2069.13,1211.83 2069.72,1211.83 2070.3,1211.83 2070.89,1211.83 2071.48,1211.83 2072.06,1211.83 2072.65,1211.83 2073.23,1211.83 2073.82,1211.83 2074.41,1211.83 2074.99,1211.83 2075.58,1211.83 2076.17,1211.83 2076.75,1211.83 2077.34,1211.83 2077.93,1211.83 2078.51,1211.83 2079.1,1211.83 2079.68,1211.83 2080.27,1211.83 2080.86,1211.83 2081.44,1211.83 2082.03,1211.83 2082.62,1211.83 2083.2,1211.83 2083.79,1211.83 2084.38,1211.83 2084.96,1211.83 2085.55,1211.83 2086.14,1211.83 2086.72,1211.83 2087.31,1211.83 2087.89,1211.83 2088.48,1211.83 2089.07,1211.83 2089.65,1211.83 2090.24,1211.83 2090.83,1211.83 2091.41,1211.83 2092,1211.83 2092.59,1211.83 2093.17,1211.83 2093.76,1211.83 2094.35,1211.83 2094.93,1211.83 2095.52,1211.83 2096.1,1211.83 2096.69,1211.83 2097.28,1211.83 2097.86,1211.83 2098.45,1211.83 2099.04,1211.83 2099.62,1211.83 2100.21,1211.83 2100.8,1211.83 2101.38,1211.83 2101.97,1211.83 2102.55,1211.83 2103.14,1211.83 2103.73,1211.83 2104.31,1211.83 2104.9,1211.83 2105.49,1211.83 2106.07,1211.83 2106.66,1211.83 2107.25,1211.83 2107.83,1211.83 2108.42,1211.83 2109.01,1211.83 2109.59,1211.83 2110.18,1211.83 2110.76,1211.83 2111.35,1211.83 2111.94,1211.83 2112.52,1211.83 2113.11,1211.83 2113.7,1211.83 2114.28,1211.83 2114.87,1211.83 2115.46,1211.83 2116.04,1211.83 2116.63,1211.83 2117.22,1211.83 2117.8,1211.83 2118.39,1211.83 2118.97,1211.83 2119.56,1211.83 2120.15,1211.83 2120.73,1211.83 2121.32,1211.83 2121.91,1211.83 2122.49,1211.83 2123.08,1211.83 2123.67,1211.83 2124.25,1211.83 2124.84,1211.83 2125.42,1211.83 2126.01,1211.83 2126.6,1211.83 2127.18,1211.83 2127.77,1211.83 2128.36,1211.83 2128.94,1211.83 2129.53,1211.83 2130.12,1211.83 2130.7,1211.83 2131.29,1211.83 2131.88,1211.83 2132.46,1211.83 2133.05,1211.83 2133.63,1211.83 2134.22,1211.83 2134.81,1211.83 2135.39,1211.83 2135.98,1211.83 2136.57,1211.83 2137.15,1211.83 2137.74,1211.83 2138.33,1211.83 2138.91,1211.83 2139.5,1211.83 2140.09,1211.83 2140.67,1211.83 2141.26,1211.83 2141.84,1211.83 2142.43,1211.83 2143.02,1211.83 2143.6,1211.83 2144.19,1211.83 2144.78,1211.83 2145.36,1211.83 2145.95,1211.83 2146.54,1211.83 2147.12,1211.83 2147.71,1211.83 2148.3,1211.83 2148.88,1211.83 2149.47,1211.83 2150.05,1211.83 2150.64,1211.83 2151.23,1211.83 2151.81,1211.83 2152.4,1211.83 2152.99,1211.83 2153.57,1211.83 2154.16,1211.83 2154.75,1211.83 2155.33,1211.83 2155.92,1211.83 2156.5,1211.83 2157.09,1211.83 2157.68,1211.83 2158.26,1211.83 \"/>\n<polyline clip-path=\"url(#clip332)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1563.37,1196.21 1399.47,899.083 \"/>\n<polyline clip-path=\"url(#clip332)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1226.95 985.439,1196.21 2158.26,1196.21 2158.26,1226.95 985.439,1226.95 \"/>\n<path clip-path=\"url(#clip330)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip330)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip330)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip330)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip330)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip330)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip333\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip333)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip333)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip333)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip333)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip333)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip330)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip333)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip333)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip333)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip333)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip333)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip330)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip330)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip330)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip333)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-1577.5 161.555,-2922.08 162.114,-4155.78 162.673,-5286.05 163.232,-6319.78 163.792,-7263.33 164.351,-8122.62 164.91,-8903.13 165.469,-9609.97 166.029,-10247.9 166.588,-10821.4 167.147,-11334.6 167.706,-11791.5 168.266,-12195.6 168.825,-12550.4 169.384,-12859.3 169.943,-13125.1 170.503,-12582.4 171.062,-12798.2 171.621,-12977.8 172.18,-13123.8 172.74,-13238.5 173.299,-13324 173.858,-13382.5 174.417,-13415.8 174.977,-13414.5 175.536,-13403.6 176.095,-12978.7 176.655,-12929.4 177.214,-12868.5 177.773,-12786.5 178.332,-12402.4 178.892,-12023.5 179.451,-11409.8 180.01,-11071.6 180.569,-10737 181.129,-10600.6 181.688,-10460.2 182.247,-9786.16 182.806,-9626.13 183.366,-9464.26 183.925,-9161.23 184.484,-9002.38 185.043,-8717.26 185.603,-8430.86 186.162,-8270.89 186.721,-8103.76 187.28,-7938.92 187.84,-7776.12 188.399,-7323.68 188.958,-7053.04 189.517,-6878.74 190.077,-6709.32 190.636,-6541.04 191.195,-6371.97 191.754,-6206.74 192.314,-5970.58 192.873,-5818.6 193.432,-5664.1 193.991,-5452 194.551,-5132.15 195.11,-4823.26 195.669,-4646.37 196.228,-4526.79 196.788,-4255.21 197.347,-4045.02 197.906,-3942.41 198.465,-3790.89 199.025,-3470.44 199.584,-3252.29 200.143,-3088.71 200.702,-3014.63 201.262,-2936.51 201.821,-2783.63 202.38,-2599.07 202.939,-2494.14 203.499,-2389.83 204.058,-2290.03 204.617,-2190.52 205.176,-2095.23 205.736,-2034.74 206.295,-1972.63 206.854,-1784.64 207.413,-1667.24 207.973,-1579.46 208.532,-1493.1 209.091,-1380.5 209.65,-1271.3 210.21,-1138.24 210.769,-1035.14 211.328,-966.346 211.887,-897.423 212.447,-857.342 213.006,-819.121 213.565,-728.049 214.124,-688.896 214.684,-651.75 215.243,-563.141 215.802,-499.101 216.361,-416.066 216.921,-334.352 217.48,-233.284 218.039,-204.59 218.598,-152.271 219.158,-99.9114 219.717,-77.0482 220.276,-3.46244 220.835,18.7825 221.395,60.8799 221.954,102.675 222.513,165.04 223.072,160.943 223.632,270.901 224.191,288.666 224.75,326.798 225.309,360.021 225.869,305.162 226.428,324.453 226.987,342.023 227.546,442.15 228.106,455.213 228.665,526.809 229.224,578.481 229.783,583.889 230.343,587.687 230.902,618.019 231.461,603.555 232.02,687.829 232.58,771.528 233.139,795.343 233.698,795.398 234.257,814.29 234.817,832.694 235.376,831.156 235.935,848.395 236.494,865.894 237.054,880.724 237.613,877.285 238.172,857.303 238.731,929.866 239.291,907.268 239.85,957.746 240.409,952.909 240.968,1023.4 241.528,980.738 242.087,995.126 242.646,1009.95 243.205,1005.32 243.765,1017.84 244.324,1046.98 244.883,1037.78 245.442,1051.03 246.002,1100.05 246.561,1125.94 247.12,1165.52 247.679,1150.29 248.239,1139.22 248.798,1123.78 249.357,1116.15 249.916,1139.65 250.476,1130.19 251.035,1122.98 251.594,1115.6 252.153,1141.91 252.713,1135.63 253.272,1157.65 253.831,1167.69 254.39,1173.07 254.95,1195.5 255.509,1202.05 256.068,1189.89 256.627,1195.21 257.187,1183.82 257.746,1156.1 258.305,1163.94 258.864,1141.75 259.424,1197.91 259.983,1186.87 260.542,1177.1 261.101,1217.78 261.661,1222.61 262.22,1193.43 262.779,1179.02 263.338,1200.33 263.898,1207.77 264.457,1197.29 265.016,1186.1 265.575,1178.63 266.135,1186.22 266.694,1208.32 267.253,1196.65 267.812,1200.27 268.372,1155.96 268.931,1148.92 269.49,1138.46 270.049,1197.58 270.609,1200.84 271.168,1225.29 271.727,1230.96 272.286,1234.2 272.846,1220.52 273.405,1191.8 273.964,1161.27 274.523,1186.68 275.083,1157.33 275.642,1148.48 276.201,1142.79 276.76,1135.24 277.32,1143.22 277.879,1151.54 278.438,1139.24 278.997,1130.75 279.557,1123.44 280.116,1133.18 280.675,1142.2 281.234,1113.4 281.794,1138.92 282.353,1132.17 282.912,1123.16 283.471,1114.43 284.031,1091.48 284.59,1085.34 285.149,1060.54 285.708,1069.14 286.268,1046.77 286.827,1025.83 287.386,1007.25 287.945,1004.98 288.505,1003.99 289.064,1017.82 289.623,1001.09 290.182,1031.36 290.742,1043.43 291.301,1068.05 291.86,1049.27 292.419,1061.18 292.979,1068.47 293.538,1093.53 294.097,1118.86 294.656,1144.75 295.216,1151.03 295.775,1170.27 296.334,1162.85 296.893,1169.04 297.453,1156.14 298.012,1162.91 298.571,1133.76 299.13,1157.71 299.69,1131.49 300.249,1138.06 300.808,1125.92 301.368,1115.29 301.927,1107.6 302.486,1131.66 303.045,1088.34 303.605,1062.42 304.164,1070.29 304.723,1046.66 305.282,1073.26 305.842,1080.34 306.401,1086.23 306.96,1110.66 307.519,1099.79 308.079,1089.74 308.638,1096.28 309.197,1102.85 309.756,1093.75 310.316,1081.91 310.875,1024.82 311.434,1031.63 311.993,1024.47 312.553,1015.87 313.112,1062.16 313.671,1040.32 314.23,1034.45 314.79,1028.03 315.349,990.518 315.908,1002.02 316.467,948.61 317.027,926.296 317.586,925.906 318.145,923.244 318.704,954.792 319.264,982.957 319.823,1012.18 320.382,1038.31 320.941,1049.64 321.501,1045.42 322.06,1050.74 322.619,1029.4 323.178,1020.06 323.738,999.602 324.297,1026.16 324.856,1000.91 325.415,977.673 325.975,975.388 326.534,968.867 327.093,980.109 327.652,992.153 328.212,1032.05 328.771,1013.1 329.33,1004.64 329.889,965.17 330.449,978.237 331.008,1040.78 331.567,1017.47 332.126,974.987 332.686,972.223 333.245,964.536 333.804,961.644 334.363,953.691 334.923,968.791 335.482,963.831 336.041,946.274 336.6,960.238 337.16,955.595 337.719,967.242 338.278,979.014 338.837,956.662 339.397,951.402 339.956,979.749 340.515,957.559 341.074,952.321 341.634,965.772 342.193,944.246 342.752,953.447 343.311,948.722 343.871,945.446 344.43,923.512 344.989,903.205 345.548,897.957 346.108,896.79 346.667,925.207 347.226,941.679 347.785,938.849 348.345,919.776 348.904,934.869 349.463,900.88 350.022,893.688 350.582,873.281 351.141,885.689 351.7,885.689 352.259,883.677 352.819,914.867 353.378,924.957 353.937,919.37 354.496,887.314 355.056,867.058 355.615,866.06 356.174,879.794 356.733,890.587 357.293,903.298 357.852,900.334 358.411,848.35 358.97,864.313 359.53,897.171 360.089,893.446 360.648,908.188 361.207,888.492 361.767,854.772 362.326,838.1 362.885,820.172 363.444,818.189 364.004,835.55 364.563,835.733 365.122,853.939 365.681,851.236 366.241,834.974 366.8,838.784 367.359,838.465 367.918,823.849 368.478,838.334 369.037,849.476 369.596,865.134 370.155,881.056 370.715,862.31 371.274,860.896 371.833,827.149 372.392,861.916 372.952,841.426 373.511,874.013 374.07,905.706 374.629,881.023 375.189,859.763 375.748,856.368 376.307,870.551 376.866,819.574 377.426,869.472 377.985,881.424 378.544,865.027 379.103,878.506 379.663,877.784 380.222,872.672 380.781,871.838 381.34,868.123 381.9,892.401 382.459,890.488 383.018,886.262 383.577,867.366 384.137,922.622 384.696,900.482 385.255,914.014 385.814,893.062 386.374,935.025 386.933,959.845 387.492,952.407 388.051,943.734 388.611,951.815 389.17,945.43 389.729,939.601 390.288,916.132 390.848,941.004 391.407,967.861 391.966,956.961 392.525,947.926 393.085,920.866 393.644,896.933 394.203,938.033 394.762,930.315 395.322,924.682 395.881,937.333 396.44,915.691 396.999,859.786 397.559,905.793 398.118,900.96 398.677,908.477 399.236,905.055 399.796,912.79 400.355,984.495 400.914,970.138 401.473,944.129 402.033,950.213 402.592,955.306 403.151,917.31 403.71,896.676 404.27,893.405 404.829,858.554 405.388,871.864 405.947,869.631 406.507,849.867 407.066,814.528 407.625,813.122 408.184,824.263 408.744,820.364 409.303,849.472 409.862,849.979 410.421,859.682 410.981,825.003 411.54,835.006 412.099,832.014 412.658,796.592 413.218,775.863 413.777,776.427 414.336,794.121 414.895,792.912 415.455,821.431 416.014,822.035 416.573,819.014 417.132,850.647 417.692,832.736 418.251,831.562 418.81,811.702 419.369,804.067 419.929,771.818 420.488,768.841 421.047,832.403 421.606,846.676 422.166,888.073 422.725,879.141 423.284,891.177 423.843,868.102 424.403,880.453 424.962,874.124 425.521,885.361 426.08,860.454 426.64,852.192 427.199,827.934 427.758,842.934 428.318,841.264 428.877,853.443 429.436,862.601 429.995,840.366 430.555,835.788 431.114,798.58 431.673,792.963 432.232,810.617 432.792,792.926 433.351,792.814 433.91,755.539 434.469,724.451 435.029,759.287 435.588,792.871 436.147,791.943 436.706,773.864 437.266,772.854 437.825,772.752 438.384,726.836 438.943,713.972 439.503,701.541 440.062,702.671 440.621,709.333 441.18,709.961 441.74,713.39 442.299,699.444 442.858,769.704 443.417,754.575 443.977,754.671 444.536,756.584 445.095,776.62 445.654,746.148 446.214,748.254 446.773,717.627 447.332,704.722 447.891,771.419 448.451,768.474 449.01,752.818 449.569,755.495 450.128,788.306 450.688,788.759 451.247,783.557 451.806,813.904 452.365,827.185 452.925,773.149 453.484,822.27 454.043,802.371 454.602,798.966 455.162,829.882 455.721,792.662 456.28,776.806 456.839,804.577 457.399,816.041 457.958,831.7 458.517,793.525 459.076,792.337 459.636,820.747 460.195,833.785 460.754,831.954 461.313,864.38 461.873,843.388 462.432,843.165 462.991,789.612 463.55,806.239 464.11,799.036 464.669,781.322 465.228,795.767 465.787,792.481 466.347,789.544 466.906,803.818 467.465,806.29 468.024,806.314 468.584,805.507 469.143,867.356 469.702,908.894 470.261,914.335 470.821,887.71 471.38,830.833 471.939,835.975 472.498,815.143 473.058,797.156 473.617,793.807 474.176,808.021 474.735,820.833 475.295,835.631 475.854,799.981 476.413,827.492 476.972,807.623 477.532,802.202 478.091,767.329 478.65,748.729 479.209,766.124 479.769,765.204 480.328,779.23 480.887,761.805 481.446,761.863 482.006,778.448 482.565,808.431 483.124,787.995 483.683,769.277 484.243,733.192 484.802,716.376 485.361,689.067 485.92,709.881 486.48,697.374 487.039,684.547 487.598,704.907 488.157,724.476 488.717,726.303 489.276,743.013 489.835,759.579 490.394,757.632 490.954,738.834 491.513,738.349 492.072,755.821 492.631,753.901 493.191,734.172 493.75,735.163 494.309,732.486 494.868,747.643 495.428,732.048 495.987,717.24 496.546,719.832 497.105,704.476 497.665,721.114 498.224,754.277 498.783,718.471 499.342,747.983 499.902,712.284 500.461,698.752 501.02,720.006 501.579,737.174 502.139,736.2 502.698,736.639 503.257,767.912 503.816,768.551 504.376,786.764 504.935,817.745 505.494,815.955 506.053,759.229 506.613,725.468 507.172,676.512 507.731,663.874 508.29,636.141 508.85,641.507 509.409,662.787 509.968,635.744 510.527,623.138 511.087,664.114 511.646,699.39 512.205,703.622 512.764,717.833 513.324,719.387 513.883,707.507 514.442,709.616 515.001,713.208 515.561,714.167 516.12,715.688 516.679,700.744 517.238,700.928 517.798,718.756 518.357,721.886 518.916,722.821 519.475,710.225 520.035,728.592 520.594,730.776 521.153,731.951 521.712,733.257 522.272,715.294 522.831,716.558 523.39,719.848 523.949,740.718 524.509,773.352 525.068,769.555 525.627,804.157 526.186,814.377 526.746,826.882 527.305,854.71 527.864,848.492 528.423,839.331 528.983,836.318 529.542,863.266 530.101,888.924 530.66,881.452 531.22,890.358 531.779,868.944 532.338,828.955 532.897,822.824 533.457,799.943 534.016,779.278 534.575,773.666 535.134,784.477 535.694,797.227 536.253,793.051 536.812,809.217 537.371,805.387 537.931,815.371 538.49,764.946 539.049,717.242 539.608,698.826 540.168,719.103 540.727,733.69 541.286,730.533 541.845,761.963 542.405,776.25 542.964,791.07 543.523,821.609 544.082,766.522 544.642,780.225 545.201,760.767 545.76,725.21 546.319,724.933 546.879,726.706 547.438,709.146 547.997,724.168 548.556,743.118 549.116,755.292 549.675,737.619 550.234,733.674 550.793,749.13 551.353,729.151 551.912,730.191 552.471,709.714 553.031,710.266 553.59,708.246 554.149,711.127 554.708,675.836 555.268,691.845 555.827,708.822 556.386,709.237 556.945,676.318 557.505,713.79 558.064,713.758 558.623,713.02 559.182,728.393 559.742,739.728 560.301,738.974 560.86,751.573 561.419,749.514 561.979,713.292 562.538,713.037 563.097,714.643 563.656,698.344 564.216,699.326 564.775,716.032 565.334,715.458 565.893,713.145 566.453,743.136 567.012,742.602 567.571,745.785 568.13,725.716 568.69,725.567 569.249,695.427 569.808,729.793 570.367,709.903 570.927,738.529 571.486,705.712 572.045,724.944 572.604,674.883 573.164,677.366 573.723,678.198 574.282,661.18 574.841,667.202 575.401,670.827 575.96,657.438 576.519,644.976 577.078,648.055 577.638,652.92 578.197,654.822 578.756,673.478 579.315,657.736 579.875,658.752 580.434,660.327 580.993,630.228 581.552,649.151 582.112,667.953 582.671,654.607 583.23,658.025 583.789,630.413 584.349,654.531 584.908,628.197 585.467,632.295 586.026,652.474 586.586,671.994 587.145,639.213 587.704,645.233 588.263,650.149 588.823,672.653 589.382,705.834 589.941,725.438 590.5,728.282 591.06,740.431 591.619,736.985 592.178,736.31 592.737,717.878 593.297,698.43 593.856,714.733 594.415,714.647 594.974,745.134 595.534,746.875 596.093,745.747 596.652,713.858 597.211,717.161 597.771,747.689 598.33,780.221 598.889,764.752 599.448,794.843 600.008,789.479 600.567,768.125 601.126,715.733 601.685,696.077 602.245,694.626 602.804,700.045 603.363,713.553 603.922,696.106 604.482,748.089 605.041,729.121 605.6,741.691 606.159,738.978 606.719,722.629 607.278,737.344 607.837,749.543 608.396,712.937 608.956,697.821 609.515,700.785 610.074,700.854 610.633,685.223 611.193,699.786 611.752,719.974 612.311,703.369 612.87,718.861 613.43,719.388 613.989,716.559 614.548,764.7 615.107,779.441 615.667,792.424 616.226,739.659 616.785,767.948 617.344,765.437 617.904,759.698 618.463,738.044 619.022,735.561 619.581,715.748 620.141,733.688 620.7,749.521 621.259,734.815 621.818,749.734 622.378,765.063 622.937,742.043 623.496,741.658 624.055,787.649 624.615,800.538 625.174,781.049 625.733,762.425 626.292,775.574 626.852,790.357 627.411,767.465 627.97,746.777 628.529,709.109 629.089,726.465 629.648,720.745 630.207,729.191 630.766,743.627 631.326,772.769 631.885,767.453 632.444,764.842 633.003,758.088 633.563,804.742 634.122,783.956 634.681,779.35 635.24,759.645 635.8,774.628 636.359,771.406 636.918,772.133 637.477,783.925 638.037,778.415 638.596,776.568 639.155,791.661 639.714,767.676 640.274,734.104 640.833,716.302 641.392,714.831 641.951,700.15 642.511,644.874 643.07,646.14 643.629,637.906 644.188,624.097 644.748,626.744 645.307,661.848 645.866,663.632 646.425,668.609 646.985,659.082 647.544,648.481 648.103,649.896 648.662,650.289 649.222,670.216 649.781,606.292 650.34,630.247 650.899,631.025 651.459,633.549 652.018,624.579 652.577,628.275 653.136,647.217 653.696,649.683 654.255,648.659 654.814,630.545 655.373,616.935 655.933,605.71 656.492,615.077 657.051,602.567 657.61,626.633 658.17,649.712 658.729,653.361 659.288,654.752 659.847,626.243 660.407,610.303 660.966,584.668 661.525,572.459 662.084,578.557 662.644,570.103 663.203,593.363 663.762,582.687 664.321,604.88 664.881,578.06 665.44,602.808 665.999,593.459 666.558,614.647 667.118,649.019 667.677,668.541 668.236,654.859 668.795,656.364 669.355,688.915 669.914,705.62 670.473,707.518 671.032,704.105 671.592,689.556 672.151,677.802 672.71,662.164 673.269,678.226 673.829,683.346 674.388,677.914 674.947,680.074 675.506,682.759 676.066,683.328 676.625,716.575 677.184,715.664 677.743,716.144 678.303,718.095 678.862,733.459 679.421,763.137 679.981,745.548 680.54,755.83 681.099,721.637 681.658,736.82 682.218,717.725 682.777,669.567 683.336,653.166 683.895,653.272 684.455,687.179 685.014,653.73 685.573,658.862 686.132,647.013 686.692,619.027 687.251,589.783 687.81,580.574 688.369,604.814 688.929,624.229 689.488,615.853 690.047,622.146 690.606,644.501 691.166,616.884 691.725,624.277 692.284,659.883 692.843,663.163 693.403,653.556 693.962,673.776 694.521,675.245 695.08,678.143 695.64,713.472 696.199,744.821 696.758,743.457 697.317,760.768 697.877,738.749 698.436,721.358 698.995,735.719 699.554,765.176 700.114,742.49 700.673,724.605 701.232,739.772 701.791,767.768 702.351,762.522 702.91,777.554 703.469,807.728 704.028,754.151 704.588,754.242 705.147,732.704 705.706,731.322 706.265,692.989 706.825,724.041 707.384,739.408 707.943,739.475 708.502,738.563 709.062,738.235 709.621,754.641 710.18,766.26 710.739,761.523 711.299,757.559 711.858,755.717 712.417,772.831 712.976,797.137 713.536,746.725 714.095,757.684 714.654,738.994 715.213,752.777 715.773,733.668 716.332,698.115 716.891,680.257 717.45,682.041 718.01,649.539 718.569,652.301 719.128,670.148 719.687,656.389 720.247,675.591 720.806,691.596 721.365,741.194 721.924,724.819 722.484,736.466 723.043,716.926 723.602,714.895 724.161,716.296 724.721,715.275 725.28,747.939 725.839,727.955 726.398,759.593 726.958,726.34 727.517,707.994 728.076,688.694 728.635,668.132 729.195,685.814 729.754,684.475 730.313,684.976 730.872,695.998 731.432,675.699 731.991,644.362 732.55,661.856 733.109,697.383 733.669,648.187 734.228,650.961 734.787,638.157 735.346,626.844 735.906,632.052 736.465,648.192 737.024,651.229 737.583,650.75 738.143,703.929 738.702,753.306 739.261,751.587 739.82,763.549 740.38,743.964 740.939,742.383 741.498,737.612 742.057,770.298 742.617,750.939 743.176,746.709 743.735,741.423 744.294,788.532 744.854,800.307 745.413,844.468 745.972,837.383 746.531,843.149 747.091,851.5 747.65,823.473 748.209,780.671 748.768,758.55 749.328,754.835 749.887,716.606 750.446,713.829 751.005,701.074 751.565,648.261 752.124,646.912 752.683,631.539 753.242,648.902 753.802,632.933 754.361,650.146 754.92,655.471 755.479,623.754 756.039,642.997 756.598,647.645 757.157,686.429 757.716,702.243 758.276,687.276 758.835,688.44 759.394,671.981 759.953,629.601 760.513,650.69 761.072,685.357 761.631,668.542 762.19,668.164 762.75,670.986 763.309,691.516 763.868,707.778 764.427,691.457 764.987,706.31 765.546,686.079 766.105,684.44 766.664,681.868 767.224,669.37 767.783,636.171 768.342,640.237 768.901,590.901 769.461,596.432 770.02,649.314 770.579,651.637 771.138,667.627 771.698,671.719 772.257,657.729 772.816,675.174 773.375,660.228 773.935,664.468 774.494,702.474 775.053,683.171 775.612,698.467 776.172,683.941 776.731,703.404 777.29,733.506 777.849,730.684 778.409,729.686 778.968,676.685 779.527,688.871 780.086,703.293 780.646,671.032 781.205,685.296 781.764,717.994 782.323,728.091 782.883,709.523 783.442,722.678 784.001,689.343 784.56,721.525 785.12,735.795 785.679,718.903 786.238,717.273 786.797,711.731 787.357,710.384 787.916,711.307 788.475,757.284 789.034,787.207 789.594,717.224 790.153,709.233 790.712,642.315 791.271,643.05 791.831,663.5 792.39,634.299 792.949,668.381 793.508,666.617 794.068,671.634 794.627,659.141 795.186,690.42 795.745,721.079 796.305,720.059 796.864,690.234 797.423,705.589 797.982,724.621 798.542,736.991 799.101,717.443 799.66,716.11 800.219,712.531 800.779,692.43 801.338,692.243 801.897,679.847 802.456,679.907 803.016,696.37 803.575,664.604 804.134,635.608 804.693,623.484 805.253,707.19 805.812,707.609 806.371,757.954 806.931,740.184 807.49,721.761 808.049,718.651 808.608,720.106 809.168,729.778 809.727,745.152 810.286,760.409 810.845,754.714 811.405,736.289 811.964,767.973 812.523,767.875 813.082,762.252 813.642,775.729 814.201,772.636 814.76,747.113 815.319,760.718 815.879,776.286 816.438,804.125 816.997,833.068 817.556,857.512 818.116,816.353 818.675,775.39 819.234,737.209 819.793,701.067 820.353,685.128 820.912,670.912 821.471,655.202 822.03,643.98 822.59,662.921 823.149,630.648 823.708,617.649 824.267,623.77 824.827,611.238 825.386,615.655 825.945,623.169 826.504,625.245 827.064,608.307 827.623,613.821 828.182,601.658 828.741,610.655 829.301,598.321 829.86,570.418 830.419,573.872 830.978,563.793 831.538,619.025 832.097,640.351 832.656,659.937 833.215,679.159 833.775,678.699 834.334,665.718 834.893,685.096 835.452,686.172 836.012,685.859 836.571,686.176 837.13,635.245 837.689,689.081 838.249,676.049 838.808,710.288 839.367,740.973 839.926,736.947 840.486,752.095 841.045,718.08 841.604,746.617 842.163,710.426 842.723,709.846 843.282,726.11 843.841,737.041 844.4,719.06 844.96,716.286 845.519,733.057 846.078,779.174 846.637,743.774 847.197,707.307 847.756,703.711 848.315,701.561 848.874,685.127 849.434,700.682 849.993,699.035 850.552,683.653 851.111,703.824 851.671,720.855 852.23,669.627 852.789,674.208 853.348,673.926 853.908,693.278 854.467,676.332 855.026,691.41 855.585,708.514 856.145,723.014 856.704,705.137 857.263,702.94 857.822,684.464 858.382,699.428 858.941,683.289 859.5,664.623 860.059,665.833 860.619,651.501 861.178,668.636 861.737,685.261 862.296,671.136 862.856,639.774 863.415,643.957 863.974,644.292 864.533,649.85 865.093,621.954 865.652,643.199 866.211,632.575 866.77,632.604 867.33,650.552 867.889,653.024 868.448,651.745 869.007,637.584 869.567,639.52 870.126,659.054 870.685,695.151 871.244,697.998 871.804,694.471 872.363,709.327 872.922,710.005 873.481,707.556 874.041,687.789 874.6,656.525 875.159,692.721 875.718,692.676 876.278,695.566 876.837,680.088 877.396,631.008 877.955,617.051 878.515,665.891 879.074,715.933 879.633,727.823 880.192,742.719 880.752,725.161 881.311,694.234 881.87,726.213 882.429,724.563 882.989,706.329 883.548,671.763 884.107,673.766 884.666,672.961 885.226,641.901 885.785,646.126 886.344,665.675 886.903,664.724 887.463,667.269 888.022,702.014 888.581,701.858 889.14,717.025 889.7,684.44 890.259,654.781 890.818,655.316 891.377,673.738 891.937,710.1 892.496,728.65 893.055,726.347 893.614,739.72 894.174,702.653 894.733,671.907 895.292,625.124 895.851,613.322 896.411,647.198 896.97,650.427 897.529,654.113 898.088,673.447 898.648,658.706 899.207,675.073 899.766,675.527 900.325,614.445 900.885,621.879 901.444,641.885 902.003,660.147 902.562,680.521 903.122,663.797 903.681,646.822 904.24,667.943 904.799,670.064 905.359,652.809 905.918,638.629 906.477,644.569 907.036,631.609 907.596,633.351 908.155,620.825 908.714,655.919 909.273,626.978 909.833,596.267 910.392,586.792 910.951,593.531 911.51,600.956 912.07,623.854 912.629,643.682 913.188,629.185 913.747,647.193 914.307,645.484 914.866,633.3 915.425,685.215 915.984,670.684 916.544,691.429 917.103,710.735 917.662,725.743 918.221,721.315 918.781,736.393 919.34,737.108 919.899,782.552 920.458,761.764 921.018,773.584 921.577,718.733 922.136,752.539 922.695,747.248 923.255,774.59 923.814,785.994 924.373,814.765 924.932,809.144 925.492,801.624 926.051,795.92 926.61,807.238 927.169,800.75 927.729,793.07 928.288,770.899 928.847,797.647 929.406,807.643 929.966,788.974 930.525,785.06 931.084,794.263 931.644,824.594 932.203,786.736 932.762,763.307 933.321,757.677 933.881,749.951 934.44,731.226 934.999,728.872 935.558,710.295 936.118,723.766 936.677,724.017 937.236,709.637 937.795,772.943 938.355,773.164 938.914,750.134 939.473,827.808 940.032,825.218 940.592,864.888 941.151,869.722 941.71,860.817 942.269,802.261 942.829,812.222 943.388,791.06 943.947,782.066 944.506,795.669 945.066,722.052 945.625,750.967 946.184,763.226 946.743,725.674 947.303,706.575 947.862,706.598 948.421,731.115 948.98,694.474 949.54,709.898 950.099,771.663 950.658,784.461 951.217,781.014 951.777,761.192 952.336,740.089 952.895,720.28 953.454,721.249 954.014,720.677 954.573,736.178 955.132,714.18 955.691,712.689 956.251,663.206 956.81,661.403 957.369,664.164 957.928,675.602 958.488,726.285 959.047,692.519 959.606,688.861 960.165,733.795 960.725,684.476 961.284,651.587 961.843,618.623 962.402,620.495 962.962,673.227 963.521,654.771 964.08,626.391 964.639,644.923 965.199,627.967 965.758,627.777 966.317,633.453 966.876,636.348 967.436,620.217 967.995,624.671 968.554,611.411 969.113,648.489 969.673,665.378 970.232,652.232 970.791,652.812 971.35,687.459 971.91,672.759 972.469,669.837 973.028,656.453 973.587,691.698 974.147,675.901 974.706,692.948 975.265,692.647 975.824,696.076 976.384,695.758 976.943,678.395 977.502,680.671 978.061,663.684 978.621,665.789 979.18,667.494 979.739,666.834 980.298,654.961 980.858,657.176 981.417,676.227 981.976,644.595 982.535,615.383 983.095,621.166 983.654,610.786 984.213,612.234 984.772,617.597 985.332,653.25 985.891,673.313 986.45,690.265 987.009,673.375 987.569,674.846 988.128,658.221 988.687,629.884 989.246,647.387 989.806,667.412 990.365,686.305 990.924,688.017 991.483,687.308 992.043,705.533 992.602,735.513 993.161,717.062 993.72,701.309 994.28,700.121 994.839,699.905 995.398,729.712 995.957,722.62 996.517,675.327 997.076,675.363 997.635,675.167 998.194,660.295 998.754,661.104 999.313,663.453 999.872,664.272 1000.43,636.412 1000.99,657.022 1001.55,670.965 1002.11,670.392 1002.67,672.136 1003.23,626.631 1003.79,629.062 1004.35,615.705 1004.91,618.64 1005.46,571.955 1006.02,543.77 1006.58,598.804 1007.14,632.056 1007.7,620.845 1008.26,608.464 1008.82,644.19 1009.38,644.509 1009.94,627.314 1010.5,614.066 1011.06,600.743 1011.62,649.175 1012.18,665.241 1012.73,665.053 1013.29,669.058 1013.85,668.272 1014.41,687.22 1014.97,704.178 1015.53,687.735 1016.09,687.828 1016.65,674.011 1017.21,675.225 1017.77,690.279 1018.33,704.014 1018.89,688.847 1019.45,674.97 1020.01,676.865 1020.56,659.832 1021.12,676.235 1021.68,642.421 1022.24,627.981 1022.8,633.348 1023.36,634.523 1023.92,622.226 1024.48,579.101 1025.04,599.44 1025.6,618.446 1026.16,634.067 1026.72,603.896 1027.28,608.563 1027.83,627.134 1028.39,615.148 1028.95,622.718 1029.51,640.924 1030.07,655.975 1030.63,623.967 1031.19,595.787 1031.75,569.016 1032.31,574.799 1032.87,600.717 1033.43,623.189 1033.99,675.776 1034.55,679.171 1035.1,646.961 1035.66,650.296 1036.22,663.674 1036.78,649.247 1037.34,647.156 1037.9,651.977 1038.46,686.042 1039.02,688.368 1039.58,690.143 1040.14,723.743 1040.7,726.63 1041.26,725.619 1041.82,694.774 1042.38,711.707 1042.93,712.319 1043.49,726.021 1044.05,706.083 1044.61,688.483 1045.17,692.536 1045.73,658.791 1046.29,693.017 1046.85,707.574 1047.41,787.596 1047.97,766.221 1048.53,760.149 1049.09,703.407 1049.65,684.94 1050.2,667.072 1050.76,730.313 1051.32,712.588 1051.88,729.818 1052.44,728.271 1053,725.376 1053.56,707.243 1054.12,720.598 1054.68,718.378 1055.24,714.654 1055.8,678.817 1056.36,647.59 1056.92,648.809 1057.48,618.05 1058.03,656.579 1058.59,676.122 1059.15,661.089 1059.71,665.335 1060.27,668.459 1060.83,622.521 1061.39,628.774 1061.95,629.354 1062.51,600.225 1063.07,621.16 1063.63,658.642 1064.19,696.177 1064.75,699.955 1065.3,683.547 1065.86,652.835 1066.42,657.084 1066.98,679.016 1067.54,664.252 1068.1,662.149 1068.66,680.655 1069.22,680.326 1069.78,677.397 1070.34,661.348 1070.9,679.792 1071.46,680.72 1072.02,713.193 1072.57,746.572 1073.13,757.906 1073.69,755.673 1074.25,766.617 1074.81,761.609 1075.37,791.201 1075.93,788.636 1076.49,785.355 1077.05,777.742 1077.61,759.495 1078.17,756.228 1078.73,736.761 1079.29,766.507 1079.85,762.912 1080.4,742.258 1080.96,724.976 1081.52,721.956 1082.08,718.703 1082.64,761.322 1083.2,756.958 1083.76,768.766 1084.32,778.223 1084.88,760.18 1085.44,726.72 1086,723.515 1086.56,688.546 1087.12,683.998 1087.67,685.018 1088.23,702.93 1088.79,700.18 1089.35,683.367 1089.91,684.397 1090.47,669.164 1091.03,654.709 1091.59,657.088 1092.15,676.066 1092.71,710.622 1093.27,725.009 1093.83,755.773 1094.39,769.82 1094.94,763.589 1095.5,757.466 1096.06,752.664 1096.62,750.918 1097.18,747.044 1097.74,726.428 1098.3,706.548 1098.86,705.283 1099.42,704.89 1099.98,705.146 1100.54,705.043 1101.1,733.454 1101.66,744.852 1102.22,722.71 1102.77,721.928 1103.33,752.448 1103.89,731.645 1104.45,699.117 1105.01,701.388 1105.57,717.381 1106.13,699.169 1106.69,696.239 1107.25,694.66 1107.81,693.339 1108.37,722.824 1108.93,749.796 1109.49,695.843 1110.04,695.387 1110.6,680.58 1111.16,716.064 1111.72,728.332 1112.28,710.777 1112.84,713.358 1113.4,679.72 1113.96,680.928 1114.52,665.163 1115.08,666.214 1115.64,665.737 1116.2,684.382 1116.76,701.303 1117.31,700.262 1117.87,702.509 1118.43,701.539 1118.99,666.585 1119.55,687.018 1120.11,720.776 1120.67,718.754 1121.23,701.78 1121.79,715.581 1122.35,731.024 1122.91,726.649 1123.47,737.902 1124.03,701.457 1124.59,700.702 1125.14,700.811 1125.7,666.853 1126.26,684.271 1126.82,715.523 1127.38,728.802 1127.94,711.121 1128.5,740.449 1129.06,735.896 1129.62,750.217 1130.18,699.507 1130.74,686.523 1131.3,735.366 1131.86,730.043 1132.41,726.496 1132.97,738.381 1133.53,764.025 1134.09,773.702 1134.65,767.756 1135.21,783.11 1135.77,759.676 1136.33,771.725 1136.89,781.311 1137.45,759.934 1138.01,786.662 1138.57,795.285 1139.13,806.904 1139.68,765.938 1140.24,758.463 1140.8,753.642 1141.36,746.706 1141.92,747.17 1142.48,744.541 1143.04,739.607 1143.6,751.899 1144.16,714.78 1144.72,667.785 1145.28,619.458 1145.84,637.951 1146.4,610.041 1146.96,660.857 1147.51,630.257 1148.07,631.295 1148.63,617.457 1149.19,588.698 1149.75,558.817 1150.31,583.485 1150.87,588.802 1151.43,575.826 1151.99,599.116 1152.55,603.073 1153.11,609.172 1153.67,593.016 1154.23,566.509 1154.78,555.335 1155.34,561.846 1155.9,585.761 1156.46,625.597 1157.02,629.95 1157.58,650.687 1158.14,682.663 1158.7,649.936 1159.26,635.034 1159.82,638.637 1160.38,656.088 1160.94,642.287 1161.5,663.006 1162.05,678.968 1162.61,680.304 1163.17,663.909 1163.73,600.768 1164.29,628.371 1164.85,618.083 1165.41,635.239 1165.97,639.186 1166.53,628.348 1167.09,645.017 1167.65,617.027 1168.21,603.278 1168.77,672.461 1169.33,723.836 1169.88,722.92 1170.44,737.529 1171,703.255 1171.56,730.481 1172.12,746.078 1172.68,789.52 1173.24,767.7 1173.8,748.859 1174.36,745.93 1174.92,725.77 1175.48,735.742 1176.04,764.134 1176.6,748.723 1177.15,794.886 1177.71,852.814 1178.27,842.235 1178.83,818.099 1179.39,795.332 1179.95,805.754 1180.51,828.906 1181.07,805.4 1181.63,798.375 1182.19,773.782 1182.75,735.155 1183.31,733.816 1183.87,733.016 1184.43,759.414 1184.98,754.445 1185.54,735.873 1186.1,719.22 1186.66,717.721 1187.22,715.881 1187.78,695.358 1188.34,662.554 1188.9,632.691 1189.46,619.819 1190.02,622.094 1190.58,611.776 1191.14,585.57 1191.7,573.233 1192.25,578.081 1192.81,613.163 1193.37,632.865 1193.93,639.061 1194.49,640.616 1195.05,643.215 1195.61,663.915 1196.17,686.431 1196.73,672.765 1197.29,688.022 1197.85,703.892 1198.41,706.892 1198.97,735.699 1199.52,749.01 1200.08,714.566 1200.64,727.603 1201.2,690.796 1201.76,701.955 1202.32,669.139 1202.88,689.471 1203.44,644.215 1204,615.031 1204.56,617.05 1205.12,668.547 1205.68,702.017 1206.24,702.647 1206.8,685.617 1207.35,637.656 1207.91,656.367 1208.47,688.834 1209.03,671.508 1209.59,676.059 1210.15,678.614 1210.71,681.352 1211.27,667.27 1211.83,684.485 1212.39,653.592 1212.95,670.977 1213.51,674.49 1214.07,672.91 1214.62,693.747 1215.18,692.931 1215.74,691.354 1216.3,690.915 1216.86,672.403 1217.42,689.283 1217.98,705.648 1218.54,671.025 1219.1,655.413 1219.66,655.507 1220.22,619.621 1220.78,606.683 1221.34,657.816 1221.89,661.588 1222.45,665.106 1223.01,668.841 1223.57,669.157 1224.13,680.452 1224.69,650.025 1225.25,654.502 1225.81,654.868 1226.37,674.196 1226.93,643.762 1227.49,660.727 1228.05,679.191 1228.61,712.748 1229.17,724.567 1229.72,709.952 1230.28,675.709 1230.84,691.931 1231.4,706.653 1231.96,739.349 1232.52,723.082 1233.08,702.371 1233.64,719.161 1234.2,733.265 1234.76,713.709 1235.32,711.474 1235.88,726.85 1236.44,724.416 1236.99,724.428 1237.55,707.249 1238.11,724.712 1238.67,722.375 1239.23,706.171 1239.79,704.818 1240.35,732.963 1240.91,767.626 1241.47,731.086 1242.03,696.243 1242.59,628.778 1243.15,614.998 1243.71,586.439 1244.26,622.927 1244.82,628.122 1245.38,634.969 1245.94,633.489 1246.5,638.659 1247.06,639.991 1247.62,655.766 1248.18,652.549 1248.74,622.526 1249.3,642.942 1249.86,660.146 1250.42,627.446 1250.98,632.351 1251.54,636.595 1252.09,689.525 1252.65,673.093 1253.21,657.451 1253.77,677.965 1254.33,713.701 1254.89,676.962 1255.45,704.85 1256.01,658.588 1256.57,659.803 1257.13,662.275 1257.69,678.306 1258.25,678.024 1258.81,677.841 1259.36,677.189 1259.92,695.046 1260.48,680.595 1261.04,731.722 1261.6,710.576 1262.16,695.005 1262.72,744.089 1263.28,725.852 1263.84,737.221 1264.4,750.423 1264.96,727.815 1265.52,709.305 1266.08,724.633 1266.63,726.516 1267.19,738.031 1267.75,788.703 1268.31,785.123 1268.87,764.701 1269.43,745.016 1269.99,745.965 1270.55,738.157 1271.11,736.018 1271.67,732.365 1272.23,714.181 1272.79,713.726 1273.35,699.537 1273.91,729.634 1274.46,725.016 1275.02,677.872 1275.58,661.976 1276.14,665.208 1276.7,661.99 1277.26,679.289 1277.82,676.043 1278.38,612.082 1278.94,601.432 1279.5,604.718 1280.06,588.716 1280.62,561.256 1281.18,568.807 1281.73,576.253 1282.29,566.029 1282.85,575.538 1283.41,599.428 1283.97,605.535 1284.53,580.403 1285.09,588.047 1285.65,643.008 1286.21,628.899 1286.77,633.807 1287.33,621.336 1287.89,576.156 1288.45,586.174 1289,591.882 1289.56,583.374 1290.12,586.793 1290.68,624.668 1291.24,607.457 1291.8,627.925 1292.36,597.701 1292.92,552.214 1293.48,559.574 1294.04,567.578 1294.6,541.095 1295.16,550.52 1295.72,526.826 1296.28,514.188 1296.83,524.723 1297.39,517.508 1297.95,524.625 1298.51,530.347 1299.07,521.703 1299.63,549.378 1300.19,538.824 1300.75,583.969 1301.31,591.54 1301.87,580.275 1302.43,616.254 1302.99,634.032 1303.55,637.975 1304.1,640.831 1304.66,675.756 1305.22,710.01 1305.78,693.25 1306.34,660.919 1306.9,680.331 1307.46,733.475 1308.02,731.422 1308.58,747.383 1309.14,757.19 1309.7,759.058 1310.26,773.088 1310.82,752.414 1311.38,762.996 1311.93,739.141 1312.49,771.436 1313.05,765.176 1313.61,748.213 1314.17,730.205 1314.73,724.065 1315.29,737.465 1315.85,667.546 1316.41,668.212 1316.97,650.732 1317.53,637.741 1318.09,635.135 1318.65,669.754 1319.2,688.875 1319.76,685.165 1320.32,684.298 1320.88,655.072 1321.44,655.723 1322,623.844 1322.56,628.215 1323.12,613.415 1323.68,646.807 1324.24,650.803 1324.8,656.705 1325.36,658.882 1325.92,662.899 1326.47,631.937 1327.03,639.823 1327.59,612.454 1328.15,647.735 1328.71,650.902 1329.27,667.918 1329.83,656.326 1330.39,656.685 1330.95,674.838 1331.51,662.134 1332.07,679.596 1332.63,663.978 1333.19,695.955 1333.75,711.676 1334.3,710.48 1334.86,741.307 1335.42,738.058 1335.98,717.944 1336.54,715.675 1337.1,716.377 1337.66,730.152 1338.22,726.348 1338.78,770.185 1339.34,782.615 1339.9,778.8 1340.46,775.126 1341.02,770.042 1341.57,763.981 1342.13,743.78 1342.69,742.865 1343.25,752.556 1343.81,748.079 1344.37,761.688 1344.93,775.914 1345.49,755.714 1346.05,752.189 1346.61,748.612 1347.17,776.725 1347.73,755.969 1348.29,750.607 1348.84,763.463 1349.4,743.75 1349.96,756.586 1350.52,751.033 1351.08,747.395 1351.64,759.997 1352.2,709.629 1352.76,725.452 1353.32,725.295 1353.88,713.361 1354.44,742.076 1355,709.103 1355.56,727.455 1356.12,742.796 1356.67,755.565 1357.23,752.553 1357.79,780.818 1358.35,790.889 1358.91,784.331 1359.47,761.903 1360.03,770.879 1360.59,762.043 1361.15,759.018 1361.71,766.625 1362.27,763.755 1362.83,792.395 1363.39,798.75 1363.94,808.155 1364.5,816.404 1365.06,791.294 1365.62,782.608 1366.18,777.112 1366.74,769.788 1367.3,761.919 1367.86,771.728 1368.42,769.998 1368.98,799.589 1369.54,758.11 1370.1,755.522 1370.66,734.868 1371.21,745.773 1371.77,754.982 1372.33,779.749 1372.89,722.517 1373.45,719.069 1374.01,719.129 1374.57,730.031 1375.13,725.284 1375.69,704.688 1376.25,673.657 1376.81,675.603 1377.37,691.447 1377.93,629.187 1378.49,649.533 1379.04,605.093 1379.6,608.321 1380.16,645.992 1380.72,631.998 1381.28,702.325 1381.84,683.221 1382.4,679.25 1382.96,727.731 1383.52,710.34 1384.08,709.322 1384.64,727.593 1385.2,725.437 1385.76,690.802 1386.31,643.668 1386.87,659.678 1387.43,611.285 1387.99,594.938 1388.55,615.76 1389.11,566.683 1389.67,557.546 1390.23,565.705 1390.79,601.801 1391.35,623.755 1391.91,590.216 1392.47,578.665 1393.03,581.727 1393.58,602.057 1394.14,620.02 1394.7,606.836 1395.26,645.545 1395.82,663.851 1396.38,681.061 1396.94,663.772 1397.5,647.68 1398.06,679.579 1398.62,643.412 1399.18,609.848 1399.74,616.264 1400.3,602.381 1400.86,589.333 1401.41,579.409 1401.97,617.02 1402.53,651.946 1403.09,641.623 1403.65,674.973 1404.21,679.255 1404.77,711.187 1405.33,771.491 1405.89,814.986 1406.45,822.502 1407.01,848.311 1407.57,840.711 1408.13,865.866 1408.68,838.567 1409.24,812.22 1409.8,788.683 1410.36,770.417 1410.92,762.959 1411.48,726.666 1412.04,723.041 1412.6,735.504 1413.16,716.823 1413.72,666.634 1414.28,686.838 1414.84,671.612 1415.4,669.998 1415.95,636.065 1416.51,608.654 1417.07,613.576 1417.63,615.963 1418.19,600.642 1418.75,626.102 1419.31,598.811 1419.87,669.095 1420.43,688.058 1420.99,704.166 1421.55,690.767 1422.11,645.14 1422.67,628.829 1423.23,647.586 1423.78,666.242 1424.34,632.411 1424.9,636.62 1425.46,606.497 1426.02,610.362 1426.58,616.376 1427.14,636.474 1427.7,637.449 1428.26,653.719 1428.82,703.288 1429.38,700.085 1429.94,700.274 1430.5,652.074 1431.05,654.559 1431.61,673.062 1432.17,653.085 1432.73,622.897 1433.29,646.078 1433.85,648.04 1434.41,651.1 1434.97,671.139 1435.53,673.807 1436.09,641.244 1436.65,631.052 1437.21,651.896 1437.77,606.142 1438.33,627.663 1438.88,664.065 1439.44,693.237 1440,708.37 1440.56,709.476 1441.12,705.929 1441.68,706.596 1442.24,722.873 1442.8,686.79 1443.36,673.289 1443.92,670.243 1444.48,673.129 1445.04,675.852 1445.6,727.87 1446.15,738.276 1446.71,769.101 1447.27,778.243 1447.83,773.105 1448.39,736.315 1448.95,717.894 1449.51,682.016 1450.07,637.74 1450.63,638.578 1451.19,640.484 1451.75,677.266 1452.31,645.024 1452.87,630.25 1453.42,622.181 1453.98,642.832 1454.54,651.971 1455.1,668.905 1455.66,667.424 1456.22,718.083 1456.78,713.313 1457.34,683.367 1457.9,714.182 1458.46,727.308 1459.02,675.651 1459.58,690.232 1460.14,718.931 1460.7,699.048 1461.25,714.641 1461.81,711.514 1462.37,724.548 1462.93,725.727 1463.49,724.914 1464.05,706.58 1464.61,719.375 1465.17,701.19 1465.73,700.369 1466.29,686.576 1466.85,687.783 1467.41,691.21 1467.97,673.143 1468.52,671.041 1469.08,654.199 1469.64,638.86 1470.2,642.228 1470.76,660.875 1471.32,644.457 1471.88,646.109 1472.44,640.834 1473,642.716 1473.56,663.909 1474.12,612.505 1474.68,616.956 1475.24,635.346 1475.79,649.275 1476.35,619.421 1476.91,639.462 1477.47,638.793 1478.03,639.657 1478.59,607.457 1479.15,597.332 1479.71,600.785 1480.27,591.142 1480.83,581.636 1481.39,604.927 1481.95,623.786 1482.51,611.745 1483.07,632.013 1483.62,632.351 1484.18,636.402 1484.74,623.301 1485.3,622.544 1485.86,591.181 1486.42,628.665 1486.98,646.348 1487.54,679.641 1488.1,662.076 1488.66,664.818 1489.22,665.875 1489.78,668.613 1490.34,684.137 1490.89,653.661 1491.45,673.083 1492.01,645.408 1492.57,627.757 1493.13,614.678 1493.69,618.983 1494.25,621.139 1494.81,624.285 1495.37,608.761 1495.93,600.174 1496.49,605.563 1497.05,643.765 1497.61,662.576 1498.16,645.903 1498.72,682.348 1499.28,682.794 1499.84,683.509 1500.4,671.163 1500.96,673.312 1501.52,685.099 1502.08,704.31 1502.64,706.122 1503.2,720.619 1503.76,767.146 1504.32,729.685 1504.88,730.994 1505.44,712.173 1505.99,693.54 1506.55,724.174 1507.11,723.485 1507.67,706.096 1508.23,751.493 1508.79,763.234 1509.35,759.519 1509.91,767.362 1510.47,730.922 1511.03,715.04 1511.59,712.917 1512.15,711.285 1512.71,726.159 1513.26,709.198 1513.82,708.754 1514.38,688.431 1514.94,720.04 1515.5,688.265 1516.06,720.882 1516.62,685.45 1517.18,666.642 1517.74,679.49 1518.3,680.097 1518.86,727.462 1519.42,728.582 1519.98,724.035 1520.53,722.522 1521.09,737.793 1521.65,701.066 1522.21,733.324 1522.77,763.395 1523.33,758.903 1523.89,738.884 1524.45,763.623 1525.01,777.962 1525.57,772.296 1526.13,773.512 1526.69,815.332 1527.25,809.505 1527.81,790.131 1528.36,801.108 1528.92,798.976 1529.48,790.507 1530.04,787.858 1530.6,782.658 1531.16,792.419 1531.72,817.778 1532.28,825.326 1532.84,817.264 1533.4,809.164 1533.96,834.087 1534.52,809.931 1535.08,785.806 1535.63,812.748 1536.19,820.84 1536.75,780.43 1537.31,744.275 1537.87,739.696 1538.43,686.55 1538.99,717.783 1539.55,714.306 1540.11,711.255 1540.67,695.147 1541.23,680.549 1541.79,664.174 1542.35,615.41 1542.9,570.562 1543.46,573.728 1544.02,578.18 1544.58,567.127 1545.14,540.816 1545.7,547.686 1546.26,571.439 1546.82,579.708 1547.38,602.337 1547.94,623.041 1548.5,645.345 1549.06,627.751 1549.62,613.725 1550.18,631.741 1550.73,684.915 1551.29,653.306 1551.85,669.728 1552.41,686.696 1552.97,671.428 1553.53,687.616 1554.09,688.713 1554.65,668.859 1555.21,686.344 1555.77,691.513 1556.33,675.478 1556.89,659.357 1557.45,660.511 1558,631.348 1558.56,651.362 1559.12,701.344 1559.68,704.052 1560.24,690.005 1560.8,641.751 1561.36,646.218 1561.92,651.729 1562.48,657.666 1563.04,691.917 1563.6,692.366 1564.16,676.821 1564.72,609.606 1565.28,581.666 1565.83,603.349 1566.39,607.515 1566.95,611.835 1567.51,616.832 1568.07,622.125 1568.63,627.872 1569.19,633.403 1569.75,670.07 1570.31,672.256 1570.87,687.464 1571.43,701.654 1571.99,699.83 1572.55,681.809 1573.1,684.173 1573.66,695.996 1574.22,660.845 1574.78,663.574 1575.34,682.771 1575.9,688.852 1576.46,704.97 1577.02,702.47 1577.58,685.118 1578.14,683.1 1578.7,699.102 1579.26,696.251 1579.82,712.115 1580.37,745.81 1580.93,774.282 1581.49,801.176 1582.05,810.342 1582.61,804.724 1583.17,829.147 1583.73,807.339 1584.29,784.637 1584.85,731.011 1585.41,683.738 1585.97,668.913 1586.53,668.955 1587.09,666.123 1587.65,684.502 1588.2,650.292 1588.76,622.185 1589.32,626.983 1589.88,594.286 1590.44,563.451 1591,572.285 1591.56,581.698 1592.12,585.732 1592.68,605.704 1593.24,608.858 1593.8,615.139 1594.36,599.896 1594.92,622.605 1595.47,626.203 1596.03,631.927 1596.59,635.1 1597.15,622.808 1597.71,612.45 1598.27,618.158 1598.83,655.284 1599.39,654.377 1599.95,672.3 1600.51,688.603 1601.07,675.349 1601.63,691.912 1602.19,674.503 1602.74,674.055 1603.3,672.116 1603.86,674.609 1604.42,691.705 1604.98,709.39 1605.54,722.786 1606.1,722.228 1606.66,719.152 1607.22,729.368 1607.78,711.932 1608.34,710.16 1608.9,708.261 1609.46,693.081 1610.02,726.846 1610.57,711.585 1611.13,695.304 1611.69,695.44 1612.25,710.813 1612.81,657.953 1613.37,647.515 1613.93,680.183 1614.49,682.429 1615.05,668.871 1615.61,651.306 1616.17,639.456 1616.73,676.046 1617.29,650.925 1617.84,657.038 1618.4,643.687 1618.96,628.931 1619.52,634.998 1620.08,684.642 1620.64,685.621 1621.2,651.579 1621.76,688.472 1622.32,689.234 1622.88,705.282 1623.44,720.609 1624,715.998 1624.56,731.04 1625.11,744.526 1625.67,756.42 1626.23,737.629 1626.79,719.324 1627.35,717.852 1627.91,709.236 1628.47,740.804 1629.03,739.336 1629.59,736.547 1630.15,749.47 1630.71,746.917 1631.27,727.754 1631.83,739.643 1632.39,734.894 1632.94,746.625 1633.5,776.406 1634.06,769.811 1634.62,748.293 1635.18,745.712 1635.74,761.622 1636.3,773.169 1636.86,754.11 1637.42,684.931 1637.98,718.112 1638.54,701.998 1639.1,716.028 1639.66,729.119 1640.21,680.658 1640.77,647.494 1641.33,647.652 1641.89,667.229 1642.45,684.169 1643.01,683.296 1643.57,667.222 1644.13,684.461 1644.69,684.418 1645.25,716.888 1645.81,697.449 1646.37,693.653 1646.93,690.853 1647.48,693.275 1648.04,691.113 1648.6,704.394 1649.16,752.065 1649.72,763.779 1650.28,756.986 1650.84,752.759 1651.4,729.012 1651.96,726.82 1652.52,705.03 1653.08,687.046 1653.64,703.185 1654.2,698.553 1654.76,683.169 1655.31,700.077 1655.87,699.648 1656.43,699.133 1656.99,695.87 1657.55,694.375 1658.11,664.186 1658.67,650.958 1659.23,669.061 1659.79,655.431 1660.35,705.011 1660.91,689.16 1661.47,703.344 1662.03,669.426 1662.58,673.157 1663.14,657.763 1663.7,626.603 1664.26,626.897 1664.82,677.318 1665.38,708.769 1665.94,689.301 1666.5,672.963 1667.06,638.717 1667.62,655.227 1668.18,673.007 1668.74,692.015 1669.3,692.218 1669.85,706.723 1670.41,721.956 1670.97,753.359 1671.53,734.472 1672.09,715.699 1672.65,715.226 1673.21,729.7 1673.77,760.031 1674.33,738.27 1674.89,735.937 1675.45,719.207 1676.01,699.317 1676.57,697.864 1677.13,710.947 1677.68,691.036 1678.24,672.767 1678.8,651.857 1679.36,657.423 1679.92,670.684 1680.48,658.243 1681.04,611.347 1681.6,635.616 1682.16,623.824 1682.72,657.739 1683.28,612.148 1683.84,569.165 1684.4,592.734 1684.95,614.86 1685.51,633.283 1686.07,671.459 1686.63,704.183 1687.19,717.212 1687.75,732.854 1688.31,717.1 1688.87,715.237 1689.43,730.719 1689.99,727.496 1690.55,694.022 1691.11,677.092 1691.67,643.322 1692.23,679.706 1692.78,677.649 1693.34,711.004 1693.9,725.38 1694.46,724.224 1695.02,723.54 1695.58,752.841 1696.14,782.065 1696.7,794.107 1697.26,806.716 1697.82,813.501 1698.38,803.883 1698.94,795.773 1699.5,789.926 1700.05,803.251 1700.61,830.161 1701.17,837.926 1701.73,827.906 1702.29,787.937 1702.85,798.643 1703.41,792.511 1703.97,772.789 1704.53,766.982 1705.09,762.58 1705.65,773.106 1706.21,748.573 1706.77,747.746 1707.32,731.034 1707.88,709.03 1708.44,658.538 1709,641.004 1709.56,647.217 1710.12,678.161 1710.68,649.715 1711.24,618.065 1711.8,609.062 1712.36,630.046 1712.92,649.461 1713.48,636.183 1714.04,587.441 1714.6,594.121 1715.15,547.147 1715.71,519.847 1716.27,513.962 1716.83,538.685 1717.39,561.971 1717.95,524.109 1718.51,498.034 1719.07,538.149 1719.63,544.515 1720.19,537.207 1720.75,560.216 1721.31,556.128 1721.87,643.761 1722.42,661.992 1722.98,648.681 1723.54,651.157 1724.1,686.763 1724.66,652.256 1725.22,651.962 1725.78,668.684 1726.34,717.257 1726.9,712.958 1727.46,712.8 1728.02,713.358 1728.58,709.581 1729.14,696.713 1729.69,680.177 1730.25,690.983 1730.81,739.923 1731.37,755.225 1731.93,753.561 1732.49,735.627 1733.05,698.901 1733.61,697.542 1734.17,697.689 1734.73,696.09 1735.29,694.398 1735.85,706.636 1736.41,721.369 1736.97,704.227 1737.52,719.484 1738.08,715.778 1738.64,699.761 1739.2,704.903 1739.76,720.185 1740.32,688.335 1740.88,687.106 1741.44,687.521 1742,668.739 1742.56,654.906 1743.12,623.608 1743.68,625.262 1744.24,659.547 1744.79,661.467 1745.35,646.216 1745.91,632.165 1746.47,616.616 1747.03,570.944 1747.59,594.469 1748.15,598.25 1748.71,602.87 1749.27,607.848 1749.83,626.514 1750.39,613.95 1750.95,613.59 1751.51,614.97 1752.06,601.356 1752.62,621.241 1753.18,625.393 1753.74,627.073 1754.3,647.122 1754.86,681.223 1755.42,666.453 1755.98,718.049 1756.54,731.145 1757.1,731.564 1757.66,744.812 1758.22,740.217 1758.78,738.672 1759.34,717.04 1759.89,699.885 1760.45,682.955 1761.01,714.974 1761.57,712.627 1762.13,712.068 1762.69,758.341 1763.25,752.762 1763.81,735.231 1764.37,734.866 1764.93,714.656 1765.49,697.438 1766.05,712.52 1766.61,708.153 1767.16,705.537 1767.72,705.087 1768.28,721.429 1768.84,706.476 1769.4,690.862 1769.96,687.692 1770.52,704.101 1771.08,688.975 1771.64,689.759 1772.2,685.841 1772.76,682.626 1773.32,699.003 1773.88,694.404 1774.43,665.163 1774.99,665.858 1775.55,683.649 1776.11,701.031 1776.67,685.177 1777.23,666.293 1777.79,682.615 1778.35,683.549 1778.91,680.915 1779.47,647.428 1780.03,664.17 1780.59,680.766 1781.15,679.585 1781.71,713.805 1782.26,681.268 1782.82,714.824 1783.38,694.969 1783.94,694.614 1784.5,692.228 1785.06,643.723 1785.62,645.722 1786.18,648.808 1786.74,637.602 1787.3,626.955 1787.86,646.613 1788.42,650.728 1788.98,667.529 1789.53,667.185 1790.09,650.664 1790.65,666.257 1791.21,633.475 1791.77,614.995 1792.33,587.404 1792.89,614.234 1793.45,613.966 1794.01,570.796 1794.57,559.544 1795.13,571.438 1795.69,576.447 1796.25,563.065 1796.8,599.995 1797.36,638.35 1797.92,658.332 1798.48,663.146 1799.04,648.625 1799.6,634.663 1800.16,654.937 1800.72,673.645 1801.28,687.665 1801.84,684.718 1802.4,668.394 1802.96,651.186 1803.52,654.829 1804.08,642.192 1804.63,663.827 1805.19,665.903 1805.75,666.738 1806.31,687.494 1806.87,701.288 1807.43,699.436 1807.99,762.044 1808.55,726.505 1809.11,692.39 1809.67,692.881 1810.23,727.716 1810.79,710.615 1811.35,711.373 1811.9,727.787 1812.46,724.377 1813.02,737.468 1813.58,701.435 1814.14,718.334 1814.7,721.122 1815.26,704.68 1815.82,721.085 1816.38,751.888 1816.94,762.956 1817.5,730.253 1818.06,729.645 1818.62,728.535 1819.18,696.205 1819.73,682.063 1820.29,697.047 1820.85,696.046 1821.41,679.248 1821.97,712.195 1822.53,728.228 1823.09,778.652 1823.65,754.048 1824.21,783.298 1824.77,761.22 1825.33,739.527 1825.89,737.286 1826.45,765.967 1827,761.639 1827.56,726.483 1828.12,705.937 1828.68,670.311 1829.24,670.973 1829.8,656.189 1830.36,655.923 1830.92,674.574 1831.48,661.747 1832.04,711.049 1832.6,708.6 1833.16,706.462 1833.72,703.377 1834.27,682.085 1834.83,714.144 1835.39,680.55 1835.95,694.478 1836.51,708.188 1837.07,705.094 1837.63,703.587 1838.19,734.725 \"/>\n<path clip-path=\"url(#clip333)\" d=\"M720.247 692.086 L720.806 692.086 L721.365 692.086 L721.924 692.086 L722.484 692.086 L723.043 692.086 L723.602 692.086 L724.161 692.086 L724.721 692.086 L725.28 692.086 L725.839 692.086 L726.398 692.086 L726.958 692.086 L727.517 692.086 L728.076 692.086 L728.635 692.086 L729.195 692.086 L729.754 692.086 L730.313 692.086 L730.872 692.086 L731.432 692.086 L731.991 692.086 L732.55 692.086 L733.109 692.086 L733.669 692.086 L734.228 692.086 L734.787 692.086 L735.346 692.086 L735.906 692.086 L736.465 692.086 L737.024 692.086 L737.583 692.086 L738.143 692.086 L738.702 692.086 L739.261 692.086 L739.82 692.086 L740.38 692.086 L740.939 692.086 L741.498 692.086 L742.057 692.086 L742.617 692.086 L743.176 692.086 L743.735 692.086 L744.294 692.086 L744.854 692.086 L745.413 692.086 L745.972 692.086 L746.531 692.086 L747.091 692.086 L747.65 692.086 L748.209 692.086 L748.768 692.086 L749.328 692.086 L749.887 692.086 L750.446 692.086 L751.005 692.086 L751.565 692.086 L752.124 692.086 L752.683 692.086 L753.242 692.086 L753.802 692.086 L754.361 692.086 L754.92 692.086 L755.479 692.086 L756.039 692.086 L756.598 692.086 L757.157 692.086 L757.716 692.086 L758.276 692.086 L758.835 692.086 L759.394 692.086 L759.953 692.086 L760.513 692.086 L761.072 692.086 L761.631 692.086 L762.19 692.086 L762.75 692.086 L763.309 692.086 L763.868 692.086 L764.427 692.086 L764.987 692.086 L765.546 692.086 L766.105 692.086 L766.664 692.086 L767.224 692.086 L767.783 692.086 L768.342 692.086 L768.901 692.086 L769.461 692.086 L770.02 692.086 L770.579 692.086 L771.138 692.086 L771.698 692.086 L772.257 692.086 L772.816 692.086 L773.375 692.086 L773.935 692.086 L774.494 692.086 L775.053 692.086 L775.612 692.086 L776.172 692.086 L776.731 692.086 L777.29 692.086 L777.849 692.086 L778.409 692.086 L778.968 692.086 L779.527 692.086 L780.086 692.086 L780.646 692.086 L781.205 692.086 L781.764 692.086 L782.323 692.086 L782.883 692.086 L783.442 692.086 L784.001 692.086 L784.56 692.086 L785.12 692.086 L785.679 692.086 L786.238 692.086 L786.797 692.086 L787.357 692.086 L787.916 692.086 L788.475 692.086 L789.034 692.086 L789.594 692.086 L790.153 692.086 L790.712 692.086 L791.271 692.086 L791.831 692.086 L792.39 692.086 L792.949 692.086 L793.508 692.086 L794.068 692.086 L794.627 692.086 L795.186 692.086 L795.745 692.086 L796.305 692.086 L796.864 692.086 L797.423 692.086 L797.982 692.086 L798.542 692.086 L799.101 692.086 L799.66 692.086 L800.219 692.086 L800.779 692.086 L801.338 692.086 L801.897 692.086 L802.456 692.086 L803.016 692.086 L803.575 692.086 L804.134 692.086 L804.693 692.086 L805.253 692.086 L805.812 692.086 L806.371 692.086 L806.931 692.086 L807.49 692.086 L808.049 692.086 L808.608 692.086 L809.168 692.086 L809.727 692.086 L810.286 692.086 L810.845 692.086 L811.405 692.086 L811.964 692.086 L812.523 692.086 L813.082 692.086 L813.642 692.086 L814.201 692.086 L814.76 692.086 L815.319 692.086 L815.879 692.086 L816.438 692.086 L816.997 692.086 L817.556 692.086 L818.116 692.086 L818.675 692.086 L819.234 692.086 L819.793 692.086 L820.353 692.086 L820.912 692.086 L821.471 692.086 L822.03 692.086 L822.59 692.086 L823.149 692.086 L823.708 692.086 L824.267 692.086 L824.827 692.086 L825.386 692.086 L825.945 692.086 L826.504 692.086 L827.064 692.086 L827.623 692.086 L828.182 692.086 L828.741 692.086 L829.301 692.086 L829.86 692.086 L830.419 692.086 L830.978 692.086 L831.538 692.086 L832.097 692.086 L832.656 692.086 L833.215 692.086 L833.775 692.086 L834.334 692.086 L834.893 692.086 L835.452 692.086 L836.012 692.086 L836.571 692.086 L837.13 692.086 L837.689 692.086 L838.249 692.086 L838.808 692.086 L839.367 692.086 L839.926 692.086 L840.486 692.086 L841.045 692.086 L841.604 692.086 L842.163 692.086 L842.723 692.086 L843.282 692.086 L843.841 692.086 L844.4 692.086 L844.96 692.086 L845.519 692.086 L846.078 692.086 L846.637 692.086 L847.197 692.086 L847.756 692.086 L848.315 692.086 L848.874 692.086 L849.434 692.086 L849.993 692.086 L850.552 692.086 L851.111 692.086 L851.671 692.086 L852.23 692.086 L852.789 692.086 L853.348 692.086 L853.908 692.086 L854.467 692.086 L855.026 692.086 L855.585 692.086 L856.145 692.086 L856.704 692.086 L857.263 692.086 L857.822 692.086 L858.382 692.086 L858.941 692.086 L859.5 692.086 L860.059 692.086 L860.619 692.086 L861.178 692.086 L861.737 692.086 L862.296 692.086 L862.856 692.086 L863.415 692.086 L863.974 692.086 L864.533 692.086 L865.093 692.086 L865.652 692.086 L866.211 692.086 L866.77 692.086 L867.33 692.086 L867.889 692.086 L868.448 692.086 L869.007 692.086 L869.567 692.086 L870.126 692.086 L870.685 692.086 L871.244 692.086 L871.804 692.086 L872.363 692.086 L872.922 692.086 L873.481 692.086 L874.041 692.086 L874.6 692.086 L875.159 692.086 L875.718 692.086 L876.278 692.086 L876.837 692.086 L877.396 692.086 L877.955 692.086 L878.515 692.086 L879.074 692.086 L879.633 692.086 L880.192 692.086 L880.752 692.086 L881.311 692.086 L881.87 692.086 L882.429 692.086 L882.989 692.086 L883.548 692.086 L884.107 692.086 L884.666 692.086 L885.226 692.086 L885.785 692.086 L886.344 692.086 L886.903 692.086 L887.463 692.086 L888.022 692.086 L888.581 692.086 L889.14 692.086 L889.7 692.086 L890.259 692.086 L890.818 692.086 L891.377 692.086 L891.937 692.086 L892.496 692.086 L893.055 692.086 L893.614 692.086 L894.174 692.086 L894.733 692.086 L895.292 692.086 L895.851 692.086 L896.411 692.086 L896.97 692.086 L897.529 692.086 L898.088 692.086 L898.648 692.086 L899.207 692.086 L899.766 692.086 L900.325 692.086 L900.885 692.086 L901.444 692.086 L902.003 692.086 L902.562 692.086 L903.122 692.086 L903.681 692.086 L904.24 692.086 L904.799 692.086 L905.359 692.086 L905.918 692.086 L906.477 692.086 L907.036 692.086 L907.596 692.086 L908.155 692.086 L908.714 692.086 L909.273 692.086 L909.833 692.086 L910.392 692.086 L910.951 692.086 L911.51 692.086 L912.07 692.086 L912.629 692.086 L913.188 692.086 L913.747 692.086 L914.307 692.086 L914.866 692.086 L915.425 692.086 L915.984 692.086 L916.544 692.086 L917.103 692.086 L917.662 692.086 L918.221 692.086 L918.781 692.086 L919.34 692.086 L919.899 692.086 L920.458 692.086 L921.018 692.086 L921.577 692.086 L922.136 692.086 L922.695 692.086 L923.255 692.086 L923.814 692.086 L924.373 692.086 L924.932 692.086 L925.492 692.086 L926.051 692.086 L926.61 692.086 L927.169 692.086 L927.729 692.086 L928.288 692.086 L928.847 692.086 L929.406 692.086 L929.966 692.086 L930.525 692.086 L931.084 692.086 L931.644 692.086 L932.203 692.086 L932.762 692.086 L933.321 692.086 L933.881 692.086 L934.44 692.086 L934.999 692.086 L935.558 692.086 L936.118 692.086 L936.677 692.086 L937.236 692.086 L937.795 692.086 L938.355 692.086 L938.914 692.086 L939.473 692.086 L940.032 692.086 L940.592 692.086 L941.151 692.086 L941.71 692.086 L942.269 692.086 L942.829 692.086 L943.388 692.086 L943.947 692.086 L944.506 692.086 L945.066 692.086 L945.625 692.086 L946.184 692.086 L946.743 692.086 L947.303 692.086 L947.862 692.086 L948.421 692.086 L948.98 692.086 L949.54 692.086 L950.099 692.086 L950.658 692.086 L951.217 692.086 L951.777 692.086 L952.336 692.086 L952.895 692.086 L953.454 692.086 L954.014 692.086 L954.573 692.086 L955.132 692.086 L955.691 692.086 L956.251 692.086 L956.81 692.086 L957.369 692.086 L957.928 692.086 L958.488 692.086 L959.047 692.086 L959.606 692.086 L960.165 692.086 L960.725 692.086 L961.284 692.086 L961.843 692.086 L962.402 692.086 L962.962 692.086 L963.521 692.086 L964.08 692.086 L964.639 692.086 L965.199 692.086 L965.758 692.086 L966.317 692.086 L966.876 692.086 L967.436 692.086 L967.995 692.086 L968.554 692.086 L969.113 692.086 L969.673 692.086 L970.232 692.086 L970.791 692.086 L971.35 692.086 L971.91 692.086 L972.469 692.086 L973.028 692.086 L973.587 692.086 L974.147 692.086 L974.706 692.086 L975.265 692.086 L975.824 692.086 L976.384 692.086 L976.943 692.086 L977.502 692.086 L978.061 692.086 L978.621 692.086 L979.18 692.086 L979.739 692.086 L980.298 692.086 L980.858 692.086 L981.417 692.086 L981.976 692.086 L982.535 692.086 L983.095 692.086 L983.654 692.086 L984.213 692.086 L984.772 692.086 L985.332 692.086 L985.891 692.086 L986.45 692.086 L987.009 692.086 L987.569 692.086 L988.128 692.086 L988.687 692.086 L989.246 692.086 L989.806 692.086 L990.365 692.086 L990.924 692.086 L991.483 692.086 L992.043 692.086 L992.602 692.086 L993.161 692.086 L993.72 692.086 L994.28 692.086 L994.839 692.086 L995.398 692.086 L995.957 692.086 L996.517 692.086 L997.076 692.086 L997.635 692.086 L998.194 692.086 L998.754 692.086 L999.313 692.086 L999.872 692.086 L1000.43 692.086 L1000.99 692.086 L1001.55 692.086 L1002.11 692.086 L1002.67 692.086 L1003.23 692.086 L1003.79 692.086 L1004.35 692.086 L1004.91 692.086 L1005.46 692.086 L1006.02 692.086 L1006.58 692.086 L1007.14 692.086 L1007.7 692.086 L1008.26 692.086 L1008.82 692.086 L1009.38 692.086 L1009.94 692.086 L1010.5 692.086 L1011.06 692.086 L1011.62 692.086 L1012.18 692.086 L1012.73 692.086 L1013.29 692.086 L1013.85 692.086 L1014.41 692.086 L1014.97 692.086 L1015.53 692.086 L1016.09 692.086 L1016.65 692.086 L1017.21 692.086 L1017.77 692.086 L1018.33 692.086 L1018.89 692.086 L1019.45 692.086 L1020.01 692.086 L1020.56 692.086 L1021.12 692.086 L1021.68 692.086 L1022.24 692.086 L1022.8 692.086 L1023.36 692.086 L1023.92 692.086 L1024.48 692.086 L1025.04 692.086 L1025.6 692.086 L1026.16 692.086 L1026.72 692.086 L1027.28 692.086 L1027.83 692.086 L1028.39 692.086 L1028.95 692.086 L1029.51 692.086 L1030.07 692.086 L1030.63 692.086 L1031.19 692.086 L1031.75 692.086 L1032.31 692.086 L1032.87 692.086 L1033.43 692.086 L1033.99 692.086 L1034.55 692.086 L1035.1 692.086 L1035.66 692.086 L1036.22 692.086 L1036.78 692.086 L1037.34 692.086 L1037.9 692.086 L1038.46 692.086 L1039.02 692.086 L1039.58 692.086 L1040.14 692.086 L1040.7 692.086 L1041.26 692.086 L1041.82 692.086 L1042.38 692.086 L1042.93 692.086 L1043.49 692.086 L1044.05 692.086 L1044.61 692.086 L1045.17 692.086 L1045.73 692.086 L1046.29 692.086 L1046.85 692.086 L1047.41 692.086 L1047.97 692.086 L1048.53 692.086 L1049.09 692.086 L1049.65 692.086 L1050.2 692.086 L1050.76 692.086 L1051.32 692.086 L1051.88 692.086 L1052.44 692.086 L1053 692.086 L1053.56 692.086 L1054.12 692.086 L1054.68 692.086 L1055.24 692.086 L1055.8 692.086 L1056.36 692.086 L1056.92 692.086 L1057.48 692.086 L1058.03 692.086 L1058.59 692.086 L1059.15 692.086 L1059.71 692.086 L1060.27 692.086 L1060.83 692.086 L1061.39 692.086 L1061.95 692.086 L1062.51 692.086 L1063.07 692.086 L1063.63 692.086 L1064.19 692.086 L1064.75 692.086 L1065.3 692.086 L1065.86 692.086 L1066.42 692.086 L1066.98 692.086 L1067.54 692.086 L1068.1 692.086 L1068.66 692.086 L1069.22 692.086 L1069.78 692.086 L1070.34 692.086 L1070.9 692.086 L1071.46 692.086 L1072.02 692.086 L1072.57 692.086 L1073.13 692.086 L1073.69 692.086 L1074.25 692.086 L1074.81 692.086 L1075.37 692.086 L1075.93 692.086 L1076.49 692.086 L1077.05 692.086 L1077.61 692.086 L1078.17 692.086 L1078.73 692.086 L1079.29 692.086 L1079.85 692.086 L1080.4 692.086 L1080.96 692.086 L1081.52 692.086 L1082.08 692.086 L1082.64 692.086 L1083.2 692.086 L1083.76 692.086 L1084.32 692.086 L1084.88 692.086 L1085.44 692.086 L1086 692.086 L1086.56 692.086 L1087.12 692.086 L1087.67 692.086 L1088.23 692.086 L1088.79 692.086 L1089.35 692.086 L1089.91 692.086 L1090.47 692.086 L1091.03 692.086 L1091.59 692.086 L1092.15 692.086 L1092.71 692.086 L1093.27 692.086 L1093.83 692.086 L1094.39 692.086 L1094.94 692.086 L1095.5 692.086 L1096.06 692.086 L1096.62 692.086 L1097.18 692.086 L1097.74 692.086 L1098.3 692.086 L1098.86 692.086 L1099.42 692.086 L1099.98 692.086 L1100.54 692.086 L1101.1 692.086 L1101.66 692.086 L1102.22 692.086 L1102.77 692.086 L1103.33 692.086 L1103.89 692.086 L1104.45 692.086 L1105.01 692.086 L1105.57 692.086 L1106.13 692.086 L1106.69 692.086 L1107.25 692.086 L1107.81 692.086 L1108.37 692.086 L1108.93 692.086 L1109.49 692.086 L1110.04 692.086 L1110.6 692.086 L1111.16 692.086 L1111.72 692.086 L1112.28 692.086 L1112.84 692.086 L1113.4 692.086 L1113.96 692.086 L1114.52 692.086 L1115.08 692.086 L1115.64 692.086 L1116.2 692.086 L1116.76 692.086 L1117.31 692.086 L1117.87 692.086 L1118.43 692.086 L1118.99 692.086 L1119.55 692.086 L1120.11 692.086 L1120.67 692.086 L1121.23 692.086 L1121.79 692.086 L1122.35 692.086 L1122.91 692.086 L1123.47 692.086 L1124.03 692.086 L1124.59 692.086 L1125.14 692.086 L1125.7 692.086 L1126.26 692.086 L1126.82 692.086 L1127.38 692.086 L1127.94 692.086 L1128.5 692.086 L1129.06 692.086 L1129.62 692.086 L1130.18 692.086 L1130.74 692.086 L1131.3 692.086 L1131.86 692.086 L1132.41 692.086 L1132.97 692.086 L1133.53 692.086 L1134.09 692.086 L1134.65 692.086 L1135.21 692.086 L1135.77 692.086 L1136.33 692.086 L1136.89 692.086 L1137.45 692.086 L1138.01 692.086 L1138.57 692.086 L1139.13 692.086 L1139.68 692.086 L1140.24 692.086 L1140.8 692.086 L1141.36 692.086 L1141.92 692.086 L1142.48 692.086 L1143.04 692.086 L1143.6 692.086 L1144.16 692.086 L1144.72 692.086 L1145.28 692.086 L1145.84 692.086 L1146.4 692.086 L1146.96 692.086 L1147.51 692.086 L1148.07 692.086 L1148.63 692.086 L1149.19 692.086 L1149.75 692.086 L1150.31 692.086 L1150.87 692.086 L1151.43 692.086 L1151.99 692.086 L1152.55 692.086 L1153.11 692.086 L1153.67 692.086 L1154.23 692.086 L1154.78 692.086 L1155.34 692.086 L1155.9 692.086 L1156.46 692.086 L1157.02 692.086 L1157.58 692.086 L1158.14 692.086 L1158.7 692.086 L1159.26 692.086 L1159.82 692.086 L1160.38 692.086 L1160.94 692.086 L1161.5 692.086 L1162.05 692.086 L1162.61 692.086 L1163.17 692.086 L1163.73 692.086 L1164.29 692.086 L1164.85 692.086 L1165.41 692.086 L1165.97 692.086 L1166.53 692.086 L1167.09 692.086 L1167.65 692.086 L1168.21 692.086 L1168.77 692.086 L1169.33 692.086 L1169.88 692.086 L1170.44 692.086 L1171 692.086 L1171.56 692.086 L1172.12 692.086 L1172.68 692.086 L1173.24 692.086 L1173.8 692.086 L1174.36 692.086 L1174.92 692.086 L1175.48 692.086 L1176.04 692.086 L1176.6 692.086 L1177.15 692.086 L1177.71 692.086 L1178.27 692.086 L1178.83 692.086 L1179.39 692.086 L1179.95 692.086 L1180.51 692.086 L1181.07 692.086 L1181.63 692.086 L1182.19 692.086 L1182.75 692.086 L1183.31 692.086 L1183.87 692.086 L1184.43 692.086 L1184.98 692.086 L1185.54 692.086 L1186.1 692.086 L1186.66 692.086 L1187.22 692.086 L1187.78 692.086 L1188.34 692.086 L1188.9 692.086 L1189.46 692.086 L1190.02 692.086 L1190.58 692.086 L1191.14 692.086 L1191.7 692.086 L1192.25 692.086 L1192.81 692.086 L1193.37 692.086 L1193.93 692.086 L1194.49 692.086 L1195.05 692.086 L1195.61 692.086 L1196.17 692.086 L1196.73 692.086 L1197.29 692.086 L1197.85 692.086 L1198.41 692.086 L1198.97 692.086 L1199.52 692.086 L1200.08 692.086 L1200.64 692.086 L1201.2 692.086 L1201.76 692.086 L1202.32 692.086 L1202.88 692.086 L1203.44 692.086 L1204 692.086 L1204.56 692.086 L1205.12 692.086 L1205.68 692.086 L1206.24 692.086 L1206.8 692.086 L1207.35 692.086 L1207.91 692.086 L1208.47 692.086 L1209.03 692.086 L1209.59 692.086 L1210.15 692.086 L1210.71 692.086 L1211.27 692.086 L1211.83 692.086 L1212.39 692.086 L1212.95 692.086 L1213.51 692.086 L1214.07 692.086 L1214.62 692.086 L1215.18 692.086 L1215.74 692.086 L1216.3 692.086 L1216.86 692.086 L1217.42 692.086 L1217.98 692.086 L1218.54 692.086 L1219.1 692.086 L1219.66 692.086 L1220.22 692.086 L1220.78 692.086 L1221.34 692.086 L1221.89 692.086 L1222.45 692.086 L1223.01 692.086 L1223.57 692.086 L1224.13 692.086 L1224.69 692.086 L1225.25 692.086 L1225.81 692.086 L1226.37 692.086 L1226.93 692.086 L1227.49 692.086 L1228.05 692.086 L1228.61 692.086 L1229.17 692.086 L1229.72 692.086 L1230.28 692.086 L1230.84 692.086 L1231.4 692.086 L1231.96 692.086 L1232.52 692.086 L1233.08 692.086 L1233.64 692.086 L1234.2 692.086 L1234.76 692.086 L1235.32 692.086 L1235.88 692.086 L1236.44 692.086 L1236.99 692.086 L1237.55 692.086 L1238.11 692.086 L1238.67 692.086 L1239.23 692.086 L1239.79 692.086 L1240.35 692.086 L1240.91 692.086 L1241.47 692.086 L1242.03 692.086 L1242.59 692.086 L1243.15 692.086 L1243.71 692.086 L1244.26 692.086 L1244.82 692.086 L1245.38 692.086 L1245.94 692.086 L1246.5 692.086 L1247.06 692.086 L1247.62 692.086 L1248.18 692.086 L1248.74 692.086 L1249.3 692.086 L1249.86 692.086 L1250.42 692.086 L1250.98 692.086 L1251.54 692.086 L1252.09 692.086 L1252.65 692.086 L1253.21 692.086 L1253.77 692.086 L1254.33 692.086 L1254.89 692.086 L1255.45 692.086 L1256.01 692.086 L1256.57 692.086 L1257.13 692.086 L1257.69 692.086 L1258.25 692.086 L1258.81 692.086 L1259.36 692.086 L1259.92 692.086 L1260.48 692.086 L1261.04 692.086 L1261.6 692.086 L1262.16 692.086 L1262.72 692.086 L1263.28 692.086 L1263.84 692.086 L1264.4 692.086 L1264.96 692.086 L1265.52 692.086 L1266.08 692.086 L1266.63 692.086 L1267.19 692.086 L1267.75 692.086 L1268.31 692.086 L1268.87 692.086 L1269.43 692.086 L1269.99 692.086 L1270.55 692.086 L1271.11 692.086 L1271.67 692.086 L1272.23 692.086 L1272.79 692.086 L1273.35 692.086 L1273.91 692.086 L1274.46 692.086 L1275.02 692.086 L1275.58 692.086 L1276.14 692.086 L1276.7 692.086 L1277.26 692.086 L1277.82 692.086 L1278.38 692.086 L1278.94 692.086 L1279.5 692.086 L1280.06 692.086 L1280.62 692.086 L1281.18 692.086 L1281.73 692.086 L1282.29 692.086 L1282.85 692.086 L1283.41 692.086 L1283.97 692.086 L1284.53 692.086 L1285.09 692.086 L1285.65 692.086 L1286.21 692.086 L1286.77 692.086 L1287.33 692.086 L1287.89 692.086 L1288.45 692.086 L1289 692.086 L1289.56 692.086 L1290.12 692.086 L1290.68 692.086 L1291.24 692.086 L1291.8 692.086 L1292.36 692.086 L1292.92 692.086 L1293.48 692.086 L1294.04 692.086 L1294.6 692.086 L1295.16 692.086 L1295.72 692.086 L1296.28 692.086 L1296.83 692.086 L1297.39 692.086 L1297.95 692.086 L1298.51 692.086 L1299.07 692.086 L1299.63 692.086 L1300.19 692.086 L1300.75 692.086 L1301.31 692.086 L1301.87 692.086 L1302.43 692.086 L1302.99 692.086 L1303.55 692.086 L1304.1 692.086 L1304.66 692.086 L1305.22 692.086 L1305.78 692.086 L1306.34 692.086 L1306.9 692.086 L1307.46 692.086 L1308.02 692.086 L1308.58 692.086 L1309.14 692.086 L1309.7 692.086 L1310.26 692.086 L1310.82 692.086 L1311.38 692.086 L1311.93 692.086 L1312.49 692.086 L1313.05 692.086 L1313.61 692.086 L1314.17 692.086 L1314.73 692.086 L1315.29 692.086 L1315.85 692.086 L1316.41 692.086 L1316.97 692.086 L1317.53 692.086 L1318.09 692.086 L1318.65 692.086 L1319.2 692.086 L1319.76 692.086 L1320.32 692.086 L1320.88 692.086 L1321.44 692.086 L1322 692.086 L1322.56 692.086 L1323.12 692.086 L1323.68 692.086 L1324.24 692.086 L1324.8 692.086 L1325.36 692.086 L1325.92 692.086 L1326.47 692.086 L1327.03 692.086 L1327.59 692.086 L1328.15 692.086 L1328.71 692.086 L1329.27 692.086 L1329.83 692.086 L1330.39 692.086 L1330.95 692.086 L1331.51 692.086 L1332.07 692.086 L1332.63 692.086 L1333.19 692.086 L1333.75 692.086 L1334.3 692.086 L1334.86 692.086 L1335.42 692.086 L1335.98 692.086 L1336.54 692.086 L1337.1 692.086 L1337.66 692.086 L1338.22 692.086 L1338.78 692.086 L1339.34 692.086 L1339.9 692.086 L1340.46 692.086 L1341.02 692.086 L1341.57 692.086 L1342.13 692.086 L1342.69 692.086 L1343.25 692.086 L1343.81 692.086 L1344.37 692.086 L1344.93 692.086 L1345.49 692.086 L1346.05 692.086 L1346.61 692.086 L1347.17 692.086 L1347.73 692.086 L1348.29 692.086 L1348.84 692.086 L1349.4 692.086 L1349.96 692.086 L1350.52 692.086 L1351.08 692.086 L1351.64 692.086 L1352.2 692.086 L1352.76 692.086 L1353.32 692.086 L1353.88 692.086 L1354.44 692.086 L1355 692.086 L1355.56 692.086 L1356.12 692.086 L1356.67 692.086 L1357.23 692.086 L1357.79 692.086 L1358.35 692.086 L1358.91 692.086 L1359.47 692.086 L1360.03 692.086 L1360.59 692.086 L1361.15 692.086 L1361.71 692.086 L1362.27 692.086 L1362.83 692.086 L1363.39 692.086 L1363.94 692.086 L1364.5 692.086 L1365.06 692.086 L1365.62 692.086 L1366.18 692.086 L1366.74 692.086 L1367.3 692.086 L1367.86 692.086 L1368.42 692.086 L1368.98 692.086 L1369.54 692.086 L1370.1 692.086 L1370.66 692.086 L1371.21 692.086 L1371.77 692.086 L1372.33 692.086 L1372.89 692.086 L1373.45 692.086 L1374.01 692.086 L1374.57 692.086 L1375.13 692.086 L1375.69 692.086 L1376.25 692.086 L1376.81 692.086 L1377.37 692.086 L1377.93 692.086 L1378.49 692.086 L1379.04 692.086 L1379.6 692.086 L1380.16 692.086 L1380.72 692.086 L1381.28 692.086 L1381.84 692.086 L1382.4 692.086 L1382.96 692.086 L1383.52 692.086 L1384.08 692.086 L1384.64 692.086 L1385.2 692.086 L1385.76 692.086 L1386.31 692.086 L1386.87 692.086 L1387.43 692.086 L1387.99 692.086 L1388.55 692.086 L1389.11 692.086 L1389.67 692.086 L1390.23 692.086 L1390.79 692.086 L1391.35 692.086 L1391.91 692.086 L1392.47 692.086 L1393.03 692.086 L1393.58 692.086 L1394.14 692.086 L1394.7 692.086 L1395.26 692.086 L1395.82 692.086 L1396.38 692.086 L1396.94 692.086 L1397.5 692.086 L1398.06 692.086 L1398.62 692.086 L1399.18 692.086 L1399.74 692.086 L1400.3 692.086 L1400.86 692.086 L1401.41 692.086 L1401.97 692.086 L1402.53 692.086 L1403.09 692.086 L1403.65 692.086 L1404.21 692.086 L1404.77 692.086 L1405.33 692.086 L1405.89 692.086 L1406.45 692.086 L1407.01 692.086 L1407.57 692.086 L1408.13 692.086 L1408.68 692.086 L1409.24 692.086 L1409.8 692.086 L1410.36 692.086 L1410.92 692.086 L1411.48 692.086 L1412.04 692.086 L1412.6 692.086 L1413.16 692.086 L1413.72 692.086 L1414.28 692.086 L1414.84 692.086 L1415.4 692.086 L1415.95 692.086 L1416.51 692.086 L1417.07 692.086 L1417.63 692.086 L1418.19 692.086 L1418.75 692.086 L1419.31 692.086 L1419.87 692.086 L1420.43 692.086 L1420.99 692.086 L1421.55 692.086 L1422.11 692.086 L1422.67 692.086 L1423.23 692.086 L1423.78 692.086 L1424.34 692.086 L1424.9 692.086 L1425.46 692.086 L1426.02 692.086 L1426.58 692.086 L1427.14 692.086 L1427.7 692.086 L1428.26 692.086 L1428.82 692.086 L1429.38 692.086 L1429.94 692.086 L1430.5 692.086 L1431.05 692.086 L1431.61 692.086 L1432.17 692.086 L1432.73 692.086 L1433.29 692.086 L1433.85 692.086 L1434.41 692.086 L1434.97 692.086 L1435.53 692.086 L1436.09 692.086 L1436.65 692.086 L1437.21 692.086 L1437.77 692.086 L1438.33 692.086 L1438.88 692.086 L1439.44 692.086 L1440 692.086 L1440.56 692.086 L1441.12 692.086 L1441.68 692.086 L1442.24 692.086 L1442.8 692.086 L1443.36 692.086 L1443.92 692.086 L1444.48 692.086 L1445.04 692.086 L1445.6 692.086 L1446.15 692.086 L1446.71 692.086 L1447.27 692.086 L1447.83 692.086 L1448.39 692.086 L1448.95 692.086 L1449.51 692.086 L1450.07 692.086 L1450.63 692.086 L1451.19 692.086 L1451.75 692.086 L1452.31 692.086 L1452.87 692.086 L1453.42 692.086 L1453.98 692.086 L1454.54 692.086 L1455.1 692.086 L1455.66 692.086 L1456.22 692.086 L1456.78 692.086 L1457.34 692.086 L1457.9 692.086 L1458.46 692.086 L1459.02 692.086 L1459.58 692.086 L1460.14 692.086 L1460.7 692.086 L1461.25 692.086 L1461.81 692.086 L1462.37 692.086 L1462.93 692.086 L1463.49 692.086 L1464.05 692.086 L1464.61 692.086 L1465.17 692.086 L1465.73 692.086 L1466.29 692.086 L1466.85 692.086 L1467.41 692.086 L1467.97 692.086 L1468.52 692.086 L1469.08 692.086 L1469.64 692.086 L1470.2 692.086 L1470.76 692.086 L1471.32 692.086 L1471.88 692.086 L1472.44 692.086 L1473 692.086 L1473.56 692.086 L1474.12 692.086 L1474.68 692.086 L1475.24 692.086 L1475.79 692.086 L1476.35 692.086 L1476.91 692.086 L1477.47 692.086 L1478.03 692.086 L1478.59 692.086 L1479.15 692.086 L1479.71 692.086 L1480.27 692.086 L1480.83 692.086 L1481.39 692.086 L1481.95 692.086 L1482.51 692.086 L1483.07 692.086 L1483.62 692.086 L1484.18 692.086 L1484.74 692.086 L1485.3 692.086 L1485.86 692.086 L1486.42 692.086 L1486.98 692.086 L1487.54 692.086 L1488.1 692.086 L1488.66 692.086 L1489.22 692.086 L1489.78 692.086 L1490.34 692.086 L1490.89 692.086 L1491.45 692.086 L1492.01 692.086 L1492.57 692.086 L1493.13 692.086 L1493.69 692.086 L1494.25 692.086 L1494.81 692.086 L1495.37 692.086 L1495.93 692.086 L1496.49 692.086 L1497.05 692.086 L1497.61 692.086 L1498.16 692.086 L1498.72 692.086 L1499.28 692.086 L1499.84 692.086 L1500.4 692.086 L1500.96 692.086 L1501.52 692.086 L1502.08 692.086 L1502.64 692.086 L1503.2 692.086 L1503.76 692.086 L1504.32 692.086 L1504.88 692.086 L1505.44 692.086 L1505.99 692.086 L1506.55 692.086 L1507.11 692.086 L1507.67 692.086 L1508.23 692.086 L1508.79 692.086 L1509.35 692.086 L1509.91 692.086 L1510.47 692.086 L1511.03 692.086 L1511.59 692.086 L1512.15 692.086 L1512.71 692.086 L1513.26 692.086 L1513.82 692.086 L1514.38 692.086 L1514.94 692.086 L1515.5 692.086 L1516.06 692.086 L1516.62 692.086 L1517.18 692.086 L1517.74 692.086 L1518.3 692.086 L1518.86 692.086 L1519.42 692.086 L1519.98 692.086 L1520.53 692.086 L1521.09 692.086 L1521.65 692.086 L1522.21 692.086 L1522.77 692.086 L1523.33 692.086 L1523.89 692.086 L1524.45 692.086 L1525.01 692.086 L1525.57 692.086 L1526.13 692.086 L1526.69 692.086 L1527.25 692.086 L1527.81 692.086 L1528.36 692.086 L1528.92 692.086 L1529.48 692.086 L1530.04 692.086 L1530.6 692.086 L1531.16 692.086 L1531.72 692.086 L1532.28 692.086 L1532.84 692.086 L1533.4 692.086 L1533.96 692.086 L1534.52 692.086 L1535.08 692.086 L1535.63 692.086 L1536.19 692.086 L1536.75 692.086 L1537.31 692.086 L1537.87 692.086 L1538.43 692.086 L1538.99 692.086 L1539.55 692.086 L1540.11 692.086 L1540.67 692.086 L1541.23 692.086 L1541.79 692.086 L1542.35 692.086 L1542.9 692.086 L1543.46 692.086 L1544.02 692.086 L1544.58 692.086 L1545.14 692.086 L1545.7 692.086 L1546.26 692.086 L1546.82 692.086 L1547.38 692.086 L1547.94 692.086 L1548.5 692.086 L1549.06 692.086 L1549.62 692.086 L1550.18 692.086 L1550.73 692.086 L1551.29 692.086 L1551.85 692.086 L1552.41 692.086 L1552.97 692.086 L1553.53 692.086 L1554.09 692.086 L1554.65 692.086 L1555.21 692.086 L1555.77 692.086 L1556.33 692.086 L1556.89 692.086 L1557.45 692.086 L1558 692.086 L1558.56 692.086 L1559.12 692.086 L1559.68 692.086 L1560.24 692.086 L1560.8 692.086 L1561.36 692.086 L1561.92 692.086 L1562.48 692.086 L1563.04 692.086 L1563.6 692.086 L1564.16 692.086 L1564.72 692.086 L1565.28 692.086 L1565.83 692.086 L1566.39 692.086 L1566.95 692.086 L1567.51 692.086 L1568.07 692.086 L1568.63 692.086 L1569.19 692.086 L1569.75 692.086 L1570.31 692.086 L1570.87 692.086 L1571.43 692.086 L1571.99 692.086 L1572.55 692.086 L1573.1 692.086 L1573.66 692.086 L1574.22 692.086 L1574.78 692.086 L1575.34 692.086 L1575.9 692.086 L1576.46 692.086 L1577.02 692.086 L1577.58 692.086 L1578.14 692.086 L1578.7 692.086 L1579.26 692.086 L1579.82 692.086 L1580.37 692.086 L1580.93 692.086 L1581.49 692.086 L1582.05 692.086 L1582.61 692.086 L1583.17 692.086 L1583.73 692.086 L1584.29 692.086 L1584.85 692.086 L1585.41 692.086 L1585.97 692.086 L1586.53 692.086 L1587.09 692.086 L1587.65 692.086 L1588.2 692.086 L1588.76 692.086 L1589.32 692.086 L1589.88 692.086 L1590.44 692.086 L1591 692.086 L1591.56 692.086 L1592.12 692.086 L1592.68 692.086 L1593.24 692.086 L1593.8 692.086 L1594.36 692.086 L1594.92 692.086 L1595.47 692.086 L1596.03 692.086 L1596.59 692.086 L1597.15 692.086 L1597.71 692.086 L1598.27 692.086 L1598.83 692.086 L1599.39 692.086 L1599.95 692.086 L1600.51 692.086 L1601.07 692.086 L1601.63 692.086 L1602.19 692.086 L1602.74 692.086 L1603.3 692.086 L1603.86 692.086 L1604.42 692.086 L1604.98 692.086 L1605.54 692.086 L1606.1 692.086 L1606.66 692.086 L1607.22 692.086 L1607.78 692.086 L1608.34 692.086 L1608.9 692.086 L1609.46 692.086 L1610.02 692.086 L1610.57 692.086 L1611.13 692.086 L1611.69 692.086 L1612.25 692.086 L1612.81 692.086 L1613.37 692.086 L1613.93 692.086 L1614.49 692.086 L1615.05 692.086 L1615.61 692.086 L1616.17 692.086 L1616.73 692.086 L1617.29 692.086 L1617.84 692.086 L1618.4 692.086 L1618.96 692.086 L1619.52 692.086 L1620.08 692.086 L1620.64 692.086 L1621.2 692.086 L1621.76 692.086 L1622.32 692.086 L1622.88 692.086 L1623.44 692.086 L1624 692.086 L1624.56 692.086 L1625.11 692.086 L1625.67 692.086 L1626.23 692.086 L1626.79 692.086 L1627.35 692.086 L1627.91 692.086 L1628.47 692.086 L1629.03 692.086 L1629.59 692.086 L1630.15 692.086 L1630.71 692.086 L1631.27 692.086 L1631.83 692.086 L1632.39 692.086 L1632.94 692.086 L1633.5 692.086 L1634.06 692.086 L1634.62 692.086 L1635.18 692.086 L1635.74 692.086 L1636.3 692.086 L1636.86 692.086 L1637.42 692.086 L1637.98 692.086 L1638.54 692.086 L1639.1 692.086 L1639.66 692.086 L1640.21 692.086 L1640.77 692.086 L1641.33 692.086 L1641.89 692.086 L1642.45 692.086 L1643.01 692.086 L1643.57 692.086 L1644.13 692.086 L1644.69 692.086 L1645.25 692.086 L1645.81 692.086 L1646.37 692.086 L1646.93 692.086 L1647.48 692.086 L1648.04 692.086 L1648.6 692.086 L1649.16 692.086 L1649.72 692.086 L1650.28 692.086 L1650.84 692.086 L1651.4 692.086 L1651.96 692.086 L1652.52 692.086 L1653.08 692.086 L1653.64 692.086 L1654.2 692.086 L1654.76 692.086 L1655.31 692.086 L1655.87 692.086 L1656.43 692.086 L1656.99 692.086 L1657.55 692.086 L1658.11 692.086 L1658.67 692.086 L1659.23 692.086 L1659.79 692.086 L1660.35 692.086 L1660.91 692.086 L1661.47 692.086 L1662.03 692.086 L1662.58 692.086 L1663.14 692.086 L1663.7 692.086 L1664.26 692.086 L1664.82 692.086 L1665.38 692.086 L1665.94 692.086 L1666.5 692.086 L1667.06 692.086 L1667.62 692.086 L1668.18 692.086 L1668.74 692.086 L1669.3 692.086 L1669.85 692.086 L1670.41 692.086 L1670.97 692.086 L1671.53 692.086 L1672.09 692.086 L1672.65 692.086 L1673.21 692.086 L1673.77 692.086 L1674.33 692.086 L1674.89 692.086 L1675.45 692.086 L1676.01 692.086 L1676.57 692.086 L1677.13 692.086 L1677.68 692.086 L1678.24 692.086 L1678.8 692.086 L1679.36 692.086 L1679.92 692.086 L1680.48 692.086 L1681.04 692.086 L1681.6 692.086 L1682.16 692.086 L1682.72 692.086 L1683.28 692.086 L1683.84 692.086 L1684.4 692.086 L1684.95 692.086 L1685.51 692.086 L1686.07 692.086 L1686.63 692.086 L1687.19 692.086 L1687.75 692.086 L1688.31 692.086 L1688.87 692.086 L1689.43 692.086 L1689.99 692.086 L1690.55 692.086 L1691.11 692.086 L1691.67 692.086 L1692.23 692.086 L1692.78 692.086 L1693.34 692.086 L1693.9 692.086 L1694.46 692.086 L1695.02 692.086 L1695.58 692.086 L1696.14 692.086 L1696.7 692.086 L1697.26 692.086 L1697.82 692.086 L1698.38 692.086 L1698.94 692.086 L1699.5 692.086 L1700.05 692.086 L1700.61 692.086 L1701.17 692.086 L1701.73 692.086 L1702.29 692.086 L1702.85 692.086 L1703.41 692.086 L1703.97 692.086 L1704.53 692.086 L1705.09 692.086 L1705.65 692.086 L1706.21 692.086 L1706.77 692.086 L1707.32 692.086 L1707.88 692.086 L1708.44 692.086 L1709 692.086 L1709.56 692.086 L1710.12 692.086 L1710.68 692.086 L1711.24 692.086 L1711.8 692.086 L1712.36 692.086 L1712.92 692.086 L1713.48 692.086 L1714.04 692.086 L1714.6 692.086 L1715.15 692.086 L1715.71 692.086 L1716.27 692.086 L1716.83 692.086 L1717.39 692.086 L1717.95 692.086 L1718.51 692.086 L1719.07 692.086 L1719.63 692.086 L1720.19 692.086 L1720.75 692.086 L1721.31 692.086 L1721.87 692.086 L1722.42 692.086 L1722.98 692.086 L1723.54 692.086 L1724.1 692.086 L1724.66 692.086 L1725.22 692.086 L1725.78 692.086 L1726.34 692.086 L1726.9 692.086 L1727.46 692.086 L1728.02 692.086 L1728.58 692.086 L1729.14 692.086 L1729.69 692.086 L1730.25 692.086 L1730.81 692.086 L1731.37 692.086 L1731.93 692.086 L1732.49 692.086 L1733.05 692.086 L1733.61 692.086 L1734.17 692.086 L1734.73 692.086 L1735.29 692.086 L1735.85 692.086 L1736.41 692.086 L1736.97 692.086 L1737.52 692.086 L1738.08 692.086 L1738.64 692.086 L1739.2 692.086 L1739.76 692.086 L1740.32 692.086 L1740.88 692.086 L1741.44 692.086 L1742 692.086 L1742.56 692.086 L1743.12 692.086 L1743.68 692.086 L1744.24 692.086 L1744.79 692.086 L1745.35 692.086 L1745.91 692.086 L1746.47 692.086 L1747.03 692.086 L1747.59 692.086 L1748.15 692.086 L1748.71 692.086 L1749.27 692.086 L1749.83 692.086 L1750.39 692.086 L1750.95 692.086 L1751.51 692.086 L1752.06 692.086 L1752.62 692.086 L1753.18 692.086 L1753.74 692.086 L1754.3 692.086 L1754.86 692.086 L1755.42 692.086 L1755.98 692.086 L1756.54 692.086 L1757.1 692.086 L1757.66 692.086 L1758.22 692.086 L1758.78 692.086 L1759.34 692.086 L1759.89 692.086 L1760.45 692.086 L1761.01 692.086 L1761.57 692.086 L1762.13 692.086 L1762.69 692.086 L1763.25 692.086 L1763.81 692.086 L1764.37 692.086 L1764.93 692.086 L1765.49 692.086 L1766.05 692.086 L1766.61 692.086 L1767.16 692.086 L1767.72 692.086 L1768.28 692.086 L1768.84 692.086 L1769.4 692.086 L1769.96 692.086 L1770.52 692.086 L1771.08 692.086 L1771.64 692.086 L1772.2 692.086 L1772.76 692.086 L1773.32 692.086 L1773.88 692.086 L1774.43 692.086 L1774.99 692.086 L1775.55 692.086 L1776.11 692.086 L1776.67 692.086 L1777.23 692.086 L1777.79 692.086 L1778.35 692.086 L1778.91 692.086 L1779.47 692.086 L1780.03 692.086 L1780.59 692.086 L1781.15 692.086 L1781.71 692.086 L1782.26 692.086 L1782.82 692.086 L1783.38 692.086 L1783.94 692.086 L1784.5 692.086 L1785.06 692.086 L1785.62 692.086 L1786.18 692.086 L1786.74 692.086 L1787.3 692.086 L1787.86 692.086 L1788.42 692.086 L1788.98 692.086 L1789.53 692.086 L1790.09 692.086 L1790.65 692.086 L1791.21 692.086 L1791.77 692.086 L1792.33 692.086 L1792.89 692.086 L1793.45 692.086 L1794.01 692.086 L1794.57 692.086 L1795.13 692.086 L1795.69 692.086 L1796.25 692.086 L1796.8 692.086 L1797.36 692.086 L1797.92 692.086 L1798.48 692.086 L1799.04 692.086 L1799.6 692.086 L1800.16 692.086 L1800.72 692.086 L1801.28 692.086 L1801.84 692.086 L1802.4 692.086 L1802.96 692.086 L1803.52 692.086 L1804.08 692.086 L1804.63 692.086 L1805.19 692.086 L1805.75 692.086 L1806.31 692.086 L1806.87 692.086 L1807.43 692.086 L1807.99 692.086 L1808.55 692.086 L1809.11 692.086 L1809.67 692.086 L1810.23 692.086 L1810.79 692.086 L1811.35 692.086 L1811.9 692.086 L1812.46 692.086 L1813.02 692.086 L1813.58 692.086 L1814.14 692.086 L1814.7 692.086 L1815.26 692.086 L1815.82 692.086 L1816.38 692.086 L1816.94 692.086 L1817.5 692.086 L1818.06 692.086 L1818.62 692.086 L1819.18 692.086 L1819.73 692.086 L1820.29 692.086 L1820.85 692.086 L1821.41 692.086 L1821.97 692.086 L1822.53 692.086 L1823.09 692.086 L1823.65 692.086 L1824.21 692.086 L1824.77 692.086 L1825.33 692.086 L1825.89 692.086 L1826.45 692.086 L1827 692.086 L1827.56 692.086 L1828.12 692.086 L1828.68 692.086 L1829.24 692.086 L1829.8 692.086 L1830.36 692.086 L1830.92 692.086 L1831.48 692.086 L1832.04 692.086 L1832.6 692.086 L1833.16 692.086 L1833.72 692.086 L1834.27 692.086 L1834.83 692.086 L1835.39 692.086 L1835.95 692.086 L1836.51 692.086 L1837.07 692.086 L1837.63 692.086 L1838.19 692.086 L1838.19 683.607 L1837.63 683.607 L1837.07 683.607 L1836.51 683.607 L1835.95 683.607 L1835.39 683.607 L1834.83 683.607 L1834.27 683.607 L1833.72 683.607 L1833.16 683.607 L1832.6 683.607 L1832.04 683.607 L1831.48 683.607 L1830.92 683.607 L1830.36 683.607 L1829.8 683.607 L1829.24 683.607 L1828.68 683.607 L1828.12 683.607 L1827.56 683.607 L1827 683.607 L1826.45 683.607 L1825.89 683.607 L1825.33 683.607 L1824.77 683.607 L1824.21 683.607 L1823.65 683.607 L1823.09 683.607 L1822.53 683.607 L1821.97 683.607 L1821.41 683.607 L1820.85 683.607 L1820.29 683.607 L1819.73 683.607 L1819.18 683.607 L1818.62 683.607 L1818.06 683.607 L1817.5 683.607 L1816.94 683.607 L1816.38 683.607 L1815.82 683.607 L1815.26 683.607 L1814.7 683.607 L1814.14 683.607 L1813.58 683.607 L1813.02 683.607 L1812.46 683.607 L1811.9 683.607 L1811.35 683.607 L1810.79 683.607 L1810.23 683.607 L1809.67 683.607 L1809.11 683.607 L1808.55 683.607 L1807.99 683.607 L1807.43 683.607 L1806.87 683.607 L1806.31 683.607 L1805.75 683.607 L1805.19 683.607 L1804.63 683.607 L1804.08 683.607 L1803.52 683.607 L1802.96 683.607 L1802.4 683.607 L1801.84 683.607 L1801.28 683.607 L1800.72 683.607 L1800.16 683.607 L1799.6 683.607 L1799.04 683.607 L1798.48 683.607 L1797.92 683.607 L1797.36 683.607 L1796.8 683.607 L1796.25 683.607 L1795.69 683.607 L1795.13 683.607 L1794.57 683.607 L1794.01 683.607 L1793.45 683.607 L1792.89 683.607 L1792.33 683.607 L1791.77 683.607 L1791.21 683.607 L1790.65 683.607 L1790.09 683.607 L1789.53 683.607 L1788.98 683.607 L1788.42 683.607 L1787.86 683.607 L1787.3 683.607 L1786.74 683.607 L1786.18 683.607 L1785.62 683.607 L1785.06 683.607 L1784.5 683.607 L1783.94 683.607 L1783.38 683.607 L1782.82 683.607 L1782.26 683.607 L1781.71 683.607 L1781.15 683.607 L1780.59 683.607 L1780.03 683.607 L1779.47 683.607 L1778.91 683.607 L1778.35 683.607 L1777.79 683.607 L1777.23 683.607 L1776.67 683.607 L1776.11 683.607 L1775.55 683.607 L1774.99 683.607 L1774.43 683.607 L1773.88 683.607 L1773.32 683.607 L1772.76 683.607 L1772.2 683.607 L1771.64 683.607 L1771.08 683.607 L1770.52 683.607 L1769.96 683.607 L1769.4 683.607 L1768.84 683.607 L1768.28 683.607 L1767.72 683.607 L1767.16 683.607 L1766.61 683.607 L1766.05 683.607 L1765.49 683.607 L1764.93 683.607 L1764.37 683.607 L1763.81 683.607 L1763.25 683.607 L1762.69 683.607 L1762.13 683.607 L1761.57 683.607 L1761.01 683.607 L1760.45 683.607 L1759.89 683.607 L1759.34 683.607 L1758.78 683.607 L1758.22 683.607 L1757.66 683.607 L1757.1 683.607 L1756.54 683.607 L1755.98 683.607 L1755.42 683.607 L1754.86 683.607 L1754.3 683.607 L1753.74 683.607 L1753.18 683.607 L1752.62 683.607 L1752.06 683.607 L1751.51 683.607 L1750.95 683.607 L1750.39 683.607 L1749.83 683.607 L1749.27 683.607 L1748.71 683.607 L1748.15 683.607 L1747.59 683.607 L1747.03 683.607 L1746.47 683.607 L1745.91 683.607 L1745.35 683.607 L1744.79 683.607 L1744.24 683.607 L1743.68 683.607 L1743.12 683.607 L1742.56 683.607 L1742 683.607 L1741.44 683.607 L1740.88 683.607 L1740.32 683.607 L1739.76 683.607 L1739.2 683.607 L1738.64 683.607 L1738.08 683.607 L1737.52 683.607 L1736.97 683.607 L1736.41 683.607 L1735.85 683.607 L1735.29 683.607 L1734.73 683.607 L1734.17 683.607 L1733.61 683.607 L1733.05 683.607 L1732.49 683.607 L1731.93 683.607 L1731.37 683.607 L1730.81 683.607 L1730.25 683.607 L1729.69 683.607 L1729.14 683.607 L1728.58 683.607 L1728.02 683.607 L1727.46 683.607 L1726.9 683.607 L1726.34 683.607 L1725.78 683.607 L1725.22 683.607 L1724.66 683.607 L1724.1 683.607 L1723.54 683.607 L1722.98 683.607 L1722.42 683.607 L1721.87 683.607 L1721.31 683.607 L1720.75 683.607 L1720.19 683.607 L1719.63 683.607 L1719.07 683.607 L1718.51 683.607 L1717.95 683.607 L1717.39 683.607 L1716.83 683.607 L1716.27 683.607 L1715.71 683.607 L1715.15 683.607 L1714.6 683.607 L1714.04 683.607 L1713.48 683.607 L1712.92 683.607 L1712.36 683.607 L1711.8 683.607 L1711.24 683.607 L1710.68 683.607 L1710.12 683.607 L1709.56 683.607 L1709 683.607 L1708.44 683.607 L1707.88 683.607 L1707.32 683.607 L1706.77 683.607 L1706.21 683.607 L1705.65 683.607 L1705.09 683.607 L1704.53 683.607 L1703.97 683.607 L1703.41 683.607 L1702.85 683.607 L1702.29 683.607 L1701.73 683.607 L1701.17 683.607 L1700.61 683.607 L1700.05 683.607 L1699.5 683.607 L1698.94 683.607 L1698.38 683.607 L1697.82 683.607 L1697.26 683.607 L1696.7 683.607 L1696.14 683.607 L1695.58 683.607 L1695.02 683.607 L1694.46 683.607 L1693.9 683.607 L1693.34 683.607 L1692.78 683.607 L1692.23 683.607 L1691.67 683.607 L1691.11 683.607 L1690.55 683.607 L1689.99 683.607 L1689.43 683.607 L1688.87 683.607 L1688.31 683.607 L1687.75 683.607 L1687.19 683.607 L1686.63 683.607 L1686.07 683.607 L1685.51 683.607 L1684.95 683.607 L1684.4 683.607 L1683.84 683.607 L1683.28 683.607 L1682.72 683.607 L1682.16 683.607 L1681.6 683.607 L1681.04 683.607 L1680.48 683.607 L1679.92 683.607 L1679.36 683.607 L1678.8 683.607 L1678.24 683.607 L1677.68 683.607 L1677.13 683.607 L1676.57 683.607 L1676.01 683.607 L1675.45 683.607 L1674.89 683.607 L1674.33 683.607 L1673.77 683.607 L1673.21 683.607 L1672.65 683.607 L1672.09 683.607 L1671.53 683.607 L1670.97 683.607 L1670.41 683.607 L1669.85 683.607 L1669.3 683.607 L1668.74 683.607 L1668.18 683.607 L1667.62 683.607 L1667.06 683.607 L1666.5 683.607 L1665.94 683.607 L1665.38 683.607 L1664.82 683.607 L1664.26 683.607 L1663.7 683.607 L1663.14 683.607 L1662.58 683.607 L1662.03 683.607 L1661.47 683.607 L1660.91 683.607 L1660.35 683.607 L1659.79 683.607 L1659.23 683.607 L1658.67 683.607 L1658.11 683.607 L1657.55 683.607 L1656.99 683.607 L1656.43 683.607 L1655.87 683.607 L1655.31 683.607 L1654.76 683.607 L1654.2 683.607 L1653.64 683.607 L1653.08 683.607 L1652.52 683.607 L1651.96 683.607 L1651.4 683.607 L1650.84 683.607 L1650.28 683.607 L1649.72 683.607 L1649.16 683.607 L1648.6 683.607 L1648.04 683.607 L1647.48 683.607 L1646.93 683.607 L1646.37 683.607 L1645.81 683.607 L1645.25 683.607 L1644.69 683.607 L1644.13 683.607 L1643.57 683.607 L1643.01 683.607 L1642.45 683.607 L1641.89 683.607 L1641.33 683.607 L1640.77 683.607 L1640.21 683.607 L1639.66 683.607 L1639.1 683.607 L1638.54 683.607 L1637.98 683.607 L1637.42 683.607 L1636.86 683.607 L1636.3 683.607 L1635.74 683.607 L1635.18 683.607 L1634.62 683.607 L1634.06 683.607 L1633.5 683.607 L1632.94 683.607 L1632.39 683.607 L1631.83 683.607 L1631.27 683.607 L1630.71 683.607 L1630.15 683.607 L1629.59 683.607 L1629.03 683.607 L1628.47 683.607 L1627.91 683.607 L1627.35 683.607 L1626.79 683.607 L1626.23 683.607 L1625.67 683.607 L1625.11 683.607 L1624.56 683.607 L1624 683.607 L1623.44 683.607 L1622.88 683.607 L1622.32 683.607 L1621.76 683.607 L1621.2 683.607 L1620.64 683.607 L1620.08 683.607 L1619.52 683.607 L1618.96 683.607 L1618.4 683.607 L1617.84 683.607 L1617.29 683.607 L1616.73 683.607 L1616.17 683.607 L1615.61 683.607 L1615.05 683.607 L1614.49 683.607 L1613.93 683.607 L1613.37 683.607 L1612.81 683.607 L1612.25 683.607 L1611.69 683.607 L1611.13 683.607 L1610.57 683.607 L1610.02 683.607 L1609.46 683.607 L1608.9 683.607 L1608.34 683.607 L1607.78 683.607 L1607.22 683.607 L1606.66 683.607 L1606.1 683.607 L1605.54 683.607 L1604.98 683.607 L1604.42 683.607 L1603.86 683.607 L1603.3 683.607 L1602.74 683.607 L1602.19 683.607 L1601.63 683.607 L1601.07 683.607 L1600.51 683.607 L1599.95 683.607 L1599.39 683.607 L1598.83 683.607 L1598.27 683.607 L1597.71 683.607 L1597.15 683.607 L1596.59 683.607 L1596.03 683.607 L1595.47 683.607 L1594.92 683.607 L1594.36 683.607 L1593.8 683.607 L1593.24 683.607 L1592.68 683.607 L1592.12 683.607 L1591.56 683.607 L1591 683.607 L1590.44 683.607 L1589.88 683.607 L1589.32 683.607 L1588.76 683.607 L1588.2 683.607 L1587.65 683.607 L1587.09 683.607 L1586.53 683.607 L1585.97 683.607 L1585.41 683.607 L1584.85 683.607 L1584.29 683.607 L1583.73 683.607 L1583.17 683.607 L1582.61 683.607 L1582.05 683.607 L1581.49 683.607 L1580.93 683.607 L1580.37 683.607 L1579.82 683.607 L1579.26 683.607 L1578.7 683.607 L1578.14 683.607 L1577.58 683.607 L1577.02 683.607 L1576.46 683.607 L1575.9 683.607 L1575.34 683.607 L1574.78 683.607 L1574.22 683.607 L1573.66 683.607 L1573.1 683.607 L1572.55 683.607 L1571.99 683.607 L1571.43 683.607 L1570.87 683.607 L1570.31 683.607 L1569.75 683.607 L1569.19 683.607 L1568.63 683.607 L1568.07 683.607 L1567.51 683.607 L1566.95 683.607 L1566.39 683.607 L1565.83 683.607 L1565.28 683.607 L1564.72 683.607 L1564.16 683.607 L1563.6 683.607 L1563.04 683.607 L1562.48 683.607 L1561.92 683.607 L1561.36 683.607 L1560.8 683.607 L1560.24 683.607 L1559.68 683.607 L1559.12 683.607 L1558.56 683.607 L1558 683.607 L1557.45 683.607 L1556.89 683.607 L1556.33 683.607 L1555.77 683.607 L1555.21 683.607 L1554.65 683.607 L1554.09 683.607 L1553.53 683.607 L1552.97 683.607 L1552.41 683.607 L1551.85 683.607 L1551.29 683.607 L1550.73 683.607 L1550.18 683.607 L1549.62 683.607 L1549.06 683.607 L1548.5 683.607 L1547.94 683.607 L1547.38 683.607 L1546.82 683.607 L1546.26 683.607 L1545.7 683.607 L1545.14 683.607 L1544.58 683.607 L1544.02 683.607 L1543.46 683.607 L1542.9 683.607 L1542.35 683.607 L1541.79 683.607 L1541.23 683.607 L1540.67 683.607 L1540.11 683.607 L1539.55 683.607 L1538.99 683.607 L1538.43 683.607 L1537.87 683.607 L1537.31 683.607 L1536.75 683.607 L1536.19 683.607 L1535.63 683.607 L1535.08 683.607 L1534.52 683.607 L1533.96 683.607 L1533.4 683.607 L1532.84 683.607 L1532.28 683.607 L1531.72 683.607 L1531.16 683.607 L1530.6 683.607 L1530.04 683.607 L1529.48 683.607 L1528.92 683.607 L1528.36 683.607 L1527.81 683.607 L1527.25 683.607 L1526.69 683.607 L1526.13 683.607 L1525.57 683.607 L1525.01 683.607 L1524.45 683.607 L1523.89 683.607 L1523.33 683.607 L1522.77 683.607 L1522.21 683.607 L1521.65 683.607 L1521.09 683.607 L1520.53 683.607 L1519.98 683.607 L1519.42 683.607 L1518.86 683.607 L1518.3 683.607 L1517.74 683.607 L1517.18 683.607 L1516.62 683.607 L1516.06 683.607 L1515.5 683.607 L1514.94 683.607 L1514.38 683.607 L1513.82 683.607 L1513.26 683.607 L1512.71 683.607 L1512.15 683.607 L1511.59 683.607 L1511.03 683.607 L1510.47 683.607 L1509.91 683.607 L1509.35 683.607 L1508.79 683.607 L1508.23 683.607 L1507.67 683.607 L1507.11 683.607 L1506.55 683.607 L1505.99 683.607 L1505.44 683.607 L1504.88 683.607 L1504.32 683.607 L1503.76 683.607 L1503.2 683.607 L1502.64 683.607 L1502.08 683.607 L1501.52 683.607 L1500.96 683.607 L1500.4 683.607 L1499.84 683.607 L1499.28 683.607 L1498.72 683.607 L1498.16 683.607 L1497.61 683.607 L1497.05 683.607 L1496.49 683.607 L1495.93 683.607 L1495.37 683.607 L1494.81 683.607 L1494.25 683.607 L1493.69 683.607 L1493.13 683.607 L1492.57 683.607 L1492.01 683.607 L1491.45 683.607 L1490.89 683.607 L1490.34 683.607 L1489.78 683.607 L1489.22 683.607 L1488.66 683.607 L1488.1 683.607 L1487.54 683.607 L1486.98 683.607 L1486.42 683.607 L1485.86 683.607 L1485.3 683.607 L1484.74 683.607 L1484.18 683.607 L1483.62 683.607 L1483.07 683.607 L1482.51 683.607 L1481.95 683.607 L1481.39 683.607 L1480.83 683.607 L1480.27 683.607 L1479.71 683.607 L1479.15 683.607 L1478.59 683.607 L1478.03 683.607 L1477.47 683.607 L1476.91 683.607 L1476.35 683.607 L1475.79 683.607 L1475.24 683.607 L1474.68 683.607 L1474.12 683.607 L1473.56 683.607 L1473 683.607 L1472.44 683.607 L1471.88 683.607 L1471.32 683.607 L1470.76 683.607 L1470.2 683.607 L1469.64 683.607 L1469.08 683.607 L1468.52 683.607 L1467.97 683.607 L1467.41 683.607 L1466.85 683.607 L1466.29 683.607 L1465.73 683.607 L1465.17 683.607 L1464.61 683.607 L1464.05 683.607 L1463.49 683.607 L1462.93 683.607 L1462.37 683.607 L1461.81 683.607 L1461.25 683.607 L1460.7 683.607 L1460.14 683.607 L1459.58 683.607 L1459.02 683.607 L1458.46 683.607 L1457.9 683.607 L1457.34 683.607 L1456.78 683.607 L1456.22 683.607 L1455.66 683.607 L1455.1 683.607 L1454.54 683.607 L1453.98 683.607 L1453.42 683.607 L1452.87 683.607 L1452.31 683.607 L1451.75 683.607 L1451.19 683.607 L1450.63 683.607 L1450.07 683.607 L1449.51 683.607 L1448.95 683.607 L1448.39 683.607 L1447.83 683.607 L1447.27 683.607 L1446.71 683.607 L1446.15 683.607 L1445.6 683.607 L1445.04 683.607 L1444.48 683.607 L1443.92 683.607 L1443.36 683.607 L1442.8 683.607 L1442.24 683.607 L1441.68 683.607 L1441.12 683.607 L1440.56 683.607 L1440 683.607 L1439.44 683.607 L1438.88 683.607 L1438.33 683.607 L1437.77 683.607 L1437.21 683.607 L1436.65 683.607 L1436.09 683.607 L1435.53 683.607 L1434.97 683.607 L1434.41 683.607 L1433.85 683.607 L1433.29 683.607 L1432.73 683.607 L1432.17 683.607 L1431.61 683.607 L1431.05 683.607 L1430.5 683.607 L1429.94 683.607 L1429.38 683.607 L1428.82 683.607 L1428.26 683.607 L1427.7 683.607 L1427.14 683.607 L1426.58 683.607 L1426.02 683.607 L1425.46 683.607 L1424.9 683.607 L1424.34 683.607 L1423.78 683.607 L1423.23 683.607 L1422.67 683.607 L1422.11 683.607 L1421.55 683.607 L1420.99 683.607 L1420.43 683.607 L1419.87 683.607 L1419.31 683.607 L1418.75 683.607 L1418.19 683.607 L1417.63 683.607 L1417.07 683.607 L1416.51 683.607 L1415.95 683.607 L1415.4 683.607 L1414.84 683.607 L1414.28 683.607 L1413.72 683.607 L1413.16 683.607 L1412.6 683.607 L1412.04 683.607 L1411.48 683.607 L1410.92 683.607 L1410.36 683.607 L1409.8 683.607 L1409.24 683.607 L1408.68 683.607 L1408.13 683.607 L1407.57 683.607 L1407.01 683.607 L1406.45 683.607 L1405.89 683.607 L1405.33 683.607 L1404.77 683.607 L1404.21 683.607 L1403.65 683.607 L1403.09 683.607 L1402.53 683.607 L1401.97 683.607 L1401.41 683.607 L1400.86 683.607 L1400.3 683.607 L1399.74 683.607 L1399.18 683.607 L1398.62 683.607 L1398.06 683.607 L1397.5 683.607 L1396.94 683.607 L1396.38 683.607 L1395.82 683.607 L1395.26 683.607 L1394.7 683.607 L1394.14 683.607 L1393.58 683.607 L1393.03 683.607 L1392.47 683.607 L1391.91 683.607 L1391.35 683.607 L1390.79 683.607 L1390.23 683.607 L1389.67 683.607 L1389.11 683.607 L1388.55 683.607 L1387.99 683.607 L1387.43 683.607 L1386.87 683.607 L1386.31 683.607 L1385.76 683.607 L1385.2 683.607 L1384.64 683.607 L1384.08 683.607 L1383.52 683.607 L1382.96 683.607 L1382.4 683.607 L1381.84 683.607 L1381.28 683.607 L1380.72 683.607 L1380.16 683.607 L1379.6 683.607 L1379.04 683.607 L1378.49 683.607 L1377.93 683.607 L1377.37 683.607 L1376.81 683.607 L1376.25 683.607 L1375.69 683.607 L1375.13 683.607 L1374.57 683.607 L1374.01 683.607 L1373.45 683.607 L1372.89 683.607 L1372.33 683.607 L1371.77 683.607 L1371.21 683.607 L1370.66 683.607 L1370.1 683.607 L1369.54 683.607 L1368.98 683.607 L1368.42 683.607 L1367.86 683.607 L1367.3 683.607 L1366.74 683.607 L1366.18 683.607 L1365.62 683.607 L1365.06 683.607 L1364.5 683.607 L1363.94 683.607 L1363.39 683.607 L1362.83 683.607 L1362.27 683.607 L1361.71 683.607 L1361.15 683.607 L1360.59 683.607 L1360.03 683.607 L1359.47 683.607 L1358.91 683.607 L1358.35 683.607 L1357.79 683.607 L1357.23 683.607 L1356.67 683.607 L1356.12 683.607 L1355.56 683.607 L1355 683.607 L1354.44 683.607 L1353.88 683.607 L1353.32 683.607 L1352.76 683.607 L1352.2 683.607 L1351.64 683.607 L1351.08 683.607 L1350.52 683.607 L1349.96 683.607 L1349.4 683.607 L1348.84 683.607 L1348.29 683.607 L1347.73 683.607 L1347.17 683.607 L1346.61 683.607 L1346.05 683.607 L1345.49 683.607 L1344.93 683.607 L1344.37 683.607 L1343.81 683.607 L1343.25 683.607 L1342.69 683.607 L1342.13 683.607 L1341.57 683.607 L1341.02 683.607 L1340.46 683.607 L1339.9 683.607 L1339.34 683.607 L1338.78 683.607 L1338.22 683.607 L1337.66 683.607 L1337.1 683.607 L1336.54 683.607 L1335.98 683.607 L1335.42 683.607 L1334.86 683.607 L1334.3 683.607 L1333.75 683.607 L1333.19 683.607 L1332.63 683.607 L1332.07 683.607 L1331.51 683.607 L1330.95 683.607 L1330.39 683.607 L1329.83 683.607 L1329.27 683.607 L1328.71 683.607 L1328.15 683.607 L1327.59 683.607 L1327.03 683.607 L1326.47 683.607 L1325.92 683.607 L1325.36 683.607 L1324.8 683.607 L1324.24 683.607 L1323.68 683.607 L1323.12 683.607 L1322.56 683.607 L1322 683.607 L1321.44 683.607 L1320.88 683.607 L1320.32 683.607 L1319.76 683.607 L1319.2 683.607 L1318.65 683.607 L1318.09 683.607 L1317.53 683.607 L1316.97 683.607 L1316.41 683.607 L1315.85 683.607 L1315.29 683.607 L1314.73 683.607 L1314.17 683.607 L1313.61 683.607 L1313.05 683.607 L1312.49 683.607 L1311.93 683.607 L1311.38 683.607 L1310.82 683.607 L1310.26 683.607 L1309.7 683.607 L1309.14 683.607 L1308.58 683.607 L1308.02 683.607 L1307.46 683.607 L1306.9 683.607 L1306.34 683.607 L1305.78 683.607 L1305.22 683.607 L1304.66 683.607 L1304.1 683.607 L1303.55 683.607 L1302.99 683.607 L1302.43 683.607 L1301.87 683.607 L1301.31 683.607 L1300.75 683.607 L1300.19 683.607 L1299.63 683.607 L1299.07 683.607 L1298.51 683.607 L1297.95 683.607 L1297.39 683.607 L1296.83 683.607 L1296.28 683.607 L1295.72 683.607 L1295.16 683.607 L1294.6 683.607 L1294.04 683.607 L1293.48 683.607 L1292.92 683.607 L1292.36 683.607 L1291.8 683.607 L1291.24 683.607 L1290.68 683.607 L1290.12 683.607 L1289.56 683.607 L1289 683.607 L1288.45 683.607 L1287.89 683.607 L1287.33 683.607 L1286.77 683.607 L1286.21 683.607 L1285.65 683.607 L1285.09 683.607 L1284.53 683.607 L1283.97 683.607 L1283.41 683.607 L1282.85 683.607 L1282.29 683.607 L1281.73 683.607 L1281.18 683.607 L1280.62 683.607 L1280.06 683.607 L1279.5 683.607 L1278.94 683.607 L1278.38 683.607 L1277.82 683.607 L1277.26 683.607 L1276.7 683.607 L1276.14 683.607 L1275.58 683.607 L1275.02 683.607 L1274.46 683.607 L1273.91 683.607 L1273.35 683.607 L1272.79 683.607 L1272.23 683.607 L1271.67 683.607 L1271.11 683.607 L1270.55 683.607 L1269.99 683.607 L1269.43 683.607 L1268.87 683.607 L1268.31 683.607 L1267.75 683.607 L1267.19 683.607 L1266.63 683.607 L1266.08 683.607 L1265.52 683.607 L1264.96 683.607 L1264.4 683.607 L1263.84 683.607 L1263.28 683.607 L1262.72 683.607 L1262.16 683.607 L1261.6 683.607 L1261.04 683.607 L1260.48 683.607 L1259.92 683.607 L1259.36 683.607 L1258.81 683.607 L1258.25 683.607 L1257.69 683.607 L1257.13 683.607 L1256.57 683.607 L1256.01 683.607 L1255.45 683.607 L1254.89 683.607 L1254.33 683.607 L1253.77 683.607 L1253.21 683.607 L1252.65 683.607 L1252.09 683.607 L1251.54 683.607 L1250.98 683.607 L1250.42 683.607 L1249.86 683.607 L1249.3 683.607 L1248.74 683.607 L1248.18 683.607 L1247.62 683.607 L1247.06 683.607 L1246.5 683.607 L1245.94 683.607 L1245.38 683.607 L1244.82 683.607 L1244.26 683.607 L1243.71 683.607 L1243.15 683.607 L1242.59 683.607 L1242.03 683.607 L1241.47 683.607 L1240.91 683.607 L1240.35 683.607 L1239.79 683.607 L1239.23 683.607 L1238.67 683.607 L1238.11 683.607 L1237.55 683.607 L1236.99 683.607 L1236.44 683.607 L1235.88 683.607 L1235.32 683.607 L1234.76 683.607 L1234.2 683.607 L1233.64 683.607 L1233.08 683.607 L1232.52 683.607 L1231.96 683.607 L1231.4 683.607 L1230.84 683.607 L1230.28 683.607 L1229.72 683.607 L1229.17 683.607 L1228.61 683.607 L1228.05 683.607 L1227.49 683.607 L1226.93 683.607 L1226.37 683.607 L1225.81 683.607 L1225.25 683.607 L1224.69 683.607 L1224.13 683.607 L1223.57 683.607 L1223.01 683.607 L1222.45 683.607 L1221.89 683.607 L1221.34 683.607 L1220.78 683.607 L1220.22 683.607 L1219.66 683.607 L1219.1 683.607 L1218.54 683.607 L1217.98 683.607 L1217.42 683.607 L1216.86 683.607 L1216.3 683.607 L1215.74 683.607 L1215.18 683.607 L1214.62 683.607 L1214.07 683.607 L1213.51 683.607 L1212.95 683.607 L1212.39 683.607 L1211.83 683.607 L1211.27 683.607 L1210.71 683.607 L1210.15 683.607 L1209.59 683.607 L1209.03 683.607 L1208.47 683.607 L1207.91 683.607 L1207.35 683.607 L1206.8 683.607 L1206.24 683.607 L1205.68 683.607 L1205.12 683.607 L1204.56 683.607 L1204 683.607 L1203.44 683.607 L1202.88 683.607 L1202.32 683.607 L1201.76 683.607 L1201.2 683.607 L1200.64 683.607 L1200.08 683.607 L1199.52 683.607 L1198.97 683.607 L1198.41 683.607 L1197.85 683.607 L1197.29 683.607 L1196.73 683.607 L1196.17 683.607 L1195.61 683.607 L1195.05 683.607 L1194.49 683.607 L1193.93 683.607 L1193.37 683.607 L1192.81 683.607 L1192.25 683.607 L1191.7 683.607 L1191.14 683.607 L1190.58 683.607 L1190.02 683.607 L1189.46 683.607 L1188.9 683.607 L1188.34 683.607 L1187.78 683.607 L1187.22 683.607 L1186.66 683.607 L1186.1 683.607 L1185.54 683.607 L1184.98 683.607 L1184.43 683.607 L1183.87 683.607 L1183.31 683.607 L1182.75 683.607 L1182.19 683.607 L1181.63 683.607 L1181.07 683.607 L1180.51 683.607 L1179.95 683.607 L1179.39 683.607 L1178.83 683.607 L1178.27 683.607 L1177.71 683.607 L1177.15 683.607 L1176.6 683.607 L1176.04 683.607 L1175.48 683.607 L1174.92 683.607 L1174.36 683.607 L1173.8 683.607 L1173.24 683.607 L1172.68 683.607 L1172.12 683.607 L1171.56 683.607 L1171 683.607 L1170.44 683.607 L1169.88 683.607 L1169.33 683.607 L1168.77 683.607 L1168.21 683.607 L1167.65 683.607 L1167.09 683.607 L1166.53 683.607 L1165.97 683.607 L1165.41 683.607 L1164.85 683.607 L1164.29 683.607 L1163.73 683.607 L1163.17 683.607 L1162.61 683.607 L1162.05 683.607 L1161.5 683.607 L1160.94 683.607 L1160.38 683.607 L1159.82 683.607 L1159.26 683.607 L1158.7 683.607 L1158.14 683.607 L1157.58 683.607 L1157.02 683.607 L1156.46 683.607 L1155.9 683.607 L1155.34 683.607 L1154.78 683.607 L1154.23 683.607 L1153.67 683.607 L1153.11 683.607 L1152.55 683.607 L1151.99 683.607 L1151.43 683.607 L1150.87 683.607 L1150.31 683.607 L1149.75 683.607 L1149.19 683.607 L1148.63 683.607 L1148.07 683.607 L1147.51 683.607 L1146.96 683.607 L1146.4 683.607 L1145.84 683.607 L1145.28 683.607 L1144.72 683.607 L1144.16 683.607 L1143.6 683.607 L1143.04 683.607 L1142.48 683.607 L1141.92 683.607 L1141.36 683.607 L1140.8 683.607 L1140.24 683.607 L1139.68 683.607 L1139.13 683.607 L1138.57 683.607 L1138.01 683.607 L1137.45 683.607 L1136.89 683.607 L1136.33 683.607 L1135.77 683.607 L1135.21 683.607 L1134.65 683.607 L1134.09 683.607 L1133.53 683.607 L1132.97 683.607 L1132.41 683.607 L1131.86 683.607 L1131.3 683.607 L1130.74 683.607 L1130.18 683.607 L1129.62 683.607 L1129.06 683.607 L1128.5 683.607 L1127.94 683.607 L1127.38 683.607 L1126.82 683.607 L1126.26 683.607 L1125.7 683.607 L1125.14 683.607 L1124.59 683.607 L1124.03 683.607 L1123.47 683.607 L1122.91 683.607 L1122.35 683.607 L1121.79 683.607 L1121.23 683.607 L1120.67 683.607 L1120.11 683.607 L1119.55 683.607 L1118.99 683.607 L1118.43 683.607 L1117.87 683.607 L1117.31 683.607 L1116.76 683.607 L1116.2 683.607 L1115.64 683.607 L1115.08 683.607 L1114.52 683.607 L1113.96 683.607 L1113.4 683.607 L1112.84 683.607 L1112.28 683.607 L1111.72 683.607 L1111.16 683.607 L1110.6 683.607 L1110.04 683.607 L1109.49 683.607 L1108.93 683.607 L1108.37 683.607 L1107.81 683.607 L1107.25 683.607 L1106.69 683.607 L1106.13 683.607 L1105.57 683.607 L1105.01 683.607 L1104.45 683.607 L1103.89 683.607 L1103.33 683.607 L1102.77 683.607 L1102.22 683.607 L1101.66 683.607 L1101.1 683.607 L1100.54 683.607 L1099.98 683.607 L1099.42 683.607 L1098.86 683.607 L1098.3 683.607 L1097.74 683.607 L1097.18 683.607 L1096.62 683.607 L1096.06 683.607 L1095.5 683.607 L1094.94 683.607 L1094.39 683.607 L1093.83 683.607 L1093.27 683.607 L1092.71 683.607 L1092.15 683.607 L1091.59 683.607 L1091.03 683.607 L1090.47 683.607 L1089.91 683.607 L1089.35 683.607 L1088.79 683.607 L1088.23 683.607 L1087.67 683.607 L1087.12 683.607 L1086.56 683.607 L1086 683.607 L1085.44 683.607 L1084.88 683.607 L1084.32 683.607 L1083.76 683.607 L1083.2 683.607 L1082.64 683.607 L1082.08 683.607 L1081.52 683.607 L1080.96 683.607 L1080.4 683.607 L1079.85 683.607 L1079.29 683.607 L1078.73 683.607 L1078.17 683.607 L1077.61 683.607 L1077.05 683.607 L1076.49 683.607 L1075.93 683.607 L1075.37 683.607 L1074.81 683.607 L1074.25 683.607 L1073.69 683.607 L1073.13 683.607 L1072.57 683.607 L1072.02 683.607 L1071.46 683.607 L1070.9 683.607 L1070.34 683.607 L1069.78 683.607 L1069.22 683.607 L1068.66 683.607 L1068.1 683.607 L1067.54 683.607 L1066.98 683.607 L1066.42 683.607 L1065.86 683.607 L1065.3 683.607 L1064.75 683.607 L1064.19 683.607 L1063.63 683.607 L1063.07 683.607 L1062.51 683.607 L1061.95 683.607 L1061.39 683.607 L1060.83 683.607 L1060.27 683.607 L1059.71 683.607 L1059.15 683.607 L1058.59 683.607 L1058.03 683.607 L1057.48 683.607 L1056.92 683.607 L1056.36 683.607 L1055.8 683.607 L1055.24 683.607 L1054.68 683.607 L1054.12 683.607 L1053.56 683.607 L1053 683.607 L1052.44 683.607 L1051.88 683.607 L1051.32 683.607 L1050.76 683.607 L1050.2 683.607 L1049.65 683.607 L1049.09 683.607 L1048.53 683.607 L1047.97 683.607 L1047.41 683.607 L1046.85 683.607 L1046.29 683.607 L1045.73 683.607 L1045.17 683.607 L1044.61 683.607 L1044.05 683.607 L1043.49 683.607 L1042.93 683.607 L1042.38 683.607 L1041.82 683.607 L1041.26 683.607 L1040.7 683.607 L1040.14 683.607 L1039.58 683.607 L1039.02 683.607 L1038.46 683.607 L1037.9 683.607 L1037.34 683.607 L1036.78 683.607 L1036.22 683.607 L1035.66 683.607 L1035.1 683.607 L1034.55 683.607 L1033.99 683.607 L1033.43 683.607 L1032.87 683.607 L1032.31 683.607 L1031.75 683.607 L1031.19 683.607 L1030.63 683.607 L1030.07 683.607 L1029.51 683.607 L1028.95 683.607 L1028.39 683.607 L1027.83 683.607 L1027.28 683.607 L1026.72 683.607 L1026.16 683.607 L1025.6 683.607 L1025.04 683.607 L1024.48 683.607 L1023.92 683.607 L1023.36 683.607 L1022.8 683.607 L1022.24 683.607 L1021.68 683.607 L1021.12 683.607 L1020.56 683.607 L1020.01 683.607 L1019.45 683.607 L1018.89 683.607 L1018.33 683.607 L1017.77 683.607 L1017.21 683.607 L1016.65 683.607 L1016.09 683.607 L1015.53 683.607 L1014.97 683.607 L1014.41 683.607 L1013.85 683.607 L1013.29 683.607 L1012.73 683.607 L1012.18 683.607 L1011.62 683.607 L1011.06 683.607 L1010.5 683.607 L1009.94 683.607 L1009.38 683.607 L1008.82 683.607 L1008.26 683.607 L1007.7 683.607 L1007.14 683.607 L1006.58 683.607 L1006.02 683.607 L1005.46 683.607 L1004.91 683.607 L1004.35 683.607 L1003.79 683.607 L1003.23 683.607 L1002.67 683.607 L1002.11 683.607 L1001.55 683.607 L1000.99 683.607 L1000.43 683.607 L999.872 683.607 L999.313 683.607 L998.754 683.607 L998.194 683.607 L997.635 683.607 L997.076 683.607 L996.517 683.607 L995.957 683.607 L995.398 683.607 L994.839 683.607 L994.28 683.607 L993.72 683.607 L993.161 683.607 L992.602 683.607 L992.043 683.607 L991.483 683.607 L990.924 683.607 L990.365 683.607 L989.806 683.607 L989.246 683.607 L988.687 683.607 L988.128 683.607 L987.569 683.607 L987.009 683.607 L986.45 683.607 L985.891 683.607 L985.332 683.607 L984.772 683.607 L984.213 683.607 L983.654 683.607 L983.095 683.607 L982.535 683.607 L981.976 683.607 L981.417 683.607 L980.858 683.607 L980.298 683.607 L979.739 683.607 L979.18 683.607 L978.621 683.607 L978.061 683.607 L977.502 683.607 L976.943 683.607 L976.384 683.607 L975.824 683.607 L975.265 683.607 L974.706 683.607 L974.147 683.607 L973.587 683.607 L973.028 683.607 L972.469 683.607 L971.91 683.607 L971.35 683.607 L970.791 683.607 L970.232 683.607 L969.673 683.607 L969.113 683.607 L968.554 683.607 L967.995 683.607 L967.436 683.607 L966.876 683.607 L966.317 683.607 L965.758 683.607 L965.199 683.607 L964.639 683.607 L964.08 683.607 L963.521 683.607 L962.962 683.607 L962.402 683.607 L961.843 683.607 L961.284 683.607 L960.725 683.607 L960.165 683.607 L959.606 683.607 L959.047 683.607 L958.488 683.607 L957.928 683.607 L957.369 683.607 L956.81 683.607 L956.251 683.607 L955.691 683.607 L955.132 683.607 L954.573 683.607 L954.014 683.607 L953.454 683.607 L952.895 683.607 L952.336 683.607 L951.777 683.607 L951.217 683.607 L950.658 683.607 L950.099 683.607 L949.54 683.607 L948.98 683.607 L948.421 683.607 L947.862 683.607 L947.303 683.607 L946.743 683.607 L946.184 683.607 L945.625 683.607 L945.066 683.607 L944.506 683.607 L943.947 683.607 L943.388 683.607 L942.829 683.607 L942.269 683.607 L941.71 683.607 L941.151 683.607 L940.592 683.607 L940.032 683.607 L939.473 683.607 L938.914 683.607 L938.355 683.607 L937.795 683.607 L937.236 683.607 L936.677 683.607 L936.118 683.607 L935.558 683.607 L934.999 683.607 L934.44 683.607 L933.881 683.607 L933.321 683.607 L932.762 683.607 L932.203 683.607 L931.644 683.607 L931.084 683.607 L930.525 683.607 L929.966 683.607 L929.406 683.607 L928.847 683.607 L928.288 683.607 L927.729 683.607 L927.169 683.607 L926.61 683.607 L926.051 683.607 L925.492 683.607 L924.932 683.607 L924.373 683.607 L923.814 683.607 L923.255 683.607 L922.695 683.607 L922.136 683.607 L921.577 683.607 L921.018 683.607 L920.458 683.607 L919.899 683.607 L919.34 683.607 L918.781 683.607 L918.221 683.607 L917.662 683.607 L917.103 683.607 L916.544 683.607 L915.984 683.607 L915.425 683.607 L914.866 683.607 L914.307 683.607 L913.747 683.607 L913.188 683.607 L912.629 683.607 L912.07 683.607 L911.51 683.607 L910.951 683.607 L910.392 683.607 L909.833 683.607 L909.273 683.607 L908.714 683.607 L908.155 683.607 L907.596 683.607 L907.036 683.607 L906.477 683.607 L905.918 683.607 L905.359 683.607 L904.799 683.607 L904.24 683.607 L903.681 683.607 L903.122 683.607 L902.562 683.607 L902.003 683.607 L901.444 683.607 L900.885 683.607 L900.325 683.607 L899.766 683.607 L899.207 683.607 L898.648 683.607 L898.088 683.607 L897.529 683.607 L896.97 683.607 L896.411 683.607 L895.851 683.607 L895.292 683.607 L894.733 683.607 L894.174 683.607 L893.614 683.607 L893.055 683.607 L892.496 683.607 L891.937 683.607 L891.377 683.607 L890.818 683.607 L890.259 683.607 L889.7 683.607 L889.14 683.607 L888.581 683.607 L888.022 683.607 L887.463 683.607 L886.903 683.607 L886.344 683.607 L885.785 683.607 L885.226 683.607 L884.666 683.607 L884.107 683.607 L883.548 683.607 L882.989 683.607 L882.429 683.607 L881.87 683.607 L881.311 683.607 L880.752 683.607 L880.192 683.607 L879.633 683.607 L879.074 683.607 L878.515 683.607 L877.955 683.607 L877.396 683.607 L876.837 683.607 L876.278 683.607 L875.718 683.607 L875.159 683.607 L874.6 683.607 L874.041 683.607 L873.481 683.607 L872.922 683.607 L872.363 683.607 L871.804 683.607 L871.244 683.607 L870.685 683.607 L870.126 683.607 L869.567 683.607 L869.007 683.607 L868.448 683.607 L867.889 683.607 L867.33 683.607 L866.77 683.607 L866.211 683.607 L865.652 683.607 L865.093 683.607 L864.533 683.607 L863.974 683.607 L863.415 683.607 L862.856 683.607 L862.296 683.607 L861.737 683.607 L861.178 683.607 L860.619 683.607 L860.059 683.607 L859.5 683.607 L858.941 683.607 L858.382 683.607 L857.822 683.607 L857.263 683.607 L856.704 683.607 L856.145 683.607 L855.585 683.607 L855.026 683.607 L854.467 683.607 L853.908 683.607 L853.348 683.607 L852.789 683.607 L852.23 683.607 L851.671 683.607 L851.111 683.607 L850.552 683.607 L849.993 683.607 L849.434 683.607 L848.874 683.607 L848.315 683.607 L847.756 683.607 L847.197 683.607 L846.637 683.607 L846.078 683.607 L845.519 683.607 L844.96 683.607 L844.4 683.607 L843.841 683.607 L843.282 683.607 L842.723 683.607 L842.163 683.607 L841.604 683.607 L841.045 683.607 L840.486 683.607 L839.926 683.607 L839.367 683.607 L838.808 683.607 L838.249 683.607 L837.689 683.607 L837.13 683.607 L836.571 683.607 L836.012 683.607 L835.452 683.607 L834.893 683.607 L834.334 683.607 L833.775 683.607 L833.215 683.607 L832.656 683.607 L832.097 683.607 L831.538 683.607 L830.978 683.607 L830.419 683.607 L829.86 683.607 L829.301 683.607 L828.741 683.607 L828.182 683.607 L827.623 683.607 L827.064 683.607 L826.504 683.607 L825.945 683.607 L825.386 683.607 L824.827 683.607 L824.267 683.607 L823.708 683.607 L823.149 683.607 L822.59 683.607 L822.03 683.607 L821.471 683.607 L820.912 683.607 L820.353 683.607 L819.793 683.607 L819.234 683.607 L818.675 683.607 L818.116 683.607 L817.556 683.607 L816.997 683.607 L816.438 683.607 L815.879 683.607 L815.319 683.607 L814.76 683.607 L814.201 683.607 L813.642 683.607 L813.082 683.607 L812.523 683.607 L811.964 683.607 L811.405 683.607 L810.845 683.607 L810.286 683.607 L809.727 683.607 L809.168 683.607 L808.608 683.607 L808.049 683.607 L807.49 683.607 L806.931 683.607 L806.371 683.607 L805.812 683.607 L805.253 683.607 L804.693 683.607 L804.134 683.607 L803.575 683.607 L803.016 683.607 L802.456 683.607 L801.897 683.607 L801.338 683.607 L800.779 683.607 L800.219 683.607 L799.66 683.607 L799.101 683.607 L798.542 683.607 L797.982 683.607 L797.423 683.607 L796.864 683.607 L796.305 683.607 L795.745 683.607 L795.186 683.607 L794.627 683.607 L794.068 683.607 L793.508 683.607 L792.949 683.607 L792.39 683.607 L791.831 683.607 L791.271 683.607 L790.712 683.607 L790.153 683.607 L789.594 683.607 L789.034 683.607 L788.475 683.607 L787.916 683.607 L787.357 683.607 L786.797 683.607 L786.238 683.607 L785.679 683.607 L785.12 683.607 L784.56 683.607 L784.001 683.607 L783.442 683.607 L782.883 683.607 L782.323 683.607 L781.764 683.607 L781.205 683.607 L780.646 683.607 L780.086 683.607 L779.527 683.607 L778.968 683.607 L778.409 683.607 L777.849 683.607 L777.29 683.607 L776.731 683.607 L776.172 683.607 L775.612 683.607 L775.053 683.607 L774.494 683.607 L773.935 683.607 L773.375 683.607 L772.816 683.607 L772.257 683.607 L771.698 683.607 L771.138 683.607 L770.579 683.607 L770.02 683.607 L769.461 683.607 L768.901 683.607 L768.342 683.607 L767.783 683.607 L767.224 683.607 L766.664 683.607 L766.105 683.607 L765.546 683.607 L764.987 683.607 L764.427 683.607 L763.868 683.607 L763.309 683.607 L762.75 683.607 L762.19 683.607 L761.631 683.607 L761.072 683.607 L760.513 683.607 L759.953 683.607 L759.394 683.607 L758.835 683.607 L758.276 683.607 L757.716 683.607 L757.157 683.607 L756.598 683.607 L756.039 683.607 L755.479 683.607 L754.92 683.607 L754.361 683.607 L753.802 683.607 L753.242 683.607 L752.683 683.607 L752.124 683.607 L751.565 683.607 L751.005 683.607 L750.446 683.607 L749.887 683.607 L749.328 683.607 L748.768 683.607 L748.209 683.607 L747.65 683.607 L747.091 683.607 L746.531 683.607 L745.972 683.607 L745.413 683.607 L744.854 683.607 L744.294 683.607 L743.735 683.607 L743.176 683.607 L742.617 683.607 L742.057 683.607 L741.498 683.607 L740.939 683.607 L740.38 683.607 L739.82 683.607 L739.261 683.607 L738.702 683.607 L738.143 683.607 L737.583 683.607 L737.024 683.607 L736.465 683.607 L735.906 683.607 L735.346 683.607 L734.787 683.607 L734.228 683.607 L733.669 683.607 L733.109 683.607 L732.55 683.607 L731.991 683.607 L731.432 683.607 L730.872 683.607 L730.313 683.607 L729.754 683.607 L729.195 683.607 L728.635 683.607 L728.076 683.607 L727.517 683.607 L726.958 683.607 L726.398 683.607 L725.839 683.607 L725.28 683.607 L724.721 683.607 L724.161 683.607 L723.602 683.607 L723.043 683.607 L722.484 683.607 L721.924 683.607 L721.365 683.607 L720.806 683.607 L720.247 683.607  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip333)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,687.846 720.806,687.846 721.365,687.846 721.924,687.846 722.484,687.846 723.043,687.846 723.602,687.846 724.161,687.846 724.721,687.846 725.28,687.846 725.839,687.846 726.398,687.846 726.958,687.846 727.517,687.846 728.076,687.846 728.635,687.846 729.195,687.846 729.754,687.846 730.313,687.846 730.872,687.846 731.432,687.846 731.991,687.846 732.55,687.846 733.109,687.846 733.669,687.846 734.228,687.846 734.787,687.846 735.346,687.846 735.906,687.846 736.465,687.846 737.024,687.846 737.583,687.846 738.143,687.846 738.702,687.846 739.261,687.846 739.82,687.846 740.38,687.846 740.939,687.846 741.498,687.846 742.057,687.846 742.617,687.846 743.176,687.846 743.735,687.846 744.294,687.846 744.854,687.846 745.413,687.846 745.972,687.846 746.531,687.846 747.091,687.846 747.65,687.846 748.209,687.846 748.768,687.846 749.328,687.846 749.887,687.846 750.446,687.846 751.005,687.846 751.565,687.846 752.124,687.846 752.683,687.846 753.242,687.846 753.802,687.846 754.361,687.846 754.92,687.846 755.479,687.846 756.039,687.846 756.598,687.846 757.157,687.846 757.716,687.846 758.276,687.846 758.835,687.846 759.394,687.846 759.953,687.846 760.513,687.846 761.072,687.846 761.631,687.846 762.19,687.846 762.75,687.846 763.309,687.846 763.868,687.846 764.427,687.846 764.987,687.846 765.546,687.846 766.105,687.846 766.664,687.846 767.224,687.846 767.783,687.846 768.342,687.846 768.901,687.846 769.461,687.846 770.02,687.846 770.579,687.846 771.138,687.846 771.698,687.846 772.257,687.846 772.816,687.846 773.375,687.846 773.935,687.846 774.494,687.846 775.053,687.846 775.612,687.846 776.172,687.846 776.731,687.846 777.29,687.846 777.849,687.846 778.409,687.846 778.968,687.846 779.527,687.846 780.086,687.846 780.646,687.846 781.205,687.846 781.764,687.846 782.323,687.846 782.883,687.846 783.442,687.846 784.001,687.846 784.56,687.846 785.12,687.846 785.679,687.846 786.238,687.846 786.797,687.846 787.357,687.846 787.916,687.846 788.475,687.846 789.034,687.846 789.594,687.846 790.153,687.846 790.712,687.846 791.271,687.846 791.831,687.846 792.39,687.846 792.949,687.846 793.508,687.846 794.068,687.846 794.627,687.846 795.186,687.846 795.745,687.846 796.305,687.846 796.864,687.846 797.423,687.846 797.982,687.846 798.542,687.846 799.101,687.846 799.66,687.846 800.219,687.846 800.779,687.846 801.338,687.846 801.897,687.846 802.456,687.846 803.016,687.846 803.575,687.846 804.134,687.846 804.693,687.846 805.253,687.846 805.812,687.846 806.371,687.846 806.931,687.846 807.49,687.846 808.049,687.846 808.608,687.846 809.168,687.846 809.727,687.846 810.286,687.846 810.845,687.846 811.405,687.846 811.964,687.846 812.523,687.846 813.082,687.846 813.642,687.846 814.201,687.846 814.76,687.846 815.319,687.846 815.879,687.846 816.438,687.846 816.997,687.846 817.556,687.846 818.116,687.846 818.675,687.846 819.234,687.846 819.793,687.846 820.353,687.846 820.912,687.846 821.471,687.846 822.03,687.846 822.59,687.846 823.149,687.846 823.708,687.846 824.267,687.846 824.827,687.846 825.386,687.846 825.945,687.846 826.504,687.846 827.064,687.846 827.623,687.846 828.182,687.846 828.741,687.846 829.301,687.846 829.86,687.846 830.419,687.846 830.978,687.846 831.538,687.846 832.097,687.846 832.656,687.846 833.215,687.846 833.775,687.846 834.334,687.846 834.893,687.846 835.452,687.846 836.012,687.846 836.571,687.846 837.13,687.846 837.689,687.846 838.249,687.846 838.808,687.846 839.367,687.846 839.926,687.846 840.486,687.846 841.045,687.846 841.604,687.846 842.163,687.846 842.723,687.846 843.282,687.846 843.841,687.846 844.4,687.846 844.96,687.846 845.519,687.846 846.078,687.846 846.637,687.846 847.197,687.846 847.756,687.846 848.315,687.846 848.874,687.846 849.434,687.846 849.993,687.846 850.552,687.846 851.111,687.846 851.671,687.846 852.23,687.846 852.789,687.846 853.348,687.846 853.908,687.846 854.467,687.846 855.026,687.846 855.585,687.846 856.145,687.846 856.704,687.846 857.263,687.846 857.822,687.846 858.382,687.846 858.941,687.846 859.5,687.846 860.059,687.846 860.619,687.846 861.178,687.846 861.737,687.846 862.296,687.846 862.856,687.846 863.415,687.846 863.974,687.846 864.533,687.846 865.093,687.846 865.652,687.846 866.211,687.846 866.77,687.846 867.33,687.846 867.889,687.846 868.448,687.846 869.007,687.846 869.567,687.846 870.126,687.846 870.685,687.846 871.244,687.846 871.804,687.846 872.363,687.846 872.922,687.846 873.481,687.846 874.041,687.846 874.6,687.846 875.159,687.846 875.718,687.846 876.278,687.846 876.837,687.846 877.396,687.846 877.955,687.846 878.515,687.846 879.074,687.846 879.633,687.846 880.192,687.846 880.752,687.846 881.311,687.846 881.87,687.846 882.429,687.846 882.989,687.846 883.548,687.846 884.107,687.846 884.666,687.846 885.226,687.846 885.785,687.846 886.344,687.846 886.903,687.846 887.463,687.846 888.022,687.846 888.581,687.846 889.14,687.846 889.7,687.846 890.259,687.846 890.818,687.846 891.377,687.846 891.937,687.846 892.496,687.846 893.055,687.846 893.614,687.846 894.174,687.846 894.733,687.846 895.292,687.846 895.851,687.846 896.411,687.846 896.97,687.846 897.529,687.846 898.088,687.846 898.648,687.846 899.207,687.846 899.766,687.846 900.325,687.846 900.885,687.846 901.444,687.846 902.003,687.846 902.562,687.846 903.122,687.846 903.681,687.846 904.24,687.846 904.799,687.846 905.359,687.846 905.918,687.846 906.477,687.846 907.036,687.846 907.596,687.846 908.155,687.846 908.714,687.846 909.273,687.846 909.833,687.846 910.392,687.846 910.951,687.846 911.51,687.846 912.07,687.846 912.629,687.846 913.188,687.846 913.747,687.846 914.307,687.846 914.866,687.846 915.425,687.846 915.984,687.846 916.544,687.846 917.103,687.846 917.662,687.846 918.221,687.846 918.781,687.846 919.34,687.846 919.899,687.846 920.458,687.846 921.018,687.846 921.577,687.846 922.136,687.846 922.695,687.846 923.255,687.846 923.814,687.846 924.373,687.846 924.932,687.846 925.492,687.846 926.051,687.846 926.61,687.846 927.169,687.846 927.729,687.846 928.288,687.846 928.847,687.846 929.406,687.846 929.966,687.846 930.525,687.846 931.084,687.846 931.644,687.846 932.203,687.846 932.762,687.846 933.321,687.846 933.881,687.846 934.44,687.846 934.999,687.846 935.558,687.846 936.118,687.846 936.677,687.846 937.236,687.846 937.795,687.846 938.355,687.846 938.914,687.846 939.473,687.846 940.032,687.846 940.592,687.846 941.151,687.846 941.71,687.846 942.269,687.846 942.829,687.846 943.388,687.846 943.947,687.846 944.506,687.846 945.066,687.846 945.625,687.846 946.184,687.846 946.743,687.846 947.303,687.846 947.862,687.846 948.421,687.846 948.98,687.846 949.54,687.846 950.099,687.846 950.658,687.846 951.217,687.846 951.777,687.846 952.336,687.846 952.895,687.846 953.454,687.846 954.014,687.846 954.573,687.846 955.132,687.846 955.691,687.846 956.251,687.846 956.81,687.846 957.369,687.846 957.928,687.846 958.488,687.846 959.047,687.846 959.606,687.846 960.165,687.846 960.725,687.846 961.284,687.846 961.843,687.846 962.402,687.846 962.962,687.846 963.521,687.846 964.08,687.846 964.639,687.846 965.199,687.846 965.758,687.846 966.317,687.846 966.876,687.846 967.436,687.846 967.995,687.846 968.554,687.846 969.113,687.846 969.673,687.846 970.232,687.846 970.791,687.846 971.35,687.846 971.91,687.846 972.469,687.846 973.028,687.846 973.587,687.846 974.147,687.846 974.706,687.846 975.265,687.846 975.824,687.846 976.384,687.846 976.943,687.846 977.502,687.846 978.061,687.846 978.621,687.846 979.18,687.846 979.739,687.846 980.298,687.846 980.858,687.846 981.417,687.846 981.976,687.846 982.535,687.846 983.095,687.846 983.654,687.846 984.213,687.846 984.772,687.846 985.332,687.846 985.891,687.846 986.45,687.846 987.009,687.846 987.569,687.846 988.128,687.846 988.687,687.846 989.246,687.846 989.806,687.846 990.365,687.846 990.924,687.846 991.483,687.846 992.043,687.846 992.602,687.846 993.161,687.846 993.72,687.846 994.28,687.846 994.839,687.846 995.398,687.846 995.957,687.846 996.517,687.846 997.076,687.846 997.635,687.846 998.194,687.846 998.754,687.846 999.313,687.846 999.872,687.846 1000.43,687.846 1000.99,687.846 1001.55,687.846 1002.11,687.846 1002.67,687.846 1003.23,687.846 1003.79,687.846 1004.35,687.846 1004.91,687.846 1005.46,687.846 1006.02,687.846 1006.58,687.846 1007.14,687.846 1007.7,687.846 1008.26,687.846 1008.82,687.846 1009.38,687.846 1009.94,687.846 1010.5,687.846 1011.06,687.846 1011.62,687.846 1012.18,687.846 1012.73,687.846 1013.29,687.846 1013.85,687.846 1014.41,687.846 1014.97,687.846 1015.53,687.846 1016.09,687.846 1016.65,687.846 1017.21,687.846 1017.77,687.846 1018.33,687.846 1018.89,687.846 1019.45,687.846 1020.01,687.846 1020.56,687.846 1021.12,687.846 1021.68,687.846 1022.24,687.846 1022.8,687.846 1023.36,687.846 1023.92,687.846 1024.48,687.846 1025.04,687.846 1025.6,687.846 1026.16,687.846 1026.72,687.846 1027.28,687.846 1027.83,687.846 1028.39,687.846 1028.95,687.846 1029.51,687.846 1030.07,687.846 1030.63,687.846 1031.19,687.846 1031.75,687.846 1032.31,687.846 1032.87,687.846 1033.43,687.846 1033.99,687.846 1034.55,687.846 1035.1,687.846 1035.66,687.846 1036.22,687.846 1036.78,687.846 1037.34,687.846 1037.9,687.846 1038.46,687.846 1039.02,687.846 1039.58,687.846 1040.14,687.846 1040.7,687.846 1041.26,687.846 1041.82,687.846 1042.38,687.846 1042.93,687.846 1043.49,687.846 1044.05,687.846 1044.61,687.846 1045.17,687.846 1045.73,687.846 1046.29,687.846 1046.85,687.846 1047.41,687.846 1047.97,687.846 1048.53,687.846 1049.09,687.846 1049.65,687.846 1050.2,687.846 1050.76,687.846 1051.32,687.846 1051.88,687.846 1052.44,687.846 1053,687.846 1053.56,687.846 1054.12,687.846 1054.68,687.846 1055.24,687.846 1055.8,687.846 1056.36,687.846 1056.92,687.846 1057.48,687.846 1058.03,687.846 1058.59,687.846 1059.15,687.846 1059.71,687.846 1060.27,687.846 1060.83,687.846 1061.39,687.846 1061.95,687.846 1062.51,687.846 1063.07,687.846 1063.63,687.846 1064.19,687.846 1064.75,687.846 1065.3,687.846 1065.86,687.846 1066.42,687.846 1066.98,687.846 1067.54,687.846 1068.1,687.846 1068.66,687.846 1069.22,687.846 1069.78,687.846 1070.34,687.846 1070.9,687.846 1071.46,687.846 1072.02,687.846 1072.57,687.846 1073.13,687.846 1073.69,687.846 1074.25,687.846 1074.81,687.846 1075.37,687.846 1075.93,687.846 1076.49,687.846 1077.05,687.846 1077.61,687.846 1078.17,687.846 1078.73,687.846 1079.29,687.846 1079.85,687.846 1080.4,687.846 1080.96,687.846 1081.52,687.846 1082.08,687.846 1082.64,687.846 1083.2,687.846 1083.76,687.846 1084.32,687.846 1084.88,687.846 1085.44,687.846 1086,687.846 1086.56,687.846 1087.12,687.846 1087.67,687.846 1088.23,687.846 1088.79,687.846 1089.35,687.846 1089.91,687.846 1090.47,687.846 1091.03,687.846 1091.59,687.846 1092.15,687.846 1092.71,687.846 1093.27,687.846 1093.83,687.846 1094.39,687.846 1094.94,687.846 1095.5,687.846 1096.06,687.846 1096.62,687.846 1097.18,687.846 1097.74,687.846 1098.3,687.846 1098.86,687.846 1099.42,687.846 1099.98,687.846 1100.54,687.846 1101.1,687.846 1101.66,687.846 1102.22,687.846 1102.77,687.846 1103.33,687.846 1103.89,687.846 1104.45,687.846 1105.01,687.846 1105.57,687.846 1106.13,687.846 1106.69,687.846 1107.25,687.846 1107.81,687.846 1108.37,687.846 1108.93,687.846 1109.49,687.846 1110.04,687.846 1110.6,687.846 1111.16,687.846 1111.72,687.846 1112.28,687.846 1112.84,687.846 1113.4,687.846 1113.96,687.846 1114.52,687.846 1115.08,687.846 1115.64,687.846 1116.2,687.846 1116.76,687.846 1117.31,687.846 1117.87,687.846 1118.43,687.846 1118.99,687.846 1119.55,687.846 1120.11,687.846 1120.67,687.846 1121.23,687.846 1121.79,687.846 1122.35,687.846 1122.91,687.846 1123.47,687.846 1124.03,687.846 1124.59,687.846 1125.14,687.846 1125.7,687.846 1126.26,687.846 1126.82,687.846 1127.38,687.846 1127.94,687.846 1128.5,687.846 1129.06,687.846 1129.62,687.846 1130.18,687.846 1130.74,687.846 1131.3,687.846 1131.86,687.846 1132.41,687.846 1132.97,687.846 1133.53,687.846 1134.09,687.846 1134.65,687.846 1135.21,687.846 1135.77,687.846 1136.33,687.846 1136.89,687.846 1137.45,687.846 1138.01,687.846 1138.57,687.846 1139.13,687.846 1139.68,687.846 1140.24,687.846 1140.8,687.846 1141.36,687.846 1141.92,687.846 1142.48,687.846 1143.04,687.846 1143.6,687.846 1144.16,687.846 1144.72,687.846 1145.28,687.846 1145.84,687.846 1146.4,687.846 1146.96,687.846 1147.51,687.846 1148.07,687.846 1148.63,687.846 1149.19,687.846 1149.75,687.846 1150.31,687.846 1150.87,687.846 1151.43,687.846 1151.99,687.846 1152.55,687.846 1153.11,687.846 1153.67,687.846 1154.23,687.846 1154.78,687.846 1155.34,687.846 1155.9,687.846 1156.46,687.846 1157.02,687.846 1157.58,687.846 1158.14,687.846 1158.7,687.846 1159.26,687.846 1159.82,687.846 1160.38,687.846 1160.94,687.846 1161.5,687.846 1162.05,687.846 1162.61,687.846 1163.17,687.846 1163.73,687.846 1164.29,687.846 1164.85,687.846 1165.41,687.846 1165.97,687.846 1166.53,687.846 1167.09,687.846 1167.65,687.846 1168.21,687.846 1168.77,687.846 1169.33,687.846 1169.88,687.846 1170.44,687.846 1171,687.846 1171.56,687.846 1172.12,687.846 1172.68,687.846 1173.24,687.846 1173.8,687.846 1174.36,687.846 1174.92,687.846 1175.48,687.846 1176.04,687.846 1176.6,687.846 1177.15,687.846 1177.71,687.846 1178.27,687.846 1178.83,687.846 1179.39,687.846 1179.95,687.846 1180.51,687.846 1181.07,687.846 1181.63,687.846 1182.19,687.846 1182.75,687.846 1183.31,687.846 1183.87,687.846 1184.43,687.846 1184.98,687.846 1185.54,687.846 1186.1,687.846 1186.66,687.846 1187.22,687.846 1187.78,687.846 1188.34,687.846 1188.9,687.846 1189.46,687.846 1190.02,687.846 1190.58,687.846 1191.14,687.846 1191.7,687.846 1192.25,687.846 1192.81,687.846 1193.37,687.846 1193.93,687.846 1194.49,687.846 1195.05,687.846 1195.61,687.846 1196.17,687.846 1196.73,687.846 1197.29,687.846 1197.85,687.846 1198.41,687.846 1198.97,687.846 1199.52,687.846 1200.08,687.846 1200.64,687.846 1201.2,687.846 1201.76,687.846 1202.32,687.846 1202.88,687.846 1203.44,687.846 1204,687.846 1204.56,687.846 1205.12,687.846 1205.68,687.846 1206.24,687.846 1206.8,687.846 1207.35,687.846 1207.91,687.846 1208.47,687.846 1209.03,687.846 1209.59,687.846 1210.15,687.846 1210.71,687.846 1211.27,687.846 1211.83,687.846 1212.39,687.846 1212.95,687.846 1213.51,687.846 1214.07,687.846 1214.62,687.846 1215.18,687.846 1215.74,687.846 1216.3,687.846 1216.86,687.846 1217.42,687.846 1217.98,687.846 1218.54,687.846 1219.1,687.846 1219.66,687.846 1220.22,687.846 1220.78,687.846 1221.34,687.846 1221.89,687.846 1222.45,687.846 1223.01,687.846 1223.57,687.846 1224.13,687.846 1224.69,687.846 1225.25,687.846 1225.81,687.846 1226.37,687.846 1226.93,687.846 1227.49,687.846 1228.05,687.846 1228.61,687.846 1229.17,687.846 1229.72,687.846 1230.28,687.846 1230.84,687.846 1231.4,687.846 1231.96,687.846 1232.52,687.846 1233.08,687.846 1233.64,687.846 1234.2,687.846 1234.76,687.846 1235.32,687.846 1235.88,687.846 1236.44,687.846 1236.99,687.846 1237.55,687.846 1238.11,687.846 1238.67,687.846 1239.23,687.846 1239.79,687.846 1240.35,687.846 1240.91,687.846 1241.47,687.846 1242.03,687.846 1242.59,687.846 1243.15,687.846 1243.71,687.846 1244.26,687.846 1244.82,687.846 1245.38,687.846 1245.94,687.846 1246.5,687.846 1247.06,687.846 1247.62,687.846 1248.18,687.846 1248.74,687.846 1249.3,687.846 1249.86,687.846 1250.42,687.846 1250.98,687.846 1251.54,687.846 1252.09,687.846 1252.65,687.846 1253.21,687.846 1253.77,687.846 1254.33,687.846 1254.89,687.846 1255.45,687.846 1256.01,687.846 1256.57,687.846 1257.13,687.846 1257.69,687.846 1258.25,687.846 1258.81,687.846 1259.36,687.846 1259.92,687.846 1260.48,687.846 1261.04,687.846 1261.6,687.846 1262.16,687.846 1262.72,687.846 1263.28,687.846 1263.84,687.846 1264.4,687.846 1264.96,687.846 1265.52,687.846 1266.08,687.846 1266.63,687.846 1267.19,687.846 1267.75,687.846 1268.31,687.846 1268.87,687.846 1269.43,687.846 1269.99,687.846 1270.55,687.846 1271.11,687.846 1271.67,687.846 1272.23,687.846 1272.79,687.846 1273.35,687.846 1273.91,687.846 1274.46,687.846 1275.02,687.846 1275.58,687.846 1276.14,687.846 1276.7,687.846 1277.26,687.846 1277.82,687.846 1278.38,687.846 1278.94,687.846 1279.5,687.846 1280.06,687.846 1280.62,687.846 1281.18,687.846 1281.73,687.846 1282.29,687.846 1282.85,687.846 1283.41,687.846 1283.97,687.846 1284.53,687.846 1285.09,687.846 1285.65,687.846 1286.21,687.846 1286.77,687.846 1287.33,687.846 1287.89,687.846 1288.45,687.846 1289,687.846 1289.56,687.846 1290.12,687.846 1290.68,687.846 1291.24,687.846 1291.8,687.846 1292.36,687.846 1292.92,687.846 1293.48,687.846 1294.04,687.846 1294.6,687.846 1295.16,687.846 1295.72,687.846 1296.28,687.846 1296.83,687.846 1297.39,687.846 1297.95,687.846 1298.51,687.846 1299.07,687.846 1299.63,687.846 1300.19,687.846 1300.75,687.846 1301.31,687.846 1301.87,687.846 1302.43,687.846 1302.99,687.846 1303.55,687.846 1304.1,687.846 1304.66,687.846 1305.22,687.846 1305.78,687.846 1306.34,687.846 1306.9,687.846 1307.46,687.846 1308.02,687.846 1308.58,687.846 1309.14,687.846 1309.7,687.846 1310.26,687.846 1310.82,687.846 1311.38,687.846 1311.93,687.846 1312.49,687.846 1313.05,687.846 1313.61,687.846 1314.17,687.846 1314.73,687.846 1315.29,687.846 1315.85,687.846 1316.41,687.846 1316.97,687.846 1317.53,687.846 1318.09,687.846 1318.65,687.846 1319.2,687.846 1319.76,687.846 1320.32,687.846 1320.88,687.846 1321.44,687.846 1322,687.846 1322.56,687.846 1323.12,687.846 1323.68,687.846 1324.24,687.846 1324.8,687.846 1325.36,687.846 1325.92,687.846 1326.47,687.846 1327.03,687.846 1327.59,687.846 1328.15,687.846 1328.71,687.846 1329.27,687.846 1329.83,687.846 1330.39,687.846 1330.95,687.846 1331.51,687.846 1332.07,687.846 1332.63,687.846 1333.19,687.846 1333.75,687.846 1334.3,687.846 1334.86,687.846 1335.42,687.846 1335.98,687.846 1336.54,687.846 1337.1,687.846 1337.66,687.846 1338.22,687.846 1338.78,687.846 1339.34,687.846 1339.9,687.846 1340.46,687.846 1341.02,687.846 1341.57,687.846 1342.13,687.846 1342.69,687.846 1343.25,687.846 1343.81,687.846 1344.37,687.846 1344.93,687.846 1345.49,687.846 1346.05,687.846 1346.61,687.846 1347.17,687.846 1347.73,687.846 1348.29,687.846 1348.84,687.846 1349.4,687.846 1349.96,687.846 1350.52,687.846 1351.08,687.846 1351.64,687.846 1352.2,687.846 1352.76,687.846 1353.32,687.846 1353.88,687.846 1354.44,687.846 1355,687.846 1355.56,687.846 1356.12,687.846 1356.67,687.846 1357.23,687.846 1357.79,687.846 1358.35,687.846 1358.91,687.846 1359.47,687.846 1360.03,687.846 1360.59,687.846 1361.15,687.846 1361.71,687.846 1362.27,687.846 1362.83,687.846 1363.39,687.846 1363.94,687.846 1364.5,687.846 1365.06,687.846 1365.62,687.846 1366.18,687.846 1366.74,687.846 1367.3,687.846 1367.86,687.846 1368.42,687.846 1368.98,687.846 1369.54,687.846 1370.1,687.846 1370.66,687.846 1371.21,687.846 1371.77,687.846 1372.33,687.846 1372.89,687.846 1373.45,687.846 1374.01,687.846 1374.57,687.846 1375.13,687.846 1375.69,687.846 1376.25,687.846 1376.81,687.846 1377.37,687.846 1377.93,687.846 1378.49,687.846 1379.04,687.846 1379.6,687.846 1380.16,687.846 1380.72,687.846 1381.28,687.846 1381.84,687.846 1382.4,687.846 1382.96,687.846 1383.52,687.846 1384.08,687.846 1384.64,687.846 1385.2,687.846 1385.76,687.846 1386.31,687.846 1386.87,687.846 1387.43,687.846 1387.99,687.846 1388.55,687.846 1389.11,687.846 1389.67,687.846 1390.23,687.846 1390.79,687.846 1391.35,687.846 1391.91,687.846 1392.47,687.846 1393.03,687.846 1393.58,687.846 1394.14,687.846 1394.7,687.846 1395.26,687.846 1395.82,687.846 1396.38,687.846 1396.94,687.846 1397.5,687.846 1398.06,687.846 1398.62,687.846 1399.18,687.846 1399.74,687.846 1400.3,687.846 1400.86,687.846 1401.41,687.846 1401.97,687.846 1402.53,687.846 1403.09,687.846 1403.65,687.846 1404.21,687.846 1404.77,687.846 1405.33,687.846 1405.89,687.846 1406.45,687.846 1407.01,687.846 1407.57,687.846 1408.13,687.846 1408.68,687.846 1409.24,687.846 1409.8,687.846 1410.36,687.846 1410.92,687.846 1411.48,687.846 1412.04,687.846 1412.6,687.846 1413.16,687.846 1413.72,687.846 1414.28,687.846 1414.84,687.846 1415.4,687.846 1415.95,687.846 1416.51,687.846 1417.07,687.846 1417.63,687.846 1418.19,687.846 1418.75,687.846 1419.31,687.846 1419.87,687.846 1420.43,687.846 1420.99,687.846 1421.55,687.846 1422.11,687.846 1422.67,687.846 1423.23,687.846 1423.78,687.846 1424.34,687.846 1424.9,687.846 1425.46,687.846 1426.02,687.846 1426.58,687.846 1427.14,687.846 1427.7,687.846 1428.26,687.846 1428.82,687.846 1429.38,687.846 1429.94,687.846 1430.5,687.846 1431.05,687.846 1431.61,687.846 1432.17,687.846 1432.73,687.846 1433.29,687.846 1433.85,687.846 1434.41,687.846 1434.97,687.846 1435.53,687.846 1436.09,687.846 1436.65,687.846 1437.21,687.846 1437.77,687.846 1438.33,687.846 1438.88,687.846 1439.44,687.846 1440,687.846 1440.56,687.846 1441.12,687.846 1441.68,687.846 1442.24,687.846 1442.8,687.846 1443.36,687.846 1443.92,687.846 1444.48,687.846 1445.04,687.846 1445.6,687.846 1446.15,687.846 1446.71,687.846 1447.27,687.846 1447.83,687.846 1448.39,687.846 1448.95,687.846 1449.51,687.846 1450.07,687.846 1450.63,687.846 1451.19,687.846 1451.75,687.846 1452.31,687.846 1452.87,687.846 1453.42,687.846 1453.98,687.846 1454.54,687.846 1455.1,687.846 1455.66,687.846 1456.22,687.846 1456.78,687.846 1457.34,687.846 1457.9,687.846 1458.46,687.846 1459.02,687.846 1459.58,687.846 1460.14,687.846 1460.7,687.846 1461.25,687.846 1461.81,687.846 1462.37,687.846 1462.93,687.846 1463.49,687.846 1464.05,687.846 1464.61,687.846 1465.17,687.846 1465.73,687.846 1466.29,687.846 1466.85,687.846 1467.41,687.846 1467.97,687.846 1468.52,687.846 1469.08,687.846 1469.64,687.846 1470.2,687.846 1470.76,687.846 1471.32,687.846 1471.88,687.846 1472.44,687.846 1473,687.846 1473.56,687.846 1474.12,687.846 1474.68,687.846 1475.24,687.846 1475.79,687.846 1476.35,687.846 1476.91,687.846 1477.47,687.846 1478.03,687.846 1478.59,687.846 1479.15,687.846 1479.71,687.846 1480.27,687.846 1480.83,687.846 1481.39,687.846 1481.95,687.846 1482.51,687.846 1483.07,687.846 1483.62,687.846 1484.18,687.846 1484.74,687.846 1485.3,687.846 1485.86,687.846 1486.42,687.846 1486.98,687.846 1487.54,687.846 1488.1,687.846 1488.66,687.846 1489.22,687.846 1489.78,687.846 1490.34,687.846 1490.89,687.846 1491.45,687.846 1492.01,687.846 1492.57,687.846 1493.13,687.846 1493.69,687.846 1494.25,687.846 1494.81,687.846 1495.37,687.846 1495.93,687.846 1496.49,687.846 1497.05,687.846 1497.61,687.846 1498.16,687.846 1498.72,687.846 1499.28,687.846 1499.84,687.846 1500.4,687.846 1500.96,687.846 1501.52,687.846 1502.08,687.846 1502.64,687.846 1503.2,687.846 1503.76,687.846 1504.32,687.846 1504.88,687.846 1505.44,687.846 1505.99,687.846 1506.55,687.846 1507.11,687.846 1507.67,687.846 1508.23,687.846 1508.79,687.846 1509.35,687.846 1509.91,687.846 1510.47,687.846 1511.03,687.846 1511.59,687.846 1512.15,687.846 1512.71,687.846 1513.26,687.846 1513.82,687.846 1514.38,687.846 1514.94,687.846 1515.5,687.846 1516.06,687.846 1516.62,687.846 1517.18,687.846 1517.74,687.846 1518.3,687.846 1518.86,687.846 1519.42,687.846 1519.98,687.846 1520.53,687.846 1521.09,687.846 1521.65,687.846 1522.21,687.846 1522.77,687.846 1523.33,687.846 1523.89,687.846 1524.45,687.846 1525.01,687.846 1525.57,687.846 1526.13,687.846 1526.69,687.846 1527.25,687.846 1527.81,687.846 1528.36,687.846 1528.92,687.846 1529.48,687.846 1530.04,687.846 1530.6,687.846 1531.16,687.846 1531.72,687.846 1532.28,687.846 1532.84,687.846 1533.4,687.846 1533.96,687.846 1534.52,687.846 1535.08,687.846 1535.63,687.846 1536.19,687.846 1536.75,687.846 1537.31,687.846 1537.87,687.846 1538.43,687.846 1538.99,687.846 1539.55,687.846 1540.11,687.846 1540.67,687.846 1541.23,687.846 1541.79,687.846 1542.35,687.846 1542.9,687.846 1543.46,687.846 1544.02,687.846 1544.58,687.846 1545.14,687.846 1545.7,687.846 1546.26,687.846 1546.82,687.846 1547.38,687.846 1547.94,687.846 1548.5,687.846 1549.06,687.846 1549.62,687.846 1550.18,687.846 1550.73,687.846 1551.29,687.846 1551.85,687.846 1552.41,687.846 1552.97,687.846 1553.53,687.846 1554.09,687.846 1554.65,687.846 1555.21,687.846 1555.77,687.846 1556.33,687.846 1556.89,687.846 1557.45,687.846 1558,687.846 1558.56,687.846 1559.12,687.846 1559.68,687.846 1560.24,687.846 1560.8,687.846 1561.36,687.846 1561.92,687.846 1562.48,687.846 1563.04,687.846 1563.6,687.846 1564.16,687.846 1564.72,687.846 1565.28,687.846 1565.83,687.846 1566.39,687.846 1566.95,687.846 1567.51,687.846 1568.07,687.846 1568.63,687.846 1569.19,687.846 1569.75,687.846 1570.31,687.846 1570.87,687.846 1571.43,687.846 1571.99,687.846 1572.55,687.846 1573.1,687.846 1573.66,687.846 1574.22,687.846 1574.78,687.846 1575.34,687.846 1575.9,687.846 1576.46,687.846 1577.02,687.846 1577.58,687.846 1578.14,687.846 1578.7,687.846 1579.26,687.846 1579.82,687.846 1580.37,687.846 1580.93,687.846 1581.49,687.846 1582.05,687.846 1582.61,687.846 1583.17,687.846 1583.73,687.846 1584.29,687.846 1584.85,687.846 1585.41,687.846 1585.97,687.846 1586.53,687.846 1587.09,687.846 1587.65,687.846 1588.2,687.846 1588.76,687.846 1589.32,687.846 1589.88,687.846 1590.44,687.846 1591,687.846 1591.56,687.846 1592.12,687.846 1592.68,687.846 1593.24,687.846 1593.8,687.846 1594.36,687.846 1594.92,687.846 1595.47,687.846 1596.03,687.846 1596.59,687.846 1597.15,687.846 1597.71,687.846 1598.27,687.846 1598.83,687.846 1599.39,687.846 1599.95,687.846 1600.51,687.846 1601.07,687.846 1601.63,687.846 1602.19,687.846 1602.74,687.846 1603.3,687.846 1603.86,687.846 1604.42,687.846 1604.98,687.846 1605.54,687.846 1606.1,687.846 1606.66,687.846 1607.22,687.846 1607.78,687.846 1608.34,687.846 1608.9,687.846 1609.46,687.846 1610.02,687.846 1610.57,687.846 1611.13,687.846 1611.69,687.846 1612.25,687.846 1612.81,687.846 1613.37,687.846 1613.93,687.846 1614.49,687.846 1615.05,687.846 1615.61,687.846 1616.17,687.846 1616.73,687.846 1617.29,687.846 1617.84,687.846 1618.4,687.846 1618.96,687.846 1619.52,687.846 1620.08,687.846 1620.64,687.846 1621.2,687.846 1621.76,687.846 1622.32,687.846 1622.88,687.846 1623.44,687.846 1624,687.846 1624.56,687.846 1625.11,687.846 1625.67,687.846 1626.23,687.846 1626.79,687.846 1627.35,687.846 1627.91,687.846 1628.47,687.846 1629.03,687.846 1629.59,687.846 1630.15,687.846 1630.71,687.846 1631.27,687.846 1631.83,687.846 1632.39,687.846 1632.94,687.846 1633.5,687.846 1634.06,687.846 1634.62,687.846 1635.18,687.846 1635.74,687.846 1636.3,687.846 1636.86,687.846 1637.42,687.846 1637.98,687.846 1638.54,687.846 1639.1,687.846 1639.66,687.846 1640.21,687.846 1640.77,687.846 1641.33,687.846 1641.89,687.846 1642.45,687.846 1643.01,687.846 1643.57,687.846 1644.13,687.846 1644.69,687.846 1645.25,687.846 1645.81,687.846 1646.37,687.846 1646.93,687.846 1647.48,687.846 1648.04,687.846 1648.6,687.846 1649.16,687.846 1649.72,687.846 1650.28,687.846 1650.84,687.846 1651.4,687.846 1651.96,687.846 1652.52,687.846 1653.08,687.846 1653.64,687.846 1654.2,687.846 1654.76,687.846 1655.31,687.846 1655.87,687.846 1656.43,687.846 1656.99,687.846 1657.55,687.846 1658.11,687.846 1658.67,687.846 1659.23,687.846 1659.79,687.846 1660.35,687.846 1660.91,687.846 1661.47,687.846 1662.03,687.846 1662.58,687.846 1663.14,687.846 1663.7,687.846 1664.26,687.846 1664.82,687.846 1665.38,687.846 1665.94,687.846 1666.5,687.846 1667.06,687.846 1667.62,687.846 1668.18,687.846 1668.74,687.846 1669.3,687.846 1669.85,687.846 1670.41,687.846 1670.97,687.846 1671.53,687.846 1672.09,687.846 1672.65,687.846 1673.21,687.846 1673.77,687.846 1674.33,687.846 1674.89,687.846 1675.45,687.846 1676.01,687.846 1676.57,687.846 1677.13,687.846 1677.68,687.846 1678.24,687.846 1678.8,687.846 1679.36,687.846 1679.92,687.846 1680.48,687.846 1681.04,687.846 1681.6,687.846 1682.16,687.846 1682.72,687.846 1683.28,687.846 1683.84,687.846 1684.4,687.846 1684.95,687.846 1685.51,687.846 1686.07,687.846 1686.63,687.846 1687.19,687.846 1687.75,687.846 1688.31,687.846 1688.87,687.846 1689.43,687.846 1689.99,687.846 1690.55,687.846 1691.11,687.846 1691.67,687.846 1692.23,687.846 1692.78,687.846 1693.34,687.846 1693.9,687.846 1694.46,687.846 1695.02,687.846 1695.58,687.846 1696.14,687.846 1696.7,687.846 1697.26,687.846 1697.82,687.846 1698.38,687.846 1698.94,687.846 1699.5,687.846 1700.05,687.846 1700.61,687.846 1701.17,687.846 1701.73,687.846 1702.29,687.846 1702.85,687.846 1703.41,687.846 1703.97,687.846 1704.53,687.846 1705.09,687.846 1705.65,687.846 1706.21,687.846 1706.77,687.846 1707.32,687.846 1707.88,687.846 1708.44,687.846 1709,687.846 1709.56,687.846 1710.12,687.846 1710.68,687.846 1711.24,687.846 1711.8,687.846 1712.36,687.846 1712.92,687.846 1713.48,687.846 1714.04,687.846 1714.6,687.846 1715.15,687.846 1715.71,687.846 1716.27,687.846 1716.83,687.846 1717.39,687.846 1717.95,687.846 1718.51,687.846 1719.07,687.846 1719.63,687.846 1720.19,687.846 1720.75,687.846 1721.31,687.846 1721.87,687.846 1722.42,687.846 1722.98,687.846 1723.54,687.846 1724.1,687.846 1724.66,687.846 1725.22,687.846 1725.78,687.846 1726.34,687.846 1726.9,687.846 1727.46,687.846 1728.02,687.846 1728.58,687.846 1729.14,687.846 1729.69,687.846 1730.25,687.846 1730.81,687.846 1731.37,687.846 1731.93,687.846 1732.49,687.846 1733.05,687.846 1733.61,687.846 1734.17,687.846 1734.73,687.846 1735.29,687.846 1735.85,687.846 1736.41,687.846 1736.97,687.846 1737.52,687.846 1738.08,687.846 1738.64,687.846 1739.2,687.846 1739.76,687.846 1740.32,687.846 1740.88,687.846 1741.44,687.846 1742,687.846 1742.56,687.846 1743.12,687.846 1743.68,687.846 1744.24,687.846 1744.79,687.846 1745.35,687.846 1745.91,687.846 1746.47,687.846 1747.03,687.846 1747.59,687.846 1748.15,687.846 1748.71,687.846 1749.27,687.846 1749.83,687.846 1750.39,687.846 1750.95,687.846 1751.51,687.846 1752.06,687.846 1752.62,687.846 1753.18,687.846 1753.74,687.846 1754.3,687.846 1754.86,687.846 1755.42,687.846 1755.98,687.846 1756.54,687.846 1757.1,687.846 1757.66,687.846 1758.22,687.846 1758.78,687.846 1759.34,687.846 1759.89,687.846 1760.45,687.846 1761.01,687.846 1761.57,687.846 1762.13,687.846 1762.69,687.846 1763.25,687.846 1763.81,687.846 1764.37,687.846 1764.93,687.846 1765.49,687.846 1766.05,687.846 1766.61,687.846 1767.16,687.846 1767.72,687.846 1768.28,687.846 1768.84,687.846 1769.4,687.846 1769.96,687.846 1770.52,687.846 1771.08,687.846 1771.64,687.846 1772.2,687.846 1772.76,687.846 1773.32,687.846 1773.88,687.846 1774.43,687.846 1774.99,687.846 1775.55,687.846 1776.11,687.846 1776.67,687.846 1777.23,687.846 1777.79,687.846 1778.35,687.846 1778.91,687.846 1779.47,687.846 1780.03,687.846 1780.59,687.846 1781.15,687.846 1781.71,687.846 1782.26,687.846 1782.82,687.846 1783.38,687.846 1783.94,687.846 1784.5,687.846 1785.06,687.846 1785.62,687.846 1786.18,687.846 1786.74,687.846 1787.3,687.846 1787.86,687.846 1788.42,687.846 1788.98,687.846 1789.53,687.846 1790.09,687.846 1790.65,687.846 1791.21,687.846 1791.77,687.846 1792.33,687.846 1792.89,687.846 1793.45,687.846 1794.01,687.846 1794.57,687.846 1795.13,687.846 1795.69,687.846 1796.25,687.846 1796.8,687.846 1797.36,687.846 1797.92,687.846 1798.48,687.846 1799.04,687.846 1799.6,687.846 1800.16,687.846 1800.72,687.846 1801.28,687.846 1801.84,687.846 1802.4,687.846 1802.96,687.846 1803.52,687.846 1804.08,687.846 1804.63,687.846 1805.19,687.846 1805.75,687.846 1806.31,687.846 1806.87,687.846 1807.43,687.846 1807.99,687.846 1808.55,687.846 1809.11,687.846 1809.67,687.846 1810.23,687.846 1810.79,687.846 1811.35,687.846 1811.9,687.846 1812.46,687.846 1813.02,687.846 1813.58,687.846 1814.14,687.846 1814.7,687.846 1815.26,687.846 1815.82,687.846 1816.38,687.846 1816.94,687.846 1817.5,687.846 1818.06,687.846 1818.62,687.846 1819.18,687.846 1819.73,687.846 1820.29,687.846 1820.85,687.846 1821.41,687.846 1821.97,687.846 1822.53,687.846 1823.09,687.846 1823.65,687.846 1824.21,687.846 1824.77,687.846 1825.33,687.846 1825.89,687.846 1826.45,687.846 1827,687.846 1827.56,687.846 1828.12,687.846 1828.68,687.846 1829.24,687.846 1829.8,687.846 1830.36,687.846 1830.92,687.846 1831.48,687.846 1832.04,687.846 1832.6,687.846 1833.16,687.846 1833.72,687.846 1834.27,687.846 1834.83,687.846 1835.39,687.846 1835.95,687.846 1836.51,687.846 1837.07,687.846 1837.63,687.846 1838.19,687.846 \"/>\n<path clip-path=\"url(#clip333)\" d=\"M720.247 685.057 L720.806 685.057 L721.365 685.057 L721.924 685.057 L722.484 685.057 L723.043 685.057 L723.602 685.057 L724.161 685.057 L724.721 685.057 L725.28 685.057 L725.839 685.057 L726.398 685.057 L726.958 685.057 L727.517 685.057 L728.076 685.057 L728.635 685.057 L729.195 685.057 L729.754 685.057 L730.313 685.057 L730.872 685.057 L731.432 685.057 L731.991 685.057 L732.55 685.057 L733.109 685.057 L733.669 685.057 L734.228 685.057 L734.787 685.057 L735.346 685.057 L735.906 685.057 L736.465 685.057 L737.024 685.057 L737.583 685.057 L738.143 685.057 L738.702 685.057 L739.261 685.057 L739.82 685.057 L740.38 685.057 L740.939 685.057 L741.498 685.057 L742.057 685.057 L742.617 685.057 L743.176 685.057 L743.735 685.057 L744.294 685.057 L744.854 685.057 L745.413 685.057 L745.972 685.057 L746.531 685.057 L747.091 685.057 L747.65 685.057 L748.209 685.057 L748.768 685.057 L749.328 685.057 L749.887 685.057 L750.446 685.057 L751.005 685.057 L751.565 685.057 L752.124 685.057 L752.683 685.057 L753.242 685.057 L753.802 685.057 L754.361 685.057 L754.92 685.057 L755.479 685.057 L756.039 685.057 L756.598 685.057 L757.157 685.057 L757.716 685.057 L758.276 685.057 L758.835 685.057 L759.394 685.057 L759.953 685.057 L760.513 685.057 L761.072 685.057 L761.631 685.057 L762.19 685.057 L762.75 685.057 L763.309 685.057 L763.868 685.057 L764.427 685.057 L764.987 685.057 L765.546 685.057 L766.105 685.057 L766.664 685.057 L767.224 685.057 L767.783 685.057 L768.342 685.057 L768.901 685.057 L769.461 685.057 L770.02 685.057 L770.579 685.057 L771.138 685.057 L771.698 685.057 L772.257 685.057 L772.816 685.057 L773.375 685.057 L773.935 685.057 L774.494 685.057 L775.053 685.057 L775.612 685.057 L776.172 685.057 L776.731 685.057 L777.29 685.057 L777.849 685.057 L778.409 685.057 L778.968 685.057 L779.527 685.057 L780.086 685.057 L780.646 685.057 L781.205 685.057 L781.764 685.057 L782.323 685.057 L782.883 685.057 L783.442 685.057 L784.001 685.057 L784.56 685.057 L785.12 685.057 L785.679 685.057 L786.238 685.057 L786.797 685.057 L787.357 685.057 L787.916 685.057 L788.475 685.057 L789.034 685.057 L789.594 685.057 L790.153 685.057 L790.712 685.057 L791.271 685.057 L791.831 685.057 L792.39 685.057 L792.949 685.057 L793.508 685.057 L794.068 685.057 L794.627 685.057 L795.186 685.057 L795.745 685.057 L796.305 685.057 L796.864 685.057 L797.423 685.057 L797.982 685.057 L798.542 685.057 L799.101 685.057 L799.66 685.057 L800.219 685.057 L800.779 685.057 L801.338 685.057 L801.897 685.057 L802.456 685.057 L803.016 685.057 L803.575 685.057 L804.134 685.057 L804.693 685.057 L805.253 685.057 L805.812 685.057 L806.371 685.057 L806.931 685.057 L807.49 685.057 L808.049 685.057 L808.608 685.057 L809.168 685.057 L809.727 685.057 L810.286 685.057 L810.845 685.057 L811.405 685.057 L811.964 685.057 L812.523 685.057 L813.082 685.057 L813.642 685.057 L814.201 685.057 L814.76 685.057 L815.319 685.057 L815.879 685.057 L816.438 685.057 L816.997 685.057 L817.556 685.057 L818.116 685.057 L818.675 685.057 L819.234 685.057 L819.793 685.057 L820.353 685.057 L820.912 685.057 L821.471 685.057 L822.03 685.057 L822.59 685.057 L823.149 685.057 L823.708 685.057 L824.267 685.057 L824.827 685.057 L825.386 685.057 L825.945 685.057 L826.504 685.057 L827.064 685.057 L827.623 685.057 L828.182 685.057 L828.741 685.057 L829.301 685.057 L829.86 685.057 L830.419 685.057 L830.978 685.057 L831.538 685.057 L832.097 685.057 L832.656 685.057 L833.215 685.057 L833.775 685.057 L834.334 685.057 L834.893 685.057 L835.452 685.057 L836.012 685.057 L836.571 685.057 L837.13 685.057 L837.689 685.057 L838.249 685.057 L838.808 685.057 L839.367 685.057 L839.926 685.057 L840.486 685.057 L841.045 685.057 L841.604 685.057 L842.163 685.057 L842.723 685.057 L843.282 685.057 L843.841 685.057 L844.4 685.057 L844.96 685.057 L845.519 685.057 L846.078 685.057 L846.637 685.057 L847.197 685.057 L847.756 685.057 L848.315 685.057 L848.874 685.057 L849.434 685.057 L849.993 685.057 L850.552 685.057 L851.111 685.057 L851.671 685.057 L852.23 685.057 L852.789 685.057 L853.348 685.057 L853.908 685.057 L854.467 685.057 L855.026 685.057 L855.585 685.057 L856.145 685.057 L856.704 685.057 L857.263 685.057 L857.822 685.057 L858.382 685.057 L858.941 685.057 L859.5 685.057 L860.059 685.057 L860.619 685.057 L861.178 685.057 L861.737 685.057 L862.296 685.057 L862.856 685.057 L863.415 685.057 L863.974 685.057 L864.533 685.057 L865.093 685.057 L865.652 685.057 L866.211 685.057 L866.77 685.057 L867.33 685.057 L867.889 685.057 L868.448 685.057 L869.007 685.057 L869.567 685.057 L870.126 685.057 L870.685 685.057 L871.244 685.057 L871.804 685.057 L872.363 685.057 L872.922 685.057 L873.481 685.057 L874.041 685.057 L874.6 685.057 L875.159 685.057 L875.718 685.057 L876.278 685.057 L876.837 685.057 L877.396 685.057 L877.955 685.057 L878.515 685.057 L879.074 685.057 L879.633 685.057 L880.192 685.057 L880.752 685.057 L881.311 685.057 L881.87 685.057 L882.429 685.057 L882.989 685.057 L883.548 685.057 L884.107 685.057 L884.666 685.057 L885.226 685.057 L885.785 685.057 L886.344 685.057 L886.903 685.057 L887.463 685.057 L888.022 685.057 L888.581 685.057 L889.14 685.057 L889.7 685.057 L890.259 685.057 L890.818 685.057 L891.377 685.057 L891.937 685.057 L892.496 685.057 L893.055 685.057 L893.614 685.057 L894.174 685.057 L894.733 685.057 L895.292 685.057 L895.851 685.057 L896.411 685.057 L896.97 685.057 L897.529 685.057 L898.088 685.057 L898.648 685.057 L899.207 685.057 L899.766 685.057 L900.325 685.057 L900.885 685.057 L901.444 685.057 L902.003 685.057 L902.562 685.057 L903.122 685.057 L903.681 685.057 L904.24 685.057 L904.799 685.057 L905.359 685.057 L905.918 685.057 L906.477 685.057 L907.036 685.057 L907.596 685.057 L908.155 685.057 L908.714 685.057 L909.273 685.057 L909.833 685.057 L910.392 685.057 L910.951 685.057 L911.51 685.057 L912.07 685.057 L912.629 685.057 L913.188 685.057 L913.747 685.057 L914.307 685.057 L914.866 685.057 L915.425 685.057 L915.984 685.057 L916.544 685.057 L917.103 685.057 L917.662 685.057 L918.221 685.057 L918.781 685.057 L919.34 685.057 L919.899 685.057 L920.458 685.057 L921.018 685.057 L921.577 685.057 L922.136 685.057 L922.695 685.057 L923.255 685.057 L923.814 685.057 L924.373 685.057 L924.932 685.057 L925.492 685.057 L926.051 685.057 L926.61 685.057 L927.169 685.057 L927.729 685.057 L928.288 685.057 L928.847 685.057 L929.406 685.057 L929.966 685.057 L930.525 685.057 L931.084 685.057 L931.644 685.057 L932.203 685.057 L932.762 685.057 L933.321 685.057 L933.881 685.057 L934.44 685.057 L934.999 685.057 L935.558 685.057 L936.118 685.057 L936.677 685.057 L937.236 685.057 L937.795 685.057 L938.355 685.057 L938.914 685.057 L939.473 685.057 L940.032 685.057 L940.592 685.057 L941.151 685.057 L941.71 685.057 L942.269 685.057 L942.829 685.057 L943.388 685.057 L943.947 685.057 L944.506 685.057 L945.066 685.057 L945.625 685.057 L946.184 685.057 L946.743 685.057 L947.303 685.057 L947.862 685.057 L948.421 685.057 L948.98 685.057 L949.54 685.057 L950.099 685.057 L950.658 685.057 L951.217 685.057 L951.777 685.057 L952.336 685.057 L952.895 685.057 L953.454 685.057 L954.014 685.057 L954.573 685.057 L955.132 685.057 L955.691 685.057 L956.251 685.057 L956.81 685.057 L957.369 685.057 L957.928 685.057 L958.488 685.057 L959.047 685.057 L959.606 685.057 L960.165 685.057 L960.725 685.057 L961.284 685.057 L961.843 685.057 L962.402 685.057 L962.962 685.057 L963.521 685.057 L964.08 685.057 L964.639 685.057 L965.199 685.057 L965.758 685.057 L966.317 685.057 L966.876 685.057 L967.436 685.057 L967.995 685.057 L968.554 685.057 L969.113 685.057 L969.673 685.057 L970.232 685.057 L970.791 685.057 L971.35 685.057 L971.91 685.057 L972.469 685.057 L973.028 685.057 L973.587 685.057 L974.147 685.057 L974.706 685.057 L975.265 685.057 L975.824 685.057 L976.384 685.057 L976.943 685.057 L977.502 685.057 L978.061 685.057 L978.621 685.057 L979.18 685.057 L979.739 685.057 L980.298 685.057 L980.858 685.057 L981.417 685.057 L981.976 685.057 L982.535 685.057 L983.095 685.057 L983.654 685.057 L984.213 685.057 L984.772 685.057 L985.332 685.057 L985.891 685.057 L986.45 685.057 L987.009 685.057 L987.569 685.057 L988.128 685.057 L988.687 685.057 L989.246 685.057 L989.806 685.057 L990.365 685.057 L990.924 685.057 L991.483 685.057 L992.043 685.057 L992.602 685.057 L993.161 685.057 L993.72 685.057 L994.28 685.057 L994.839 685.057 L995.398 685.057 L995.957 685.057 L996.517 685.057 L997.076 685.057 L997.635 685.057 L998.194 685.057 L998.754 685.057 L999.313 685.057 L999.872 685.057 L1000.43 685.057 L1000.99 685.057 L1001.55 685.057 L1002.11 685.057 L1002.67 685.057 L1003.23 685.057 L1003.79 685.057 L1004.35 685.057 L1004.91 685.057 L1005.46 685.057 L1006.02 685.057 L1006.58 685.057 L1007.14 685.057 L1007.7 685.057 L1008.26 685.057 L1008.82 685.057 L1009.38 685.057 L1009.94 685.057 L1010.5 685.057 L1011.06 685.057 L1011.62 685.057 L1012.18 685.057 L1012.73 685.057 L1013.29 685.057 L1013.85 685.057 L1014.41 685.057 L1014.97 685.057 L1015.53 685.057 L1016.09 685.057 L1016.65 685.057 L1017.21 685.057 L1017.77 685.057 L1018.33 685.057 L1018.89 685.057 L1019.45 685.057 L1020.01 685.057 L1020.56 685.057 L1021.12 685.057 L1021.68 685.057 L1022.24 685.057 L1022.8 685.057 L1023.36 685.057 L1023.92 685.057 L1024.48 685.057 L1025.04 685.057 L1025.6 685.057 L1026.16 685.057 L1026.72 685.057 L1027.28 685.057 L1027.83 685.057 L1028.39 685.057 L1028.95 685.057 L1029.51 685.057 L1030.07 685.057 L1030.63 685.057 L1031.19 685.057 L1031.75 685.057 L1032.31 685.057 L1032.87 685.057 L1033.43 685.057 L1033.99 685.057 L1034.55 685.057 L1035.1 685.057 L1035.66 685.057 L1036.22 685.057 L1036.78 685.057 L1037.34 685.057 L1037.9 685.057 L1038.46 685.057 L1039.02 685.057 L1039.58 685.057 L1040.14 685.057 L1040.7 685.057 L1041.26 685.057 L1041.82 685.057 L1042.38 685.057 L1042.93 685.057 L1043.49 685.057 L1044.05 685.057 L1044.61 685.057 L1045.17 685.057 L1045.73 685.057 L1046.29 685.057 L1046.85 685.057 L1047.41 685.057 L1047.97 685.057 L1048.53 685.057 L1049.09 685.057 L1049.65 685.057 L1050.2 685.057 L1050.76 685.057 L1051.32 685.057 L1051.88 685.057 L1052.44 685.057 L1053 685.057 L1053.56 685.057 L1054.12 685.057 L1054.68 685.057 L1055.24 685.057 L1055.8 685.057 L1056.36 685.057 L1056.92 685.057 L1057.48 685.057 L1058.03 685.057 L1058.59 685.057 L1059.15 685.057 L1059.71 685.057 L1060.27 685.057 L1060.83 685.057 L1061.39 685.057 L1061.95 685.057 L1062.51 685.057 L1063.07 685.057 L1063.63 685.057 L1064.19 685.057 L1064.75 685.057 L1065.3 685.057 L1065.86 685.057 L1066.42 685.057 L1066.98 685.057 L1067.54 685.057 L1068.1 685.057 L1068.66 685.057 L1069.22 685.057 L1069.78 685.057 L1070.34 685.057 L1070.9 685.057 L1071.46 685.057 L1072.02 685.057 L1072.57 685.057 L1073.13 685.057 L1073.69 685.057 L1074.25 685.057 L1074.81 685.057 L1075.37 685.057 L1075.93 685.057 L1076.49 685.057 L1077.05 685.057 L1077.61 685.057 L1078.17 685.057 L1078.73 685.057 L1079.29 685.057 L1079.85 685.057 L1080.4 685.057 L1080.96 685.057 L1081.52 685.057 L1082.08 685.057 L1082.64 685.057 L1083.2 685.057 L1083.76 685.057 L1084.32 685.057 L1084.88 685.057 L1085.44 685.057 L1086 685.057 L1086.56 685.057 L1087.12 685.057 L1087.67 685.057 L1088.23 685.057 L1088.79 685.057 L1089.35 685.057 L1089.91 685.057 L1090.47 685.057 L1091.03 685.057 L1091.59 685.057 L1092.15 685.057 L1092.71 685.057 L1093.27 685.057 L1093.83 685.057 L1094.39 685.057 L1094.94 685.057 L1095.5 685.057 L1096.06 685.057 L1096.62 685.057 L1097.18 685.057 L1097.74 685.057 L1098.3 685.057 L1098.86 685.057 L1099.42 685.057 L1099.98 685.057 L1100.54 685.057 L1101.1 685.057 L1101.66 685.057 L1102.22 685.057 L1102.77 685.057 L1103.33 685.057 L1103.89 685.057 L1104.45 685.057 L1105.01 685.057 L1105.57 685.057 L1106.13 685.057 L1106.69 685.057 L1107.25 685.057 L1107.81 685.057 L1108.37 685.057 L1108.93 685.057 L1109.49 685.057 L1110.04 685.057 L1110.6 685.057 L1111.16 685.057 L1111.72 685.057 L1112.28 685.057 L1112.84 685.057 L1113.4 685.057 L1113.96 685.057 L1114.52 685.057 L1115.08 685.057 L1115.64 685.057 L1116.2 685.057 L1116.76 685.057 L1117.31 685.057 L1117.87 685.057 L1118.43 685.057 L1118.99 685.057 L1119.55 685.057 L1120.11 685.057 L1120.67 685.057 L1121.23 685.057 L1121.79 685.057 L1122.35 685.057 L1122.91 685.057 L1123.47 685.057 L1124.03 685.057 L1124.59 685.057 L1125.14 685.057 L1125.7 685.057 L1126.26 685.057 L1126.82 685.057 L1127.38 685.057 L1127.94 685.057 L1128.5 685.057 L1129.06 685.057 L1129.62 685.057 L1130.18 685.057 L1130.74 685.057 L1131.3 685.057 L1131.86 685.057 L1132.41 685.057 L1132.97 685.057 L1133.53 685.057 L1134.09 685.057 L1134.65 685.057 L1135.21 685.057 L1135.77 685.057 L1136.33 685.057 L1136.89 685.057 L1137.45 685.057 L1138.01 685.057 L1138.57 685.057 L1139.13 685.057 L1139.68 685.057 L1140.24 685.057 L1140.8 685.057 L1141.36 685.057 L1141.92 685.057 L1142.48 685.057 L1143.04 685.057 L1143.6 685.057 L1144.16 685.057 L1144.72 685.057 L1145.28 685.057 L1145.84 685.057 L1146.4 685.057 L1146.96 685.057 L1147.51 685.057 L1148.07 685.057 L1148.63 685.057 L1149.19 685.057 L1149.75 685.057 L1150.31 685.057 L1150.87 685.057 L1151.43 685.057 L1151.99 685.057 L1152.55 685.057 L1153.11 685.057 L1153.67 685.057 L1154.23 685.057 L1154.78 685.057 L1155.34 685.057 L1155.9 685.057 L1156.46 685.057 L1157.02 685.057 L1157.58 685.057 L1158.14 685.057 L1158.7 685.057 L1159.26 685.057 L1159.82 685.057 L1160.38 685.057 L1160.94 685.057 L1161.5 685.057 L1162.05 685.057 L1162.61 685.057 L1163.17 685.057 L1163.73 685.057 L1164.29 685.057 L1164.85 685.057 L1165.41 685.057 L1165.97 685.057 L1166.53 685.057 L1167.09 685.057 L1167.65 685.057 L1168.21 685.057 L1168.77 685.057 L1169.33 685.057 L1169.88 685.057 L1170.44 685.057 L1171 685.057 L1171.56 685.057 L1172.12 685.057 L1172.68 685.057 L1173.24 685.057 L1173.8 685.057 L1174.36 685.057 L1174.92 685.057 L1175.48 685.057 L1176.04 685.057 L1176.6 685.057 L1177.15 685.057 L1177.71 685.057 L1178.27 685.057 L1178.83 685.057 L1179.39 685.057 L1179.95 685.057 L1180.51 685.057 L1181.07 685.057 L1181.63 685.057 L1182.19 685.057 L1182.75 685.057 L1183.31 685.057 L1183.87 685.057 L1184.43 685.057 L1184.98 685.057 L1185.54 685.057 L1186.1 685.057 L1186.66 685.057 L1187.22 685.057 L1187.78 685.057 L1188.34 685.057 L1188.9 685.057 L1189.46 685.057 L1190.02 685.057 L1190.58 685.057 L1191.14 685.057 L1191.7 685.057 L1192.25 685.057 L1192.81 685.057 L1193.37 685.057 L1193.93 685.057 L1194.49 685.057 L1195.05 685.057 L1195.61 685.057 L1196.17 685.057 L1196.73 685.057 L1197.29 685.057 L1197.85 685.057 L1198.41 685.057 L1198.97 685.057 L1199.52 685.057 L1200.08 685.057 L1200.64 685.057 L1201.2 685.057 L1201.76 685.057 L1202.32 685.057 L1202.88 685.057 L1203.44 685.057 L1204 685.057 L1204.56 685.057 L1205.12 685.057 L1205.68 685.057 L1206.24 685.057 L1206.8 685.057 L1207.35 685.057 L1207.91 685.057 L1208.47 685.057 L1209.03 685.057 L1209.59 685.057 L1210.15 685.057 L1210.71 685.057 L1211.27 685.057 L1211.83 685.057 L1212.39 685.057 L1212.95 685.057 L1213.51 685.057 L1214.07 685.057 L1214.62 685.057 L1215.18 685.057 L1215.74 685.057 L1216.3 685.057 L1216.86 685.057 L1217.42 685.057 L1217.98 685.057 L1218.54 685.057 L1219.1 685.057 L1219.66 685.057 L1220.22 685.057 L1220.78 685.057 L1221.34 685.057 L1221.89 685.057 L1222.45 685.057 L1223.01 685.057 L1223.57 685.057 L1224.13 685.057 L1224.69 685.057 L1225.25 685.057 L1225.81 685.057 L1226.37 685.057 L1226.93 685.057 L1227.49 685.057 L1228.05 685.057 L1228.61 685.057 L1229.17 685.057 L1229.72 685.057 L1230.28 685.057 L1230.84 685.057 L1231.4 685.057 L1231.96 685.057 L1232.52 685.057 L1233.08 685.057 L1233.64 685.057 L1234.2 685.057 L1234.76 685.057 L1235.32 685.057 L1235.88 685.057 L1236.44 685.057 L1236.99 685.057 L1237.55 685.057 L1238.11 685.057 L1238.67 685.057 L1239.23 685.057 L1239.79 685.057 L1240.35 685.057 L1240.91 685.057 L1241.47 685.057 L1242.03 685.057 L1242.59 685.057 L1243.15 685.057 L1243.71 685.057 L1244.26 685.057 L1244.82 685.057 L1245.38 685.057 L1245.94 685.057 L1246.5 685.057 L1247.06 685.057 L1247.62 685.057 L1248.18 685.057 L1248.74 685.057 L1249.3 685.057 L1249.86 685.057 L1250.42 685.057 L1250.98 685.057 L1251.54 685.057 L1252.09 685.057 L1252.65 685.057 L1253.21 685.057 L1253.77 685.057 L1254.33 685.057 L1254.89 685.057 L1255.45 685.057 L1256.01 685.057 L1256.57 685.057 L1257.13 685.057 L1257.69 685.057 L1258.25 685.057 L1258.81 685.057 L1259.36 685.057 L1259.92 685.057 L1260.48 685.057 L1261.04 685.057 L1261.6 685.057 L1262.16 685.057 L1262.72 685.057 L1263.28 685.057 L1263.84 685.057 L1264.4 685.057 L1264.96 685.057 L1265.52 685.057 L1266.08 685.057 L1266.63 685.057 L1267.19 685.057 L1267.75 685.057 L1268.31 685.057 L1268.87 685.057 L1269.43 685.057 L1269.99 685.057 L1270.55 685.057 L1271.11 685.057 L1271.67 685.057 L1272.23 685.057 L1272.79 685.057 L1273.35 685.057 L1273.91 685.057 L1274.46 685.057 L1275.02 685.057 L1275.58 685.057 L1276.14 685.057 L1276.7 685.057 L1277.26 685.057 L1277.82 685.057 L1278.38 685.057 L1278.94 685.057 L1279.5 685.057 L1280.06 685.057 L1280.62 685.057 L1281.18 685.057 L1281.73 685.057 L1282.29 685.057 L1282.85 685.057 L1283.41 685.057 L1283.97 685.057 L1284.53 685.057 L1285.09 685.057 L1285.65 685.057 L1286.21 685.057 L1286.77 685.057 L1287.33 685.057 L1287.89 685.057 L1288.45 685.057 L1289 685.057 L1289.56 685.057 L1290.12 685.057 L1290.68 685.057 L1291.24 685.057 L1291.8 685.057 L1292.36 685.057 L1292.92 685.057 L1293.48 685.057 L1294.04 685.057 L1294.6 685.057 L1295.16 685.057 L1295.72 685.057 L1296.28 685.057 L1296.83 685.057 L1297.39 685.057 L1297.95 685.057 L1298.51 685.057 L1299.07 685.057 L1299.63 685.057 L1300.19 685.057 L1300.75 685.057 L1301.31 685.057 L1301.87 685.057 L1302.43 685.057 L1302.99 685.057 L1303.55 685.057 L1304.1 685.057 L1304.66 685.057 L1305.22 685.057 L1305.78 685.057 L1306.34 685.057 L1306.9 685.057 L1307.46 685.057 L1308.02 685.057 L1308.58 685.057 L1309.14 685.057 L1309.7 685.057 L1310.26 685.057 L1310.82 685.057 L1311.38 685.057 L1311.93 685.057 L1312.49 685.057 L1313.05 685.057 L1313.61 685.057 L1314.17 685.057 L1314.73 685.057 L1315.29 685.057 L1315.85 685.057 L1316.41 685.057 L1316.97 685.057 L1317.53 685.057 L1318.09 685.057 L1318.65 685.057 L1319.2 685.057 L1319.76 685.057 L1320.32 685.057 L1320.88 685.057 L1321.44 685.057 L1322 685.057 L1322.56 685.057 L1323.12 685.057 L1323.68 685.057 L1324.24 685.057 L1324.8 685.057 L1325.36 685.057 L1325.92 685.057 L1326.47 685.057 L1327.03 685.057 L1327.59 685.057 L1328.15 685.057 L1328.71 685.057 L1329.27 685.057 L1329.83 685.057 L1330.39 685.057 L1330.95 685.057 L1331.51 685.057 L1332.07 685.057 L1332.63 685.057 L1333.19 685.057 L1333.75 685.057 L1334.3 685.057 L1334.86 685.057 L1335.42 685.057 L1335.98 685.057 L1336.54 685.057 L1337.1 685.057 L1337.66 685.057 L1338.22 685.057 L1338.78 685.057 L1339.34 685.057 L1339.9 685.057 L1340.46 685.057 L1341.02 685.057 L1341.57 685.057 L1342.13 685.057 L1342.69 685.057 L1343.25 685.057 L1343.81 685.057 L1344.37 685.057 L1344.93 685.057 L1345.49 685.057 L1346.05 685.057 L1346.61 685.057 L1347.17 685.057 L1347.73 685.057 L1348.29 685.057 L1348.84 685.057 L1349.4 685.057 L1349.96 685.057 L1350.52 685.057 L1351.08 685.057 L1351.64 685.057 L1352.2 685.057 L1352.76 685.057 L1353.32 685.057 L1353.88 685.057 L1354.44 685.057 L1355 685.057 L1355.56 685.057 L1356.12 685.057 L1356.67 685.057 L1357.23 685.057 L1357.79 685.057 L1358.35 685.057 L1358.91 685.057 L1359.47 685.057 L1360.03 685.057 L1360.59 685.057 L1361.15 685.057 L1361.71 685.057 L1362.27 685.057 L1362.83 685.057 L1363.39 685.057 L1363.94 685.057 L1364.5 685.057 L1365.06 685.057 L1365.62 685.057 L1366.18 685.057 L1366.74 685.057 L1367.3 685.057 L1367.86 685.057 L1368.42 685.057 L1368.98 685.057 L1369.54 685.057 L1370.1 685.057 L1370.66 685.057 L1371.21 685.057 L1371.77 685.057 L1372.33 685.057 L1372.89 685.057 L1373.45 685.057 L1374.01 685.057 L1374.57 685.057 L1375.13 685.057 L1375.69 685.057 L1376.25 685.057 L1376.81 685.057 L1377.37 685.057 L1377.93 685.057 L1378.49 685.057 L1379.04 685.057 L1379.6 685.057 L1380.16 685.057 L1380.72 685.057 L1381.28 685.057 L1381.84 685.057 L1382.4 685.057 L1382.96 685.057 L1383.52 685.057 L1384.08 685.057 L1384.64 685.057 L1385.2 685.057 L1385.76 685.057 L1386.31 685.057 L1386.87 685.057 L1387.43 685.057 L1387.99 685.057 L1388.55 685.057 L1389.11 685.057 L1389.67 685.057 L1390.23 685.057 L1390.79 685.057 L1391.35 685.057 L1391.91 685.057 L1392.47 685.057 L1393.03 685.057 L1393.58 685.057 L1394.14 685.057 L1394.7 685.057 L1395.26 685.057 L1395.82 685.057 L1396.38 685.057 L1396.94 685.057 L1397.5 685.057 L1398.06 685.057 L1398.62 685.057 L1399.18 685.057 L1399.74 685.057 L1400.3 685.057 L1400.86 685.057 L1401.41 685.057 L1401.97 685.057 L1402.53 685.057 L1403.09 685.057 L1403.65 685.057 L1404.21 685.057 L1404.77 685.057 L1405.33 685.057 L1405.89 685.057 L1406.45 685.057 L1407.01 685.057 L1407.57 685.057 L1408.13 685.057 L1408.68 685.057 L1409.24 685.057 L1409.8 685.057 L1410.36 685.057 L1410.92 685.057 L1411.48 685.057 L1412.04 685.057 L1412.6 685.057 L1413.16 685.057 L1413.72 685.057 L1414.28 685.057 L1414.84 685.057 L1415.4 685.057 L1415.95 685.057 L1416.51 685.057 L1417.07 685.057 L1417.63 685.057 L1418.19 685.057 L1418.75 685.057 L1419.31 685.057 L1419.87 685.057 L1420.43 685.057 L1420.99 685.057 L1421.55 685.057 L1422.11 685.057 L1422.67 685.057 L1423.23 685.057 L1423.78 685.057 L1424.34 685.057 L1424.9 685.057 L1425.46 685.057 L1426.02 685.057 L1426.58 685.057 L1427.14 685.057 L1427.7 685.057 L1428.26 685.057 L1428.82 685.057 L1429.38 685.057 L1429.94 685.057 L1430.5 685.057 L1431.05 685.057 L1431.61 685.057 L1432.17 685.057 L1432.73 685.057 L1433.29 685.057 L1433.85 685.057 L1434.41 685.057 L1434.97 685.057 L1435.53 685.057 L1436.09 685.057 L1436.65 685.057 L1437.21 685.057 L1437.77 685.057 L1438.33 685.057 L1438.88 685.057 L1439.44 685.057 L1440 685.057 L1440.56 685.057 L1441.12 685.057 L1441.68 685.057 L1442.24 685.057 L1442.8 685.057 L1443.36 685.057 L1443.92 685.057 L1444.48 685.057 L1445.04 685.057 L1445.6 685.057 L1446.15 685.057 L1446.71 685.057 L1447.27 685.057 L1447.83 685.057 L1448.39 685.057 L1448.95 685.057 L1449.51 685.057 L1450.07 685.057 L1450.63 685.057 L1451.19 685.057 L1451.75 685.057 L1452.31 685.057 L1452.87 685.057 L1453.42 685.057 L1453.98 685.057 L1454.54 685.057 L1455.1 685.057 L1455.66 685.057 L1456.22 685.057 L1456.78 685.057 L1457.34 685.057 L1457.9 685.057 L1458.46 685.057 L1459.02 685.057 L1459.58 685.057 L1460.14 685.057 L1460.7 685.057 L1461.25 685.057 L1461.81 685.057 L1462.37 685.057 L1462.93 685.057 L1463.49 685.057 L1464.05 685.057 L1464.61 685.057 L1465.17 685.057 L1465.73 685.057 L1466.29 685.057 L1466.85 685.057 L1467.41 685.057 L1467.97 685.057 L1468.52 685.057 L1469.08 685.057 L1469.64 685.057 L1470.2 685.057 L1470.76 685.057 L1471.32 685.057 L1471.88 685.057 L1472.44 685.057 L1473 685.057 L1473.56 685.057 L1474.12 685.057 L1474.68 685.057 L1475.24 685.057 L1475.79 685.057 L1476.35 685.057 L1476.91 685.057 L1477.47 685.057 L1478.03 685.057 L1478.59 685.057 L1479.15 685.057 L1479.71 685.057 L1480.27 685.057 L1480.83 685.057 L1481.39 685.057 L1481.95 685.057 L1482.51 685.057 L1483.07 685.057 L1483.62 685.057 L1484.18 685.057 L1484.74 685.057 L1485.3 685.057 L1485.86 685.057 L1486.42 685.057 L1486.98 685.057 L1487.54 685.057 L1488.1 685.057 L1488.66 685.057 L1489.22 685.057 L1489.78 685.057 L1490.34 685.057 L1490.89 685.057 L1491.45 685.057 L1492.01 685.057 L1492.57 685.057 L1493.13 685.057 L1493.69 685.057 L1494.25 685.057 L1494.81 685.057 L1495.37 685.057 L1495.93 685.057 L1496.49 685.057 L1497.05 685.057 L1497.61 685.057 L1498.16 685.057 L1498.72 685.057 L1499.28 685.057 L1499.84 685.057 L1500.4 685.057 L1500.96 685.057 L1501.52 685.057 L1502.08 685.057 L1502.64 685.057 L1503.2 685.057 L1503.76 685.057 L1504.32 685.057 L1504.88 685.057 L1505.44 685.057 L1505.99 685.057 L1506.55 685.057 L1507.11 685.057 L1507.67 685.057 L1508.23 685.057 L1508.79 685.057 L1509.35 685.057 L1509.91 685.057 L1510.47 685.057 L1511.03 685.057 L1511.59 685.057 L1512.15 685.057 L1512.71 685.057 L1513.26 685.057 L1513.82 685.057 L1514.38 685.057 L1514.94 685.057 L1515.5 685.057 L1516.06 685.057 L1516.62 685.057 L1517.18 685.057 L1517.74 685.057 L1518.3 685.057 L1518.86 685.057 L1519.42 685.057 L1519.98 685.057 L1520.53 685.057 L1521.09 685.057 L1521.65 685.057 L1522.21 685.057 L1522.77 685.057 L1523.33 685.057 L1523.89 685.057 L1524.45 685.057 L1525.01 685.057 L1525.57 685.057 L1526.13 685.057 L1526.69 685.057 L1527.25 685.057 L1527.81 685.057 L1528.36 685.057 L1528.92 685.057 L1529.48 685.057 L1530.04 685.057 L1530.6 685.057 L1531.16 685.057 L1531.72 685.057 L1532.28 685.057 L1532.84 685.057 L1533.4 685.057 L1533.96 685.057 L1534.52 685.057 L1535.08 685.057 L1535.63 685.057 L1536.19 685.057 L1536.75 685.057 L1537.31 685.057 L1537.87 685.057 L1538.43 685.057 L1538.99 685.057 L1539.55 685.057 L1540.11 685.057 L1540.67 685.057 L1541.23 685.057 L1541.79 685.057 L1542.35 685.057 L1542.9 685.057 L1543.46 685.057 L1544.02 685.057 L1544.58 685.057 L1545.14 685.057 L1545.7 685.057 L1546.26 685.057 L1546.82 685.057 L1547.38 685.057 L1547.94 685.057 L1548.5 685.057 L1549.06 685.057 L1549.62 685.057 L1550.18 685.057 L1550.73 685.057 L1551.29 685.057 L1551.85 685.057 L1552.41 685.057 L1552.97 685.057 L1553.53 685.057 L1554.09 685.057 L1554.65 685.057 L1555.21 685.057 L1555.77 685.057 L1556.33 685.057 L1556.89 685.057 L1557.45 685.057 L1558 685.057 L1558.56 685.057 L1559.12 685.057 L1559.68 685.057 L1560.24 685.057 L1560.8 685.057 L1561.36 685.057 L1561.92 685.057 L1562.48 685.057 L1563.04 685.057 L1563.6 685.057 L1564.16 685.057 L1564.72 685.057 L1565.28 685.057 L1565.83 685.057 L1566.39 685.057 L1566.95 685.057 L1567.51 685.057 L1568.07 685.057 L1568.63 685.057 L1569.19 685.057 L1569.75 685.057 L1570.31 685.057 L1570.87 685.057 L1571.43 685.057 L1571.99 685.057 L1572.55 685.057 L1573.1 685.057 L1573.66 685.057 L1574.22 685.057 L1574.78 685.057 L1575.34 685.057 L1575.9 685.057 L1576.46 685.057 L1577.02 685.057 L1577.58 685.057 L1578.14 685.057 L1578.7 685.057 L1579.26 685.057 L1579.82 685.057 L1580.37 685.057 L1580.93 685.057 L1581.49 685.057 L1582.05 685.057 L1582.61 685.057 L1583.17 685.057 L1583.73 685.057 L1584.29 685.057 L1584.85 685.057 L1585.41 685.057 L1585.97 685.057 L1586.53 685.057 L1587.09 685.057 L1587.65 685.057 L1588.2 685.057 L1588.76 685.057 L1589.32 685.057 L1589.88 685.057 L1590.44 685.057 L1591 685.057 L1591.56 685.057 L1592.12 685.057 L1592.68 685.057 L1593.24 685.057 L1593.8 685.057 L1594.36 685.057 L1594.92 685.057 L1595.47 685.057 L1596.03 685.057 L1596.59 685.057 L1597.15 685.057 L1597.71 685.057 L1598.27 685.057 L1598.83 685.057 L1599.39 685.057 L1599.95 685.057 L1600.51 685.057 L1601.07 685.057 L1601.63 685.057 L1602.19 685.057 L1602.74 685.057 L1603.3 685.057 L1603.86 685.057 L1604.42 685.057 L1604.98 685.057 L1605.54 685.057 L1606.1 685.057 L1606.66 685.057 L1607.22 685.057 L1607.78 685.057 L1608.34 685.057 L1608.9 685.057 L1609.46 685.057 L1610.02 685.057 L1610.57 685.057 L1611.13 685.057 L1611.69 685.057 L1612.25 685.057 L1612.81 685.057 L1613.37 685.057 L1613.93 685.057 L1614.49 685.057 L1615.05 685.057 L1615.61 685.057 L1616.17 685.057 L1616.73 685.057 L1617.29 685.057 L1617.84 685.057 L1618.4 685.057 L1618.96 685.057 L1619.52 685.057 L1620.08 685.057 L1620.64 685.057 L1621.2 685.057 L1621.76 685.057 L1622.32 685.057 L1622.88 685.057 L1623.44 685.057 L1624 685.057 L1624.56 685.057 L1625.11 685.057 L1625.67 685.057 L1626.23 685.057 L1626.79 685.057 L1627.35 685.057 L1627.91 685.057 L1628.47 685.057 L1629.03 685.057 L1629.59 685.057 L1630.15 685.057 L1630.71 685.057 L1631.27 685.057 L1631.83 685.057 L1632.39 685.057 L1632.94 685.057 L1633.5 685.057 L1634.06 685.057 L1634.62 685.057 L1635.18 685.057 L1635.74 685.057 L1636.3 685.057 L1636.86 685.057 L1637.42 685.057 L1637.98 685.057 L1638.54 685.057 L1639.1 685.057 L1639.66 685.057 L1640.21 685.057 L1640.77 685.057 L1641.33 685.057 L1641.89 685.057 L1642.45 685.057 L1643.01 685.057 L1643.57 685.057 L1644.13 685.057 L1644.69 685.057 L1645.25 685.057 L1645.81 685.057 L1646.37 685.057 L1646.93 685.057 L1647.48 685.057 L1648.04 685.057 L1648.6 685.057 L1649.16 685.057 L1649.72 685.057 L1650.28 685.057 L1650.84 685.057 L1651.4 685.057 L1651.96 685.057 L1652.52 685.057 L1653.08 685.057 L1653.64 685.057 L1654.2 685.057 L1654.76 685.057 L1655.31 685.057 L1655.87 685.057 L1656.43 685.057 L1656.99 685.057 L1657.55 685.057 L1658.11 685.057 L1658.67 685.057 L1659.23 685.057 L1659.79 685.057 L1660.35 685.057 L1660.91 685.057 L1661.47 685.057 L1662.03 685.057 L1662.58 685.057 L1663.14 685.057 L1663.7 685.057 L1664.26 685.057 L1664.82 685.057 L1665.38 685.057 L1665.94 685.057 L1666.5 685.057 L1667.06 685.057 L1667.62 685.057 L1668.18 685.057 L1668.74 685.057 L1669.3 685.057 L1669.85 685.057 L1670.41 685.057 L1670.97 685.057 L1671.53 685.057 L1672.09 685.057 L1672.65 685.057 L1673.21 685.057 L1673.77 685.057 L1674.33 685.057 L1674.89 685.057 L1675.45 685.057 L1676.01 685.057 L1676.57 685.057 L1677.13 685.057 L1677.68 685.057 L1678.24 685.057 L1678.8 685.057 L1679.36 685.057 L1679.92 685.057 L1680.48 685.057 L1681.04 685.057 L1681.6 685.057 L1682.16 685.057 L1682.72 685.057 L1683.28 685.057 L1683.84 685.057 L1684.4 685.057 L1684.95 685.057 L1685.51 685.057 L1686.07 685.057 L1686.63 685.057 L1687.19 685.057 L1687.75 685.057 L1688.31 685.057 L1688.87 685.057 L1689.43 685.057 L1689.99 685.057 L1690.55 685.057 L1691.11 685.057 L1691.67 685.057 L1692.23 685.057 L1692.78 685.057 L1693.34 685.057 L1693.9 685.057 L1694.46 685.057 L1695.02 685.057 L1695.58 685.057 L1696.14 685.057 L1696.7 685.057 L1697.26 685.057 L1697.82 685.057 L1698.38 685.057 L1698.94 685.057 L1699.5 685.057 L1700.05 685.057 L1700.61 685.057 L1701.17 685.057 L1701.73 685.057 L1702.29 685.057 L1702.85 685.057 L1703.41 685.057 L1703.97 685.057 L1704.53 685.057 L1705.09 685.057 L1705.65 685.057 L1706.21 685.057 L1706.77 685.057 L1707.32 685.057 L1707.88 685.057 L1708.44 685.057 L1709 685.057 L1709.56 685.057 L1710.12 685.057 L1710.68 685.057 L1711.24 685.057 L1711.8 685.057 L1712.36 685.057 L1712.92 685.057 L1713.48 685.057 L1714.04 685.057 L1714.6 685.057 L1715.15 685.057 L1715.71 685.057 L1716.27 685.057 L1716.83 685.057 L1717.39 685.057 L1717.95 685.057 L1718.51 685.057 L1719.07 685.057 L1719.63 685.057 L1720.19 685.057 L1720.75 685.057 L1721.31 685.057 L1721.87 685.057 L1722.42 685.057 L1722.98 685.057 L1723.54 685.057 L1724.1 685.057 L1724.66 685.057 L1725.22 685.057 L1725.78 685.057 L1726.34 685.057 L1726.9 685.057 L1727.46 685.057 L1728.02 685.057 L1728.58 685.057 L1729.14 685.057 L1729.69 685.057 L1730.25 685.057 L1730.81 685.057 L1731.37 685.057 L1731.93 685.057 L1732.49 685.057 L1733.05 685.057 L1733.61 685.057 L1734.17 685.057 L1734.73 685.057 L1735.29 685.057 L1735.85 685.057 L1736.41 685.057 L1736.97 685.057 L1737.52 685.057 L1738.08 685.057 L1738.64 685.057 L1739.2 685.057 L1739.76 685.057 L1740.32 685.057 L1740.88 685.057 L1741.44 685.057 L1742 685.057 L1742.56 685.057 L1743.12 685.057 L1743.68 685.057 L1744.24 685.057 L1744.79 685.057 L1745.35 685.057 L1745.91 685.057 L1746.47 685.057 L1747.03 685.057 L1747.59 685.057 L1748.15 685.057 L1748.71 685.057 L1749.27 685.057 L1749.83 685.057 L1750.39 685.057 L1750.95 685.057 L1751.51 685.057 L1752.06 685.057 L1752.62 685.057 L1753.18 685.057 L1753.74 685.057 L1754.3 685.057 L1754.86 685.057 L1755.42 685.057 L1755.98 685.057 L1756.54 685.057 L1757.1 685.057 L1757.66 685.057 L1758.22 685.057 L1758.78 685.057 L1759.34 685.057 L1759.89 685.057 L1760.45 685.057 L1761.01 685.057 L1761.57 685.057 L1762.13 685.057 L1762.69 685.057 L1763.25 685.057 L1763.81 685.057 L1764.37 685.057 L1764.93 685.057 L1765.49 685.057 L1766.05 685.057 L1766.61 685.057 L1767.16 685.057 L1767.72 685.057 L1768.28 685.057 L1768.84 685.057 L1769.4 685.057 L1769.96 685.057 L1770.52 685.057 L1771.08 685.057 L1771.64 685.057 L1772.2 685.057 L1772.76 685.057 L1773.32 685.057 L1773.88 685.057 L1774.43 685.057 L1774.99 685.057 L1775.55 685.057 L1776.11 685.057 L1776.67 685.057 L1777.23 685.057 L1777.79 685.057 L1778.35 685.057 L1778.91 685.057 L1779.47 685.057 L1780.03 685.057 L1780.59 685.057 L1781.15 685.057 L1781.71 685.057 L1782.26 685.057 L1782.82 685.057 L1783.38 685.057 L1783.94 685.057 L1784.5 685.057 L1785.06 685.057 L1785.62 685.057 L1786.18 685.057 L1786.74 685.057 L1787.3 685.057 L1787.86 685.057 L1788.42 685.057 L1788.98 685.057 L1789.53 685.057 L1790.09 685.057 L1790.65 685.057 L1791.21 685.057 L1791.77 685.057 L1792.33 685.057 L1792.89 685.057 L1793.45 685.057 L1794.01 685.057 L1794.57 685.057 L1795.13 685.057 L1795.69 685.057 L1796.25 685.057 L1796.8 685.057 L1797.36 685.057 L1797.92 685.057 L1798.48 685.057 L1799.04 685.057 L1799.6 685.057 L1800.16 685.057 L1800.72 685.057 L1801.28 685.057 L1801.84 685.057 L1802.4 685.057 L1802.96 685.057 L1803.52 685.057 L1804.08 685.057 L1804.63 685.057 L1805.19 685.057 L1805.75 685.057 L1806.31 685.057 L1806.87 685.057 L1807.43 685.057 L1807.99 685.057 L1808.55 685.057 L1809.11 685.057 L1809.67 685.057 L1810.23 685.057 L1810.79 685.057 L1811.35 685.057 L1811.9 685.057 L1812.46 685.057 L1813.02 685.057 L1813.58 685.057 L1814.14 685.057 L1814.7 685.057 L1815.26 685.057 L1815.82 685.057 L1816.38 685.057 L1816.94 685.057 L1817.5 685.057 L1818.06 685.057 L1818.62 685.057 L1819.18 685.057 L1819.73 685.057 L1820.29 685.057 L1820.85 685.057 L1821.41 685.057 L1821.97 685.057 L1822.53 685.057 L1823.09 685.057 L1823.65 685.057 L1824.21 685.057 L1824.77 685.057 L1825.33 685.057 L1825.89 685.057 L1826.45 685.057 L1827 685.057 L1827.56 685.057 L1828.12 685.057 L1828.68 685.057 L1829.24 685.057 L1829.8 685.057 L1830.36 685.057 L1830.92 685.057 L1831.48 685.057 L1832.04 685.057 L1832.6 685.057 L1833.16 685.057 L1833.72 685.057 L1834.27 685.057 L1834.83 685.057 L1835.39 685.057 L1835.95 685.057 L1836.51 685.057 L1837.07 685.057 L1837.63 685.057 L1838.19 685.057 L1838.19 683.325 L1837.63 683.325 L1837.07 683.325 L1836.51 683.325 L1835.95 683.325 L1835.39 683.325 L1834.83 683.325 L1834.27 683.325 L1833.72 683.325 L1833.16 683.325 L1832.6 683.325 L1832.04 683.325 L1831.48 683.325 L1830.92 683.325 L1830.36 683.325 L1829.8 683.325 L1829.24 683.325 L1828.68 683.325 L1828.12 683.325 L1827.56 683.325 L1827 683.325 L1826.45 683.325 L1825.89 683.325 L1825.33 683.325 L1824.77 683.325 L1824.21 683.325 L1823.65 683.325 L1823.09 683.325 L1822.53 683.325 L1821.97 683.325 L1821.41 683.325 L1820.85 683.325 L1820.29 683.325 L1819.73 683.325 L1819.18 683.325 L1818.62 683.325 L1818.06 683.325 L1817.5 683.325 L1816.94 683.325 L1816.38 683.325 L1815.82 683.325 L1815.26 683.325 L1814.7 683.325 L1814.14 683.325 L1813.58 683.325 L1813.02 683.325 L1812.46 683.325 L1811.9 683.325 L1811.35 683.325 L1810.79 683.325 L1810.23 683.325 L1809.67 683.325 L1809.11 683.325 L1808.55 683.325 L1807.99 683.325 L1807.43 683.325 L1806.87 683.325 L1806.31 683.325 L1805.75 683.325 L1805.19 683.325 L1804.63 683.325 L1804.08 683.325 L1803.52 683.325 L1802.96 683.325 L1802.4 683.325 L1801.84 683.325 L1801.28 683.325 L1800.72 683.325 L1800.16 683.325 L1799.6 683.325 L1799.04 683.325 L1798.48 683.325 L1797.92 683.325 L1797.36 683.325 L1796.8 683.325 L1796.25 683.325 L1795.69 683.325 L1795.13 683.325 L1794.57 683.325 L1794.01 683.325 L1793.45 683.325 L1792.89 683.325 L1792.33 683.325 L1791.77 683.325 L1791.21 683.325 L1790.65 683.325 L1790.09 683.325 L1789.53 683.325 L1788.98 683.325 L1788.42 683.325 L1787.86 683.325 L1787.3 683.325 L1786.74 683.325 L1786.18 683.325 L1785.62 683.325 L1785.06 683.325 L1784.5 683.325 L1783.94 683.325 L1783.38 683.325 L1782.82 683.325 L1782.26 683.325 L1781.71 683.325 L1781.15 683.325 L1780.59 683.325 L1780.03 683.325 L1779.47 683.325 L1778.91 683.325 L1778.35 683.325 L1777.79 683.325 L1777.23 683.325 L1776.67 683.325 L1776.11 683.325 L1775.55 683.325 L1774.99 683.325 L1774.43 683.325 L1773.88 683.325 L1773.32 683.325 L1772.76 683.325 L1772.2 683.325 L1771.64 683.325 L1771.08 683.325 L1770.52 683.325 L1769.96 683.325 L1769.4 683.325 L1768.84 683.325 L1768.28 683.325 L1767.72 683.325 L1767.16 683.325 L1766.61 683.325 L1766.05 683.325 L1765.49 683.325 L1764.93 683.325 L1764.37 683.325 L1763.81 683.325 L1763.25 683.325 L1762.69 683.325 L1762.13 683.325 L1761.57 683.325 L1761.01 683.325 L1760.45 683.325 L1759.89 683.325 L1759.34 683.325 L1758.78 683.325 L1758.22 683.325 L1757.66 683.325 L1757.1 683.325 L1756.54 683.325 L1755.98 683.325 L1755.42 683.325 L1754.86 683.325 L1754.3 683.325 L1753.74 683.325 L1753.18 683.325 L1752.62 683.325 L1752.06 683.325 L1751.51 683.325 L1750.95 683.325 L1750.39 683.325 L1749.83 683.325 L1749.27 683.325 L1748.71 683.325 L1748.15 683.325 L1747.59 683.325 L1747.03 683.325 L1746.47 683.325 L1745.91 683.325 L1745.35 683.325 L1744.79 683.325 L1744.24 683.325 L1743.68 683.325 L1743.12 683.325 L1742.56 683.325 L1742 683.325 L1741.44 683.325 L1740.88 683.325 L1740.32 683.325 L1739.76 683.325 L1739.2 683.325 L1738.64 683.325 L1738.08 683.325 L1737.52 683.325 L1736.97 683.325 L1736.41 683.325 L1735.85 683.325 L1735.29 683.325 L1734.73 683.325 L1734.17 683.325 L1733.61 683.325 L1733.05 683.325 L1732.49 683.325 L1731.93 683.325 L1731.37 683.325 L1730.81 683.325 L1730.25 683.325 L1729.69 683.325 L1729.14 683.325 L1728.58 683.325 L1728.02 683.325 L1727.46 683.325 L1726.9 683.325 L1726.34 683.325 L1725.78 683.325 L1725.22 683.325 L1724.66 683.325 L1724.1 683.325 L1723.54 683.325 L1722.98 683.325 L1722.42 683.325 L1721.87 683.325 L1721.31 683.325 L1720.75 683.325 L1720.19 683.325 L1719.63 683.325 L1719.07 683.325 L1718.51 683.325 L1717.95 683.325 L1717.39 683.325 L1716.83 683.325 L1716.27 683.325 L1715.71 683.325 L1715.15 683.325 L1714.6 683.325 L1714.04 683.325 L1713.48 683.325 L1712.92 683.325 L1712.36 683.325 L1711.8 683.325 L1711.24 683.325 L1710.68 683.325 L1710.12 683.325 L1709.56 683.325 L1709 683.325 L1708.44 683.325 L1707.88 683.325 L1707.32 683.325 L1706.77 683.325 L1706.21 683.325 L1705.65 683.325 L1705.09 683.325 L1704.53 683.325 L1703.97 683.325 L1703.41 683.325 L1702.85 683.325 L1702.29 683.325 L1701.73 683.325 L1701.17 683.325 L1700.61 683.325 L1700.05 683.325 L1699.5 683.325 L1698.94 683.325 L1698.38 683.325 L1697.82 683.325 L1697.26 683.325 L1696.7 683.325 L1696.14 683.325 L1695.58 683.325 L1695.02 683.325 L1694.46 683.325 L1693.9 683.325 L1693.34 683.325 L1692.78 683.325 L1692.23 683.325 L1691.67 683.325 L1691.11 683.325 L1690.55 683.325 L1689.99 683.325 L1689.43 683.325 L1688.87 683.325 L1688.31 683.325 L1687.75 683.325 L1687.19 683.325 L1686.63 683.325 L1686.07 683.325 L1685.51 683.325 L1684.95 683.325 L1684.4 683.325 L1683.84 683.325 L1683.28 683.325 L1682.72 683.325 L1682.16 683.325 L1681.6 683.325 L1681.04 683.325 L1680.48 683.325 L1679.92 683.325 L1679.36 683.325 L1678.8 683.325 L1678.24 683.325 L1677.68 683.325 L1677.13 683.325 L1676.57 683.325 L1676.01 683.325 L1675.45 683.325 L1674.89 683.325 L1674.33 683.325 L1673.77 683.325 L1673.21 683.325 L1672.65 683.325 L1672.09 683.325 L1671.53 683.325 L1670.97 683.325 L1670.41 683.325 L1669.85 683.325 L1669.3 683.325 L1668.74 683.325 L1668.18 683.325 L1667.62 683.325 L1667.06 683.325 L1666.5 683.325 L1665.94 683.325 L1665.38 683.325 L1664.82 683.325 L1664.26 683.325 L1663.7 683.325 L1663.14 683.325 L1662.58 683.325 L1662.03 683.325 L1661.47 683.325 L1660.91 683.325 L1660.35 683.325 L1659.79 683.325 L1659.23 683.325 L1658.67 683.325 L1658.11 683.325 L1657.55 683.325 L1656.99 683.325 L1656.43 683.325 L1655.87 683.325 L1655.31 683.325 L1654.76 683.325 L1654.2 683.325 L1653.64 683.325 L1653.08 683.325 L1652.52 683.325 L1651.96 683.325 L1651.4 683.325 L1650.84 683.325 L1650.28 683.325 L1649.72 683.325 L1649.16 683.325 L1648.6 683.325 L1648.04 683.325 L1647.48 683.325 L1646.93 683.325 L1646.37 683.325 L1645.81 683.325 L1645.25 683.325 L1644.69 683.325 L1644.13 683.325 L1643.57 683.325 L1643.01 683.325 L1642.45 683.325 L1641.89 683.325 L1641.33 683.325 L1640.77 683.325 L1640.21 683.325 L1639.66 683.325 L1639.1 683.325 L1638.54 683.325 L1637.98 683.325 L1637.42 683.325 L1636.86 683.325 L1636.3 683.325 L1635.74 683.325 L1635.18 683.325 L1634.62 683.325 L1634.06 683.325 L1633.5 683.325 L1632.94 683.325 L1632.39 683.325 L1631.83 683.325 L1631.27 683.325 L1630.71 683.325 L1630.15 683.325 L1629.59 683.325 L1629.03 683.325 L1628.47 683.325 L1627.91 683.325 L1627.35 683.325 L1626.79 683.325 L1626.23 683.325 L1625.67 683.325 L1625.11 683.325 L1624.56 683.325 L1624 683.325 L1623.44 683.325 L1622.88 683.325 L1622.32 683.325 L1621.76 683.325 L1621.2 683.325 L1620.64 683.325 L1620.08 683.325 L1619.52 683.325 L1618.96 683.325 L1618.4 683.325 L1617.84 683.325 L1617.29 683.325 L1616.73 683.325 L1616.17 683.325 L1615.61 683.325 L1615.05 683.325 L1614.49 683.325 L1613.93 683.325 L1613.37 683.325 L1612.81 683.325 L1612.25 683.325 L1611.69 683.325 L1611.13 683.325 L1610.57 683.325 L1610.02 683.325 L1609.46 683.325 L1608.9 683.325 L1608.34 683.325 L1607.78 683.325 L1607.22 683.325 L1606.66 683.325 L1606.1 683.325 L1605.54 683.325 L1604.98 683.325 L1604.42 683.325 L1603.86 683.325 L1603.3 683.325 L1602.74 683.325 L1602.19 683.325 L1601.63 683.325 L1601.07 683.325 L1600.51 683.325 L1599.95 683.325 L1599.39 683.325 L1598.83 683.325 L1598.27 683.325 L1597.71 683.325 L1597.15 683.325 L1596.59 683.325 L1596.03 683.325 L1595.47 683.325 L1594.92 683.325 L1594.36 683.325 L1593.8 683.325 L1593.24 683.325 L1592.68 683.325 L1592.12 683.325 L1591.56 683.325 L1591 683.325 L1590.44 683.325 L1589.88 683.325 L1589.32 683.325 L1588.76 683.325 L1588.2 683.325 L1587.65 683.325 L1587.09 683.325 L1586.53 683.325 L1585.97 683.325 L1585.41 683.325 L1584.85 683.325 L1584.29 683.325 L1583.73 683.325 L1583.17 683.325 L1582.61 683.325 L1582.05 683.325 L1581.49 683.325 L1580.93 683.325 L1580.37 683.325 L1579.82 683.325 L1579.26 683.325 L1578.7 683.325 L1578.14 683.325 L1577.58 683.325 L1577.02 683.325 L1576.46 683.325 L1575.9 683.325 L1575.34 683.325 L1574.78 683.325 L1574.22 683.325 L1573.66 683.325 L1573.1 683.325 L1572.55 683.325 L1571.99 683.325 L1571.43 683.325 L1570.87 683.325 L1570.31 683.325 L1569.75 683.325 L1569.19 683.325 L1568.63 683.325 L1568.07 683.325 L1567.51 683.325 L1566.95 683.325 L1566.39 683.325 L1565.83 683.325 L1565.28 683.325 L1564.72 683.325 L1564.16 683.325 L1563.6 683.325 L1563.04 683.325 L1562.48 683.325 L1561.92 683.325 L1561.36 683.325 L1560.8 683.325 L1560.24 683.325 L1559.68 683.325 L1559.12 683.325 L1558.56 683.325 L1558 683.325 L1557.45 683.325 L1556.89 683.325 L1556.33 683.325 L1555.77 683.325 L1555.21 683.325 L1554.65 683.325 L1554.09 683.325 L1553.53 683.325 L1552.97 683.325 L1552.41 683.325 L1551.85 683.325 L1551.29 683.325 L1550.73 683.325 L1550.18 683.325 L1549.62 683.325 L1549.06 683.325 L1548.5 683.325 L1547.94 683.325 L1547.38 683.325 L1546.82 683.325 L1546.26 683.325 L1545.7 683.325 L1545.14 683.325 L1544.58 683.325 L1544.02 683.325 L1543.46 683.325 L1542.9 683.325 L1542.35 683.325 L1541.79 683.325 L1541.23 683.325 L1540.67 683.325 L1540.11 683.325 L1539.55 683.325 L1538.99 683.325 L1538.43 683.325 L1537.87 683.325 L1537.31 683.325 L1536.75 683.325 L1536.19 683.325 L1535.63 683.325 L1535.08 683.325 L1534.52 683.325 L1533.96 683.325 L1533.4 683.325 L1532.84 683.325 L1532.28 683.325 L1531.72 683.325 L1531.16 683.325 L1530.6 683.325 L1530.04 683.325 L1529.48 683.325 L1528.92 683.325 L1528.36 683.325 L1527.81 683.325 L1527.25 683.325 L1526.69 683.325 L1526.13 683.325 L1525.57 683.325 L1525.01 683.325 L1524.45 683.325 L1523.89 683.325 L1523.33 683.325 L1522.77 683.325 L1522.21 683.325 L1521.65 683.325 L1521.09 683.325 L1520.53 683.325 L1519.98 683.325 L1519.42 683.325 L1518.86 683.325 L1518.3 683.325 L1517.74 683.325 L1517.18 683.325 L1516.62 683.325 L1516.06 683.325 L1515.5 683.325 L1514.94 683.325 L1514.38 683.325 L1513.82 683.325 L1513.26 683.325 L1512.71 683.325 L1512.15 683.325 L1511.59 683.325 L1511.03 683.325 L1510.47 683.325 L1509.91 683.325 L1509.35 683.325 L1508.79 683.325 L1508.23 683.325 L1507.67 683.325 L1507.11 683.325 L1506.55 683.325 L1505.99 683.325 L1505.44 683.325 L1504.88 683.325 L1504.32 683.325 L1503.76 683.325 L1503.2 683.325 L1502.64 683.325 L1502.08 683.325 L1501.52 683.325 L1500.96 683.325 L1500.4 683.325 L1499.84 683.325 L1499.28 683.325 L1498.72 683.325 L1498.16 683.325 L1497.61 683.325 L1497.05 683.325 L1496.49 683.325 L1495.93 683.325 L1495.37 683.325 L1494.81 683.325 L1494.25 683.325 L1493.69 683.325 L1493.13 683.325 L1492.57 683.325 L1492.01 683.325 L1491.45 683.325 L1490.89 683.325 L1490.34 683.325 L1489.78 683.325 L1489.22 683.325 L1488.66 683.325 L1488.1 683.325 L1487.54 683.325 L1486.98 683.325 L1486.42 683.325 L1485.86 683.325 L1485.3 683.325 L1484.74 683.325 L1484.18 683.325 L1483.62 683.325 L1483.07 683.325 L1482.51 683.325 L1481.95 683.325 L1481.39 683.325 L1480.83 683.325 L1480.27 683.325 L1479.71 683.325 L1479.15 683.325 L1478.59 683.325 L1478.03 683.325 L1477.47 683.325 L1476.91 683.325 L1476.35 683.325 L1475.79 683.325 L1475.24 683.325 L1474.68 683.325 L1474.12 683.325 L1473.56 683.325 L1473 683.325 L1472.44 683.325 L1471.88 683.325 L1471.32 683.325 L1470.76 683.325 L1470.2 683.325 L1469.64 683.325 L1469.08 683.325 L1468.52 683.325 L1467.97 683.325 L1467.41 683.325 L1466.85 683.325 L1466.29 683.325 L1465.73 683.325 L1465.17 683.325 L1464.61 683.325 L1464.05 683.325 L1463.49 683.325 L1462.93 683.325 L1462.37 683.325 L1461.81 683.325 L1461.25 683.325 L1460.7 683.325 L1460.14 683.325 L1459.58 683.325 L1459.02 683.325 L1458.46 683.325 L1457.9 683.325 L1457.34 683.325 L1456.78 683.325 L1456.22 683.325 L1455.66 683.325 L1455.1 683.325 L1454.54 683.325 L1453.98 683.325 L1453.42 683.325 L1452.87 683.325 L1452.31 683.325 L1451.75 683.325 L1451.19 683.325 L1450.63 683.325 L1450.07 683.325 L1449.51 683.325 L1448.95 683.325 L1448.39 683.325 L1447.83 683.325 L1447.27 683.325 L1446.71 683.325 L1446.15 683.325 L1445.6 683.325 L1445.04 683.325 L1444.48 683.325 L1443.92 683.325 L1443.36 683.325 L1442.8 683.325 L1442.24 683.325 L1441.68 683.325 L1441.12 683.325 L1440.56 683.325 L1440 683.325 L1439.44 683.325 L1438.88 683.325 L1438.33 683.325 L1437.77 683.325 L1437.21 683.325 L1436.65 683.325 L1436.09 683.325 L1435.53 683.325 L1434.97 683.325 L1434.41 683.325 L1433.85 683.325 L1433.29 683.325 L1432.73 683.325 L1432.17 683.325 L1431.61 683.325 L1431.05 683.325 L1430.5 683.325 L1429.94 683.325 L1429.38 683.325 L1428.82 683.325 L1428.26 683.325 L1427.7 683.325 L1427.14 683.325 L1426.58 683.325 L1426.02 683.325 L1425.46 683.325 L1424.9 683.325 L1424.34 683.325 L1423.78 683.325 L1423.23 683.325 L1422.67 683.325 L1422.11 683.325 L1421.55 683.325 L1420.99 683.325 L1420.43 683.325 L1419.87 683.325 L1419.31 683.325 L1418.75 683.325 L1418.19 683.325 L1417.63 683.325 L1417.07 683.325 L1416.51 683.325 L1415.95 683.325 L1415.4 683.325 L1414.84 683.325 L1414.28 683.325 L1413.72 683.325 L1413.16 683.325 L1412.6 683.325 L1412.04 683.325 L1411.48 683.325 L1410.92 683.325 L1410.36 683.325 L1409.8 683.325 L1409.24 683.325 L1408.68 683.325 L1408.13 683.325 L1407.57 683.325 L1407.01 683.325 L1406.45 683.325 L1405.89 683.325 L1405.33 683.325 L1404.77 683.325 L1404.21 683.325 L1403.65 683.325 L1403.09 683.325 L1402.53 683.325 L1401.97 683.325 L1401.41 683.325 L1400.86 683.325 L1400.3 683.325 L1399.74 683.325 L1399.18 683.325 L1398.62 683.325 L1398.06 683.325 L1397.5 683.325 L1396.94 683.325 L1396.38 683.325 L1395.82 683.325 L1395.26 683.325 L1394.7 683.325 L1394.14 683.325 L1393.58 683.325 L1393.03 683.325 L1392.47 683.325 L1391.91 683.325 L1391.35 683.325 L1390.79 683.325 L1390.23 683.325 L1389.67 683.325 L1389.11 683.325 L1388.55 683.325 L1387.99 683.325 L1387.43 683.325 L1386.87 683.325 L1386.31 683.325 L1385.76 683.325 L1385.2 683.325 L1384.64 683.325 L1384.08 683.325 L1383.52 683.325 L1382.96 683.325 L1382.4 683.325 L1381.84 683.325 L1381.28 683.325 L1380.72 683.325 L1380.16 683.325 L1379.6 683.325 L1379.04 683.325 L1378.49 683.325 L1377.93 683.325 L1377.37 683.325 L1376.81 683.325 L1376.25 683.325 L1375.69 683.325 L1375.13 683.325 L1374.57 683.325 L1374.01 683.325 L1373.45 683.325 L1372.89 683.325 L1372.33 683.325 L1371.77 683.325 L1371.21 683.325 L1370.66 683.325 L1370.1 683.325 L1369.54 683.325 L1368.98 683.325 L1368.42 683.325 L1367.86 683.325 L1367.3 683.325 L1366.74 683.325 L1366.18 683.325 L1365.62 683.325 L1365.06 683.325 L1364.5 683.325 L1363.94 683.325 L1363.39 683.325 L1362.83 683.325 L1362.27 683.325 L1361.71 683.325 L1361.15 683.325 L1360.59 683.325 L1360.03 683.325 L1359.47 683.325 L1358.91 683.325 L1358.35 683.325 L1357.79 683.325 L1357.23 683.325 L1356.67 683.325 L1356.12 683.325 L1355.56 683.325 L1355 683.325 L1354.44 683.325 L1353.88 683.325 L1353.32 683.325 L1352.76 683.325 L1352.2 683.325 L1351.64 683.325 L1351.08 683.325 L1350.52 683.325 L1349.96 683.325 L1349.4 683.325 L1348.84 683.325 L1348.29 683.325 L1347.73 683.325 L1347.17 683.325 L1346.61 683.325 L1346.05 683.325 L1345.49 683.325 L1344.93 683.325 L1344.37 683.325 L1343.81 683.325 L1343.25 683.325 L1342.69 683.325 L1342.13 683.325 L1341.57 683.325 L1341.02 683.325 L1340.46 683.325 L1339.9 683.325 L1339.34 683.325 L1338.78 683.325 L1338.22 683.325 L1337.66 683.325 L1337.1 683.325 L1336.54 683.325 L1335.98 683.325 L1335.42 683.325 L1334.86 683.325 L1334.3 683.325 L1333.75 683.325 L1333.19 683.325 L1332.63 683.325 L1332.07 683.325 L1331.51 683.325 L1330.95 683.325 L1330.39 683.325 L1329.83 683.325 L1329.27 683.325 L1328.71 683.325 L1328.15 683.325 L1327.59 683.325 L1327.03 683.325 L1326.47 683.325 L1325.92 683.325 L1325.36 683.325 L1324.8 683.325 L1324.24 683.325 L1323.68 683.325 L1323.12 683.325 L1322.56 683.325 L1322 683.325 L1321.44 683.325 L1320.88 683.325 L1320.32 683.325 L1319.76 683.325 L1319.2 683.325 L1318.65 683.325 L1318.09 683.325 L1317.53 683.325 L1316.97 683.325 L1316.41 683.325 L1315.85 683.325 L1315.29 683.325 L1314.73 683.325 L1314.17 683.325 L1313.61 683.325 L1313.05 683.325 L1312.49 683.325 L1311.93 683.325 L1311.38 683.325 L1310.82 683.325 L1310.26 683.325 L1309.7 683.325 L1309.14 683.325 L1308.58 683.325 L1308.02 683.325 L1307.46 683.325 L1306.9 683.325 L1306.34 683.325 L1305.78 683.325 L1305.22 683.325 L1304.66 683.325 L1304.1 683.325 L1303.55 683.325 L1302.99 683.325 L1302.43 683.325 L1301.87 683.325 L1301.31 683.325 L1300.75 683.325 L1300.19 683.325 L1299.63 683.325 L1299.07 683.325 L1298.51 683.325 L1297.95 683.325 L1297.39 683.325 L1296.83 683.325 L1296.28 683.325 L1295.72 683.325 L1295.16 683.325 L1294.6 683.325 L1294.04 683.325 L1293.48 683.325 L1292.92 683.325 L1292.36 683.325 L1291.8 683.325 L1291.24 683.325 L1290.68 683.325 L1290.12 683.325 L1289.56 683.325 L1289 683.325 L1288.45 683.325 L1287.89 683.325 L1287.33 683.325 L1286.77 683.325 L1286.21 683.325 L1285.65 683.325 L1285.09 683.325 L1284.53 683.325 L1283.97 683.325 L1283.41 683.325 L1282.85 683.325 L1282.29 683.325 L1281.73 683.325 L1281.18 683.325 L1280.62 683.325 L1280.06 683.325 L1279.5 683.325 L1278.94 683.325 L1278.38 683.325 L1277.82 683.325 L1277.26 683.325 L1276.7 683.325 L1276.14 683.325 L1275.58 683.325 L1275.02 683.325 L1274.46 683.325 L1273.91 683.325 L1273.35 683.325 L1272.79 683.325 L1272.23 683.325 L1271.67 683.325 L1271.11 683.325 L1270.55 683.325 L1269.99 683.325 L1269.43 683.325 L1268.87 683.325 L1268.31 683.325 L1267.75 683.325 L1267.19 683.325 L1266.63 683.325 L1266.08 683.325 L1265.52 683.325 L1264.96 683.325 L1264.4 683.325 L1263.84 683.325 L1263.28 683.325 L1262.72 683.325 L1262.16 683.325 L1261.6 683.325 L1261.04 683.325 L1260.48 683.325 L1259.92 683.325 L1259.36 683.325 L1258.81 683.325 L1258.25 683.325 L1257.69 683.325 L1257.13 683.325 L1256.57 683.325 L1256.01 683.325 L1255.45 683.325 L1254.89 683.325 L1254.33 683.325 L1253.77 683.325 L1253.21 683.325 L1252.65 683.325 L1252.09 683.325 L1251.54 683.325 L1250.98 683.325 L1250.42 683.325 L1249.86 683.325 L1249.3 683.325 L1248.74 683.325 L1248.18 683.325 L1247.62 683.325 L1247.06 683.325 L1246.5 683.325 L1245.94 683.325 L1245.38 683.325 L1244.82 683.325 L1244.26 683.325 L1243.71 683.325 L1243.15 683.325 L1242.59 683.325 L1242.03 683.325 L1241.47 683.325 L1240.91 683.325 L1240.35 683.325 L1239.79 683.325 L1239.23 683.325 L1238.67 683.325 L1238.11 683.325 L1237.55 683.325 L1236.99 683.325 L1236.44 683.325 L1235.88 683.325 L1235.32 683.325 L1234.76 683.325 L1234.2 683.325 L1233.64 683.325 L1233.08 683.325 L1232.52 683.325 L1231.96 683.325 L1231.4 683.325 L1230.84 683.325 L1230.28 683.325 L1229.72 683.325 L1229.17 683.325 L1228.61 683.325 L1228.05 683.325 L1227.49 683.325 L1226.93 683.325 L1226.37 683.325 L1225.81 683.325 L1225.25 683.325 L1224.69 683.325 L1224.13 683.325 L1223.57 683.325 L1223.01 683.325 L1222.45 683.325 L1221.89 683.325 L1221.34 683.325 L1220.78 683.325 L1220.22 683.325 L1219.66 683.325 L1219.1 683.325 L1218.54 683.325 L1217.98 683.325 L1217.42 683.325 L1216.86 683.325 L1216.3 683.325 L1215.74 683.325 L1215.18 683.325 L1214.62 683.325 L1214.07 683.325 L1213.51 683.325 L1212.95 683.325 L1212.39 683.325 L1211.83 683.325 L1211.27 683.325 L1210.71 683.325 L1210.15 683.325 L1209.59 683.325 L1209.03 683.325 L1208.47 683.325 L1207.91 683.325 L1207.35 683.325 L1206.8 683.325 L1206.24 683.325 L1205.68 683.325 L1205.12 683.325 L1204.56 683.325 L1204 683.325 L1203.44 683.325 L1202.88 683.325 L1202.32 683.325 L1201.76 683.325 L1201.2 683.325 L1200.64 683.325 L1200.08 683.325 L1199.52 683.325 L1198.97 683.325 L1198.41 683.325 L1197.85 683.325 L1197.29 683.325 L1196.73 683.325 L1196.17 683.325 L1195.61 683.325 L1195.05 683.325 L1194.49 683.325 L1193.93 683.325 L1193.37 683.325 L1192.81 683.325 L1192.25 683.325 L1191.7 683.325 L1191.14 683.325 L1190.58 683.325 L1190.02 683.325 L1189.46 683.325 L1188.9 683.325 L1188.34 683.325 L1187.78 683.325 L1187.22 683.325 L1186.66 683.325 L1186.1 683.325 L1185.54 683.325 L1184.98 683.325 L1184.43 683.325 L1183.87 683.325 L1183.31 683.325 L1182.75 683.325 L1182.19 683.325 L1181.63 683.325 L1181.07 683.325 L1180.51 683.325 L1179.95 683.325 L1179.39 683.325 L1178.83 683.325 L1178.27 683.325 L1177.71 683.325 L1177.15 683.325 L1176.6 683.325 L1176.04 683.325 L1175.48 683.325 L1174.92 683.325 L1174.36 683.325 L1173.8 683.325 L1173.24 683.325 L1172.68 683.325 L1172.12 683.325 L1171.56 683.325 L1171 683.325 L1170.44 683.325 L1169.88 683.325 L1169.33 683.325 L1168.77 683.325 L1168.21 683.325 L1167.65 683.325 L1167.09 683.325 L1166.53 683.325 L1165.97 683.325 L1165.41 683.325 L1164.85 683.325 L1164.29 683.325 L1163.73 683.325 L1163.17 683.325 L1162.61 683.325 L1162.05 683.325 L1161.5 683.325 L1160.94 683.325 L1160.38 683.325 L1159.82 683.325 L1159.26 683.325 L1158.7 683.325 L1158.14 683.325 L1157.58 683.325 L1157.02 683.325 L1156.46 683.325 L1155.9 683.325 L1155.34 683.325 L1154.78 683.325 L1154.23 683.325 L1153.67 683.325 L1153.11 683.325 L1152.55 683.325 L1151.99 683.325 L1151.43 683.325 L1150.87 683.325 L1150.31 683.325 L1149.75 683.325 L1149.19 683.325 L1148.63 683.325 L1148.07 683.325 L1147.51 683.325 L1146.96 683.325 L1146.4 683.325 L1145.84 683.325 L1145.28 683.325 L1144.72 683.325 L1144.16 683.325 L1143.6 683.325 L1143.04 683.325 L1142.48 683.325 L1141.92 683.325 L1141.36 683.325 L1140.8 683.325 L1140.24 683.325 L1139.68 683.325 L1139.13 683.325 L1138.57 683.325 L1138.01 683.325 L1137.45 683.325 L1136.89 683.325 L1136.33 683.325 L1135.77 683.325 L1135.21 683.325 L1134.65 683.325 L1134.09 683.325 L1133.53 683.325 L1132.97 683.325 L1132.41 683.325 L1131.86 683.325 L1131.3 683.325 L1130.74 683.325 L1130.18 683.325 L1129.62 683.325 L1129.06 683.325 L1128.5 683.325 L1127.94 683.325 L1127.38 683.325 L1126.82 683.325 L1126.26 683.325 L1125.7 683.325 L1125.14 683.325 L1124.59 683.325 L1124.03 683.325 L1123.47 683.325 L1122.91 683.325 L1122.35 683.325 L1121.79 683.325 L1121.23 683.325 L1120.67 683.325 L1120.11 683.325 L1119.55 683.325 L1118.99 683.325 L1118.43 683.325 L1117.87 683.325 L1117.31 683.325 L1116.76 683.325 L1116.2 683.325 L1115.64 683.325 L1115.08 683.325 L1114.52 683.325 L1113.96 683.325 L1113.4 683.325 L1112.84 683.325 L1112.28 683.325 L1111.72 683.325 L1111.16 683.325 L1110.6 683.325 L1110.04 683.325 L1109.49 683.325 L1108.93 683.325 L1108.37 683.325 L1107.81 683.325 L1107.25 683.325 L1106.69 683.325 L1106.13 683.325 L1105.57 683.325 L1105.01 683.325 L1104.45 683.325 L1103.89 683.325 L1103.33 683.325 L1102.77 683.325 L1102.22 683.325 L1101.66 683.325 L1101.1 683.325 L1100.54 683.325 L1099.98 683.325 L1099.42 683.325 L1098.86 683.325 L1098.3 683.325 L1097.74 683.325 L1097.18 683.325 L1096.62 683.325 L1096.06 683.325 L1095.5 683.325 L1094.94 683.325 L1094.39 683.325 L1093.83 683.325 L1093.27 683.325 L1092.71 683.325 L1092.15 683.325 L1091.59 683.325 L1091.03 683.325 L1090.47 683.325 L1089.91 683.325 L1089.35 683.325 L1088.79 683.325 L1088.23 683.325 L1087.67 683.325 L1087.12 683.325 L1086.56 683.325 L1086 683.325 L1085.44 683.325 L1084.88 683.325 L1084.32 683.325 L1083.76 683.325 L1083.2 683.325 L1082.64 683.325 L1082.08 683.325 L1081.52 683.325 L1080.96 683.325 L1080.4 683.325 L1079.85 683.325 L1079.29 683.325 L1078.73 683.325 L1078.17 683.325 L1077.61 683.325 L1077.05 683.325 L1076.49 683.325 L1075.93 683.325 L1075.37 683.325 L1074.81 683.325 L1074.25 683.325 L1073.69 683.325 L1073.13 683.325 L1072.57 683.325 L1072.02 683.325 L1071.46 683.325 L1070.9 683.325 L1070.34 683.325 L1069.78 683.325 L1069.22 683.325 L1068.66 683.325 L1068.1 683.325 L1067.54 683.325 L1066.98 683.325 L1066.42 683.325 L1065.86 683.325 L1065.3 683.325 L1064.75 683.325 L1064.19 683.325 L1063.63 683.325 L1063.07 683.325 L1062.51 683.325 L1061.95 683.325 L1061.39 683.325 L1060.83 683.325 L1060.27 683.325 L1059.71 683.325 L1059.15 683.325 L1058.59 683.325 L1058.03 683.325 L1057.48 683.325 L1056.92 683.325 L1056.36 683.325 L1055.8 683.325 L1055.24 683.325 L1054.68 683.325 L1054.12 683.325 L1053.56 683.325 L1053 683.325 L1052.44 683.325 L1051.88 683.325 L1051.32 683.325 L1050.76 683.325 L1050.2 683.325 L1049.65 683.325 L1049.09 683.325 L1048.53 683.325 L1047.97 683.325 L1047.41 683.325 L1046.85 683.325 L1046.29 683.325 L1045.73 683.325 L1045.17 683.325 L1044.61 683.325 L1044.05 683.325 L1043.49 683.325 L1042.93 683.325 L1042.38 683.325 L1041.82 683.325 L1041.26 683.325 L1040.7 683.325 L1040.14 683.325 L1039.58 683.325 L1039.02 683.325 L1038.46 683.325 L1037.9 683.325 L1037.34 683.325 L1036.78 683.325 L1036.22 683.325 L1035.66 683.325 L1035.1 683.325 L1034.55 683.325 L1033.99 683.325 L1033.43 683.325 L1032.87 683.325 L1032.31 683.325 L1031.75 683.325 L1031.19 683.325 L1030.63 683.325 L1030.07 683.325 L1029.51 683.325 L1028.95 683.325 L1028.39 683.325 L1027.83 683.325 L1027.28 683.325 L1026.72 683.325 L1026.16 683.325 L1025.6 683.325 L1025.04 683.325 L1024.48 683.325 L1023.92 683.325 L1023.36 683.325 L1022.8 683.325 L1022.24 683.325 L1021.68 683.325 L1021.12 683.325 L1020.56 683.325 L1020.01 683.325 L1019.45 683.325 L1018.89 683.325 L1018.33 683.325 L1017.77 683.325 L1017.21 683.325 L1016.65 683.325 L1016.09 683.325 L1015.53 683.325 L1014.97 683.325 L1014.41 683.325 L1013.85 683.325 L1013.29 683.325 L1012.73 683.325 L1012.18 683.325 L1011.62 683.325 L1011.06 683.325 L1010.5 683.325 L1009.94 683.325 L1009.38 683.325 L1008.82 683.325 L1008.26 683.325 L1007.7 683.325 L1007.14 683.325 L1006.58 683.325 L1006.02 683.325 L1005.46 683.325 L1004.91 683.325 L1004.35 683.325 L1003.79 683.325 L1003.23 683.325 L1002.67 683.325 L1002.11 683.325 L1001.55 683.325 L1000.99 683.325 L1000.43 683.325 L999.872 683.325 L999.313 683.325 L998.754 683.325 L998.194 683.325 L997.635 683.325 L997.076 683.325 L996.517 683.325 L995.957 683.325 L995.398 683.325 L994.839 683.325 L994.28 683.325 L993.72 683.325 L993.161 683.325 L992.602 683.325 L992.043 683.325 L991.483 683.325 L990.924 683.325 L990.365 683.325 L989.806 683.325 L989.246 683.325 L988.687 683.325 L988.128 683.325 L987.569 683.325 L987.009 683.325 L986.45 683.325 L985.891 683.325 L985.332 683.325 L984.772 683.325 L984.213 683.325 L983.654 683.325 L983.095 683.325 L982.535 683.325 L981.976 683.325 L981.417 683.325 L980.858 683.325 L980.298 683.325 L979.739 683.325 L979.18 683.325 L978.621 683.325 L978.061 683.325 L977.502 683.325 L976.943 683.325 L976.384 683.325 L975.824 683.325 L975.265 683.325 L974.706 683.325 L974.147 683.325 L973.587 683.325 L973.028 683.325 L972.469 683.325 L971.91 683.325 L971.35 683.325 L970.791 683.325 L970.232 683.325 L969.673 683.325 L969.113 683.325 L968.554 683.325 L967.995 683.325 L967.436 683.325 L966.876 683.325 L966.317 683.325 L965.758 683.325 L965.199 683.325 L964.639 683.325 L964.08 683.325 L963.521 683.325 L962.962 683.325 L962.402 683.325 L961.843 683.325 L961.284 683.325 L960.725 683.325 L960.165 683.325 L959.606 683.325 L959.047 683.325 L958.488 683.325 L957.928 683.325 L957.369 683.325 L956.81 683.325 L956.251 683.325 L955.691 683.325 L955.132 683.325 L954.573 683.325 L954.014 683.325 L953.454 683.325 L952.895 683.325 L952.336 683.325 L951.777 683.325 L951.217 683.325 L950.658 683.325 L950.099 683.325 L949.54 683.325 L948.98 683.325 L948.421 683.325 L947.862 683.325 L947.303 683.325 L946.743 683.325 L946.184 683.325 L945.625 683.325 L945.066 683.325 L944.506 683.325 L943.947 683.325 L943.388 683.325 L942.829 683.325 L942.269 683.325 L941.71 683.325 L941.151 683.325 L940.592 683.325 L940.032 683.325 L939.473 683.325 L938.914 683.325 L938.355 683.325 L937.795 683.325 L937.236 683.325 L936.677 683.325 L936.118 683.325 L935.558 683.325 L934.999 683.325 L934.44 683.325 L933.881 683.325 L933.321 683.325 L932.762 683.325 L932.203 683.325 L931.644 683.325 L931.084 683.325 L930.525 683.325 L929.966 683.325 L929.406 683.325 L928.847 683.325 L928.288 683.325 L927.729 683.325 L927.169 683.325 L926.61 683.325 L926.051 683.325 L925.492 683.325 L924.932 683.325 L924.373 683.325 L923.814 683.325 L923.255 683.325 L922.695 683.325 L922.136 683.325 L921.577 683.325 L921.018 683.325 L920.458 683.325 L919.899 683.325 L919.34 683.325 L918.781 683.325 L918.221 683.325 L917.662 683.325 L917.103 683.325 L916.544 683.325 L915.984 683.325 L915.425 683.325 L914.866 683.325 L914.307 683.325 L913.747 683.325 L913.188 683.325 L912.629 683.325 L912.07 683.325 L911.51 683.325 L910.951 683.325 L910.392 683.325 L909.833 683.325 L909.273 683.325 L908.714 683.325 L908.155 683.325 L907.596 683.325 L907.036 683.325 L906.477 683.325 L905.918 683.325 L905.359 683.325 L904.799 683.325 L904.24 683.325 L903.681 683.325 L903.122 683.325 L902.562 683.325 L902.003 683.325 L901.444 683.325 L900.885 683.325 L900.325 683.325 L899.766 683.325 L899.207 683.325 L898.648 683.325 L898.088 683.325 L897.529 683.325 L896.97 683.325 L896.411 683.325 L895.851 683.325 L895.292 683.325 L894.733 683.325 L894.174 683.325 L893.614 683.325 L893.055 683.325 L892.496 683.325 L891.937 683.325 L891.377 683.325 L890.818 683.325 L890.259 683.325 L889.7 683.325 L889.14 683.325 L888.581 683.325 L888.022 683.325 L887.463 683.325 L886.903 683.325 L886.344 683.325 L885.785 683.325 L885.226 683.325 L884.666 683.325 L884.107 683.325 L883.548 683.325 L882.989 683.325 L882.429 683.325 L881.87 683.325 L881.311 683.325 L880.752 683.325 L880.192 683.325 L879.633 683.325 L879.074 683.325 L878.515 683.325 L877.955 683.325 L877.396 683.325 L876.837 683.325 L876.278 683.325 L875.718 683.325 L875.159 683.325 L874.6 683.325 L874.041 683.325 L873.481 683.325 L872.922 683.325 L872.363 683.325 L871.804 683.325 L871.244 683.325 L870.685 683.325 L870.126 683.325 L869.567 683.325 L869.007 683.325 L868.448 683.325 L867.889 683.325 L867.33 683.325 L866.77 683.325 L866.211 683.325 L865.652 683.325 L865.093 683.325 L864.533 683.325 L863.974 683.325 L863.415 683.325 L862.856 683.325 L862.296 683.325 L861.737 683.325 L861.178 683.325 L860.619 683.325 L860.059 683.325 L859.5 683.325 L858.941 683.325 L858.382 683.325 L857.822 683.325 L857.263 683.325 L856.704 683.325 L856.145 683.325 L855.585 683.325 L855.026 683.325 L854.467 683.325 L853.908 683.325 L853.348 683.325 L852.789 683.325 L852.23 683.325 L851.671 683.325 L851.111 683.325 L850.552 683.325 L849.993 683.325 L849.434 683.325 L848.874 683.325 L848.315 683.325 L847.756 683.325 L847.197 683.325 L846.637 683.325 L846.078 683.325 L845.519 683.325 L844.96 683.325 L844.4 683.325 L843.841 683.325 L843.282 683.325 L842.723 683.325 L842.163 683.325 L841.604 683.325 L841.045 683.325 L840.486 683.325 L839.926 683.325 L839.367 683.325 L838.808 683.325 L838.249 683.325 L837.689 683.325 L837.13 683.325 L836.571 683.325 L836.012 683.325 L835.452 683.325 L834.893 683.325 L834.334 683.325 L833.775 683.325 L833.215 683.325 L832.656 683.325 L832.097 683.325 L831.538 683.325 L830.978 683.325 L830.419 683.325 L829.86 683.325 L829.301 683.325 L828.741 683.325 L828.182 683.325 L827.623 683.325 L827.064 683.325 L826.504 683.325 L825.945 683.325 L825.386 683.325 L824.827 683.325 L824.267 683.325 L823.708 683.325 L823.149 683.325 L822.59 683.325 L822.03 683.325 L821.471 683.325 L820.912 683.325 L820.353 683.325 L819.793 683.325 L819.234 683.325 L818.675 683.325 L818.116 683.325 L817.556 683.325 L816.997 683.325 L816.438 683.325 L815.879 683.325 L815.319 683.325 L814.76 683.325 L814.201 683.325 L813.642 683.325 L813.082 683.325 L812.523 683.325 L811.964 683.325 L811.405 683.325 L810.845 683.325 L810.286 683.325 L809.727 683.325 L809.168 683.325 L808.608 683.325 L808.049 683.325 L807.49 683.325 L806.931 683.325 L806.371 683.325 L805.812 683.325 L805.253 683.325 L804.693 683.325 L804.134 683.325 L803.575 683.325 L803.016 683.325 L802.456 683.325 L801.897 683.325 L801.338 683.325 L800.779 683.325 L800.219 683.325 L799.66 683.325 L799.101 683.325 L798.542 683.325 L797.982 683.325 L797.423 683.325 L796.864 683.325 L796.305 683.325 L795.745 683.325 L795.186 683.325 L794.627 683.325 L794.068 683.325 L793.508 683.325 L792.949 683.325 L792.39 683.325 L791.831 683.325 L791.271 683.325 L790.712 683.325 L790.153 683.325 L789.594 683.325 L789.034 683.325 L788.475 683.325 L787.916 683.325 L787.357 683.325 L786.797 683.325 L786.238 683.325 L785.679 683.325 L785.12 683.325 L784.56 683.325 L784.001 683.325 L783.442 683.325 L782.883 683.325 L782.323 683.325 L781.764 683.325 L781.205 683.325 L780.646 683.325 L780.086 683.325 L779.527 683.325 L778.968 683.325 L778.409 683.325 L777.849 683.325 L777.29 683.325 L776.731 683.325 L776.172 683.325 L775.612 683.325 L775.053 683.325 L774.494 683.325 L773.935 683.325 L773.375 683.325 L772.816 683.325 L772.257 683.325 L771.698 683.325 L771.138 683.325 L770.579 683.325 L770.02 683.325 L769.461 683.325 L768.901 683.325 L768.342 683.325 L767.783 683.325 L767.224 683.325 L766.664 683.325 L766.105 683.325 L765.546 683.325 L764.987 683.325 L764.427 683.325 L763.868 683.325 L763.309 683.325 L762.75 683.325 L762.19 683.325 L761.631 683.325 L761.072 683.325 L760.513 683.325 L759.953 683.325 L759.394 683.325 L758.835 683.325 L758.276 683.325 L757.716 683.325 L757.157 683.325 L756.598 683.325 L756.039 683.325 L755.479 683.325 L754.92 683.325 L754.361 683.325 L753.802 683.325 L753.242 683.325 L752.683 683.325 L752.124 683.325 L751.565 683.325 L751.005 683.325 L750.446 683.325 L749.887 683.325 L749.328 683.325 L748.768 683.325 L748.209 683.325 L747.65 683.325 L747.091 683.325 L746.531 683.325 L745.972 683.325 L745.413 683.325 L744.854 683.325 L744.294 683.325 L743.735 683.325 L743.176 683.325 L742.617 683.325 L742.057 683.325 L741.498 683.325 L740.939 683.325 L740.38 683.325 L739.82 683.325 L739.261 683.325 L738.702 683.325 L738.143 683.325 L737.583 683.325 L737.024 683.325 L736.465 683.325 L735.906 683.325 L735.346 683.325 L734.787 683.325 L734.228 683.325 L733.669 683.325 L733.109 683.325 L732.55 683.325 L731.991 683.325 L731.432 683.325 L730.872 683.325 L730.313 683.325 L729.754 683.325 L729.195 683.325 L728.635 683.325 L728.076 683.325 L727.517 683.325 L726.958 683.325 L726.398 683.325 L725.839 683.325 L725.28 683.325 L724.721 683.325 L724.161 683.325 L723.602 683.325 L723.043 683.325 L722.484 683.325 L721.924 683.325 L721.365 683.325 L720.806 683.325 L720.247 683.325  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip333)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,684.178 720.806,684.178 721.365,684.178 721.924,684.178 722.484,684.178 723.043,684.178 723.602,684.178 724.161,684.178 724.721,684.178 725.28,684.178 725.839,684.178 726.398,684.178 726.958,684.178 727.517,684.178 728.076,684.178 728.635,684.178 729.195,684.178 729.754,684.178 730.313,684.178 730.872,684.178 731.432,684.178 731.991,684.178 732.55,684.178 733.109,684.178 733.669,684.178 734.228,684.178 734.787,684.178 735.346,684.178 735.906,684.178 736.465,684.178 737.024,684.178 737.583,684.178 738.143,684.178 738.702,684.178 739.261,684.178 739.82,684.178 740.38,684.178 740.939,684.178 741.498,684.178 742.057,684.178 742.617,684.178 743.176,684.178 743.735,684.178 744.294,684.178 744.854,684.178 745.413,684.178 745.972,684.178 746.531,684.178 747.091,684.178 747.65,684.178 748.209,684.178 748.768,684.178 749.328,684.178 749.887,684.178 750.446,684.178 751.005,684.178 751.565,684.178 752.124,684.178 752.683,684.178 753.242,684.178 753.802,684.178 754.361,684.178 754.92,684.178 755.479,684.178 756.039,684.178 756.598,684.178 757.157,684.178 757.716,684.178 758.276,684.178 758.835,684.178 759.394,684.178 759.953,684.178 760.513,684.178 761.072,684.178 761.631,684.178 762.19,684.178 762.75,684.178 763.309,684.178 763.868,684.178 764.427,684.178 764.987,684.178 765.546,684.178 766.105,684.178 766.664,684.178 767.224,684.178 767.783,684.178 768.342,684.178 768.901,684.178 769.461,684.178 770.02,684.178 770.579,684.178 771.138,684.178 771.698,684.178 772.257,684.178 772.816,684.178 773.375,684.178 773.935,684.178 774.494,684.178 775.053,684.178 775.612,684.178 776.172,684.178 776.731,684.178 777.29,684.178 777.849,684.178 778.409,684.178 778.968,684.178 779.527,684.178 780.086,684.178 780.646,684.178 781.205,684.178 781.764,684.178 782.323,684.178 782.883,684.178 783.442,684.178 784.001,684.178 784.56,684.178 785.12,684.178 785.679,684.178 786.238,684.178 786.797,684.178 787.357,684.178 787.916,684.178 788.475,684.178 789.034,684.178 789.594,684.178 790.153,684.178 790.712,684.178 791.271,684.178 791.831,684.178 792.39,684.178 792.949,684.178 793.508,684.178 794.068,684.178 794.627,684.178 795.186,684.178 795.745,684.178 796.305,684.178 796.864,684.178 797.423,684.178 797.982,684.178 798.542,684.178 799.101,684.178 799.66,684.178 800.219,684.178 800.779,684.178 801.338,684.178 801.897,684.178 802.456,684.178 803.016,684.178 803.575,684.178 804.134,684.178 804.693,684.178 805.253,684.178 805.812,684.178 806.371,684.178 806.931,684.178 807.49,684.178 808.049,684.178 808.608,684.178 809.168,684.178 809.727,684.178 810.286,684.178 810.845,684.178 811.405,684.178 811.964,684.178 812.523,684.178 813.082,684.178 813.642,684.178 814.201,684.178 814.76,684.178 815.319,684.178 815.879,684.178 816.438,684.178 816.997,684.178 817.556,684.178 818.116,684.178 818.675,684.178 819.234,684.178 819.793,684.178 820.353,684.178 820.912,684.178 821.471,684.178 822.03,684.178 822.59,684.178 823.149,684.178 823.708,684.178 824.267,684.178 824.827,684.178 825.386,684.178 825.945,684.178 826.504,684.178 827.064,684.178 827.623,684.178 828.182,684.178 828.741,684.178 829.301,684.178 829.86,684.178 830.419,684.178 830.978,684.178 831.538,684.178 832.097,684.178 832.656,684.178 833.215,684.178 833.775,684.178 834.334,684.178 834.893,684.178 835.452,684.178 836.012,684.178 836.571,684.178 837.13,684.178 837.689,684.178 838.249,684.178 838.808,684.178 839.367,684.178 839.926,684.178 840.486,684.178 841.045,684.178 841.604,684.178 842.163,684.178 842.723,684.178 843.282,684.178 843.841,684.178 844.4,684.178 844.96,684.178 845.519,684.178 846.078,684.178 846.637,684.178 847.197,684.178 847.756,684.178 848.315,684.178 848.874,684.178 849.434,684.178 849.993,684.178 850.552,684.178 851.111,684.178 851.671,684.178 852.23,684.178 852.789,684.178 853.348,684.178 853.908,684.178 854.467,684.178 855.026,684.178 855.585,684.178 856.145,684.178 856.704,684.178 857.263,684.178 857.822,684.178 858.382,684.178 858.941,684.178 859.5,684.178 860.059,684.178 860.619,684.178 861.178,684.178 861.737,684.178 862.296,684.178 862.856,684.178 863.415,684.178 863.974,684.178 864.533,684.178 865.093,684.178 865.652,684.178 866.211,684.178 866.77,684.178 867.33,684.178 867.889,684.178 868.448,684.178 869.007,684.178 869.567,684.178 870.126,684.178 870.685,684.178 871.244,684.178 871.804,684.178 872.363,684.178 872.922,684.178 873.481,684.178 874.041,684.178 874.6,684.178 875.159,684.178 875.718,684.178 876.278,684.178 876.837,684.178 877.396,684.178 877.955,684.178 878.515,684.178 879.074,684.178 879.633,684.178 880.192,684.178 880.752,684.178 881.311,684.178 881.87,684.178 882.429,684.178 882.989,684.178 883.548,684.178 884.107,684.178 884.666,684.178 885.226,684.178 885.785,684.178 886.344,684.178 886.903,684.178 887.463,684.178 888.022,684.178 888.581,684.178 889.14,684.178 889.7,684.178 890.259,684.178 890.818,684.178 891.377,684.178 891.937,684.178 892.496,684.178 893.055,684.178 893.614,684.178 894.174,684.178 894.733,684.178 895.292,684.178 895.851,684.178 896.411,684.178 896.97,684.178 897.529,684.178 898.088,684.178 898.648,684.178 899.207,684.178 899.766,684.178 900.325,684.178 900.885,684.178 901.444,684.178 902.003,684.178 902.562,684.178 903.122,684.178 903.681,684.178 904.24,684.178 904.799,684.178 905.359,684.178 905.918,684.178 906.477,684.178 907.036,684.178 907.596,684.178 908.155,684.178 908.714,684.178 909.273,684.178 909.833,684.178 910.392,684.178 910.951,684.178 911.51,684.178 912.07,684.178 912.629,684.178 913.188,684.178 913.747,684.178 914.307,684.178 914.866,684.178 915.425,684.178 915.984,684.178 916.544,684.178 917.103,684.178 917.662,684.178 918.221,684.178 918.781,684.178 919.34,684.178 919.899,684.178 920.458,684.178 921.018,684.178 921.577,684.178 922.136,684.178 922.695,684.178 923.255,684.178 923.814,684.178 924.373,684.178 924.932,684.178 925.492,684.178 926.051,684.178 926.61,684.178 927.169,684.178 927.729,684.178 928.288,684.178 928.847,684.178 929.406,684.178 929.966,684.178 930.525,684.178 931.084,684.178 931.644,684.178 932.203,684.178 932.762,684.178 933.321,684.178 933.881,684.178 934.44,684.178 934.999,684.178 935.558,684.178 936.118,684.178 936.677,684.178 937.236,684.178 937.795,684.178 938.355,684.178 938.914,684.178 939.473,684.178 940.032,684.178 940.592,684.178 941.151,684.178 941.71,684.178 942.269,684.178 942.829,684.178 943.388,684.178 943.947,684.178 944.506,684.178 945.066,684.178 945.625,684.178 946.184,684.178 946.743,684.178 947.303,684.178 947.862,684.178 948.421,684.178 948.98,684.178 949.54,684.178 950.099,684.178 950.658,684.178 951.217,684.178 951.777,684.178 952.336,684.178 952.895,684.178 953.454,684.178 954.014,684.178 954.573,684.178 955.132,684.178 955.691,684.178 956.251,684.178 956.81,684.178 957.369,684.178 957.928,684.178 958.488,684.178 959.047,684.178 959.606,684.178 960.165,684.178 960.725,684.178 961.284,684.178 961.843,684.178 962.402,684.178 962.962,684.178 963.521,684.178 964.08,684.178 964.639,684.178 965.199,684.178 965.758,684.178 966.317,684.178 966.876,684.178 967.436,684.178 967.995,684.178 968.554,684.178 969.113,684.178 969.673,684.178 970.232,684.178 970.791,684.178 971.35,684.178 971.91,684.178 972.469,684.178 973.028,684.178 973.587,684.178 974.147,684.178 974.706,684.178 975.265,684.178 975.824,684.178 976.384,684.178 976.943,684.178 977.502,684.178 978.061,684.178 978.621,684.178 979.18,684.178 979.739,684.178 980.298,684.178 980.858,684.178 981.417,684.178 981.976,684.178 982.535,684.178 983.095,684.178 983.654,684.178 984.213,684.178 984.772,684.178 985.332,684.178 985.891,684.178 986.45,684.178 987.009,684.178 987.569,684.178 988.128,684.178 988.687,684.178 989.246,684.178 989.806,684.178 990.365,684.178 990.924,684.178 991.483,684.178 992.043,684.178 992.602,684.178 993.161,684.178 993.72,684.178 994.28,684.178 994.839,684.178 995.398,684.178 995.957,684.178 996.517,684.178 997.076,684.178 997.635,684.178 998.194,684.178 998.754,684.178 999.313,684.178 999.872,684.178 1000.43,684.178 1000.99,684.178 1001.55,684.178 1002.11,684.178 1002.67,684.178 1003.23,684.178 1003.79,684.178 1004.35,684.178 1004.91,684.178 1005.46,684.178 1006.02,684.178 1006.58,684.178 1007.14,684.178 1007.7,684.178 1008.26,684.178 1008.82,684.178 1009.38,684.178 1009.94,684.178 1010.5,684.178 1011.06,684.178 1011.62,684.178 1012.18,684.178 1012.73,684.178 1013.29,684.178 1013.85,684.178 1014.41,684.178 1014.97,684.178 1015.53,684.178 1016.09,684.178 1016.65,684.178 1017.21,684.178 1017.77,684.178 1018.33,684.178 1018.89,684.178 1019.45,684.178 1020.01,684.178 1020.56,684.178 1021.12,684.178 1021.68,684.178 1022.24,684.178 1022.8,684.178 1023.36,684.178 1023.92,684.178 1024.48,684.178 1025.04,684.178 1025.6,684.178 1026.16,684.178 1026.72,684.178 1027.28,684.178 1027.83,684.178 1028.39,684.178 1028.95,684.178 1029.51,684.178 1030.07,684.178 1030.63,684.178 1031.19,684.178 1031.75,684.178 1032.31,684.178 1032.87,684.178 1033.43,684.178 1033.99,684.178 1034.55,684.178 1035.1,684.178 1035.66,684.178 1036.22,684.178 1036.78,684.178 1037.34,684.178 1037.9,684.178 1038.46,684.178 1039.02,684.178 1039.58,684.178 1040.14,684.178 1040.7,684.178 1041.26,684.178 1041.82,684.178 1042.38,684.178 1042.93,684.178 1043.49,684.178 1044.05,684.178 1044.61,684.178 1045.17,684.178 1045.73,684.178 1046.29,684.178 1046.85,684.178 1047.41,684.178 1047.97,684.178 1048.53,684.178 1049.09,684.178 1049.65,684.178 1050.2,684.178 1050.76,684.178 1051.32,684.178 1051.88,684.178 1052.44,684.178 1053,684.178 1053.56,684.178 1054.12,684.178 1054.68,684.178 1055.24,684.178 1055.8,684.178 1056.36,684.178 1056.92,684.178 1057.48,684.178 1058.03,684.178 1058.59,684.178 1059.15,684.178 1059.71,684.178 1060.27,684.178 1060.83,684.178 1061.39,684.178 1061.95,684.178 1062.51,684.178 1063.07,684.178 1063.63,684.178 1064.19,684.178 1064.75,684.178 1065.3,684.178 1065.86,684.178 1066.42,684.178 1066.98,684.178 1067.54,684.178 1068.1,684.178 1068.66,684.178 1069.22,684.178 1069.78,684.178 1070.34,684.178 1070.9,684.178 1071.46,684.178 1072.02,684.178 1072.57,684.178 1073.13,684.178 1073.69,684.178 1074.25,684.178 1074.81,684.178 1075.37,684.178 1075.93,684.178 1076.49,684.178 1077.05,684.178 1077.61,684.178 1078.17,684.178 1078.73,684.178 1079.29,684.178 1079.85,684.178 1080.4,684.178 1080.96,684.178 1081.52,684.178 1082.08,684.178 1082.64,684.178 1083.2,684.178 1083.76,684.178 1084.32,684.178 1084.88,684.178 1085.44,684.178 1086,684.178 1086.56,684.178 1087.12,684.178 1087.67,684.178 1088.23,684.178 1088.79,684.178 1089.35,684.178 1089.91,684.178 1090.47,684.178 1091.03,684.178 1091.59,684.178 1092.15,684.178 1092.71,684.178 1093.27,684.178 1093.83,684.178 1094.39,684.178 1094.94,684.178 1095.5,684.178 1096.06,684.178 1096.62,684.178 1097.18,684.178 1097.74,684.178 1098.3,684.178 1098.86,684.178 1099.42,684.178 1099.98,684.178 1100.54,684.178 1101.1,684.178 1101.66,684.178 1102.22,684.178 1102.77,684.178 1103.33,684.178 1103.89,684.178 1104.45,684.178 1105.01,684.178 1105.57,684.178 1106.13,684.178 1106.69,684.178 1107.25,684.178 1107.81,684.178 1108.37,684.178 1108.93,684.178 1109.49,684.178 1110.04,684.178 1110.6,684.178 1111.16,684.178 1111.72,684.178 1112.28,684.178 1112.84,684.178 1113.4,684.178 1113.96,684.178 1114.52,684.178 1115.08,684.178 1115.64,684.178 1116.2,684.178 1116.76,684.178 1117.31,684.178 1117.87,684.178 1118.43,684.178 1118.99,684.178 1119.55,684.178 1120.11,684.178 1120.67,684.178 1121.23,684.178 1121.79,684.178 1122.35,684.178 1122.91,684.178 1123.47,684.178 1124.03,684.178 1124.59,684.178 1125.14,684.178 1125.7,684.178 1126.26,684.178 1126.82,684.178 1127.38,684.178 1127.94,684.178 1128.5,684.178 1129.06,684.178 1129.62,684.178 1130.18,684.178 1130.74,684.178 1131.3,684.178 1131.86,684.178 1132.41,684.178 1132.97,684.178 1133.53,684.178 1134.09,684.178 1134.65,684.178 1135.21,684.178 1135.77,684.178 1136.33,684.178 1136.89,684.178 1137.45,684.178 1138.01,684.178 1138.57,684.178 1139.13,684.178 1139.68,684.178 1140.24,684.178 1140.8,684.178 1141.36,684.178 1141.92,684.178 1142.48,684.178 1143.04,684.178 1143.6,684.178 1144.16,684.178 1144.72,684.178 1145.28,684.178 1145.84,684.178 1146.4,684.178 1146.96,684.178 1147.51,684.178 1148.07,684.178 1148.63,684.178 1149.19,684.178 1149.75,684.178 1150.31,684.178 1150.87,684.178 1151.43,684.178 1151.99,684.178 1152.55,684.178 1153.11,684.178 1153.67,684.178 1154.23,684.178 1154.78,684.178 1155.34,684.178 1155.9,684.178 1156.46,684.178 1157.02,684.178 1157.58,684.178 1158.14,684.178 1158.7,684.178 1159.26,684.178 1159.82,684.178 1160.38,684.178 1160.94,684.178 1161.5,684.178 1162.05,684.178 1162.61,684.178 1163.17,684.178 1163.73,684.178 1164.29,684.178 1164.85,684.178 1165.41,684.178 1165.97,684.178 1166.53,684.178 1167.09,684.178 1167.65,684.178 1168.21,684.178 1168.77,684.178 1169.33,684.178 1169.88,684.178 1170.44,684.178 1171,684.178 1171.56,684.178 1172.12,684.178 1172.68,684.178 1173.24,684.178 1173.8,684.178 1174.36,684.178 1174.92,684.178 1175.48,684.178 1176.04,684.178 1176.6,684.178 1177.15,684.178 1177.71,684.178 1178.27,684.178 1178.83,684.178 1179.39,684.178 1179.95,684.178 1180.51,684.178 1181.07,684.178 1181.63,684.178 1182.19,684.178 1182.75,684.178 1183.31,684.178 1183.87,684.178 1184.43,684.178 1184.98,684.178 1185.54,684.178 1186.1,684.178 1186.66,684.178 1187.22,684.178 1187.78,684.178 1188.34,684.178 1188.9,684.178 1189.46,684.178 1190.02,684.178 1190.58,684.178 1191.14,684.178 1191.7,684.178 1192.25,684.178 1192.81,684.178 1193.37,684.178 1193.93,684.178 1194.49,684.178 1195.05,684.178 1195.61,684.178 1196.17,684.178 1196.73,684.178 1197.29,684.178 1197.85,684.178 1198.41,684.178 1198.97,684.178 1199.52,684.178 1200.08,684.178 1200.64,684.178 1201.2,684.178 1201.76,684.178 1202.32,684.178 1202.88,684.178 1203.44,684.178 1204,684.178 1204.56,684.178 1205.12,684.178 1205.68,684.178 1206.24,684.178 1206.8,684.178 1207.35,684.178 1207.91,684.178 1208.47,684.178 1209.03,684.178 1209.59,684.178 1210.15,684.178 1210.71,684.178 1211.27,684.178 1211.83,684.178 1212.39,684.178 1212.95,684.178 1213.51,684.178 1214.07,684.178 1214.62,684.178 1215.18,684.178 1215.74,684.178 1216.3,684.178 1216.86,684.178 1217.42,684.178 1217.98,684.178 1218.54,684.178 1219.1,684.178 1219.66,684.178 1220.22,684.178 1220.78,684.178 1221.34,684.178 1221.89,684.178 1222.45,684.178 1223.01,684.178 1223.57,684.178 1224.13,684.178 1224.69,684.178 1225.25,684.178 1225.81,684.178 1226.37,684.178 1226.93,684.178 1227.49,684.178 1228.05,684.178 1228.61,684.178 1229.17,684.178 1229.72,684.178 1230.28,684.178 1230.84,684.178 1231.4,684.178 1231.96,684.178 1232.52,684.178 1233.08,684.178 1233.64,684.178 1234.2,684.178 1234.76,684.178 1235.32,684.178 1235.88,684.178 1236.44,684.178 1236.99,684.178 1237.55,684.178 1238.11,684.178 1238.67,684.178 1239.23,684.178 1239.79,684.178 1240.35,684.178 1240.91,684.178 1241.47,684.178 1242.03,684.178 1242.59,684.178 1243.15,684.178 1243.71,684.178 1244.26,684.178 1244.82,684.178 1245.38,684.178 1245.94,684.178 1246.5,684.178 1247.06,684.178 1247.62,684.178 1248.18,684.178 1248.74,684.178 1249.3,684.178 1249.86,684.178 1250.42,684.178 1250.98,684.178 1251.54,684.178 1252.09,684.178 1252.65,684.178 1253.21,684.178 1253.77,684.178 1254.33,684.178 1254.89,684.178 1255.45,684.178 1256.01,684.178 1256.57,684.178 1257.13,684.178 1257.69,684.178 1258.25,684.178 1258.81,684.178 1259.36,684.178 1259.92,684.178 1260.48,684.178 1261.04,684.178 1261.6,684.178 1262.16,684.178 1262.72,684.178 1263.28,684.178 1263.84,684.178 1264.4,684.178 1264.96,684.178 1265.52,684.178 1266.08,684.178 1266.63,684.178 1267.19,684.178 1267.75,684.178 1268.31,684.178 1268.87,684.178 1269.43,684.178 1269.99,684.178 1270.55,684.178 1271.11,684.178 1271.67,684.178 1272.23,684.178 1272.79,684.178 1273.35,684.178 1273.91,684.178 1274.46,684.178 1275.02,684.178 1275.58,684.178 1276.14,684.178 1276.7,684.178 1277.26,684.178 1277.82,684.178 1278.38,684.178 1278.94,684.178 1279.5,684.178 1280.06,684.178 1280.62,684.178 1281.18,684.178 1281.73,684.178 1282.29,684.178 1282.85,684.178 1283.41,684.178 1283.97,684.178 1284.53,684.178 1285.09,684.178 1285.65,684.178 1286.21,684.178 1286.77,684.178 1287.33,684.178 1287.89,684.178 1288.45,684.178 1289,684.178 1289.56,684.178 1290.12,684.178 1290.68,684.178 1291.24,684.178 1291.8,684.178 1292.36,684.178 1292.92,684.178 1293.48,684.178 1294.04,684.178 1294.6,684.178 1295.16,684.178 1295.72,684.178 1296.28,684.178 1296.83,684.178 1297.39,684.178 1297.95,684.178 1298.51,684.178 1299.07,684.178 1299.63,684.178 1300.19,684.178 1300.75,684.178 1301.31,684.178 1301.87,684.178 1302.43,684.178 1302.99,684.178 1303.55,684.178 1304.1,684.178 1304.66,684.178 1305.22,684.178 1305.78,684.178 1306.34,684.178 1306.9,684.178 1307.46,684.178 1308.02,684.178 1308.58,684.178 1309.14,684.178 1309.7,684.178 1310.26,684.178 1310.82,684.178 1311.38,684.178 1311.93,684.178 1312.49,684.178 1313.05,684.178 1313.61,684.178 1314.17,684.178 1314.73,684.178 1315.29,684.178 1315.85,684.178 1316.41,684.178 1316.97,684.178 1317.53,684.178 1318.09,684.178 1318.65,684.178 1319.2,684.178 1319.76,684.178 1320.32,684.178 1320.88,684.178 1321.44,684.178 1322,684.178 1322.56,684.178 1323.12,684.178 1323.68,684.178 1324.24,684.178 1324.8,684.178 1325.36,684.178 1325.92,684.178 1326.47,684.178 1327.03,684.178 1327.59,684.178 1328.15,684.178 1328.71,684.178 1329.27,684.178 1329.83,684.178 1330.39,684.178 1330.95,684.178 1331.51,684.178 1332.07,684.178 1332.63,684.178 1333.19,684.178 1333.75,684.178 1334.3,684.178 1334.86,684.178 1335.42,684.178 1335.98,684.178 1336.54,684.178 1337.1,684.178 1337.66,684.178 1338.22,684.178 1338.78,684.178 1339.34,684.178 1339.9,684.178 1340.46,684.178 1341.02,684.178 1341.57,684.178 1342.13,684.178 1342.69,684.178 1343.25,684.178 1343.81,684.178 1344.37,684.178 1344.93,684.178 1345.49,684.178 1346.05,684.178 1346.61,684.178 1347.17,684.178 1347.73,684.178 1348.29,684.178 1348.84,684.178 1349.4,684.178 1349.96,684.178 1350.52,684.178 1351.08,684.178 1351.64,684.178 1352.2,684.178 1352.76,684.178 1353.32,684.178 1353.88,684.178 1354.44,684.178 1355,684.178 1355.56,684.178 1356.12,684.178 1356.67,684.178 1357.23,684.178 1357.79,684.178 1358.35,684.178 1358.91,684.178 1359.47,684.178 1360.03,684.178 1360.59,684.178 1361.15,684.178 1361.71,684.178 1362.27,684.178 1362.83,684.178 1363.39,684.178 1363.94,684.178 1364.5,684.178 1365.06,684.178 1365.62,684.178 1366.18,684.178 1366.74,684.178 1367.3,684.178 1367.86,684.178 1368.42,684.178 1368.98,684.178 1369.54,684.178 1370.1,684.178 1370.66,684.178 1371.21,684.178 1371.77,684.178 1372.33,684.178 1372.89,684.178 1373.45,684.178 1374.01,684.178 1374.57,684.178 1375.13,684.178 1375.69,684.178 1376.25,684.178 1376.81,684.178 1377.37,684.178 1377.93,684.178 1378.49,684.178 1379.04,684.178 1379.6,684.178 1380.16,684.178 1380.72,684.178 1381.28,684.178 1381.84,684.178 1382.4,684.178 1382.96,684.178 1383.52,684.178 1384.08,684.178 1384.64,684.178 1385.2,684.178 1385.76,684.178 1386.31,684.178 1386.87,684.178 1387.43,684.178 1387.99,684.178 1388.55,684.178 1389.11,684.178 1389.67,684.178 1390.23,684.178 1390.79,684.178 1391.35,684.178 1391.91,684.178 1392.47,684.178 1393.03,684.178 1393.58,684.178 1394.14,684.178 1394.7,684.178 1395.26,684.178 1395.82,684.178 1396.38,684.178 1396.94,684.178 1397.5,684.178 1398.06,684.178 1398.62,684.178 1399.18,684.178 1399.74,684.178 1400.3,684.178 1400.86,684.178 1401.41,684.178 1401.97,684.178 1402.53,684.178 1403.09,684.178 1403.65,684.178 1404.21,684.178 1404.77,684.178 1405.33,684.178 1405.89,684.178 1406.45,684.178 1407.01,684.178 1407.57,684.178 1408.13,684.178 1408.68,684.178 1409.24,684.178 1409.8,684.178 1410.36,684.178 1410.92,684.178 1411.48,684.178 1412.04,684.178 1412.6,684.178 1413.16,684.178 1413.72,684.178 1414.28,684.178 1414.84,684.178 1415.4,684.178 1415.95,684.178 1416.51,684.178 1417.07,684.178 1417.63,684.178 1418.19,684.178 1418.75,684.178 1419.31,684.178 1419.87,684.178 1420.43,684.178 1420.99,684.178 1421.55,684.178 1422.11,684.178 1422.67,684.178 1423.23,684.178 1423.78,684.178 1424.34,684.178 1424.9,684.178 1425.46,684.178 1426.02,684.178 1426.58,684.178 1427.14,684.178 1427.7,684.178 1428.26,684.178 1428.82,684.178 1429.38,684.178 1429.94,684.178 1430.5,684.178 1431.05,684.178 1431.61,684.178 1432.17,684.178 1432.73,684.178 1433.29,684.178 1433.85,684.178 1434.41,684.178 1434.97,684.178 1435.53,684.178 1436.09,684.178 1436.65,684.178 1437.21,684.178 1437.77,684.178 1438.33,684.178 1438.88,684.178 1439.44,684.178 1440,684.178 1440.56,684.178 1441.12,684.178 1441.68,684.178 1442.24,684.178 1442.8,684.178 1443.36,684.178 1443.92,684.178 1444.48,684.178 1445.04,684.178 1445.6,684.178 1446.15,684.178 1446.71,684.178 1447.27,684.178 1447.83,684.178 1448.39,684.178 1448.95,684.178 1449.51,684.178 1450.07,684.178 1450.63,684.178 1451.19,684.178 1451.75,684.178 1452.31,684.178 1452.87,684.178 1453.42,684.178 1453.98,684.178 1454.54,684.178 1455.1,684.178 1455.66,684.178 1456.22,684.178 1456.78,684.178 1457.34,684.178 1457.9,684.178 1458.46,684.178 1459.02,684.178 1459.58,684.178 1460.14,684.178 1460.7,684.178 1461.25,684.178 1461.81,684.178 1462.37,684.178 1462.93,684.178 1463.49,684.178 1464.05,684.178 1464.61,684.178 1465.17,684.178 1465.73,684.178 1466.29,684.178 1466.85,684.178 1467.41,684.178 1467.97,684.178 1468.52,684.178 1469.08,684.178 1469.64,684.178 1470.2,684.178 1470.76,684.178 1471.32,684.178 1471.88,684.178 1472.44,684.178 1473,684.178 1473.56,684.178 1474.12,684.178 1474.68,684.178 1475.24,684.178 1475.79,684.178 1476.35,684.178 1476.91,684.178 1477.47,684.178 1478.03,684.178 1478.59,684.178 1479.15,684.178 1479.71,684.178 1480.27,684.178 1480.83,684.178 1481.39,684.178 1481.95,684.178 1482.51,684.178 1483.07,684.178 1483.62,684.178 1484.18,684.178 1484.74,684.178 1485.3,684.178 1485.86,684.178 1486.42,684.178 1486.98,684.178 1487.54,684.178 1488.1,684.178 1488.66,684.178 1489.22,684.178 1489.78,684.178 1490.34,684.178 1490.89,684.178 1491.45,684.178 1492.01,684.178 1492.57,684.178 1493.13,684.178 1493.69,684.178 1494.25,684.178 1494.81,684.178 1495.37,684.178 1495.93,684.178 1496.49,684.178 1497.05,684.178 1497.61,684.178 1498.16,684.178 1498.72,684.178 1499.28,684.178 1499.84,684.178 1500.4,684.178 1500.96,684.178 1501.52,684.178 1502.08,684.178 1502.64,684.178 1503.2,684.178 1503.76,684.178 1504.32,684.178 1504.88,684.178 1505.44,684.178 1505.99,684.178 1506.55,684.178 1507.11,684.178 1507.67,684.178 1508.23,684.178 1508.79,684.178 1509.35,684.178 1509.91,684.178 1510.47,684.178 1511.03,684.178 1511.59,684.178 1512.15,684.178 1512.71,684.178 1513.26,684.178 1513.82,684.178 1514.38,684.178 1514.94,684.178 1515.5,684.178 1516.06,684.178 1516.62,684.178 1517.18,684.178 1517.74,684.178 1518.3,684.178 1518.86,684.178 1519.42,684.178 1519.98,684.178 1520.53,684.178 1521.09,684.178 1521.65,684.178 1522.21,684.178 1522.77,684.178 1523.33,684.178 1523.89,684.178 1524.45,684.178 1525.01,684.178 1525.57,684.178 1526.13,684.178 1526.69,684.178 1527.25,684.178 1527.81,684.178 1528.36,684.178 1528.92,684.178 1529.48,684.178 1530.04,684.178 1530.6,684.178 1531.16,684.178 1531.72,684.178 1532.28,684.178 1532.84,684.178 1533.4,684.178 1533.96,684.178 1534.52,684.178 1535.08,684.178 1535.63,684.178 1536.19,684.178 1536.75,684.178 1537.31,684.178 1537.87,684.178 1538.43,684.178 1538.99,684.178 1539.55,684.178 1540.11,684.178 1540.67,684.178 1541.23,684.178 1541.79,684.178 1542.35,684.178 1542.9,684.178 1543.46,684.178 1544.02,684.178 1544.58,684.178 1545.14,684.178 1545.7,684.178 1546.26,684.178 1546.82,684.178 1547.38,684.178 1547.94,684.178 1548.5,684.178 1549.06,684.178 1549.62,684.178 1550.18,684.178 1550.73,684.178 1551.29,684.178 1551.85,684.178 1552.41,684.178 1552.97,684.178 1553.53,684.178 1554.09,684.178 1554.65,684.178 1555.21,684.178 1555.77,684.178 1556.33,684.178 1556.89,684.178 1557.45,684.178 1558,684.178 1558.56,684.178 1559.12,684.178 1559.68,684.178 1560.24,684.178 1560.8,684.178 1561.36,684.178 1561.92,684.178 1562.48,684.178 1563.04,684.178 1563.6,684.178 1564.16,684.178 1564.72,684.178 1565.28,684.178 1565.83,684.178 1566.39,684.178 1566.95,684.178 1567.51,684.178 1568.07,684.178 1568.63,684.178 1569.19,684.178 1569.75,684.178 1570.31,684.178 1570.87,684.178 1571.43,684.178 1571.99,684.178 1572.55,684.178 1573.1,684.178 1573.66,684.178 1574.22,684.178 1574.78,684.178 1575.34,684.178 1575.9,684.178 1576.46,684.178 1577.02,684.178 1577.58,684.178 1578.14,684.178 1578.7,684.178 1579.26,684.178 1579.82,684.178 1580.37,684.178 1580.93,684.178 1581.49,684.178 1582.05,684.178 1582.61,684.178 1583.17,684.178 1583.73,684.178 1584.29,684.178 1584.85,684.178 1585.41,684.178 1585.97,684.178 1586.53,684.178 1587.09,684.178 1587.65,684.178 1588.2,684.178 1588.76,684.178 1589.32,684.178 1589.88,684.178 1590.44,684.178 1591,684.178 1591.56,684.178 1592.12,684.178 1592.68,684.178 1593.24,684.178 1593.8,684.178 1594.36,684.178 1594.92,684.178 1595.47,684.178 1596.03,684.178 1596.59,684.178 1597.15,684.178 1597.71,684.178 1598.27,684.178 1598.83,684.178 1599.39,684.178 1599.95,684.178 1600.51,684.178 1601.07,684.178 1601.63,684.178 1602.19,684.178 1602.74,684.178 1603.3,684.178 1603.86,684.178 1604.42,684.178 1604.98,684.178 1605.54,684.178 1606.1,684.178 1606.66,684.178 1607.22,684.178 1607.78,684.178 1608.34,684.178 1608.9,684.178 1609.46,684.178 1610.02,684.178 1610.57,684.178 1611.13,684.178 1611.69,684.178 1612.25,684.178 1612.81,684.178 1613.37,684.178 1613.93,684.178 1614.49,684.178 1615.05,684.178 1615.61,684.178 1616.17,684.178 1616.73,684.178 1617.29,684.178 1617.84,684.178 1618.4,684.178 1618.96,684.178 1619.52,684.178 1620.08,684.178 1620.64,684.178 1621.2,684.178 1621.76,684.178 1622.32,684.178 1622.88,684.178 1623.44,684.178 1624,684.178 1624.56,684.178 1625.11,684.178 1625.67,684.178 1626.23,684.178 1626.79,684.178 1627.35,684.178 1627.91,684.178 1628.47,684.178 1629.03,684.178 1629.59,684.178 1630.15,684.178 1630.71,684.178 1631.27,684.178 1631.83,684.178 1632.39,684.178 1632.94,684.178 1633.5,684.178 1634.06,684.178 1634.62,684.178 1635.18,684.178 1635.74,684.178 1636.3,684.178 1636.86,684.178 1637.42,684.178 1637.98,684.178 1638.54,684.178 1639.1,684.178 1639.66,684.178 1640.21,684.178 1640.77,684.178 1641.33,684.178 1641.89,684.178 1642.45,684.178 1643.01,684.178 1643.57,684.178 1644.13,684.178 1644.69,684.178 1645.25,684.178 1645.81,684.178 1646.37,684.178 1646.93,684.178 1647.48,684.178 1648.04,684.178 1648.6,684.178 1649.16,684.178 1649.72,684.178 1650.28,684.178 1650.84,684.178 1651.4,684.178 1651.96,684.178 1652.52,684.178 1653.08,684.178 1653.64,684.178 1654.2,684.178 1654.76,684.178 1655.31,684.178 1655.87,684.178 1656.43,684.178 1656.99,684.178 1657.55,684.178 1658.11,684.178 1658.67,684.178 1659.23,684.178 1659.79,684.178 1660.35,684.178 1660.91,684.178 1661.47,684.178 1662.03,684.178 1662.58,684.178 1663.14,684.178 1663.7,684.178 1664.26,684.178 1664.82,684.178 1665.38,684.178 1665.94,684.178 1666.5,684.178 1667.06,684.178 1667.62,684.178 1668.18,684.178 1668.74,684.178 1669.3,684.178 1669.85,684.178 1670.41,684.178 1670.97,684.178 1671.53,684.178 1672.09,684.178 1672.65,684.178 1673.21,684.178 1673.77,684.178 1674.33,684.178 1674.89,684.178 1675.45,684.178 1676.01,684.178 1676.57,684.178 1677.13,684.178 1677.68,684.178 1678.24,684.178 1678.8,684.178 1679.36,684.178 1679.92,684.178 1680.48,684.178 1681.04,684.178 1681.6,684.178 1682.16,684.178 1682.72,684.178 1683.28,684.178 1683.84,684.178 1684.4,684.178 1684.95,684.178 1685.51,684.178 1686.07,684.178 1686.63,684.178 1687.19,684.178 1687.75,684.178 1688.31,684.178 1688.87,684.178 1689.43,684.178 1689.99,684.178 1690.55,684.178 1691.11,684.178 1691.67,684.178 1692.23,684.178 1692.78,684.178 1693.34,684.178 1693.9,684.178 1694.46,684.178 1695.02,684.178 1695.58,684.178 1696.14,684.178 1696.7,684.178 1697.26,684.178 1697.82,684.178 1698.38,684.178 1698.94,684.178 1699.5,684.178 1700.05,684.178 1700.61,684.178 1701.17,684.178 1701.73,684.178 1702.29,684.178 1702.85,684.178 1703.41,684.178 1703.97,684.178 1704.53,684.178 1705.09,684.178 1705.65,684.178 1706.21,684.178 1706.77,684.178 1707.32,684.178 1707.88,684.178 1708.44,684.178 1709,684.178 1709.56,684.178 1710.12,684.178 1710.68,684.178 1711.24,684.178 1711.8,684.178 1712.36,684.178 1712.92,684.178 1713.48,684.178 1714.04,684.178 1714.6,684.178 1715.15,684.178 1715.71,684.178 1716.27,684.178 1716.83,684.178 1717.39,684.178 1717.95,684.178 1718.51,684.178 1719.07,684.178 1719.63,684.178 1720.19,684.178 1720.75,684.178 1721.31,684.178 1721.87,684.178 1722.42,684.178 1722.98,684.178 1723.54,684.178 1724.1,684.178 1724.66,684.178 1725.22,684.178 1725.78,684.178 1726.34,684.178 1726.9,684.178 1727.46,684.178 1728.02,684.178 1728.58,684.178 1729.14,684.178 1729.69,684.178 1730.25,684.178 1730.81,684.178 1731.37,684.178 1731.93,684.178 1732.49,684.178 1733.05,684.178 1733.61,684.178 1734.17,684.178 1734.73,684.178 1735.29,684.178 1735.85,684.178 1736.41,684.178 1736.97,684.178 1737.52,684.178 1738.08,684.178 1738.64,684.178 1739.2,684.178 1739.76,684.178 1740.32,684.178 1740.88,684.178 1741.44,684.178 1742,684.178 1742.56,684.178 1743.12,684.178 1743.68,684.178 1744.24,684.178 1744.79,684.178 1745.35,684.178 1745.91,684.178 1746.47,684.178 1747.03,684.178 1747.59,684.178 1748.15,684.178 1748.71,684.178 1749.27,684.178 1749.83,684.178 1750.39,684.178 1750.95,684.178 1751.51,684.178 1752.06,684.178 1752.62,684.178 1753.18,684.178 1753.74,684.178 1754.3,684.178 1754.86,684.178 1755.42,684.178 1755.98,684.178 1756.54,684.178 1757.1,684.178 1757.66,684.178 1758.22,684.178 1758.78,684.178 1759.34,684.178 1759.89,684.178 1760.45,684.178 1761.01,684.178 1761.57,684.178 1762.13,684.178 1762.69,684.178 1763.25,684.178 1763.81,684.178 1764.37,684.178 1764.93,684.178 1765.49,684.178 1766.05,684.178 1766.61,684.178 1767.16,684.178 1767.72,684.178 1768.28,684.178 1768.84,684.178 1769.4,684.178 1769.96,684.178 1770.52,684.178 1771.08,684.178 1771.64,684.178 1772.2,684.178 1772.76,684.178 1773.32,684.178 1773.88,684.178 1774.43,684.178 1774.99,684.178 1775.55,684.178 1776.11,684.178 1776.67,684.178 1777.23,684.178 1777.79,684.178 1778.35,684.178 1778.91,684.178 1779.47,684.178 1780.03,684.178 1780.59,684.178 1781.15,684.178 1781.71,684.178 1782.26,684.178 1782.82,684.178 1783.38,684.178 1783.94,684.178 1784.5,684.178 1785.06,684.178 1785.62,684.178 1786.18,684.178 1786.74,684.178 1787.3,684.178 1787.86,684.178 1788.42,684.178 1788.98,684.178 1789.53,684.178 1790.09,684.178 1790.65,684.178 1791.21,684.178 1791.77,684.178 1792.33,684.178 1792.89,684.178 1793.45,684.178 1794.01,684.178 1794.57,684.178 1795.13,684.178 1795.69,684.178 1796.25,684.178 1796.8,684.178 1797.36,684.178 1797.92,684.178 1798.48,684.178 1799.04,684.178 1799.6,684.178 1800.16,684.178 1800.72,684.178 1801.28,684.178 1801.84,684.178 1802.4,684.178 1802.96,684.178 1803.52,684.178 1804.08,684.178 1804.63,684.178 1805.19,684.178 1805.75,684.178 1806.31,684.178 1806.87,684.178 1807.43,684.178 1807.99,684.178 1808.55,684.178 1809.11,684.178 1809.67,684.178 1810.23,684.178 1810.79,684.178 1811.35,684.178 1811.9,684.178 1812.46,684.178 1813.02,684.178 1813.58,684.178 1814.14,684.178 1814.7,684.178 1815.26,684.178 1815.82,684.178 1816.38,684.178 1816.94,684.178 1817.5,684.178 1818.06,684.178 1818.62,684.178 1819.18,684.178 1819.73,684.178 1820.29,684.178 1820.85,684.178 1821.41,684.178 1821.97,684.178 1822.53,684.178 1823.09,684.178 1823.65,684.178 1824.21,684.178 1824.77,684.178 1825.33,684.178 1825.89,684.178 1826.45,684.178 1827,684.178 1827.56,684.178 1828.12,684.178 1828.68,684.178 1829.24,684.178 1829.8,684.178 1830.36,684.178 1830.92,684.178 1831.48,684.178 1832.04,684.178 1832.6,684.178 1833.16,684.178 1833.72,684.178 1834.27,684.178 1834.83,684.178 1835.39,684.178 1835.95,684.178 1836.51,684.178 1837.07,684.178 1837.63,684.178 1838.19,684.178 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ± $(se.err)\n    Projected Energy: $(v.val) ± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.036539829970873 ± 0.021344418370868506\nProjected Energy: -4.018072363758144 ± (0.0044242912335112905, 0.004293825886498404)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from lomc! as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; α = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-α.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ± 0.0029\n  with uncertainty of ± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13×6 DataFrame\n Row │ blocks  mean      std_err      std_err_err  p_cov       mj\n     │ Int64   Float64   Float64      Float64      Float64     Float64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 │   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 │   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 │   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 │    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 │    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 │    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 │     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 │     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 │     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 │      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 │      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 │      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ⠀⠀⠀⠀⠀⠀⠀⠀⠀std err vs blocking steps⠀⠀⠀⠀⠀⠀⠀⠀\n               ┌────────────────────────────────────────┐\n    0.00423501 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀│ m test\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢸⠀⠀⠀⠀│ std err\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⡠⢺⠒⠒⢺⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⡀⠀⠀⡆⣀⠤⡗⠉⠀⢸⠀⠀⢸⡆⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡧⠤⠔⡗⠊⠉⡏⠀⠀⡇⠀⠀⢸⠀⠀⢸⢣⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⡇⠀⠀⠁⠀⠀⠁⠀⠀⠁⠀⠀⠀⠀⠀⢸⠸⡀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠁⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⡇⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠊⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣦⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀│\n               │⠀⠀⠀⢀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n               │⠀⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n   -0.00012335 │⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠧⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤│\n               └────────────────────────────────────────┘\n               ⠀0.64⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀k⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀13.36⠀\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; α = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; α=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.σ_f using x_by_y_linear. The standard error estimate r.σ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.δ_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*σ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3×3 DataFrame\n Row │ res      res_l    res_u\n     │ Float64  Float64  Float64\n─────┼───────────────────────────\n   1 │    11.5  1.7282   1.7282\n   2 │    13.0  1.7282   1.7282\n   3 │    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dτ=df.dτ[end], skip=0)\n\nCalculate the growth witness directly from a DataFrame returned by lomc!. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0) -> g\ngrowth_witness(df::DataFrame, [b]; skip=0) -> g\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ≥ 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n) -> r::RatioBlockingResult\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    dτ=df.dτ[end],\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively. Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin().\n\nE_gr = E_r - frac1dτln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the (biased) shift estimator. Error propagation is done with MonteCarloMeasurements. Progagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a DataFrame returned by lomc!. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator() and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\n-> (;df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    dτ=df.dτ[end],\n    kwargs...\n)\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the unweighted ratio. Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame returned by lomc!. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(\n    df::DataFrame;\n    skip=0, hproj=:hproj, vproj=:vproj, kwargs...\n) -> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy() to set these up in lomc!()). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame returned by lomc!. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...) -> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the result of replica lomc! passed as  argument df, using replicas _1 and _2. Calls ratio_of_means() to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |ψ⟩ and |ϕ⟩ is defined as\n\nF(ψϕ) = fracψϕ^2ψψϕϕ \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v⋅v == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame version can extract the relevant information from the result of lomc!. Set up lomc! with the keyword argument replica = AllOverlaps(R) and R ≥ 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ± 0.029\n  with uncertainty of ± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; α = 0.01) -> k\nmtest(table::NamedTuple; α = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-α after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, σ_f, δ_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nσ_f::T: std from linear propagation\nδ_y::T: coefficient of variation for denominator (≤ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, μ, σ)\nparticles(samples, μ::AbstractVector, Σ::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, σ_f, δ_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nσ_f standard deviation of f from linear error propagation (normal approximation)\nδ_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(μ_x,μ_y,σ_x,σ_y,ρ) -> f, σ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013).\n\nσ_f = sqrtfracσ_xμ_y^2 + fracμ_x σ_yμ_y^2^2 - frac2 ρ μ_xμ_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3×7 DataFrame\n Row │ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     │ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 │    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 │    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1×9 DataFrame\n Row │ val       val_l      val_u      val_f     val_σ_f    val_δ_y    val_k  val_blocks  val_success\n     │ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n─────┼────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7×6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS…</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple…</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.492721</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.4678e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">1.3445e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">9.187e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.232e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.675e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">8.416e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ≠ basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10×10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10×10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nΔE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ΔE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(BoseFS{4,5}(0, 0, 4, 0, 0); u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0⟩\"\n fs\"|0 1 2 1 0⟩\"\n fs\"|1 0 2 0 1⟩\"\n fs\"|1 0 1 2 0⟩\"\n fs\"|0 0 1 1 2⟩\"\n fs\"|0 2 1 0 1⟩\"\n fs\"|2 1 1 0 0⟩\"\n fs\"|0 2 0 2 0⟩\"\n fs\"|1 1 0 1 1⟩\"\n fs\"|2 0 0 0 2⟩\"\n fs\"|0 0 0 3 1⟩\"\n fs\"|3 0 0 1 0⟩\"\n fs\"|0 1 0 0 3⟩\"\n fs\"|1 3 0 0 0⟩\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0⟩\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ≈ all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0⟩\" => -0.0214153\n  fs\"|2 0 0 0 2⟩\" => -0.00237613\n  fs\"|0 0 4 0 0⟩\" => -0.980348\n  fs\"|0 0 0 3 1⟩\" => 0.00363555\n  fs\"|2 1 1 0 0⟩\" => -0.0119687\n  fs\"|1 0 2 0 1⟩\" => 0.0768085\n  fs\"|1 3 0 0 0⟩\" => 0.00363555\n  fs\"|0 1 2 1 0⟩\" => 0.177701\n  fs\"|0 0 1 1 2⟩\" => -0.0119687\n  fs\"|3 0 0 1 0⟩\" => 0.00195478\n  fs\"|0 2 0 2 0⟩\" => -0.0138439\n  fs\"|1 1 0 1 1⟩\" => -0.00234782\n  fs\"|0 1 0 0 3⟩\" => 0.00195478\n  fs\"|0 2 1 0 1⟩\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i ϵ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential ϵ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleσ t_σ a^_iσ a_jσ +\n  frac12sum_iσ u_σσ n_iσ (n_iσ - 1) +\n  sum_iστu_στ n_iσ n_iτ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iσd v_σd x_di^2 n_iσ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C × D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(add::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k δ_r+qp+k\n\nArguments\n\nadd: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, η, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl \n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order  degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl \n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and  the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between  basis states of any noninteracting energy level, leading to many more offdiagonals and  fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger  restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The    allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make    the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the    interactions. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without    comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building  a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, η, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i ϵ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that  conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using  first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d) \n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, see four_oscillator_integral_general, with the additional restriction  that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to    make the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function  potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi ϵ_mathbfi n_mathbfi \n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix  representation of this Hamiltonian for a single particle is completely dense in the even-parity  subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nηs = (): a tuple of aspect ratios for the remaining dimensions (η_y, ...). Should be empty    for a 1D trap or contain values greater than 1.0. The maximum index    in other dimensions will be the largest even number less than M/η_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,    including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if    only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of \nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kσk^2 n_kσ \n    quad + sum_pqkσσ T_pqk a^_p-kσ a^_q+kσ a_qσ a_pσ \n    quad + sum_pqskkσσ Q_kka^_p-kσ a^_q+kσ a^_s+k-kσ\n                                       a_sσ a_qσ a_pσ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + ωN - v Σₖ(aₖ^ + aₖ)\n\nwhere p is the total momentum, p_f = Σ_k k aₖ^ aₖ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2πl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons ω.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0⟩{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M÷2, M÷2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M÷2, M÷2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address α is replaced by frac12(α  α) for even and odd parity, respectively, where ᾱ == reverse(α).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(BoseFS{3,3}(0, 2, 1); u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ≈ eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ≈ eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ≤ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0⟩{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ≤ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, σ=1, τ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_στ(d) = frac1M _i n_σi (n_τi+d - δ_0dδ_στ)\n\nFor multicomponent addresses, σ and τ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s b^_p  b_q a_r δ_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s a^_p  a_q a_r δ_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ≤ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ≤ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iσ = hat a^_iσ hat a_iσ\n\nwhere i is the mode and σ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0⟩\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0⟩\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x⋅(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1⟩\", -3.0)\n (fs\"|2 2 2⟩\", -2.449489742783178)\n (fs\"|3 1 2⟩\", -2.0)\n (fs\"|4 1 1⟩\", -2.8284271247461903)\n (fs\"|4 2 0⟩\", -2.0)\n (fs\"|3 3 0⟩\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ….\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb⋅(1:7) == onr(b)⋅(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w⋅op(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ⋅ A ⋅ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions, \n\n    mathcalI(ijkl) = int_-infty^infty dx  \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function,  and is non-zero unless i+j+k+l is odd. See e.g.  Titchmarsh (1948). This is a generalisation of the closed form in  Papenbrock (2002), which is is the special  case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin, \n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state  corresponds to a D-tuple of harmonic oscillator indices mathbfn_i.  S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of  phi_i(0) to speed-up the calculation. The values can be calculated with  log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D  harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem\nsolve(::ExactDiagonalizationProblem)\ninit(::ExactDiagonalizationProblem)","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1⟩\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ≈ values[1]\ntrue\n\nSee also solve(::ExactDiagonalizationProblem), init(::ExactDiagonalizationProblem), KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#CommonSolve.solve-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.solve","text":"solve(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nSolve an ExactDiagonalizationProblem p directly. Optionally specify an algorithm. Returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#CommonSolve.init-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian)\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3×3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:\n  0.0  -1.0  -1.0\n -1.0   0.0  -1.0\n -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2×2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:\n  0.0  -1.0\n -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues\n3-element Vector{Float64}:\n -1.9999999999999996\n  0.9999999999999997\n  1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector\n3-element Vector{Float64}:\n -0.5773502691896257\n -0.5773502691896255\n -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec\nDVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()\n  fs\"|0 0 1⟩\" => -0.57735\n  fs\"|0 1 0⟩\" => -0.57735\n  fs\"|1 0 0⟩\" => -0.57735\n\nHas methods for dimension, sparse, Matrix, starting_address.\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nαmathrmnaddrrangle\n\nReturns the new address naddr and the factor α. The value of α is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0⟩\" => 1\n\njulia> fs\"|0 1 2 0⟩\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3⟩⊗|0 1 0⟩\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|↑↓↑⟩\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0⟩{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0⟩{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ≤ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Σ_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen)\n\nCompute the new address of a hopping event for the Bose-Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic.\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ≤ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|⋅↑↑↑⋅⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|↑↓↓⟩\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3⟩{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n→ (nadd, α)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of α is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3⟩{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, α = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dτ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ after projecting onto projector.\n\nS^n+1 = S^n -fracζdτlnleft(fracPΨ^(n+1)PΨ^(n)right)-fracξdτlnleft(fracPΨ^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4, α = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracξdτlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-α)*walkernumber() + α*UniformProjector()⋅ψ computed with walkernumber() and UniformProjector(). When ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)-fracξdτlnleft(fracΨ_1^n+1Ψ_1^texttargetright)\n\nWhen ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08, ξ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ and ξ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, ζ = 0.08,   ξ = ζ^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dτ) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\n𝐓 = 1 + dτ(S - 𝐇)\n\nwhere 𝐇 is the hamiltonian and S is the shift.\n\n𝐓 represents the first order expansion of the exponential evolution operator of the imaginary-time Schrödinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntargetwalkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; targetwalkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nζ = 0.08: Damping parameter for the shift update.\nξ = ζ^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; targetwalkers, ζ, ξ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * targetwalkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dτ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(⋅,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dτ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndτ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> add = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(add);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(BoseFS{6,3}(1, 2, 3); u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nτ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, ζ = 0.08, ξ = ζ^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ≈ num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|⋅↑⇅↓⋅⟩\" => 1.0, fs\"|↓↓⋅↑↑⟩\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|↓↓⋅↑↑⟩\" => 0.5\n  fs\"|⋅↑⇅↓⋅⟩\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dτ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dτ","text":"update_dτ(s<:TimeStepStrategy, dτ, tnorm) -> new dτ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with mpirun julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Next, we construct the starting vector. We use a PDVec, which is automatically MPI-distributed if MPI is available. We set the vector's stochastic style to IsDynamicSemistochastic, which improves statistics and reduces the sign problem.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails. Setting save_if=is_mpi_root() will ensure only the root MPI rank will write to the file. The chunk_size parameter determines how often the data is saved to the file. Progress messages are suppressed with io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    save_if=is_mpi_root(),\n    reporting_interval=1,\n    chunk_size=1000,\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10_000 walkers. We will also compute the projected energy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"s_strat = DoubleLogUpdate(targetwalkers=10_000)\npost_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ProjectedEnergy{HubbardMom1D{Float64, 10, BoseFS{10, 10, BitString{19, 1, UInt32}}, 6.0, 1.0}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}}(:vproj, :hproj, HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 1.0],)), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(1, 0, 0, 0, 8, 0, 0, 0, 1, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 0, 8, 0, 0, 0, 0, 2) => 4.024922359499621, BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 7.0, BoseFS{10,10}(0, 0, 1, 0, 8, 0, 1, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 1, 8, 1, 0, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 1, 0, 0, 8, 0, 0, 1, 0, 0) => 5.692099788303083],)))","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"lomc!(H, initial_vector; reporting_strategy, s_strat, post_step_strategy, dτ=1e-4, laststep=10_000);\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schrödinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Blöte PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schrödinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija Čufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. lomc!.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main lomc!() computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI for use in lomc!() is enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. Čufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelmüller, D. Huber, M. Čufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/π^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↑↓↓⟩\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => 4.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => -1.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => -1.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => -1.0\n  fs\"|↑↑↓↓⟩\" => -4.0\n  fs\"|↓↑↓↑⟩\" => -1.0\n  fs\"|↓↑↑↓⟩\" => 1.0\n  fs\"|⇅⋅⋅⇅⟩\" => -1.0\n  fs\"|↑↓↓↑⟩\" => 1.0\n  fs\"|⋅⇅⇅⋅⟩\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => -2.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => 3.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => 3.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()⋅v == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
