var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndτ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dτ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ± $(r.σ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ± 0.13748856752861724\n   Replica 2: -3.974753826250174 ± 0.12466355058904417\n   Replica 3: -4.011054302602586 ± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1⟩\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the lomc! function with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1⟩\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0⟩\"=>-14.1421, fs\"|0 2 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 1 0 2⟩\"=>-14.1421, fs\"|1 2 0 1 1 1⟩\"=>-14.1421, fs\"|2 0 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 2 0 1⟩\"=>-14.1421, fs\"|1 1 2 0 1 1⟩\"=>-14.1421, fs\"|1 1 0 2 1 1⟩\"=>-14.1421, fs\"|1 1 1 0 2 1⟩\"=>-14.1421, fs\"|1 0 2 1 1 1⟩\"=>-14.1421, fs\"|2 1 1 1 1 0⟩\"=>-14.1421, fs\"|0 1 1 1 1 2⟩\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    targetwalkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip480\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip480)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip481\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip480)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip482\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip480)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1248.87 1391.71 L1248.87 1397.25 Q1246.38 1395.98 1243.71 1395.34 Q1241.04 1394.71 1238.17 1394.71 Q1233.81 1394.71 1231.62 1396.04 Q1229.45 1397.38 1229.45 1400.05 Q1229.45 1402.09 1231.01 1403.27 Q1232.57 1404.41 1237.28 1405.46 L1239.29 1405.91 Q1245.52 1407.25 1248.13 1409.7 Q1250.78 1412.12 1250.78 1416.48 Q1250.78 1421.44 1246.83 1424.34 Q1242.91 1427.23 1236.04 1427.23 Q1233.17 1427.23 1230.06 1426.66 Q1226.97 1426.12 1223.53 1425.01 L1223.53 1418.96 Q1226.78 1420.65 1229.93 1421.51 Q1233.08 1422.33 1236.17 1422.33 Q1240.3 1422.33 1242.53 1420.93 Q1244.76 1419.5 1244.76 1416.92 Q1244.76 1414.54 1243.14 1413.26 Q1241.55 1411.99 1236.1 1410.81 L1234.07 1410.33 Q1228.62 1409.19 1226.2 1406.83 Q1223.79 1404.45 1223.79 1400.31 Q1223.79 1395.28 1227.35 1392.54 Q1230.91 1389.8 1237.47 1389.8 Q1240.72 1389.8 1243.58 1390.28 Q1246.45 1390.76 1248.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1265.89 1380.54 L1265.89 1390.66 L1277.96 1390.66 L1277.96 1395.22 L1265.89 1395.22 L1265.89 1414.57 Q1265.89 1418.93 1267.07 1420.17 Q1268.28 1421.41 1271.94 1421.41 L1277.96 1421.41 L1277.96 1426.31 L1271.94 1426.31 Q1265.16 1426.31 1262.58 1423.8 Q1260.01 1421.25 1260.01 1414.57 L1260.01 1395.22 L1255.71 1395.22 L1255.71 1390.66 L1260.01 1390.66 L1260.01 1380.54 L1265.89 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1316.15 1407.02 L1316.15 1409.89 L1289.22 1409.89 Q1289.61 1415.94 1292.85 1419.12 Q1296.13 1422.27 1301.96 1422.27 Q1305.33 1422.27 1308.48 1421.44 Q1311.66 1420.61 1314.78 1418.96 L1314.78 1424.5 Q1311.63 1425.83 1308.32 1426.53 Q1305.01 1427.23 1301.61 1427.23 Q1293.08 1427.23 1288.08 1422.27 Q1283.11 1417.3 1283.11 1408.84 Q1283.11 1400.08 1287.82 1394.96 Q1292.57 1389.8 1300.59 1389.8 Q1307.78 1389.8 1311.95 1394.45 Q1316.15 1399.07 1316.15 1407.02 M1310.3 1405.3 Q1310.23 1400.5 1307.59 1397.63 Q1304.98 1394.77 1300.65 1394.77 Q1295.75 1394.77 1292.79 1397.54 Q1289.86 1400.31 1289.42 1405.34 L1310.3 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1331.43 1420.96 L1331.43 1439.87 L1325.54 1439.87 L1325.54 1390.66 L1331.43 1390.66 L1331.43 1396.07 Q1333.28 1392.89 1336.08 1391.36 Q1338.91 1389.8 1342.82 1389.8 Q1349.32 1389.8 1353.36 1394.96 Q1357.43 1400.12 1357.43 1408.52 Q1357.43 1416.92 1353.36 1422.08 Q1349.32 1427.23 1342.82 1427.23 Q1338.91 1427.23 1336.08 1425.71 Q1333.28 1424.15 1331.43 1420.96 M1351.35 1408.52 Q1351.35 1402.06 1348.68 1398.4 Q1346.04 1394.71 1341.39 1394.71 Q1336.74 1394.71 1334.07 1398.4 Q1331.43 1402.06 1331.43 1408.52 Q1331.43 1414.98 1334.07 1418.67 Q1336.74 1422.33 1341.39 1422.33 Q1346.04 1422.33 1348.68 1418.67 Q1351.35 1414.98 1351.35 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1389.87 1391.71 L1389.87 1397.25 Q1387.38 1395.98 1384.71 1395.34 Q1382.04 1394.71 1379.17 1394.71 Q1374.81 1394.71 1372.62 1396.04 Q1370.45 1397.38 1370.45 1400.05 Q1370.45 1402.09 1372.01 1403.27 Q1373.57 1404.41 1378.28 1405.46 L1380.29 1405.91 Q1386.52 1407.25 1389.13 1409.7 Q1391.78 1412.12 1391.78 1416.48 Q1391.78 1421.44 1387.83 1424.34 Q1383.91 1427.23 1377.04 1427.23 Q1374.18 1427.23 1371.06 1426.66 Q1367.97 1426.12 1364.53 1425.01 L1364.53 1418.96 Q1367.78 1420.65 1370.93 1421.51 Q1374.08 1422.33 1377.17 1422.33 Q1381.3 1422.33 1383.53 1420.93 Q1385.76 1419.5 1385.76 1416.92 Q1385.76 1414.54 1384.14 1413.26 Q1382.55 1411.99 1377.1 1410.81 L1375.07 1410.33 Q1369.62 1409.19 1367.2 1406.83 Q1364.79 1404.45 1364.79 1400.31 Q1364.79 1395.28 1368.35 1392.54 Q1371.92 1389.8 1378.47 1389.8 Q1381.72 1389.8 1384.58 1390.28 Q1387.45 1390.76 1389.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1260.83 2211.02,1260.83 \"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1003.29 2211.02,1003.29 \"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,745.747 2211.02,745.747 \"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,488.205 2211.02,488.205 \"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,230.663 2211.02,230.663 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1260.83 423.181,1260.83 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1003.29 423.181,1003.29 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,745.747 423.181,745.747 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,488.205 423.181,488.205 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,230.663 423.181,230.663 \"/>\n<path clip-path=\"url(#clip480)\" d=\"M356.339 1246.63 Q352.728 1246.63 350.899 1250.19 Q349.094 1253.74 349.094 1260.86 Q349.094 1267.97 350.899 1271.54 Q352.728 1275.08 356.339 1275.08 Q359.973 1275.08 361.779 1271.54 Q363.608 1267.97 363.608 1260.86 Q363.608 1253.74 361.779 1250.19 Q359.973 1246.63 356.339 1246.63 M356.339 1242.93 Q362.149 1242.93 365.205 1247.53 Q368.284 1252.12 368.284 1260.86 Q368.284 1269.59 365.205 1274.2 Q362.149 1278.78 356.339 1278.78 Q350.529 1278.78 347.45 1274.2 Q344.395 1269.59 344.395 1260.86 Q344.395 1252.12 347.45 1247.53 Q350.529 1242.93 356.339 1242.93 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M290.043 1016.63 L306.363 1016.63 L306.363 1020.57 L284.418 1020.57 L284.418 1016.63 Q287.08 1013.88 291.664 1009.25 Q296.27 1004.6 297.451 1003.25 Q299.696 1000.73 300.576 998.994 Q301.478 997.235 301.478 995.545 Q301.478 992.791 299.534 991.055 Q297.613 989.319 294.511 989.319 Q292.312 989.319 289.858 990.082 Q287.427 990.846 284.65 992.397 L284.65 987.675 Q287.474 986.541 289.927 985.962 Q292.381 985.383 294.418 985.383 Q299.789 985.383 302.983 988.069 Q306.177 990.754 306.177 995.244 Q306.177 997.374 305.367 999.295 Q304.58 1001.19 302.474 1003.79 Q301.895 1004.46 298.793 1007.67 Q295.691 1010.87 290.043 1016.63 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M316.224 986.008 L334.58 986.008 L334.58 989.944 L320.506 989.944 L320.506 998.416 Q321.524 998.069 322.543 997.907 Q323.562 997.721 324.58 997.721 Q330.367 997.721 333.747 1000.89 Q337.126 1004.06 337.126 1009.48 Q337.126 1015.06 333.654 1018.16 Q330.182 1021.24 323.862 1021.24 Q321.687 1021.24 319.418 1020.87 Q317.173 1020.5 314.765 1019.76 L314.765 1015.06 Q316.849 1016.19 319.071 1016.75 Q321.293 1017.3 323.77 1017.3 Q327.774 1017.3 330.112 1015.2 Q332.45 1013.09 332.45 1009.48 Q332.45 1005.87 330.112 1003.76 Q327.774 1001.66 323.77 1001.66 Q321.895 1001.66 320.02 1002.07 Q318.168 1002.49 316.224 1003.37 L316.224 986.008 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M356.339 989.087 Q352.728 989.087 350.899 992.652 Q349.094 996.194 349.094 1003.32 Q349.094 1010.43 350.899 1013.99 Q352.728 1017.54 356.339 1017.54 Q359.973 1017.54 361.779 1013.99 Q363.608 1010.43 363.608 1003.32 Q363.608 996.194 361.779 992.652 Q359.973 989.087 356.339 989.087 M356.339 985.383 Q362.149 985.383 365.205 989.99 Q368.284 994.573 368.284 1003.32 Q368.284 1012.05 365.205 1016.66 Q362.149 1021.24 356.339 1021.24 Q350.529 1021.24 347.45 1016.66 Q344.395 1012.05 344.395 1003.32 Q344.395 994.573 347.45 989.99 Q350.529 985.383 356.339 985.383 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M286.062 728.467 L304.418 728.467 L304.418 732.402 L290.344 732.402 L290.344 740.874 Q291.363 740.527 292.381 740.365 Q293.4 740.18 294.418 740.18 Q300.205 740.18 303.585 743.351 Q306.964 746.522 306.964 751.939 Q306.964 757.517 303.492 760.619 Q300.02 763.698 293.701 763.698 Q291.525 763.698 289.256 763.328 Q287.011 762.957 284.603 762.216 L284.603 757.517 Q286.687 758.652 288.909 759.207 Q291.131 759.763 293.608 759.763 Q297.613 759.763 299.951 757.656 Q302.288 755.55 302.288 751.939 Q302.288 748.328 299.951 746.221 Q297.613 744.115 293.608 744.115 Q291.733 744.115 289.858 744.531 Q288.006 744.948 286.062 745.828 L286.062 728.467 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M326.177 731.545 Q322.566 731.545 320.737 735.11 Q318.932 738.652 318.932 745.781 Q318.932 752.888 320.737 756.453 Q322.566 759.994 326.177 759.994 Q329.811 759.994 331.617 756.453 Q333.446 752.888 333.446 745.781 Q333.446 738.652 331.617 735.11 Q329.811 731.545 326.177 731.545 M326.177 727.842 Q331.987 727.842 335.043 732.448 Q338.122 737.031 338.122 745.781 Q338.122 754.508 335.043 759.115 Q331.987 763.698 326.177 763.698 Q320.367 763.698 317.288 759.115 Q314.233 754.508 314.233 745.781 Q314.233 737.031 317.288 732.448 Q320.367 727.842 326.177 727.842 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M356.339 731.545 Q352.728 731.545 350.899 735.11 Q349.094 738.652 349.094 745.781 Q349.094 752.888 350.899 756.453 Q352.728 759.994 356.339 759.994 Q359.973 759.994 361.779 756.453 Q363.608 752.888 363.608 745.781 Q363.608 738.652 361.779 735.11 Q359.973 731.545 356.339 731.545 M356.339 727.842 Q362.149 727.842 365.205 732.448 Q368.284 737.031 368.284 745.781 Q368.284 754.508 365.205 759.115 Q362.149 763.698 356.339 763.698 Q350.529 763.698 347.45 759.115 Q344.395 754.508 344.395 745.781 Q344.395 737.031 347.45 732.448 Q350.529 727.842 356.339 727.842 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M284.835 470.925 L307.057 470.925 L307.057 472.916 L294.511 505.485 L289.627 505.485 L301.432 474.86 L284.835 474.86 L284.835 470.925 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M316.224 470.925 L334.58 470.925 L334.58 474.86 L320.506 474.86 L320.506 483.332 Q321.524 482.985 322.543 482.823 Q323.562 482.638 324.58 482.638 Q330.367 482.638 333.747 485.809 Q337.126 488.98 337.126 494.397 Q337.126 499.976 333.654 503.077 Q330.182 506.156 323.862 506.156 Q321.687 506.156 319.418 505.786 Q317.173 505.415 314.765 504.675 L314.765 499.976 Q316.849 501.11 319.071 501.665 Q321.293 502.221 323.77 502.221 Q327.774 502.221 330.112 500.114 Q332.45 498.008 332.45 494.397 Q332.45 490.786 330.112 488.679 Q327.774 486.573 323.77 486.573 Q321.895 486.573 320.02 486.99 Q318.168 487.406 316.224 488.286 L316.224 470.925 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M356.339 474.004 Q352.728 474.004 350.899 477.568 Q349.094 481.11 349.094 488.24 Q349.094 495.346 350.899 498.911 Q352.728 502.452 356.339 502.452 Q359.973 502.452 361.779 498.911 Q363.608 495.346 363.608 488.24 Q363.608 481.11 361.779 477.568 Q359.973 474.004 356.339 474.004 M356.339 470.3 Q362.149 470.3 365.205 474.906 Q368.284 479.49 368.284 488.24 Q368.284 496.966 365.205 501.573 Q362.149 506.156 356.339 506.156 Q350.529 506.156 347.45 501.573 Q344.395 496.966 344.395 488.24 Q344.395 479.49 347.45 474.906 Q350.529 470.3 356.339 470.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M256.664 244.008 L264.303 244.008 L264.303 217.642 L255.992 219.309 L255.992 215.05 L264.256 213.383 L268.932 213.383 L268.932 244.008 L276.571 244.008 L276.571 247.943 L256.664 247.943 L256.664 244.008 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M296.015 216.462 Q292.404 216.462 290.576 220.027 Q288.77 223.568 288.77 230.698 Q288.77 237.804 290.576 241.369 Q292.404 244.911 296.015 244.911 Q299.65 244.911 301.455 241.369 Q303.284 237.804 303.284 230.698 Q303.284 223.568 301.455 220.027 Q299.65 216.462 296.015 216.462 M296.015 212.758 Q301.826 212.758 304.881 217.364 Q307.96 221.948 307.96 230.698 Q307.96 239.425 304.881 244.031 Q301.826 248.614 296.015 248.614 Q290.205 248.614 287.127 244.031 Q284.071 239.425 284.071 230.698 Q284.071 221.948 287.127 217.364 Q290.205 212.758 296.015 212.758 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M326.177 216.462 Q322.566 216.462 320.737 220.027 Q318.932 223.568 318.932 230.698 Q318.932 237.804 320.737 241.369 Q322.566 244.911 326.177 244.911 Q329.811 244.911 331.617 241.369 Q333.446 237.804 333.446 230.698 Q333.446 223.568 331.617 220.027 Q329.811 216.462 326.177 216.462 M326.177 212.758 Q331.987 212.758 335.043 217.364 Q338.122 221.948 338.122 230.698 Q338.122 239.425 335.043 244.031 Q331.987 248.614 326.177 248.614 Q320.367 248.614 317.288 244.031 Q314.233 239.425 314.233 230.698 Q314.233 221.948 317.288 217.364 Q320.367 212.758 326.177 212.758 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M356.339 216.462 Q352.728 216.462 350.899 220.027 Q349.094 223.568 349.094 230.698 Q349.094 237.804 350.899 241.369 Q352.728 244.911 356.339 244.911 Q359.973 244.911 361.779 241.369 Q363.608 237.804 363.608 230.698 Q363.608 223.568 361.779 220.027 Q359.973 216.462 356.339 216.462 M356.339 212.758 Q362.149 212.758 365.205 217.364 Q368.284 221.948 368.284 230.698 Q368.284 239.425 365.205 244.031 Q362.149 248.614 356.339 248.614 Q350.529 248.614 347.45 244.031 Q344.395 239.425 344.395 230.698 Q344.395 221.948 347.45 217.364 Q350.529 212.758 356.339 212.758 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip482)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,230.663 4017.76,230.663 \"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1249.42 456.554,1249.34 457.123,1249.18 457.691,1248.96 458.259,1248.67 458.828,1248.28 459.396,1247.84 459.964,1247.34 460.533,1246.74 461.101,1246.08 461.669,1245.34 462.238,1244.53 462.806,1243.63 463.375,1242.64 463.943,1241.54 464.511,1240.36 465.08,1239.08 465.648,1237.67 466.216,1235.14 466.785,1232.48 467.353,1229.68 467.921,1226.75 468.49,1224.67 469.058,1222.46 469.626,1220.09 470.195,1217.58 470.763,1214.91 471.331,1212.01 471.9,1208.99 472.468,1204.75 473.036,1200.24 473.605,1196.58 474.173,1192.73 474.741,1188.65 475.31,1182.31 475.878,1177.7 476.446,1171.79 477.015,1166.81 477.583,1161.55 478.152,1156.11 478.72,1148.37 479.288,1142.44 479.857,1135.25 480.425,1128.85 480.993,1120.08 481.562,1111.22 482.13,1103.1 482.698,1095.82 483.267,1088.3 483.835,1079.56 484.403,1069.69 484.972,1059.64 485.54,1049.49 486.108,1041.34 486.677,1033.05 487.245,1024.6 487.813,1014.99 488.382,1003.12 488.95,993.333 489.518,983.366 490.087,973.337 490.655,964.183 491.224,952.812 491.792,941.392 492.36,930.128 492.929,918.771 493.497,908.501 494.065,897.086 494.634,886.798 495.202,876.48 495.77,866.012 496.339,855.672 496.907,844.199 497.475,831.766 498.044,821.468 498.612,810.208 499.18,799.016 499.749,789.757 500.317,777.421 500.885,766.424 501.454,756.355 502.022,744.426 502.59,733.56 503.159,719.868 503.727,710.652 504.295,699.351 504.864,691.459 505.432,683.481 506.001,675.329 506.569,666.378 507.137,657.471 507.706,648.761 508.274,640.162 508.842,631.532 509.411,624.045 509.979,616.735 510.547,609.363 511.116,600.019 511.684,592.906 512.252,585.811 512.821,576.928 513.389,570.164 513.957,563.376 514.526,555.559 515.094,548.944 515.662,541.528 516.231,532.15 516.799,526.026 517.367,520.03 517.936,513.09 518.504,507.515 519.072,500.996 519.641,496.591 520.209,487.725 520.778,481.234 521.346,474.81 521.914,468.773 522.483,461.935 523.051,455.216 523.619,449.658 524.188,445.098 524.756,440.873 525.324,435.36 525.893,431.184 526.461,426.003 527.029,421.045 527.598,417.155 528.166,411.247 528.734,407.515 529.303,402.876 529.871,397.09 530.439,393.668 531.008,388.105 531.576,384.98 532.144,379.812 532.713,376.851 533.281,372.811 533.85,369.751 534.418,366.851 534.986,361.898 535.555,359.326 536.123,353.635 536.691,349.004 537.26,345.899 537.828,341.924 538.396,339.718 538.965,336.872 539.533,333.992 540.101,332.47 540.67,330.766 541.238,328.099 541.806,325.137 542.375,321.548 542.943,318.398 543.511,317.015 544.08,315.692 544.648,315.698 545.216,314.542 545.785,314.235 546.353,312.739 546.921,308.342 547.49,308.12 548.058,304.662 548.627,302.464 549.195,299.265 549.763,294.211 550.332,293.461 550.9,289.683 551.468,288.187 552.037,287.634 552.605,287.344 553.173,288.065 553.742,286.527 554.31,287.054 554.878,283.195 555.447,281.719 556.015,280.138 556.583,278.638 557.152,278.391 557.72,278.201 558.288,276.989 558.857,275.398 559.425,273.141 559.993,271.813 560.562,272.722 561.13,269.479 561.698,269.436 562.267,269.358 562.835,270.333 563.404,266.908 563.972,265.814 564.54,265.075 565.109,262.209 565.677,262.624 566.245,262.804 566.814,262.925 567.382,265.049 567.95,264.841 568.519,264.649 569.087,264.511 569.655,264.481 570.224,262.215 570.792,261.216 571.36,261.353 571.929,261.41 572.497,262.199 573.065,262.055 573.634,262.762 574.202,261.49 574.77,259.196 575.339,255.964 575.907,257.169 576.476,256.057 577.044,255.035 577.612,255.095 578.181,255.065 578.749,255.023 579.317,254.963 579.886,253.95 580.454,253.032 581.022,252.238 581.591,252.418 582.159,251.552 582.727,252.825 583.296,252.013 583.864,251.08 584.432,251.42 585.001,251.421 585.569,251.568 586.137,252.749 586.706,252.462 587.274,253.759 587.842,253.561 588.411,254.458 588.979,253.238 589.547,251.124 590.116,249.083 590.684,248.007 591.253,248.311 591.821,247.414 592.389,248.479 592.958,248.581 593.526,248.49 594.094,247.507 594.663,246.432 595.231,248.459 595.799,246.467 596.368,245.662 596.936,245.746 597.504,246.92 598.073,245.802 598.641,246.765 599.209,246.725 599.778,246.747 600.346,246.626 600.914,246.481 601.483,247.524 602.051,248.482 602.619,247.257 603.188,246.154 603.756,246.008 604.325,245.88 604.893,245.863 605.461,247.586 606.03,248.451 606.598,247.992 607.166,246.748 607.735,246.523 608.303,246.178 608.871,245.096 609.44,246.008 610.008,245.805 610.576,243.722 611.145,242.776 611.713,239.708 612.281,240.111 612.85,240.209 613.418,239.548 613.986,237.704 614.555,238.002 615.123,238.415 615.691,239.721 616.26,238.836 616.828,239.027 617.396,239.226 617.965,238.557 618.533,239.759 619.102,236.954 619.67,238.359 620.238,237.608 620.807,235.808 621.375,237.176 621.943,237.383 622.512,236.727 623.08,237.987 623.648,239.245 624.217,238.193 624.785,237.272 625.353,237.557 625.922,238.768 626.49,237.872 627.058,236.989 627.627,237.209 628.195,235.563 628.763,235.925 629.332,236.454 629.9,238.766 630.468,236.844 631.037,235.034 631.605,235.541 632.173,235.739 632.742,235 633.31,235.282 633.879,234.74 634.447,234.348 635.015,234.791 635.584,233.152 636.152,233.788 636.72,235.36 637.289,236.639 637.857,237.092 638.425,238.345 638.994,238.431 639.562,239.534 640.13,238.533 640.699,236.587 641.267,237.898 641.835,240.106 642.404,240.028 642.972,240.018 643.54,238.839 644.109,238.671 644.677,239.849 645.245,238.743 645.814,240.801 646.382,240.747 646.951,241.661 647.519,242.572 648.087,242.55 648.656,243.369 649.224,242.945 649.792,241.532 650.361,239.293 650.929,239.188 651.497,236.252 652.066,235.299 652.634,235.635 653.202,236.005 653.771,236.994 654.339,238.257 654.907,235.982 655.476,235.172 656.044,237.3 656.612,237.348 657.181,237.509 657.749,236.406 658.317,234.363 658.886,233.529 659.454,234.629 660.022,235.679 660.591,234.775 661.159,236.986 661.728,236.953 662.296,240.044 662.864,237.807 663.433,236.777 664.001,237.895 664.569,237.592 665.138,236.447 665.706,237.436 666.274,238.354 666.843,236.183 667.411,234.091 667.979,232.375 668.548,232.818 669.116,233.157 669.684,233.463 670.253,232.781 670.821,233.049 671.389,233.242 671.958,233.696 672.526,234.971 673.094,235.064 673.663,232.36 674.231,230.688 674.799,231.092 675.368,231.399 675.936,229.778 676.505,231.135 677.073,231.678 677.641,229.986 678.21,229.479 678.778,229.987 679.346,230.483 679.915,230.036 680.483,231.562 681.051,230.843 681.62,230.136 682.188,227.317 682.756,228.989 683.325,230.642 683.893,231.107 684.461,233.577 685.03,235.938 685.598,236.02 686.166,234.248 686.735,234.221 687.303,235.381 687.871,238.675 688.44,237.654 689.008,237.581 689.577,237.506 690.145,239.701 690.713,238.467 691.282,237.232 691.85,236.241 692.418,238.254 692.987,237.257 693.555,238.148 694.123,236.014 694.692,235.863 695.26,236.599 695.828,236.418 696.397,236.077 696.965,234.075 697.533,234.187 698.102,233.213 698.67,232.263 699.238,231.345 699.807,230.564 700.375,235.203 700.943,234.473 701.512,235.548 702.08,235.588 702.648,236.506 703.217,236.426 703.785,235.216 704.354,236.294 704.922,237.433 705.49,237.363 706.059,238.25 706.627,240.282 707.195,238.141 707.764,237.007 708.332,235.747 708.9,237.54 709.469,237.351 710.037,237.223 710.605,236.024 711.174,235.914 711.742,238.787 712.31,238.419 712.879,236.909 713.447,237.65 714.015,236.348 714.584,236.385 715.152,236.291 715.72,235.223 716.289,235.201 716.857,235.302 717.425,235.066 717.994,235.908 718.562,235.892 719.131,232.722 719.699,232.707 720.267,234.638 720.836,233.547 721.404,232.516 721.972,233.664 722.541,232.802 723.109,230.92 723.677,230.07 724.246,229.48 724.814,231.875 725.382,233.033 725.951,232.114 726.519,230.181 727.087,230.497 727.656,228.688 728.224,227.997 728.792,228.445 729.361,226.781 729.929,227.384 730.497,228.869 731.066,229.256 731.634,229.463 732.203,230.61 732.771,233.204 733.339,232.375 733.908,231.331 734.476,231.36 735.044,232.315 735.613,232.46 736.181,230.404 736.749,232.63 737.318,231.673 737.886,229.647 738.454,230.085 739.023,231.406 739.591,231.501 740.159,231.693 740.728,231.961 741.296,233.002 741.864,234.136 742.433,233.119 743.001,232.228 743.569,234.599 744.138,234.618 744.706,233.566 745.274,234.476 745.843,233.432 746.411,233.691 746.98,234.768 747.548,235.785 748.116,234.533 748.685,233.321 749.253,233.445 749.821,232.333 750.39,231.327 750.958,232.677 751.526,233.705 752.095,233.712 752.663,233.646 753.231,234.496 753.8,234.379 754.368,235.32 754.936,236 755.505,234.724 756.073,235.599 756.641,234.428 757.21,234.152 757.778,235.135 758.346,234.906 758.915,235.686 759.483,234.458 760.052,235.741 760.62,236.631 761.188,234.029 761.757,231.816 762.325,230.708 762.893,229.876 763.462,232.026 764.03,232.135 764.598,231.272 765.167,232.384 765.735,232.511 766.303,232.463 766.872,233.551 767.44,232.372 768.008,231.35 768.577,230.3 769.145,229.182 769.713,231.501 770.282,231.516 770.85,232.388 771.418,232.399 771.987,231.223 772.555,231.152 773.123,231.152 773.692,231.016 774.26,231.053 774.829,230.201 775.397,226.924 775.965,227.26 776.534,226.802 777.102,230.484 777.67,230.264 778.239,230.426 778.807,232.365 779.375,232.219 779.944,233.589 780.512,230.443 781.08,230.447 781.649,228.621 782.217,228.886 782.785,228.19 783.354,228.48 783.922,228.943 784.49,226.348 785.059,227.882 785.627,227.419 786.195,227.694 786.764,227.108 787.332,229.543 787.9,229.71 788.469,230.724 789.037,229.983 789.606,229.41 790.174,228.733 790.742,229.026 791.311,230.256 791.879,230.353 792.447,231.641 793.016,231.827 793.584,231.855 794.152,233.103 794.721,233.032 795.289,234.009 795.857,232.829 796.426,233.92 796.994,233.9 797.562,234.789 798.131,235.321 798.699,234.11 799.267,233.884 799.836,233.757 800.404,233.556 800.972,231.669 801.541,229.895 802.109,228.073 802.678,229.408 803.246,229.494 803.814,228.831 804.383,229.228 804.951,228.495 805.519,226.785 806.088,230.13 806.656,232.242 807.224,233.285 807.793,233.401 808.361,233.331 808.929,233.337 809.498,233.205 810.066,233.213 810.634,233.1 811.203,234.082 811.771,234.186 812.339,233.986 812.908,233.744 813.476,233.65 814.044,234.468 814.613,233.264 815.181,234.234 815.749,236.054 816.318,236.82 816.886,237.51 817.455,236.224 818.023,233.839 818.591,229.68 819.16,231.095 819.728,230.262 820.296,230.431 820.865,230.733 821.433,230.701 822.001,232.044 822.57,233.022 823.138,232.716 823.706,232.423 824.275,232.2 824.843,230.295 825.411,230.42 825.98,230.559 826.548,230.605 827.116,231.724 827.685,233.917 828.253,232.845 828.821,231.84 829.39,232.893 829.958,230.902 830.526,231.004 831.095,229.11 831.663,229.479 832.232,228.707 832.8,227.873 833.368,228.164 833.937,227.535 834.505,228.009 835.073,230.476 835.642,231.732 836.21,229.833 836.778,228.945 837.347,229.278 837.915,228.303 838.483,229.615 839.052,231.855 839.62,231.849 840.188,231.946 840.757,231.868 841.325,228.85 841.893,229.186 842.462,230.269 843.03,233.289 843.598,234.289 844.167,235.24 844.735,235.084 845.304,233.797 845.872,233.722 846.44,233.613 847.009,233.375 847.577,231.359 848.145,231.519 848.714,230.541 849.282,229.851 849.85,229.816 850.419,229.712 850.987,231.033 851.555,231.157 852.124,231.982 852.692,230.9 853.26,228.942 853.829,229.289 854.397,228.563 854.965,226.974 855.534,224.062 856.102,226.714 856.67,227.067 857.239,227.318 857.807,226.851 858.375,226.279 858.944,228.837 859.512,228.857 860.081,230.187 860.649,231.449 861.217,232.629 861.786,232.522 862.354,233.584 862.922,235.438 863.491,235.289 864.059,236.32 864.627,235.943 865.196,235.706 865.764,236.327 866.332,238.174 866.901,236.767 867.469,236.354 868.037,234.899 868.606,234.675 869.174,234.416 869.742,235.28 870.311,232.837 870.879,232.634 871.447,232.78 872.016,232.831 872.584,233.823 873.152,233.747 873.721,232.658 874.289,233.82 874.858,233.612 875.426,233.387 875.994,230.278 876.563,229.414 877.131,228.369 877.699,227.603 878.268,227.722 878.836,229.203 879.404,228.299 879.973,227.704 880.541,229.056 881.109,231.306 881.678,230.283 882.246,231.308 882.814,231.372 883.383,230.312 883.951,231.527 884.519,231.563 885.088,231.653 885.656,230.665 886.224,230.557 886.793,229.56 887.361,227.639 887.93,228.803 888.498,228.019 889.066,228.492 889.635,226.881 890.203,229.504 890.771,230.737 891.34,231.809 891.908,231.874 892.476,230.929 893.045,228.947 893.613,230.093 894.181,232.373 894.75,232.431 895.318,231.352 895.886,233.498 896.455,234.446 897.023,233.441 897.591,235.312 898.16,235.18 898.728,234.032 899.296,233.235 899.865,235.136 900.433,234.893 901.001,235.858 901.57,235.65 902.138,235.456 902.707,237.117 903.275,238.795 903.843,237.197 904.412,235.596 904.98,236.438 905.548,236.896 906.117,237.414 906.685,234.744 907.253,234.532 907.822,234.27 908.39,234.918 908.958,236.7 909.527,236.308 910.095,234.739 910.663,233.269 911.232,234.097 911.8,234.906 912.368,234.704 912.937,235.327 913.505,237.146 914.073,236.651 914.642,234.064 915.21,231.724 915.779,231.636 916.347,228.401 916.915,230.613 917.484,230.876 918.052,231.038 918.62,229.893 919.189,228.994 919.757,226.021 920.325,226.11 920.894,225.188 921.462,226.56 922.03,227.905 922.599,228.279 923.167,229.475 923.735,230.484 924.304,230.463 924.872,229.406 925.44,230.864 926.009,230.838 926.577,228.849 927.145,227.933 927.714,227.238 928.282,228.372 928.85,225.516 929.419,225.963 929.987,227.17 930.556,227.42 931.124,225.56 931.692,225.896 932.261,227.403 932.829,226.579 933.397,226.881 933.966,226.077 934.534,226.578 935.102,226.903 935.671,227.364 936.239,228.576 936.807,230.784 937.376,228.972 937.944,229.212 938.512,230.384 939.081,229.412 939.649,230.461 940.217,228.347 940.786,228.711 941.354,228.984 941.922,230.171 942.491,230.19 943.059,230.237 943.627,230.247 944.196,229.423 944.764,230.537 945.333,230.47 945.901,230.523 946.469,229.634 947.038,231.657 947.606,229.602 948.174,227.621 948.743,228.027 949.311,225.089 949.879,227.635 950.448,229.938 951.016,230.1 951.584,232.209 952.153,233.285 952.721,234.336 953.289,233.111 953.858,232.853 954.426,230.702 954.994,229.596 955.563,228.511 956.131,226.599 956.699,228.025 957.268,228.176 957.836,230.495 958.405,229.66 958.973,228.579 959.541,229.818 960.11,226.861 960.678,228.26 961.246,228.583 961.815,227.978 962.383,229.345 962.951,230.422 963.52,228.647 964.088,231.198 964.656,231.278 965.225,230.214 965.793,228.445 966.361,230.724 966.93,227.978 967.498,227.329 968.066,226.531 968.635,227.942 969.203,229.17 969.771,229.254 970.34,230.644 970.908,231.828 971.476,230.758 972.045,232.952 972.613,230.127 973.182,230.242 973.75,231.271 974.318,231.408 974.887,233.833 975.455,234.88 976.023,234.886 976.592,235.833 977.16,235.611 977.728,235.504 978.297,237.299 978.865,237.936 979.433,236.764 980.002,237.472 980.57,237.392 981.138,237.993 981.707,236.598 982.275,234.23 982.843,235.976 983.412,235.429 983.98,233.08 984.548,232.979 985.117,231.763 985.685,228.811 986.253,227.921 986.822,227.059 987.39,227.142 987.959,229.402 988.527,230.49 989.095,231.563 989.664,235.507 990.232,234.463 990.8,236.181 991.369,235.826 991.937,235.553 992.505,235.197 993.074,235.771 993.642,235.548 994.21,234.167 994.779,232.798 995.347,232.805 995.915,232.721 996.484,233.687 997.052,233.771 997.62,234.536 998.189,232.148 998.757,230.859 999.325,230.054 999.894,232.119 1000.46,232.084 1001.03,232.923 1001.6,232.682 1002.17,232.55 1002.74,232.529 1003.3,230.26 1003.87,229.218 1004.44,229.151 1005.01,229.274 1005.58,228.27 1006.15,228.348 1006.71,229.427 1007.28,229.409 1007.85,230.447 1008.42,231.361 1008.99,230.303 1009.56,229.308 1010.12,229.41 1010.69,230.638 1011.26,230.611 1011.83,231.716 1012.4,231.494 1012.97,232.443 1013.53,232.426 1014.1,231.25 1014.67,231.149 1015.24,234.074 1015.81,231.679 1016.38,229.552 1016.94,229.529 1017.51,228.7 1018.08,229.698 1018.65,226.668 1019.22,227.819 1019.79,226.092 1020.35,227.315 1020.92,227.419 1021.49,227.596 1022.06,227.944 1022.63,230.226 1023.2,234.415 1023.76,235.239 1024.33,234.897 1024.9,233.58 1025.47,233.404 1026.04,230.157 1026.61,231.53 1027.17,229.618 1027.74,232.881 1028.31,233.71 1028.88,233.474 1029.45,233.192 1030.02,234.132 1030.58,233.029 1031.15,232.769 1031.72,231.763 1032.29,232.877 1032.86,230.573 1033.43,231.737 1033.99,232.76 1034.56,232.675 1035.13,234.487 1035.7,234.229 1036.27,231.926 1036.84,230.883 1037.4,231.796 1037.97,230.71 1038.54,226.653 1039.11,227.05 1039.68,226.342 1040.25,224.43 1040.81,226.027 1041.38,227.338 1041.95,225.724 1042.52,226.198 1043.09,226.669 1043.66,227.027 1044.22,227.338 1044.79,228.56 1045.36,229.962 1045.93,233.203 1046.5,233.116 1047.07,233.137 1047.63,234.971 1048.2,233.514 1048.77,232.519 1049.34,231.188 1049.91,230.082 1050.48,230.167 1051.05,229.016 1051.61,227.897 1052.18,230.144 1052.75,232.31 1053.32,233.233 1053.89,232.853 1054.46,232.762 1055.02,231.587 1055.59,231.572 1056.16,233.606 1056.73,234.46 1057.3,234.179 1057.87,235.012 1058.43,234.633 1059,233.481 1059.57,233.132 1060.14,235.098 1060.71,233.712 1061.28,231.295 1061.84,232.249 1062.41,232.247 1062.98,233.049 1063.55,232.025 1064.12,230.773 1064.69,229.835 1065.25,230.872 1065.82,231.905 1066.39,228.64 1066.96,230.887 1067.53,231.844 1068.1,232.819 1068.66,233.012 1069.23,232.817 1069.8,231.427 1070.37,229.516 1070.94,230.53 1071.51,230.465 1072.07,230.491 1072.64,232.364 1073.21,230.045 1073.78,226.017 1074.35,226.637 1074.92,227.587 1075.48,226.839 1076.05,224.866 1076.62,226.21 1077.19,225.457 1077.76,223.567 1078.33,222.867 1078.89,224.439 1079.46,225.996 1080.03,226.372 1080.6,224.329 1081.17,227.762 1081.74,228.788 1082.3,229.875 1082.87,229.951 1083.44,228.961 1084.01,229.328 1084.58,226.247 1085.15,224.538 1085.71,223.888 1086.28,224.368 1086.85,224.863 1087.42,228.379 1087.99,228.545 1088.56,228.835 1089.12,231.108 1089.69,232.204 1090.26,234.395 1090.83,234.532 1091.4,235.278 1091.97,234.937 1092.53,234.415 1093.1,233.293 1093.67,232.116 1094.24,233.109 1094.81,230.844 1095.38,232.925 1095.94,233.074 1096.51,231.86 1097.08,230.832 1097.65,228.807 1098.22,228.091 1098.79,229.372 1099.35,228.694 1099.92,228.959 1100.49,229.171 1101.06,227.285 1101.63,226.237 1102.2,226.505 1102.76,225.043 1103.33,224.444 1103.9,225.005 1104.47,227.456 1105.04,226.731 1105.61,224.912 1106.17,224.337 1106.74,226.979 1107.31,224.38 1107.88,225.906 1108.45,226.411 1109.02,226.034 1109.58,224.201 1110.15,224.841 1110.72,226.525 1111.29,225.925 1111.86,227.156 1112.43,229.728 1112.99,231.048 1113.56,232.298 1114.13,231.342 1114.7,230.347 1115.27,231.7 1115.84,230.81 1116.4,233.927 1116.97,232.805 1117.54,233.023 1118.11,231.94 1118.68,230.878 1119.25,232.169 1119.81,232.291 1120.38,232.438 1120.95,232.509 1121.52,235.544 1122.09,235.331 1122.66,236.253 1123.23,236.139 1123.79,236.226 1124.36,236.892 1124.93,235.348 1125.5,235.108 1126.07,237.993 1126.64,239.81 1127.2,237.994 1127.77,238.567 1128.34,239.969 1128.91,238.148 1129.48,238.641 1130.05,238.106 1130.61,236.545 1131.18,237.184 1131.75,235.771 1132.32,235.589 1132.89,234.336 1133.46,233.116 1134.02,231.821 1134.59,233.812 1135.16,234.577 1135.73,233.162 1136.3,232.915 1136.87,234.848 1137.43,235.653 1138,236.301 1138.57,234.83 1139.14,232.537 1139.71,231.4 1140.28,233.274 1140.84,234.29 1141.41,233.05 1141.98,233.788 1142.55,234.251 1143.12,233.931 1143.69,232.618 1144.25,232.409 1144.82,232.313 1145.39,230.091 1145.96,233.117 1146.53,229.775 1147.1,231.819 1147.66,230.823 1148.23,230.957 1148.8,229.957 1149.37,228.075 1149.94,227.19 1150.51,229.408 1151.07,229.364 1151.64,232.492 1152.21,232.12 1152.78,231.988 1153.35,233.66 1153.92,234.474 1154.48,234.077 1155.05,234.799 1155.62,234.37 1156.19,231.816 1156.76,229.683 1157.33,228.548 1157.89,227.406 1158.46,226.338 1159.03,226.461 1159.6,226.533 1160.17,227.823 1160.74,228.873 1161.3,228.918 1161.87,226.936 1162.44,228.225 1163.01,228.097 1163.58,228.368 1164.15,225.408 1164.71,224.645 1165.28,226.013 1165.85,226.345 1166.42,225.619 1166.99,225.957 1167.56,228.344 1168.12,229.61 1168.69,228.515 1169.26,228.662 1169.83,228.821 1170.4,230.075 1170.97,230.417 1171.53,232.66 1172.1,231.629 1172.67,228.307 1173.24,227.341 1173.81,227.395 1174.38,226.737 1174.94,229.156 1175.51,228.065 1176.08,226.286 1176.65,226.688 1177.22,226.966 1177.79,227.175 1178.35,228.367 1178.92,228.608 1179.49,229.882 1180.06,230.826 1180.63,230.082 1181.2,229.331 1181.76,229.514 1182.33,229.677 1182.9,230.884 1183.47,229.022 1184.04,228.232 1184.61,230.247 1185.17,229.183 1185.74,230.282 1186.31,231.368 1186.88,231.496 1187.45,230.265 1188.02,229.326 1188.58,229.656 1189.15,228.715 1189.72,227.703 1190.29,226.104 1190.86,227.685 1191.43,228.007 1192,228.505 1192.56,228.82 1193.13,230.068 1193.7,230.3 1194.27,231.405 1194.84,231.355 1195.41,231.231 1195.97,233.245 1196.54,231.945 1197.11,235.16 1197.68,235.143 1198.25,234.781 1198.82,235.599 1199.38,236.336 1199.95,237.152 1200.52,235.763 1201.09,233.436 1201.66,233.273 1202.23,232.089 1202.79,231.153 1203.36,232.105 1203.93,229.111 1204.5,229.432 1205.07,229.752 1205.64,231.711 1206.2,230.567 1206.77,230.618 1207.34,230.698 1207.91,227.377 1208.48,229.72 1209.05,229.953 1209.61,230.169 1210.18,231.196 1210.75,232.142 1211.32,234.227 1211.89,235.084 1212.46,235.721 1213.02,235.274 1213.59,234.937 1214.16,234.663 1214.73,237.411 1215.3,238.006 1215.87,237.54 1216.43,237.987 1217,237.262 1217.57,237.639 1218.14,235.971 1218.71,234.329 1219.28,233.102 1219.84,234.017 1220.41,234.709 1220.98,234.286 1221.55,232.906 1222.12,231.709 1222.69,231.702 1223.25,230.593 1223.82,229.797 1224.39,229.649 1224.96,230.45 1225.53,227.199 1226.1,228.322 1226.66,227.458 1227.23,229.851 1227.8,229.455 1228.37,229.42 1228.94,228.258 1229.51,228.361 1230.07,227.512 1230.64,227.808 1231.21,227.001 1231.78,228.374 1232.35,228.675 1232.92,227.849 1233.48,228.122 1234.05,229.306 1234.62,230.33 1235.19,231.274 1235.76,231.161 1236.33,230.012 1236.89,226.779 1237.46,230.343 1238.03,233.37 1238.6,231.062 1239.17,230.048 1239.74,228.888 1240.3,228.951 1240.87,228.342 1241.44,229.555 1242.01,228.502 1242.58,228.502 1243.15,225.74 1243.71,229.042 1244.28,230.144 1244.85,229.357 1245.42,229.493 1245.99,230.669 1246.56,230.471 1247.12,230.442 1247.69,230.679 1248.26,231.658 1248.83,231.647 1249.4,231.495 1249.97,232.391 1250.53,233.217 1251.1,232.974 1251.67,237.632 1252.24,235.932 1252.81,236.424 1253.38,233.757 1253.94,231.398 1254.51,229.269 1255.08,231.38 1255.65,228.333 1256.22,228.428 1256.79,227.403 1257.35,226.705 1257.92,227.039 1258.49,228.356 1259.06,228.584 1259.63,226.705 1260.2,227.962 1260.76,231.192 1261.33,231.024 1261.9,230.118 1262.47,230.075 1263.04,226.031 1263.61,227.461 1264.18,227.69 1264.74,229.086 1265.31,230.251 1265.88,230.975 1266.45,230.018 1267.02,231.237 1267.59,231.131 1268.15,231.977 1268.72,233.894 1269.29,233.46 1269.86,232.49 1270.43,231.365 1271,230.317 1271.56,229.311 1272.13,229.523 1272.7,228.535 1273.27,228.697 1273.84,230.084 1274.41,232.253 1274.97,231.926 1275.54,232.786 1276.11,232.568 1276.68,233.641 1277.25,234.349 1277.82,231.978 1278.38,231.829 1278.95,231.725 1279.52,230.628 1280.09,230.51 1280.66,230.492 1281.23,230.638 1281.79,229.481 1282.36,228.535 1282.93,227.723 1283.5,231.132 1284.07,230.091 1284.64,229.968 1285.2,232.047 1285.77,231.842 1286.34,230.763 1286.91,229.757 1287.48,228.537 1288.05,226.461 1288.61,226.818 1289.18,226.946 1289.75,227.332 1290.32,226.36 1290.89,228.749 1291.46,230.033 1292.02,230.289 1292.59,231.579 1293.16,231.302 1293.73,231.363 1294.3,232.458 1294.87,232.303 1295.43,232.075 1296,234.982 1296.57,236.616 1297.14,237.314 1297.71,234.883 1298.28,235.773 1298.84,234.193 1299.41,234.969 1299.98,233.742 1300.55,231.58 1301.12,231.395 1301.69,233.227 1302.25,234.119 1302.82,235.031 1303.39,235.658 1303.96,234.979 1304.53,233.63 1305.1,232.194 1305.66,232.172 1306.23,230.949 1306.8,232.939 1307.37,231.722 1307.94,229.299 1308.51,230.229 1309.07,231.133 1309.64,230.991 1310.21,231.847 1310.78,230.835 1311.35,230.748 1311.92,229.736 1312.48,228.721 1313.05,228.705 1313.62,228.826 1314.19,228.011 1314.76,228.28 1315.33,229.454 1315.89,228.488 1316.46,228.585 1317.03,229.691 1317.6,230.801 1318.17,230.592 1318.74,232.5 1319.3,233.304 1319.87,229.861 1320.44,228.012 1321.01,228.112 1321.58,228.225 1322.15,227.516 1322.71,225.559 1323.28,225.901 1323.85,226.377 1324.42,225.504 1324.99,226.962 1325.56,225.952 1326.12,226.137 1326.69,225.254 1327.26,226.718 1327.83,227.031 1328.4,228.533 1328.97,227.649 1329.53,228.821 1330.1,231.957 1330.67,233.818 1331.24,231.678 1331.81,231.491 1332.38,231.355 1332.94,231.225 1333.51,232.015 1334.08,231.928 1334.65,233.935 1335.22,231.492 1335.79,229.564 1336.36,229.854 1336.92,228.99 1337.49,230.09 1338.06,232.004 1338.63,231.002 1339.2,230.817 1339.77,229.899 1340.33,229.024 1340.9,229.269 1341.47,228.302 1342.04,227.521 1342.61,227.844 1343.18,226.926 1343.74,225.273 1344.31,222.614 1344.88,224.367 1345.45,225.814 1346.02,227.402 1346.59,228.699 1347.15,228.178 1347.72,231.522 1348.29,232.594 1348.86,233.544 1349.43,235.381 1350,238.113 1350.56,235.708 1351.13,236.48 1351.7,237.168 1352.27,237.659 1352.84,238.057 1353.41,237.586 1353.97,235.933 1354.54,236.434 1355.11,236.952 1355.68,238.586 1356.25,237.884 1356.82,236.035 1357.38,235.561 1357.95,235.193 1358.52,234.703 1359.09,234.272 1359.66,233.716 1360.23,235.472 1360.79,233.979 1361.36,233.663 1361.93,232.44 1362.5,231.38 1363.07,232.459 1363.64,234.426 1364.2,232.088 1364.77,231.086 1365.34,230.961 1365.91,228.638 1366.48,227.673 1367.05,227.683 1367.61,226.785 1368.18,226.935 1368.75,228.317 1369.32,228.389 1369.89,230.548 1370.46,228.501 1371.02,227.564 1371.59,226.645 1372.16,224.859 1372.73,226.181 1373.3,226.412 1373.87,228.793 1374.43,230.016 1375,229.075 1375.57,230.11 1376.14,230.127 1376.71,230.162 1377.28,230.947 1377.84,231.006 1378.41,231.696 1378.98,231.598 1379.55,233.545 1380.12,232.275 1380.69,230.092 1381.25,229.299 1381.82,228.44 1382.39,226.663 1382.96,226.996 1383.53,227.37 1384.1,227.617 1384.66,229.901 1385.23,229.707 1385.8,231.775 1386.37,233.573 1386.94,236.17 1387.51,235.828 1388.07,234.376 1388.64,234.04 1389.21,234.024 1389.78,233.853 1390.35,233.289 1390.92,232.19 1391.48,229.872 1392.05,230.868 1392.62,227.957 1393.19,228.29 1393.76,228.637 1394.33,228.568 1394.89,228.661 1395.46,228.955 1396.03,229.114 1396.6,230.025 1397.17,228.92 1397.74,227.919 1398.3,231.105 1398.87,230.944 1399.44,231.843 1400.01,229.705 1400.58,229.707 1401.15,229.785 1401.71,229.816 1402.28,231.011 1402.85,231.085 1403.42,230.914 1403.99,231.931 1404.56,230.851 1405.13,229.753 1405.69,230.915 1406.26,230.68 1406.83,230.687 1407.4,228.683 1407.97,229.785 1408.54,229.702 1409.1,229.549 1409.67,231.484 1410.24,233.452 1410.81,235.464 1411.38,234.028 1411.95,234.757 1412.51,232.36 1413.08,233.142 1413.65,233.008 1414.22,232.765 1414.79,233.56 1415.36,233.256 1415.92,232.887 1416.49,231.693 1417.06,232.599 1417.63,233.121 1418.2,233.047 1418.77,232.859 1419.33,230.61 1419.9,230.58 1420.47,230.673 1421.04,231.595 1421.61,230.327 1422.18,230.449 1422.74,228.259 1423.31,228.449 1423.88,229.512 1424.45,226.386 1425.02,227.663 1425.59,227.013 1426.15,227.168 1426.72,227.112 1427.29,225.127 1427.86,224.323 1428.43,225.876 1429,225.297 1429.56,226.496 1430.13,227.904 1430.7,228.132 1431.27,230.384 1431.84,227.226 1432.41,227.514 1432.97,226.834 1433.54,226.331 1434.11,227.648 1434.68,227.825 1435.25,227.295 1435.82,227.557 1436.38,227.703 1436.95,224.608 1437.52,225.114 1438.09,226.48 1438.66,226.763 1439.23,225.072 1439.79,224.63 1440.36,223.775 1440.93,222.005 1441.5,223.972 1442.07,225.717 1442.64,226.079 1443.2,227.694 1443.77,230.181 1444.34,230.394 1444.91,229.701 1445.48,229.908 1446.05,228.965 1446.61,229.97 1447.18,230.05 1447.75,229.922 1448.32,230.041 1448.89,231.189 1449.46,231.19 1450.02,232.326 1450.59,231.467 1451.16,232.545 1451.73,231.748 1452.3,233.854 1452.87,232.562 1453.43,234.646 1454,237.536 1454.57,235.02 1455.14,236.811 1455.71,236.339 1456.28,235.051 1456.84,234.828 1457.41,233.685 1457.98,234.816 1458.55,235.81 1459.12,235.698 1459.69,236.361 1460.25,235.9 1460.82,237.514 1461.39,236.173 1461.96,234.672 1462.53,233.209 1463.1,231.964 1463.66,231.751 1464.23,231.592 1464.8,231.542 1465.37,231.556 1465.94,230.735 1466.51,231.842 1467.07,228.74 1467.64,231.035 1468.21,230.986 1468.78,231.807 1469.35,228.499 1469.92,227.503 1470.48,227.796 1471.05,227.903 1471.62,228.22 1472.19,227.485 1472.76,227.749 1473.33,227.763 1473.89,226.969 1474.46,229.349 1475.03,230.736 1475.6,230.706 1476.17,230.734 1476.74,229.847 1477.31,227.883 1477.87,228.24 1478.44,229.481 1479.01,228.737 1479.58,230.757 1480.15,230.912 1480.72,231.916 1481.28,232.897 1481.85,233.962 1482.42,234.682 1482.99,233.292 1483.56,234.203 1484.13,233.885 1484.69,230.717 1485.26,230.587 1485.83,229.604 1486.4,231.751 1486.97,231.678 1487.54,231.628 1488.1,232.514 1488.67,231.198 1489.24,230.067 1489.81,229.958 1490.38,230.164 1490.95,232.352 1491.51,229.12 1492.08,227.17 1492.65,227.539 1493.22,231.03 1493.79,231.053 1494.36,231.085 1494.92,231.721 1495.49,233.875 1496.06,233.63 1496.63,233.359 1497.2,232.972 1497.77,231.638 1498.33,230.423 1498.9,229.547 1499.47,228.68 1500.04,228.965 1500.61,228.069 1501.18,228.219 1501.74,229.403 1502.31,229.347 1502.88,231.561 1503.45,231.712 1504.02,231.762 1504.59,231.633 1505.15,235.565 1505.72,238.356 1506.29,239.84 1506.86,241.25 1507.43,239.411 1508,237.77 1508.56,236.313 1509.13,234.869 1509.7,233.72 1510.27,233.257 1510.84,232.163 1511.41,229.901 1511.97,228.735 1512.54,227.703 1513.11,228.043 1513.68,227.127 1514.25,228.179 1514.82,228.336 1515.38,229.331 1515.95,227.419 1516.52,229.677 1517.09,229.505 1517.66,230.603 1518.23,227.594 1518.79,228.833 1519.36,228.925 1519.93,227.209 1520.5,226.351 1521.07,225.644 1521.64,225.916 1522.2,225.183 1522.77,225.583 1523.34,226.113 1523.91,228.305 1524.48,228.616 1525.05,229.761 1525.61,228.498 1526.18,230.607 1526.75,231.672 1527.32,229.323 1527.89,228.529 1528.46,230.726 1529.02,230.711 1529.59,232.623 1530.16,234.679 1530.73,234.767 1531.3,234.412 1531.87,232.021 1532.43,234.008 1533,233.741 1533.57,233.538 1534.14,233.536 1534.71,232.563 1535.28,232.321 1535.84,232.33 1536.41,231.159 1536.98,231.1 1537.55,231.189 1538.12,230.33 1538.69,229.231 1539.25,227.486 1539.82,228.629 1540.39,227.684 1540.96,227.66 1541.53,227.888 1542.1,229.885 1542.66,231.08 1543.23,230.22 1543.8,232.14 1544.37,234.337 1544.94,234.27 1545.51,234.072 1546.08,233.746 1546.64,232.572 1547.21,232.333 1547.78,232.157 1548.35,233.065 1548.92,232.928 1549.49,232.643 1550.05,231.362 1550.62,232.081 1551.19,231.955 1551.76,233.9 1552.33,233.74 1552.9,233.482 1553.46,234.088 1554.03,233.5 1554.6,232.237 1555.17,230.927 1555.74,229.885 1556.31,231.166 1556.87,231.274 1557.44,232.239 1558.01,231.044 1558.58,229.951 1559.15,224.79 1559.72,225.179 1560.28,224.427 1560.85,224.993 1561.42,225.338 1561.99,228.841 1562.56,227.813 1563.13,226.076 1563.69,225.437 1564.26,225.65 1564.83,226.027 1565.4,223.241 1565.97,225.099 1566.54,225.843 1567.1,227.264 1567.67,228.463 1568.24,227.617 1568.81,227.96 1569.38,229.097 1569.95,230.263 1570.51,230.364 1571.08,229.515 1571.65,229.612 1572.22,229.672 1572.79,229.927 1573.36,229.998 1573.92,230.057 1574.49,230.091 1575.06,230.215 1575.63,233.494 1576.2,235.532 1576.77,236.155 1577.33,236.845 1577.9,232.398 1578.47,233.396 1579.04,234.387 1579.61,233.246 1580.18,230.895 1580.74,230.945 1581.31,231.892 1581.88,231.764 1582.45,231.64 1583.02,231.588 1583.59,230.414 1584.15,232.38 1584.72,235.285 1585.29,232.912 1585.86,234.687 1586.43,233.4 1587,233.101 1587.56,232.916 1588.13,232.776 1588.7,233.646 1589.27,234.318 1589.84,234.886 1590.41,233.515 1590.97,235.361 1591.54,235.9 1592.11,234.38 1592.68,235.181 1593.25,233.789 1593.82,233.388 1594.38,232.189 1594.95,232.233 1595.52,234.128 1596.09,233.814 1596.66,232.436 1597.23,231.371 1597.79,232.375 1598.36,232.196 1598.93,232.083 1599.5,228.812 1600.07,228.68 1600.64,230.859 1601.2,229.577 1601.77,230.555 1602.34,229.547 1602.91,230.664 1603.48,230.598 1604.05,229.485 1604.61,227.402 1605.18,227.489 1605.75,229.868 1606.32,230.682 1606.89,230.882 1607.46,231.845 1608.02,229.619 1608.59,229.57 1609.16,228.696 1609.73,229.678 1610.3,229.944 1610.87,226.927 1611.43,226.945 1612,227.048 1612.57,226.066 1613.14,225.239 1613.71,224.756 1614.28,222.991 1614.84,223.681 1615.41,225.206 1615.98,226.675 1616.55,226.062 1617.12,224.403 1617.69,224.968 1618.26,225.419 1618.82,224.81 1619.39,226.071 1619.96,226.54 1620.53,226.682 1621.1,227.856 1621.67,228.275 1622.23,229.539 1622.8,229.772 1623.37,228.667 1623.94,227.742 1624.51,231.131 1625.08,230.207 1625.64,230.285 1626.21,231.56 1626.78,231.536 1627.35,231.44 1627.92,230.166 1628.49,230.276 1629.05,227.461 1629.62,225.958 1630.19,227.377 1630.76,228.834 1631.33,227.842 1631.9,229.197 1632.46,232.461 1633.03,232.502 1633.6,230.495 1634.17,231.761 1634.74,231.774 1635.31,231.942 1635.87,230.777 1636.44,231.957 1637.01,234.111 1637.58,233.872 1638.15,231.348 1638.72,232.311 1639.28,232.241 1639.85,231.247 1640.42,229.238 1640.99,226.301 1641.56,225.843 1642.13,225.953 1642.69,228.391 1643.26,230.692 1643.83,229.49 1644.4,227.531 1644.97,227.355 1645.54,227.646 1646.1,228.939 1646.67,228.118 1647.24,226.285 1647.81,226.713 1648.38,228.067 1648.95,228.21 1649.51,228.383 1650.08,228.453 1650.65,227.771 1651.22,228.291 1651.79,227.35 1652.36,228.764 1652.92,230.189 1653.49,231.384 1654.06,231.486 1654.63,234.55 1655.2,238.583 1655.77,239.221 1656.33,238.568 1656.9,236.991 1657.47,237.705 1658.04,236.276 1658.61,236.94 1659.18,236.522 1659.74,236.931 1660.31,235.657 1660.88,235.335 1661.45,234.945 1662.02,234.59 1662.59,235.489 1663.15,236.317 1663.72,236.754 1664.29,237.277 1664.86,234.692 1665.43,234.481 1666,233.193 1666.56,234.009 1667.13,233.809 1667.7,231.585 1668.27,229.421 1668.84,231.704 1669.41,230.488 1669.97,227.239 1670.54,228.515 1671.11,229.573 1671.68,228.607 1672.25,227.675 1672.82,227.987 1673.38,230.082 1673.95,229.061 1674.52,228.275 1675.09,226.465 1675.66,227.734 1676.23,227.793 1676.79,228.788 1677.36,226.981 1677.93,226.098 1678.5,224.299 1679.07,222.579 1679.64,222.206 1680.2,222.892 1680.77,223.33 1681.34,223.067 1681.91,223.751 1682.48,222.467 1683.05,225.321 1683.61,221.614 1684.18,222.468 1684.75,225.34 1685.32,225.844 1685.89,226.381 1686.46,226.67 1687.02,229.524 1687.59,227.566 1688.16,227.7 1688.73,230.174 1689.3,231.52 1689.87,231.627 1690.44,230.603 1691,231.719 1691.57,231.813 1692.14,235.029 1692.71,234.917 1693.28,234.84 1693.85,235.745 1694.41,234.564 1694.98,233.26 1695.55,232.2 1696.12,231.201 1696.69,234.125 1697.26,234.2 1697.82,234.174 1698.39,235.209 1698.96,237.075 1699.53,235.716 1700.1,235.457 1700.67,234.366 1701.23,233.152 1701.8,232.844 1702.37,232.92 1702.94,233.026 1703.51,231.979 1704.08,232.7 1704.64,232.666 1705.21,234.632 1705.78,233.544 1706.35,234.555 1706.92,233.423 1707.49,233.292 1708.05,232.101 1708.62,232.999 1709.19,231.943 1709.76,231.696 1710.33,231.765 1710.9,230.674 1711.46,230.684 1712.03,227.685 1712.6,227.958 1713.17,228.146 1713.74,228.018 1714.31,225.072 1714.87,223.437 1715.44,222.892 1716.01,223.251 1716.58,224.717 1717.15,225.346 1717.72,226.896 1718.28,225.134 1718.85,227.705 1719.42,225.825 1719.99,225.196 1720.56,227.723 1721.13,229.985 1721.69,228.953 1722.26,229.126 1722.83,231.3 1723.4,232.443 1723.97,231.645 1724.54,231.607 1725.1,230.653 1725.67,230.489 1726.24,231.412 1726.81,233.413 1727.38,228.298 1727.95,229.488 1728.51,232.684 1729.08,232.583 1729.65,230.393 1730.22,234.003 1730.79,231.905 1731.36,233.106 1731.92,236.127 1732.49,235.521 1733.06,237.422 1733.63,236.862 1734.2,235.537 1734.77,235.107 1735.33,234.918 1735.9,233.604 1736.47,235.473 1737.04,238.262 1737.61,237.863 1738.18,237.296 1738.74,237.996 1739.31,236.382 1739.88,237.051 1740.45,237.563 1741.02,236.794 1741.59,237.333 1742.15,234.805 1742.72,234.49 1743.29,231.009 1743.86,231.699 1744.43,230.587 1745,229.469 1745.56,232.78 1746.13,230.475 1746.7,228.344 1747.27,229.593 1747.84,228.619 1748.41,229.671 1748.97,228.597 1749.54,228.816 1750.11,225.745 1750.68,229.129 1751.25,233.411 1751.82,233.283 1752.38,231.938 1752.95,231.764 1753.52,231.681 1754.09,234.779 1754.66,234.514 1755.23,234.266 1755.79,233.662 1756.36,234.365 1756.93,233.137 1757.5,236.178 1758.07,235.706 1758.64,235.253 1759.21,233.947 1759.77,234.484 1760.34,234.216 1760.91,235.964 1761.48,234.672 1762.05,234.382 1762.62,233.093 1763.18,230.764 1763.75,231.819 1764.32,231.596 1764.89,232.299 1765.46,230.952 1766.03,230.844 1766.59,231.817 1767.16,231.485 1767.73,232.2 1768.3,232.01 1768.87,231.835 1769.44,229.715 1770,227.558 1770.57,227.512 1771.14,229.778 1771.71,227.789 1772.28,227.833 1772.85,224.899 1773.41,224.996 1773.98,225.077 1774.55,224.146 1775.12,223.529 1775.69,223.93 1776.26,223.415 1776.82,223.836 1777.39,224.207 1777.96,222.48 1778.53,224.936 1779.1,225.37 1779.67,224.507 1780.23,229.005 1780.8,229.008 1781.37,230.033 1781.94,228.879 1782.51,228.869 1783.08,231.022 1783.64,231.093 1784.21,231.148 1784.78,231.072 1785.35,231.273 1785.92,230.115 1786.49,231.388 1787.05,234.453 1787.62,235.185 1788.19,233.849 1788.76,234.783 1789.33,235.44 1789.9,234.871 1790.46,232.606 1791.03,232.739 1791.6,233.734 1792.17,232.382 1792.74,231.288 1793.31,230.152 1793.87,230.276 1794.44,231.304 1795.01,230.073 1795.58,228.996 1796.15,228.992 1796.72,230.916 1797.28,234.026 1797.85,234.818 1798.42,233.484 1798.99,235.357 1799.56,232.847 1800.13,232.643 1800.69,232.375 1801.26,233.149 1801.83,232.006 1802.4,230.9 1802.97,229.776 1803.54,230.925 1804.1,229.821 1804.67,230.459 1805.24,231.471 1805.81,231.392 1806.38,231.305 1806.95,227.008 1807.51,226.079 1808.08,225.42 1808.65,226.883 1809.22,227.281 1809.79,224.357 1810.36,226.697 1810.92,225.086 1811.49,225.471 1812.06,223.719 1812.63,226.116 1813.2,228.65 1813.77,227.785 1814.33,227.998 1814.9,228.084 1815.47,227.468 1816.04,228.756 1816.61,230.043 1817.18,227.083 1817.74,227.429 1818.31,229.713 1818.88,230.953 1819.45,229.992 1820.02,229.093 1820.59,229.375 1821.15,230.761 1821.72,231.478 1822.29,233.57 1822.86,233.326 1823.43,233.292 1824,234.147 1824.56,232.934 1825.13,232.708 1825.7,233.453 1826.27,234.101 1826.84,233.794 1827.41,232.436 1827.97,232.231 1828.54,234.442 1829.11,235.247 1829.68,236.026 1830.25,235.715 1830.82,235.261 1831.39,233.894 1831.95,233.556 1832.52,233.253 1833.09,233.798 1833.66,233.587 1834.23,232.342 1834.8,232.416 1835.36,231.189 1835.93,231.146 1836.5,232.023 1837.07,231.976 1837.64,230.001 1838.21,230.184 1838.77,231.325 1839.34,230.355 1839.91,230.098 1840.48,229.85 1841.05,228.677 1841.62,230.634 1842.18,231.691 1842.75,230.553 1843.32,230.59 1843.89,232.643 1844.46,232.501 1845.03,232.282 1845.59,232.09 1846.16,230.925 1846.73,233.083 1847.3,238.114 1847.87,238.55 1848.44,237.076 1849,236.363 1849.57,235.091 1850.14,235.742 1850.71,236.266 1851.28,235.598 1851.85,235.29 1852.41,234.518 1852.98,232.961 1853.55,233.409 1854.12,234.098 1854.69,234.69 1855.26,235.333 1855.82,232.738 1856.39,231.535 1856.96,230.155 1857.53,227.843 1858.1,227.899 1858.67,228.032 1859.23,226.988 1859.8,227.266 1860.37,227.333 1860.94,226.346 1861.51,226.817 1862.08,228.038 1862.64,229.273 1863.21,227.248 1863.78,226.415 1864.35,226.542 1864.92,226.674 1865.49,225.839 1866.05,224.935 1866.62,225.342 1867.19,225.846 1867.76,227.074 1868.33,227.349 1868.9,227.58 1869.46,228.616 1870.03,229.604 1870.6,231.85 1871.17,232.612 1871.74,230.359 1872.31,229.123 1872.87,228.355 1873.44,228.361 1874.01,228.515 1874.58,228.706 1875.15,228.593 1875.72,229.685 1876.28,229.735 1876.85,229.836 1877.42,230.053 1877.99,231.04 1878.56,232.213 1879.13,231.908 1879.69,228.842 1880.26,228.79 1880.83,227.874 1881.4,226.205 1881.97,225.859 1882.54,225.168 1883.1,224.476 1883.67,227.962 1884.24,228.258 1884.81,227.416 1885.38,226.719 1885.95,224.791 1886.51,227.352 1887.08,228.589 1887.65,229.148 1888.22,230.024 1888.79,231.074 1889.36,233.307 1889.92,233.366 1890.49,232.361 1891.06,233.192 1891.63,232.053 1892.2,233.072 1892.77,231.853 1893.33,230.669 1893.9,228.65 1894.47,227.749 1895.04,228.069 1895.61,228.162 1896.18,228.404 1896.74,228.654 1897.31,228.76 1897.88,229.856 1898.45,228.947 1899.02,229.993 1899.59,230.099 1900.16,228.146 1900.72,228.392 1901.29,226.475 1901.86,227.06 1902.43,230.375 1903,229.351 1903.57,229.472 1904.13,228.642 1904.7,227.861 1905.27,225.151 1905.84,224.486 1906.41,224.862 1906.98,226.308 1907.54,227.03 1908.11,228.42 1908.68,228.701 1909.25,229.03 1909.82,228.272 1910.39,229.515 1910.95,230.642 1911.52,232.78 1912.09,231.871 1912.66,230.806 1913.23,230.796 1913.8,235.114 1914.36,231.755 1914.93,231.78 1915.5,228.636 1916.07,228.994 1916.64,228.13 1917.21,228.522 1917.77,225.836 1918.34,227.171 1918.91,230.484 1919.48,230.626 1920.05,230.773 1920.62,229.975 1921.18,230.987 1921.75,230.021 1922.32,233.337 1922.89,233.244 1923.46,233.154 1924.03,233.106 1924.59,236.201 1925.16,236.986 1925.73,237.546 1926.3,238.256 1926.87,237.93 1927.44,239.537 1928,238.801 1928.57,238.285 1929.14,237.911 1929.71,237.493 1930.28,237.025 1930.85,236.782 1931.41,234.417 1931.98,235.046 1932.55,232.563 1933.12,232.347 1933.69,230.066 1934.26,230.492 1934.82,231.733 1935.39,232.528 1935.96,232.445 1936.53,230.405 1937.1,231.451 1937.67,230.531 1938.23,229.359 1938.8,231.313 1939.37,229.292 1939.94,230.153 1940.51,232.176 1941.08,231.879 1941.64,231.773 1942.21,230.607 1942.78,229.202 1943.35,229.399 1943.92,227.522 1944.49,228.862 1945.05,228.878 1945.62,229.931 1946.19,228.887 1946.76,227.951 1947.33,226.282 1947.9,227.419 1948.46,228.519 1949.03,230.831 1949.6,230.791 1950.17,229.797 1950.74,229.925 1951.31,228.883 1951.87,227.789 1952.44,226.927 1953.01,225.227 1953.58,224.522 1954.15,224.978 1954.72,226.49 1955.28,228.766 1955.85,230.069 1956.42,231.18 1956.99,230.064 1957.56,230.963 1958.13,228.877 1958.69,226.938 1959.26,226.257 1959.83,227.533 1960.4,228.937 1960.97,226.913 1961.54,228.473 1962.1,228.669 1962.67,228.854 1963.24,228.087 1963.81,228.438 1964.38,228.749 1964.95,228.991 1965.51,230.169 1966.08,231.609 1966.65,231.587 1967.22,232.552 1967.79,235.751 1968.36,234.465 1968.92,235.236 1969.49,234.966 1970.06,233.815 1970.63,233.626 1971.2,233.604 1971.77,231.527 1972.34,231.416 1972.9,232.369 1973.47,232.208 1974.04,233.086 1974.61,234.063 1975.18,232.931 1975.75,231.805 1976.31,232.849 1976.88,233.817 1977.45,232.617 1978.02,231.485 1978.59,231.351 1979.16,231.391 1979.72,231.462 1980.29,230.589 1980.86,228.786 1981.43,231.044 1982,230.973 1982.57,232.049 1983.13,230.959 1983.7,232.05 1984.27,232.05 1984.84,233.119 1985.41,232.004 1985.98,230.073 1986.54,230.324 1987.11,234.635 1987.68,234.315 1988.25,235.023 1988.82,233.653 1989.39,233.435 1989.95,233.402 1990.52,232.33 1991.09,233.124 1991.66,234.054 1992.23,231.774 1992.8,232.736 1993.36,235.538 1993.93,232.877 1994.5,229.773 1995.07,228.684 1995.64,231.876 1996.21,231.851 1996.77,230.75 1997.34,232.774 1997.91,232.7 1998.48,232.692 1999.05,232.747 1999.62,230.53 2000.18,234.417 2000.75,236.027 2001.32,234.515 2001.89,235.06 2002.46,231.589 2003.03,232.345 2003.59,231.129 2004.16,230.956 2004.73,230.807 2005.3,229.78 2005.87,230.869 2006.44,229.639 2007,230.758 2007.57,231.628 2008.14,232.472 2008.71,232.354 2009.28,232.543 2009.85,231.276 2010.41,230.898 2010.98,231.615 2011.55,232.33 2012.12,231.938 2012.69,230.841 2013.26,229.799 2013.82,229.791 2014.39,225.728 2014.96,224.977 2015.53,227.303 2016.1,227.5 2016.67,227.711 2017.23,228.816 2017.8,228.92 2018.37,228.838 2018.94,227.889 2019.51,229.987 2020.08,228.954 2020.64,228.066 2021.21,229.437 2021.78,228.433 2022.35,228.483 2022.92,226.304 2023.49,229.689 2024.05,229.753 2024.62,228.818 2025.19,228.625 2025.76,228.683 2026.33,226.815 2026.9,224.912 2027.46,224.203 2028.03,224.719 2028.6,224.288 2029.17,222.648 2029.74,222.204 2030.31,219.895 2030.87,220.624 2031.44,220.373 2032.01,221.966 2032.58,222.624 2033.15,225.327 2033.72,226.75 2034.28,228.131 2034.85,230.369 2035.42,230.327 2035.99,231.583 2036.56,232.752 2037.13,233.681 2037.69,232.569 2038.26,232.398 2038.83,232.245 2039.4,231.315 2039.97,230.536 2040.54,232.704 2041.11,232.615 2041.67,232.395 2042.24,231.286 2042.81,231.229 2043.38,231.443 2043.95,232.636 2044.52,229.561 2045.08,230.902 2045.65,230.966 2046.22,232.084 2046.79,233.217 2047.36,234.065 2047.93,233.717 2048.49,235.481 2049.06,236.346 2049.63,235.028 2050.2,234.852 2050.77,234.643 2051.34,235.361 2051.9,236.133 2052.47,234.73 2053.04,234.449 2053.61,234.069 2054.18,232.974 2054.75,230.76 2055.31,229.701 2055.88,226.696 2056.45,227.922 2057.02,229.119 2057.59,229.123 2058.16,229.357 2058.72,229.417 2059.29,228.587 2059.86,228.738 2060.43,225.825 2061,227.28 2061.57,226.401 2062.13,227.822 2062.7,229.317 2063.27,229.503 2063.84,228.652 2064.41,231.103 2064.98,230.051 2065.54,235.499 2066.11,234.36 2066.68,237.21 2067.25,238.927 2067.82,238.379 2068.39,237.971 2068.95,237.471 2069.52,234.996 2070.09,235.751 2070.66,235.353 2071.23,235.972 2071.8,234.323 2072.36,230.981 2072.93,232.022 2073.5,230.897 2074.07,229.841 2074.64,229.805 2075.21,230.968 2075.77,229.719 2076.34,227.611 2076.91,224.868 2077.48,224.249 2078.05,223.821 2078.62,223.45 2079.18,224.03 2079.75,223.557 2080.32,224.099 2080.89,223.813 2081.46,224.347 2082.03,226.963 2082.59,228.137 2083.16,229.437 2083.73,229.585 2084.3,231.666 2084.87,232.902 2085.44,231.621 2086,230.321 2086.57,231.262 2087.14,233.088 2087.71,231.985 2088.28,233.103 2088.85,232.954 2089.41,232.669 2089.98,233.599 2090.55,232.412 2091.12,232.207 2091.69,233.253 2092.26,233.121 2092.82,232.869 2093.39,232.876 2093.96,233.796 2094.53,233.604 2095.1,231.469 2095.67,230.257 2096.23,229.125 2096.8,229.074 2097.37,229.269 2097.94,231.46 2098.51,228.658 2099.08,232.844 2099.64,234.866 2100.21,231.625 2100.78,232.412 2101.35,234.344 2101.92,234.213 2102.49,234.988 2103.05,234.873 2103.62,234.573 2104.19,236.249 2104.76,235.878 2105.33,236.443 2105.9,234.974 2106.46,233.617 2107.03,232.127 2107.6,233.06 2108.17,232.892 2108.74,231.747 2109.31,228.748 2109.87,229.825 2110.44,234.068 2111.01,231.987 2111.58,232.015 2112.15,231.852 2112.72,232.618 2113.29,232.496 2113.85,231.347 2114.42,230.183 2114.99,229.217 2115.56,229.315 2116.13,229.43 2116.7,230.646 2117.26,229.631 2117.83,230.653 2118.4,230.678 2118.97,231.852 2119.54,232.734 2120.11,232.451 2120.67,232.343 2121.24,232.243 2121.81,231.02 2122.38,231.017 2122.95,232.023 2123.52,231.828 2124.08,231.778 2124.65,230.668 2125.22,229.537 2125.79,228.527 2126.36,230.628 2126.93,230.498 2127.49,230.345 2128.06,229.405 2128.63,230.65 2129.2,231.44 2129.77,232.316 2130.34,232.359 2130.9,234.225 2131.47,234.93 2132.04,233.482 2132.61,235.258 2133.18,234.809 2133.75,236.338 2134.31,237.767 2134.88,237.164 2135.45,234.378 2136.02,234.95 2136.59,234.42 2137.16,236.045 2137.72,235.444 2138.29,235.072 2138.86,235.588 2139.43,238.135 2140,238.318 2140.57,237.374 2141.13,236.563 2141.7,236.917 2142.27,236.058 2142.84,234.22 2143.41,233.671 2143.98,233.005 2144.54,232.431 2145.11,230.977 2145.68,228.89 2146.25,225.794 2146.82,225.97 2147.39,225.86 2147.95,227.086 2148.52,228.061 2149.09,228.878 2149.66,226.883 2150.23,226.034 2150.8,226.255 2151.36,225.357 2151.93,224.51 2152.5,222.626 2153.07,223.178 2153.64,223.659 2154.21,222.934 2154.77,225.417 2155.34,225.7 2155.91,228.024 2156.48,228.078 2157.05,227.144 2157.62,224.219 2158.18,224.601 2158.75,223.951 2159.32,223.089 2159.89,223.491 \"/>\n<path clip-path=\"url(#clip480)\" d=\"M1649.46 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1649.46 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1649.46,1245.03 2150.8,1245.03 2150.8,1089.51 1649.46,1089.51 1649.46,1245.03 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1669.53,1141.35 1789.98,1141.35 \"/>\n<path clip-path=\"url(#clip480)\" d=\"M1817.46 1125.34 L1817.46 1132.71 L1826.23 1132.71 L1826.23 1136.02 L1817.46 1136.02 L1817.46 1150.09 Q1817.46 1153.26 1818.32 1154.16 Q1819.2 1155.07 1821.86 1155.07 L1826.23 1155.07 L1826.23 1158.63 L1821.86 1158.63 Q1816.93 1158.63 1815.05 1156.8 Q1813.18 1154.95 1813.18 1150.09 L1813.18 1136.02 L1810.05 1136.02 L1810.05 1132.71 L1813.18 1132.71 L1813.18 1125.34 L1817.46 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1843.62 1145.6 Q1838.46 1145.6 1836.47 1146.78 Q1834.48 1147.96 1834.48 1150.81 Q1834.48 1153.08 1835.96 1154.42 Q1837.46 1155.74 1840.03 1155.74 Q1843.57 1155.74 1845.7 1153.24 Q1847.86 1150.72 1847.86 1146.55 L1847.86 1145.6 L1843.62 1145.6 M1852.11 1143.84 L1852.11 1158.63 L1847.86 1158.63 L1847.86 1154.7 Q1846.4 1157.06 1844.22 1158.19 Q1842.05 1159.3 1838.9 1159.3 Q1834.92 1159.3 1832.55 1157.08 Q1830.22 1154.84 1830.22 1151.09 Q1830.22 1146.71 1833.13 1144.49 Q1836.07 1142.27 1841.88 1142.27 L1847.86 1142.27 L1847.86 1141.85 Q1847.86 1138.91 1845.91 1137.31 Q1843.99 1135.69 1840.49 1135.69 Q1838.27 1135.69 1836.17 1136.22 Q1834.06 1136.76 1832.11 1137.82 L1832.11 1133.89 Q1834.45 1132.98 1836.65 1132.54 Q1838.85 1132.08 1840.93 1132.08 Q1846.56 1132.08 1849.34 1135 Q1852.11 1137.91 1852.11 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1875.91 1136.69 Q1875.19 1136.27 1874.34 1136.09 Q1873.5 1135.88 1872.48 1135.88 Q1868.87 1135.88 1866.93 1138.24 Q1865.01 1140.58 1865.01 1144.97 L1865.01 1158.63 L1860.73 1158.63 L1860.73 1132.71 L1865.01 1132.71 L1865.01 1136.73 Q1866.35 1134.37 1868.5 1133.24 Q1870.66 1132.08 1873.73 1132.08 Q1874.17 1132.08 1874.71 1132.15 Q1875.24 1132.2 1875.89 1132.31 L1875.91 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1896.6 1145.37 Q1896.6 1140.74 1894.68 1138.19 Q1892.79 1135.65 1889.34 1135.65 Q1885.91 1135.65 1883.99 1138.19 Q1882.09 1140.74 1882.09 1145.37 Q1882.09 1149.97 1883.99 1152.52 Q1885.91 1155.07 1889.34 1155.07 Q1892.79 1155.07 1894.68 1152.52 Q1896.6 1149.97 1896.6 1145.37 M1900.86 1155.41 Q1900.86 1162.03 1897.92 1165.25 Q1894.98 1168.49 1888.92 1168.49 Q1886.67 1168.49 1884.68 1168.15 Q1882.69 1167.82 1880.82 1167.13 L1880.82 1162.98 Q1882.69 1164 1884.52 1164.49 Q1886.35 1164.97 1888.25 1164.97 Q1892.44 1164.97 1894.52 1162.78 Q1896.6 1160.6 1896.6 1156.18 L1896.6 1154.07 Q1895.29 1156.36 1893.23 1157.5 Q1891.17 1158.63 1888.29 1158.63 Q1883.53 1158.63 1880.61 1155 Q1877.69 1151.36 1877.69 1145.37 Q1877.69 1139.35 1880.61 1135.72 Q1883.53 1132.08 1888.29 1132.08 Q1891.17 1132.08 1893.23 1133.22 Q1895.29 1134.35 1896.6 1136.64 L1896.6 1132.71 L1900.86 1132.71 L1900.86 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1931.81 1144.6 L1931.81 1146.69 L1912.23 1146.69 Q1912.51 1151.09 1914.87 1153.4 Q1917.25 1155.69 1921.49 1155.69 Q1923.94 1155.69 1926.23 1155.09 Q1928.55 1154.49 1930.82 1153.28 L1930.82 1157.31 Q1928.53 1158.28 1926.12 1158.79 Q1923.71 1159.3 1921.23 1159.3 Q1915.03 1159.3 1911.4 1155.69 Q1907.79 1152.08 1907.79 1145.92 Q1907.79 1139.56 1911.21 1135.83 Q1914.66 1132.08 1920.49 1132.08 Q1925.73 1132.08 1928.76 1135.46 Q1931.81 1138.82 1931.81 1144.6 M1927.55 1143.35 Q1927.51 1139.86 1925.59 1137.78 Q1923.69 1135.69 1920.54 1135.69 Q1916.98 1135.69 1914.82 1137.71 Q1912.69 1139.72 1912.37 1143.38 L1927.55 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1943.02 1125.34 L1943.02 1132.71 L1951.79 1132.71 L1951.79 1136.02 L1943.02 1136.02 L1943.02 1150.09 Q1943.02 1153.26 1943.87 1154.16 Q1944.75 1155.07 1947.41 1155.07 L1951.79 1155.07 L1951.79 1158.63 L1947.41 1158.63 Q1942.48 1158.63 1940.61 1156.8 Q1938.73 1154.95 1938.73 1150.09 L1938.73 1136.02 L1935.61 1136.02 L1935.61 1132.71 L1938.73 1132.71 L1938.73 1125.34 L1943.02 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip480)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1669.53,1193.19 1789.98,1193.19 \"/>\n<path clip-path=\"url(#clip480)\" d=\"M1831.77 1194.82 L1831.77 1210.47 L1827.51 1210.47 L1827.51 1194.96 Q1827.51 1191.28 1826.07 1189.45 Q1824.64 1187.62 1821.77 1187.62 Q1818.32 1187.62 1816.33 1189.82 Q1814.34 1192.02 1814.34 1195.82 L1814.34 1210.47 L1810.05 1210.47 L1810.05 1184.55 L1814.34 1184.55 L1814.34 1188.57 Q1815.86 1186.24 1817.92 1185.08 Q1820.01 1183.92 1822.72 1183.92 Q1827.18 1183.92 1829.48 1186.7 Q1831.77 1189.45 1831.77 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1850.31 1187.53 Q1846.88 1187.53 1844.89 1190.22 Q1842.9 1192.88 1842.9 1197.53 Q1842.9 1202.18 1844.87 1204.87 Q1846.86 1207.53 1850.31 1207.53 Q1853.71 1207.53 1855.7 1204.85 Q1857.69 1202.16 1857.69 1197.53 Q1857.69 1192.93 1855.7 1190.24 Q1853.71 1187.53 1850.31 1187.53 M1850.31 1183.92 Q1855.86 1183.92 1859.04 1187.53 Q1862.21 1191.14 1862.21 1197.53 Q1862.21 1203.9 1859.04 1207.53 Q1855.86 1211.14 1850.31 1211.14 Q1844.73 1211.14 1841.56 1207.53 Q1838.41 1203.9 1838.41 1197.53 Q1838.41 1191.14 1841.56 1187.53 Q1844.73 1183.92 1850.31 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1884.29 1188.53 Q1883.57 1188.11 1882.72 1187.93 Q1881.88 1187.72 1880.86 1187.72 Q1877.25 1187.72 1875.31 1190.08 Q1873.39 1192.42 1873.39 1196.81 L1873.39 1210.47 L1869.11 1210.47 L1869.11 1184.55 L1873.39 1184.55 L1873.39 1188.57 Q1874.73 1186.21 1876.88 1185.08 Q1879.04 1183.92 1882.11 1183.92 Q1882.55 1183.92 1883.09 1183.99 Q1883.62 1184.04 1884.27 1184.15 L1884.29 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1908.11 1189.52 Q1909.71 1186.65 1911.93 1185.29 Q1914.15 1183.92 1917.16 1183.92 Q1921.21 1183.92 1923.41 1186.77 Q1925.61 1189.59 1925.61 1194.82 L1925.61 1210.47 L1921.33 1210.47 L1921.33 1194.96 Q1921.33 1191.24 1920.01 1189.43 Q1918.69 1187.62 1915.98 1187.62 Q1912.67 1187.62 1910.75 1189.82 Q1908.83 1192.02 1908.83 1195.82 L1908.83 1210.47 L1904.54 1210.47 L1904.54 1194.96 Q1904.54 1191.21 1903.23 1189.43 Q1901.91 1187.62 1899.15 1187.62 Q1895.89 1187.62 1893.97 1189.85 Q1892.04 1192.05 1892.04 1195.82 L1892.04 1210.47 L1887.76 1210.47 L1887.76 1184.55 L1892.04 1184.55 L1892.04 1188.57 Q1893.5 1186.19 1895.54 1185.06 Q1897.58 1183.92 1900.38 1183.92 Q1903.2 1183.92 1905.17 1185.36 Q1907.16 1186.79 1908.11 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.028 ± 0.02\n  with uncertainty of ± 0.001246038078732707\n  from 125 blocks after 4 transformations (k = 5).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables. Thankfully, the complications are handled by the following function.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01619 ± (0.00302996, 0.00294165) (MC)\n  95% confidence interval: [-4.02213, -4.01012]) (MC)\n  linear error propagation: -4.01616 ± 0.00298802\n  |δ_y| = |0.00240619| (≤ 0.1 for normal approx)\n  Blocking successful with 15 blocks after 7 transformations (k = 8).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.0161910739066435, val_l = 0.005938790563016383, val_u = 0.006066437487479703)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip510\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip510)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip511\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip510)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip512\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip512)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip512)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip512)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip512)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip510)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip510)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip510)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip510)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip510)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip510)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1220.15 1391.71 L1220.15 1397.25 Q1217.67 1395.98 1214.99 1395.34 Q1212.32 1394.71 1209.46 1394.71 Q1205.1 1394.71 1202.9 1396.04 Q1200.74 1397.38 1200.74 1400.05 Q1200.74 1402.09 1202.3 1403.27 Q1203.85 1404.41 1208.57 1405.46 L1210.57 1405.91 Q1216.81 1407.25 1219.42 1409.7 Q1222.06 1412.12 1222.06 1416.48 Q1222.06 1421.44 1218.11 1424.34 Q1214.2 1427.23 1207.32 1427.23 Q1204.46 1427.23 1201.34 1426.66 Q1198.25 1426.12 1194.82 1425.01 L1194.82 1418.96 Q1198.06 1420.65 1201.21 1421.51 Q1204.36 1422.33 1207.45 1422.33 Q1211.59 1422.33 1213.82 1420.93 Q1216.05 1419.5 1216.05 1416.92 Q1216.05 1414.54 1214.42 1413.26 Q1212.83 1411.99 1207.39 1410.81 L1205.35 1410.33 Q1199.91 1409.19 1197.49 1406.83 Q1195.07 1404.45 1195.07 1400.31 Q1195.07 1395.28 1198.64 1392.54 Q1202.2 1389.8 1208.76 1389.8 Q1212 1389.8 1214.87 1390.28 Q1217.73 1390.76 1220.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1237.18 1380.54 L1237.18 1390.66 L1249.24 1390.66 L1249.24 1395.22 L1237.18 1395.22 L1237.18 1414.57 Q1237.18 1418.93 1238.36 1420.17 Q1239.57 1421.41 1243.23 1421.41 L1249.24 1421.41 L1249.24 1426.31 L1243.23 1426.31 Q1236.45 1426.31 1233.87 1423.8 Q1231.29 1421.25 1231.29 1414.57 L1231.29 1395.22 L1226.99 1395.22 L1226.99 1390.66 L1231.29 1390.66 L1231.29 1380.54 L1237.18 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1287.44 1407.02 L1287.44 1409.89 L1260.51 1409.89 Q1260.89 1415.94 1264.14 1419.12 Q1267.42 1422.27 1273.24 1422.27 Q1276.61 1422.27 1279.77 1421.44 Q1282.95 1420.61 1286.07 1418.96 L1286.07 1424.5 Q1282.92 1425.83 1279.61 1426.53 Q1276.3 1427.23 1272.89 1427.23 Q1264.36 1427.23 1259.36 1422.27 Q1254.4 1417.3 1254.4 1408.84 Q1254.4 1400.08 1259.11 1394.96 Q1263.85 1389.8 1271.87 1389.8 Q1279.07 1389.8 1283.24 1394.45 Q1287.44 1399.07 1287.44 1407.02 M1281.58 1405.3 Q1281.52 1400.5 1278.87 1397.63 Q1276.26 1394.77 1271.94 1394.77 Q1267.03 1394.77 1264.07 1397.54 Q1261.15 1400.31 1260.7 1405.34 L1281.58 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1302.71 1420.96 L1302.71 1439.87 L1296.83 1439.87 L1296.83 1390.66 L1302.71 1390.66 L1302.71 1396.07 Q1304.56 1392.89 1307.36 1391.36 Q1310.19 1389.8 1314.11 1389.8 Q1320.6 1389.8 1324.64 1394.96 Q1328.72 1400.12 1328.72 1408.52 Q1328.72 1416.92 1324.64 1422.08 Q1320.6 1427.23 1314.11 1427.23 Q1310.19 1427.23 1307.36 1425.71 Q1304.56 1424.15 1302.71 1420.96 M1322.64 1408.52 Q1322.64 1402.06 1319.97 1398.4 Q1317.32 1394.71 1312.68 1394.71 Q1308.03 1394.71 1305.36 1398.4 Q1302.71 1402.06 1302.71 1408.52 Q1302.71 1414.98 1305.36 1418.67 Q1308.03 1422.33 1312.68 1422.33 Q1317.32 1422.33 1319.97 1418.67 Q1322.64 1414.98 1322.64 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1361.15 1391.71 L1361.15 1397.25 Q1358.67 1395.98 1356 1395.34 Q1353.32 1394.71 1350.46 1394.71 Q1346.1 1394.71 1343.9 1396.04 Q1341.74 1397.38 1341.74 1400.05 Q1341.74 1402.09 1343.3 1403.27 Q1344.86 1404.41 1349.57 1405.46 L1351.57 1405.91 Q1357.81 1407.25 1360.42 1409.7 Q1363.06 1412.12 1363.06 1416.48 Q1363.06 1421.44 1359.11 1424.34 Q1355.2 1427.23 1348.32 1427.23 Q1345.46 1427.23 1342.34 1426.66 Q1339.25 1426.12 1335.82 1425.01 L1335.82 1418.96 Q1339.06 1420.65 1342.21 1421.51 Q1345.36 1422.33 1348.45 1422.33 Q1352.59 1422.33 1354.82 1420.93 Q1357.05 1419.5 1357.05 1416.92 Q1357.05 1414.54 1355.42 1413.26 Q1353.83 1411.99 1348.39 1410.81 L1346.35 1410.33 Q1340.91 1409.19 1338.49 1406.83 Q1336.07 1404.45 1336.07 1400.31 Q1336.07 1395.28 1339.64 1392.54 Q1343.2 1389.8 1349.76 1389.8 Q1353 1389.8 1355.87 1390.28 Q1358.73 1390.76 1361.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip512)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1153.88 2211.02,1153.88 \"/>\n<polyline clip-path=\"url(#clip512)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1008.55 2211.02,1008.55 \"/>\n<polyline clip-path=\"url(#clip512)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,863.224 2211.02,863.224 \"/>\n<polyline clip-path=\"url(#clip512)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,717.898 2211.02,717.898 \"/>\n<polyline clip-path=\"url(#clip512)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,572.571 2211.02,572.571 \"/>\n<polyline clip-path=\"url(#clip512)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,427.244 2211.02,427.244 \"/>\n<polyline clip-path=\"url(#clip512)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,281.918 2211.02,281.918 \"/>\n<polyline clip-path=\"url(#clip510)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip510)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1153.88 365.751,1153.88 \"/>\n<polyline clip-path=\"url(#clip510)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1008.55 365.751,1008.55 \"/>\n<polyline clip-path=\"url(#clip510)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,863.224 365.751,863.224 \"/>\n<polyline clip-path=\"url(#clip510)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,717.898 365.751,717.898 \"/>\n<polyline clip-path=\"url(#clip510)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,572.571 365.751,572.571 \"/>\n<polyline clip-path=\"url(#clip510)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,427.244 365.751,427.244 \"/>\n<polyline clip-path=\"url(#clip510)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,281.918 365.751,281.918 \"/>\n<path clip-path=\"url(#clip510)\" d=\"M298.909 1139.68 Q295.298 1139.68 293.469 1143.24 Q291.664 1146.78 291.664 1153.91 Q291.664 1161.02 293.469 1164.58 Q295.298 1168.13 298.909 1168.13 Q302.543 1168.13 304.349 1164.58 Q306.177 1161.02 306.177 1153.91 Q306.177 1146.78 304.349 1143.24 Q302.543 1139.68 298.909 1139.68 M298.909 1135.97 Q304.719 1135.97 307.775 1140.58 Q310.853 1145.16 310.853 1153.91 Q310.853 1162.64 307.775 1167.25 Q304.719 1171.83 298.909 1171.83 Q293.099 1171.83 290.02 1167.25 Q286.964 1162.64 286.964 1153.91 Q286.964 1145.16 290.02 1140.58 Q293.099 1135.97 298.909 1135.97 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M259.557 1021.9 L267.196 1021.9 L267.196 995.53 L258.886 997.197 L258.886 992.937 L267.15 991.271 L271.826 991.271 L271.826 1021.9 L279.465 1021.9 L279.465 1025.83 L259.557 1025.83 L259.557 1021.9 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M298.909 994.349 Q295.298 994.349 293.469 997.914 Q291.664 1001.46 291.664 1008.59 Q291.664 1015.69 293.469 1019.26 Q295.298 1022.8 298.909 1022.8 Q302.543 1022.8 304.349 1019.26 Q306.177 1015.69 306.177 1008.59 Q306.177 1001.46 304.349 997.914 Q302.543 994.349 298.909 994.349 M298.909 990.646 Q304.719 990.646 307.775 995.252 Q310.853 999.836 310.853 1008.59 Q310.853 1017.31 307.775 1021.92 Q304.719 1026.5 298.909 1026.5 Q293.099 1026.5 290.02 1021.92 Q286.964 1017.31 286.964 1008.59 Q286.964 999.836 290.02 995.252 Q293.099 990.646 298.909 990.646 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M262.775 876.569 L279.094 876.569 L279.094 880.504 L257.15 880.504 L257.15 876.569 Q259.812 873.814 264.395 869.185 Q269.002 864.532 270.182 863.189 Q272.428 860.666 273.307 858.93 Q274.21 857.171 274.21 855.481 Q274.21 852.727 272.266 850.99 Q270.344 849.254 267.242 849.254 Q265.043 849.254 262.59 850.018 Q260.159 850.782 257.381 852.333 L257.381 847.611 Q260.205 846.477 262.659 845.898 Q265.113 845.319 267.15 845.319 Q272.52 845.319 275.715 848.004 Q278.909 850.69 278.909 855.18 Q278.909 857.31 278.099 859.231 Q277.312 861.129 275.205 863.722 Q274.627 864.393 271.525 867.611 Q268.423 870.805 262.775 876.569 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M298.909 849.023 Q295.298 849.023 293.469 852.588 Q291.664 856.129 291.664 863.259 Q291.664 870.365 293.469 873.93 Q295.298 877.472 298.909 877.472 Q302.543 877.472 304.349 873.93 Q306.177 870.365 306.177 863.259 Q306.177 856.129 304.349 852.588 Q302.543 849.023 298.909 849.023 M298.909 845.319 Q304.719 845.319 307.775 849.926 Q310.853 854.509 310.853 863.259 Q310.853 871.986 307.775 876.592 Q304.719 881.175 298.909 881.175 Q293.099 881.175 290.02 876.592 Q286.964 871.986 286.964 863.259 Q286.964 854.509 290.02 849.926 Q293.099 845.319 298.909 845.319 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M272.914 716.543 Q276.27 717.261 278.145 719.529 Q280.043 721.798 280.043 725.131 Q280.043 730.247 276.525 733.048 Q273.006 735.849 266.525 735.849 Q264.349 735.849 262.034 735.409 Q259.742 734.992 257.289 734.136 L257.289 729.622 Q259.233 730.756 261.548 731.335 Q263.863 731.914 266.386 731.914 Q270.784 731.914 273.076 730.178 Q275.39 728.441 275.39 725.131 Q275.39 722.076 273.238 720.363 Q271.108 718.627 267.289 718.627 L263.261 718.627 L263.261 714.784 L267.474 714.784 Q270.923 714.784 272.752 713.418 Q274.58 712.03 274.58 709.437 Q274.58 706.775 272.682 705.363 Q270.807 703.928 267.289 703.928 Q265.367 703.928 263.168 704.344 Q260.969 704.761 258.33 705.641 L258.33 701.474 Q260.992 700.733 263.307 700.363 Q265.645 699.993 267.705 699.993 Q273.029 699.993 276.131 702.423 Q279.233 704.83 279.233 708.951 Q279.233 711.821 277.59 713.812 Q275.946 715.779 272.914 716.543 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M298.909 703.696 Q295.298 703.696 293.469 707.261 Q291.664 710.803 291.664 717.932 Q291.664 725.039 293.469 728.604 Q295.298 732.145 298.909 732.145 Q302.543 732.145 304.349 728.604 Q306.177 725.039 306.177 717.932 Q306.177 710.803 304.349 707.261 Q302.543 703.696 298.909 703.696 M298.909 699.993 Q304.719 699.993 307.775 704.599 Q310.853 709.182 310.853 717.932 Q310.853 726.659 307.775 731.266 Q304.719 735.849 298.909 735.849 Q293.099 735.849 290.02 731.266 Q286.964 726.659 286.964 717.932 Q286.964 709.182 290.02 704.599 Q293.099 699.993 298.909 699.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M271.594 559.365 L259.789 577.814 L271.594 577.814 L271.594 559.365 M270.367 555.291 L276.247 555.291 L276.247 577.814 L281.177 577.814 L281.177 581.703 L276.247 581.703 L276.247 589.851 L271.594 589.851 L271.594 581.703 L255.992 581.703 L255.992 577.189 L270.367 555.291 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M298.909 558.37 Q295.298 558.37 293.469 561.934 Q291.664 565.476 291.664 572.606 Q291.664 579.712 293.469 583.277 Q295.298 586.819 298.909 586.819 Q302.543 586.819 304.349 583.277 Q306.177 579.712 306.177 572.606 Q306.177 565.476 304.349 561.934 Q302.543 558.37 298.909 558.37 M298.909 554.666 Q304.719 554.666 307.775 559.272 Q310.853 563.856 310.853 572.606 Q310.853 581.332 307.775 585.939 Q304.719 590.522 298.909 590.522 Q293.099 590.522 290.02 585.939 Q286.964 581.332 286.964 572.606 Q286.964 563.856 290.02 559.272 Q293.099 554.666 298.909 554.666 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M258.793 409.964 L277.15 409.964 L277.15 413.899 L263.076 413.899 L263.076 422.372 Q264.094 422.024 265.113 421.862 Q266.131 421.677 267.15 421.677 Q272.937 421.677 276.316 424.848 Q279.696 428.02 279.696 433.436 Q279.696 439.015 276.224 442.117 Q272.752 445.196 266.432 445.196 Q264.256 445.196 261.988 444.825 Q259.742 444.455 257.335 443.714 L257.335 439.015 Q259.418 440.149 261.641 440.705 Q263.863 441.26 266.34 441.26 Q270.344 441.26 272.682 439.154 Q275.02 437.047 275.02 433.436 Q275.02 429.825 272.682 427.719 Q270.344 425.612 266.34 425.612 Q264.465 425.612 262.59 426.029 Q260.738 426.446 258.793 427.325 L258.793 409.964 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M298.909 413.043 Q295.298 413.043 293.469 416.608 Q291.664 420.149 291.664 427.279 Q291.664 434.385 293.469 437.95 Q295.298 441.492 298.909 441.492 Q302.543 441.492 304.349 437.95 Q306.177 434.385 306.177 427.279 Q306.177 420.149 304.349 416.608 Q302.543 413.043 298.909 413.043 M298.909 409.339 Q304.719 409.339 307.775 413.946 Q310.853 418.529 310.853 427.279 Q310.853 436.006 307.775 440.612 Q304.719 445.196 298.909 445.196 Q293.099 445.196 290.02 440.612 Q286.964 436.006 286.964 427.279 Q286.964 418.529 290.02 413.946 Q293.099 409.339 298.909 409.339 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M269.326 280.054 Q266.178 280.054 264.326 282.207 Q262.497 284.36 262.497 288.11 Q262.497 291.837 264.326 294.012 Q266.178 296.165 269.326 296.165 Q272.474 296.165 274.303 294.012 Q276.154 291.837 276.154 288.11 Q276.154 284.36 274.303 282.207 Q272.474 280.054 269.326 280.054 M278.608 265.402 L278.608 269.661 Q276.849 268.827 275.043 268.388 Q273.261 267.948 271.502 267.948 Q266.872 267.948 264.418 271.073 Q261.988 274.198 261.641 280.517 Q263.006 278.503 265.066 277.439 Q267.127 276.351 269.603 276.351 Q274.812 276.351 277.821 279.522 Q280.853 282.67 280.853 288.11 Q280.853 293.434 277.705 296.651 Q274.557 299.869 269.326 299.869 Q263.33 299.869 260.159 295.286 Q256.988 290.679 256.988 281.952 Q256.988 273.758 260.877 268.897 Q264.766 264.013 271.316 264.013 Q273.076 264.013 274.858 264.36 Q276.664 264.707 278.608 265.402 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M298.909 267.716 Q295.298 267.716 293.469 271.281 Q291.664 274.823 291.664 281.952 Q291.664 289.059 293.469 292.624 Q295.298 296.165 298.909 296.165 Q302.543 296.165 304.349 292.624 Q306.177 289.059 306.177 281.952 Q306.177 274.823 304.349 271.281 Q302.543 267.716 298.909 267.716 M298.909 264.013 Q304.719 264.013 307.775 268.619 Q310.853 273.202 310.853 281.952 Q310.853 290.679 307.775 295.286 Q304.719 299.869 298.909 299.869 Q293.099 299.869 290.02 295.286 Q286.964 290.679 286.964 281.952 Q286.964 273.202 290.02 268.619 Q293.099 264.013 298.909 264.013 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip512)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1046.8 400.199,1060.66 400.786,964.711 401.372,876.675 401.958,794.224 402.545,718.791 403.131,653.461 403.718,592.081 404.304,534.733 404.891,485.935 405.477,440.231 406.063,399.14 406.65,362.364 407.236,329.623 407.823,300.655 408.409,276.772 408.995,254.537 409.582,235.384 410.168,219.895 410.755,254.789 411.341,285.838 411.927,313.778 412.514,339.199 413.1,330.232 413.687,322.764 414.273,317.281 414.86,313.03 415.446,310.454 416.032,310.513 416.619,310.864 417.205,334.533 417.792,358.702 418.378,362.422 418.964,366.881 419.551,372.605 420.137,410.714 420.724,418.544 421.31,441.359 421.896,448.977 422.483,457.95 423.069,466.794 423.656,498.174 424.242,507.587 424.829,527.195 425.415,537.274 426.001,565.725 426.588,591.841 427.174,609.671 427.761,619.514 428.347,629.831 428.933,646.823 429.52,669.326 430.106,690.899 430.693,711.335 431.279,719.357 431.865,727.376 432.452,735.493 433.038,748.506 433.625,771.12 434.211,783.102 434.798,795.131 435.384,806.737 435.97,814.227 436.557,829.889 437.143,844.986 437.73,858.854 438.316,872.476 438.902,881.922 439.489,894.786 440.075,903.655 440.662,912.365 441.248,921.306 441.835,929.664 442.421,941.079 443.007,954.899 443.594,962.659 444.18,972.855 444.767,982.72 445.353,987.606 445.939,1000.07 446.526,1009.15 447.112,1015.99 447.699,1027.1 448.285,1035.74 448.871,1050.56 449.458,1055.62 450.044,1065.15 450.631,1067.59 451.217,1070.3 451.804,1073.46 452.39,1078.32 452.976,1083.17 453.563,1087.73 454.149,1092.17 454.736,1096.76 455.322,1099.32 455.908,1101.67 456.495,1104.25 457.081,1110.48 457.668,1112.86 458.254,1115.31 458.84,1120.98 459.427,1123.13 460.013,1125.43 460.6,1129.58 461.186,1131.84 461.773,1135.54 462.359,1142.54 462.945,1144.42 463.532,1146.2 464.118,1149.59 464.705,1150.95 465.291,1153.89 465.877,1153.67 466.464,1160.4 467.05,1163.64 467.637,1166.89 468.223,1169.68 468.809,1173.76 469.396,1177.78 469.982,1180.22 470.569,1181.31 471.155,1182.01 471.742,1184.65 472.328,1185.48 472.914,1187.83 473.501,1189.96 474.087,1190.69 474.674,1194.32 475.26,1195.04 475.846,1197.09 476.433,1200.8 477.019,1201.4 477.606,1204.97 478.192,1205.36 478.778,1208.56 479.365,1208.9 479.951,1210.75 480.538,1211.38 481.124,1211.86 481.711,1215.11 482.297,1215.33 482.883,1219.69 483.47,1222.78 484.056,1223.97 484.643,1226.35 485.229,1226.54 485.815,1227.59 486.402,1228.75 486.988,1228.24 487.575,1228 488.161,1229.02 488.748,1230.47 489.334,1232.77 489.92,1234.59 490.507,1234.26 491.093,1233.89 491.68,1231.88 492.266,1231.32 492.852,1229.73 493.439,1229.64 494.025,1233.2 494.612,1231.65 495.198,1234.13 495.784,1235.12 496.371,1237.39 496.957,1242 497.544,1241.44 498.13,1244.6 498.717,1245.06 499.303,1244.39 499.889,1243.42 500.476,1241.23 501.062,1241.77 501.649,1239.83 502.235,1243.21 502.821,1243.79 503.408,1244.52 503.994,1245.18 504.581,1244.37 505.167,1243.5 505.753,1243.86 506.34,1244.71 506.926,1246.39 507.513,1247 508.099,1244.97 508.686,1247.88 509.272,1247.04 509.858,1246.24 510.445,1244.18 511.031,1247.37 511.618,1247.84 512.204,1247.91 512.79,1250.53 513.377,1249.31 513.963,1248.37 514.55,1247.48 515.136,1244.22 515.722,1243.68 516.309,1243.12 516.895,1242.5 517.482,1241.76 518.068,1243.68 518.655,1244.14 519.241,1243.28 519.827,1242.51 520.414,1240.87 521,1240.32 521.587,1238.76 522.173,1239.53 522.759,1241.54 523.346,1244.71 523.932,1242.71 524.519,1243.42 525.105,1244.04 525.691,1243.42 526.278,1242.89 526.864,1242.38 527.451,1241.9 528.037,1242.54 528.624,1243.09 529.21,1243.51 529.796,1242.81 530.383,1243.33 530.969,1241.36 531.556,1241.8 532.142,1242.41 532.728,1241.55 533.315,1241.07 533.901,1240.43 534.488,1238.56 535.074,1238.4 535.661,1236.37 536.247,1236.08 536.833,1234.5 537.42,1235.39 538.006,1237.36 538.593,1239.29 539.179,1240.13 539.765,1239.38 540.352,1240.03 540.938,1238.4 541.525,1237.88 542.111,1237.58 542.697,1238.32 543.284,1239.19 543.87,1236.46 544.457,1238.39 545.043,1238.97 545.63,1238.53 546.216,1236.82 546.802,1237.75 547.389,1236.28 547.975,1235.97 548.562,1235.57 549.148,1235.35 549.734,1235.16 550.321,1233.58 550.907,1232.07 551.494,1233.1 552.08,1234.01 552.666,1233.83 553.253,1233.63 553.839,1233.3 554.426,1230.94 555.012,1229.55 555.599,1229.68 556.185,1230.74 556.771,1230.64 557.358,1230.68 557.944,1231.59 558.531,1230.2 559.117,1230.08 559.703,1232.17 560.29,1232.98 560.876,1236.27 561.463,1235.6 562.049,1235.27 562.635,1235.82 563.222,1237.76 563.808,1237.25 564.395,1236.61 564.981,1234.92 565.568,1235.74 566.154,1235.33 566.74,1234.91 567.327,1235.49 567.913,1233.92 568.5,1236.97 569.086,1235.2 569.672,1235.89 570.259,1237.82 570.845,1236.12 571.432,1235.73 572.018,1236.34 572.605,1234.74 573.191,1233.12 573.777,1234.14 574.364,1235.04 574.95,1234.56 575.537,1233 576.123,1233.86 576.709,1234.71 577.296,1234.32 577.882,1236.07 578.469,1235.54 579.055,1234.81 579.641,1232 580.228,1234.05 580.814,1236 581.401,1235.32 581.987,1234.98 582.574,1235.72 583.16,1235.29 583.746,1235.81 584.333,1236.18 584.919,1235.58 585.506,1237.38 586.092,1236.59 586.678,1234.7 587.265,1233.12 587.851,1232.46 588.438,1230.86 589.024,1230.58 589.61,1229.13 590.197,1230.09 590.783,1232.17 591.37,1230.51 591.956,1227.79 592.543,1227.66 593.129,1227.46 593.715,1228.62 594.302,1228.63 594.888,1227.08 595.475,1228.15 596.061,1225.58 596.647,1225.41 597.234,1224.12 597.82,1222.81 598.407,1222.57 598.993,1221.34 599.579,1221.55 600.166,1222.92 600.752,1225.27 601.339,1225.2 601.925,1228.41 602.512,1229.38 603.098,1228.89 603.684,1228.35 604.271,1227.08 604.857,1225.48 605.444,1227.94 606.03,1228.76 606.616,1226.19 607.203,1225.99 607.789,1225.65 608.376,1226.77 608.962,1229 609.548,1229.88 610.135,1228.55 610.721,1227.24 611.308,1228.17 611.894,1225.52 612.481,1225.42 613.067,1221.69 613.653,1224.07 614.24,1225.11 614.826,1223.67 615.413,1223.86 615.999,1225.03 616.585,1223.75 617.172,1222.53 617.758,1224.88 618.345,1227.17 618.931,1229.07 619.518,1228.52 620.104,1228.08 620.69,1227.67 621.277,1228.4 621.863,1228.04 622.45,1227.76 623.036,1227.18 623.622,1225.64 624.209,1225.43 624.795,1228.46 625.382,1230.35 625.968,1229.88 626.554,1229.52 627.141,1231.37 627.727,1229.82 628.314,1229.19 628.9,1231.11 629.487,1231.71 630.073,1231.15 630.659,1230.6 631.246,1231.12 631.832,1229.37 632.419,1230.18 633.005,1230.99 633.591,1234.24 634.178,1232.4 634.764,1230.53 635.351,1230 635.937,1227.14 636.523,1224.35 637.11,1224.13 637.696,1226.06 638.283,1226.01 638.869,1224.59 639.456,1220.67 640.042,1221.67 640.628,1221.59 641.215,1221.53 641.801,1218.82 642.388,1220.05 642.974,1221.31 643.56,1222.3 644.147,1219.85 644.733,1220.83 645.32,1219.65 645.906,1221.95 646.492,1222 647.079,1221.03 647.665,1221.11 648.252,1221.37 648.838,1223.57 649.425,1223.36 650.011,1224.4 650.597,1225.44 651.184,1226.46 651.77,1227.35 652.357,1222 652.943,1222.74 653.529,1221.41 654.116,1221.25 654.702,1220.08 655.289,1220.04 655.875,1221.31 656.462,1219.96 657.048,1218.51 657.634,1218.44 658.221,1217.26 658.807,1214.73 659.394,1217 659.98,1218.14 660.566,1219.46 661.153,1217.27 661.739,1217.33 662.326,1217.33 662.912,1218.57 663.498,1218.57 664.085,1215.12 664.671,1215.37 665.258,1216.94 665.844,1215.94 666.431,1217.29 667.017,1217.12 667.603,1217.1 668.19,1218.21 668.776,1218.13 669.363,1217.91 669.949,1218.08 670.535,1217 671.122,1216.9 671.708,1220.45 672.295,1220.42 672.881,1218.14 673.467,1219.31 674.054,1220.44 674.64,1219.07 675.227,1220 675.813,1222.12 676.4,1223.09 676.986,1223.78 677.572,1221.05 678.159,1219.69 678.745,1220.7 679.332,1222.89 679.918,1222.54 680.504,1224.62 681.091,1225.46 681.677,1225.01 682.264,1226.97 682.85,1226.36 683.436,1224.73 684.023,1224.32 684.609,1224.12 685.196,1222.83 685.782,1219.84 686.369,1220.74 686.955,1221.9 687.541,1221.85 688.128,1220.74 688.714,1220.53 689.301,1222.86 689.887,1220.3 690.473,1221.36 691.06,1223.67 691.646,1223.19 692.233,1221.68 692.819,1221.55 693.405,1221.31 693.992,1220.98 694.578,1219.75 695.165,1218.39 695.751,1219.49 696.338,1220.46 696.924,1217.69 697.51,1217.58 698.097,1218.7 698.683,1217.59 699.27,1218.7 699.856,1218.34 700.442,1217.03 701.029,1215.76 701.615,1217.09 702.202,1218.4 702.788,1218.2 703.375,1219.42 703.961,1220.54 704.547,1218.97 705.134,1217.74 705.72,1217.66 706.307,1217.67 706.893,1216.62 707.479,1216.67 708.066,1215.5 708.652,1214.61 709.239,1215.96 709.825,1214.86 710.411,1216.1 710.998,1216.33 711.584,1215.12 712.171,1215.28 712.757,1214.28 713.344,1215.59 713.93,1214.02 714.516,1212.88 715.103,1215.75 715.689,1218.23 716.276,1219.48 716.862,1220.43 717.448,1217.98 718.035,1217.82 718.621,1218.78 719.208,1217.48 719.794,1217.3 720.38,1217.31 720.967,1216.02 721.553,1217.31 722.14,1218.45 722.726,1219.65 723.313,1220.94 723.899,1218.3 724.485,1218.27 725.072,1217.24 725.658,1217.19 726.245,1218.51 726.831,1218.58 727.417,1218.57 728.004,1218.71 728.59,1218.66 729.177,1219.63 729.763,1223.41 730.349,1223.11 730.936,1223.71 731.522,1219.57 732.109,1219.82 732.695,1219.65 733.282,1217.42 733.868,1217.55 734.454,1215.93 735.041,1219.49 735.627,1219.49 736.214,1221.6 736.8,1221.34 737.386,1222.18 737.973,1221.9 738.559,1221.42 739.146,1224.43 739.732,1222.77 740.318,1223.37 740.905,1223.12 741.491,1223.86 742.078,1221.15 742.664,1220.98 743.251,1219.83 743.837,1220.69 744.423,1221.36 745.01,1222.17 745.596,1221.87 746.183,1220.5 746.769,1220.39 747.355,1218.92 747.942,1218.68 748.528,1218.62 749.115,1217.16 749.701,1217.18 750.288,1216 750.874,1217.29 751.46,1215.98 752.047,1215.93 752.633,1214.83 753.22,1214.12 753.806,1215.41 754.392,1215.6 754.979,1215.67 755.565,1215.83 756.152,1217.95 756.738,1219.96 757.324,1222.08 757.911,1220.6 758.497,1220.53 759.084,1221.32 759.67,1220.9 760.257,1221.78 760.843,1223.79 761.429,1220.03 762.016,1217.61 762.602,1216.37 763.189,1216.18 763.775,1216.2 764.361,1216.13 764.948,1216.23 765.534,1216.16 766.121,1216.23 766.707,1215.04 767.293,1214.85 767.88,1215 768.466,1215.2 769.053,1215.24 769.639,1214.23 770.226,1215.53 770.812,1214.35 771.398,1212.17 771.985,1211.16 772.571,1210.22 773.158,1211.56 773.744,1214.19 774.33,1218.91 774.917,1217.3 775.503,1218.25 776.09,1218.06 776.676,1217.72 777.262,1217.76 777.849,1216.21 778.435,1215.05 779.022,1215.35 779.608,1215.64 780.195,1215.86 780.781,1218.02 781.367,1217.88 781.954,1217.73 782.54,1217.68 783.127,1216.39 783.713,1213.84 784.299,1215 784.886,1216.11 785.472,1214.87 786.059,1217.11 786.645,1216.99 787.232,1219.16 787.818,1218.77 788.404,1219.69 788.991,1220.69 789.577,1220.42 790.164,1221.2 790.75,1220.72 791.336,1217.95 791.923,1216.5 792.509,1218.67 793.096,1219.71 793.682,1219.36 794.268,1220.51 794.855,1219.06 795.441,1216.5 796.028,1216.48 796.614,1216.35 797.201,1216.41 797.787,1219.85 798.373,1219.51 798.96,1218.29 799.546,1214.82 800.133,1213.61 800.719,1212.43 801.305,1212.5 801.892,1213.89 802.478,1213.91 803.065,1213.96 803.651,1214.17 804.237,1216.44 804.824,1216.24 805.41,1217.34 805.997,1218.14 806.583,1218.2 807.17,1218.34 807.756,1216.84 808.342,1216.69 808.929,1215.73 809.515,1216.94 810.102,1219.19 810.688,1218.83 811.274,1219.69 811.861,1221.57 812.447,1224.98 813.034,1222.1 813.62,1221.78 814.206,1221.57 814.793,1222.18 815.379,1222.92 815.966,1220.09 816.552,1220.11 817.139,1218.62 817.725,1217.18 818.311,1215.8 818.898,1215.88 819.484,1214.61 820.071,1212.4 820.657,1212.47 821.243,1211.17 821.83,1211.48 822.416,1211.63 823.003,1210.8 823.589,1208.53 824.175,1209.99 824.762,1210.33 825.348,1211.88 825.935,1212.05 826.521,1212.26 827.108,1211.17 827.694,1213.89 828.28,1214.08 828.867,1213.86 829.453,1213.76 830.04,1212.56 830.626,1212.58 831.212,1213.77 831.799,1212.38 832.385,1212.55 832.972,1212.74 833.558,1216.26 834.145,1217.26 834.731,1218.49 835.317,1219.42 835.904,1219.36 836.49,1217.72 837.077,1218.79 837.663,1219.53 838.249,1218.04 838.836,1215.49 839.422,1216.65 840.009,1215.48 840.595,1215.39 841.181,1216.6 841.768,1215.21 842.354,1215.15 842.941,1215.02 843.527,1216.14 844.114,1216.26 844.7,1217.41 845.286,1219.64 845.873,1218.38 846.459,1219.32 847.046,1218.83 847.632,1220.73 848.218,1217.81 848.805,1216.41 849.391,1215.18 849.978,1215.08 850.564,1216.14 851.15,1218.41 851.737,1217.13 852.323,1214.52 852.91,1214.41 853.496,1215.62 854.083,1213.13 854.669,1211.97 855.255,1213.04 855.842,1210.82 856.428,1210.87 857.015,1212.09 857.601,1212.93 858.187,1210.68 858.774,1210.86 859.36,1209.65 859.947,1209.77 860.533,1209.88 861.119,1207.85 861.706,1205.76 862.292,1207.43 862.879,1209.13 863.465,1208.05 864.052,1207.39 864.638,1206.65 865.224,1209.58 865.811,1209.74 866.397,1209.95 866.984,1209.12 867.57,1206.96 868.156,1207.28 868.743,1208.97 869.329,1210.57 869.916,1209.56 870.502,1208.55 871.089,1208.68 871.675,1207.87 872.261,1205.66 872.848,1206.09 873.434,1208.94 874.021,1211.57 874.607,1211.64 875.193,1215.34 875.78,1212.85 876.366,1212.55 876.953,1212.36 877.539,1213.67 878.125,1214.72 878.712,1218.17 879.298,1218.17 879.885,1219.33 880.471,1217.88 881.058,1216.43 881.644,1216.06 882.23,1214.74 882.817,1213.61 883.403,1213.64 883.99,1214.86 884.576,1213.21 885.162,1213.23 885.749,1215.52 886.335,1216.61 886.922,1217.47 887.508,1216.24 888.094,1219.57 888.681,1219.17 889.267,1217.9 889.854,1217.69 890.44,1219.89 891.027,1219.62 891.613,1218 892.199,1219.02 892.786,1218.77 893.372,1219.77 893.959,1219.3 894.545,1219.02 895.131,1218.58 895.718,1217.26 896.304,1214.77 896.891,1216.85 897.477,1216.61 898.063,1215.3 898.65,1216.42 899.236,1215.24 899.823,1217.68 900.409,1217.31 900.996,1217.04 901.582,1215.72 902.168,1215.7 902.755,1215.66 903.341,1215.66 903.928,1216.62 904.514,1215.36 905.1,1215.44 905.687,1215.39 906.273,1216.41 906.86,1214.11 907.446,1216.45 908.032,1218.75 908.619,1218.35 909.205,1221.78 909.792,1218.99 910.378,1216.41 910.965,1216.24 911.551,1213.82 912.137,1212.55 912.724,1211.27 913.31,1212.61 913.897,1212.85 914.483,1215.28 915.069,1216.55 915.656,1217.82 916.242,1220.06 916.829,1218.52 917.415,1218.4 918.002,1215.79 918.588,1216.76 919.174,1218.02 919.761,1216.65 920.347,1220.06 920.934,1218.54 921.52,1218.23 922.106,1218.97 922.693,1217.46 923.279,1216.25 923.866,1218.29 924.452,1215.41 925.038,1215.3 925.625,1216.51 926.211,1218.56 926.798,1215.99 927.384,1219.14 927.971,1219.95 928.557,1220.94 929.143,1219.41 929.73,1218.06 930.316,1218 930.903,1216.43 931.489,1215.07 932.075,1216.28 932.662,1213.74 933.248,1216.95 933.835,1216.83 934.421,1215.65 935.007,1215.48 935.594,1212.67 936.18,1211.38 936.767,1211.28 937.353,1210.09 937.94,1210.23 938.526,1210.24 939.112,1208.06 939.699,1207.17 940.285,1208.36 940.872,1207.4 941.458,1207.34 942.044,1206.49 942.631,1207.94 943.217,1210.55 943.804,1208.45 944.39,1208.96 944.976,1211.57 945.563,1211.63 946.149,1212.98 946.736,1216.35 947.322,1217.41 947.909,1218.46 948.495,1218.45 949.081,1215.93 949.668,1214.71 950.254,1213.48 950.841,1208.91 951.427,1210 952.013,1207.93 952.6,1208.22 953.186,1208.42 953.773,1208.72 954.359,1207.95 954.945,1208.09 955.532,1209.58 956.118,1211.08 956.705,1211.02 957.291,1211.07 957.878,1209.91 958.464,1209.75 959.05,1208.79 959.637,1211.46 960.223,1212.91 960.81,1213.83 961.396,1211.47 961.982,1211.48 962.569,1210.48 963.155,1210.7 963.742,1210.81 964.328,1210.79 964.915,1213.36 965.501,1214.57 966.087,1214.68 966.674,1214.57 967.26,1215.76 967.847,1215.72 968.433,1214.53 969.019,1214.58 969.606,1213.42 970.192,1212.37 970.779,1213.57 971.365,1214.73 971.951,1214.64 972.538,1213.25 973.124,1213.29 973.711,1212.01 974.297,1212.25 974.884,1211.13 975.47,1211.11 976.056,1212.43 976.643,1212.53 977.229,1209.15 977.816,1211.83 978.402,1214.26 978.988,1214.31 979.575,1215.29 980.161,1214.19 980.748,1217.69 981.334,1216.46 981.92,1218.5 982.507,1217.2 983.093,1217.16 983.68,1217.03 984.266,1216.7 984.853,1214.14 985.439,1209.32 986.025,1208.28 986.612,1208.57 987.198,1210 987.785,1210.13 988.371,1213.81 988.957,1212.24 989.544,1214.42 990.13,1210.69 990.717,1209.68 991.303,1209.89 991.889,1210.15 992.476,1209.01 993.062,1210.2 993.649,1210.45 994.235,1211.56 994.822,1210.25 995.408,1212.86 995.994,1211.52 996.581,1210.31 997.167,1210.36 997.754,1208.23 998.34,1208.44 998.926,1211.02 999.513,1212.19 1000.1,1211.13 1000.69,1212.36 1001.27,1217.02 1001.86,1216.65 1002.44,1217.55 1003.03,1219.83 1003.62,1218.14 1004.2,1216.74 1004.79,1218.67 1005.38,1218.24 1005.96,1217.8 1006.55,1217.48 1007.14,1217.2 1007.72,1215.88 1008.31,1214.31 1008.9,1210.59 1009.48,1210.64 1010.07,1210.56 1010.65,1208.38 1011.24,1209.97 1011.83,1211.05 1012.41,1212.54 1013,1213.8 1013.59,1213.72 1014.17,1215.05 1014.76,1216.38 1015.35,1213.86 1015.93,1211.37 1016.52,1210.27 1017.11,1210.65 1017.69,1210.71 1018.28,1212.01 1018.86,1212.01 1019.45,1209.64 1020.04,1208.59 1020.62,1208.83 1021.21,1207.79 1021.8,1208.13 1022.38,1209.37 1022.97,1209.71 1023.56,1207.38 1024.14,1208.88 1024.73,1211.6 1025.32,1210.49 1025.9,1210.45 1026.49,1209.49 1027.07,1210.62 1027.66,1212.03 1028.25,1213.11 1028.83,1211.93 1029.42,1210.74 1030.01,1214.47 1030.59,1211.93 1031.18,1210.82 1031.77,1209.67 1032.35,1209.4 1032.94,1209.57 1033.52,1211.13 1034.11,1213.31 1034.7,1212.17 1035.28,1212.24 1035.87,1212.22 1036.46,1210.07 1037.04,1212.7 1037.63,1217.34 1038.22,1216.73 1038.8,1215.73 1039.39,1216.66 1039.98,1219.01 1040.56,1217.6 1041.15,1218.56 1041.73,1220.84 1042.32,1221.8 1042.91,1220.18 1043.49,1218.54 1044.08,1218.21 1044.67,1220.65 1045.25,1216.85 1045.84,1215.74 1046.43,1214.53 1047.01,1214.46 1047.6,1215.62 1048.19,1215.23 1048.77,1218.8 1049.36,1220.86 1049.94,1221.74 1050.53,1221.34 1051.12,1220.92 1051.7,1217.02 1052.29,1216.88 1052.88,1216.59 1053.46,1214.02 1054.05,1212.75 1054.64,1210.18 1055.22,1209.94 1055.81,1208.99 1056.39,1209.28 1056.98,1209.79 1057.57,1211 1058.15,1212.3 1058.74,1211.12 1059.33,1213.67 1059.91,1211.27 1060.5,1211.05 1061.09,1212.39 1061.67,1213.55 1062.26,1215.88 1062.85,1216.74 1063.43,1215.33 1064.02,1216.13 1064.6,1215.87 1065.19,1215.67 1065.78,1217.87 1066.36,1219.15 1066.95,1218.94 1067.54,1220.71 1068.12,1221.52 1068.71,1221.02 1069.3,1218.34 1069.88,1219.24 1070.47,1221.41 1071.06,1222.2 1071.64,1219.32 1072.23,1222.38 1072.81,1220.77 1073.4,1220.3 1073.99,1220.83 1074.57,1223.03 1075.16,1222.44 1075.75,1220.64 1076.33,1221.42 1076.92,1220.12 1077.51,1217.24 1078.09,1215.75 1078.68,1214.3 1079.26,1215.36 1079.85,1216.49 1080.44,1214.94 1081.02,1215.94 1081.61,1212.35 1082.2,1213.57 1082.78,1213.27 1083.37,1214.46 1083.96,1215.66 1084.54,1214.17 1085.13,1213.99 1085.72,1213.78 1086.3,1213.66 1086.89,1210.12 1087.47,1210.25 1088.06,1209.08 1088.65,1209.08 1089.23,1208.86 1089.82,1207.96 1090.41,1209.61 1090.99,1209.78 1091.58,1206.34 1092.17,1204.07 1092.75,1205.97 1093.34,1205.14 1093.93,1203.33 1094.51,1205.23 1095.1,1204.49 1095.68,1204.93 1096.27,1206.57 1096.86,1205.7 1097.44,1207.18 1098.03,1207.28 1098.62,1208.62 1099.2,1209.94 1099.79,1211.38 1100.38,1209.06 1100.96,1208.1 1101.55,1209.65 1102.14,1209.88 1102.72,1207.59 1103.31,1206.57 1103.89,1205.7 1104.48,1207.28 1105.07,1209.83 1105.65,1211.1 1106.24,1208.92 1106.83,1207.69 1107.41,1209.04 1108,1208.13 1108.59,1207.53 1109.17,1207.82 1109.76,1209.26 1110.34,1209.46 1110.93,1209.53 1111.52,1212.05 1112.1,1208.57 1112.69,1212.37 1113.28,1210.04 1113.86,1211.16 1114.45,1211 1115.04,1212.14 1115.62,1214.32 1116.21,1215.4 1116.8,1212.93 1117.38,1213.01 1117.97,1209.43 1118.55,1209.82 1119.14,1209.94 1119.73,1207.98 1120.31,1206.97 1120.9,1207.35 1121.49,1206.44 1122.07,1206.84 1122.66,1209.7 1123.25,1212.13 1123.83,1213.46 1124.42,1214.82 1125.01,1216.11 1125.59,1216.07 1126.18,1216.08 1126.76,1214.7 1127.35,1213.55 1127.94,1213.54 1128.52,1215.86 1129.11,1214.46 1129.7,1214.66 1130.28,1214.41 1130.87,1217.86 1131.46,1218.85 1132.04,1217.42 1132.63,1217.14 1133.21,1218.07 1133.8,1217.8 1134.39,1215.17 1134.97,1213.76 1135.56,1215.05 1136.15,1214.92 1136.73,1214.79 1137.32,1213.39 1137.91,1213.01 1138.49,1210.43 1139.08,1211.57 1139.67,1215.37 1140.25,1216.53 1140.84,1216.55 1141.42,1217.37 1142.01,1214.69 1142.6,1215.97 1143.18,1218.07 1143.77,1217.71 1144.36,1217.48 1144.94,1217.32 1145.53,1216.03 1146.12,1215.81 1146.7,1214.39 1147.29,1213.32 1147.88,1214.17 1148.46,1215.05 1149.05,1214.87 1149.63,1214.71 1150.22,1213.34 1150.81,1215.48 1151.39,1216.43 1151.98,1214.16 1152.57,1215.4 1153.15,1214.17 1153.74,1212.92 1154.33,1212.76 1154.91,1214.16 1155.5,1215.25 1156.09,1214.9 1156.67,1216 1157.26,1217.21 1157.84,1219.11 1158.43,1217.4 1159.02,1217.1 1159.6,1216.58 1160.19,1216.27 1160.78,1214.88 1161.36,1214.63 1161.95,1213.36 1162.54,1213.4 1163.12,1213.53 1163.71,1211.19 1164.29,1212.64 1164.88,1208.89 1165.47,1208.81 1166.05,1209.13 1166.64,1208.09 1167.23,1207.13 1167.81,1206.05 1168.4,1207.51 1168.99,1210.09 1169.57,1210.21 1170.16,1211.52 1170.75,1212.57 1171.33,1211.46 1171.92,1214.87 1172.5,1214.54 1173.09,1214.2 1173.68,1211.96 1174.26,1213.26 1174.85,1213.2 1175.44,1213.11 1176.02,1216.93 1176.61,1214.31 1177.2,1214.06 1177.78,1213.83 1178.37,1212.66 1178.96,1211.56 1179.54,1209.12 1180.13,1208.04 1180.71,1207.21 1181.3,1207.61 1181.89,1207.9 1182.47,1208.12 1183.06,1204.85 1183.65,1204 1184.23,1204.38 1184.82,1203.7 1185.41,1204.38 1185.99,1203.79 1186.58,1205.57 1187.16,1207.34 1187.75,1208.68 1188.34,1207.57 1188.92,1206.69 1189.51,1207.09 1190.1,1208.6 1190.68,1209.93 1191.27,1209.91 1191.86,1211.17 1192.44,1212.08 1193.03,1212.27 1193.62,1211.38 1194.2,1215.12 1194.79,1213.9 1195.37,1214.95 1195.96,1212.27 1196.55,1212.75 1197.13,1212.81 1197.72,1214.18 1198.31,1214.11 1198.89,1215.14 1199.48,1214.87 1200.07,1215.86 1200.65,1214.37 1201.24,1214.07 1201.83,1215.07 1202.41,1214.82 1203,1213.51 1203.58,1212.37 1204.17,1211.29 1204.76,1211.4 1205.34,1212.71 1205.93,1216.44 1206.52,1212.44 1207.1,1208.96 1207.69,1211.55 1208.28,1212.71 1208.86,1214.06 1209.45,1214.03 1210.03,1214.77 1210.62,1213.42 1211.21,1214.66 1211.79,1214.71 1212.38,1217.93 1212.97,1214.25 1213.55,1213.02 1214.14,1213.93 1214.73,1213.81 1215.31,1212.48 1215.9,1212.71 1216.49,1212.75 1217.07,1212.48 1217.66,1211.35 1218.24,1211.34 1218.83,1211.49 1219.42,1210.44 1220,1209.45 1220.59,1209.67 1221.18,1204.23 1221.76,1206.04 1222.35,1205.36 1222.94,1208.31 1223.52,1210.96 1224.11,1213.39 1224.7,1211 1225.28,1214.48 1225.87,1214.43 1226.45,1215.65 1227.04,1216.53 1227.63,1216.23 1228.21,1214.8 1228.8,1214.6 1229.39,1216.8 1229.97,1215.45 1230.56,1211.79 1231.15,1211.97 1231.73,1213.01 1232.32,1213.07 1232.91,1217.73 1233.49,1216.19 1234.08,1216 1234.66,1214.46 1235.25,1213.16 1235.84,1212.34 1236.42,1213.43 1237.01,1212.04 1237.6,1212.15 1238.18,1211.16 1238.77,1208.92 1239.36,1209.35 1239.94,1210.41 1240.53,1211.66 1241.11,1212.85 1241.7,1214.02 1242.29,1213.81 1242.87,1214.97 1243.46,1214.83 1244.05,1213.28 1244.63,1210.79 1245.22,1211.13 1245.81,1210.11 1246.39,1210.32 1246.98,1209.04 1247.57,1208.15 1248.15,1210.8 1248.74,1210.95 1249.32,1211.04 1249.91,1212.28 1250.5,1212.42 1251.08,1212.44 1251.67,1212.28 1252.26,1213.61 1252.84,1214.72 1253.43,1215.7 1254.02,1211.85 1254.6,1213.04 1255.19,1213.19 1255.78,1210.81 1256.36,1211.02 1256.95,1212.23 1257.53,1213.39 1258.12,1214.81 1258.71,1217.24 1259.29,1216.93 1259.88,1216.87 1260.47,1216.51 1261.05,1217.7 1261.64,1215.05 1262.23,1213.62 1262.81,1213.34 1263.4,1211.86 1263.98,1212.16 1264.57,1212.08 1265.16,1210.8 1265.74,1210.94 1266.33,1211.16 1266.92,1207.77 1267.5,1205.79 1268.09,1204.84 1268.68,1207.51 1269.26,1206.38 1269.85,1208.09 1270.44,1207.12 1271.02,1208.44 1271.61,1210.86 1272.19,1211.05 1272.78,1208.92 1273.37,1207.84 1273.95,1206.7 1274.54,1205.88 1275.13,1206.55 1275.71,1208.01 1276.3,1209.6 1276.89,1209.59 1277.47,1210.97 1278.06,1208.67 1278.65,1210.02 1279.23,1212.78 1279.82,1211.75 1280.4,1210.71 1280.99,1210.87 1281.58,1209.87 1282.16,1211.01 1282.75,1211.11 1283.34,1212.27 1283.92,1213.46 1284.51,1213.52 1285.1,1213.43 1285.68,1214.4 1286.27,1214.16 1286.86,1212.86 1287.44,1214 1288.03,1213.94 1288.61,1212.71 1289.2,1211.46 1289.79,1211.69 1290.37,1209.5 1290.96,1208.53 1291.55,1212.44 1292.13,1214.58 1292.72,1214.52 1293.31,1214.45 1293.89,1215.32 1294.48,1217.63 1295.06,1217.36 1295.65,1216.92 1296.24,1218.02 1296.82,1216.46 1297.41,1217.7 1298,1217.6 1298.58,1218.71 1299.17,1217.15 1299.76,1216.88 1300.34,1215.24 1300.93,1216.31 1301.52,1215.03 1302.1,1211.46 1302.69,1209.28 1303.27,1211.68 1303.86,1211.87 1304.45,1212.01 1305.03,1212.14 1305.62,1211.22 1306.21,1211.29 1306.79,1208.95 1307.38,1211.69 1307.97,1213.89 1308.55,1213.58 1309.14,1214.59 1309.73,1213.37 1310.31,1211.18 1310.9,1212.3 1311.48,1212.51 1312.07,1213.56 1312.66,1214.58 1313.24,1214.34 1313.83,1215.48 1314.42,1216.43 1315,1216.13 1315.59,1217.25 1316.18,1219.23 1316.76,1222.39 1317.35,1220.56 1317.93,1219.05 1318.52,1217.34 1319.11,1215.92 1319.69,1216.56 1320.28,1212.77 1320.87,1211.52 1321.45,1210.38 1322.04,1208.19 1322.63,1204.92 1323.21,1207.54 1323.8,1206.53 1324.39,1205.6 1324.97,1204.89 1325.56,1204.27 1326.14,1204.64 1326.73,1206.4 1327.32,1205.7 1327.9,1204.97 1328.49,1202.94 1329.08,1203.57 1329.66,1205.55 1330.25,1205.98 1330.84,1206.29 1331.42,1206.75 1332.01,1207.16 1332.6,1207.72 1333.18,1205.62 1333.77,1207.24 1334.35,1207.53 1334.94,1208.87 1335.53,1210.05 1336.11,1208.79 1336.7,1206.48 1337.29,1209.1 1337.87,1210.22 1338.46,1210.35 1339.05,1213.02 1339.63,1214.17 1340.22,1214.23 1340.8,1215.33 1341.39,1215.24 1341.98,1213.74 1342.56,1213.71 1343.15,1211.28 1343.74,1213.64 1344.32,1214.76 1344.91,1215.88 1345.5,1218.02 1346.08,1216.64 1346.67,1216.47 1347.26,1213.84 1347.84,1212.47 1348.43,1213.57 1349.01,1212.41 1349.6,1212.41 1350.19,1212.38 1350.77,1211.49 1351.36,1211.41 1351.95,1210.61 1352.53,1210.7 1353.12,1208.43 1353.71,1209.83 1354.29,1212.31 1354.88,1213.23 1355.47,1214.25 1356.05,1216.34 1356.64,1216.05 1357.22,1215.71 1357.81,1215.5 1358.4,1212.94 1358.98,1213.18 1359.57,1210.82 1360.16,1208.72 1360.74,1205.65 1361.33,1205.92 1361.92,1207.49 1362.5,1207.79 1363.09,1207.73 1363.68,1207.85 1364.26,1208.43 1364.85,1209.64 1365.43,1212.28 1366.02,1211.15 1366.61,1214.49 1367.19,1214.17 1367.78,1213.82 1368.37,1213.95 1368.95,1213.89 1369.54,1213.6 1370.13,1213.45 1370.71,1212.44 1371.3,1213.72 1371.88,1214.91 1372.47,1211.31 1373.06,1211.49 1373.64,1210.45 1374.23,1212.88 1374.82,1212.9 1375.4,1212.83 1375.99,1212.82 1376.58,1211.46 1377.16,1211.37 1377.75,1211.55 1378.34,1210.38 1378.92,1211.59 1379.51,1212.85 1380.09,1211.54 1380.68,1211.8 1381.27,1211.79 1381.85,1214.1 1382.44,1212.87 1383.03,1212.99 1383.61,1213.19 1384.2,1210.98 1384.79,1208.7 1385.37,1206.31 1385.96,1207.86 1386.55,1206.94 1387.13,1209.62 1387.72,1208.68 1388.3,1208.77 1388.89,1209 1389.48,1208.04 1390.06,1208.32 1390.65,1208.69 1391.24,1210.02 1391.82,1208.95 1392.41,1208.3 1393,1208.33 1393.58,1208.5 1394.17,1211.04 1394.75,1211.07 1395.34,1210.97 1395.93,1209.91 1396.51,1211.34 1397.1,1211.21 1397.69,1213.73 1398.27,1213.57 1398.86,1212.4 1399.45,1216.01 1400.03,1214.64 1400.62,1215.46 1401.21,1215.36 1401.79,1215.51 1402.38,1217.86 1402.96,1218.91 1403.55,1217.27 1404.14,1218.04 1404.72,1216.79 1405.31,1215.27 1405.9,1215.07 1406.48,1212.54 1407.07,1216.17 1407.66,1215.92 1408.24,1216.77 1408.83,1217.43 1409.42,1216.02 1410,1215.88 1410.59,1216.56 1411.17,1216.33 1411.76,1216.23 1412.35,1219.85 1412.93,1219.4 1413.52,1217.96 1414.11,1217.73 1414.69,1219.76 1415.28,1220.39 1415.87,1221.5 1416.45,1223.68 1417.04,1221.63 1417.63,1219.78 1418.21,1219.48 1418.8,1217.73 1419.38,1214.94 1419.97,1214.7 1420.56,1215.51 1421.14,1215.29 1421.73,1216.39 1422.32,1215.28 1422.9,1215.2 1423.49,1215.36 1424.08,1215.24 1424.66,1213.93 1425.25,1213.92 1425.83,1212.6 1426.42,1213.55 1427.01,1212.29 1427.59,1213.17 1428.18,1210.71 1428.77,1212.13 1429.35,1209.68 1429.94,1206.25 1430.53,1209.01 1431.11,1206.83 1431.7,1207.24 1432.29,1208.6 1432.87,1208.76 1433.46,1209.99 1434.04,1208.61 1434.63,1207.37 1435.22,1207.38 1435.8,1206.5 1436.39,1206.91 1436.98,1204.92 1437.56,1206.32 1438.15,1207.93 1438.74,1209.53 1439.32,1210.9 1439.91,1211.12 1440.5,1211.28 1441.08,1211.32 1441.67,1211.28 1442.25,1212.21 1442.84,1210.93 1443.43,1214.47 1444.01,1211.87 1444.6,1211.92 1445.19,1210.97 1445.77,1214.75 1446.36,1215.94 1446.95,1215.68 1447.53,1215.62 1448.12,1215.32 1448.7,1216.22 1449.29,1215.99 1449.88,1216.03 1450.46,1217.01 1451.05,1214.36 1451.64,1212.8 1452.22,1212.83 1452.81,1212.79 1453.4,1213.81 1453.98,1216.09 1454.57,1215.74 1455.16,1214.37 1455.74,1215.25 1456.33,1212.97 1456.91,1212.79 1457.5,1211.63 1458.09,1210.47 1458.67,1209.19 1459.26,1208.28 1459.85,1209.8 1460.43,1208.69 1461.02,1208.98 1461.61,1212.55 1462.19,1212.7 1462.78,1213.84 1463.37,1211.39 1463.95,1211.45 1464.54,1211.48 1465.12,1210.44 1465.71,1211.91 1466.3,1213.2 1466.88,1213.34 1467.47,1213.12 1468.06,1210.61 1468.64,1214.3 1469.23,1216.57 1469.82,1216.22 1470.4,1212.28 1470.99,1212.25 1471.57,1212.2 1472.16,1211.46 1472.75,1208.95 1473.33,1209.16 1473.92,1209.41 1474.51,1209.79 1475.09,1211.28 1475.68,1212.66 1476.27,1213.67 1476.85,1214.69 1477.44,1214.41 1478.03,1215.48 1478.61,1215.36 1479.2,1214.06 1479.78,1214.15 1480.37,1211.63 1480.96,1211.44 1481.54,1211.35 1482.13,1211.48 1482.72,1206.92 1483.3,1203.57 1483.89,1201.68 1484.48,1199.83 1485.06,1201.73 1485.65,1203.43 1486.24,1204.96 1486.82,1206.5 1487.41,1207.73 1487.99,1208.2 1488.58,1209.4 1489.17,1211.97 1489.75,1213.33 1490.34,1214.56 1490.93,1214.24 1491.51,1215.35 1492.1,1214.22 1492.69,1214.09 1493.27,1213 1493.86,1215.23 1494.45,1212.71 1495.03,1212.93 1495.62,1211.69 1496.2,1215.15 1496.79,1213.8 1497.38,1213.73 1497.96,1215.74 1498.55,1216.8 1499.14,1217.71 1499.72,1217.51 1500.31,1218.46 1500.9,1218.13 1501.48,1217.63 1502.07,1215.22 1502.65,1214.92 1503.24,1213.65 1503.83,1215.12 1504.41,1212.74 1505,1211.52 1505.59,1214.2 1506.17,1215.14 1506.76,1212.66 1507.35,1212.68 1507.93,1210.47 1508.52,1208.05 1509.11,1207.86 1509.69,1208.18 1510.28,1210.85 1510.86,1208.53 1511.45,1208.76 1512.04,1208.93 1512.62,1208.87 1513.21,1209.92 1513.8,1210.16 1514.38,1210.11 1514.97,1211.42 1515.56,1211.48 1516.14,1211.37 1516.73,1212.35 1517.32,1213.62 1517.9,1215.65 1518.49,1214.41 1519.07,1215.54 1519.66,1215.64 1520.25,1215.44 1520.83,1213.21 1521.42,1211.85 1522.01,1212.83 1522.59,1210.63 1523.18,1208.06 1523.77,1208.06 1524.35,1208.21 1524.94,1208.5 1525.52,1209.79 1526.11,1210.02 1526.7,1210.19 1527.28,1209.11 1527.87,1209.21 1528.46,1209.49 1529.04,1210.92 1529.63,1210.08 1530.22,1210.19 1530.8,1207.92 1531.39,1208.03 1531.98,1208.26 1532.56,1207.49 1533.15,1208.09 1533.73,1209.49 1534.32,1210.96 1534.91,1212.15 1535.49,1210.7 1536.08,1210.56 1536.67,1209.43 1537.25,1210.78 1537.84,1212.03 1538.43,1217.96 1539.01,1217.65 1539.6,1218.64 1540.19,1218.13 1540.77,1217.86 1541.36,1213.96 1541.94,1215.18 1542.53,1217.24 1543.12,1218.08 1543.7,1217.95 1544.29,1217.63 1544.88,1220.92 1545.46,1218.96 1546.05,1218.24 1546.64,1216.72 1547.22,1215.42 1547.81,1216.44 1548.4,1216.11 1548.98,1214.87 1549.57,1213.56 1550.15,1213.45 1550.74,1214.44 1551.33,1214.35 1551.91,1214.31 1552.5,1214.04 1553.09,1213.97 1553.67,1213.92 1554.26,1213.89 1554.85,1213.76 1555.43,1209.99 1556.02,1207.58 1556.6,1206.74 1557.19,1205.82 1557.78,1210.82 1558.36,1209.63 1558.95,1208.42 1559.54,1209.66 1560.12,1212.31 1560.71,1212.25 1561.3,1211.15 1561.88,1211.27 1562.47,1211.39 1563.06,1211.42 1563.64,1212.76 1564.23,1210.5 1564.81,1207.1 1565.4,1209.74 1565.99,1207.64 1566.57,1209.03 1567.16,1209.32 1567.75,1209.48 1568.33,1209.59 1568.92,1208.53 1569.51,1207.69 1570.09,1206.95 1570.68,1208.44 1571.27,1206.24 1571.85,1205.51 1572.44,1207.15 1573.02,1206.14 1573.61,1207.65 1574.2,1208.04 1574.78,1209.36 1575.37,1209.28 1575.96,1207.05 1576.54,1207.34 1577.13,1208.86 1577.72,1210.04 1578.3,1208.87 1578.89,1209.04 1579.47,1209.14 1580.06,1212.87 1580.65,1213.06 1581.23,1210.6 1581.82,1212.07 1582.41,1210.97 1582.99,1212.13 1583.58,1210.87 1584.17,1210.95 1584.75,1212.23 1585.34,1214.65 1585.93,1214.62 1586.51,1211.96 1587.1,1211.04 1587.68,1210.81 1588.27,1209.7 1588.86,1212.23 1589.44,1212.31 1590.03,1213.34 1590.62,1212.26 1591.2,1211.97 1591.79,1215.46 1592.38,1215.52 1592.96,1215.48 1593.55,1216.69 1594.14,1217.74 1594.72,1218.42 1595.31,1220.57 1595.89,1219.95 1596.48,1218.37 1597.07,1216.81 1597.65,1217.6 1598.24,1219.6 1598.83,1219.1 1599.41,1218.71 1600,1219.52 1600.59,1218.21 1601.17,1217.78 1601.76,1217.71 1602.34,1216.45 1602.93,1216.03 1603.52,1214.63 1604.1,1214.39 1604.69,1215.68 1605.28,1216.79 1605.86,1212.96 1606.45,1214.01 1607.04,1213.93 1607.62,1212.47 1608.21,1212.48 1608.8,1212.57 1609.38,1214.02 1609.97,1213.9 1610.55,1217.15 1611.14,1218.94 1611.73,1217.42 1612.31,1215.82 1612.9,1217 1613.49,1215.51 1614.07,1211.78 1614.66,1211.7 1615.25,1213.97 1615.83,1212.51 1616.42,1212.47 1617.01,1212.25 1617.59,1213.57 1618.18,1212.21 1618.76,1209.69 1619.35,1209.89 1619.94,1212.73 1620.52,1211.6 1621.11,1211.65 1621.7,1212.76 1622.28,1215.05 1622.87,1218.46 1623.46,1219.08 1624.04,1219.06 1624.63,1216.37 1625.22,1213.78 1625.8,1215.16 1626.39,1217.44 1626.97,1217.71 1627.56,1217.45 1628.15,1216.03 1628.73,1217.02 1629.32,1219.18 1629.91,1218.78 1630.49,1217.32 1631.08,1217.21 1631.67,1217.07 1632.25,1217.04 1632.84,1217.87 1633.42,1217.34 1634.01,1218.48 1634.6,1216.93 1635.18,1215.33 1635.77,1213.97 1636.36,1213.83 1636.94,1210.28 1637.53,1205.52 1638.12,1204.6 1638.7,1205.17 1639.29,1206.81 1639.88,1205.84 1640.46,1207.34 1641.05,1206.44 1641.63,1206.78 1642.22,1206.18 1642.81,1207.51 1643.39,1207.77 1643.98,1208.12 1644.57,1208.43 1645.15,1207.3 1645.74,1206.23 1646.33,1205.6 1646.91,1204.86 1647.5,1207.7 1648.09,1207.85 1648.67,1209.25 1649.26,1208.25 1649.84,1208.41 1650.43,1210.9 1651.02,1213.37 1651.6,1210.77 1652.19,1212.15 1652.78,1215.89 1653.36,1214.5 1653.95,1213.33 1654.54,1214.47 1655.12,1215.58 1655.71,1215.29 1656.29,1212.94 1656.88,1214.13 1657.47,1215.07 1658.05,1217.2 1658.64,1215.84 1659.23,1215.84 1659.81,1214.76 1660.4,1216.88 1660.99,1217.97 1661.57,1220.14 1662.16,1222.24 1662.75,1222.85 1663.33,1222.26 1663.92,1221.93 1664.5,1222.4 1665.09,1221.79 1665.68,1223.41 1666.26,1220.33 1666.85,1224.69 1667.44,1223.92 1668.02,1220.82 1668.61,1220.36 1669.2,1219.85 1669.78,1219.62 1670.37,1216.43 1670.96,1218.71 1671.54,1218.62 1672.13,1215.85 1672.71,1214.31 1673.3,1214.16 1673.89,1215.32 1674.47,1214.04 1675.06,1213.91 1675.65,1210.17 1676.23,1210.2 1676.82,1210.19 1677.41,1209.05 1677.99,1210.3 1678.58,1211.72 1679.17,1212.88 1679.75,1214 1680.34,1210.61 1680.92,1210.45 1681.51,1210.4 1682.1,1209.12 1682.68,1206.86 1683.27,1208.29 1683.86,1208.47 1684.44,1209.63 1685.03,1210.94 1685.62,1211.24 1686.2,1211.11 1686.79,1210.93 1687.37,1212.09 1687.96,1211.23 1688.55,1211.22 1689.13,1208.9 1689.72,1210.07 1690.31,1208.84 1690.89,1210.06 1691.48,1210.15 1692.07,1211.46 1692.65,1210.39 1693.24,1211.56 1693.83,1211.81 1694.41,1211.71 1695,1212.94 1695.58,1212.93 1696.17,1216.38 1696.76,1216.13 1697.34,1215.98 1697.93,1216.18 1698.52,1219.62 1699.1,1221.61 1699.69,1222.4 1700.28,1222.16 1700.86,1220.65 1701.45,1220.07 1702.04,1218.41 1702.62,1220.51 1703.21,1217.69 1703.79,1219.91 1704.38,1220.74 1704.97,1217.97 1705.55,1215.44 1706.14,1216.64 1706.73,1216.48 1707.31,1214.01 1707.9,1212.68 1708.49,1213.56 1709.07,1213.58 1709.66,1214.66 1710.24,1214.85 1710.83,1213.79 1711.42,1211.46 1712,1217.29 1712.59,1215.98 1713.18,1212.32 1713.76,1212.39 1714.35,1214.87 1714.94,1210.72 1715.52,1213.06 1716.11,1211.65 1716.7,1208.1 1717.28,1208.68 1717.87,1206.37 1718.45,1206.87 1719.04,1208.26 1719.63,1208.65 1720.21,1208.76 1720.8,1210.19 1721.39,1207.96 1721.97,1204.62 1722.56,1204.91 1723.15,1205.41 1723.73,1204.44 1724.32,1206.15 1724.91,1205.24 1725.49,1204.51 1726.08,1205.24 1726.66,1204.48 1727.25,1207.25 1727.84,1207.52 1728.42,1211.45 1729.01,1210.65 1729.6,1211.91 1730.18,1213.19 1730.77,1209.41 1731.36,1212.01 1731.94,1214.47 1732.53,1213.09 1733.11,1214.23 1733.7,1213.07 1734.29,1214.32 1734.87,1214.12 1735.46,1217.68 1736.05,1213.91 1736.63,1209.01 1737.22,1209.1 1737.81,1210.59 1738.39,1210.76 1738.98,1210.83 1739.57,1207.24 1740.15,1207.45 1740.74,1207.65 1741.32,1208.26 1741.91,1207.39 1742.5,1208.72 1743.08,1205.15 1743.67,1205.57 1744.26,1205.98 1744.84,1207.38 1745.43,1206.69 1746.02,1206.91 1746.6,1204.81 1747.19,1206.19 1747.78,1206.43 1748.36,1207.84 1748.95,1210.46 1749.53,1209.25 1750.12,1209.48 1750.71,1208.65 1751.29,1210.16 1751.88,1210.28 1752.47,1209.15 1753.05,1209.51 1753.64,1208.67 1754.23,1208.85 1754.81,1209.02 1755.4,1211.44 1755.99,1213.94 1756.57,1214.06 1757.16,1211.53 1757.74,1213.83 1758.33,1213.85 1758.92,1217.27 1759.5,1217.29 1760.09,1217.33 1760.68,1218.52 1761.26,1219.37 1761.85,1219.07 1762.44,1219.81 1763.02,1219.5 1763.61,1219.23 1764.19,1221.34 1764.78,1218.72 1765.37,1218.35 1765.95,1219.46 1766.54,1214.44 1767.13,1214.47 1767.71,1213.33 1768.3,1214.67 1768.89,1214.73 1769.47,1212.29 1770.06,1212.2 1770.65,1212.13 1771.23,1212.2 1771.82,1211.96 1772.4,1213.28 1772.99,1211.83 1773.58,1208.28 1774.16,1207.34 1774.75,1208.79 1775.34,1207.63 1775.92,1206.78 1776.51,1207.33 1777.1,1209.85 1777.68,1209.65 1778.27,1208.46 1778.86,1209.95 1779.44,1211.17 1780.03,1212.47 1780.61,1212.33 1781.2,1211.16 1781.79,1212.56 1782.37,1213.81 1782.96,1213.86 1783.55,1211.68 1784.13,1208.09 1784.72,1207.1 1785.31,1208.54 1785.89,1206.32 1786.48,1209.11 1787.06,1209.3 1787.65,1209.56 1788.24,1208.63 1788.82,1209.89 1789.41,1211.13 1790,1212.42 1790.58,1211.12 1791.17,1212.38 1791.76,1211.67 1792.34,1210.51 1792.93,1210.58 1793.52,1210.67 1794.1,1215.59 1794.69,1216.74 1795.27,1217.6 1795.86,1216.04 1796.45,1215.67 1797.03,1219.09 1797.62,1216.55 1798.21,1218.49 1798.79,1218.17 1799.38,1220.3 1799.97,1217.71 1800.55,1214.9 1801.14,1215.94 1801.73,1215.76 1802.31,1215.72 1802.9,1216.49 1803.48,1215.08 1804.07,1213.64 1804.66,1217.06 1805.24,1216.74 1805.83,1214.19 1806.42,1212.79 1807,1213.89 1807.59,1214.93 1808.18,1214.64 1808.76,1213.08 1809.35,1212.25 1809.94,1209.82 1810.52,1210.04 1811.11,1210.02 1811.69,1208.97 1812.28,1210.29 1812.87,1210.5 1813.45,1209.59 1814.04,1208.78 1814.63,1209.06 1815.21,1210.56 1815.8,1210.75 1816.39,1208.16 1816.97,1207.15 1817.56,1206.14 1818.14,1206.38 1818.73,1206.79 1819.32,1208.27 1819.9,1208.59 1820.49,1208.87 1821.08,1208.18 1821.66,1208.36 1822.25,1209.73 1822.84,1209.6 1823.42,1210.98 1824.01,1211.01 1824.6,1209.99 1825.18,1210.02 1825.77,1212.26 1826.35,1212.07 1826.94,1210.76 1827.53,1211.87 1828.11,1212.17 1828.7,1212.47 1829.29,1213.83 1829.87,1211.63 1830.46,1210.41 1831.05,1211.7 1831.63,1211.66 1832.22,1209.29 1832.81,1209.41 1833.39,1209.62 1833.98,1209.81 1834.56,1211.12 1835.15,1208.63 1835.74,1202.75 1836.32,1202.08 1836.91,1203.61 1837.5,1204.29 1838.08,1205.63 1838.67,1204.78 1839.26,1204.05 1839.84,1204.7 1840.43,1204.95 1841.01,1205.73 1841.6,1207.44 1842.19,1206.87 1842.77,1206.02 1843.36,1205.26 1843.95,1204.42 1844.53,1207.31 1845.12,1208.65 1845.71,1210.22 1846.29,1212.89 1846.88,1212.89 1847.47,1212.8 1848.05,1214.06 1848.64,1213.82 1849.22,1213.82 1849.81,1215.03 1850.4,1214.58 1850.98,1213.27 1851.57,1211.91 1852.16,1214.27 1852.74,1215.3 1853.33,1215.25 1853.92,1215.19 1854.5,1216.24 1855.09,1217.38 1855.68,1217.04 1856.26,1216.59 1856.85,1215.29 1857.43,1215.05 1858.02,1214.86 1858.61,1213.74 1859.19,1212.65 1859.78,1210.09 1860.37,1209.19 1860.95,1211.74 1861.54,1213.17 1862.13,1214.08 1862.71,1214.13 1863.3,1214 1863.88,1213.83 1864.47,1214.01 1865.06,1212.8 1865.64,1212.76 1866.23,1212.67 1866.82,1212.44 1867.4,1211.31 1867.99,1209.95 1868.58,1210.27 1869.16,1213.77 1869.75,1213.87 1870.34,1214.97 1870.92,1216.94 1871.51,1217.44 1872.09,1218.34 1872.68,1219.26 1873.27,1215.4 1873.85,1215.12 1874.44,1216.14 1875.03,1217.01 1875.61,1219.31 1876.2,1216.51 1876.79,1215.16 1877.37,1214.57 1877.96,1213.59 1878.55,1212.4 1879.13,1209.82 1879.72,1209.69 1880.3,1210.79 1880.89,1209.79 1881.48,1211.05 1882.06,1209.84 1882.65,1211.19 1883.24,1212.53 1883.82,1214.85 1884.41,1215.93 1885,1215.63 1885.58,1215.58 1886.17,1215.36 1886.76,1215.12 1887.34,1215.05 1887.93,1213.83 1888.51,1214.89 1889.1,1213.73 1889.69,1213.62 1890.27,1215.88 1890.86,1215.65 1891.45,1217.9 1892.03,1217.33 1892.62,1213.6 1893.21,1214.78 1893.79,1214.67 1894.38,1215.66 1894.96,1216.6 1895.55,1219.77 1896.14,1220.65 1896.72,1220.36 1897.31,1218.84 1897.9,1218.11 1898.48,1216.59 1899.07,1216.32 1899.66,1215.99 1900.24,1216.89 1900.83,1215.52 1901.42,1214.25 1902,1211.79 1902.59,1212.79 1903.17,1213.99 1903.76,1213.99 1904.35,1209.01 1904.93,1212.79 1905.52,1212.73 1906.11,1216.33 1906.69,1215.96 1907.28,1216.99 1907.87,1216.6 1908.45,1219.73 1909.04,1218.3 1909.63,1214.58 1910.21,1214.42 1910.8,1214.25 1911.38,1215.16 1911.97,1214.02 1912.56,1215.12 1913.14,1211.31 1913.73,1211.36 1914.32,1211.41 1914.9,1211.4 1915.49,1207.77 1916.08,1206.74 1916.66,1205.95 1917.25,1204.97 1917.83,1205.17 1918.42,1203.14 1919.01,1203.8 1919.59,1204.21 1920.18,1204.47 1920.77,1204.79 1921.35,1205.18 1921.94,1205.32 1922.53,1207.92 1923.11,1207.1 1923.7,1209.87 1924.29,1210.08 1924.87,1212.67 1925.46,1212.19 1926.04,1210.76 1926.63,1209.82 1927.22,1209.88 1927.8,1212.19 1928.39,1210.99 1928.98,1212.03 1929.56,1213.38 1930.15,1211.16 1930.74,1213.47 1931.32,1212.51 1931.91,1210.2 1932.5,1210.5 1933.08,1210.6 1933.67,1211.92 1934.25,1213.53 1934.84,1213.34 1935.43,1215.52 1936.01,1214.06 1936.6,1214.08 1937.19,1212.91 1937.77,1214.12 1938.36,1215.24 1938.95,1217.22 1939.53,1216.01 1940.12,1214.82 1940.71,1212.21 1941.29,1212.25 1941.88,1213.39 1942.46,1213.27 1943.05,1214.48 1943.64,1215.78 1944.22,1216.83 1944.81,1218.86 1945.4,1219.79 1945.98,1219.41 1946.57,1217.8 1947.16,1215.29 1947.74,1213.83 1948.33,1212.57 1948.91,1213.84 1949.5,1212.82 1950.09,1215.21 1950.67,1217.48 1951.26,1218.34 1951.85,1216.98 1952.43,1215.44 1953.02,1217.8 1953.61,1216.09 1954.19,1215.92 1954.78,1215.75 1955.37,1216.67 1955.95,1216.33 1956.54,1216.02 1957.12,1215.78 1957.71,1214.47 1958.3,1212.82 1958.88,1212.82 1959.47,1211.69 1960.06,1207.95 1960.64,1209.32 1961.23,1208.35 1961.82,1208.56 1962.4,1209.79 1962.99,1209.93 1963.58,1209.89 1964.16,1212.22 1964.75,1212.33 1965.33,1211.22 1965.92,1211.36 1966.51,1210.31 1967.09,1209.13 1967.68,1210.36 1968.27,1211.61 1968.85,1210.38 1969.44,1209.21 1970.03,1210.53 1970.61,1211.79 1971.2,1211.92 1971.78,1211.86 1972.37,1211.76 1972.96,1212.75 1973.54,1214.83 1974.13,1212.27 1974.72,1212.34 1975.3,1211.1 1975.89,1212.32 1976.48,1211.06 1977.06,1211.03 1977.65,1209.76 1978.24,1210.99 1978.82,1213.19 1979.41,1212.91 1979.99,1207.95 1980.58,1208.23 1981.17,1207.33 1981.75,1208.81 1982.34,1208.99 1982.93,1208.97 1983.51,1210.14 1984.1,1209.19 1984.69,1208.06 1985.27,1210.62 1985.86,1209.48 1986.45,1206.2 1987.03,1209.16 1987.62,1212.69 1988.2,1213.96 1988.79,1210.33 1989.38,1210.33 1989.96,1211.57 1990.55,1209.24 1991.14,1209.28 1991.72,1209.24 1992.31,1209.13 1992.9,1211.64 1993.48,1207.16 1994.07,1205.21 1994.65,1206.84 1995.24,1206.12 1995.83,1210.03 1996.41,1209.14 1997,1210.5 1997.59,1210.69 1998.17,1210.85 1998.76,1212.03 1999.35,1210.8 1999.93,1212.21 2000.52,1210.95 2001.11,1209.94 2001.69,1208.95 2002.28,1209.04 2002.86,1208.78 2003.45,1210.2 2004.04,1210.62 2004.62,1209.79 2005.21,1208.95 2005.8,1209.36 2006.38,1210.6 2006.97,1211.79 2007.56,1211.82 2008.14,1216.5 2008.73,1217.48 2009.32,1214.94 2009.9,1214.79 2010.49,1214.62 2011.07,1213.41 2011.66,1213.34 2012.25,1213.47 2012.83,1214.6 2013.42,1212.25 2014.01,1213.45 2014.59,1214.51 2015.18,1213 2015.77,1214.18 2016.35,1214.17 2016.94,1216.72 2017.53,1212.93 2018.11,1212.88 2018.7,1213.98 2019.28,1214.24 2019.87,1214.22 2020.46,1216.41 2021.04,1218.67 2021.63,1219.62 2022.22,1219.17 2022.8,1219.8 2023.39,1221.82 2023.98,1222.5 2024.56,1225.33 2025.15,1224.74 2025.73,1225.25 2026.32,1223.66 2026.91,1223.11 2027.49,1220.2 2028.08,1218.69 2028.67,1217.19 2029.25,1214.67 2029.84,1214.73 2030.43,1213.29 2031.01,1211.92 2031.6,1210.8 2032.19,1212.02 2032.77,1212.17 2033.36,1212.31 2033.94,1213.34 2034.53,1214.23 2035.12,1211.73 2035.7,1211.79 2036.29,1212 2036.88,1213.24 2037.46,1213.29 2038.05,1213.03 2038.64,1211.64 2039.22,1215.13 2039.81,1213.61 2040.4,1213.54 2040.98,1212.24 2041.57,1210.9 2042.15,1209.86 2042.74,1210.19 2043.33,1208.08 2043.91,1206.97 2044.5,1208.37 2045.09,1208.47 2045.67,1208.62 2046.26,1207.7 2046.85,1206.7 2047.43,1208.2 2048.02,1208.43 2048.6,1208.79 2049.19,1209.97 2049.78,1212.47 2050.36,1213.69 2050.95,1217.16 2051.54,1215.84 2052.12,1214.53 2052.71,1214.56 2053.3,1214.33 2053.88,1214.29 2054.47,1215.27 2055.06,1215.14 2055.64,1218.53 2056.23,1216.97 2056.81,1218.05 2057.4,1216.52 2057.99,1214.87 2058.57,1214.68 2059.16,1215.69 2059.75,1212.91 2060.33,1214.11 2060.92,1207.84 2061.51,1209.05 2062.09,1205.67 2062.68,1203.53 2063.27,1203.98 2063.85,1204.28 2064.44,1204.69 2065.02,1207.4 2065.61,1206.43 2066.2,1206.78 2066.78,1205.95 2067.37,1207.74 2067.96,1211.51 2068.54,1210.31 2069.13,1211.57 2069.72,1212.78 2070.3,1212.84 2070.89,1211.52 2071.48,1212.95 2072.06,1215.39 2072.65,1218.61 2073.23,1219.45 2073.82,1220.08 2074.41,1220.66 2074.99,1220.16 2075.58,1220.85 2076.17,1220.39 2076.75,1220.86 2077.34,1220.41 2077.93,1217.55 2078.51,1216.29 2079.1,1214.85 2079.68,1214.71 2080.27,1212.34 2080.86,1210.89 2081.44,1212.32 2082.03,1213.79 2082.62,1212.72 2083.2,1210.6 2083.79,1211.81 2084.38,1210.49 2084.96,1210.61 2085.55,1210.89 2086.14,1209.77 2086.72,1211.07 2087.31,1211.27 2087.89,1210.03 2088.48,1210.12 2089.07,1210.36 2089.65,1210.3 2090.24,1209.19 2090.83,1209.34 2091.41,1211.73 2092,1213.11 2092.59,1214.42 2093.17,1214.52 2093.76,1214.33 2094.35,1211.84 2094.93,1215.04 2095.52,1210.27 2096.1,1207.88 2096.69,1211.53 2097.28,1210.6 2097.86,1208.33 2098.45,1208.4 2099.04,1207.42 2099.62,1207.46 2100.21,1207.71 2100.8,1205.68 2101.38,1205.99 2101.97,1205.21 2102.55,1206.78 2103.14,1208.25 2103.73,1209.91 2104.31,1208.8 2104.9,1208.94 2105.49,1210.21 2106.07,1213.63 2106.66,1212.44 2107.25,1207.57 2107.83,1209.89 2108.42,1209.83 2109.01,1209.99 2109.59,1209.08 2110.18,1209.17 2110.76,1210.45 2111.35,1211.78 2111.94,1212.9 2112.52,1212.82 2113.11,1212.72 2113.7,1211.35 2114.28,1212.52 2114.87,1211.36 2115.46,1211.34 2116.04,1209.98 2116.63,1208.94 2117.22,1209.22 2117.8,1209.3 2118.39,1209.38 2118.97,1210.75 2119.56,1210.75 2120.15,1209.58 2120.73,1209.78 2121.32,1209.81 2121.91,1211.06 2122.49,1212.36 2123.08,1213.55 2123.67,1211.18 2124.25,1211.33 2124.84,1211.51 2125.42,1212.6 2126.01,1211.19 2126.6,1210.29 2127.18,1209.26 2127.77,1209.17 2128.36,1206.98 2128.94,1206.08 2129.53,1207.66 2130.12,1205.55 2130.7,1205.96 2131.29,1204.1 2131.88,1202.31 2132.46,1202.85 2133.05,1205.93 2133.63,1205.18 2134.22,1205.7 2134.81,1203.73 2135.39,1204.31 2135.98,1204.63 2136.57,1203.93 2137.15,1200.87 2137.74,1200.49 2138.33,1201.41 2138.91,1202.2 2139.5,1201.66 2140.09,1202.51 2140.67,1204.51 2141.26,1205.07 2141.84,1205.77 2142.43,1206.37 2143.02,1208.01 2143.6,1210.4 2144.19,1214 2144.78,1213.9 2145.36,1214.14 2145.95,1212.84 2146.54,1211.8 2147.12,1210.92 2147.71,1213.25 2148.3,1214.31 2148.88,1214.16 2149.47,1215.29 2150.05,1216.38 2150.64,1218.67 2151.23,1218.22 2151.81,1217.84 2152.4,1218.82 2152.99,1216.16 2153.57,1215.95 2154.16,1213.4 2154.75,1213.4 2155.33,1214.53 2155.92,1217.96 2156.5,1217.66 2157.09,1218.54 2157.68,1219.68 2158.26,1219.39 \"/>\n<path clip-path=\"url(#clip512)\" d=\"M986.025 1212.7 L986.612 1212.7 L987.198 1212.7 L987.785 1212.7 L988.371 1212.7 L988.957 1212.7 L989.544 1212.7 L990.13 1212.7 L990.717 1212.7 L991.303 1212.7 L991.889 1212.7 L992.476 1212.7 L993.062 1212.7 L993.649 1212.7 L994.235 1212.7 L994.822 1212.7 L995.408 1212.7 L995.994 1212.7 L996.581 1212.7 L997.167 1212.7 L997.754 1212.7 L998.34 1212.7 L998.926 1212.7 L999.513 1212.7 L1000.1 1212.7 L1000.69 1212.7 L1001.27 1212.7 L1001.86 1212.7 L1002.44 1212.7 L1003.03 1212.7 L1003.62 1212.7 L1004.2 1212.7 L1004.79 1212.7 L1005.38 1212.7 L1005.96 1212.7 L1006.55 1212.7 L1007.14 1212.7 L1007.72 1212.7 L1008.31 1212.7 L1008.9 1212.7 L1009.48 1212.7 L1010.07 1212.7 L1010.65 1212.7 L1011.24 1212.7 L1011.83 1212.7 L1012.41 1212.7 L1013 1212.7 L1013.59 1212.7 L1014.17 1212.7 L1014.76 1212.7 L1015.35 1212.7 L1015.93 1212.7 L1016.52 1212.7 L1017.11 1212.7 L1017.69 1212.7 L1018.28 1212.7 L1018.86 1212.7 L1019.45 1212.7 L1020.04 1212.7 L1020.62 1212.7 L1021.21 1212.7 L1021.8 1212.7 L1022.38 1212.7 L1022.97 1212.7 L1023.56 1212.7 L1024.14 1212.7 L1024.73 1212.7 L1025.32 1212.7 L1025.9 1212.7 L1026.49 1212.7 L1027.07 1212.7 L1027.66 1212.7 L1028.25 1212.7 L1028.83 1212.7 L1029.42 1212.7 L1030.01 1212.7 L1030.59 1212.7 L1031.18 1212.7 L1031.77 1212.7 L1032.35 1212.7 L1032.94 1212.7 L1033.52 1212.7 L1034.11 1212.7 L1034.7 1212.7 L1035.28 1212.7 L1035.87 1212.7 L1036.46 1212.7 L1037.04 1212.7 L1037.63 1212.7 L1038.22 1212.7 L1038.8 1212.7 L1039.39 1212.7 L1039.98 1212.7 L1040.56 1212.7 L1041.15 1212.7 L1041.73 1212.7 L1042.32 1212.7 L1042.91 1212.7 L1043.49 1212.7 L1044.08 1212.7 L1044.67 1212.7 L1045.25 1212.7 L1045.84 1212.7 L1046.43 1212.7 L1047.01 1212.7 L1047.6 1212.7 L1048.19 1212.7 L1048.77 1212.7 L1049.36 1212.7 L1049.94 1212.7 L1050.53 1212.7 L1051.12 1212.7 L1051.7 1212.7 L1052.29 1212.7 L1052.88 1212.7 L1053.46 1212.7 L1054.05 1212.7 L1054.64 1212.7 L1055.22 1212.7 L1055.81 1212.7 L1056.39 1212.7 L1056.98 1212.7 L1057.57 1212.7 L1058.15 1212.7 L1058.74 1212.7 L1059.33 1212.7 L1059.91 1212.7 L1060.5 1212.7 L1061.09 1212.7 L1061.67 1212.7 L1062.26 1212.7 L1062.85 1212.7 L1063.43 1212.7 L1064.02 1212.7 L1064.6 1212.7 L1065.19 1212.7 L1065.78 1212.7 L1066.36 1212.7 L1066.95 1212.7 L1067.54 1212.7 L1068.12 1212.7 L1068.71 1212.7 L1069.3 1212.7 L1069.88 1212.7 L1070.47 1212.7 L1071.06 1212.7 L1071.64 1212.7 L1072.23 1212.7 L1072.81 1212.7 L1073.4 1212.7 L1073.99 1212.7 L1074.57 1212.7 L1075.16 1212.7 L1075.75 1212.7 L1076.33 1212.7 L1076.92 1212.7 L1077.51 1212.7 L1078.09 1212.7 L1078.68 1212.7 L1079.26 1212.7 L1079.85 1212.7 L1080.44 1212.7 L1081.02 1212.7 L1081.61 1212.7 L1082.2 1212.7 L1082.78 1212.7 L1083.37 1212.7 L1083.96 1212.7 L1084.54 1212.7 L1085.13 1212.7 L1085.72 1212.7 L1086.3 1212.7 L1086.89 1212.7 L1087.47 1212.7 L1088.06 1212.7 L1088.65 1212.7 L1089.23 1212.7 L1089.82 1212.7 L1090.41 1212.7 L1090.99 1212.7 L1091.58 1212.7 L1092.17 1212.7 L1092.75 1212.7 L1093.34 1212.7 L1093.93 1212.7 L1094.51 1212.7 L1095.1 1212.7 L1095.68 1212.7 L1096.27 1212.7 L1096.86 1212.7 L1097.44 1212.7 L1098.03 1212.7 L1098.62 1212.7 L1099.2 1212.7 L1099.79 1212.7 L1100.38 1212.7 L1100.96 1212.7 L1101.55 1212.7 L1102.14 1212.7 L1102.72 1212.7 L1103.31 1212.7 L1103.89 1212.7 L1104.48 1212.7 L1105.07 1212.7 L1105.65 1212.7 L1106.24 1212.7 L1106.83 1212.7 L1107.41 1212.7 L1108 1212.7 L1108.59 1212.7 L1109.17 1212.7 L1109.76 1212.7 L1110.34 1212.7 L1110.93 1212.7 L1111.52 1212.7 L1112.1 1212.7 L1112.69 1212.7 L1113.28 1212.7 L1113.86 1212.7 L1114.45 1212.7 L1115.04 1212.7 L1115.62 1212.7 L1116.21 1212.7 L1116.8 1212.7 L1117.38 1212.7 L1117.97 1212.7 L1118.55 1212.7 L1119.14 1212.7 L1119.73 1212.7 L1120.31 1212.7 L1120.9 1212.7 L1121.49 1212.7 L1122.07 1212.7 L1122.66 1212.7 L1123.25 1212.7 L1123.83 1212.7 L1124.42 1212.7 L1125.01 1212.7 L1125.59 1212.7 L1126.18 1212.7 L1126.76 1212.7 L1127.35 1212.7 L1127.94 1212.7 L1128.52 1212.7 L1129.11 1212.7 L1129.7 1212.7 L1130.28 1212.7 L1130.87 1212.7 L1131.46 1212.7 L1132.04 1212.7 L1132.63 1212.7 L1133.21 1212.7 L1133.8 1212.7 L1134.39 1212.7 L1134.97 1212.7 L1135.56 1212.7 L1136.15 1212.7 L1136.73 1212.7 L1137.32 1212.7 L1137.91 1212.7 L1138.49 1212.7 L1139.08 1212.7 L1139.67 1212.7 L1140.25 1212.7 L1140.84 1212.7 L1141.42 1212.7 L1142.01 1212.7 L1142.6 1212.7 L1143.18 1212.7 L1143.77 1212.7 L1144.36 1212.7 L1144.94 1212.7 L1145.53 1212.7 L1146.12 1212.7 L1146.7 1212.7 L1147.29 1212.7 L1147.88 1212.7 L1148.46 1212.7 L1149.05 1212.7 L1149.63 1212.7 L1150.22 1212.7 L1150.81 1212.7 L1151.39 1212.7 L1151.98 1212.7 L1152.57 1212.7 L1153.15 1212.7 L1153.74 1212.7 L1154.33 1212.7 L1154.91 1212.7 L1155.5 1212.7 L1156.09 1212.7 L1156.67 1212.7 L1157.26 1212.7 L1157.84 1212.7 L1158.43 1212.7 L1159.02 1212.7 L1159.6 1212.7 L1160.19 1212.7 L1160.78 1212.7 L1161.36 1212.7 L1161.95 1212.7 L1162.54 1212.7 L1163.12 1212.7 L1163.71 1212.7 L1164.29 1212.7 L1164.88 1212.7 L1165.47 1212.7 L1166.05 1212.7 L1166.64 1212.7 L1167.23 1212.7 L1167.81 1212.7 L1168.4 1212.7 L1168.99 1212.7 L1169.57 1212.7 L1170.16 1212.7 L1170.75 1212.7 L1171.33 1212.7 L1171.92 1212.7 L1172.5 1212.7 L1173.09 1212.7 L1173.68 1212.7 L1174.26 1212.7 L1174.85 1212.7 L1175.44 1212.7 L1176.02 1212.7 L1176.61 1212.7 L1177.2 1212.7 L1177.78 1212.7 L1178.37 1212.7 L1178.96 1212.7 L1179.54 1212.7 L1180.13 1212.7 L1180.71 1212.7 L1181.3 1212.7 L1181.89 1212.7 L1182.47 1212.7 L1183.06 1212.7 L1183.65 1212.7 L1184.23 1212.7 L1184.82 1212.7 L1185.41 1212.7 L1185.99 1212.7 L1186.58 1212.7 L1187.16 1212.7 L1187.75 1212.7 L1188.34 1212.7 L1188.92 1212.7 L1189.51 1212.7 L1190.1 1212.7 L1190.68 1212.7 L1191.27 1212.7 L1191.86 1212.7 L1192.44 1212.7 L1193.03 1212.7 L1193.62 1212.7 L1194.2 1212.7 L1194.79 1212.7 L1195.37 1212.7 L1195.96 1212.7 L1196.55 1212.7 L1197.13 1212.7 L1197.72 1212.7 L1198.31 1212.7 L1198.89 1212.7 L1199.48 1212.7 L1200.07 1212.7 L1200.65 1212.7 L1201.24 1212.7 L1201.83 1212.7 L1202.41 1212.7 L1203 1212.7 L1203.58 1212.7 L1204.17 1212.7 L1204.76 1212.7 L1205.34 1212.7 L1205.93 1212.7 L1206.52 1212.7 L1207.1 1212.7 L1207.69 1212.7 L1208.28 1212.7 L1208.86 1212.7 L1209.45 1212.7 L1210.03 1212.7 L1210.62 1212.7 L1211.21 1212.7 L1211.79 1212.7 L1212.38 1212.7 L1212.97 1212.7 L1213.55 1212.7 L1214.14 1212.7 L1214.73 1212.7 L1215.31 1212.7 L1215.9 1212.7 L1216.49 1212.7 L1217.07 1212.7 L1217.66 1212.7 L1218.24 1212.7 L1218.83 1212.7 L1219.42 1212.7 L1220 1212.7 L1220.59 1212.7 L1221.18 1212.7 L1221.76 1212.7 L1222.35 1212.7 L1222.94 1212.7 L1223.52 1212.7 L1224.11 1212.7 L1224.7 1212.7 L1225.28 1212.7 L1225.87 1212.7 L1226.45 1212.7 L1227.04 1212.7 L1227.63 1212.7 L1228.21 1212.7 L1228.8 1212.7 L1229.39 1212.7 L1229.97 1212.7 L1230.56 1212.7 L1231.15 1212.7 L1231.73 1212.7 L1232.32 1212.7 L1232.91 1212.7 L1233.49 1212.7 L1234.08 1212.7 L1234.66 1212.7 L1235.25 1212.7 L1235.84 1212.7 L1236.42 1212.7 L1237.01 1212.7 L1237.6 1212.7 L1238.18 1212.7 L1238.77 1212.7 L1239.36 1212.7 L1239.94 1212.7 L1240.53 1212.7 L1241.11 1212.7 L1241.7 1212.7 L1242.29 1212.7 L1242.87 1212.7 L1243.46 1212.7 L1244.05 1212.7 L1244.63 1212.7 L1245.22 1212.7 L1245.81 1212.7 L1246.39 1212.7 L1246.98 1212.7 L1247.57 1212.7 L1248.15 1212.7 L1248.74 1212.7 L1249.32 1212.7 L1249.91 1212.7 L1250.5 1212.7 L1251.08 1212.7 L1251.67 1212.7 L1252.26 1212.7 L1252.84 1212.7 L1253.43 1212.7 L1254.02 1212.7 L1254.6 1212.7 L1255.19 1212.7 L1255.78 1212.7 L1256.36 1212.7 L1256.95 1212.7 L1257.53 1212.7 L1258.12 1212.7 L1258.71 1212.7 L1259.29 1212.7 L1259.88 1212.7 L1260.47 1212.7 L1261.05 1212.7 L1261.64 1212.7 L1262.23 1212.7 L1262.81 1212.7 L1263.4 1212.7 L1263.98 1212.7 L1264.57 1212.7 L1265.16 1212.7 L1265.74 1212.7 L1266.33 1212.7 L1266.92 1212.7 L1267.5 1212.7 L1268.09 1212.7 L1268.68 1212.7 L1269.26 1212.7 L1269.85 1212.7 L1270.44 1212.7 L1271.02 1212.7 L1271.61 1212.7 L1272.19 1212.7 L1272.78 1212.7 L1273.37 1212.7 L1273.95 1212.7 L1274.54 1212.7 L1275.13 1212.7 L1275.71 1212.7 L1276.3 1212.7 L1276.89 1212.7 L1277.47 1212.7 L1278.06 1212.7 L1278.65 1212.7 L1279.23 1212.7 L1279.82 1212.7 L1280.4 1212.7 L1280.99 1212.7 L1281.58 1212.7 L1282.16 1212.7 L1282.75 1212.7 L1283.34 1212.7 L1283.92 1212.7 L1284.51 1212.7 L1285.1 1212.7 L1285.68 1212.7 L1286.27 1212.7 L1286.86 1212.7 L1287.44 1212.7 L1288.03 1212.7 L1288.61 1212.7 L1289.2 1212.7 L1289.79 1212.7 L1290.37 1212.7 L1290.96 1212.7 L1291.55 1212.7 L1292.13 1212.7 L1292.72 1212.7 L1293.31 1212.7 L1293.89 1212.7 L1294.48 1212.7 L1295.06 1212.7 L1295.65 1212.7 L1296.24 1212.7 L1296.82 1212.7 L1297.41 1212.7 L1298 1212.7 L1298.58 1212.7 L1299.17 1212.7 L1299.76 1212.7 L1300.34 1212.7 L1300.93 1212.7 L1301.52 1212.7 L1302.1 1212.7 L1302.69 1212.7 L1303.27 1212.7 L1303.86 1212.7 L1304.45 1212.7 L1305.03 1212.7 L1305.62 1212.7 L1306.21 1212.7 L1306.79 1212.7 L1307.38 1212.7 L1307.97 1212.7 L1308.55 1212.7 L1309.14 1212.7 L1309.73 1212.7 L1310.31 1212.7 L1310.9 1212.7 L1311.48 1212.7 L1312.07 1212.7 L1312.66 1212.7 L1313.24 1212.7 L1313.83 1212.7 L1314.42 1212.7 L1315 1212.7 L1315.59 1212.7 L1316.18 1212.7 L1316.76 1212.7 L1317.35 1212.7 L1317.93 1212.7 L1318.52 1212.7 L1319.11 1212.7 L1319.69 1212.7 L1320.28 1212.7 L1320.87 1212.7 L1321.45 1212.7 L1322.04 1212.7 L1322.63 1212.7 L1323.21 1212.7 L1323.8 1212.7 L1324.39 1212.7 L1324.97 1212.7 L1325.56 1212.7 L1326.14 1212.7 L1326.73 1212.7 L1327.32 1212.7 L1327.9 1212.7 L1328.49 1212.7 L1329.08 1212.7 L1329.66 1212.7 L1330.25 1212.7 L1330.84 1212.7 L1331.42 1212.7 L1332.01 1212.7 L1332.6 1212.7 L1333.18 1212.7 L1333.77 1212.7 L1334.35 1212.7 L1334.94 1212.7 L1335.53 1212.7 L1336.11 1212.7 L1336.7 1212.7 L1337.29 1212.7 L1337.87 1212.7 L1338.46 1212.7 L1339.05 1212.7 L1339.63 1212.7 L1340.22 1212.7 L1340.8 1212.7 L1341.39 1212.7 L1341.98 1212.7 L1342.56 1212.7 L1343.15 1212.7 L1343.74 1212.7 L1344.32 1212.7 L1344.91 1212.7 L1345.5 1212.7 L1346.08 1212.7 L1346.67 1212.7 L1347.26 1212.7 L1347.84 1212.7 L1348.43 1212.7 L1349.01 1212.7 L1349.6 1212.7 L1350.19 1212.7 L1350.77 1212.7 L1351.36 1212.7 L1351.95 1212.7 L1352.53 1212.7 L1353.12 1212.7 L1353.71 1212.7 L1354.29 1212.7 L1354.88 1212.7 L1355.47 1212.7 L1356.05 1212.7 L1356.64 1212.7 L1357.22 1212.7 L1357.81 1212.7 L1358.4 1212.7 L1358.98 1212.7 L1359.57 1212.7 L1360.16 1212.7 L1360.74 1212.7 L1361.33 1212.7 L1361.92 1212.7 L1362.5 1212.7 L1363.09 1212.7 L1363.68 1212.7 L1364.26 1212.7 L1364.85 1212.7 L1365.43 1212.7 L1366.02 1212.7 L1366.61 1212.7 L1367.19 1212.7 L1367.78 1212.7 L1368.37 1212.7 L1368.95 1212.7 L1369.54 1212.7 L1370.13 1212.7 L1370.71 1212.7 L1371.3 1212.7 L1371.88 1212.7 L1372.47 1212.7 L1373.06 1212.7 L1373.64 1212.7 L1374.23 1212.7 L1374.82 1212.7 L1375.4 1212.7 L1375.99 1212.7 L1376.58 1212.7 L1377.16 1212.7 L1377.75 1212.7 L1378.34 1212.7 L1378.92 1212.7 L1379.51 1212.7 L1380.09 1212.7 L1380.68 1212.7 L1381.27 1212.7 L1381.85 1212.7 L1382.44 1212.7 L1383.03 1212.7 L1383.61 1212.7 L1384.2 1212.7 L1384.79 1212.7 L1385.37 1212.7 L1385.96 1212.7 L1386.55 1212.7 L1387.13 1212.7 L1387.72 1212.7 L1388.3 1212.7 L1388.89 1212.7 L1389.48 1212.7 L1390.06 1212.7 L1390.65 1212.7 L1391.24 1212.7 L1391.82 1212.7 L1392.41 1212.7 L1393 1212.7 L1393.58 1212.7 L1394.17 1212.7 L1394.75 1212.7 L1395.34 1212.7 L1395.93 1212.7 L1396.51 1212.7 L1397.1 1212.7 L1397.69 1212.7 L1398.27 1212.7 L1398.86 1212.7 L1399.45 1212.7 L1400.03 1212.7 L1400.62 1212.7 L1401.21 1212.7 L1401.79 1212.7 L1402.38 1212.7 L1402.96 1212.7 L1403.55 1212.7 L1404.14 1212.7 L1404.72 1212.7 L1405.31 1212.7 L1405.9 1212.7 L1406.48 1212.7 L1407.07 1212.7 L1407.66 1212.7 L1408.24 1212.7 L1408.83 1212.7 L1409.42 1212.7 L1410 1212.7 L1410.59 1212.7 L1411.17 1212.7 L1411.76 1212.7 L1412.35 1212.7 L1412.93 1212.7 L1413.52 1212.7 L1414.11 1212.7 L1414.69 1212.7 L1415.28 1212.7 L1415.87 1212.7 L1416.45 1212.7 L1417.04 1212.7 L1417.63 1212.7 L1418.21 1212.7 L1418.8 1212.7 L1419.38 1212.7 L1419.97 1212.7 L1420.56 1212.7 L1421.14 1212.7 L1421.73 1212.7 L1422.32 1212.7 L1422.9 1212.7 L1423.49 1212.7 L1424.08 1212.7 L1424.66 1212.7 L1425.25 1212.7 L1425.83 1212.7 L1426.42 1212.7 L1427.01 1212.7 L1427.59 1212.7 L1428.18 1212.7 L1428.77 1212.7 L1429.35 1212.7 L1429.94 1212.7 L1430.53 1212.7 L1431.11 1212.7 L1431.7 1212.7 L1432.29 1212.7 L1432.87 1212.7 L1433.46 1212.7 L1434.04 1212.7 L1434.63 1212.7 L1435.22 1212.7 L1435.8 1212.7 L1436.39 1212.7 L1436.98 1212.7 L1437.56 1212.7 L1438.15 1212.7 L1438.74 1212.7 L1439.32 1212.7 L1439.91 1212.7 L1440.5 1212.7 L1441.08 1212.7 L1441.67 1212.7 L1442.25 1212.7 L1442.84 1212.7 L1443.43 1212.7 L1444.01 1212.7 L1444.6 1212.7 L1445.19 1212.7 L1445.77 1212.7 L1446.36 1212.7 L1446.95 1212.7 L1447.53 1212.7 L1448.12 1212.7 L1448.7 1212.7 L1449.29 1212.7 L1449.88 1212.7 L1450.46 1212.7 L1451.05 1212.7 L1451.64 1212.7 L1452.22 1212.7 L1452.81 1212.7 L1453.4 1212.7 L1453.98 1212.7 L1454.57 1212.7 L1455.16 1212.7 L1455.74 1212.7 L1456.33 1212.7 L1456.91 1212.7 L1457.5 1212.7 L1458.09 1212.7 L1458.67 1212.7 L1459.26 1212.7 L1459.85 1212.7 L1460.43 1212.7 L1461.02 1212.7 L1461.61 1212.7 L1462.19 1212.7 L1462.78 1212.7 L1463.37 1212.7 L1463.95 1212.7 L1464.54 1212.7 L1465.12 1212.7 L1465.71 1212.7 L1466.3 1212.7 L1466.88 1212.7 L1467.47 1212.7 L1468.06 1212.7 L1468.64 1212.7 L1469.23 1212.7 L1469.82 1212.7 L1470.4 1212.7 L1470.99 1212.7 L1471.57 1212.7 L1472.16 1212.7 L1472.75 1212.7 L1473.33 1212.7 L1473.92 1212.7 L1474.51 1212.7 L1475.09 1212.7 L1475.68 1212.7 L1476.27 1212.7 L1476.85 1212.7 L1477.44 1212.7 L1478.03 1212.7 L1478.61 1212.7 L1479.2 1212.7 L1479.78 1212.7 L1480.37 1212.7 L1480.96 1212.7 L1481.54 1212.7 L1482.13 1212.7 L1482.72 1212.7 L1483.3 1212.7 L1483.89 1212.7 L1484.48 1212.7 L1485.06 1212.7 L1485.65 1212.7 L1486.24 1212.7 L1486.82 1212.7 L1487.41 1212.7 L1487.99 1212.7 L1488.58 1212.7 L1489.17 1212.7 L1489.75 1212.7 L1490.34 1212.7 L1490.93 1212.7 L1491.51 1212.7 L1492.1 1212.7 L1492.69 1212.7 L1493.27 1212.7 L1493.86 1212.7 L1494.45 1212.7 L1495.03 1212.7 L1495.62 1212.7 L1496.2 1212.7 L1496.79 1212.7 L1497.38 1212.7 L1497.96 1212.7 L1498.55 1212.7 L1499.14 1212.7 L1499.72 1212.7 L1500.31 1212.7 L1500.9 1212.7 L1501.48 1212.7 L1502.07 1212.7 L1502.65 1212.7 L1503.24 1212.7 L1503.83 1212.7 L1504.41 1212.7 L1505 1212.7 L1505.59 1212.7 L1506.17 1212.7 L1506.76 1212.7 L1507.35 1212.7 L1507.93 1212.7 L1508.52 1212.7 L1509.11 1212.7 L1509.69 1212.7 L1510.28 1212.7 L1510.86 1212.7 L1511.45 1212.7 L1512.04 1212.7 L1512.62 1212.7 L1513.21 1212.7 L1513.8 1212.7 L1514.38 1212.7 L1514.97 1212.7 L1515.56 1212.7 L1516.14 1212.7 L1516.73 1212.7 L1517.32 1212.7 L1517.9 1212.7 L1518.49 1212.7 L1519.07 1212.7 L1519.66 1212.7 L1520.25 1212.7 L1520.83 1212.7 L1521.42 1212.7 L1522.01 1212.7 L1522.59 1212.7 L1523.18 1212.7 L1523.77 1212.7 L1524.35 1212.7 L1524.94 1212.7 L1525.52 1212.7 L1526.11 1212.7 L1526.7 1212.7 L1527.28 1212.7 L1527.87 1212.7 L1528.46 1212.7 L1529.04 1212.7 L1529.63 1212.7 L1530.22 1212.7 L1530.8 1212.7 L1531.39 1212.7 L1531.98 1212.7 L1532.56 1212.7 L1533.15 1212.7 L1533.73 1212.7 L1534.32 1212.7 L1534.91 1212.7 L1535.49 1212.7 L1536.08 1212.7 L1536.67 1212.7 L1537.25 1212.7 L1537.84 1212.7 L1538.43 1212.7 L1539.01 1212.7 L1539.6 1212.7 L1540.19 1212.7 L1540.77 1212.7 L1541.36 1212.7 L1541.94 1212.7 L1542.53 1212.7 L1543.12 1212.7 L1543.7 1212.7 L1544.29 1212.7 L1544.88 1212.7 L1545.46 1212.7 L1546.05 1212.7 L1546.64 1212.7 L1547.22 1212.7 L1547.81 1212.7 L1548.4 1212.7 L1548.98 1212.7 L1549.57 1212.7 L1550.15 1212.7 L1550.74 1212.7 L1551.33 1212.7 L1551.91 1212.7 L1552.5 1212.7 L1553.09 1212.7 L1553.67 1212.7 L1554.26 1212.7 L1554.85 1212.7 L1555.43 1212.7 L1556.02 1212.7 L1556.6 1212.7 L1557.19 1212.7 L1557.78 1212.7 L1558.36 1212.7 L1558.95 1212.7 L1559.54 1212.7 L1560.12 1212.7 L1560.71 1212.7 L1561.3 1212.7 L1561.88 1212.7 L1562.47 1212.7 L1563.06 1212.7 L1563.64 1212.7 L1564.23 1212.7 L1564.81 1212.7 L1565.4 1212.7 L1565.99 1212.7 L1566.57 1212.7 L1567.16 1212.7 L1567.75 1212.7 L1568.33 1212.7 L1568.92 1212.7 L1569.51 1212.7 L1570.09 1212.7 L1570.68 1212.7 L1571.27 1212.7 L1571.85 1212.7 L1572.44 1212.7 L1573.02 1212.7 L1573.61 1212.7 L1574.2 1212.7 L1574.78 1212.7 L1575.37 1212.7 L1575.96 1212.7 L1576.54 1212.7 L1577.13 1212.7 L1577.72 1212.7 L1578.3 1212.7 L1578.89 1212.7 L1579.47 1212.7 L1580.06 1212.7 L1580.65 1212.7 L1581.23 1212.7 L1581.82 1212.7 L1582.41 1212.7 L1582.99 1212.7 L1583.58 1212.7 L1584.17 1212.7 L1584.75 1212.7 L1585.34 1212.7 L1585.93 1212.7 L1586.51 1212.7 L1587.1 1212.7 L1587.68 1212.7 L1588.27 1212.7 L1588.86 1212.7 L1589.44 1212.7 L1590.03 1212.7 L1590.62 1212.7 L1591.2 1212.7 L1591.79 1212.7 L1592.38 1212.7 L1592.96 1212.7 L1593.55 1212.7 L1594.14 1212.7 L1594.72 1212.7 L1595.31 1212.7 L1595.89 1212.7 L1596.48 1212.7 L1597.07 1212.7 L1597.65 1212.7 L1598.24 1212.7 L1598.83 1212.7 L1599.41 1212.7 L1600 1212.7 L1600.59 1212.7 L1601.17 1212.7 L1601.76 1212.7 L1602.34 1212.7 L1602.93 1212.7 L1603.52 1212.7 L1604.1 1212.7 L1604.69 1212.7 L1605.28 1212.7 L1605.86 1212.7 L1606.45 1212.7 L1607.04 1212.7 L1607.62 1212.7 L1608.21 1212.7 L1608.8 1212.7 L1609.38 1212.7 L1609.97 1212.7 L1610.55 1212.7 L1611.14 1212.7 L1611.73 1212.7 L1612.31 1212.7 L1612.9 1212.7 L1613.49 1212.7 L1614.07 1212.7 L1614.66 1212.7 L1615.25 1212.7 L1615.83 1212.7 L1616.42 1212.7 L1617.01 1212.7 L1617.59 1212.7 L1618.18 1212.7 L1618.76 1212.7 L1619.35 1212.7 L1619.94 1212.7 L1620.52 1212.7 L1621.11 1212.7 L1621.7 1212.7 L1622.28 1212.7 L1622.87 1212.7 L1623.46 1212.7 L1624.04 1212.7 L1624.63 1212.7 L1625.22 1212.7 L1625.8 1212.7 L1626.39 1212.7 L1626.97 1212.7 L1627.56 1212.7 L1628.15 1212.7 L1628.73 1212.7 L1629.32 1212.7 L1629.91 1212.7 L1630.49 1212.7 L1631.08 1212.7 L1631.67 1212.7 L1632.25 1212.7 L1632.84 1212.7 L1633.42 1212.7 L1634.01 1212.7 L1634.6 1212.7 L1635.18 1212.7 L1635.77 1212.7 L1636.36 1212.7 L1636.94 1212.7 L1637.53 1212.7 L1638.12 1212.7 L1638.7 1212.7 L1639.29 1212.7 L1639.88 1212.7 L1640.46 1212.7 L1641.05 1212.7 L1641.63 1212.7 L1642.22 1212.7 L1642.81 1212.7 L1643.39 1212.7 L1643.98 1212.7 L1644.57 1212.7 L1645.15 1212.7 L1645.74 1212.7 L1646.33 1212.7 L1646.91 1212.7 L1647.5 1212.7 L1648.09 1212.7 L1648.67 1212.7 L1649.26 1212.7 L1649.84 1212.7 L1650.43 1212.7 L1651.02 1212.7 L1651.6 1212.7 L1652.19 1212.7 L1652.78 1212.7 L1653.36 1212.7 L1653.95 1212.7 L1654.54 1212.7 L1655.12 1212.7 L1655.71 1212.7 L1656.29 1212.7 L1656.88 1212.7 L1657.47 1212.7 L1658.05 1212.7 L1658.64 1212.7 L1659.23 1212.7 L1659.81 1212.7 L1660.4 1212.7 L1660.99 1212.7 L1661.57 1212.7 L1662.16 1212.7 L1662.75 1212.7 L1663.33 1212.7 L1663.92 1212.7 L1664.5 1212.7 L1665.09 1212.7 L1665.68 1212.7 L1666.26 1212.7 L1666.85 1212.7 L1667.44 1212.7 L1668.02 1212.7 L1668.61 1212.7 L1669.2 1212.7 L1669.78 1212.7 L1670.37 1212.7 L1670.96 1212.7 L1671.54 1212.7 L1672.13 1212.7 L1672.71 1212.7 L1673.3 1212.7 L1673.89 1212.7 L1674.47 1212.7 L1675.06 1212.7 L1675.65 1212.7 L1676.23 1212.7 L1676.82 1212.7 L1677.41 1212.7 L1677.99 1212.7 L1678.58 1212.7 L1679.17 1212.7 L1679.75 1212.7 L1680.34 1212.7 L1680.92 1212.7 L1681.51 1212.7 L1682.1 1212.7 L1682.68 1212.7 L1683.27 1212.7 L1683.86 1212.7 L1684.44 1212.7 L1685.03 1212.7 L1685.62 1212.7 L1686.2 1212.7 L1686.79 1212.7 L1687.37 1212.7 L1687.96 1212.7 L1688.55 1212.7 L1689.13 1212.7 L1689.72 1212.7 L1690.31 1212.7 L1690.89 1212.7 L1691.48 1212.7 L1692.07 1212.7 L1692.65 1212.7 L1693.24 1212.7 L1693.83 1212.7 L1694.41 1212.7 L1695 1212.7 L1695.58 1212.7 L1696.17 1212.7 L1696.76 1212.7 L1697.34 1212.7 L1697.93 1212.7 L1698.52 1212.7 L1699.1 1212.7 L1699.69 1212.7 L1700.28 1212.7 L1700.86 1212.7 L1701.45 1212.7 L1702.04 1212.7 L1702.62 1212.7 L1703.21 1212.7 L1703.79 1212.7 L1704.38 1212.7 L1704.97 1212.7 L1705.55 1212.7 L1706.14 1212.7 L1706.73 1212.7 L1707.31 1212.7 L1707.9 1212.7 L1708.49 1212.7 L1709.07 1212.7 L1709.66 1212.7 L1710.24 1212.7 L1710.83 1212.7 L1711.42 1212.7 L1712 1212.7 L1712.59 1212.7 L1713.18 1212.7 L1713.76 1212.7 L1714.35 1212.7 L1714.94 1212.7 L1715.52 1212.7 L1716.11 1212.7 L1716.7 1212.7 L1717.28 1212.7 L1717.87 1212.7 L1718.45 1212.7 L1719.04 1212.7 L1719.63 1212.7 L1720.21 1212.7 L1720.8 1212.7 L1721.39 1212.7 L1721.97 1212.7 L1722.56 1212.7 L1723.15 1212.7 L1723.73 1212.7 L1724.32 1212.7 L1724.91 1212.7 L1725.49 1212.7 L1726.08 1212.7 L1726.66 1212.7 L1727.25 1212.7 L1727.84 1212.7 L1728.42 1212.7 L1729.01 1212.7 L1729.6 1212.7 L1730.18 1212.7 L1730.77 1212.7 L1731.36 1212.7 L1731.94 1212.7 L1732.53 1212.7 L1733.11 1212.7 L1733.7 1212.7 L1734.29 1212.7 L1734.87 1212.7 L1735.46 1212.7 L1736.05 1212.7 L1736.63 1212.7 L1737.22 1212.7 L1737.81 1212.7 L1738.39 1212.7 L1738.98 1212.7 L1739.57 1212.7 L1740.15 1212.7 L1740.74 1212.7 L1741.32 1212.7 L1741.91 1212.7 L1742.5 1212.7 L1743.08 1212.7 L1743.67 1212.7 L1744.26 1212.7 L1744.84 1212.7 L1745.43 1212.7 L1746.02 1212.7 L1746.6 1212.7 L1747.19 1212.7 L1747.78 1212.7 L1748.36 1212.7 L1748.95 1212.7 L1749.53 1212.7 L1750.12 1212.7 L1750.71 1212.7 L1751.29 1212.7 L1751.88 1212.7 L1752.47 1212.7 L1753.05 1212.7 L1753.64 1212.7 L1754.23 1212.7 L1754.81 1212.7 L1755.4 1212.7 L1755.99 1212.7 L1756.57 1212.7 L1757.16 1212.7 L1757.74 1212.7 L1758.33 1212.7 L1758.92 1212.7 L1759.5 1212.7 L1760.09 1212.7 L1760.68 1212.7 L1761.26 1212.7 L1761.85 1212.7 L1762.44 1212.7 L1763.02 1212.7 L1763.61 1212.7 L1764.19 1212.7 L1764.78 1212.7 L1765.37 1212.7 L1765.95 1212.7 L1766.54 1212.7 L1767.13 1212.7 L1767.71 1212.7 L1768.3 1212.7 L1768.89 1212.7 L1769.47 1212.7 L1770.06 1212.7 L1770.65 1212.7 L1771.23 1212.7 L1771.82 1212.7 L1772.4 1212.7 L1772.99 1212.7 L1773.58 1212.7 L1774.16 1212.7 L1774.75 1212.7 L1775.34 1212.7 L1775.92 1212.7 L1776.51 1212.7 L1777.1 1212.7 L1777.68 1212.7 L1778.27 1212.7 L1778.86 1212.7 L1779.44 1212.7 L1780.03 1212.7 L1780.61 1212.7 L1781.2 1212.7 L1781.79 1212.7 L1782.37 1212.7 L1782.96 1212.7 L1783.55 1212.7 L1784.13 1212.7 L1784.72 1212.7 L1785.31 1212.7 L1785.89 1212.7 L1786.48 1212.7 L1787.06 1212.7 L1787.65 1212.7 L1788.24 1212.7 L1788.82 1212.7 L1789.41 1212.7 L1790 1212.7 L1790.58 1212.7 L1791.17 1212.7 L1791.76 1212.7 L1792.34 1212.7 L1792.93 1212.7 L1793.52 1212.7 L1794.1 1212.7 L1794.69 1212.7 L1795.27 1212.7 L1795.86 1212.7 L1796.45 1212.7 L1797.03 1212.7 L1797.62 1212.7 L1798.21 1212.7 L1798.79 1212.7 L1799.38 1212.7 L1799.97 1212.7 L1800.55 1212.7 L1801.14 1212.7 L1801.73 1212.7 L1802.31 1212.7 L1802.9 1212.7 L1803.48 1212.7 L1804.07 1212.7 L1804.66 1212.7 L1805.24 1212.7 L1805.83 1212.7 L1806.42 1212.7 L1807 1212.7 L1807.59 1212.7 L1808.18 1212.7 L1808.76 1212.7 L1809.35 1212.7 L1809.94 1212.7 L1810.52 1212.7 L1811.11 1212.7 L1811.69 1212.7 L1812.28 1212.7 L1812.87 1212.7 L1813.45 1212.7 L1814.04 1212.7 L1814.63 1212.7 L1815.21 1212.7 L1815.8 1212.7 L1816.39 1212.7 L1816.97 1212.7 L1817.56 1212.7 L1818.14 1212.7 L1818.73 1212.7 L1819.32 1212.7 L1819.9 1212.7 L1820.49 1212.7 L1821.08 1212.7 L1821.66 1212.7 L1822.25 1212.7 L1822.84 1212.7 L1823.42 1212.7 L1824.01 1212.7 L1824.6 1212.7 L1825.18 1212.7 L1825.77 1212.7 L1826.35 1212.7 L1826.94 1212.7 L1827.53 1212.7 L1828.11 1212.7 L1828.7 1212.7 L1829.29 1212.7 L1829.87 1212.7 L1830.46 1212.7 L1831.05 1212.7 L1831.63 1212.7 L1832.22 1212.7 L1832.81 1212.7 L1833.39 1212.7 L1833.98 1212.7 L1834.56 1212.7 L1835.15 1212.7 L1835.74 1212.7 L1836.32 1212.7 L1836.91 1212.7 L1837.5 1212.7 L1838.08 1212.7 L1838.67 1212.7 L1839.26 1212.7 L1839.84 1212.7 L1840.43 1212.7 L1841.01 1212.7 L1841.6 1212.7 L1842.19 1212.7 L1842.77 1212.7 L1843.36 1212.7 L1843.95 1212.7 L1844.53 1212.7 L1845.12 1212.7 L1845.71 1212.7 L1846.29 1212.7 L1846.88 1212.7 L1847.47 1212.7 L1848.05 1212.7 L1848.64 1212.7 L1849.22 1212.7 L1849.81 1212.7 L1850.4 1212.7 L1850.98 1212.7 L1851.57 1212.7 L1852.16 1212.7 L1852.74 1212.7 L1853.33 1212.7 L1853.92 1212.7 L1854.5 1212.7 L1855.09 1212.7 L1855.68 1212.7 L1856.26 1212.7 L1856.85 1212.7 L1857.43 1212.7 L1858.02 1212.7 L1858.61 1212.7 L1859.19 1212.7 L1859.78 1212.7 L1860.37 1212.7 L1860.95 1212.7 L1861.54 1212.7 L1862.13 1212.7 L1862.71 1212.7 L1863.3 1212.7 L1863.88 1212.7 L1864.47 1212.7 L1865.06 1212.7 L1865.64 1212.7 L1866.23 1212.7 L1866.82 1212.7 L1867.4 1212.7 L1867.99 1212.7 L1868.58 1212.7 L1869.16 1212.7 L1869.75 1212.7 L1870.34 1212.7 L1870.92 1212.7 L1871.51 1212.7 L1872.09 1212.7 L1872.68 1212.7 L1873.27 1212.7 L1873.85 1212.7 L1874.44 1212.7 L1875.03 1212.7 L1875.61 1212.7 L1876.2 1212.7 L1876.79 1212.7 L1877.37 1212.7 L1877.96 1212.7 L1878.55 1212.7 L1879.13 1212.7 L1879.72 1212.7 L1880.3 1212.7 L1880.89 1212.7 L1881.48 1212.7 L1882.06 1212.7 L1882.65 1212.7 L1883.24 1212.7 L1883.82 1212.7 L1884.41 1212.7 L1885 1212.7 L1885.58 1212.7 L1886.17 1212.7 L1886.76 1212.7 L1887.34 1212.7 L1887.93 1212.7 L1888.51 1212.7 L1889.1 1212.7 L1889.69 1212.7 L1890.27 1212.7 L1890.86 1212.7 L1891.45 1212.7 L1892.03 1212.7 L1892.62 1212.7 L1893.21 1212.7 L1893.79 1212.7 L1894.38 1212.7 L1894.96 1212.7 L1895.55 1212.7 L1896.14 1212.7 L1896.72 1212.7 L1897.31 1212.7 L1897.9 1212.7 L1898.48 1212.7 L1899.07 1212.7 L1899.66 1212.7 L1900.24 1212.7 L1900.83 1212.7 L1901.42 1212.7 L1902 1212.7 L1902.59 1212.7 L1903.17 1212.7 L1903.76 1212.7 L1904.35 1212.7 L1904.93 1212.7 L1905.52 1212.7 L1906.11 1212.7 L1906.69 1212.7 L1907.28 1212.7 L1907.87 1212.7 L1908.45 1212.7 L1909.04 1212.7 L1909.63 1212.7 L1910.21 1212.7 L1910.8 1212.7 L1911.38 1212.7 L1911.97 1212.7 L1912.56 1212.7 L1913.14 1212.7 L1913.73 1212.7 L1914.32 1212.7 L1914.9 1212.7 L1915.49 1212.7 L1916.08 1212.7 L1916.66 1212.7 L1917.25 1212.7 L1917.83 1212.7 L1918.42 1212.7 L1919.01 1212.7 L1919.59 1212.7 L1920.18 1212.7 L1920.77 1212.7 L1921.35 1212.7 L1921.94 1212.7 L1922.53 1212.7 L1923.11 1212.7 L1923.7 1212.7 L1924.29 1212.7 L1924.87 1212.7 L1925.46 1212.7 L1926.04 1212.7 L1926.63 1212.7 L1927.22 1212.7 L1927.8 1212.7 L1928.39 1212.7 L1928.98 1212.7 L1929.56 1212.7 L1930.15 1212.7 L1930.74 1212.7 L1931.32 1212.7 L1931.91 1212.7 L1932.5 1212.7 L1933.08 1212.7 L1933.67 1212.7 L1934.25 1212.7 L1934.84 1212.7 L1935.43 1212.7 L1936.01 1212.7 L1936.6 1212.7 L1937.19 1212.7 L1937.77 1212.7 L1938.36 1212.7 L1938.95 1212.7 L1939.53 1212.7 L1940.12 1212.7 L1940.71 1212.7 L1941.29 1212.7 L1941.88 1212.7 L1942.46 1212.7 L1943.05 1212.7 L1943.64 1212.7 L1944.22 1212.7 L1944.81 1212.7 L1945.4 1212.7 L1945.98 1212.7 L1946.57 1212.7 L1947.16 1212.7 L1947.74 1212.7 L1948.33 1212.7 L1948.91 1212.7 L1949.5 1212.7 L1950.09 1212.7 L1950.67 1212.7 L1951.26 1212.7 L1951.85 1212.7 L1952.43 1212.7 L1953.02 1212.7 L1953.61 1212.7 L1954.19 1212.7 L1954.78 1212.7 L1955.37 1212.7 L1955.95 1212.7 L1956.54 1212.7 L1957.12 1212.7 L1957.71 1212.7 L1958.3 1212.7 L1958.88 1212.7 L1959.47 1212.7 L1960.06 1212.7 L1960.64 1212.7 L1961.23 1212.7 L1961.82 1212.7 L1962.4 1212.7 L1962.99 1212.7 L1963.58 1212.7 L1964.16 1212.7 L1964.75 1212.7 L1965.33 1212.7 L1965.92 1212.7 L1966.51 1212.7 L1967.09 1212.7 L1967.68 1212.7 L1968.27 1212.7 L1968.85 1212.7 L1969.44 1212.7 L1970.03 1212.7 L1970.61 1212.7 L1971.2 1212.7 L1971.78 1212.7 L1972.37 1212.7 L1972.96 1212.7 L1973.54 1212.7 L1974.13 1212.7 L1974.72 1212.7 L1975.3 1212.7 L1975.89 1212.7 L1976.48 1212.7 L1977.06 1212.7 L1977.65 1212.7 L1978.24 1212.7 L1978.82 1212.7 L1979.41 1212.7 L1979.99 1212.7 L1980.58 1212.7 L1981.17 1212.7 L1981.75 1212.7 L1982.34 1212.7 L1982.93 1212.7 L1983.51 1212.7 L1984.1 1212.7 L1984.69 1212.7 L1985.27 1212.7 L1985.86 1212.7 L1986.45 1212.7 L1987.03 1212.7 L1987.62 1212.7 L1988.2 1212.7 L1988.79 1212.7 L1989.38 1212.7 L1989.96 1212.7 L1990.55 1212.7 L1991.14 1212.7 L1991.72 1212.7 L1992.31 1212.7 L1992.9 1212.7 L1993.48 1212.7 L1994.07 1212.7 L1994.65 1212.7 L1995.24 1212.7 L1995.83 1212.7 L1996.41 1212.7 L1997 1212.7 L1997.59 1212.7 L1998.17 1212.7 L1998.76 1212.7 L1999.35 1212.7 L1999.93 1212.7 L2000.52 1212.7 L2001.11 1212.7 L2001.69 1212.7 L2002.28 1212.7 L2002.86 1212.7 L2003.45 1212.7 L2004.04 1212.7 L2004.62 1212.7 L2005.21 1212.7 L2005.8 1212.7 L2006.38 1212.7 L2006.97 1212.7 L2007.56 1212.7 L2008.14 1212.7 L2008.73 1212.7 L2009.32 1212.7 L2009.9 1212.7 L2010.49 1212.7 L2011.07 1212.7 L2011.66 1212.7 L2012.25 1212.7 L2012.83 1212.7 L2013.42 1212.7 L2014.01 1212.7 L2014.59 1212.7 L2015.18 1212.7 L2015.77 1212.7 L2016.35 1212.7 L2016.94 1212.7 L2017.53 1212.7 L2018.11 1212.7 L2018.7 1212.7 L2019.28 1212.7 L2019.87 1212.7 L2020.46 1212.7 L2021.04 1212.7 L2021.63 1212.7 L2022.22 1212.7 L2022.8 1212.7 L2023.39 1212.7 L2023.98 1212.7 L2024.56 1212.7 L2025.15 1212.7 L2025.73 1212.7 L2026.32 1212.7 L2026.91 1212.7 L2027.49 1212.7 L2028.08 1212.7 L2028.67 1212.7 L2029.25 1212.7 L2029.84 1212.7 L2030.43 1212.7 L2031.01 1212.7 L2031.6 1212.7 L2032.19 1212.7 L2032.77 1212.7 L2033.36 1212.7 L2033.94 1212.7 L2034.53 1212.7 L2035.12 1212.7 L2035.7 1212.7 L2036.29 1212.7 L2036.88 1212.7 L2037.46 1212.7 L2038.05 1212.7 L2038.64 1212.7 L2039.22 1212.7 L2039.81 1212.7 L2040.4 1212.7 L2040.98 1212.7 L2041.57 1212.7 L2042.15 1212.7 L2042.74 1212.7 L2043.33 1212.7 L2043.91 1212.7 L2044.5 1212.7 L2045.09 1212.7 L2045.67 1212.7 L2046.26 1212.7 L2046.85 1212.7 L2047.43 1212.7 L2048.02 1212.7 L2048.6 1212.7 L2049.19 1212.7 L2049.78 1212.7 L2050.36 1212.7 L2050.95 1212.7 L2051.54 1212.7 L2052.12 1212.7 L2052.71 1212.7 L2053.3 1212.7 L2053.88 1212.7 L2054.47 1212.7 L2055.06 1212.7 L2055.64 1212.7 L2056.23 1212.7 L2056.81 1212.7 L2057.4 1212.7 L2057.99 1212.7 L2058.57 1212.7 L2059.16 1212.7 L2059.75 1212.7 L2060.33 1212.7 L2060.92 1212.7 L2061.51 1212.7 L2062.09 1212.7 L2062.68 1212.7 L2063.27 1212.7 L2063.85 1212.7 L2064.44 1212.7 L2065.02 1212.7 L2065.61 1212.7 L2066.2 1212.7 L2066.78 1212.7 L2067.37 1212.7 L2067.96 1212.7 L2068.54 1212.7 L2069.13 1212.7 L2069.72 1212.7 L2070.3 1212.7 L2070.89 1212.7 L2071.48 1212.7 L2072.06 1212.7 L2072.65 1212.7 L2073.23 1212.7 L2073.82 1212.7 L2074.41 1212.7 L2074.99 1212.7 L2075.58 1212.7 L2076.17 1212.7 L2076.75 1212.7 L2077.34 1212.7 L2077.93 1212.7 L2078.51 1212.7 L2079.1 1212.7 L2079.68 1212.7 L2080.27 1212.7 L2080.86 1212.7 L2081.44 1212.7 L2082.03 1212.7 L2082.62 1212.7 L2083.2 1212.7 L2083.79 1212.7 L2084.38 1212.7 L2084.96 1212.7 L2085.55 1212.7 L2086.14 1212.7 L2086.72 1212.7 L2087.31 1212.7 L2087.89 1212.7 L2088.48 1212.7 L2089.07 1212.7 L2089.65 1212.7 L2090.24 1212.7 L2090.83 1212.7 L2091.41 1212.7 L2092 1212.7 L2092.59 1212.7 L2093.17 1212.7 L2093.76 1212.7 L2094.35 1212.7 L2094.93 1212.7 L2095.52 1212.7 L2096.1 1212.7 L2096.69 1212.7 L2097.28 1212.7 L2097.86 1212.7 L2098.45 1212.7 L2099.04 1212.7 L2099.62 1212.7 L2100.21 1212.7 L2100.8 1212.7 L2101.38 1212.7 L2101.97 1212.7 L2102.55 1212.7 L2103.14 1212.7 L2103.73 1212.7 L2104.31 1212.7 L2104.9 1212.7 L2105.49 1212.7 L2106.07 1212.7 L2106.66 1212.7 L2107.25 1212.7 L2107.83 1212.7 L2108.42 1212.7 L2109.01 1212.7 L2109.59 1212.7 L2110.18 1212.7 L2110.76 1212.7 L2111.35 1212.7 L2111.94 1212.7 L2112.52 1212.7 L2113.11 1212.7 L2113.7 1212.7 L2114.28 1212.7 L2114.87 1212.7 L2115.46 1212.7 L2116.04 1212.7 L2116.63 1212.7 L2117.22 1212.7 L2117.8 1212.7 L2118.39 1212.7 L2118.97 1212.7 L2119.56 1212.7 L2120.15 1212.7 L2120.73 1212.7 L2121.32 1212.7 L2121.91 1212.7 L2122.49 1212.7 L2123.08 1212.7 L2123.67 1212.7 L2124.25 1212.7 L2124.84 1212.7 L2125.42 1212.7 L2126.01 1212.7 L2126.6 1212.7 L2127.18 1212.7 L2127.77 1212.7 L2128.36 1212.7 L2128.94 1212.7 L2129.53 1212.7 L2130.12 1212.7 L2130.7 1212.7 L2131.29 1212.7 L2131.88 1212.7 L2132.46 1212.7 L2133.05 1212.7 L2133.63 1212.7 L2134.22 1212.7 L2134.81 1212.7 L2135.39 1212.7 L2135.98 1212.7 L2136.57 1212.7 L2137.15 1212.7 L2137.74 1212.7 L2138.33 1212.7 L2138.91 1212.7 L2139.5 1212.7 L2140.09 1212.7 L2140.67 1212.7 L2141.26 1212.7 L2141.84 1212.7 L2142.43 1212.7 L2143.02 1212.7 L2143.6 1212.7 L2144.19 1212.7 L2144.78 1212.7 L2145.36 1212.7 L2145.95 1212.7 L2146.54 1212.7 L2147.12 1212.7 L2147.71 1212.7 L2148.3 1212.7 L2148.88 1212.7 L2149.47 1212.7 L2150.05 1212.7 L2150.64 1212.7 L2151.23 1212.7 L2151.81 1212.7 L2152.4 1212.7 L2152.99 1212.7 L2153.57 1212.7 L2154.16 1212.7 L2154.75 1212.7 L2155.33 1212.7 L2155.92 1212.7 L2156.5 1212.7 L2157.09 1212.7 L2157.68 1212.7 L2158.26 1212.7 L2158.26 1212.13 L2157.68 1212.13 L2157.09 1212.13 L2156.5 1212.13 L2155.92 1212.13 L2155.33 1212.13 L2154.75 1212.13 L2154.16 1212.13 L2153.57 1212.13 L2152.99 1212.13 L2152.4 1212.13 L2151.81 1212.13 L2151.23 1212.13 L2150.64 1212.13 L2150.05 1212.13 L2149.47 1212.13 L2148.88 1212.13 L2148.3 1212.13 L2147.71 1212.13 L2147.12 1212.13 L2146.54 1212.13 L2145.95 1212.13 L2145.36 1212.13 L2144.78 1212.13 L2144.19 1212.13 L2143.6 1212.13 L2143.02 1212.13 L2142.43 1212.13 L2141.84 1212.13 L2141.26 1212.13 L2140.67 1212.13 L2140.09 1212.13 L2139.5 1212.13 L2138.91 1212.13 L2138.33 1212.13 L2137.74 1212.13 L2137.15 1212.13 L2136.57 1212.13 L2135.98 1212.13 L2135.39 1212.13 L2134.81 1212.13 L2134.22 1212.13 L2133.63 1212.13 L2133.05 1212.13 L2132.46 1212.13 L2131.88 1212.13 L2131.29 1212.13 L2130.7 1212.13 L2130.12 1212.13 L2129.53 1212.13 L2128.94 1212.13 L2128.36 1212.13 L2127.77 1212.13 L2127.18 1212.13 L2126.6 1212.13 L2126.01 1212.13 L2125.42 1212.13 L2124.84 1212.13 L2124.25 1212.13 L2123.67 1212.13 L2123.08 1212.13 L2122.49 1212.13 L2121.91 1212.13 L2121.32 1212.13 L2120.73 1212.13 L2120.15 1212.13 L2119.56 1212.13 L2118.97 1212.13 L2118.39 1212.13 L2117.8 1212.13 L2117.22 1212.13 L2116.63 1212.13 L2116.04 1212.13 L2115.46 1212.13 L2114.87 1212.13 L2114.28 1212.13 L2113.7 1212.13 L2113.11 1212.13 L2112.52 1212.13 L2111.94 1212.13 L2111.35 1212.13 L2110.76 1212.13 L2110.18 1212.13 L2109.59 1212.13 L2109.01 1212.13 L2108.42 1212.13 L2107.83 1212.13 L2107.25 1212.13 L2106.66 1212.13 L2106.07 1212.13 L2105.49 1212.13 L2104.9 1212.13 L2104.31 1212.13 L2103.73 1212.13 L2103.14 1212.13 L2102.55 1212.13 L2101.97 1212.13 L2101.38 1212.13 L2100.8 1212.13 L2100.21 1212.13 L2099.62 1212.13 L2099.04 1212.13 L2098.45 1212.13 L2097.86 1212.13 L2097.28 1212.13 L2096.69 1212.13 L2096.1 1212.13 L2095.52 1212.13 L2094.93 1212.13 L2094.35 1212.13 L2093.76 1212.13 L2093.17 1212.13 L2092.59 1212.13 L2092 1212.13 L2091.41 1212.13 L2090.83 1212.13 L2090.24 1212.13 L2089.65 1212.13 L2089.07 1212.13 L2088.48 1212.13 L2087.89 1212.13 L2087.31 1212.13 L2086.72 1212.13 L2086.14 1212.13 L2085.55 1212.13 L2084.96 1212.13 L2084.38 1212.13 L2083.79 1212.13 L2083.2 1212.13 L2082.62 1212.13 L2082.03 1212.13 L2081.44 1212.13 L2080.86 1212.13 L2080.27 1212.13 L2079.68 1212.13 L2079.1 1212.13 L2078.51 1212.13 L2077.93 1212.13 L2077.34 1212.13 L2076.75 1212.13 L2076.17 1212.13 L2075.58 1212.13 L2074.99 1212.13 L2074.41 1212.13 L2073.82 1212.13 L2073.23 1212.13 L2072.65 1212.13 L2072.06 1212.13 L2071.48 1212.13 L2070.89 1212.13 L2070.3 1212.13 L2069.72 1212.13 L2069.13 1212.13 L2068.54 1212.13 L2067.96 1212.13 L2067.37 1212.13 L2066.78 1212.13 L2066.2 1212.13 L2065.61 1212.13 L2065.02 1212.13 L2064.44 1212.13 L2063.85 1212.13 L2063.27 1212.13 L2062.68 1212.13 L2062.09 1212.13 L2061.51 1212.13 L2060.92 1212.13 L2060.33 1212.13 L2059.75 1212.13 L2059.16 1212.13 L2058.57 1212.13 L2057.99 1212.13 L2057.4 1212.13 L2056.81 1212.13 L2056.23 1212.13 L2055.64 1212.13 L2055.06 1212.13 L2054.47 1212.13 L2053.88 1212.13 L2053.3 1212.13 L2052.71 1212.13 L2052.12 1212.13 L2051.54 1212.13 L2050.95 1212.13 L2050.36 1212.13 L2049.78 1212.13 L2049.19 1212.13 L2048.6 1212.13 L2048.02 1212.13 L2047.43 1212.13 L2046.85 1212.13 L2046.26 1212.13 L2045.67 1212.13 L2045.09 1212.13 L2044.5 1212.13 L2043.91 1212.13 L2043.33 1212.13 L2042.74 1212.13 L2042.15 1212.13 L2041.57 1212.13 L2040.98 1212.13 L2040.4 1212.13 L2039.81 1212.13 L2039.22 1212.13 L2038.64 1212.13 L2038.05 1212.13 L2037.46 1212.13 L2036.88 1212.13 L2036.29 1212.13 L2035.7 1212.13 L2035.12 1212.13 L2034.53 1212.13 L2033.94 1212.13 L2033.36 1212.13 L2032.77 1212.13 L2032.19 1212.13 L2031.6 1212.13 L2031.01 1212.13 L2030.43 1212.13 L2029.84 1212.13 L2029.25 1212.13 L2028.67 1212.13 L2028.08 1212.13 L2027.49 1212.13 L2026.91 1212.13 L2026.32 1212.13 L2025.73 1212.13 L2025.15 1212.13 L2024.56 1212.13 L2023.98 1212.13 L2023.39 1212.13 L2022.8 1212.13 L2022.22 1212.13 L2021.63 1212.13 L2021.04 1212.13 L2020.46 1212.13 L2019.87 1212.13 L2019.28 1212.13 L2018.7 1212.13 L2018.11 1212.13 L2017.53 1212.13 L2016.94 1212.13 L2016.35 1212.13 L2015.77 1212.13 L2015.18 1212.13 L2014.59 1212.13 L2014.01 1212.13 L2013.42 1212.13 L2012.83 1212.13 L2012.25 1212.13 L2011.66 1212.13 L2011.07 1212.13 L2010.49 1212.13 L2009.9 1212.13 L2009.32 1212.13 L2008.73 1212.13 L2008.14 1212.13 L2007.56 1212.13 L2006.97 1212.13 L2006.38 1212.13 L2005.8 1212.13 L2005.21 1212.13 L2004.62 1212.13 L2004.04 1212.13 L2003.45 1212.13 L2002.86 1212.13 L2002.28 1212.13 L2001.69 1212.13 L2001.11 1212.13 L2000.52 1212.13 L1999.93 1212.13 L1999.35 1212.13 L1998.76 1212.13 L1998.17 1212.13 L1997.59 1212.13 L1997 1212.13 L1996.41 1212.13 L1995.83 1212.13 L1995.24 1212.13 L1994.65 1212.13 L1994.07 1212.13 L1993.48 1212.13 L1992.9 1212.13 L1992.31 1212.13 L1991.72 1212.13 L1991.14 1212.13 L1990.55 1212.13 L1989.96 1212.13 L1989.38 1212.13 L1988.79 1212.13 L1988.2 1212.13 L1987.62 1212.13 L1987.03 1212.13 L1986.45 1212.13 L1985.86 1212.13 L1985.27 1212.13 L1984.69 1212.13 L1984.1 1212.13 L1983.51 1212.13 L1982.93 1212.13 L1982.34 1212.13 L1981.75 1212.13 L1981.17 1212.13 L1980.58 1212.13 L1979.99 1212.13 L1979.41 1212.13 L1978.82 1212.13 L1978.24 1212.13 L1977.65 1212.13 L1977.06 1212.13 L1976.48 1212.13 L1975.89 1212.13 L1975.3 1212.13 L1974.72 1212.13 L1974.13 1212.13 L1973.54 1212.13 L1972.96 1212.13 L1972.37 1212.13 L1971.78 1212.13 L1971.2 1212.13 L1970.61 1212.13 L1970.03 1212.13 L1969.44 1212.13 L1968.85 1212.13 L1968.27 1212.13 L1967.68 1212.13 L1967.09 1212.13 L1966.51 1212.13 L1965.92 1212.13 L1965.33 1212.13 L1964.75 1212.13 L1964.16 1212.13 L1963.58 1212.13 L1962.99 1212.13 L1962.4 1212.13 L1961.82 1212.13 L1961.23 1212.13 L1960.64 1212.13 L1960.06 1212.13 L1959.47 1212.13 L1958.88 1212.13 L1958.3 1212.13 L1957.71 1212.13 L1957.12 1212.13 L1956.54 1212.13 L1955.95 1212.13 L1955.37 1212.13 L1954.78 1212.13 L1954.19 1212.13 L1953.61 1212.13 L1953.02 1212.13 L1952.43 1212.13 L1951.85 1212.13 L1951.26 1212.13 L1950.67 1212.13 L1950.09 1212.13 L1949.5 1212.13 L1948.91 1212.13 L1948.33 1212.13 L1947.74 1212.13 L1947.16 1212.13 L1946.57 1212.13 L1945.98 1212.13 L1945.4 1212.13 L1944.81 1212.13 L1944.22 1212.13 L1943.64 1212.13 L1943.05 1212.13 L1942.46 1212.13 L1941.88 1212.13 L1941.29 1212.13 L1940.71 1212.13 L1940.12 1212.13 L1939.53 1212.13 L1938.95 1212.13 L1938.36 1212.13 L1937.77 1212.13 L1937.19 1212.13 L1936.6 1212.13 L1936.01 1212.13 L1935.43 1212.13 L1934.84 1212.13 L1934.25 1212.13 L1933.67 1212.13 L1933.08 1212.13 L1932.5 1212.13 L1931.91 1212.13 L1931.32 1212.13 L1930.74 1212.13 L1930.15 1212.13 L1929.56 1212.13 L1928.98 1212.13 L1928.39 1212.13 L1927.8 1212.13 L1927.22 1212.13 L1926.63 1212.13 L1926.04 1212.13 L1925.46 1212.13 L1924.87 1212.13 L1924.29 1212.13 L1923.7 1212.13 L1923.11 1212.13 L1922.53 1212.13 L1921.94 1212.13 L1921.35 1212.13 L1920.77 1212.13 L1920.18 1212.13 L1919.59 1212.13 L1919.01 1212.13 L1918.42 1212.13 L1917.83 1212.13 L1917.25 1212.13 L1916.66 1212.13 L1916.08 1212.13 L1915.49 1212.13 L1914.9 1212.13 L1914.32 1212.13 L1913.73 1212.13 L1913.14 1212.13 L1912.56 1212.13 L1911.97 1212.13 L1911.38 1212.13 L1910.8 1212.13 L1910.21 1212.13 L1909.63 1212.13 L1909.04 1212.13 L1908.45 1212.13 L1907.87 1212.13 L1907.28 1212.13 L1906.69 1212.13 L1906.11 1212.13 L1905.52 1212.13 L1904.93 1212.13 L1904.35 1212.13 L1903.76 1212.13 L1903.17 1212.13 L1902.59 1212.13 L1902 1212.13 L1901.42 1212.13 L1900.83 1212.13 L1900.24 1212.13 L1899.66 1212.13 L1899.07 1212.13 L1898.48 1212.13 L1897.9 1212.13 L1897.31 1212.13 L1896.72 1212.13 L1896.14 1212.13 L1895.55 1212.13 L1894.96 1212.13 L1894.38 1212.13 L1893.79 1212.13 L1893.21 1212.13 L1892.62 1212.13 L1892.03 1212.13 L1891.45 1212.13 L1890.86 1212.13 L1890.27 1212.13 L1889.69 1212.13 L1889.1 1212.13 L1888.51 1212.13 L1887.93 1212.13 L1887.34 1212.13 L1886.76 1212.13 L1886.17 1212.13 L1885.58 1212.13 L1885 1212.13 L1884.41 1212.13 L1883.82 1212.13 L1883.24 1212.13 L1882.65 1212.13 L1882.06 1212.13 L1881.48 1212.13 L1880.89 1212.13 L1880.3 1212.13 L1879.72 1212.13 L1879.13 1212.13 L1878.55 1212.13 L1877.96 1212.13 L1877.37 1212.13 L1876.79 1212.13 L1876.2 1212.13 L1875.61 1212.13 L1875.03 1212.13 L1874.44 1212.13 L1873.85 1212.13 L1873.27 1212.13 L1872.68 1212.13 L1872.09 1212.13 L1871.51 1212.13 L1870.92 1212.13 L1870.34 1212.13 L1869.75 1212.13 L1869.16 1212.13 L1868.58 1212.13 L1867.99 1212.13 L1867.4 1212.13 L1866.82 1212.13 L1866.23 1212.13 L1865.64 1212.13 L1865.06 1212.13 L1864.47 1212.13 L1863.88 1212.13 L1863.3 1212.13 L1862.71 1212.13 L1862.13 1212.13 L1861.54 1212.13 L1860.95 1212.13 L1860.37 1212.13 L1859.78 1212.13 L1859.19 1212.13 L1858.61 1212.13 L1858.02 1212.13 L1857.43 1212.13 L1856.85 1212.13 L1856.26 1212.13 L1855.68 1212.13 L1855.09 1212.13 L1854.5 1212.13 L1853.92 1212.13 L1853.33 1212.13 L1852.74 1212.13 L1852.16 1212.13 L1851.57 1212.13 L1850.98 1212.13 L1850.4 1212.13 L1849.81 1212.13 L1849.22 1212.13 L1848.64 1212.13 L1848.05 1212.13 L1847.47 1212.13 L1846.88 1212.13 L1846.29 1212.13 L1845.71 1212.13 L1845.12 1212.13 L1844.53 1212.13 L1843.95 1212.13 L1843.36 1212.13 L1842.77 1212.13 L1842.19 1212.13 L1841.6 1212.13 L1841.01 1212.13 L1840.43 1212.13 L1839.84 1212.13 L1839.26 1212.13 L1838.67 1212.13 L1838.08 1212.13 L1837.5 1212.13 L1836.91 1212.13 L1836.32 1212.13 L1835.74 1212.13 L1835.15 1212.13 L1834.56 1212.13 L1833.98 1212.13 L1833.39 1212.13 L1832.81 1212.13 L1832.22 1212.13 L1831.63 1212.13 L1831.05 1212.13 L1830.46 1212.13 L1829.87 1212.13 L1829.29 1212.13 L1828.7 1212.13 L1828.11 1212.13 L1827.53 1212.13 L1826.94 1212.13 L1826.35 1212.13 L1825.77 1212.13 L1825.18 1212.13 L1824.6 1212.13 L1824.01 1212.13 L1823.42 1212.13 L1822.84 1212.13 L1822.25 1212.13 L1821.66 1212.13 L1821.08 1212.13 L1820.49 1212.13 L1819.9 1212.13 L1819.32 1212.13 L1818.73 1212.13 L1818.14 1212.13 L1817.56 1212.13 L1816.97 1212.13 L1816.39 1212.13 L1815.8 1212.13 L1815.21 1212.13 L1814.63 1212.13 L1814.04 1212.13 L1813.45 1212.13 L1812.87 1212.13 L1812.28 1212.13 L1811.69 1212.13 L1811.11 1212.13 L1810.52 1212.13 L1809.94 1212.13 L1809.35 1212.13 L1808.76 1212.13 L1808.18 1212.13 L1807.59 1212.13 L1807 1212.13 L1806.42 1212.13 L1805.83 1212.13 L1805.24 1212.13 L1804.66 1212.13 L1804.07 1212.13 L1803.48 1212.13 L1802.9 1212.13 L1802.31 1212.13 L1801.73 1212.13 L1801.14 1212.13 L1800.55 1212.13 L1799.97 1212.13 L1799.38 1212.13 L1798.79 1212.13 L1798.21 1212.13 L1797.62 1212.13 L1797.03 1212.13 L1796.45 1212.13 L1795.86 1212.13 L1795.27 1212.13 L1794.69 1212.13 L1794.1 1212.13 L1793.52 1212.13 L1792.93 1212.13 L1792.34 1212.13 L1791.76 1212.13 L1791.17 1212.13 L1790.58 1212.13 L1790 1212.13 L1789.41 1212.13 L1788.82 1212.13 L1788.24 1212.13 L1787.65 1212.13 L1787.06 1212.13 L1786.48 1212.13 L1785.89 1212.13 L1785.31 1212.13 L1784.72 1212.13 L1784.13 1212.13 L1783.55 1212.13 L1782.96 1212.13 L1782.37 1212.13 L1781.79 1212.13 L1781.2 1212.13 L1780.61 1212.13 L1780.03 1212.13 L1779.44 1212.13 L1778.86 1212.13 L1778.27 1212.13 L1777.68 1212.13 L1777.1 1212.13 L1776.51 1212.13 L1775.92 1212.13 L1775.34 1212.13 L1774.75 1212.13 L1774.16 1212.13 L1773.58 1212.13 L1772.99 1212.13 L1772.4 1212.13 L1771.82 1212.13 L1771.23 1212.13 L1770.65 1212.13 L1770.06 1212.13 L1769.47 1212.13 L1768.89 1212.13 L1768.3 1212.13 L1767.71 1212.13 L1767.13 1212.13 L1766.54 1212.13 L1765.95 1212.13 L1765.37 1212.13 L1764.78 1212.13 L1764.19 1212.13 L1763.61 1212.13 L1763.02 1212.13 L1762.44 1212.13 L1761.85 1212.13 L1761.26 1212.13 L1760.68 1212.13 L1760.09 1212.13 L1759.5 1212.13 L1758.92 1212.13 L1758.33 1212.13 L1757.74 1212.13 L1757.16 1212.13 L1756.57 1212.13 L1755.99 1212.13 L1755.4 1212.13 L1754.81 1212.13 L1754.23 1212.13 L1753.64 1212.13 L1753.05 1212.13 L1752.47 1212.13 L1751.88 1212.13 L1751.29 1212.13 L1750.71 1212.13 L1750.12 1212.13 L1749.53 1212.13 L1748.95 1212.13 L1748.36 1212.13 L1747.78 1212.13 L1747.19 1212.13 L1746.6 1212.13 L1746.02 1212.13 L1745.43 1212.13 L1744.84 1212.13 L1744.26 1212.13 L1743.67 1212.13 L1743.08 1212.13 L1742.5 1212.13 L1741.91 1212.13 L1741.32 1212.13 L1740.74 1212.13 L1740.15 1212.13 L1739.57 1212.13 L1738.98 1212.13 L1738.39 1212.13 L1737.81 1212.13 L1737.22 1212.13 L1736.63 1212.13 L1736.05 1212.13 L1735.46 1212.13 L1734.87 1212.13 L1734.29 1212.13 L1733.7 1212.13 L1733.11 1212.13 L1732.53 1212.13 L1731.94 1212.13 L1731.36 1212.13 L1730.77 1212.13 L1730.18 1212.13 L1729.6 1212.13 L1729.01 1212.13 L1728.42 1212.13 L1727.84 1212.13 L1727.25 1212.13 L1726.66 1212.13 L1726.08 1212.13 L1725.49 1212.13 L1724.91 1212.13 L1724.32 1212.13 L1723.73 1212.13 L1723.15 1212.13 L1722.56 1212.13 L1721.97 1212.13 L1721.39 1212.13 L1720.8 1212.13 L1720.21 1212.13 L1719.63 1212.13 L1719.04 1212.13 L1718.45 1212.13 L1717.87 1212.13 L1717.28 1212.13 L1716.7 1212.13 L1716.11 1212.13 L1715.52 1212.13 L1714.94 1212.13 L1714.35 1212.13 L1713.76 1212.13 L1713.18 1212.13 L1712.59 1212.13 L1712 1212.13 L1711.42 1212.13 L1710.83 1212.13 L1710.24 1212.13 L1709.66 1212.13 L1709.07 1212.13 L1708.49 1212.13 L1707.9 1212.13 L1707.31 1212.13 L1706.73 1212.13 L1706.14 1212.13 L1705.55 1212.13 L1704.97 1212.13 L1704.38 1212.13 L1703.79 1212.13 L1703.21 1212.13 L1702.62 1212.13 L1702.04 1212.13 L1701.45 1212.13 L1700.86 1212.13 L1700.28 1212.13 L1699.69 1212.13 L1699.1 1212.13 L1698.52 1212.13 L1697.93 1212.13 L1697.34 1212.13 L1696.76 1212.13 L1696.17 1212.13 L1695.58 1212.13 L1695 1212.13 L1694.41 1212.13 L1693.83 1212.13 L1693.24 1212.13 L1692.65 1212.13 L1692.07 1212.13 L1691.48 1212.13 L1690.89 1212.13 L1690.31 1212.13 L1689.72 1212.13 L1689.13 1212.13 L1688.55 1212.13 L1687.96 1212.13 L1687.37 1212.13 L1686.79 1212.13 L1686.2 1212.13 L1685.62 1212.13 L1685.03 1212.13 L1684.44 1212.13 L1683.86 1212.13 L1683.27 1212.13 L1682.68 1212.13 L1682.1 1212.13 L1681.51 1212.13 L1680.92 1212.13 L1680.34 1212.13 L1679.75 1212.13 L1679.17 1212.13 L1678.58 1212.13 L1677.99 1212.13 L1677.41 1212.13 L1676.82 1212.13 L1676.23 1212.13 L1675.65 1212.13 L1675.06 1212.13 L1674.47 1212.13 L1673.89 1212.13 L1673.3 1212.13 L1672.71 1212.13 L1672.13 1212.13 L1671.54 1212.13 L1670.96 1212.13 L1670.37 1212.13 L1669.78 1212.13 L1669.2 1212.13 L1668.61 1212.13 L1668.02 1212.13 L1667.44 1212.13 L1666.85 1212.13 L1666.26 1212.13 L1665.68 1212.13 L1665.09 1212.13 L1664.5 1212.13 L1663.92 1212.13 L1663.33 1212.13 L1662.75 1212.13 L1662.16 1212.13 L1661.57 1212.13 L1660.99 1212.13 L1660.4 1212.13 L1659.81 1212.13 L1659.23 1212.13 L1658.64 1212.13 L1658.05 1212.13 L1657.47 1212.13 L1656.88 1212.13 L1656.29 1212.13 L1655.71 1212.13 L1655.12 1212.13 L1654.54 1212.13 L1653.95 1212.13 L1653.36 1212.13 L1652.78 1212.13 L1652.19 1212.13 L1651.6 1212.13 L1651.02 1212.13 L1650.43 1212.13 L1649.84 1212.13 L1649.26 1212.13 L1648.67 1212.13 L1648.09 1212.13 L1647.5 1212.13 L1646.91 1212.13 L1646.33 1212.13 L1645.74 1212.13 L1645.15 1212.13 L1644.57 1212.13 L1643.98 1212.13 L1643.39 1212.13 L1642.81 1212.13 L1642.22 1212.13 L1641.63 1212.13 L1641.05 1212.13 L1640.46 1212.13 L1639.88 1212.13 L1639.29 1212.13 L1638.7 1212.13 L1638.12 1212.13 L1637.53 1212.13 L1636.94 1212.13 L1636.36 1212.13 L1635.77 1212.13 L1635.18 1212.13 L1634.6 1212.13 L1634.01 1212.13 L1633.42 1212.13 L1632.84 1212.13 L1632.25 1212.13 L1631.67 1212.13 L1631.08 1212.13 L1630.49 1212.13 L1629.91 1212.13 L1629.32 1212.13 L1628.73 1212.13 L1628.15 1212.13 L1627.56 1212.13 L1626.97 1212.13 L1626.39 1212.13 L1625.8 1212.13 L1625.22 1212.13 L1624.63 1212.13 L1624.04 1212.13 L1623.46 1212.13 L1622.87 1212.13 L1622.28 1212.13 L1621.7 1212.13 L1621.11 1212.13 L1620.52 1212.13 L1619.94 1212.13 L1619.35 1212.13 L1618.76 1212.13 L1618.18 1212.13 L1617.59 1212.13 L1617.01 1212.13 L1616.42 1212.13 L1615.83 1212.13 L1615.25 1212.13 L1614.66 1212.13 L1614.07 1212.13 L1613.49 1212.13 L1612.9 1212.13 L1612.31 1212.13 L1611.73 1212.13 L1611.14 1212.13 L1610.55 1212.13 L1609.97 1212.13 L1609.38 1212.13 L1608.8 1212.13 L1608.21 1212.13 L1607.62 1212.13 L1607.04 1212.13 L1606.45 1212.13 L1605.86 1212.13 L1605.28 1212.13 L1604.69 1212.13 L1604.1 1212.13 L1603.52 1212.13 L1602.93 1212.13 L1602.34 1212.13 L1601.76 1212.13 L1601.17 1212.13 L1600.59 1212.13 L1600 1212.13 L1599.41 1212.13 L1598.83 1212.13 L1598.24 1212.13 L1597.65 1212.13 L1597.07 1212.13 L1596.48 1212.13 L1595.89 1212.13 L1595.31 1212.13 L1594.72 1212.13 L1594.14 1212.13 L1593.55 1212.13 L1592.96 1212.13 L1592.38 1212.13 L1591.79 1212.13 L1591.2 1212.13 L1590.62 1212.13 L1590.03 1212.13 L1589.44 1212.13 L1588.86 1212.13 L1588.27 1212.13 L1587.68 1212.13 L1587.1 1212.13 L1586.51 1212.13 L1585.93 1212.13 L1585.34 1212.13 L1584.75 1212.13 L1584.17 1212.13 L1583.58 1212.13 L1582.99 1212.13 L1582.41 1212.13 L1581.82 1212.13 L1581.23 1212.13 L1580.65 1212.13 L1580.06 1212.13 L1579.47 1212.13 L1578.89 1212.13 L1578.3 1212.13 L1577.72 1212.13 L1577.13 1212.13 L1576.54 1212.13 L1575.96 1212.13 L1575.37 1212.13 L1574.78 1212.13 L1574.2 1212.13 L1573.61 1212.13 L1573.02 1212.13 L1572.44 1212.13 L1571.85 1212.13 L1571.27 1212.13 L1570.68 1212.13 L1570.09 1212.13 L1569.51 1212.13 L1568.92 1212.13 L1568.33 1212.13 L1567.75 1212.13 L1567.16 1212.13 L1566.57 1212.13 L1565.99 1212.13 L1565.4 1212.13 L1564.81 1212.13 L1564.23 1212.13 L1563.64 1212.13 L1563.06 1212.13 L1562.47 1212.13 L1561.88 1212.13 L1561.3 1212.13 L1560.71 1212.13 L1560.12 1212.13 L1559.54 1212.13 L1558.95 1212.13 L1558.36 1212.13 L1557.78 1212.13 L1557.19 1212.13 L1556.6 1212.13 L1556.02 1212.13 L1555.43 1212.13 L1554.85 1212.13 L1554.26 1212.13 L1553.67 1212.13 L1553.09 1212.13 L1552.5 1212.13 L1551.91 1212.13 L1551.33 1212.13 L1550.74 1212.13 L1550.15 1212.13 L1549.57 1212.13 L1548.98 1212.13 L1548.4 1212.13 L1547.81 1212.13 L1547.22 1212.13 L1546.64 1212.13 L1546.05 1212.13 L1545.46 1212.13 L1544.88 1212.13 L1544.29 1212.13 L1543.7 1212.13 L1543.12 1212.13 L1542.53 1212.13 L1541.94 1212.13 L1541.36 1212.13 L1540.77 1212.13 L1540.19 1212.13 L1539.6 1212.13 L1539.01 1212.13 L1538.43 1212.13 L1537.84 1212.13 L1537.25 1212.13 L1536.67 1212.13 L1536.08 1212.13 L1535.49 1212.13 L1534.91 1212.13 L1534.32 1212.13 L1533.73 1212.13 L1533.15 1212.13 L1532.56 1212.13 L1531.98 1212.13 L1531.39 1212.13 L1530.8 1212.13 L1530.22 1212.13 L1529.63 1212.13 L1529.04 1212.13 L1528.46 1212.13 L1527.87 1212.13 L1527.28 1212.13 L1526.7 1212.13 L1526.11 1212.13 L1525.52 1212.13 L1524.94 1212.13 L1524.35 1212.13 L1523.77 1212.13 L1523.18 1212.13 L1522.59 1212.13 L1522.01 1212.13 L1521.42 1212.13 L1520.83 1212.13 L1520.25 1212.13 L1519.66 1212.13 L1519.07 1212.13 L1518.49 1212.13 L1517.9 1212.13 L1517.32 1212.13 L1516.73 1212.13 L1516.14 1212.13 L1515.56 1212.13 L1514.97 1212.13 L1514.38 1212.13 L1513.8 1212.13 L1513.21 1212.13 L1512.62 1212.13 L1512.04 1212.13 L1511.45 1212.13 L1510.86 1212.13 L1510.28 1212.13 L1509.69 1212.13 L1509.11 1212.13 L1508.52 1212.13 L1507.93 1212.13 L1507.35 1212.13 L1506.76 1212.13 L1506.17 1212.13 L1505.59 1212.13 L1505 1212.13 L1504.41 1212.13 L1503.83 1212.13 L1503.24 1212.13 L1502.65 1212.13 L1502.07 1212.13 L1501.48 1212.13 L1500.9 1212.13 L1500.31 1212.13 L1499.72 1212.13 L1499.14 1212.13 L1498.55 1212.13 L1497.96 1212.13 L1497.38 1212.13 L1496.79 1212.13 L1496.2 1212.13 L1495.62 1212.13 L1495.03 1212.13 L1494.45 1212.13 L1493.86 1212.13 L1493.27 1212.13 L1492.69 1212.13 L1492.1 1212.13 L1491.51 1212.13 L1490.93 1212.13 L1490.34 1212.13 L1489.75 1212.13 L1489.17 1212.13 L1488.58 1212.13 L1487.99 1212.13 L1487.41 1212.13 L1486.82 1212.13 L1486.24 1212.13 L1485.65 1212.13 L1485.06 1212.13 L1484.48 1212.13 L1483.89 1212.13 L1483.3 1212.13 L1482.72 1212.13 L1482.13 1212.13 L1481.54 1212.13 L1480.96 1212.13 L1480.37 1212.13 L1479.78 1212.13 L1479.2 1212.13 L1478.61 1212.13 L1478.03 1212.13 L1477.44 1212.13 L1476.85 1212.13 L1476.27 1212.13 L1475.68 1212.13 L1475.09 1212.13 L1474.51 1212.13 L1473.92 1212.13 L1473.33 1212.13 L1472.75 1212.13 L1472.16 1212.13 L1471.57 1212.13 L1470.99 1212.13 L1470.4 1212.13 L1469.82 1212.13 L1469.23 1212.13 L1468.64 1212.13 L1468.06 1212.13 L1467.47 1212.13 L1466.88 1212.13 L1466.3 1212.13 L1465.71 1212.13 L1465.12 1212.13 L1464.54 1212.13 L1463.95 1212.13 L1463.37 1212.13 L1462.78 1212.13 L1462.19 1212.13 L1461.61 1212.13 L1461.02 1212.13 L1460.43 1212.13 L1459.85 1212.13 L1459.26 1212.13 L1458.67 1212.13 L1458.09 1212.13 L1457.5 1212.13 L1456.91 1212.13 L1456.33 1212.13 L1455.74 1212.13 L1455.16 1212.13 L1454.57 1212.13 L1453.98 1212.13 L1453.4 1212.13 L1452.81 1212.13 L1452.22 1212.13 L1451.64 1212.13 L1451.05 1212.13 L1450.46 1212.13 L1449.88 1212.13 L1449.29 1212.13 L1448.7 1212.13 L1448.12 1212.13 L1447.53 1212.13 L1446.95 1212.13 L1446.36 1212.13 L1445.77 1212.13 L1445.19 1212.13 L1444.6 1212.13 L1444.01 1212.13 L1443.43 1212.13 L1442.84 1212.13 L1442.25 1212.13 L1441.67 1212.13 L1441.08 1212.13 L1440.5 1212.13 L1439.91 1212.13 L1439.32 1212.13 L1438.74 1212.13 L1438.15 1212.13 L1437.56 1212.13 L1436.98 1212.13 L1436.39 1212.13 L1435.8 1212.13 L1435.22 1212.13 L1434.63 1212.13 L1434.04 1212.13 L1433.46 1212.13 L1432.87 1212.13 L1432.29 1212.13 L1431.7 1212.13 L1431.11 1212.13 L1430.53 1212.13 L1429.94 1212.13 L1429.35 1212.13 L1428.77 1212.13 L1428.18 1212.13 L1427.59 1212.13 L1427.01 1212.13 L1426.42 1212.13 L1425.83 1212.13 L1425.25 1212.13 L1424.66 1212.13 L1424.08 1212.13 L1423.49 1212.13 L1422.9 1212.13 L1422.32 1212.13 L1421.73 1212.13 L1421.14 1212.13 L1420.56 1212.13 L1419.97 1212.13 L1419.38 1212.13 L1418.8 1212.13 L1418.21 1212.13 L1417.63 1212.13 L1417.04 1212.13 L1416.45 1212.13 L1415.87 1212.13 L1415.28 1212.13 L1414.69 1212.13 L1414.11 1212.13 L1413.52 1212.13 L1412.93 1212.13 L1412.35 1212.13 L1411.76 1212.13 L1411.17 1212.13 L1410.59 1212.13 L1410 1212.13 L1409.42 1212.13 L1408.83 1212.13 L1408.24 1212.13 L1407.66 1212.13 L1407.07 1212.13 L1406.48 1212.13 L1405.9 1212.13 L1405.31 1212.13 L1404.72 1212.13 L1404.14 1212.13 L1403.55 1212.13 L1402.96 1212.13 L1402.38 1212.13 L1401.79 1212.13 L1401.21 1212.13 L1400.62 1212.13 L1400.03 1212.13 L1399.45 1212.13 L1398.86 1212.13 L1398.27 1212.13 L1397.69 1212.13 L1397.1 1212.13 L1396.51 1212.13 L1395.93 1212.13 L1395.34 1212.13 L1394.75 1212.13 L1394.17 1212.13 L1393.58 1212.13 L1393 1212.13 L1392.41 1212.13 L1391.82 1212.13 L1391.24 1212.13 L1390.65 1212.13 L1390.06 1212.13 L1389.48 1212.13 L1388.89 1212.13 L1388.3 1212.13 L1387.72 1212.13 L1387.13 1212.13 L1386.55 1212.13 L1385.96 1212.13 L1385.37 1212.13 L1384.79 1212.13 L1384.2 1212.13 L1383.61 1212.13 L1383.03 1212.13 L1382.44 1212.13 L1381.85 1212.13 L1381.27 1212.13 L1380.68 1212.13 L1380.09 1212.13 L1379.51 1212.13 L1378.92 1212.13 L1378.34 1212.13 L1377.75 1212.13 L1377.16 1212.13 L1376.58 1212.13 L1375.99 1212.13 L1375.4 1212.13 L1374.82 1212.13 L1374.23 1212.13 L1373.64 1212.13 L1373.06 1212.13 L1372.47 1212.13 L1371.88 1212.13 L1371.3 1212.13 L1370.71 1212.13 L1370.13 1212.13 L1369.54 1212.13 L1368.95 1212.13 L1368.37 1212.13 L1367.78 1212.13 L1367.19 1212.13 L1366.61 1212.13 L1366.02 1212.13 L1365.43 1212.13 L1364.85 1212.13 L1364.26 1212.13 L1363.68 1212.13 L1363.09 1212.13 L1362.5 1212.13 L1361.92 1212.13 L1361.33 1212.13 L1360.74 1212.13 L1360.16 1212.13 L1359.57 1212.13 L1358.98 1212.13 L1358.4 1212.13 L1357.81 1212.13 L1357.22 1212.13 L1356.64 1212.13 L1356.05 1212.13 L1355.47 1212.13 L1354.88 1212.13 L1354.29 1212.13 L1353.71 1212.13 L1353.12 1212.13 L1352.53 1212.13 L1351.95 1212.13 L1351.36 1212.13 L1350.77 1212.13 L1350.19 1212.13 L1349.6 1212.13 L1349.01 1212.13 L1348.43 1212.13 L1347.84 1212.13 L1347.26 1212.13 L1346.67 1212.13 L1346.08 1212.13 L1345.5 1212.13 L1344.91 1212.13 L1344.32 1212.13 L1343.74 1212.13 L1343.15 1212.13 L1342.56 1212.13 L1341.98 1212.13 L1341.39 1212.13 L1340.8 1212.13 L1340.22 1212.13 L1339.63 1212.13 L1339.05 1212.13 L1338.46 1212.13 L1337.87 1212.13 L1337.29 1212.13 L1336.7 1212.13 L1336.11 1212.13 L1335.53 1212.13 L1334.94 1212.13 L1334.35 1212.13 L1333.77 1212.13 L1333.18 1212.13 L1332.6 1212.13 L1332.01 1212.13 L1331.42 1212.13 L1330.84 1212.13 L1330.25 1212.13 L1329.66 1212.13 L1329.08 1212.13 L1328.49 1212.13 L1327.9 1212.13 L1327.32 1212.13 L1326.73 1212.13 L1326.14 1212.13 L1325.56 1212.13 L1324.97 1212.13 L1324.39 1212.13 L1323.8 1212.13 L1323.21 1212.13 L1322.63 1212.13 L1322.04 1212.13 L1321.45 1212.13 L1320.87 1212.13 L1320.28 1212.13 L1319.69 1212.13 L1319.11 1212.13 L1318.52 1212.13 L1317.93 1212.13 L1317.35 1212.13 L1316.76 1212.13 L1316.18 1212.13 L1315.59 1212.13 L1315 1212.13 L1314.42 1212.13 L1313.83 1212.13 L1313.24 1212.13 L1312.66 1212.13 L1312.07 1212.13 L1311.48 1212.13 L1310.9 1212.13 L1310.31 1212.13 L1309.73 1212.13 L1309.14 1212.13 L1308.55 1212.13 L1307.97 1212.13 L1307.38 1212.13 L1306.79 1212.13 L1306.21 1212.13 L1305.62 1212.13 L1305.03 1212.13 L1304.45 1212.13 L1303.86 1212.13 L1303.27 1212.13 L1302.69 1212.13 L1302.1 1212.13 L1301.52 1212.13 L1300.93 1212.13 L1300.34 1212.13 L1299.76 1212.13 L1299.17 1212.13 L1298.58 1212.13 L1298 1212.13 L1297.41 1212.13 L1296.82 1212.13 L1296.24 1212.13 L1295.65 1212.13 L1295.06 1212.13 L1294.48 1212.13 L1293.89 1212.13 L1293.31 1212.13 L1292.72 1212.13 L1292.13 1212.13 L1291.55 1212.13 L1290.96 1212.13 L1290.37 1212.13 L1289.79 1212.13 L1289.2 1212.13 L1288.61 1212.13 L1288.03 1212.13 L1287.44 1212.13 L1286.86 1212.13 L1286.27 1212.13 L1285.68 1212.13 L1285.1 1212.13 L1284.51 1212.13 L1283.92 1212.13 L1283.34 1212.13 L1282.75 1212.13 L1282.16 1212.13 L1281.58 1212.13 L1280.99 1212.13 L1280.4 1212.13 L1279.82 1212.13 L1279.23 1212.13 L1278.65 1212.13 L1278.06 1212.13 L1277.47 1212.13 L1276.89 1212.13 L1276.3 1212.13 L1275.71 1212.13 L1275.13 1212.13 L1274.54 1212.13 L1273.95 1212.13 L1273.37 1212.13 L1272.78 1212.13 L1272.19 1212.13 L1271.61 1212.13 L1271.02 1212.13 L1270.44 1212.13 L1269.85 1212.13 L1269.26 1212.13 L1268.68 1212.13 L1268.09 1212.13 L1267.5 1212.13 L1266.92 1212.13 L1266.33 1212.13 L1265.74 1212.13 L1265.16 1212.13 L1264.57 1212.13 L1263.98 1212.13 L1263.4 1212.13 L1262.81 1212.13 L1262.23 1212.13 L1261.64 1212.13 L1261.05 1212.13 L1260.47 1212.13 L1259.88 1212.13 L1259.29 1212.13 L1258.71 1212.13 L1258.12 1212.13 L1257.53 1212.13 L1256.95 1212.13 L1256.36 1212.13 L1255.78 1212.13 L1255.19 1212.13 L1254.6 1212.13 L1254.02 1212.13 L1253.43 1212.13 L1252.84 1212.13 L1252.26 1212.13 L1251.67 1212.13 L1251.08 1212.13 L1250.5 1212.13 L1249.91 1212.13 L1249.32 1212.13 L1248.74 1212.13 L1248.15 1212.13 L1247.57 1212.13 L1246.98 1212.13 L1246.39 1212.13 L1245.81 1212.13 L1245.22 1212.13 L1244.63 1212.13 L1244.05 1212.13 L1243.46 1212.13 L1242.87 1212.13 L1242.29 1212.13 L1241.7 1212.13 L1241.11 1212.13 L1240.53 1212.13 L1239.94 1212.13 L1239.36 1212.13 L1238.77 1212.13 L1238.18 1212.13 L1237.6 1212.13 L1237.01 1212.13 L1236.42 1212.13 L1235.84 1212.13 L1235.25 1212.13 L1234.66 1212.13 L1234.08 1212.13 L1233.49 1212.13 L1232.91 1212.13 L1232.32 1212.13 L1231.73 1212.13 L1231.15 1212.13 L1230.56 1212.13 L1229.97 1212.13 L1229.39 1212.13 L1228.8 1212.13 L1228.21 1212.13 L1227.63 1212.13 L1227.04 1212.13 L1226.45 1212.13 L1225.87 1212.13 L1225.28 1212.13 L1224.7 1212.13 L1224.11 1212.13 L1223.52 1212.13 L1222.94 1212.13 L1222.35 1212.13 L1221.76 1212.13 L1221.18 1212.13 L1220.59 1212.13 L1220 1212.13 L1219.42 1212.13 L1218.83 1212.13 L1218.24 1212.13 L1217.66 1212.13 L1217.07 1212.13 L1216.49 1212.13 L1215.9 1212.13 L1215.31 1212.13 L1214.73 1212.13 L1214.14 1212.13 L1213.55 1212.13 L1212.97 1212.13 L1212.38 1212.13 L1211.79 1212.13 L1211.21 1212.13 L1210.62 1212.13 L1210.03 1212.13 L1209.45 1212.13 L1208.86 1212.13 L1208.28 1212.13 L1207.69 1212.13 L1207.1 1212.13 L1206.52 1212.13 L1205.93 1212.13 L1205.34 1212.13 L1204.76 1212.13 L1204.17 1212.13 L1203.58 1212.13 L1203 1212.13 L1202.41 1212.13 L1201.83 1212.13 L1201.24 1212.13 L1200.65 1212.13 L1200.07 1212.13 L1199.48 1212.13 L1198.89 1212.13 L1198.31 1212.13 L1197.72 1212.13 L1197.13 1212.13 L1196.55 1212.13 L1195.96 1212.13 L1195.37 1212.13 L1194.79 1212.13 L1194.2 1212.13 L1193.62 1212.13 L1193.03 1212.13 L1192.44 1212.13 L1191.86 1212.13 L1191.27 1212.13 L1190.68 1212.13 L1190.1 1212.13 L1189.51 1212.13 L1188.92 1212.13 L1188.34 1212.13 L1187.75 1212.13 L1187.16 1212.13 L1186.58 1212.13 L1185.99 1212.13 L1185.41 1212.13 L1184.82 1212.13 L1184.23 1212.13 L1183.65 1212.13 L1183.06 1212.13 L1182.47 1212.13 L1181.89 1212.13 L1181.3 1212.13 L1180.71 1212.13 L1180.13 1212.13 L1179.54 1212.13 L1178.96 1212.13 L1178.37 1212.13 L1177.78 1212.13 L1177.2 1212.13 L1176.61 1212.13 L1176.02 1212.13 L1175.44 1212.13 L1174.85 1212.13 L1174.26 1212.13 L1173.68 1212.13 L1173.09 1212.13 L1172.5 1212.13 L1171.92 1212.13 L1171.33 1212.13 L1170.75 1212.13 L1170.16 1212.13 L1169.57 1212.13 L1168.99 1212.13 L1168.4 1212.13 L1167.81 1212.13 L1167.23 1212.13 L1166.64 1212.13 L1166.05 1212.13 L1165.47 1212.13 L1164.88 1212.13 L1164.29 1212.13 L1163.71 1212.13 L1163.12 1212.13 L1162.54 1212.13 L1161.95 1212.13 L1161.36 1212.13 L1160.78 1212.13 L1160.19 1212.13 L1159.6 1212.13 L1159.02 1212.13 L1158.43 1212.13 L1157.84 1212.13 L1157.26 1212.13 L1156.67 1212.13 L1156.09 1212.13 L1155.5 1212.13 L1154.91 1212.13 L1154.33 1212.13 L1153.74 1212.13 L1153.15 1212.13 L1152.57 1212.13 L1151.98 1212.13 L1151.39 1212.13 L1150.81 1212.13 L1150.22 1212.13 L1149.63 1212.13 L1149.05 1212.13 L1148.46 1212.13 L1147.88 1212.13 L1147.29 1212.13 L1146.7 1212.13 L1146.12 1212.13 L1145.53 1212.13 L1144.94 1212.13 L1144.36 1212.13 L1143.77 1212.13 L1143.18 1212.13 L1142.6 1212.13 L1142.01 1212.13 L1141.42 1212.13 L1140.84 1212.13 L1140.25 1212.13 L1139.67 1212.13 L1139.08 1212.13 L1138.49 1212.13 L1137.91 1212.13 L1137.32 1212.13 L1136.73 1212.13 L1136.15 1212.13 L1135.56 1212.13 L1134.97 1212.13 L1134.39 1212.13 L1133.8 1212.13 L1133.21 1212.13 L1132.63 1212.13 L1132.04 1212.13 L1131.46 1212.13 L1130.87 1212.13 L1130.28 1212.13 L1129.7 1212.13 L1129.11 1212.13 L1128.52 1212.13 L1127.94 1212.13 L1127.35 1212.13 L1126.76 1212.13 L1126.18 1212.13 L1125.59 1212.13 L1125.01 1212.13 L1124.42 1212.13 L1123.83 1212.13 L1123.25 1212.13 L1122.66 1212.13 L1122.07 1212.13 L1121.49 1212.13 L1120.9 1212.13 L1120.31 1212.13 L1119.73 1212.13 L1119.14 1212.13 L1118.55 1212.13 L1117.97 1212.13 L1117.38 1212.13 L1116.8 1212.13 L1116.21 1212.13 L1115.62 1212.13 L1115.04 1212.13 L1114.45 1212.13 L1113.86 1212.13 L1113.28 1212.13 L1112.69 1212.13 L1112.1 1212.13 L1111.52 1212.13 L1110.93 1212.13 L1110.34 1212.13 L1109.76 1212.13 L1109.17 1212.13 L1108.59 1212.13 L1108 1212.13 L1107.41 1212.13 L1106.83 1212.13 L1106.24 1212.13 L1105.65 1212.13 L1105.07 1212.13 L1104.48 1212.13 L1103.89 1212.13 L1103.31 1212.13 L1102.72 1212.13 L1102.14 1212.13 L1101.55 1212.13 L1100.96 1212.13 L1100.38 1212.13 L1099.79 1212.13 L1099.2 1212.13 L1098.62 1212.13 L1098.03 1212.13 L1097.44 1212.13 L1096.86 1212.13 L1096.27 1212.13 L1095.68 1212.13 L1095.1 1212.13 L1094.51 1212.13 L1093.93 1212.13 L1093.34 1212.13 L1092.75 1212.13 L1092.17 1212.13 L1091.58 1212.13 L1090.99 1212.13 L1090.41 1212.13 L1089.82 1212.13 L1089.23 1212.13 L1088.65 1212.13 L1088.06 1212.13 L1087.47 1212.13 L1086.89 1212.13 L1086.3 1212.13 L1085.72 1212.13 L1085.13 1212.13 L1084.54 1212.13 L1083.96 1212.13 L1083.37 1212.13 L1082.78 1212.13 L1082.2 1212.13 L1081.61 1212.13 L1081.02 1212.13 L1080.44 1212.13 L1079.85 1212.13 L1079.26 1212.13 L1078.68 1212.13 L1078.09 1212.13 L1077.51 1212.13 L1076.92 1212.13 L1076.33 1212.13 L1075.75 1212.13 L1075.16 1212.13 L1074.57 1212.13 L1073.99 1212.13 L1073.4 1212.13 L1072.81 1212.13 L1072.23 1212.13 L1071.64 1212.13 L1071.06 1212.13 L1070.47 1212.13 L1069.88 1212.13 L1069.3 1212.13 L1068.71 1212.13 L1068.12 1212.13 L1067.54 1212.13 L1066.95 1212.13 L1066.36 1212.13 L1065.78 1212.13 L1065.19 1212.13 L1064.6 1212.13 L1064.02 1212.13 L1063.43 1212.13 L1062.85 1212.13 L1062.26 1212.13 L1061.67 1212.13 L1061.09 1212.13 L1060.5 1212.13 L1059.91 1212.13 L1059.33 1212.13 L1058.74 1212.13 L1058.15 1212.13 L1057.57 1212.13 L1056.98 1212.13 L1056.39 1212.13 L1055.81 1212.13 L1055.22 1212.13 L1054.64 1212.13 L1054.05 1212.13 L1053.46 1212.13 L1052.88 1212.13 L1052.29 1212.13 L1051.7 1212.13 L1051.12 1212.13 L1050.53 1212.13 L1049.94 1212.13 L1049.36 1212.13 L1048.77 1212.13 L1048.19 1212.13 L1047.6 1212.13 L1047.01 1212.13 L1046.43 1212.13 L1045.84 1212.13 L1045.25 1212.13 L1044.67 1212.13 L1044.08 1212.13 L1043.49 1212.13 L1042.91 1212.13 L1042.32 1212.13 L1041.73 1212.13 L1041.15 1212.13 L1040.56 1212.13 L1039.98 1212.13 L1039.39 1212.13 L1038.8 1212.13 L1038.22 1212.13 L1037.63 1212.13 L1037.04 1212.13 L1036.46 1212.13 L1035.87 1212.13 L1035.28 1212.13 L1034.7 1212.13 L1034.11 1212.13 L1033.52 1212.13 L1032.94 1212.13 L1032.35 1212.13 L1031.77 1212.13 L1031.18 1212.13 L1030.59 1212.13 L1030.01 1212.13 L1029.42 1212.13 L1028.83 1212.13 L1028.25 1212.13 L1027.66 1212.13 L1027.07 1212.13 L1026.49 1212.13 L1025.9 1212.13 L1025.32 1212.13 L1024.73 1212.13 L1024.14 1212.13 L1023.56 1212.13 L1022.97 1212.13 L1022.38 1212.13 L1021.8 1212.13 L1021.21 1212.13 L1020.62 1212.13 L1020.04 1212.13 L1019.45 1212.13 L1018.86 1212.13 L1018.28 1212.13 L1017.69 1212.13 L1017.11 1212.13 L1016.52 1212.13 L1015.93 1212.13 L1015.35 1212.13 L1014.76 1212.13 L1014.17 1212.13 L1013.59 1212.13 L1013 1212.13 L1012.41 1212.13 L1011.83 1212.13 L1011.24 1212.13 L1010.65 1212.13 L1010.07 1212.13 L1009.48 1212.13 L1008.9 1212.13 L1008.31 1212.13 L1007.72 1212.13 L1007.14 1212.13 L1006.55 1212.13 L1005.96 1212.13 L1005.38 1212.13 L1004.79 1212.13 L1004.2 1212.13 L1003.62 1212.13 L1003.03 1212.13 L1002.44 1212.13 L1001.86 1212.13 L1001.27 1212.13 L1000.69 1212.13 L1000.1 1212.13 L999.513 1212.13 L998.926 1212.13 L998.34 1212.13 L997.754 1212.13 L997.167 1212.13 L996.581 1212.13 L995.994 1212.13 L995.408 1212.13 L994.822 1212.13 L994.235 1212.13 L993.649 1212.13 L993.062 1212.13 L992.476 1212.13 L991.889 1212.13 L991.303 1212.13 L990.717 1212.13 L990.13 1212.13 L989.544 1212.13 L988.957 1212.13 L988.371 1212.13 L987.785 1212.13 L987.198 1212.13 L986.612 1212.13 L986.025 1212.13  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip512)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1212.42 986.612,1212.42 987.198,1212.42 987.785,1212.42 988.371,1212.42 988.957,1212.42 989.544,1212.42 990.13,1212.42 990.717,1212.42 991.303,1212.42 991.889,1212.42 992.476,1212.42 993.062,1212.42 993.649,1212.42 994.235,1212.42 994.822,1212.42 995.408,1212.42 995.994,1212.42 996.581,1212.42 997.167,1212.42 997.754,1212.42 998.34,1212.42 998.926,1212.42 999.513,1212.42 1000.1,1212.42 1000.69,1212.42 1001.27,1212.42 1001.86,1212.42 1002.44,1212.42 1003.03,1212.42 1003.62,1212.42 1004.2,1212.42 1004.79,1212.42 1005.38,1212.42 1005.96,1212.42 1006.55,1212.42 1007.14,1212.42 1007.72,1212.42 1008.31,1212.42 1008.9,1212.42 1009.48,1212.42 1010.07,1212.42 1010.65,1212.42 1011.24,1212.42 1011.83,1212.42 1012.41,1212.42 1013,1212.42 1013.59,1212.42 1014.17,1212.42 1014.76,1212.42 1015.35,1212.42 1015.93,1212.42 1016.52,1212.42 1017.11,1212.42 1017.69,1212.42 1018.28,1212.42 1018.86,1212.42 1019.45,1212.42 1020.04,1212.42 1020.62,1212.42 1021.21,1212.42 1021.8,1212.42 1022.38,1212.42 1022.97,1212.42 1023.56,1212.42 1024.14,1212.42 1024.73,1212.42 1025.32,1212.42 1025.9,1212.42 1026.49,1212.42 1027.07,1212.42 1027.66,1212.42 1028.25,1212.42 1028.83,1212.42 1029.42,1212.42 1030.01,1212.42 1030.59,1212.42 1031.18,1212.42 1031.77,1212.42 1032.35,1212.42 1032.94,1212.42 1033.52,1212.42 1034.11,1212.42 1034.7,1212.42 1035.28,1212.42 1035.87,1212.42 1036.46,1212.42 1037.04,1212.42 1037.63,1212.42 1038.22,1212.42 1038.8,1212.42 1039.39,1212.42 1039.98,1212.42 1040.56,1212.42 1041.15,1212.42 1041.73,1212.42 1042.32,1212.42 1042.91,1212.42 1043.49,1212.42 1044.08,1212.42 1044.67,1212.42 1045.25,1212.42 1045.84,1212.42 1046.43,1212.42 1047.01,1212.42 1047.6,1212.42 1048.19,1212.42 1048.77,1212.42 1049.36,1212.42 1049.94,1212.42 1050.53,1212.42 1051.12,1212.42 1051.7,1212.42 1052.29,1212.42 1052.88,1212.42 1053.46,1212.42 1054.05,1212.42 1054.64,1212.42 1055.22,1212.42 1055.81,1212.42 1056.39,1212.42 1056.98,1212.42 1057.57,1212.42 1058.15,1212.42 1058.74,1212.42 1059.33,1212.42 1059.91,1212.42 1060.5,1212.42 1061.09,1212.42 1061.67,1212.42 1062.26,1212.42 1062.85,1212.42 1063.43,1212.42 1064.02,1212.42 1064.6,1212.42 1065.19,1212.42 1065.78,1212.42 1066.36,1212.42 1066.95,1212.42 1067.54,1212.42 1068.12,1212.42 1068.71,1212.42 1069.3,1212.42 1069.88,1212.42 1070.47,1212.42 1071.06,1212.42 1071.64,1212.42 1072.23,1212.42 1072.81,1212.42 1073.4,1212.42 1073.99,1212.42 1074.57,1212.42 1075.16,1212.42 1075.75,1212.42 1076.33,1212.42 1076.92,1212.42 1077.51,1212.42 1078.09,1212.42 1078.68,1212.42 1079.26,1212.42 1079.85,1212.42 1080.44,1212.42 1081.02,1212.42 1081.61,1212.42 1082.2,1212.42 1082.78,1212.42 1083.37,1212.42 1083.96,1212.42 1084.54,1212.42 1085.13,1212.42 1085.72,1212.42 1086.3,1212.42 1086.89,1212.42 1087.47,1212.42 1088.06,1212.42 1088.65,1212.42 1089.23,1212.42 1089.82,1212.42 1090.41,1212.42 1090.99,1212.42 1091.58,1212.42 1092.17,1212.42 1092.75,1212.42 1093.34,1212.42 1093.93,1212.42 1094.51,1212.42 1095.1,1212.42 1095.68,1212.42 1096.27,1212.42 1096.86,1212.42 1097.44,1212.42 1098.03,1212.42 1098.62,1212.42 1099.2,1212.42 1099.79,1212.42 1100.38,1212.42 1100.96,1212.42 1101.55,1212.42 1102.14,1212.42 1102.72,1212.42 1103.31,1212.42 1103.89,1212.42 1104.48,1212.42 1105.07,1212.42 1105.65,1212.42 1106.24,1212.42 1106.83,1212.42 1107.41,1212.42 1108,1212.42 1108.59,1212.42 1109.17,1212.42 1109.76,1212.42 1110.34,1212.42 1110.93,1212.42 1111.52,1212.42 1112.1,1212.42 1112.69,1212.42 1113.28,1212.42 1113.86,1212.42 1114.45,1212.42 1115.04,1212.42 1115.62,1212.42 1116.21,1212.42 1116.8,1212.42 1117.38,1212.42 1117.97,1212.42 1118.55,1212.42 1119.14,1212.42 1119.73,1212.42 1120.31,1212.42 1120.9,1212.42 1121.49,1212.42 1122.07,1212.42 1122.66,1212.42 1123.25,1212.42 1123.83,1212.42 1124.42,1212.42 1125.01,1212.42 1125.59,1212.42 1126.18,1212.42 1126.76,1212.42 1127.35,1212.42 1127.94,1212.42 1128.52,1212.42 1129.11,1212.42 1129.7,1212.42 1130.28,1212.42 1130.87,1212.42 1131.46,1212.42 1132.04,1212.42 1132.63,1212.42 1133.21,1212.42 1133.8,1212.42 1134.39,1212.42 1134.97,1212.42 1135.56,1212.42 1136.15,1212.42 1136.73,1212.42 1137.32,1212.42 1137.91,1212.42 1138.49,1212.42 1139.08,1212.42 1139.67,1212.42 1140.25,1212.42 1140.84,1212.42 1141.42,1212.42 1142.01,1212.42 1142.6,1212.42 1143.18,1212.42 1143.77,1212.42 1144.36,1212.42 1144.94,1212.42 1145.53,1212.42 1146.12,1212.42 1146.7,1212.42 1147.29,1212.42 1147.88,1212.42 1148.46,1212.42 1149.05,1212.42 1149.63,1212.42 1150.22,1212.42 1150.81,1212.42 1151.39,1212.42 1151.98,1212.42 1152.57,1212.42 1153.15,1212.42 1153.74,1212.42 1154.33,1212.42 1154.91,1212.42 1155.5,1212.42 1156.09,1212.42 1156.67,1212.42 1157.26,1212.42 1157.84,1212.42 1158.43,1212.42 1159.02,1212.42 1159.6,1212.42 1160.19,1212.42 1160.78,1212.42 1161.36,1212.42 1161.95,1212.42 1162.54,1212.42 1163.12,1212.42 1163.71,1212.42 1164.29,1212.42 1164.88,1212.42 1165.47,1212.42 1166.05,1212.42 1166.64,1212.42 1167.23,1212.42 1167.81,1212.42 1168.4,1212.42 1168.99,1212.42 1169.57,1212.42 1170.16,1212.42 1170.75,1212.42 1171.33,1212.42 1171.92,1212.42 1172.5,1212.42 1173.09,1212.42 1173.68,1212.42 1174.26,1212.42 1174.85,1212.42 1175.44,1212.42 1176.02,1212.42 1176.61,1212.42 1177.2,1212.42 1177.78,1212.42 1178.37,1212.42 1178.96,1212.42 1179.54,1212.42 1180.13,1212.42 1180.71,1212.42 1181.3,1212.42 1181.89,1212.42 1182.47,1212.42 1183.06,1212.42 1183.65,1212.42 1184.23,1212.42 1184.82,1212.42 1185.41,1212.42 1185.99,1212.42 1186.58,1212.42 1187.16,1212.42 1187.75,1212.42 1188.34,1212.42 1188.92,1212.42 1189.51,1212.42 1190.1,1212.42 1190.68,1212.42 1191.27,1212.42 1191.86,1212.42 1192.44,1212.42 1193.03,1212.42 1193.62,1212.42 1194.2,1212.42 1194.79,1212.42 1195.37,1212.42 1195.96,1212.42 1196.55,1212.42 1197.13,1212.42 1197.72,1212.42 1198.31,1212.42 1198.89,1212.42 1199.48,1212.42 1200.07,1212.42 1200.65,1212.42 1201.24,1212.42 1201.83,1212.42 1202.41,1212.42 1203,1212.42 1203.58,1212.42 1204.17,1212.42 1204.76,1212.42 1205.34,1212.42 1205.93,1212.42 1206.52,1212.42 1207.1,1212.42 1207.69,1212.42 1208.28,1212.42 1208.86,1212.42 1209.45,1212.42 1210.03,1212.42 1210.62,1212.42 1211.21,1212.42 1211.79,1212.42 1212.38,1212.42 1212.97,1212.42 1213.55,1212.42 1214.14,1212.42 1214.73,1212.42 1215.31,1212.42 1215.9,1212.42 1216.49,1212.42 1217.07,1212.42 1217.66,1212.42 1218.24,1212.42 1218.83,1212.42 1219.42,1212.42 1220,1212.42 1220.59,1212.42 1221.18,1212.42 1221.76,1212.42 1222.35,1212.42 1222.94,1212.42 1223.52,1212.42 1224.11,1212.42 1224.7,1212.42 1225.28,1212.42 1225.87,1212.42 1226.45,1212.42 1227.04,1212.42 1227.63,1212.42 1228.21,1212.42 1228.8,1212.42 1229.39,1212.42 1229.97,1212.42 1230.56,1212.42 1231.15,1212.42 1231.73,1212.42 1232.32,1212.42 1232.91,1212.42 1233.49,1212.42 1234.08,1212.42 1234.66,1212.42 1235.25,1212.42 1235.84,1212.42 1236.42,1212.42 1237.01,1212.42 1237.6,1212.42 1238.18,1212.42 1238.77,1212.42 1239.36,1212.42 1239.94,1212.42 1240.53,1212.42 1241.11,1212.42 1241.7,1212.42 1242.29,1212.42 1242.87,1212.42 1243.46,1212.42 1244.05,1212.42 1244.63,1212.42 1245.22,1212.42 1245.81,1212.42 1246.39,1212.42 1246.98,1212.42 1247.57,1212.42 1248.15,1212.42 1248.74,1212.42 1249.32,1212.42 1249.91,1212.42 1250.5,1212.42 1251.08,1212.42 1251.67,1212.42 1252.26,1212.42 1252.84,1212.42 1253.43,1212.42 1254.02,1212.42 1254.6,1212.42 1255.19,1212.42 1255.78,1212.42 1256.36,1212.42 1256.95,1212.42 1257.53,1212.42 1258.12,1212.42 1258.71,1212.42 1259.29,1212.42 1259.88,1212.42 1260.47,1212.42 1261.05,1212.42 1261.64,1212.42 1262.23,1212.42 1262.81,1212.42 1263.4,1212.42 1263.98,1212.42 1264.57,1212.42 1265.16,1212.42 1265.74,1212.42 1266.33,1212.42 1266.92,1212.42 1267.5,1212.42 1268.09,1212.42 1268.68,1212.42 1269.26,1212.42 1269.85,1212.42 1270.44,1212.42 1271.02,1212.42 1271.61,1212.42 1272.19,1212.42 1272.78,1212.42 1273.37,1212.42 1273.95,1212.42 1274.54,1212.42 1275.13,1212.42 1275.71,1212.42 1276.3,1212.42 1276.89,1212.42 1277.47,1212.42 1278.06,1212.42 1278.65,1212.42 1279.23,1212.42 1279.82,1212.42 1280.4,1212.42 1280.99,1212.42 1281.58,1212.42 1282.16,1212.42 1282.75,1212.42 1283.34,1212.42 1283.92,1212.42 1284.51,1212.42 1285.1,1212.42 1285.68,1212.42 1286.27,1212.42 1286.86,1212.42 1287.44,1212.42 1288.03,1212.42 1288.61,1212.42 1289.2,1212.42 1289.79,1212.42 1290.37,1212.42 1290.96,1212.42 1291.55,1212.42 1292.13,1212.42 1292.72,1212.42 1293.31,1212.42 1293.89,1212.42 1294.48,1212.42 1295.06,1212.42 1295.65,1212.42 1296.24,1212.42 1296.82,1212.42 1297.41,1212.42 1298,1212.42 1298.58,1212.42 1299.17,1212.42 1299.76,1212.42 1300.34,1212.42 1300.93,1212.42 1301.52,1212.42 1302.1,1212.42 1302.69,1212.42 1303.27,1212.42 1303.86,1212.42 1304.45,1212.42 1305.03,1212.42 1305.62,1212.42 1306.21,1212.42 1306.79,1212.42 1307.38,1212.42 1307.97,1212.42 1308.55,1212.42 1309.14,1212.42 1309.73,1212.42 1310.31,1212.42 1310.9,1212.42 1311.48,1212.42 1312.07,1212.42 1312.66,1212.42 1313.24,1212.42 1313.83,1212.42 1314.42,1212.42 1315,1212.42 1315.59,1212.42 1316.18,1212.42 1316.76,1212.42 1317.35,1212.42 1317.93,1212.42 1318.52,1212.42 1319.11,1212.42 1319.69,1212.42 1320.28,1212.42 1320.87,1212.42 1321.45,1212.42 1322.04,1212.42 1322.63,1212.42 1323.21,1212.42 1323.8,1212.42 1324.39,1212.42 1324.97,1212.42 1325.56,1212.42 1326.14,1212.42 1326.73,1212.42 1327.32,1212.42 1327.9,1212.42 1328.49,1212.42 1329.08,1212.42 1329.66,1212.42 1330.25,1212.42 1330.84,1212.42 1331.42,1212.42 1332.01,1212.42 1332.6,1212.42 1333.18,1212.42 1333.77,1212.42 1334.35,1212.42 1334.94,1212.42 1335.53,1212.42 1336.11,1212.42 1336.7,1212.42 1337.29,1212.42 1337.87,1212.42 1338.46,1212.42 1339.05,1212.42 1339.63,1212.42 1340.22,1212.42 1340.8,1212.42 1341.39,1212.42 1341.98,1212.42 1342.56,1212.42 1343.15,1212.42 1343.74,1212.42 1344.32,1212.42 1344.91,1212.42 1345.5,1212.42 1346.08,1212.42 1346.67,1212.42 1347.26,1212.42 1347.84,1212.42 1348.43,1212.42 1349.01,1212.42 1349.6,1212.42 1350.19,1212.42 1350.77,1212.42 1351.36,1212.42 1351.95,1212.42 1352.53,1212.42 1353.12,1212.42 1353.71,1212.42 1354.29,1212.42 1354.88,1212.42 1355.47,1212.42 1356.05,1212.42 1356.64,1212.42 1357.22,1212.42 1357.81,1212.42 1358.4,1212.42 1358.98,1212.42 1359.57,1212.42 1360.16,1212.42 1360.74,1212.42 1361.33,1212.42 1361.92,1212.42 1362.5,1212.42 1363.09,1212.42 1363.68,1212.42 1364.26,1212.42 1364.85,1212.42 1365.43,1212.42 1366.02,1212.42 1366.61,1212.42 1367.19,1212.42 1367.78,1212.42 1368.37,1212.42 1368.95,1212.42 1369.54,1212.42 1370.13,1212.42 1370.71,1212.42 1371.3,1212.42 1371.88,1212.42 1372.47,1212.42 1373.06,1212.42 1373.64,1212.42 1374.23,1212.42 1374.82,1212.42 1375.4,1212.42 1375.99,1212.42 1376.58,1212.42 1377.16,1212.42 1377.75,1212.42 1378.34,1212.42 1378.92,1212.42 1379.51,1212.42 1380.09,1212.42 1380.68,1212.42 1381.27,1212.42 1381.85,1212.42 1382.44,1212.42 1383.03,1212.42 1383.61,1212.42 1384.2,1212.42 1384.79,1212.42 1385.37,1212.42 1385.96,1212.42 1386.55,1212.42 1387.13,1212.42 1387.72,1212.42 1388.3,1212.42 1388.89,1212.42 1389.48,1212.42 1390.06,1212.42 1390.65,1212.42 1391.24,1212.42 1391.82,1212.42 1392.41,1212.42 1393,1212.42 1393.58,1212.42 1394.17,1212.42 1394.75,1212.42 1395.34,1212.42 1395.93,1212.42 1396.51,1212.42 1397.1,1212.42 1397.69,1212.42 1398.27,1212.42 1398.86,1212.42 1399.45,1212.42 1400.03,1212.42 1400.62,1212.42 1401.21,1212.42 1401.79,1212.42 1402.38,1212.42 1402.96,1212.42 1403.55,1212.42 1404.14,1212.42 1404.72,1212.42 1405.31,1212.42 1405.9,1212.42 1406.48,1212.42 1407.07,1212.42 1407.66,1212.42 1408.24,1212.42 1408.83,1212.42 1409.42,1212.42 1410,1212.42 1410.59,1212.42 1411.17,1212.42 1411.76,1212.42 1412.35,1212.42 1412.93,1212.42 1413.52,1212.42 1414.11,1212.42 1414.69,1212.42 1415.28,1212.42 1415.87,1212.42 1416.45,1212.42 1417.04,1212.42 1417.63,1212.42 1418.21,1212.42 1418.8,1212.42 1419.38,1212.42 1419.97,1212.42 1420.56,1212.42 1421.14,1212.42 1421.73,1212.42 1422.32,1212.42 1422.9,1212.42 1423.49,1212.42 1424.08,1212.42 1424.66,1212.42 1425.25,1212.42 1425.83,1212.42 1426.42,1212.42 1427.01,1212.42 1427.59,1212.42 1428.18,1212.42 1428.77,1212.42 1429.35,1212.42 1429.94,1212.42 1430.53,1212.42 1431.11,1212.42 1431.7,1212.42 1432.29,1212.42 1432.87,1212.42 1433.46,1212.42 1434.04,1212.42 1434.63,1212.42 1435.22,1212.42 1435.8,1212.42 1436.39,1212.42 1436.98,1212.42 1437.56,1212.42 1438.15,1212.42 1438.74,1212.42 1439.32,1212.42 1439.91,1212.42 1440.5,1212.42 1441.08,1212.42 1441.67,1212.42 1442.25,1212.42 1442.84,1212.42 1443.43,1212.42 1444.01,1212.42 1444.6,1212.42 1445.19,1212.42 1445.77,1212.42 1446.36,1212.42 1446.95,1212.42 1447.53,1212.42 1448.12,1212.42 1448.7,1212.42 1449.29,1212.42 1449.88,1212.42 1450.46,1212.42 1451.05,1212.42 1451.64,1212.42 1452.22,1212.42 1452.81,1212.42 1453.4,1212.42 1453.98,1212.42 1454.57,1212.42 1455.16,1212.42 1455.74,1212.42 1456.33,1212.42 1456.91,1212.42 1457.5,1212.42 1458.09,1212.42 1458.67,1212.42 1459.26,1212.42 1459.85,1212.42 1460.43,1212.42 1461.02,1212.42 1461.61,1212.42 1462.19,1212.42 1462.78,1212.42 1463.37,1212.42 1463.95,1212.42 1464.54,1212.42 1465.12,1212.42 1465.71,1212.42 1466.3,1212.42 1466.88,1212.42 1467.47,1212.42 1468.06,1212.42 1468.64,1212.42 1469.23,1212.42 1469.82,1212.42 1470.4,1212.42 1470.99,1212.42 1471.57,1212.42 1472.16,1212.42 1472.75,1212.42 1473.33,1212.42 1473.92,1212.42 1474.51,1212.42 1475.09,1212.42 1475.68,1212.42 1476.27,1212.42 1476.85,1212.42 1477.44,1212.42 1478.03,1212.42 1478.61,1212.42 1479.2,1212.42 1479.78,1212.42 1480.37,1212.42 1480.96,1212.42 1481.54,1212.42 1482.13,1212.42 1482.72,1212.42 1483.3,1212.42 1483.89,1212.42 1484.48,1212.42 1485.06,1212.42 1485.65,1212.42 1486.24,1212.42 1486.82,1212.42 1487.41,1212.42 1487.99,1212.42 1488.58,1212.42 1489.17,1212.42 1489.75,1212.42 1490.34,1212.42 1490.93,1212.42 1491.51,1212.42 1492.1,1212.42 1492.69,1212.42 1493.27,1212.42 1493.86,1212.42 1494.45,1212.42 1495.03,1212.42 1495.62,1212.42 1496.2,1212.42 1496.79,1212.42 1497.38,1212.42 1497.96,1212.42 1498.55,1212.42 1499.14,1212.42 1499.72,1212.42 1500.31,1212.42 1500.9,1212.42 1501.48,1212.42 1502.07,1212.42 1502.65,1212.42 1503.24,1212.42 1503.83,1212.42 1504.41,1212.42 1505,1212.42 1505.59,1212.42 1506.17,1212.42 1506.76,1212.42 1507.35,1212.42 1507.93,1212.42 1508.52,1212.42 1509.11,1212.42 1509.69,1212.42 1510.28,1212.42 1510.86,1212.42 1511.45,1212.42 1512.04,1212.42 1512.62,1212.42 1513.21,1212.42 1513.8,1212.42 1514.38,1212.42 1514.97,1212.42 1515.56,1212.42 1516.14,1212.42 1516.73,1212.42 1517.32,1212.42 1517.9,1212.42 1518.49,1212.42 1519.07,1212.42 1519.66,1212.42 1520.25,1212.42 1520.83,1212.42 1521.42,1212.42 1522.01,1212.42 1522.59,1212.42 1523.18,1212.42 1523.77,1212.42 1524.35,1212.42 1524.94,1212.42 1525.52,1212.42 1526.11,1212.42 1526.7,1212.42 1527.28,1212.42 1527.87,1212.42 1528.46,1212.42 1529.04,1212.42 1529.63,1212.42 1530.22,1212.42 1530.8,1212.42 1531.39,1212.42 1531.98,1212.42 1532.56,1212.42 1533.15,1212.42 1533.73,1212.42 1534.32,1212.42 1534.91,1212.42 1535.49,1212.42 1536.08,1212.42 1536.67,1212.42 1537.25,1212.42 1537.84,1212.42 1538.43,1212.42 1539.01,1212.42 1539.6,1212.42 1540.19,1212.42 1540.77,1212.42 1541.36,1212.42 1541.94,1212.42 1542.53,1212.42 1543.12,1212.42 1543.7,1212.42 1544.29,1212.42 1544.88,1212.42 1545.46,1212.42 1546.05,1212.42 1546.64,1212.42 1547.22,1212.42 1547.81,1212.42 1548.4,1212.42 1548.98,1212.42 1549.57,1212.42 1550.15,1212.42 1550.74,1212.42 1551.33,1212.42 1551.91,1212.42 1552.5,1212.42 1553.09,1212.42 1553.67,1212.42 1554.26,1212.42 1554.85,1212.42 1555.43,1212.42 1556.02,1212.42 1556.6,1212.42 1557.19,1212.42 1557.78,1212.42 1558.36,1212.42 1558.95,1212.42 1559.54,1212.42 1560.12,1212.42 1560.71,1212.42 1561.3,1212.42 1561.88,1212.42 1562.47,1212.42 1563.06,1212.42 1563.64,1212.42 1564.23,1212.42 1564.81,1212.42 1565.4,1212.42 1565.99,1212.42 1566.57,1212.42 1567.16,1212.42 1567.75,1212.42 1568.33,1212.42 1568.92,1212.42 1569.51,1212.42 1570.09,1212.42 1570.68,1212.42 1571.27,1212.42 1571.85,1212.42 1572.44,1212.42 1573.02,1212.42 1573.61,1212.42 1574.2,1212.42 1574.78,1212.42 1575.37,1212.42 1575.96,1212.42 1576.54,1212.42 1577.13,1212.42 1577.72,1212.42 1578.3,1212.42 1578.89,1212.42 1579.47,1212.42 1580.06,1212.42 1580.65,1212.42 1581.23,1212.42 1581.82,1212.42 1582.41,1212.42 1582.99,1212.42 1583.58,1212.42 1584.17,1212.42 1584.75,1212.42 1585.34,1212.42 1585.93,1212.42 1586.51,1212.42 1587.1,1212.42 1587.68,1212.42 1588.27,1212.42 1588.86,1212.42 1589.44,1212.42 1590.03,1212.42 1590.62,1212.42 1591.2,1212.42 1591.79,1212.42 1592.38,1212.42 1592.96,1212.42 1593.55,1212.42 1594.14,1212.42 1594.72,1212.42 1595.31,1212.42 1595.89,1212.42 1596.48,1212.42 1597.07,1212.42 1597.65,1212.42 1598.24,1212.42 1598.83,1212.42 1599.41,1212.42 1600,1212.42 1600.59,1212.42 1601.17,1212.42 1601.76,1212.42 1602.34,1212.42 1602.93,1212.42 1603.52,1212.42 1604.1,1212.42 1604.69,1212.42 1605.28,1212.42 1605.86,1212.42 1606.45,1212.42 1607.04,1212.42 1607.62,1212.42 1608.21,1212.42 1608.8,1212.42 1609.38,1212.42 1609.97,1212.42 1610.55,1212.42 1611.14,1212.42 1611.73,1212.42 1612.31,1212.42 1612.9,1212.42 1613.49,1212.42 1614.07,1212.42 1614.66,1212.42 1615.25,1212.42 1615.83,1212.42 1616.42,1212.42 1617.01,1212.42 1617.59,1212.42 1618.18,1212.42 1618.76,1212.42 1619.35,1212.42 1619.94,1212.42 1620.52,1212.42 1621.11,1212.42 1621.7,1212.42 1622.28,1212.42 1622.87,1212.42 1623.46,1212.42 1624.04,1212.42 1624.63,1212.42 1625.22,1212.42 1625.8,1212.42 1626.39,1212.42 1626.97,1212.42 1627.56,1212.42 1628.15,1212.42 1628.73,1212.42 1629.32,1212.42 1629.91,1212.42 1630.49,1212.42 1631.08,1212.42 1631.67,1212.42 1632.25,1212.42 1632.84,1212.42 1633.42,1212.42 1634.01,1212.42 1634.6,1212.42 1635.18,1212.42 1635.77,1212.42 1636.36,1212.42 1636.94,1212.42 1637.53,1212.42 1638.12,1212.42 1638.7,1212.42 1639.29,1212.42 1639.88,1212.42 1640.46,1212.42 1641.05,1212.42 1641.63,1212.42 1642.22,1212.42 1642.81,1212.42 1643.39,1212.42 1643.98,1212.42 1644.57,1212.42 1645.15,1212.42 1645.74,1212.42 1646.33,1212.42 1646.91,1212.42 1647.5,1212.42 1648.09,1212.42 1648.67,1212.42 1649.26,1212.42 1649.84,1212.42 1650.43,1212.42 1651.02,1212.42 1651.6,1212.42 1652.19,1212.42 1652.78,1212.42 1653.36,1212.42 1653.95,1212.42 1654.54,1212.42 1655.12,1212.42 1655.71,1212.42 1656.29,1212.42 1656.88,1212.42 1657.47,1212.42 1658.05,1212.42 1658.64,1212.42 1659.23,1212.42 1659.81,1212.42 1660.4,1212.42 1660.99,1212.42 1661.57,1212.42 1662.16,1212.42 1662.75,1212.42 1663.33,1212.42 1663.92,1212.42 1664.5,1212.42 1665.09,1212.42 1665.68,1212.42 1666.26,1212.42 1666.85,1212.42 1667.44,1212.42 1668.02,1212.42 1668.61,1212.42 1669.2,1212.42 1669.78,1212.42 1670.37,1212.42 1670.96,1212.42 1671.54,1212.42 1672.13,1212.42 1672.71,1212.42 1673.3,1212.42 1673.89,1212.42 1674.47,1212.42 1675.06,1212.42 1675.65,1212.42 1676.23,1212.42 1676.82,1212.42 1677.41,1212.42 1677.99,1212.42 1678.58,1212.42 1679.17,1212.42 1679.75,1212.42 1680.34,1212.42 1680.92,1212.42 1681.51,1212.42 1682.1,1212.42 1682.68,1212.42 1683.27,1212.42 1683.86,1212.42 1684.44,1212.42 1685.03,1212.42 1685.62,1212.42 1686.2,1212.42 1686.79,1212.42 1687.37,1212.42 1687.96,1212.42 1688.55,1212.42 1689.13,1212.42 1689.72,1212.42 1690.31,1212.42 1690.89,1212.42 1691.48,1212.42 1692.07,1212.42 1692.65,1212.42 1693.24,1212.42 1693.83,1212.42 1694.41,1212.42 1695,1212.42 1695.58,1212.42 1696.17,1212.42 1696.76,1212.42 1697.34,1212.42 1697.93,1212.42 1698.52,1212.42 1699.1,1212.42 1699.69,1212.42 1700.28,1212.42 1700.86,1212.42 1701.45,1212.42 1702.04,1212.42 1702.62,1212.42 1703.21,1212.42 1703.79,1212.42 1704.38,1212.42 1704.97,1212.42 1705.55,1212.42 1706.14,1212.42 1706.73,1212.42 1707.31,1212.42 1707.9,1212.42 1708.49,1212.42 1709.07,1212.42 1709.66,1212.42 1710.24,1212.42 1710.83,1212.42 1711.42,1212.42 1712,1212.42 1712.59,1212.42 1713.18,1212.42 1713.76,1212.42 1714.35,1212.42 1714.94,1212.42 1715.52,1212.42 1716.11,1212.42 1716.7,1212.42 1717.28,1212.42 1717.87,1212.42 1718.45,1212.42 1719.04,1212.42 1719.63,1212.42 1720.21,1212.42 1720.8,1212.42 1721.39,1212.42 1721.97,1212.42 1722.56,1212.42 1723.15,1212.42 1723.73,1212.42 1724.32,1212.42 1724.91,1212.42 1725.49,1212.42 1726.08,1212.42 1726.66,1212.42 1727.25,1212.42 1727.84,1212.42 1728.42,1212.42 1729.01,1212.42 1729.6,1212.42 1730.18,1212.42 1730.77,1212.42 1731.36,1212.42 1731.94,1212.42 1732.53,1212.42 1733.11,1212.42 1733.7,1212.42 1734.29,1212.42 1734.87,1212.42 1735.46,1212.42 1736.05,1212.42 1736.63,1212.42 1737.22,1212.42 1737.81,1212.42 1738.39,1212.42 1738.98,1212.42 1739.57,1212.42 1740.15,1212.42 1740.74,1212.42 1741.32,1212.42 1741.91,1212.42 1742.5,1212.42 1743.08,1212.42 1743.67,1212.42 1744.26,1212.42 1744.84,1212.42 1745.43,1212.42 1746.02,1212.42 1746.6,1212.42 1747.19,1212.42 1747.78,1212.42 1748.36,1212.42 1748.95,1212.42 1749.53,1212.42 1750.12,1212.42 1750.71,1212.42 1751.29,1212.42 1751.88,1212.42 1752.47,1212.42 1753.05,1212.42 1753.64,1212.42 1754.23,1212.42 1754.81,1212.42 1755.4,1212.42 1755.99,1212.42 1756.57,1212.42 1757.16,1212.42 1757.74,1212.42 1758.33,1212.42 1758.92,1212.42 1759.5,1212.42 1760.09,1212.42 1760.68,1212.42 1761.26,1212.42 1761.85,1212.42 1762.44,1212.42 1763.02,1212.42 1763.61,1212.42 1764.19,1212.42 1764.78,1212.42 1765.37,1212.42 1765.95,1212.42 1766.54,1212.42 1767.13,1212.42 1767.71,1212.42 1768.3,1212.42 1768.89,1212.42 1769.47,1212.42 1770.06,1212.42 1770.65,1212.42 1771.23,1212.42 1771.82,1212.42 1772.4,1212.42 1772.99,1212.42 1773.58,1212.42 1774.16,1212.42 1774.75,1212.42 1775.34,1212.42 1775.92,1212.42 1776.51,1212.42 1777.1,1212.42 1777.68,1212.42 1778.27,1212.42 1778.86,1212.42 1779.44,1212.42 1780.03,1212.42 1780.61,1212.42 1781.2,1212.42 1781.79,1212.42 1782.37,1212.42 1782.96,1212.42 1783.55,1212.42 1784.13,1212.42 1784.72,1212.42 1785.31,1212.42 1785.89,1212.42 1786.48,1212.42 1787.06,1212.42 1787.65,1212.42 1788.24,1212.42 1788.82,1212.42 1789.41,1212.42 1790,1212.42 1790.58,1212.42 1791.17,1212.42 1791.76,1212.42 1792.34,1212.42 1792.93,1212.42 1793.52,1212.42 1794.1,1212.42 1794.69,1212.42 1795.27,1212.42 1795.86,1212.42 1796.45,1212.42 1797.03,1212.42 1797.62,1212.42 1798.21,1212.42 1798.79,1212.42 1799.38,1212.42 1799.97,1212.42 1800.55,1212.42 1801.14,1212.42 1801.73,1212.42 1802.31,1212.42 1802.9,1212.42 1803.48,1212.42 1804.07,1212.42 1804.66,1212.42 1805.24,1212.42 1805.83,1212.42 1806.42,1212.42 1807,1212.42 1807.59,1212.42 1808.18,1212.42 1808.76,1212.42 1809.35,1212.42 1809.94,1212.42 1810.52,1212.42 1811.11,1212.42 1811.69,1212.42 1812.28,1212.42 1812.87,1212.42 1813.45,1212.42 1814.04,1212.42 1814.63,1212.42 1815.21,1212.42 1815.8,1212.42 1816.39,1212.42 1816.97,1212.42 1817.56,1212.42 1818.14,1212.42 1818.73,1212.42 1819.32,1212.42 1819.9,1212.42 1820.49,1212.42 1821.08,1212.42 1821.66,1212.42 1822.25,1212.42 1822.84,1212.42 1823.42,1212.42 1824.01,1212.42 1824.6,1212.42 1825.18,1212.42 1825.77,1212.42 1826.35,1212.42 1826.94,1212.42 1827.53,1212.42 1828.11,1212.42 1828.7,1212.42 1829.29,1212.42 1829.87,1212.42 1830.46,1212.42 1831.05,1212.42 1831.63,1212.42 1832.22,1212.42 1832.81,1212.42 1833.39,1212.42 1833.98,1212.42 1834.56,1212.42 1835.15,1212.42 1835.74,1212.42 1836.32,1212.42 1836.91,1212.42 1837.5,1212.42 1838.08,1212.42 1838.67,1212.42 1839.26,1212.42 1839.84,1212.42 1840.43,1212.42 1841.01,1212.42 1841.6,1212.42 1842.19,1212.42 1842.77,1212.42 1843.36,1212.42 1843.95,1212.42 1844.53,1212.42 1845.12,1212.42 1845.71,1212.42 1846.29,1212.42 1846.88,1212.42 1847.47,1212.42 1848.05,1212.42 1848.64,1212.42 1849.22,1212.42 1849.81,1212.42 1850.4,1212.42 1850.98,1212.42 1851.57,1212.42 1852.16,1212.42 1852.74,1212.42 1853.33,1212.42 1853.92,1212.42 1854.5,1212.42 1855.09,1212.42 1855.68,1212.42 1856.26,1212.42 1856.85,1212.42 1857.43,1212.42 1858.02,1212.42 1858.61,1212.42 1859.19,1212.42 1859.78,1212.42 1860.37,1212.42 1860.95,1212.42 1861.54,1212.42 1862.13,1212.42 1862.71,1212.42 1863.3,1212.42 1863.88,1212.42 1864.47,1212.42 1865.06,1212.42 1865.64,1212.42 1866.23,1212.42 1866.82,1212.42 1867.4,1212.42 1867.99,1212.42 1868.58,1212.42 1869.16,1212.42 1869.75,1212.42 1870.34,1212.42 1870.92,1212.42 1871.51,1212.42 1872.09,1212.42 1872.68,1212.42 1873.27,1212.42 1873.85,1212.42 1874.44,1212.42 1875.03,1212.42 1875.61,1212.42 1876.2,1212.42 1876.79,1212.42 1877.37,1212.42 1877.96,1212.42 1878.55,1212.42 1879.13,1212.42 1879.72,1212.42 1880.3,1212.42 1880.89,1212.42 1881.48,1212.42 1882.06,1212.42 1882.65,1212.42 1883.24,1212.42 1883.82,1212.42 1884.41,1212.42 1885,1212.42 1885.58,1212.42 1886.17,1212.42 1886.76,1212.42 1887.34,1212.42 1887.93,1212.42 1888.51,1212.42 1889.1,1212.42 1889.69,1212.42 1890.27,1212.42 1890.86,1212.42 1891.45,1212.42 1892.03,1212.42 1892.62,1212.42 1893.21,1212.42 1893.79,1212.42 1894.38,1212.42 1894.96,1212.42 1895.55,1212.42 1896.14,1212.42 1896.72,1212.42 1897.31,1212.42 1897.9,1212.42 1898.48,1212.42 1899.07,1212.42 1899.66,1212.42 1900.24,1212.42 1900.83,1212.42 1901.42,1212.42 1902,1212.42 1902.59,1212.42 1903.17,1212.42 1903.76,1212.42 1904.35,1212.42 1904.93,1212.42 1905.52,1212.42 1906.11,1212.42 1906.69,1212.42 1907.28,1212.42 1907.87,1212.42 1908.45,1212.42 1909.04,1212.42 1909.63,1212.42 1910.21,1212.42 1910.8,1212.42 1911.38,1212.42 1911.97,1212.42 1912.56,1212.42 1913.14,1212.42 1913.73,1212.42 1914.32,1212.42 1914.9,1212.42 1915.49,1212.42 1916.08,1212.42 1916.66,1212.42 1917.25,1212.42 1917.83,1212.42 1918.42,1212.42 1919.01,1212.42 1919.59,1212.42 1920.18,1212.42 1920.77,1212.42 1921.35,1212.42 1921.94,1212.42 1922.53,1212.42 1923.11,1212.42 1923.7,1212.42 1924.29,1212.42 1924.87,1212.42 1925.46,1212.42 1926.04,1212.42 1926.63,1212.42 1927.22,1212.42 1927.8,1212.42 1928.39,1212.42 1928.98,1212.42 1929.56,1212.42 1930.15,1212.42 1930.74,1212.42 1931.32,1212.42 1931.91,1212.42 1932.5,1212.42 1933.08,1212.42 1933.67,1212.42 1934.25,1212.42 1934.84,1212.42 1935.43,1212.42 1936.01,1212.42 1936.6,1212.42 1937.19,1212.42 1937.77,1212.42 1938.36,1212.42 1938.95,1212.42 1939.53,1212.42 1940.12,1212.42 1940.71,1212.42 1941.29,1212.42 1941.88,1212.42 1942.46,1212.42 1943.05,1212.42 1943.64,1212.42 1944.22,1212.42 1944.81,1212.42 1945.4,1212.42 1945.98,1212.42 1946.57,1212.42 1947.16,1212.42 1947.74,1212.42 1948.33,1212.42 1948.91,1212.42 1949.5,1212.42 1950.09,1212.42 1950.67,1212.42 1951.26,1212.42 1951.85,1212.42 1952.43,1212.42 1953.02,1212.42 1953.61,1212.42 1954.19,1212.42 1954.78,1212.42 1955.37,1212.42 1955.95,1212.42 1956.54,1212.42 1957.12,1212.42 1957.71,1212.42 1958.3,1212.42 1958.88,1212.42 1959.47,1212.42 1960.06,1212.42 1960.64,1212.42 1961.23,1212.42 1961.82,1212.42 1962.4,1212.42 1962.99,1212.42 1963.58,1212.42 1964.16,1212.42 1964.75,1212.42 1965.33,1212.42 1965.92,1212.42 1966.51,1212.42 1967.09,1212.42 1967.68,1212.42 1968.27,1212.42 1968.85,1212.42 1969.44,1212.42 1970.03,1212.42 1970.61,1212.42 1971.2,1212.42 1971.78,1212.42 1972.37,1212.42 1972.96,1212.42 1973.54,1212.42 1974.13,1212.42 1974.72,1212.42 1975.3,1212.42 1975.89,1212.42 1976.48,1212.42 1977.06,1212.42 1977.65,1212.42 1978.24,1212.42 1978.82,1212.42 1979.41,1212.42 1979.99,1212.42 1980.58,1212.42 1981.17,1212.42 1981.75,1212.42 1982.34,1212.42 1982.93,1212.42 1983.51,1212.42 1984.1,1212.42 1984.69,1212.42 1985.27,1212.42 1985.86,1212.42 1986.45,1212.42 1987.03,1212.42 1987.62,1212.42 1988.2,1212.42 1988.79,1212.42 1989.38,1212.42 1989.96,1212.42 1990.55,1212.42 1991.14,1212.42 1991.72,1212.42 1992.31,1212.42 1992.9,1212.42 1993.48,1212.42 1994.07,1212.42 1994.65,1212.42 1995.24,1212.42 1995.83,1212.42 1996.41,1212.42 1997,1212.42 1997.59,1212.42 1998.17,1212.42 1998.76,1212.42 1999.35,1212.42 1999.93,1212.42 2000.52,1212.42 2001.11,1212.42 2001.69,1212.42 2002.28,1212.42 2002.86,1212.42 2003.45,1212.42 2004.04,1212.42 2004.62,1212.42 2005.21,1212.42 2005.8,1212.42 2006.38,1212.42 2006.97,1212.42 2007.56,1212.42 2008.14,1212.42 2008.73,1212.42 2009.32,1212.42 2009.9,1212.42 2010.49,1212.42 2011.07,1212.42 2011.66,1212.42 2012.25,1212.42 2012.83,1212.42 2013.42,1212.42 2014.01,1212.42 2014.59,1212.42 2015.18,1212.42 2015.77,1212.42 2016.35,1212.42 2016.94,1212.42 2017.53,1212.42 2018.11,1212.42 2018.7,1212.42 2019.28,1212.42 2019.87,1212.42 2020.46,1212.42 2021.04,1212.42 2021.63,1212.42 2022.22,1212.42 2022.8,1212.42 2023.39,1212.42 2023.98,1212.42 2024.56,1212.42 2025.15,1212.42 2025.73,1212.42 2026.32,1212.42 2026.91,1212.42 2027.49,1212.42 2028.08,1212.42 2028.67,1212.42 2029.25,1212.42 2029.84,1212.42 2030.43,1212.42 2031.01,1212.42 2031.6,1212.42 2032.19,1212.42 2032.77,1212.42 2033.36,1212.42 2033.94,1212.42 2034.53,1212.42 2035.12,1212.42 2035.7,1212.42 2036.29,1212.42 2036.88,1212.42 2037.46,1212.42 2038.05,1212.42 2038.64,1212.42 2039.22,1212.42 2039.81,1212.42 2040.4,1212.42 2040.98,1212.42 2041.57,1212.42 2042.15,1212.42 2042.74,1212.42 2043.33,1212.42 2043.91,1212.42 2044.5,1212.42 2045.09,1212.42 2045.67,1212.42 2046.26,1212.42 2046.85,1212.42 2047.43,1212.42 2048.02,1212.42 2048.6,1212.42 2049.19,1212.42 2049.78,1212.42 2050.36,1212.42 2050.95,1212.42 2051.54,1212.42 2052.12,1212.42 2052.71,1212.42 2053.3,1212.42 2053.88,1212.42 2054.47,1212.42 2055.06,1212.42 2055.64,1212.42 2056.23,1212.42 2056.81,1212.42 2057.4,1212.42 2057.99,1212.42 2058.57,1212.42 2059.16,1212.42 2059.75,1212.42 2060.33,1212.42 2060.92,1212.42 2061.51,1212.42 2062.09,1212.42 2062.68,1212.42 2063.27,1212.42 2063.85,1212.42 2064.44,1212.42 2065.02,1212.42 2065.61,1212.42 2066.2,1212.42 2066.78,1212.42 2067.37,1212.42 2067.96,1212.42 2068.54,1212.42 2069.13,1212.42 2069.72,1212.42 2070.3,1212.42 2070.89,1212.42 2071.48,1212.42 2072.06,1212.42 2072.65,1212.42 2073.23,1212.42 2073.82,1212.42 2074.41,1212.42 2074.99,1212.42 2075.58,1212.42 2076.17,1212.42 2076.75,1212.42 2077.34,1212.42 2077.93,1212.42 2078.51,1212.42 2079.1,1212.42 2079.68,1212.42 2080.27,1212.42 2080.86,1212.42 2081.44,1212.42 2082.03,1212.42 2082.62,1212.42 2083.2,1212.42 2083.79,1212.42 2084.38,1212.42 2084.96,1212.42 2085.55,1212.42 2086.14,1212.42 2086.72,1212.42 2087.31,1212.42 2087.89,1212.42 2088.48,1212.42 2089.07,1212.42 2089.65,1212.42 2090.24,1212.42 2090.83,1212.42 2091.41,1212.42 2092,1212.42 2092.59,1212.42 2093.17,1212.42 2093.76,1212.42 2094.35,1212.42 2094.93,1212.42 2095.52,1212.42 2096.1,1212.42 2096.69,1212.42 2097.28,1212.42 2097.86,1212.42 2098.45,1212.42 2099.04,1212.42 2099.62,1212.42 2100.21,1212.42 2100.8,1212.42 2101.38,1212.42 2101.97,1212.42 2102.55,1212.42 2103.14,1212.42 2103.73,1212.42 2104.31,1212.42 2104.9,1212.42 2105.49,1212.42 2106.07,1212.42 2106.66,1212.42 2107.25,1212.42 2107.83,1212.42 2108.42,1212.42 2109.01,1212.42 2109.59,1212.42 2110.18,1212.42 2110.76,1212.42 2111.35,1212.42 2111.94,1212.42 2112.52,1212.42 2113.11,1212.42 2113.7,1212.42 2114.28,1212.42 2114.87,1212.42 2115.46,1212.42 2116.04,1212.42 2116.63,1212.42 2117.22,1212.42 2117.8,1212.42 2118.39,1212.42 2118.97,1212.42 2119.56,1212.42 2120.15,1212.42 2120.73,1212.42 2121.32,1212.42 2121.91,1212.42 2122.49,1212.42 2123.08,1212.42 2123.67,1212.42 2124.25,1212.42 2124.84,1212.42 2125.42,1212.42 2126.01,1212.42 2126.6,1212.42 2127.18,1212.42 2127.77,1212.42 2128.36,1212.42 2128.94,1212.42 2129.53,1212.42 2130.12,1212.42 2130.7,1212.42 2131.29,1212.42 2131.88,1212.42 2132.46,1212.42 2133.05,1212.42 2133.63,1212.42 2134.22,1212.42 2134.81,1212.42 2135.39,1212.42 2135.98,1212.42 2136.57,1212.42 2137.15,1212.42 2137.74,1212.42 2138.33,1212.42 2138.91,1212.42 2139.5,1212.42 2140.09,1212.42 2140.67,1212.42 2141.26,1212.42 2141.84,1212.42 2142.43,1212.42 2143.02,1212.42 2143.6,1212.42 2144.19,1212.42 2144.78,1212.42 2145.36,1212.42 2145.95,1212.42 2146.54,1212.42 2147.12,1212.42 2147.71,1212.42 2148.3,1212.42 2148.88,1212.42 2149.47,1212.42 2150.05,1212.42 2150.64,1212.42 2151.23,1212.42 2151.81,1212.42 2152.4,1212.42 2152.99,1212.42 2153.57,1212.42 2154.16,1212.42 2154.75,1212.42 2155.33,1212.42 2155.92,1212.42 2156.5,1212.42 2157.09,1212.42 2157.68,1212.42 2158.26,1212.42 \"/>\n<path clip-path=\"url(#clip512)\" d=\"M986.025 1212.33 L986.612 1212.33 L987.198 1212.33 L987.785 1212.33 L988.371 1212.33 L988.957 1212.33 L989.544 1212.33 L990.13 1212.33 L990.717 1212.33 L991.303 1212.33 L991.889 1212.33 L992.476 1212.33 L993.062 1212.33 L993.649 1212.33 L994.235 1212.33 L994.822 1212.33 L995.408 1212.33 L995.994 1212.33 L996.581 1212.33 L997.167 1212.33 L997.754 1212.33 L998.34 1212.33 L998.926 1212.33 L999.513 1212.33 L1000.1 1212.33 L1000.69 1212.33 L1001.27 1212.33 L1001.86 1212.33 L1002.44 1212.33 L1003.03 1212.33 L1003.62 1212.33 L1004.2 1212.33 L1004.79 1212.33 L1005.38 1212.33 L1005.96 1212.33 L1006.55 1212.33 L1007.14 1212.33 L1007.72 1212.33 L1008.31 1212.33 L1008.9 1212.33 L1009.48 1212.33 L1010.07 1212.33 L1010.65 1212.33 L1011.24 1212.33 L1011.83 1212.33 L1012.41 1212.33 L1013 1212.33 L1013.59 1212.33 L1014.17 1212.33 L1014.76 1212.33 L1015.35 1212.33 L1015.93 1212.33 L1016.52 1212.33 L1017.11 1212.33 L1017.69 1212.33 L1018.28 1212.33 L1018.86 1212.33 L1019.45 1212.33 L1020.04 1212.33 L1020.62 1212.33 L1021.21 1212.33 L1021.8 1212.33 L1022.38 1212.33 L1022.97 1212.33 L1023.56 1212.33 L1024.14 1212.33 L1024.73 1212.33 L1025.32 1212.33 L1025.9 1212.33 L1026.49 1212.33 L1027.07 1212.33 L1027.66 1212.33 L1028.25 1212.33 L1028.83 1212.33 L1029.42 1212.33 L1030.01 1212.33 L1030.59 1212.33 L1031.18 1212.33 L1031.77 1212.33 L1032.35 1212.33 L1032.94 1212.33 L1033.52 1212.33 L1034.11 1212.33 L1034.7 1212.33 L1035.28 1212.33 L1035.87 1212.33 L1036.46 1212.33 L1037.04 1212.33 L1037.63 1212.33 L1038.22 1212.33 L1038.8 1212.33 L1039.39 1212.33 L1039.98 1212.33 L1040.56 1212.33 L1041.15 1212.33 L1041.73 1212.33 L1042.32 1212.33 L1042.91 1212.33 L1043.49 1212.33 L1044.08 1212.33 L1044.67 1212.33 L1045.25 1212.33 L1045.84 1212.33 L1046.43 1212.33 L1047.01 1212.33 L1047.6 1212.33 L1048.19 1212.33 L1048.77 1212.33 L1049.36 1212.33 L1049.94 1212.33 L1050.53 1212.33 L1051.12 1212.33 L1051.7 1212.33 L1052.29 1212.33 L1052.88 1212.33 L1053.46 1212.33 L1054.05 1212.33 L1054.64 1212.33 L1055.22 1212.33 L1055.81 1212.33 L1056.39 1212.33 L1056.98 1212.33 L1057.57 1212.33 L1058.15 1212.33 L1058.74 1212.33 L1059.33 1212.33 L1059.91 1212.33 L1060.5 1212.33 L1061.09 1212.33 L1061.67 1212.33 L1062.26 1212.33 L1062.85 1212.33 L1063.43 1212.33 L1064.02 1212.33 L1064.6 1212.33 L1065.19 1212.33 L1065.78 1212.33 L1066.36 1212.33 L1066.95 1212.33 L1067.54 1212.33 L1068.12 1212.33 L1068.71 1212.33 L1069.3 1212.33 L1069.88 1212.33 L1070.47 1212.33 L1071.06 1212.33 L1071.64 1212.33 L1072.23 1212.33 L1072.81 1212.33 L1073.4 1212.33 L1073.99 1212.33 L1074.57 1212.33 L1075.16 1212.33 L1075.75 1212.33 L1076.33 1212.33 L1076.92 1212.33 L1077.51 1212.33 L1078.09 1212.33 L1078.68 1212.33 L1079.26 1212.33 L1079.85 1212.33 L1080.44 1212.33 L1081.02 1212.33 L1081.61 1212.33 L1082.2 1212.33 L1082.78 1212.33 L1083.37 1212.33 L1083.96 1212.33 L1084.54 1212.33 L1085.13 1212.33 L1085.72 1212.33 L1086.3 1212.33 L1086.89 1212.33 L1087.47 1212.33 L1088.06 1212.33 L1088.65 1212.33 L1089.23 1212.33 L1089.82 1212.33 L1090.41 1212.33 L1090.99 1212.33 L1091.58 1212.33 L1092.17 1212.33 L1092.75 1212.33 L1093.34 1212.33 L1093.93 1212.33 L1094.51 1212.33 L1095.1 1212.33 L1095.68 1212.33 L1096.27 1212.33 L1096.86 1212.33 L1097.44 1212.33 L1098.03 1212.33 L1098.62 1212.33 L1099.2 1212.33 L1099.79 1212.33 L1100.38 1212.33 L1100.96 1212.33 L1101.55 1212.33 L1102.14 1212.33 L1102.72 1212.33 L1103.31 1212.33 L1103.89 1212.33 L1104.48 1212.33 L1105.07 1212.33 L1105.65 1212.33 L1106.24 1212.33 L1106.83 1212.33 L1107.41 1212.33 L1108 1212.33 L1108.59 1212.33 L1109.17 1212.33 L1109.76 1212.33 L1110.34 1212.33 L1110.93 1212.33 L1111.52 1212.33 L1112.1 1212.33 L1112.69 1212.33 L1113.28 1212.33 L1113.86 1212.33 L1114.45 1212.33 L1115.04 1212.33 L1115.62 1212.33 L1116.21 1212.33 L1116.8 1212.33 L1117.38 1212.33 L1117.97 1212.33 L1118.55 1212.33 L1119.14 1212.33 L1119.73 1212.33 L1120.31 1212.33 L1120.9 1212.33 L1121.49 1212.33 L1122.07 1212.33 L1122.66 1212.33 L1123.25 1212.33 L1123.83 1212.33 L1124.42 1212.33 L1125.01 1212.33 L1125.59 1212.33 L1126.18 1212.33 L1126.76 1212.33 L1127.35 1212.33 L1127.94 1212.33 L1128.52 1212.33 L1129.11 1212.33 L1129.7 1212.33 L1130.28 1212.33 L1130.87 1212.33 L1131.46 1212.33 L1132.04 1212.33 L1132.63 1212.33 L1133.21 1212.33 L1133.8 1212.33 L1134.39 1212.33 L1134.97 1212.33 L1135.56 1212.33 L1136.15 1212.33 L1136.73 1212.33 L1137.32 1212.33 L1137.91 1212.33 L1138.49 1212.33 L1139.08 1212.33 L1139.67 1212.33 L1140.25 1212.33 L1140.84 1212.33 L1141.42 1212.33 L1142.01 1212.33 L1142.6 1212.33 L1143.18 1212.33 L1143.77 1212.33 L1144.36 1212.33 L1144.94 1212.33 L1145.53 1212.33 L1146.12 1212.33 L1146.7 1212.33 L1147.29 1212.33 L1147.88 1212.33 L1148.46 1212.33 L1149.05 1212.33 L1149.63 1212.33 L1150.22 1212.33 L1150.81 1212.33 L1151.39 1212.33 L1151.98 1212.33 L1152.57 1212.33 L1153.15 1212.33 L1153.74 1212.33 L1154.33 1212.33 L1154.91 1212.33 L1155.5 1212.33 L1156.09 1212.33 L1156.67 1212.33 L1157.26 1212.33 L1157.84 1212.33 L1158.43 1212.33 L1159.02 1212.33 L1159.6 1212.33 L1160.19 1212.33 L1160.78 1212.33 L1161.36 1212.33 L1161.95 1212.33 L1162.54 1212.33 L1163.12 1212.33 L1163.71 1212.33 L1164.29 1212.33 L1164.88 1212.33 L1165.47 1212.33 L1166.05 1212.33 L1166.64 1212.33 L1167.23 1212.33 L1167.81 1212.33 L1168.4 1212.33 L1168.99 1212.33 L1169.57 1212.33 L1170.16 1212.33 L1170.75 1212.33 L1171.33 1212.33 L1171.92 1212.33 L1172.5 1212.33 L1173.09 1212.33 L1173.68 1212.33 L1174.26 1212.33 L1174.85 1212.33 L1175.44 1212.33 L1176.02 1212.33 L1176.61 1212.33 L1177.2 1212.33 L1177.78 1212.33 L1178.37 1212.33 L1178.96 1212.33 L1179.54 1212.33 L1180.13 1212.33 L1180.71 1212.33 L1181.3 1212.33 L1181.89 1212.33 L1182.47 1212.33 L1183.06 1212.33 L1183.65 1212.33 L1184.23 1212.33 L1184.82 1212.33 L1185.41 1212.33 L1185.99 1212.33 L1186.58 1212.33 L1187.16 1212.33 L1187.75 1212.33 L1188.34 1212.33 L1188.92 1212.33 L1189.51 1212.33 L1190.1 1212.33 L1190.68 1212.33 L1191.27 1212.33 L1191.86 1212.33 L1192.44 1212.33 L1193.03 1212.33 L1193.62 1212.33 L1194.2 1212.33 L1194.79 1212.33 L1195.37 1212.33 L1195.96 1212.33 L1196.55 1212.33 L1197.13 1212.33 L1197.72 1212.33 L1198.31 1212.33 L1198.89 1212.33 L1199.48 1212.33 L1200.07 1212.33 L1200.65 1212.33 L1201.24 1212.33 L1201.83 1212.33 L1202.41 1212.33 L1203 1212.33 L1203.58 1212.33 L1204.17 1212.33 L1204.76 1212.33 L1205.34 1212.33 L1205.93 1212.33 L1206.52 1212.33 L1207.1 1212.33 L1207.69 1212.33 L1208.28 1212.33 L1208.86 1212.33 L1209.45 1212.33 L1210.03 1212.33 L1210.62 1212.33 L1211.21 1212.33 L1211.79 1212.33 L1212.38 1212.33 L1212.97 1212.33 L1213.55 1212.33 L1214.14 1212.33 L1214.73 1212.33 L1215.31 1212.33 L1215.9 1212.33 L1216.49 1212.33 L1217.07 1212.33 L1217.66 1212.33 L1218.24 1212.33 L1218.83 1212.33 L1219.42 1212.33 L1220 1212.33 L1220.59 1212.33 L1221.18 1212.33 L1221.76 1212.33 L1222.35 1212.33 L1222.94 1212.33 L1223.52 1212.33 L1224.11 1212.33 L1224.7 1212.33 L1225.28 1212.33 L1225.87 1212.33 L1226.45 1212.33 L1227.04 1212.33 L1227.63 1212.33 L1228.21 1212.33 L1228.8 1212.33 L1229.39 1212.33 L1229.97 1212.33 L1230.56 1212.33 L1231.15 1212.33 L1231.73 1212.33 L1232.32 1212.33 L1232.91 1212.33 L1233.49 1212.33 L1234.08 1212.33 L1234.66 1212.33 L1235.25 1212.33 L1235.84 1212.33 L1236.42 1212.33 L1237.01 1212.33 L1237.6 1212.33 L1238.18 1212.33 L1238.77 1212.33 L1239.36 1212.33 L1239.94 1212.33 L1240.53 1212.33 L1241.11 1212.33 L1241.7 1212.33 L1242.29 1212.33 L1242.87 1212.33 L1243.46 1212.33 L1244.05 1212.33 L1244.63 1212.33 L1245.22 1212.33 L1245.81 1212.33 L1246.39 1212.33 L1246.98 1212.33 L1247.57 1212.33 L1248.15 1212.33 L1248.74 1212.33 L1249.32 1212.33 L1249.91 1212.33 L1250.5 1212.33 L1251.08 1212.33 L1251.67 1212.33 L1252.26 1212.33 L1252.84 1212.33 L1253.43 1212.33 L1254.02 1212.33 L1254.6 1212.33 L1255.19 1212.33 L1255.78 1212.33 L1256.36 1212.33 L1256.95 1212.33 L1257.53 1212.33 L1258.12 1212.33 L1258.71 1212.33 L1259.29 1212.33 L1259.88 1212.33 L1260.47 1212.33 L1261.05 1212.33 L1261.64 1212.33 L1262.23 1212.33 L1262.81 1212.33 L1263.4 1212.33 L1263.98 1212.33 L1264.57 1212.33 L1265.16 1212.33 L1265.74 1212.33 L1266.33 1212.33 L1266.92 1212.33 L1267.5 1212.33 L1268.09 1212.33 L1268.68 1212.33 L1269.26 1212.33 L1269.85 1212.33 L1270.44 1212.33 L1271.02 1212.33 L1271.61 1212.33 L1272.19 1212.33 L1272.78 1212.33 L1273.37 1212.33 L1273.95 1212.33 L1274.54 1212.33 L1275.13 1212.33 L1275.71 1212.33 L1276.3 1212.33 L1276.89 1212.33 L1277.47 1212.33 L1278.06 1212.33 L1278.65 1212.33 L1279.23 1212.33 L1279.82 1212.33 L1280.4 1212.33 L1280.99 1212.33 L1281.58 1212.33 L1282.16 1212.33 L1282.75 1212.33 L1283.34 1212.33 L1283.92 1212.33 L1284.51 1212.33 L1285.1 1212.33 L1285.68 1212.33 L1286.27 1212.33 L1286.86 1212.33 L1287.44 1212.33 L1288.03 1212.33 L1288.61 1212.33 L1289.2 1212.33 L1289.79 1212.33 L1290.37 1212.33 L1290.96 1212.33 L1291.55 1212.33 L1292.13 1212.33 L1292.72 1212.33 L1293.31 1212.33 L1293.89 1212.33 L1294.48 1212.33 L1295.06 1212.33 L1295.65 1212.33 L1296.24 1212.33 L1296.82 1212.33 L1297.41 1212.33 L1298 1212.33 L1298.58 1212.33 L1299.17 1212.33 L1299.76 1212.33 L1300.34 1212.33 L1300.93 1212.33 L1301.52 1212.33 L1302.1 1212.33 L1302.69 1212.33 L1303.27 1212.33 L1303.86 1212.33 L1304.45 1212.33 L1305.03 1212.33 L1305.62 1212.33 L1306.21 1212.33 L1306.79 1212.33 L1307.38 1212.33 L1307.97 1212.33 L1308.55 1212.33 L1309.14 1212.33 L1309.73 1212.33 L1310.31 1212.33 L1310.9 1212.33 L1311.48 1212.33 L1312.07 1212.33 L1312.66 1212.33 L1313.24 1212.33 L1313.83 1212.33 L1314.42 1212.33 L1315 1212.33 L1315.59 1212.33 L1316.18 1212.33 L1316.76 1212.33 L1317.35 1212.33 L1317.93 1212.33 L1318.52 1212.33 L1319.11 1212.33 L1319.69 1212.33 L1320.28 1212.33 L1320.87 1212.33 L1321.45 1212.33 L1322.04 1212.33 L1322.63 1212.33 L1323.21 1212.33 L1323.8 1212.33 L1324.39 1212.33 L1324.97 1212.33 L1325.56 1212.33 L1326.14 1212.33 L1326.73 1212.33 L1327.32 1212.33 L1327.9 1212.33 L1328.49 1212.33 L1329.08 1212.33 L1329.66 1212.33 L1330.25 1212.33 L1330.84 1212.33 L1331.42 1212.33 L1332.01 1212.33 L1332.6 1212.33 L1333.18 1212.33 L1333.77 1212.33 L1334.35 1212.33 L1334.94 1212.33 L1335.53 1212.33 L1336.11 1212.33 L1336.7 1212.33 L1337.29 1212.33 L1337.87 1212.33 L1338.46 1212.33 L1339.05 1212.33 L1339.63 1212.33 L1340.22 1212.33 L1340.8 1212.33 L1341.39 1212.33 L1341.98 1212.33 L1342.56 1212.33 L1343.15 1212.33 L1343.74 1212.33 L1344.32 1212.33 L1344.91 1212.33 L1345.5 1212.33 L1346.08 1212.33 L1346.67 1212.33 L1347.26 1212.33 L1347.84 1212.33 L1348.43 1212.33 L1349.01 1212.33 L1349.6 1212.33 L1350.19 1212.33 L1350.77 1212.33 L1351.36 1212.33 L1351.95 1212.33 L1352.53 1212.33 L1353.12 1212.33 L1353.71 1212.33 L1354.29 1212.33 L1354.88 1212.33 L1355.47 1212.33 L1356.05 1212.33 L1356.64 1212.33 L1357.22 1212.33 L1357.81 1212.33 L1358.4 1212.33 L1358.98 1212.33 L1359.57 1212.33 L1360.16 1212.33 L1360.74 1212.33 L1361.33 1212.33 L1361.92 1212.33 L1362.5 1212.33 L1363.09 1212.33 L1363.68 1212.33 L1364.26 1212.33 L1364.85 1212.33 L1365.43 1212.33 L1366.02 1212.33 L1366.61 1212.33 L1367.19 1212.33 L1367.78 1212.33 L1368.37 1212.33 L1368.95 1212.33 L1369.54 1212.33 L1370.13 1212.33 L1370.71 1212.33 L1371.3 1212.33 L1371.88 1212.33 L1372.47 1212.33 L1373.06 1212.33 L1373.64 1212.33 L1374.23 1212.33 L1374.82 1212.33 L1375.4 1212.33 L1375.99 1212.33 L1376.58 1212.33 L1377.16 1212.33 L1377.75 1212.33 L1378.34 1212.33 L1378.92 1212.33 L1379.51 1212.33 L1380.09 1212.33 L1380.68 1212.33 L1381.27 1212.33 L1381.85 1212.33 L1382.44 1212.33 L1383.03 1212.33 L1383.61 1212.33 L1384.2 1212.33 L1384.79 1212.33 L1385.37 1212.33 L1385.96 1212.33 L1386.55 1212.33 L1387.13 1212.33 L1387.72 1212.33 L1388.3 1212.33 L1388.89 1212.33 L1389.48 1212.33 L1390.06 1212.33 L1390.65 1212.33 L1391.24 1212.33 L1391.82 1212.33 L1392.41 1212.33 L1393 1212.33 L1393.58 1212.33 L1394.17 1212.33 L1394.75 1212.33 L1395.34 1212.33 L1395.93 1212.33 L1396.51 1212.33 L1397.1 1212.33 L1397.69 1212.33 L1398.27 1212.33 L1398.86 1212.33 L1399.45 1212.33 L1400.03 1212.33 L1400.62 1212.33 L1401.21 1212.33 L1401.79 1212.33 L1402.38 1212.33 L1402.96 1212.33 L1403.55 1212.33 L1404.14 1212.33 L1404.72 1212.33 L1405.31 1212.33 L1405.9 1212.33 L1406.48 1212.33 L1407.07 1212.33 L1407.66 1212.33 L1408.24 1212.33 L1408.83 1212.33 L1409.42 1212.33 L1410 1212.33 L1410.59 1212.33 L1411.17 1212.33 L1411.76 1212.33 L1412.35 1212.33 L1412.93 1212.33 L1413.52 1212.33 L1414.11 1212.33 L1414.69 1212.33 L1415.28 1212.33 L1415.87 1212.33 L1416.45 1212.33 L1417.04 1212.33 L1417.63 1212.33 L1418.21 1212.33 L1418.8 1212.33 L1419.38 1212.33 L1419.97 1212.33 L1420.56 1212.33 L1421.14 1212.33 L1421.73 1212.33 L1422.32 1212.33 L1422.9 1212.33 L1423.49 1212.33 L1424.08 1212.33 L1424.66 1212.33 L1425.25 1212.33 L1425.83 1212.33 L1426.42 1212.33 L1427.01 1212.33 L1427.59 1212.33 L1428.18 1212.33 L1428.77 1212.33 L1429.35 1212.33 L1429.94 1212.33 L1430.53 1212.33 L1431.11 1212.33 L1431.7 1212.33 L1432.29 1212.33 L1432.87 1212.33 L1433.46 1212.33 L1434.04 1212.33 L1434.63 1212.33 L1435.22 1212.33 L1435.8 1212.33 L1436.39 1212.33 L1436.98 1212.33 L1437.56 1212.33 L1438.15 1212.33 L1438.74 1212.33 L1439.32 1212.33 L1439.91 1212.33 L1440.5 1212.33 L1441.08 1212.33 L1441.67 1212.33 L1442.25 1212.33 L1442.84 1212.33 L1443.43 1212.33 L1444.01 1212.33 L1444.6 1212.33 L1445.19 1212.33 L1445.77 1212.33 L1446.36 1212.33 L1446.95 1212.33 L1447.53 1212.33 L1448.12 1212.33 L1448.7 1212.33 L1449.29 1212.33 L1449.88 1212.33 L1450.46 1212.33 L1451.05 1212.33 L1451.64 1212.33 L1452.22 1212.33 L1452.81 1212.33 L1453.4 1212.33 L1453.98 1212.33 L1454.57 1212.33 L1455.16 1212.33 L1455.74 1212.33 L1456.33 1212.33 L1456.91 1212.33 L1457.5 1212.33 L1458.09 1212.33 L1458.67 1212.33 L1459.26 1212.33 L1459.85 1212.33 L1460.43 1212.33 L1461.02 1212.33 L1461.61 1212.33 L1462.19 1212.33 L1462.78 1212.33 L1463.37 1212.33 L1463.95 1212.33 L1464.54 1212.33 L1465.12 1212.33 L1465.71 1212.33 L1466.3 1212.33 L1466.88 1212.33 L1467.47 1212.33 L1468.06 1212.33 L1468.64 1212.33 L1469.23 1212.33 L1469.82 1212.33 L1470.4 1212.33 L1470.99 1212.33 L1471.57 1212.33 L1472.16 1212.33 L1472.75 1212.33 L1473.33 1212.33 L1473.92 1212.33 L1474.51 1212.33 L1475.09 1212.33 L1475.68 1212.33 L1476.27 1212.33 L1476.85 1212.33 L1477.44 1212.33 L1478.03 1212.33 L1478.61 1212.33 L1479.2 1212.33 L1479.78 1212.33 L1480.37 1212.33 L1480.96 1212.33 L1481.54 1212.33 L1482.13 1212.33 L1482.72 1212.33 L1483.3 1212.33 L1483.89 1212.33 L1484.48 1212.33 L1485.06 1212.33 L1485.65 1212.33 L1486.24 1212.33 L1486.82 1212.33 L1487.41 1212.33 L1487.99 1212.33 L1488.58 1212.33 L1489.17 1212.33 L1489.75 1212.33 L1490.34 1212.33 L1490.93 1212.33 L1491.51 1212.33 L1492.1 1212.33 L1492.69 1212.33 L1493.27 1212.33 L1493.86 1212.33 L1494.45 1212.33 L1495.03 1212.33 L1495.62 1212.33 L1496.2 1212.33 L1496.79 1212.33 L1497.38 1212.33 L1497.96 1212.33 L1498.55 1212.33 L1499.14 1212.33 L1499.72 1212.33 L1500.31 1212.33 L1500.9 1212.33 L1501.48 1212.33 L1502.07 1212.33 L1502.65 1212.33 L1503.24 1212.33 L1503.83 1212.33 L1504.41 1212.33 L1505 1212.33 L1505.59 1212.33 L1506.17 1212.33 L1506.76 1212.33 L1507.35 1212.33 L1507.93 1212.33 L1508.52 1212.33 L1509.11 1212.33 L1509.69 1212.33 L1510.28 1212.33 L1510.86 1212.33 L1511.45 1212.33 L1512.04 1212.33 L1512.62 1212.33 L1513.21 1212.33 L1513.8 1212.33 L1514.38 1212.33 L1514.97 1212.33 L1515.56 1212.33 L1516.14 1212.33 L1516.73 1212.33 L1517.32 1212.33 L1517.9 1212.33 L1518.49 1212.33 L1519.07 1212.33 L1519.66 1212.33 L1520.25 1212.33 L1520.83 1212.33 L1521.42 1212.33 L1522.01 1212.33 L1522.59 1212.33 L1523.18 1212.33 L1523.77 1212.33 L1524.35 1212.33 L1524.94 1212.33 L1525.52 1212.33 L1526.11 1212.33 L1526.7 1212.33 L1527.28 1212.33 L1527.87 1212.33 L1528.46 1212.33 L1529.04 1212.33 L1529.63 1212.33 L1530.22 1212.33 L1530.8 1212.33 L1531.39 1212.33 L1531.98 1212.33 L1532.56 1212.33 L1533.15 1212.33 L1533.73 1212.33 L1534.32 1212.33 L1534.91 1212.33 L1535.49 1212.33 L1536.08 1212.33 L1536.67 1212.33 L1537.25 1212.33 L1537.84 1212.33 L1538.43 1212.33 L1539.01 1212.33 L1539.6 1212.33 L1540.19 1212.33 L1540.77 1212.33 L1541.36 1212.33 L1541.94 1212.33 L1542.53 1212.33 L1543.12 1212.33 L1543.7 1212.33 L1544.29 1212.33 L1544.88 1212.33 L1545.46 1212.33 L1546.05 1212.33 L1546.64 1212.33 L1547.22 1212.33 L1547.81 1212.33 L1548.4 1212.33 L1548.98 1212.33 L1549.57 1212.33 L1550.15 1212.33 L1550.74 1212.33 L1551.33 1212.33 L1551.91 1212.33 L1552.5 1212.33 L1553.09 1212.33 L1553.67 1212.33 L1554.26 1212.33 L1554.85 1212.33 L1555.43 1212.33 L1556.02 1212.33 L1556.6 1212.33 L1557.19 1212.33 L1557.78 1212.33 L1558.36 1212.33 L1558.95 1212.33 L1559.54 1212.33 L1560.12 1212.33 L1560.71 1212.33 L1561.3 1212.33 L1561.88 1212.33 L1562.47 1212.33 L1563.06 1212.33 L1563.64 1212.33 L1564.23 1212.33 L1564.81 1212.33 L1565.4 1212.33 L1565.99 1212.33 L1566.57 1212.33 L1567.16 1212.33 L1567.75 1212.33 L1568.33 1212.33 L1568.92 1212.33 L1569.51 1212.33 L1570.09 1212.33 L1570.68 1212.33 L1571.27 1212.33 L1571.85 1212.33 L1572.44 1212.33 L1573.02 1212.33 L1573.61 1212.33 L1574.2 1212.33 L1574.78 1212.33 L1575.37 1212.33 L1575.96 1212.33 L1576.54 1212.33 L1577.13 1212.33 L1577.72 1212.33 L1578.3 1212.33 L1578.89 1212.33 L1579.47 1212.33 L1580.06 1212.33 L1580.65 1212.33 L1581.23 1212.33 L1581.82 1212.33 L1582.41 1212.33 L1582.99 1212.33 L1583.58 1212.33 L1584.17 1212.33 L1584.75 1212.33 L1585.34 1212.33 L1585.93 1212.33 L1586.51 1212.33 L1587.1 1212.33 L1587.68 1212.33 L1588.27 1212.33 L1588.86 1212.33 L1589.44 1212.33 L1590.03 1212.33 L1590.62 1212.33 L1591.2 1212.33 L1591.79 1212.33 L1592.38 1212.33 L1592.96 1212.33 L1593.55 1212.33 L1594.14 1212.33 L1594.72 1212.33 L1595.31 1212.33 L1595.89 1212.33 L1596.48 1212.33 L1597.07 1212.33 L1597.65 1212.33 L1598.24 1212.33 L1598.83 1212.33 L1599.41 1212.33 L1600 1212.33 L1600.59 1212.33 L1601.17 1212.33 L1601.76 1212.33 L1602.34 1212.33 L1602.93 1212.33 L1603.52 1212.33 L1604.1 1212.33 L1604.69 1212.33 L1605.28 1212.33 L1605.86 1212.33 L1606.45 1212.33 L1607.04 1212.33 L1607.62 1212.33 L1608.21 1212.33 L1608.8 1212.33 L1609.38 1212.33 L1609.97 1212.33 L1610.55 1212.33 L1611.14 1212.33 L1611.73 1212.33 L1612.31 1212.33 L1612.9 1212.33 L1613.49 1212.33 L1614.07 1212.33 L1614.66 1212.33 L1615.25 1212.33 L1615.83 1212.33 L1616.42 1212.33 L1617.01 1212.33 L1617.59 1212.33 L1618.18 1212.33 L1618.76 1212.33 L1619.35 1212.33 L1619.94 1212.33 L1620.52 1212.33 L1621.11 1212.33 L1621.7 1212.33 L1622.28 1212.33 L1622.87 1212.33 L1623.46 1212.33 L1624.04 1212.33 L1624.63 1212.33 L1625.22 1212.33 L1625.8 1212.33 L1626.39 1212.33 L1626.97 1212.33 L1627.56 1212.33 L1628.15 1212.33 L1628.73 1212.33 L1629.32 1212.33 L1629.91 1212.33 L1630.49 1212.33 L1631.08 1212.33 L1631.67 1212.33 L1632.25 1212.33 L1632.84 1212.33 L1633.42 1212.33 L1634.01 1212.33 L1634.6 1212.33 L1635.18 1212.33 L1635.77 1212.33 L1636.36 1212.33 L1636.94 1212.33 L1637.53 1212.33 L1638.12 1212.33 L1638.7 1212.33 L1639.29 1212.33 L1639.88 1212.33 L1640.46 1212.33 L1641.05 1212.33 L1641.63 1212.33 L1642.22 1212.33 L1642.81 1212.33 L1643.39 1212.33 L1643.98 1212.33 L1644.57 1212.33 L1645.15 1212.33 L1645.74 1212.33 L1646.33 1212.33 L1646.91 1212.33 L1647.5 1212.33 L1648.09 1212.33 L1648.67 1212.33 L1649.26 1212.33 L1649.84 1212.33 L1650.43 1212.33 L1651.02 1212.33 L1651.6 1212.33 L1652.19 1212.33 L1652.78 1212.33 L1653.36 1212.33 L1653.95 1212.33 L1654.54 1212.33 L1655.12 1212.33 L1655.71 1212.33 L1656.29 1212.33 L1656.88 1212.33 L1657.47 1212.33 L1658.05 1212.33 L1658.64 1212.33 L1659.23 1212.33 L1659.81 1212.33 L1660.4 1212.33 L1660.99 1212.33 L1661.57 1212.33 L1662.16 1212.33 L1662.75 1212.33 L1663.33 1212.33 L1663.92 1212.33 L1664.5 1212.33 L1665.09 1212.33 L1665.68 1212.33 L1666.26 1212.33 L1666.85 1212.33 L1667.44 1212.33 L1668.02 1212.33 L1668.61 1212.33 L1669.2 1212.33 L1669.78 1212.33 L1670.37 1212.33 L1670.96 1212.33 L1671.54 1212.33 L1672.13 1212.33 L1672.71 1212.33 L1673.3 1212.33 L1673.89 1212.33 L1674.47 1212.33 L1675.06 1212.33 L1675.65 1212.33 L1676.23 1212.33 L1676.82 1212.33 L1677.41 1212.33 L1677.99 1212.33 L1678.58 1212.33 L1679.17 1212.33 L1679.75 1212.33 L1680.34 1212.33 L1680.92 1212.33 L1681.51 1212.33 L1682.1 1212.33 L1682.68 1212.33 L1683.27 1212.33 L1683.86 1212.33 L1684.44 1212.33 L1685.03 1212.33 L1685.62 1212.33 L1686.2 1212.33 L1686.79 1212.33 L1687.37 1212.33 L1687.96 1212.33 L1688.55 1212.33 L1689.13 1212.33 L1689.72 1212.33 L1690.31 1212.33 L1690.89 1212.33 L1691.48 1212.33 L1692.07 1212.33 L1692.65 1212.33 L1693.24 1212.33 L1693.83 1212.33 L1694.41 1212.33 L1695 1212.33 L1695.58 1212.33 L1696.17 1212.33 L1696.76 1212.33 L1697.34 1212.33 L1697.93 1212.33 L1698.52 1212.33 L1699.1 1212.33 L1699.69 1212.33 L1700.28 1212.33 L1700.86 1212.33 L1701.45 1212.33 L1702.04 1212.33 L1702.62 1212.33 L1703.21 1212.33 L1703.79 1212.33 L1704.38 1212.33 L1704.97 1212.33 L1705.55 1212.33 L1706.14 1212.33 L1706.73 1212.33 L1707.31 1212.33 L1707.9 1212.33 L1708.49 1212.33 L1709.07 1212.33 L1709.66 1212.33 L1710.24 1212.33 L1710.83 1212.33 L1711.42 1212.33 L1712 1212.33 L1712.59 1212.33 L1713.18 1212.33 L1713.76 1212.33 L1714.35 1212.33 L1714.94 1212.33 L1715.52 1212.33 L1716.11 1212.33 L1716.7 1212.33 L1717.28 1212.33 L1717.87 1212.33 L1718.45 1212.33 L1719.04 1212.33 L1719.63 1212.33 L1720.21 1212.33 L1720.8 1212.33 L1721.39 1212.33 L1721.97 1212.33 L1722.56 1212.33 L1723.15 1212.33 L1723.73 1212.33 L1724.32 1212.33 L1724.91 1212.33 L1725.49 1212.33 L1726.08 1212.33 L1726.66 1212.33 L1727.25 1212.33 L1727.84 1212.33 L1728.42 1212.33 L1729.01 1212.33 L1729.6 1212.33 L1730.18 1212.33 L1730.77 1212.33 L1731.36 1212.33 L1731.94 1212.33 L1732.53 1212.33 L1733.11 1212.33 L1733.7 1212.33 L1734.29 1212.33 L1734.87 1212.33 L1735.46 1212.33 L1736.05 1212.33 L1736.63 1212.33 L1737.22 1212.33 L1737.81 1212.33 L1738.39 1212.33 L1738.98 1212.33 L1739.57 1212.33 L1740.15 1212.33 L1740.74 1212.33 L1741.32 1212.33 L1741.91 1212.33 L1742.5 1212.33 L1743.08 1212.33 L1743.67 1212.33 L1744.26 1212.33 L1744.84 1212.33 L1745.43 1212.33 L1746.02 1212.33 L1746.6 1212.33 L1747.19 1212.33 L1747.78 1212.33 L1748.36 1212.33 L1748.95 1212.33 L1749.53 1212.33 L1750.12 1212.33 L1750.71 1212.33 L1751.29 1212.33 L1751.88 1212.33 L1752.47 1212.33 L1753.05 1212.33 L1753.64 1212.33 L1754.23 1212.33 L1754.81 1212.33 L1755.4 1212.33 L1755.99 1212.33 L1756.57 1212.33 L1757.16 1212.33 L1757.74 1212.33 L1758.33 1212.33 L1758.92 1212.33 L1759.5 1212.33 L1760.09 1212.33 L1760.68 1212.33 L1761.26 1212.33 L1761.85 1212.33 L1762.44 1212.33 L1763.02 1212.33 L1763.61 1212.33 L1764.19 1212.33 L1764.78 1212.33 L1765.37 1212.33 L1765.95 1212.33 L1766.54 1212.33 L1767.13 1212.33 L1767.71 1212.33 L1768.3 1212.33 L1768.89 1212.33 L1769.47 1212.33 L1770.06 1212.33 L1770.65 1212.33 L1771.23 1212.33 L1771.82 1212.33 L1772.4 1212.33 L1772.99 1212.33 L1773.58 1212.33 L1774.16 1212.33 L1774.75 1212.33 L1775.34 1212.33 L1775.92 1212.33 L1776.51 1212.33 L1777.1 1212.33 L1777.68 1212.33 L1778.27 1212.33 L1778.86 1212.33 L1779.44 1212.33 L1780.03 1212.33 L1780.61 1212.33 L1781.2 1212.33 L1781.79 1212.33 L1782.37 1212.33 L1782.96 1212.33 L1783.55 1212.33 L1784.13 1212.33 L1784.72 1212.33 L1785.31 1212.33 L1785.89 1212.33 L1786.48 1212.33 L1787.06 1212.33 L1787.65 1212.33 L1788.24 1212.33 L1788.82 1212.33 L1789.41 1212.33 L1790 1212.33 L1790.58 1212.33 L1791.17 1212.33 L1791.76 1212.33 L1792.34 1212.33 L1792.93 1212.33 L1793.52 1212.33 L1794.1 1212.33 L1794.69 1212.33 L1795.27 1212.33 L1795.86 1212.33 L1796.45 1212.33 L1797.03 1212.33 L1797.62 1212.33 L1798.21 1212.33 L1798.79 1212.33 L1799.38 1212.33 L1799.97 1212.33 L1800.55 1212.33 L1801.14 1212.33 L1801.73 1212.33 L1802.31 1212.33 L1802.9 1212.33 L1803.48 1212.33 L1804.07 1212.33 L1804.66 1212.33 L1805.24 1212.33 L1805.83 1212.33 L1806.42 1212.33 L1807 1212.33 L1807.59 1212.33 L1808.18 1212.33 L1808.76 1212.33 L1809.35 1212.33 L1809.94 1212.33 L1810.52 1212.33 L1811.11 1212.33 L1811.69 1212.33 L1812.28 1212.33 L1812.87 1212.33 L1813.45 1212.33 L1814.04 1212.33 L1814.63 1212.33 L1815.21 1212.33 L1815.8 1212.33 L1816.39 1212.33 L1816.97 1212.33 L1817.56 1212.33 L1818.14 1212.33 L1818.73 1212.33 L1819.32 1212.33 L1819.9 1212.33 L1820.49 1212.33 L1821.08 1212.33 L1821.66 1212.33 L1822.25 1212.33 L1822.84 1212.33 L1823.42 1212.33 L1824.01 1212.33 L1824.6 1212.33 L1825.18 1212.33 L1825.77 1212.33 L1826.35 1212.33 L1826.94 1212.33 L1827.53 1212.33 L1828.11 1212.33 L1828.7 1212.33 L1829.29 1212.33 L1829.87 1212.33 L1830.46 1212.33 L1831.05 1212.33 L1831.63 1212.33 L1832.22 1212.33 L1832.81 1212.33 L1833.39 1212.33 L1833.98 1212.33 L1834.56 1212.33 L1835.15 1212.33 L1835.74 1212.33 L1836.32 1212.33 L1836.91 1212.33 L1837.5 1212.33 L1838.08 1212.33 L1838.67 1212.33 L1839.26 1212.33 L1839.84 1212.33 L1840.43 1212.33 L1841.01 1212.33 L1841.6 1212.33 L1842.19 1212.33 L1842.77 1212.33 L1843.36 1212.33 L1843.95 1212.33 L1844.53 1212.33 L1845.12 1212.33 L1845.71 1212.33 L1846.29 1212.33 L1846.88 1212.33 L1847.47 1212.33 L1848.05 1212.33 L1848.64 1212.33 L1849.22 1212.33 L1849.81 1212.33 L1850.4 1212.33 L1850.98 1212.33 L1851.57 1212.33 L1852.16 1212.33 L1852.74 1212.33 L1853.33 1212.33 L1853.92 1212.33 L1854.5 1212.33 L1855.09 1212.33 L1855.68 1212.33 L1856.26 1212.33 L1856.85 1212.33 L1857.43 1212.33 L1858.02 1212.33 L1858.61 1212.33 L1859.19 1212.33 L1859.78 1212.33 L1860.37 1212.33 L1860.95 1212.33 L1861.54 1212.33 L1862.13 1212.33 L1862.71 1212.33 L1863.3 1212.33 L1863.88 1212.33 L1864.47 1212.33 L1865.06 1212.33 L1865.64 1212.33 L1866.23 1212.33 L1866.82 1212.33 L1867.4 1212.33 L1867.99 1212.33 L1868.58 1212.33 L1869.16 1212.33 L1869.75 1212.33 L1870.34 1212.33 L1870.92 1212.33 L1871.51 1212.33 L1872.09 1212.33 L1872.68 1212.33 L1873.27 1212.33 L1873.85 1212.33 L1874.44 1212.33 L1875.03 1212.33 L1875.61 1212.33 L1876.2 1212.33 L1876.79 1212.33 L1877.37 1212.33 L1877.96 1212.33 L1878.55 1212.33 L1879.13 1212.33 L1879.72 1212.33 L1880.3 1212.33 L1880.89 1212.33 L1881.48 1212.33 L1882.06 1212.33 L1882.65 1212.33 L1883.24 1212.33 L1883.82 1212.33 L1884.41 1212.33 L1885 1212.33 L1885.58 1212.33 L1886.17 1212.33 L1886.76 1212.33 L1887.34 1212.33 L1887.93 1212.33 L1888.51 1212.33 L1889.1 1212.33 L1889.69 1212.33 L1890.27 1212.33 L1890.86 1212.33 L1891.45 1212.33 L1892.03 1212.33 L1892.62 1212.33 L1893.21 1212.33 L1893.79 1212.33 L1894.38 1212.33 L1894.96 1212.33 L1895.55 1212.33 L1896.14 1212.33 L1896.72 1212.33 L1897.31 1212.33 L1897.9 1212.33 L1898.48 1212.33 L1899.07 1212.33 L1899.66 1212.33 L1900.24 1212.33 L1900.83 1212.33 L1901.42 1212.33 L1902 1212.33 L1902.59 1212.33 L1903.17 1212.33 L1903.76 1212.33 L1904.35 1212.33 L1904.93 1212.33 L1905.52 1212.33 L1906.11 1212.33 L1906.69 1212.33 L1907.28 1212.33 L1907.87 1212.33 L1908.45 1212.33 L1909.04 1212.33 L1909.63 1212.33 L1910.21 1212.33 L1910.8 1212.33 L1911.38 1212.33 L1911.97 1212.33 L1912.56 1212.33 L1913.14 1212.33 L1913.73 1212.33 L1914.32 1212.33 L1914.9 1212.33 L1915.49 1212.33 L1916.08 1212.33 L1916.66 1212.33 L1917.25 1212.33 L1917.83 1212.33 L1918.42 1212.33 L1919.01 1212.33 L1919.59 1212.33 L1920.18 1212.33 L1920.77 1212.33 L1921.35 1212.33 L1921.94 1212.33 L1922.53 1212.33 L1923.11 1212.33 L1923.7 1212.33 L1924.29 1212.33 L1924.87 1212.33 L1925.46 1212.33 L1926.04 1212.33 L1926.63 1212.33 L1927.22 1212.33 L1927.8 1212.33 L1928.39 1212.33 L1928.98 1212.33 L1929.56 1212.33 L1930.15 1212.33 L1930.74 1212.33 L1931.32 1212.33 L1931.91 1212.33 L1932.5 1212.33 L1933.08 1212.33 L1933.67 1212.33 L1934.25 1212.33 L1934.84 1212.33 L1935.43 1212.33 L1936.01 1212.33 L1936.6 1212.33 L1937.19 1212.33 L1937.77 1212.33 L1938.36 1212.33 L1938.95 1212.33 L1939.53 1212.33 L1940.12 1212.33 L1940.71 1212.33 L1941.29 1212.33 L1941.88 1212.33 L1942.46 1212.33 L1943.05 1212.33 L1943.64 1212.33 L1944.22 1212.33 L1944.81 1212.33 L1945.4 1212.33 L1945.98 1212.33 L1946.57 1212.33 L1947.16 1212.33 L1947.74 1212.33 L1948.33 1212.33 L1948.91 1212.33 L1949.5 1212.33 L1950.09 1212.33 L1950.67 1212.33 L1951.26 1212.33 L1951.85 1212.33 L1952.43 1212.33 L1953.02 1212.33 L1953.61 1212.33 L1954.19 1212.33 L1954.78 1212.33 L1955.37 1212.33 L1955.95 1212.33 L1956.54 1212.33 L1957.12 1212.33 L1957.71 1212.33 L1958.3 1212.33 L1958.88 1212.33 L1959.47 1212.33 L1960.06 1212.33 L1960.64 1212.33 L1961.23 1212.33 L1961.82 1212.33 L1962.4 1212.33 L1962.99 1212.33 L1963.58 1212.33 L1964.16 1212.33 L1964.75 1212.33 L1965.33 1212.33 L1965.92 1212.33 L1966.51 1212.33 L1967.09 1212.33 L1967.68 1212.33 L1968.27 1212.33 L1968.85 1212.33 L1969.44 1212.33 L1970.03 1212.33 L1970.61 1212.33 L1971.2 1212.33 L1971.78 1212.33 L1972.37 1212.33 L1972.96 1212.33 L1973.54 1212.33 L1974.13 1212.33 L1974.72 1212.33 L1975.3 1212.33 L1975.89 1212.33 L1976.48 1212.33 L1977.06 1212.33 L1977.65 1212.33 L1978.24 1212.33 L1978.82 1212.33 L1979.41 1212.33 L1979.99 1212.33 L1980.58 1212.33 L1981.17 1212.33 L1981.75 1212.33 L1982.34 1212.33 L1982.93 1212.33 L1983.51 1212.33 L1984.1 1212.33 L1984.69 1212.33 L1985.27 1212.33 L1985.86 1212.33 L1986.45 1212.33 L1987.03 1212.33 L1987.62 1212.33 L1988.2 1212.33 L1988.79 1212.33 L1989.38 1212.33 L1989.96 1212.33 L1990.55 1212.33 L1991.14 1212.33 L1991.72 1212.33 L1992.31 1212.33 L1992.9 1212.33 L1993.48 1212.33 L1994.07 1212.33 L1994.65 1212.33 L1995.24 1212.33 L1995.83 1212.33 L1996.41 1212.33 L1997 1212.33 L1997.59 1212.33 L1998.17 1212.33 L1998.76 1212.33 L1999.35 1212.33 L1999.93 1212.33 L2000.52 1212.33 L2001.11 1212.33 L2001.69 1212.33 L2002.28 1212.33 L2002.86 1212.33 L2003.45 1212.33 L2004.04 1212.33 L2004.62 1212.33 L2005.21 1212.33 L2005.8 1212.33 L2006.38 1212.33 L2006.97 1212.33 L2007.56 1212.33 L2008.14 1212.33 L2008.73 1212.33 L2009.32 1212.33 L2009.9 1212.33 L2010.49 1212.33 L2011.07 1212.33 L2011.66 1212.33 L2012.25 1212.33 L2012.83 1212.33 L2013.42 1212.33 L2014.01 1212.33 L2014.59 1212.33 L2015.18 1212.33 L2015.77 1212.33 L2016.35 1212.33 L2016.94 1212.33 L2017.53 1212.33 L2018.11 1212.33 L2018.7 1212.33 L2019.28 1212.33 L2019.87 1212.33 L2020.46 1212.33 L2021.04 1212.33 L2021.63 1212.33 L2022.22 1212.33 L2022.8 1212.33 L2023.39 1212.33 L2023.98 1212.33 L2024.56 1212.33 L2025.15 1212.33 L2025.73 1212.33 L2026.32 1212.33 L2026.91 1212.33 L2027.49 1212.33 L2028.08 1212.33 L2028.67 1212.33 L2029.25 1212.33 L2029.84 1212.33 L2030.43 1212.33 L2031.01 1212.33 L2031.6 1212.33 L2032.19 1212.33 L2032.77 1212.33 L2033.36 1212.33 L2033.94 1212.33 L2034.53 1212.33 L2035.12 1212.33 L2035.7 1212.33 L2036.29 1212.33 L2036.88 1212.33 L2037.46 1212.33 L2038.05 1212.33 L2038.64 1212.33 L2039.22 1212.33 L2039.81 1212.33 L2040.4 1212.33 L2040.98 1212.33 L2041.57 1212.33 L2042.15 1212.33 L2042.74 1212.33 L2043.33 1212.33 L2043.91 1212.33 L2044.5 1212.33 L2045.09 1212.33 L2045.67 1212.33 L2046.26 1212.33 L2046.85 1212.33 L2047.43 1212.33 L2048.02 1212.33 L2048.6 1212.33 L2049.19 1212.33 L2049.78 1212.33 L2050.36 1212.33 L2050.95 1212.33 L2051.54 1212.33 L2052.12 1212.33 L2052.71 1212.33 L2053.3 1212.33 L2053.88 1212.33 L2054.47 1212.33 L2055.06 1212.33 L2055.64 1212.33 L2056.23 1212.33 L2056.81 1212.33 L2057.4 1212.33 L2057.99 1212.33 L2058.57 1212.33 L2059.16 1212.33 L2059.75 1212.33 L2060.33 1212.33 L2060.92 1212.33 L2061.51 1212.33 L2062.09 1212.33 L2062.68 1212.33 L2063.27 1212.33 L2063.85 1212.33 L2064.44 1212.33 L2065.02 1212.33 L2065.61 1212.33 L2066.2 1212.33 L2066.78 1212.33 L2067.37 1212.33 L2067.96 1212.33 L2068.54 1212.33 L2069.13 1212.33 L2069.72 1212.33 L2070.3 1212.33 L2070.89 1212.33 L2071.48 1212.33 L2072.06 1212.33 L2072.65 1212.33 L2073.23 1212.33 L2073.82 1212.33 L2074.41 1212.33 L2074.99 1212.33 L2075.58 1212.33 L2076.17 1212.33 L2076.75 1212.33 L2077.34 1212.33 L2077.93 1212.33 L2078.51 1212.33 L2079.1 1212.33 L2079.68 1212.33 L2080.27 1212.33 L2080.86 1212.33 L2081.44 1212.33 L2082.03 1212.33 L2082.62 1212.33 L2083.2 1212.33 L2083.79 1212.33 L2084.38 1212.33 L2084.96 1212.33 L2085.55 1212.33 L2086.14 1212.33 L2086.72 1212.33 L2087.31 1212.33 L2087.89 1212.33 L2088.48 1212.33 L2089.07 1212.33 L2089.65 1212.33 L2090.24 1212.33 L2090.83 1212.33 L2091.41 1212.33 L2092 1212.33 L2092.59 1212.33 L2093.17 1212.33 L2093.76 1212.33 L2094.35 1212.33 L2094.93 1212.33 L2095.52 1212.33 L2096.1 1212.33 L2096.69 1212.33 L2097.28 1212.33 L2097.86 1212.33 L2098.45 1212.33 L2099.04 1212.33 L2099.62 1212.33 L2100.21 1212.33 L2100.8 1212.33 L2101.38 1212.33 L2101.97 1212.33 L2102.55 1212.33 L2103.14 1212.33 L2103.73 1212.33 L2104.31 1212.33 L2104.9 1212.33 L2105.49 1212.33 L2106.07 1212.33 L2106.66 1212.33 L2107.25 1212.33 L2107.83 1212.33 L2108.42 1212.33 L2109.01 1212.33 L2109.59 1212.33 L2110.18 1212.33 L2110.76 1212.33 L2111.35 1212.33 L2111.94 1212.33 L2112.52 1212.33 L2113.11 1212.33 L2113.7 1212.33 L2114.28 1212.33 L2114.87 1212.33 L2115.46 1212.33 L2116.04 1212.33 L2116.63 1212.33 L2117.22 1212.33 L2117.8 1212.33 L2118.39 1212.33 L2118.97 1212.33 L2119.56 1212.33 L2120.15 1212.33 L2120.73 1212.33 L2121.32 1212.33 L2121.91 1212.33 L2122.49 1212.33 L2123.08 1212.33 L2123.67 1212.33 L2124.25 1212.33 L2124.84 1212.33 L2125.42 1212.33 L2126.01 1212.33 L2126.6 1212.33 L2127.18 1212.33 L2127.77 1212.33 L2128.36 1212.33 L2128.94 1212.33 L2129.53 1212.33 L2130.12 1212.33 L2130.7 1212.33 L2131.29 1212.33 L2131.88 1212.33 L2132.46 1212.33 L2133.05 1212.33 L2133.63 1212.33 L2134.22 1212.33 L2134.81 1212.33 L2135.39 1212.33 L2135.98 1212.33 L2136.57 1212.33 L2137.15 1212.33 L2137.74 1212.33 L2138.33 1212.33 L2138.91 1212.33 L2139.5 1212.33 L2140.09 1212.33 L2140.67 1212.33 L2141.26 1212.33 L2141.84 1212.33 L2142.43 1212.33 L2143.02 1212.33 L2143.6 1212.33 L2144.19 1212.33 L2144.78 1212.33 L2145.36 1212.33 L2145.95 1212.33 L2146.54 1212.33 L2147.12 1212.33 L2147.71 1212.33 L2148.3 1212.33 L2148.88 1212.33 L2149.47 1212.33 L2150.05 1212.33 L2150.64 1212.33 L2151.23 1212.33 L2151.81 1212.33 L2152.4 1212.33 L2152.99 1212.33 L2153.57 1212.33 L2154.16 1212.33 L2154.75 1212.33 L2155.33 1212.33 L2155.92 1212.33 L2156.5 1212.33 L2157.09 1212.33 L2157.68 1212.33 L2158.26 1212.33 L2158.26 1212.16 L2157.68 1212.16 L2157.09 1212.16 L2156.5 1212.16 L2155.92 1212.16 L2155.33 1212.16 L2154.75 1212.16 L2154.16 1212.16 L2153.57 1212.16 L2152.99 1212.16 L2152.4 1212.16 L2151.81 1212.16 L2151.23 1212.16 L2150.64 1212.16 L2150.05 1212.16 L2149.47 1212.16 L2148.88 1212.16 L2148.3 1212.16 L2147.71 1212.16 L2147.12 1212.16 L2146.54 1212.16 L2145.95 1212.16 L2145.36 1212.16 L2144.78 1212.16 L2144.19 1212.16 L2143.6 1212.16 L2143.02 1212.16 L2142.43 1212.16 L2141.84 1212.16 L2141.26 1212.16 L2140.67 1212.16 L2140.09 1212.16 L2139.5 1212.16 L2138.91 1212.16 L2138.33 1212.16 L2137.74 1212.16 L2137.15 1212.16 L2136.57 1212.16 L2135.98 1212.16 L2135.39 1212.16 L2134.81 1212.16 L2134.22 1212.16 L2133.63 1212.16 L2133.05 1212.16 L2132.46 1212.16 L2131.88 1212.16 L2131.29 1212.16 L2130.7 1212.16 L2130.12 1212.16 L2129.53 1212.16 L2128.94 1212.16 L2128.36 1212.16 L2127.77 1212.16 L2127.18 1212.16 L2126.6 1212.16 L2126.01 1212.16 L2125.42 1212.16 L2124.84 1212.16 L2124.25 1212.16 L2123.67 1212.16 L2123.08 1212.16 L2122.49 1212.16 L2121.91 1212.16 L2121.32 1212.16 L2120.73 1212.16 L2120.15 1212.16 L2119.56 1212.16 L2118.97 1212.16 L2118.39 1212.16 L2117.8 1212.16 L2117.22 1212.16 L2116.63 1212.16 L2116.04 1212.16 L2115.46 1212.16 L2114.87 1212.16 L2114.28 1212.16 L2113.7 1212.16 L2113.11 1212.16 L2112.52 1212.16 L2111.94 1212.16 L2111.35 1212.16 L2110.76 1212.16 L2110.18 1212.16 L2109.59 1212.16 L2109.01 1212.16 L2108.42 1212.16 L2107.83 1212.16 L2107.25 1212.16 L2106.66 1212.16 L2106.07 1212.16 L2105.49 1212.16 L2104.9 1212.16 L2104.31 1212.16 L2103.73 1212.16 L2103.14 1212.16 L2102.55 1212.16 L2101.97 1212.16 L2101.38 1212.16 L2100.8 1212.16 L2100.21 1212.16 L2099.62 1212.16 L2099.04 1212.16 L2098.45 1212.16 L2097.86 1212.16 L2097.28 1212.16 L2096.69 1212.16 L2096.1 1212.16 L2095.52 1212.16 L2094.93 1212.16 L2094.35 1212.16 L2093.76 1212.16 L2093.17 1212.16 L2092.59 1212.16 L2092 1212.16 L2091.41 1212.16 L2090.83 1212.16 L2090.24 1212.16 L2089.65 1212.16 L2089.07 1212.16 L2088.48 1212.16 L2087.89 1212.16 L2087.31 1212.16 L2086.72 1212.16 L2086.14 1212.16 L2085.55 1212.16 L2084.96 1212.16 L2084.38 1212.16 L2083.79 1212.16 L2083.2 1212.16 L2082.62 1212.16 L2082.03 1212.16 L2081.44 1212.16 L2080.86 1212.16 L2080.27 1212.16 L2079.68 1212.16 L2079.1 1212.16 L2078.51 1212.16 L2077.93 1212.16 L2077.34 1212.16 L2076.75 1212.16 L2076.17 1212.16 L2075.58 1212.16 L2074.99 1212.16 L2074.41 1212.16 L2073.82 1212.16 L2073.23 1212.16 L2072.65 1212.16 L2072.06 1212.16 L2071.48 1212.16 L2070.89 1212.16 L2070.3 1212.16 L2069.72 1212.16 L2069.13 1212.16 L2068.54 1212.16 L2067.96 1212.16 L2067.37 1212.16 L2066.78 1212.16 L2066.2 1212.16 L2065.61 1212.16 L2065.02 1212.16 L2064.44 1212.16 L2063.85 1212.16 L2063.27 1212.16 L2062.68 1212.16 L2062.09 1212.16 L2061.51 1212.16 L2060.92 1212.16 L2060.33 1212.16 L2059.75 1212.16 L2059.16 1212.16 L2058.57 1212.16 L2057.99 1212.16 L2057.4 1212.16 L2056.81 1212.16 L2056.23 1212.16 L2055.64 1212.16 L2055.06 1212.16 L2054.47 1212.16 L2053.88 1212.16 L2053.3 1212.16 L2052.71 1212.16 L2052.12 1212.16 L2051.54 1212.16 L2050.95 1212.16 L2050.36 1212.16 L2049.78 1212.16 L2049.19 1212.16 L2048.6 1212.16 L2048.02 1212.16 L2047.43 1212.16 L2046.85 1212.16 L2046.26 1212.16 L2045.67 1212.16 L2045.09 1212.16 L2044.5 1212.16 L2043.91 1212.16 L2043.33 1212.16 L2042.74 1212.16 L2042.15 1212.16 L2041.57 1212.16 L2040.98 1212.16 L2040.4 1212.16 L2039.81 1212.16 L2039.22 1212.16 L2038.64 1212.16 L2038.05 1212.16 L2037.46 1212.16 L2036.88 1212.16 L2036.29 1212.16 L2035.7 1212.16 L2035.12 1212.16 L2034.53 1212.16 L2033.94 1212.16 L2033.36 1212.16 L2032.77 1212.16 L2032.19 1212.16 L2031.6 1212.16 L2031.01 1212.16 L2030.43 1212.16 L2029.84 1212.16 L2029.25 1212.16 L2028.67 1212.16 L2028.08 1212.16 L2027.49 1212.16 L2026.91 1212.16 L2026.32 1212.16 L2025.73 1212.16 L2025.15 1212.16 L2024.56 1212.16 L2023.98 1212.16 L2023.39 1212.16 L2022.8 1212.16 L2022.22 1212.16 L2021.63 1212.16 L2021.04 1212.16 L2020.46 1212.16 L2019.87 1212.16 L2019.28 1212.16 L2018.7 1212.16 L2018.11 1212.16 L2017.53 1212.16 L2016.94 1212.16 L2016.35 1212.16 L2015.77 1212.16 L2015.18 1212.16 L2014.59 1212.16 L2014.01 1212.16 L2013.42 1212.16 L2012.83 1212.16 L2012.25 1212.16 L2011.66 1212.16 L2011.07 1212.16 L2010.49 1212.16 L2009.9 1212.16 L2009.32 1212.16 L2008.73 1212.16 L2008.14 1212.16 L2007.56 1212.16 L2006.97 1212.16 L2006.38 1212.16 L2005.8 1212.16 L2005.21 1212.16 L2004.62 1212.16 L2004.04 1212.16 L2003.45 1212.16 L2002.86 1212.16 L2002.28 1212.16 L2001.69 1212.16 L2001.11 1212.16 L2000.52 1212.16 L1999.93 1212.16 L1999.35 1212.16 L1998.76 1212.16 L1998.17 1212.16 L1997.59 1212.16 L1997 1212.16 L1996.41 1212.16 L1995.83 1212.16 L1995.24 1212.16 L1994.65 1212.16 L1994.07 1212.16 L1993.48 1212.16 L1992.9 1212.16 L1992.31 1212.16 L1991.72 1212.16 L1991.14 1212.16 L1990.55 1212.16 L1989.96 1212.16 L1989.38 1212.16 L1988.79 1212.16 L1988.2 1212.16 L1987.62 1212.16 L1987.03 1212.16 L1986.45 1212.16 L1985.86 1212.16 L1985.27 1212.16 L1984.69 1212.16 L1984.1 1212.16 L1983.51 1212.16 L1982.93 1212.16 L1982.34 1212.16 L1981.75 1212.16 L1981.17 1212.16 L1980.58 1212.16 L1979.99 1212.16 L1979.41 1212.16 L1978.82 1212.16 L1978.24 1212.16 L1977.65 1212.16 L1977.06 1212.16 L1976.48 1212.16 L1975.89 1212.16 L1975.3 1212.16 L1974.72 1212.16 L1974.13 1212.16 L1973.54 1212.16 L1972.96 1212.16 L1972.37 1212.16 L1971.78 1212.16 L1971.2 1212.16 L1970.61 1212.16 L1970.03 1212.16 L1969.44 1212.16 L1968.85 1212.16 L1968.27 1212.16 L1967.68 1212.16 L1967.09 1212.16 L1966.51 1212.16 L1965.92 1212.16 L1965.33 1212.16 L1964.75 1212.16 L1964.16 1212.16 L1963.58 1212.16 L1962.99 1212.16 L1962.4 1212.16 L1961.82 1212.16 L1961.23 1212.16 L1960.64 1212.16 L1960.06 1212.16 L1959.47 1212.16 L1958.88 1212.16 L1958.3 1212.16 L1957.71 1212.16 L1957.12 1212.16 L1956.54 1212.16 L1955.95 1212.16 L1955.37 1212.16 L1954.78 1212.16 L1954.19 1212.16 L1953.61 1212.16 L1953.02 1212.16 L1952.43 1212.16 L1951.85 1212.16 L1951.26 1212.16 L1950.67 1212.16 L1950.09 1212.16 L1949.5 1212.16 L1948.91 1212.16 L1948.33 1212.16 L1947.74 1212.16 L1947.16 1212.16 L1946.57 1212.16 L1945.98 1212.16 L1945.4 1212.16 L1944.81 1212.16 L1944.22 1212.16 L1943.64 1212.16 L1943.05 1212.16 L1942.46 1212.16 L1941.88 1212.16 L1941.29 1212.16 L1940.71 1212.16 L1940.12 1212.16 L1939.53 1212.16 L1938.95 1212.16 L1938.36 1212.16 L1937.77 1212.16 L1937.19 1212.16 L1936.6 1212.16 L1936.01 1212.16 L1935.43 1212.16 L1934.84 1212.16 L1934.25 1212.16 L1933.67 1212.16 L1933.08 1212.16 L1932.5 1212.16 L1931.91 1212.16 L1931.32 1212.16 L1930.74 1212.16 L1930.15 1212.16 L1929.56 1212.16 L1928.98 1212.16 L1928.39 1212.16 L1927.8 1212.16 L1927.22 1212.16 L1926.63 1212.16 L1926.04 1212.16 L1925.46 1212.16 L1924.87 1212.16 L1924.29 1212.16 L1923.7 1212.16 L1923.11 1212.16 L1922.53 1212.16 L1921.94 1212.16 L1921.35 1212.16 L1920.77 1212.16 L1920.18 1212.16 L1919.59 1212.16 L1919.01 1212.16 L1918.42 1212.16 L1917.83 1212.16 L1917.25 1212.16 L1916.66 1212.16 L1916.08 1212.16 L1915.49 1212.16 L1914.9 1212.16 L1914.32 1212.16 L1913.73 1212.16 L1913.14 1212.16 L1912.56 1212.16 L1911.97 1212.16 L1911.38 1212.16 L1910.8 1212.16 L1910.21 1212.16 L1909.63 1212.16 L1909.04 1212.16 L1908.45 1212.16 L1907.87 1212.16 L1907.28 1212.16 L1906.69 1212.16 L1906.11 1212.16 L1905.52 1212.16 L1904.93 1212.16 L1904.35 1212.16 L1903.76 1212.16 L1903.17 1212.16 L1902.59 1212.16 L1902 1212.16 L1901.42 1212.16 L1900.83 1212.16 L1900.24 1212.16 L1899.66 1212.16 L1899.07 1212.16 L1898.48 1212.16 L1897.9 1212.16 L1897.31 1212.16 L1896.72 1212.16 L1896.14 1212.16 L1895.55 1212.16 L1894.96 1212.16 L1894.38 1212.16 L1893.79 1212.16 L1893.21 1212.16 L1892.62 1212.16 L1892.03 1212.16 L1891.45 1212.16 L1890.86 1212.16 L1890.27 1212.16 L1889.69 1212.16 L1889.1 1212.16 L1888.51 1212.16 L1887.93 1212.16 L1887.34 1212.16 L1886.76 1212.16 L1886.17 1212.16 L1885.58 1212.16 L1885 1212.16 L1884.41 1212.16 L1883.82 1212.16 L1883.24 1212.16 L1882.65 1212.16 L1882.06 1212.16 L1881.48 1212.16 L1880.89 1212.16 L1880.3 1212.16 L1879.72 1212.16 L1879.13 1212.16 L1878.55 1212.16 L1877.96 1212.16 L1877.37 1212.16 L1876.79 1212.16 L1876.2 1212.16 L1875.61 1212.16 L1875.03 1212.16 L1874.44 1212.16 L1873.85 1212.16 L1873.27 1212.16 L1872.68 1212.16 L1872.09 1212.16 L1871.51 1212.16 L1870.92 1212.16 L1870.34 1212.16 L1869.75 1212.16 L1869.16 1212.16 L1868.58 1212.16 L1867.99 1212.16 L1867.4 1212.16 L1866.82 1212.16 L1866.23 1212.16 L1865.64 1212.16 L1865.06 1212.16 L1864.47 1212.16 L1863.88 1212.16 L1863.3 1212.16 L1862.71 1212.16 L1862.13 1212.16 L1861.54 1212.16 L1860.95 1212.16 L1860.37 1212.16 L1859.78 1212.16 L1859.19 1212.16 L1858.61 1212.16 L1858.02 1212.16 L1857.43 1212.16 L1856.85 1212.16 L1856.26 1212.16 L1855.68 1212.16 L1855.09 1212.16 L1854.5 1212.16 L1853.92 1212.16 L1853.33 1212.16 L1852.74 1212.16 L1852.16 1212.16 L1851.57 1212.16 L1850.98 1212.16 L1850.4 1212.16 L1849.81 1212.16 L1849.22 1212.16 L1848.64 1212.16 L1848.05 1212.16 L1847.47 1212.16 L1846.88 1212.16 L1846.29 1212.16 L1845.71 1212.16 L1845.12 1212.16 L1844.53 1212.16 L1843.95 1212.16 L1843.36 1212.16 L1842.77 1212.16 L1842.19 1212.16 L1841.6 1212.16 L1841.01 1212.16 L1840.43 1212.16 L1839.84 1212.16 L1839.26 1212.16 L1838.67 1212.16 L1838.08 1212.16 L1837.5 1212.16 L1836.91 1212.16 L1836.32 1212.16 L1835.74 1212.16 L1835.15 1212.16 L1834.56 1212.16 L1833.98 1212.16 L1833.39 1212.16 L1832.81 1212.16 L1832.22 1212.16 L1831.63 1212.16 L1831.05 1212.16 L1830.46 1212.16 L1829.87 1212.16 L1829.29 1212.16 L1828.7 1212.16 L1828.11 1212.16 L1827.53 1212.16 L1826.94 1212.16 L1826.35 1212.16 L1825.77 1212.16 L1825.18 1212.16 L1824.6 1212.16 L1824.01 1212.16 L1823.42 1212.16 L1822.84 1212.16 L1822.25 1212.16 L1821.66 1212.16 L1821.08 1212.16 L1820.49 1212.16 L1819.9 1212.16 L1819.32 1212.16 L1818.73 1212.16 L1818.14 1212.16 L1817.56 1212.16 L1816.97 1212.16 L1816.39 1212.16 L1815.8 1212.16 L1815.21 1212.16 L1814.63 1212.16 L1814.04 1212.16 L1813.45 1212.16 L1812.87 1212.16 L1812.28 1212.16 L1811.69 1212.16 L1811.11 1212.16 L1810.52 1212.16 L1809.94 1212.16 L1809.35 1212.16 L1808.76 1212.16 L1808.18 1212.16 L1807.59 1212.16 L1807 1212.16 L1806.42 1212.16 L1805.83 1212.16 L1805.24 1212.16 L1804.66 1212.16 L1804.07 1212.16 L1803.48 1212.16 L1802.9 1212.16 L1802.31 1212.16 L1801.73 1212.16 L1801.14 1212.16 L1800.55 1212.16 L1799.97 1212.16 L1799.38 1212.16 L1798.79 1212.16 L1798.21 1212.16 L1797.62 1212.16 L1797.03 1212.16 L1796.45 1212.16 L1795.86 1212.16 L1795.27 1212.16 L1794.69 1212.16 L1794.1 1212.16 L1793.52 1212.16 L1792.93 1212.16 L1792.34 1212.16 L1791.76 1212.16 L1791.17 1212.16 L1790.58 1212.16 L1790 1212.16 L1789.41 1212.16 L1788.82 1212.16 L1788.24 1212.16 L1787.65 1212.16 L1787.06 1212.16 L1786.48 1212.16 L1785.89 1212.16 L1785.31 1212.16 L1784.72 1212.16 L1784.13 1212.16 L1783.55 1212.16 L1782.96 1212.16 L1782.37 1212.16 L1781.79 1212.16 L1781.2 1212.16 L1780.61 1212.16 L1780.03 1212.16 L1779.44 1212.16 L1778.86 1212.16 L1778.27 1212.16 L1777.68 1212.16 L1777.1 1212.16 L1776.51 1212.16 L1775.92 1212.16 L1775.34 1212.16 L1774.75 1212.16 L1774.16 1212.16 L1773.58 1212.16 L1772.99 1212.16 L1772.4 1212.16 L1771.82 1212.16 L1771.23 1212.16 L1770.65 1212.16 L1770.06 1212.16 L1769.47 1212.16 L1768.89 1212.16 L1768.3 1212.16 L1767.71 1212.16 L1767.13 1212.16 L1766.54 1212.16 L1765.95 1212.16 L1765.37 1212.16 L1764.78 1212.16 L1764.19 1212.16 L1763.61 1212.16 L1763.02 1212.16 L1762.44 1212.16 L1761.85 1212.16 L1761.26 1212.16 L1760.68 1212.16 L1760.09 1212.16 L1759.5 1212.16 L1758.92 1212.16 L1758.33 1212.16 L1757.74 1212.16 L1757.16 1212.16 L1756.57 1212.16 L1755.99 1212.16 L1755.4 1212.16 L1754.81 1212.16 L1754.23 1212.16 L1753.64 1212.16 L1753.05 1212.16 L1752.47 1212.16 L1751.88 1212.16 L1751.29 1212.16 L1750.71 1212.16 L1750.12 1212.16 L1749.53 1212.16 L1748.95 1212.16 L1748.36 1212.16 L1747.78 1212.16 L1747.19 1212.16 L1746.6 1212.16 L1746.02 1212.16 L1745.43 1212.16 L1744.84 1212.16 L1744.26 1212.16 L1743.67 1212.16 L1743.08 1212.16 L1742.5 1212.16 L1741.91 1212.16 L1741.32 1212.16 L1740.74 1212.16 L1740.15 1212.16 L1739.57 1212.16 L1738.98 1212.16 L1738.39 1212.16 L1737.81 1212.16 L1737.22 1212.16 L1736.63 1212.16 L1736.05 1212.16 L1735.46 1212.16 L1734.87 1212.16 L1734.29 1212.16 L1733.7 1212.16 L1733.11 1212.16 L1732.53 1212.16 L1731.94 1212.16 L1731.36 1212.16 L1730.77 1212.16 L1730.18 1212.16 L1729.6 1212.16 L1729.01 1212.16 L1728.42 1212.16 L1727.84 1212.16 L1727.25 1212.16 L1726.66 1212.16 L1726.08 1212.16 L1725.49 1212.16 L1724.91 1212.16 L1724.32 1212.16 L1723.73 1212.16 L1723.15 1212.16 L1722.56 1212.16 L1721.97 1212.16 L1721.39 1212.16 L1720.8 1212.16 L1720.21 1212.16 L1719.63 1212.16 L1719.04 1212.16 L1718.45 1212.16 L1717.87 1212.16 L1717.28 1212.16 L1716.7 1212.16 L1716.11 1212.16 L1715.52 1212.16 L1714.94 1212.16 L1714.35 1212.16 L1713.76 1212.16 L1713.18 1212.16 L1712.59 1212.16 L1712 1212.16 L1711.42 1212.16 L1710.83 1212.16 L1710.24 1212.16 L1709.66 1212.16 L1709.07 1212.16 L1708.49 1212.16 L1707.9 1212.16 L1707.31 1212.16 L1706.73 1212.16 L1706.14 1212.16 L1705.55 1212.16 L1704.97 1212.16 L1704.38 1212.16 L1703.79 1212.16 L1703.21 1212.16 L1702.62 1212.16 L1702.04 1212.16 L1701.45 1212.16 L1700.86 1212.16 L1700.28 1212.16 L1699.69 1212.16 L1699.1 1212.16 L1698.52 1212.16 L1697.93 1212.16 L1697.34 1212.16 L1696.76 1212.16 L1696.17 1212.16 L1695.58 1212.16 L1695 1212.16 L1694.41 1212.16 L1693.83 1212.16 L1693.24 1212.16 L1692.65 1212.16 L1692.07 1212.16 L1691.48 1212.16 L1690.89 1212.16 L1690.31 1212.16 L1689.72 1212.16 L1689.13 1212.16 L1688.55 1212.16 L1687.96 1212.16 L1687.37 1212.16 L1686.79 1212.16 L1686.2 1212.16 L1685.62 1212.16 L1685.03 1212.16 L1684.44 1212.16 L1683.86 1212.16 L1683.27 1212.16 L1682.68 1212.16 L1682.1 1212.16 L1681.51 1212.16 L1680.92 1212.16 L1680.34 1212.16 L1679.75 1212.16 L1679.17 1212.16 L1678.58 1212.16 L1677.99 1212.16 L1677.41 1212.16 L1676.82 1212.16 L1676.23 1212.16 L1675.65 1212.16 L1675.06 1212.16 L1674.47 1212.16 L1673.89 1212.16 L1673.3 1212.16 L1672.71 1212.16 L1672.13 1212.16 L1671.54 1212.16 L1670.96 1212.16 L1670.37 1212.16 L1669.78 1212.16 L1669.2 1212.16 L1668.61 1212.16 L1668.02 1212.16 L1667.44 1212.16 L1666.85 1212.16 L1666.26 1212.16 L1665.68 1212.16 L1665.09 1212.16 L1664.5 1212.16 L1663.92 1212.16 L1663.33 1212.16 L1662.75 1212.16 L1662.16 1212.16 L1661.57 1212.16 L1660.99 1212.16 L1660.4 1212.16 L1659.81 1212.16 L1659.23 1212.16 L1658.64 1212.16 L1658.05 1212.16 L1657.47 1212.16 L1656.88 1212.16 L1656.29 1212.16 L1655.71 1212.16 L1655.12 1212.16 L1654.54 1212.16 L1653.95 1212.16 L1653.36 1212.16 L1652.78 1212.16 L1652.19 1212.16 L1651.6 1212.16 L1651.02 1212.16 L1650.43 1212.16 L1649.84 1212.16 L1649.26 1212.16 L1648.67 1212.16 L1648.09 1212.16 L1647.5 1212.16 L1646.91 1212.16 L1646.33 1212.16 L1645.74 1212.16 L1645.15 1212.16 L1644.57 1212.16 L1643.98 1212.16 L1643.39 1212.16 L1642.81 1212.16 L1642.22 1212.16 L1641.63 1212.16 L1641.05 1212.16 L1640.46 1212.16 L1639.88 1212.16 L1639.29 1212.16 L1638.7 1212.16 L1638.12 1212.16 L1637.53 1212.16 L1636.94 1212.16 L1636.36 1212.16 L1635.77 1212.16 L1635.18 1212.16 L1634.6 1212.16 L1634.01 1212.16 L1633.42 1212.16 L1632.84 1212.16 L1632.25 1212.16 L1631.67 1212.16 L1631.08 1212.16 L1630.49 1212.16 L1629.91 1212.16 L1629.32 1212.16 L1628.73 1212.16 L1628.15 1212.16 L1627.56 1212.16 L1626.97 1212.16 L1626.39 1212.16 L1625.8 1212.16 L1625.22 1212.16 L1624.63 1212.16 L1624.04 1212.16 L1623.46 1212.16 L1622.87 1212.16 L1622.28 1212.16 L1621.7 1212.16 L1621.11 1212.16 L1620.52 1212.16 L1619.94 1212.16 L1619.35 1212.16 L1618.76 1212.16 L1618.18 1212.16 L1617.59 1212.16 L1617.01 1212.16 L1616.42 1212.16 L1615.83 1212.16 L1615.25 1212.16 L1614.66 1212.16 L1614.07 1212.16 L1613.49 1212.16 L1612.9 1212.16 L1612.31 1212.16 L1611.73 1212.16 L1611.14 1212.16 L1610.55 1212.16 L1609.97 1212.16 L1609.38 1212.16 L1608.8 1212.16 L1608.21 1212.16 L1607.62 1212.16 L1607.04 1212.16 L1606.45 1212.16 L1605.86 1212.16 L1605.28 1212.16 L1604.69 1212.16 L1604.1 1212.16 L1603.52 1212.16 L1602.93 1212.16 L1602.34 1212.16 L1601.76 1212.16 L1601.17 1212.16 L1600.59 1212.16 L1600 1212.16 L1599.41 1212.16 L1598.83 1212.16 L1598.24 1212.16 L1597.65 1212.16 L1597.07 1212.16 L1596.48 1212.16 L1595.89 1212.16 L1595.31 1212.16 L1594.72 1212.16 L1594.14 1212.16 L1593.55 1212.16 L1592.96 1212.16 L1592.38 1212.16 L1591.79 1212.16 L1591.2 1212.16 L1590.62 1212.16 L1590.03 1212.16 L1589.44 1212.16 L1588.86 1212.16 L1588.27 1212.16 L1587.68 1212.16 L1587.1 1212.16 L1586.51 1212.16 L1585.93 1212.16 L1585.34 1212.16 L1584.75 1212.16 L1584.17 1212.16 L1583.58 1212.16 L1582.99 1212.16 L1582.41 1212.16 L1581.82 1212.16 L1581.23 1212.16 L1580.65 1212.16 L1580.06 1212.16 L1579.47 1212.16 L1578.89 1212.16 L1578.3 1212.16 L1577.72 1212.16 L1577.13 1212.16 L1576.54 1212.16 L1575.96 1212.16 L1575.37 1212.16 L1574.78 1212.16 L1574.2 1212.16 L1573.61 1212.16 L1573.02 1212.16 L1572.44 1212.16 L1571.85 1212.16 L1571.27 1212.16 L1570.68 1212.16 L1570.09 1212.16 L1569.51 1212.16 L1568.92 1212.16 L1568.33 1212.16 L1567.75 1212.16 L1567.16 1212.16 L1566.57 1212.16 L1565.99 1212.16 L1565.4 1212.16 L1564.81 1212.16 L1564.23 1212.16 L1563.64 1212.16 L1563.06 1212.16 L1562.47 1212.16 L1561.88 1212.16 L1561.3 1212.16 L1560.71 1212.16 L1560.12 1212.16 L1559.54 1212.16 L1558.95 1212.16 L1558.36 1212.16 L1557.78 1212.16 L1557.19 1212.16 L1556.6 1212.16 L1556.02 1212.16 L1555.43 1212.16 L1554.85 1212.16 L1554.26 1212.16 L1553.67 1212.16 L1553.09 1212.16 L1552.5 1212.16 L1551.91 1212.16 L1551.33 1212.16 L1550.74 1212.16 L1550.15 1212.16 L1549.57 1212.16 L1548.98 1212.16 L1548.4 1212.16 L1547.81 1212.16 L1547.22 1212.16 L1546.64 1212.16 L1546.05 1212.16 L1545.46 1212.16 L1544.88 1212.16 L1544.29 1212.16 L1543.7 1212.16 L1543.12 1212.16 L1542.53 1212.16 L1541.94 1212.16 L1541.36 1212.16 L1540.77 1212.16 L1540.19 1212.16 L1539.6 1212.16 L1539.01 1212.16 L1538.43 1212.16 L1537.84 1212.16 L1537.25 1212.16 L1536.67 1212.16 L1536.08 1212.16 L1535.49 1212.16 L1534.91 1212.16 L1534.32 1212.16 L1533.73 1212.16 L1533.15 1212.16 L1532.56 1212.16 L1531.98 1212.16 L1531.39 1212.16 L1530.8 1212.16 L1530.22 1212.16 L1529.63 1212.16 L1529.04 1212.16 L1528.46 1212.16 L1527.87 1212.16 L1527.28 1212.16 L1526.7 1212.16 L1526.11 1212.16 L1525.52 1212.16 L1524.94 1212.16 L1524.35 1212.16 L1523.77 1212.16 L1523.18 1212.16 L1522.59 1212.16 L1522.01 1212.16 L1521.42 1212.16 L1520.83 1212.16 L1520.25 1212.16 L1519.66 1212.16 L1519.07 1212.16 L1518.49 1212.16 L1517.9 1212.16 L1517.32 1212.16 L1516.73 1212.16 L1516.14 1212.16 L1515.56 1212.16 L1514.97 1212.16 L1514.38 1212.16 L1513.8 1212.16 L1513.21 1212.16 L1512.62 1212.16 L1512.04 1212.16 L1511.45 1212.16 L1510.86 1212.16 L1510.28 1212.16 L1509.69 1212.16 L1509.11 1212.16 L1508.52 1212.16 L1507.93 1212.16 L1507.35 1212.16 L1506.76 1212.16 L1506.17 1212.16 L1505.59 1212.16 L1505 1212.16 L1504.41 1212.16 L1503.83 1212.16 L1503.24 1212.16 L1502.65 1212.16 L1502.07 1212.16 L1501.48 1212.16 L1500.9 1212.16 L1500.31 1212.16 L1499.72 1212.16 L1499.14 1212.16 L1498.55 1212.16 L1497.96 1212.16 L1497.38 1212.16 L1496.79 1212.16 L1496.2 1212.16 L1495.62 1212.16 L1495.03 1212.16 L1494.45 1212.16 L1493.86 1212.16 L1493.27 1212.16 L1492.69 1212.16 L1492.1 1212.16 L1491.51 1212.16 L1490.93 1212.16 L1490.34 1212.16 L1489.75 1212.16 L1489.17 1212.16 L1488.58 1212.16 L1487.99 1212.16 L1487.41 1212.16 L1486.82 1212.16 L1486.24 1212.16 L1485.65 1212.16 L1485.06 1212.16 L1484.48 1212.16 L1483.89 1212.16 L1483.3 1212.16 L1482.72 1212.16 L1482.13 1212.16 L1481.54 1212.16 L1480.96 1212.16 L1480.37 1212.16 L1479.78 1212.16 L1479.2 1212.16 L1478.61 1212.16 L1478.03 1212.16 L1477.44 1212.16 L1476.85 1212.16 L1476.27 1212.16 L1475.68 1212.16 L1475.09 1212.16 L1474.51 1212.16 L1473.92 1212.16 L1473.33 1212.16 L1472.75 1212.16 L1472.16 1212.16 L1471.57 1212.16 L1470.99 1212.16 L1470.4 1212.16 L1469.82 1212.16 L1469.23 1212.16 L1468.64 1212.16 L1468.06 1212.16 L1467.47 1212.16 L1466.88 1212.16 L1466.3 1212.16 L1465.71 1212.16 L1465.12 1212.16 L1464.54 1212.16 L1463.95 1212.16 L1463.37 1212.16 L1462.78 1212.16 L1462.19 1212.16 L1461.61 1212.16 L1461.02 1212.16 L1460.43 1212.16 L1459.85 1212.16 L1459.26 1212.16 L1458.67 1212.16 L1458.09 1212.16 L1457.5 1212.16 L1456.91 1212.16 L1456.33 1212.16 L1455.74 1212.16 L1455.16 1212.16 L1454.57 1212.16 L1453.98 1212.16 L1453.4 1212.16 L1452.81 1212.16 L1452.22 1212.16 L1451.64 1212.16 L1451.05 1212.16 L1450.46 1212.16 L1449.88 1212.16 L1449.29 1212.16 L1448.7 1212.16 L1448.12 1212.16 L1447.53 1212.16 L1446.95 1212.16 L1446.36 1212.16 L1445.77 1212.16 L1445.19 1212.16 L1444.6 1212.16 L1444.01 1212.16 L1443.43 1212.16 L1442.84 1212.16 L1442.25 1212.16 L1441.67 1212.16 L1441.08 1212.16 L1440.5 1212.16 L1439.91 1212.16 L1439.32 1212.16 L1438.74 1212.16 L1438.15 1212.16 L1437.56 1212.16 L1436.98 1212.16 L1436.39 1212.16 L1435.8 1212.16 L1435.22 1212.16 L1434.63 1212.16 L1434.04 1212.16 L1433.46 1212.16 L1432.87 1212.16 L1432.29 1212.16 L1431.7 1212.16 L1431.11 1212.16 L1430.53 1212.16 L1429.94 1212.16 L1429.35 1212.16 L1428.77 1212.16 L1428.18 1212.16 L1427.59 1212.16 L1427.01 1212.16 L1426.42 1212.16 L1425.83 1212.16 L1425.25 1212.16 L1424.66 1212.16 L1424.08 1212.16 L1423.49 1212.16 L1422.9 1212.16 L1422.32 1212.16 L1421.73 1212.16 L1421.14 1212.16 L1420.56 1212.16 L1419.97 1212.16 L1419.38 1212.16 L1418.8 1212.16 L1418.21 1212.16 L1417.63 1212.16 L1417.04 1212.16 L1416.45 1212.16 L1415.87 1212.16 L1415.28 1212.16 L1414.69 1212.16 L1414.11 1212.16 L1413.52 1212.16 L1412.93 1212.16 L1412.35 1212.16 L1411.76 1212.16 L1411.17 1212.16 L1410.59 1212.16 L1410 1212.16 L1409.42 1212.16 L1408.83 1212.16 L1408.24 1212.16 L1407.66 1212.16 L1407.07 1212.16 L1406.48 1212.16 L1405.9 1212.16 L1405.31 1212.16 L1404.72 1212.16 L1404.14 1212.16 L1403.55 1212.16 L1402.96 1212.16 L1402.38 1212.16 L1401.79 1212.16 L1401.21 1212.16 L1400.62 1212.16 L1400.03 1212.16 L1399.45 1212.16 L1398.86 1212.16 L1398.27 1212.16 L1397.69 1212.16 L1397.1 1212.16 L1396.51 1212.16 L1395.93 1212.16 L1395.34 1212.16 L1394.75 1212.16 L1394.17 1212.16 L1393.58 1212.16 L1393 1212.16 L1392.41 1212.16 L1391.82 1212.16 L1391.24 1212.16 L1390.65 1212.16 L1390.06 1212.16 L1389.48 1212.16 L1388.89 1212.16 L1388.3 1212.16 L1387.72 1212.16 L1387.13 1212.16 L1386.55 1212.16 L1385.96 1212.16 L1385.37 1212.16 L1384.79 1212.16 L1384.2 1212.16 L1383.61 1212.16 L1383.03 1212.16 L1382.44 1212.16 L1381.85 1212.16 L1381.27 1212.16 L1380.68 1212.16 L1380.09 1212.16 L1379.51 1212.16 L1378.92 1212.16 L1378.34 1212.16 L1377.75 1212.16 L1377.16 1212.16 L1376.58 1212.16 L1375.99 1212.16 L1375.4 1212.16 L1374.82 1212.16 L1374.23 1212.16 L1373.64 1212.16 L1373.06 1212.16 L1372.47 1212.16 L1371.88 1212.16 L1371.3 1212.16 L1370.71 1212.16 L1370.13 1212.16 L1369.54 1212.16 L1368.95 1212.16 L1368.37 1212.16 L1367.78 1212.16 L1367.19 1212.16 L1366.61 1212.16 L1366.02 1212.16 L1365.43 1212.16 L1364.85 1212.16 L1364.26 1212.16 L1363.68 1212.16 L1363.09 1212.16 L1362.5 1212.16 L1361.92 1212.16 L1361.33 1212.16 L1360.74 1212.16 L1360.16 1212.16 L1359.57 1212.16 L1358.98 1212.16 L1358.4 1212.16 L1357.81 1212.16 L1357.22 1212.16 L1356.64 1212.16 L1356.05 1212.16 L1355.47 1212.16 L1354.88 1212.16 L1354.29 1212.16 L1353.71 1212.16 L1353.12 1212.16 L1352.53 1212.16 L1351.95 1212.16 L1351.36 1212.16 L1350.77 1212.16 L1350.19 1212.16 L1349.6 1212.16 L1349.01 1212.16 L1348.43 1212.16 L1347.84 1212.16 L1347.26 1212.16 L1346.67 1212.16 L1346.08 1212.16 L1345.5 1212.16 L1344.91 1212.16 L1344.32 1212.16 L1343.74 1212.16 L1343.15 1212.16 L1342.56 1212.16 L1341.98 1212.16 L1341.39 1212.16 L1340.8 1212.16 L1340.22 1212.16 L1339.63 1212.16 L1339.05 1212.16 L1338.46 1212.16 L1337.87 1212.16 L1337.29 1212.16 L1336.7 1212.16 L1336.11 1212.16 L1335.53 1212.16 L1334.94 1212.16 L1334.35 1212.16 L1333.77 1212.16 L1333.18 1212.16 L1332.6 1212.16 L1332.01 1212.16 L1331.42 1212.16 L1330.84 1212.16 L1330.25 1212.16 L1329.66 1212.16 L1329.08 1212.16 L1328.49 1212.16 L1327.9 1212.16 L1327.32 1212.16 L1326.73 1212.16 L1326.14 1212.16 L1325.56 1212.16 L1324.97 1212.16 L1324.39 1212.16 L1323.8 1212.16 L1323.21 1212.16 L1322.63 1212.16 L1322.04 1212.16 L1321.45 1212.16 L1320.87 1212.16 L1320.28 1212.16 L1319.69 1212.16 L1319.11 1212.16 L1318.52 1212.16 L1317.93 1212.16 L1317.35 1212.16 L1316.76 1212.16 L1316.18 1212.16 L1315.59 1212.16 L1315 1212.16 L1314.42 1212.16 L1313.83 1212.16 L1313.24 1212.16 L1312.66 1212.16 L1312.07 1212.16 L1311.48 1212.16 L1310.9 1212.16 L1310.31 1212.16 L1309.73 1212.16 L1309.14 1212.16 L1308.55 1212.16 L1307.97 1212.16 L1307.38 1212.16 L1306.79 1212.16 L1306.21 1212.16 L1305.62 1212.16 L1305.03 1212.16 L1304.45 1212.16 L1303.86 1212.16 L1303.27 1212.16 L1302.69 1212.16 L1302.1 1212.16 L1301.52 1212.16 L1300.93 1212.16 L1300.34 1212.16 L1299.76 1212.16 L1299.17 1212.16 L1298.58 1212.16 L1298 1212.16 L1297.41 1212.16 L1296.82 1212.16 L1296.24 1212.16 L1295.65 1212.16 L1295.06 1212.16 L1294.48 1212.16 L1293.89 1212.16 L1293.31 1212.16 L1292.72 1212.16 L1292.13 1212.16 L1291.55 1212.16 L1290.96 1212.16 L1290.37 1212.16 L1289.79 1212.16 L1289.2 1212.16 L1288.61 1212.16 L1288.03 1212.16 L1287.44 1212.16 L1286.86 1212.16 L1286.27 1212.16 L1285.68 1212.16 L1285.1 1212.16 L1284.51 1212.16 L1283.92 1212.16 L1283.34 1212.16 L1282.75 1212.16 L1282.16 1212.16 L1281.58 1212.16 L1280.99 1212.16 L1280.4 1212.16 L1279.82 1212.16 L1279.23 1212.16 L1278.65 1212.16 L1278.06 1212.16 L1277.47 1212.16 L1276.89 1212.16 L1276.3 1212.16 L1275.71 1212.16 L1275.13 1212.16 L1274.54 1212.16 L1273.95 1212.16 L1273.37 1212.16 L1272.78 1212.16 L1272.19 1212.16 L1271.61 1212.16 L1271.02 1212.16 L1270.44 1212.16 L1269.85 1212.16 L1269.26 1212.16 L1268.68 1212.16 L1268.09 1212.16 L1267.5 1212.16 L1266.92 1212.16 L1266.33 1212.16 L1265.74 1212.16 L1265.16 1212.16 L1264.57 1212.16 L1263.98 1212.16 L1263.4 1212.16 L1262.81 1212.16 L1262.23 1212.16 L1261.64 1212.16 L1261.05 1212.16 L1260.47 1212.16 L1259.88 1212.16 L1259.29 1212.16 L1258.71 1212.16 L1258.12 1212.16 L1257.53 1212.16 L1256.95 1212.16 L1256.36 1212.16 L1255.78 1212.16 L1255.19 1212.16 L1254.6 1212.16 L1254.02 1212.16 L1253.43 1212.16 L1252.84 1212.16 L1252.26 1212.16 L1251.67 1212.16 L1251.08 1212.16 L1250.5 1212.16 L1249.91 1212.16 L1249.32 1212.16 L1248.74 1212.16 L1248.15 1212.16 L1247.57 1212.16 L1246.98 1212.16 L1246.39 1212.16 L1245.81 1212.16 L1245.22 1212.16 L1244.63 1212.16 L1244.05 1212.16 L1243.46 1212.16 L1242.87 1212.16 L1242.29 1212.16 L1241.7 1212.16 L1241.11 1212.16 L1240.53 1212.16 L1239.94 1212.16 L1239.36 1212.16 L1238.77 1212.16 L1238.18 1212.16 L1237.6 1212.16 L1237.01 1212.16 L1236.42 1212.16 L1235.84 1212.16 L1235.25 1212.16 L1234.66 1212.16 L1234.08 1212.16 L1233.49 1212.16 L1232.91 1212.16 L1232.32 1212.16 L1231.73 1212.16 L1231.15 1212.16 L1230.56 1212.16 L1229.97 1212.16 L1229.39 1212.16 L1228.8 1212.16 L1228.21 1212.16 L1227.63 1212.16 L1227.04 1212.16 L1226.45 1212.16 L1225.87 1212.16 L1225.28 1212.16 L1224.7 1212.16 L1224.11 1212.16 L1223.52 1212.16 L1222.94 1212.16 L1222.35 1212.16 L1221.76 1212.16 L1221.18 1212.16 L1220.59 1212.16 L1220 1212.16 L1219.42 1212.16 L1218.83 1212.16 L1218.24 1212.16 L1217.66 1212.16 L1217.07 1212.16 L1216.49 1212.16 L1215.9 1212.16 L1215.31 1212.16 L1214.73 1212.16 L1214.14 1212.16 L1213.55 1212.16 L1212.97 1212.16 L1212.38 1212.16 L1211.79 1212.16 L1211.21 1212.16 L1210.62 1212.16 L1210.03 1212.16 L1209.45 1212.16 L1208.86 1212.16 L1208.28 1212.16 L1207.69 1212.16 L1207.1 1212.16 L1206.52 1212.16 L1205.93 1212.16 L1205.34 1212.16 L1204.76 1212.16 L1204.17 1212.16 L1203.58 1212.16 L1203 1212.16 L1202.41 1212.16 L1201.83 1212.16 L1201.24 1212.16 L1200.65 1212.16 L1200.07 1212.16 L1199.48 1212.16 L1198.89 1212.16 L1198.31 1212.16 L1197.72 1212.16 L1197.13 1212.16 L1196.55 1212.16 L1195.96 1212.16 L1195.37 1212.16 L1194.79 1212.16 L1194.2 1212.16 L1193.62 1212.16 L1193.03 1212.16 L1192.44 1212.16 L1191.86 1212.16 L1191.27 1212.16 L1190.68 1212.16 L1190.1 1212.16 L1189.51 1212.16 L1188.92 1212.16 L1188.34 1212.16 L1187.75 1212.16 L1187.16 1212.16 L1186.58 1212.16 L1185.99 1212.16 L1185.41 1212.16 L1184.82 1212.16 L1184.23 1212.16 L1183.65 1212.16 L1183.06 1212.16 L1182.47 1212.16 L1181.89 1212.16 L1181.3 1212.16 L1180.71 1212.16 L1180.13 1212.16 L1179.54 1212.16 L1178.96 1212.16 L1178.37 1212.16 L1177.78 1212.16 L1177.2 1212.16 L1176.61 1212.16 L1176.02 1212.16 L1175.44 1212.16 L1174.85 1212.16 L1174.26 1212.16 L1173.68 1212.16 L1173.09 1212.16 L1172.5 1212.16 L1171.92 1212.16 L1171.33 1212.16 L1170.75 1212.16 L1170.16 1212.16 L1169.57 1212.16 L1168.99 1212.16 L1168.4 1212.16 L1167.81 1212.16 L1167.23 1212.16 L1166.64 1212.16 L1166.05 1212.16 L1165.47 1212.16 L1164.88 1212.16 L1164.29 1212.16 L1163.71 1212.16 L1163.12 1212.16 L1162.54 1212.16 L1161.95 1212.16 L1161.36 1212.16 L1160.78 1212.16 L1160.19 1212.16 L1159.6 1212.16 L1159.02 1212.16 L1158.43 1212.16 L1157.84 1212.16 L1157.26 1212.16 L1156.67 1212.16 L1156.09 1212.16 L1155.5 1212.16 L1154.91 1212.16 L1154.33 1212.16 L1153.74 1212.16 L1153.15 1212.16 L1152.57 1212.16 L1151.98 1212.16 L1151.39 1212.16 L1150.81 1212.16 L1150.22 1212.16 L1149.63 1212.16 L1149.05 1212.16 L1148.46 1212.16 L1147.88 1212.16 L1147.29 1212.16 L1146.7 1212.16 L1146.12 1212.16 L1145.53 1212.16 L1144.94 1212.16 L1144.36 1212.16 L1143.77 1212.16 L1143.18 1212.16 L1142.6 1212.16 L1142.01 1212.16 L1141.42 1212.16 L1140.84 1212.16 L1140.25 1212.16 L1139.67 1212.16 L1139.08 1212.16 L1138.49 1212.16 L1137.91 1212.16 L1137.32 1212.16 L1136.73 1212.16 L1136.15 1212.16 L1135.56 1212.16 L1134.97 1212.16 L1134.39 1212.16 L1133.8 1212.16 L1133.21 1212.16 L1132.63 1212.16 L1132.04 1212.16 L1131.46 1212.16 L1130.87 1212.16 L1130.28 1212.16 L1129.7 1212.16 L1129.11 1212.16 L1128.52 1212.16 L1127.94 1212.16 L1127.35 1212.16 L1126.76 1212.16 L1126.18 1212.16 L1125.59 1212.16 L1125.01 1212.16 L1124.42 1212.16 L1123.83 1212.16 L1123.25 1212.16 L1122.66 1212.16 L1122.07 1212.16 L1121.49 1212.16 L1120.9 1212.16 L1120.31 1212.16 L1119.73 1212.16 L1119.14 1212.16 L1118.55 1212.16 L1117.97 1212.16 L1117.38 1212.16 L1116.8 1212.16 L1116.21 1212.16 L1115.62 1212.16 L1115.04 1212.16 L1114.45 1212.16 L1113.86 1212.16 L1113.28 1212.16 L1112.69 1212.16 L1112.1 1212.16 L1111.52 1212.16 L1110.93 1212.16 L1110.34 1212.16 L1109.76 1212.16 L1109.17 1212.16 L1108.59 1212.16 L1108 1212.16 L1107.41 1212.16 L1106.83 1212.16 L1106.24 1212.16 L1105.65 1212.16 L1105.07 1212.16 L1104.48 1212.16 L1103.89 1212.16 L1103.31 1212.16 L1102.72 1212.16 L1102.14 1212.16 L1101.55 1212.16 L1100.96 1212.16 L1100.38 1212.16 L1099.79 1212.16 L1099.2 1212.16 L1098.62 1212.16 L1098.03 1212.16 L1097.44 1212.16 L1096.86 1212.16 L1096.27 1212.16 L1095.68 1212.16 L1095.1 1212.16 L1094.51 1212.16 L1093.93 1212.16 L1093.34 1212.16 L1092.75 1212.16 L1092.17 1212.16 L1091.58 1212.16 L1090.99 1212.16 L1090.41 1212.16 L1089.82 1212.16 L1089.23 1212.16 L1088.65 1212.16 L1088.06 1212.16 L1087.47 1212.16 L1086.89 1212.16 L1086.3 1212.16 L1085.72 1212.16 L1085.13 1212.16 L1084.54 1212.16 L1083.96 1212.16 L1083.37 1212.16 L1082.78 1212.16 L1082.2 1212.16 L1081.61 1212.16 L1081.02 1212.16 L1080.44 1212.16 L1079.85 1212.16 L1079.26 1212.16 L1078.68 1212.16 L1078.09 1212.16 L1077.51 1212.16 L1076.92 1212.16 L1076.33 1212.16 L1075.75 1212.16 L1075.16 1212.16 L1074.57 1212.16 L1073.99 1212.16 L1073.4 1212.16 L1072.81 1212.16 L1072.23 1212.16 L1071.64 1212.16 L1071.06 1212.16 L1070.47 1212.16 L1069.88 1212.16 L1069.3 1212.16 L1068.71 1212.16 L1068.12 1212.16 L1067.54 1212.16 L1066.95 1212.16 L1066.36 1212.16 L1065.78 1212.16 L1065.19 1212.16 L1064.6 1212.16 L1064.02 1212.16 L1063.43 1212.16 L1062.85 1212.16 L1062.26 1212.16 L1061.67 1212.16 L1061.09 1212.16 L1060.5 1212.16 L1059.91 1212.16 L1059.33 1212.16 L1058.74 1212.16 L1058.15 1212.16 L1057.57 1212.16 L1056.98 1212.16 L1056.39 1212.16 L1055.81 1212.16 L1055.22 1212.16 L1054.64 1212.16 L1054.05 1212.16 L1053.46 1212.16 L1052.88 1212.16 L1052.29 1212.16 L1051.7 1212.16 L1051.12 1212.16 L1050.53 1212.16 L1049.94 1212.16 L1049.36 1212.16 L1048.77 1212.16 L1048.19 1212.16 L1047.6 1212.16 L1047.01 1212.16 L1046.43 1212.16 L1045.84 1212.16 L1045.25 1212.16 L1044.67 1212.16 L1044.08 1212.16 L1043.49 1212.16 L1042.91 1212.16 L1042.32 1212.16 L1041.73 1212.16 L1041.15 1212.16 L1040.56 1212.16 L1039.98 1212.16 L1039.39 1212.16 L1038.8 1212.16 L1038.22 1212.16 L1037.63 1212.16 L1037.04 1212.16 L1036.46 1212.16 L1035.87 1212.16 L1035.28 1212.16 L1034.7 1212.16 L1034.11 1212.16 L1033.52 1212.16 L1032.94 1212.16 L1032.35 1212.16 L1031.77 1212.16 L1031.18 1212.16 L1030.59 1212.16 L1030.01 1212.16 L1029.42 1212.16 L1028.83 1212.16 L1028.25 1212.16 L1027.66 1212.16 L1027.07 1212.16 L1026.49 1212.16 L1025.9 1212.16 L1025.32 1212.16 L1024.73 1212.16 L1024.14 1212.16 L1023.56 1212.16 L1022.97 1212.16 L1022.38 1212.16 L1021.8 1212.16 L1021.21 1212.16 L1020.62 1212.16 L1020.04 1212.16 L1019.45 1212.16 L1018.86 1212.16 L1018.28 1212.16 L1017.69 1212.16 L1017.11 1212.16 L1016.52 1212.16 L1015.93 1212.16 L1015.35 1212.16 L1014.76 1212.16 L1014.17 1212.16 L1013.59 1212.16 L1013 1212.16 L1012.41 1212.16 L1011.83 1212.16 L1011.24 1212.16 L1010.65 1212.16 L1010.07 1212.16 L1009.48 1212.16 L1008.9 1212.16 L1008.31 1212.16 L1007.72 1212.16 L1007.14 1212.16 L1006.55 1212.16 L1005.96 1212.16 L1005.38 1212.16 L1004.79 1212.16 L1004.2 1212.16 L1003.62 1212.16 L1003.03 1212.16 L1002.44 1212.16 L1001.86 1212.16 L1001.27 1212.16 L1000.69 1212.16 L1000.1 1212.16 L999.513 1212.16 L998.926 1212.16 L998.34 1212.16 L997.754 1212.16 L997.167 1212.16 L996.581 1212.16 L995.994 1212.16 L995.408 1212.16 L994.822 1212.16 L994.235 1212.16 L993.649 1212.16 L993.062 1212.16 L992.476 1212.16 L991.889 1212.16 L991.303 1212.16 L990.717 1212.16 L990.13 1212.16 L989.544 1212.16 L988.957 1212.16 L988.371 1212.16 L987.785 1212.16 L987.198 1212.16 L986.612 1212.16 L986.025 1212.16  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip512)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1212.24 986.612,1212.24 987.198,1212.24 987.785,1212.24 988.371,1212.24 988.957,1212.24 989.544,1212.24 990.13,1212.24 990.717,1212.24 991.303,1212.24 991.889,1212.24 992.476,1212.24 993.062,1212.24 993.649,1212.24 994.235,1212.24 994.822,1212.24 995.408,1212.24 995.994,1212.24 996.581,1212.24 997.167,1212.24 997.754,1212.24 998.34,1212.24 998.926,1212.24 999.513,1212.24 1000.1,1212.24 1000.69,1212.24 1001.27,1212.24 1001.86,1212.24 1002.44,1212.24 1003.03,1212.24 1003.62,1212.24 1004.2,1212.24 1004.79,1212.24 1005.38,1212.24 1005.96,1212.24 1006.55,1212.24 1007.14,1212.24 1007.72,1212.24 1008.31,1212.24 1008.9,1212.24 1009.48,1212.24 1010.07,1212.24 1010.65,1212.24 1011.24,1212.24 1011.83,1212.24 1012.41,1212.24 1013,1212.24 1013.59,1212.24 1014.17,1212.24 1014.76,1212.24 1015.35,1212.24 1015.93,1212.24 1016.52,1212.24 1017.11,1212.24 1017.69,1212.24 1018.28,1212.24 1018.86,1212.24 1019.45,1212.24 1020.04,1212.24 1020.62,1212.24 1021.21,1212.24 1021.8,1212.24 1022.38,1212.24 1022.97,1212.24 1023.56,1212.24 1024.14,1212.24 1024.73,1212.24 1025.32,1212.24 1025.9,1212.24 1026.49,1212.24 1027.07,1212.24 1027.66,1212.24 1028.25,1212.24 1028.83,1212.24 1029.42,1212.24 1030.01,1212.24 1030.59,1212.24 1031.18,1212.24 1031.77,1212.24 1032.35,1212.24 1032.94,1212.24 1033.52,1212.24 1034.11,1212.24 1034.7,1212.24 1035.28,1212.24 1035.87,1212.24 1036.46,1212.24 1037.04,1212.24 1037.63,1212.24 1038.22,1212.24 1038.8,1212.24 1039.39,1212.24 1039.98,1212.24 1040.56,1212.24 1041.15,1212.24 1041.73,1212.24 1042.32,1212.24 1042.91,1212.24 1043.49,1212.24 1044.08,1212.24 1044.67,1212.24 1045.25,1212.24 1045.84,1212.24 1046.43,1212.24 1047.01,1212.24 1047.6,1212.24 1048.19,1212.24 1048.77,1212.24 1049.36,1212.24 1049.94,1212.24 1050.53,1212.24 1051.12,1212.24 1051.7,1212.24 1052.29,1212.24 1052.88,1212.24 1053.46,1212.24 1054.05,1212.24 1054.64,1212.24 1055.22,1212.24 1055.81,1212.24 1056.39,1212.24 1056.98,1212.24 1057.57,1212.24 1058.15,1212.24 1058.74,1212.24 1059.33,1212.24 1059.91,1212.24 1060.5,1212.24 1061.09,1212.24 1061.67,1212.24 1062.26,1212.24 1062.85,1212.24 1063.43,1212.24 1064.02,1212.24 1064.6,1212.24 1065.19,1212.24 1065.78,1212.24 1066.36,1212.24 1066.95,1212.24 1067.54,1212.24 1068.12,1212.24 1068.71,1212.24 1069.3,1212.24 1069.88,1212.24 1070.47,1212.24 1071.06,1212.24 1071.64,1212.24 1072.23,1212.24 1072.81,1212.24 1073.4,1212.24 1073.99,1212.24 1074.57,1212.24 1075.16,1212.24 1075.75,1212.24 1076.33,1212.24 1076.92,1212.24 1077.51,1212.24 1078.09,1212.24 1078.68,1212.24 1079.26,1212.24 1079.85,1212.24 1080.44,1212.24 1081.02,1212.24 1081.61,1212.24 1082.2,1212.24 1082.78,1212.24 1083.37,1212.24 1083.96,1212.24 1084.54,1212.24 1085.13,1212.24 1085.72,1212.24 1086.3,1212.24 1086.89,1212.24 1087.47,1212.24 1088.06,1212.24 1088.65,1212.24 1089.23,1212.24 1089.82,1212.24 1090.41,1212.24 1090.99,1212.24 1091.58,1212.24 1092.17,1212.24 1092.75,1212.24 1093.34,1212.24 1093.93,1212.24 1094.51,1212.24 1095.1,1212.24 1095.68,1212.24 1096.27,1212.24 1096.86,1212.24 1097.44,1212.24 1098.03,1212.24 1098.62,1212.24 1099.2,1212.24 1099.79,1212.24 1100.38,1212.24 1100.96,1212.24 1101.55,1212.24 1102.14,1212.24 1102.72,1212.24 1103.31,1212.24 1103.89,1212.24 1104.48,1212.24 1105.07,1212.24 1105.65,1212.24 1106.24,1212.24 1106.83,1212.24 1107.41,1212.24 1108,1212.24 1108.59,1212.24 1109.17,1212.24 1109.76,1212.24 1110.34,1212.24 1110.93,1212.24 1111.52,1212.24 1112.1,1212.24 1112.69,1212.24 1113.28,1212.24 1113.86,1212.24 1114.45,1212.24 1115.04,1212.24 1115.62,1212.24 1116.21,1212.24 1116.8,1212.24 1117.38,1212.24 1117.97,1212.24 1118.55,1212.24 1119.14,1212.24 1119.73,1212.24 1120.31,1212.24 1120.9,1212.24 1121.49,1212.24 1122.07,1212.24 1122.66,1212.24 1123.25,1212.24 1123.83,1212.24 1124.42,1212.24 1125.01,1212.24 1125.59,1212.24 1126.18,1212.24 1126.76,1212.24 1127.35,1212.24 1127.94,1212.24 1128.52,1212.24 1129.11,1212.24 1129.7,1212.24 1130.28,1212.24 1130.87,1212.24 1131.46,1212.24 1132.04,1212.24 1132.63,1212.24 1133.21,1212.24 1133.8,1212.24 1134.39,1212.24 1134.97,1212.24 1135.56,1212.24 1136.15,1212.24 1136.73,1212.24 1137.32,1212.24 1137.91,1212.24 1138.49,1212.24 1139.08,1212.24 1139.67,1212.24 1140.25,1212.24 1140.84,1212.24 1141.42,1212.24 1142.01,1212.24 1142.6,1212.24 1143.18,1212.24 1143.77,1212.24 1144.36,1212.24 1144.94,1212.24 1145.53,1212.24 1146.12,1212.24 1146.7,1212.24 1147.29,1212.24 1147.88,1212.24 1148.46,1212.24 1149.05,1212.24 1149.63,1212.24 1150.22,1212.24 1150.81,1212.24 1151.39,1212.24 1151.98,1212.24 1152.57,1212.24 1153.15,1212.24 1153.74,1212.24 1154.33,1212.24 1154.91,1212.24 1155.5,1212.24 1156.09,1212.24 1156.67,1212.24 1157.26,1212.24 1157.84,1212.24 1158.43,1212.24 1159.02,1212.24 1159.6,1212.24 1160.19,1212.24 1160.78,1212.24 1161.36,1212.24 1161.95,1212.24 1162.54,1212.24 1163.12,1212.24 1163.71,1212.24 1164.29,1212.24 1164.88,1212.24 1165.47,1212.24 1166.05,1212.24 1166.64,1212.24 1167.23,1212.24 1167.81,1212.24 1168.4,1212.24 1168.99,1212.24 1169.57,1212.24 1170.16,1212.24 1170.75,1212.24 1171.33,1212.24 1171.92,1212.24 1172.5,1212.24 1173.09,1212.24 1173.68,1212.24 1174.26,1212.24 1174.85,1212.24 1175.44,1212.24 1176.02,1212.24 1176.61,1212.24 1177.2,1212.24 1177.78,1212.24 1178.37,1212.24 1178.96,1212.24 1179.54,1212.24 1180.13,1212.24 1180.71,1212.24 1181.3,1212.24 1181.89,1212.24 1182.47,1212.24 1183.06,1212.24 1183.65,1212.24 1184.23,1212.24 1184.82,1212.24 1185.41,1212.24 1185.99,1212.24 1186.58,1212.24 1187.16,1212.24 1187.75,1212.24 1188.34,1212.24 1188.92,1212.24 1189.51,1212.24 1190.1,1212.24 1190.68,1212.24 1191.27,1212.24 1191.86,1212.24 1192.44,1212.24 1193.03,1212.24 1193.62,1212.24 1194.2,1212.24 1194.79,1212.24 1195.37,1212.24 1195.96,1212.24 1196.55,1212.24 1197.13,1212.24 1197.72,1212.24 1198.31,1212.24 1198.89,1212.24 1199.48,1212.24 1200.07,1212.24 1200.65,1212.24 1201.24,1212.24 1201.83,1212.24 1202.41,1212.24 1203,1212.24 1203.58,1212.24 1204.17,1212.24 1204.76,1212.24 1205.34,1212.24 1205.93,1212.24 1206.52,1212.24 1207.1,1212.24 1207.69,1212.24 1208.28,1212.24 1208.86,1212.24 1209.45,1212.24 1210.03,1212.24 1210.62,1212.24 1211.21,1212.24 1211.79,1212.24 1212.38,1212.24 1212.97,1212.24 1213.55,1212.24 1214.14,1212.24 1214.73,1212.24 1215.31,1212.24 1215.9,1212.24 1216.49,1212.24 1217.07,1212.24 1217.66,1212.24 1218.24,1212.24 1218.83,1212.24 1219.42,1212.24 1220,1212.24 1220.59,1212.24 1221.18,1212.24 1221.76,1212.24 1222.35,1212.24 1222.94,1212.24 1223.52,1212.24 1224.11,1212.24 1224.7,1212.24 1225.28,1212.24 1225.87,1212.24 1226.45,1212.24 1227.04,1212.24 1227.63,1212.24 1228.21,1212.24 1228.8,1212.24 1229.39,1212.24 1229.97,1212.24 1230.56,1212.24 1231.15,1212.24 1231.73,1212.24 1232.32,1212.24 1232.91,1212.24 1233.49,1212.24 1234.08,1212.24 1234.66,1212.24 1235.25,1212.24 1235.84,1212.24 1236.42,1212.24 1237.01,1212.24 1237.6,1212.24 1238.18,1212.24 1238.77,1212.24 1239.36,1212.24 1239.94,1212.24 1240.53,1212.24 1241.11,1212.24 1241.7,1212.24 1242.29,1212.24 1242.87,1212.24 1243.46,1212.24 1244.05,1212.24 1244.63,1212.24 1245.22,1212.24 1245.81,1212.24 1246.39,1212.24 1246.98,1212.24 1247.57,1212.24 1248.15,1212.24 1248.74,1212.24 1249.32,1212.24 1249.91,1212.24 1250.5,1212.24 1251.08,1212.24 1251.67,1212.24 1252.26,1212.24 1252.84,1212.24 1253.43,1212.24 1254.02,1212.24 1254.6,1212.24 1255.19,1212.24 1255.78,1212.24 1256.36,1212.24 1256.95,1212.24 1257.53,1212.24 1258.12,1212.24 1258.71,1212.24 1259.29,1212.24 1259.88,1212.24 1260.47,1212.24 1261.05,1212.24 1261.64,1212.24 1262.23,1212.24 1262.81,1212.24 1263.4,1212.24 1263.98,1212.24 1264.57,1212.24 1265.16,1212.24 1265.74,1212.24 1266.33,1212.24 1266.92,1212.24 1267.5,1212.24 1268.09,1212.24 1268.68,1212.24 1269.26,1212.24 1269.85,1212.24 1270.44,1212.24 1271.02,1212.24 1271.61,1212.24 1272.19,1212.24 1272.78,1212.24 1273.37,1212.24 1273.95,1212.24 1274.54,1212.24 1275.13,1212.24 1275.71,1212.24 1276.3,1212.24 1276.89,1212.24 1277.47,1212.24 1278.06,1212.24 1278.65,1212.24 1279.23,1212.24 1279.82,1212.24 1280.4,1212.24 1280.99,1212.24 1281.58,1212.24 1282.16,1212.24 1282.75,1212.24 1283.34,1212.24 1283.92,1212.24 1284.51,1212.24 1285.1,1212.24 1285.68,1212.24 1286.27,1212.24 1286.86,1212.24 1287.44,1212.24 1288.03,1212.24 1288.61,1212.24 1289.2,1212.24 1289.79,1212.24 1290.37,1212.24 1290.96,1212.24 1291.55,1212.24 1292.13,1212.24 1292.72,1212.24 1293.31,1212.24 1293.89,1212.24 1294.48,1212.24 1295.06,1212.24 1295.65,1212.24 1296.24,1212.24 1296.82,1212.24 1297.41,1212.24 1298,1212.24 1298.58,1212.24 1299.17,1212.24 1299.76,1212.24 1300.34,1212.24 1300.93,1212.24 1301.52,1212.24 1302.1,1212.24 1302.69,1212.24 1303.27,1212.24 1303.86,1212.24 1304.45,1212.24 1305.03,1212.24 1305.62,1212.24 1306.21,1212.24 1306.79,1212.24 1307.38,1212.24 1307.97,1212.24 1308.55,1212.24 1309.14,1212.24 1309.73,1212.24 1310.31,1212.24 1310.9,1212.24 1311.48,1212.24 1312.07,1212.24 1312.66,1212.24 1313.24,1212.24 1313.83,1212.24 1314.42,1212.24 1315,1212.24 1315.59,1212.24 1316.18,1212.24 1316.76,1212.24 1317.35,1212.24 1317.93,1212.24 1318.52,1212.24 1319.11,1212.24 1319.69,1212.24 1320.28,1212.24 1320.87,1212.24 1321.45,1212.24 1322.04,1212.24 1322.63,1212.24 1323.21,1212.24 1323.8,1212.24 1324.39,1212.24 1324.97,1212.24 1325.56,1212.24 1326.14,1212.24 1326.73,1212.24 1327.32,1212.24 1327.9,1212.24 1328.49,1212.24 1329.08,1212.24 1329.66,1212.24 1330.25,1212.24 1330.84,1212.24 1331.42,1212.24 1332.01,1212.24 1332.6,1212.24 1333.18,1212.24 1333.77,1212.24 1334.35,1212.24 1334.94,1212.24 1335.53,1212.24 1336.11,1212.24 1336.7,1212.24 1337.29,1212.24 1337.87,1212.24 1338.46,1212.24 1339.05,1212.24 1339.63,1212.24 1340.22,1212.24 1340.8,1212.24 1341.39,1212.24 1341.98,1212.24 1342.56,1212.24 1343.15,1212.24 1343.74,1212.24 1344.32,1212.24 1344.91,1212.24 1345.5,1212.24 1346.08,1212.24 1346.67,1212.24 1347.26,1212.24 1347.84,1212.24 1348.43,1212.24 1349.01,1212.24 1349.6,1212.24 1350.19,1212.24 1350.77,1212.24 1351.36,1212.24 1351.95,1212.24 1352.53,1212.24 1353.12,1212.24 1353.71,1212.24 1354.29,1212.24 1354.88,1212.24 1355.47,1212.24 1356.05,1212.24 1356.64,1212.24 1357.22,1212.24 1357.81,1212.24 1358.4,1212.24 1358.98,1212.24 1359.57,1212.24 1360.16,1212.24 1360.74,1212.24 1361.33,1212.24 1361.92,1212.24 1362.5,1212.24 1363.09,1212.24 1363.68,1212.24 1364.26,1212.24 1364.85,1212.24 1365.43,1212.24 1366.02,1212.24 1366.61,1212.24 1367.19,1212.24 1367.78,1212.24 1368.37,1212.24 1368.95,1212.24 1369.54,1212.24 1370.13,1212.24 1370.71,1212.24 1371.3,1212.24 1371.88,1212.24 1372.47,1212.24 1373.06,1212.24 1373.64,1212.24 1374.23,1212.24 1374.82,1212.24 1375.4,1212.24 1375.99,1212.24 1376.58,1212.24 1377.16,1212.24 1377.75,1212.24 1378.34,1212.24 1378.92,1212.24 1379.51,1212.24 1380.09,1212.24 1380.68,1212.24 1381.27,1212.24 1381.85,1212.24 1382.44,1212.24 1383.03,1212.24 1383.61,1212.24 1384.2,1212.24 1384.79,1212.24 1385.37,1212.24 1385.96,1212.24 1386.55,1212.24 1387.13,1212.24 1387.72,1212.24 1388.3,1212.24 1388.89,1212.24 1389.48,1212.24 1390.06,1212.24 1390.65,1212.24 1391.24,1212.24 1391.82,1212.24 1392.41,1212.24 1393,1212.24 1393.58,1212.24 1394.17,1212.24 1394.75,1212.24 1395.34,1212.24 1395.93,1212.24 1396.51,1212.24 1397.1,1212.24 1397.69,1212.24 1398.27,1212.24 1398.86,1212.24 1399.45,1212.24 1400.03,1212.24 1400.62,1212.24 1401.21,1212.24 1401.79,1212.24 1402.38,1212.24 1402.96,1212.24 1403.55,1212.24 1404.14,1212.24 1404.72,1212.24 1405.31,1212.24 1405.9,1212.24 1406.48,1212.24 1407.07,1212.24 1407.66,1212.24 1408.24,1212.24 1408.83,1212.24 1409.42,1212.24 1410,1212.24 1410.59,1212.24 1411.17,1212.24 1411.76,1212.24 1412.35,1212.24 1412.93,1212.24 1413.52,1212.24 1414.11,1212.24 1414.69,1212.24 1415.28,1212.24 1415.87,1212.24 1416.45,1212.24 1417.04,1212.24 1417.63,1212.24 1418.21,1212.24 1418.8,1212.24 1419.38,1212.24 1419.97,1212.24 1420.56,1212.24 1421.14,1212.24 1421.73,1212.24 1422.32,1212.24 1422.9,1212.24 1423.49,1212.24 1424.08,1212.24 1424.66,1212.24 1425.25,1212.24 1425.83,1212.24 1426.42,1212.24 1427.01,1212.24 1427.59,1212.24 1428.18,1212.24 1428.77,1212.24 1429.35,1212.24 1429.94,1212.24 1430.53,1212.24 1431.11,1212.24 1431.7,1212.24 1432.29,1212.24 1432.87,1212.24 1433.46,1212.24 1434.04,1212.24 1434.63,1212.24 1435.22,1212.24 1435.8,1212.24 1436.39,1212.24 1436.98,1212.24 1437.56,1212.24 1438.15,1212.24 1438.74,1212.24 1439.32,1212.24 1439.91,1212.24 1440.5,1212.24 1441.08,1212.24 1441.67,1212.24 1442.25,1212.24 1442.84,1212.24 1443.43,1212.24 1444.01,1212.24 1444.6,1212.24 1445.19,1212.24 1445.77,1212.24 1446.36,1212.24 1446.95,1212.24 1447.53,1212.24 1448.12,1212.24 1448.7,1212.24 1449.29,1212.24 1449.88,1212.24 1450.46,1212.24 1451.05,1212.24 1451.64,1212.24 1452.22,1212.24 1452.81,1212.24 1453.4,1212.24 1453.98,1212.24 1454.57,1212.24 1455.16,1212.24 1455.74,1212.24 1456.33,1212.24 1456.91,1212.24 1457.5,1212.24 1458.09,1212.24 1458.67,1212.24 1459.26,1212.24 1459.85,1212.24 1460.43,1212.24 1461.02,1212.24 1461.61,1212.24 1462.19,1212.24 1462.78,1212.24 1463.37,1212.24 1463.95,1212.24 1464.54,1212.24 1465.12,1212.24 1465.71,1212.24 1466.3,1212.24 1466.88,1212.24 1467.47,1212.24 1468.06,1212.24 1468.64,1212.24 1469.23,1212.24 1469.82,1212.24 1470.4,1212.24 1470.99,1212.24 1471.57,1212.24 1472.16,1212.24 1472.75,1212.24 1473.33,1212.24 1473.92,1212.24 1474.51,1212.24 1475.09,1212.24 1475.68,1212.24 1476.27,1212.24 1476.85,1212.24 1477.44,1212.24 1478.03,1212.24 1478.61,1212.24 1479.2,1212.24 1479.78,1212.24 1480.37,1212.24 1480.96,1212.24 1481.54,1212.24 1482.13,1212.24 1482.72,1212.24 1483.3,1212.24 1483.89,1212.24 1484.48,1212.24 1485.06,1212.24 1485.65,1212.24 1486.24,1212.24 1486.82,1212.24 1487.41,1212.24 1487.99,1212.24 1488.58,1212.24 1489.17,1212.24 1489.75,1212.24 1490.34,1212.24 1490.93,1212.24 1491.51,1212.24 1492.1,1212.24 1492.69,1212.24 1493.27,1212.24 1493.86,1212.24 1494.45,1212.24 1495.03,1212.24 1495.62,1212.24 1496.2,1212.24 1496.79,1212.24 1497.38,1212.24 1497.96,1212.24 1498.55,1212.24 1499.14,1212.24 1499.72,1212.24 1500.31,1212.24 1500.9,1212.24 1501.48,1212.24 1502.07,1212.24 1502.65,1212.24 1503.24,1212.24 1503.83,1212.24 1504.41,1212.24 1505,1212.24 1505.59,1212.24 1506.17,1212.24 1506.76,1212.24 1507.35,1212.24 1507.93,1212.24 1508.52,1212.24 1509.11,1212.24 1509.69,1212.24 1510.28,1212.24 1510.86,1212.24 1511.45,1212.24 1512.04,1212.24 1512.62,1212.24 1513.21,1212.24 1513.8,1212.24 1514.38,1212.24 1514.97,1212.24 1515.56,1212.24 1516.14,1212.24 1516.73,1212.24 1517.32,1212.24 1517.9,1212.24 1518.49,1212.24 1519.07,1212.24 1519.66,1212.24 1520.25,1212.24 1520.83,1212.24 1521.42,1212.24 1522.01,1212.24 1522.59,1212.24 1523.18,1212.24 1523.77,1212.24 1524.35,1212.24 1524.94,1212.24 1525.52,1212.24 1526.11,1212.24 1526.7,1212.24 1527.28,1212.24 1527.87,1212.24 1528.46,1212.24 1529.04,1212.24 1529.63,1212.24 1530.22,1212.24 1530.8,1212.24 1531.39,1212.24 1531.98,1212.24 1532.56,1212.24 1533.15,1212.24 1533.73,1212.24 1534.32,1212.24 1534.91,1212.24 1535.49,1212.24 1536.08,1212.24 1536.67,1212.24 1537.25,1212.24 1537.84,1212.24 1538.43,1212.24 1539.01,1212.24 1539.6,1212.24 1540.19,1212.24 1540.77,1212.24 1541.36,1212.24 1541.94,1212.24 1542.53,1212.24 1543.12,1212.24 1543.7,1212.24 1544.29,1212.24 1544.88,1212.24 1545.46,1212.24 1546.05,1212.24 1546.64,1212.24 1547.22,1212.24 1547.81,1212.24 1548.4,1212.24 1548.98,1212.24 1549.57,1212.24 1550.15,1212.24 1550.74,1212.24 1551.33,1212.24 1551.91,1212.24 1552.5,1212.24 1553.09,1212.24 1553.67,1212.24 1554.26,1212.24 1554.85,1212.24 1555.43,1212.24 1556.02,1212.24 1556.6,1212.24 1557.19,1212.24 1557.78,1212.24 1558.36,1212.24 1558.95,1212.24 1559.54,1212.24 1560.12,1212.24 1560.71,1212.24 1561.3,1212.24 1561.88,1212.24 1562.47,1212.24 1563.06,1212.24 1563.64,1212.24 1564.23,1212.24 1564.81,1212.24 1565.4,1212.24 1565.99,1212.24 1566.57,1212.24 1567.16,1212.24 1567.75,1212.24 1568.33,1212.24 1568.92,1212.24 1569.51,1212.24 1570.09,1212.24 1570.68,1212.24 1571.27,1212.24 1571.85,1212.24 1572.44,1212.24 1573.02,1212.24 1573.61,1212.24 1574.2,1212.24 1574.78,1212.24 1575.37,1212.24 1575.96,1212.24 1576.54,1212.24 1577.13,1212.24 1577.72,1212.24 1578.3,1212.24 1578.89,1212.24 1579.47,1212.24 1580.06,1212.24 1580.65,1212.24 1581.23,1212.24 1581.82,1212.24 1582.41,1212.24 1582.99,1212.24 1583.58,1212.24 1584.17,1212.24 1584.75,1212.24 1585.34,1212.24 1585.93,1212.24 1586.51,1212.24 1587.1,1212.24 1587.68,1212.24 1588.27,1212.24 1588.86,1212.24 1589.44,1212.24 1590.03,1212.24 1590.62,1212.24 1591.2,1212.24 1591.79,1212.24 1592.38,1212.24 1592.96,1212.24 1593.55,1212.24 1594.14,1212.24 1594.72,1212.24 1595.31,1212.24 1595.89,1212.24 1596.48,1212.24 1597.07,1212.24 1597.65,1212.24 1598.24,1212.24 1598.83,1212.24 1599.41,1212.24 1600,1212.24 1600.59,1212.24 1601.17,1212.24 1601.76,1212.24 1602.34,1212.24 1602.93,1212.24 1603.52,1212.24 1604.1,1212.24 1604.69,1212.24 1605.28,1212.24 1605.86,1212.24 1606.45,1212.24 1607.04,1212.24 1607.62,1212.24 1608.21,1212.24 1608.8,1212.24 1609.38,1212.24 1609.97,1212.24 1610.55,1212.24 1611.14,1212.24 1611.73,1212.24 1612.31,1212.24 1612.9,1212.24 1613.49,1212.24 1614.07,1212.24 1614.66,1212.24 1615.25,1212.24 1615.83,1212.24 1616.42,1212.24 1617.01,1212.24 1617.59,1212.24 1618.18,1212.24 1618.76,1212.24 1619.35,1212.24 1619.94,1212.24 1620.52,1212.24 1621.11,1212.24 1621.7,1212.24 1622.28,1212.24 1622.87,1212.24 1623.46,1212.24 1624.04,1212.24 1624.63,1212.24 1625.22,1212.24 1625.8,1212.24 1626.39,1212.24 1626.97,1212.24 1627.56,1212.24 1628.15,1212.24 1628.73,1212.24 1629.32,1212.24 1629.91,1212.24 1630.49,1212.24 1631.08,1212.24 1631.67,1212.24 1632.25,1212.24 1632.84,1212.24 1633.42,1212.24 1634.01,1212.24 1634.6,1212.24 1635.18,1212.24 1635.77,1212.24 1636.36,1212.24 1636.94,1212.24 1637.53,1212.24 1638.12,1212.24 1638.7,1212.24 1639.29,1212.24 1639.88,1212.24 1640.46,1212.24 1641.05,1212.24 1641.63,1212.24 1642.22,1212.24 1642.81,1212.24 1643.39,1212.24 1643.98,1212.24 1644.57,1212.24 1645.15,1212.24 1645.74,1212.24 1646.33,1212.24 1646.91,1212.24 1647.5,1212.24 1648.09,1212.24 1648.67,1212.24 1649.26,1212.24 1649.84,1212.24 1650.43,1212.24 1651.02,1212.24 1651.6,1212.24 1652.19,1212.24 1652.78,1212.24 1653.36,1212.24 1653.95,1212.24 1654.54,1212.24 1655.12,1212.24 1655.71,1212.24 1656.29,1212.24 1656.88,1212.24 1657.47,1212.24 1658.05,1212.24 1658.64,1212.24 1659.23,1212.24 1659.81,1212.24 1660.4,1212.24 1660.99,1212.24 1661.57,1212.24 1662.16,1212.24 1662.75,1212.24 1663.33,1212.24 1663.92,1212.24 1664.5,1212.24 1665.09,1212.24 1665.68,1212.24 1666.26,1212.24 1666.85,1212.24 1667.44,1212.24 1668.02,1212.24 1668.61,1212.24 1669.2,1212.24 1669.78,1212.24 1670.37,1212.24 1670.96,1212.24 1671.54,1212.24 1672.13,1212.24 1672.71,1212.24 1673.3,1212.24 1673.89,1212.24 1674.47,1212.24 1675.06,1212.24 1675.65,1212.24 1676.23,1212.24 1676.82,1212.24 1677.41,1212.24 1677.99,1212.24 1678.58,1212.24 1679.17,1212.24 1679.75,1212.24 1680.34,1212.24 1680.92,1212.24 1681.51,1212.24 1682.1,1212.24 1682.68,1212.24 1683.27,1212.24 1683.86,1212.24 1684.44,1212.24 1685.03,1212.24 1685.62,1212.24 1686.2,1212.24 1686.79,1212.24 1687.37,1212.24 1687.96,1212.24 1688.55,1212.24 1689.13,1212.24 1689.72,1212.24 1690.31,1212.24 1690.89,1212.24 1691.48,1212.24 1692.07,1212.24 1692.65,1212.24 1693.24,1212.24 1693.83,1212.24 1694.41,1212.24 1695,1212.24 1695.58,1212.24 1696.17,1212.24 1696.76,1212.24 1697.34,1212.24 1697.93,1212.24 1698.52,1212.24 1699.1,1212.24 1699.69,1212.24 1700.28,1212.24 1700.86,1212.24 1701.45,1212.24 1702.04,1212.24 1702.62,1212.24 1703.21,1212.24 1703.79,1212.24 1704.38,1212.24 1704.97,1212.24 1705.55,1212.24 1706.14,1212.24 1706.73,1212.24 1707.31,1212.24 1707.9,1212.24 1708.49,1212.24 1709.07,1212.24 1709.66,1212.24 1710.24,1212.24 1710.83,1212.24 1711.42,1212.24 1712,1212.24 1712.59,1212.24 1713.18,1212.24 1713.76,1212.24 1714.35,1212.24 1714.94,1212.24 1715.52,1212.24 1716.11,1212.24 1716.7,1212.24 1717.28,1212.24 1717.87,1212.24 1718.45,1212.24 1719.04,1212.24 1719.63,1212.24 1720.21,1212.24 1720.8,1212.24 1721.39,1212.24 1721.97,1212.24 1722.56,1212.24 1723.15,1212.24 1723.73,1212.24 1724.32,1212.24 1724.91,1212.24 1725.49,1212.24 1726.08,1212.24 1726.66,1212.24 1727.25,1212.24 1727.84,1212.24 1728.42,1212.24 1729.01,1212.24 1729.6,1212.24 1730.18,1212.24 1730.77,1212.24 1731.36,1212.24 1731.94,1212.24 1732.53,1212.24 1733.11,1212.24 1733.7,1212.24 1734.29,1212.24 1734.87,1212.24 1735.46,1212.24 1736.05,1212.24 1736.63,1212.24 1737.22,1212.24 1737.81,1212.24 1738.39,1212.24 1738.98,1212.24 1739.57,1212.24 1740.15,1212.24 1740.74,1212.24 1741.32,1212.24 1741.91,1212.24 1742.5,1212.24 1743.08,1212.24 1743.67,1212.24 1744.26,1212.24 1744.84,1212.24 1745.43,1212.24 1746.02,1212.24 1746.6,1212.24 1747.19,1212.24 1747.78,1212.24 1748.36,1212.24 1748.95,1212.24 1749.53,1212.24 1750.12,1212.24 1750.71,1212.24 1751.29,1212.24 1751.88,1212.24 1752.47,1212.24 1753.05,1212.24 1753.64,1212.24 1754.23,1212.24 1754.81,1212.24 1755.4,1212.24 1755.99,1212.24 1756.57,1212.24 1757.16,1212.24 1757.74,1212.24 1758.33,1212.24 1758.92,1212.24 1759.5,1212.24 1760.09,1212.24 1760.68,1212.24 1761.26,1212.24 1761.85,1212.24 1762.44,1212.24 1763.02,1212.24 1763.61,1212.24 1764.19,1212.24 1764.78,1212.24 1765.37,1212.24 1765.95,1212.24 1766.54,1212.24 1767.13,1212.24 1767.71,1212.24 1768.3,1212.24 1768.89,1212.24 1769.47,1212.24 1770.06,1212.24 1770.65,1212.24 1771.23,1212.24 1771.82,1212.24 1772.4,1212.24 1772.99,1212.24 1773.58,1212.24 1774.16,1212.24 1774.75,1212.24 1775.34,1212.24 1775.92,1212.24 1776.51,1212.24 1777.1,1212.24 1777.68,1212.24 1778.27,1212.24 1778.86,1212.24 1779.44,1212.24 1780.03,1212.24 1780.61,1212.24 1781.2,1212.24 1781.79,1212.24 1782.37,1212.24 1782.96,1212.24 1783.55,1212.24 1784.13,1212.24 1784.72,1212.24 1785.31,1212.24 1785.89,1212.24 1786.48,1212.24 1787.06,1212.24 1787.65,1212.24 1788.24,1212.24 1788.82,1212.24 1789.41,1212.24 1790,1212.24 1790.58,1212.24 1791.17,1212.24 1791.76,1212.24 1792.34,1212.24 1792.93,1212.24 1793.52,1212.24 1794.1,1212.24 1794.69,1212.24 1795.27,1212.24 1795.86,1212.24 1796.45,1212.24 1797.03,1212.24 1797.62,1212.24 1798.21,1212.24 1798.79,1212.24 1799.38,1212.24 1799.97,1212.24 1800.55,1212.24 1801.14,1212.24 1801.73,1212.24 1802.31,1212.24 1802.9,1212.24 1803.48,1212.24 1804.07,1212.24 1804.66,1212.24 1805.24,1212.24 1805.83,1212.24 1806.42,1212.24 1807,1212.24 1807.59,1212.24 1808.18,1212.24 1808.76,1212.24 1809.35,1212.24 1809.94,1212.24 1810.52,1212.24 1811.11,1212.24 1811.69,1212.24 1812.28,1212.24 1812.87,1212.24 1813.45,1212.24 1814.04,1212.24 1814.63,1212.24 1815.21,1212.24 1815.8,1212.24 1816.39,1212.24 1816.97,1212.24 1817.56,1212.24 1818.14,1212.24 1818.73,1212.24 1819.32,1212.24 1819.9,1212.24 1820.49,1212.24 1821.08,1212.24 1821.66,1212.24 1822.25,1212.24 1822.84,1212.24 1823.42,1212.24 1824.01,1212.24 1824.6,1212.24 1825.18,1212.24 1825.77,1212.24 1826.35,1212.24 1826.94,1212.24 1827.53,1212.24 1828.11,1212.24 1828.7,1212.24 1829.29,1212.24 1829.87,1212.24 1830.46,1212.24 1831.05,1212.24 1831.63,1212.24 1832.22,1212.24 1832.81,1212.24 1833.39,1212.24 1833.98,1212.24 1834.56,1212.24 1835.15,1212.24 1835.74,1212.24 1836.32,1212.24 1836.91,1212.24 1837.5,1212.24 1838.08,1212.24 1838.67,1212.24 1839.26,1212.24 1839.84,1212.24 1840.43,1212.24 1841.01,1212.24 1841.6,1212.24 1842.19,1212.24 1842.77,1212.24 1843.36,1212.24 1843.95,1212.24 1844.53,1212.24 1845.12,1212.24 1845.71,1212.24 1846.29,1212.24 1846.88,1212.24 1847.47,1212.24 1848.05,1212.24 1848.64,1212.24 1849.22,1212.24 1849.81,1212.24 1850.4,1212.24 1850.98,1212.24 1851.57,1212.24 1852.16,1212.24 1852.74,1212.24 1853.33,1212.24 1853.92,1212.24 1854.5,1212.24 1855.09,1212.24 1855.68,1212.24 1856.26,1212.24 1856.85,1212.24 1857.43,1212.24 1858.02,1212.24 1858.61,1212.24 1859.19,1212.24 1859.78,1212.24 1860.37,1212.24 1860.95,1212.24 1861.54,1212.24 1862.13,1212.24 1862.71,1212.24 1863.3,1212.24 1863.88,1212.24 1864.47,1212.24 1865.06,1212.24 1865.64,1212.24 1866.23,1212.24 1866.82,1212.24 1867.4,1212.24 1867.99,1212.24 1868.58,1212.24 1869.16,1212.24 1869.75,1212.24 1870.34,1212.24 1870.92,1212.24 1871.51,1212.24 1872.09,1212.24 1872.68,1212.24 1873.27,1212.24 1873.85,1212.24 1874.44,1212.24 1875.03,1212.24 1875.61,1212.24 1876.2,1212.24 1876.79,1212.24 1877.37,1212.24 1877.96,1212.24 1878.55,1212.24 1879.13,1212.24 1879.72,1212.24 1880.3,1212.24 1880.89,1212.24 1881.48,1212.24 1882.06,1212.24 1882.65,1212.24 1883.24,1212.24 1883.82,1212.24 1884.41,1212.24 1885,1212.24 1885.58,1212.24 1886.17,1212.24 1886.76,1212.24 1887.34,1212.24 1887.93,1212.24 1888.51,1212.24 1889.1,1212.24 1889.69,1212.24 1890.27,1212.24 1890.86,1212.24 1891.45,1212.24 1892.03,1212.24 1892.62,1212.24 1893.21,1212.24 1893.79,1212.24 1894.38,1212.24 1894.96,1212.24 1895.55,1212.24 1896.14,1212.24 1896.72,1212.24 1897.31,1212.24 1897.9,1212.24 1898.48,1212.24 1899.07,1212.24 1899.66,1212.24 1900.24,1212.24 1900.83,1212.24 1901.42,1212.24 1902,1212.24 1902.59,1212.24 1903.17,1212.24 1903.76,1212.24 1904.35,1212.24 1904.93,1212.24 1905.52,1212.24 1906.11,1212.24 1906.69,1212.24 1907.28,1212.24 1907.87,1212.24 1908.45,1212.24 1909.04,1212.24 1909.63,1212.24 1910.21,1212.24 1910.8,1212.24 1911.38,1212.24 1911.97,1212.24 1912.56,1212.24 1913.14,1212.24 1913.73,1212.24 1914.32,1212.24 1914.9,1212.24 1915.49,1212.24 1916.08,1212.24 1916.66,1212.24 1917.25,1212.24 1917.83,1212.24 1918.42,1212.24 1919.01,1212.24 1919.59,1212.24 1920.18,1212.24 1920.77,1212.24 1921.35,1212.24 1921.94,1212.24 1922.53,1212.24 1923.11,1212.24 1923.7,1212.24 1924.29,1212.24 1924.87,1212.24 1925.46,1212.24 1926.04,1212.24 1926.63,1212.24 1927.22,1212.24 1927.8,1212.24 1928.39,1212.24 1928.98,1212.24 1929.56,1212.24 1930.15,1212.24 1930.74,1212.24 1931.32,1212.24 1931.91,1212.24 1932.5,1212.24 1933.08,1212.24 1933.67,1212.24 1934.25,1212.24 1934.84,1212.24 1935.43,1212.24 1936.01,1212.24 1936.6,1212.24 1937.19,1212.24 1937.77,1212.24 1938.36,1212.24 1938.95,1212.24 1939.53,1212.24 1940.12,1212.24 1940.71,1212.24 1941.29,1212.24 1941.88,1212.24 1942.46,1212.24 1943.05,1212.24 1943.64,1212.24 1944.22,1212.24 1944.81,1212.24 1945.4,1212.24 1945.98,1212.24 1946.57,1212.24 1947.16,1212.24 1947.74,1212.24 1948.33,1212.24 1948.91,1212.24 1949.5,1212.24 1950.09,1212.24 1950.67,1212.24 1951.26,1212.24 1951.85,1212.24 1952.43,1212.24 1953.02,1212.24 1953.61,1212.24 1954.19,1212.24 1954.78,1212.24 1955.37,1212.24 1955.95,1212.24 1956.54,1212.24 1957.12,1212.24 1957.71,1212.24 1958.3,1212.24 1958.88,1212.24 1959.47,1212.24 1960.06,1212.24 1960.64,1212.24 1961.23,1212.24 1961.82,1212.24 1962.4,1212.24 1962.99,1212.24 1963.58,1212.24 1964.16,1212.24 1964.75,1212.24 1965.33,1212.24 1965.92,1212.24 1966.51,1212.24 1967.09,1212.24 1967.68,1212.24 1968.27,1212.24 1968.85,1212.24 1969.44,1212.24 1970.03,1212.24 1970.61,1212.24 1971.2,1212.24 1971.78,1212.24 1972.37,1212.24 1972.96,1212.24 1973.54,1212.24 1974.13,1212.24 1974.72,1212.24 1975.3,1212.24 1975.89,1212.24 1976.48,1212.24 1977.06,1212.24 1977.65,1212.24 1978.24,1212.24 1978.82,1212.24 1979.41,1212.24 1979.99,1212.24 1980.58,1212.24 1981.17,1212.24 1981.75,1212.24 1982.34,1212.24 1982.93,1212.24 1983.51,1212.24 1984.1,1212.24 1984.69,1212.24 1985.27,1212.24 1985.86,1212.24 1986.45,1212.24 1987.03,1212.24 1987.62,1212.24 1988.2,1212.24 1988.79,1212.24 1989.38,1212.24 1989.96,1212.24 1990.55,1212.24 1991.14,1212.24 1991.72,1212.24 1992.31,1212.24 1992.9,1212.24 1993.48,1212.24 1994.07,1212.24 1994.65,1212.24 1995.24,1212.24 1995.83,1212.24 1996.41,1212.24 1997,1212.24 1997.59,1212.24 1998.17,1212.24 1998.76,1212.24 1999.35,1212.24 1999.93,1212.24 2000.52,1212.24 2001.11,1212.24 2001.69,1212.24 2002.28,1212.24 2002.86,1212.24 2003.45,1212.24 2004.04,1212.24 2004.62,1212.24 2005.21,1212.24 2005.8,1212.24 2006.38,1212.24 2006.97,1212.24 2007.56,1212.24 2008.14,1212.24 2008.73,1212.24 2009.32,1212.24 2009.9,1212.24 2010.49,1212.24 2011.07,1212.24 2011.66,1212.24 2012.25,1212.24 2012.83,1212.24 2013.42,1212.24 2014.01,1212.24 2014.59,1212.24 2015.18,1212.24 2015.77,1212.24 2016.35,1212.24 2016.94,1212.24 2017.53,1212.24 2018.11,1212.24 2018.7,1212.24 2019.28,1212.24 2019.87,1212.24 2020.46,1212.24 2021.04,1212.24 2021.63,1212.24 2022.22,1212.24 2022.8,1212.24 2023.39,1212.24 2023.98,1212.24 2024.56,1212.24 2025.15,1212.24 2025.73,1212.24 2026.32,1212.24 2026.91,1212.24 2027.49,1212.24 2028.08,1212.24 2028.67,1212.24 2029.25,1212.24 2029.84,1212.24 2030.43,1212.24 2031.01,1212.24 2031.6,1212.24 2032.19,1212.24 2032.77,1212.24 2033.36,1212.24 2033.94,1212.24 2034.53,1212.24 2035.12,1212.24 2035.7,1212.24 2036.29,1212.24 2036.88,1212.24 2037.46,1212.24 2038.05,1212.24 2038.64,1212.24 2039.22,1212.24 2039.81,1212.24 2040.4,1212.24 2040.98,1212.24 2041.57,1212.24 2042.15,1212.24 2042.74,1212.24 2043.33,1212.24 2043.91,1212.24 2044.5,1212.24 2045.09,1212.24 2045.67,1212.24 2046.26,1212.24 2046.85,1212.24 2047.43,1212.24 2048.02,1212.24 2048.6,1212.24 2049.19,1212.24 2049.78,1212.24 2050.36,1212.24 2050.95,1212.24 2051.54,1212.24 2052.12,1212.24 2052.71,1212.24 2053.3,1212.24 2053.88,1212.24 2054.47,1212.24 2055.06,1212.24 2055.64,1212.24 2056.23,1212.24 2056.81,1212.24 2057.4,1212.24 2057.99,1212.24 2058.57,1212.24 2059.16,1212.24 2059.75,1212.24 2060.33,1212.24 2060.92,1212.24 2061.51,1212.24 2062.09,1212.24 2062.68,1212.24 2063.27,1212.24 2063.85,1212.24 2064.44,1212.24 2065.02,1212.24 2065.61,1212.24 2066.2,1212.24 2066.78,1212.24 2067.37,1212.24 2067.96,1212.24 2068.54,1212.24 2069.13,1212.24 2069.72,1212.24 2070.3,1212.24 2070.89,1212.24 2071.48,1212.24 2072.06,1212.24 2072.65,1212.24 2073.23,1212.24 2073.82,1212.24 2074.41,1212.24 2074.99,1212.24 2075.58,1212.24 2076.17,1212.24 2076.75,1212.24 2077.34,1212.24 2077.93,1212.24 2078.51,1212.24 2079.1,1212.24 2079.68,1212.24 2080.27,1212.24 2080.86,1212.24 2081.44,1212.24 2082.03,1212.24 2082.62,1212.24 2083.2,1212.24 2083.79,1212.24 2084.38,1212.24 2084.96,1212.24 2085.55,1212.24 2086.14,1212.24 2086.72,1212.24 2087.31,1212.24 2087.89,1212.24 2088.48,1212.24 2089.07,1212.24 2089.65,1212.24 2090.24,1212.24 2090.83,1212.24 2091.41,1212.24 2092,1212.24 2092.59,1212.24 2093.17,1212.24 2093.76,1212.24 2094.35,1212.24 2094.93,1212.24 2095.52,1212.24 2096.1,1212.24 2096.69,1212.24 2097.28,1212.24 2097.86,1212.24 2098.45,1212.24 2099.04,1212.24 2099.62,1212.24 2100.21,1212.24 2100.8,1212.24 2101.38,1212.24 2101.97,1212.24 2102.55,1212.24 2103.14,1212.24 2103.73,1212.24 2104.31,1212.24 2104.9,1212.24 2105.49,1212.24 2106.07,1212.24 2106.66,1212.24 2107.25,1212.24 2107.83,1212.24 2108.42,1212.24 2109.01,1212.24 2109.59,1212.24 2110.18,1212.24 2110.76,1212.24 2111.35,1212.24 2111.94,1212.24 2112.52,1212.24 2113.11,1212.24 2113.7,1212.24 2114.28,1212.24 2114.87,1212.24 2115.46,1212.24 2116.04,1212.24 2116.63,1212.24 2117.22,1212.24 2117.8,1212.24 2118.39,1212.24 2118.97,1212.24 2119.56,1212.24 2120.15,1212.24 2120.73,1212.24 2121.32,1212.24 2121.91,1212.24 2122.49,1212.24 2123.08,1212.24 2123.67,1212.24 2124.25,1212.24 2124.84,1212.24 2125.42,1212.24 2126.01,1212.24 2126.6,1212.24 2127.18,1212.24 2127.77,1212.24 2128.36,1212.24 2128.94,1212.24 2129.53,1212.24 2130.12,1212.24 2130.7,1212.24 2131.29,1212.24 2131.88,1212.24 2132.46,1212.24 2133.05,1212.24 2133.63,1212.24 2134.22,1212.24 2134.81,1212.24 2135.39,1212.24 2135.98,1212.24 2136.57,1212.24 2137.15,1212.24 2137.74,1212.24 2138.33,1212.24 2138.91,1212.24 2139.5,1212.24 2140.09,1212.24 2140.67,1212.24 2141.26,1212.24 2141.84,1212.24 2142.43,1212.24 2143.02,1212.24 2143.6,1212.24 2144.19,1212.24 2144.78,1212.24 2145.36,1212.24 2145.95,1212.24 2146.54,1212.24 2147.12,1212.24 2147.71,1212.24 2148.3,1212.24 2148.88,1212.24 2149.47,1212.24 2150.05,1212.24 2150.64,1212.24 2151.23,1212.24 2151.81,1212.24 2152.4,1212.24 2152.99,1212.24 2153.57,1212.24 2154.16,1212.24 2154.75,1212.24 2155.33,1212.24 2155.92,1212.24 2156.5,1212.24 2157.09,1212.24 2157.68,1212.24 2158.26,1212.24 \"/>\n<polyline clip-path=\"url(#clip512)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1563.04,1196.02 1399.37,899.083 \"/>\n<polyline clip-path=\"url(#clip512)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1227.99 985.439,1196.02 2158.26,1196.02 2158.26,1227.99 985.439,1227.99 \"/>\n<path clip-path=\"url(#clip510)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip510)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip510)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip510)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip510)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip510)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip510)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip510)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip513\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip513)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip513)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip513)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip513)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip513)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip510)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip510)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip510)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip510)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip510)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip510)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip510)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip513)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip513)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip513)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip513)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip513)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip510)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip510)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip510)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip510)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip510)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip510)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip510)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip510)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip513)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-1577.5 161.555,-1388.05 162.114,-2699.44 162.673,-3902.72 163.232,-5029.64 163.792,-6060.65 164.351,-6953.58 164.91,-7792.52 165.469,-8576.35 166.029,-9243.31 166.588,-9867.99 167.147,-10429.6 167.706,-10932.3 168.266,-11379.8 168.825,-11775.7 169.384,-12102.1 169.943,-12406 170.503,-12667.8 171.062,-12879.5 171.621,-12402.6 172.18,-11978.2 172.74,-11596.3 173.299,-11248.9 173.858,-11371.4 174.417,-11473.5 174.977,-11548.5 175.536,-11606.6 176.095,-11641.8 176.655,-11641 177.214,-11636.2 177.773,-11312.7 178.332,-10982.3 178.892,-10931.5 179.451,-10870.5 180.01,-10792.3 180.569,-10271.4 181.129,-10164.4 181.688,-9852.57 182.247,-9748.46 182.806,-9625.81 183.366,-9504.93 183.925,-9076.04 184.484,-8947.38 185.043,-8679.37 185.603,-8541.61 186.162,-8152.75 186.721,-7795.81 187.28,-7552.1 187.84,-7417.56 188.399,-7276.55 188.958,-7044.31 189.517,-6736.73 190.077,-6441.88 190.636,-6162.57 191.195,-6052.92 191.754,-5943.32 192.314,-5832.37 192.873,-5654.52 193.432,-5345.42 193.991,-5181.67 194.551,-5017.25 195.11,-4858.62 195.669,-4756.25 196.228,-4542.18 196.788,-4335.84 197.347,-4146.29 197.906,-3960.11 198.465,-3831 199.025,-3655.18 199.584,-3533.96 200.143,-3414.9 200.702,-3292.7 201.262,-3178.46 201.821,-3022.45 202.38,-2833.55 202.939,-2727.5 203.499,-2588.13 204.058,-2453.3 204.617,-2386.52 205.176,-2216.22 205.736,-2092.07 206.295,-1998.6 206.854,-1846.71 207.413,-1728.68 207.973,-1526.01 208.532,-1456.91 209.091,-1326.7 209.65,-1293.36 210.21,-1256.26 210.769,-1213.02 211.328,-1146.67 211.887,-1080.37 212.447,-1018.06 213.006,-957.395 213.565,-894.611 214.124,-859.558 214.684,-827.448 215.243,-792.238 215.802,-707.056 216.361,-674.621 216.921,-641.076 217.48,-563.51 218.039,-534.195 218.598,-502.735 219.158,-446.035 219.717,-415.14 220.276,-364.626 220.835,-268.829 221.395,-243.202 221.954,-218.856 222.513,-172.536 223.072,-153.97 223.632,-113.779 224.191,-116.816 224.75,-24.7691 225.309,19.5245 225.869,63.9539 226.428,102 226.987,157.795 227.546,212.759 228.106,246.049 228.665,260.948 229.224,270.518 229.783,306.598 230.343,317.971 230.902,350.078 231.461,379.23 232.02,389.205 232.58,438.843 233.139,448.634 233.698,476.658 234.257,527.458 234.817,535.55 235.376,584.45 235.935,589.674 236.494,633.459 237.054,638.141 237.613,663.397 238.172,671.969 238.731,678.543 239.291,723.018 239.85,726.028 240.409,785.618 240.968,827.755 241.528,844.08 242.087,876.642 242.646,879.187 243.205,893.621 243.765,909.478 244.324,902.49 244.883,899.133 245.442,913.064 246.002,932.874 246.561,964.362 247.12,989.271 247.679,984.741 248.239,979.627 248.798,952.148 249.357,944.582 249.916,922.849 250.476,921.554 251.035,970.171 251.594,949.028 252.153,982.907 252.713,996.431 253.272,1027.49 253.831,1090.55 254.39,1082.89 254.95,1126.08 255.509,1132.28 256.068,1123.23 256.627,1109.98 257.187,1079.98 257.746,1087.36 258.305,1060.87 258.864,1107.09 259.424,1114.92 259.983,1124.9 260.542,1134.04 261.101,1122.96 261.661,1111.02 262.22,1115.98 262.779,1127.55 263.338,1150.52 263.898,1158.91 264.457,1131.05 265.016,1170.91 265.575,1159.41 266.135,1148.49 266.694,1120.37 267.253,1163.84 267.812,1170.3 268.372,1171.29 268.931,1207.08 269.49,1190.47 270.049,1177.53 270.609,1165.48 271.168,1120.84 271.727,1113.44 272.286,1105.84 272.846,1097.42 273.405,1087.28 273.964,1113.5 274.523,1119.82 275.083,1108.03 275.642,1097.49 276.201,1075.07 276.76,1067.51 277.32,1046.2 277.879,1056.79 278.438,1084.29 278.997,1127.59 279.557,1100.24 280.116,1109.9 280.675,1118.44 281.234,1109.86 281.794,1102.72 282.353,1095.78 282.912,1089.14 283.471,1097.88 284.031,1105.38 284.59,1111.17 285.149,1101.55 285.708,1108.67 286.268,1081.71 286.827,1087.84 287.386,1096.18 287.945,1084.35 288.505,1077.87 289.064,1069.04 289.623,1043.55 290.182,1041.27 290.742,1013.61 291.301,1009.59 291.86,988.013 292.419,1000.22 292.979,1027.14 293.538,1053.5 294.097,1065 294.656,1054.73 295.216,1063.59 295.775,1041.35 296.334,1034.17 296.893,1030.06 297.453,1040.24 298.012,1052.18 298.571,1014.86 299.13,1041.18 299.69,1049.13 300.249,1043.12 300.808,1019.67 301.368,1032.49 301.927,1012.39 302.486,1008.03 303.045,1002.69 303.605,999.609 304.164,996.973 304.723,975.376 305.282,954.792 305.842,968.861 306.401,981.319 306.96,978.841 307.519,976.114 308.079,971.649 308.638,939.39 309.197,920.29 309.756,922.103 310.316,936.6 310.875,935.201 311.434,935.781 311.993,948.236 312.553,929.183 313.112,927.651 313.671,956.185 314.23,967.197 314.79,1012.2 315.349,1003.01 315.908,998.523 316.467,1006.05 317.027,1032.53 317.586,1025.64 318.145,1016.82 318.704,993.71 319.264,1004.94 319.823,999.386 320.382,993.633 320.941,1001.58 321.501,980.074 322.06,1021.72 322.619,997.511 323.178,1007.03 323.738,1033.38 324.297,1010.13 324.856,1004.85 325.415,1013.14 325.975,991.318 326.534,969.1 327.093,983.123 327.652,995.391 328.212,988.828 328.771,967.498 329.33,979.191 329.889,990.943 330.449,985.499 331.008,1009.53 331.567,1002.28 332.126,992.286 332.686,953.868 333.245,981.808 333.804,1008.52 334.363,999.16 334.923,994.518 335.482,1004.64 336.041,998.834 336.6,1005.98 337.16,1010.91 337.719,1002.77 338.278,1027.36 338.837,1016.56 339.397,990.771 339.956,969.086 340.515,960.07 341.074,938.22 341.634,934.484 342.193,914.59 342.752,927.708 343.311,956.094 343.871,933.501 344.43,896.245 344.989,894.549 345.548,891.805 346.108,907.622 346.667,907.755 347.226,886.584 347.785,901.282 348.345,866.119 348.904,863.825 349.463,846.174 350.022,828.271 350.582,824.929 351.141,808.189 351.7,810.997 352.259,829.671 352.819,861.859 353.378,860.851 353.937,904.732 354.496,918.072 355.056,911.323 355.615,903.937 356.174,886.634 356.733,864.678 357.293,898.331 357.852,909.491 358.411,874.436 358.97,871.627 359.53,867.007 360.089,882.348 360.648,912.869 361.207,924.891 361.767,906.635 362.326,888.812 362.885,901.549 363.444,865.324 364.004,863.889 364.563,812.934 365.122,845.504 365.681,859.607 366.241,840.002 366.8,842.564 367.359,858.549 367.918,841.1 368.478,824.461 369.037,856.457 369.596,887.808 370.155,913.818 370.715,906.302 371.274,900.299 371.833,894.696 372.392,904.582 372.952,899.713 373.511,895.931 374.07,887.968 374.629,866.906 375.189,864.098 375.748,905.413 376.307,931.219 376.866,924.841 377.426,919.888 377.985,945.162 378.544,924.086 379.103,915.391 379.663,941.706 380.222,949.877 380.781,942.253 381.34,934.662 381.9,941.754 382.459,917.933 383.018,928.974 383.577,940.047 384.137,984.478 384.696,959.262 385.255,933.789 385.814,926.475 386.374,887.418 386.933,849.214 387.492,846.298 388.051,872.637 388.611,871.958 389.17,852.534 389.729,798.928 390.288,812.625 390.848,811.609 391.407,810.668 391.966,773.735 392.525,790.511 393.085,807.662 393.644,821.31 394.203,787.723 394.762,801.165 395.322,785.007 395.881,816.48 396.44,817.214 396.999,803.957 397.559,804.978 398.118,808.597 398.677,838.55 399.236,835.73 399.796,850.023 400.355,864.209 400.914,878.166 401.473,890.245 402.033,817.136 402.592,827.26 403.151,809.104 403.71,806.955 404.27,790.924 404.829,790.381 405.388,807.728 405.947,789.268 406.507,769.495 407.066,768.52 407.625,752.385 408.184,717.804 408.744,748.785 409.303,764.435 409.862,782.398 410.421,752.448 410.981,753.323 411.54,753.279 412.099,770.224 412.658,770.297 413.218,723.181 413.777,726.494 414.336,748.015 414.895,734.353 415.455,752.803 416.014,750.461 416.573,750.168 417.132,765.321 417.692,764.259 418.251,761.252 418.81,763.56 419.369,748.876 419.929,747.507 420.488,795.946 421.047,795.553 421.606,764.443 422.166,780.445 422.725,795.806 423.284,777.133 423.843,789.808 424.403,818.781 424.962,832.083 425.521,841.528 426.08,804.221 426.64,785.587 427.199,799.345 427.758,829.322 428.318,824.499 428.877,852.986 429.436,864.451 429.995,858.232 430.555,885.027 431.114,876.756 431.673,854.471 432.232,848.933 432.792,846.123 433.351,828.452 433.91,787.611 434.469,799.89 435.029,815.813 435.588,815.141 436.147,799.896 436.706,797.087 437.266,828.915 437.825,793.946 438.384,808.403 438.943,839.977 439.503,833.399 440.062,812.8 440.621,811.07 441.18,807.793 441.74,803.253 442.299,786.44 442.858,767.83 443.417,782.801 443.977,796.087 444.536,758.195 445.095,756.686 445.654,772.071 446.214,756.813 446.773,772.113 447.332,767.159 447.891,749.227 448.451,731.878 449.01,750.09 449.569,768.01 450.128,765.242 450.688,781.92 451.247,797.24 451.806,775.777 452.365,758.943 452.925,757.888 453.484,757.99 454.043,743.653 454.602,744.309 455.162,728.293 455.721,716.111 456.28,734.623 456.839,719.536 457.399,736.512 457.958,739.703 458.517,723.097 459.076,725.335 459.636,711.704 460.195,729.545 460.754,708.106 461.313,692.457 461.873,731.729 462.432,765.589 462.991,782.68 463.55,795.744 464.11,762.154 464.669,760.015 465.228,773.158 465.787,755.444 466.347,752.91 466.906,753.097 467.465,735.396 468.024,753.091 468.584,768.653 469.143,784.977 469.702,802.663 470.261,766.639 470.821,766.142 471.38,752.149 471.939,751.445 472.498,769.426 473.058,770.374 473.617,770.225 474.176,772.215 474.735,771.526 475.295,784.801 475.854,836.4 476.413,832.279 476.972,840.516 477.532,783.89 478.091,787.406 478.65,784.976 479.209,754.516 479.769,756.293 480.328,734.215 480.887,782.873 481.446,782.882 482.006,811.637 482.565,808.103 483.124,819.582 483.683,815.789 484.243,809.194 484.802,850.438 485.361,827.707 485.92,835.825 486.48,832.522 487.039,842.615 487.598,805.486 488.157,803.212 488.717,787.555 489.276,799.191 489.835,808.417 490.394,819.426 490.954,815.432 491.513,796.598 492.072,795.205 492.631,775.015 493.191,771.797 493.75,770.983 494.309,750.953 494.868,751.318 495.428,735.173 495.987,752.749 496.546,734.876 497.105,734.181 497.665,719.143 498.224,709.461 498.783,727.15 499.342,729.651 499.902,730.658 500.461,732.88 501.02,761.737 501.579,789.34 502.139,818.191 502.698,798.031 503.257,797.059 503.816,807.831 504.376,802.167 504.935,814.113 505.494,841.611 506.053,790.295 506.613,757.204 507.172,740.27 507.731,737.632 508.29,737.899 508.85,736.983 509.409,738.232 509.968,737.315 510.527,738.319 511.087,722.063 511.646,719.378 512.205,721.433 512.764,724.229 513.324,724.769 513.883,710.93 514.442,728.752 515.001,712.637 515.561,682.785 516.12,668.99 516.679,656.157 517.238,674.397 517.798,710.361 518.357,774.892 518.916,752.941 519.475,765.908 520.035,763.367 520.594,758.696 521.153,759.172 521.712,738.011 522.272,722.171 522.831,726.27 523.39,730.254 523.949,733.22 524.509,762.744 525.068,760.895 525.627,758.775 526.186,758.085 526.746,740.497 527.305,705.582 527.864,721.488 528.423,736.659 528.983,719.704 529.542,750.379 530.101,748.698 530.66,778.373 531.22,773.056 531.779,785.544 532.338,799.239 532.897,795.529 533.457,806.169 534.016,799.704 534.575,761.754 535.134,742.046 535.694,771.596 536.253,785.802 536.812,781.109 537.371,796.845 537.931,776.954 538.49,742.032 539.049,741.767 539.608,739.878 540.168,740.701 540.727,787.806 541.286,783.089 541.845,766.509 542.405,719.072 542.964,702.474 543.523,686.334 544.082,687.374 544.642,706.34 545.201,706.547 545.76,707.324 546.319,710.168 546.879,741.112 547.438,738.373 547.997,753.497 548.556,764.387 549.116,765.192 549.675,767.094 550.234,746.595 550.793,744.529 551.353,731.394 551.912,748.025 552.471,778.732 553.031,773.804 553.59,785.644 554.149,811.216 554.708,857.944 555.268,818.456 555.827,814.135 556.386,811.314 556.945,819.668 557.505,829.799 558.064,791.02 558.623,791.268 559.182,770.93 559.742,751.211 560.301,732.39 560.86,733.463 561.419,716.134 561.979,685.965 562.538,686.841 563.097,669.107 563.656,673.312 564.216,675.44 564.775,664.047 565.334,633.058 565.893,653.009 566.453,657.66 567.012,678.894 567.571,681.128 568.13,683.98 568.69,669.168 569.249,706.301 569.808,708.843 570.367,705.927 570.927,704.471 571.486,688.154 572.045,688.368 572.604,704.602 573.164,685.658 573.723,687.964 574.282,690.603 574.841,738.724 575.401,752.432 575.96,769.234 576.519,781.955 577.078,781.039 577.638,758.683 578.197,773.329 578.756,783.4 579.315,763.088 579.875,728.192 580.434,744.094 580.993,728.085 581.552,726.877 582.112,743.338 582.671,724.327 583.23,723.49 583.789,721.804 584.349,737.047 584.908,738.739 585.467,754.449 586.026,784.961 586.586,767.616 587.145,780.499 587.704,773.895 588.263,799.838 588.823,759.822 589.382,740.801 589.941,723.9 590.5,722.516 591.06,737.023 591.619,768.1 592.178,750.625 592.737,714.898 593.297,713.464 593.856,729.91 594.415,695.873 594.974,680.043 595.534,694.728 596.093,664.323 596.652,664.974 597.211,681.716 597.771,693.246 598.33,662.448 598.889,664.894 599.448,648.344 600.008,650.019 600.567,651.545 601.126,623.786 601.685,595.203 602.245,618.011 602.804,641.316 603.363,626.474 603.922,617.436 604.482,607.306 605.041,647.447 605.6,649.536 606.159,652.47 606.719,641.121 607.278,611.638 607.837,615.973 608.396,639.027 608.956,660.969 609.515,647.097 610.074,633.257 610.633,635.143 611.193,624.043 611.752,593.83 612.311,599.664 612.87,638.697 613.43,674.536 613.989,675.596 614.548,726.165 615.107,692.095 615.667,687.972 616.226,685.361 616.785,703.249 617.344,717.627 617.904,764.773 618.463,764.796 619.022,780.645 619.581,760.84 620.141,741.008 620.7,735.994 621.259,717.944 621.818,702.44 622.378,702.83 622.937,719.503 623.496,696.969 624.055,697.313 624.615,728.532 625.174,743.47 625.733,755.206 626.292,738.471 626.852,783.953 627.411,778.534 627.97,761.073 628.529,758.224 629.089,788.379 629.648,784.685 630.207,762.524 630.766,776.455 631.326,772.976 631.885,786.739 632.444,780.299 633.003,776.46 633.563,770.396 634.122,752.386 634.681,718.327 635.24,746.779 635.8,743.523 636.359,725.556 636.918,740.925 637.477,724.814 638.037,758.092 638.596,753.088 639.155,749.411 639.714,731.276 640.274,731.117 640.833,730.528 641.392,730.509 641.951,743.582 642.511,726.452 643.07,727.54 643.629,726.767 644.188,740.786 644.748,709.283 645.307,741.303 645.866,772.743 646.425,767.313 646.985,814.154 647.544,775.985 648.103,740.743 648.662,738.432 649.222,705.404 649.781,687.966 650.34,670.566 650.899,688.757 651.459,692.074 652.018,725.279 652.577,742.657 653.136,760.023 653.696,790.686 654.255,769.572 654.814,768.009 655.373,732.336 655.933,745.517 656.492,762.818 657.051,743.995 657.61,790.671 658.17,769.899 658.729,765.572 659.288,775.709 659.847,755.074 660.407,738.543 660.966,766.514 661.525,727.022 662.084,725.599 662.644,742.15 663.203,770.092 663.762,734.958 664.321,778.087 664.881,789.091 665.44,802.634 665.999,781.778 666.558,763.329 667.118,762.478 667.677,741.048 668.236,722.426 668.795,738.909 669.355,704.323 669.914,748.094 670.473,746.446 671.032,730.39 671.592,728.043 672.151,689.595 672.71,672.072 673.269,670.67 673.829,654.412 674.388,656.309 674.947,656.484 675.506,626.585 676.066,614.43 676.625,630.738 677.184,617.652 677.743,616.802 678.303,605.202 678.862,625.022 679.421,660.613 679.981,631.919 680.54,638.928 681.099,674.537 681.658,675.392 682.218,693.838 682.777,739.922 683.336,754.468 683.895,768.83 684.455,768.647 685.014,734.249 685.573,717.531 686.132,700.705 686.692,638.195 687.251,653.189 687.81,624.868 688.369,628.768 688.929,631.491 689.488,635.602 690.047,625.129 690.606,627.078 691.166,647.386 691.725,667.902 692.284,667.136 692.843,667.798 693.403,651.923 693.962,649.66 694.521,636.629 695.08,673.104 695.64,692.935 696.199,705.54 696.758,673.23 697.317,673.327 697.877,659.658 698.436,662.772 698.995,664.229 699.554,663.963 700.114,699.112 700.673,715.627 701.232,717.12 701.791,715.651 702.351,731.843 702.91,731.359 703.469,715.121 704.028,715.79 704.588,699.861 705.147,685.534 705.706,701.976 706.265,717.723 706.825,716.541 707.384,697.627 707.943,698.06 708.502,680.669 709.062,683.848 709.621,668.64 710.18,668.365 710.739,686.333 711.299,687.751 711.858,641.487 712.417,678.202 712.976,711.355 713.536,712.05 714.095,725.431 714.654,710.356 715.213,758.199 715.773,741.386 716.332,769.345 716.891,751.578 717.45,750.979 718.01,749.197 718.569,744.692 719.128,709.669 719.687,643.79 720.247,629.616 720.806,633.612 721.365,653.089 721.924,654.962 722.484,705.267 723.043,683.817 723.602,713.618 724.161,662.573 724.721,648.817 725.28,651.596 725.839,655.174 726.398,639.564 726.958,655.891 727.517,659.271 728.076,674.466 728.635,656.577 729.195,692.177 729.754,673.884 730.313,657.428 730.872,658.127 731.432,628.909 731.991,631.806 732.55,667.021 733.109,683.049 733.669,668.61 734.228,685.361 734.787,749.06 735.346,744.057 735.906,756.267 736.465,787.533 737.024,764.454 737.583,745.33 738.143,771.653 738.702,765.752 739.261,759.738 739.82,755.366 740.38,751.595 740.939,733.45 741.498,712.068 742.057,661.251 742.617,661.839 743.176,660.749 743.735,631.027 744.294,652.702 744.854,667.517 745.413,687.902 745.972,705.144 746.531,703.989 747.091,722.231 747.65,740.307 748.209,705.867 748.768,671.924 749.328,656.859 749.887,662.065 750.446,662.823 751.005,680.68 751.565,680.644 752.124,648.289 752.683,633.913 753.242,637.166 753.802,622.929 754.361,627.562 754.92,644.532 755.479,649.169 756.039,617.366 756.598,637.874 757.157,675.03 757.716,659.808 758.276,659.358 758.835,646.214 759.394,661.627 759.953,680.914 760.513,695.638 761.072,679.579 761.631,663.256 762.19,714.226 762.75,679.528 763.309,664.38 763.868,648.653 764.427,644.941 764.987,647.297 765.546,668.533 766.105,698.362 766.664,682.76 767.224,683.825 767.783,683.476 768.342,654.045 768.901,690.025 769.461,753.422 770.02,745.145 770.579,731.488 771.138,744.164 771.698,776.244 772.257,756.983 772.816,770.14 773.375,801.315 773.935,814.424 774.494,792.248 775.053,769.806 775.612,765.343 776.172,798.641 776.731,746.82 777.29,731.615 777.849,715.111 778.409,714.155 778.968,729.933 779.527,724.689 780.086,773.439 780.646,801.563 781.205,813.608 781.764,808.187 782.323,802.377 782.883,749.052 783.442,747.156 784.001,743.247 784.56,708.084 785.12,690.685 785.679,655.647 786.238,652.327 786.797,639.348 787.357,643.302 787.916,650.224 788.475,666.775 789.034,684.517 789.594,668.42 790.153,703.341 790.712,670.506 791.271,667.458 791.831,685.851 792.39,701.67 792.949,733.451 793.508,745.256 794.068,725.939 794.627,736.985 795.186,733.424 795.745,730.63 796.305,760.682 796.864,778.157 797.423,775.326 797.982,799.493 798.542,810.595 799.101,803.733 799.66,767.08 800.219,779.423 800.779,809.128 801.338,819.892 801.897,780.464 802.456,822.299 803.016,800.344 803.575,793.897 804.134,801.119 804.693,831.227 805.253,823.208 805.812,798.626 806.371,809.294 806.931,791.461 807.49,752.162 808.049,731.686 808.608,711.887 809.168,726.446 809.727,741.882 810.286,720.69 810.845,734.376 811.405,685.213 811.964,701.901 812.523,697.799 813.082,714.152 813.642,730.471 814.201,710.073 814.76,707.698 815.319,704.87 815.879,703.207 816.438,654.723 816.997,656.587 817.556,640.568 818.116,640.628 818.675,637.558 819.234,625.305 819.793,647.805 820.353,650.147 820.912,603.121 821.471,572.034 822.03,597.992 822.59,586.649 823.149,561.959 823.708,587.96 824.267,577.822 824.827,583.839 825.386,606.257 825.945,594.313 826.504,614.655 827.064,615.948 827.623,634.227 828.182,652.341 828.741,671.989 829.301,640.245 829.86,627.203 830.419,648.324 830.978,651.438 831.538,620.242 832.097,606.224 832.656,594.434 833.215,615.94 833.775,650.838 834.334,668.176 834.893,638.408 835.452,621.57 836.012,640.017 836.571,627.635 837.13,619.367 837.689,623.31 838.249,643.004 838.808,645.703 839.367,646.673 839.926,681.146 840.486,633.662 841.045,685.526 841.604,653.641 842.163,668.958 842.723,666.804 843.282,682.45 843.841,712.221 844.4,726.906 844.96,693.151 845.519,694.228 846.078,645.403 846.637,650.712 847.197,652.333 847.756,625.561 848.315,611.787 848.874,616.877 849.434,604.417 849.993,609.921 850.552,649.047 851.111,682.257 851.671,700.396 852.23,718.962 852.789,736.71 853.348,736.12 853.908,736.287 854.467,717.33 855.026,701.709 855.585,701.56 856.145,733.195 856.704,714.127 857.263,716.884 857.822,713.428 858.382,760.529 858.941,774.087 859.5,754.53 860.059,750.754 860.619,763.461 861.178,759.716 861.737,723.745 862.296,704.563 862.856,722.1 863.415,720.445 863.974,718.563 864.533,699.427 865.093,694.226 865.652,658.988 866.211,674.614 866.77,726.547 867.33,742.428 867.889,742.601 868.448,753.934 869.007,717.181 869.567,734.78 870.126,763.464 870.685,758.524 871.244,755.386 871.804,753.244 872.363,735.617 872.922,732.55 873.481,713.154 874.041,698.547 874.6,710.197 875.159,722.182 875.718,719.73 876.278,717.512 876.837,698.837 877.396,728.042 877.955,740.96 878.515,710.038 879.074,726.892 879.633,710.075 880.192,693.101 880.752,690.873 881.311,709.996 881.87,724.876 882.429,720.095 882.989,735.188 883.548,751.681 884.107,777.658 884.666,754.282 885.226,750.148 885.785,743.145 886.344,738.861 886.903,719.814 887.463,716.357 888.022,699.076 888.581,699.634 889.14,701.373 889.7,669.455 890.259,689.163 890.818,638.035 891.377,636.918 891.937,641.239 892.496,627.052 893.055,613.867 893.614,599.196 894.174,619.17 894.733,654.348 895.292,656.057 895.851,673.912 896.411,688.213 896.97,673.075 897.529,719.726 898.088,715.166 898.648,710.51 899.207,679.971 899.766,697.659 900.325,696.885 900.885,695.638 901.444,747.802 902.003,712.013 902.562,708.643 903.122,705.47 903.681,689.467 904.24,674.404 904.799,641.054 905.359,626.42 905.918,614.987 906.477,620.49 907.036,624.383 907.596,627.399 908.155,582.695 908.714,571.187 909.273,576.289 909.833,567.08 910.392,576.299 910.951,568.275 911.51,592.528 912.07,616.831 912.629,635.055 913.188,619.87 913.747,607.908 914.307,613.339 914.866,633.984 915.425,652.163 915.984,651.947 916.544,669.079 917.103,681.624 917.662,684.211 918.221,671.939 918.781,723.056 919.34,706.512 919.899,720.794 920.458,684.194 921.018,690.664 921.577,691.593 922.136,710.224 922.695,709.353 923.255,723.384 923.814,719.708 924.373,733.241 924.932,712.836 925.492,708.814 926.051,722.392 926.61,718.98 927.169,701.16 927.729,685.485 928.288,670.731 928.847,672.316 929.406,690.245 929.966,741.195 930.525,686.44 931.084,638.86 931.644,674.38 932.203,690.215 932.762,708.638 933.321,708.189 933.881,718.289 934.44,699.954 934.999,716.826 935.558,717.499 936.118,761.47 936.677,711.201 937.236,694.381 937.795,706.909 938.355,705.173 938.914,687.038 939.473,690.154 940.032,690.668 940.592,687.009 941.151,671.595 941.71,671.463 942.269,673.554 942.829,659.182 943.388,645.628 943.947,648.658 944.506,574.333 945.066,599.081 945.625,589.669 946.184,630.036 946.743,666.266 947.303,699.523 947.862,666.753 948.421,714.433 948.98,713.653 949.54,730.433 950.099,742.381 950.658,738.357 951.217,718.81 951.777,715.948 952.336,746.058 952.895,727.571 953.454,677.627 954.014,680.116 954.573,694.253 955.132,695.103 955.691,758.754 956.251,737.765 956.81,735.155 957.369,714.159 957.928,696.321 958.488,685.063 959.047,700.021 959.606,681.037 960.165,682.529 960.725,669.064 961.284,638.428 961.843,644.281 962.402,658.711 962.962,675.869 963.521,692.145 964.08,708.073 964.639,705.149 965.199,721.033 965.758,719.136 966.317,697.957 966.876,663.981 967.436,668.64 967.995,654.699 968.554,657.48 969.113,639.975 969.673,627.883 970.232,664.127 970.791,666.082 971.35,667.346 971.91,684.286 972.469,686.162 973.028,686.499 973.587,684.24 974.147,702.448 974.706,717.679 975.265,731.079 975.824,678.411 976.384,694.643 976.943,696.754 977.502,664.24 978.061,667.042 978.621,683.676 979.18,699.461 979.739,718.914 980.298,752.119 980.858,747.824 981.417,747.006 981.976,742.087 982.535,758.355 983.095,722.201 983.654,702.617 984.213,698.789 984.772,678.606 985.332,682.681 985.891,681.529 986.45,664.053 987.009,665.948 987.569,669.03 988.128,622.728 988.687,595.55 989.246,582.659 989.806,619.063 990.365,603.68 990.924,627.078 991.483,613.728 992.043,631.769 992.602,664.896 993.161,667.524 993.72,638.426 994.28,623.561 994.839,608.086 995.398,596.84 995.957,606.014 996.517,625.979 997.076,647.705 997.635,647.591 998.194,666.378 998.754,634.935 999.313,653.412 999.872,691.205 1000.43,677.012 1000.99,662.911 1001.55,665.004 1002.11,651.423 1002.67,666.997 1003.23,668.318 1003.79,684.2 1004.35,700.441 1004.91,701.293 1005.46,699.985 1006.02,713.349 1006.58,709.944 1007.14,692.246 1007.7,707.784 1008.26,706.93 1008.82,690.199 1009.38,673.035 1009.94,676.29 1010.5,646.271 1011.06,633.026 1011.62,686.426 1012.18,715.713 1012.73,714.955 1013.29,713.979 1013.85,725.844 1014.41,757.489 1014.97,753.7 1015.53,747.707 1016.09,762.704 1016.65,741.444 1017.21,758.411 1017.77,756.974 1018.33,772.193 1018.89,750.925 1019.45,747.226 1020.01,724.781 1020.56,739.318 1021.12,721.852 1021.68,673.084 1022.24,643.34 1022.8,676.111 1023.36,678.736 1023.92,680.624 1024.48,682.458 1025.04,669.846 1025.6,670.789 1026.16,638.75 1026.72,676.262 1027.28,706.334 1027.83,702.113 1028.39,715.937 1028.95,699.162 1029.51,669.217 1030.07,684.582 1030.63,687.388 1031.19,701.784 1031.75,715.764 1032.31,712.431 1032.87,728.048 1033.43,741.02 1033.99,736.927 1034.55,752.193 1035.1,779.242 1035.66,822.452 1036.22,797.536 1036.78,776.831 1037.34,753.433 1037.9,734.082 1038.46,742.866 1039.02,691.07 1039.58,673.92 1040.14,658.334 1040.7,628.431 1041.26,583.733 1041.82,619.497 1042.38,605.736 1042.93,593.042 1043.49,583.25 1044.05,574.782 1044.61,579.948 1045.17,603.97 1045.73,594.423 1046.29,584.427 1046.85,556.603 1047.41,565.274 1047.97,592.301 1048.53,598.141 1049.09,602.438 1049.65,608.788 1050.2,614.335 1050.76,622.009 1051.32,593.325 1051.88,615.415 1052.44,619.377 1053,637.745 1053.56,653.886 1054.12,636.668 1054.68,605.08 1055.24,640.799 1055.8,656.137 1056.36,657.982 1056.92,694.401 1057.48,710.181 1058.03,710.94 1058.59,725.938 1059.15,724.788 1059.71,704.25 1060.27,703.844 1060.83,670.607 1061.39,702.827 1061.95,718.185 1062.51,733.561 1063.07,762.765 1063.63,743.846 1064.19,741.617 1064.75,705.571 1065.3,686.927 1065.86,701.917 1066.42,686.144 1066.98,686.035 1067.54,685.66 1068.1,673.457 1068.66,672.446 1069.22,661.472 1069.78,662.693 1070.34,631.722 1070.9,650.86 1071.46,684.723 1072.02,697.358 1072.57,711.275 1073.13,739.84 1073.69,735.844 1074.25,731.118 1074.81,728.252 1075.37,693.313 1075.93,696.603 1076.49,664.359 1077.05,635.679 1077.61,593.751 1078.17,597.445 1078.73,618.804 1079.29,622.951 1079.85,622.172 1080.4,623.822 1080.96,631.734 1081.52,648.251 1082.08,684.258 1082.64,668.849 1083.2,714.529 1083.76,710.127 1084.32,705.408 1084.88,707.129 1085.44,706.302 1086,702.312 1086.56,700.342 1087.12,686.499 1087.67,704.055 1088.23,720.319 1088.79,671.092 1089.35,673.48 1089.91,659.234 1090.47,692.522 1091.03,692.784 1091.59,691.858 1092.15,691.631 1092.71,673.107 1093.27,671.828 1093.83,674.389 1094.39,658.296 1094.94,674.919 1095.5,692.12 1096.06,674.125 1096.62,677.754 1097.18,677.635 1097.74,709.124 1098.3,692.422 1098.86,693.995 1099.42,696.702 1099.98,666.604 1100.54,635.337 1101.1,602.694 1101.66,623.899 1102.22,611.347 1102.77,647.9 1103.33,635.038 1103.89,636.389 1104.45,639.497 1105.01,626.305 1105.57,630.212 1106.13,635.23 1106.69,653.365 1107.25,638.768 1107.81,629.931 1108.37,630.347 1108.93,632.575 1109.49,667.31 1110.04,667.802 1110.6,666.364 1111.16,651.846 1111.72,671.512 1112.28,669.702 1112.84,704.187 1113.4,701.94 1113.96,685.929 1114.52,735.336 1115.08,716.626 1115.64,727.742 1116.2,726.439 1116.76,728.399 1117.31,760.582 1117.87,774.865 1118.43,752.516 1118.99,763.052 1119.55,745.926 1120.11,725.129 1120.67,722.393 1121.23,687.803 1121.79,737.481 1122.35,734.018 1122.91,745.659 1123.47,754.719 1124.03,735.397 1124.59,733.55 1125.14,742.737 1125.7,739.671 1126.26,738.338 1126.82,787.732 1127.38,781.673 1127.94,761.992 1128.5,758.85 1129.06,786.524 1129.62,795.169 1130.18,810.384 1130.74,840.151 1131.3,812.082 1131.86,786.842 1132.41,782.705 1132.97,758.792 1133.53,720.651 1134.09,717.447 1134.65,728.424 1135.21,725.461 1135.77,740.519 1136.33,725.251 1136.89,724.202 1137.45,726.411 1138.01,724.753 1138.57,706.885 1139.13,706.706 1139.68,688.659 1140.24,701.676 1140.8,684.449 1141.36,696.424 1141.92,662.877 1142.48,682.28 1143.04,648.801 1143.6,601.867 1144.16,639.545 1144.72,609.871 1145.28,615.429 1145.84,634.047 1146.4,636.216 1146.96,652.967 1147.51,634.184 1148.07,617.191 1148.63,617.36 1149.19,605.322 1149.75,610.857 1150.31,583.694 1150.87,602.797 1151.43,624.807 1151.99,646.671 1152.55,665.498 1153.11,668.457 1153.67,670.629 1154.23,671.13 1154.78,670.638 1155.34,683.289 1155.9,665.836 1156.46,714.262 1157.02,678.762 1157.58,679.419 1158.14,666.392 1158.7,718.074 1159.26,734.362 1159.82,730.748 1160.38,729.948 1160.94,725.819 1161.5,738.113 1162.05,734.95 1162.61,735.617 1163.17,748.97 1163.73,712.748 1164.29,691.345 1164.85,691.799 1165.41,691.342 1165.97,705.265 1166.53,736.364 1167.09,731.622 1167.65,712.877 1168.21,724.937 1168.77,693.775 1169.33,691.308 1169.88,675.416 1170.44,659.57 1171,642.083 1171.56,629.692 1172.12,650.393 1172.68,635.198 1173.24,639.134 1173.8,688.051 1174.36,690.08 1174.92,705.571 1175.48,672.114 1176.04,672.931 1176.6,673.392 1177.15,659.149 1177.71,679.307 1178.27,696.922 1178.83,698.831 1179.39,695.8 1179.95,661.507 1180.51,711.85 1181.07,742.924 1181.63,738.223 1182.19,684.333 1182.75,683.859 1183.31,683.229 1183.87,673.077 1184.43,638.799 1184.98,641.665 1185.54,645.037 1186.1,650.303 1186.66,670.609 1187.22,689.437 1187.78,703.275 1188.34,717.242 1188.9,713.377 1189.46,727.978 1190.02,726.408 1190.58,708.577 1191.14,709.836 1191.7,675.422 1192.25,672.766 1192.81,671.651 1193.37,673.35 1193.93,611.003 1194.49,565.303 1195.05,539.378 1195.61,514.139 1196.17,540.066 1196.73,563.38 1197.29,584.247 1197.85,605.328 1198.41,622.163 1198.97,628.53 1199.52,644.971 1200.08,680.107 1200.64,698.664 1201.2,715.464 1201.76,711.042 1202.32,726.21 1202.88,710.795 1203.44,709.104 1204,694.181 1204.56,724.61 1205.12,690.164 1205.68,693.168 1206.24,676.265 1206.8,723.554 1207.35,705.048 1207.91,704.158 1208.47,731.629 1209.03,746.144 1209.59,758.546 1210.15,755.828 1210.71,768.764 1211.27,764.195 1211.83,757.456 1212.39,724.478 1212.95,720.322 1213.51,702.963 1214.07,723.082 1214.62,690.603 1215.18,673.862 1215.74,710.508 1216.3,723.396 1216.86,689.52 1217.42,689.738 1217.98,659.596 1218.54,626.552 1219.1,623.931 1219.66,628.265 1220.22,664.817 1220.78,633.071 1221.34,636.25 1221.89,638.497 1222.45,637.641 1223.01,652.092 1223.57,655.317 1224.13,654.673 1224.69,672.604 1225.25,673.381 1225.81,671.833 1226.37,685.197 1226.93,702.571 1227.49,730.405 1228.05,713.454 1228.61,728.907 1229.17,730.205 1229.72,727.545 1230.28,697.033 1230.84,678.479 1231.4,691.885 1231.96,661.798 1232.52,626.68 1233.08,626.602 1233.64,628.614 1234.2,632.706 1234.76,650.273 1235.32,653.457 1235.88,655.708 1236.44,640.939 1236.99,642.347 1237.55,646.145 1238.11,665.72 1238.67,654.18 1239.23,655.729 1239.79,624.654 1240.35,626.182 1240.91,629.294 1241.47,618.862 1242.03,627.085 1242.59,646.119 1243.15,666.273 1243.71,682.571 1244.26,662.66 1244.82,660.812 1245.38,645.417 1245.94,663.761 1246.5,680.836 1247.06,761.999 1247.62,757.71 1248.18,771.17 1248.74,764.237 1249.3,760.58 1249.86,707.292 1250.42,723.988 1250.98,752.099 1251.54,763.521 1252.09,761.792 1252.65,757.429 1253.21,802.436 1253.77,775.668 1254.33,765.738 1254.89,744.939 1255.45,727.173 1256.01,741.141 1256.57,736.683 1257.13,719.666 1257.69,701.829 1258.25,700.359 1258.81,713.797 1259.36,712.628 1259.92,712.007 1260.48,708.316 1261.04,707.417 1261.6,706.698 1262.16,706.349 1262.72,704.583 1263.28,653.065 1263.84,620.011 1264.4,608.645 1264.96,596.031 1265.52,664.361 1266.08,648.081 1266.63,631.592 1267.19,648.456 1267.75,684.695 1268.31,683.831 1268.87,668.843 1269.43,670.481 1269.99,672.093 1270.55,672.6 1271.11,690.798 1271.67,659.927 1272.23,613.538 1272.79,649.569 1273.35,620.864 1273.91,639.938 1274.46,643.817 1275.02,645.979 1275.58,647.49 1276.14,633.108 1276.7,621.582 1277.26,611.488 1277.82,631.83 1278.38,601.791 1278.94,591.811 1279.5,614.224 1280.06,600.418 1280.62,621.003 1281.18,626.355 1281.73,644.425 1282.29,643.259 1282.85,612.882 1283.41,616.777 1283.97,637.538 1284.53,653.756 1285.09,637.729 1285.65,640.023 1286.21,641.324 1286.77,692.344 1287.33,694.988 1287.89,661.337 1288.45,681.445 1289,666.394 1289.56,682.278 1290.12,665.064 1290.68,666.101 1291.24,683.627 1291.8,716.683 1292.36,716.326 1292.92,679.953 1293.48,667.391 1294.04,664.236 1294.6,648.999 1295.16,683.671 1295.72,684.76 1296.28,698.826 1296.83,684.012 1297.39,680.128 1297.95,727.713 1298.51,728.585 1299.07,728.107 1299.63,744.611 1300.19,758.973 1300.75,768.205 1301.31,797.618 1301.87,789.194 1302.43,767.49 1302.99,746.162 1303.55,756.988 1304.1,784.376 1304.66,777.456 1305.22,772.159 1305.78,783.298 1306.34,765.364 1306.9,759.42 1307.46,758.47 1308.02,741.276 1308.58,735.568 1309.14,716.458 1309.7,713.132 1310.26,730.776 1310.82,745.914 1311.38,693.557 1311.93,707.951 1312.49,706.86 1313.05,686.914 1313.61,687.008 1314.17,688.247 1314.73,708.06 1315.29,706.486 1315.85,750.815 1316.41,775.367 1316.97,754.575 1317.53,732.72 1318.09,748.845 1318.65,728.442 1319.2,677.531 1319.76,676.328 1320.32,707.363 1320.88,687.486 1321.44,686.945 1322,683.954 1322.56,701.899 1323.12,683.294 1323.68,648.916 1324.24,651.637 1324.8,690.434 1325.36,675.04 1325.92,675.647 1326.47,690.81 1327.03,722.225 1327.59,768.741 1328.15,777.254 1328.71,777.028 1329.27,740.247 1329.83,704.787 1330.39,723.677 1330.95,754.787 1331.51,758.516 1332.07,754.97 1332.63,735.608 1333.19,749.029 1333.75,778.558 1334.3,773.189 1334.86,753.181 1335.42,751.736 1335.98,749.769 1336.54,749.374 1337.1,760.763 1337.66,753.49 1338.22,768.981 1338.78,747.817 1339.34,726.004 1339.9,707.342 1340.46,705.513 1341.02,656.946 1341.57,591.92 1342.13,579.35 1342.69,587.058 1343.25,609.59 1343.81,596.333 1344.37,616.765 1344.93,604.529 1345.49,609.197 1346.05,600.909 1346.61,619.13 1347.17,622.671 1347.73,627.392 1348.29,631.673 1348.84,616.264 1349.4,601.665 1349.96,593.005 1350.52,582.844 1351.08,621.687 1351.64,623.762 1352.2,642.918 1352.76,629.254 1353.32,631.373 1353.88,665.465 1354.44,699.227 1355,663.695 1355.56,682.509 1356.12,733.595 1356.67,714.632 1357.23,698.672 1357.79,714.184 1358.35,729.443 1358.91,725.476 1359.47,693.376 1360.03,709.612 1360.59,722.439 1361.15,751.574 1361.71,732.965 1362.27,732.945 1362.83,718.2 1363.39,747.145 1363.94,762.117 1364.5,791.673 1365.06,820.502 1365.62,828.806 1366.18,820.704 1366.74,816.25 1367.3,822.606 1367.86,814.255 1368.42,836.434 1368.98,794.339 1369.54,853.905 1370.1,843.363 1370.66,800.994 1371.21,794.732 1371.77,787.801 1372.33,784.602 1372.89,741.036 1373.45,772.13 1374.01,770.986 1374.57,733.033 1375.13,711.995 1375.69,710.053 1376.25,725.865 1376.81,708.319 1377.37,706.523 1377.93,655.428 1378.49,655.844 1379.04,655.743 1379.6,640.157 1380.16,657.242 1380.72,676.619 1381.28,692.537 1381.84,707.792 1382.4,661.534 1382.96,659.282 1383.52,658.591 1384.08,641.152 1384.64,610.235 1385.2,629.76 1385.76,632.287 1386.31,648.041 1386.87,666.047 1387.43,670.144 1387.99,668.275 1388.55,665.898 1389.11,681.677 1389.67,669.9 1390.23,669.805 1390.79,638.173 1391.35,654.113 1391.91,637.27 1392.47,653.944 1393.03,655.144 1393.58,673.111 1394.14,658.514 1394.7,674.445 1395.26,677.926 1395.82,676.52 1396.38,693.358 1396.94,693.204 1397.5,740.317 1398.06,736.944 1398.62,734.831 1399.18,737.611 1399.74,784.591 1400.3,811.887 1400.86,822.614 1401.41,819.39 1401.97,798.766 1402.53,790.74 1403.09,768.096 1403.65,796.857 1404.21,758.27 1404.77,788.659 1405.33,799.995 1405.89,762.076 1406.45,727.459 1407.01,743.879 1407.57,741.685 1408.13,707.979 1408.68,689.776 1409.24,701.789 1409.8,702.084 1410.36,716.821 1410.92,719.405 1411.48,704.926 1412.04,673.159 1412.6,752.802 1413.16,734.838 1413.72,684.89 1414.28,685.868 1414.84,719.759 1415.4,662.961 1415.95,695.011 1416.51,675.702 1417.07,627.225 1417.63,635.12 1418.19,603.539 1418.75,610.312 1419.31,629.35 1419.87,634.646 1420.43,636.259 1420.99,655.68 1421.55,625.257 1422.11,579.631 1422.67,583.591 1423.23,590.339 1423.78,577.209 1424.34,600.487 1424.9,588.138 1425.46,578.045 1426.02,588.082 1426.58,577.651 1427.14,615.573 1427.7,619.278 1428.26,672.975 1428.82,662.005 1429.38,679.182 1429.94,696.785 1430.5,645.039 1431.05,680.68 1431.61,714.238 1432.17,695.326 1432.73,710.959 1433.29,695.055 1433.85,712.232 1434.41,709.443 1434.97,758.164 1435.53,706.601 1436.09,639.659 1436.65,640.83 1437.21,661.222 1437.77,663.574 1438.33,664.541 1438.88,615.356 1439.44,618.275 1440,621.008 1440.56,629.414 1441.12,617.406 1441.68,635.637 1442.24,586.842 1442.8,592.595 1443.36,598.189 1443.92,617.397 1444.48,607.916 1445.04,610.961 1445.6,582.25 1446.15,601.023 1446.71,604.363 1447.27,623.563 1447.83,659.49 1448.39,642.859 1448.95,646.005 1449.51,634.641 1450.07,655.348 1450.63,656.973 1451.19,641.586 1451.75,646.469 1452.31,634.945 1452.87,637.472 1453.42,639.804 1453.98,672.802 1454.54,706.96 1455.1,708.644 1455.66,674.036 1456.22,705.541 1456.78,705.731 1457.34,752.575 1457.9,752.843 1458.46,753.315 1459.02,769.599 1459.58,781.246 1460.14,777.174 1460.7,787.285 1461.25,782.934 1461.81,779.238 1462.37,808.196 1462.93,772.327 1463.49,767.3 1464.05,782.439 1464.61,713.825 1465.17,714.295 1465.73,698.697 1466.29,717.022 1466.85,717.733 1467.41,684.432 1467.97,683.2 1468.52,682.205 1469.08,683.243 1469.64,679.959 1470.2,697.987 1470.76,678.131 1471.32,629.583 1471.88,616.839 1472.44,636.538 1473,620.803 1473.56,609.152 1474.12,616.668 1474.68,651.114 1475.24,648.419 1475.79,632.075 1476.35,652.453 1476.91,669.154 1477.47,686.837 1478.03,685.047 1478.59,668.983 1479.15,688.156 1479.71,705.264 1480.27,705.847 1480.83,676.113 1481.39,627.01 1481.95,613.464 1482.51,633.248 1483.07,602.792 1483.62,640.965 1484.18,643.507 1484.74,647.127 1485.3,634.395 1485.86,651.637 1486.42,668.642 1486.98,686.242 1487.54,668.442 1488.1,685.734 1488.66,675.949 1489.22,660.088 1489.78,661.079 1490.34,662.236 1490.89,729.534 1491.45,745.232 1492.01,756.962 1492.57,735.646 1493.13,730.575 1493.69,777.412 1494.25,742.704 1494.81,769.168 1495.37,764.855 1495.93,793.858 1496.49,758.48 1497.05,720.136 1497.61,734.335 1498.16,731.892 1498.72,731.357 1499.28,741.815 1499.84,722.59 1500.4,702.955 1500.96,749.611 1501.52,745.293 1502.08,710.425 1502.64,691.217 1503.2,706.249 1503.76,720.583 1504.32,716.629 1504.88,695.237 1505.44,683.926 1505.99,650.693 1506.55,653.652 1507.11,653.353 1507.67,639.052 1508.23,657.112 1508.79,659.984 1509.35,647.592 1509.91,636.509 1510.47,640.285 1511.03,660.738 1511.59,663.424 1512.15,628.061 1512.71,614.173 1513.26,600.441 1513.82,603.7 1514.38,609.312 1514.94,629.494 1515.5,633.82 1516.06,637.702 1516.62,628.314 1517.18,630.674 1517.74,649.397 1518.3,647.716 1518.86,666.494 1519.42,667.008 1519.98,653.053 1520.53,653.378 1521.09,684.05 1521.65,681.378 1522.21,663.575 1522.77,678.634 1523.33,682.776 1523.89,686.843 1524.45,705.525 1525.01,675.382 1525.57,658.753 1526.13,676.341 1526.69,675.798 1527.25,643.482 1527.81,645.111 1528.36,647.99 1528.92,650.53 1529.48,668.426 1530.04,634.354 1530.6,554.069 1531.16,544.845 1531.72,565.754 1532.28,575.063 1532.84,593.402 1533.4,581.739 1533.96,571.886 1534.52,580.712 1535.08,584.058 1535.63,594.83 1536.19,618.213 1536.75,610.425 1537.31,598.715 1537.87,588.299 1538.43,576.896 1538.99,616.417 1539.55,634.728 1540.11,656.181 1540.67,692.658 1541.23,692.64 1541.79,691.401 1542.35,708.585 1542.9,705.363 1543.46,705.359 1544.02,721.85 1544.58,715.802 1545.14,697.833 1545.7,679.256 1546.26,711.467 1546.82,725.581 1547.38,724.899 1547.94,724.097 1548.5,738.402 1549.06,754.036 1549.62,749.43 1550.18,743.183 1550.73,725.421 1551.29,722.214 1551.85,719.607 1552.41,704.3 1552.97,689.405 1553.53,654.39 1554.09,642.023 1554.65,676.892 1555.21,696.423 1555.77,708.96 1556.33,709.577 1556.89,707.861 1557.45,705.524 1558,707.9 1558.56,691.386 1559.12,690.895 1559.68,689.604 1560.24,686.439 1560.8,671.099 1561.36,652.521 1561.92,656.836 1562.48,704.69 1563.04,706.059 1563.6,721.021 1564.16,748.048 1564.72,754.84 1565.28,767.131 1565.83,779.646 1566.39,726.947 1566.95,723.13 1567.51,737.082 1568.07,749.016 1568.63,780.41 1569.19,742.107 1569.75,723.709 1570.31,715.566 1570.87,702.268 1571.43,685.952 1571.99,650.631 1572.55,648.894 1573.1,663.901 1573.66,650.274 1574.22,667.456 1574.78,650.962 1575.34,669.431 1575.9,687.701 1576.46,719.44 1577.02,734.2 1577.58,730.068 1578.14,729.412 1578.7,726.39 1579.26,723.155 1579.82,722.103 1580.37,705.474 1580.93,720.014 1581.49,704.096 1582.05,702.644 1582.61,733.5 1583.17,730.413 1583.73,761.174 1584.29,753.299 1584.85,702.35 1585.41,718.535 1585.97,717.031 1586.53,730.439 1587.09,743.326 1587.65,786.651 1588.2,798.763 1588.76,794.777 1589.32,773.917 1589.88,763.936 1590.44,743.252 1591,739.532 1591.56,734.967 1592.12,747.379 1592.68,728.591 1593.24,711.227 1593.8,677.556 1594.36,691.235 1594.92,707.617 1595.47,707.733 1596.03,639.607 1596.59,691.226 1597.15,690.485 1597.71,739.592 1598.27,734.592 1598.83,748.676 1599.39,743.295 1599.95,786.073 1600.51,766.637 1601.07,715.693 1601.63,713.506 1602.19,711.202 1602.74,723.726 1603.3,708.019 1603.86,723.113 1604.42,671.087 1604.98,671.732 1605.54,672.354 1606.1,672.345 1606.66,622.703 1607.22,608.555 1607.78,597.741 1608.34,584.363 1608.9,587.167 1609.46,559.436 1610.02,568.362 1610.57,574.027 1611.13,577.598 1611.69,581.968 1612.25,587.269 1612.81,589.139 1613.37,624.646 1613.93,613.541 1614.49,651.372 1615.05,654.201 1615.61,689.587 1616.17,683.064 1616.73,663.589 1617.29,650.734 1617.84,651.465 1618.4,683.039 1618.96,666.643 1619.52,680.886 1620.08,699.353 1620.64,669.018 1621.2,700.61 1621.76,687.498 1622.32,655.816 1622.88,660.029 1623.44,661.31 1624,679.321 1624.56,701.437 1625.11,698.793 1625.67,728.65 1626.23,708.584 1626.79,708.88 1627.35,692.888 1627.91,709.517 1628.47,724.763 1629.03,751.771 1629.59,735.288 1630.15,719.036 1630.71,683.358 1631.27,683.931 1631.83,699.521 1632.39,697.782 1632.94,714.381 1633.5,732.105 1634.06,746.513 1634.62,774.283 1635.18,786.982 1635.74,781.74 1636.3,759.817 1636.86,725.39 1637.42,705.505 1637.98,688.208 1638.54,705.613 1639.1,691.647 1639.66,724.36 1640.21,755.326 1640.77,767.15 1641.33,748.502 1641.89,727.429 1642.45,759.717 1643.01,736.405 1643.57,733.996 1644.13,731.708 1644.69,744.314 1645.25,739.592 1645.81,735.4 1646.37,732.186 1646.93,714.184 1647.48,691.671 1648.04,691.736 1648.6,676.243 1649.16,625.151 1649.72,643.906 1650.28,630.544 1650.84,633.4 1651.4,650.249 1651.96,652.253 1652.52,651.679 1653.08,683.521 1653.64,684.995 1654.2,669.756 1654.76,671.768 1655.31,657.44 1655.87,641.276 1656.43,658.093 1656.99,675.138 1657.55,658.333 1658.11,642.392 1658.67,660.337 1659.23,677.577 1659.79,679.431 1660.35,678.588 1660.91,677.24 1661.47,690.741 1662.03,719.101 1662.58,684.184 1663.14,685.17 1663.7,668.14 1664.26,684.873 1664.82,667.606 1665.38,667.176 1665.94,649.901 1666.5,666.711 1667.06,696.696 1667.62,692.92 1668.18,625.08 1668.74,628.905 1669.3,616.599 1669.85,636.879 1670.41,639.404 1670.97,639.068 1671.53,655.114 1672.09,642.079 1672.65,626.647 1673.21,661.548 1673.77,646.054 1674.33,601.171 1674.89,641.679 1675.45,689.868 1676.01,707.253 1676.57,657.659 1677.13,657.674 1677.68,674.642 1678.24,642.736 1678.8,643.253 1679.36,642.745 1679.92,641.26 1680.48,675.524 1681.04,614.309 1681.6,587.704 1682.16,609.942 1682.72,600.142 1683.28,653.537 1683.84,641.341 1684.4,659.962 1684.95,662.555 1685.51,664.798 1686.07,680.915 1686.63,664.058 1687.19,683.338 1687.75,666.06 1688.31,652.326 1688.87,638.733 1689.43,640.029 1689.99,636.53 1690.55,655.908 1691.11,661.67 1691.67,650.316 1692.23,638.75 1692.78,644.416 1693.34,661.297 1693.9,677.623 1694.46,678.027 1695.02,742.032 1695.58,755.315 1696.14,720.625 1696.7,718.574 1697.26,716.234 1697.82,699.803 1698.38,698.738 1698.94,700.555 1699.5,716.016 1700.05,683.925 1700.61,700.361 1701.17,714.837 1701.73,694.094 1702.29,710.246 1702.85,710.155 1703.41,744.993 1703.97,693.225 1704.53,692.513 1705.09,707.488 1705.65,711.091 1706.21,710.804 1706.77,740.714 1707.32,771.703 1707.88,784.56 1708.44,778.486 1709,787.058 1709.56,814.634 1710.12,824.026 1710.68,862.617 1711.24,854.568 1711.8,861.561 1712.36,839.892 1712.92,832.284 1713.48,792.508 1714.04,771.866 1714.6,751.402 1715.15,717.026 1715.71,717.772 1716.27,698.11 1716.83,679.401 1717.39,664.101 1717.95,680.717 1718.51,682.823 1719.07,684.693 1719.63,698.854 1720.19,710.907 1720.75,676.815 1721.31,677.575 1721.87,680.441 1722.42,697.384 1722.98,698.087 1723.54,694.537 1724.1,675.509 1724.66,723.297 1725.22,702.542 1725.78,701.466 1726.34,683.765 1726.9,665.468 1727.46,651.295 1728.02,655.734 1728.58,626.935 1729.14,611.77 1729.69,630.841 1730.25,632.281 1730.81,634.288 1731.37,621.708 1731.93,608.046 1732.49,628.538 1733.05,631.719 1733.61,636.548 1734.17,652.767 1734.73,686.927 1735.29,703.552 1735.85,751.028 1736.41,733.009 1736.97,715.072 1737.52,715.486 1738.08,712.279 1738.64,711.745 1739.2,725.162 1739.76,723.426 1740.32,769.703 1740.88,748.395 1741.44,763.219 1742,742.237 1742.56,719.649 1743.12,717.134 1743.68,730.864 1744.24,692.948 1744.79,709.361 1745.35,623.659 1745.91,640.152 1746.47,593.944 1747.03,564.716 1747.59,570.845 1748.15,574.924 1748.71,580.576 1749.27,617.623 1749.83,604.353 1750.39,609.065 1750.95,597.827 1751.51,622.256 1752.06,673.798 1752.62,657.317 1753.18,674.606 1753.74,691.138 1754.3,691.963 1754.86,673.941 1755.42,693.491 1755.98,726.877 1756.54,770.789 1757.1,782.249 1757.66,790.914 1758.22,798.815 1758.78,791.978 1759.34,801.405 1759.89,795.119 1760.45,801.602 1761.01,795.364 1761.57,756.346 1762.13,739.075 1762.69,719.436 1763.25,717.492 1763.81,685.072 1764.37,665.299 1764.93,684.792 1765.49,704.945 1766.05,690.254 1766.61,661.285 1767.16,677.924 1767.72,659.893 1768.28,661.491 1768.84,665.273 1769.4,649.995 1769.96,667.81 1770.52,670.503 1771.08,653.534 1771.64,654.808 1772.2,658.028 1772.76,657.236 1773.32,642.042 1773.88,644.102 1774.43,676.85 1774.99,695.675 1775.55,713.59 1776.11,714.858 1776.67,712.295 1777.23,678.25 1777.79,722.069 1778.35,656.816 1778.91,624.228 1779.47,674.057 1780.03,661.367 1780.59,630.342 1781.15,631.267 1781.71,617.936 1782.26,618.409 1782.82,621.853 1783.38,594.158 1783.94,598.292 1784.5,587.736 1785.06,609.188 1785.62,629.275 1786.18,651.863 1786.74,636.691 1787.3,638.608 1787.86,655.96 1788.42,702.791 1788.98,686.467 1789.53,619.877 1790.09,651.637 1790.65,650.788 1791.21,652.945 1791.77,640.511 1792.33,641.825 1792.89,659.358 1793.45,677.461 1794.01,692.798 1794.57,691.696 1795.13,690.316 1795.69,671.572 1796.25,687.544 1796.8,671.778 1797.36,671.4 1797.92,652.911 1798.48,638.639 1799.04,642.456 1799.6,643.614 1800.16,644.676 1800.72,663.438 1801.28,663.375 1801.84,647.422 1802.4,650.082 1802.96,650.509 1803.52,667.645 1804.08,685.422 1804.63,701.639 1805.19,669.268 1805.75,671.33 1806.31,673.789 1806.87,688.662 1807.43,669.473 1807.99,657.05 1808.55,643.003 1809.11,641.816 1809.67,611.858 1810.23,599.619 1810.79,621.159 1811.35,592.252 1811.9,597.921 1812.46,572.463 1813.02,548.089 1813.58,555.439 1814.14,597.478 1814.7,587.295 1815.26,594.353 1815.82,567.508 1816.38,575.336 1816.94,579.746 1817.5,570.217 1818.06,528.382 1818.62,523.166 1819.18,535.755 1819.73,546.515 1820.29,539.095 1820.85,550.746 1821.41,578.126 1821.97,585.692 1822.53,595.27 1823.09,603.586 1823.65,625.943 1824.21,658.662 1824.77,707.769 1825.33,706.499 1825.89,709.676 1826.45,691.941 1827,677.745 1827.56,665.717 1828.12,697.579 1828.68,712.049 1829.24,710.003 1829.8,725.418 1830.36,740.309 1830.92,771.638 1831.48,765.488 1832.04,760.278 1832.6,773.756 1833.16,737.316 1833.72,734.494 1834.27,699.59 1834.83,699.554 1835.39,715.005 1835.95,761.897 1836.51,757.892 1837.07,769.931 1837.63,785.458 1838.19,781.506 \"/>\n<path clip-path=\"url(#clip513)\" d=\"M720.247 690.068 L720.806 690.068 L721.365 690.068 L721.924 690.068 L722.484 690.068 L723.043 690.068 L723.602 690.068 L724.161 690.068 L724.721 690.068 L725.28 690.068 L725.839 690.068 L726.398 690.068 L726.958 690.068 L727.517 690.068 L728.076 690.068 L728.635 690.068 L729.195 690.068 L729.754 690.068 L730.313 690.068 L730.872 690.068 L731.432 690.068 L731.991 690.068 L732.55 690.068 L733.109 690.068 L733.669 690.068 L734.228 690.068 L734.787 690.068 L735.346 690.068 L735.906 690.068 L736.465 690.068 L737.024 690.068 L737.583 690.068 L738.143 690.068 L738.702 690.068 L739.261 690.068 L739.82 690.068 L740.38 690.068 L740.939 690.068 L741.498 690.068 L742.057 690.068 L742.617 690.068 L743.176 690.068 L743.735 690.068 L744.294 690.068 L744.854 690.068 L745.413 690.068 L745.972 690.068 L746.531 690.068 L747.091 690.068 L747.65 690.068 L748.209 690.068 L748.768 690.068 L749.328 690.068 L749.887 690.068 L750.446 690.068 L751.005 690.068 L751.565 690.068 L752.124 690.068 L752.683 690.068 L753.242 690.068 L753.802 690.068 L754.361 690.068 L754.92 690.068 L755.479 690.068 L756.039 690.068 L756.598 690.068 L757.157 690.068 L757.716 690.068 L758.276 690.068 L758.835 690.068 L759.394 690.068 L759.953 690.068 L760.513 690.068 L761.072 690.068 L761.631 690.068 L762.19 690.068 L762.75 690.068 L763.309 690.068 L763.868 690.068 L764.427 690.068 L764.987 690.068 L765.546 690.068 L766.105 690.068 L766.664 690.068 L767.224 690.068 L767.783 690.068 L768.342 690.068 L768.901 690.068 L769.461 690.068 L770.02 690.068 L770.579 690.068 L771.138 690.068 L771.698 690.068 L772.257 690.068 L772.816 690.068 L773.375 690.068 L773.935 690.068 L774.494 690.068 L775.053 690.068 L775.612 690.068 L776.172 690.068 L776.731 690.068 L777.29 690.068 L777.849 690.068 L778.409 690.068 L778.968 690.068 L779.527 690.068 L780.086 690.068 L780.646 690.068 L781.205 690.068 L781.764 690.068 L782.323 690.068 L782.883 690.068 L783.442 690.068 L784.001 690.068 L784.56 690.068 L785.12 690.068 L785.679 690.068 L786.238 690.068 L786.797 690.068 L787.357 690.068 L787.916 690.068 L788.475 690.068 L789.034 690.068 L789.594 690.068 L790.153 690.068 L790.712 690.068 L791.271 690.068 L791.831 690.068 L792.39 690.068 L792.949 690.068 L793.508 690.068 L794.068 690.068 L794.627 690.068 L795.186 690.068 L795.745 690.068 L796.305 690.068 L796.864 690.068 L797.423 690.068 L797.982 690.068 L798.542 690.068 L799.101 690.068 L799.66 690.068 L800.219 690.068 L800.779 690.068 L801.338 690.068 L801.897 690.068 L802.456 690.068 L803.016 690.068 L803.575 690.068 L804.134 690.068 L804.693 690.068 L805.253 690.068 L805.812 690.068 L806.371 690.068 L806.931 690.068 L807.49 690.068 L808.049 690.068 L808.608 690.068 L809.168 690.068 L809.727 690.068 L810.286 690.068 L810.845 690.068 L811.405 690.068 L811.964 690.068 L812.523 690.068 L813.082 690.068 L813.642 690.068 L814.201 690.068 L814.76 690.068 L815.319 690.068 L815.879 690.068 L816.438 690.068 L816.997 690.068 L817.556 690.068 L818.116 690.068 L818.675 690.068 L819.234 690.068 L819.793 690.068 L820.353 690.068 L820.912 690.068 L821.471 690.068 L822.03 690.068 L822.59 690.068 L823.149 690.068 L823.708 690.068 L824.267 690.068 L824.827 690.068 L825.386 690.068 L825.945 690.068 L826.504 690.068 L827.064 690.068 L827.623 690.068 L828.182 690.068 L828.741 690.068 L829.301 690.068 L829.86 690.068 L830.419 690.068 L830.978 690.068 L831.538 690.068 L832.097 690.068 L832.656 690.068 L833.215 690.068 L833.775 690.068 L834.334 690.068 L834.893 690.068 L835.452 690.068 L836.012 690.068 L836.571 690.068 L837.13 690.068 L837.689 690.068 L838.249 690.068 L838.808 690.068 L839.367 690.068 L839.926 690.068 L840.486 690.068 L841.045 690.068 L841.604 690.068 L842.163 690.068 L842.723 690.068 L843.282 690.068 L843.841 690.068 L844.4 690.068 L844.96 690.068 L845.519 690.068 L846.078 690.068 L846.637 690.068 L847.197 690.068 L847.756 690.068 L848.315 690.068 L848.874 690.068 L849.434 690.068 L849.993 690.068 L850.552 690.068 L851.111 690.068 L851.671 690.068 L852.23 690.068 L852.789 690.068 L853.348 690.068 L853.908 690.068 L854.467 690.068 L855.026 690.068 L855.585 690.068 L856.145 690.068 L856.704 690.068 L857.263 690.068 L857.822 690.068 L858.382 690.068 L858.941 690.068 L859.5 690.068 L860.059 690.068 L860.619 690.068 L861.178 690.068 L861.737 690.068 L862.296 690.068 L862.856 690.068 L863.415 690.068 L863.974 690.068 L864.533 690.068 L865.093 690.068 L865.652 690.068 L866.211 690.068 L866.77 690.068 L867.33 690.068 L867.889 690.068 L868.448 690.068 L869.007 690.068 L869.567 690.068 L870.126 690.068 L870.685 690.068 L871.244 690.068 L871.804 690.068 L872.363 690.068 L872.922 690.068 L873.481 690.068 L874.041 690.068 L874.6 690.068 L875.159 690.068 L875.718 690.068 L876.278 690.068 L876.837 690.068 L877.396 690.068 L877.955 690.068 L878.515 690.068 L879.074 690.068 L879.633 690.068 L880.192 690.068 L880.752 690.068 L881.311 690.068 L881.87 690.068 L882.429 690.068 L882.989 690.068 L883.548 690.068 L884.107 690.068 L884.666 690.068 L885.226 690.068 L885.785 690.068 L886.344 690.068 L886.903 690.068 L887.463 690.068 L888.022 690.068 L888.581 690.068 L889.14 690.068 L889.7 690.068 L890.259 690.068 L890.818 690.068 L891.377 690.068 L891.937 690.068 L892.496 690.068 L893.055 690.068 L893.614 690.068 L894.174 690.068 L894.733 690.068 L895.292 690.068 L895.851 690.068 L896.411 690.068 L896.97 690.068 L897.529 690.068 L898.088 690.068 L898.648 690.068 L899.207 690.068 L899.766 690.068 L900.325 690.068 L900.885 690.068 L901.444 690.068 L902.003 690.068 L902.562 690.068 L903.122 690.068 L903.681 690.068 L904.24 690.068 L904.799 690.068 L905.359 690.068 L905.918 690.068 L906.477 690.068 L907.036 690.068 L907.596 690.068 L908.155 690.068 L908.714 690.068 L909.273 690.068 L909.833 690.068 L910.392 690.068 L910.951 690.068 L911.51 690.068 L912.07 690.068 L912.629 690.068 L913.188 690.068 L913.747 690.068 L914.307 690.068 L914.866 690.068 L915.425 690.068 L915.984 690.068 L916.544 690.068 L917.103 690.068 L917.662 690.068 L918.221 690.068 L918.781 690.068 L919.34 690.068 L919.899 690.068 L920.458 690.068 L921.018 690.068 L921.577 690.068 L922.136 690.068 L922.695 690.068 L923.255 690.068 L923.814 690.068 L924.373 690.068 L924.932 690.068 L925.492 690.068 L926.051 690.068 L926.61 690.068 L927.169 690.068 L927.729 690.068 L928.288 690.068 L928.847 690.068 L929.406 690.068 L929.966 690.068 L930.525 690.068 L931.084 690.068 L931.644 690.068 L932.203 690.068 L932.762 690.068 L933.321 690.068 L933.881 690.068 L934.44 690.068 L934.999 690.068 L935.558 690.068 L936.118 690.068 L936.677 690.068 L937.236 690.068 L937.795 690.068 L938.355 690.068 L938.914 690.068 L939.473 690.068 L940.032 690.068 L940.592 690.068 L941.151 690.068 L941.71 690.068 L942.269 690.068 L942.829 690.068 L943.388 690.068 L943.947 690.068 L944.506 690.068 L945.066 690.068 L945.625 690.068 L946.184 690.068 L946.743 690.068 L947.303 690.068 L947.862 690.068 L948.421 690.068 L948.98 690.068 L949.54 690.068 L950.099 690.068 L950.658 690.068 L951.217 690.068 L951.777 690.068 L952.336 690.068 L952.895 690.068 L953.454 690.068 L954.014 690.068 L954.573 690.068 L955.132 690.068 L955.691 690.068 L956.251 690.068 L956.81 690.068 L957.369 690.068 L957.928 690.068 L958.488 690.068 L959.047 690.068 L959.606 690.068 L960.165 690.068 L960.725 690.068 L961.284 690.068 L961.843 690.068 L962.402 690.068 L962.962 690.068 L963.521 690.068 L964.08 690.068 L964.639 690.068 L965.199 690.068 L965.758 690.068 L966.317 690.068 L966.876 690.068 L967.436 690.068 L967.995 690.068 L968.554 690.068 L969.113 690.068 L969.673 690.068 L970.232 690.068 L970.791 690.068 L971.35 690.068 L971.91 690.068 L972.469 690.068 L973.028 690.068 L973.587 690.068 L974.147 690.068 L974.706 690.068 L975.265 690.068 L975.824 690.068 L976.384 690.068 L976.943 690.068 L977.502 690.068 L978.061 690.068 L978.621 690.068 L979.18 690.068 L979.739 690.068 L980.298 690.068 L980.858 690.068 L981.417 690.068 L981.976 690.068 L982.535 690.068 L983.095 690.068 L983.654 690.068 L984.213 690.068 L984.772 690.068 L985.332 690.068 L985.891 690.068 L986.45 690.068 L987.009 690.068 L987.569 690.068 L988.128 690.068 L988.687 690.068 L989.246 690.068 L989.806 690.068 L990.365 690.068 L990.924 690.068 L991.483 690.068 L992.043 690.068 L992.602 690.068 L993.161 690.068 L993.72 690.068 L994.28 690.068 L994.839 690.068 L995.398 690.068 L995.957 690.068 L996.517 690.068 L997.076 690.068 L997.635 690.068 L998.194 690.068 L998.754 690.068 L999.313 690.068 L999.872 690.068 L1000.43 690.068 L1000.99 690.068 L1001.55 690.068 L1002.11 690.068 L1002.67 690.068 L1003.23 690.068 L1003.79 690.068 L1004.35 690.068 L1004.91 690.068 L1005.46 690.068 L1006.02 690.068 L1006.58 690.068 L1007.14 690.068 L1007.7 690.068 L1008.26 690.068 L1008.82 690.068 L1009.38 690.068 L1009.94 690.068 L1010.5 690.068 L1011.06 690.068 L1011.62 690.068 L1012.18 690.068 L1012.73 690.068 L1013.29 690.068 L1013.85 690.068 L1014.41 690.068 L1014.97 690.068 L1015.53 690.068 L1016.09 690.068 L1016.65 690.068 L1017.21 690.068 L1017.77 690.068 L1018.33 690.068 L1018.89 690.068 L1019.45 690.068 L1020.01 690.068 L1020.56 690.068 L1021.12 690.068 L1021.68 690.068 L1022.24 690.068 L1022.8 690.068 L1023.36 690.068 L1023.92 690.068 L1024.48 690.068 L1025.04 690.068 L1025.6 690.068 L1026.16 690.068 L1026.72 690.068 L1027.28 690.068 L1027.83 690.068 L1028.39 690.068 L1028.95 690.068 L1029.51 690.068 L1030.07 690.068 L1030.63 690.068 L1031.19 690.068 L1031.75 690.068 L1032.31 690.068 L1032.87 690.068 L1033.43 690.068 L1033.99 690.068 L1034.55 690.068 L1035.1 690.068 L1035.66 690.068 L1036.22 690.068 L1036.78 690.068 L1037.34 690.068 L1037.9 690.068 L1038.46 690.068 L1039.02 690.068 L1039.58 690.068 L1040.14 690.068 L1040.7 690.068 L1041.26 690.068 L1041.82 690.068 L1042.38 690.068 L1042.93 690.068 L1043.49 690.068 L1044.05 690.068 L1044.61 690.068 L1045.17 690.068 L1045.73 690.068 L1046.29 690.068 L1046.85 690.068 L1047.41 690.068 L1047.97 690.068 L1048.53 690.068 L1049.09 690.068 L1049.65 690.068 L1050.2 690.068 L1050.76 690.068 L1051.32 690.068 L1051.88 690.068 L1052.44 690.068 L1053 690.068 L1053.56 690.068 L1054.12 690.068 L1054.68 690.068 L1055.24 690.068 L1055.8 690.068 L1056.36 690.068 L1056.92 690.068 L1057.48 690.068 L1058.03 690.068 L1058.59 690.068 L1059.15 690.068 L1059.71 690.068 L1060.27 690.068 L1060.83 690.068 L1061.39 690.068 L1061.95 690.068 L1062.51 690.068 L1063.07 690.068 L1063.63 690.068 L1064.19 690.068 L1064.75 690.068 L1065.3 690.068 L1065.86 690.068 L1066.42 690.068 L1066.98 690.068 L1067.54 690.068 L1068.1 690.068 L1068.66 690.068 L1069.22 690.068 L1069.78 690.068 L1070.34 690.068 L1070.9 690.068 L1071.46 690.068 L1072.02 690.068 L1072.57 690.068 L1073.13 690.068 L1073.69 690.068 L1074.25 690.068 L1074.81 690.068 L1075.37 690.068 L1075.93 690.068 L1076.49 690.068 L1077.05 690.068 L1077.61 690.068 L1078.17 690.068 L1078.73 690.068 L1079.29 690.068 L1079.85 690.068 L1080.4 690.068 L1080.96 690.068 L1081.52 690.068 L1082.08 690.068 L1082.64 690.068 L1083.2 690.068 L1083.76 690.068 L1084.32 690.068 L1084.88 690.068 L1085.44 690.068 L1086 690.068 L1086.56 690.068 L1087.12 690.068 L1087.67 690.068 L1088.23 690.068 L1088.79 690.068 L1089.35 690.068 L1089.91 690.068 L1090.47 690.068 L1091.03 690.068 L1091.59 690.068 L1092.15 690.068 L1092.71 690.068 L1093.27 690.068 L1093.83 690.068 L1094.39 690.068 L1094.94 690.068 L1095.5 690.068 L1096.06 690.068 L1096.62 690.068 L1097.18 690.068 L1097.74 690.068 L1098.3 690.068 L1098.86 690.068 L1099.42 690.068 L1099.98 690.068 L1100.54 690.068 L1101.1 690.068 L1101.66 690.068 L1102.22 690.068 L1102.77 690.068 L1103.33 690.068 L1103.89 690.068 L1104.45 690.068 L1105.01 690.068 L1105.57 690.068 L1106.13 690.068 L1106.69 690.068 L1107.25 690.068 L1107.81 690.068 L1108.37 690.068 L1108.93 690.068 L1109.49 690.068 L1110.04 690.068 L1110.6 690.068 L1111.16 690.068 L1111.72 690.068 L1112.28 690.068 L1112.84 690.068 L1113.4 690.068 L1113.96 690.068 L1114.52 690.068 L1115.08 690.068 L1115.64 690.068 L1116.2 690.068 L1116.76 690.068 L1117.31 690.068 L1117.87 690.068 L1118.43 690.068 L1118.99 690.068 L1119.55 690.068 L1120.11 690.068 L1120.67 690.068 L1121.23 690.068 L1121.79 690.068 L1122.35 690.068 L1122.91 690.068 L1123.47 690.068 L1124.03 690.068 L1124.59 690.068 L1125.14 690.068 L1125.7 690.068 L1126.26 690.068 L1126.82 690.068 L1127.38 690.068 L1127.94 690.068 L1128.5 690.068 L1129.06 690.068 L1129.62 690.068 L1130.18 690.068 L1130.74 690.068 L1131.3 690.068 L1131.86 690.068 L1132.41 690.068 L1132.97 690.068 L1133.53 690.068 L1134.09 690.068 L1134.65 690.068 L1135.21 690.068 L1135.77 690.068 L1136.33 690.068 L1136.89 690.068 L1137.45 690.068 L1138.01 690.068 L1138.57 690.068 L1139.13 690.068 L1139.68 690.068 L1140.24 690.068 L1140.8 690.068 L1141.36 690.068 L1141.92 690.068 L1142.48 690.068 L1143.04 690.068 L1143.6 690.068 L1144.16 690.068 L1144.72 690.068 L1145.28 690.068 L1145.84 690.068 L1146.4 690.068 L1146.96 690.068 L1147.51 690.068 L1148.07 690.068 L1148.63 690.068 L1149.19 690.068 L1149.75 690.068 L1150.31 690.068 L1150.87 690.068 L1151.43 690.068 L1151.99 690.068 L1152.55 690.068 L1153.11 690.068 L1153.67 690.068 L1154.23 690.068 L1154.78 690.068 L1155.34 690.068 L1155.9 690.068 L1156.46 690.068 L1157.02 690.068 L1157.58 690.068 L1158.14 690.068 L1158.7 690.068 L1159.26 690.068 L1159.82 690.068 L1160.38 690.068 L1160.94 690.068 L1161.5 690.068 L1162.05 690.068 L1162.61 690.068 L1163.17 690.068 L1163.73 690.068 L1164.29 690.068 L1164.85 690.068 L1165.41 690.068 L1165.97 690.068 L1166.53 690.068 L1167.09 690.068 L1167.65 690.068 L1168.21 690.068 L1168.77 690.068 L1169.33 690.068 L1169.88 690.068 L1170.44 690.068 L1171 690.068 L1171.56 690.068 L1172.12 690.068 L1172.68 690.068 L1173.24 690.068 L1173.8 690.068 L1174.36 690.068 L1174.92 690.068 L1175.48 690.068 L1176.04 690.068 L1176.6 690.068 L1177.15 690.068 L1177.71 690.068 L1178.27 690.068 L1178.83 690.068 L1179.39 690.068 L1179.95 690.068 L1180.51 690.068 L1181.07 690.068 L1181.63 690.068 L1182.19 690.068 L1182.75 690.068 L1183.31 690.068 L1183.87 690.068 L1184.43 690.068 L1184.98 690.068 L1185.54 690.068 L1186.1 690.068 L1186.66 690.068 L1187.22 690.068 L1187.78 690.068 L1188.34 690.068 L1188.9 690.068 L1189.46 690.068 L1190.02 690.068 L1190.58 690.068 L1191.14 690.068 L1191.7 690.068 L1192.25 690.068 L1192.81 690.068 L1193.37 690.068 L1193.93 690.068 L1194.49 690.068 L1195.05 690.068 L1195.61 690.068 L1196.17 690.068 L1196.73 690.068 L1197.29 690.068 L1197.85 690.068 L1198.41 690.068 L1198.97 690.068 L1199.52 690.068 L1200.08 690.068 L1200.64 690.068 L1201.2 690.068 L1201.76 690.068 L1202.32 690.068 L1202.88 690.068 L1203.44 690.068 L1204 690.068 L1204.56 690.068 L1205.12 690.068 L1205.68 690.068 L1206.24 690.068 L1206.8 690.068 L1207.35 690.068 L1207.91 690.068 L1208.47 690.068 L1209.03 690.068 L1209.59 690.068 L1210.15 690.068 L1210.71 690.068 L1211.27 690.068 L1211.83 690.068 L1212.39 690.068 L1212.95 690.068 L1213.51 690.068 L1214.07 690.068 L1214.62 690.068 L1215.18 690.068 L1215.74 690.068 L1216.3 690.068 L1216.86 690.068 L1217.42 690.068 L1217.98 690.068 L1218.54 690.068 L1219.1 690.068 L1219.66 690.068 L1220.22 690.068 L1220.78 690.068 L1221.34 690.068 L1221.89 690.068 L1222.45 690.068 L1223.01 690.068 L1223.57 690.068 L1224.13 690.068 L1224.69 690.068 L1225.25 690.068 L1225.81 690.068 L1226.37 690.068 L1226.93 690.068 L1227.49 690.068 L1228.05 690.068 L1228.61 690.068 L1229.17 690.068 L1229.72 690.068 L1230.28 690.068 L1230.84 690.068 L1231.4 690.068 L1231.96 690.068 L1232.52 690.068 L1233.08 690.068 L1233.64 690.068 L1234.2 690.068 L1234.76 690.068 L1235.32 690.068 L1235.88 690.068 L1236.44 690.068 L1236.99 690.068 L1237.55 690.068 L1238.11 690.068 L1238.67 690.068 L1239.23 690.068 L1239.79 690.068 L1240.35 690.068 L1240.91 690.068 L1241.47 690.068 L1242.03 690.068 L1242.59 690.068 L1243.15 690.068 L1243.71 690.068 L1244.26 690.068 L1244.82 690.068 L1245.38 690.068 L1245.94 690.068 L1246.5 690.068 L1247.06 690.068 L1247.62 690.068 L1248.18 690.068 L1248.74 690.068 L1249.3 690.068 L1249.86 690.068 L1250.42 690.068 L1250.98 690.068 L1251.54 690.068 L1252.09 690.068 L1252.65 690.068 L1253.21 690.068 L1253.77 690.068 L1254.33 690.068 L1254.89 690.068 L1255.45 690.068 L1256.01 690.068 L1256.57 690.068 L1257.13 690.068 L1257.69 690.068 L1258.25 690.068 L1258.81 690.068 L1259.36 690.068 L1259.92 690.068 L1260.48 690.068 L1261.04 690.068 L1261.6 690.068 L1262.16 690.068 L1262.72 690.068 L1263.28 690.068 L1263.84 690.068 L1264.4 690.068 L1264.96 690.068 L1265.52 690.068 L1266.08 690.068 L1266.63 690.068 L1267.19 690.068 L1267.75 690.068 L1268.31 690.068 L1268.87 690.068 L1269.43 690.068 L1269.99 690.068 L1270.55 690.068 L1271.11 690.068 L1271.67 690.068 L1272.23 690.068 L1272.79 690.068 L1273.35 690.068 L1273.91 690.068 L1274.46 690.068 L1275.02 690.068 L1275.58 690.068 L1276.14 690.068 L1276.7 690.068 L1277.26 690.068 L1277.82 690.068 L1278.38 690.068 L1278.94 690.068 L1279.5 690.068 L1280.06 690.068 L1280.62 690.068 L1281.18 690.068 L1281.73 690.068 L1282.29 690.068 L1282.85 690.068 L1283.41 690.068 L1283.97 690.068 L1284.53 690.068 L1285.09 690.068 L1285.65 690.068 L1286.21 690.068 L1286.77 690.068 L1287.33 690.068 L1287.89 690.068 L1288.45 690.068 L1289 690.068 L1289.56 690.068 L1290.12 690.068 L1290.68 690.068 L1291.24 690.068 L1291.8 690.068 L1292.36 690.068 L1292.92 690.068 L1293.48 690.068 L1294.04 690.068 L1294.6 690.068 L1295.16 690.068 L1295.72 690.068 L1296.28 690.068 L1296.83 690.068 L1297.39 690.068 L1297.95 690.068 L1298.51 690.068 L1299.07 690.068 L1299.63 690.068 L1300.19 690.068 L1300.75 690.068 L1301.31 690.068 L1301.87 690.068 L1302.43 690.068 L1302.99 690.068 L1303.55 690.068 L1304.1 690.068 L1304.66 690.068 L1305.22 690.068 L1305.78 690.068 L1306.34 690.068 L1306.9 690.068 L1307.46 690.068 L1308.02 690.068 L1308.58 690.068 L1309.14 690.068 L1309.7 690.068 L1310.26 690.068 L1310.82 690.068 L1311.38 690.068 L1311.93 690.068 L1312.49 690.068 L1313.05 690.068 L1313.61 690.068 L1314.17 690.068 L1314.73 690.068 L1315.29 690.068 L1315.85 690.068 L1316.41 690.068 L1316.97 690.068 L1317.53 690.068 L1318.09 690.068 L1318.65 690.068 L1319.2 690.068 L1319.76 690.068 L1320.32 690.068 L1320.88 690.068 L1321.44 690.068 L1322 690.068 L1322.56 690.068 L1323.12 690.068 L1323.68 690.068 L1324.24 690.068 L1324.8 690.068 L1325.36 690.068 L1325.92 690.068 L1326.47 690.068 L1327.03 690.068 L1327.59 690.068 L1328.15 690.068 L1328.71 690.068 L1329.27 690.068 L1329.83 690.068 L1330.39 690.068 L1330.95 690.068 L1331.51 690.068 L1332.07 690.068 L1332.63 690.068 L1333.19 690.068 L1333.75 690.068 L1334.3 690.068 L1334.86 690.068 L1335.42 690.068 L1335.98 690.068 L1336.54 690.068 L1337.1 690.068 L1337.66 690.068 L1338.22 690.068 L1338.78 690.068 L1339.34 690.068 L1339.9 690.068 L1340.46 690.068 L1341.02 690.068 L1341.57 690.068 L1342.13 690.068 L1342.69 690.068 L1343.25 690.068 L1343.81 690.068 L1344.37 690.068 L1344.93 690.068 L1345.49 690.068 L1346.05 690.068 L1346.61 690.068 L1347.17 690.068 L1347.73 690.068 L1348.29 690.068 L1348.84 690.068 L1349.4 690.068 L1349.96 690.068 L1350.52 690.068 L1351.08 690.068 L1351.64 690.068 L1352.2 690.068 L1352.76 690.068 L1353.32 690.068 L1353.88 690.068 L1354.44 690.068 L1355 690.068 L1355.56 690.068 L1356.12 690.068 L1356.67 690.068 L1357.23 690.068 L1357.79 690.068 L1358.35 690.068 L1358.91 690.068 L1359.47 690.068 L1360.03 690.068 L1360.59 690.068 L1361.15 690.068 L1361.71 690.068 L1362.27 690.068 L1362.83 690.068 L1363.39 690.068 L1363.94 690.068 L1364.5 690.068 L1365.06 690.068 L1365.62 690.068 L1366.18 690.068 L1366.74 690.068 L1367.3 690.068 L1367.86 690.068 L1368.42 690.068 L1368.98 690.068 L1369.54 690.068 L1370.1 690.068 L1370.66 690.068 L1371.21 690.068 L1371.77 690.068 L1372.33 690.068 L1372.89 690.068 L1373.45 690.068 L1374.01 690.068 L1374.57 690.068 L1375.13 690.068 L1375.69 690.068 L1376.25 690.068 L1376.81 690.068 L1377.37 690.068 L1377.93 690.068 L1378.49 690.068 L1379.04 690.068 L1379.6 690.068 L1380.16 690.068 L1380.72 690.068 L1381.28 690.068 L1381.84 690.068 L1382.4 690.068 L1382.96 690.068 L1383.52 690.068 L1384.08 690.068 L1384.64 690.068 L1385.2 690.068 L1385.76 690.068 L1386.31 690.068 L1386.87 690.068 L1387.43 690.068 L1387.99 690.068 L1388.55 690.068 L1389.11 690.068 L1389.67 690.068 L1390.23 690.068 L1390.79 690.068 L1391.35 690.068 L1391.91 690.068 L1392.47 690.068 L1393.03 690.068 L1393.58 690.068 L1394.14 690.068 L1394.7 690.068 L1395.26 690.068 L1395.82 690.068 L1396.38 690.068 L1396.94 690.068 L1397.5 690.068 L1398.06 690.068 L1398.62 690.068 L1399.18 690.068 L1399.74 690.068 L1400.3 690.068 L1400.86 690.068 L1401.41 690.068 L1401.97 690.068 L1402.53 690.068 L1403.09 690.068 L1403.65 690.068 L1404.21 690.068 L1404.77 690.068 L1405.33 690.068 L1405.89 690.068 L1406.45 690.068 L1407.01 690.068 L1407.57 690.068 L1408.13 690.068 L1408.68 690.068 L1409.24 690.068 L1409.8 690.068 L1410.36 690.068 L1410.92 690.068 L1411.48 690.068 L1412.04 690.068 L1412.6 690.068 L1413.16 690.068 L1413.72 690.068 L1414.28 690.068 L1414.84 690.068 L1415.4 690.068 L1415.95 690.068 L1416.51 690.068 L1417.07 690.068 L1417.63 690.068 L1418.19 690.068 L1418.75 690.068 L1419.31 690.068 L1419.87 690.068 L1420.43 690.068 L1420.99 690.068 L1421.55 690.068 L1422.11 690.068 L1422.67 690.068 L1423.23 690.068 L1423.78 690.068 L1424.34 690.068 L1424.9 690.068 L1425.46 690.068 L1426.02 690.068 L1426.58 690.068 L1427.14 690.068 L1427.7 690.068 L1428.26 690.068 L1428.82 690.068 L1429.38 690.068 L1429.94 690.068 L1430.5 690.068 L1431.05 690.068 L1431.61 690.068 L1432.17 690.068 L1432.73 690.068 L1433.29 690.068 L1433.85 690.068 L1434.41 690.068 L1434.97 690.068 L1435.53 690.068 L1436.09 690.068 L1436.65 690.068 L1437.21 690.068 L1437.77 690.068 L1438.33 690.068 L1438.88 690.068 L1439.44 690.068 L1440 690.068 L1440.56 690.068 L1441.12 690.068 L1441.68 690.068 L1442.24 690.068 L1442.8 690.068 L1443.36 690.068 L1443.92 690.068 L1444.48 690.068 L1445.04 690.068 L1445.6 690.068 L1446.15 690.068 L1446.71 690.068 L1447.27 690.068 L1447.83 690.068 L1448.39 690.068 L1448.95 690.068 L1449.51 690.068 L1450.07 690.068 L1450.63 690.068 L1451.19 690.068 L1451.75 690.068 L1452.31 690.068 L1452.87 690.068 L1453.42 690.068 L1453.98 690.068 L1454.54 690.068 L1455.1 690.068 L1455.66 690.068 L1456.22 690.068 L1456.78 690.068 L1457.34 690.068 L1457.9 690.068 L1458.46 690.068 L1459.02 690.068 L1459.58 690.068 L1460.14 690.068 L1460.7 690.068 L1461.25 690.068 L1461.81 690.068 L1462.37 690.068 L1462.93 690.068 L1463.49 690.068 L1464.05 690.068 L1464.61 690.068 L1465.17 690.068 L1465.73 690.068 L1466.29 690.068 L1466.85 690.068 L1467.41 690.068 L1467.97 690.068 L1468.52 690.068 L1469.08 690.068 L1469.64 690.068 L1470.2 690.068 L1470.76 690.068 L1471.32 690.068 L1471.88 690.068 L1472.44 690.068 L1473 690.068 L1473.56 690.068 L1474.12 690.068 L1474.68 690.068 L1475.24 690.068 L1475.79 690.068 L1476.35 690.068 L1476.91 690.068 L1477.47 690.068 L1478.03 690.068 L1478.59 690.068 L1479.15 690.068 L1479.71 690.068 L1480.27 690.068 L1480.83 690.068 L1481.39 690.068 L1481.95 690.068 L1482.51 690.068 L1483.07 690.068 L1483.62 690.068 L1484.18 690.068 L1484.74 690.068 L1485.3 690.068 L1485.86 690.068 L1486.42 690.068 L1486.98 690.068 L1487.54 690.068 L1488.1 690.068 L1488.66 690.068 L1489.22 690.068 L1489.78 690.068 L1490.34 690.068 L1490.89 690.068 L1491.45 690.068 L1492.01 690.068 L1492.57 690.068 L1493.13 690.068 L1493.69 690.068 L1494.25 690.068 L1494.81 690.068 L1495.37 690.068 L1495.93 690.068 L1496.49 690.068 L1497.05 690.068 L1497.61 690.068 L1498.16 690.068 L1498.72 690.068 L1499.28 690.068 L1499.84 690.068 L1500.4 690.068 L1500.96 690.068 L1501.52 690.068 L1502.08 690.068 L1502.64 690.068 L1503.2 690.068 L1503.76 690.068 L1504.32 690.068 L1504.88 690.068 L1505.44 690.068 L1505.99 690.068 L1506.55 690.068 L1507.11 690.068 L1507.67 690.068 L1508.23 690.068 L1508.79 690.068 L1509.35 690.068 L1509.91 690.068 L1510.47 690.068 L1511.03 690.068 L1511.59 690.068 L1512.15 690.068 L1512.71 690.068 L1513.26 690.068 L1513.82 690.068 L1514.38 690.068 L1514.94 690.068 L1515.5 690.068 L1516.06 690.068 L1516.62 690.068 L1517.18 690.068 L1517.74 690.068 L1518.3 690.068 L1518.86 690.068 L1519.42 690.068 L1519.98 690.068 L1520.53 690.068 L1521.09 690.068 L1521.65 690.068 L1522.21 690.068 L1522.77 690.068 L1523.33 690.068 L1523.89 690.068 L1524.45 690.068 L1525.01 690.068 L1525.57 690.068 L1526.13 690.068 L1526.69 690.068 L1527.25 690.068 L1527.81 690.068 L1528.36 690.068 L1528.92 690.068 L1529.48 690.068 L1530.04 690.068 L1530.6 690.068 L1531.16 690.068 L1531.72 690.068 L1532.28 690.068 L1532.84 690.068 L1533.4 690.068 L1533.96 690.068 L1534.52 690.068 L1535.08 690.068 L1535.63 690.068 L1536.19 690.068 L1536.75 690.068 L1537.31 690.068 L1537.87 690.068 L1538.43 690.068 L1538.99 690.068 L1539.55 690.068 L1540.11 690.068 L1540.67 690.068 L1541.23 690.068 L1541.79 690.068 L1542.35 690.068 L1542.9 690.068 L1543.46 690.068 L1544.02 690.068 L1544.58 690.068 L1545.14 690.068 L1545.7 690.068 L1546.26 690.068 L1546.82 690.068 L1547.38 690.068 L1547.94 690.068 L1548.5 690.068 L1549.06 690.068 L1549.62 690.068 L1550.18 690.068 L1550.73 690.068 L1551.29 690.068 L1551.85 690.068 L1552.41 690.068 L1552.97 690.068 L1553.53 690.068 L1554.09 690.068 L1554.65 690.068 L1555.21 690.068 L1555.77 690.068 L1556.33 690.068 L1556.89 690.068 L1557.45 690.068 L1558 690.068 L1558.56 690.068 L1559.12 690.068 L1559.68 690.068 L1560.24 690.068 L1560.8 690.068 L1561.36 690.068 L1561.92 690.068 L1562.48 690.068 L1563.04 690.068 L1563.6 690.068 L1564.16 690.068 L1564.72 690.068 L1565.28 690.068 L1565.83 690.068 L1566.39 690.068 L1566.95 690.068 L1567.51 690.068 L1568.07 690.068 L1568.63 690.068 L1569.19 690.068 L1569.75 690.068 L1570.31 690.068 L1570.87 690.068 L1571.43 690.068 L1571.99 690.068 L1572.55 690.068 L1573.1 690.068 L1573.66 690.068 L1574.22 690.068 L1574.78 690.068 L1575.34 690.068 L1575.9 690.068 L1576.46 690.068 L1577.02 690.068 L1577.58 690.068 L1578.14 690.068 L1578.7 690.068 L1579.26 690.068 L1579.82 690.068 L1580.37 690.068 L1580.93 690.068 L1581.49 690.068 L1582.05 690.068 L1582.61 690.068 L1583.17 690.068 L1583.73 690.068 L1584.29 690.068 L1584.85 690.068 L1585.41 690.068 L1585.97 690.068 L1586.53 690.068 L1587.09 690.068 L1587.65 690.068 L1588.2 690.068 L1588.76 690.068 L1589.32 690.068 L1589.88 690.068 L1590.44 690.068 L1591 690.068 L1591.56 690.068 L1592.12 690.068 L1592.68 690.068 L1593.24 690.068 L1593.8 690.068 L1594.36 690.068 L1594.92 690.068 L1595.47 690.068 L1596.03 690.068 L1596.59 690.068 L1597.15 690.068 L1597.71 690.068 L1598.27 690.068 L1598.83 690.068 L1599.39 690.068 L1599.95 690.068 L1600.51 690.068 L1601.07 690.068 L1601.63 690.068 L1602.19 690.068 L1602.74 690.068 L1603.3 690.068 L1603.86 690.068 L1604.42 690.068 L1604.98 690.068 L1605.54 690.068 L1606.1 690.068 L1606.66 690.068 L1607.22 690.068 L1607.78 690.068 L1608.34 690.068 L1608.9 690.068 L1609.46 690.068 L1610.02 690.068 L1610.57 690.068 L1611.13 690.068 L1611.69 690.068 L1612.25 690.068 L1612.81 690.068 L1613.37 690.068 L1613.93 690.068 L1614.49 690.068 L1615.05 690.068 L1615.61 690.068 L1616.17 690.068 L1616.73 690.068 L1617.29 690.068 L1617.84 690.068 L1618.4 690.068 L1618.96 690.068 L1619.52 690.068 L1620.08 690.068 L1620.64 690.068 L1621.2 690.068 L1621.76 690.068 L1622.32 690.068 L1622.88 690.068 L1623.44 690.068 L1624 690.068 L1624.56 690.068 L1625.11 690.068 L1625.67 690.068 L1626.23 690.068 L1626.79 690.068 L1627.35 690.068 L1627.91 690.068 L1628.47 690.068 L1629.03 690.068 L1629.59 690.068 L1630.15 690.068 L1630.71 690.068 L1631.27 690.068 L1631.83 690.068 L1632.39 690.068 L1632.94 690.068 L1633.5 690.068 L1634.06 690.068 L1634.62 690.068 L1635.18 690.068 L1635.74 690.068 L1636.3 690.068 L1636.86 690.068 L1637.42 690.068 L1637.98 690.068 L1638.54 690.068 L1639.1 690.068 L1639.66 690.068 L1640.21 690.068 L1640.77 690.068 L1641.33 690.068 L1641.89 690.068 L1642.45 690.068 L1643.01 690.068 L1643.57 690.068 L1644.13 690.068 L1644.69 690.068 L1645.25 690.068 L1645.81 690.068 L1646.37 690.068 L1646.93 690.068 L1647.48 690.068 L1648.04 690.068 L1648.6 690.068 L1649.16 690.068 L1649.72 690.068 L1650.28 690.068 L1650.84 690.068 L1651.4 690.068 L1651.96 690.068 L1652.52 690.068 L1653.08 690.068 L1653.64 690.068 L1654.2 690.068 L1654.76 690.068 L1655.31 690.068 L1655.87 690.068 L1656.43 690.068 L1656.99 690.068 L1657.55 690.068 L1658.11 690.068 L1658.67 690.068 L1659.23 690.068 L1659.79 690.068 L1660.35 690.068 L1660.91 690.068 L1661.47 690.068 L1662.03 690.068 L1662.58 690.068 L1663.14 690.068 L1663.7 690.068 L1664.26 690.068 L1664.82 690.068 L1665.38 690.068 L1665.94 690.068 L1666.5 690.068 L1667.06 690.068 L1667.62 690.068 L1668.18 690.068 L1668.74 690.068 L1669.3 690.068 L1669.85 690.068 L1670.41 690.068 L1670.97 690.068 L1671.53 690.068 L1672.09 690.068 L1672.65 690.068 L1673.21 690.068 L1673.77 690.068 L1674.33 690.068 L1674.89 690.068 L1675.45 690.068 L1676.01 690.068 L1676.57 690.068 L1677.13 690.068 L1677.68 690.068 L1678.24 690.068 L1678.8 690.068 L1679.36 690.068 L1679.92 690.068 L1680.48 690.068 L1681.04 690.068 L1681.6 690.068 L1682.16 690.068 L1682.72 690.068 L1683.28 690.068 L1683.84 690.068 L1684.4 690.068 L1684.95 690.068 L1685.51 690.068 L1686.07 690.068 L1686.63 690.068 L1687.19 690.068 L1687.75 690.068 L1688.31 690.068 L1688.87 690.068 L1689.43 690.068 L1689.99 690.068 L1690.55 690.068 L1691.11 690.068 L1691.67 690.068 L1692.23 690.068 L1692.78 690.068 L1693.34 690.068 L1693.9 690.068 L1694.46 690.068 L1695.02 690.068 L1695.58 690.068 L1696.14 690.068 L1696.7 690.068 L1697.26 690.068 L1697.82 690.068 L1698.38 690.068 L1698.94 690.068 L1699.5 690.068 L1700.05 690.068 L1700.61 690.068 L1701.17 690.068 L1701.73 690.068 L1702.29 690.068 L1702.85 690.068 L1703.41 690.068 L1703.97 690.068 L1704.53 690.068 L1705.09 690.068 L1705.65 690.068 L1706.21 690.068 L1706.77 690.068 L1707.32 690.068 L1707.88 690.068 L1708.44 690.068 L1709 690.068 L1709.56 690.068 L1710.12 690.068 L1710.68 690.068 L1711.24 690.068 L1711.8 690.068 L1712.36 690.068 L1712.92 690.068 L1713.48 690.068 L1714.04 690.068 L1714.6 690.068 L1715.15 690.068 L1715.71 690.068 L1716.27 690.068 L1716.83 690.068 L1717.39 690.068 L1717.95 690.068 L1718.51 690.068 L1719.07 690.068 L1719.63 690.068 L1720.19 690.068 L1720.75 690.068 L1721.31 690.068 L1721.87 690.068 L1722.42 690.068 L1722.98 690.068 L1723.54 690.068 L1724.1 690.068 L1724.66 690.068 L1725.22 690.068 L1725.78 690.068 L1726.34 690.068 L1726.9 690.068 L1727.46 690.068 L1728.02 690.068 L1728.58 690.068 L1729.14 690.068 L1729.69 690.068 L1730.25 690.068 L1730.81 690.068 L1731.37 690.068 L1731.93 690.068 L1732.49 690.068 L1733.05 690.068 L1733.61 690.068 L1734.17 690.068 L1734.73 690.068 L1735.29 690.068 L1735.85 690.068 L1736.41 690.068 L1736.97 690.068 L1737.52 690.068 L1738.08 690.068 L1738.64 690.068 L1739.2 690.068 L1739.76 690.068 L1740.32 690.068 L1740.88 690.068 L1741.44 690.068 L1742 690.068 L1742.56 690.068 L1743.12 690.068 L1743.68 690.068 L1744.24 690.068 L1744.79 690.068 L1745.35 690.068 L1745.91 690.068 L1746.47 690.068 L1747.03 690.068 L1747.59 690.068 L1748.15 690.068 L1748.71 690.068 L1749.27 690.068 L1749.83 690.068 L1750.39 690.068 L1750.95 690.068 L1751.51 690.068 L1752.06 690.068 L1752.62 690.068 L1753.18 690.068 L1753.74 690.068 L1754.3 690.068 L1754.86 690.068 L1755.42 690.068 L1755.98 690.068 L1756.54 690.068 L1757.1 690.068 L1757.66 690.068 L1758.22 690.068 L1758.78 690.068 L1759.34 690.068 L1759.89 690.068 L1760.45 690.068 L1761.01 690.068 L1761.57 690.068 L1762.13 690.068 L1762.69 690.068 L1763.25 690.068 L1763.81 690.068 L1764.37 690.068 L1764.93 690.068 L1765.49 690.068 L1766.05 690.068 L1766.61 690.068 L1767.16 690.068 L1767.72 690.068 L1768.28 690.068 L1768.84 690.068 L1769.4 690.068 L1769.96 690.068 L1770.52 690.068 L1771.08 690.068 L1771.64 690.068 L1772.2 690.068 L1772.76 690.068 L1773.32 690.068 L1773.88 690.068 L1774.43 690.068 L1774.99 690.068 L1775.55 690.068 L1776.11 690.068 L1776.67 690.068 L1777.23 690.068 L1777.79 690.068 L1778.35 690.068 L1778.91 690.068 L1779.47 690.068 L1780.03 690.068 L1780.59 690.068 L1781.15 690.068 L1781.71 690.068 L1782.26 690.068 L1782.82 690.068 L1783.38 690.068 L1783.94 690.068 L1784.5 690.068 L1785.06 690.068 L1785.62 690.068 L1786.18 690.068 L1786.74 690.068 L1787.3 690.068 L1787.86 690.068 L1788.42 690.068 L1788.98 690.068 L1789.53 690.068 L1790.09 690.068 L1790.65 690.068 L1791.21 690.068 L1791.77 690.068 L1792.33 690.068 L1792.89 690.068 L1793.45 690.068 L1794.01 690.068 L1794.57 690.068 L1795.13 690.068 L1795.69 690.068 L1796.25 690.068 L1796.8 690.068 L1797.36 690.068 L1797.92 690.068 L1798.48 690.068 L1799.04 690.068 L1799.6 690.068 L1800.16 690.068 L1800.72 690.068 L1801.28 690.068 L1801.84 690.068 L1802.4 690.068 L1802.96 690.068 L1803.52 690.068 L1804.08 690.068 L1804.63 690.068 L1805.19 690.068 L1805.75 690.068 L1806.31 690.068 L1806.87 690.068 L1807.43 690.068 L1807.99 690.068 L1808.55 690.068 L1809.11 690.068 L1809.67 690.068 L1810.23 690.068 L1810.79 690.068 L1811.35 690.068 L1811.9 690.068 L1812.46 690.068 L1813.02 690.068 L1813.58 690.068 L1814.14 690.068 L1814.7 690.068 L1815.26 690.068 L1815.82 690.068 L1816.38 690.068 L1816.94 690.068 L1817.5 690.068 L1818.06 690.068 L1818.62 690.068 L1819.18 690.068 L1819.73 690.068 L1820.29 690.068 L1820.85 690.068 L1821.41 690.068 L1821.97 690.068 L1822.53 690.068 L1823.09 690.068 L1823.65 690.068 L1824.21 690.068 L1824.77 690.068 L1825.33 690.068 L1825.89 690.068 L1826.45 690.068 L1827 690.068 L1827.56 690.068 L1828.12 690.068 L1828.68 690.068 L1829.24 690.068 L1829.8 690.068 L1830.36 690.068 L1830.92 690.068 L1831.48 690.068 L1832.04 690.068 L1832.6 690.068 L1833.16 690.068 L1833.72 690.068 L1834.27 690.068 L1834.83 690.068 L1835.39 690.068 L1835.95 690.068 L1836.51 690.068 L1837.07 690.068 L1837.63 690.068 L1838.19 690.068 L1838.19 682.273 L1837.63 682.273 L1837.07 682.273 L1836.51 682.273 L1835.95 682.273 L1835.39 682.273 L1834.83 682.273 L1834.27 682.273 L1833.72 682.273 L1833.16 682.273 L1832.6 682.273 L1832.04 682.273 L1831.48 682.273 L1830.92 682.273 L1830.36 682.273 L1829.8 682.273 L1829.24 682.273 L1828.68 682.273 L1828.12 682.273 L1827.56 682.273 L1827 682.273 L1826.45 682.273 L1825.89 682.273 L1825.33 682.273 L1824.77 682.273 L1824.21 682.273 L1823.65 682.273 L1823.09 682.273 L1822.53 682.273 L1821.97 682.273 L1821.41 682.273 L1820.85 682.273 L1820.29 682.273 L1819.73 682.273 L1819.18 682.273 L1818.62 682.273 L1818.06 682.273 L1817.5 682.273 L1816.94 682.273 L1816.38 682.273 L1815.82 682.273 L1815.26 682.273 L1814.7 682.273 L1814.14 682.273 L1813.58 682.273 L1813.02 682.273 L1812.46 682.273 L1811.9 682.273 L1811.35 682.273 L1810.79 682.273 L1810.23 682.273 L1809.67 682.273 L1809.11 682.273 L1808.55 682.273 L1807.99 682.273 L1807.43 682.273 L1806.87 682.273 L1806.31 682.273 L1805.75 682.273 L1805.19 682.273 L1804.63 682.273 L1804.08 682.273 L1803.52 682.273 L1802.96 682.273 L1802.4 682.273 L1801.84 682.273 L1801.28 682.273 L1800.72 682.273 L1800.16 682.273 L1799.6 682.273 L1799.04 682.273 L1798.48 682.273 L1797.92 682.273 L1797.36 682.273 L1796.8 682.273 L1796.25 682.273 L1795.69 682.273 L1795.13 682.273 L1794.57 682.273 L1794.01 682.273 L1793.45 682.273 L1792.89 682.273 L1792.33 682.273 L1791.77 682.273 L1791.21 682.273 L1790.65 682.273 L1790.09 682.273 L1789.53 682.273 L1788.98 682.273 L1788.42 682.273 L1787.86 682.273 L1787.3 682.273 L1786.74 682.273 L1786.18 682.273 L1785.62 682.273 L1785.06 682.273 L1784.5 682.273 L1783.94 682.273 L1783.38 682.273 L1782.82 682.273 L1782.26 682.273 L1781.71 682.273 L1781.15 682.273 L1780.59 682.273 L1780.03 682.273 L1779.47 682.273 L1778.91 682.273 L1778.35 682.273 L1777.79 682.273 L1777.23 682.273 L1776.67 682.273 L1776.11 682.273 L1775.55 682.273 L1774.99 682.273 L1774.43 682.273 L1773.88 682.273 L1773.32 682.273 L1772.76 682.273 L1772.2 682.273 L1771.64 682.273 L1771.08 682.273 L1770.52 682.273 L1769.96 682.273 L1769.4 682.273 L1768.84 682.273 L1768.28 682.273 L1767.72 682.273 L1767.16 682.273 L1766.61 682.273 L1766.05 682.273 L1765.49 682.273 L1764.93 682.273 L1764.37 682.273 L1763.81 682.273 L1763.25 682.273 L1762.69 682.273 L1762.13 682.273 L1761.57 682.273 L1761.01 682.273 L1760.45 682.273 L1759.89 682.273 L1759.34 682.273 L1758.78 682.273 L1758.22 682.273 L1757.66 682.273 L1757.1 682.273 L1756.54 682.273 L1755.98 682.273 L1755.42 682.273 L1754.86 682.273 L1754.3 682.273 L1753.74 682.273 L1753.18 682.273 L1752.62 682.273 L1752.06 682.273 L1751.51 682.273 L1750.95 682.273 L1750.39 682.273 L1749.83 682.273 L1749.27 682.273 L1748.71 682.273 L1748.15 682.273 L1747.59 682.273 L1747.03 682.273 L1746.47 682.273 L1745.91 682.273 L1745.35 682.273 L1744.79 682.273 L1744.24 682.273 L1743.68 682.273 L1743.12 682.273 L1742.56 682.273 L1742 682.273 L1741.44 682.273 L1740.88 682.273 L1740.32 682.273 L1739.76 682.273 L1739.2 682.273 L1738.64 682.273 L1738.08 682.273 L1737.52 682.273 L1736.97 682.273 L1736.41 682.273 L1735.85 682.273 L1735.29 682.273 L1734.73 682.273 L1734.17 682.273 L1733.61 682.273 L1733.05 682.273 L1732.49 682.273 L1731.93 682.273 L1731.37 682.273 L1730.81 682.273 L1730.25 682.273 L1729.69 682.273 L1729.14 682.273 L1728.58 682.273 L1728.02 682.273 L1727.46 682.273 L1726.9 682.273 L1726.34 682.273 L1725.78 682.273 L1725.22 682.273 L1724.66 682.273 L1724.1 682.273 L1723.54 682.273 L1722.98 682.273 L1722.42 682.273 L1721.87 682.273 L1721.31 682.273 L1720.75 682.273 L1720.19 682.273 L1719.63 682.273 L1719.07 682.273 L1718.51 682.273 L1717.95 682.273 L1717.39 682.273 L1716.83 682.273 L1716.27 682.273 L1715.71 682.273 L1715.15 682.273 L1714.6 682.273 L1714.04 682.273 L1713.48 682.273 L1712.92 682.273 L1712.36 682.273 L1711.8 682.273 L1711.24 682.273 L1710.68 682.273 L1710.12 682.273 L1709.56 682.273 L1709 682.273 L1708.44 682.273 L1707.88 682.273 L1707.32 682.273 L1706.77 682.273 L1706.21 682.273 L1705.65 682.273 L1705.09 682.273 L1704.53 682.273 L1703.97 682.273 L1703.41 682.273 L1702.85 682.273 L1702.29 682.273 L1701.73 682.273 L1701.17 682.273 L1700.61 682.273 L1700.05 682.273 L1699.5 682.273 L1698.94 682.273 L1698.38 682.273 L1697.82 682.273 L1697.26 682.273 L1696.7 682.273 L1696.14 682.273 L1695.58 682.273 L1695.02 682.273 L1694.46 682.273 L1693.9 682.273 L1693.34 682.273 L1692.78 682.273 L1692.23 682.273 L1691.67 682.273 L1691.11 682.273 L1690.55 682.273 L1689.99 682.273 L1689.43 682.273 L1688.87 682.273 L1688.31 682.273 L1687.75 682.273 L1687.19 682.273 L1686.63 682.273 L1686.07 682.273 L1685.51 682.273 L1684.95 682.273 L1684.4 682.273 L1683.84 682.273 L1683.28 682.273 L1682.72 682.273 L1682.16 682.273 L1681.6 682.273 L1681.04 682.273 L1680.48 682.273 L1679.92 682.273 L1679.36 682.273 L1678.8 682.273 L1678.24 682.273 L1677.68 682.273 L1677.13 682.273 L1676.57 682.273 L1676.01 682.273 L1675.45 682.273 L1674.89 682.273 L1674.33 682.273 L1673.77 682.273 L1673.21 682.273 L1672.65 682.273 L1672.09 682.273 L1671.53 682.273 L1670.97 682.273 L1670.41 682.273 L1669.85 682.273 L1669.3 682.273 L1668.74 682.273 L1668.18 682.273 L1667.62 682.273 L1667.06 682.273 L1666.5 682.273 L1665.94 682.273 L1665.38 682.273 L1664.82 682.273 L1664.26 682.273 L1663.7 682.273 L1663.14 682.273 L1662.58 682.273 L1662.03 682.273 L1661.47 682.273 L1660.91 682.273 L1660.35 682.273 L1659.79 682.273 L1659.23 682.273 L1658.67 682.273 L1658.11 682.273 L1657.55 682.273 L1656.99 682.273 L1656.43 682.273 L1655.87 682.273 L1655.31 682.273 L1654.76 682.273 L1654.2 682.273 L1653.64 682.273 L1653.08 682.273 L1652.52 682.273 L1651.96 682.273 L1651.4 682.273 L1650.84 682.273 L1650.28 682.273 L1649.72 682.273 L1649.16 682.273 L1648.6 682.273 L1648.04 682.273 L1647.48 682.273 L1646.93 682.273 L1646.37 682.273 L1645.81 682.273 L1645.25 682.273 L1644.69 682.273 L1644.13 682.273 L1643.57 682.273 L1643.01 682.273 L1642.45 682.273 L1641.89 682.273 L1641.33 682.273 L1640.77 682.273 L1640.21 682.273 L1639.66 682.273 L1639.1 682.273 L1638.54 682.273 L1637.98 682.273 L1637.42 682.273 L1636.86 682.273 L1636.3 682.273 L1635.74 682.273 L1635.18 682.273 L1634.62 682.273 L1634.06 682.273 L1633.5 682.273 L1632.94 682.273 L1632.39 682.273 L1631.83 682.273 L1631.27 682.273 L1630.71 682.273 L1630.15 682.273 L1629.59 682.273 L1629.03 682.273 L1628.47 682.273 L1627.91 682.273 L1627.35 682.273 L1626.79 682.273 L1626.23 682.273 L1625.67 682.273 L1625.11 682.273 L1624.56 682.273 L1624 682.273 L1623.44 682.273 L1622.88 682.273 L1622.32 682.273 L1621.76 682.273 L1621.2 682.273 L1620.64 682.273 L1620.08 682.273 L1619.52 682.273 L1618.96 682.273 L1618.4 682.273 L1617.84 682.273 L1617.29 682.273 L1616.73 682.273 L1616.17 682.273 L1615.61 682.273 L1615.05 682.273 L1614.49 682.273 L1613.93 682.273 L1613.37 682.273 L1612.81 682.273 L1612.25 682.273 L1611.69 682.273 L1611.13 682.273 L1610.57 682.273 L1610.02 682.273 L1609.46 682.273 L1608.9 682.273 L1608.34 682.273 L1607.78 682.273 L1607.22 682.273 L1606.66 682.273 L1606.1 682.273 L1605.54 682.273 L1604.98 682.273 L1604.42 682.273 L1603.86 682.273 L1603.3 682.273 L1602.74 682.273 L1602.19 682.273 L1601.63 682.273 L1601.07 682.273 L1600.51 682.273 L1599.95 682.273 L1599.39 682.273 L1598.83 682.273 L1598.27 682.273 L1597.71 682.273 L1597.15 682.273 L1596.59 682.273 L1596.03 682.273 L1595.47 682.273 L1594.92 682.273 L1594.36 682.273 L1593.8 682.273 L1593.24 682.273 L1592.68 682.273 L1592.12 682.273 L1591.56 682.273 L1591 682.273 L1590.44 682.273 L1589.88 682.273 L1589.32 682.273 L1588.76 682.273 L1588.2 682.273 L1587.65 682.273 L1587.09 682.273 L1586.53 682.273 L1585.97 682.273 L1585.41 682.273 L1584.85 682.273 L1584.29 682.273 L1583.73 682.273 L1583.17 682.273 L1582.61 682.273 L1582.05 682.273 L1581.49 682.273 L1580.93 682.273 L1580.37 682.273 L1579.82 682.273 L1579.26 682.273 L1578.7 682.273 L1578.14 682.273 L1577.58 682.273 L1577.02 682.273 L1576.46 682.273 L1575.9 682.273 L1575.34 682.273 L1574.78 682.273 L1574.22 682.273 L1573.66 682.273 L1573.1 682.273 L1572.55 682.273 L1571.99 682.273 L1571.43 682.273 L1570.87 682.273 L1570.31 682.273 L1569.75 682.273 L1569.19 682.273 L1568.63 682.273 L1568.07 682.273 L1567.51 682.273 L1566.95 682.273 L1566.39 682.273 L1565.83 682.273 L1565.28 682.273 L1564.72 682.273 L1564.16 682.273 L1563.6 682.273 L1563.04 682.273 L1562.48 682.273 L1561.92 682.273 L1561.36 682.273 L1560.8 682.273 L1560.24 682.273 L1559.68 682.273 L1559.12 682.273 L1558.56 682.273 L1558 682.273 L1557.45 682.273 L1556.89 682.273 L1556.33 682.273 L1555.77 682.273 L1555.21 682.273 L1554.65 682.273 L1554.09 682.273 L1553.53 682.273 L1552.97 682.273 L1552.41 682.273 L1551.85 682.273 L1551.29 682.273 L1550.73 682.273 L1550.18 682.273 L1549.62 682.273 L1549.06 682.273 L1548.5 682.273 L1547.94 682.273 L1547.38 682.273 L1546.82 682.273 L1546.26 682.273 L1545.7 682.273 L1545.14 682.273 L1544.58 682.273 L1544.02 682.273 L1543.46 682.273 L1542.9 682.273 L1542.35 682.273 L1541.79 682.273 L1541.23 682.273 L1540.67 682.273 L1540.11 682.273 L1539.55 682.273 L1538.99 682.273 L1538.43 682.273 L1537.87 682.273 L1537.31 682.273 L1536.75 682.273 L1536.19 682.273 L1535.63 682.273 L1535.08 682.273 L1534.52 682.273 L1533.96 682.273 L1533.4 682.273 L1532.84 682.273 L1532.28 682.273 L1531.72 682.273 L1531.16 682.273 L1530.6 682.273 L1530.04 682.273 L1529.48 682.273 L1528.92 682.273 L1528.36 682.273 L1527.81 682.273 L1527.25 682.273 L1526.69 682.273 L1526.13 682.273 L1525.57 682.273 L1525.01 682.273 L1524.45 682.273 L1523.89 682.273 L1523.33 682.273 L1522.77 682.273 L1522.21 682.273 L1521.65 682.273 L1521.09 682.273 L1520.53 682.273 L1519.98 682.273 L1519.42 682.273 L1518.86 682.273 L1518.3 682.273 L1517.74 682.273 L1517.18 682.273 L1516.62 682.273 L1516.06 682.273 L1515.5 682.273 L1514.94 682.273 L1514.38 682.273 L1513.82 682.273 L1513.26 682.273 L1512.71 682.273 L1512.15 682.273 L1511.59 682.273 L1511.03 682.273 L1510.47 682.273 L1509.91 682.273 L1509.35 682.273 L1508.79 682.273 L1508.23 682.273 L1507.67 682.273 L1507.11 682.273 L1506.55 682.273 L1505.99 682.273 L1505.44 682.273 L1504.88 682.273 L1504.32 682.273 L1503.76 682.273 L1503.2 682.273 L1502.64 682.273 L1502.08 682.273 L1501.52 682.273 L1500.96 682.273 L1500.4 682.273 L1499.84 682.273 L1499.28 682.273 L1498.72 682.273 L1498.16 682.273 L1497.61 682.273 L1497.05 682.273 L1496.49 682.273 L1495.93 682.273 L1495.37 682.273 L1494.81 682.273 L1494.25 682.273 L1493.69 682.273 L1493.13 682.273 L1492.57 682.273 L1492.01 682.273 L1491.45 682.273 L1490.89 682.273 L1490.34 682.273 L1489.78 682.273 L1489.22 682.273 L1488.66 682.273 L1488.1 682.273 L1487.54 682.273 L1486.98 682.273 L1486.42 682.273 L1485.86 682.273 L1485.3 682.273 L1484.74 682.273 L1484.18 682.273 L1483.62 682.273 L1483.07 682.273 L1482.51 682.273 L1481.95 682.273 L1481.39 682.273 L1480.83 682.273 L1480.27 682.273 L1479.71 682.273 L1479.15 682.273 L1478.59 682.273 L1478.03 682.273 L1477.47 682.273 L1476.91 682.273 L1476.35 682.273 L1475.79 682.273 L1475.24 682.273 L1474.68 682.273 L1474.12 682.273 L1473.56 682.273 L1473 682.273 L1472.44 682.273 L1471.88 682.273 L1471.32 682.273 L1470.76 682.273 L1470.2 682.273 L1469.64 682.273 L1469.08 682.273 L1468.52 682.273 L1467.97 682.273 L1467.41 682.273 L1466.85 682.273 L1466.29 682.273 L1465.73 682.273 L1465.17 682.273 L1464.61 682.273 L1464.05 682.273 L1463.49 682.273 L1462.93 682.273 L1462.37 682.273 L1461.81 682.273 L1461.25 682.273 L1460.7 682.273 L1460.14 682.273 L1459.58 682.273 L1459.02 682.273 L1458.46 682.273 L1457.9 682.273 L1457.34 682.273 L1456.78 682.273 L1456.22 682.273 L1455.66 682.273 L1455.1 682.273 L1454.54 682.273 L1453.98 682.273 L1453.42 682.273 L1452.87 682.273 L1452.31 682.273 L1451.75 682.273 L1451.19 682.273 L1450.63 682.273 L1450.07 682.273 L1449.51 682.273 L1448.95 682.273 L1448.39 682.273 L1447.83 682.273 L1447.27 682.273 L1446.71 682.273 L1446.15 682.273 L1445.6 682.273 L1445.04 682.273 L1444.48 682.273 L1443.92 682.273 L1443.36 682.273 L1442.8 682.273 L1442.24 682.273 L1441.68 682.273 L1441.12 682.273 L1440.56 682.273 L1440 682.273 L1439.44 682.273 L1438.88 682.273 L1438.33 682.273 L1437.77 682.273 L1437.21 682.273 L1436.65 682.273 L1436.09 682.273 L1435.53 682.273 L1434.97 682.273 L1434.41 682.273 L1433.85 682.273 L1433.29 682.273 L1432.73 682.273 L1432.17 682.273 L1431.61 682.273 L1431.05 682.273 L1430.5 682.273 L1429.94 682.273 L1429.38 682.273 L1428.82 682.273 L1428.26 682.273 L1427.7 682.273 L1427.14 682.273 L1426.58 682.273 L1426.02 682.273 L1425.46 682.273 L1424.9 682.273 L1424.34 682.273 L1423.78 682.273 L1423.23 682.273 L1422.67 682.273 L1422.11 682.273 L1421.55 682.273 L1420.99 682.273 L1420.43 682.273 L1419.87 682.273 L1419.31 682.273 L1418.75 682.273 L1418.19 682.273 L1417.63 682.273 L1417.07 682.273 L1416.51 682.273 L1415.95 682.273 L1415.4 682.273 L1414.84 682.273 L1414.28 682.273 L1413.72 682.273 L1413.16 682.273 L1412.6 682.273 L1412.04 682.273 L1411.48 682.273 L1410.92 682.273 L1410.36 682.273 L1409.8 682.273 L1409.24 682.273 L1408.68 682.273 L1408.13 682.273 L1407.57 682.273 L1407.01 682.273 L1406.45 682.273 L1405.89 682.273 L1405.33 682.273 L1404.77 682.273 L1404.21 682.273 L1403.65 682.273 L1403.09 682.273 L1402.53 682.273 L1401.97 682.273 L1401.41 682.273 L1400.86 682.273 L1400.3 682.273 L1399.74 682.273 L1399.18 682.273 L1398.62 682.273 L1398.06 682.273 L1397.5 682.273 L1396.94 682.273 L1396.38 682.273 L1395.82 682.273 L1395.26 682.273 L1394.7 682.273 L1394.14 682.273 L1393.58 682.273 L1393.03 682.273 L1392.47 682.273 L1391.91 682.273 L1391.35 682.273 L1390.79 682.273 L1390.23 682.273 L1389.67 682.273 L1389.11 682.273 L1388.55 682.273 L1387.99 682.273 L1387.43 682.273 L1386.87 682.273 L1386.31 682.273 L1385.76 682.273 L1385.2 682.273 L1384.64 682.273 L1384.08 682.273 L1383.52 682.273 L1382.96 682.273 L1382.4 682.273 L1381.84 682.273 L1381.28 682.273 L1380.72 682.273 L1380.16 682.273 L1379.6 682.273 L1379.04 682.273 L1378.49 682.273 L1377.93 682.273 L1377.37 682.273 L1376.81 682.273 L1376.25 682.273 L1375.69 682.273 L1375.13 682.273 L1374.57 682.273 L1374.01 682.273 L1373.45 682.273 L1372.89 682.273 L1372.33 682.273 L1371.77 682.273 L1371.21 682.273 L1370.66 682.273 L1370.1 682.273 L1369.54 682.273 L1368.98 682.273 L1368.42 682.273 L1367.86 682.273 L1367.3 682.273 L1366.74 682.273 L1366.18 682.273 L1365.62 682.273 L1365.06 682.273 L1364.5 682.273 L1363.94 682.273 L1363.39 682.273 L1362.83 682.273 L1362.27 682.273 L1361.71 682.273 L1361.15 682.273 L1360.59 682.273 L1360.03 682.273 L1359.47 682.273 L1358.91 682.273 L1358.35 682.273 L1357.79 682.273 L1357.23 682.273 L1356.67 682.273 L1356.12 682.273 L1355.56 682.273 L1355 682.273 L1354.44 682.273 L1353.88 682.273 L1353.32 682.273 L1352.76 682.273 L1352.2 682.273 L1351.64 682.273 L1351.08 682.273 L1350.52 682.273 L1349.96 682.273 L1349.4 682.273 L1348.84 682.273 L1348.29 682.273 L1347.73 682.273 L1347.17 682.273 L1346.61 682.273 L1346.05 682.273 L1345.49 682.273 L1344.93 682.273 L1344.37 682.273 L1343.81 682.273 L1343.25 682.273 L1342.69 682.273 L1342.13 682.273 L1341.57 682.273 L1341.02 682.273 L1340.46 682.273 L1339.9 682.273 L1339.34 682.273 L1338.78 682.273 L1338.22 682.273 L1337.66 682.273 L1337.1 682.273 L1336.54 682.273 L1335.98 682.273 L1335.42 682.273 L1334.86 682.273 L1334.3 682.273 L1333.75 682.273 L1333.19 682.273 L1332.63 682.273 L1332.07 682.273 L1331.51 682.273 L1330.95 682.273 L1330.39 682.273 L1329.83 682.273 L1329.27 682.273 L1328.71 682.273 L1328.15 682.273 L1327.59 682.273 L1327.03 682.273 L1326.47 682.273 L1325.92 682.273 L1325.36 682.273 L1324.8 682.273 L1324.24 682.273 L1323.68 682.273 L1323.12 682.273 L1322.56 682.273 L1322 682.273 L1321.44 682.273 L1320.88 682.273 L1320.32 682.273 L1319.76 682.273 L1319.2 682.273 L1318.65 682.273 L1318.09 682.273 L1317.53 682.273 L1316.97 682.273 L1316.41 682.273 L1315.85 682.273 L1315.29 682.273 L1314.73 682.273 L1314.17 682.273 L1313.61 682.273 L1313.05 682.273 L1312.49 682.273 L1311.93 682.273 L1311.38 682.273 L1310.82 682.273 L1310.26 682.273 L1309.7 682.273 L1309.14 682.273 L1308.58 682.273 L1308.02 682.273 L1307.46 682.273 L1306.9 682.273 L1306.34 682.273 L1305.78 682.273 L1305.22 682.273 L1304.66 682.273 L1304.1 682.273 L1303.55 682.273 L1302.99 682.273 L1302.43 682.273 L1301.87 682.273 L1301.31 682.273 L1300.75 682.273 L1300.19 682.273 L1299.63 682.273 L1299.07 682.273 L1298.51 682.273 L1297.95 682.273 L1297.39 682.273 L1296.83 682.273 L1296.28 682.273 L1295.72 682.273 L1295.16 682.273 L1294.6 682.273 L1294.04 682.273 L1293.48 682.273 L1292.92 682.273 L1292.36 682.273 L1291.8 682.273 L1291.24 682.273 L1290.68 682.273 L1290.12 682.273 L1289.56 682.273 L1289 682.273 L1288.45 682.273 L1287.89 682.273 L1287.33 682.273 L1286.77 682.273 L1286.21 682.273 L1285.65 682.273 L1285.09 682.273 L1284.53 682.273 L1283.97 682.273 L1283.41 682.273 L1282.85 682.273 L1282.29 682.273 L1281.73 682.273 L1281.18 682.273 L1280.62 682.273 L1280.06 682.273 L1279.5 682.273 L1278.94 682.273 L1278.38 682.273 L1277.82 682.273 L1277.26 682.273 L1276.7 682.273 L1276.14 682.273 L1275.58 682.273 L1275.02 682.273 L1274.46 682.273 L1273.91 682.273 L1273.35 682.273 L1272.79 682.273 L1272.23 682.273 L1271.67 682.273 L1271.11 682.273 L1270.55 682.273 L1269.99 682.273 L1269.43 682.273 L1268.87 682.273 L1268.31 682.273 L1267.75 682.273 L1267.19 682.273 L1266.63 682.273 L1266.08 682.273 L1265.52 682.273 L1264.96 682.273 L1264.4 682.273 L1263.84 682.273 L1263.28 682.273 L1262.72 682.273 L1262.16 682.273 L1261.6 682.273 L1261.04 682.273 L1260.48 682.273 L1259.92 682.273 L1259.36 682.273 L1258.81 682.273 L1258.25 682.273 L1257.69 682.273 L1257.13 682.273 L1256.57 682.273 L1256.01 682.273 L1255.45 682.273 L1254.89 682.273 L1254.33 682.273 L1253.77 682.273 L1253.21 682.273 L1252.65 682.273 L1252.09 682.273 L1251.54 682.273 L1250.98 682.273 L1250.42 682.273 L1249.86 682.273 L1249.3 682.273 L1248.74 682.273 L1248.18 682.273 L1247.62 682.273 L1247.06 682.273 L1246.5 682.273 L1245.94 682.273 L1245.38 682.273 L1244.82 682.273 L1244.26 682.273 L1243.71 682.273 L1243.15 682.273 L1242.59 682.273 L1242.03 682.273 L1241.47 682.273 L1240.91 682.273 L1240.35 682.273 L1239.79 682.273 L1239.23 682.273 L1238.67 682.273 L1238.11 682.273 L1237.55 682.273 L1236.99 682.273 L1236.44 682.273 L1235.88 682.273 L1235.32 682.273 L1234.76 682.273 L1234.2 682.273 L1233.64 682.273 L1233.08 682.273 L1232.52 682.273 L1231.96 682.273 L1231.4 682.273 L1230.84 682.273 L1230.28 682.273 L1229.72 682.273 L1229.17 682.273 L1228.61 682.273 L1228.05 682.273 L1227.49 682.273 L1226.93 682.273 L1226.37 682.273 L1225.81 682.273 L1225.25 682.273 L1224.69 682.273 L1224.13 682.273 L1223.57 682.273 L1223.01 682.273 L1222.45 682.273 L1221.89 682.273 L1221.34 682.273 L1220.78 682.273 L1220.22 682.273 L1219.66 682.273 L1219.1 682.273 L1218.54 682.273 L1217.98 682.273 L1217.42 682.273 L1216.86 682.273 L1216.3 682.273 L1215.74 682.273 L1215.18 682.273 L1214.62 682.273 L1214.07 682.273 L1213.51 682.273 L1212.95 682.273 L1212.39 682.273 L1211.83 682.273 L1211.27 682.273 L1210.71 682.273 L1210.15 682.273 L1209.59 682.273 L1209.03 682.273 L1208.47 682.273 L1207.91 682.273 L1207.35 682.273 L1206.8 682.273 L1206.24 682.273 L1205.68 682.273 L1205.12 682.273 L1204.56 682.273 L1204 682.273 L1203.44 682.273 L1202.88 682.273 L1202.32 682.273 L1201.76 682.273 L1201.2 682.273 L1200.64 682.273 L1200.08 682.273 L1199.52 682.273 L1198.97 682.273 L1198.41 682.273 L1197.85 682.273 L1197.29 682.273 L1196.73 682.273 L1196.17 682.273 L1195.61 682.273 L1195.05 682.273 L1194.49 682.273 L1193.93 682.273 L1193.37 682.273 L1192.81 682.273 L1192.25 682.273 L1191.7 682.273 L1191.14 682.273 L1190.58 682.273 L1190.02 682.273 L1189.46 682.273 L1188.9 682.273 L1188.34 682.273 L1187.78 682.273 L1187.22 682.273 L1186.66 682.273 L1186.1 682.273 L1185.54 682.273 L1184.98 682.273 L1184.43 682.273 L1183.87 682.273 L1183.31 682.273 L1182.75 682.273 L1182.19 682.273 L1181.63 682.273 L1181.07 682.273 L1180.51 682.273 L1179.95 682.273 L1179.39 682.273 L1178.83 682.273 L1178.27 682.273 L1177.71 682.273 L1177.15 682.273 L1176.6 682.273 L1176.04 682.273 L1175.48 682.273 L1174.92 682.273 L1174.36 682.273 L1173.8 682.273 L1173.24 682.273 L1172.68 682.273 L1172.12 682.273 L1171.56 682.273 L1171 682.273 L1170.44 682.273 L1169.88 682.273 L1169.33 682.273 L1168.77 682.273 L1168.21 682.273 L1167.65 682.273 L1167.09 682.273 L1166.53 682.273 L1165.97 682.273 L1165.41 682.273 L1164.85 682.273 L1164.29 682.273 L1163.73 682.273 L1163.17 682.273 L1162.61 682.273 L1162.05 682.273 L1161.5 682.273 L1160.94 682.273 L1160.38 682.273 L1159.82 682.273 L1159.26 682.273 L1158.7 682.273 L1158.14 682.273 L1157.58 682.273 L1157.02 682.273 L1156.46 682.273 L1155.9 682.273 L1155.34 682.273 L1154.78 682.273 L1154.23 682.273 L1153.67 682.273 L1153.11 682.273 L1152.55 682.273 L1151.99 682.273 L1151.43 682.273 L1150.87 682.273 L1150.31 682.273 L1149.75 682.273 L1149.19 682.273 L1148.63 682.273 L1148.07 682.273 L1147.51 682.273 L1146.96 682.273 L1146.4 682.273 L1145.84 682.273 L1145.28 682.273 L1144.72 682.273 L1144.16 682.273 L1143.6 682.273 L1143.04 682.273 L1142.48 682.273 L1141.92 682.273 L1141.36 682.273 L1140.8 682.273 L1140.24 682.273 L1139.68 682.273 L1139.13 682.273 L1138.57 682.273 L1138.01 682.273 L1137.45 682.273 L1136.89 682.273 L1136.33 682.273 L1135.77 682.273 L1135.21 682.273 L1134.65 682.273 L1134.09 682.273 L1133.53 682.273 L1132.97 682.273 L1132.41 682.273 L1131.86 682.273 L1131.3 682.273 L1130.74 682.273 L1130.18 682.273 L1129.62 682.273 L1129.06 682.273 L1128.5 682.273 L1127.94 682.273 L1127.38 682.273 L1126.82 682.273 L1126.26 682.273 L1125.7 682.273 L1125.14 682.273 L1124.59 682.273 L1124.03 682.273 L1123.47 682.273 L1122.91 682.273 L1122.35 682.273 L1121.79 682.273 L1121.23 682.273 L1120.67 682.273 L1120.11 682.273 L1119.55 682.273 L1118.99 682.273 L1118.43 682.273 L1117.87 682.273 L1117.31 682.273 L1116.76 682.273 L1116.2 682.273 L1115.64 682.273 L1115.08 682.273 L1114.52 682.273 L1113.96 682.273 L1113.4 682.273 L1112.84 682.273 L1112.28 682.273 L1111.72 682.273 L1111.16 682.273 L1110.6 682.273 L1110.04 682.273 L1109.49 682.273 L1108.93 682.273 L1108.37 682.273 L1107.81 682.273 L1107.25 682.273 L1106.69 682.273 L1106.13 682.273 L1105.57 682.273 L1105.01 682.273 L1104.45 682.273 L1103.89 682.273 L1103.33 682.273 L1102.77 682.273 L1102.22 682.273 L1101.66 682.273 L1101.1 682.273 L1100.54 682.273 L1099.98 682.273 L1099.42 682.273 L1098.86 682.273 L1098.3 682.273 L1097.74 682.273 L1097.18 682.273 L1096.62 682.273 L1096.06 682.273 L1095.5 682.273 L1094.94 682.273 L1094.39 682.273 L1093.83 682.273 L1093.27 682.273 L1092.71 682.273 L1092.15 682.273 L1091.59 682.273 L1091.03 682.273 L1090.47 682.273 L1089.91 682.273 L1089.35 682.273 L1088.79 682.273 L1088.23 682.273 L1087.67 682.273 L1087.12 682.273 L1086.56 682.273 L1086 682.273 L1085.44 682.273 L1084.88 682.273 L1084.32 682.273 L1083.76 682.273 L1083.2 682.273 L1082.64 682.273 L1082.08 682.273 L1081.52 682.273 L1080.96 682.273 L1080.4 682.273 L1079.85 682.273 L1079.29 682.273 L1078.73 682.273 L1078.17 682.273 L1077.61 682.273 L1077.05 682.273 L1076.49 682.273 L1075.93 682.273 L1075.37 682.273 L1074.81 682.273 L1074.25 682.273 L1073.69 682.273 L1073.13 682.273 L1072.57 682.273 L1072.02 682.273 L1071.46 682.273 L1070.9 682.273 L1070.34 682.273 L1069.78 682.273 L1069.22 682.273 L1068.66 682.273 L1068.1 682.273 L1067.54 682.273 L1066.98 682.273 L1066.42 682.273 L1065.86 682.273 L1065.3 682.273 L1064.75 682.273 L1064.19 682.273 L1063.63 682.273 L1063.07 682.273 L1062.51 682.273 L1061.95 682.273 L1061.39 682.273 L1060.83 682.273 L1060.27 682.273 L1059.71 682.273 L1059.15 682.273 L1058.59 682.273 L1058.03 682.273 L1057.48 682.273 L1056.92 682.273 L1056.36 682.273 L1055.8 682.273 L1055.24 682.273 L1054.68 682.273 L1054.12 682.273 L1053.56 682.273 L1053 682.273 L1052.44 682.273 L1051.88 682.273 L1051.32 682.273 L1050.76 682.273 L1050.2 682.273 L1049.65 682.273 L1049.09 682.273 L1048.53 682.273 L1047.97 682.273 L1047.41 682.273 L1046.85 682.273 L1046.29 682.273 L1045.73 682.273 L1045.17 682.273 L1044.61 682.273 L1044.05 682.273 L1043.49 682.273 L1042.93 682.273 L1042.38 682.273 L1041.82 682.273 L1041.26 682.273 L1040.7 682.273 L1040.14 682.273 L1039.58 682.273 L1039.02 682.273 L1038.46 682.273 L1037.9 682.273 L1037.34 682.273 L1036.78 682.273 L1036.22 682.273 L1035.66 682.273 L1035.1 682.273 L1034.55 682.273 L1033.99 682.273 L1033.43 682.273 L1032.87 682.273 L1032.31 682.273 L1031.75 682.273 L1031.19 682.273 L1030.63 682.273 L1030.07 682.273 L1029.51 682.273 L1028.95 682.273 L1028.39 682.273 L1027.83 682.273 L1027.28 682.273 L1026.72 682.273 L1026.16 682.273 L1025.6 682.273 L1025.04 682.273 L1024.48 682.273 L1023.92 682.273 L1023.36 682.273 L1022.8 682.273 L1022.24 682.273 L1021.68 682.273 L1021.12 682.273 L1020.56 682.273 L1020.01 682.273 L1019.45 682.273 L1018.89 682.273 L1018.33 682.273 L1017.77 682.273 L1017.21 682.273 L1016.65 682.273 L1016.09 682.273 L1015.53 682.273 L1014.97 682.273 L1014.41 682.273 L1013.85 682.273 L1013.29 682.273 L1012.73 682.273 L1012.18 682.273 L1011.62 682.273 L1011.06 682.273 L1010.5 682.273 L1009.94 682.273 L1009.38 682.273 L1008.82 682.273 L1008.26 682.273 L1007.7 682.273 L1007.14 682.273 L1006.58 682.273 L1006.02 682.273 L1005.46 682.273 L1004.91 682.273 L1004.35 682.273 L1003.79 682.273 L1003.23 682.273 L1002.67 682.273 L1002.11 682.273 L1001.55 682.273 L1000.99 682.273 L1000.43 682.273 L999.872 682.273 L999.313 682.273 L998.754 682.273 L998.194 682.273 L997.635 682.273 L997.076 682.273 L996.517 682.273 L995.957 682.273 L995.398 682.273 L994.839 682.273 L994.28 682.273 L993.72 682.273 L993.161 682.273 L992.602 682.273 L992.043 682.273 L991.483 682.273 L990.924 682.273 L990.365 682.273 L989.806 682.273 L989.246 682.273 L988.687 682.273 L988.128 682.273 L987.569 682.273 L987.009 682.273 L986.45 682.273 L985.891 682.273 L985.332 682.273 L984.772 682.273 L984.213 682.273 L983.654 682.273 L983.095 682.273 L982.535 682.273 L981.976 682.273 L981.417 682.273 L980.858 682.273 L980.298 682.273 L979.739 682.273 L979.18 682.273 L978.621 682.273 L978.061 682.273 L977.502 682.273 L976.943 682.273 L976.384 682.273 L975.824 682.273 L975.265 682.273 L974.706 682.273 L974.147 682.273 L973.587 682.273 L973.028 682.273 L972.469 682.273 L971.91 682.273 L971.35 682.273 L970.791 682.273 L970.232 682.273 L969.673 682.273 L969.113 682.273 L968.554 682.273 L967.995 682.273 L967.436 682.273 L966.876 682.273 L966.317 682.273 L965.758 682.273 L965.199 682.273 L964.639 682.273 L964.08 682.273 L963.521 682.273 L962.962 682.273 L962.402 682.273 L961.843 682.273 L961.284 682.273 L960.725 682.273 L960.165 682.273 L959.606 682.273 L959.047 682.273 L958.488 682.273 L957.928 682.273 L957.369 682.273 L956.81 682.273 L956.251 682.273 L955.691 682.273 L955.132 682.273 L954.573 682.273 L954.014 682.273 L953.454 682.273 L952.895 682.273 L952.336 682.273 L951.777 682.273 L951.217 682.273 L950.658 682.273 L950.099 682.273 L949.54 682.273 L948.98 682.273 L948.421 682.273 L947.862 682.273 L947.303 682.273 L946.743 682.273 L946.184 682.273 L945.625 682.273 L945.066 682.273 L944.506 682.273 L943.947 682.273 L943.388 682.273 L942.829 682.273 L942.269 682.273 L941.71 682.273 L941.151 682.273 L940.592 682.273 L940.032 682.273 L939.473 682.273 L938.914 682.273 L938.355 682.273 L937.795 682.273 L937.236 682.273 L936.677 682.273 L936.118 682.273 L935.558 682.273 L934.999 682.273 L934.44 682.273 L933.881 682.273 L933.321 682.273 L932.762 682.273 L932.203 682.273 L931.644 682.273 L931.084 682.273 L930.525 682.273 L929.966 682.273 L929.406 682.273 L928.847 682.273 L928.288 682.273 L927.729 682.273 L927.169 682.273 L926.61 682.273 L926.051 682.273 L925.492 682.273 L924.932 682.273 L924.373 682.273 L923.814 682.273 L923.255 682.273 L922.695 682.273 L922.136 682.273 L921.577 682.273 L921.018 682.273 L920.458 682.273 L919.899 682.273 L919.34 682.273 L918.781 682.273 L918.221 682.273 L917.662 682.273 L917.103 682.273 L916.544 682.273 L915.984 682.273 L915.425 682.273 L914.866 682.273 L914.307 682.273 L913.747 682.273 L913.188 682.273 L912.629 682.273 L912.07 682.273 L911.51 682.273 L910.951 682.273 L910.392 682.273 L909.833 682.273 L909.273 682.273 L908.714 682.273 L908.155 682.273 L907.596 682.273 L907.036 682.273 L906.477 682.273 L905.918 682.273 L905.359 682.273 L904.799 682.273 L904.24 682.273 L903.681 682.273 L903.122 682.273 L902.562 682.273 L902.003 682.273 L901.444 682.273 L900.885 682.273 L900.325 682.273 L899.766 682.273 L899.207 682.273 L898.648 682.273 L898.088 682.273 L897.529 682.273 L896.97 682.273 L896.411 682.273 L895.851 682.273 L895.292 682.273 L894.733 682.273 L894.174 682.273 L893.614 682.273 L893.055 682.273 L892.496 682.273 L891.937 682.273 L891.377 682.273 L890.818 682.273 L890.259 682.273 L889.7 682.273 L889.14 682.273 L888.581 682.273 L888.022 682.273 L887.463 682.273 L886.903 682.273 L886.344 682.273 L885.785 682.273 L885.226 682.273 L884.666 682.273 L884.107 682.273 L883.548 682.273 L882.989 682.273 L882.429 682.273 L881.87 682.273 L881.311 682.273 L880.752 682.273 L880.192 682.273 L879.633 682.273 L879.074 682.273 L878.515 682.273 L877.955 682.273 L877.396 682.273 L876.837 682.273 L876.278 682.273 L875.718 682.273 L875.159 682.273 L874.6 682.273 L874.041 682.273 L873.481 682.273 L872.922 682.273 L872.363 682.273 L871.804 682.273 L871.244 682.273 L870.685 682.273 L870.126 682.273 L869.567 682.273 L869.007 682.273 L868.448 682.273 L867.889 682.273 L867.33 682.273 L866.77 682.273 L866.211 682.273 L865.652 682.273 L865.093 682.273 L864.533 682.273 L863.974 682.273 L863.415 682.273 L862.856 682.273 L862.296 682.273 L861.737 682.273 L861.178 682.273 L860.619 682.273 L860.059 682.273 L859.5 682.273 L858.941 682.273 L858.382 682.273 L857.822 682.273 L857.263 682.273 L856.704 682.273 L856.145 682.273 L855.585 682.273 L855.026 682.273 L854.467 682.273 L853.908 682.273 L853.348 682.273 L852.789 682.273 L852.23 682.273 L851.671 682.273 L851.111 682.273 L850.552 682.273 L849.993 682.273 L849.434 682.273 L848.874 682.273 L848.315 682.273 L847.756 682.273 L847.197 682.273 L846.637 682.273 L846.078 682.273 L845.519 682.273 L844.96 682.273 L844.4 682.273 L843.841 682.273 L843.282 682.273 L842.723 682.273 L842.163 682.273 L841.604 682.273 L841.045 682.273 L840.486 682.273 L839.926 682.273 L839.367 682.273 L838.808 682.273 L838.249 682.273 L837.689 682.273 L837.13 682.273 L836.571 682.273 L836.012 682.273 L835.452 682.273 L834.893 682.273 L834.334 682.273 L833.775 682.273 L833.215 682.273 L832.656 682.273 L832.097 682.273 L831.538 682.273 L830.978 682.273 L830.419 682.273 L829.86 682.273 L829.301 682.273 L828.741 682.273 L828.182 682.273 L827.623 682.273 L827.064 682.273 L826.504 682.273 L825.945 682.273 L825.386 682.273 L824.827 682.273 L824.267 682.273 L823.708 682.273 L823.149 682.273 L822.59 682.273 L822.03 682.273 L821.471 682.273 L820.912 682.273 L820.353 682.273 L819.793 682.273 L819.234 682.273 L818.675 682.273 L818.116 682.273 L817.556 682.273 L816.997 682.273 L816.438 682.273 L815.879 682.273 L815.319 682.273 L814.76 682.273 L814.201 682.273 L813.642 682.273 L813.082 682.273 L812.523 682.273 L811.964 682.273 L811.405 682.273 L810.845 682.273 L810.286 682.273 L809.727 682.273 L809.168 682.273 L808.608 682.273 L808.049 682.273 L807.49 682.273 L806.931 682.273 L806.371 682.273 L805.812 682.273 L805.253 682.273 L804.693 682.273 L804.134 682.273 L803.575 682.273 L803.016 682.273 L802.456 682.273 L801.897 682.273 L801.338 682.273 L800.779 682.273 L800.219 682.273 L799.66 682.273 L799.101 682.273 L798.542 682.273 L797.982 682.273 L797.423 682.273 L796.864 682.273 L796.305 682.273 L795.745 682.273 L795.186 682.273 L794.627 682.273 L794.068 682.273 L793.508 682.273 L792.949 682.273 L792.39 682.273 L791.831 682.273 L791.271 682.273 L790.712 682.273 L790.153 682.273 L789.594 682.273 L789.034 682.273 L788.475 682.273 L787.916 682.273 L787.357 682.273 L786.797 682.273 L786.238 682.273 L785.679 682.273 L785.12 682.273 L784.56 682.273 L784.001 682.273 L783.442 682.273 L782.883 682.273 L782.323 682.273 L781.764 682.273 L781.205 682.273 L780.646 682.273 L780.086 682.273 L779.527 682.273 L778.968 682.273 L778.409 682.273 L777.849 682.273 L777.29 682.273 L776.731 682.273 L776.172 682.273 L775.612 682.273 L775.053 682.273 L774.494 682.273 L773.935 682.273 L773.375 682.273 L772.816 682.273 L772.257 682.273 L771.698 682.273 L771.138 682.273 L770.579 682.273 L770.02 682.273 L769.461 682.273 L768.901 682.273 L768.342 682.273 L767.783 682.273 L767.224 682.273 L766.664 682.273 L766.105 682.273 L765.546 682.273 L764.987 682.273 L764.427 682.273 L763.868 682.273 L763.309 682.273 L762.75 682.273 L762.19 682.273 L761.631 682.273 L761.072 682.273 L760.513 682.273 L759.953 682.273 L759.394 682.273 L758.835 682.273 L758.276 682.273 L757.716 682.273 L757.157 682.273 L756.598 682.273 L756.039 682.273 L755.479 682.273 L754.92 682.273 L754.361 682.273 L753.802 682.273 L753.242 682.273 L752.683 682.273 L752.124 682.273 L751.565 682.273 L751.005 682.273 L750.446 682.273 L749.887 682.273 L749.328 682.273 L748.768 682.273 L748.209 682.273 L747.65 682.273 L747.091 682.273 L746.531 682.273 L745.972 682.273 L745.413 682.273 L744.854 682.273 L744.294 682.273 L743.735 682.273 L743.176 682.273 L742.617 682.273 L742.057 682.273 L741.498 682.273 L740.939 682.273 L740.38 682.273 L739.82 682.273 L739.261 682.273 L738.702 682.273 L738.143 682.273 L737.583 682.273 L737.024 682.273 L736.465 682.273 L735.906 682.273 L735.346 682.273 L734.787 682.273 L734.228 682.273 L733.669 682.273 L733.109 682.273 L732.55 682.273 L731.991 682.273 L731.432 682.273 L730.872 682.273 L730.313 682.273 L729.754 682.273 L729.195 682.273 L728.635 682.273 L728.076 682.273 L727.517 682.273 L726.958 682.273 L726.398 682.273 L725.839 682.273 L725.28 682.273 L724.721 682.273 L724.161 682.273 L723.602 682.273 L723.043 682.273 L722.484 682.273 L721.924 682.273 L721.365 682.273 L720.806 682.273 L720.247 682.273  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip513)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,686.171 720.806,686.171 721.365,686.171 721.924,686.171 722.484,686.171 723.043,686.171 723.602,686.171 724.161,686.171 724.721,686.171 725.28,686.171 725.839,686.171 726.398,686.171 726.958,686.171 727.517,686.171 728.076,686.171 728.635,686.171 729.195,686.171 729.754,686.171 730.313,686.171 730.872,686.171 731.432,686.171 731.991,686.171 732.55,686.171 733.109,686.171 733.669,686.171 734.228,686.171 734.787,686.171 735.346,686.171 735.906,686.171 736.465,686.171 737.024,686.171 737.583,686.171 738.143,686.171 738.702,686.171 739.261,686.171 739.82,686.171 740.38,686.171 740.939,686.171 741.498,686.171 742.057,686.171 742.617,686.171 743.176,686.171 743.735,686.171 744.294,686.171 744.854,686.171 745.413,686.171 745.972,686.171 746.531,686.171 747.091,686.171 747.65,686.171 748.209,686.171 748.768,686.171 749.328,686.171 749.887,686.171 750.446,686.171 751.005,686.171 751.565,686.171 752.124,686.171 752.683,686.171 753.242,686.171 753.802,686.171 754.361,686.171 754.92,686.171 755.479,686.171 756.039,686.171 756.598,686.171 757.157,686.171 757.716,686.171 758.276,686.171 758.835,686.171 759.394,686.171 759.953,686.171 760.513,686.171 761.072,686.171 761.631,686.171 762.19,686.171 762.75,686.171 763.309,686.171 763.868,686.171 764.427,686.171 764.987,686.171 765.546,686.171 766.105,686.171 766.664,686.171 767.224,686.171 767.783,686.171 768.342,686.171 768.901,686.171 769.461,686.171 770.02,686.171 770.579,686.171 771.138,686.171 771.698,686.171 772.257,686.171 772.816,686.171 773.375,686.171 773.935,686.171 774.494,686.171 775.053,686.171 775.612,686.171 776.172,686.171 776.731,686.171 777.29,686.171 777.849,686.171 778.409,686.171 778.968,686.171 779.527,686.171 780.086,686.171 780.646,686.171 781.205,686.171 781.764,686.171 782.323,686.171 782.883,686.171 783.442,686.171 784.001,686.171 784.56,686.171 785.12,686.171 785.679,686.171 786.238,686.171 786.797,686.171 787.357,686.171 787.916,686.171 788.475,686.171 789.034,686.171 789.594,686.171 790.153,686.171 790.712,686.171 791.271,686.171 791.831,686.171 792.39,686.171 792.949,686.171 793.508,686.171 794.068,686.171 794.627,686.171 795.186,686.171 795.745,686.171 796.305,686.171 796.864,686.171 797.423,686.171 797.982,686.171 798.542,686.171 799.101,686.171 799.66,686.171 800.219,686.171 800.779,686.171 801.338,686.171 801.897,686.171 802.456,686.171 803.016,686.171 803.575,686.171 804.134,686.171 804.693,686.171 805.253,686.171 805.812,686.171 806.371,686.171 806.931,686.171 807.49,686.171 808.049,686.171 808.608,686.171 809.168,686.171 809.727,686.171 810.286,686.171 810.845,686.171 811.405,686.171 811.964,686.171 812.523,686.171 813.082,686.171 813.642,686.171 814.201,686.171 814.76,686.171 815.319,686.171 815.879,686.171 816.438,686.171 816.997,686.171 817.556,686.171 818.116,686.171 818.675,686.171 819.234,686.171 819.793,686.171 820.353,686.171 820.912,686.171 821.471,686.171 822.03,686.171 822.59,686.171 823.149,686.171 823.708,686.171 824.267,686.171 824.827,686.171 825.386,686.171 825.945,686.171 826.504,686.171 827.064,686.171 827.623,686.171 828.182,686.171 828.741,686.171 829.301,686.171 829.86,686.171 830.419,686.171 830.978,686.171 831.538,686.171 832.097,686.171 832.656,686.171 833.215,686.171 833.775,686.171 834.334,686.171 834.893,686.171 835.452,686.171 836.012,686.171 836.571,686.171 837.13,686.171 837.689,686.171 838.249,686.171 838.808,686.171 839.367,686.171 839.926,686.171 840.486,686.171 841.045,686.171 841.604,686.171 842.163,686.171 842.723,686.171 843.282,686.171 843.841,686.171 844.4,686.171 844.96,686.171 845.519,686.171 846.078,686.171 846.637,686.171 847.197,686.171 847.756,686.171 848.315,686.171 848.874,686.171 849.434,686.171 849.993,686.171 850.552,686.171 851.111,686.171 851.671,686.171 852.23,686.171 852.789,686.171 853.348,686.171 853.908,686.171 854.467,686.171 855.026,686.171 855.585,686.171 856.145,686.171 856.704,686.171 857.263,686.171 857.822,686.171 858.382,686.171 858.941,686.171 859.5,686.171 860.059,686.171 860.619,686.171 861.178,686.171 861.737,686.171 862.296,686.171 862.856,686.171 863.415,686.171 863.974,686.171 864.533,686.171 865.093,686.171 865.652,686.171 866.211,686.171 866.77,686.171 867.33,686.171 867.889,686.171 868.448,686.171 869.007,686.171 869.567,686.171 870.126,686.171 870.685,686.171 871.244,686.171 871.804,686.171 872.363,686.171 872.922,686.171 873.481,686.171 874.041,686.171 874.6,686.171 875.159,686.171 875.718,686.171 876.278,686.171 876.837,686.171 877.396,686.171 877.955,686.171 878.515,686.171 879.074,686.171 879.633,686.171 880.192,686.171 880.752,686.171 881.311,686.171 881.87,686.171 882.429,686.171 882.989,686.171 883.548,686.171 884.107,686.171 884.666,686.171 885.226,686.171 885.785,686.171 886.344,686.171 886.903,686.171 887.463,686.171 888.022,686.171 888.581,686.171 889.14,686.171 889.7,686.171 890.259,686.171 890.818,686.171 891.377,686.171 891.937,686.171 892.496,686.171 893.055,686.171 893.614,686.171 894.174,686.171 894.733,686.171 895.292,686.171 895.851,686.171 896.411,686.171 896.97,686.171 897.529,686.171 898.088,686.171 898.648,686.171 899.207,686.171 899.766,686.171 900.325,686.171 900.885,686.171 901.444,686.171 902.003,686.171 902.562,686.171 903.122,686.171 903.681,686.171 904.24,686.171 904.799,686.171 905.359,686.171 905.918,686.171 906.477,686.171 907.036,686.171 907.596,686.171 908.155,686.171 908.714,686.171 909.273,686.171 909.833,686.171 910.392,686.171 910.951,686.171 911.51,686.171 912.07,686.171 912.629,686.171 913.188,686.171 913.747,686.171 914.307,686.171 914.866,686.171 915.425,686.171 915.984,686.171 916.544,686.171 917.103,686.171 917.662,686.171 918.221,686.171 918.781,686.171 919.34,686.171 919.899,686.171 920.458,686.171 921.018,686.171 921.577,686.171 922.136,686.171 922.695,686.171 923.255,686.171 923.814,686.171 924.373,686.171 924.932,686.171 925.492,686.171 926.051,686.171 926.61,686.171 927.169,686.171 927.729,686.171 928.288,686.171 928.847,686.171 929.406,686.171 929.966,686.171 930.525,686.171 931.084,686.171 931.644,686.171 932.203,686.171 932.762,686.171 933.321,686.171 933.881,686.171 934.44,686.171 934.999,686.171 935.558,686.171 936.118,686.171 936.677,686.171 937.236,686.171 937.795,686.171 938.355,686.171 938.914,686.171 939.473,686.171 940.032,686.171 940.592,686.171 941.151,686.171 941.71,686.171 942.269,686.171 942.829,686.171 943.388,686.171 943.947,686.171 944.506,686.171 945.066,686.171 945.625,686.171 946.184,686.171 946.743,686.171 947.303,686.171 947.862,686.171 948.421,686.171 948.98,686.171 949.54,686.171 950.099,686.171 950.658,686.171 951.217,686.171 951.777,686.171 952.336,686.171 952.895,686.171 953.454,686.171 954.014,686.171 954.573,686.171 955.132,686.171 955.691,686.171 956.251,686.171 956.81,686.171 957.369,686.171 957.928,686.171 958.488,686.171 959.047,686.171 959.606,686.171 960.165,686.171 960.725,686.171 961.284,686.171 961.843,686.171 962.402,686.171 962.962,686.171 963.521,686.171 964.08,686.171 964.639,686.171 965.199,686.171 965.758,686.171 966.317,686.171 966.876,686.171 967.436,686.171 967.995,686.171 968.554,686.171 969.113,686.171 969.673,686.171 970.232,686.171 970.791,686.171 971.35,686.171 971.91,686.171 972.469,686.171 973.028,686.171 973.587,686.171 974.147,686.171 974.706,686.171 975.265,686.171 975.824,686.171 976.384,686.171 976.943,686.171 977.502,686.171 978.061,686.171 978.621,686.171 979.18,686.171 979.739,686.171 980.298,686.171 980.858,686.171 981.417,686.171 981.976,686.171 982.535,686.171 983.095,686.171 983.654,686.171 984.213,686.171 984.772,686.171 985.332,686.171 985.891,686.171 986.45,686.171 987.009,686.171 987.569,686.171 988.128,686.171 988.687,686.171 989.246,686.171 989.806,686.171 990.365,686.171 990.924,686.171 991.483,686.171 992.043,686.171 992.602,686.171 993.161,686.171 993.72,686.171 994.28,686.171 994.839,686.171 995.398,686.171 995.957,686.171 996.517,686.171 997.076,686.171 997.635,686.171 998.194,686.171 998.754,686.171 999.313,686.171 999.872,686.171 1000.43,686.171 1000.99,686.171 1001.55,686.171 1002.11,686.171 1002.67,686.171 1003.23,686.171 1003.79,686.171 1004.35,686.171 1004.91,686.171 1005.46,686.171 1006.02,686.171 1006.58,686.171 1007.14,686.171 1007.7,686.171 1008.26,686.171 1008.82,686.171 1009.38,686.171 1009.94,686.171 1010.5,686.171 1011.06,686.171 1011.62,686.171 1012.18,686.171 1012.73,686.171 1013.29,686.171 1013.85,686.171 1014.41,686.171 1014.97,686.171 1015.53,686.171 1016.09,686.171 1016.65,686.171 1017.21,686.171 1017.77,686.171 1018.33,686.171 1018.89,686.171 1019.45,686.171 1020.01,686.171 1020.56,686.171 1021.12,686.171 1021.68,686.171 1022.24,686.171 1022.8,686.171 1023.36,686.171 1023.92,686.171 1024.48,686.171 1025.04,686.171 1025.6,686.171 1026.16,686.171 1026.72,686.171 1027.28,686.171 1027.83,686.171 1028.39,686.171 1028.95,686.171 1029.51,686.171 1030.07,686.171 1030.63,686.171 1031.19,686.171 1031.75,686.171 1032.31,686.171 1032.87,686.171 1033.43,686.171 1033.99,686.171 1034.55,686.171 1035.1,686.171 1035.66,686.171 1036.22,686.171 1036.78,686.171 1037.34,686.171 1037.9,686.171 1038.46,686.171 1039.02,686.171 1039.58,686.171 1040.14,686.171 1040.7,686.171 1041.26,686.171 1041.82,686.171 1042.38,686.171 1042.93,686.171 1043.49,686.171 1044.05,686.171 1044.61,686.171 1045.17,686.171 1045.73,686.171 1046.29,686.171 1046.85,686.171 1047.41,686.171 1047.97,686.171 1048.53,686.171 1049.09,686.171 1049.65,686.171 1050.2,686.171 1050.76,686.171 1051.32,686.171 1051.88,686.171 1052.44,686.171 1053,686.171 1053.56,686.171 1054.12,686.171 1054.68,686.171 1055.24,686.171 1055.8,686.171 1056.36,686.171 1056.92,686.171 1057.48,686.171 1058.03,686.171 1058.59,686.171 1059.15,686.171 1059.71,686.171 1060.27,686.171 1060.83,686.171 1061.39,686.171 1061.95,686.171 1062.51,686.171 1063.07,686.171 1063.63,686.171 1064.19,686.171 1064.75,686.171 1065.3,686.171 1065.86,686.171 1066.42,686.171 1066.98,686.171 1067.54,686.171 1068.1,686.171 1068.66,686.171 1069.22,686.171 1069.78,686.171 1070.34,686.171 1070.9,686.171 1071.46,686.171 1072.02,686.171 1072.57,686.171 1073.13,686.171 1073.69,686.171 1074.25,686.171 1074.81,686.171 1075.37,686.171 1075.93,686.171 1076.49,686.171 1077.05,686.171 1077.61,686.171 1078.17,686.171 1078.73,686.171 1079.29,686.171 1079.85,686.171 1080.4,686.171 1080.96,686.171 1081.52,686.171 1082.08,686.171 1082.64,686.171 1083.2,686.171 1083.76,686.171 1084.32,686.171 1084.88,686.171 1085.44,686.171 1086,686.171 1086.56,686.171 1087.12,686.171 1087.67,686.171 1088.23,686.171 1088.79,686.171 1089.35,686.171 1089.91,686.171 1090.47,686.171 1091.03,686.171 1091.59,686.171 1092.15,686.171 1092.71,686.171 1093.27,686.171 1093.83,686.171 1094.39,686.171 1094.94,686.171 1095.5,686.171 1096.06,686.171 1096.62,686.171 1097.18,686.171 1097.74,686.171 1098.3,686.171 1098.86,686.171 1099.42,686.171 1099.98,686.171 1100.54,686.171 1101.1,686.171 1101.66,686.171 1102.22,686.171 1102.77,686.171 1103.33,686.171 1103.89,686.171 1104.45,686.171 1105.01,686.171 1105.57,686.171 1106.13,686.171 1106.69,686.171 1107.25,686.171 1107.81,686.171 1108.37,686.171 1108.93,686.171 1109.49,686.171 1110.04,686.171 1110.6,686.171 1111.16,686.171 1111.72,686.171 1112.28,686.171 1112.84,686.171 1113.4,686.171 1113.96,686.171 1114.52,686.171 1115.08,686.171 1115.64,686.171 1116.2,686.171 1116.76,686.171 1117.31,686.171 1117.87,686.171 1118.43,686.171 1118.99,686.171 1119.55,686.171 1120.11,686.171 1120.67,686.171 1121.23,686.171 1121.79,686.171 1122.35,686.171 1122.91,686.171 1123.47,686.171 1124.03,686.171 1124.59,686.171 1125.14,686.171 1125.7,686.171 1126.26,686.171 1126.82,686.171 1127.38,686.171 1127.94,686.171 1128.5,686.171 1129.06,686.171 1129.62,686.171 1130.18,686.171 1130.74,686.171 1131.3,686.171 1131.86,686.171 1132.41,686.171 1132.97,686.171 1133.53,686.171 1134.09,686.171 1134.65,686.171 1135.21,686.171 1135.77,686.171 1136.33,686.171 1136.89,686.171 1137.45,686.171 1138.01,686.171 1138.57,686.171 1139.13,686.171 1139.68,686.171 1140.24,686.171 1140.8,686.171 1141.36,686.171 1141.92,686.171 1142.48,686.171 1143.04,686.171 1143.6,686.171 1144.16,686.171 1144.72,686.171 1145.28,686.171 1145.84,686.171 1146.4,686.171 1146.96,686.171 1147.51,686.171 1148.07,686.171 1148.63,686.171 1149.19,686.171 1149.75,686.171 1150.31,686.171 1150.87,686.171 1151.43,686.171 1151.99,686.171 1152.55,686.171 1153.11,686.171 1153.67,686.171 1154.23,686.171 1154.78,686.171 1155.34,686.171 1155.9,686.171 1156.46,686.171 1157.02,686.171 1157.58,686.171 1158.14,686.171 1158.7,686.171 1159.26,686.171 1159.82,686.171 1160.38,686.171 1160.94,686.171 1161.5,686.171 1162.05,686.171 1162.61,686.171 1163.17,686.171 1163.73,686.171 1164.29,686.171 1164.85,686.171 1165.41,686.171 1165.97,686.171 1166.53,686.171 1167.09,686.171 1167.65,686.171 1168.21,686.171 1168.77,686.171 1169.33,686.171 1169.88,686.171 1170.44,686.171 1171,686.171 1171.56,686.171 1172.12,686.171 1172.68,686.171 1173.24,686.171 1173.8,686.171 1174.36,686.171 1174.92,686.171 1175.48,686.171 1176.04,686.171 1176.6,686.171 1177.15,686.171 1177.71,686.171 1178.27,686.171 1178.83,686.171 1179.39,686.171 1179.95,686.171 1180.51,686.171 1181.07,686.171 1181.63,686.171 1182.19,686.171 1182.75,686.171 1183.31,686.171 1183.87,686.171 1184.43,686.171 1184.98,686.171 1185.54,686.171 1186.1,686.171 1186.66,686.171 1187.22,686.171 1187.78,686.171 1188.34,686.171 1188.9,686.171 1189.46,686.171 1190.02,686.171 1190.58,686.171 1191.14,686.171 1191.7,686.171 1192.25,686.171 1192.81,686.171 1193.37,686.171 1193.93,686.171 1194.49,686.171 1195.05,686.171 1195.61,686.171 1196.17,686.171 1196.73,686.171 1197.29,686.171 1197.85,686.171 1198.41,686.171 1198.97,686.171 1199.52,686.171 1200.08,686.171 1200.64,686.171 1201.2,686.171 1201.76,686.171 1202.32,686.171 1202.88,686.171 1203.44,686.171 1204,686.171 1204.56,686.171 1205.12,686.171 1205.68,686.171 1206.24,686.171 1206.8,686.171 1207.35,686.171 1207.91,686.171 1208.47,686.171 1209.03,686.171 1209.59,686.171 1210.15,686.171 1210.71,686.171 1211.27,686.171 1211.83,686.171 1212.39,686.171 1212.95,686.171 1213.51,686.171 1214.07,686.171 1214.62,686.171 1215.18,686.171 1215.74,686.171 1216.3,686.171 1216.86,686.171 1217.42,686.171 1217.98,686.171 1218.54,686.171 1219.1,686.171 1219.66,686.171 1220.22,686.171 1220.78,686.171 1221.34,686.171 1221.89,686.171 1222.45,686.171 1223.01,686.171 1223.57,686.171 1224.13,686.171 1224.69,686.171 1225.25,686.171 1225.81,686.171 1226.37,686.171 1226.93,686.171 1227.49,686.171 1228.05,686.171 1228.61,686.171 1229.17,686.171 1229.72,686.171 1230.28,686.171 1230.84,686.171 1231.4,686.171 1231.96,686.171 1232.52,686.171 1233.08,686.171 1233.64,686.171 1234.2,686.171 1234.76,686.171 1235.32,686.171 1235.88,686.171 1236.44,686.171 1236.99,686.171 1237.55,686.171 1238.11,686.171 1238.67,686.171 1239.23,686.171 1239.79,686.171 1240.35,686.171 1240.91,686.171 1241.47,686.171 1242.03,686.171 1242.59,686.171 1243.15,686.171 1243.71,686.171 1244.26,686.171 1244.82,686.171 1245.38,686.171 1245.94,686.171 1246.5,686.171 1247.06,686.171 1247.62,686.171 1248.18,686.171 1248.74,686.171 1249.3,686.171 1249.86,686.171 1250.42,686.171 1250.98,686.171 1251.54,686.171 1252.09,686.171 1252.65,686.171 1253.21,686.171 1253.77,686.171 1254.33,686.171 1254.89,686.171 1255.45,686.171 1256.01,686.171 1256.57,686.171 1257.13,686.171 1257.69,686.171 1258.25,686.171 1258.81,686.171 1259.36,686.171 1259.92,686.171 1260.48,686.171 1261.04,686.171 1261.6,686.171 1262.16,686.171 1262.72,686.171 1263.28,686.171 1263.84,686.171 1264.4,686.171 1264.96,686.171 1265.52,686.171 1266.08,686.171 1266.63,686.171 1267.19,686.171 1267.75,686.171 1268.31,686.171 1268.87,686.171 1269.43,686.171 1269.99,686.171 1270.55,686.171 1271.11,686.171 1271.67,686.171 1272.23,686.171 1272.79,686.171 1273.35,686.171 1273.91,686.171 1274.46,686.171 1275.02,686.171 1275.58,686.171 1276.14,686.171 1276.7,686.171 1277.26,686.171 1277.82,686.171 1278.38,686.171 1278.94,686.171 1279.5,686.171 1280.06,686.171 1280.62,686.171 1281.18,686.171 1281.73,686.171 1282.29,686.171 1282.85,686.171 1283.41,686.171 1283.97,686.171 1284.53,686.171 1285.09,686.171 1285.65,686.171 1286.21,686.171 1286.77,686.171 1287.33,686.171 1287.89,686.171 1288.45,686.171 1289,686.171 1289.56,686.171 1290.12,686.171 1290.68,686.171 1291.24,686.171 1291.8,686.171 1292.36,686.171 1292.92,686.171 1293.48,686.171 1294.04,686.171 1294.6,686.171 1295.16,686.171 1295.72,686.171 1296.28,686.171 1296.83,686.171 1297.39,686.171 1297.95,686.171 1298.51,686.171 1299.07,686.171 1299.63,686.171 1300.19,686.171 1300.75,686.171 1301.31,686.171 1301.87,686.171 1302.43,686.171 1302.99,686.171 1303.55,686.171 1304.1,686.171 1304.66,686.171 1305.22,686.171 1305.78,686.171 1306.34,686.171 1306.9,686.171 1307.46,686.171 1308.02,686.171 1308.58,686.171 1309.14,686.171 1309.7,686.171 1310.26,686.171 1310.82,686.171 1311.38,686.171 1311.93,686.171 1312.49,686.171 1313.05,686.171 1313.61,686.171 1314.17,686.171 1314.73,686.171 1315.29,686.171 1315.85,686.171 1316.41,686.171 1316.97,686.171 1317.53,686.171 1318.09,686.171 1318.65,686.171 1319.2,686.171 1319.76,686.171 1320.32,686.171 1320.88,686.171 1321.44,686.171 1322,686.171 1322.56,686.171 1323.12,686.171 1323.68,686.171 1324.24,686.171 1324.8,686.171 1325.36,686.171 1325.92,686.171 1326.47,686.171 1327.03,686.171 1327.59,686.171 1328.15,686.171 1328.71,686.171 1329.27,686.171 1329.83,686.171 1330.39,686.171 1330.95,686.171 1331.51,686.171 1332.07,686.171 1332.63,686.171 1333.19,686.171 1333.75,686.171 1334.3,686.171 1334.86,686.171 1335.42,686.171 1335.98,686.171 1336.54,686.171 1337.1,686.171 1337.66,686.171 1338.22,686.171 1338.78,686.171 1339.34,686.171 1339.9,686.171 1340.46,686.171 1341.02,686.171 1341.57,686.171 1342.13,686.171 1342.69,686.171 1343.25,686.171 1343.81,686.171 1344.37,686.171 1344.93,686.171 1345.49,686.171 1346.05,686.171 1346.61,686.171 1347.17,686.171 1347.73,686.171 1348.29,686.171 1348.84,686.171 1349.4,686.171 1349.96,686.171 1350.52,686.171 1351.08,686.171 1351.64,686.171 1352.2,686.171 1352.76,686.171 1353.32,686.171 1353.88,686.171 1354.44,686.171 1355,686.171 1355.56,686.171 1356.12,686.171 1356.67,686.171 1357.23,686.171 1357.79,686.171 1358.35,686.171 1358.91,686.171 1359.47,686.171 1360.03,686.171 1360.59,686.171 1361.15,686.171 1361.71,686.171 1362.27,686.171 1362.83,686.171 1363.39,686.171 1363.94,686.171 1364.5,686.171 1365.06,686.171 1365.62,686.171 1366.18,686.171 1366.74,686.171 1367.3,686.171 1367.86,686.171 1368.42,686.171 1368.98,686.171 1369.54,686.171 1370.1,686.171 1370.66,686.171 1371.21,686.171 1371.77,686.171 1372.33,686.171 1372.89,686.171 1373.45,686.171 1374.01,686.171 1374.57,686.171 1375.13,686.171 1375.69,686.171 1376.25,686.171 1376.81,686.171 1377.37,686.171 1377.93,686.171 1378.49,686.171 1379.04,686.171 1379.6,686.171 1380.16,686.171 1380.72,686.171 1381.28,686.171 1381.84,686.171 1382.4,686.171 1382.96,686.171 1383.52,686.171 1384.08,686.171 1384.64,686.171 1385.2,686.171 1385.76,686.171 1386.31,686.171 1386.87,686.171 1387.43,686.171 1387.99,686.171 1388.55,686.171 1389.11,686.171 1389.67,686.171 1390.23,686.171 1390.79,686.171 1391.35,686.171 1391.91,686.171 1392.47,686.171 1393.03,686.171 1393.58,686.171 1394.14,686.171 1394.7,686.171 1395.26,686.171 1395.82,686.171 1396.38,686.171 1396.94,686.171 1397.5,686.171 1398.06,686.171 1398.62,686.171 1399.18,686.171 1399.74,686.171 1400.3,686.171 1400.86,686.171 1401.41,686.171 1401.97,686.171 1402.53,686.171 1403.09,686.171 1403.65,686.171 1404.21,686.171 1404.77,686.171 1405.33,686.171 1405.89,686.171 1406.45,686.171 1407.01,686.171 1407.57,686.171 1408.13,686.171 1408.68,686.171 1409.24,686.171 1409.8,686.171 1410.36,686.171 1410.92,686.171 1411.48,686.171 1412.04,686.171 1412.6,686.171 1413.16,686.171 1413.72,686.171 1414.28,686.171 1414.84,686.171 1415.4,686.171 1415.95,686.171 1416.51,686.171 1417.07,686.171 1417.63,686.171 1418.19,686.171 1418.75,686.171 1419.31,686.171 1419.87,686.171 1420.43,686.171 1420.99,686.171 1421.55,686.171 1422.11,686.171 1422.67,686.171 1423.23,686.171 1423.78,686.171 1424.34,686.171 1424.9,686.171 1425.46,686.171 1426.02,686.171 1426.58,686.171 1427.14,686.171 1427.7,686.171 1428.26,686.171 1428.82,686.171 1429.38,686.171 1429.94,686.171 1430.5,686.171 1431.05,686.171 1431.61,686.171 1432.17,686.171 1432.73,686.171 1433.29,686.171 1433.85,686.171 1434.41,686.171 1434.97,686.171 1435.53,686.171 1436.09,686.171 1436.65,686.171 1437.21,686.171 1437.77,686.171 1438.33,686.171 1438.88,686.171 1439.44,686.171 1440,686.171 1440.56,686.171 1441.12,686.171 1441.68,686.171 1442.24,686.171 1442.8,686.171 1443.36,686.171 1443.92,686.171 1444.48,686.171 1445.04,686.171 1445.6,686.171 1446.15,686.171 1446.71,686.171 1447.27,686.171 1447.83,686.171 1448.39,686.171 1448.95,686.171 1449.51,686.171 1450.07,686.171 1450.63,686.171 1451.19,686.171 1451.75,686.171 1452.31,686.171 1452.87,686.171 1453.42,686.171 1453.98,686.171 1454.54,686.171 1455.1,686.171 1455.66,686.171 1456.22,686.171 1456.78,686.171 1457.34,686.171 1457.9,686.171 1458.46,686.171 1459.02,686.171 1459.58,686.171 1460.14,686.171 1460.7,686.171 1461.25,686.171 1461.81,686.171 1462.37,686.171 1462.93,686.171 1463.49,686.171 1464.05,686.171 1464.61,686.171 1465.17,686.171 1465.73,686.171 1466.29,686.171 1466.85,686.171 1467.41,686.171 1467.97,686.171 1468.52,686.171 1469.08,686.171 1469.64,686.171 1470.2,686.171 1470.76,686.171 1471.32,686.171 1471.88,686.171 1472.44,686.171 1473,686.171 1473.56,686.171 1474.12,686.171 1474.68,686.171 1475.24,686.171 1475.79,686.171 1476.35,686.171 1476.91,686.171 1477.47,686.171 1478.03,686.171 1478.59,686.171 1479.15,686.171 1479.71,686.171 1480.27,686.171 1480.83,686.171 1481.39,686.171 1481.95,686.171 1482.51,686.171 1483.07,686.171 1483.62,686.171 1484.18,686.171 1484.74,686.171 1485.3,686.171 1485.86,686.171 1486.42,686.171 1486.98,686.171 1487.54,686.171 1488.1,686.171 1488.66,686.171 1489.22,686.171 1489.78,686.171 1490.34,686.171 1490.89,686.171 1491.45,686.171 1492.01,686.171 1492.57,686.171 1493.13,686.171 1493.69,686.171 1494.25,686.171 1494.81,686.171 1495.37,686.171 1495.93,686.171 1496.49,686.171 1497.05,686.171 1497.61,686.171 1498.16,686.171 1498.72,686.171 1499.28,686.171 1499.84,686.171 1500.4,686.171 1500.96,686.171 1501.52,686.171 1502.08,686.171 1502.64,686.171 1503.2,686.171 1503.76,686.171 1504.32,686.171 1504.88,686.171 1505.44,686.171 1505.99,686.171 1506.55,686.171 1507.11,686.171 1507.67,686.171 1508.23,686.171 1508.79,686.171 1509.35,686.171 1509.91,686.171 1510.47,686.171 1511.03,686.171 1511.59,686.171 1512.15,686.171 1512.71,686.171 1513.26,686.171 1513.82,686.171 1514.38,686.171 1514.94,686.171 1515.5,686.171 1516.06,686.171 1516.62,686.171 1517.18,686.171 1517.74,686.171 1518.3,686.171 1518.86,686.171 1519.42,686.171 1519.98,686.171 1520.53,686.171 1521.09,686.171 1521.65,686.171 1522.21,686.171 1522.77,686.171 1523.33,686.171 1523.89,686.171 1524.45,686.171 1525.01,686.171 1525.57,686.171 1526.13,686.171 1526.69,686.171 1527.25,686.171 1527.81,686.171 1528.36,686.171 1528.92,686.171 1529.48,686.171 1530.04,686.171 1530.6,686.171 1531.16,686.171 1531.72,686.171 1532.28,686.171 1532.84,686.171 1533.4,686.171 1533.96,686.171 1534.52,686.171 1535.08,686.171 1535.63,686.171 1536.19,686.171 1536.75,686.171 1537.31,686.171 1537.87,686.171 1538.43,686.171 1538.99,686.171 1539.55,686.171 1540.11,686.171 1540.67,686.171 1541.23,686.171 1541.79,686.171 1542.35,686.171 1542.9,686.171 1543.46,686.171 1544.02,686.171 1544.58,686.171 1545.14,686.171 1545.7,686.171 1546.26,686.171 1546.82,686.171 1547.38,686.171 1547.94,686.171 1548.5,686.171 1549.06,686.171 1549.62,686.171 1550.18,686.171 1550.73,686.171 1551.29,686.171 1551.85,686.171 1552.41,686.171 1552.97,686.171 1553.53,686.171 1554.09,686.171 1554.65,686.171 1555.21,686.171 1555.77,686.171 1556.33,686.171 1556.89,686.171 1557.45,686.171 1558,686.171 1558.56,686.171 1559.12,686.171 1559.68,686.171 1560.24,686.171 1560.8,686.171 1561.36,686.171 1561.92,686.171 1562.48,686.171 1563.04,686.171 1563.6,686.171 1564.16,686.171 1564.72,686.171 1565.28,686.171 1565.83,686.171 1566.39,686.171 1566.95,686.171 1567.51,686.171 1568.07,686.171 1568.63,686.171 1569.19,686.171 1569.75,686.171 1570.31,686.171 1570.87,686.171 1571.43,686.171 1571.99,686.171 1572.55,686.171 1573.1,686.171 1573.66,686.171 1574.22,686.171 1574.78,686.171 1575.34,686.171 1575.9,686.171 1576.46,686.171 1577.02,686.171 1577.58,686.171 1578.14,686.171 1578.7,686.171 1579.26,686.171 1579.82,686.171 1580.37,686.171 1580.93,686.171 1581.49,686.171 1582.05,686.171 1582.61,686.171 1583.17,686.171 1583.73,686.171 1584.29,686.171 1584.85,686.171 1585.41,686.171 1585.97,686.171 1586.53,686.171 1587.09,686.171 1587.65,686.171 1588.2,686.171 1588.76,686.171 1589.32,686.171 1589.88,686.171 1590.44,686.171 1591,686.171 1591.56,686.171 1592.12,686.171 1592.68,686.171 1593.24,686.171 1593.8,686.171 1594.36,686.171 1594.92,686.171 1595.47,686.171 1596.03,686.171 1596.59,686.171 1597.15,686.171 1597.71,686.171 1598.27,686.171 1598.83,686.171 1599.39,686.171 1599.95,686.171 1600.51,686.171 1601.07,686.171 1601.63,686.171 1602.19,686.171 1602.74,686.171 1603.3,686.171 1603.86,686.171 1604.42,686.171 1604.98,686.171 1605.54,686.171 1606.1,686.171 1606.66,686.171 1607.22,686.171 1607.78,686.171 1608.34,686.171 1608.9,686.171 1609.46,686.171 1610.02,686.171 1610.57,686.171 1611.13,686.171 1611.69,686.171 1612.25,686.171 1612.81,686.171 1613.37,686.171 1613.93,686.171 1614.49,686.171 1615.05,686.171 1615.61,686.171 1616.17,686.171 1616.73,686.171 1617.29,686.171 1617.84,686.171 1618.4,686.171 1618.96,686.171 1619.52,686.171 1620.08,686.171 1620.64,686.171 1621.2,686.171 1621.76,686.171 1622.32,686.171 1622.88,686.171 1623.44,686.171 1624,686.171 1624.56,686.171 1625.11,686.171 1625.67,686.171 1626.23,686.171 1626.79,686.171 1627.35,686.171 1627.91,686.171 1628.47,686.171 1629.03,686.171 1629.59,686.171 1630.15,686.171 1630.71,686.171 1631.27,686.171 1631.83,686.171 1632.39,686.171 1632.94,686.171 1633.5,686.171 1634.06,686.171 1634.62,686.171 1635.18,686.171 1635.74,686.171 1636.3,686.171 1636.86,686.171 1637.42,686.171 1637.98,686.171 1638.54,686.171 1639.1,686.171 1639.66,686.171 1640.21,686.171 1640.77,686.171 1641.33,686.171 1641.89,686.171 1642.45,686.171 1643.01,686.171 1643.57,686.171 1644.13,686.171 1644.69,686.171 1645.25,686.171 1645.81,686.171 1646.37,686.171 1646.93,686.171 1647.48,686.171 1648.04,686.171 1648.6,686.171 1649.16,686.171 1649.72,686.171 1650.28,686.171 1650.84,686.171 1651.4,686.171 1651.96,686.171 1652.52,686.171 1653.08,686.171 1653.64,686.171 1654.2,686.171 1654.76,686.171 1655.31,686.171 1655.87,686.171 1656.43,686.171 1656.99,686.171 1657.55,686.171 1658.11,686.171 1658.67,686.171 1659.23,686.171 1659.79,686.171 1660.35,686.171 1660.91,686.171 1661.47,686.171 1662.03,686.171 1662.58,686.171 1663.14,686.171 1663.7,686.171 1664.26,686.171 1664.82,686.171 1665.38,686.171 1665.94,686.171 1666.5,686.171 1667.06,686.171 1667.62,686.171 1668.18,686.171 1668.74,686.171 1669.3,686.171 1669.85,686.171 1670.41,686.171 1670.97,686.171 1671.53,686.171 1672.09,686.171 1672.65,686.171 1673.21,686.171 1673.77,686.171 1674.33,686.171 1674.89,686.171 1675.45,686.171 1676.01,686.171 1676.57,686.171 1677.13,686.171 1677.68,686.171 1678.24,686.171 1678.8,686.171 1679.36,686.171 1679.92,686.171 1680.48,686.171 1681.04,686.171 1681.6,686.171 1682.16,686.171 1682.72,686.171 1683.28,686.171 1683.84,686.171 1684.4,686.171 1684.95,686.171 1685.51,686.171 1686.07,686.171 1686.63,686.171 1687.19,686.171 1687.75,686.171 1688.31,686.171 1688.87,686.171 1689.43,686.171 1689.99,686.171 1690.55,686.171 1691.11,686.171 1691.67,686.171 1692.23,686.171 1692.78,686.171 1693.34,686.171 1693.9,686.171 1694.46,686.171 1695.02,686.171 1695.58,686.171 1696.14,686.171 1696.7,686.171 1697.26,686.171 1697.82,686.171 1698.38,686.171 1698.94,686.171 1699.5,686.171 1700.05,686.171 1700.61,686.171 1701.17,686.171 1701.73,686.171 1702.29,686.171 1702.85,686.171 1703.41,686.171 1703.97,686.171 1704.53,686.171 1705.09,686.171 1705.65,686.171 1706.21,686.171 1706.77,686.171 1707.32,686.171 1707.88,686.171 1708.44,686.171 1709,686.171 1709.56,686.171 1710.12,686.171 1710.68,686.171 1711.24,686.171 1711.8,686.171 1712.36,686.171 1712.92,686.171 1713.48,686.171 1714.04,686.171 1714.6,686.171 1715.15,686.171 1715.71,686.171 1716.27,686.171 1716.83,686.171 1717.39,686.171 1717.95,686.171 1718.51,686.171 1719.07,686.171 1719.63,686.171 1720.19,686.171 1720.75,686.171 1721.31,686.171 1721.87,686.171 1722.42,686.171 1722.98,686.171 1723.54,686.171 1724.1,686.171 1724.66,686.171 1725.22,686.171 1725.78,686.171 1726.34,686.171 1726.9,686.171 1727.46,686.171 1728.02,686.171 1728.58,686.171 1729.14,686.171 1729.69,686.171 1730.25,686.171 1730.81,686.171 1731.37,686.171 1731.93,686.171 1732.49,686.171 1733.05,686.171 1733.61,686.171 1734.17,686.171 1734.73,686.171 1735.29,686.171 1735.85,686.171 1736.41,686.171 1736.97,686.171 1737.52,686.171 1738.08,686.171 1738.64,686.171 1739.2,686.171 1739.76,686.171 1740.32,686.171 1740.88,686.171 1741.44,686.171 1742,686.171 1742.56,686.171 1743.12,686.171 1743.68,686.171 1744.24,686.171 1744.79,686.171 1745.35,686.171 1745.91,686.171 1746.47,686.171 1747.03,686.171 1747.59,686.171 1748.15,686.171 1748.71,686.171 1749.27,686.171 1749.83,686.171 1750.39,686.171 1750.95,686.171 1751.51,686.171 1752.06,686.171 1752.62,686.171 1753.18,686.171 1753.74,686.171 1754.3,686.171 1754.86,686.171 1755.42,686.171 1755.98,686.171 1756.54,686.171 1757.1,686.171 1757.66,686.171 1758.22,686.171 1758.78,686.171 1759.34,686.171 1759.89,686.171 1760.45,686.171 1761.01,686.171 1761.57,686.171 1762.13,686.171 1762.69,686.171 1763.25,686.171 1763.81,686.171 1764.37,686.171 1764.93,686.171 1765.49,686.171 1766.05,686.171 1766.61,686.171 1767.16,686.171 1767.72,686.171 1768.28,686.171 1768.84,686.171 1769.4,686.171 1769.96,686.171 1770.52,686.171 1771.08,686.171 1771.64,686.171 1772.2,686.171 1772.76,686.171 1773.32,686.171 1773.88,686.171 1774.43,686.171 1774.99,686.171 1775.55,686.171 1776.11,686.171 1776.67,686.171 1777.23,686.171 1777.79,686.171 1778.35,686.171 1778.91,686.171 1779.47,686.171 1780.03,686.171 1780.59,686.171 1781.15,686.171 1781.71,686.171 1782.26,686.171 1782.82,686.171 1783.38,686.171 1783.94,686.171 1784.5,686.171 1785.06,686.171 1785.62,686.171 1786.18,686.171 1786.74,686.171 1787.3,686.171 1787.86,686.171 1788.42,686.171 1788.98,686.171 1789.53,686.171 1790.09,686.171 1790.65,686.171 1791.21,686.171 1791.77,686.171 1792.33,686.171 1792.89,686.171 1793.45,686.171 1794.01,686.171 1794.57,686.171 1795.13,686.171 1795.69,686.171 1796.25,686.171 1796.8,686.171 1797.36,686.171 1797.92,686.171 1798.48,686.171 1799.04,686.171 1799.6,686.171 1800.16,686.171 1800.72,686.171 1801.28,686.171 1801.84,686.171 1802.4,686.171 1802.96,686.171 1803.52,686.171 1804.08,686.171 1804.63,686.171 1805.19,686.171 1805.75,686.171 1806.31,686.171 1806.87,686.171 1807.43,686.171 1807.99,686.171 1808.55,686.171 1809.11,686.171 1809.67,686.171 1810.23,686.171 1810.79,686.171 1811.35,686.171 1811.9,686.171 1812.46,686.171 1813.02,686.171 1813.58,686.171 1814.14,686.171 1814.7,686.171 1815.26,686.171 1815.82,686.171 1816.38,686.171 1816.94,686.171 1817.5,686.171 1818.06,686.171 1818.62,686.171 1819.18,686.171 1819.73,686.171 1820.29,686.171 1820.85,686.171 1821.41,686.171 1821.97,686.171 1822.53,686.171 1823.09,686.171 1823.65,686.171 1824.21,686.171 1824.77,686.171 1825.33,686.171 1825.89,686.171 1826.45,686.171 1827,686.171 1827.56,686.171 1828.12,686.171 1828.68,686.171 1829.24,686.171 1829.8,686.171 1830.36,686.171 1830.92,686.171 1831.48,686.171 1832.04,686.171 1832.6,686.171 1833.16,686.171 1833.72,686.171 1834.27,686.171 1834.83,686.171 1835.39,686.171 1835.95,686.171 1836.51,686.171 1837.07,686.171 1837.63,686.171 1838.19,686.171 \"/>\n<path clip-path=\"url(#clip513)\" d=\"M720.247 684.984 L720.806 684.984 L721.365 684.984 L721.924 684.984 L722.484 684.984 L723.043 684.984 L723.602 684.984 L724.161 684.984 L724.721 684.984 L725.28 684.984 L725.839 684.984 L726.398 684.984 L726.958 684.984 L727.517 684.984 L728.076 684.984 L728.635 684.984 L729.195 684.984 L729.754 684.984 L730.313 684.984 L730.872 684.984 L731.432 684.984 L731.991 684.984 L732.55 684.984 L733.109 684.984 L733.669 684.984 L734.228 684.984 L734.787 684.984 L735.346 684.984 L735.906 684.984 L736.465 684.984 L737.024 684.984 L737.583 684.984 L738.143 684.984 L738.702 684.984 L739.261 684.984 L739.82 684.984 L740.38 684.984 L740.939 684.984 L741.498 684.984 L742.057 684.984 L742.617 684.984 L743.176 684.984 L743.735 684.984 L744.294 684.984 L744.854 684.984 L745.413 684.984 L745.972 684.984 L746.531 684.984 L747.091 684.984 L747.65 684.984 L748.209 684.984 L748.768 684.984 L749.328 684.984 L749.887 684.984 L750.446 684.984 L751.005 684.984 L751.565 684.984 L752.124 684.984 L752.683 684.984 L753.242 684.984 L753.802 684.984 L754.361 684.984 L754.92 684.984 L755.479 684.984 L756.039 684.984 L756.598 684.984 L757.157 684.984 L757.716 684.984 L758.276 684.984 L758.835 684.984 L759.394 684.984 L759.953 684.984 L760.513 684.984 L761.072 684.984 L761.631 684.984 L762.19 684.984 L762.75 684.984 L763.309 684.984 L763.868 684.984 L764.427 684.984 L764.987 684.984 L765.546 684.984 L766.105 684.984 L766.664 684.984 L767.224 684.984 L767.783 684.984 L768.342 684.984 L768.901 684.984 L769.461 684.984 L770.02 684.984 L770.579 684.984 L771.138 684.984 L771.698 684.984 L772.257 684.984 L772.816 684.984 L773.375 684.984 L773.935 684.984 L774.494 684.984 L775.053 684.984 L775.612 684.984 L776.172 684.984 L776.731 684.984 L777.29 684.984 L777.849 684.984 L778.409 684.984 L778.968 684.984 L779.527 684.984 L780.086 684.984 L780.646 684.984 L781.205 684.984 L781.764 684.984 L782.323 684.984 L782.883 684.984 L783.442 684.984 L784.001 684.984 L784.56 684.984 L785.12 684.984 L785.679 684.984 L786.238 684.984 L786.797 684.984 L787.357 684.984 L787.916 684.984 L788.475 684.984 L789.034 684.984 L789.594 684.984 L790.153 684.984 L790.712 684.984 L791.271 684.984 L791.831 684.984 L792.39 684.984 L792.949 684.984 L793.508 684.984 L794.068 684.984 L794.627 684.984 L795.186 684.984 L795.745 684.984 L796.305 684.984 L796.864 684.984 L797.423 684.984 L797.982 684.984 L798.542 684.984 L799.101 684.984 L799.66 684.984 L800.219 684.984 L800.779 684.984 L801.338 684.984 L801.897 684.984 L802.456 684.984 L803.016 684.984 L803.575 684.984 L804.134 684.984 L804.693 684.984 L805.253 684.984 L805.812 684.984 L806.371 684.984 L806.931 684.984 L807.49 684.984 L808.049 684.984 L808.608 684.984 L809.168 684.984 L809.727 684.984 L810.286 684.984 L810.845 684.984 L811.405 684.984 L811.964 684.984 L812.523 684.984 L813.082 684.984 L813.642 684.984 L814.201 684.984 L814.76 684.984 L815.319 684.984 L815.879 684.984 L816.438 684.984 L816.997 684.984 L817.556 684.984 L818.116 684.984 L818.675 684.984 L819.234 684.984 L819.793 684.984 L820.353 684.984 L820.912 684.984 L821.471 684.984 L822.03 684.984 L822.59 684.984 L823.149 684.984 L823.708 684.984 L824.267 684.984 L824.827 684.984 L825.386 684.984 L825.945 684.984 L826.504 684.984 L827.064 684.984 L827.623 684.984 L828.182 684.984 L828.741 684.984 L829.301 684.984 L829.86 684.984 L830.419 684.984 L830.978 684.984 L831.538 684.984 L832.097 684.984 L832.656 684.984 L833.215 684.984 L833.775 684.984 L834.334 684.984 L834.893 684.984 L835.452 684.984 L836.012 684.984 L836.571 684.984 L837.13 684.984 L837.689 684.984 L838.249 684.984 L838.808 684.984 L839.367 684.984 L839.926 684.984 L840.486 684.984 L841.045 684.984 L841.604 684.984 L842.163 684.984 L842.723 684.984 L843.282 684.984 L843.841 684.984 L844.4 684.984 L844.96 684.984 L845.519 684.984 L846.078 684.984 L846.637 684.984 L847.197 684.984 L847.756 684.984 L848.315 684.984 L848.874 684.984 L849.434 684.984 L849.993 684.984 L850.552 684.984 L851.111 684.984 L851.671 684.984 L852.23 684.984 L852.789 684.984 L853.348 684.984 L853.908 684.984 L854.467 684.984 L855.026 684.984 L855.585 684.984 L856.145 684.984 L856.704 684.984 L857.263 684.984 L857.822 684.984 L858.382 684.984 L858.941 684.984 L859.5 684.984 L860.059 684.984 L860.619 684.984 L861.178 684.984 L861.737 684.984 L862.296 684.984 L862.856 684.984 L863.415 684.984 L863.974 684.984 L864.533 684.984 L865.093 684.984 L865.652 684.984 L866.211 684.984 L866.77 684.984 L867.33 684.984 L867.889 684.984 L868.448 684.984 L869.007 684.984 L869.567 684.984 L870.126 684.984 L870.685 684.984 L871.244 684.984 L871.804 684.984 L872.363 684.984 L872.922 684.984 L873.481 684.984 L874.041 684.984 L874.6 684.984 L875.159 684.984 L875.718 684.984 L876.278 684.984 L876.837 684.984 L877.396 684.984 L877.955 684.984 L878.515 684.984 L879.074 684.984 L879.633 684.984 L880.192 684.984 L880.752 684.984 L881.311 684.984 L881.87 684.984 L882.429 684.984 L882.989 684.984 L883.548 684.984 L884.107 684.984 L884.666 684.984 L885.226 684.984 L885.785 684.984 L886.344 684.984 L886.903 684.984 L887.463 684.984 L888.022 684.984 L888.581 684.984 L889.14 684.984 L889.7 684.984 L890.259 684.984 L890.818 684.984 L891.377 684.984 L891.937 684.984 L892.496 684.984 L893.055 684.984 L893.614 684.984 L894.174 684.984 L894.733 684.984 L895.292 684.984 L895.851 684.984 L896.411 684.984 L896.97 684.984 L897.529 684.984 L898.088 684.984 L898.648 684.984 L899.207 684.984 L899.766 684.984 L900.325 684.984 L900.885 684.984 L901.444 684.984 L902.003 684.984 L902.562 684.984 L903.122 684.984 L903.681 684.984 L904.24 684.984 L904.799 684.984 L905.359 684.984 L905.918 684.984 L906.477 684.984 L907.036 684.984 L907.596 684.984 L908.155 684.984 L908.714 684.984 L909.273 684.984 L909.833 684.984 L910.392 684.984 L910.951 684.984 L911.51 684.984 L912.07 684.984 L912.629 684.984 L913.188 684.984 L913.747 684.984 L914.307 684.984 L914.866 684.984 L915.425 684.984 L915.984 684.984 L916.544 684.984 L917.103 684.984 L917.662 684.984 L918.221 684.984 L918.781 684.984 L919.34 684.984 L919.899 684.984 L920.458 684.984 L921.018 684.984 L921.577 684.984 L922.136 684.984 L922.695 684.984 L923.255 684.984 L923.814 684.984 L924.373 684.984 L924.932 684.984 L925.492 684.984 L926.051 684.984 L926.61 684.984 L927.169 684.984 L927.729 684.984 L928.288 684.984 L928.847 684.984 L929.406 684.984 L929.966 684.984 L930.525 684.984 L931.084 684.984 L931.644 684.984 L932.203 684.984 L932.762 684.984 L933.321 684.984 L933.881 684.984 L934.44 684.984 L934.999 684.984 L935.558 684.984 L936.118 684.984 L936.677 684.984 L937.236 684.984 L937.795 684.984 L938.355 684.984 L938.914 684.984 L939.473 684.984 L940.032 684.984 L940.592 684.984 L941.151 684.984 L941.71 684.984 L942.269 684.984 L942.829 684.984 L943.388 684.984 L943.947 684.984 L944.506 684.984 L945.066 684.984 L945.625 684.984 L946.184 684.984 L946.743 684.984 L947.303 684.984 L947.862 684.984 L948.421 684.984 L948.98 684.984 L949.54 684.984 L950.099 684.984 L950.658 684.984 L951.217 684.984 L951.777 684.984 L952.336 684.984 L952.895 684.984 L953.454 684.984 L954.014 684.984 L954.573 684.984 L955.132 684.984 L955.691 684.984 L956.251 684.984 L956.81 684.984 L957.369 684.984 L957.928 684.984 L958.488 684.984 L959.047 684.984 L959.606 684.984 L960.165 684.984 L960.725 684.984 L961.284 684.984 L961.843 684.984 L962.402 684.984 L962.962 684.984 L963.521 684.984 L964.08 684.984 L964.639 684.984 L965.199 684.984 L965.758 684.984 L966.317 684.984 L966.876 684.984 L967.436 684.984 L967.995 684.984 L968.554 684.984 L969.113 684.984 L969.673 684.984 L970.232 684.984 L970.791 684.984 L971.35 684.984 L971.91 684.984 L972.469 684.984 L973.028 684.984 L973.587 684.984 L974.147 684.984 L974.706 684.984 L975.265 684.984 L975.824 684.984 L976.384 684.984 L976.943 684.984 L977.502 684.984 L978.061 684.984 L978.621 684.984 L979.18 684.984 L979.739 684.984 L980.298 684.984 L980.858 684.984 L981.417 684.984 L981.976 684.984 L982.535 684.984 L983.095 684.984 L983.654 684.984 L984.213 684.984 L984.772 684.984 L985.332 684.984 L985.891 684.984 L986.45 684.984 L987.009 684.984 L987.569 684.984 L988.128 684.984 L988.687 684.984 L989.246 684.984 L989.806 684.984 L990.365 684.984 L990.924 684.984 L991.483 684.984 L992.043 684.984 L992.602 684.984 L993.161 684.984 L993.72 684.984 L994.28 684.984 L994.839 684.984 L995.398 684.984 L995.957 684.984 L996.517 684.984 L997.076 684.984 L997.635 684.984 L998.194 684.984 L998.754 684.984 L999.313 684.984 L999.872 684.984 L1000.43 684.984 L1000.99 684.984 L1001.55 684.984 L1002.11 684.984 L1002.67 684.984 L1003.23 684.984 L1003.79 684.984 L1004.35 684.984 L1004.91 684.984 L1005.46 684.984 L1006.02 684.984 L1006.58 684.984 L1007.14 684.984 L1007.7 684.984 L1008.26 684.984 L1008.82 684.984 L1009.38 684.984 L1009.94 684.984 L1010.5 684.984 L1011.06 684.984 L1011.62 684.984 L1012.18 684.984 L1012.73 684.984 L1013.29 684.984 L1013.85 684.984 L1014.41 684.984 L1014.97 684.984 L1015.53 684.984 L1016.09 684.984 L1016.65 684.984 L1017.21 684.984 L1017.77 684.984 L1018.33 684.984 L1018.89 684.984 L1019.45 684.984 L1020.01 684.984 L1020.56 684.984 L1021.12 684.984 L1021.68 684.984 L1022.24 684.984 L1022.8 684.984 L1023.36 684.984 L1023.92 684.984 L1024.48 684.984 L1025.04 684.984 L1025.6 684.984 L1026.16 684.984 L1026.72 684.984 L1027.28 684.984 L1027.83 684.984 L1028.39 684.984 L1028.95 684.984 L1029.51 684.984 L1030.07 684.984 L1030.63 684.984 L1031.19 684.984 L1031.75 684.984 L1032.31 684.984 L1032.87 684.984 L1033.43 684.984 L1033.99 684.984 L1034.55 684.984 L1035.1 684.984 L1035.66 684.984 L1036.22 684.984 L1036.78 684.984 L1037.34 684.984 L1037.9 684.984 L1038.46 684.984 L1039.02 684.984 L1039.58 684.984 L1040.14 684.984 L1040.7 684.984 L1041.26 684.984 L1041.82 684.984 L1042.38 684.984 L1042.93 684.984 L1043.49 684.984 L1044.05 684.984 L1044.61 684.984 L1045.17 684.984 L1045.73 684.984 L1046.29 684.984 L1046.85 684.984 L1047.41 684.984 L1047.97 684.984 L1048.53 684.984 L1049.09 684.984 L1049.65 684.984 L1050.2 684.984 L1050.76 684.984 L1051.32 684.984 L1051.88 684.984 L1052.44 684.984 L1053 684.984 L1053.56 684.984 L1054.12 684.984 L1054.68 684.984 L1055.24 684.984 L1055.8 684.984 L1056.36 684.984 L1056.92 684.984 L1057.48 684.984 L1058.03 684.984 L1058.59 684.984 L1059.15 684.984 L1059.71 684.984 L1060.27 684.984 L1060.83 684.984 L1061.39 684.984 L1061.95 684.984 L1062.51 684.984 L1063.07 684.984 L1063.63 684.984 L1064.19 684.984 L1064.75 684.984 L1065.3 684.984 L1065.86 684.984 L1066.42 684.984 L1066.98 684.984 L1067.54 684.984 L1068.1 684.984 L1068.66 684.984 L1069.22 684.984 L1069.78 684.984 L1070.34 684.984 L1070.9 684.984 L1071.46 684.984 L1072.02 684.984 L1072.57 684.984 L1073.13 684.984 L1073.69 684.984 L1074.25 684.984 L1074.81 684.984 L1075.37 684.984 L1075.93 684.984 L1076.49 684.984 L1077.05 684.984 L1077.61 684.984 L1078.17 684.984 L1078.73 684.984 L1079.29 684.984 L1079.85 684.984 L1080.4 684.984 L1080.96 684.984 L1081.52 684.984 L1082.08 684.984 L1082.64 684.984 L1083.2 684.984 L1083.76 684.984 L1084.32 684.984 L1084.88 684.984 L1085.44 684.984 L1086 684.984 L1086.56 684.984 L1087.12 684.984 L1087.67 684.984 L1088.23 684.984 L1088.79 684.984 L1089.35 684.984 L1089.91 684.984 L1090.47 684.984 L1091.03 684.984 L1091.59 684.984 L1092.15 684.984 L1092.71 684.984 L1093.27 684.984 L1093.83 684.984 L1094.39 684.984 L1094.94 684.984 L1095.5 684.984 L1096.06 684.984 L1096.62 684.984 L1097.18 684.984 L1097.74 684.984 L1098.3 684.984 L1098.86 684.984 L1099.42 684.984 L1099.98 684.984 L1100.54 684.984 L1101.1 684.984 L1101.66 684.984 L1102.22 684.984 L1102.77 684.984 L1103.33 684.984 L1103.89 684.984 L1104.45 684.984 L1105.01 684.984 L1105.57 684.984 L1106.13 684.984 L1106.69 684.984 L1107.25 684.984 L1107.81 684.984 L1108.37 684.984 L1108.93 684.984 L1109.49 684.984 L1110.04 684.984 L1110.6 684.984 L1111.16 684.984 L1111.72 684.984 L1112.28 684.984 L1112.84 684.984 L1113.4 684.984 L1113.96 684.984 L1114.52 684.984 L1115.08 684.984 L1115.64 684.984 L1116.2 684.984 L1116.76 684.984 L1117.31 684.984 L1117.87 684.984 L1118.43 684.984 L1118.99 684.984 L1119.55 684.984 L1120.11 684.984 L1120.67 684.984 L1121.23 684.984 L1121.79 684.984 L1122.35 684.984 L1122.91 684.984 L1123.47 684.984 L1124.03 684.984 L1124.59 684.984 L1125.14 684.984 L1125.7 684.984 L1126.26 684.984 L1126.82 684.984 L1127.38 684.984 L1127.94 684.984 L1128.5 684.984 L1129.06 684.984 L1129.62 684.984 L1130.18 684.984 L1130.74 684.984 L1131.3 684.984 L1131.86 684.984 L1132.41 684.984 L1132.97 684.984 L1133.53 684.984 L1134.09 684.984 L1134.65 684.984 L1135.21 684.984 L1135.77 684.984 L1136.33 684.984 L1136.89 684.984 L1137.45 684.984 L1138.01 684.984 L1138.57 684.984 L1139.13 684.984 L1139.68 684.984 L1140.24 684.984 L1140.8 684.984 L1141.36 684.984 L1141.92 684.984 L1142.48 684.984 L1143.04 684.984 L1143.6 684.984 L1144.16 684.984 L1144.72 684.984 L1145.28 684.984 L1145.84 684.984 L1146.4 684.984 L1146.96 684.984 L1147.51 684.984 L1148.07 684.984 L1148.63 684.984 L1149.19 684.984 L1149.75 684.984 L1150.31 684.984 L1150.87 684.984 L1151.43 684.984 L1151.99 684.984 L1152.55 684.984 L1153.11 684.984 L1153.67 684.984 L1154.23 684.984 L1154.78 684.984 L1155.34 684.984 L1155.9 684.984 L1156.46 684.984 L1157.02 684.984 L1157.58 684.984 L1158.14 684.984 L1158.7 684.984 L1159.26 684.984 L1159.82 684.984 L1160.38 684.984 L1160.94 684.984 L1161.5 684.984 L1162.05 684.984 L1162.61 684.984 L1163.17 684.984 L1163.73 684.984 L1164.29 684.984 L1164.85 684.984 L1165.41 684.984 L1165.97 684.984 L1166.53 684.984 L1167.09 684.984 L1167.65 684.984 L1168.21 684.984 L1168.77 684.984 L1169.33 684.984 L1169.88 684.984 L1170.44 684.984 L1171 684.984 L1171.56 684.984 L1172.12 684.984 L1172.68 684.984 L1173.24 684.984 L1173.8 684.984 L1174.36 684.984 L1174.92 684.984 L1175.48 684.984 L1176.04 684.984 L1176.6 684.984 L1177.15 684.984 L1177.71 684.984 L1178.27 684.984 L1178.83 684.984 L1179.39 684.984 L1179.95 684.984 L1180.51 684.984 L1181.07 684.984 L1181.63 684.984 L1182.19 684.984 L1182.75 684.984 L1183.31 684.984 L1183.87 684.984 L1184.43 684.984 L1184.98 684.984 L1185.54 684.984 L1186.1 684.984 L1186.66 684.984 L1187.22 684.984 L1187.78 684.984 L1188.34 684.984 L1188.9 684.984 L1189.46 684.984 L1190.02 684.984 L1190.58 684.984 L1191.14 684.984 L1191.7 684.984 L1192.25 684.984 L1192.81 684.984 L1193.37 684.984 L1193.93 684.984 L1194.49 684.984 L1195.05 684.984 L1195.61 684.984 L1196.17 684.984 L1196.73 684.984 L1197.29 684.984 L1197.85 684.984 L1198.41 684.984 L1198.97 684.984 L1199.52 684.984 L1200.08 684.984 L1200.64 684.984 L1201.2 684.984 L1201.76 684.984 L1202.32 684.984 L1202.88 684.984 L1203.44 684.984 L1204 684.984 L1204.56 684.984 L1205.12 684.984 L1205.68 684.984 L1206.24 684.984 L1206.8 684.984 L1207.35 684.984 L1207.91 684.984 L1208.47 684.984 L1209.03 684.984 L1209.59 684.984 L1210.15 684.984 L1210.71 684.984 L1211.27 684.984 L1211.83 684.984 L1212.39 684.984 L1212.95 684.984 L1213.51 684.984 L1214.07 684.984 L1214.62 684.984 L1215.18 684.984 L1215.74 684.984 L1216.3 684.984 L1216.86 684.984 L1217.42 684.984 L1217.98 684.984 L1218.54 684.984 L1219.1 684.984 L1219.66 684.984 L1220.22 684.984 L1220.78 684.984 L1221.34 684.984 L1221.89 684.984 L1222.45 684.984 L1223.01 684.984 L1223.57 684.984 L1224.13 684.984 L1224.69 684.984 L1225.25 684.984 L1225.81 684.984 L1226.37 684.984 L1226.93 684.984 L1227.49 684.984 L1228.05 684.984 L1228.61 684.984 L1229.17 684.984 L1229.72 684.984 L1230.28 684.984 L1230.84 684.984 L1231.4 684.984 L1231.96 684.984 L1232.52 684.984 L1233.08 684.984 L1233.64 684.984 L1234.2 684.984 L1234.76 684.984 L1235.32 684.984 L1235.88 684.984 L1236.44 684.984 L1236.99 684.984 L1237.55 684.984 L1238.11 684.984 L1238.67 684.984 L1239.23 684.984 L1239.79 684.984 L1240.35 684.984 L1240.91 684.984 L1241.47 684.984 L1242.03 684.984 L1242.59 684.984 L1243.15 684.984 L1243.71 684.984 L1244.26 684.984 L1244.82 684.984 L1245.38 684.984 L1245.94 684.984 L1246.5 684.984 L1247.06 684.984 L1247.62 684.984 L1248.18 684.984 L1248.74 684.984 L1249.3 684.984 L1249.86 684.984 L1250.42 684.984 L1250.98 684.984 L1251.54 684.984 L1252.09 684.984 L1252.65 684.984 L1253.21 684.984 L1253.77 684.984 L1254.33 684.984 L1254.89 684.984 L1255.45 684.984 L1256.01 684.984 L1256.57 684.984 L1257.13 684.984 L1257.69 684.984 L1258.25 684.984 L1258.81 684.984 L1259.36 684.984 L1259.92 684.984 L1260.48 684.984 L1261.04 684.984 L1261.6 684.984 L1262.16 684.984 L1262.72 684.984 L1263.28 684.984 L1263.84 684.984 L1264.4 684.984 L1264.96 684.984 L1265.52 684.984 L1266.08 684.984 L1266.63 684.984 L1267.19 684.984 L1267.75 684.984 L1268.31 684.984 L1268.87 684.984 L1269.43 684.984 L1269.99 684.984 L1270.55 684.984 L1271.11 684.984 L1271.67 684.984 L1272.23 684.984 L1272.79 684.984 L1273.35 684.984 L1273.91 684.984 L1274.46 684.984 L1275.02 684.984 L1275.58 684.984 L1276.14 684.984 L1276.7 684.984 L1277.26 684.984 L1277.82 684.984 L1278.38 684.984 L1278.94 684.984 L1279.5 684.984 L1280.06 684.984 L1280.62 684.984 L1281.18 684.984 L1281.73 684.984 L1282.29 684.984 L1282.85 684.984 L1283.41 684.984 L1283.97 684.984 L1284.53 684.984 L1285.09 684.984 L1285.65 684.984 L1286.21 684.984 L1286.77 684.984 L1287.33 684.984 L1287.89 684.984 L1288.45 684.984 L1289 684.984 L1289.56 684.984 L1290.12 684.984 L1290.68 684.984 L1291.24 684.984 L1291.8 684.984 L1292.36 684.984 L1292.92 684.984 L1293.48 684.984 L1294.04 684.984 L1294.6 684.984 L1295.16 684.984 L1295.72 684.984 L1296.28 684.984 L1296.83 684.984 L1297.39 684.984 L1297.95 684.984 L1298.51 684.984 L1299.07 684.984 L1299.63 684.984 L1300.19 684.984 L1300.75 684.984 L1301.31 684.984 L1301.87 684.984 L1302.43 684.984 L1302.99 684.984 L1303.55 684.984 L1304.1 684.984 L1304.66 684.984 L1305.22 684.984 L1305.78 684.984 L1306.34 684.984 L1306.9 684.984 L1307.46 684.984 L1308.02 684.984 L1308.58 684.984 L1309.14 684.984 L1309.7 684.984 L1310.26 684.984 L1310.82 684.984 L1311.38 684.984 L1311.93 684.984 L1312.49 684.984 L1313.05 684.984 L1313.61 684.984 L1314.17 684.984 L1314.73 684.984 L1315.29 684.984 L1315.85 684.984 L1316.41 684.984 L1316.97 684.984 L1317.53 684.984 L1318.09 684.984 L1318.65 684.984 L1319.2 684.984 L1319.76 684.984 L1320.32 684.984 L1320.88 684.984 L1321.44 684.984 L1322 684.984 L1322.56 684.984 L1323.12 684.984 L1323.68 684.984 L1324.24 684.984 L1324.8 684.984 L1325.36 684.984 L1325.92 684.984 L1326.47 684.984 L1327.03 684.984 L1327.59 684.984 L1328.15 684.984 L1328.71 684.984 L1329.27 684.984 L1329.83 684.984 L1330.39 684.984 L1330.95 684.984 L1331.51 684.984 L1332.07 684.984 L1332.63 684.984 L1333.19 684.984 L1333.75 684.984 L1334.3 684.984 L1334.86 684.984 L1335.42 684.984 L1335.98 684.984 L1336.54 684.984 L1337.1 684.984 L1337.66 684.984 L1338.22 684.984 L1338.78 684.984 L1339.34 684.984 L1339.9 684.984 L1340.46 684.984 L1341.02 684.984 L1341.57 684.984 L1342.13 684.984 L1342.69 684.984 L1343.25 684.984 L1343.81 684.984 L1344.37 684.984 L1344.93 684.984 L1345.49 684.984 L1346.05 684.984 L1346.61 684.984 L1347.17 684.984 L1347.73 684.984 L1348.29 684.984 L1348.84 684.984 L1349.4 684.984 L1349.96 684.984 L1350.52 684.984 L1351.08 684.984 L1351.64 684.984 L1352.2 684.984 L1352.76 684.984 L1353.32 684.984 L1353.88 684.984 L1354.44 684.984 L1355 684.984 L1355.56 684.984 L1356.12 684.984 L1356.67 684.984 L1357.23 684.984 L1357.79 684.984 L1358.35 684.984 L1358.91 684.984 L1359.47 684.984 L1360.03 684.984 L1360.59 684.984 L1361.15 684.984 L1361.71 684.984 L1362.27 684.984 L1362.83 684.984 L1363.39 684.984 L1363.94 684.984 L1364.5 684.984 L1365.06 684.984 L1365.62 684.984 L1366.18 684.984 L1366.74 684.984 L1367.3 684.984 L1367.86 684.984 L1368.42 684.984 L1368.98 684.984 L1369.54 684.984 L1370.1 684.984 L1370.66 684.984 L1371.21 684.984 L1371.77 684.984 L1372.33 684.984 L1372.89 684.984 L1373.45 684.984 L1374.01 684.984 L1374.57 684.984 L1375.13 684.984 L1375.69 684.984 L1376.25 684.984 L1376.81 684.984 L1377.37 684.984 L1377.93 684.984 L1378.49 684.984 L1379.04 684.984 L1379.6 684.984 L1380.16 684.984 L1380.72 684.984 L1381.28 684.984 L1381.84 684.984 L1382.4 684.984 L1382.96 684.984 L1383.52 684.984 L1384.08 684.984 L1384.64 684.984 L1385.2 684.984 L1385.76 684.984 L1386.31 684.984 L1386.87 684.984 L1387.43 684.984 L1387.99 684.984 L1388.55 684.984 L1389.11 684.984 L1389.67 684.984 L1390.23 684.984 L1390.79 684.984 L1391.35 684.984 L1391.91 684.984 L1392.47 684.984 L1393.03 684.984 L1393.58 684.984 L1394.14 684.984 L1394.7 684.984 L1395.26 684.984 L1395.82 684.984 L1396.38 684.984 L1396.94 684.984 L1397.5 684.984 L1398.06 684.984 L1398.62 684.984 L1399.18 684.984 L1399.74 684.984 L1400.3 684.984 L1400.86 684.984 L1401.41 684.984 L1401.97 684.984 L1402.53 684.984 L1403.09 684.984 L1403.65 684.984 L1404.21 684.984 L1404.77 684.984 L1405.33 684.984 L1405.89 684.984 L1406.45 684.984 L1407.01 684.984 L1407.57 684.984 L1408.13 684.984 L1408.68 684.984 L1409.24 684.984 L1409.8 684.984 L1410.36 684.984 L1410.92 684.984 L1411.48 684.984 L1412.04 684.984 L1412.6 684.984 L1413.16 684.984 L1413.72 684.984 L1414.28 684.984 L1414.84 684.984 L1415.4 684.984 L1415.95 684.984 L1416.51 684.984 L1417.07 684.984 L1417.63 684.984 L1418.19 684.984 L1418.75 684.984 L1419.31 684.984 L1419.87 684.984 L1420.43 684.984 L1420.99 684.984 L1421.55 684.984 L1422.11 684.984 L1422.67 684.984 L1423.23 684.984 L1423.78 684.984 L1424.34 684.984 L1424.9 684.984 L1425.46 684.984 L1426.02 684.984 L1426.58 684.984 L1427.14 684.984 L1427.7 684.984 L1428.26 684.984 L1428.82 684.984 L1429.38 684.984 L1429.94 684.984 L1430.5 684.984 L1431.05 684.984 L1431.61 684.984 L1432.17 684.984 L1432.73 684.984 L1433.29 684.984 L1433.85 684.984 L1434.41 684.984 L1434.97 684.984 L1435.53 684.984 L1436.09 684.984 L1436.65 684.984 L1437.21 684.984 L1437.77 684.984 L1438.33 684.984 L1438.88 684.984 L1439.44 684.984 L1440 684.984 L1440.56 684.984 L1441.12 684.984 L1441.68 684.984 L1442.24 684.984 L1442.8 684.984 L1443.36 684.984 L1443.92 684.984 L1444.48 684.984 L1445.04 684.984 L1445.6 684.984 L1446.15 684.984 L1446.71 684.984 L1447.27 684.984 L1447.83 684.984 L1448.39 684.984 L1448.95 684.984 L1449.51 684.984 L1450.07 684.984 L1450.63 684.984 L1451.19 684.984 L1451.75 684.984 L1452.31 684.984 L1452.87 684.984 L1453.42 684.984 L1453.98 684.984 L1454.54 684.984 L1455.1 684.984 L1455.66 684.984 L1456.22 684.984 L1456.78 684.984 L1457.34 684.984 L1457.9 684.984 L1458.46 684.984 L1459.02 684.984 L1459.58 684.984 L1460.14 684.984 L1460.7 684.984 L1461.25 684.984 L1461.81 684.984 L1462.37 684.984 L1462.93 684.984 L1463.49 684.984 L1464.05 684.984 L1464.61 684.984 L1465.17 684.984 L1465.73 684.984 L1466.29 684.984 L1466.85 684.984 L1467.41 684.984 L1467.97 684.984 L1468.52 684.984 L1469.08 684.984 L1469.64 684.984 L1470.2 684.984 L1470.76 684.984 L1471.32 684.984 L1471.88 684.984 L1472.44 684.984 L1473 684.984 L1473.56 684.984 L1474.12 684.984 L1474.68 684.984 L1475.24 684.984 L1475.79 684.984 L1476.35 684.984 L1476.91 684.984 L1477.47 684.984 L1478.03 684.984 L1478.59 684.984 L1479.15 684.984 L1479.71 684.984 L1480.27 684.984 L1480.83 684.984 L1481.39 684.984 L1481.95 684.984 L1482.51 684.984 L1483.07 684.984 L1483.62 684.984 L1484.18 684.984 L1484.74 684.984 L1485.3 684.984 L1485.86 684.984 L1486.42 684.984 L1486.98 684.984 L1487.54 684.984 L1488.1 684.984 L1488.66 684.984 L1489.22 684.984 L1489.78 684.984 L1490.34 684.984 L1490.89 684.984 L1491.45 684.984 L1492.01 684.984 L1492.57 684.984 L1493.13 684.984 L1493.69 684.984 L1494.25 684.984 L1494.81 684.984 L1495.37 684.984 L1495.93 684.984 L1496.49 684.984 L1497.05 684.984 L1497.61 684.984 L1498.16 684.984 L1498.72 684.984 L1499.28 684.984 L1499.84 684.984 L1500.4 684.984 L1500.96 684.984 L1501.52 684.984 L1502.08 684.984 L1502.64 684.984 L1503.2 684.984 L1503.76 684.984 L1504.32 684.984 L1504.88 684.984 L1505.44 684.984 L1505.99 684.984 L1506.55 684.984 L1507.11 684.984 L1507.67 684.984 L1508.23 684.984 L1508.79 684.984 L1509.35 684.984 L1509.91 684.984 L1510.47 684.984 L1511.03 684.984 L1511.59 684.984 L1512.15 684.984 L1512.71 684.984 L1513.26 684.984 L1513.82 684.984 L1514.38 684.984 L1514.94 684.984 L1515.5 684.984 L1516.06 684.984 L1516.62 684.984 L1517.18 684.984 L1517.74 684.984 L1518.3 684.984 L1518.86 684.984 L1519.42 684.984 L1519.98 684.984 L1520.53 684.984 L1521.09 684.984 L1521.65 684.984 L1522.21 684.984 L1522.77 684.984 L1523.33 684.984 L1523.89 684.984 L1524.45 684.984 L1525.01 684.984 L1525.57 684.984 L1526.13 684.984 L1526.69 684.984 L1527.25 684.984 L1527.81 684.984 L1528.36 684.984 L1528.92 684.984 L1529.48 684.984 L1530.04 684.984 L1530.6 684.984 L1531.16 684.984 L1531.72 684.984 L1532.28 684.984 L1532.84 684.984 L1533.4 684.984 L1533.96 684.984 L1534.52 684.984 L1535.08 684.984 L1535.63 684.984 L1536.19 684.984 L1536.75 684.984 L1537.31 684.984 L1537.87 684.984 L1538.43 684.984 L1538.99 684.984 L1539.55 684.984 L1540.11 684.984 L1540.67 684.984 L1541.23 684.984 L1541.79 684.984 L1542.35 684.984 L1542.9 684.984 L1543.46 684.984 L1544.02 684.984 L1544.58 684.984 L1545.14 684.984 L1545.7 684.984 L1546.26 684.984 L1546.82 684.984 L1547.38 684.984 L1547.94 684.984 L1548.5 684.984 L1549.06 684.984 L1549.62 684.984 L1550.18 684.984 L1550.73 684.984 L1551.29 684.984 L1551.85 684.984 L1552.41 684.984 L1552.97 684.984 L1553.53 684.984 L1554.09 684.984 L1554.65 684.984 L1555.21 684.984 L1555.77 684.984 L1556.33 684.984 L1556.89 684.984 L1557.45 684.984 L1558 684.984 L1558.56 684.984 L1559.12 684.984 L1559.68 684.984 L1560.24 684.984 L1560.8 684.984 L1561.36 684.984 L1561.92 684.984 L1562.48 684.984 L1563.04 684.984 L1563.6 684.984 L1564.16 684.984 L1564.72 684.984 L1565.28 684.984 L1565.83 684.984 L1566.39 684.984 L1566.95 684.984 L1567.51 684.984 L1568.07 684.984 L1568.63 684.984 L1569.19 684.984 L1569.75 684.984 L1570.31 684.984 L1570.87 684.984 L1571.43 684.984 L1571.99 684.984 L1572.55 684.984 L1573.1 684.984 L1573.66 684.984 L1574.22 684.984 L1574.78 684.984 L1575.34 684.984 L1575.9 684.984 L1576.46 684.984 L1577.02 684.984 L1577.58 684.984 L1578.14 684.984 L1578.7 684.984 L1579.26 684.984 L1579.82 684.984 L1580.37 684.984 L1580.93 684.984 L1581.49 684.984 L1582.05 684.984 L1582.61 684.984 L1583.17 684.984 L1583.73 684.984 L1584.29 684.984 L1584.85 684.984 L1585.41 684.984 L1585.97 684.984 L1586.53 684.984 L1587.09 684.984 L1587.65 684.984 L1588.2 684.984 L1588.76 684.984 L1589.32 684.984 L1589.88 684.984 L1590.44 684.984 L1591 684.984 L1591.56 684.984 L1592.12 684.984 L1592.68 684.984 L1593.24 684.984 L1593.8 684.984 L1594.36 684.984 L1594.92 684.984 L1595.47 684.984 L1596.03 684.984 L1596.59 684.984 L1597.15 684.984 L1597.71 684.984 L1598.27 684.984 L1598.83 684.984 L1599.39 684.984 L1599.95 684.984 L1600.51 684.984 L1601.07 684.984 L1601.63 684.984 L1602.19 684.984 L1602.74 684.984 L1603.3 684.984 L1603.86 684.984 L1604.42 684.984 L1604.98 684.984 L1605.54 684.984 L1606.1 684.984 L1606.66 684.984 L1607.22 684.984 L1607.78 684.984 L1608.34 684.984 L1608.9 684.984 L1609.46 684.984 L1610.02 684.984 L1610.57 684.984 L1611.13 684.984 L1611.69 684.984 L1612.25 684.984 L1612.81 684.984 L1613.37 684.984 L1613.93 684.984 L1614.49 684.984 L1615.05 684.984 L1615.61 684.984 L1616.17 684.984 L1616.73 684.984 L1617.29 684.984 L1617.84 684.984 L1618.4 684.984 L1618.96 684.984 L1619.52 684.984 L1620.08 684.984 L1620.64 684.984 L1621.2 684.984 L1621.76 684.984 L1622.32 684.984 L1622.88 684.984 L1623.44 684.984 L1624 684.984 L1624.56 684.984 L1625.11 684.984 L1625.67 684.984 L1626.23 684.984 L1626.79 684.984 L1627.35 684.984 L1627.91 684.984 L1628.47 684.984 L1629.03 684.984 L1629.59 684.984 L1630.15 684.984 L1630.71 684.984 L1631.27 684.984 L1631.83 684.984 L1632.39 684.984 L1632.94 684.984 L1633.5 684.984 L1634.06 684.984 L1634.62 684.984 L1635.18 684.984 L1635.74 684.984 L1636.3 684.984 L1636.86 684.984 L1637.42 684.984 L1637.98 684.984 L1638.54 684.984 L1639.1 684.984 L1639.66 684.984 L1640.21 684.984 L1640.77 684.984 L1641.33 684.984 L1641.89 684.984 L1642.45 684.984 L1643.01 684.984 L1643.57 684.984 L1644.13 684.984 L1644.69 684.984 L1645.25 684.984 L1645.81 684.984 L1646.37 684.984 L1646.93 684.984 L1647.48 684.984 L1648.04 684.984 L1648.6 684.984 L1649.16 684.984 L1649.72 684.984 L1650.28 684.984 L1650.84 684.984 L1651.4 684.984 L1651.96 684.984 L1652.52 684.984 L1653.08 684.984 L1653.64 684.984 L1654.2 684.984 L1654.76 684.984 L1655.31 684.984 L1655.87 684.984 L1656.43 684.984 L1656.99 684.984 L1657.55 684.984 L1658.11 684.984 L1658.67 684.984 L1659.23 684.984 L1659.79 684.984 L1660.35 684.984 L1660.91 684.984 L1661.47 684.984 L1662.03 684.984 L1662.58 684.984 L1663.14 684.984 L1663.7 684.984 L1664.26 684.984 L1664.82 684.984 L1665.38 684.984 L1665.94 684.984 L1666.5 684.984 L1667.06 684.984 L1667.62 684.984 L1668.18 684.984 L1668.74 684.984 L1669.3 684.984 L1669.85 684.984 L1670.41 684.984 L1670.97 684.984 L1671.53 684.984 L1672.09 684.984 L1672.65 684.984 L1673.21 684.984 L1673.77 684.984 L1674.33 684.984 L1674.89 684.984 L1675.45 684.984 L1676.01 684.984 L1676.57 684.984 L1677.13 684.984 L1677.68 684.984 L1678.24 684.984 L1678.8 684.984 L1679.36 684.984 L1679.92 684.984 L1680.48 684.984 L1681.04 684.984 L1681.6 684.984 L1682.16 684.984 L1682.72 684.984 L1683.28 684.984 L1683.84 684.984 L1684.4 684.984 L1684.95 684.984 L1685.51 684.984 L1686.07 684.984 L1686.63 684.984 L1687.19 684.984 L1687.75 684.984 L1688.31 684.984 L1688.87 684.984 L1689.43 684.984 L1689.99 684.984 L1690.55 684.984 L1691.11 684.984 L1691.67 684.984 L1692.23 684.984 L1692.78 684.984 L1693.34 684.984 L1693.9 684.984 L1694.46 684.984 L1695.02 684.984 L1695.58 684.984 L1696.14 684.984 L1696.7 684.984 L1697.26 684.984 L1697.82 684.984 L1698.38 684.984 L1698.94 684.984 L1699.5 684.984 L1700.05 684.984 L1700.61 684.984 L1701.17 684.984 L1701.73 684.984 L1702.29 684.984 L1702.85 684.984 L1703.41 684.984 L1703.97 684.984 L1704.53 684.984 L1705.09 684.984 L1705.65 684.984 L1706.21 684.984 L1706.77 684.984 L1707.32 684.984 L1707.88 684.984 L1708.44 684.984 L1709 684.984 L1709.56 684.984 L1710.12 684.984 L1710.68 684.984 L1711.24 684.984 L1711.8 684.984 L1712.36 684.984 L1712.92 684.984 L1713.48 684.984 L1714.04 684.984 L1714.6 684.984 L1715.15 684.984 L1715.71 684.984 L1716.27 684.984 L1716.83 684.984 L1717.39 684.984 L1717.95 684.984 L1718.51 684.984 L1719.07 684.984 L1719.63 684.984 L1720.19 684.984 L1720.75 684.984 L1721.31 684.984 L1721.87 684.984 L1722.42 684.984 L1722.98 684.984 L1723.54 684.984 L1724.1 684.984 L1724.66 684.984 L1725.22 684.984 L1725.78 684.984 L1726.34 684.984 L1726.9 684.984 L1727.46 684.984 L1728.02 684.984 L1728.58 684.984 L1729.14 684.984 L1729.69 684.984 L1730.25 684.984 L1730.81 684.984 L1731.37 684.984 L1731.93 684.984 L1732.49 684.984 L1733.05 684.984 L1733.61 684.984 L1734.17 684.984 L1734.73 684.984 L1735.29 684.984 L1735.85 684.984 L1736.41 684.984 L1736.97 684.984 L1737.52 684.984 L1738.08 684.984 L1738.64 684.984 L1739.2 684.984 L1739.76 684.984 L1740.32 684.984 L1740.88 684.984 L1741.44 684.984 L1742 684.984 L1742.56 684.984 L1743.12 684.984 L1743.68 684.984 L1744.24 684.984 L1744.79 684.984 L1745.35 684.984 L1745.91 684.984 L1746.47 684.984 L1747.03 684.984 L1747.59 684.984 L1748.15 684.984 L1748.71 684.984 L1749.27 684.984 L1749.83 684.984 L1750.39 684.984 L1750.95 684.984 L1751.51 684.984 L1752.06 684.984 L1752.62 684.984 L1753.18 684.984 L1753.74 684.984 L1754.3 684.984 L1754.86 684.984 L1755.42 684.984 L1755.98 684.984 L1756.54 684.984 L1757.1 684.984 L1757.66 684.984 L1758.22 684.984 L1758.78 684.984 L1759.34 684.984 L1759.89 684.984 L1760.45 684.984 L1761.01 684.984 L1761.57 684.984 L1762.13 684.984 L1762.69 684.984 L1763.25 684.984 L1763.81 684.984 L1764.37 684.984 L1764.93 684.984 L1765.49 684.984 L1766.05 684.984 L1766.61 684.984 L1767.16 684.984 L1767.72 684.984 L1768.28 684.984 L1768.84 684.984 L1769.4 684.984 L1769.96 684.984 L1770.52 684.984 L1771.08 684.984 L1771.64 684.984 L1772.2 684.984 L1772.76 684.984 L1773.32 684.984 L1773.88 684.984 L1774.43 684.984 L1774.99 684.984 L1775.55 684.984 L1776.11 684.984 L1776.67 684.984 L1777.23 684.984 L1777.79 684.984 L1778.35 684.984 L1778.91 684.984 L1779.47 684.984 L1780.03 684.984 L1780.59 684.984 L1781.15 684.984 L1781.71 684.984 L1782.26 684.984 L1782.82 684.984 L1783.38 684.984 L1783.94 684.984 L1784.5 684.984 L1785.06 684.984 L1785.62 684.984 L1786.18 684.984 L1786.74 684.984 L1787.3 684.984 L1787.86 684.984 L1788.42 684.984 L1788.98 684.984 L1789.53 684.984 L1790.09 684.984 L1790.65 684.984 L1791.21 684.984 L1791.77 684.984 L1792.33 684.984 L1792.89 684.984 L1793.45 684.984 L1794.01 684.984 L1794.57 684.984 L1795.13 684.984 L1795.69 684.984 L1796.25 684.984 L1796.8 684.984 L1797.36 684.984 L1797.92 684.984 L1798.48 684.984 L1799.04 684.984 L1799.6 684.984 L1800.16 684.984 L1800.72 684.984 L1801.28 684.984 L1801.84 684.984 L1802.4 684.984 L1802.96 684.984 L1803.52 684.984 L1804.08 684.984 L1804.63 684.984 L1805.19 684.984 L1805.75 684.984 L1806.31 684.984 L1806.87 684.984 L1807.43 684.984 L1807.99 684.984 L1808.55 684.984 L1809.11 684.984 L1809.67 684.984 L1810.23 684.984 L1810.79 684.984 L1811.35 684.984 L1811.9 684.984 L1812.46 684.984 L1813.02 684.984 L1813.58 684.984 L1814.14 684.984 L1814.7 684.984 L1815.26 684.984 L1815.82 684.984 L1816.38 684.984 L1816.94 684.984 L1817.5 684.984 L1818.06 684.984 L1818.62 684.984 L1819.18 684.984 L1819.73 684.984 L1820.29 684.984 L1820.85 684.984 L1821.41 684.984 L1821.97 684.984 L1822.53 684.984 L1823.09 684.984 L1823.65 684.984 L1824.21 684.984 L1824.77 684.984 L1825.33 684.984 L1825.89 684.984 L1826.45 684.984 L1827 684.984 L1827.56 684.984 L1828.12 684.984 L1828.68 684.984 L1829.24 684.984 L1829.8 684.984 L1830.36 684.984 L1830.92 684.984 L1831.48 684.984 L1832.04 684.984 L1832.6 684.984 L1833.16 684.984 L1833.72 684.984 L1834.27 684.984 L1834.83 684.984 L1835.39 684.984 L1835.95 684.984 L1836.51 684.984 L1837.07 684.984 L1837.63 684.984 L1838.19 684.984 L1838.19 682.599 L1837.63 682.599 L1837.07 682.599 L1836.51 682.599 L1835.95 682.599 L1835.39 682.599 L1834.83 682.599 L1834.27 682.599 L1833.72 682.599 L1833.16 682.599 L1832.6 682.599 L1832.04 682.599 L1831.48 682.599 L1830.92 682.599 L1830.36 682.599 L1829.8 682.599 L1829.24 682.599 L1828.68 682.599 L1828.12 682.599 L1827.56 682.599 L1827 682.599 L1826.45 682.599 L1825.89 682.599 L1825.33 682.599 L1824.77 682.599 L1824.21 682.599 L1823.65 682.599 L1823.09 682.599 L1822.53 682.599 L1821.97 682.599 L1821.41 682.599 L1820.85 682.599 L1820.29 682.599 L1819.73 682.599 L1819.18 682.599 L1818.62 682.599 L1818.06 682.599 L1817.5 682.599 L1816.94 682.599 L1816.38 682.599 L1815.82 682.599 L1815.26 682.599 L1814.7 682.599 L1814.14 682.599 L1813.58 682.599 L1813.02 682.599 L1812.46 682.599 L1811.9 682.599 L1811.35 682.599 L1810.79 682.599 L1810.23 682.599 L1809.67 682.599 L1809.11 682.599 L1808.55 682.599 L1807.99 682.599 L1807.43 682.599 L1806.87 682.599 L1806.31 682.599 L1805.75 682.599 L1805.19 682.599 L1804.63 682.599 L1804.08 682.599 L1803.52 682.599 L1802.96 682.599 L1802.4 682.599 L1801.84 682.599 L1801.28 682.599 L1800.72 682.599 L1800.16 682.599 L1799.6 682.599 L1799.04 682.599 L1798.48 682.599 L1797.92 682.599 L1797.36 682.599 L1796.8 682.599 L1796.25 682.599 L1795.69 682.599 L1795.13 682.599 L1794.57 682.599 L1794.01 682.599 L1793.45 682.599 L1792.89 682.599 L1792.33 682.599 L1791.77 682.599 L1791.21 682.599 L1790.65 682.599 L1790.09 682.599 L1789.53 682.599 L1788.98 682.599 L1788.42 682.599 L1787.86 682.599 L1787.3 682.599 L1786.74 682.599 L1786.18 682.599 L1785.62 682.599 L1785.06 682.599 L1784.5 682.599 L1783.94 682.599 L1783.38 682.599 L1782.82 682.599 L1782.26 682.599 L1781.71 682.599 L1781.15 682.599 L1780.59 682.599 L1780.03 682.599 L1779.47 682.599 L1778.91 682.599 L1778.35 682.599 L1777.79 682.599 L1777.23 682.599 L1776.67 682.599 L1776.11 682.599 L1775.55 682.599 L1774.99 682.599 L1774.43 682.599 L1773.88 682.599 L1773.32 682.599 L1772.76 682.599 L1772.2 682.599 L1771.64 682.599 L1771.08 682.599 L1770.52 682.599 L1769.96 682.599 L1769.4 682.599 L1768.84 682.599 L1768.28 682.599 L1767.72 682.599 L1767.16 682.599 L1766.61 682.599 L1766.05 682.599 L1765.49 682.599 L1764.93 682.599 L1764.37 682.599 L1763.81 682.599 L1763.25 682.599 L1762.69 682.599 L1762.13 682.599 L1761.57 682.599 L1761.01 682.599 L1760.45 682.599 L1759.89 682.599 L1759.34 682.599 L1758.78 682.599 L1758.22 682.599 L1757.66 682.599 L1757.1 682.599 L1756.54 682.599 L1755.98 682.599 L1755.42 682.599 L1754.86 682.599 L1754.3 682.599 L1753.74 682.599 L1753.18 682.599 L1752.62 682.599 L1752.06 682.599 L1751.51 682.599 L1750.95 682.599 L1750.39 682.599 L1749.83 682.599 L1749.27 682.599 L1748.71 682.599 L1748.15 682.599 L1747.59 682.599 L1747.03 682.599 L1746.47 682.599 L1745.91 682.599 L1745.35 682.599 L1744.79 682.599 L1744.24 682.599 L1743.68 682.599 L1743.12 682.599 L1742.56 682.599 L1742 682.599 L1741.44 682.599 L1740.88 682.599 L1740.32 682.599 L1739.76 682.599 L1739.2 682.599 L1738.64 682.599 L1738.08 682.599 L1737.52 682.599 L1736.97 682.599 L1736.41 682.599 L1735.85 682.599 L1735.29 682.599 L1734.73 682.599 L1734.17 682.599 L1733.61 682.599 L1733.05 682.599 L1732.49 682.599 L1731.93 682.599 L1731.37 682.599 L1730.81 682.599 L1730.25 682.599 L1729.69 682.599 L1729.14 682.599 L1728.58 682.599 L1728.02 682.599 L1727.46 682.599 L1726.9 682.599 L1726.34 682.599 L1725.78 682.599 L1725.22 682.599 L1724.66 682.599 L1724.1 682.599 L1723.54 682.599 L1722.98 682.599 L1722.42 682.599 L1721.87 682.599 L1721.31 682.599 L1720.75 682.599 L1720.19 682.599 L1719.63 682.599 L1719.07 682.599 L1718.51 682.599 L1717.95 682.599 L1717.39 682.599 L1716.83 682.599 L1716.27 682.599 L1715.71 682.599 L1715.15 682.599 L1714.6 682.599 L1714.04 682.599 L1713.48 682.599 L1712.92 682.599 L1712.36 682.599 L1711.8 682.599 L1711.24 682.599 L1710.68 682.599 L1710.12 682.599 L1709.56 682.599 L1709 682.599 L1708.44 682.599 L1707.88 682.599 L1707.32 682.599 L1706.77 682.599 L1706.21 682.599 L1705.65 682.599 L1705.09 682.599 L1704.53 682.599 L1703.97 682.599 L1703.41 682.599 L1702.85 682.599 L1702.29 682.599 L1701.73 682.599 L1701.17 682.599 L1700.61 682.599 L1700.05 682.599 L1699.5 682.599 L1698.94 682.599 L1698.38 682.599 L1697.82 682.599 L1697.26 682.599 L1696.7 682.599 L1696.14 682.599 L1695.58 682.599 L1695.02 682.599 L1694.46 682.599 L1693.9 682.599 L1693.34 682.599 L1692.78 682.599 L1692.23 682.599 L1691.67 682.599 L1691.11 682.599 L1690.55 682.599 L1689.99 682.599 L1689.43 682.599 L1688.87 682.599 L1688.31 682.599 L1687.75 682.599 L1687.19 682.599 L1686.63 682.599 L1686.07 682.599 L1685.51 682.599 L1684.95 682.599 L1684.4 682.599 L1683.84 682.599 L1683.28 682.599 L1682.72 682.599 L1682.16 682.599 L1681.6 682.599 L1681.04 682.599 L1680.48 682.599 L1679.92 682.599 L1679.36 682.599 L1678.8 682.599 L1678.24 682.599 L1677.68 682.599 L1677.13 682.599 L1676.57 682.599 L1676.01 682.599 L1675.45 682.599 L1674.89 682.599 L1674.33 682.599 L1673.77 682.599 L1673.21 682.599 L1672.65 682.599 L1672.09 682.599 L1671.53 682.599 L1670.97 682.599 L1670.41 682.599 L1669.85 682.599 L1669.3 682.599 L1668.74 682.599 L1668.18 682.599 L1667.62 682.599 L1667.06 682.599 L1666.5 682.599 L1665.94 682.599 L1665.38 682.599 L1664.82 682.599 L1664.26 682.599 L1663.7 682.599 L1663.14 682.599 L1662.58 682.599 L1662.03 682.599 L1661.47 682.599 L1660.91 682.599 L1660.35 682.599 L1659.79 682.599 L1659.23 682.599 L1658.67 682.599 L1658.11 682.599 L1657.55 682.599 L1656.99 682.599 L1656.43 682.599 L1655.87 682.599 L1655.31 682.599 L1654.76 682.599 L1654.2 682.599 L1653.64 682.599 L1653.08 682.599 L1652.52 682.599 L1651.96 682.599 L1651.4 682.599 L1650.84 682.599 L1650.28 682.599 L1649.72 682.599 L1649.16 682.599 L1648.6 682.599 L1648.04 682.599 L1647.48 682.599 L1646.93 682.599 L1646.37 682.599 L1645.81 682.599 L1645.25 682.599 L1644.69 682.599 L1644.13 682.599 L1643.57 682.599 L1643.01 682.599 L1642.45 682.599 L1641.89 682.599 L1641.33 682.599 L1640.77 682.599 L1640.21 682.599 L1639.66 682.599 L1639.1 682.599 L1638.54 682.599 L1637.98 682.599 L1637.42 682.599 L1636.86 682.599 L1636.3 682.599 L1635.74 682.599 L1635.18 682.599 L1634.62 682.599 L1634.06 682.599 L1633.5 682.599 L1632.94 682.599 L1632.39 682.599 L1631.83 682.599 L1631.27 682.599 L1630.71 682.599 L1630.15 682.599 L1629.59 682.599 L1629.03 682.599 L1628.47 682.599 L1627.91 682.599 L1627.35 682.599 L1626.79 682.599 L1626.23 682.599 L1625.67 682.599 L1625.11 682.599 L1624.56 682.599 L1624 682.599 L1623.44 682.599 L1622.88 682.599 L1622.32 682.599 L1621.76 682.599 L1621.2 682.599 L1620.64 682.599 L1620.08 682.599 L1619.52 682.599 L1618.96 682.599 L1618.4 682.599 L1617.84 682.599 L1617.29 682.599 L1616.73 682.599 L1616.17 682.599 L1615.61 682.599 L1615.05 682.599 L1614.49 682.599 L1613.93 682.599 L1613.37 682.599 L1612.81 682.599 L1612.25 682.599 L1611.69 682.599 L1611.13 682.599 L1610.57 682.599 L1610.02 682.599 L1609.46 682.599 L1608.9 682.599 L1608.34 682.599 L1607.78 682.599 L1607.22 682.599 L1606.66 682.599 L1606.1 682.599 L1605.54 682.599 L1604.98 682.599 L1604.42 682.599 L1603.86 682.599 L1603.3 682.599 L1602.74 682.599 L1602.19 682.599 L1601.63 682.599 L1601.07 682.599 L1600.51 682.599 L1599.95 682.599 L1599.39 682.599 L1598.83 682.599 L1598.27 682.599 L1597.71 682.599 L1597.15 682.599 L1596.59 682.599 L1596.03 682.599 L1595.47 682.599 L1594.92 682.599 L1594.36 682.599 L1593.8 682.599 L1593.24 682.599 L1592.68 682.599 L1592.12 682.599 L1591.56 682.599 L1591 682.599 L1590.44 682.599 L1589.88 682.599 L1589.32 682.599 L1588.76 682.599 L1588.2 682.599 L1587.65 682.599 L1587.09 682.599 L1586.53 682.599 L1585.97 682.599 L1585.41 682.599 L1584.85 682.599 L1584.29 682.599 L1583.73 682.599 L1583.17 682.599 L1582.61 682.599 L1582.05 682.599 L1581.49 682.599 L1580.93 682.599 L1580.37 682.599 L1579.82 682.599 L1579.26 682.599 L1578.7 682.599 L1578.14 682.599 L1577.58 682.599 L1577.02 682.599 L1576.46 682.599 L1575.9 682.599 L1575.34 682.599 L1574.78 682.599 L1574.22 682.599 L1573.66 682.599 L1573.1 682.599 L1572.55 682.599 L1571.99 682.599 L1571.43 682.599 L1570.87 682.599 L1570.31 682.599 L1569.75 682.599 L1569.19 682.599 L1568.63 682.599 L1568.07 682.599 L1567.51 682.599 L1566.95 682.599 L1566.39 682.599 L1565.83 682.599 L1565.28 682.599 L1564.72 682.599 L1564.16 682.599 L1563.6 682.599 L1563.04 682.599 L1562.48 682.599 L1561.92 682.599 L1561.36 682.599 L1560.8 682.599 L1560.24 682.599 L1559.68 682.599 L1559.12 682.599 L1558.56 682.599 L1558 682.599 L1557.45 682.599 L1556.89 682.599 L1556.33 682.599 L1555.77 682.599 L1555.21 682.599 L1554.65 682.599 L1554.09 682.599 L1553.53 682.599 L1552.97 682.599 L1552.41 682.599 L1551.85 682.599 L1551.29 682.599 L1550.73 682.599 L1550.18 682.599 L1549.62 682.599 L1549.06 682.599 L1548.5 682.599 L1547.94 682.599 L1547.38 682.599 L1546.82 682.599 L1546.26 682.599 L1545.7 682.599 L1545.14 682.599 L1544.58 682.599 L1544.02 682.599 L1543.46 682.599 L1542.9 682.599 L1542.35 682.599 L1541.79 682.599 L1541.23 682.599 L1540.67 682.599 L1540.11 682.599 L1539.55 682.599 L1538.99 682.599 L1538.43 682.599 L1537.87 682.599 L1537.31 682.599 L1536.75 682.599 L1536.19 682.599 L1535.63 682.599 L1535.08 682.599 L1534.52 682.599 L1533.96 682.599 L1533.4 682.599 L1532.84 682.599 L1532.28 682.599 L1531.72 682.599 L1531.16 682.599 L1530.6 682.599 L1530.04 682.599 L1529.48 682.599 L1528.92 682.599 L1528.36 682.599 L1527.81 682.599 L1527.25 682.599 L1526.69 682.599 L1526.13 682.599 L1525.57 682.599 L1525.01 682.599 L1524.45 682.599 L1523.89 682.599 L1523.33 682.599 L1522.77 682.599 L1522.21 682.599 L1521.65 682.599 L1521.09 682.599 L1520.53 682.599 L1519.98 682.599 L1519.42 682.599 L1518.86 682.599 L1518.3 682.599 L1517.74 682.599 L1517.18 682.599 L1516.62 682.599 L1516.06 682.599 L1515.5 682.599 L1514.94 682.599 L1514.38 682.599 L1513.82 682.599 L1513.26 682.599 L1512.71 682.599 L1512.15 682.599 L1511.59 682.599 L1511.03 682.599 L1510.47 682.599 L1509.91 682.599 L1509.35 682.599 L1508.79 682.599 L1508.23 682.599 L1507.67 682.599 L1507.11 682.599 L1506.55 682.599 L1505.99 682.599 L1505.44 682.599 L1504.88 682.599 L1504.32 682.599 L1503.76 682.599 L1503.2 682.599 L1502.64 682.599 L1502.08 682.599 L1501.52 682.599 L1500.96 682.599 L1500.4 682.599 L1499.84 682.599 L1499.28 682.599 L1498.72 682.599 L1498.16 682.599 L1497.61 682.599 L1497.05 682.599 L1496.49 682.599 L1495.93 682.599 L1495.37 682.599 L1494.81 682.599 L1494.25 682.599 L1493.69 682.599 L1493.13 682.599 L1492.57 682.599 L1492.01 682.599 L1491.45 682.599 L1490.89 682.599 L1490.34 682.599 L1489.78 682.599 L1489.22 682.599 L1488.66 682.599 L1488.1 682.599 L1487.54 682.599 L1486.98 682.599 L1486.42 682.599 L1485.86 682.599 L1485.3 682.599 L1484.74 682.599 L1484.18 682.599 L1483.62 682.599 L1483.07 682.599 L1482.51 682.599 L1481.95 682.599 L1481.39 682.599 L1480.83 682.599 L1480.27 682.599 L1479.71 682.599 L1479.15 682.599 L1478.59 682.599 L1478.03 682.599 L1477.47 682.599 L1476.91 682.599 L1476.35 682.599 L1475.79 682.599 L1475.24 682.599 L1474.68 682.599 L1474.12 682.599 L1473.56 682.599 L1473 682.599 L1472.44 682.599 L1471.88 682.599 L1471.32 682.599 L1470.76 682.599 L1470.2 682.599 L1469.64 682.599 L1469.08 682.599 L1468.52 682.599 L1467.97 682.599 L1467.41 682.599 L1466.85 682.599 L1466.29 682.599 L1465.73 682.599 L1465.17 682.599 L1464.61 682.599 L1464.05 682.599 L1463.49 682.599 L1462.93 682.599 L1462.37 682.599 L1461.81 682.599 L1461.25 682.599 L1460.7 682.599 L1460.14 682.599 L1459.58 682.599 L1459.02 682.599 L1458.46 682.599 L1457.9 682.599 L1457.34 682.599 L1456.78 682.599 L1456.22 682.599 L1455.66 682.599 L1455.1 682.599 L1454.54 682.599 L1453.98 682.599 L1453.42 682.599 L1452.87 682.599 L1452.31 682.599 L1451.75 682.599 L1451.19 682.599 L1450.63 682.599 L1450.07 682.599 L1449.51 682.599 L1448.95 682.599 L1448.39 682.599 L1447.83 682.599 L1447.27 682.599 L1446.71 682.599 L1446.15 682.599 L1445.6 682.599 L1445.04 682.599 L1444.48 682.599 L1443.92 682.599 L1443.36 682.599 L1442.8 682.599 L1442.24 682.599 L1441.68 682.599 L1441.12 682.599 L1440.56 682.599 L1440 682.599 L1439.44 682.599 L1438.88 682.599 L1438.33 682.599 L1437.77 682.599 L1437.21 682.599 L1436.65 682.599 L1436.09 682.599 L1435.53 682.599 L1434.97 682.599 L1434.41 682.599 L1433.85 682.599 L1433.29 682.599 L1432.73 682.599 L1432.17 682.599 L1431.61 682.599 L1431.05 682.599 L1430.5 682.599 L1429.94 682.599 L1429.38 682.599 L1428.82 682.599 L1428.26 682.599 L1427.7 682.599 L1427.14 682.599 L1426.58 682.599 L1426.02 682.599 L1425.46 682.599 L1424.9 682.599 L1424.34 682.599 L1423.78 682.599 L1423.23 682.599 L1422.67 682.599 L1422.11 682.599 L1421.55 682.599 L1420.99 682.599 L1420.43 682.599 L1419.87 682.599 L1419.31 682.599 L1418.75 682.599 L1418.19 682.599 L1417.63 682.599 L1417.07 682.599 L1416.51 682.599 L1415.95 682.599 L1415.4 682.599 L1414.84 682.599 L1414.28 682.599 L1413.72 682.599 L1413.16 682.599 L1412.6 682.599 L1412.04 682.599 L1411.48 682.599 L1410.92 682.599 L1410.36 682.599 L1409.8 682.599 L1409.24 682.599 L1408.68 682.599 L1408.13 682.599 L1407.57 682.599 L1407.01 682.599 L1406.45 682.599 L1405.89 682.599 L1405.33 682.599 L1404.77 682.599 L1404.21 682.599 L1403.65 682.599 L1403.09 682.599 L1402.53 682.599 L1401.97 682.599 L1401.41 682.599 L1400.86 682.599 L1400.3 682.599 L1399.74 682.599 L1399.18 682.599 L1398.62 682.599 L1398.06 682.599 L1397.5 682.599 L1396.94 682.599 L1396.38 682.599 L1395.82 682.599 L1395.26 682.599 L1394.7 682.599 L1394.14 682.599 L1393.58 682.599 L1393.03 682.599 L1392.47 682.599 L1391.91 682.599 L1391.35 682.599 L1390.79 682.599 L1390.23 682.599 L1389.67 682.599 L1389.11 682.599 L1388.55 682.599 L1387.99 682.599 L1387.43 682.599 L1386.87 682.599 L1386.31 682.599 L1385.76 682.599 L1385.2 682.599 L1384.64 682.599 L1384.08 682.599 L1383.52 682.599 L1382.96 682.599 L1382.4 682.599 L1381.84 682.599 L1381.28 682.599 L1380.72 682.599 L1380.16 682.599 L1379.6 682.599 L1379.04 682.599 L1378.49 682.599 L1377.93 682.599 L1377.37 682.599 L1376.81 682.599 L1376.25 682.599 L1375.69 682.599 L1375.13 682.599 L1374.57 682.599 L1374.01 682.599 L1373.45 682.599 L1372.89 682.599 L1372.33 682.599 L1371.77 682.599 L1371.21 682.599 L1370.66 682.599 L1370.1 682.599 L1369.54 682.599 L1368.98 682.599 L1368.42 682.599 L1367.86 682.599 L1367.3 682.599 L1366.74 682.599 L1366.18 682.599 L1365.62 682.599 L1365.06 682.599 L1364.5 682.599 L1363.94 682.599 L1363.39 682.599 L1362.83 682.599 L1362.27 682.599 L1361.71 682.599 L1361.15 682.599 L1360.59 682.599 L1360.03 682.599 L1359.47 682.599 L1358.91 682.599 L1358.35 682.599 L1357.79 682.599 L1357.23 682.599 L1356.67 682.599 L1356.12 682.599 L1355.56 682.599 L1355 682.599 L1354.44 682.599 L1353.88 682.599 L1353.32 682.599 L1352.76 682.599 L1352.2 682.599 L1351.64 682.599 L1351.08 682.599 L1350.52 682.599 L1349.96 682.599 L1349.4 682.599 L1348.84 682.599 L1348.29 682.599 L1347.73 682.599 L1347.17 682.599 L1346.61 682.599 L1346.05 682.599 L1345.49 682.599 L1344.93 682.599 L1344.37 682.599 L1343.81 682.599 L1343.25 682.599 L1342.69 682.599 L1342.13 682.599 L1341.57 682.599 L1341.02 682.599 L1340.46 682.599 L1339.9 682.599 L1339.34 682.599 L1338.78 682.599 L1338.22 682.599 L1337.66 682.599 L1337.1 682.599 L1336.54 682.599 L1335.98 682.599 L1335.42 682.599 L1334.86 682.599 L1334.3 682.599 L1333.75 682.599 L1333.19 682.599 L1332.63 682.599 L1332.07 682.599 L1331.51 682.599 L1330.95 682.599 L1330.39 682.599 L1329.83 682.599 L1329.27 682.599 L1328.71 682.599 L1328.15 682.599 L1327.59 682.599 L1327.03 682.599 L1326.47 682.599 L1325.92 682.599 L1325.36 682.599 L1324.8 682.599 L1324.24 682.599 L1323.68 682.599 L1323.12 682.599 L1322.56 682.599 L1322 682.599 L1321.44 682.599 L1320.88 682.599 L1320.32 682.599 L1319.76 682.599 L1319.2 682.599 L1318.65 682.599 L1318.09 682.599 L1317.53 682.599 L1316.97 682.599 L1316.41 682.599 L1315.85 682.599 L1315.29 682.599 L1314.73 682.599 L1314.17 682.599 L1313.61 682.599 L1313.05 682.599 L1312.49 682.599 L1311.93 682.599 L1311.38 682.599 L1310.82 682.599 L1310.26 682.599 L1309.7 682.599 L1309.14 682.599 L1308.58 682.599 L1308.02 682.599 L1307.46 682.599 L1306.9 682.599 L1306.34 682.599 L1305.78 682.599 L1305.22 682.599 L1304.66 682.599 L1304.1 682.599 L1303.55 682.599 L1302.99 682.599 L1302.43 682.599 L1301.87 682.599 L1301.31 682.599 L1300.75 682.599 L1300.19 682.599 L1299.63 682.599 L1299.07 682.599 L1298.51 682.599 L1297.95 682.599 L1297.39 682.599 L1296.83 682.599 L1296.28 682.599 L1295.72 682.599 L1295.16 682.599 L1294.6 682.599 L1294.04 682.599 L1293.48 682.599 L1292.92 682.599 L1292.36 682.599 L1291.8 682.599 L1291.24 682.599 L1290.68 682.599 L1290.12 682.599 L1289.56 682.599 L1289 682.599 L1288.45 682.599 L1287.89 682.599 L1287.33 682.599 L1286.77 682.599 L1286.21 682.599 L1285.65 682.599 L1285.09 682.599 L1284.53 682.599 L1283.97 682.599 L1283.41 682.599 L1282.85 682.599 L1282.29 682.599 L1281.73 682.599 L1281.18 682.599 L1280.62 682.599 L1280.06 682.599 L1279.5 682.599 L1278.94 682.599 L1278.38 682.599 L1277.82 682.599 L1277.26 682.599 L1276.7 682.599 L1276.14 682.599 L1275.58 682.599 L1275.02 682.599 L1274.46 682.599 L1273.91 682.599 L1273.35 682.599 L1272.79 682.599 L1272.23 682.599 L1271.67 682.599 L1271.11 682.599 L1270.55 682.599 L1269.99 682.599 L1269.43 682.599 L1268.87 682.599 L1268.31 682.599 L1267.75 682.599 L1267.19 682.599 L1266.63 682.599 L1266.08 682.599 L1265.52 682.599 L1264.96 682.599 L1264.4 682.599 L1263.84 682.599 L1263.28 682.599 L1262.72 682.599 L1262.16 682.599 L1261.6 682.599 L1261.04 682.599 L1260.48 682.599 L1259.92 682.599 L1259.36 682.599 L1258.81 682.599 L1258.25 682.599 L1257.69 682.599 L1257.13 682.599 L1256.57 682.599 L1256.01 682.599 L1255.45 682.599 L1254.89 682.599 L1254.33 682.599 L1253.77 682.599 L1253.21 682.599 L1252.65 682.599 L1252.09 682.599 L1251.54 682.599 L1250.98 682.599 L1250.42 682.599 L1249.86 682.599 L1249.3 682.599 L1248.74 682.599 L1248.18 682.599 L1247.62 682.599 L1247.06 682.599 L1246.5 682.599 L1245.94 682.599 L1245.38 682.599 L1244.82 682.599 L1244.26 682.599 L1243.71 682.599 L1243.15 682.599 L1242.59 682.599 L1242.03 682.599 L1241.47 682.599 L1240.91 682.599 L1240.35 682.599 L1239.79 682.599 L1239.23 682.599 L1238.67 682.599 L1238.11 682.599 L1237.55 682.599 L1236.99 682.599 L1236.44 682.599 L1235.88 682.599 L1235.32 682.599 L1234.76 682.599 L1234.2 682.599 L1233.64 682.599 L1233.08 682.599 L1232.52 682.599 L1231.96 682.599 L1231.4 682.599 L1230.84 682.599 L1230.28 682.599 L1229.72 682.599 L1229.17 682.599 L1228.61 682.599 L1228.05 682.599 L1227.49 682.599 L1226.93 682.599 L1226.37 682.599 L1225.81 682.599 L1225.25 682.599 L1224.69 682.599 L1224.13 682.599 L1223.57 682.599 L1223.01 682.599 L1222.45 682.599 L1221.89 682.599 L1221.34 682.599 L1220.78 682.599 L1220.22 682.599 L1219.66 682.599 L1219.1 682.599 L1218.54 682.599 L1217.98 682.599 L1217.42 682.599 L1216.86 682.599 L1216.3 682.599 L1215.74 682.599 L1215.18 682.599 L1214.62 682.599 L1214.07 682.599 L1213.51 682.599 L1212.95 682.599 L1212.39 682.599 L1211.83 682.599 L1211.27 682.599 L1210.71 682.599 L1210.15 682.599 L1209.59 682.599 L1209.03 682.599 L1208.47 682.599 L1207.91 682.599 L1207.35 682.599 L1206.8 682.599 L1206.24 682.599 L1205.68 682.599 L1205.12 682.599 L1204.56 682.599 L1204 682.599 L1203.44 682.599 L1202.88 682.599 L1202.32 682.599 L1201.76 682.599 L1201.2 682.599 L1200.64 682.599 L1200.08 682.599 L1199.52 682.599 L1198.97 682.599 L1198.41 682.599 L1197.85 682.599 L1197.29 682.599 L1196.73 682.599 L1196.17 682.599 L1195.61 682.599 L1195.05 682.599 L1194.49 682.599 L1193.93 682.599 L1193.37 682.599 L1192.81 682.599 L1192.25 682.599 L1191.7 682.599 L1191.14 682.599 L1190.58 682.599 L1190.02 682.599 L1189.46 682.599 L1188.9 682.599 L1188.34 682.599 L1187.78 682.599 L1187.22 682.599 L1186.66 682.599 L1186.1 682.599 L1185.54 682.599 L1184.98 682.599 L1184.43 682.599 L1183.87 682.599 L1183.31 682.599 L1182.75 682.599 L1182.19 682.599 L1181.63 682.599 L1181.07 682.599 L1180.51 682.599 L1179.95 682.599 L1179.39 682.599 L1178.83 682.599 L1178.27 682.599 L1177.71 682.599 L1177.15 682.599 L1176.6 682.599 L1176.04 682.599 L1175.48 682.599 L1174.92 682.599 L1174.36 682.599 L1173.8 682.599 L1173.24 682.599 L1172.68 682.599 L1172.12 682.599 L1171.56 682.599 L1171 682.599 L1170.44 682.599 L1169.88 682.599 L1169.33 682.599 L1168.77 682.599 L1168.21 682.599 L1167.65 682.599 L1167.09 682.599 L1166.53 682.599 L1165.97 682.599 L1165.41 682.599 L1164.85 682.599 L1164.29 682.599 L1163.73 682.599 L1163.17 682.599 L1162.61 682.599 L1162.05 682.599 L1161.5 682.599 L1160.94 682.599 L1160.38 682.599 L1159.82 682.599 L1159.26 682.599 L1158.7 682.599 L1158.14 682.599 L1157.58 682.599 L1157.02 682.599 L1156.46 682.599 L1155.9 682.599 L1155.34 682.599 L1154.78 682.599 L1154.23 682.599 L1153.67 682.599 L1153.11 682.599 L1152.55 682.599 L1151.99 682.599 L1151.43 682.599 L1150.87 682.599 L1150.31 682.599 L1149.75 682.599 L1149.19 682.599 L1148.63 682.599 L1148.07 682.599 L1147.51 682.599 L1146.96 682.599 L1146.4 682.599 L1145.84 682.599 L1145.28 682.599 L1144.72 682.599 L1144.16 682.599 L1143.6 682.599 L1143.04 682.599 L1142.48 682.599 L1141.92 682.599 L1141.36 682.599 L1140.8 682.599 L1140.24 682.599 L1139.68 682.599 L1139.13 682.599 L1138.57 682.599 L1138.01 682.599 L1137.45 682.599 L1136.89 682.599 L1136.33 682.599 L1135.77 682.599 L1135.21 682.599 L1134.65 682.599 L1134.09 682.599 L1133.53 682.599 L1132.97 682.599 L1132.41 682.599 L1131.86 682.599 L1131.3 682.599 L1130.74 682.599 L1130.18 682.599 L1129.62 682.599 L1129.06 682.599 L1128.5 682.599 L1127.94 682.599 L1127.38 682.599 L1126.82 682.599 L1126.26 682.599 L1125.7 682.599 L1125.14 682.599 L1124.59 682.599 L1124.03 682.599 L1123.47 682.599 L1122.91 682.599 L1122.35 682.599 L1121.79 682.599 L1121.23 682.599 L1120.67 682.599 L1120.11 682.599 L1119.55 682.599 L1118.99 682.599 L1118.43 682.599 L1117.87 682.599 L1117.31 682.599 L1116.76 682.599 L1116.2 682.599 L1115.64 682.599 L1115.08 682.599 L1114.52 682.599 L1113.96 682.599 L1113.4 682.599 L1112.84 682.599 L1112.28 682.599 L1111.72 682.599 L1111.16 682.599 L1110.6 682.599 L1110.04 682.599 L1109.49 682.599 L1108.93 682.599 L1108.37 682.599 L1107.81 682.599 L1107.25 682.599 L1106.69 682.599 L1106.13 682.599 L1105.57 682.599 L1105.01 682.599 L1104.45 682.599 L1103.89 682.599 L1103.33 682.599 L1102.77 682.599 L1102.22 682.599 L1101.66 682.599 L1101.1 682.599 L1100.54 682.599 L1099.98 682.599 L1099.42 682.599 L1098.86 682.599 L1098.3 682.599 L1097.74 682.599 L1097.18 682.599 L1096.62 682.599 L1096.06 682.599 L1095.5 682.599 L1094.94 682.599 L1094.39 682.599 L1093.83 682.599 L1093.27 682.599 L1092.71 682.599 L1092.15 682.599 L1091.59 682.599 L1091.03 682.599 L1090.47 682.599 L1089.91 682.599 L1089.35 682.599 L1088.79 682.599 L1088.23 682.599 L1087.67 682.599 L1087.12 682.599 L1086.56 682.599 L1086 682.599 L1085.44 682.599 L1084.88 682.599 L1084.32 682.599 L1083.76 682.599 L1083.2 682.599 L1082.64 682.599 L1082.08 682.599 L1081.52 682.599 L1080.96 682.599 L1080.4 682.599 L1079.85 682.599 L1079.29 682.599 L1078.73 682.599 L1078.17 682.599 L1077.61 682.599 L1077.05 682.599 L1076.49 682.599 L1075.93 682.599 L1075.37 682.599 L1074.81 682.599 L1074.25 682.599 L1073.69 682.599 L1073.13 682.599 L1072.57 682.599 L1072.02 682.599 L1071.46 682.599 L1070.9 682.599 L1070.34 682.599 L1069.78 682.599 L1069.22 682.599 L1068.66 682.599 L1068.1 682.599 L1067.54 682.599 L1066.98 682.599 L1066.42 682.599 L1065.86 682.599 L1065.3 682.599 L1064.75 682.599 L1064.19 682.599 L1063.63 682.599 L1063.07 682.599 L1062.51 682.599 L1061.95 682.599 L1061.39 682.599 L1060.83 682.599 L1060.27 682.599 L1059.71 682.599 L1059.15 682.599 L1058.59 682.599 L1058.03 682.599 L1057.48 682.599 L1056.92 682.599 L1056.36 682.599 L1055.8 682.599 L1055.24 682.599 L1054.68 682.599 L1054.12 682.599 L1053.56 682.599 L1053 682.599 L1052.44 682.599 L1051.88 682.599 L1051.32 682.599 L1050.76 682.599 L1050.2 682.599 L1049.65 682.599 L1049.09 682.599 L1048.53 682.599 L1047.97 682.599 L1047.41 682.599 L1046.85 682.599 L1046.29 682.599 L1045.73 682.599 L1045.17 682.599 L1044.61 682.599 L1044.05 682.599 L1043.49 682.599 L1042.93 682.599 L1042.38 682.599 L1041.82 682.599 L1041.26 682.599 L1040.7 682.599 L1040.14 682.599 L1039.58 682.599 L1039.02 682.599 L1038.46 682.599 L1037.9 682.599 L1037.34 682.599 L1036.78 682.599 L1036.22 682.599 L1035.66 682.599 L1035.1 682.599 L1034.55 682.599 L1033.99 682.599 L1033.43 682.599 L1032.87 682.599 L1032.31 682.599 L1031.75 682.599 L1031.19 682.599 L1030.63 682.599 L1030.07 682.599 L1029.51 682.599 L1028.95 682.599 L1028.39 682.599 L1027.83 682.599 L1027.28 682.599 L1026.72 682.599 L1026.16 682.599 L1025.6 682.599 L1025.04 682.599 L1024.48 682.599 L1023.92 682.599 L1023.36 682.599 L1022.8 682.599 L1022.24 682.599 L1021.68 682.599 L1021.12 682.599 L1020.56 682.599 L1020.01 682.599 L1019.45 682.599 L1018.89 682.599 L1018.33 682.599 L1017.77 682.599 L1017.21 682.599 L1016.65 682.599 L1016.09 682.599 L1015.53 682.599 L1014.97 682.599 L1014.41 682.599 L1013.85 682.599 L1013.29 682.599 L1012.73 682.599 L1012.18 682.599 L1011.62 682.599 L1011.06 682.599 L1010.5 682.599 L1009.94 682.599 L1009.38 682.599 L1008.82 682.599 L1008.26 682.599 L1007.7 682.599 L1007.14 682.599 L1006.58 682.599 L1006.02 682.599 L1005.46 682.599 L1004.91 682.599 L1004.35 682.599 L1003.79 682.599 L1003.23 682.599 L1002.67 682.599 L1002.11 682.599 L1001.55 682.599 L1000.99 682.599 L1000.43 682.599 L999.872 682.599 L999.313 682.599 L998.754 682.599 L998.194 682.599 L997.635 682.599 L997.076 682.599 L996.517 682.599 L995.957 682.599 L995.398 682.599 L994.839 682.599 L994.28 682.599 L993.72 682.599 L993.161 682.599 L992.602 682.599 L992.043 682.599 L991.483 682.599 L990.924 682.599 L990.365 682.599 L989.806 682.599 L989.246 682.599 L988.687 682.599 L988.128 682.599 L987.569 682.599 L987.009 682.599 L986.45 682.599 L985.891 682.599 L985.332 682.599 L984.772 682.599 L984.213 682.599 L983.654 682.599 L983.095 682.599 L982.535 682.599 L981.976 682.599 L981.417 682.599 L980.858 682.599 L980.298 682.599 L979.739 682.599 L979.18 682.599 L978.621 682.599 L978.061 682.599 L977.502 682.599 L976.943 682.599 L976.384 682.599 L975.824 682.599 L975.265 682.599 L974.706 682.599 L974.147 682.599 L973.587 682.599 L973.028 682.599 L972.469 682.599 L971.91 682.599 L971.35 682.599 L970.791 682.599 L970.232 682.599 L969.673 682.599 L969.113 682.599 L968.554 682.599 L967.995 682.599 L967.436 682.599 L966.876 682.599 L966.317 682.599 L965.758 682.599 L965.199 682.599 L964.639 682.599 L964.08 682.599 L963.521 682.599 L962.962 682.599 L962.402 682.599 L961.843 682.599 L961.284 682.599 L960.725 682.599 L960.165 682.599 L959.606 682.599 L959.047 682.599 L958.488 682.599 L957.928 682.599 L957.369 682.599 L956.81 682.599 L956.251 682.599 L955.691 682.599 L955.132 682.599 L954.573 682.599 L954.014 682.599 L953.454 682.599 L952.895 682.599 L952.336 682.599 L951.777 682.599 L951.217 682.599 L950.658 682.599 L950.099 682.599 L949.54 682.599 L948.98 682.599 L948.421 682.599 L947.862 682.599 L947.303 682.599 L946.743 682.599 L946.184 682.599 L945.625 682.599 L945.066 682.599 L944.506 682.599 L943.947 682.599 L943.388 682.599 L942.829 682.599 L942.269 682.599 L941.71 682.599 L941.151 682.599 L940.592 682.599 L940.032 682.599 L939.473 682.599 L938.914 682.599 L938.355 682.599 L937.795 682.599 L937.236 682.599 L936.677 682.599 L936.118 682.599 L935.558 682.599 L934.999 682.599 L934.44 682.599 L933.881 682.599 L933.321 682.599 L932.762 682.599 L932.203 682.599 L931.644 682.599 L931.084 682.599 L930.525 682.599 L929.966 682.599 L929.406 682.599 L928.847 682.599 L928.288 682.599 L927.729 682.599 L927.169 682.599 L926.61 682.599 L926.051 682.599 L925.492 682.599 L924.932 682.599 L924.373 682.599 L923.814 682.599 L923.255 682.599 L922.695 682.599 L922.136 682.599 L921.577 682.599 L921.018 682.599 L920.458 682.599 L919.899 682.599 L919.34 682.599 L918.781 682.599 L918.221 682.599 L917.662 682.599 L917.103 682.599 L916.544 682.599 L915.984 682.599 L915.425 682.599 L914.866 682.599 L914.307 682.599 L913.747 682.599 L913.188 682.599 L912.629 682.599 L912.07 682.599 L911.51 682.599 L910.951 682.599 L910.392 682.599 L909.833 682.599 L909.273 682.599 L908.714 682.599 L908.155 682.599 L907.596 682.599 L907.036 682.599 L906.477 682.599 L905.918 682.599 L905.359 682.599 L904.799 682.599 L904.24 682.599 L903.681 682.599 L903.122 682.599 L902.562 682.599 L902.003 682.599 L901.444 682.599 L900.885 682.599 L900.325 682.599 L899.766 682.599 L899.207 682.599 L898.648 682.599 L898.088 682.599 L897.529 682.599 L896.97 682.599 L896.411 682.599 L895.851 682.599 L895.292 682.599 L894.733 682.599 L894.174 682.599 L893.614 682.599 L893.055 682.599 L892.496 682.599 L891.937 682.599 L891.377 682.599 L890.818 682.599 L890.259 682.599 L889.7 682.599 L889.14 682.599 L888.581 682.599 L888.022 682.599 L887.463 682.599 L886.903 682.599 L886.344 682.599 L885.785 682.599 L885.226 682.599 L884.666 682.599 L884.107 682.599 L883.548 682.599 L882.989 682.599 L882.429 682.599 L881.87 682.599 L881.311 682.599 L880.752 682.599 L880.192 682.599 L879.633 682.599 L879.074 682.599 L878.515 682.599 L877.955 682.599 L877.396 682.599 L876.837 682.599 L876.278 682.599 L875.718 682.599 L875.159 682.599 L874.6 682.599 L874.041 682.599 L873.481 682.599 L872.922 682.599 L872.363 682.599 L871.804 682.599 L871.244 682.599 L870.685 682.599 L870.126 682.599 L869.567 682.599 L869.007 682.599 L868.448 682.599 L867.889 682.599 L867.33 682.599 L866.77 682.599 L866.211 682.599 L865.652 682.599 L865.093 682.599 L864.533 682.599 L863.974 682.599 L863.415 682.599 L862.856 682.599 L862.296 682.599 L861.737 682.599 L861.178 682.599 L860.619 682.599 L860.059 682.599 L859.5 682.599 L858.941 682.599 L858.382 682.599 L857.822 682.599 L857.263 682.599 L856.704 682.599 L856.145 682.599 L855.585 682.599 L855.026 682.599 L854.467 682.599 L853.908 682.599 L853.348 682.599 L852.789 682.599 L852.23 682.599 L851.671 682.599 L851.111 682.599 L850.552 682.599 L849.993 682.599 L849.434 682.599 L848.874 682.599 L848.315 682.599 L847.756 682.599 L847.197 682.599 L846.637 682.599 L846.078 682.599 L845.519 682.599 L844.96 682.599 L844.4 682.599 L843.841 682.599 L843.282 682.599 L842.723 682.599 L842.163 682.599 L841.604 682.599 L841.045 682.599 L840.486 682.599 L839.926 682.599 L839.367 682.599 L838.808 682.599 L838.249 682.599 L837.689 682.599 L837.13 682.599 L836.571 682.599 L836.012 682.599 L835.452 682.599 L834.893 682.599 L834.334 682.599 L833.775 682.599 L833.215 682.599 L832.656 682.599 L832.097 682.599 L831.538 682.599 L830.978 682.599 L830.419 682.599 L829.86 682.599 L829.301 682.599 L828.741 682.599 L828.182 682.599 L827.623 682.599 L827.064 682.599 L826.504 682.599 L825.945 682.599 L825.386 682.599 L824.827 682.599 L824.267 682.599 L823.708 682.599 L823.149 682.599 L822.59 682.599 L822.03 682.599 L821.471 682.599 L820.912 682.599 L820.353 682.599 L819.793 682.599 L819.234 682.599 L818.675 682.599 L818.116 682.599 L817.556 682.599 L816.997 682.599 L816.438 682.599 L815.879 682.599 L815.319 682.599 L814.76 682.599 L814.201 682.599 L813.642 682.599 L813.082 682.599 L812.523 682.599 L811.964 682.599 L811.405 682.599 L810.845 682.599 L810.286 682.599 L809.727 682.599 L809.168 682.599 L808.608 682.599 L808.049 682.599 L807.49 682.599 L806.931 682.599 L806.371 682.599 L805.812 682.599 L805.253 682.599 L804.693 682.599 L804.134 682.599 L803.575 682.599 L803.016 682.599 L802.456 682.599 L801.897 682.599 L801.338 682.599 L800.779 682.599 L800.219 682.599 L799.66 682.599 L799.101 682.599 L798.542 682.599 L797.982 682.599 L797.423 682.599 L796.864 682.599 L796.305 682.599 L795.745 682.599 L795.186 682.599 L794.627 682.599 L794.068 682.599 L793.508 682.599 L792.949 682.599 L792.39 682.599 L791.831 682.599 L791.271 682.599 L790.712 682.599 L790.153 682.599 L789.594 682.599 L789.034 682.599 L788.475 682.599 L787.916 682.599 L787.357 682.599 L786.797 682.599 L786.238 682.599 L785.679 682.599 L785.12 682.599 L784.56 682.599 L784.001 682.599 L783.442 682.599 L782.883 682.599 L782.323 682.599 L781.764 682.599 L781.205 682.599 L780.646 682.599 L780.086 682.599 L779.527 682.599 L778.968 682.599 L778.409 682.599 L777.849 682.599 L777.29 682.599 L776.731 682.599 L776.172 682.599 L775.612 682.599 L775.053 682.599 L774.494 682.599 L773.935 682.599 L773.375 682.599 L772.816 682.599 L772.257 682.599 L771.698 682.599 L771.138 682.599 L770.579 682.599 L770.02 682.599 L769.461 682.599 L768.901 682.599 L768.342 682.599 L767.783 682.599 L767.224 682.599 L766.664 682.599 L766.105 682.599 L765.546 682.599 L764.987 682.599 L764.427 682.599 L763.868 682.599 L763.309 682.599 L762.75 682.599 L762.19 682.599 L761.631 682.599 L761.072 682.599 L760.513 682.599 L759.953 682.599 L759.394 682.599 L758.835 682.599 L758.276 682.599 L757.716 682.599 L757.157 682.599 L756.598 682.599 L756.039 682.599 L755.479 682.599 L754.92 682.599 L754.361 682.599 L753.802 682.599 L753.242 682.599 L752.683 682.599 L752.124 682.599 L751.565 682.599 L751.005 682.599 L750.446 682.599 L749.887 682.599 L749.328 682.599 L748.768 682.599 L748.209 682.599 L747.65 682.599 L747.091 682.599 L746.531 682.599 L745.972 682.599 L745.413 682.599 L744.854 682.599 L744.294 682.599 L743.735 682.599 L743.176 682.599 L742.617 682.599 L742.057 682.599 L741.498 682.599 L740.939 682.599 L740.38 682.599 L739.82 682.599 L739.261 682.599 L738.702 682.599 L738.143 682.599 L737.583 682.599 L737.024 682.599 L736.465 682.599 L735.906 682.599 L735.346 682.599 L734.787 682.599 L734.228 682.599 L733.669 682.599 L733.109 682.599 L732.55 682.599 L731.991 682.599 L731.432 682.599 L730.872 682.599 L730.313 682.599 L729.754 682.599 L729.195 682.599 L728.635 682.599 L728.076 682.599 L727.517 682.599 L726.958 682.599 L726.398 682.599 L725.839 682.599 L725.28 682.599 L724.721 682.599 L724.161 682.599 L723.602 682.599 L723.043 682.599 L722.484 682.599 L721.924 682.599 L721.365 682.599 L720.806 682.599 L720.247 682.599  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip513)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,683.804 720.806,683.804 721.365,683.804 721.924,683.804 722.484,683.804 723.043,683.804 723.602,683.804 724.161,683.804 724.721,683.804 725.28,683.804 725.839,683.804 726.398,683.804 726.958,683.804 727.517,683.804 728.076,683.804 728.635,683.804 729.195,683.804 729.754,683.804 730.313,683.804 730.872,683.804 731.432,683.804 731.991,683.804 732.55,683.804 733.109,683.804 733.669,683.804 734.228,683.804 734.787,683.804 735.346,683.804 735.906,683.804 736.465,683.804 737.024,683.804 737.583,683.804 738.143,683.804 738.702,683.804 739.261,683.804 739.82,683.804 740.38,683.804 740.939,683.804 741.498,683.804 742.057,683.804 742.617,683.804 743.176,683.804 743.735,683.804 744.294,683.804 744.854,683.804 745.413,683.804 745.972,683.804 746.531,683.804 747.091,683.804 747.65,683.804 748.209,683.804 748.768,683.804 749.328,683.804 749.887,683.804 750.446,683.804 751.005,683.804 751.565,683.804 752.124,683.804 752.683,683.804 753.242,683.804 753.802,683.804 754.361,683.804 754.92,683.804 755.479,683.804 756.039,683.804 756.598,683.804 757.157,683.804 757.716,683.804 758.276,683.804 758.835,683.804 759.394,683.804 759.953,683.804 760.513,683.804 761.072,683.804 761.631,683.804 762.19,683.804 762.75,683.804 763.309,683.804 763.868,683.804 764.427,683.804 764.987,683.804 765.546,683.804 766.105,683.804 766.664,683.804 767.224,683.804 767.783,683.804 768.342,683.804 768.901,683.804 769.461,683.804 770.02,683.804 770.579,683.804 771.138,683.804 771.698,683.804 772.257,683.804 772.816,683.804 773.375,683.804 773.935,683.804 774.494,683.804 775.053,683.804 775.612,683.804 776.172,683.804 776.731,683.804 777.29,683.804 777.849,683.804 778.409,683.804 778.968,683.804 779.527,683.804 780.086,683.804 780.646,683.804 781.205,683.804 781.764,683.804 782.323,683.804 782.883,683.804 783.442,683.804 784.001,683.804 784.56,683.804 785.12,683.804 785.679,683.804 786.238,683.804 786.797,683.804 787.357,683.804 787.916,683.804 788.475,683.804 789.034,683.804 789.594,683.804 790.153,683.804 790.712,683.804 791.271,683.804 791.831,683.804 792.39,683.804 792.949,683.804 793.508,683.804 794.068,683.804 794.627,683.804 795.186,683.804 795.745,683.804 796.305,683.804 796.864,683.804 797.423,683.804 797.982,683.804 798.542,683.804 799.101,683.804 799.66,683.804 800.219,683.804 800.779,683.804 801.338,683.804 801.897,683.804 802.456,683.804 803.016,683.804 803.575,683.804 804.134,683.804 804.693,683.804 805.253,683.804 805.812,683.804 806.371,683.804 806.931,683.804 807.49,683.804 808.049,683.804 808.608,683.804 809.168,683.804 809.727,683.804 810.286,683.804 810.845,683.804 811.405,683.804 811.964,683.804 812.523,683.804 813.082,683.804 813.642,683.804 814.201,683.804 814.76,683.804 815.319,683.804 815.879,683.804 816.438,683.804 816.997,683.804 817.556,683.804 818.116,683.804 818.675,683.804 819.234,683.804 819.793,683.804 820.353,683.804 820.912,683.804 821.471,683.804 822.03,683.804 822.59,683.804 823.149,683.804 823.708,683.804 824.267,683.804 824.827,683.804 825.386,683.804 825.945,683.804 826.504,683.804 827.064,683.804 827.623,683.804 828.182,683.804 828.741,683.804 829.301,683.804 829.86,683.804 830.419,683.804 830.978,683.804 831.538,683.804 832.097,683.804 832.656,683.804 833.215,683.804 833.775,683.804 834.334,683.804 834.893,683.804 835.452,683.804 836.012,683.804 836.571,683.804 837.13,683.804 837.689,683.804 838.249,683.804 838.808,683.804 839.367,683.804 839.926,683.804 840.486,683.804 841.045,683.804 841.604,683.804 842.163,683.804 842.723,683.804 843.282,683.804 843.841,683.804 844.4,683.804 844.96,683.804 845.519,683.804 846.078,683.804 846.637,683.804 847.197,683.804 847.756,683.804 848.315,683.804 848.874,683.804 849.434,683.804 849.993,683.804 850.552,683.804 851.111,683.804 851.671,683.804 852.23,683.804 852.789,683.804 853.348,683.804 853.908,683.804 854.467,683.804 855.026,683.804 855.585,683.804 856.145,683.804 856.704,683.804 857.263,683.804 857.822,683.804 858.382,683.804 858.941,683.804 859.5,683.804 860.059,683.804 860.619,683.804 861.178,683.804 861.737,683.804 862.296,683.804 862.856,683.804 863.415,683.804 863.974,683.804 864.533,683.804 865.093,683.804 865.652,683.804 866.211,683.804 866.77,683.804 867.33,683.804 867.889,683.804 868.448,683.804 869.007,683.804 869.567,683.804 870.126,683.804 870.685,683.804 871.244,683.804 871.804,683.804 872.363,683.804 872.922,683.804 873.481,683.804 874.041,683.804 874.6,683.804 875.159,683.804 875.718,683.804 876.278,683.804 876.837,683.804 877.396,683.804 877.955,683.804 878.515,683.804 879.074,683.804 879.633,683.804 880.192,683.804 880.752,683.804 881.311,683.804 881.87,683.804 882.429,683.804 882.989,683.804 883.548,683.804 884.107,683.804 884.666,683.804 885.226,683.804 885.785,683.804 886.344,683.804 886.903,683.804 887.463,683.804 888.022,683.804 888.581,683.804 889.14,683.804 889.7,683.804 890.259,683.804 890.818,683.804 891.377,683.804 891.937,683.804 892.496,683.804 893.055,683.804 893.614,683.804 894.174,683.804 894.733,683.804 895.292,683.804 895.851,683.804 896.411,683.804 896.97,683.804 897.529,683.804 898.088,683.804 898.648,683.804 899.207,683.804 899.766,683.804 900.325,683.804 900.885,683.804 901.444,683.804 902.003,683.804 902.562,683.804 903.122,683.804 903.681,683.804 904.24,683.804 904.799,683.804 905.359,683.804 905.918,683.804 906.477,683.804 907.036,683.804 907.596,683.804 908.155,683.804 908.714,683.804 909.273,683.804 909.833,683.804 910.392,683.804 910.951,683.804 911.51,683.804 912.07,683.804 912.629,683.804 913.188,683.804 913.747,683.804 914.307,683.804 914.866,683.804 915.425,683.804 915.984,683.804 916.544,683.804 917.103,683.804 917.662,683.804 918.221,683.804 918.781,683.804 919.34,683.804 919.899,683.804 920.458,683.804 921.018,683.804 921.577,683.804 922.136,683.804 922.695,683.804 923.255,683.804 923.814,683.804 924.373,683.804 924.932,683.804 925.492,683.804 926.051,683.804 926.61,683.804 927.169,683.804 927.729,683.804 928.288,683.804 928.847,683.804 929.406,683.804 929.966,683.804 930.525,683.804 931.084,683.804 931.644,683.804 932.203,683.804 932.762,683.804 933.321,683.804 933.881,683.804 934.44,683.804 934.999,683.804 935.558,683.804 936.118,683.804 936.677,683.804 937.236,683.804 937.795,683.804 938.355,683.804 938.914,683.804 939.473,683.804 940.032,683.804 940.592,683.804 941.151,683.804 941.71,683.804 942.269,683.804 942.829,683.804 943.388,683.804 943.947,683.804 944.506,683.804 945.066,683.804 945.625,683.804 946.184,683.804 946.743,683.804 947.303,683.804 947.862,683.804 948.421,683.804 948.98,683.804 949.54,683.804 950.099,683.804 950.658,683.804 951.217,683.804 951.777,683.804 952.336,683.804 952.895,683.804 953.454,683.804 954.014,683.804 954.573,683.804 955.132,683.804 955.691,683.804 956.251,683.804 956.81,683.804 957.369,683.804 957.928,683.804 958.488,683.804 959.047,683.804 959.606,683.804 960.165,683.804 960.725,683.804 961.284,683.804 961.843,683.804 962.402,683.804 962.962,683.804 963.521,683.804 964.08,683.804 964.639,683.804 965.199,683.804 965.758,683.804 966.317,683.804 966.876,683.804 967.436,683.804 967.995,683.804 968.554,683.804 969.113,683.804 969.673,683.804 970.232,683.804 970.791,683.804 971.35,683.804 971.91,683.804 972.469,683.804 973.028,683.804 973.587,683.804 974.147,683.804 974.706,683.804 975.265,683.804 975.824,683.804 976.384,683.804 976.943,683.804 977.502,683.804 978.061,683.804 978.621,683.804 979.18,683.804 979.739,683.804 980.298,683.804 980.858,683.804 981.417,683.804 981.976,683.804 982.535,683.804 983.095,683.804 983.654,683.804 984.213,683.804 984.772,683.804 985.332,683.804 985.891,683.804 986.45,683.804 987.009,683.804 987.569,683.804 988.128,683.804 988.687,683.804 989.246,683.804 989.806,683.804 990.365,683.804 990.924,683.804 991.483,683.804 992.043,683.804 992.602,683.804 993.161,683.804 993.72,683.804 994.28,683.804 994.839,683.804 995.398,683.804 995.957,683.804 996.517,683.804 997.076,683.804 997.635,683.804 998.194,683.804 998.754,683.804 999.313,683.804 999.872,683.804 1000.43,683.804 1000.99,683.804 1001.55,683.804 1002.11,683.804 1002.67,683.804 1003.23,683.804 1003.79,683.804 1004.35,683.804 1004.91,683.804 1005.46,683.804 1006.02,683.804 1006.58,683.804 1007.14,683.804 1007.7,683.804 1008.26,683.804 1008.82,683.804 1009.38,683.804 1009.94,683.804 1010.5,683.804 1011.06,683.804 1011.62,683.804 1012.18,683.804 1012.73,683.804 1013.29,683.804 1013.85,683.804 1014.41,683.804 1014.97,683.804 1015.53,683.804 1016.09,683.804 1016.65,683.804 1017.21,683.804 1017.77,683.804 1018.33,683.804 1018.89,683.804 1019.45,683.804 1020.01,683.804 1020.56,683.804 1021.12,683.804 1021.68,683.804 1022.24,683.804 1022.8,683.804 1023.36,683.804 1023.92,683.804 1024.48,683.804 1025.04,683.804 1025.6,683.804 1026.16,683.804 1026.72,683.804 1027.28,683.804 1027.83,683.804 1028.39,683.804 1028.95,683.804 1029.51,683.804 1030.07,683.804 1030.63,683.804 1031.19,683.804 1031.75,683.804 1032.31,683.804 1032.87,683.804 1033.43,683.804 1033.99,683.804 1034.55,683.804 1035.1,683.804 1035.66,683.804 1036.22,683.804 1036.78,683.804 1037.34,683.804 1037.9,683.804 1038.46,683.804 1039.02,683.804 1039.58,683.804 1040.14,683.804 1040.7,683.804 1041.26,683.804 1041.82,683.804 1042.38,683.804 1042.93,683.804 1043.49,683.804 1044.05,683.804 1044.61,683.804 1045.17,683.804 1045.73,683.804 1046.29,683.804 1046.85,683.804 1047.41,683.804 1047.97,683.804 1048.53,683.804 1049.09,683.804 1049.65,683.804 1050.2,683.804 1050.76,683.804 1051.32,683.804 1051.88,683.804 1052.44,683.804 1053,683.804 1053.56,683.804 1054.12,683.804 1054.68,683.804 1055.24,683.804 1055.8,683.804 1056.36,683.804 1056.92,683.804 1057.48,683.804 1058.03,683.804 1058.59,683.804 1059.15,683.804 1059.71,683.804 1060.27,683.804 1060.83,683.804 1061.39,683.804 1061.95,683.804 1062.51,683.804 1063.07,683.804 1063.63,683.804 1064.19,683.804 1064.75,683.804 1065.3,683.804 1065.86,683.804 1066.42,683.804 1066.98,683.804 1067.54,683.804 1068.1,683.804 1068.66,683.804 1069.22,683.804 1069.78,683.804 1070.34,683.804 1070.9,683.804 1071.46,683.804 1072.02,683.804 1072.57,683.804 1073.13,683.804 1073.69,683.804 1074.25,683.804 1074.81,683.804 1075.37,683.804 1075.93,683.804 1076.49,683.804 1077.05,683.804 1077.61,683.804 1078.17,683.804 1078.73,683.804 1079.29,683.804 1079.85,683.804 1080.4,683.804 1080.96,683.804 1081.52,683.804 1082.08,683.804 1082.64,683.804 1083.2,683.804 1083.76,683.804 1084.32,683.804 1084.88,683.804 1085.44,683.804 1086,683.804 1086.56,683.804 1087.12,683.804 1087.67,683.804 1088.23,683.804 1088.79,683.804 1089.35,683.804 1089.91,683.804 1090.47,683.804 1091.03,683.804 1091.59,683.804 1092.15,683.804 1092.71,683.804 1093.27,683.804 1093.83,683.804 1094.39,683.804 1094.94,683.804 1095.5,683.804 1096.06,683.804 1096.62,683.804 1097.18,683.804 1097.74,683.804 1098.3,683.804 1098.86,683.804 1099.42,683.804 1099.98,683.804 1100.54,683.804 1101.1,683.804 1101.66,683.804 1102.22,683.804 1102.77,683.804 1103.33,683.804 1103.89,683.804 1104.45,683.804 1105.01,683.804 1105.57,683.804 1106.13,683.804 1106.69,683.804 1107.25,683.804 1107.81,683.804 1108.37,683.804 1108.93,683.804 1109.49,683.804 1110.04,683.804 1110.6,683.804 1111.16,683.804 1111.72,683.804 1112.28,683.804 1112.84,683.804 1113.4,683.804 1113.96,683.804 1114.52,683.804 1115.08,683.804 1115.64,683.804 1116.2,683.804 1116.76,683.804 1117.31,683.804 1117.87,683.804 1118.43,683.804 1118.99,683.804 1119.55,683.804 1120.11,683.804 1120.67,683.804 1121.23,683.804 1121.79,683.804 1122.35,683.804 1122.91,683.804 1123.47,683.804 1124.03,683.804 1124.59,683.804 1125.14,683.804 1125.7,683.804 1126.26,683.804 1126.82,683.804 1127.38,683.804 1127.94,683.804 1128.5,683.804 1129.06,683.804 1129.62,683.804 1130.18,683.804 1130.74,683.804 1131.3,683.804 1131.86,683.804 1132.41,683.804 1132.97,683.804 1133.53,683.804 1134.09,683.804 1134.65,683.804 1135.21,683.804 1135.77,683.804 1136.33,683.804 1136.89,683.804 1137.45,683.804 1138.01,683.804 1138.57,683.804 1139.13,683.804 1139.68,683.804 1140.24,683.804 1140.8,683.804 1141.36,683.804 1141.92,683.804 1142.48,683.804 1143.04,683.804 1143.6,683.804 1144.16,683.804 1144.72,683.804 1145.28,683.804 1145.84,683.804 1146.4,683.804 1146.96,683.804 1147.51,683.804 1148.07,683.804 1148.63,683.804 1149.19,683.804 1149.75,683.804 1150.31,683.804 1150.87,683.804 1151.43,683.804 1151.99,683.804 1152.55,683.804 1153.11,683.804 1153.67,683.804 1154.23,683.804 1154.78,683.804 1155.34,683.804 1155.9,683.804 1156.46,683.804 1157.02,683.804 1157.58,683.804 1158.14,683.804 1158.7,683.804 1159.26,683.804 1159.82,683.804 1160.38,683.804 1160.94,683.804 1161.5,683.804 1162.05,683.804 1162.61,683.804 1163.17,683.804 1163.73,683.804 1164.29,683.804 1164.85,683.804 1165.41,683.804 1165.97,683.804 1166.53,683.804 1167.09,683.804 1167.65,683.804 1168.21,683.804 1168.77,683.804 1169.33,683.804 1169.88,683.804 1170.44,683.804 1171,683.804 1171.56,683.804 1172.12,683.804 1172.68,683.804 1173.24,683.804 1173.8,683.804 1174.36,683.804 1174.92,683.804 1175.48,683.804 1176.04,683.804 1176.6,683.804 1177.15,683.804 1177.71,683.804 1178.27,683.804 1178.83,683.804 1179.39,683.804 1179.95,683.804 1180.51,683.804 1181.07,683.804 1181.63,683.804 1182.19,683.804 1182.75,683.804 1183.31,683.804 1183.87,683.804 1184.43,683.804 1184.98,683.804 1185.54,683.804 1186.1,683.804 1186.66,683.804 1187.22,683.804 1187.78,683.804 1188.34,683.804 1188.9,683.804 1189.46,683.804 1190.02,683.804 1190.58,683.804 1191.14,683.804 1191.7,683.804 1192.25,683.804 1192.81,683.804 1193.37,683.804 1193.93,683.804 1194.49,683.804 1195.05,683.804 1195.61,683.804 1196.17,683.804 1196.73,683.804 1197.29,683.804 1197.85,683.804 1198.41,683.804 1198.97,683.804 1199.52,683.804 1200.08,683.804 1200.64,683.804 1201.2,683.804 1201.76,683.804 1202.32,683.804 1202.88,683.804 1203.44,683.804 1204,683.804 1204.56,683.804 1205.12,683.804 1205.68,683.804 1206.24,683.804 1206.8,683.804 1207.35,683.804 1207.91,683.804 1208.47,683.804 1209.03,683.804 1209.59,683.804 1210.15,683.804 1210.71,683.804 1211.27,683.804 1211.83,683.804 1212.39,683.804 1212.95,683.804 1213.51,683.804 1214.07,683.804 1214.62,683.804 1215.18,683.804 1215.74,683.804 1216.3,683.804 1216.86,683.804 1217.42,683.804 1217.98,683.804 1218.54,683.804 1219.1,683.804 1219.66,683.804 1220.22,683.804 1220.78,683.804 1221.34,683.804 1221.89,683.804 1222.45,683.804 1223.01,683.804 1223.57,683.804 1224.13,683.804 1224.69,683.804 1225.25,683.804 1225.81,683.804 1226.37,683.804 1226.93,683.804 1227.49,683.804 1228.05,683.804 1228.61,683.804 1229.17,683.804 1229.72,683.804 1230.28,683.804 1230.84,683.804 1231.4,683.804 1231.96,683.804 1232.52,683.804 1233.08,683.804 1233.64,683.804 1234.2,683.804 1234.76,683.804 1235.32,683.804 1235.88,683.804 1236.44,683.804 1236.99,683.804 1237.55,683.804 1238.11,683.804 1238.67,683.804 1239.23,683.804 1239.79,683.804 1240.35,683.804 1240.91,683.804 1241.47,683.804 1242.03,683.804 1242.59,683.804 1243.15,683.804 1243.71,683.804 1244.26,683.804 1244.82,683.804 1245.38,683.804 1245.94,683.804 1246.5,683.804 1247.06,683.804 1247.62,683.804 1248.18,683.804 1248.74,683.804 1249.3,683.804 1249.86,683.804 1250.42,683.804 1250.98,683.804 1251.54,683.804 1252.09,683.804 1252.65,683.804 1253.21,683.804 1253.77,683.804 1254.33,683.804 1254.89,683.804 1255.45,683.804 1256.01,683.804 1256.57,683.804 1257.13,683.804 1257.69,683.804 1258.25,683.804 1258.81,683.804 1259.36,683.804 1259.92,683.804 1260.48,683.804 1261.04,683.804 1261.6,683.804 1262.16,683.804 1262.72,683.804 1263.28,683.804 1263.84,683.804 1264.4,683.804 1264.96,683.804 1265.52,683.804 1266.08,683.804 1266.63,683.804 1267.19,683.804 1267.75,683.804 1268.31,683.804 1268.87,683.804 1269.43,683.804 1269.99,683.804 1270.55,683.804 1271.11,683.804 1271.67,683.804 1272.23,683.804 1272.79,683.804 1273.35,683.804 1273.91,683.804 1274.46,683.804 1275.02,683.804 1275.58,683.804 1276.14,683.804 1276.7,683.804 1277.26,683.804 1277.82,683.804 1278.38,683.804 1278.94,683.804 1279.5,683.804 1280.06,683.804 1280.62,683.804 1281.18,683.804 1281.73,683.804 1282.29,683.804 1282.85,683.804 1283.41,683.804 1283.97,683.804 1284.53,683.804 1285.09,683.804 1285.65,683.804 1286.21,683.804 1286.77,683.804 1287.33,683.804 1287.89,683.804 1288.45,683.804 1289,683.804 1289.56,683.804 1290.12,683.804 1290.68,683.804 1291.24,683.804 1291.8,683.804 1292.36,683.804 1292.92,683.804 1293.48,683.804 1294.04,683.804 1294.6,683.804 1295.16,683.804 1295.72,683.804 1296.28,683.804 1296.83,683.804 1297.39,683.804 1297.95,683.804 1298.51,683.804 1299.07,683.804 1299.63,683.804 1300.19,683.804 1300.75,683.804 1301.31,683.804 1301.87,683.804 1302.43,683.804 1302.99,683.804 1303.55,683.804 1304.1,683.804 1304.66,683.804 1305.22,683.804 1305.78,683.804 1306.34,683.804 1306.9,683.804 1307.46,683.804 1308.02,683.804 1308.58,683.804 1309.14,683.804 1309.7,683.804 1310.26,683.804 1310.82,683.804 1311.38,683.804 1311.93,683.804 1312.49,683.804 1313.05,683.804 1313.61,683.804 1314.17,683.804 1314.73,683.804 1315.29,683.804 1315.85,683.804 1316.41,683.804 1316.97,683.804 1317.53,683.804 1318.09,683.804 1318.65,683.804 1319.2,683.804 1319.76,683.804 1320.32,683.804 1320.88,683.804 1321.44,683.804 1322,683.804 1322.56,683.804 1323.12,683.804 1323.68,683.804 1324.24,683.804 1324.8,683.804 1325.36,683.804 1325.92,683.804 1326.47,683.804 1327.03,683.804 1327.59,683.804 1328.15,683.804 1328.71,683.804 1329.27,683.804 1329.83,683.804 1330.39,683.804 1330.95,683.804 1331.51,683.804 1332.07,683.804 1332.63,683.804 1333.19,683.804 1333.75,683.804 1334.3,683.804 1334.86,683.804 1335.42,683.804 1335.98,683.804 1336.54,683.804 1337.1,683.804 1337.66,683.804 1338.22,683.804 1338.78,683.804 1339.34,683.804 1339.9,683.804 1340.46,683.804 1341.02,683.804 1341.57,683.804 1342.13,683.804 1342.69,683.804 1343.25,683.804 1343.81,683.804 1344.37,683.804 1344.93,683.804 1345.49,683.804 1346.05,683.804 1346.61,683.804 1347.17,683.804 1347.73,683.804 1348.29,683.804 1348.84,683.804 1349.4,683.804 1349.96,683.804 1350.52,683.804 1351.08,683.804 1351.64,683.804 1352.2,683.804 1352.76,683.804 1353.32,683.804 1353.88,683.804 1354.44,683.804 1355,683.804 1355.56,683.804 1356.12,683.804 1356.67,683.804 1357.23,683.804 1357.79,683.804 1358.35,683.804 1358.91,683.804 1359.47,683.804 1360.03,683.804 1360.59,683.804 1361.15,683.804 1361.71,683.804 1362.27,683.804 1362.83,683.804 1363.39,683.804 1363.94,683.804 1364.5,683.804 1365.06,683.804 1365.62,683.804 1366.18,683.804 1366.74,683.804 1367.3,683.804 1367.86,683.804 1368.42,683.804 1368.98,683.804 1369.54,683.804 1370.1,683.804 1370.66,683.804 1371.21,683.804 1371.77,683.804 1372.33,683.804 1372.89,683.804 1373.45,683.804 1374.01,683.804 1374.57,683.804 1375.13,683.804 1375.69,683.804 1376.25,683.804 1376.81,683.804 1377.37,683.804 1377.93,683.804 1378.49,683.804 1379.04,683.804 1379.6,683.804 1380.16,683.804 1380.72,683.804 1381.28,683.804 1381.84,683.804 1382.4,683.804 1382.96,683.804 1383.52,683.804 1384.08,683.804 1384.64,683.804 1385.2,683.804 1385.76,683.804 1386.31,683.804 1386.87,683.804 1387.43,683.804 1387.99,683.804 1388.55,683.804 1389.11,683.804 1389.67,683.804 1390.23,683.804 1390.79,683.804 1391.35,683.804 1391.91,683.804 1392.47,683.804 1393.03,683.804 1393.58,683.804 1394.14,683.804 1394.7,683.804 1395.26,683.804 1395.82,683.804 1396.38,683.804 1396.94,683.804 1397.5,683.804 1398.06,683.804 1398.62,683.804 1399.18,683.804 1399.74,683.804 1400.3,683.804 1400.86,683.804 1401.41,683.804 1401.97,683.804 1402.53,683.804 1403.09,683.804 1403.65,683.804 1404.21,683.804 1404.77,683.804 1405.33,683.804 1405.89,683.804 1406.45,683.804 1407.01,683.804 1407.57,683.804 1408.13,683.804 1408.68,683.804 1409.24,683.804 1409.8,683.804 1410.36,683.804 1410.92,683.804 1411.48,683.804 1412.04,683.804 1412.6,683.804 1413.16,683.804 1413.72,683.804 1414.28,683.804 1414.84,683.804 1415.4,683.804 1415.95,683.804 1416.51,683.804 1417.07,683.804 1417.63,683.804 1418.19,683.804 1418.75,683.804 1419.31,683.804 1419.87,683.804 1420.43,683.804 1420.99,683.804 1421.55,683.804 1422.11,683.804 1422.67,683.804 1423.23,683.804 1423.78,683.804 1424.34,683.804 1424.9,683.804 1425.46,683.804 1426.02,683.804 1426.58,683.804 1427.14,683.804 1427.7,683.804 1428.26,683.804 1428.82,683.804 1429.38,683.804 1429.94,683.804 1430.5,683.804 1431.05,683.804 1431.61,683.804 1432.17,683.804 1432.73,683.804 1433.29,683.804 1433.85,683.804 1434.41,683.804 1434.97,683.804 1435.53,683.804 1436.09,683.804 1436.65,683.804 1437.21,683.804 1437.77,683.804 1438.33,683.804 1438.88,683.804 1439.44,683.804 1440,683.804 1440.56,683.804 1441.12,683.804 1441.68,683.804 1442.24,683.804 1442.8,683.804 1443.36,683.804 1443.92,683.804 1444.48,683.804 1445.04,683.804 1445.6,683.804 1446.15,683.804 1446.71,683.804 1447.27,683.804 1447.83,683.804 1448.39,683.804 1448.95,683.804 1449.51,683.804 1450.07,683.804 1450.63,683.804 1451.19,683.804 1451.75,683.804 1452.31,683.804 1452.87,683.804 1453.42,683.804 1453.98,683.804 1454.54,683.804 1455.1,683.804 1455.66,683.804 1456.22,683.804 1456.78,683.804 1457.34,683.804 1457.9,683.804 1458.46,683.804 1459.02,683.804 1459.58,683.804 1460.14,683.804 1460.7,683.804 1461.25,683.804 1461.81,683.804 1462.37,683.804 1462.93,683.804 1463.49,683.804 1464.05,683.804 1464.61,683.804 1465.17,683.804 1465.73,683.804 1466.29,683.804 1466.85,683.804 1467.41,683.804 1467.97,683.804 1468.52,683.804 1469.08,683.804 1469.64,683.804 1470.2,683.804 1470.76,683.804 1471.32,683.804 1471.88,683.804 1472.44,683.804 1473,683.804 1473.56,683.804 1474.12,683.804 1474.68,683.804 1475.24,683.804 1475.79,683.804 1476.35,683.804 1476.91,683.804 1477.47,683.804 1478.03,683.804 1478.59,683.804 1479.15,683.804 1479.71,683.804 1480.27,683.804 1480.83,683.804 1481.39,683.804 1481.95,683.804 1482.51,683.804 1483.07,683.804 1483.62,683.804 1484.18,683.804 1484.74,683.804 1485.3,683.804 1485.86,683.804 1486.42,683.804 1486.98,683.804 1487.54,683.804 1488.1,683.804 1488.66,683.804 1489.22,683.804 1489.78,683.804 1490.34,683.804 1490.89,683.804 1491.45,683.804 1492.01,683.804 1492.57,683.804 1493.13,683.804 1493.69,683.804 1494.25,683.804 1494.81,683.804 1495.37,683.804 1495.93,683.804 1496.49,683.804 1497.05,683.804 1497.61,683.804 1498.16,683.804 1498.72,683.804 1499.28,683.804 1499.84,683.804 1500.4,683.804 1500.96,683.804 1501.52,683.804 1502.08,683.804 1502.64,683.804 1503.2,683.804 1503.76,683.804 1504.32,683.804 1504.88,683.804 1505.44,683.804 1505.99,683.804 1506.55,683.804 1507.11,683.804 1507.67,683.804 1508.23,683.804 1508.79,683.804 1509.35,683.804 1509.91,683.804 1510.47,683.804 1511.03,683.804 1511.59,683.804 1512.15,683.804 1512.71,683.804 1513.26,683.804 1513.82,683.804 1514.38,683.804 1514.94,683.804 1515.5,683.804 1516.06,683.804 1516.62,683.804 1517.18,683.804 1517.74,683.804 1518.3,683.804 1518.86,683.804 1519.42,683.804 1519.98,683.804 1520.53,683.804 1521.09,683.804 1521.65,683.804 1522.21,683.804 1522.77,683.804 1523.33,683.804 1523.89,683.804 1524.45,683.804 1525.01,683.804 1525.57,683.804 1526.13,683.804 1526.69,683.804 1527.25,683.804 1527.81,683.804 1528.36,683.804 1528.92,683.804 1529.48,683.804 1530.04,683.804 1530.6,683.804 1531.16,683.804 1531.72,683.804 1532.28,683.804 1532.84,683.804 1533.4,683.804 1533.96,683.804 1534.52,683.804 1535.08,683.804 1535.63,683.804 1536.19,683.804 1536.75,683.804 1537.31,683.804 1537.87,683.804 1538.43,683.804 1538.99,683.804 1539.55,683.804 1540.11,683.804 1540.67,683.804 1541.23,683.804 1541.79,683.804 1542.35,683.804 1542.9,683.804 1543.46,683.804 1544.02,683.804 1544.58,683.804 1545.14,683.804 1545.7,683.804 1546.26,683.804 1546.82,683.804 1547.38,683.804 1547.94,683.804 1548.5,683.804 1549.06,683.804 1549.62,683.804 1550.18,683.804 1550.73,683.804 1551.29,683.804 1551.85,683.804 1552.41,683.804 1552.97,683.804 1553.53,683.804 1554.09,683.804 1554.65,683.804 1555.21,683.804 1555.77,683.804 1556.33,683.804 1556.89,683.804 1557.45,683.804 1558,683.804 1558.56,683.804 1559.12,683.804 1559.68,683.804 1560.24,683.804 1560.8,683.804 1561.36,683.804 1561.92,683.804 1562.48,683.804 1563.04,683.804 1563.6,683.804 1564.16,683.804 1564.72,683.804 1565.28,683.804 1565.83,683.804 1566.39,683.804 1566.95,683.804 1567.51,683.804 1568.07,683.804 1568.63,683.804 1569.19,683.804 1569.75,683.804 1570.31,683.804 1570.87,683.804 1571.43,683.804 1571.99,683.804 1572.55,683.804 1573.1,683.804 1573.66,683.804 1574.22,683.804 1574.78,683.804 1575.34,683.804 1575.9,683.804 1576.46,683.804 1577.02,683.804 1577.58,683.804 1578.14,683.804 1578.7,683.804 1579.26,683.804 1579.82,683.804 1580.37,683.804 1580.93,683.804 1581.49,683.804 1582.05,683.804 1582.61,683.804 1583.17,683.804 1583.73,683.804 1584.29,683.804 1584.85,683.804 1585.41,683.804 1585.97,683.804 1586.53,683.804 1587.09,683.804 1587.65,683.804 1588.2,683.804 1588.76,683.804 1589.32,683.804 1589.88,683.804 1590.44,683.804 1591,683.804 1591.56,683.804 1592.12,683.804 1592.68,683.804 1593.24,683.804 1593.8,683.804 1594.36,683.804 1594.92,683.804 1595.47,683.804 1596.03,683.804 1596.59,683.804 1597.15,683.804 1597.71,683.804 1598.27,683.804 1598.83,683.804 1599.39,683.804 1599.95,683.804 1600.51,683.804 1601.07,683.804 1601.63,683.804 1602.19,683.804 1602.74,683.804 1603.3,683.804 1603.86,683.804 1604.42,683.804 1604.98,683.804 1605.54,683.804 1606.1,683.804 1606.66,683.804 1607.22,683.804 1607.78,683.804 1608.34,683.804 1608.9,683.804 1609.46,683.804 1610.02,683.804 1610.57,683.804 1611.13,683.804 1611.69,683.804 1612.25,683.804 1612.81,683.804 1613.37,683.804 1613.93,683.804 1614.49,683.804 1615.05,683.804 1615.61,683.804 1616.17,683.804 1616.73,683.804 1617.29,683.804 1617.84,683.804 1618.4,683.804 1618.96,683.804 1619.52,683.804 1620.08,683.804 1620.64,683.804 1621.2,683.804 1621.76,683.804 1622.32,683.804 1622.88,683.804 1623.44,683.804 1624,683.804 1624.56,683.804 1625.11,683.804 1625.67,683.804 1626.23,683.804 1626.79,683.804 1627.35,683.804 1627.91,683.804 1628.47,683.804 1629.03,683.804 1629.59,683.804 1630.15,683.804 1630.71,683.804 1631.27,683.804 1631.83,683.804 1632.39,683.804 1632.94,683.804 1633.5,683.804 1634.06,683.804 1634.62,683.804 1635.18,683.804 1635.74,683.804 1636.3,683.804 1636.86,683.804 1637.42,683.804 1637.98,683.804 1638.54,683.804 1639.1,683.804 1639.66,683.804 1640.21,683.804 1640.77,683.804 1641.33,683.804 1641.89,683.804 1642.45,683.804 1643.01,683.804 1643.57,683.804 1644.13,683.804 1644.69,683.804 1645.25,683.804 1645.81,683.804 1646.37,683.804 1646.93,683.804 1647.48,683.804 1648.04,683.804 1648.6,683.804 1649.16,683.804 1649.72,683.804 1650.28,683.804 1650.84,683.804 1651.4,683.804 1651.96,683.804 1652.52,683.804 1653.08,683.804 1653.64,683.804 1654.2,683.804 1654.76,683.804 1655.31,683.804 1655.87,683.804 1656.43,683.804 1656.99,683.804 1657.55,683.804 1658.11,683.804 1658.67,683.804 1659.23,683.804 1659.79,683.804 1660.35,683.804 1660.91,683.804 1661.47,683.804 1662.03,683.804 1662.58,683.804 1663.14,683.804 1663.7,683.804 1664.26,683.804 1664.82,683.804 1665.38,683.804 1665.94,683.804 1666.5,683.804 1667.06,683.804 1667.62,683.804 1668.18,683.804 1668.74,683.804 1669.3,683.804 1669.85,683.804 1670.41,683.804 1670.97,683.804 1671.53,683.804 1672.09,683.804 1672.65,683.804 1673.21,683.804 1673.77,683.804 1674.33,683.804 1674.89,683.804 1675.45,683.804 1676.01,683.804 1676.57,683.804 1677.13,683.804 1677.68,683.804 1678.24,683.804 1678.8,683.804 1679.36,683.804 1679.92,683.804 1680.48,683.804 1681.04,683.804 1681.6,683.804 1682.16,683.804 1682.72,683.804 1683.28,683.804 1683.84,683.804 1684.4,683.804 1684.95,683.804 1685.51,683.804 1686.07,683.804 1686.63,683.804 1687.19,683.804 1687.75,683.804 1688.31,683.804 1688.87,683.804 1689.43,683.804 1689.99,683.804 1690.55,683.804 1691.11,683.804 1691.67,683.804 1692.23,683.804 1692.78,683.804 1693.34,683.804 1693.9,683.804 1694.46,683.804 1695.02,683.804 1695.58,683.804 1696.14,683.804 1696.7,683.804 1697.26,683.804 1697.82,683.804 1698.38,683.804 1698.94,683.804 1699.5,683.804 1700.05,683.804 1700.61,683.804 1701.17,683.804 1701.73,683.804 1702.29,683.804 1702.85,683.804 1703.41,683.804 1703.97,683.804 1704.53,683.804 1705.09,683.804 1705.65,683.804 1706.21,683.804 1706.77,683.804 1707.32,683.804 1707.88,683.804 1708.44,683.804 1709,683.804 1709.56,683.804 1710.12,683.804 1710.68,683.804 1711.24,683.804 1711.8,683.804 1712.36,683.804 1712.92,683.804 1713.48,683.804 1714.04,683.804 1714.6,683.804 1715.15,683.804 1715.71,683.804 1716.27,683.804 1716.83,683.804 1717.39,683.804 1717.95,683.804 1718.51,683.804 1719.07,683.804 1719.63,683.804 1720.19,683.804 1720.75,683.804 1721.31,683.804 1721.87,683.804 1722.42,683.804 1722.98,683.804 1723.54,683.804 1724.1,683.804 1724.66,683.804 1725.22,683.804 1725.78,683.804 1726.34,683.804 1726.9,683.804 1727.46,683.804 1728.02,683.804 1728.58,683.804 1729.14,683.804 1729.69,683.804 1730.25,683.804 1730.81,683.804 1731.37,683.804 1731.93,683.804 1732.49,683.804 1733.05,683.804 1733.61,683.804 1734.17,683.804 1734.73,683.804 1735.29,683.804 1735.85,683.804 1736.41,683.804 1736.97,683.804 1737.52,683.804 1738.08,683.804 1738.64,683.804 1739.2,683.804 1739.76,683.804 1740.32,683.804 1740.88,683.804 1741.44,683.804 1742,683.804 1742.56,683.804 1743.12,683.804 1743.68,683.804 1744.24,683.804 1744.79,683.804 1745.35,683.804 1745.91,683.804 1746.47,683.804 1747.03,683.804 1747.59,683.804 1748.15,683.804 1748.71,683.804 1749.27,683.804 1749.83,683.804 1750.39,683.804 1750.95,683.804 1751.51,683.804 1752.06,683.804 1752.62,683.804 1753.18,683.804 1753.74,683.804 1754.3,683.804 1754.86,683.804 1755.42,683.804 1755.98,683.804 1756.54,683.804 1757.1,683.804 1757.66,683.804 1758.22,683.804 1758.78,683.804 1759.34,683.804 1759.89,683.804 1760.45,683.804 1761.01,683.804 1761.57,683.804 1762.13,683.804 1762.69,683.804 1763.25,683.804 1763.81,683.804 1764.37,683.804 1764.93,683.804 1765.49,683.804 1766.05,683.804 1766.61,683.804 1767.16,683.804 1767.72,683.804 1768.28,683.804 1768.84,683.804 1769.4,683.804 1769.96,683.804 1770.52,683.804 1771.08,683.804 1771.64,683.804 1772.2,683.804 1772.76,683.804 1773.32,683.804 1773.88,683.804 1774.43,683.804 1774.99,683.804 1775.55,683.804 1776.11,683.804 1776.67,683.804 1777.23,683.804 1777.79,683.804 1778.35,683.804 1778.91,683.804 1779.47,683.804 1780.03,683.804 1780.59,683.804 1781.15,683.804 1781.71,683.804 1782.26,683.804 1782.82,683.804 1783.38,683.804 1783.94,683.804 1784.5,683.804 1785.06,683.804 1785.62,683.804 1786.18,683.804 1786.74,683.804 1787.3,683.804 1787.86,683.804 1788.42,683.804 1788.98,683.804 1789.53,683.804 1790.09,683.804 1790.65,683.804 1791.21,683.804 1791.77,683.804 1792.33,683.804 1792.89,683.804 1793.45,683.804 1794.01,683.804 1794.57,683.804 1795.13,683.804 1795.69,683.804 1796.25,683.804 1796.8,683.804 1797.36,683.804 1797.92,683.804 1798.48,683.804 1799.04,683.804 1799.6,683.804 1800.16,683.804 1800.72,683.804 1801.28,683.804 1801.84,683.804 1802.4,683.804 1802.96,683.804 1803.52,683.804 1804.08,683.804 1804.63,683.804 1805.19,683.804 1805.75,683.804 1806.31,683.804 1806.87,683.804 1807.43,683.804 1807.99,683.804 1808.55,683.804 1809.11,683.804 1809.67,683.804 1810.23,683.804 1810.79,683.804 1811.35,683.804 1811.9,683.804 1812.46,683.804 1813.02,683.804 1813.58,683.804 1814.14,683.804 1814.7,683.804 1815.26,683.804 1815.82,683.804 1816.38,683.804 1816.94,683.804 1817.5,683.804 1818.06,683.804 1818.62,683.804 1819.18,683.804 1819.73,683.804 1820.29,683.804 1820.85,683.804 1821.41,683.804 1821.97,683.804 1822.53,683.804 1823.09,683.804 1823.65,683.804 1824.21,683.804 1824.77,683.804 1825.33,683.804 1825.89,683.804 1826.45,683.804 1827,683.804 1827.56,683.804 1828.12,683.804 1828.68,683.804 1829.24,683.804 1829.8,683.804 1830.36,683.804 1830.92,683.804 1831.48,683.804 1832.04,683.804 1832.6,683.804 1833.16,683.804 1833.72,683.804 1834.27,683.804 1834.83,683.804 1835.39,683.804 1835.95,683.804 1836.51,683.804 1837.07,683.804 1837.63,683.804 1838.19,683.804 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ± $(se.err)\n    Projected Energy: $(v.val) ± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.028103390091188 ± 0.01962262728651977\nProjected Energy: -4.0161910739066435 ± (0.005938790563016383, 0.006066437487479703)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from lomc! as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; α = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-α.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ± 0.0029\n  with uncertainty of ± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13×6 DataFrame\n Row │ blocks  mean      std_err      std_err_err  p_cov       mj\n     │ Int64   Float64   Float64      Float64      Float64     Float64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 │   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 │   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 │   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 │    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 │    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 │    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 │     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 │     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 │     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 │      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 │      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 │      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ⠀⠀⠀⠀⠀⠀⠀⠀⠀std err vs blocking steps⠀⠀⠀⠀⠀⠀⠀⠀\n               ┌────────────────────────────────────────┐\n    0.00423501 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀│ m test\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢸⠀⠀⠀⠀│ std err\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⡠⢺⠒⠒⢺⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⡀⠀⠀⡆⣀⠤⡗⠉⠀⢸⠀⠀⢸⡆⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡧⠤⠔⡗⠊⠉⡏⠀⠀⡇⠀⠀⢸⠀⠀⢸⢣⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⡇⠀⠀⠁⠀⠀⠁⠀⠀⠁⠀⠀⠀⠀⠀⢸⠸⡀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠁⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⡇⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠊⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣦⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀│\n               │⠀⠀⠀⢀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n               │⠀⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n   -0.00012335 │⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠧⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤│\n               └────────────────────────────────────────┘\n               ⠀0.64⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀k⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀13.36⠀\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; α = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; α=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.σ_f using x_by_y_linear. The standard error estimate r.σ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.δ_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*σ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3×3 DataFrame\n Row │ res      res_l    res_u\n     │ Float64  Float64  Float64\n─────┼───────────────────────────\n   1 │    11.5  1.7282   1.7282\n   2 │    13.0  1.7282   1.7282\n   3 │    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dτ=df.dτ[end], skip=0)\n\nCalculate the growth witness directly from a DataFrame returned by lomc!. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0) -> g\ngrowth_witness(df::DataFrame, [b]; skip=0) -> g\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ≥ 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n) -> r::RatioBlockingResult\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    dτ=df.dτ[end],\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively. Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin().\n\nE_gr = E_r - frac1dτln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the (biased) shift estimator. Error propagation is done with MonteCarloMeasurements. Progagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a DataFrame returned by lomc!. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator() and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\n-> (;df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    dτ=df.dτ[end],\n    kwargs...\n)\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the unweighted ratio. Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame returned by lomc!. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(\n    df::DataFrame;\n    skip=0, hproj=:hproj, vproj=:vproj, kwargs...\n) -> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy() to set these up in lomc!()). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame returned by lomc!. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...) -> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the result of replica lomc! passed as  argument df, using replicas _1 and _2. Calls ratio_of_means() to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |ψ⟩ and |ϕ⟩ is defined as\n\nF(ψϕ) = fracψϕ^2ψψϕϕ \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v⋅v == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame version can extract the relevant information from the result of lomc!. Set up lomc! with the keyword argument replica = AllOverlaps(R) and R ≥ 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ± 0.029\n  with uncertainty of ± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; α = 0.01) -> k\nmtest(table::NamedTuple; α = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-α after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, σ_f, δ_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nσ_f::T: std from linear propagation\nδ_y::T: coefficient of variation for denominator (≤ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, μ, σ)\nparticles(samples, μ::AbstractVector, Σ::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, σ_f, δ_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nσ_f standard deviation of f from linear error propagation (normal approximation)\nδ_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(μ_x,μ_y,σ_x,σ_y,ρ) -> f, σ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013).\n\nσ_f = sqrtfracσ_xμ_y^2 + fracμ_x σ_yμ_y^2^2 - frac2 ρ μ_xμ_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3×7 DataFrame\n Row │ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     │ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 │    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 │    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1×9 DataFrame\n Row │ val       val_l      val_u      val_f     val_σ_f    val_δ_y    val_k  val_blocks  val_success\n     │ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n─────┼────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7×6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS…</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple…</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.460246</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.3285e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">9.137e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">9.317e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.463e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.755e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">8.144e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ≠ basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10×10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10×10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nΔE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ΔE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(BoseFS{4,5}(0, 0, 4, 0, 0); u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0⟩\"\n fs\"|0 1 2 1 0⟩\"\n fs\"|1 0 2 0 1⟩\"\n fs\"|1 0 1 2 0⟩\"\n fs\"|0 0 1 1 2⟩\"\n fs\"|0 2 1 0 1⟩\"\n fs\"|2 1 1 0 0⟩\"\n fs\"|0 2 0 2 0⟩\"\n fs\"|1 1 0 1 1⟩\"\n fs\"|2 0 0 0 2⟩\"\n fs\"|0 0 0 3 1⟩\"\n fs\"|3 0 0 1 0⟩\"\n fs\"|0 1 0 0 3⟩\"\n fs\"|1 3 0 0 0⟩\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0⟩\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ≈ all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0⟩\" => -0.0214153\n  fs\"|2 0 0 0 2⟩\" => -0.00237613\n  fs\"|0 0 4 0 0⟩\" => -0.980348\n  fs\"|0 0 0 3 1⟩\" => 0.00363555\n  fs\"|2 1 1 0 0⟩\" => -0.0119687\n  fs\"|1 0 2 0 1⟩\" => 0.0768085\n  fs\"|1 3 0 0 0⟩\" => 0.00363555\n  fs\"|0 1 2 1 0⟩\" => 0.177701\n  fs\"|0 0 1 1 2⟩\" => -0.0119687\n  fs\"|3 0 0 1 0⟩\" => 0.00195478\n  fs\"|0 2 0 2 0⟩\" => -0.0138439\n  fs\"|1 1 0 1 1⟩\" => -0.00234782\n  fs\"|0 1 0 0 3⟩\" => 0.00195478\n  fs\"|0 2 1 0 1⟩\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i ϵ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential ϵ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleσ t_σ a^_iσ a_jσ +\n  frac12sum_iσ u_σσ n_iσ (n_iσ - 1) +\n  sum_iστu_στ n_iσ n_iτ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iσd v_σd x_di^2 n_iσ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C × D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(add::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k δ_r+qp+k\n\nArguments\n\nadd: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, η, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl \n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order  degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl \n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and  the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between  basis states of any noninteracting energy level, leading to many more offdiagonals and  fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger  restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The    allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make    the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the    interactions. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without    comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building  a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, η, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i ϵ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that  conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using  first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d) \n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, see four_oscillator_integral_general, with the additional restriction  that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to    make the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function  potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi ϵ_mathbfi n_mathbfi \n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix  representation of this Hamiltonian for a single particle is completely dense in the even-parity  subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nηs = (): a tuple of aspect ratios for the remaining dimensions (η_y, ...). Should be empty    for a 1D trap or contain values greater than 1.0. The maximum index    in other dimensions will be the largest even number less than M/η_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,    including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if    only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of \nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kσk^2 n_kσ \n    quad + sum_pqkσσ T_pqk a^_p-kσ a^_q+kσ a_qσ a_pσ \n    quad + sum_pqskkσσ Q_kka^_p-kσ a^_q+kσ a^_s+k-kσ\n                                       a_sσ a_qσ a_pσ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + ωN - v Σₖ(aₖ^ + aₖ)\n\nwhere p is the total momentum, p_f = Σ_k k aₖ^ aₖ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2πl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons ω.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0⟩{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M÷2, M÷2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M÷2, M÷2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address α is replaced by frac12(α  α) for even and odd parity, respectively, where ᾱ == reverse(α).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(BoseFS{3,3}(0, 2, 1); u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ≈ eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ≈ eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ≤ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0⟩{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ≤ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, σ=1, τ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_στ(d) = frac1M _i n_σi (n_τi+d - δ_0dδ_στ)\n\nFor multicomponent addresses, σ and τ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s b^_p  b_q a_r δ_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s a^_p  a_q a_r δ_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ≤ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ≤ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iσ = hat a^_iσ hat a_iσ\n\nwhere i is the mode and σ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0⟩\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0⟩\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x⋅(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1⟩\", -3.0)\n (fs\"|2 2 2⟩\", -2.449489742783178)\n (fs\"|3 1 2⟩\", -2.0)\n (fs\"|4 1 1⟩\", -2.8284271247461903)\n (fs\"|4 2 0⟩\", -2.0)\n (fs\"|3 3 0⟩\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ….\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb⋅(1:7) == onr(b)⋅(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w⋅op(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ⋅ A ⋅ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions, \n\n    mathcalI(ijkl) = int_-infty^infty dx  \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function,  and is non-zero unless i+j+k+l is odd. See e.g.  Titchmarsh (1948). This is a generalisation of the closed form in  Papenbrock (2002), which is is the special  case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin, \n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state  corresponds to a D-tuple of harmonic oscillator indices mathbfn_i.  S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of  phi_i(0) to speed-up the calculation. The values can be calculated with  log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D  harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1⟩\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ≈ values[1]\ntrue\n\nSee also solve, init, KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian)\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3×3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:\n  0.0  -1.0  -1.0\n -1.0   0.0  -1.0\n -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2×2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:\n  0.0  -1.0\n -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues\n3-element Vector{Float64}:\n -1.9999999999999996\n  0.9999999999999997\n  1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector\n3-element Vector{Float64}:\n -0.5773502691896257\n -0.5773502691896255\n -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec\nDVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()\n  fs\"|0 0 1⟩\" => -0.57735\n  fs\"|0 1 0⟩\" => -0.57735\n  fs\"|1 0 0⟩\" => -0.57735\n\nHas methods for dimension, sparse, Matrix, starting_address.\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nαmathrmnaddrrangle\n\nReturns the new address naddr and the factor α. The value of α is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0⟩\" => 1\n\njulia> fs\"|0 1 2 0⟩\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3⟩⊗|0 1 0⟩\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|↑↓↑⟩\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0⟩{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0⟩{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ≤ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Σ_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen)\n\nCompute the new address of a hopping event for the Bose-Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic.\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ≤ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|⋅↑↑↑⋅⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|↑↓↓⟩\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3⟩{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n→ (nadd, α)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of α is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3⟩{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, α = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dτ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ after projecting onto projector.\n\nS^n+1 = S^n -fracζdτlnleft(fracPΨ^(n+1)PΨ^(n)right)-fracξdτlnleft(fracPΨ^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4, α = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracξdτlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-α)*walkernumber() + α*UniformProjector()⋅ψ computed with walkernumber() and UniformProjector(). When ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)-fracξdτlnleft(fracΨ_1^n+1Ψ_1^texttargetright)\n\nWhen ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08, ξ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ and ξ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, ζ = 0.08,   ξ = ζ^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dτ) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\n𝐓 = 1 + dτ(S - 𝐇)\n\nwhere 𝐇 is the hamiltonian and S is the shift.\n\n𝐓 represents the first order expansion of the exponential evolution operator of the imaginary-time Schrödinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntargetwalkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; targetwalkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nζ = 0.08: Damping parameter for the shift update.\nξ = ζ^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; targetwalkers, ζ, ξ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * targetwalkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralStates, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dτ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(⋅,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dτ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsStochasticInteger(),\n    initiator=NonInitiator(),\n    threading=nothing\n)\n\nReturn a default starting vector for lomc!. The default choice for the starting vector is\n\nv = PDVec(address => 10; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => 10; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => 10; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndτ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> add = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(add);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(BoseFS{6,3}(1, 2, 3); u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nτ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, ζ = 0.08, ξ = ζ^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ≈ num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|⋅↑⇅↓⋅⟩\" => 1.0, fs\"|↓↓⋅↑↑⟩\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|↓↓⋅↑↑⟩\" => 0.5\n  fs\"|⋅↑⇅↓⋅⟩\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dτ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dτ","text":"update_dτ(s<:TimeStepStrategy, dτ, tnorm) -> new dτ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with mpirun julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Next, we construct the starting vector. We use a PDVec, which is automatically MPI-distributed if MPI is available. We set the vector's stochastic style to IsDynamicSemistochastic, which improves statistics and reduces the sign problem.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails. Setting save_if=is_mpi_root() will ensure only the root MPI rank will write to the file. The chunk_size parameter determines how often the data is saved to the file. Progress messages are suppressed with io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    save_if=is_mpi_root(),\n    reporting_interval=1,\n    chunk_size=1000,\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10_000 walkers. We will also compute the projected energy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"s_strat = DoubleLogUpdate(targetwalkers=10_000)\npost_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ProjectedEnergy{HubbardMom1D{Float64, 10, BoseFS{10, 10, BitString{19, 1, UInt32}}, 6.0, 1.0}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}}(:vproj, :hproj, HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 1.0],)), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(1, 0, 0, 0, 8, 0, 0, 0, 1, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 0, 8, 0, 0, 0, 0, 2) => 4.024922359499621, BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 7.0, BoseFS{10,10}(0, 0, 1, 0, 8, 0, 1, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 1, 8, 1, 0, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 1, 0, 0, 8, 0, 0, 1, 0, 0) => 5.692099788303083],)))","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"lomc!(H, initial_vector; reporting_strategy, s_strat, post_step_strategy, dτ=1e-4, laststep=10_000);\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schrödinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Blöte PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schrödinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija Čufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. lomc!.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main lomc!() computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI for use in lomc!() is enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. Čufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelmüller, D. Huber, M. Čufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/π^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↑↓↓⟩\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => 4.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => -1.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => -1.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => -1.0\n  fs\"|↑↑↓↓⟩\" => -4.0\n  fs\"|↓↑↓↑⟩\" => -1.0\n  fs\"|↓↑↑↓⟩\" => 1.0\n  fs\"|⇅⋅⋅⇅⟩\" => -1.0\n  fs\"|↑↓↓↑⟩\" => 1.0\n  fs\"|⋅⇅⇅⋅⟩\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => -2.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => 3.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => 3.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()⋅v == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
