var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(fs\"|1 1 1 1 1 1‚ü©\"; u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndœÑ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dœÑ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ¬± $(r.œÉ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ¬± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ¬± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ¬± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ¬± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ¬± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ¬± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ¬± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ¬± 0.13748856752861724\n   Replica 2: -3.974753826250174 ¬± 0.12466355058904417\n   Replica 3: -4.011054302602586 ¬± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(fs\"|1 1 1 1 1 1‚ü©\"; u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1‚ü©\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(fs\"|1 1 1 1 1 1‚ü©\"; u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1‚ü©\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0‚ü©\"=>-14.1421, fs\"|0 2 1 1 1 1‚ü©\"=>-14.1421, fs\"|1 1 1 1 0 2‚ü©\"=>-14.1421, fs\"|1 2 0 1 1 1‚ü©\"=>-14.1421, fs\"|2 0 1 1 1 1‚ü©\"=>-14.1421, fs\"|1 1 1 2 0 1‚ü©\"=>-14.1421, fs\"|1 1 2 0 1 1‚ü©\"=>-14.1421, fs\"|1 1 0 2 1 1‚ü©\"=>-14.1421, fs\"|1 1 1 0 2 1‚ü©\"=>-14.1421, fs\"|1 0 2 1 1 1‚ü©\"=>-14.1421, fs\"|2 1 1 1 1 0‚ü©\"=>-14.1421, fs\"|0 1 1 1 1 2‚ü©\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    targetwalkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip500\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip500)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip501\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip500)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip502\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip502)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip502)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip502)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip502)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip500)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip500)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip500)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip500)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip500)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip500)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M1248.87 1391.71 L1248.87 1397.25 Q1246.38 1395.98 1243.71 1395.34 Q1241.04 1394.71 1238.17 1394.71 Q1233.81 1394.71 1231.62 1396.04 Q1229.45 1397.38 1229.45 1400.05 Q1229.45 1402.09 1231.01 1403.27 Q1232.57 1404.41 1237.28 1405.46 L1239.29 1405.91 Q1245.52 1407.25 1248.13 1409.7 Q1250.78 1412.12 1250.78 1416.48 Q1250.78 1421.44 1246.83 1424.34 Q1242.91 1427.23 1236.04 1427.23 Q1233.17 1427.23 1230.06 1426.66 Q1226.97 1426.12 1223.53 1425.01 L1223.53 1418.96 Q1226.78 1420.65 1229.93 1421.51 Q1233.08 1422.33 1236.17 1422.33 Q1240.3 1422.33 1242.53 1420.93 Q1244.76 1419.5 1244.76 1416.92 Q1244.76 1414.54 1243.14 1413.26 Q1241.55 1411.99 1236.1 1410.81 L1234.07 1410.33 Q1228.62 1409.19 1226.2 1406.83 Q1223.79 1404.45 1223.79 1400.31 Q1223.79 1395.28 1227.35 1392.54 Q1230.91 1389.8 1237.47 1389.8 Q1240.72 1389.8 1243.58 1390.28 Q1246.45 1390.76 1248.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M1265.89 1380.54 L1265.89 1390.66 L1277.96 1390.66 L1277.96 1395.22 L1265.89 1395.22 L1265.89 1414.57 Q1265.89 1418.93 1267.07 1420.17 Q1268.28 1421.41 1271.94 1421.41 L1277.96 1421.41 L1277.96 1426.31 L1271.94 1426.31 Q1265.16 1426.31 1262.58 1423.8 Q1260.01 1421.25 1260.01 1414.57 L1260.01 1395.22 L1255.71 1395.22 L1255.71 1390.66 L1260.01 1390.66 L1260.01 1380.54 L1265.89 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M1316.15 1407.02 L1316.15 1409.89 L1289.22 1409.89 Q1289.61 1415.94 1292.85 1419.12 Q1296.13 1422.27 1301.96 1422.27 Q1305.33 1422.27 1308.48 1421.44 Q1311.66 1420.61 1314.78 1418.96 L1314.78 1424.5 Q1311.63 1425.83 1308.32 1426.53 Q1305.01 1427.23 1301.61 1427.23 Q1293.08 1427.23 1288.08 1422.27 Q1283.11 1417.3 1283.11 1408.84 Q1283.11 1400.08 1287.82 1394.96 Q1292.57 1389.8 1300.59 1389.8 Q1307.78 1389.8 1311.95 1394.45 Q1316.15 1399.07 1316.15 1407.02 M1310.3 1405.3 Q1310.23 1400.5 1307.59 1397.63 Q1304.98 1394.77 1300.65 1394.77 Q1295.75 1394.77 1292.79 1397.54 Q1289.86 1400.31 1289.42 1405.34 L1310.3 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M1331.43 1420.96 L1331.43 1439.87 L1325.54 1439.87 L1325.54 1390.66 L1331.43 1390.66 L1331.43 1396.07 Q1333.28 1392.89 1336.08 1391.36 Q1338.91 1389.8 1342.82 1389.8 Q1349.32 1389.8 1353.36 1394.96 Q1357.43 1400.12 1357.43 1408.52 Q1357.43 1416.92 1353.36 1422.08 Q1349.32 1427.23 1342.82 1427.23 Q1338.91 1427.23 1336.08 1425.71 Q1333.28 1424.15 1331.43 1420.96 M1351.35 1408.52 Q1351.35 1402.06 1348.68 1398.4 Q1346.04 1394.71 1341.39 1394.71 Q1336.74 1394.71 1334.07 1398.4 Q1331.43 1402.06 1331.43 1408.52 Q1331.43 1414.98 1334.07 1418.67 Q1336.74 1422.33 1341.39 1422.33 Q1346.04 1422.33 1348.68 1418.67 Q1351.35 1414.98 1351.35 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M1389.87 1391.71 L1389.87 1397.25 Q1387.38 1395.98 1384.71 1395.34 Q1382.04 1394.71 1379.17 1394.71 Q1374.81 1394.71 1372.62 1396.04 Q1370.45 1397.38 1370.45 1400.05 Q1370.45 1402.09 1372.01 1403.27 Q1373.57 1404.41 1378.28 1405.46 L1380.29 1405.91 Q1386.52 1407.25 1389.13 1409.7 Q1391.78 1412.12 1391.78 1416.48 Q1391.78 1421.44 1387.83 1424.34 Q1383.91 1427.23 1377.04 1427.23 Q1374.18 1427.23 1371.06 1426.66 Q1367.97 1426.12 1364.53 1425.01 L1364.53 1418.96 Q1367.78 1420.65 1370.93 1421.51 Q1374.08 1422.33 1377.17 1422.33 Q1381.3 1422.33 1383.53 1420.93 Q1385.76 1419.5 1385.76 1416.92 Q1385.76 1414.54 1384.14 1413.26 Q1382.55 1411.99 1377.1 1410.81 L1375.07 1410.33 Q1369.62 1409.19 1367.2 1406.83 Q1364.79 1404.45 1364.79 1400.31 Q1364.79 1395.28 1368.35 1392.54 Q1371.92 1389.8 1378.47 1389.8 Q1381.72 1389.8 1384.58 1390.28 Q1387.45 1390.76 1389.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip502)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1260.82 2211.02,1260.82 \"/>\n<polyline clip-path=\"url(#clip502)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1003.64 2211.02,1003.64 \"/>\n<polyline clip-path=\"url(#clip502)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,746.473 2211.02,746.473 \"/>\n<polyline clip-path=\"url(#clip502)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,489.302 2211.02,489.302 \"/>\n<polyline clip-path=\"url(#clip502)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,232.131 2211.02,232.131 \"/>\n<polyline clip-path=\"url(#clip500)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip500)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1260.82 423.181,1260.82 \"/>\n<polyline clip-path=\"url(#clip500)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1003.64 423.181,1003.64 \"/>\n<polyline clip-path=\"url(#clip500)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,746.473 423.181,746.473 \"/>\n<polyline clip-path=\"url(#clip500)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,489.302 423.181,489.302 \"/>\n<polyline clip-path=\"url(#clip500)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,232.131 423.181,232.131 \"/>\n<path clip-path=\"url(#clip500)\" d=\"M356.339 1246.61 Q352.728 1246.61 350.899 1250.18 Q349.094 1253.72 349.094 1260.85 Q349.094 1267.96 350.899 1271.52 Q352.728 1275.06 356.339 1275.06 Q359.973 1275.06 361.779 1271.52 Q363.608 1267.96 363.608 1260.85 Q363.608 1253.72 361.779 1250.18 Q359.973 1246.61 356.339 1246.61 M356.339 1242.91 Q362.149 1242.91 365.205 1247.52 Q368.284 1252.1 368.284 1260.85 Q368.284 1269.58 365.205 1274.18 Q362.149 1278.77 356.339 1278.77 Q350.529 1278.77 347.45 1274.18 Q344.395 1269.58 344.395 1260.85 Q344.395 1252.1 347.45 1247.52 Q350.529 1242.91 356.339 1242.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M290.043 1016.99 L306.363 1016.99 L306.363 1020.92 L284.418 1020.92 L284.418 1016.99 Q287.08 1014.23 291.664 1009.61 Q296.27 1004.95 297.451 1003.61 Q299.696 1001.09 300.576 999.35 Q301.478 997.591 301.478 995.901 Q301.478 993.147 299.534 991.411 Q297.613 989.675 294.511 989.675 Q292.312 989.675 289.858 990.438 Q287.427 991.202 284.65 992.753 L284.65 988.031 Q287.474 986.897 289.927 986.318 Q292.381 985.739 294.418 985.739 Q299.789 985.739 302.983 988.425 Q306.177 991.11 306.177 995.6 Q306.177 997.73 305.367 999.651 Q304.58 1001.55 302.474 1004.14 Q301.895 1004.81 298.793 1008.03 Q295.691 1011.23 290.043 1016.99 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M316.224 986.364 L334.58 986.364 L334.58 990.3 L320.506 990.3 L320.506 998.772 Q321.524 998.425 322.543 998.263 Q323.562 998.077 324.58 998.077 Q330.367 998.077 333.747 1001.25 Q337.126 1004.42 337.126 1009.84 Q337.126 1015.42 333.654 1018.52 Q330.182 1021.6 323.862 1021.6 Q321.687 1021.6 319.418 1021.23 Q317.173 1020.85 314.765 1020.11 L314.765 1015.42 Q316.849 1016.55 319.071 1017.1 Q321.293 1017.66 323.77 1017.66 Q327.774 1017.66 330.112 1015.55 Q332.45 1013.45 332.45 1009.84 Q332.45 1006.23 330.112 1004.12 Q327.774 1002.01 323.77 1002.01 Q321.895 1002.01 320.02 1002.43 Q318.168 1002.85 316.224 1003.73 L316.224 986.364 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M356.339 989.443 Q352.728 989.443 350.899 993.008 Q349.094 996.55 349.094 1003.68 Q349.094 1010.79 350.899 1014.35 Q352.728 1017.89 356.339 1017.89 Q359.973 1017.89 361.779 1014.35 Q363.608 1010.79 363.608 1003.68 Q363.608 996.55 361.779 993.008 Q359.973 989.443 356.339 989.443 M356.339 985.739 Q362.149 985.739 365.205 990.346 Q368.284 994.929 368.284 1003.68 Q368.284 1012.41 365.205 1017.01 Q362.149 1021.6 356.339 1021.6 Q350.529 1021.6 347.45 1017.01 Q344.395 1012.41 344.395 1003.68 Q344.395 994.929 347.45 990.346 Q350.529 985.739 356.339 985.739 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M286.062 729.193 L304.418 729.193 L304.418 733.129 L290.344 733.129 L290.344 741.601 Q291.363 741.254 292.381 741.092 Q293.4 740.906 294.418 740.906 Q300.205 740.906 303.585 744.078 Q306.964 747.249 306.964 752.666 Q306.964 758.244 303.492 761.346 Q300.02 764.425 293.701 764.425 Q291.525 764.425 289.256 764.054 Q287.011 763.684 284.603 762.943 L284.603 758.244 Q286.687 759.378 288.909 759.934 Q291.131 760.49 293.608 760.49 Q297.613 760.49 299.951 758.383 Q302.288 756.277 302.288 752.666 Q302.288 749.054 299.951 746.948 Q297.613 744.841 293.608 744.841 Q291.733 744.841 289.858 745.258 Q288.006 745.675 286.062 746.554 L286.062 729.193 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M326.177 732.272 Q322.566 732.272 320.737 735.837 Q318.932 739.379 318.932 746.508 Q318.932 753.615 320.737 757.179 Q322.566 760.721 326.177 760.721 Q329.811 760.721 331.617 757.179 Q333.446 753.615 333.446 746.508 Q333.446 739.379 331.617 735.837 Q329.811 732.272 326.177 732.272 M326.177 728.568 Q331.987 728.568 335.043 733.175 Q338.122 737.758 338.122 746.508 Q338.122 755.235 335.043 759.841 Q331.987 764.425 326.177 764.425 Q320.367 764.425 317.288 759.841 Q314.233 755.235 314.233 746.508 Q314.233 737.758 317.288 733.175 Q320.367 728.568 326.177 728.568 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M356.339 732.272 Q352.728 732.272 350.899 735.837 Q349.094 739.379 349.094 746.508 Q349.094 753.615 350.899 757.179 Q352.728 760.721 356.339 760.721 Q359.973 760.721 361.779 757.179 Q363.608 753.615 363.608 746.508 Q363.608 739.379 361.779 735.837 Q359.973 732.272 356.339 732.272 M356.339 728.568 Q362.149 728.568 365.205 733.175 Q368.284 737.758 368.284 746.508 Q368.284 755.235 365.205 759.841 Q362.149 764.425 356.339 764.425 Q350.529 764.425 347.45 759.841 Q344.395 755.235 344.395 746.508 Q344.395 737.758 347.45 733.175 Q350.529 728.568 356.339 728.568 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M284.835 472.022 L307.057 472.022 L307.057 474.013 L294.511 506.582 L289.627 506.582 L301.432 475.958 L284.835 475.958 L284.835 472.022 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M316.224 472.022 L334.58 472.022 L334.58 475.958 L320.506 475.958 L320.506 484.43 Q321.524 484.083 322.543 483.921 Q323.562 483.735 324.58 483.735 Q330.367 483.735 333.747 486.907 Q337.126 490.078 337.126 495.495 Q337.126 501.073 333.654 504.175 Q330.182 507.254 323.862 507.254 Q321.687 507.254 319.418 506.883 Q317.173 506.513 314.765 505.772 L314.765 501.073 Q316.849 502.207 319.071 502.763 Q321.293 503.319 323.77 503.319 Q327.774 503.319 330.112 501.212 Q332.45 499.106 332.45 495.495 Q332.45 491.883 330.112 489.777 Q327.774 487.671 323.77 487.671 Q321.895 487.671 320.02 488.087 Q318.168 488.504 316.224 489.383 L316.224 472.022 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M356.339 475.101 Q352.728 475.101 350.899 478.666 Q349.094 482.208 349.094 489.337 Q349.094 496.444 350.899 500.008 Q352.728 503.55 356.339 503.55 Q359.973 503.55 361.779 500.008 Q363.608 496.444 363.608 489.337 Q363.608 482.208 361.779 478.666 Q359.973 475.101 356.339 475.101 M356.339 471.397 Q362.149 471.397 365.205 476.004 Q368.284 480.587 368.284 489.337 Q368.284 498.064 365.205 502.67 Q362.149 507.254 356.339 507.254 Q350.529 507.254 347.45 502.67 Q344.395 498.064 344.395 489.337 Q344.395 480.587 347.45 476.004 Q350.529 471.397 356.339 471.397 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M256.664 245.476 L264.303 245.476 L264.303 219.111 L255.992 220.777 L255.992 216.518 L264.256 214.851 L268.932 214.851 L268.932 245.476 L276.571 245.476 L276.571 249.411 L256.664 249.411 L256.664 245.476 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M296.015 217.93 Q292.404 217.93 290.576 221.495 Q288.77 225.037 288.77 232.166 Q288.77 239.273 290.576 242.837 Q292.404 246.379 296.015 246.379 Q299.65 246.379 301.455 242.837 Q303.284 239.273 303.284 232.166 Q303.284 225.037 301.455 221.495 Q299.65 217.93 296.015 217.93 M296.015 214.226 Q301.826 214.226 304.881 218.833 Q307.96 223.416 307.96 232.166 Q307.96 240.893 304.881 245.499 Q301.826 250.083 296.015 250.083 Q290.205 250.083 287.127 245.499 Q284.071 240.893 284.071 232.166 Q284.071 223.416 287.127 218.833 Q290.205 214.226 296.015 214.226 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M326.177 217.93 Q322.566 217.93 320.737 221.495 Q318.932 225.037 318.932 232.166 Q318.932 239.273 320.737 242.837 Q322.566 246.379 326.177 246.379 Q329.811 246.379 331.617 242.837 Q333.446 239.273 333.446 232.166 Q333.446 225.037 331.617 221.495 Q329.811 217.93 326.177 217.93 M326.177 214.226 Q331.987 214.226 335.043 218.833 Q338.122 223.416 338.122 232.166 Q338.122 240.893 335.043 245.499 Q331.987 250.083 326.177 250.083 Q320.367 250.083 317.288 245.499 Q314.233 240.893 314.233 232.166 Q314.233 223.416 317.288 218.833 Q320.367 214.226 326.177 214.226 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M356.339 217.93 Q352.728 217.93 350.899 221.495 Q349.094 225.037 349.094 232.166 Q349.094 239.273 350.899 242.837 Q352.728 246.379 356.339 246.379 Q359.973 246.379 361.779 242.837 Q363.608 239.273 363.608 232.166 Q363.608 225.037 361.779 221.495 Q359.973 217.93 356.339 217.93 M356.339 214.226 Q362.149 214.226 365.205 218.833 Q368.284 223.416 368.284 232.166 Q368.284 240.893 365.205 245.499 Q362.149 250.083 356.339 250.083 Q350.529 250.083 347.45 245.499 Q344.395 240.893 344.395 232.166 Q344.395 223.416 347.45 218.833 Q350.529 214.226 356.339 214.226 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip502)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,232.131 4017.76,232.131 \"/>\n<polyline clip-path=\"url(#clip502)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1250.45 456.554,1250.31 457.123,1250.09 457.691,1249.81 458.259,1249.47 458.828,1249.06 459.396,1248.59 459.964,1247.02 460.533,1246.43 461.101,1245.77 461.669,1245.04 462.238,1244.22 462.806,1243.31 463.375,1242.32 463.943,1241.22 464.511,1239 465.08,1237.72 465.648,1236.32 466.216,1234.8 466.785,1233.16 467.353,1230.38 467.921,1228.46 468.49,1224.36 469.058,1221.11 469.626,1217.7 470.195,1215.16 470.763,1211.38 471.331,1208.49 471.9,1205.36 472.468,1201.06 473.036,1197.55 473.605,1193.85 474.173,1188.92 474.741,1184.79 475.31,1180.49 475.878,1174.93 476.446,1169.19 477.015,1163.26 477.583,1157.2 478.152,1149.87 478.72,1144.47 479.288,1136.81 479.857,1130.99 480.425,1124.04 480.993,1115.76 481.562,1109.5 482.13,1101.98 482.698,1094.27 483.267,1084.41 483.835,1077.55 484.403,1067.29 484.972,1059.85 485.54,1052.16 486.108,1042.31 486.677,1034.33 487.245,1025.3 487.813,1014.99 488.382,1006.71 488.95,997.15 489.518,987.545 490.087,974.741 490.655,966.017 491.224,957.238 491.792,947.253 492.36,937.268 492.929,924.092 493.497,911.918 494.065,902.048 494.634,893.143 495.202,882.988 495.77,871.905 496.339,862.035 496.907,849.981 497.475,838.955 498.044,828.934 498.612,818.881 499.18,807.811 499.749,798.962 500.317,789.004 500.885,779.012 501.454,770.042 502.022,760.125 502.59,749.255 503.159,735.299 503.727,724.771 504.295,715.291 504.864,706.934 505.432,696.595 506.001,687.401 506.569,678.225 507.137,668.178 507.706,657.332 508.274,648.89 508.842,640.455 509.411,631.031 509.979,623.735 510.547,616.561 511.116,609.311 511.684,602.081 512.252,593.861 512.821,583.683 513.389,572.716 513.957,564.036 514.526,557.508 515.094,550.014 515.662,542.743 516.231,534.586 516.799,528.588 517.367,518.699 517.936,513.181 518.504,507.633 519.072,501.959 519.641,496.509 520.209,489.949 520.778,480.58 521.346,474.598 521.914,469.019 522.483,463.182 523.051,455.383 523.619,451.037 524.188,443.516 524.756,439.48 525.324,434.4 525.893,430.106 526.461,426.403 527.029,421.676 527.598,417.999 528.166,413.279 528.734,409.725 529.303,405.077 529.871,400.466 530.439,394.992 531.008,391.773 531.576,387.689 532.144,383.529 532.713,381.711 533.281,378.688 533.85,375.663 534.418,372.76 534.986,368.803 535.555,364.829 536.123,361.97 536.691,358.208 537.26,354.636 537.828,352.235 538.396,346.802 538.965,345.547 539.533,343.61 540.101,340.334 540.67,336.302 541.238,332.272 541.806,330.608 542.375,325.74 542.943,323.378 543.511,323.905 544.08,321.339 544.648,316.837 545.216,314.512 545.785,311.009 546.353,309.756 546.921,311.654 547.49,310.358 548.058,309.17 548.627,305.67 549.195,304.441 549.763,302.206 550.332,301.249 550.9,302.268 551.468,300.32 552.037,299.019 552.605,297.94 553.173,297.827 553.742,294.603 554.31,292.563 554.878,291.803 555.447,290.985 556.015,289.982 556.583,289.098 557.152,287.916 557.72,286.043 558.288,283.277 558.857,281.434 559.425,279.673 559.993,279.156 560.562,280.755 561.13,280.153 561.698,279.193 562.267,275.178 562.835,271.515 563.404,271.639 563.972,271.342 564.54,271.16 565.109,269.619 565.677,268.225 566.245,268.934 566.814,269.34 567.382,266.797 567.95,265.579 568.519,264.54 569.087,262.415 569.655,262.256 570.224,265.559 570.792,263.028 571.36,260.887 571.929,260.757 572.497,259.54 573.065,257.402 573.634,257.398 574.202,259.448 574.77,257.429 575.339,257.398 575.907,256.519 576.476,255.364 577.044,256.606 577.612,258.838 578.181,256.627 578.749,255.837 579.317,255.682 579.886,255.674 580.454,256.628 581.022,256.473 581.591,256.225 582.159,257.934 582.727,258.508 583.296,258.322 583.864,256.894 584.432,255.525 585.001,256.461 585.569,255.153 586.137,254.889 586.706,255.616 587.274,255.159 587.842,255.795 588.411,253.09 588.979,251.862 589.547,250.818 590.116,249.729 590.684,251.734 591.253,251.416 591.821,252.211 592.389,251.963 592.958,251.805 593.526,251.737 594.094,252.325 594.663,249.994 595.231,246.813 595.799,246.74 596.368,247.602 596.936,245.54 597.504,245.506 598.073,245.747 598.641,243.709 599.209,243.858 599.778,244.079 600.346,244.2 600.914,243.623 601.483,240.73 602.051,240.177 602.619,241.417 603.188,240.406 603.756,239.877 604.325,238.092 604.893,237.711 605.461,239.976 606.03,239.509 606.598,236.959 607.166,239.544 607.735,238.904 608.303,239.333 608.871,237.522 609.44,238.128 610.008,239.687 610.576,238.239 611.145,239.961 611.713,239.21 612.281,239.823 612.85,241.352 613.418,240.461 613.986,239.731 614.555,238.946 615.123,238.241 615.691,238.663 616.26,237.874 616.828,239.458 617.396,236.665 617.965,237.162 618.533,237.688 619.102,239.066 619.67,241.259 620.238,241.213 620.807,241.417 621.375,242.585 621.943,241.594 622.512,239.483 623.08,235.678 623.648,234.111 624.217,232.902 624.785,232.719 625.353,233.579 625.922,235.409 626.49,234.099 627.058,234.852 627.627,233.387 628.195,232.373 628.763,234.104 629.332,234.871 629.9,232.411 630.468,232.173 631.037,235.114 631.605,234.701 632.173,234.217 632.742,235.118 633.31,235.89 633.879,236.356 634.447,236.95 635.015,237.494 635.584,237.997 636.152,237.357 636.72,238.727 637.289,237.923 637.857,238.268 638.425,237.601 638.994,239.133 639.562,239.553 640.13,239.703 640.699,238.719 641.267,239.874 641.835,239.117 642.404,240.401 642.972,239.589 643.54,240.732 644.109,237.864 644.677,235.935 645.245,235.595 645.814,236.183 646.382,236.84 646.951,239.181 647.519,240.45 648.087,243.795 648.656,243.723 649.224,244.335 649.792,245.438 650.361,247.21 650.929,246.846 651.497,246.474 652.066,246.007 652.634,244.79 653.202,245.653 653.771,245.291 654.339,244.942 654.907,244.61 655.476,247.459 656.044,247.225 656.612,245.724 657.181,246.347 657.749,244.917 658.317,242.448 658.886,241.108 659.454,238.756 660.022,238.627 660.591,237.589 661.159,237.698 661.728,241.087 662.296,239.911 662.864,241.006 663.433,241.803 664.001,240.573 664.569,241.564 665.138,243.311 665.706,244.163 666.274,243.493 666.843,242.929 667.411,239.522 667.979,239.445 668.548,238.332 669.116,237.307 669.684,238.336 670.253,238.343 670.821,237.136 671.389,235.144 671.958,233.45 672.526,234.762 673.094,233.92 673.663,234.302 674.231,234.342 674.799,235.532 675.368,233.664 675.936,233.944 676.505,236.181 677.073,237.201 677.641,235.163 678.21,235.345 678.778,235.527 679.346,235.725 679.915,235.711 680.483,234.653 681.051,235.782 681.62,237.546 682.188,238.512 682.756,237.138 683.325,240.222 683.893,240.002 684.461,238.708 685.03,238.561 685.598,237.425 686.166,238.547 686.735,238.286 687.303,237.106 687.871,239.09 688.44,239.009 689.008,237.538 689.577,237.376 690.145,235.1 690.713,236.22 691.282,236.117 691.85,236.176 692.418,237.189 692.987,236.115 693.555,234.237 694.123,234.395 694.692,234.552 695.26,234.809 695.828,230.666 696.397,230.949 696.965,229.225 697.533,228.593 698.102,226.887 698.67,226.582 699.238,224.187 699.807,225.942 700.375,226.617 700.943,229.289 701.512,228.787 702.08,227.248 702.648,227.953 703.217,228.571 703.785,229.113 704.354,229.684 704.922,229.019 705.49,229.517 706.059,229.035 706.627,231.577 707.195,229.864 707.764,230.391 708.332,232.047 708.9,231.457 709.469,231.933 710.037,231.2 710.605,229.584 711.174,231.232 711.742,230.601 712.31,232.146 712.879,230.245 713.447,230.826 714.015,230.991 714.584,233.226 715.152,233.555 715.72,234.79 716.289,236.086 716.857,236.098 717.425,235.276 717.994,235.328 718.562,235.518 719.131,234.815 719.699,237.137 720.267,236.995 720.836,237.085 721.404,236.06 721.972,234.965 722.541,238.074 723.109,237.032 723.677,236.914 724.246,237.06 724.814,236.909 725.382,235.77 725.951,236.704 726.519,236.755 727.087,236.718 727.656,238.486 728.224,238.508 728.792,238.486 729.361,236.362 729.929,234.367 730.497,234.619 731.066,234.619 731.634,236.712 732.203,236.506 732.771,235.571 733.339,236.695 733.908,236.814 734.476,236.717 735.044,236.575 735.613,236.718 736.181,236.641 736.749,236.587 737.318,235.476 737.886,234.407 738.454,234.461 739.023,237.655 739.591,236.544 740.159,237.511 740.728,239.4 741.296,238.133 741.864,235.805 742.433,236.941 743.001,235.966 743.569,237.847 744.138,239.68 744.706,239.319 745.274,238.071 745.843,236.843 746.411,237.845 746.98,235.494 747.548,235.338 748.116,234.079 748.685,235.122 749.253,235.072 749.821,233.949 750.39,234.993 750.958,234.954 751.526,234.802 752.095,233.735 752.663,232.655 753.231,233.018 753.8,232.982 754.368,232.228 754.936,232.326 755.505,232.319 756.073,232.183 756.641,231.22 757.21,231.25 757.778,232.611 758.346,231.663 758.915,230.793 759.483,229.035 760.052,227.378 760.62,228.872 761.188,232.245 761.757,233.351 762.325,233.38 762.893,232.366 763.462,231.492 764.03,231.742 764.598,232.115 765.167,232.157 765.735,231.372 766.303,230.518 766.872,231.881 767.44,232.318 768.008,230.639 768.577,232.991 769.145,234.19 769.713,234.313 770.282,233.525 770.85,233.646 771.418,233.61 771.987,232.62 772.555,233.659 773.123,234.616 773.692,233.813 774.26,235.77 774.829,232.652 775.397,232.681 775.965,234.936 776.534,236.749 777.102,236.66 777.67,235.442 778.239,237.27 778.807,234.947 779.375,233.819 779.944,233.755 780.512,233.571 781.08,231.494 781.649,230.753 782.217,232.062 782.785,230.186 783.354,229.343 783.922,227.705 784.49,227.05 785.059,227.528 785.627,226.963 786.195,228.629 786.764,230.766 787.332,231.139 787.9,232.3 788.469,232.351 789.037,232.563 789.606,232.635 790.174,233.61 790.742,232.691 791.311,232.911 791.879,233.057 792.447,233.081 793.016,232.295 793.584,232.308 794.152,232.557 794.721,233.841 795.289,233.917 795.857,233.97 796.426,233.914 796.994,234.979 797.562,234.751 798.131,236.748 798.699,237.5 799.267,238.097 799.836,236.813 800.404,235.634 800.972,232.659 801.541,231.676 802.109,231.859 802.678,232.782 803.246,234.062 803.814,234.007 804.383,233.946 804.951,235.976 805.519,237.984 806.088,236.882 806.656,237.789 807.224,238.651 807.793,239.121 808.361,239.771 808.929,239.488 809.498,238.019 810.066,235.541 810.634,235.486 811.203,235.309 811.771,235.418 812.339,235.193 812.908,236.373 813.476,235.245 814.044,233.124 814.613,231.299 815.181,232.58 815.749,234.735 816.318,236.906 816.886,235.704 817.455,233.653 818.023,235.461 818.591,235.336 819.16,235.162 819.728,234.985 820.296,234.75 820.865,235.485 821.433,236.206 822.001,237.008 822.57,236.71 823.138,235.27 823.706,235.044 824.275,234.862 824.843,234.908 825.411,234.716 825.98,234.553 826.548,235.296 827.116,235.235 827.685,236.01 828.253,234.559 828.821,232.379 829.39,231.384 829.958,231.481 830.526,231.405 831.095,231.41 831.663,231.701 832.232,230.734 832.8,230.98 833.368,231.236 833.937,230.39 834.505,228.668 835.073,229.175 835.642,228.201 836.21,230.438 836.778,233.77 837.347,231.432 837.915,234.654 838.483,234.346 839.052,231.889 839.62,232.03 840.188,232.995 840.757,232.808 841.325,231.613 841.893,231.583 842.462,234.002 843.03,231.928 843.598,228.958 844.167,227.206 844.735,227.723 845.304,228.978 845.872,231.363 846.44,229.473 847.009,228.688 847.577,228.91 848.145,231.294 848.714,232.619 849.282,233.909 849.85,233.769 850.419,235.81 850.987,236.756 851.555,237.556 852.124,236.215 852.692,235.087 853.26,236.073 853.829,236.046 854.397,235.64 854.965,235.137 855.534,233.056 856.102,231.905 856.67,228.043 857.239,229.47 857.807,229.528 858.375,229.879 858.944,229.038 859.512,228.39 860.081,229.758 860.649,231.372 861.217,232.546 861.786,232.71 862.354,230.839 862.922,232.16 863.491,233.316 864.059,234.221 864.627,232.906 865.196,234.057 865.764,232.055 866.332,230.881 866.901,231.176 867.469,230.425 868.037,229.7 868.606,228.787 869.174,229.081 869.742,231.527 870.311,231.558 870.879,230.736 871.447,229.087 872.016,228.405 872.584,228.893 873.152,229.191 873.721,231.684 874.289,231.985 874.858,233.183 875.426,234.205 875.994,234.306 876.563,235.29 877.131,236.186 877.699,232.917 878.268,232.855 878.836,232.816 879.404,233.734 879.973,233.71 880.541,233.891 881.109,233.612 881.678,233.497 882.246,233.353 882.814,233.396 883.383,235.607 883.951,236.455 884.519,237.303 885.088,237.065 885.656,235.701 886.224,236.65 886.793,235.23 887.361,236.86 887.93,234.763 888.498,235.562 889.066,235.263 889.635,236.316 890.203,236.191 890.771,237.873 891.34,238.399 891.908,239.982 892.476,239.425 893.045,240.907 893.613,239.21 894.181,240.732 894.75,240.155 895.318,236.371 895.886,233.031 896.455,234.11 897.023,234.012 897.591,233.743 898.16,233.682 898.728,232.632 899.296,232.665 899.865,233.554 900.433,235.539 901.001,235.098 901.57,235.88 902.138,235.638 902.707,234.168 903.275,233.928 903.843,234.627 904.412,233.303 904.98,232.199 905.548,232.108 906.117,233.155 906.685,231.927 907.253,230.729 907.822,229.826 908.39,226.727 908.958,226.014 909.527,226.433 910.095,226.895 910.663,227.162 911.232,227.661 911.8,228.856 912.368,228.24 912.937,230.588 913.505,231.807 914.073,232.975 914.642,231.941 915.21,233.117 915.779,232.039 916.347,233.105 916.915,232.057 917.484,232.333 918.052,231.239 918.62,230.22 919.189,229.449 919.757,228.475 920.325,227.594 920.894,224.714 921.462,225.228 922.03,225.726 922.599,226.133 923.167,227.755 923.735,229.37 924.304,230.604 924.872,231.838 925.44,231.807 926.009,232.064 926.577,232.089 927.145,231.148 927.714,230.154 928.282,230.539 928.85,230.643 929.419,229.874 929.987,231.099 930.556,230.241 931.124,229.393 931.692,232.883 932.261,234.179 932.829,235.167 933.397,236.122 933.966,234.82 934.534,234.609 935.102,233.343 935.671,232.24 936.239,231.232 936.807,230.428 937.376,231.67 937.944,232.844 938.512,232.865 939.081,232.845 939.649,234.011 940.217,233.024 940.786,232.163 941.354,231.246 941.922,231.36 942.491,231.611 943.059,230.689 943.627,230.805 944.196,230.028 944.764,231.371 945.333,231.405 945.901,232.434 946.469,232.538 947.038,232.596 947.606,229.789 948.174,231.179 948.743,231.347 949.311,231.534 949.879,231.711 950.448,234.035 951.016,234.208 951.584,232.993 952.153,230.909 952.721,232.026 953.289,233.997 953.858,234.096 954.426,233.008 954.994,232.074 955.563,233.092 956.131,235.243 956.699,235.129 957.268,234.83 957.836,234.771 958.405,235.849 958.973,237.791 959.541,238.677 960.11,238.069 960.678,238.836 961.246,237.343 961.815,237.12 962.383,235.748 962.951,234.499 963.52,231.062 964.088,233.19 964.656,233.149 965.225,233.121 965.793,232.096 966.361,229.256 966.93,230.642 967.498,229.709 968.066,227.862 968.635,227.269 969.203,226.857 969.771,228.3 970.34,228.401 970.908,228.716 971.476,227.915 972.045,229.434 972.613,228.587 973.182,228.799 973.75,232.183 974.318,231.413 974.887,233.569 975.455,233.498 976.023,233.489 976.592,233.399 977.16,234.418 977.728,233.602 978.297,233.782 978.865,233.622 979.433,233.476 980.002,235.353 980.57,236.255 981.138,236.263 981.707,237.041 982.275,238.526 982.843,237.013 983.412,235.711 983.98,235.516 984.548,235.406 985.117,235.157 985.685,233.881 986.253,233.704 986.822,234.311 987.39,234.065 987.959,235.939 988.527,234.823 989.095,234.507 989.664,234.271 990.232,234.115 990.8,233.904 991.369,235.836 991.937,237.416 992.505,236.814 993.074,236.404 993.642,234.137 994.21,232.061 994.779,231.037 995.347,230.031 995.915,229.963 996.484,227.925 997.052,227.312 997.62,226.518 998.189,227.95 998.757,227.205 999.325,227.698 999.894,228.875 1000.46,229.245 1001.03,230.463 1001.6,230.585 1002.17,230.658 1002.74,232.801 1003.3,233.661 1003.87,233.582 1004.44,233.476 1005.01,232.247 1005.58,232.086 1006.15,233.061 1006.71,233.007 1007.28,236.861 1007.85,235.452 1008.42,233.993 1008.99,236.749 1009.56,237.515 1010.12,236.982 1010.69,235.44 1011.26,239.029 1011.83,239.512 1012.4,239.085 1012.97,236.424 1013.53,235.896 1014.1,235.793 1014.67,234.511 1015.24,231.029 1015.81,231.99 1016.38,230.792 1016.94,231.708 1017.51,232.788 1018.08,231.566 1018.65,232.604 1019.22,233.659 1019.79,234.79 1020.35,233.491 1020.92,233.485 1021.49,230.335 1022.06,228.464 1022.63,228.821 1023.2,230.236 1023.76,229.391 1024.33,227.393 1024.9,226.483 1025.47,226.725 1026.04,228.367 1026.61,230.819 1027.17,230.98 1027.74,229.252 1028.31,230.607 1028.88,229.517 1029.45,229.597 1030.02,230.569 1030.58,229.924 1031.15,228.982 1031.72,229.156 1032.29,228.249 1032.86,229.64 1033.43,229.851 1033.99,228.961 1034.56,227.022 1035.13,227.336 1035.7,225.643 1036.27,226.174 1036.84,230.929 1037.4,229.048 1037.97,230.413 1038.54,228.488 1039.11,226.777 1039.68,226.252 1040.25,225.722 1040.81,225.1 1041.38,224.942 1041.95,224.484 1042.52,225.212 1043.09,222.912 1043.66,225.735 1044.22,228.157 1044.79,228.453 1045.36,228.893 1045.93,230.214 1046.5,232.295 1047.07,232.504 1047.63,232.796 1048.2,231.665 1048.77,230.793 1049.34,229.891 1049.91,231.15 1050.48,232.251 1051.05,231.306 1051.61,232.636 1052.18,231.833 1052.75,231.005 1053.32,231.289 1053.89,230.365 1054.46,230.605 1055.02,229.053 1055.59,229.369 1056.16,231.804 1056.73,231.87 1057.3,231.9 1057.87,235.004 1058.43,234.832 1059,234.817 1059.57,236.117 1060.14,236.996 1060.71,234.678 1061.28,234.723 1061.84,234.807 1062.41,232.618 1062.98,233.558 1063.55,234.447 1064.12,235.249 1064.69,235.08 1065.25,236.128 1065.82,233.851 1066.39,235.763 1066.96,236.538 1067.53,238.042 1068.1,236.801 1068.66,236.56 1069.23,233.308 1069.8,234.343 1070.37,235.139 1070.94,236.802 1071.51,237.621 1072.07,236.239 1072.64,236.083 1073.21,238.096 1073.78,236.514 1074.35,236.292 1074.92,235.936 1075.48,233.777 1076.05,234.687 1076.62,234.681 1077.19,233.365 1077.76,230.977 1078.33,232.014 1078.89,233.12 1079.46,231.256 1080.03,231.417 1080.6,233.589 1081.17,233.466 1081.74,234.461 1082.3,234.078 1082.87,233.003 1083.44,228.897 1084.01,230.055 1084.58,233.539 1085.15,233.547 1085.71,234.514 1086.28,232.461 1086.85,230.199 1087.42,229.744 1087.99,228.948 1088.56,230.441 1089.12,230.459 1089.69,230.633 1090.26,230.793 1090.83,233.007 1091.4,233.837 1091.97,235.892 1092.53,235.606 1093.1,237.522 1093.67,238.335 1094.24,237.014 1094.81,234.491 1095.38,234.295 1095.94,234.223 1096.51,233.954 1097.08,236.024 1097.65,236.787 1098.22,236.338 1098.79,232.835 1099.35,230.82 1099.92,230.761 1100.49,231.768 1101.06,232.868 1101.63,232.626 1102.2,232.567 1102.76,232.686 1103.33,230.595 1103.9,230.775 1104.47,230.875 1105.04,231.005 1105.61,232.067 1106.17,234.116 1106.74,236.124 1107.31,236.853 1107.88,236.864 1108.45,236.393 1109.02,236.009 1109.58,235.686 1110.15,234.414 1110.72,234.056 1111.29,234.967 1111.86,232.713 1112.43,230.462 1112.99,230.259 1113.56,230.279 1114.13,230.586 1114.7,231.73 1115.27,234.722 1115.84,233.409 1116.4,234.085 1116.97,232.9 1117.54,234.603 1118.11,234.287 1118.68,233.877 1119.25,232.669 1119.81,233.689 1120.38,233.707 1120.95,232.459 1121.52,234.576 1122.09,234.233 1122.66,233.029 1123.23,233.999 1123.79,233.809 1124.36,233.581 1124.93,234.167 1125.5,232.987 1126.07,231.089 1126.64,231.171 1127.2,231.161 1127.77,233.061 1128.34,230.94 1128.91,228.981 1129.48,229.127 1130.05,228.366 1130.61,228.526 1131.18,228.766 1131.75,231.035 1132.32,232.031 1132.89,229.903 1133.46,231.928 1134.02,231.683 1134.59,232.769 1135.16,231.574 1135.73,230.551 1136.3,231.551 1136.87,230.205 1137.43,232.502 1138,231.645 1138.57,232.819 1139.14,233.819 1139.71,235.756 1140.28,236.449 1140.84,237.024 1141.41,236.586 1141.98,236.162 1142.55,231.736 1143.12,232.715 1143.69,232.524 1144.25,233.681 1144.82,237.698 1145.39,236.386 1145.96,235.054 1146.53,235.884 1147.1,234.297 1147.66,235.079 1148.23,234.679 1148.8,232.58 1149.37,231.565 1149.94,231.425 1150.51,231.438 1151.07,231.506 1151.64,230.398 1152.21,229.334 1152.78,229.268 1153.35,230.488 1153.92,231.435 1154.48,232.245 1155.05,233.358 1155.62,231.136 1156.19,231.037 1156.76,231.125 1157.33,231.056 1157.89,230.277 1158.46,231.329 1159.03,230.553 1159.6,227.706 1160.17,225.864 1160.74,227.186 1161.3,229.68 1161.87,230.917 1162.44,232.278 1163.01,232.125 1163.58,232.014 1164.15,233.098 1164.71,231.922 1165.28,231.165 1165.85,230.127 1166.42,229.306 1166.99,232.401 1167.56,233.452 1168.12,229.291 1168.69,231.558 1169.26,231.748 1169.83,232.598 1170.4,231.455 1170.97,230.61 1171.53,229.877 1172.1,228.01 1172.67,228.22 1173.24,228.425 1173.81,228.753 1174.38,227.087 1174.94,227.303 1175.51,227.591 1176.08,229.029 1176.65,229.312 1177.22,230.831 1177.79,234.008 1178.35,237.936 1178.92,238.711 1179.49,238.148 1180.06,238.773 1180.63,237.073 1181.2,236.739 1181.76,235.268 1182.33,234.942 1182.9,235.791 1183.47,235.584 1184.04,236.34 1184.61,237.905 1185.17,236.306 1185.74,235.173 1186.31,233.808 1186.88,234.596 1187.45,233.297 1188.02,232.97 1188.58,232.653 1189.15,232.648 1189.72,235.419 1190.29,234.062 1190.86,233.992 1191.43,236.768 1192,237.237 1192.56,234.923 1193.13,235.711 1193.7,237.385 1194.27,236.922 1194.84,237.345 1195.41,237.883 1195.97,236.299 1196.54,236.977 1197.11,236.596 1197.68,236.094 1198.25,230.481 1198.82,228.366 1199.38,229.47 1199.95,228.467 1200.52,229.517 1201.09,227.437 1201.66,227.578 1202.23,226.69 1202.79,227.164 1203.36,226.348 1203.93,227.45 1204.5,228.691 1205.07,228.919 1205.64,230.146 1206.2,228.428 1206.77,229.769 1207.34,231.056 1207.91,230.3 1208.48,231.456 1209.05,233.49 1209.61,233.362 1210.18,233.277 1210.75,233.305 1211.32,232.16 1211.89,230.967 1212.46,231.073 1213.02,228.955 1213.59,230.134 1214.16,231.029 1214.73,229.918 1215.3,231.122 1215.87,229.028 1216.43,230.263 1217,231.342 1217.57,233.179 1218.14,232.209 1218.71,230.949 1219.28,230.676 1219.84,231.706 1220.41,231.534 1220.98,227.627 1221.55,228.769 1222.12,232.107 1222.69,231.099 1223.25,231.118 1223.82,232.373 1224.39,231.171 1224.96,229.901 1225.53,228.932 1226.1,229.234 1226.66,229.508 1227.23,230.699 1227.8,232.038 1228.37,232.042 1228.94,229.955 1229.51,229.982 1230.07,232.285 1230.64,232.178 1231.21,232.076 1231.78,232.206 1232.35,232.345 1232.92,232.6 1233.48,230.511 1234.05,231.676 1234.62,230.463 1235.19,230.539 1235.76,229.563 1236.33,228.737 1236.89,226.947 1237.46,225.294 1238.03,225.678 1238.6,226.144 1239.17,226.576 1239.74,225.963 1240.3,227.543 1240.87,227.895 1241.44,230.199 1242.01,228.252 1242.58,228.746 1243.15,227.951 1243.71,228.258 1244.28,227.538 1244.85,227.985 1245.42,228.165 1245.99,226.441 1246.56,228.05 1247.12,229.423 1247.69,229.567 1248.26,229.829 1248.83,231.161 1249.4,229.17 1249.97,229.453 1250.53,227.588 1251.1,229.915 1251.67,229.206 1252.24,230.464 1252.81,231.818 1253.38,232.122 1253.94,232.258 1254.51,231.266 1255.08,232.432 1255.65,234.649 1256.22,233.653 1256.79,231.555 1257.35,232.724 1257.92,232.98 1258.49,232.104 1259.06,230.224 1259.63,231.429 1260.2,231.589 1260.76,231.646 1261.33,231.759 1261.9,230.947 1262.47,230.242 1263.04,232.625 1263.61,232.513 1264.18,231.754 1264.74,232.987 1265.31,233.158 1265.88,232.189 1266.45,231.002 1267.02,231.176 1267.59,234.217 1268.15,234.354 1268.72,235.345 1269.29,235.417 1269.86,234.046 1270.43,233.818 1271,233.945 1271.56,232.593 1272.13,231.609 1272.7,229.814 1273.27,230.272 1273.84,232.423 1274.41,234.789 1274.97,233.843 1275.54,232.748 1276.11,232.693 1276.68,232.87 1277.25,233.81 1277.82,232.587 1278.38,233.658 1278.95,233.473 1279.52,234.479 1280.09,234.417 1280.66,235.631 1281.23,235.347 1281.79,237.341 1282.36,236.087 1282.93,239.021 1283.5,238.614 1284.07,238.201 1284.64,235.85 1285.2,235.804 1285.77,234.281 1286.34,234.204 1286.91,235.419 1287.48,235.208 1288.05,235.12 1288.61,236.048 1289.18,239.101 1289.75,237.616 1290.32,240.219 1290.89,239.54 1291.46,238.665 1292.02,238.101 1292.59,238.537 1293.16,237.992 1293.73,237.382 1294.3,236.804 1294.87,234.29 1295.43,234.963 1296,232.497 1296.57,232.463 1297.14,232.496 1297.71,233.281 1298.28,231.916 1298.84,232.994 1299.41,232.842 1299.98,234.71 1300.55,233.534 1301.12,233.291 1301.69,232.191 1302.25,232.198 1302.82,232.207 1303.39,234.085 1303.96,234.78 1304.53,233.338 1305.1,233.319 1305.66,231.181 1306.23,231.388 1306.8,231.419 1307.37,230.247 1307.94,231.288 1308.51,233.529 1309.07,232.232 1309.64,233.162 1310.21,230.975 1310.78,231.096 1311.35,231.244 1311.92,232.284 1312.48,236.387 1313.05,231.943 1313.62,231.12 1314.19,228.048 1314.76,228.185 1315.33,227.407 1315.89,227.016 1316.46,226.344 1317.03,224.742 1317.6,226.096 1318.17,226.637 1318.74,227.161 1319.3,229.54 1319.87,228.707 1320.44,228.002 1321.01,227.313 1321.58,224.429 1322.15,225.931 1322.71,226.058 1323.28,226.532 1323.85,227.977 1324.42,226.239 1324.99,226.564 1325.56,227.021 1326.12,226.505 1326.69,226.077 1327.26,226.662 1327.83,229.102 1328.4,228.447 1328.97,226.547 1329.53,229.244 1330.1,229.516 1330.67,229.777 1331.24,228.98 1331.81,230.568 1332.38,231.995 1332.94,233.255 1333.51,232.053 1334.08,233.283 1334.65,232.481 1335.22,233.542 1335.79,234.523 1336.36,237.349 1336.92,233.982 1337.49,231.938 1338.06,231.957 1338.63,232.347 1339.2,232.353 1339.77,231.498 1340.33,229.597 1340.9,230.007 1341.47,229.099 1342.04,229.494 1342.61,228.764 1343.18,230.064 1343.74,230.079 1344.31,230.319 1344.88,230.509 1345.45,229.85 1346.02,229.108 1346.59,229.466 1347.15,229.915 1347.72,232.372 1348.29,232.532 1348.86,231.582 1349.43,231.68 1350,229.835 1350.56,229.187 1351.13,229.518 1351.7,230.727 1352.27,232.073 1352.84,233.044 1353.41,232.946 1353.97,232.025 1354.54,236.214 1355.11,236.093 1355.68,239.033 1356.25,237.652 1356.82,237.547 1357.38,237.204 1357.95,235.626 1358.52,234.567 1359.09,233.533 1359.66,232.564 1360.23,231.6 1360.79,231.89 1361.36,231.953 1361.93,234.334 1362.5,233.48 1363.07,234.509 1363.64,234.312 1364.2,234.129 1364.77,235.963 1365.34,236.558 1365.91,235.283 1366.48,230.927 1367.05,232.051 1367.61,232.116 1368.18,232.17 1368.75,231.262 1369.32,232.659 1369.89,230.832 1370.46,232.971 1371.02,229.905 1371.59,230.196 1372.16,231.342 1372.73,228.459 1373.3,228.941 1373.87,231.461 1374.43,233.593 1375,234.566 1375.57,234.358 1376.14,235.352 1376.71,237.4 1377.28,237.85 1377.84,236.619 1378.41,235.276 1378.98,235.079 1379.55,235.738 1380.12,234.393 1380.69,232.249 1381.25,231.232 1381.82,233.275 1382.39,234.223 1382.96,235.368 1383.53,234.159 1384.1,233.99 1384.66,235.82 1385.23,238.572 1385.8,237.911 1386.37,235.573 1386.94,233.122 1387.51,234.108 1388.07,234.911 1388.64,235.931 1389.21,235.479 1389.78,235.291 1390.35,235.924 1390.92,234.605 1391.48,231.334 1392.05,230.364 1392.62,230.638 1393.19,231.838 1393.76,231.925 1394.33,232.079 1394.89,230.165 1395.46,229.255 1396.03,229.541 1396.6,230.709 1397.17,231.935 1397.74,231.648 1398.3,231.691 1398.87,229.699 1399.44,229.978 1400.01,231.33 1400.58,230.166 1401.15,230.462 1401.71,230.461 1402.28,230.747 1402.85,232.014 1403.42,233.042 1403.99,232.983 1404.56,232.885 1405.13,232.805 1405.69,234.742 1406.26,235.594 1406.83,235.421 1407.4,237.473 1407.97,238.077 1408.54,239.541 1409.1,241.083 1409.67,241.498 1410.24,241.938 1410.81,240.084 1411.38,238.661 1411.95,238.064 1412.51,235.593 1413.08,234.282 1413.65,236.113 1414.22,235.744 1414.79,235.345 1415.36,234.792 1415.92,234.568 1416.49,232.315 1417.06,233.312 1417.63,233.035 1418.2,232.616 1418.77,232.634 1419.33,232.347 1419.9,231.19 1420.47,233.19 1421.04,233.114 1421.61,232.919 1422.18,233.729 1422.74,232.303 1423.31,232.179 1423.88,232.123 1424.45,231.858 1425.02,232.499 1425.59,231.311 1426.15,231.313 1426.72,230.038 1427.29,229.013 1427.86,227.194 1428.43,227.366 1429,227.581 1429.56,227.918 1430.13,227.355 1430.7,226.554 1431.27,225.933 1431.84,227.976 1432.41,230.219 1432.97,230.517 1433.54,231.482 1434.11,231.45 1434.68,233.49 1435.25,232.374 1435.82,234.327 1436.38,233.829 1436.95,233.618 1437.52,234.401 1438.09,235.373 1438.66,235.211 1439.23,235.924 1439.79,235.7 1440.36,234.313 1440.93,234.103 1441.5,232.025 1442.07,230.018 1442.64,227.934 1443.2,229.228 1443.77,227.16 1444.34,226.567 1444.91,227.023 1445.48,229.19 1446.05,228.182 1446.61,228.426 1447.18,228.699 1447.75,230.717 1448.32,230.795 1448.89,231.878 1449.46,232.785 1450.02,231.586 1450.59,230.643 1451.16,231.769 1451.73,231.907 1452.3,231.868 1452.87,231.844 1453.43,229.765 1454,230.951 1454.57,229.856 1455.14,229.987 1455.71,229.059 1456.28,230.4 1456.84,229.226 1457.41,230.296 1457.98,231.543 1458.55,230.506 1459.12,231.387 1459.69,231.433 1460.25,233.626 1460.82,233.444 1461.39,233.334 1461.96,232.13 1462.53,231.039 1463.1,230.817 1463.66,231.803 1464.23,232.072 1464.8,231.004 1465.37,231.158 1465.94,230.414 1466.51,228.416 1467.07,228.766 1467.64,230.031 1468.21,230.034 1468.78,230.137 1469.35,230.268 1469.92,230.422 1470.48,232.669 1471.05,230.897 1471.62,231.052 1472.19,231.236 1472.76,230.361 1473.33,228.642 1473.89,232.023 1474.46,231.953 1475.03,232.989 1475.6,232.892 1476.17,230.649 1476.74,230.908 1477.31,230.06 1477.87,231.149 1478.44,229.132 1479.01,230.465 1479.58,229.459 1480.15,228.569 1480.72,227.683 1481.28,226.947 1481.85,227.291 1482.42,226.846 1482.99,227.467 1483.56,227.927 1484.13,228.328 1484.69,227.811 1485.26,228.148 1485.83,228.5 1486.4,227.801 1486.97,227.887 1487.54,229.27 1488.1,229.522 1488.67,230.83 1489.24,233.009 1489.81,231.07 1490.38,232.425 1490.95,231.512 1491.51,231.698 1492.08,228.616 1492.65,232.27 1493.22,230.278 1493.79,229.645 1494.36,229.963 1494.92,230.135 1495.49,229.375 1496.06,228.556 1496.63,229.981 1497.2,230.203 1497.77,230.39 1498.33,232.954 1498.9,234.609 1499.47,232.488 1500.04,231.443 1500.61,232.621 1501.18,232.496 1501.74,233.39 1502.31,233.344 1502.88,233.278 1503.45,232.243 1504.02,232.164 1504.59,231.258 1505.15,236.561 1505.72,236.326 1506.29,237.113 1506.86,237.758 1507.43,237.469 1508,236.152 1508.56,236.741 1509.13,237.588 1509.7,236.273 1510.27,234.841 1510.84,233.825 1511.41,234.932 1511.97,234.012 1512.54,233.911 1513.11,236.887 1513.68,236.596 1514.25,238.61 1514.82,236.386 1515.38,235.235 1515.95,236.162 1516.52,235.917 1517.09,237.858 1517.66,236.43 1518.23,236.314 1518.79,236.096 1519.36,236.9 1519.93,237.398 1520.5,236.884 1521.07,236.433 1521.64,235.992 1522.2,234.613 1522.77,236.378 1523.34,238.144 1523.91,237.616 1524.48,239.337 1525.05,238.761 1525.61,238.186 1526.18,236.759 1526.75,235.198 1527.32,235.103 1527.89,234.711 1528.46,234.642 1529.02,238.473 1529.59,239.936 1530.16,240.041 1530.73,238.544 1531.3,238.941 1531.87,237.205 1532.43,235.592 1533,235.262 1533.57,234.803 1534.14,235.757 1534.71,236.315 1535.28,235.868 1535.84,237.484 1536.41,233.814 1536.98,233.59 1537.55,233.456 1538.12,233.941 1538.69,234.716 1539.25,235.535 1539.82,234.315 1540.39,235.089 1540.96,235.667 1541.53,236.18 1542.1,235.637 1542.66,236.235 1543.23,236.525 1543.8,237.817 1544.37,236.095 1544.94,233.655 1545.51,232.185 1546.08,232.184 1546.64,231.89 1547.21,229.532 1547.78,228.643 1548.35,228.696 1548.92,226.622 1549.49,224.773 1550.05,225.063 1550.62,224.625 1551.19,226.081 1551.76,227.119 1552.33,228.491 1552.9,228.618 1553.46,228.834 1554.03,229.943 1554.6,229.919 1555.17,229.77 1555.74,228.849 1556.31,228.819 1556.87,227.87 1557.44,226.235 1558.01,228.785 1558.58,230.817 1559.15,228.913 1559.72,228.001 1560.28,227.02 1560.85,224.265 1561.42,223.744 1561.99,225.54 1562.56,225.161 1563.13,225.706 1563.69,228.103 1564.26,225.147 1564.83,226.686 1565.4,227.191 1565.97,227.375 1566.54,225.618 1567.1,227.015 1567.67,225.603 1568.24,229.054 1568.81,229.254 1569.38,231.562 1569.95,229.58 1570.51,230.866 1571.08,233.04 1571.65,230.807 1572.22,233.005 1572.79,231.98 1573.36,231.076 1573.92,230.31 1574.49,229.628 1575.06,227.84 1575.63,229.232 1576.2,231.596 1576.77,231.826 1577.33,231.989 1577.9,232.017 1578.47,233.172 1579.04,233.148 1579.61,233.108 1580.18,234.352 1580.74,233.446 1581.31,236.626 1581.88,235.263 1582.45,236.441 1583.02,235.043 1583.59,234.938 1584.15,235.934 1584.72,235.684 1585.29,234.469 1585.86,235.36 1586.43,236.008 1587,235.674 1587.56,235.537 1588.13,235.144 1588.7,234.829 1589.27,234.505 1589.84,235.18 1590.41,235.817 1590.97,235.801 1591.54,235.534 1592.11,235.073 1592.68,235.845 1593.25,235.465 1593.82,236.06 1594.38,237.763 1594.95,237.421 1595.52,238.102 1596.09,234.711 1596.66,233.403 1597.23,234.38 1597.79,233.982 1598.36,233.718 1598.93,233.645 1599.5,233.342 1600.07,231.009 1600.64,229.773 1601.2,228.949 1601.77,227.128 1602.34,228.025 1602.91,227.145 1603.48,226.551 1604.05,226.944 1604.61,226.347 1605.18,225.818 1605.75,226.111 1606.32,226.546 1606.89,225.915 1607.46,224.273 1608.02,225.862 1608.59,222.176 1609.16,222.717 1609.73,222.538 1610.3,225.132 1610.87,224.743 1611.43,223.152 1612,223.729 1612.57,220.309 1613.14,223.223 1613.71,221.725 1614.28,221.465 1614.84,219.895 1615.41,220.743 1615.98,222.503 1616.55,224.479 1617.12,226.384 1617.69,226.845 1618.26,228.603 1618.82,226.903 1619.39,228.527 1619.96,227.207 1620.53,228.937 1621.1,228.358 1621.67,228.741 1622.23,227.06 1622.8,227.524 1623.37,225.889 1623.94,227.668 1624.51,226.036 1625.08,226.469 1625.64,228.262 1626.21,228.587 1626.78,228.905 1627.35,228.707 1627.92,230.257 1628.49,231.93 1629.05,234.433 1629.62,234.47 1630.19,235.494 1630.76,235.371 1631.33,235.307 1631.9,234.134 1632.46,235.248 1633.03,234.034 1633.6,235.032 1634.17,235.151 1634.74,235.307 1635.31,236.341 1635.87,235.387 1636.44,237.459 1637.01,238.422 1637.58,236.971 1638.15,236.761 1638.72,236.614 1639.28,235.344 1639.85,236.287 1640.42,233.171 1640.99,236.131 1641.56,234.971 1642.13,235.967 1642.69,236.857 1643.26,238.881 1643.83,238.451 1644.4,238.123 1644.97,235.89 1645.54,234.69 1646.1,232.509 1646.67,231.422 1647.24,232.592 1647.81,233.702 1648.38,234.631 1648.95,234.781 1649.51,236.805 1650.08,235.604 1650.65,236.445 1651.22,235.305 1651.79,234.07 1652.36,235.028 1652.92,238.062 1653.49,237.875 1654.06,238.499 1654.63,239.921 1655.2,241.421 1655.77,240.695 1656.33,241.001 1656.9,242.329 1657.47,242.479 1658.04,242.654 1658.61,241.004 1659.18,240.243 1659.74,239.511 1660.31,238.828 1660.88,239.459 1661.45,237.911 1662.02,232.406 1662.59,231.273 1663.15,230.269 1663.72,230.283 1664.29,229.383 1664.86,232.537 1665.43,230.546 1666,232.421 1666.56,233.352 1667.13,232.183 1667.7,227.87 1668.27,227.129 1668.84,226.279 1669.41,228.666 1669.97,231.986 1670.54,232.068 1671.11,232.104 1671.68,230.864 1672.25,229.772 1672.82,231.959 1673.38,230.919 1673.95,233.016 1674.52,231.82 1675.09,232.027 1675.66,231.927 1676.23,234.128 1676.79,234.97 1677.36,234.298 1677.93,232.103 1678.5,234.211 1679.07,233.1 1679.64,233.167 1680.2,234.08 1680.77,235.019 1681.34,234.947 1681.91,234.777 1682.48,234.71 1683.05,233.316 1683.61,232.275 1684.18,233.311 1684.75,234.305 1685.32,235.022 1685.89,234.881 1686.46,235.343 1687.02,234.014 1687.59,233.898 1688.16,232.772 1688.73,232.466 1689.3,231.157 1689.87,233.065 1690.44,234.798 1691,232.55 1691.57,232.398 1692.14,233.185 1692.71,234.058 1693.28,233.963 1693.85,233.546 1694.41,234.506 1694.98,233.271 1695.55,230.974 1696.12,232.023 1696.69,230.755 1697.26,230.576 1697.82,230.588 1698.39,230.777 1698.96,231.845 1699.53,231.747 1700.1,232.65 1700.67,232.598 1701.23,231.344 1701.8,231.333 1702.37,230.348 1702.94,233.556 1703.51,233.249 1704.08,232.279 1704.64,232.256 1705.21,232.075 1705.78,232.054 1706.35,232.901 1706.92,233.084 1707.49,232.922 1708.05,233.719 1708.62,234.599 1709.19,234.216 1709.76,234.99 1710.33,233.664 1710.9,234.442 1711.46,234.277 1712.03,232.059 1712.6,229.929 1713.17,230.086 1713.74,229.169 1714.31,228.27 1714.87,230.481 1715.44,230.623 1716.01,228.849 1716.58,228.988 1717.15,229.31 1717.72,227.567 1718.28,228.989 1718.85,229.089 1719.42,230.322 1719.99,231.643 1720.56,230.826 1721.13,229.817 1721.69,231.02 1722.26,232.965 1722.83,232.84 1723.4,233.786 1723.97,233.528 1724.54,234.12 1725.1,234.918 1725.67,235.69 1726.24,234.166 1726.81,231.602 1727.38,231.607 1727.95,230.362 1728.51,230.36 1729.08,228.381 1729.65,229.701 1730.22,228.988 1730.79,228.389 1731.36,227.688 1731.92,230.046 1732.49,228.071 1733.06,228.562 1733.63,229.799 1734.2,229.902 1734.77,229.126 1735.33,231.328 1735.9,234.477 1736.47,234.167 1737.04,233.989 1737.61,233.04 1738.18,234.821 1738.74,235.641 1739.31,238.462 1739.88,236.936 1740.45,234.511 1741.02,233.195 1741.59,234.112 1742.15,232.757 1742.72,232.643 1743.29,231.221 1743.86,230.011 1744.43,232.007 1745,234.041 1745.56,229.633 1746.13,232.028 1746.7,234.078 1747.27,233.075 1747.84,234.194 1748.41,234.911 1748.97,234.49 1749.54,234.193 1750.11,233.072 1750.68,231.895 1751.25,231.837 1751.82,232.763 1752.38,230.668 1752.95,229.742 1753.52,228.601 1754.09,227.8 1754.66,228.881 1755.23,228.991 1755.79,229.332 1756.36,228.413 1756.93,229.738 1757.5,230.944 1758.07,230.956 1758.64,231.99 1759.21,228.95 1759.77,231.141 1760.34,232.236 1760.91,233.23 1761.48,232.026 1762.05,231.996 1762.62,232.926 1763.18,231.746 1763.75,233.991 1764.32,232.803 1764.89,233.737 1765.46,233.719 1766.03,231.614 1766.59,230.582 1767.16,229.743 1767.73,231.845 1768.3,232.879 1768.87,234.889 1769.44,233.609 1770,233.216 1770.57,234.238 1771.14,235.114 1771.71,232.691 1772.28,232.442 1772.85,230.229 1773.41,230.526 1773.98,229.799 1774.55,231.009 1775.12,232.031 1775.69,234.134 1776.26,234.674 1776.82,233.303 1777.39,232.325 1777.96,233.257 1778.53,234.264 1779.1,234.01 1779.67,232.885 1780.23,234.938 1780.8,236.806 1781.37,236.437 1781.94,234.993 1782.51,236.783 1783.08,235.197 1783.64,234.871 1784.21,235.848 1784.78,237.63 1785.35,234.316 1785.92,235.078 1786.49,234.722 1787.05,234.438 1787.62,234.161 1788.19,233.839 1788.76,233.515 1789.33,232.404 1789.9,232.572 1790.46,232.315 1791.03,232.283 1791.6,234.154 1792.17,233.943 1792.74,233.768 1793.31,234.419 1793.87,233.047 1794.44,230.736 1795.01,230.509 1795.58,229.678 1796.15,228.717 1796.72,227.846 1797.28,228.85 1797.85,228.85 1798.42,229.909 1798.99,230.879 1799.56,229.789 1800.13,229.993 1800.69,230.05 1801.26,232.27 1801.83,232.175 1802.4,231.113 1802.97,227.74 1803.54,226.703 1804.1,225.72 1804.67,225.273 1805.24,225.475 1805.81,225.738 1806.38,227.354 1806.95,227.611 1807.51,228.042 1808.08,230.62 1808.65,229.597 1809.22,229.844 1809.79,229.871 1810.36,228.065 1810.92,227.216 1811.49,228.683 1812.06,227.771 1812.63,226.907 1813.2,228.362 1813.77,227.745 1814.33,228.967 1814.9,230.146 1815.47,233.207 1816.04,232.18 1816.61,230.117 1817.18,229.544 1817.74,231.816 1818.31,230.982 1818.88,230.136 1819.45,228.483 1820.02,228.823 1820.59,228.957 1821.15,227.116 1821.72,227.556 1822.29,228.898 1822.86,229.006 1823.43,230.196 1824,231.639 1824.56,232.739 1825.13,230.811 1825.7,230.845 1826.27,231.136 1826.84,231.395 1827.41,232.738 1827.97,231.733 1828.54,231.814 1829.11,229.917 1829.68,228.956 1830.25,230.277 1830.82,230.748 1831.39,229.888 1831.95,230.212 1832.52,229.664 1833.09,229.981 1833.66,229.155 1834.23,231.573 1834.8,231.778 1835.36,232.036 1835.93,231.309 1836.5,231.6 1837.07,231.725 1837.64,230.809 1838.21,233.073 1838.77,233.18 1839.34,232.22 1839.91,231.334 1840.48,233.647 1841.05,232.597 1841.62,232.503 1842.18,233.264 1842.75,231.271 1843.32,233.729 1843.89,231.692 1844.46,230.945 1845.03,230.043 1845.59,231.384 1846.16,231.593 1846.73,232.648 1847.3,232.397 1847.87,232.64 1848.44,232.631 1849,231.615 1849.57,233.88 1850.14,234.025 1850.71,232.801 1851.28,234.943 1851.85,235.848 1852.41,231.35 1852.98,231.51 1853.55,231.522 1854.12,230.459 1854.69,231.464 1855.26,231.371 1855.82,232.385 1856.39,232.439 1856.96,233.549 1857.53,233.646 1858.1,235.711 1858.67,233.517 1859.23,232.411 1859.8,232.237 1860.37,233.552 1860.94,235.53 1861.51,234.349 1862.08,232.442 1862.64,233.681 1863.21,232.463 1863.78,233.456 1864.35,234.41 1864.92,234.226 1865.49,235.221 1866.05,236.169 1866.62,235.905 1867.19,236.836 1867.76,237.627 1868.33,236.113 1868.9,235.774 1869.46,234.599 1870.03,234.408 1870.6,233.289 1871.17,233.399 1871.74,233.382 1872.31,232.484 1872.87,231.538 1873.44,231.512 1874.01,229.347 1874.58,228.419 1875.15,228.571 1875.72,229.967 1876.28,231.01 1876.85,228.954 1877.42,232.163 1877.99,234.358 1878.56,234.387 1879.13,235.319 1879.69,234.246 1880.26,232.076 1880.83,231.01 1881.4,231.126 1881.97,233.088 1882.54,235.304 1883.1,233.954 1883.67,233.756 1884.24,233.842 1884.81,233.799 1885.38,231.766 1885.95,230.84 1886.51,230.957 1887.08,231.989 1887.65,233.116 1888.22,232.016 1888.79,232.867 1889.36,233.583 1889.92,234.47 1890.49,234.192 1891.06,234.016 1891.63,233.947 1892.2,232.798 1892.77,230.691 1893.33,231.877 1893.9,230.521 1894.47,230.612 1895.04,230.844 1895.61,231.178 1896.18,230.507 1896.74,230.441 1897.31,229.568 1897.88,229.657 1898.45,230.878 1899.02,233.18 1899.59,234.074 1900.16,232.852 1900.72,233.912 1901.29,233.958 1901.86,234.766 1902.43,234.544 1903,235.357 1903.57,235.033 1904.13,233.659 1904.7,232.384 1905.27,230.274 1905.84,230.65 1906.41,229.672 1906.98,230.752 1907.54,232.092 1908.11,233.37 1908.68,230.287 1909.25,231.433 1909.82,232.491 1910.39,233.599 1910.95,233.489 1911.52,233.566 1912.09,229.207 1912.66,229.28 1913.23,231.634 1913.8,230.473 1914.36,231.633 1914.93,231.584 1915.5,233.654 1916.07,233.467 1916.64,235.492 1917.21,234.028 1917.77,232.682 1918.34,229.302 1918.91,229.151 1919.48,230.443 1920.05,229.457 1920.62,229.661 1921.18,230.001 1921.75,230.341 1922.32,229.454 1922.89,229.87 1923.46,230.048 1924.03,231.413 1924.59,232.277 1925.16,233.014 1925.73,233.892 1926.3,234.908 1926.87,235.846 1927.44,234.595 1928,238.576 1928.57,238.095 1929.14,240.579 1929.71,238.911 1930.28,237.58 1930.85,236.136 1931.41,234.609 1931.98,233.318 1932.55,232.168 1933.12,232.029 1933.69,230.989 1934.26,231.225 1934.82,231.352 1935.39,233.603 1935.96,235.505 1936.53,234.379 1937.1,233.164 1937.67,234.056 1938.23,231.924 1938.8,230.733 1939.37,229.918 1939.94,229.998 1940.51,229.057 1941.08,230.29 1941.64,230.562 1942.21,230.674 1942.78,229.754 1943.35,228.821 1943.92,230.215 1944.49,229.235 1945.05,229.557 1945.62,229.764 1946.19,229.841 1946.76,228.992 1947.33,228.949 1947.9,230.067 1948.46,229.262 1949.03,229.487 1949.6,228.86 1950.17,229.165 1950.74,230.209 1951.31,231.222 1951.87,232.458 1952.44,230.514 1953.01,229.568 1953.58,229.706 1954.15,229.834 1954.72,232.097 1955.28,231.359 1955.85,230.478 1956.42,233.744 1956.99,232.568 1957.56,232.433 1958.13,233.407 1958.69,233.195 1959.26,234.28 1959.83,235.192 1960.4,234.93 1960.97,235.777 1961.54,235.492 1962.1,234.136 1962.67,235.125 1963.24,232.598 1963.81,234.618 1964.38,234.398 1964.95,232.278 1965.51,232.558 1966.08,230.529 1966.65,229.641 1967.22,229.721 1967.79,228.964 1968.36,230.97 1968.92,231.184 1969.49,231.147 1970.06,229.186 1970.63,228.425 1971.2,229.614 1971.77,227.756 1972.34,227.181 1972.9,230.73 1973.47,231.764 1974.04,231.94 1974.61,232.972 1975.18,231.956 1975.75,229.925 1976.31,229.083 1976.88,230.201 1977.45,230.446 1978.02,231.603 1978.59,229.558 1979.16,229.83 1979.72,230.958 1980.29,232.138 1980.86,231.046 1981.43,230.182 1982,231.372 1982.57,230.468 1983.13,229.647 1983.7,230.009 1984.27,231.282 1984.84,230.365 1985.41,230.702 1985.98,231.87 1986.54,230.05 1987.11,231.345 1987.68,231.449 1988.25,231.505 1988.82,228.358 1989.39,228.564 1989.95,226.964 1990.52,226.48 1991.09,228.052 1991.66,229.277 1992.23,228.579 1992.8,228.961 1993.36,230.318 1993.93,231.748 1994.5,234.024 1995.07,234.306 1995.64,234.409 1996.21,234.655 1996.77,233.685 1997.34,235.65 1997.91,233.447 1998.48,234.418 1999.05,234.308 1999.62,234.051 2000.18,233.876 2000.75,233.933 2001.32,233.89 2001.89,232.9 2002.46,232.933 2003.03,233.138 2003.59,232.212 2004.16,231.454 2004.73,232.451 2005.3,231.546 2005.87,233.669 2006.44,235.709 2007,236.532 2007.57,237.195 2008.14,235.961 2008.71,236.748 2009.28,237.337 2009.85,238.088 2010.41,238.017 2010.98,237.731 2011.55,239.672 2012.12,237.966 2012.69,237.264 2013.26,236.912 2013.82,236.841 2014.39,236.8 2014.96,237.376 2015.53,235.989 2016.1,236.847 2016.67,236.499 2017.23,236.529 2017.8,235.011 2018.37,233.638 2018.94,234.581 2019.51,235.36 2020.08,235.412 2020.64,234.222 2021.21,234.194 2021.78,235.154 2022.35,232.843 2022.92,232.853 2023.49,232.608 2024.05,233.587 2024.62,234.663 2025.19,231.427 2025.76,231.537 2026.33,227.424 2026.9,223.551 2027.46,226.08 2028.03,224.216 2028.6,223.594 2029.17,223.95 2029.74,225.423 2030.31,226.834 2030.87,226.931 2031.44,227.198 2032.01,227.474 2032.58,231.098 2033.15,231.008 2033.72,231.139 2034.28,231.381 2034.85,232.496 2035.42,231.695 2035.99,231.62 2036.56,233.582 2037.13,234.498 2037.69,234.505 2038.26,233.3 2038.83,233.199 2039.4,233.215 2039.97,234.307 2040.54,234.155 2041.11,233.915 2041.67,232.833 2042.24,232.874 2042.81,232.81 2043.38,231.6 2043.95,230.477 2044.52,230.622 2045.08,231.888 2045.65,230.898 2046.22,230.982 2046.79,230.996 2047.36,232.21 2047.93,232.112 2048.49,232.16 2049.06,232.173 2049.63,233.265 2050.2,234.387 2050.77,237.24 2051.34,236.935 2051.9,236.459 2052.47,237.168 2053.04,238.741 2053.61,238.344 2054.18,235.721 2054.75,231.457 2055.31,230.38 2055.88,230.48 2056.45,231.392 2057.02,232.466 2057.59,233.447 2058.16,232.371 2058.72,233.475 2059.29,235.389 2059.86,234.356 2060.43,235.2 2061,235.952 2061.57,234.802 2062.13,236.514 2062.7,239.24 2063.27,237.821 2063.84,235.479 2064.41,236.134 2064.98,235.862 2065.54,236.328 2066.11,235.994 2066.68,237.632 2067.25,238.276 2067.82,236.836 2068.39,236.35 2068.95,235.809 2069.52,232.455 2070.09,230.18 2070.66,228.226 2071.23,230.226 2071.8,229.145 2072.36,228.284 2072.93,231.555 2073.5,233.388 2074.07,232.929 2074.64,232.714 2075.21,231.51 2075.77,231.619 2076.34,228.397 2076.91,226.36 2077.48,226.69 2078.05,227.763 2078.62,228.913 2079.18,229.992 2079.75,227.947 2080.32,229.172 2080.89,228.224 2081.46,230.465 2082.03,229.489 2082.59,230.441 2083.16,230.579 2083.73,232.771 2084.3,232.636 2084.87,233.622 2085.44,233.532 2086,233.395 2086.57,233.402 2087.14,232.074 2087.71,232.002 2088.28,231.903 2088.85,232.771 2089.41,232.656 2089.98,232.487 2090.55,234.373 2091.12,234.065 2091.69,233.861 2092.26,234.76 2092.82,233.529 2093.39,232.498 2093.96,234.36 2094.53,235.13 2095.1,234.657 2095.67,235.507 2096.23,235.214 2096.8,236.66 2097.37,237.202 2097.94,237.788 2098.51,237.208 2099.08,235.712 2099.64,232.418 2100.21,232.384 2100.78,233.373 2101.35,232.225 2101.92,233.032 2102.49,231.9 2103.05,229.829 2103.62,230.987 2104.19,233.136 2104.76,231.587 2105.33,234.481 2105.9,234.114 2106.46,231.691 2107.03,233.731 2107.6,235.675 2108.17,234.284 2108.74,233.98 2109.31,233.743 2109.87,232.437 2110.44,233.546 2111.01,233.318 2111.58,236.236 2112.15,235.793 2112.72,232.515 2113.29,232.324 2113.85,230.304 2114.42,230.58 2114.99,230.621 2115.56,229.685 2116.13,230.852 2116.7,230.93 2117.26,232.825 2117.83,232.711 2118.4,232.649 2118.97,232.564 2119.54,232.495 2120.11,232.456 2120.67,234.209 2121.24,232.016 2121.81,232.908 2122.38,232.783 2122.95,233.714 2123.52,233.644 2124.08,231.569 2124.65,230.328 2125.22,227.14 2125.79,227.311 2126.36,227.526 2126.93,227.635 2127.49,228.956 2128.06,226.849 2128.63,227.088 2129.2,228.433 2129.77,230.597 2130.34,228.579 2130.9,229.699 2131.47,230.883 2132.04,231.559 2132.61,230.592 2133.18,227.352 2133.75,227.612 2134.31,226.811 2134.88,226.966 2135.45,226.513 2136.02,227.592 2136.59,230.069 2137.16,231.221 2137.72,229.998 2138.29,227.925 2138.86,230.059 2139.43,230.227 2140,229.937 2140.57,229.952 2141.13,231.152 2141.7,231.508 2142.27,231.421 2142.84,234.592 2143.41,234.247 2143.98,233.932 2144.54,231.614 2145.11,231.747 2145.68,232.585 2146.25,232.575 2146.82,231.598 2147.39,231.549 2147.95,232.485 2148.52,233.61 2149.09,231.246 2149.66,230.119 2150.23,231.34 2150.8,230.518 2151.36,231.397 2151.93,231.222 2152.5,230.292 2153.07,232.682 2153.64,230.624 2154.21,230.61 2154.77,229.864 2155.34,230.077 2155.91,231.173 2156.48,230.452 2157.05,230.695 2157.62,230.988 2158.18,231.054 2158.75,231.221 2159.32,234.441 2159.89,234.396 \"/>\n<path clip-path=\"url(#clip500)\" d=\"M1649.46 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1649.46 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip500)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1649.46,1245.03 2150.8,1245.03 2150.8,1089.51 1649.46,1089.51 1649.46,1245.03 \"/>\n<polyline clip-path=\"url(#clip500)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1669.53,1141.35 1789.98,1141.35 \"/>\n<path clip-path=\"url(#clip500)\" d=\"M1817.46 1125.34 L1817.46 1132.71 L1826.23 1132.71 L1826.23 1136.02 L1817.46 1136.02 L1817.46 1150.09 Q1817.46 1153.26 1818.32 1154.16 Q1819.2 1155.07 1821.86 1155.07 L1826.23 1155.07 L1826.23 1158.63 L1821.86 1158.63 Q1816.93 1158.63 1815.05 1156.8 Q1813.18 1154.95 1813.18 1150.09 L1813.18 1136.02 L1810.05 1136.02 L1810.05 1132.71 L1813.18 1132.71 L1813.18 1125.34 L1817.46 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M1843.62 1145.6 Q1838.46 1145.6 1836.47 1146.78 Q1834.48 1147.96 1834.48 1150.81 Q1834.48 1153.08 1835.96 1154.42 Q1837.46 1155.74 1840.03 1155.74 Q1843.57 1155.74 1845.7 1153.24 Q1847.86 1150.72 1847.86 1146.55 L1847.86 1145.6 L1843.62 1145.6 M1852.11 1143.84 L1852.11 1158.63 L1847.86 1158.63 L1847.86 1154.7 Q1846.4 1157.06 1844.22 1158.19 Q1842.05 1159.3 1838.9 1159.3 Q1834.92 1159.3 1832.55 1157.08 Q1830.22 1154.84 1830.22 1151.09 Q1830.22 1146.71 1833.13 1144.49 Q1836.07 1142.27 1841.88 1142.27 L1847.86 1142.27 L1847.86 1141.85 Q1847.86 1138.91 1845.91 1137.31 Q1843.99 1135.69 1840.49 1135.69 Q1838.27 1135.69 1836.17 1136.22 Q1834.06 1136.76 1832.11 1137.82 L1832.11 1133.89 Q1834.45 1132.98 1836.65 1132.54 Q1838.85 1132.08 1840.93 1132.08 Q1846.56 1132.08 1849.34 1135 Q1852.11 1137.91 1852.11 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M1875.91 1136.69 Q1875.19 1136.27 1874.34 1136.09 Q1873.5 1135.88 1872.48 1135.88 Q1868.87 1135.88 1866.93 1138.24 Q1865.01 1140.58 1865.01 1144.97 L1865.01 1158.63 L1860.73 1158.63 L1860.73 1132.71 L1865.01 1132.71 L1865.01 1136.73 Q1866.35 1134.37 1868.5 1133.24 Q1870.66 1132.08 1873.73 1132.08 Q1874.17 1132.08 1874.71 1132.15 Q1875.24 1132.2 1875.89 1132.31 L1875.91 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M1896.6 1145.37 Q1896.6 1140.74 1894.68 1138.19 Q1892.79 1135.65 1889.34 1135.65 Q1885.91 1135.65 1883.99 1138.19 Q1882.09 1140.74 1882.09 1145.37 Q1882.09 1149.97 1883.99 1152.52 Q1885.91 1155.07 1889.34 1155.07 Q1892.79 1155.07 1894.68 1152.52 Q1896.6 1149.97 1896.6 1145.37 M1900.86 1155.41 Q1900.86 1162.03 1897.92 1165.25 Q1894.98 1168.49 1888.92 1168.49 Q1886.67 1168.49 1884.68 1168.15 Q1882.69 1167.82 1880.82 1167.13 L1880.82 1162.98 Q1882.69 1164 1884.52 1164.49 Q1886.35 1164.97 1888.25 1164.97 Q1892.44 1164.97 1894.52 1162.78 Q1896.6 1160.6 1896.6 1156.18 L1896.6 1154.07 Q1895.29 1156.36 1893.23 1157.5 Q1891.17 1158.63 1888.29 1158.63 Q1883.53 1158.63 1880.61 1155 Q1877.69 1151.36 1877.69 1145.37 Q1877.69 1139.35 1880.61 1135.72 Q1883.53 1132.08 1888.29 1132.08 Q1891.17 1132.08 1893.23 1133.22 Q1895.29 1134.35 1896.6 1136.64 L1896.6 1132.71 L1900.86 1132.71 L1900.86 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M1931.81 1144.6 L1931.81 1146.69 L1912.23 1146.69 Q1912.51 1151.09 1914.87 1153.4 Q1917.25 1155.69 1921.49 1155.69 Q1923.94 1155.69 1926.23 1155.09 Q1928.55 1154.49 1930.82 1153.28 L1930.82 1157.31 Q1928.53 1158.28 1926.12 1158.79 Q1923.71 1159.3 1921.23 1159.3 Q1915.03 1159.3 1911.4 1155.69 Q1907.79 1152.08 1907.79 1145.92 Q1907.79 1139.56 1911.21 1135.83 Q1914.66 1132.08 1920.49 1132.08 Q1925.73 1132.08 1928.76 1135.46 Q1931.81 1138.82 1931.81 1144.6 M1927.55 1143.35 Q1927.51 1139.86 1925.59 1137.78 Q1923.69 1135.69 1920.54 1135.69 Q1916.98 1135.69 1914.82 1137.71 Q1912.69 1139.72 1912.37 1143.38 L1927.55 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M1943.02 1125.34 L1943.02 1132.71 L1951.79 1132.71 L1951.79 1136.02 L1943.02 1136.02 L1943.02 1150.09 Q1943.02 1153.26 1943.87 1154.16 Q1944.75 1155.07 1947.41 1155.07 L1951.79 1155.07 L1951.79 1158.63 L1947.41 1158.63 Q1942.48 1158.63 1940.61 1156.8 Q1938.73 1154.95 1938.73 1150.09 L1938.73 1136.02 L1935.61 1136.02 L1935.61 1132.71 L1938.73 1132.71 L1938.73 1125.34 L1943.02 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip500)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1669.53,1193.19 1789.98,1193.19 \"/>\n<path clip-path=\"url(#clip500)\" d=\"M1831.77 1194.82 L1831.77 1210.47 L1827.51 1210.47 L1827.51 1194.96 Q1827.51 1191.28 1826.07 1189.45 Q1824.64 1187.62 1821.77 1187.62 Q1818.32 1187.62 1816.33 1189.82 Q1814.34 1192.02 1814.34 1195.82 L1814.34 1210.47 L1810.05 1210.47 L1810.05 1184.55 L1814.34 1184.55 L1814.34 1188.57 Q1815.86 1186.24 1817.92 1185.08 Q1820.01 1183.92 1822.72 1183.92 Q1827.18 1183.92 1829.48 1186.7 Q1831.77 1189.45 1831.77 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M1850.31 1187.53 Q1846.88 1187.53 1844.89 1190.22 Q1842.9 1192.88 1842.9 1197.53 Q1842.9 1202.18 1844.87 1204.87 Q1846.86 1207.53 1850.31 1207.53 Q1853.71 1207.53 1855.7 1204.85 Q1857.69 1202.16 1857.69 1197.53 Q1857.69 1192.93 1855.7 1190.24 Q1853.71 1187.53 1850.31 1187.53 M1850.31 1183.92 Q1855.86 1183.92 1859.04 1187.53 Q1862.21 1191.14 1862.21 1197.53 Q1862.21 1203.9 1859.04 1207.53 Q1855.86 1211.14 1850.31 1211.14 Q1844.73 1211.14 1841.56 1207.53 Q1838.41 1203.9 1838.41 1197.53 Q1838.41 1191.14 1841.56 1187.53 Q1844.73 1183.92 1850.31 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M1884.29 1188.53 Q1883.57 1188.11 1882.72 1187.93 Q1881.88 1187.72 1880.86 1187.72 Q1877.25 1187.72 1875.31 1190.08 Q1873.39 1192.42 1873.39 1196.81 L1873.39 1210.47 L1869.11 1210.47 L1869.11 1184.55 L1873.39 1184.55 L1873.39 1188.57 Q1874.73 1186.21 1876.88 1185.08 Q1879.04 1183.92 1882.11 1183.92 Q1882.55 1183.92 1883.09 1183.99 Q1883.62 1184.04 1884.27 1184.15 L1884.29 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip500)\" d=\"M1908.11 1189.52 Q1909.71 1186.65 1911.93 1185.29 Q1914.15 1183.92 1917.16 1183.92 Q1921.21 1183.92 1923.41 1186.77 Q1925.61 1189.59 1925.61 1194.82 L1925.61 1210.47 L1921.33 1210.47 L1921.33 1194.96 Q1921.33 1191.24 1920.01 1189.43 Q1918.69 1187.62 1915.98 1187.62 Q1912.67 1187.62 1910.75 1189.82 Q1908.83 1192.02 1908.83 1195.82 L1908.83 1210.47 L1904.54 1210.47 L1904.54 1194.96 Q1904.54 1191.21 1903.23 1189.43 Q1901.91 1187.62 1899.15 1187.62 Q1895.89 1187.62 1893.97 1189.85 Q1892.04 1192.05 1892.04 1195.82 L1892.04 1210.47 L1887.76 1210.47 L1887.76 1184.55 L1892.04 1184.55 L1892.04 1188.57 Q1893.5 1186.19 1895.54 1185.06 Q1897.58 1183.92 1900.38 1183.92 Q1903.2 1183.92 1905.17 1185.36 Q1907.16 1186.79 1908.11 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.023 ¬± 0.026\n  with uncertainty of ¬± 0.002356338924049033\n  from 62 blocks after 5 transformations (k = 6).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01321 ¬± (0.00239711, 0.00237024) (MC)\n  95% confidence interval: [-4.01768, -4.00853]) (MC)\n  linear error propagation: -4.01317 ¬± 0.00232288\n  |Œ¥_y| = |0.00164893| (‚â§ 0.1 for normal approx)\n  Blocking successful with 31 blocks after 6 transformations (k = 7).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.013208757804984, val_l = 0.0044748131380609735, val_u = 0.004681949247316908)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip530\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip530)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip531\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip530)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip532\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip532)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip532)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip532)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip532)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip530)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip530)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip530)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip530)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip530)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip530)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1220.15 1391.71 L1220.15 1397.25 Q1217.67 1395.98 1214.99 1395.34 Q1212.32 1394.71 1209.46 1394.71 Q1205.1 1394.71 1202.9 1396.04 Q1200.74 1397.38 1200.74 1400.05 Q1200.74 1402.09 1202.3 1403.27 Q1203.85 1404.41 1208.57 1405.46 L1210.57 1405.91 Q1216.81 1407.25 1219.42 1409.7 Q1222.06 1412.12 1222.06 1416.48 Q1222.06 1421.44 1218.11 1424.34 Q1214.2 1427.23 1207.32 1427.23 Q1204.46 1427.23 1201.34 1426.66 Q1198.25 1426.12 1194.82 1425.01 L1194.82 1418.96 Q1198.06 1420.65 1201.21 1421.51 Q1204.36 1422.33 1207.45 1422.33 Q1211.59 1422.33 1213.82 1420.93 Q1216.05 1419.5 1216.05 1416.92 Q1216.05 1414.54 1214.42 1413.26 Q1212.83 1411.99 1207.39 1410.81 L1205.35 1410.33 Q1199.91 1409.19 1197.49 1406.83 Q1195.07 1404.45 1195.07 1400.31 Q1195.07 1395.28 1198.64 1392.54 Q1202.2 1389.8 1208.76 1389.8 Q1212 1389.8 1214.87 1390.28 Q1217.73 1390.76 1220.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1237.18 1380.54 L1237.18 1390.66 L1249.24 1390.66 L1249.24 1395.22 L1237.18 1395.22 L1237.18 1414.57 Q1237.18 1418.93 1238.36 1420.17 Q1239.57 1421.41 1243.23 1421.41 L1249.24 1421.41 L1249.24 1426.31 L1243.23 1426.31 Q1236.45 1426.31 1233.87 1423.8 Q1231.29 1421.25 1231.29 1414.57 L1231.29 1395.22 L1226.99 1395.22 L1226.99 1390.66 L1231.29 1390.66 L1231.29 1380.54 L1237.18 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1287.44 1407.02 L1287.44 1409.89 L1260.51 1409.89 Q1260.89 1415.94 1264.14 1419.12 Q1267.42 1422.27 1273.24 1422.27 Q1276.61 1422.27 1279.77 1421.44 Q1282.95 1420.61 1286.07 1418.96 L1286.07 1424.5 Q1282.92 1425.83 1279.61 1426.53 Q1276.3 1427.23 1272.89 1427.23 Q1264.36 1427.23 1259.36 1422.27 Q1254.4 1417.3 1254.4 1408.84 Q1254.4 1400.08 1259.11 1394.96 Q1263.85 1389.8 1271.87 1389.8 Q1279.07 1389.8 1283.24 1394.45 Q1287.44 1399.07 1287.44 1407.02 M1281.58 1405.3 Q1281.52 1400.5 1278.87 1397.63 Q1276.26 1394.77 1271.94 1394.77 Q1267.03 1394.77 1264.07 1397.54 Q1261.15 1400.31 1260.7 1405.34 L1281.58 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1302.71 1420.96 L1302.71 1439.87 L1296.83 1439.87 L1296.83 1390.66 L1302.71 1390.66 L1302.71 1396.07 Q1304.56 1392.89 1307.36 1391.36 Q1310.19 1389.8 1314.11 1389.8 Q1320.6 1389.8 1324.64 1394.96 Q1328.72 1400.12 1328.72 1408.52 Q1328.72 1416.92 1324.64 1422.08 Q1320.6 1427.23 1314.11 1427.23 Q1310.19 1427.23 1307.36 1425.71 Q1304.56 1424.15 1302.71 1420.96 M1322.64 1408.52 Q1322.64 1402.06 1319.97 1398.4 Q1317.32 1394.71 1312.68 1394.71 Q1308.03 1394.71 1305.36 1398.4 Q1302.71 1402.06 1302.71 1408.52 Q1302.71 1414.98 1305.36 1418.67 Q1308.03 1422.33 1312.68 1422.33 Q1317.32 1422.33 1319.97 1418.67 Q1322.64 1414.98 1322.64 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1361.15 1391.71 L1361.15 1397.25 Q1358.67 1395.98 1356 1395.34 Q1353.32 1394.71 1350.46 1394.71 Q1346.1 1394.71 1343.9 1396.04 Q1341.74 1397.38 1341.74 1400.05 Q1341.74 1402.09 1343.3 1403.27 Q1344.86 1404.41 1349.57 1405.46 L1351.57 1405.91 Q1357.81 1407.25 1360.42 1409.7 Q1363.06 1412.12 1363.06 1416.48 Q1363.06 1421.44 1359.11 1424.34 Q1355.2 1427.23 1348.32 1427.23 Q1345.46 1427.23 1342.34 1426.66 Q1339.25 1426.12 1335.82 1425.01 L1335.82 1418.96 Q1339.06 1420.65 1342.21 1421.51 Q1345.36 1422.33 1348.45 1422.33 Q1352.59 1422.33 1354.82 1420.93 Q1357.05 1419.5 1357.05 1416.92 Q1357.05 1414.54 1355.42 1413.26 Q1353.83 1411.99 1348.39 1410.81 L1346.35 1410.33 Q1340.91 1409.19 1338.49 1406.83 Q1336.07 1404.45 1336.07 1400.31 Q1336.07 1395.28 1339.64 1392.54 Q1343.2 1389.8 1349.76 1389.8 Q1353 1389.8 1355.87 1390.28 Q1358.73 1390.76 1361.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip532)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1157.35 2211.02,1157.35 \"/>\n<polyline clip-path=\"url(#clip532)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1005.97 2211.02,1005.97 \"/>\n<polyline clip-path=\"url(#clip532)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,854.592 2211.02,854.592 \"/>\n<polyline clip-path=\"url(#clip532)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,703.212 2211.02,703.212 \"/>\n<polyline clip-path=\"url(#clip532)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,551.831 2211.02,551.831 \"/>\n<polyline clip-path=\"url(#clip532)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,400.451 2211.02,400.451 \"/>\n<polyline clip-path=\"url(#clip532)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,249.071 2211.02,249.071 \"/>\n<polyline clip-path=\"url(#clip530)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip530)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1157.35 365.751,1157.35 \"/>\n<polyline clip-path=\"url(#clip530)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1005.97 365.751,1005.97 \"/>\n<polyline clip-path=\"url(#clip530)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,854.592 365.751,854.592 \"/>\n<polyline clip-path=\"url(#clip530)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,703.212 365.751,703.212 \"/>\n<polyline clip-path=\"url(#clip530)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,551.831 365.751,551.831 \"/>\n<polyline clip-path=\"url(#clip530)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,400.451 365.751,400.451 \"/>\n<polyline clip-path=\"url(#clip530)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,249.071 365.751,249.071 \"/>\n<path clip-path=\"url(#clip530)\" d=\"M298.909 1143.15 Q295.298 1143.15 293.469 1146.72 Q291.664 1150.26 291.664 1157.39 Q291.664 1164.49 293.469 1168.06 Q295.298 1171.6 298.909 1171.6 Q302.543 1171.6 304.349 1168.06 Q306.177 1164.49 306.177 1157.39 Q306.177 1150.26 304.349 1146.72 Q302.543 1143.15 298.909 1143.15 M298.909 1139.45 Q304.719 1139.45 307.775 1144.05 Q310.853 1148.64 310.853 1157.39 Q310.853 1166.11 307.775 1170.72 Q304.719 1175.3 298.909 1175.3 Q293.099 1175.3 290.02 1170.72 Q286.964 1166.11 286.964 1157.39 Q286.964 1148.64 290.02 1144.05 Q293.099 1139.45 298.909 1139.45 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M259.557 1019.32 L267.196 1019.32 L267.196 992.952 L258.886 994.618 L258.886 990.359 L267.15 988.692 L271.826 988.692 L271.826 1019.32 L279.465 1019.32 L279.465 1023.25 L259.557 1023.25 L259.557 1019.32 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M298.909 991.771 Q295.298 991.771 293.469 995.336 Q291.664 998.877 291.664 1006.01 Q291.664 1013.11 293.469 1016.68 Q295.298 1020.22 298.909 1020.22 Q302.543 1020.22 304.349 1016.68 Q306.177 1013.11 306.177 1006.01 Q306.177 998.877 304.349 995.336 Q302.543 991.771 298.909 991.771 M298.909 988.067 Q304.719 988.067 307.775 992.674 Q310.853 997.257 310.853 1006.01 Q310.853 1014.73 307.775 1019.34 Q304.719 1023.92 298.909 1023.92 Q293.099 1023.92 290.02 1019.34 Q286.964 1014.73 286.964 1006.01 Q286.964 997.257 290.02 992.674 Q293.099 988.067 298.909 988.067 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M262.775 867.937 L279.094 867.937 L279.094 871.872 L257.15 871.872 L257.15 867.937 Q259.812 865.182 264.395 860.553 Q269.002 855.9 270.182 854.557 Q272.428 852.034 273.307 850.298 Q274.21 848.539 274.21 846.849 Q274.21 844.094 272.266 842.358 Q270.344 840.622 267.242 840.622 Q265.043 840.622 262.59 841.386 Q260.159 842.15 257.381 843.701 L257.381 838.979 Q260.205 837.844 262.659 837.266 Q265.113 836.687 267.15 836.687 Q272.52 836.687 275.715 839.372 Q278.909 842.057 278.909 846.548 Q278.909 848.678 278.099 850.599 Q277.312 852.497 275.205 855.09 Q274.627 855.761 271.525 858.979 Q268.423 862.173 262.775 867.937 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M298.909 840.391 Q295.298 840.391 293.469 843.956 Q291.664 847.497 291.664 854.627 Q291.664 861.733 293.469 865.298 Q295.298 868.84 298.909 868.84 Q302.543 868.84 304.349 865.298 Q306.177 861.733 306.177 854.627 Q306.177 847.497 304.349 843.956 Q302.543 840.391 298.909 840.391 M298.909 836.687 Q304.719 836.687 307.775 841.294 Q310.853 845.877 310.853 854.627 Q310.853 863.354 307.775 867.96 Q304.719 872.543 298.909 872.543 Q293.099 872.543 290.02 867.96 Q286.964 863.354 286.964 854.627 Q286.964 845.877 290.02 841.294 Q293.099 836.687 298.909 836.687 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M272.914 701.858 Q276.27 702.575 278.145 704.844 Q280.043 707.112 280.043 710.446 Q280.043 715.561 276.525 718.362 Q273.006 721.163 266.525 721.163 Q264.349 721.163 262.034 720.723 Q259.742 720.307 257.289 719.45 L257.289 714.936 Q259.233 716.07 261.548 716.649 Q263.863 717.228 266.386 717.228 Q270.784 717.228 273.076 715.492 Q275.39 713.756 275.39 710.446 Q275.39 707.39 273.238 705.677 Q271.108 703.941 267.289 703.941 L263.261 703.941 L263.261 700.098 L267.474 700.098 Q270.923 700.098 272.752 698.733 Q274.58 697.344 274.58 694.751 Q274.58 692.089 272.682 690.677 Q270.807 689.242 267.289 689.242 Q265.367 689.242 263.168 689.659 Q260.969 690.075 258.33 690.955 L258.33 686.788 Q260.992 686.047 263.307 685.677 Q265.645 685.307 267.705 685.307 Q273.029 685.307 276.131 687.737 Q279.233 690.145 279.233 694.265 Q279.233 697.135 277.59 699.126 Q275.946 701.094 272.914 701.858 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M298.909 689.01 Q295.298 689.01 293.469 692.575 Q291.664 696.117 291.664 703.246 Q291.664 710.353 293.469 713.918 Q295.298 717.459 298.909 717.459 Q302.543 717.459 304.349 713.918 Q306.177 710.353 306.177 703.246 Q306.177 696.117 304.349 692.575 Q302.543 689.01 298.909 689.01 M298.909 685.307 Q304.719 685.307 307.775 689.913 Q310.853 694.497 310.853 703.246 Q310.853 711.973 307.775 716.58 Q304.719 721.163 298.909 721.163 Q293.099 721.163 290.02 716.58 Q286.964 711.973 286.964 703.246 Q286.964 694.497 290.02 689.913 Q293.099 685.307 298.909 685.307 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M271.594 538.626 L259.789 557.074 L271.594 557.074 L271.594 538.626 M270.367 534.551 L276.247 534.551 L276.247 557.074 L281.177 557.074 L281.177 560.963 L276.247 560.963 L276.247 569.111 L271.594 569.111 L271.594 560.963 L255.992 560.963 L255.992 556.449 L270.367 534.551 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M298.909 537.63 Q295.298 537.63 293.469 541.195 Q291.664 544.737 291.664 551.866 Q291.664 558.973 293.469 562.537 Q295.298 566.079 298.909 566.079 Q302.543 566.079 304.349 562.537 Q306.177 558.973 306.177 551.866 Q306.177 544.737 304.349 541.195 Q302.543 537.63 298.909 537.63 M298.909 533.926 Q304.719 533.926 307.775 538.533 Q310.853 543.116 310.853 551.866 Q310.853 560.593 307.775 565.199 Q304.719 569.783 298.909 569.783 Q293.099 569.783 290.02 565.199 Q286.964 560.593 286.964 551.866 Q286.964 543.116 290.02 538.533 Q293.099 533.926 298.909 533.926 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M258.793 383.171 L277.15 383.171 L277.15 387.106 L263.076 387.106 L263.076 395.579 Q264.094 395.231 265.113 395.069 Q266.131 394.884 267.15 394.884 Q272.937 394.884 276.316 398.055 Q279.696 401.227 279.696 406.643 Q279.696 412.222 276.224 415.324 Q272.752 418.402 266.432 418.402 Q264.256 418.402 261.988 418.032 Q259.742 417.662 257.335 416.921 L257.335 412.222 Q259.418 413.356 261.641 413.912 Q263.863 414.467 266.34 414.467 Q270.344 414.467 272.682 412.361 Q275.02 410.254 275.02 406.643 Q275.02 403.032 272.682 400.926 Q270.344 398.819 266.34 398.819 Q264.465 398.819 262.59 399.236 Q260.738 399.653 258.793 400.532 L258.793 383.171 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M298.909 386.25 Q295.298 386.25 293.469 389.815 Q291.664 393.356 291.664 400.486 Q291.664 407.592 293.469 411.157 Q295.298 414.699 298.909 414.699 Q302.543 414.699 304.349 411.157 Q306.177 407.592 306.177 400.486 Q306.177 393.356 304.349 389.815 Q302.543 386.25 298.909 386.25 M298.909 382.546 Q304.719 382.546 307.775 387.153 Q310.853 391.736 310.853 400.486 Q310.853 409.213 307.775 413.819 Q304.719 418.402 298.909 418.402 Q293.099 418.402 290.02 413.819 Q286.964 409.213 286.964 400.486 Q286.964 391.736 290.02 387.153 Q293.099 382.546 298.909 382.546 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M269.326 247.207 Q266.178 247.207 264.326 249.36 Q262.497 251.513 262.497 255.263 Q262.497 258.99 264.326 261.166 Q266.178 263.318 269.326 263.318 Q272.474 263.318 274.303 261.166 Q276.154 258.99 276.154 255.263 Q276.154 251.513 274.303 249.36 Q272.474 247.207 269.326 247.207 M278.608 232.555 L278.608 236.814 Q276.849 235.981 275.043 235.541 Q273.261 235.101 271.502 235.101 Q266.872 235.101 264.418 238.226 Q261.988 241.351 261.641 247.67 Q263.006 245.657 265.066 244.592 Q267.127 243.504 269.603 243.504 Q274.812 243.504 277.821 246.675 Q280.853 249.823 280.853 255.263 Q280.853 260.587 277.705 263.805 Q274.557 267.022 269.326 267.022 Q263.33 267.022 260.159 262.439 Q256.988 257.832 256.988 249.106 Q256.988 240.911 260.877 236.05 Q264.766 231.166 271.316 231.166 Q273.076 231.166 274.858 231.513 Q276.664 231.86 278.608 232.555 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M298.909 234.87 Q295.298 234.87 293.469 238.434 Q291.664 241.976 291.664 249.106 Q291.664 256.212 293.469 259.777 Q295.298 263.318 298.909 263.318 Q302.543 263.318 304.349 259.777 Q306.177 256.212 306.177 249.106 Q306.177 241.976 304.349 238.434 Q302.543 234.87 298.909 234.87 M298.909 231.166 Q304.719 231.166 307.775 235.772 Q310.853 240.356 310.853 249.106 Q310.853 257.832 307.775 262.439 Q304.719 267.022 298.909 267.022 Q293.099 267.022 290.02 262.439 Q286.964 257.832 286.964 249.106 Q286.964 240.356 290.02 235.772 Q293.099 231.166 298.909 231.166 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip532)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1045.81 400.199,943.339 400.786,849.317 401.372,763.177 401.958,684.395 402.545,612.485 403.131,546.997 403.718,487.513 404.304,529.349 404.891,476.153 405.477,428.112 406.063,384.893 406.65,346.183 407.236,311.692 407.823,281.144 408.409,255.585 408.995,291.769 409.582,269.145 410.168,249.635 410.755,233.834 411.341,219.895 411.927,250.953 412.514,241.106 413.1,304.674 413.687,329.383 414.273,352.11 414.86,346.102 415.446,368.88 416.032,365.652 416.619,365.151 417.205,386.656 417.792,388.3 418.378,390.966 418.964,412.618 419.551,417.17 420.137,422.046 420.724,442.893 421.31,462.713 421.896,481.594 422.483,498.985 423.069,527.757 423.656,532.598 424.242,558.53 424.829,563.907 425.415,578.259 426.001,601.984 426.588,606.707 427.174,620.218 427.761,633.508 428.347,660.425 428.933,664.876 429.52,690.333 430.106,696.471 430.693,703.349 431.279,721.651 431.865,728.453 432.452,740.084 433.038,757.335 433.625,763.542 434.211,775.317 434.798,786.542 435.384,810.997 435.97,817.11 436.557,823.085 437.143,833.504 437.73,843.451 438.316,864.742 438.902,881.563 439.489,889.835 440.075,894.608 440.662,903.343 441.248,914.796 441.835,922.194 442.421,936.028 443.007,946.512 443.594,953.921 444.18,961.324 444.767,971.421 445.353,975.456 445.939,982.41 446.526,989.417 447.112,993.832 447.699,1000.62 448.285,1009.71 448.871,1026.04 449.458,1034.27 450.044,1040.14 450.631,1043.56 451.217,1051.41 451.804,1056.83 452.39,1062.28 452.976,1069.63 453.563,1078.68 454.149,1082.92 454.736,1087.25 455.322,1093.63 455.908,1095.97 456.495,1098.2 457.081,1100.69 457.668,1103.25 458.254,1107.78 458.84,1115.99 459.427,1125.71 460.013,1131.46 460.6,1133.54 461.186,1137.42 461.773,1141.04 462.359,1146.29 462.945,1148.01 463.532,1156.35 464.118,1157.59 464.705,1159 465.291,1160.72 465.877,1162.19 466.464,1165.55 467.05,1173.48 467.637,1176.22 468.223,1178.45 468.809,1181.18 469.396,1187.04 469.982,1187.76 470.569,1193.38 471.155,1193.9 471.742,1196.06 472.328,1197.16 472.914,1197.48 473.501,1199.39 474.087,1199.86 474.674,1201.93 475.26,1202.4 475.846,1204.54 476.433,1206.72 477.019,1210.23 477.606,1210.64 478.192,1212.34 478.778,1214.24 479.365,1212.95 479.951,1213.38 480.538,1213.89 481.124,1214.29 481.711,1216.22 482.297,1218.26 482.883,1218.85 483.47,1220.74 484.056,1222.45 484.643,1222.65 485.229,1227.01 485.815,1225.84 486.402,1225.62 486.988,1227.25 487.575,1229.96 488.161,1232.74 488.748,1232.47 489.334,1236.48 489.92,1237.29 490.507,1234.34 491.093,1235.46 491.68,1239.17 492.266,1240.12 492.852,1242.67 493.439,1242.36 494.025,1238 494.612,1237.73 495.198,1237.36 495.784,1240.01 496.371,1239.8 496.957,1240.92 497.544,1240.44 498.13,1237.45 498.717,1238.24 499.303,1238.25 499.889,1238.01 500.476,1236.55 501.062,1239.08 501.649,1240.17 502.235,1239.68 502.821,1239.27 503.408,1239.12 503.994,1238.84 504.581,1238.96 505.167,1239.99 505.753,1242.19 506.34,1243.28 506.926,1244.31 507.513,1243.81 508.099,1240.66 508.686,1240.25 509.272,1240.3 509.858,1244.21 510.445,1247.76 511.031,1246.66 511.618,1246.08 512.204,1245.36 512.79,1246.35 513.377,1247.19 513.963,1245.44 514.55,1244.05 515.136,1246.32 515.722,1247 516.309,1247.49 516.895,1249.35 517.482,1248.82 518.068,1244.01 518.655,1246.35 519.241,1248.26 519.827,1247.73 520.414,1248.55 521,1250.53 521.587,1249.93 522.173,1246.8 522.759,1248.64 523.346,1248.07 523.932,1248.55 524.519,1249.39 525.105,1247.31 525.691,1243.98 526.278,1246.07 526.864,1246.45 527.451,1246.08 528.037,1245.53 528.624,1243.79 529.21,1243.4 529.796,1243.13 530.383,1240.45 530.969,1239.13 531.556,1238.73 532.142,1239.86 532.728,1240.95 533.315,1239.25 533.901,1240.27 534.488,1240.05 535.074,1238.61 535.661,1238.62 536.247,1237.29 536.833,1240.04 537.42,1241.05 538.006,1241.86 538.593,1242.74 539.179,1239.88 539.765,1239.8 540.352,1238.37 540.938,1238.19 541.525,1237.91 542.111,1237.53 542.697,1236.34 543.284,1238.72 543.87,1242.17 544.457,1241.91 545.043,1240.52 545.63,1242.66 546.216,1242.38 546.802,1241.77 547.389,1243.93 547.975,1243.47 548.562,1242.93 549.148,1242.5 549.734,1242.91 550.321,1246.15 550.907,1246.61 551.494,1244.92 552.08,1245.93 552.666,1246.37 553.253,1248.35 553.839,1248.67 554.426,1245.8 555.012,1246.18 555.599,1249.08 556.185,1245.85 556.771,1246.45 557.358,1245.77 557.944,1247.78 558.531,1246.93 559.117,1244.9 559.703,1246.47 560.29,1244.24 560.876,1244.97 561.463,1244.06 562.049,1242.03 562.635,1242.89 563.222,1243.57 563.808,1244.34 564.395,1245.03 564.981,1244.38 565.568,1245.18 566.154,1243.13 566.74,1246.33 567.327,1245.62 567.913,1244.87 568.5,1243.07 569.086,1240.26 569.672,1240.09 570.259,1239.63 570.845,1238 571.432,1238.95 572.018,1241.28 572.605,1245.7 573.191,1247.51 573.777,1248.91 574.364,1249.12 574.95,1248.07 575.537,1245.83 576.123,1247.33 576.709,1246.38 577.296,1248.08 577.882,1249.27 578.469,1247.18 579.055,1246.21 579.641,1249.1 580.228,1249.38 580.814,1245.85 581.401,1246.27 581.987,1246.79 582.574,1245.66 583.16,1244.66 583.746,1244.01 584.333,1243.19 584.919,1242.42 585.506,1241.69 586.092,1242.32 586.678,1240.54 587.265,1241.36 587.851,1240.81 588.438,1241.47 589.024,1239.49 589.61,1238.81 590.197,1238.46 590.783,1239.47 591.37,1237.92 591.956,1238.65 592.543,1236.93 593.129,1237.72 593.715,1236.16 594.302,1239.42 594.888,1241.61 595.475,1241.93 596.061,1241.14 596.647,1240.26 597.234,1237.32 597.82,1235.62 598.407,1231.36 598.993,1231.17 599.579,1230.16 600.166,1228.53 600.752,1226.05 601.339,1226.14 601.925,1226.24 602.512,1226.47 603.098,1227.62 603.684,1226.27 604.271,1226.39 604.857,1226.51 605.444,1226.61 606.03,1222.84 606.616,1222.76 607.203,1224.23 607.789,1223.15 608.376,1224.56 608.962,1227.25 609.548,1228.63 610.135,1231.27 610.721,1231.27 611.308,1232.37 611.894,1232.11 612.481,1227.88 613.067,1229.09 613.653,1227.58 614.24,1226.4 614.826,1227.66 615.413,1226.26 615.999,1223.92 616.585,1222.62 617.172,1223.15 617.758,1223.57 618.345,1227.44 618.931,1227.36 619.518,1228.53 620.104,1229.62 620.69,1228.26 621.277,1228.1 621.863,1229.41 622.45,1231.69 623.036,1233.66 623.622,1232.05 624.209,1233 624.795,1232.5 625.382,1232.4 625.968,1230.92 626.554,1233.09 627.141,1232.71 627.727,1229.98 628.314,1228.65 628.9,1230.99 629.487,1230.7 630.073,1230.4 630.659,1230.08 631.246,1230.02 631.832,1231.21 632.419,1229.79 633.005,1227.57 633.591,1226.28 634.178,1227.79 634.764,1223.94 635.351,1224.02 635.937,1225.4 636.523,1225.42 637.11,1226.64 637.696,1225.16 638.283,1225.32 638.869,1226.6 639.456,1224.09 640.042,1224.02 640.628,1225.64 641.215,1225.7 641.801,1228.32 642.388,1226.9 642.974,1226.93 643.56,1226.77 644.147,1225.45 644.733,1226.63 645.32,1228.79 645.906,1228.55 646.492,1228.31 647.079,1227.94 647.665,1232.86 648.252,1232.55 648.838,1234.65 649.425,1235.47 650.011,1237.6 650.597,1238.08 651.184,1241.07 651.77,1239.16 652.357,1238.5 652.943,1235.44 653.529,1236.11 654.116,1238.03 654.702,1237.3 655.289,1236.66 655.875,1236.09 656.462,1235.48 657.048,1236.33 657.634,1235.81 658.221,1236.45 658.807,1233.47 659.394,1235.54 659.98,1234.96 660.566,1233.02 661.153,1233.73 661.739,1233.17 662.326,1234.05 662.912,1236.01 663.498,1234.1 664.085,1234.88 664.671,1233.06 665.258,1235.34 665.844,1234.69 666.431,1234.52 667.017,1231.86 667.603,1231.44 668.19,1229.92 668.776,1228.3 669.363,1228.19 669.949,1229.09 670.535,1228.95 671.122,1228.65 671.708,1229.41 672.295,1226.55 672.881,1226.6 673.467,1226.38 674.054,1227.5 674.64,1228.73 675.227,1224.91 675.813,1226.03 676.4,1226.05 676.986,1225.77 677.572,1225.83 678.159,1227.09 678.745,1225.88 679.332,1225.71 679.918,1225.65 680.504,1223.4 681.091,1223.23 681.677,1223.1 682.264,1225.52 682.85,1227.82 683.436,1227.46 684.023,1227.41 684.609,1224.82 685.196,1224.96 685.782,1225.99 686.369,1224.55 686.955,1224.3 687.541,1224.31 688.128,1224.37 688.714,1224.09 689.301,1224.08 689.887,1224.04 690.473,1225.27 691.06,1226.48 691.646,1226.36 692.233,1222.46 692.819,1223.67 693.405,1222.39 693.992,1219.99 694.578,1221.35 695.165,1224.01 695.751,1222.56 696.338,1223.62 696.924,1221.26 697.51,1218.91 698.097,1219.17 698.683,1220.5 699.27,1221.85 699.856,1220.53 700.442,1223.23 701.029,1223.33 701.615,1224.78 702.202,1223.47 702.788,1223.46 703.375,1224.75 703.961,1223.45 704.547,1223.43 705.134,1223.54 705.72,1224.76 706.307,1226.02 706.893,1225.58 707.479,1225.6 708.066,1226.48 708.652,1226.36 709.239,1226.37 709.825,1226.53 710.411,1227.68 710.998,1227.67 711.584,1226.05 712.171,1227.18 712.757,1228.24 713.344,1230.37 713.93,1232.43 714.516,1230.75 715.103,1226.78 715.689,1225.45 716.276,1225.39 716.862,1226.58 717.448,1227.62 718.035,1227.34 718.621,1226.9 719.208,1226.85 719.794,1227.79 720.38,1228.83 720.967,1227.24 721.553,1226.72 722.14,1228.73 722.726,1225.94 723.313,1224.48 723.899,1224.28 724.485,1225.18 725.072,1225 725.658,1225.01 726.245,1226.16 726.831,1224.9 727.417,1223.71 728.004,1224.62 728.59,1222.23 729.177,1225.89 729.763,1225.84 730.349,1223.12 730.936,1220.87 731.522,1220.87 732.109,1222.23 732.695,1219.95 733.282,1222.63 733.868,1223.92 734.454,1223.95 735.041,1224.14 735.627,1226.6 736.214,1227.5 736.8,1225.96 737.386,1228.21 737.973,1229.27 738.559,1231.3 739.146,1232.18 739.732,1231.73 740.318,1232.51 740.905,1230.64 741.491,1228.17 742.078,1227.75 742.664,1226.38 743.251,1226.32 743.837,1226.06 744.423,1225.96 745.01,1224.77 745.596,1225.85 746.183,1225.57 746.769,1225.37 747.355,1225.32 747.942,1226.25 748.528,1226.23 749.115,1225.92 749.701,1224.37 750.288,1224.24 750.874,1224.13 751.46,1224.16 752.047,1222.83 752.633,1223.04 753.22,1220.57 753.806,1219.55 754.392,1218.71 754.979,1220.12 755.565,1221.43 756.152,1224.92 756.738,1226.09 757.324,1225.88 757.911,1224.78 758.497,1223.23 759.084,1223.25 759.67,1223.28 760.257,1220.79 760.843,1218.28 761.429,1219.47 762.016,1218.26 762.602,1217.09 763.189,1216.36 763.775,1215.41 764.361,1215.57 764.948,1217.18 765.534,1220.03 766.121,1220.01 766.707,1220.15 767.293,1219.94 767.88,1220.13 768.466,1218.64 769.053,1219.9 769.639,1222.38 770.226,1224.55 770.812,1223.03 771.398,1220.42 771.985,1217.75 772.571,1219.08 773.158,1221.47 773.744,1219.26 774.33,1219.33 774.917,1219.46 775.503,1219.6 776.09,1219.82 776.676,1218.87 777.262,1217.92 777.849,1216.86 778.435,1217.11 779.022,1218.73 779.608,1218.93 780.195,1219.08 780.781,1218.96 781.367,1219.13 781.954,1219.26 782.54,1218.31 783.127,1218.31 783.713,1217.3 784.299,1218.96 784.886,1221.52 785.472,1222.71 786.059,1222.61 786.645,1222.72 787.232,1222.73 787.818,1222.4 788.404,1223.57 788.991,1223.31 789.577,1223.03 790.164,1224.06 790.75,1226.17 791.336,1225.64 791.923,1226.88 792.509,1224.29 793.096,1220.33 793.682,1223.1 794.268,1219.24 794.855,1219.55 795.441,1222.45 796.028,1222.29 796.614,1221.13 797.201,1221.34 797.787,1222.76 798.373,1222.81 798.96,1219.91 799.546,1222.36 800.133,1225.93 800.719,1228.1 801.305,1227.59 801.892,1226.2 802.478,1223.41 803.065,1225.7 803.651,1226.7 804.237,1226.51 804.824,1223.73 805.41,1222.16 805.997,1220.6 806.583,1220.73 807.17,1218.23 807.756,1217 808.342,1215.93 808.929,1217.42 809.515,1218.68 810.102,1217.42 810.688,1217.36 811.274,1217.76 811.861,1218.28 812.447,1220.71 813.034,1222.08 813.62,1226.71 814.206,1225.1 814.793,1225.09 815.379,1224.73 815.966,1225.79 816.552,1226.64 817.139,1225.09 817.725,1223.21 818.311,1221.82 818.898,1221.61 819.484,1223.84 820.071,1222.29 820.657,1220.9 821.243,1219.78 821.83,1221.31 822.416,1219.91 823.003,1222.27 823.589,1223.68 824.175,1223.36 824.762,1224.28 825.348,1225.19 825.935,1226.34 826.521,1226.07 827.108,1223.21 827.694,1223.19 828.28,1224.19 828.867,1226.19 829.453,1227.08 830.04,1226.58 830.626,1226.3 831.212,1223.38 831.799,1223.03 832.385,1221.6 832.972,1220.34 833.558,1220.17 834.145,1218.94 834.731,1217.78 835.317,1221.62 835.904,1221.68 836.49,1221.71 837.077,1220.59 837.663,1220.58 838.249,1220.33 838.836,1220.62 839.422,1220.72 840.009,1220.86 840.595,1220.78 841.181,1218.09 841.768,1216.99 842.354,1215.86 842.941,1216.03 843.527,1217.56 844.114,1216.33 844.7,1217.93 845.286,1215.9 845.873,1218.31 846.459,1217.29 847.046,1217.57 847.632,1216.22 848.218,1216.27 848.805,1214.15 849.391,1213.38 849.978,1211.32 850.564,1211.8 851.15,1209.84 851.737,1211.69 852.323,1209.68 852.91,1210.17 853.496,1214.55 854.083,1218.47 854.669,1217.16 855.255,1217.23 855.842,1217.51 856.428,1217.54 857.015,1218.77 857.601,1218.72 858.187,1217.63 858.774,1215.21 859.36,1215.66 859.947,1214.65 860.533,1214.85 861.119,1216.54 861.706,1216.78 862.292,1215.9 862.879,1217.43 863.465,1218.73 864.052,1218.84 864.638,1217.58 865.224,1219.03 865.811,1220.47 866.397,1221.59 866.984,1225.35 867.57,1226.33 868.156,1225.97 868.743,1225.56 869.329,1225.36 869.916,1224.88 870.502,1223.56 871.089,1224.37 871.675,1221.65 872.261,1220.22 872.848,1218.83 873.434,1220.05 874.021,1218.64 874.607,1219.91 875.193,1218.63 875.78,1219.87 876.366,1219.54 876.953,1220.85 877.539,1222.09 878.125,1223.06 878.712,1224.29 879.298,1225.43 879.885,1228.97 880.471,1228.54 881.058,1228.1 881.644,1227.77 882.23,1225.97 882.817,1224.14 883.403,1222.73 883.99,1221.28 884.576,1221.33 885.162,1221.03 885.749,1221 886.335,1222.13 886.922,1223.34 887.508,1222.93 888.094,1222.84 888.681,1223.8 889.267,1222.38 889.854,1223.43 890.44,1224.5 891.027,1220.37 891.613,1218.8 892.199,1217.56 892.786,1216.34 893.372,1217.81 893.959,1218 894.545,1219.47 895.131,1220.76 895.718,1221.97 896.304,1222.96 896.891,1221.51 897.477,1220.11 898.063,1220.06 898.65,1220.07 899.236,1218.65 899.823,1219.8 900.409,1220.81 900.996,1221.91 901.582,1221.79 902.168,1221.51 902.755,1222.63 903.341,1222.52 903.928,1223.49 904.514,1221.93 905.1,1221.9 905.687,1220.68 906.273,1220.55 906.86,1220.47 907.446,1223.83 908.032,1222.22 908.619,1222.04 909.205,1221.83 909.792,1221.64 910.378,1218.85 910.965,1218.6 911.551,1220.01 912.137,1222.49 912.724,1221.18 913.31,1218.81 913.897,1218.65 914.483,1219.91 915.069,1221.02 915.656,1219.79 916.242,1217.18 916.829,1217.25 917.415,1217.54 918.002,1217.54 918.588,1216.18 919.174,1213.75 919.761,1212.55 920.347,1213.13 920.934,1212.06 921.52,1213.71 922.106,1213.85 922.693,1215.39 923.279,1216.81 923.866,1220.88 924.452,1218.35 925.038,1218.38 925.625,1218.39 926.211,1219.59 926.798,1223 927.384,1221.41 927.971,1222.56 928.557,1224.83 929.143,1225.64 929.73,1226.24 930.316,1224.64 930.903,1224.61 931.489,1224.32 932.075,1225.36 932.662,1223.64 933.248,1224.72 933.835,1224.55 934.421,1220.57 935.007,1221.49 935.594,1218.92 936.18,1218.97 936.767,1218.95 937.353,1219.03 937.94,1217.77 938.526,1218.7 939.112,1218.45 939.699,1218.6 940.285,1218.74 940.872,1216.45 941.458,1215.29 942.044,1215.18 942.631,1214.15 943.217,1212.24 943.804,1213.91 944.39,1215.37 944.976,1215.52 945.563,1215.57 946.149,1215.79 946.736,1217.26 947.322,1217.43 947.909,1216.66 948.495,1216.91 949.081,1214.6 949.668,1215.86 950.254,1216.18 950.841,1216.4 951.427,1216.54 952.013,1216.75 952.6,1214.38 953.186,1212.39 953.773,1212.99 954.359,1213.37 954.945,1216 955.532,1218.45 956.118,1219.68 956.705,1220.91 957.291,1221.04 957.878,1223.54 958.464,1224.37 959.05,1225.43 959.637,1223.85 960.223,1224.84 960.81,1224.36 961.396,1223.06 961.982,1222.69 962.569,1221.3 963.155,1221.2 963.742,1221.14 964.328,1218.61 964.915,1217.56 965.501,1217.62 966.087,1217.71 966.674,1219.15 967.26,1219.35 967.847,1218.17 968.433,1218.22 969.019,1213.56 969.606,1215.14 970.192,1216.82 970.779,1213.46 971.365,1212.42 971.951,1212.94 972.538,1214.69 973.124,1210.28 973.711,1209.53 974.297,1209.87 974.884,1212.92 975.47,1213.46 976.056,1213.49 976.643,1214.95 977.229,1219.08 977.816,1217.95 978.402,1219.39 978.988,1218.32 979.575,1217.03 980.161,1218.49 980.748,1217.25 981.334,1215.97 981.92,1214.58 982.507,1216.08 983.093,1216.05 983.68,1219.8 984.266,1222.09 984.853,1221.74 985.439,1220.13 986.025,1221.18 986.612,1223.64 987.198,1224.84 987.785,1224.68 988.371,1222.85 988.957,1220 989.544,1219.83 990.13,1221.93 990.717,1220.38 991.303,1221.72 991.889,1221.68 992.476,1220.58 993.062,1221.39 993.649,1222.57 994.235,1222.43 994.822,1223.59 995.408,1222.02 995.994,1221.82 996.581,1222.94 997.167,1225.34 997.754,1225.08 998.34,1227.21 998.926,1226.73 999.513,1221.18 1000.1,1223.47 1000.69,1221.9 1001.27,1224.25 1001.86,1226.38 1002.44,1227.13 1003.03,1227.9 1003.62,1228.8 1004.2,1229.15 1004.79,1229.86 1005.38,1229.17 1005.96,1232.08 1006.55,1228.93 1007.14,1226.19 1007.72,1225.93 1008.31,1225.49 1008.9,1223.98 1009.48,1221.53 1010.07,1221.27 1010.65,1220.91 1011.24,1222.26 1011.83,1223.31 1012.41,1224.43 1013,1222.97 1013.59,1221.67 1014.17,1222.8 1014.76,1221.22 1015.35,1222.18 1015.93,1223.18 1016.52,1222.86 1017.11,1223.99 1017.69,1223.75 1018.28,1225.64 1018.86,1225.33 1019.45,1222.48 1020.04,1222.41 1020.62,1222.38 1021.21,1218.65 1021.8,1218.79 1022.38,1218.75 1022.97,1217.12 1023.56,1215.96 1024.14,1218.64 1024.73,1218.53 1025.32,1218.36 1025.9,1220.93 1026.49,1219.79 1027.07,1218.69 1027.66,1217.67 1028.25,1217.8 1028.83,1216.47 1029.42,1219.12 1030.01,1216.77 1030.59,1215.75 1031.18,1213.83 1031.77,1215.19 1032.35,1215.37 1032.94,1219.18 1033.52,1217.91 1034.11,1216.9 1034.7,1214.83 1035.28,1213.73 1035.87,1215.26 1036.46,1215.36 1037.04,1212.83 1037.63,1214.6 1038.22,1214.77 1038.8,1215.1 1039.39,1217.61 1039.98,1216.47 1040.56,1216.42 1041.15,1217.94 1041.73,1220.78 1042.32,1219.56 1042.91,1218.24 1043.49,1220.45 1044.08,1220.28 1044.67,1217.69 1045.25,1217.8 1045.84,1216.57 1046.43,1216.98 1047.01,1218.23 1047.6,1223.13 1048.19,1221.82 1048.77,1217.69 1049.36,1217.64 1049.94,1216.45 1050.53,1218.86 1051.12,1221.57 1051.7,1222.16 1052.29,1223.17 1052.88,1221.45 1053.46,1221.47 1054.05,1221.3 1054.64,1221.14 1055.22,1218.52 1055.81,1217.5 1056.39,1214.98 1056.98,1215.24 1057.57,1212.85 1058.15,1211.74 1058.74,1213.19 1059.33,1216.11 1059.91,1216.29 1060.5,1216.33 1061.09,1216.6 1061.67,1214.07 1062.26,1213.06 1062.85,1213.49 1063.43,1217.6 1064.02,1220.01 1064.6,1220.11 1065.19,1218.93 1065.78,1217.62 1066.36,1217.89 1066.95,1217.95 1067.54,1217.8 1068.12,1220.3 1068.71,1220.12 1069.3,1220.03 1069.88,1219.9 1070.47,1218.65 1071.06,1216.19 1071.64,1213.73 1072.23,1212.75 1072.81,1212.63 1073.4,1213.09 1073.99,1213.45 1074.57,1213.75 1075.16,1215.19 1075.75,1215.57 1076.33,1214.43 1076.92,1217.07 1077.51,1219.76 1078.09,1220.04 1078.68,1220.06 1079.26,1219.74 1079.85,1218.4 1080.44,1214.82 1081.02,1216.33 1081.61,1215.49 1082.2,1216.87 1082.78,1214.8 1083.37,1215.13 1083.96,1215.57 1084.54,1216.98 1085.13,1215.74 1085.72,1215.68 1086.3,1217.15 1086.89,1214.59 1087.47,1214.95 1088.06,1216.35 1088.65,1215.16 1089.23,1215.34 1089.82,1215.58 1090.41,1214.84 1090.99,1216.21 1091.58,1218.47 1092.17,1218.39 1092.75,1218.43 1093.34,1216.17 1093.93,1218.69 1094.51,1221.07 1095.1,1220.97 1095.68,1221.95 1096.27,1221.85 1096.86,1221.65 1097.44,1219.01 1098.03,1217.84 1098.62,1220.39 1099.2,1218.02 1099.79,1218.31 1100.38,1217.02 1100.96,1218.44 1101.55,1219.68 1102.14,1218.52 1102.72,1220.15 1103.31,1217.44 1103.89,1218.46 1104.48,1217.06 1105.07,1215.84 1105.65,1213.47 1106.24,1212.55 1106.83,1211.75 1107.41,1212.16 1108,1212.57 1108.59,1217.8 1109.17,1216.63 1109.76,1216.85 1110.34,1215.45 1110.93,1210.57 1111.52,1212.02 1112.1,1213.53 1112.69,1212.46 1113.28,1214.28 1113.86,1213.29 1114.45,1213.7 1115.04,1216.17 1115.62,1217.37 1116.21,1217.55 1116.8,1217.56 1117.38,1217.49 1117.97,1218.83 1118.55,1220.15 1119.14,1220.29 1119.73,1218.9 1120.31,1217.8 1120.9,1216.85 1121.49,1215.51 1122.07,1218.15 1122.66,1218.29 1123.25,1218.21 1123.83,1218.31 1124.42,1219.28 1125.01,1218.06 1125.59,1219.01 1126.18,1222.45 1126.76,1224.76 1127.35,1223.32 1127.94,1220.46 1128.52,1219.03 1129.11,1217.43 1129.7,1217.61 1130.28,1217.74 1130.87,1216.44 1131.46,1217.83 1132.04,1218.74 1132.63,1220.01 1133.21,1221.04 1133.8,1217.4 1134.39,1216.13 1134.97,1221.09 1135.56,1218.44 1136.15,1218.22 1136.73,1217.21 1137.32,1218.57 1137.91,1219.6 1138.49,1220.52 1139.08,1222.81 1139.67,1222.65 1140.25,1222.5 1140.84,1222.19 1141.42,1224.26 1142.01,1224.12 1142.6,1223.89 1143.18,1222.28 1143.77,1222.01 1144.36,1220.26 1144.94,1216.47 1145.53,1211.7 1146.12,1210.62 1146.7,1211.15 1147.29,1210.25 1147.88,1212.15 1148.46,1212.43 1149.05,1214.1 1149.63,1214.42 1150.22,1213.33 1150.81,1213.49 1151.39,1212.5 1151.98,1210.51 1152.57,1212.3 1153.15,1213.57 1153.74,1215.14 1154.33,1214.15 1154.91,1215.66 1155.5,1216.02 1156.09,1216.38 1156.67,1216.38 1157.26,1213.03 1157.84,1214.59 1158.43,1214.63 1159.02,1211.24 1159.6,1210.56 1160.19,1213.23 1160.78,1212.22 1161.36,1210.11 1161.95,1210.55 1162.54,1209.93 1163.12,1209.15 1163.71,1210.93 1164.29,1210.01 1164.88,1210.36 1165.47,1210.86 1166.05,1217.51 1166.64,1220.08 1167.23,1218.85 1167.81,1220.11 1168.4,1218.94 1168.99,1221.49 1169.57,1221.44 1170.16,1222.6 1170.75,1222.17 1171.33,1223.26 1171.92,1222.08 1172.5,1220.7 1173.09,1220.51 1173.68,1219.11 1174.26,1221.22 1174.85,1219.7 1175.44,1218.21 1176.02,1219.15 1176.61,1217.8 1177.2,1215.37 1177.78,1215.5 1178.37,1215.57 1178.96,1215.51 1179.54,1216.86 1180.13,1218.29 1180.71,1218.19 1181.3,1220.75 1181.89,1219.41 1182.47,1218.39 1183.06,1219.75 1183.65,1218.35 1184.23,1220.89 1184.82,1219.48 1185.41,1218.23 1185.99,1216.04 1186.58,1217.18 1187.16,1218.69 1187.75,1219.05 1188.34,1217.85 1188.92,1218.06 1189.51,1222.76 1190.1,1221.5 1190.68,1217.58 1191.27,1218.79 1191.86,1218.79 1192.44,1217.31 1193.03,1218.74 1193.62,1220.29 1194.2,1221.5 1194.79,1221.21 1195.37,1220.95 1195.96,1219.59 1196.55,1218.02 1197.13,1218.01 1197.72,1220.52 1198.31,1220.54 1198.89,1217.82 1199.48,1217.95 1200.07,1218.07 1200.65,1217.92 1201.24,1217.75 1201.83,1217.44 1202.41,1219.93 1203,1218.57 1203.58,1220.04 1204.17,1219.99 1204.76,1221.19 1205.34,1222.24 1205.93,1224.46 1206.52,1226.56 1207.1,1226.26 1207.69,1225.86 1208.28,1225.48 1208.86,1226.34 1209.45,1224.6 1210.03,1224.29 1210.62,1221.63 1211.21,1224.01 1211.79,1223.51 1212.38,1224.54 1212.97,1224.27 1213.55,1225.22 1214.14,1224.79 1214.73,1224.67 1215.31,1226.83 1215.9,1225.04 1216.49,1223.49 1217.07,1223.38 1217.66,1223.13 1218.24,1221.59 1218.83,1224 1219.42,1223.73 1220,1226.02 1220.59,1223.34 1221.18,1224.25 1221.76,1222.81 1222.35,1221.22 1222.94,1220.86 1223.52,1220.7 1224.11,1221.89 1224.7,1220.51 1225.28,1217.84 1225.87,1218.97 1226.45,1221.46 1227.04,1220.07 1227.63,1219.75 1228.21,1220.78 1228.8,1223.04 1229.39,1221.64 1229.97,1221.46 1230.56,1221.4 1231.15,1221.28 1231.73,1222.26 1232.32,1223.14 1232.91,1220.32 1233.49,1220.44 1234.08,1221.35 1234.66,1219.87 1235.25,1219.65 1235.84,1220.79 1236.42,1222.21 1237.01,1222.03 1237.6,1218.4 1238.18,1218.18 1238.77,1216.94 1239.36,1216.78 1239.94,1218.35 1240.53,1218.58 1241.11,1218.39 1241.7,1219.97 1242.29,1221.14 1242.87,1223.3 1243.46,1222.81 1244.05,1220.27 1244.63,1217.42 1245.22,1218.5 1245.81,1219.77 1246.39,1219.82 1246.98,1219.6 1247.57,1218.45 1248.15,1219.88 1248.74,1218.58 1249.32,1218.77 1249.91,1217.53 1250.5,1217.55 1251.08,1216.03 1251.67,1216.29 1252.26,1213.81 1252.84,1215.2 1253.43,1211.57 1254.02,1211.89 1254.6,1212.24 1255.19,1214.93 1255.78,1214.9 1256.36,1216.65 1256.95,1216.69 1257.53,1215.18 1258.12,1215.36 1258.71,1215.39 1259.29,1214.2 1259.88,1210.42 1260.47,1212.05 1261.05,1208.78 1261.64,1209.41 1262.23,1210.29 1262.81,1210.82 1263.4,1210.15 1263.98,1210.66 1264.57,1211.25 1265.16,1211.83 1265.74,1214.75 1266.33,1213.88 1266.92,1216.78 1267.5,1216.82 1268.09,1216.77 1268.68,1215.82 1269.26,1217.43 1269.85,1216.14 1270.44,1216.3 1271.02,1214.04 1271.61,1215.39 1272.19,1215.65 1272.78,1216.95 1273.37,1216.94 1273.95,1216.92 1274.54,1214.67 1275.13,1213.78 1275.71,1215.46 1276.3,1215.45 1276.89,1217.99 1277.47,1217.76 1278.06,1217.74 1278.65,1219.17 1279.23,1217.96 1279.82,1215.29 1280.4,1216.82 1280.99,1215.7 1281.58,1218.3 1282.16,1218.18 1282.75,1218.03 1283.34,1216.8 1283.92,1211.86 1284.51,1217.1 1285.1,1218.1 1285.68,1221.8 1286.27,1221.73 1286.86,1222.76 1287.44,1223.33 1288.03,1224.26 1288.61,1226.3 1289.2,1224.86 1289.79,1224.36 1290.37,1223.86 1290.96,1221.13 1291.55,1222.19 1292.13,1223.11 1292.72,1224.03 1293.31,1227.59 1293.89,1225.98 1294.48,1225.97 1295.06,1225.55 1295.65,1223.95 1296.24,1226.13 1296.82,1225.88 1297.41,1225.46 1298,1226.2 1298.58,1226.84 1299.17,1226.29 1299.76,1223.5 1300.34,1224.35 1300.93,1226.71 1301.52,1223.61 1302.1,1223.36 1302.69,1223.11 1303.27,1224.12 1303.86,1222.29 1304.45,1220.61 1305.03,1219.1 1305.62,1220.52 1306.21,1219.04 1306.79,1219.98 1307.38,1218.7 1307.97,1217.48 1308.55,1214.02 1309.14,1217.96 1309.73,1220.37 1310.31,1220.35 1310.9,1219.88 1311.48,1219.87 1312.07,1220.89 1312.66,1223.19 1313.24,1222.76 1313.83,1223.89 1314.42,1223.49 1315,1224.43 1315.59,1222.95 1316.18,1222.98 1316.76,1222.74 1317.35,1222.56 1317.93,1223.39 1318.52,1224.33 1319.11,1223.97 1319.69,1223.49 1320.28,1220.6 1320.87,1220.4 1321.45,1221.53 1322.04,1221.43 1322.63,1223.65 1323.21,1224.48 1323.8,1224.15 1324.39,1222.77 1324.97,1221.18 1325.56,1220.02 1326.14,1220.12 1326.73,1221.2 1327.32,1216.17 1327.9,1216.21 1328.49,1212.57 1329.08,1214.08 1329.66,1214.07 1330.25,1214.36 1330.84,1216.14 1331.42,1217.34 1332.01,1218.52 1332.6,1219.65 1333.18,1220.8 1333.77,1220.47 1334.35,1220.4 1334.94,1217.54 1335.53,1218.51 1336.11,1217.24 1336.7,1217.43 1337.29,1217.59 1337.87,1215.34 1338.46,1214.53 1339.05,1215.96 1339.63,1221.12 1340.22,1219.8 1340.8,1219.73 1341.39,1219.66 1341.98,1220.75 1342.56,1219.1 1343.15,1221.28 1343.74,1218.74 1344.32,1222.4 1344.91,1222.1 1345.5,1220.77 1346.08,1224.25 1346.67,1223.76 1347.26,1220.81 1347.84,1218.26 1348.43,1217.06 1349.01,1217.25 1349.6,1216 1350.19,1213.46 1350.77,1212.79 1351.36,1214.14 1351.95,1215.65 1352.53,1215.82 1353.12,1214.95 1353.71,1216.49 1354.29,1219.01 1354.88,1220.23 1355.47,1217.8 1356.05,1216.63 1356.64,1215.2 1357.22,1216.58 1357.81,1216.74 1358.4,1214.49 1358.98,1211.08 1359.57,1211.73 1360.16,1214.41 1360.74,1217.28 1361.33,1216.07 1361.92,1215.06 1362.5,1213.76 1363.09,1214.22 1363.68,1214.37 1364.26,1213.53 1364.85,1215.03 1365.43,1218.9 1366.02,1220.08 1366.61,1219.8 1367.19,1218.39 1367.78,1218.29 1368.37,1218.11 1368.95,1220.41 1369.54,1221.55 1370.13,1221.27 1370.71,1219.93 1371.3,1218.5 1371.88,1218.85 1372.47,1218.81 1373.06,1221.2 1373.64,1220.93 1374.23,1219.36 1374.82,1220.77 1375.4,1220.46 1375.99,1220.5 1376.58,1220.2 1377.16,1218.71 1377.75,1217.48 1378.34,1217.53 1378.92,1217.63 1379.51,1217.71 1380.09,1215.36 1380.68,1214.27 1381.27,1214.4 1381.85,1211.85 1382.44,1210.99 1383.03,1209.08 1383.61,1207.04 1384.2,1206.33 1384.79,1205.57 1385.37,1207.58 1385.96,1209.12 1386.55,1209.69 1387.13,1212.53 1387.72,1214.02 1388.3,1211.77 1388.89,1212.12 1389.48,1212.51 1390.06,1213.1 1390.65,1213.31 1391.24,1215.96 1391.82,1214.76 1392.41,1215.06 1393,1215.55 1393.58,1215.51 1394.17,1215.85 1394.75,1217.23 1395.34,1214.85 1395.93,1214.92 1396.51,1215.13 1397.1,1214.14 1397.69,1215.81 1398.27,1215.96 1398.86,1216.02 1399.45,1216.34 1400.03,1215.58 1400.62,1217 1401.21,1217.01 1401.79,1218.56 1402.38,1219.84 1402.96,1222.09 1403.55,1222 1404.14,1221.85 1404.72,1221.56 1405.31,1222.33 1405.9,1223.4 1406.48,1224.27 1407.07,1221.97 1407.66,1219.39 1408.24,1219.07 1408.83,1217.95 1409.42,1218.01 1410,1215.57 1410.59,1216.88 1411.17,1214.53 1411.76,1215.08 1412.35,1215.29 1412.93,1214.31 1413.52,1213.09 1414.11,1213.21 1414.69,1212.28 1415.28,1212.46 1415.87,1214.04 1416.45,1214.24 1417.04,1216.7 1417.63,1219.11 1418.21,1221.65 1418.8,1220.2 1419.38,1222.74 1419.97,1223.57 1420.56,1223.15 1421.14,1220.68 1421.73,1221.96 1422.32,1221.76 1422.9,1221.52 1423.49,1219.18 1424.08,1219.12 1424.66,1217.85 1425.25,1216.77 1425.83,1218.19 1426.42,1219.34 1427.01,1218.02 1427.59,1217.87 1428.18,1217.92 1428.77,1217.95 1429.35,1220.45 1429.94,1219.09 1430.53,1220.43 1431.11,1220.32 1431.7,1221.49 1432.29,1219.95 1432.87,1221.4 1433.46,1220.19 1434.04,1218.73 1434.63,1219.99 1435.22,1218.97 1435.8,1218.93 1436.39,1216.32 1436.98,1216.5 1437.56,1216.6 1438.15,1218.02 1438.74,1219.33 1439.32,1219.62 1439.91,1218.47 1440.5,1218.15 1441.08,1219.44 1441.67,1219.28 1442.25,1220.19 1442.84,1222.63 1443.43,1222.29 1444.01,1220.86 1444.6,1220.91 1445.19,1220.83 1445.77,1220.72 1446.36,1220.58 1446.95,1217.92 1447.53,1220.04 1448.12,1219.88 1448.7,1219.69 1449.29,1220.76 1449.88,1222.86 1450.46,1218.89 1451.05,1218.97 1451.64,1217.73 1452.22,1217.83 1452.81,1220.5 1453.4,1220.23 1453.98,1221.27 1454.57,1220.02 1455.16,1222.46 1455.74,1220.93 1456.33,1222.18 1456.91,1223.3 1457.5,1224.45 1458.09,1225.43 1458.67,1225.14 1459.26,1225.79 1459.85,1225.17 1460.43,1224.73 1461.02,1224.35 1461.61,1225.06 1462.19,1224.75 1462.78,1224.43 1463.37,1225.35 1463.95,1225.35 1464.54,1223.79 1465.12,1223.56 1465.71,1222.05 1466.3,1219.47 1466.88,1221.77 1467.47,1220.17 1468.06,1221.26 1468.64,1221.05 1469.23,1224.76 1469.82,1220.46 1470.4,1222.84 1470.99,1223.65 1471.57,1223.32 1472.16,1223.17 1472.75,1224.13 1473.33,1225.17 1473.92,1223.55 1474.51,1223.33 1475.09,1223.15 1475.68,1220.12 1476.27,1218.11 1476.85,1220.6 1477.44,1221.85 1478.03,1220.45 1478.61,1220.59 1479.2,1219.5 1479.78,1219.53 1480.37,1219.58 1480.96,1220.8 1481.54,1220.89 1482.13,1221.98 1482.72,1215.62 1483.3,1215.8 1483.89,1214.75 1484.48,1213.85 1485.06,1214.07 1485.65,1215.53 1486.24,1214.73 1486.82,1213.6 1487.41,1215.05 1487.99,1216.68 1488.58,1217.84 1489.17,1216.47 1489.75,1217.51 1490.34,1217.59 1490.93,1213.96 1491.51,1214.2 1492.1,1211.66 1492.69,1214.19 1493.27,1215.48 1493.86,1214.29 1494.45,1214.49 1495.03,1212.06 1495.62,1213.65 1496.2,1213.68 1496.79,1213.85 1497.38,1212.79 1497.96,1212.07 1498.55,1212.57 1499.14,1213 1499.72,1213.43 1500.31,1215 1500.9,1212.81 1501.48,1210.58 1502.07,1211.08 1502.65,1208.87 1503.24,1209.4 1503.83,1209.93 1504.41,1211.51 1505,1213.29 1505.59,1213.33 1506.17,1213.73 1506.76,1213.75 1507.35,1209.07 1507.93,1207.16 1508.52,1206.84 1509.11,1208.47 1509.69,1207.83 1510.28,1209.77 1510.86,1211.6 1511.45,1211.91 1512.04,1212.39 1512.62,1211.18 1513.21,1210.42 1513.8,1210.86 1514.38,1208.82 1514.97,1213.12 1515.56,1213.35 1516.14,1213.48 1516.73,1212.86 1517.32,1211.89 1517.9,1210.84 1518.49,1212.23 1519.07,1211.24 1519.66,1210.48 1520.25,1209.78 1520.83,1210.34 1521.42,1209.53 1522.01,1209.09 1522.59,1207.42 1523.18,1209.37 1523.77,1212.21 1524.35,1213.94 1524.94,1213.94 1525.52,1214.29 1526.11,1217.13 1526.7,1218.25 1527.28,1218.27 1527.87,1220.83 1528.46,1223.17 1529.04,1222.99 1529.63,1223.68 1530.22,1222.12 1530.8,1221.02 1531.39,1219.5 1531.98,1219.43 1532.56,1219.26 1533.15,1218.01 1533.73,1218.09 1534.32,1218.32 1534.91,1219.48 1535.49,1219.59 1536.08,1220.8 1536.67,1222.86 1537.25,1219.95 1537.84,1217.59 1538.43,1219.9 1539.01,1221.07 1539.6,1222.34 1540.19,1225.75 1540.77,1226.55 1541.36,1224.61 1541.94,1225.21 1542.53,1224.73 1543.12,1222.02 1543.7,1225.64 1544.29,1223.97 1544.88,1223.49 1545.46,1223.39 1546.05,1225.6 1546.64,1224.08 1547.22,1225.89 1547.81,1221.92 1548.4,1221.75 1548.98,1219.05 1549.57,1221.44 1550.15,1219.96 1550.74,1217.38 1551.33,1220.04 1551.91,1217.43 1552.5,1218.64 1553.09,1219.73 1553.67,1220.67 1554.26,1221.53 1554.85,1223.73 1555.43,1222.17 1556.02,1219.4 1556.6,1219.14 1557.19,1218.95 1557.78,1218.92 1558.36,1217.54 1558.95,1217.54 1559.54,1217.56 1560.12,1216.04 1560.71,1217.08 1561.3,1213.22 1561.88,1214.76 1562.47,1213.27 1563.06,1214.85 1563.64,1214.91 1564.23,1213.64 1564.81,1213.85 1565.4,1215.23 1565.99,1214.1 1566.57,1213.25 1567.16,1213.56 1567.75,1213.64 1568.33,1214.03 1568.92,1214.34 1569.51,1214.67 1570.09,1213.8 1570.68,1212.96 1571.27,1212.89 1571.85,1213.13 1572.44,1213.6 1573.02,1212.6 1573.61,1212.97 1574.2,1212.18 1574.78,1210.03 1575.37,1210.31 1575.96,1209.36 1576.54,1213.31 1577.13,1214.82 1577.72,1213.62 1578.3,1214.04 1578.89,1214.32 1579.47,1214.37 1580.06,1214.7 1580.65,1217.47 1581.23,1218.98 1581.82,1220.02 1582.41,1222.27 1582.99,1221.32 1583.58,1222.47 1584.17,1223.29 1584.75,1222.95 1585.34,1223.79 1585.93,1224.56 1586.51,1224.36 1587.1,1223.98 1587.68,1224.86 1588.27,1226.97 1588.86,1225.26 1589.44,1229.79 1590.03,1229.38 1590.62,1229.82 1591.2,1226.95 1591.79,1227.58 1592.38,1229.65 1592.96,1229.17 1593.55,1233.44 1594.14,1230.25 1594.72,1232.24 1595.31,1232.79 1595.89,1234.91 1596.48,1234.19 1597.07,1232.36 1597.65,1230.23 1598.24,1228.14 1598.83,1227.72 1599.41,1225.75 1600,1227.86 1600.59,1226.04 1601.17,1227.71 1601.76,1225.75 1602.34,1226.52 1602.93,1226.15 1603.52,1228.24 1604.1,1227.81 1604.69,1229.87 1605.28,1227.89 1605.86,1229.94 1606.45,1229.57 1607.04,1227.56 1607.62,1227.26 1608.21,1226.96 1608.8,1227.28 1609.38,1225.5 1609.97,1223.54 1610.55,1220.53 1611.14,1220.44 1611.73,1219.15 1612.31,1219.22 1612.9,1219.22 1613.49,1220.55 1614.07,1219.17 1614.66,1220.55 1615.25,1219.31 1615.83,1219.1 1616.42,1218.84 1617.01,1217.52 1617.59,1218.57 1618.18,1215.99 1618.76,1214.7 1619.35,1216.31 1619.94,1216.44 1620.52,1216.51 1621.11,1217.94 1621.7,1216.73 1622.28,1220.38 1622.87,1216.79 1623.46,1218.09 1624.04,1216.83 1624.63,1215.66 1625.22,1213.11 1625.8,1213.47 1626.39,1213.72 1626.97,1216.27 1627.56,1217.62 1628.15,1220.19 1628.73,1221.48 1629.32,1220.1 1629.91,1218.75 1630.49,1217.6 1631.08,1217.36 1631.67,1214.85 1632.25,1216.19 1632.84,1215.1 1633.42,1216.37 1634.01,1217.78 1634.6,1216.58 1635.18,1212.85 1635.77,1212.94 1636.36,1212.05 1636.94,1210.18 1637.53,1208.18 1638.12,1208.84 1638.7,1208.27 1639.29,1206.45 1639.88,1206.02 1640.46,1205.57 1641.05,1207.32 1641.63,1208.03 1642.22,1208.72 1642.81,1209.38 1643.39,1208.45 1643.98,1210.15 1644.57,1216.65 1645.15,1218 1645.74,1219.22 1646.33,1219.25 1646.91,1220.37 1647.5,1216.65 1648.09,1219.03 1648.67,1216.82 1649.26,1215.7 1649.84,1217.07 1650.43,1222.24 1651.02,1223.22 1651.6,1224.36 1652.19,1221.64 1652.78,1217.74 1653.36,1217.65 1653.95,1217.61 1654.54,1219.09 1655.12,1220.43 1655.71,1217.87 1656.29,1219.12 1656.88,1216.63 1657.47,1218.05 1658.05,1217.8 1658.64,1217.93 1659.23,1215.29 1659.81,1214.23 1660.4,1214.97 1660.99,1217.55 1661.57,1215.02 1662.16,1216.31 1662.75,1216.21 1663.33,1215.08 1663.92,1213.91 1664.5,1213.92 1665.09,1214.06 1665.68,1214.08 1666.26,1215.7 1666.85,1216.92 1667.44,1215.67 1668.02,1214.45 1668.61,1213.54 1669.2,1213.64 1669.78,1213.02 1670.37,1214.54 1670.96,1214.64 1671.54,1215.95 1672.13,1216.3 1672.71,1217.86 1673.3,1215.6 1673.89,1213.49 1674.47,1216.13 1675.06,1216.3 1675.65,1215.35 1676.23,1214.27 1676.82,1214.34 1677.41,1214.8 1677.99,1213.61 1678.58,1215.04 1679.17,1217.77 1679.75,1216.54 1680.34,1218.07 1680.92,1218.31 1681.51,1218.34 1682.1,1218.15 1682.68,1216.9 1683.27,1217.02 1683.86,1215.95 1684.44,1216 1685.03,1217.49 1685.62,1217.52 1686.2,1218.72 1686.79,1214.91 1687.37,1215.25 1687.96,1216.39 1688.55,1216.41 1689.13,1216.63 1689.72,1216.65 1690.31,1215.64 1690.89,1215.4 1691.48,1215.57 1692.07,1214.59 1692.65,1213.5 1693.24,1213.9 1693.83,1212.92 1694.41,1214.45 1695,1213.48 1695.58,1213.62 1696.17,1216.24 1696.76,1218.79 1697.34,1218.66 1697.93,1219.8 1698.52,1220.95 1699.1,1218.39 1699.69,1218.26 1700.28,1220.42 1700.86,1220.33 1701.45,1220.02 1702.04,1222.17 1702.62,1220.58 1703.21,1220.53 1703.79,1219.13 1704.38,1217.58 1704.97,1218.58 1705.55,1219.82 1706.14,1218.43 1706.73,1216.12 1707.31,1216.25 1707.9,1215.1 1708.49,1215.37 1709.07,1214.62 1709.66,1213.61 1710.24,1212.62 1710.83,1214.37 1711.42,1217.4 1712,1217.41 1712.59,1218.92 1713.18,1218.96 1713.76,1221.37 1714.35,1219.88 1714.94,1220.79 1715.52,1221.58 1716.11,1222.51 1716.7,1219.79 1717.28,1222.2 1717.87,1221.71 1718.45,1220.31 1719.04,1220.25 1719.63,1221.23 1720.21,1218.66 1720.8,1214.89 1721.39,1215.21 1721.97,1215.38 1722.56,1216.47 1723.15,1214.31 1723.73,1213.26 1724.32,1209.77 1724.91,1211.47 1725.49,1214.27 1726.08,1215.8 1726.66,1214.67 1727.25,1216.26 1727.84,1216.38 1728.42,1218.07 1729.01,1219.55 1729.6,1217.2 1730.18,1214.76 1730.77,1220.01 1731.36,1217.19 1731.94,1214.73 1732.53,1215.89 1733.11,1214.52 1733.7,1213.61 1734.29,1214.05 1734.87,1214.36 1735.46,1215.66 1736.05,1217.05 1736.63,1217.12 1737.22,1216.02 1737.81,1218.52 1738.39,1219.66 1738.98,1221.08 1739.57,1222.12 1740.15,1220.93 1740.74,1220.88 1741.32,1220.54 1741.91,1221.71 1742.5,1220.21 1743.08,1218.82 1743.67,1218.83 1744.26,1217.62 1744.84,1221.27 1745.43,1218.72 1746.02,1217.43 1746.6,1216.23 1747.19,1217.65 1747.78,1217.69 1748.36,1216.58 1748.95,1217.97 1749.53,1215.29 1750.12,1216.67 1750.71,1215.53 1751.29,1215.52 1751.88,1218.01 1752.47,1219.26 1753.05,1220.3 1753.64,1217.83 1754.23,1216.6 1754.81,1214.16 1755.4,1215.64 1755.99,1216.08 1756.57,1214.82 1757.16,1213.72 1757.74,1216.56 1758.33,1216.85 1758.92,1219.5 1759.5,1219.18 1760.09,1220.09 1760.68,1218.7 1761.26,1217.5 1761.85,1214.97 1762.44,1214.28 1763.02,1215.87 1763.61,1217.01 1764.19,1215.89 1764.78,1214.65 1765.37,1214.91 1765.95,1216.21 1766.54,1213.73 1767.13,1211.41 1767.71,1211.74 1768.3,1213.38 1768.89,1211.16 1769.47,1212.96 1770.06,1213.28 1770.65,1212.04 1771.23,1209.8 1771.82,1213.67 1772.4,1212.7 1772.99,1213.06 1773.58,1213.34 1774.16,1213.62 1774.75,1213.96 1775.34,1214.31 1775.92,1215.61 1776.51,1215.4 1777.1,1215.7 1777.68,1215.73 1778.27,1213.48 1778.86,1213.69 1779.44,1213.85 1780.03,1213.03 1780.61,1214.63 1781.2,1217.38 1781.79,1217.69 1782.37,1218.72 1782.96,1219.93 1783.55,1221.05 1784.13,1219.95 1784.72,1220.03 1785.31,1218.84 1785.89,1217.72 1786.48,1219.06 1787.06,1218.87 1787.65,1218.85 1788.24,1216.24 1788.82,1216.35 1789.41,1217.62 1790,1221.69 1790.58,1223.03 1791.17,1224.33 1791.76,1225.02 1792.34,1224.93 1792.93,1224.78 1793.52,1223 1794.1,1222.8 1794.69,1222.39 1795.27,1219.4 1795.86,1220.66 1796.45,1220.43 1797.03,1220.45 1797.62,1222.66 1798.21,1223.77 1798.79,1222.14 1799.38,1223.31 1799.97,1224.44 1800.55,1222.83 1801.14,1223.65 1801.73,1222.29 1802.31,1220.96 1802.9,1217.33 1803.48,1218.54 1804.07,1221.01 1804.66,1221.74 1805.24,1219.08 1805.83,1220.09 1806.42,1221.13 1807,1223.16 1807.59,1222.84 1808.18,1222.75 1808.76,1225.03 1809.35,1224.62 1809.94,1223.12 1810.52,1223.07 1811.11,1221.72 1811.69,1220.03 1812.28,1218.72 1812.87,1221.02 1813.45,1221.01 1814.04,1220.7 1814.63,1220.41 1815.21,1218.81 1815.8,1220.01 1816.39,1219.92 1816.97,1222.2 1817.56,1223.4 1818.14,1221.9 1818.73,1221.37 1819.32,1222.44 1819.9,1222.1 1820.49,1222.8 1821.08,1222.48 1821.66,1223.52 1822.25,1220.69 1822.84,1220.46 1823.42,1220.16 1824.01,1221.04 1824.6,1220.7 1825.18,1220.57 1825.77,1221.68 1826.35,1218.99 1826.94,1218.84 1827.53,1219.97 1828.11,1221.03 1828.7,1218.27 1829.29,1219.49 1829.87,1219.6 1830.46,1218.67 1831.05,1221.04 1831.63,1218.11 1832.22,1220.52 1832.81,1221.42 1833.39,1222.53 1833.98,1220.97 1834.56,1220.74 1835.15,1219.49 1835.74,1219.78 1836.32,1219.48 1836.91,1219.48 1837.5,1220.69 1838.08,1217.98 1838.67,1217.76 1839.26,1219.19 1839.84,1216.59 1840.43,1215.44 1841.01,1220.76 1841.6,1220.59 1842.19,1220.59 1842.77,1221.88 1843.36,1220.71 1843.95,1220.84 1844.53,1219.64 1845.12,1219.57 1845.71,1218.23 1846.29,1218.08 1846.88,1215.55 1847.47,1218.11 1848.05,1219.41 1848.64,1219.61 1849.22,1218.03 1849.81,1215.61 1850.4,1216.96 1850.98,1219.2 1851.57,1217.7 1852.16,1219.13 1852.74,1217.92 1853.33,1216.75 1853.92,1216.91 1854.5,1215.67 1855.09,1214.45 1855.68,1214.67 1856.26,1213.46 1856.85,1212.4 1857.43,1214.09 1858.02,1214.41 1858.61,1215.74 1859.19,1215.91 1859.78,1217.2 1860.37,1217.04 1860.95,1217.03 1861.54,1218.08 1862.13,1219.21 1862.71,1219.26 1863.3,1221.87 1863.88,1223.04 1864.47,1222.95 1865.06,1221.36 1865.64,1220.16 1866.23,1222.65 1866.82,1218.88 1867.4,1216.24 1867.99,1216.15 1868.58,1214.97 1869.16,1216.19 1869.75,1218.75 1870.34,1220.03 1870.92,1219.92 1871.51,1217.59 1872.09,1214.9 1872.68,1216.45 1873.27,1216.64 1873.85,1216.5 1874.44,1216.51 1875.03,1218.92 1875.61,1220.03 1876.2,1219.93 1876.79,1218.71 1877.37,1217.36 1877.96,1218.66 1878.55,1217.64 1879.13,1216.77 1879.72,1215.66 1880.3,1215.94 1880.89,1216.11 1881.48,1216.14 1882.06,1217.48 1882.65,1220 1883.24,1218.61 1883.82,1220.24 1884.41,1220.17 1885,1219.93 1885.58,1219.56 1886.17,1220.38 1886.76,1220.5 1887.34,1221.59 1887.93,1221.54 1888.51,1220.14 1889.1,1217.4 1889.69,1216.3 1890.27,1217.72 1890.86,1216.43 1891.45,1216.34 1892.03,1215.32 1892.62,1215.53 1893.21,1214.49 1893.79,1214.8 1894.38,1216.39 1894.96,1217.89 1895.55,1220.41 1896.14,1220 1896.72,1221.21 1897.31,1219.97 1897.9,1218.4 1898.48,1216.86 1899.07,1220.54 1899.66,1219.21 1900.24,1217.95 1900.83,1216.61 1901.42,1216.71 1902,1216.58 1902.59,1221.78 1903.17,1221.76 1903.76,1219.01 1904.35,1220.41 1904.93,1219.06 1905.52,1219.13 1906.11,1216.66 1906.69,1216.84 1907.28,1214.38 1907.87,1216.06 1908.45,1217.63 1909.04,1221.67 1909.63,1221.92 1910.21,1220.44 1910.8,1221.67 1911.38,1221.48 1911.97,1221.13 1912.56,1220.78 1913.14,1221.88 1913.73,1221.45 1914.32,1221.29 1914.9,1219.7 1915.49,1218.68 1916.08,1217.79 1916.66,1216.71 1917.25,1215.45 1917.83,1214.25 1918.42,1215.67 1919.01,1210.81 1919.59,1211.24 1920.18,1208.1 1920.77,1209.92 1921.35,1211.36 1921.94,1212.98 1922.53,1214.72 1923.11,1216.22 1923.7,1217.57 1924.29,1217.74 1924.87,1218.99 1925.46,1218.73 1926.04,1218.6 1926.63,1215.91 1927.22,1213.59 1927.8,1214.87 1928.39,1216.27 1928.98,1215.18 1929.56,1217.69 1930.15,1219.13 1930.74,1220.14 1931.32,1220.09 1931.91,1221.27 1932.5,1219.87 1933.08,1219.58 1933.67,1219.49 1934.25,1220.62 1934.84,1221.8 1935.43,1220.2 1936.01,1221.42 1936.6,1221.11 1937.19,1220.92 1937.77,1220.88 1938.36,1221.95 1938.95,1222.08 1939.53,1220.81 1940.12,1221.83 1940.71,1221.62 1941.29,1222.44 1941.88,1222.15 1942.46,1220.97 1943.05,1219.8 1943.64,1218.34 1944.22,1220.66 1944.81,1221.83 1945.4,1221.73 1945.98,1221.63 1946.57,1218.97 1947.16,1219.86 1947.74,1220.93 1948.33,1217.05 1948.91,1218.43 1949.5,1218.58 1950.09,1217.4 1950.67,1217.62 1951.26,1216.3 1951.85,1215.15 1952.43,1215.39 1953.02,1214.3 1953.61,1214.56 1954.19,1216.11 1954.78,1214.88 1955.37,1217.85 1955.95,1215.41 1956.54,1215.61 1957.12,1218.11 1957.71,1217.77 1958.3,1220.19 1958.88,1221.29 1959.47,1221.26 1960.06,1222.22 1960.64,1219.89 1961.23,1219.66 1961.82,1219.73 1962.4,1222.1 1962.99,1223.08 1963.58,1221.75 1964.16,1224.03 1964.75,1224.82 1965.33,1220.69 1965.92,1219.48 1966.51,1219.28 1967.09,1218.04 1967.68,1219.24 1968.27,1221.68 1968.85,1222.74 1969.44,1221.47 1970.03,1221.23 1970.61,1219.88 1971.2,1222.34 1971.78,1222.08 1972.37,1220.78 1972.96,1219.39 1973.54,1220.7 1974.13,1221.76 1974.72,1220.38 1975.3,1221.48 1975.89,1222.51 1976.48,1222.13 1977.06,1220.65 1977.65,1221.77 1978.24,1221.41 1978.82,1220.04 1979.41,1222.23 1979.99,1220.73 1980.58,1220.62 1981.17,1220.57 1981.75,1224.36 1982.34,1224.2 1982.93,1226.2 1983.51,1226.9 1984.1,1225.15 1984.69,1223.78 1985.27,1224.68 1985.86,1224.31 1986.45,1222.76 1987.03,1221.09 1987.62,1218.36 1988.2,1217.98 1988.79,1217.8 1989.38,1217.45 1989.96,1218.56 1990.55,1216.16 1991.14,1218.72 1991.72,1217.53 1992.31,1217.6 1992.9,1217.86 1993.48,1218.03 1994.07,1217.92 1994.65,1217.93 1995.24,1219.08 1995.83,1219.02 1996.41,1218.75 1997,1219.84 1997.59,1220.75 1998.17,1219.57 1998.76,1220.65 1999.35,1218.11 1999.93,1215.62 2000.52,1214.54 2001.11,1213.64 2001.69,1215.01 2002.28,1213.97 2002.86,1213.15 2003.45,1212.12 2004.04,1212.06 2004.62,1212.27 2005.21,1209.79 2005.8,1211.68 2006.38,1212.39 2006.97,1212.69 2007.56,1212.66 2008.14,1212.6 2008.73,1211.79 2009.32,1213.34 2009.9,1212.22 2010.49,1212.53 2011.07,1212.39 2011.66,1214.11 2012.25,1215.7 2012.83,1214.53 2013.42,1213.53 2014.01,1213.39 2014.59,1214.75 2015.18,1214.73 2015.77,1213.53 2016.35,1216.24 2016.94,1216.21 2017.53,1216.49 2018.11,1215.3 2018.7,1213.97 2019.28,1217.8 2019.87,1217.68 2020.46,1222.62 2021.04,1227.36 2021.63,1224.54 2022.22,1226.91 2022.8,1227.83 2023.39,1227.61 2023.98,1226.04 2024.56,1224.52 2025.15,1224.53 2025.73,1224.33 2026.32,1224.11 2026.91,1219.88 2027.49,1220.02 2028.08,1219.89 2028.67,1219.62 2029.25,1218.3 2029.84,1219.25 2030.43,1219.35 2031.01,1217.01 2031.6,1215.87 2032.19,1215.81 2032.77,1217.2 2033.36,1217.29 2033.94,1217.25 2034.53,1215.91 2035.12,1216.04 2035.7,1216.28 2036.29,1217.54 2036.88,1217.48 2037.46,1217.54 2038.05,1218.97 2038.64,1220.33 2039.22,1220.2 2039.81,1218.71 2040.4,1219.91 2040.98,1219.84 2041.57,1219.85 2042.15,1218.42 2042.74,1218.53 2043.33,1218.48 2043.91,1218.46 2044.5,1217.15 2045.09,1215.77 2045.67,1212.28 2046.26,1212.53 2046.85,1212.99 2047.43,1212.03 2048.02,1210.01 2048.6,1210.33 2049.19,1213.35 2049.78,1218.39 2050.36,1219.7 2050.95,1219.62 2051.54,1218.57 2052.12,1217.3 2052.71,1216.11 2053.3,1217.37 2053.88,1216.04 2054.47,1213.7 2055.06,1214.87 2055.64,1213.8 2056.23,1212.82 2056.81,1214.12 2057.4,1211.99 2057.99,1208.6 2058.57,1210.14 2059.16,1212.84 2059.75,1211.97 2060.33,1212.2 2060.92,1211.55 2061.51,1211.85 2062.09,1209.79 2062.68,1208.88 2063.27,1210.47 2063.85,1210.95 2064.44,1211.5 2065.02,1215.45 2065.61,1218.17 2066.2,1220.56 2066.78,1218.25 2067.37,1219.59 2067.96,1220.69 2068.54,1216.87 2069.13,1214.68 2069.72,1215.2 2070.3,1215.44 2070.89,1216.87 2071.48,1216.76 2072.06,1220.63 2072.65,1223.15 2073.23,1222.89 2073.82,1221.74 2074.41,1220.46 2074.99,1219.25 2075.58,1221.75 2076.17,1220.38 2076.75,1221.58 2077.34,1218.99 2077.93,1220.2 2078.51,1219.12 2079.1,1219 2079.68,1216.4 2080.27,1216.55 2080.86,1215.35 2081.44,1215.42 2082.03,1215.56 2082.62,1215.52 2083.2,1217.08 2083.79,1217.17 2084.38,1217.29 2084.96,1216.26 2085.55,1216.38 2086.14,1216.57 2086.72,1214.29 2087.31,1214.61 2087.89,1214.81 2088.48,1213.69 2089.07,1215.11 2089.65,1216.31 2090.24,1214.07 2090.83,1213.09 2091.41,1213.59 2092,1212.5 2092.59,1212.78 2093.17,1210.96 2093.76,1210.2 2094.35,1209.37 2094.93,1209.94 2095.52,1211.62 2096.1,1215.5 2096.69,1215.54 2097.28,1214.34 2097.86,1215.69 2098.45,1214.72 2099.04,1216.06 2099.62,1218.55 2100.21,1217.21 2100.8,1214.66 2101.38,1216.5 2101.97,1213.03 2102.55,1213.42 2103.14,1216.28 2103.73,1213.84 2104.31,1211.46 2104.9,1213.06 2105.49,1213.37 2106.07,1213.61 2106.66,1215.14 2107.25,1213.8 2107.83,1214.04 2108.42,1210.5 2109.01,1210.94 2109.59,1214.8 2110.18,1215.02 2110.76,1217.44 2111.35,1217.15 2111.94,1217.14 2112.52,1218.29 2113.11,1216.95 2113.7,1216.89 2114.28,1214.64 2114.87,1214.76 2115.46,1214.82 2116.04,1214.92 2116.63,1214.99 2117.22,1215.03 2117.8,1212.91 2118.39,1215.5 2118.97,1214.43 2119.56,1214.56 2120.15,1213.43 2120.73,1213.47 2121.32,1215.93 2121.91,1217.43 2122.49,1221.29 2123.08,1221.2 2123.67,1221.06 2124.25,1221.04 2124.84,1219.56 2125.42,1222.16 2126.01,1222 2126.6,1220.51 2127.18,1218 2127.77,1220.45 2128.36,1219.2 2128.94,1217.83 2129.53,1217.05 2130.12,1218.23 2130.7,1222.14 2131.29,1221.94 2131.88,1223.01 2132.46,1222.95 2133.05,1223.61 2133.63,1222.45 2134.22,1219.59 2134.81,1218.26 2135.39,1219.75 2135.98,1222.28 2136.57,1219.82 2137.15,1219.67 2137.74,1220.06 2138.33,1220.1 2138.91,1218.71 2139.5,1218.31 2140.09,1218.42 2140.67,1214.63 2141.26,1214.99 2141.84,1215.32 2142.43,1218.06 2143.02,1217.91 2143.6,1216.91 2144.19,1216.92 2144.78,1218.08 2145.36,1218.15 2145.95,1217.04 2146.54,1215.68 2147.12,1218.48 2147.71,1219.86 2148.3,1218.44 2148.88,1219.44 2149.47,1218.43 2150.05,1218.65 2150.64,1219.79 2151.23,1216.97 2151.81,1219.42 2152.4,1219.48 2152.99,1220.41 2153.57,1220.2 2154.16,1218.94 2154.75,1219.83 2155.33,1219.57 2155.92,1219.26 2156.5,1219.2 2157.09,1219.03 2157.68,1215.18 2158.26,1215.18 \"/>\n<path clip-path=\"url(#clip532)\" d=\"M986.025 1218.65 L986.612 1218.65 L987.198 1218.65 L987.785 1218.65 L988.371 1218.65 L988.957 1218.65 L989.544 1218.65 L990.13 1218.65 L990.717 1218.65 L991.303 1218.65 L991.889 1218.65 L992.476 1218.65 L993.062 1218.65 L993.649 1218.65 L994.235 1218.65 L994.822 1218.65 L995.408 1218.65 L995.994 1218.65 L996.581 1218.65 L997.167 1218.65 L997.754 1218.65 L998.34 1218.65 L998.926 1218.65 L999.513 1218.65 L1000.1 1218.65 L1000.69 1218.65 L1001.27 1218.65 L1001.86 1218.65 L1002.44 1218.65 L1003.03 1218.65 L1003.62 1218.65 L1004.2 1218.65 L1004.79 1218.65 L1005.38 1218.65 L1005.96 1218.65 L1006.55 1218.65 L1007.14 1218.65 L1007.72 1218.65 L1008.31 1218.65 L1008.9 1218.65 L1009.48 1218.65 L1010.07 1218.65 L1010.65 1218.65 L1011.24 1218.65 L1011.83 1218.65 L1012.41 1218.65 L1013 1218.65 L1013.59 1218.65 L1014.17 1218.65 L1014.76 1218.65 L1015.35 1218.65 L1015.93 1218.65 L1016.52 1218.65 L1017.11 1218.65 L1017.69 1218.65 L1018.28 1218.65 L1018.86 1218.65 L1019.45 1218.65 L1020.04 1218.65 L1020.62 1218.65 L1021.21 1218.65 L1021.8 1218.65 L1022.38 1218.65 L1022.97 1218.65 L1023.56 1218.65 L1024.14 1218.65 L1024.73 1218.65 L1025.32 1218.65 L1025.9 1218.65 L1026.49 1218.65 L1027.07 1218.65 L1027.66 1218.65 L1028.25 1218.65 L1028.83 1218.65 L1029.42 1218.65 L1030.01 1218.65 L1030.59 1218.65 L1031.18 1218.65 L1031.77 1218.65 L1032.35 1218.65 L1032.94 1218.65 L1033.52 1218.65 L1034.11 1218.65 L1034.7 1218.65 L1035.28 1218.65 L1035.87 1218.65 L1036.46 1218.65 L1037.04 1218.65 L1037.63 1218.65 L1038.22 1218.65 L1038.8 1218.65 L1039.39 1218.65 L1039.98 1218.65 L1040.56 1218.65 L1041.15 1218.65 L1041.73 1218.65 L1042.32 1218.65 L1042.91 1218.65 L1043.49 1218.65 L1044.08 1218.65 L1044.67 1218.65 L1045.25 1218.65 L1045.84 1218.65 L1046.43 1218.65 L1047.01 1218.65 L1047.6 1218.65 L1048.19 1218.65 L1048.77 1218.65 L1049.36 1218.65 L1049.94 1218.65 L1050.53 1218.65 L1051.12 1218.65 L1051.7 1218.65 L1052.29 1218.65 L1052.88 1218.65 L1053.46 1218.65 L1054.05 1218.65 L1054.64 1218.65 L1055.22 1218.65 L1055.81 1218.65 L1056.39 1218.65 L1056.98 1218.65 L1057.57 1218.65 L1058.15 1218.65 L1058.74 1218.65 L1059.33 1218.65 L1059.91 1218.65 L1060.5 1218.65 L1061.09 1218.65 L1061.67 1218.65 L1062.26 1218.65 L1062.85 1218.65 L1063.43 1218.65 L1064.02 1218.65 L1064.6 1218.65 L1065.19 1218.65 L1065.78 1218.65 L1066.36 1218.65 L1066.95 1218.65 L1067.54 1218.65 L1068.12 1218.65 L1068.71 1218.65 L1069.3 1218.65 L1069.88 1218.65 L1070.47 1218.65 L1071.06 1218.65 L1071.64 1218.65 L1072.23 1218.65 L1072.81 1218.65 L1073.4 1218.65 L1073.99 1218.65 L1074.57 1218.65 L1075.16 1218.65 L1075.75 1218.65 L1076.33 1218.65 L1076.92 1218.65 L1077.51 1218.65 L1078.09 1218.65 L1078.68 1218.65 L1079.26 1218.65 L1079.85 1218.65 L1080.44 1218.65 L1081.02 1218.65 L1081.61 1218.65 L1082.2 1218.65 L1082.78 1218.65 L1083.37 1218.65 L1083.96 1218.65 L1084.54 1218.65 L1085.13 1218.65 L1085.72 1218.65 L1086.3 1218.65 L1086.89 1218.65 L1087.47 1218.65 L1088.06 1218.65 L1088.65 1218.65 L1089.23 1218.65 L1089.82 1218.65 L1090.41 1218.65 L1090.99 1218.65 L1091.58 1218.65 L1092.17 1218.65 L1092.75 1218.65 L1093.34 1218.65 L1093.93 1218.65 L1094.51 1218.65 L1095.1 1218.65 L1095.68 1218.65 L1096.27 1218.65 L1096.86 1218.65 L1097.44 1218.65 L1098.03 1218.65 L1098.62 1218.65 L1099.2 1218.65 L1099.79 1218.65 L1100.38 1218.65 L1100.96 1218.65 L1101.55 1218.65 L1102.14 1218.65 L1102.72 1218.65 L1103.31 1218.65 L1103.89 1218.65 L1104.48 1218.65 L1105.07 1218.65 L1105.65 1218.65 L1106.24 1218.65 L1106.83 1218.65 L1107.41 1218.65 L1108 1218.65 L1108.59 1218.65 L1109.17 1218.65 L1109.76 1218.65 L1110.34 1218.65 L1110.93 1218.65 L1111.52 1218.65 L1112.1 1218.65 L1112.69 1218.65 L1113.28 1218.65 L1113.86 1218.65 L1114.45 1218.65 L1115.04 1218.65 L1115.62 1218.65 L1116.21 1218.65 L1116.8 1218.65 L1117.38 1218.65 L1117.97 1218.65 L1118.55 1218.65 L1119.14 1218.65 L1119.73 1218.65 L1120.31 1218.65 L1120.9 1218.65 L1121.49 1218.65 L1122.07 1218.65 L1122.66 1218.65 L1123.25 1218.65 L1123.83 1218.65 L1124.42 1218.65 L1125.01 1218.65 L1125.59 1218.65 L1126.18 1218.65 L1126.76 1218.65 L1127.35 1218.65 L1127.94 1218.65 L1128.52 1218.65 L1129.11 1218.65 L1129.7 1218.65 L1130.28 1218.65 L1130.87 1218.65 L1131.46 1218.65 L1132.04 1218.65 L1132.63 1218.65 L1133.21 1218.65 L1133.8 1218.65 L1134.39 1218.65 L1134.97 1218.65 L1135.56 1218.65 L1136.15 1218.65 L1136.73 1218.65 L1137.32 1218.65 L1137.91 1218.65 L1138.49 1218.65 L1139.08 1218.65 L1139.67 1218.65 L1140.25 1218.65 L1140.84 1218.65 L1141.42 1218.65 L1142.01 1218.65 L1142.6 1218.65 L1143.18 1218.65 L1143.77 1218.65 L1144.36 1218.65 L1144.94 1218.65 L1145.53 1218.65 L1146.12 1218.65 L1146.7 1218.65 L1147.29 1218.65 L1147.88 1218.65 L1148.46 1218.65 L1149.05 1218.65 L1149.63 1218.65 L1150.22 1218.65 L1150.81 1218.65 L1151.39 1218.65 L1151.98 1218.65 L1152.57 1218.65 L1153.15 1218.65 L1153.74 1218.65 L1154.33 1218.65 L1154.91 1218.65 L1155.5 1218.65 L1156.09 1218.65 L1156.67 1218.65 L1157.26 1218.65 L1157.84 1218.65 L1158.43 1218.65 L1159.02 1218.65 L1159.6 1218.65 L1160.19 1218.65 L1160.78 1218.65 L1161.36 1218.65 L1161.95 1218.65 L1162.54 1218.65 L1163.12 1218.65 L1163.71 1218.65 L1164.29 1218.65 L1164.88 1218.65 L1165.47 1218.65 L1166.05 1218.65 L1166.64 1218.65 L1167.23 1218.65 L1167.81 1218.65 L1168.4 1218.65 L1168.99 1218.65 L1169.57 1218.65 L1170.16 1218.65 L1170.75 1218.65 L1171.33 1218.65 L1171.92 1218.65 L1172.5 1218.65 L1173.09 1218.65 L1173.68 1218.65 L1174.26 1218.65 L1174.85 1218.65 L1175.44 1218.65 L1176.02 1218.65 L1176.61 1218.65 L1177.2 1218.65 L1177.78 1218.65 L1178.37 1218.65 L1178.96 1218.65 L1179.54 1218.65 L1180.13 1218.65 L1180.71 1218.65 L1181.3 1218.65 L1181.89 1218.65 L1182.47 1218.65 L1183.06 1218.65 L1183.65 1218.65 L1184.23 1218.65 L1184.82 1218.65 L1185.41 1218.65 L1185.99 1218.65 L1186.58 1218.65 L1187.16 1218.65 L1187.75 1218.65 L1188.34 1218.65 L1188.92 1218.65 L1189.51 1218.65 L1190.1 1218.65 L1190.68 1218.65 L1191.27 1218.65 L1191.86 1218.65 L1192.44 1218.65 L1193.03 1218.65 L1193.62 1218.65 L1194.2 1218.65 L1194.79 1218.65 L1195.37 1218.65 L1195.96 1218.65 L1196.55 1218.65 L1197.13 1218.65 L1197.72 1218.65 L1198.31 1218.65 L1198.89 1218.65 L1199.48 1218.65 L1200.07 1218.65 L1200.65 1218.65 L1201.24 1218.65 L1201.83 1218.65 L1202.41 1218.65 L1203 1218.65 L1203.58 1218.65 L1204.17 1218.65 L1204.76 1218.65 L1205.34 1218.65 L1205.93 1218.65 L1206.52 1218.65 L1207.1 1218.65 L1207.69 1218.65 L1208.28 1218.65 L1208.86 1218.65 L1209.45 1218.65 L1210.03 1218.65 L1210.62 1218.65 L1211.21 1218.65 L1211.79 1218.65 L1212.38 1218.65 L1212.97 1218.65 L1213.55 1218.65 L1214.14 1218.65 L1214.73 1218.65 L1215.31 1218.65 L1215.9 1218.65 L1216.49 1218.65 L1217.07 1218.65 L1217.66 1218.65 L1218.24 1218.65 L1218.83 1218.65 L1219.42 1218.65 L1220 1218.65 L1220.59 1218.65 L1221.18 1218.65 L1221.76 1218.65 L1222.35 1218.65 L1222.94 1218.65 L1223.52 1218.65 L1224.11 1218.65 L1224.7 1218.65 L1225.28 1218.65 L1225.87 1218.65 L1226.45 1218.65 L1227.04 1218.65 L1227.63 1218.65 L1228.21 1218.65 L1228.8 1218.65 L1229.39 1218.65 L1229.97 1218.65 L1230.56 1218.65 L1231.15 1218.65 L1231.73 1218.65 L1232.32 1218.65 L1232.91 1218.65 L1233.49 1218.65 L1234.08 1218.65 L1234.66 1218.65 L1235.25 1218.65 L1235.84 1218.65 L1236.42 1218.65 L1237.01 1218.65 L1237.6 1218.65 L1238.18 1218.65 L1238.77 1218.65 L1239.36 1218.65 L1239.94 1218.65 L1240.53 1218.65 L1241.11 1218.65 L1241.7 1218.65 L1242.29 1218.65 L1242.87 1218.65 L1243.46 1218.65 L1244.05 1218.65 L1244.63 1218.65 L1245.22 1218.65 L1245.81 1218.65 L1246.39 1218.65 L1246.98 1218.65 L1247.57 1218.65 L1248.15 1218.65 L1248.74 1218.65 L1249.32 1218.65 L1249.91 1218.65 L1250.5 1218.65 L1251.08 1218.65 L1251.67 1218.65 L1252.26 1218.65 L1252.84 1218.65 L1253.43 1218.65 L1254.02 1218.65 L1254.6 1218.65 L1255.19 1218.65 L1255.78 1218.65 L1256.36 1218.65 L1256.95 1218.65 L1257.53 1218.65 L1258.12 1218.65 L1258.71 1218.65 L1259.29 1218.65 L1259.88 1218.65 L1260.47 1218.65 L1261.05 1218.65 L1261.64 1218.65 L1262.23 1218.65 L1262.81 1218.65 L1263.4 1218.65 L1263.98 1218.65 L1264.57 1218.65 L1265.16 1218.65 L1265.74 1218.65 L1266.33 1218.65 L1266.92 1218.65 L1267.5 1218.65 L1268.09 1218.65 L1268.68 1218.65 L1269.26 1218.65 L1269.85 1218.65 L1270.44 1218.65 L1271.02 1218.65 L1271.61 1218.65 L1272.19 1218.65 L1272.78 1218.65 L1273.37 1218.65 L1273.95 1218.65 L1274.54 1218.65 L1275.13 1218.65 L1275.71 1218.65 L1276.3 1218.65 L1276.89 1218.65 L1277.47 1218.65 L1278.06 1218.65 L1278.65 1218.65 L1279.23 1218.65 L1279.82 1218.65 L1280.4 1218.65 L1280.99 1218.65 L1281.58 1218.65 L1282.16 1218.65 L1282.75 1218.65 L1283.34 1218.65 L1283.92 1218.65 L1284.51 1218.65 L1285.1 1218.65 L1285.68 1218.65 L1286.27 1218.65 L1286.86 1218.65 L1287.44 1218.65 L1288.03 1218.65 L1288.61 1218.65 L1289.2 1218.65 L1289.79 1218.65 L1290.37 1218.65 L1290.96 1218.65 L1291.55 1218.65 L1292.13 1218.65 L1292.72 1218.65 L1293.31 1218.65 L1293.89 1218.65 L1294.48 1218.65 L1295.06 1218.65 L1295.65 1218.65 L1296.24 1218.65 L1296.82 1218.65 L1297.41 1218.65 L1298 1218.65 L1298.58 1218.65 L1299.17 1218.65 L1299.76 1218.65 L1300.34 1218.65 L1300.93 1218.65 L1301.52 1218.65 L1302.1 1218.65 L1302.69 1218.65 L1303.27 1218.65 L1303.86 1218.65 L1304.45 1218.65 L1305.03 1218.65 L1305.62 1218.65 L1306.21 1218.65 L1306.79 1218.65 L1307.38 1218.65 L1307.97 1218.65 L1308.55 1218.65 L1309.14 1218.65 L1309.73 1218.65 L1310.31 1218.65 L1310.9 1218.65 L1311.48 1218.65 L1312.07 1218.65 L1312.66 1218.65 L1313.24 1218.65 L1313.83 1218.65 L1314.42 1218.65 L1315 1218.65 L1315.59 1218.65 L1316.18 1218.65 L1316.76 1218.65 L1317.35 1218.65 L1317.93 1218.65 L1318.52 1218.65 L1319.11 1218.65 L1319.69 1218.65 L1320.28 1218.65 L1320.87 1218.65 L1321.45 1218.65 L1322.04 1218.65 L1322.63 1218.65 L1323.21 1218.65 L1323.8 1218.65 L1324.39 1218.65 L1324.97 1218.65 L1325.56 1218.65 L1326.14 1218.65 L1326.73 1218.65 L1327.32 1218.65 L1327.9 1218.65 L1328.49 1218.65 L1329.08 1218.65 L1329.66 1218.65 L1330.25 1218.65 L1330.84 1218.65 L1331.42 1218.65 L1332.01 1218.65 L1332.6 1218.65 L1333.18 1218.65 L1333.77 1218.65 L1334.35 1218.65 L1334.94 1218.65 L1335.53 1218.65 L1336.11 1218.65 L1336.7 1218.65 L1337.29 1218.65 L1337.87 1218.65 L1338.46 1218.65 L1339.05 1218.65 L1339.63 1218.65 L1340.22 1218.65 L1340.8 1218.65 L1341.39 1218.65 L1341.98 1218.65 L1342.56 1218.65 L1343.15 1218.65 L1343.74 1218.65 L1344.32 1218.65 L1344.91 1218.65 L1345.5 1218.65 L1346.08 1218.65 L1346.67 1218.65 L1347.26 1218.65 L1347.84 1218.65 L1348.43 1218.65 L1349.01 1218.65 L1349.6 1218.65 L1350.19 1218.65 L1350.77 1218.65 L1351.36 1218.65 L1351.95 1218.65 L1352.53 1218.65 L1353.12 1218.65 L1353.71 1218.65 L1354.29 1218.65 L1354.88 1218.65 L1355.47 1218.65 L1356.05 1218.65 L1356.64 1218.65 L1357.22 1218.65 L1357.81 1218.65 L1358.4 1218.65 L1358.98 1218.65 L1359.57 1218.65 L1360.16 1218.65 L1360.74 1218.65 L1361.33 1218.65 L1361.92 1218.65 L1362.5 1218.65 L1363.09 1218.65 L1363.68 1218.65 L1364.26 1218.65 L1364.85 1218.65 L1365.43 1218.65 L1366.02 1218.65 L1366.61 1218.65 L1367.19 1218.65 L1367.78 1218.65 L1368.37 1218.65 L1368.95 1218.65 L1369.54 1218.65 L1370.13 1218.65 L1370.71 1218.65 L1371.3 1218.65 L1371.88 1218.65 L1372.47 1218.65 L1373.06 1218.65 L1373.64 1218.65 L1374.23 1218.65 L1374.82 1218.65 L1375.4 1218.65 L1375.99 1218.65 L1376.58 1218.65 L1377.16 1218.65 L1377.75 1218.65 L1378.34 1218.65 L1378.92 1218.65 L1379.51 1218.65 L1380.09 1218.65 L1380.68 1218.65 L1381.27 1218.65 L1381.85 1218.65 L1382.44 1218.65 L1383.03 1218.65 L1383.61 1218.65 L1384.2 1218.65 L1384.79 1218.65 L1385.37 1218.65 L1385.96 1218.65 L1386.55 1218.65 L1387.13 1218.65 L1387.72 1218.65 L1388.3 1218.65 L1388.89 1218.65 L1389.48 1218.65 L1390.06 1218.65 L1390.65 1218.65 L1391.24 1218.65 L1391.82 1218.65 L1392.41 1218.65 L1393 1218.65 L1393.58 1218.65 L1394.17 1218.65 L1394.75 1218.65 L1395.34 1218.65 L1395.93 1218.65 L1396.51 1218.65 L1397.1 1218.65 L1397.69 1218.65 L1398.27 1218.65 L1398.86 1218.65 L1399.45 1218.65 L1400.03 1218.65 L1400.62 1218.65 L1401.21 1218.65 L1401.79 1218.65 L1402.38 1218.65 L1402.96 1218.65 L1403.55 1218.65 L1404.14 1218.65 L1404.72 1218.65 L1405.31 1218.65 L1405.9 1218.65 L1406.48 1218.65 L1407.07 1218.65 L1407.66 1218.65 L1408.24 1218.65 L1408.83 1218.65 L1409.42 1218.65 L1410 1218.65 L1410.59 1218.65 L1411.17 1218.65 L1411.76 1218.65 L1412.35 1218.65 L1412.93 1218.65 L1413.52 1218.65 L1414.11 1218.65 L1414.69 1218.65 L1415.28 1218.65 L1415.87 1218.65 L1416.45 1218.65 L1417.04 1218.65 L1417.63 1218.65 L1418.21 1218.65 L1418.8 1218.65 L1419.38 1218.65 L1419.97 1218.65 L1420.56 1218.65 L1421.14 1218.65 L1421.73 1218.65 L1422.32 1218.65 L1422.9 1218.65 L1423.49 1218.65 L1424.08 1218.65 L1424.66 1218.65 L1425.25 1218.65 L1425.83 1218.65 L1426.42 1218.65 L1427.01 1218.65 L1427.59 1218.65 L1428.18 1218.65 L1428.77 1218.65 L1429.35 1218.65 L1429.94 1218.65 L1430.53 1218.65 L1431.11 1218.65 L1431.7 1218.65 L1432.29 1218.65 L1432.87 1218.65 L1433.46 1218.65 L1434.04 1218.65 L1434.63 1218.65 L1435.22 1218.65 L1435.8 1218.65 L1436.39 1218.65 L1436.98 1218.65 L1437.56 1218.65 L1438.15 1218.65 L1438.74 1218.65 L1439.32 1218.65 L1439.91 1218.65 L1440.5 1218.65 L1441.08 1218.65 L1441.67 1218.65 L1442.25 1218.65 L1442.84 1218.65 L1443.43 1218.65 L1444.01 1218.65 L1444.6 1218.65 L1445.19 1218.65 L1445.77 1218.65 L1446.36 1218.65 L1446.95 1218.65 L1447.53 1218.65 L1448.12 1218.65 L1448.7 1218.65 L1449.29 1218.65 L1449.88 1218.65 L1450.46 1218.65 L1451.05 1218.65 L1451.64 1218.65 L1452.22 1218.65 L1452.81 1218.65 L1453.4 1218.65 L1453.98 1218.65 L1454.57 1218.65 L1455.16 1218.65 L1455.74 1218.65 L1456.33 1218.65 L1456.91 1218.65 L1457.5 1218.65 L1458.09 1218.65 L1458.67 1218.65 L1459.26 1218.65 L1459.85 1218.65 L1460.43 1218.65 L1461.02 1218.65 L1461.61 1218.65 L1462.19 1218.65 L1462.78 1218.65 L1463.37 1218.65 L1463.95 1218.65 L1464.54 1218.65 L1465.12 1218.65 L1465.71 1218.65 L1466.3 1218.65 L1466.88 1218.65 L1467.47 1218.65 L1468.06 1218.65 L1468.64 1218.65 L1469.23 1218.65 L1469.82 1218.65 L1470.4 1218.65 L1470.99 1218.65 L1471.57 1218.65 L1472.16 1218.65 L1472.75 1218.65 L1473.33 1218.65 L1473.92 1218.65 L1474.51 1218.65 L1475.09 1218.65 L1475.68 1218.65 L1476.27 1218.65 L1476.85 1218.65 L1477.44 1218.65 L1478.03 1218.65 L1478.61 1218.65 L1479.2 1218.65 L1479.78 1218.65 L1480.37 1218.65 L1480.96 1218.65 L1481.54 1218.65 L1482.13 1218.65 L1482.72 1218.65 L1483.3 1218.65 L1483.89 1218.65 L1484.48 1218.65 L1485.06 1218.65 L1485.65 1218.65 L1486.24 1218.65 L1486.82 1218.65 L1487.41 1218.65 L1487.99 1218.65 L1488.58 1218.65 L1489.17 1218.65 L1489.75 1218.65 L1490.34 1218.65 L1490.93 1218.65 L1491.51 1218.65 L1492.1 1218.65 L1492.69 1218.65 L1493.27 1218.65 L1493.86 1218.65 L1494.45 1218.65 L1495.03 1218.65 L1495.62 1218.65 L1496.2 1218.65 L1496.79 1218.65 L1497.38 1218.65 L1497.96 1218.65 L1498.55 1218.65 L1499.14 1218.65 L1499.72 1218.65 L1500.31 1218.65 L1500.9 1218.65 L1501.48 1218.65 L1502.07 1218.65 L1502.65 1218.65 L1503.24 1218.65 L1503.83 1218.65 L1504.41 1218.65 L1505 1218.65 L1505.59 1218.65 L1506.17 1218.65 L1506.76 1218.65 L1507.35 1218.65 L1507.93 1218.65 L1508.52 1218.65 L1509.11 1218.65 L1509.69 1218.65 L1510.28 1218.65 L1510.86 1218.65 L1511.45 1218.65 L1512.04 1218.65 L1512.62 1218.65 L1513.21 1218.65 L1513.8 1218.65 L1514.38 1218.65 L1514.97 1218.65 L1515.56 1218.65 L1516.14 1218.65 L1516.73 1218.65 L1517.32 1218.65 L1517.9 1218.65 L1518.49 1218.65 L1519.07 1218.65 L1519.66 1218.65 L1520.25 1218.65 L1520.83 1218.65 L1521.42 1218.65 L1522.01 1218.65 L1522.59 1218.65 L1523.18 1218.65 L1523.77 1218.65 L1524.35 1218.65 L1524.94 1218.65 L1525.52 1218.65 L1526.11 1218.65 L1526.7 1218.65 L1527.28 1218.65 L1527.87 1218.65 L1528.46 1218.65 L1529.04 1218.65 L1529.63 1218.65 L1530.22 1218.65 L1530.8 1218.65 L1531.39 1218.65 L1531.98 1218.65 L1532.56 1218.65 L1533.15 1218.65 L1533.73 1218.65 L1534.32 1218.65 L1534.91 1218.65 L1535.49 1218.65 L1536.08 1218.65 L1536.67 1218.65 L1537.25 1218.65 L1537.84 1218.65 L1538.43 1218.65 L1539.01 1218.65 L1539.6 1218.65 L1540.19 1218.65 L1540.77 1218.65 L1541.36 1218.65 L1541.94 1218.65 L1542.53 1218.65 L1543.12 1218.65 L1543.7 1218.65 L1544.29 1218.65 L1544.88 1218.65 L1545.46 1218.65 L1546.05 1218.65 L1546.64 1218.65 L1547.22 1218.65 L1547.81 1218.65 L1548.4 1218.65 L1548.98 1218.65 L1549.57 1218.65 L1550.15 1218.65 L1550.74 1218.65 L1551.33 1218.65 L1551.91 1218.65 L1552.5 1218.65 L1553.09 1218.65 L1553.67 1218.65 L1554.26 1218.65 L1554.85 1218.65 L1555.43 1218.65 L1556.02 1218.65 L1556.6 1218.65 L1557.19 1218.65 L1557.78 1218.65 L1558.36 1218.65 L1558.95 1218.65 L1559.54 1218.65 L1560.12 1218.65 L1560.71 1218.65 L1561.3 1218.65 L1561.88 1218.65 L1562.47 1218.65 L1563.06 1218.65 L1563.64 1218.65 L1564.23 1218.65 L1564.81 1218.65 L1565.4 1218.65 L1565.99 1218.65 L1566.57 1218.65 L1567.16 1218.65 L1567.75 1218.65 L1568.33 1218.65 L1568.92 1218.65 L1569.51 1218.65 L1570.09 1218.65 L1570.68 1218.65 L1571.27 1218.65 L1571.85 1218.65 L1572.44 1218.65 L1573.02 1218.65 L1573.61 1218.65 L1574.2 1218.65 L1574.78 1218.65 L1575.37 1218.65 L1575.96 1218.65 L1576.54 1218.65 L1577.13 1218.65 L1577.72 1218.65 L1578.3 1218.65 L1578.89 1218.65 L1579.47 1218.65 L1580.06 1218.65 L1580.65 1218.65 L1581.23 1218.65 L1581.82 1218.65 L1582.41 1218.65 L1582.99 1218.65 L1583.58 1218.65 L1584.17 1218.65 L1584.75 1218.65 L1585.34 1218.65 L1585.93 1218.65 L1586.51 1218.65 L1587.1 1218.65 L1587.68 1218.65 L1588.27 1218.65 L1588.86 1218.65 L1589.44 1218.65 L1590.03 1218.65 L1590.62 1218.65 L1591.2 1218.65 L1591.79 1218.65 L1592.38 1218.65 L1592.96 1218.65 L1593.55 1218.65 L1594.14 1218.65 L1594.72 1218.65 L1595.31 1218.65 L1595.89 1218.65 L1596.48 1218.65 L1597.07 1218.65 L1597.65 1218.65 L1598.24 1218.65 L1598.83 1218.65 L1599.41 1218.65 L1600 1218.65 L1600.59 1218.65 L1601.17 1218.65 L1601.76 1218.65 L1602.34 1218.65 L1602.93 1218.65 L1603.52 1218.65 L1604.1 1218.65 L1604.69 1218.65 L1605.28 1218.65 L1605.86 1218.65 L1606.45 1218.65 L1607.04 1218.65 L1607.62 1218.65 L1608.21 1218.65 L1608.8 1218.65 L1609.38 1218.65 L1609.97 1218.65 L1610.55 1218.65 L1611.14 1218.65 L1611.73 1218.65 L1612.31 1218.65 L1612.9 1218.65 L1613.49 1218.65 L1614.07 1218.65 L1614.66 1218.65 L1615.25 1218.65 L1615.83 1218.65 L1616.42 1218.65 L1617.01 1218.65 L1617.59 1218.65 L1618.18 1218.65 L1618.76 1218.65 L1619.35 1218.65 L1619.94 1218.65 L1620.52 1218.65 L1621.11 1218.65 L1621.7 1218.65 L1622.28 1218.65 L1622.87 1218.65 L1623.46 1218.65 L1624.04 1218.65 L1624.63 1218.65 L1625.22 1218.65 L1625.8 1218.65 L1626.39 1218.65 L1626.97 1218.65 L1627.56 1218.65 L1628.15 1218.65 L1628.73 1218.65 L1629.32 1218.65 L1629.91 1218.65 L1630.49 1218.65 L1631.08 1218.65 L1631.67 1218.65 L1632.25 1218.65 L1632.84 1218.65 L1633.42 1218.65 L1634.01 1218.65 L1634.6 1218.65 L1635.18 1218.65 L1635.77 1218.65 L1636.36 1218.65 L1636.94 1218.65 L1637.53 1218.65 L1638.12 1218.65 L1638.7 1218.65 L1639.29 1218.65 L1639.88 1218.65 L1640.46 1218.65 L1641.05 1218.65 L1641.63 1218.65 L1642.22 1218.65 L1642.81 1218.65 L1643.39 1218.65 L1643.98 1218.65 L1644.57 1218.65 L1645.15 1218.65 L1645.74 1218.65 L1646.33 1218.65 L1646.91 1218.65 L1647.5 1218.65 L1648.09 1218.65 L1648.67 1218.65 L1649.26 1218.65 L1649.84 1218.65 L1650.43 1218.65 L1651.02 1218.65 L1651.6 1218.65 L1652.19 1218.65 L1652.78 1218.65 L1653.36 1218.65 L1653.95 1218.65 L1654.54 1218.65 L1655.12 1218.65 L1655.71 1218.65 L1656.29 1218.65 L1656.88 1218.65 L1657.47 1218.65 L1658.05 1218.65 L1658.64 1218.65 L1659.23 1218.65 L1659.81 1218.65 L1660.4 1218.65 L1660.99 1218.65 L1661.57 1218.65 L1662.16 1218.65 L1662.75 1218.65 L1663.33 1218.65 L1663.92 1218.65 L1664.5 1218.65 L1665.09 1218.65 L1665.68 1218.65 L1666.26 1218.65 L1666.85 1218.65 L1667.44 1218.65 L1668.02 1218.65 L1668.61 1218.65 L1669.2 1218.65 L1669.78 1218.65 L1670.37 1218.65 L1670.96 1218.65 L1671.54 1218.65 L1672.13 1218.65 L1672.71 1218.65 L1673.3 1218.65 L1673.89 1218.65 L1674.47 1218.65 L1675.06 1218.65 L1675.65 1218.65 L1676.23 1218.65 L1676.82 1218.65 L1677.41 1218.65 L1677.99 1218.65 L1678.58 1218.65 L1679.17 1218.65 L1679.75 1218.65 L1680.34 1218.65 L1680.92 1218.65 L1681.51 1218.65 L1682.1 1218.65 L1682.68 1218.65 L1683.27 1218.65 L1683.86 1218.65 L1684.44 1218.65 L1685.03 1218.65 L1685.62 1218.65 L1686.2 1218.65 L1686.79 1218.65 L1687.37 1218.65 L1687.96 1218.65 L1688.55 1218.65 L1689.13 1218.65 L1689.72 1218.65 L1690.31 1218.65 L1690.89 1218.65 L1691.48 1218.65 L1692.07 1218.65 L1692.65 1218.65 L1693.24 1218.65 L1693.83 1218.65 L1694.41 1218.65 L1695 1218.65 L1695.58 1218.65 L1696.17 1218.65 L1696.76 1218.65 L1697.34 1218.65 L1697.93 1218.65 L1698.52 1218.65 L1699.1 1218.65 L1699.69 1218.65 L1700.28 1218.65 L1700.86 1218.65 L1701.45 1218.65 L1702.04 1218.65 L1702.62 1218.65 L1703.21 1218.65 L1703.79 1218.65 L1704.38 1218.65 L1704.97 1218.65 L1705.55 1218.65 L1706.14 1218.65 L1706.73 1218.65 L1707.31 1218.65 L1707.9 1218.65 L1708.49 1218.65 L1709.07 1218.65 L1709.66 1218.65 L1710.24 1218.65 L1710.83 1218.65 L1711.42 1218.65 L1712 1218.65 L1712.59 1218.65 L1713.18 1218.65 L1713.76 1218.65 L1714.35 1218.65 L1714.94 1218.65 L1715.52 1218.65 L1716.11 1218.65 L1716.7 1218.65 L1717.28 1218.65 L1717.87 1218.65 L1718.45 1218.65 L1719.04 1218.65 L1719.63 1218.65 L1720.21 1218.65 L1720.8 1218.65 L1721.39 1218.65 L1721.97 1218.65 L1722.56 1218.65 L1723.15 1218.65 L1723.73 1218.65 L1724.32 1218.65 L1724.91 1218.65 L1725.49 1218.65 L1726.08 1218.65 L1726.66 1218.65 L1727.25 1218.65 L1727.84 1218.65 L1728.42 1218.65 L1729.01 1218.65 L1729.6 1218.65 L1730.18 1218.65 L1730.77 1218.65 L1731.36 1218.65 L1731.94 1218.65 L1732.53 1218.65 L1733.11 1218.65 L1733.7 1218.65 L1734.29 1218.65 L1734.87 1218.65 L1735.46 1218.65 L1736.05 1218.65 L1736.63 1218.65 L1737.22 1218.65 L1737.81 1218.65 L1738.39 1218.65 L1738.98 1218.65 L1739.57 1218.65 L1740.15 1218.65 L1740.74 1218.65 L1741.32 1218.65 L1741.91 1218.65 L1742.5 1218.65 L1743.08 1218.65 L1743.67 1218.65 L1744.26 1218.65 L1744.84 1218.65 L1745.43 1218.65 L1746.02 1218.65 L1746.6 1218.65 L1747.19 1218.65 L1747.78 1218.65 L1748.36 1218.65 L1748.95 1218.65 L1749.53 1218.65 L1750.12 1218.65 L1750.71 1218.65 L1751.29 1218.65 L1751.88 1218.65 L1752.47 1218.65 L1753.05 1218.65 L1753.64 1218.65 L1754.23 1218.65 L1754.81 1218.65 L1755.4 1218.65 L1755.99 1218.65 L1756.57 1218.65 L1757.16 1218.65 L1757.74 1218.65 L1758.33 1218.65 L1758.92 1218.65 L1759.5 1218.65 L1760.09 1218.65 L1760.68 1218.65 L1761.26 1218.65 L1761.85 1218.65 L1762.44 1218.65 L1763.02 1218.65 L1763.61 1218.65 L1764.19 1218.65 L1764.78 1218.65 L1765.37 1218.65 L1765.95 1218.65 L1766.54 1218.65 L1767.13 1218.65 L1767.71 1218.65 L1768.3 1218.65 L1768.89 1218.65 L1769.47 1218.65 L1770.06 1218.65 L1770.65 1218.65 L1771.23 1218.65 L1771.82 1218.65 L1772.4 1218.65 L1772.99 1218.65 L1773.58 1218.65 L1774.16 1218.65 L1774.75 1218.65 L1775.34 1218.65 L1775.92 1218.65 L1776.51 1218.65 L1777.1 1218.65 L1777.68 1218.65 L1778.27 1218.65 L1778.86 1218.65 L1779.44 1218.65 L1780.03 1218.65 L1780.61 1218.65 L1781.2 1218.65 L1781.79 1218.65 L1782.37 1218.65 L1782.96 1218.65 L1783.55 1218.65 L1784.13 1218.65 L1784.72 1218.65 L1785.31 1218.65 L1785.89 1218.65 L1786.48 1218.65 L1787.06 1218.65 L1787.65 1218.65 L1788.24 1218.65 L1788.82 1218.65 L1789.41 1218.65 L1790 1218.65 L1790.58 1218.65 L1791.17 1218.65 L1791.76 1218.65 L1792.34 1218.65 L1792.93 1218.65 L1793.52 1218.65 L1794.1 1218.65 L1794.69 1218.65 L1795.27 1218.65 L1795.86 1218.65 L1796.45 1218.65 L1797.03 1218.65 L1797.62 1218.65 L1798.21 1218.65 L1798.79 1218.65 L1799.38 1218.65 L1799.97 1218.65 L1800.55 1218.65 L1801.14 1218.65 L1801.73 1218.65 L1802.31 1218.65 L1802.9 1218.65 L1803.48 1218.65 L1804.07 1218.65 L1804.66 1218.65 L1805.24 1218.65 L1805.83 1218.65 L1806.42 1218.65 L1807 1218.65 L1807.59 1218.65 L1808.18 1218.65 L1808.76 1218.65 L1809.35 1218.65 L1809.94 1218.65 L1810.52 1218.65 L1811.11 1218.65 L1811.69 1218.65 L1812.28 1218.65 L1812.87 1218.65 L1813.45 1218.65 L1814.04 1218.65 L1814.63 1218.65 L1815.21 1218.65 L1815.8 1218.65 L1816.39 1218.65 L1816.97 1218.65 L1817.56 1218.65 L1818.14 1218.65 L1818.73 1218.65 L1819.32 1218.65 L1819.9 1218.65 L1820.49 1218.65 L1821.08 1218.65 L1821.66 1218.65 L1822.25 1218.65 L1822.84 1218.65 L1823.42 1218.65 L1824.01 1218.65 L1824.6 1218.65 L1825.18 1218.65 L1825.77 1218.65 L1826.35 1218.65 L1826.94 1218.65 L1827.53 1218.65 L1828.11 1218.65 L1828.7 1218.65 L1829.29 1218.65 L1829.87 1218.65 L1830.46 1218.65 L1831.05 1218.65 L1831.63 1218.65 L1832.22 1218.65 L1832.81 1218.65 L1833.39 1218.65 L1833.98 1218.65 L1834.56 1218.65 L1835.15 1218.65 L1835.74 1218.65 L1836.32 1218.65 L1836.91 1218.65 L1837.5 1218.65 L1838.08 1218.65 L1838.67 1218.65 L1839.26 1218.65 L1839.84 1218.65 L1840.43 1218.65 L1841.01 1218.65 L1841.6 1218.65 L1842.19 1218.65 L1842.77 1218.65 L1843.36 1218.65 L1843.95 1218.65 L1844.53 1218.65 L1845.12 1218.65 L1845.71 1218.65 L1846.29 1218.65 L1846.88 1218.65 L1847.47 1218.65 L1848.05 1218.65 L1848.64 1218.65 L1849.22 1218.65 L1849.81 1218.65 L1850.4 1218.65 L1850.98 1218.65 L1851.57 1218.65 L1852.16 1218.65 L1852.74 1218.65 L1853.33 1218.65 L1853.92 1218.65 L1854.5 1218.65 L1855.09 1218.65 L1855.68 1218.65 L1856.26 1218.65 L1856.85 1218.65 L1857.43 1218.65 L1858.02 1218.65 L1858.61 1218.65 L1859.19 1218.65 L1859.78 1218.65 L1860.37 1218.65 L1860.95 1218.65 L1861.54 1218.65 L1862.13 1218.65 L1862.71 1218.65 L1863.3 1218.65 L1863.88 1218.65 L1864.47 1218.65 L1865.06 1218.65 L1865.64 1218.65 L1866.23 1218.65 L1866.82 1218.65 L1867.4 1218.65 L1867.99 1218.65 L1868.58 1218.65 L1869.16 1218.65 L1869.75 1218.65 L1870.34 1218.65 L1870.92 1218.65 L1871.51 1218.65 L1872.09 1218.65 L1872.68 1218.65 L1873.27 1218.65 L1873.85 1218.65 L1874.44 1218.65 L1875.03 1218.65 L1875.61 1218.65 L1876.2 1218.65 L1876.79 1218.65 L1877.37 1218.65 L1877.96 1218.65 L1878.55 1218.65 L1879.13 1218.65 L1879.72 1218.65 L1880.3 1218.65 L1880.89 1218.65 L1881.48 1218.65 L1882.06 1218.65 L1882.65 1218.65 L1883.24 1218.65 L1883.82 1218.65 L1884.41 1218.65 L1885 1218.65 L1885.58 1218.65 L1886.17 1218.65 L1886.76 1218.65 L1887.34 1218.65 L1887.93 1218.65 L1888.51 1218.65 L1889.1 1218.65 L1889.69 1218.65 L1890.27 1218.65 L1890.86 1218.65 L1891.45 1218.65 L1892.03 1218.65 L1892.62 1218.65 L1893.21 1218.65 L1893.79 1218.65 L1894.38 1218.65 L1894.96 1218.65 L1895.55 1218.65 L1896.14 1218.65 L1896.72 1218.65 L1897.31 1218.65 L1897.9 1218.65 L1898.48 1218.65 L1899.07 1218.65 L1899.66 1218.65 L1900.24 1218.65 L1900.83 1218.65 L1901.42 1218.65 L1902 1218.65 L1902.59 1218.65 L1903.17 1218.65 L1903.76 1218.65 L1904.35 1218.65 L1904.93 1218.65 L1905.52 1218.65 L1906.11 1218.65 L1906.69 1218.65 L1907.28 1218.65 L1907.87 1218.65 L1908.45 1218.65 L1909.04 1218.65 L1909.63 1218.65 L1910.21 1218.65 L1910.8 1218.65 L1911.38 1218.65 L1911.97 1218.65 L1912.56 1218.65 L1913.14 1218.65 L1913.73 1218.65 L1914.32 1218.65 L1914.9 1218.65 L1915.49 1218.65 L1916.08 1218.65 L1916.66 1218.65 L1917.25 1218.65 L1917.83 1218.65 L1918.42 1218.65 L1919.01 1218.65 L1919.59 1218.65 L1920.18 1218.65 L1920.77 1218.65 L1921.35 1218.65 L1921.94 1218.65 L1922.53 1218.65 L1923.11 1218.65 L1923.7 1218.65 L1924.29 1218.65 L1924.87 1218.65 L1925.46 1218.65 L1926.04 1218.65 L1926.63 1218.65 L1927.22 1218.65 L1927.8 1218.65 L1928.39 1218.65 L1928.98 1218.65 L1929.56 1218.65 L1930.15 1218.65 L1930.74 1218.65 L1931.32 1218.65 L1931.91 1218.65 L1932.5 1218.65 L1933.08 1218.65 L1933.67 1218.65 L1934.25 1218.65 L1934.84 1218.65 L1935.43 1218.65 L1936.01 1218.65 L1936.6 1218.65 L1937.19 1218.65 L1937.77 1218.65 L1938.36 1218.65 L1938.95 1218.65 L1939.53 1218.65 L1940.12 1218.65 L1940.71 1218.65 L1941.29 1218.65 L1941.88 1218.65 L1942.46 1218.65 L1943.05 1218.65 L1943.64 1218.65 L1944.22 1218.65 L1944.81 1218.65 L1945.4 1218.65 L1945.98 1218.65 L1946.57 1218.65 L1947.16 1218.65 L1947.74 1218.65 L1948.33 1218.65 L1948.91 1218.65 L1949.5 1218.65 L1950.09 1218.65 L1950.67 1218.65 L1951.26 1218.65 L1951.85 1218.65 L1952.43 1218.65 L1953.02 1218.65 L1953.61 1218.65 L1954.19 1218.65 L1954.78 1218.65 L1955.37 1218.65 L1955.95 1218.65 L1956.54 1218.65 L1957.12 1218.65 L1957.71 1218.65 L1958.3 1218.65 L1958.88 1218.65 L1959.47 1218.65 L1960.06 1218.65 L1960.64 1218.65 L1961.23 1218.65 L1961.82 1218.65 L1962.4 1218.65 L1962.99 1218.65 L1963.58 1218.65 L1964.16 1218.65 L1964.75 1218.65 L1965.33 1218.65 L1965.92 1218.65 L1966.51 1218.65 L1967.09 1218.65 L1967.68 1218.65 L1968.27 1218.65 L1968.85 1218.65 L1969.44 1218.65 L1970.03 1218.65 L1970.61 1218.65 L1971.2 1218.65 L1971.78 1218.65 L1972.37 1218.65 L1972.96 1218.65 L1973.54 1218.65 L1974.13 1218.65 L1974.72 1218.65 L1975.3 1218.65 L1975.89 1218.65 L1976.48 1218.65 L1977.06 1218.65 L1977.65 1218.65 L1978.24 1218.65 L1978.82 1218.65 L1979.41 1218.65 L1979.99 1218.65 L1980.58 1218.65 L1981.17 1218.65 L1981.75 1218.65 L1982.34 1218.65 L1982.93 1218.65 L1983.51 1218.65 L1984.1 1218.65 L1984.69 1218.65 L1985.27 1218.65 L1985.86 1218.65 L1986.45 1218.65 L1987.03 1218.65 L1987.62 1218.65 L1988.2 1218.65 L1988.79 1218.65 L1989.38 1218.65 L1989.96 1218.65 L1990.55 1218.65 L1991.14 1218.65 L1991.72 1218.65 L1992.31 1218.65 L1992.9 1218.65 L1993.48 1218.65 L1994.07 1218.65 L1994.65 1218.65 L1995.24 1218.65 L1995.83 1218.65 L1996.41 1218.65 L1997 1218.65 L1997.59 1218.65 L1998.17 1218.65 L1998.76 1218.65 L1999.35 1218.65 L1999.93 1218.65 L2000.52 1218.65 L2001.11 1218.65 L2001.69 1218.65 L2002.28 1218.65 L2002.86 1218.65 L2003.45 1218.65 L2004.04 1218.65 L2004.62 1218.65 L2005.21 1218.65 L2005.8 1218.65 L2006.38 1218.65 L2006.97 1218.65 L2007.56 1218.65 L2008.14 1218.65 L2008.73 1218.65 L2009.32 1218.65 L2009.9 1218.65 L2010.49 1218.65 L2011.07 1218.65 L2011.66 1218.65 L2012.25 1218.65 L2012.83 1218.65 L2013.42 1218.65 L2014.01 1218.65 L2014.59 1218.65 L2015.18 1218.65 L2015.77 1218.65 L2016.35 1218.65 L2016.94 1218.65 L2017.53 1218.65 L2018.11 1218.65 L2018.7 1218.65 L2019.28 1218.65 L2019.87 1218.65 L2020.46 1218.65 L2021.04 1218.65 L2021.63 1218.65 L2022.22 1218.65 L2022.8 1218.65 L2023.39 1218.65 L2023.98 1218.65 L2024.56 1218.65 L2025.15 1218.65 L2025.73 1218.65 L2026.32 1218.65 L2026.91 1218.65 L2027.49 1218.65 L2028.08 1218.65 L2028.67 1218.65 L2029.25 1218.65 L2029.84 1218.65 L2030.43 1218.65 L2031.01 1218.65 L2031.6 1218.65 L2032.19 1218.65 L2032.77 1218.65 L2033.36 1218.65 L2033.94 1218.65 L2034.53 1218.65 L2035.12 1218.65 L2035.7 1218.65 L2036.29 1218.65 L2036.88 1218.65 L2037.46 1218.65 L2038.05 1218.65 L2038.64 1218.65 L2039.22 1218.65 L2039.81 1218.65 L2040.4 1218.65 L2040.98 1218.65 L2041.57 1218.65 L2042.15 1218.65 L2042.74 1218.65 L2043.33 1218.65 L2043.91 1218.65 L2044.5 1218.65 L2045.09 1218.65 L2045.67 1218.65 L2046.26 1218.65 L2046.85 1218.65 L2047.43 1218.65 L2048.02 1218.65 L2048.6 1218.65 L2049.19 1218.65 L2049.78 1218.65 L2050.36 1218.65 L2050.95 1218.65 L2051.54 1218.65 L2052.12 1218.65 L2052.71 1218.65 L2053.3 1218.65 L2053.88 1218.65 L2054.47 1218.65 L2055.06 1218.65 L2055.64 1218.65 L2056.23 1218.65 L2056.81 1218.65 L2057.4 1218.65 L2057.99 1218.65 L2058.57 1218.65 L2059.16 1218.65 L2059.75 1218.65 L2060.33 1218.65 L2060.92 1218.65 L2061.51 1218.65 L2062.09 1218.65 L2062.68 1218.65 L2063.27 1218.65 L2063.85 1218.65 L2064.44 1218.65 L2065.02 1218.65 L2065.61 1218.65 L2066.2 1218.65 L2066.78 1218.65 L2067.37 1218.65 L2067.96 1218.65 L2068.54 1218.65 L2069.13 1218.65 L2069.72 1218.65 L2070.3 1218.65 L2070.89 1218.65 L2071.48 1218.65 L2072.06 1218.65 L2072.65 1218.65 L2073.23 1218.65 L2073.82 1218.65 L2074.41 1218.65 L2074.99 1218.65 L2075.58 1218.65 L2076.17 1218.65 L2076.75 1218.65 L2077.34 1218.65 L2077.93 1218.65 L2078.51 1218.65 L2079.1 1218.65 L2079.68 1218.65 L2080.27 1218.65 L2080.86 1218.65 L2081.44 1218.65 L2082.03 1218.65 L2082.62 1218.65 L2083.2 1218.65 L2083.79 1218.65 L2084.38 1218.65 L2084.96 1218.65 L2085.55 1218.65 L2086.14 1218.65 L2086.72 1218.65 L2087.31 1218.65 L2087.89 1218.65 L2088.48 1218.65 L2089.07 1218.65 L2089.65 1218.65 L2090.24 1218.65 L2090.83 1218.65 L2091.41 1218.65 L2092 1218.65 L2092.59 1218.65 L2093.17 1218.65 L2093.76 1218.65 L2094.35 1218.65 L2094.93 1218.65 L2095.52 1218.65 L2096.1 1218.65 L2096.69 1218.65 L2097.28 1218.65 L2097.86 1218.65 L2098.45 1218.65 L2099.04 1218.65 L2099.62 1218.65 L2100.21 1218.65 L2100.8 1218.65 L2101.38 1218.65 L2101.97 1218.65 L2102.55 1218.65 L2103.14 1218.65 L2103.73 1218.65 L2104.31 1218.65 L2104.9 1218.65 L2105.49 1218.65 L2106.07 1218.65 L2106.66 1218.65 L2107.25 1218.65 L2107.83 1218.65 L2108.42 1218.65 L2109.01 1218.65 L2109.59 1218.65 L2110.18 1218.65 L2110.76 1218.65 L2111.35 1218.65 L2111.94 1218.65 L2112.52 1218.65 L2113.11 1218.65 L2113.7 1218.65 L2114.28 1218.65 L2114.87 1218.65 L2115.46 1218.65 L2116.04 1218.65 L2116.63 1218.65 L2117.22 1218.65 L2117.8 1218.65 L2118.39 1218.65 L2118.97 1218.65 L2119.56 1218.65 L2120.15 1218.65 L2120.73 1218.65 L2121.32 1218.65 L2121.91 1218.65 L2122.49 1218.65 L2123.08 1218.65 L2123.67 1218.65 L2124.25 1218.65 L2124.84 1218.65 L2125.42 1218.65 L2126.01 1218.65 L2126.6 1218.65 L2127.18 1218.65 L2127.77 1218.65 L2128.36 1218.65 L2128.94 1218.65 L2129.53 1218.65 L2130.12 1218.65 L2130.7 1218.65 L2131.29 1218.65 L2131.88 1218.65 L2132.46 1218.65 L2133.05 1218.65 L2133.63 1218.65 L2134.22 1218.65 L2134.81 1218.65 L2135.39 1218.65 L2135.98 1218.65 L2136.57 1218.65 L2137.15 1218.65 L2137.74 1218.65 L2138.33 1218.65 L2138.91 1218.65 L2139.5 1218.65 L2140.09 1218.65 L2140.67 1218.65 L2141.26 1218.65 L2141.84 1218.65 L2142.43 1218.65 L2143.02 1218.65 L2143.6 1218.65 L2144.19 1218.65 L2144.78 1218.65 L2145.36 1218.65 L2145.95 1218.65 L2146.54 1218.65 L2147.12 1218.65 L2147.71 1218.65 L2148.3 1218.65 L2148.88 1218.65 L2149.47 1218.65 L2150.05 1218.65 L2150.64 1218.65 L2151.23 1218.65 L2151.81 1218.65 L2152.4 1218.65 L2152.99 1218.65 L2153.57 1218.65 L2154.16 1218.65 L2154.75 1218.65 L2155.33 1218.65 L2155.92 1218.65 L2156.5 1218.65 L2157.09 1218.65 L2157.68 1218.65 L2158.26 1218.65 L2158.26 1217.86 L2157.68 1217.86 L2157.09 1217.86 L2156.5 1217.86 L2155.92 1217.86 L2155.33 1217.86 L2154.75 1217.86 L2154.16 1217.86 L2153.57 1217.86 L2152.99 1217.86 L2152.4 1217.86 L2151.81 1217.86 L2151.23 1217.86 L2150.64 1217.86 L2150.05 1217.86 L2149.47 1217.86 L2148.88 1217.86 L2148.3 1217.86 L2147.71 1217.86 L2147.12 1217.86 L2146.54 1217.86 L2145.95 1217.86 L2145.36 1217.86 L2144.78 1217.86 L2144.19 1217.86 L2143.6 1217.86 L2143.02 1217.86 L2142.43 1217.86 L2141.84 1217.86 L2141.26 1217.86 L2140.67 1217.86 L2140.09 1217.86 L2139.5 1217.86 L2138.91 1217.86 L2138.33 1217.86 L2137.74 1217.86 L2137.15 1217.86 L2136.57 1217.86 L2135.98 1217.86 L2135.39 1217.86 L2134.81 1217.86 L2134.22 1217.86 L2133.63 1217.86 L2133.05 1217.86 L2132.46 1217.86 L2131.88 1217.86 L2131.29 1217.86 L2130.7 1217.86 L2130.12 1217.86 L2129.53 1217.86 L2128.94 1217.86 L2128.36 1217.86 L2127.77 1217.86 L2127.18 1217.86 L2126.6 1217.86 L2126.01 1217.86 L2125.42 1217.86 L2124.84 1217.86 L2124.25 1217.86 L2123.67 1217.86 L2123.08 1217.86 L2122.49 1217.86 L2121.91 1217.86 L2121.32 1217.86 L2120.73 1217.86 L2120.15 1217.86 L2119.56 1217.86 L2118.97 1217.86 L2118.39 1217.86 L2117.8 1217.86 L2117.22 1217.86 L2116.63 1217.86 L2116.04 1217.86 L2115.46 1217.86 L2114.87 1217.86 L2114.28 1217.86 L2113.7 1217.86 L2113.11 1217.86 L2112.52 1217.86 L2111.94 1217.86 L2111.35 1217.86 L2110.76 1217.86 L2110.18 1217.86 L2109.59 1217.86 L2109.01 1217.86 L2108.42 1217.86 L2107.83 1217.86 L2107.25 1217.86 L2106.66 1217.86 L2106.07 1217.86 L2105.49 1217.86 L2104.9 1217.86 L2104.31 1217.86 L2103.73 1217.86 L2103.14 1217.86 L2102.55 1217.86 L2101.97 1217.86 L2101.38 1217.86 L2100.8 1217.86 L2100.21 1217.86 L2099.62 1217.86 L2099.04 1217.86 L2098.45 1217.86 L2097.86 1217.86 L2097.28 1217.86 L2096.69 1217.86 L2096.1 1217.86 L2095.52 1217.86 L2094.93 1217.86 L2094.35 1217.86 L2093.76 1217.86 L2093.17 1217.86 L2092.59 1217.86 L2092 1217.86 L2091.41 1217.86 L2090.83 1217.86 L2090.24 1217.86 L2089.65 1217.86 L2089.07 1217.86 L2088.48 1217.86 L2087.89 1217.86 L2087.31 1217.86 L2086.72 1217.86 L2086.14 1217.86 L2085.55 1217.86 L2084.96 1217.86 L2084.38 1217.86 L2083.79 1217.86 L2083.2 1217.86 L2082.62 1217.86 L2082.03 1217.86 L2081.44 1217.86 L2080.86 1217.86 L2080.27 1217.86 L2079.68 1217.86 L2079.1 1217.86 L2078.51 1217.86 L2077.93 1217.86 L2077.34 1217.86 L2076.75 1217.86 L2076.17 1217.86 L2075.58 1217.86 L2074.99 1217.86 L2074.41 1217.86 L2073.82 1217.86 L2073.23 1217.86 L2072.65 1217.86 L2072.06 1217.86 L2071.48 1217.86 L2070.89 1217.86 L2070.3 1217.86 L2069.72 1217.86 L2069.13 1217.86 L2068.54 1217.86 L2067.96 1217.86 L2067.37 1217.86 L2066.78 1217.86 L2066.2 1217.86 L2065.61 1217.86 L2065.02 1217.86 L2064.44 1217.86 L2063.85 1217.86 L2063.27 1217.86 L2062.68 1217.86 L2062.09 1217.86 L2061.51 1217.86 L2060.92 1217.86 L2060.33 1217.86 L2059.75 1217.86 L2059.16 1217.86 L2058.57 1217.86 L2057.99 1217.86 L2057.4 1217.86 L2056.81 1217.86 L2056.23 1217.86 L2055.64 1217.86 L2055.06 1217.86 L2054.47 1217.86 L2053.88 1217.86 L2053.3 1217.86 L2052.71 1217.86 L2052.12 1217.86 L2051.54 1217.86 L2050.95 1217.86 L2050.36 1217.86 L2049.78 1217.86 L2049.19 1217.86 L2048.6 1217.86 L2048.02 1217.86 L2047.43 1217.86 L2046.85 1217.86 L2046.26 1217.86 L2045.67 1217.86 L2045.09 1217.86 L2044.5 1217.86 L2043.91 1217.86 L2043.33 1217.86 L2042.74 1217.86 L2042.15 1217.86 L2041.57 1217.86 L2040.98 1217.86 L2040.4 1217.86 L2039.81 1217.86 L2039.22 1217.86 L2038.64 1217.86 L2038.05 1217.86 L2037.46 1217.86 L2036.88 1217.86 L2036.29 1217.86 L2035.7 1217.86 L2035.12 1217.86 L2034.53 1217.86 L2033.94 1217.86 L2033.36 1217.86 L2032.77 1217.86 L2032.19 1217.86 L2031.6 1217.86 L2031.01 1217.86 L2030.43 1217.86 L2029.84 1217.86 L2029.25 1217.86 L2028.67 1217.86 L2028.08 1217.86 L2027.49 1217.86 L2026.91 1217.86 L2026.32 1217.86 L2025.73 1217.86 L2025.15 1217.86 L2024.56 1217.86 L2023.98 1217.86 L2023.39 1217.86 L2022.8 1217.86 L2022.22 1217.86 L2021.63 1217.86 L2021.04 1217.86 L2020.46 1217.86 L2019.87 1217.86 L2019.28 1217.86 L2018.7 1217.86 L2018.11 1217.86 L2017.53 1217.86 L2016.94 1217.86 L2016.35 1217.86 L2015.77 1217.86 L2015.18 1217.86 L2014.59 1217.86 L2014.01 1217.86 L2013.42 1217.86 L2012.83 1217.86 L2012.25 1217.86 L2011.66 1217.86 L2011.07 1217.86 L2010.49 1217.86 L2009.9 1217.86 L2009.32 1217.86 L2008.73 1217.86 L2008.14 1217.86 L2007.56 1217.86 L2006.97 1217.86 L2006.38 1217.86 L2005.8 1217.86 L2005.21 1217.86 L2004.62 1217.86 L2004.04 1217.86 L2003.45 1217.86 L2002.86 1217.86 L2002.28 1217.86 L2001.69 1217.86 L2001.11 1217.86 L2000.52 1217.86 L1999.93 1217.86 L1999.35 1217.86 L1998.76 1217.86 L1998.17 1217.86 L1997.59 1217.86 L1997 1217.86 L1996.41 1217.86 L1995.83 1217.86 L1995.24 1217.86 L1994.65 1217.86 L1994.07 1217.86 L1993.48 1217.86 L1992.9 1217.86 L1992.31 1217.86 L1991.72 1217.86 L1991.14 1217.86 L1990.55 1217.86 L1989.96 1217.86 L1989.38 1217.86 L1988.79 1217.86 L1988.2 1217.86 L1987.62 1217.86 L1987.03 1217.86 L1986.45 1217.86 L1985.86 1217.86 L1985.27 1217.86 L1984.69 1217.86 L1984.1 1217.86 L1983.51 1217.86 L1982.93 1217.86 L1982.34 1217.86 L1981.75 1217.86 L1981.17 1217.86 L1980.58 1217.86 L1979.99 1217.86 L1979.41 1217.86 L1978.82 1217.86 L1978.24 1217.86 L1977.65 1217.86 L1977.06 1217.86 L1976.48 1217.86 L1975.89 1217.86 L1975.3 1217.86 L1974.72 1217.86 L1974.13 1217.86 L1973.54 1217.86 L1972.96 1217.86 L1972.37 1217.86 L1971.78 1217.86 L1971.2 1217.86 L1970.61 1217.86 L1970.03 1217.86 L1969.44 1217.86 L1968.85 1217.86 L1968.27 1217.86 L1967.68 1217.86 L1967.09 1217.86 L1966.51 1217.86 L1965.92 1217.86 L1965.33 1217.86 L1964.75 1217.86 L1964.16 1217.86 L1963.58 1217.86 L1962.99 1217.86 L1962.4 1217.86 L1961.82 1217.86 L1961.23 1217.86 L1960.64 1217.86 L1960.06 1217.86 L1959.47 1217.86 L1958.88 1217.86 L1958.3 1217.86 L1957.71 1217.86 L1957.12 1217.86 L1956.54 1217.86 L1955.95 1217.86 L1955.37 1217.86 L1954.78 1217.86 L1954.19 1217.86 L1953.61 1217.86 L1953.02 1217.86 L1952.43 1217.86 L1951.85 1217.86 L1951.26 1217.86 L1950.67 1217.86 L1950.09 1217.86 L1949.5 1217.86 L1948.91 1217.86 L1948.33 1217.86 L1947.74 1217.86 L1947.16 1217.86 L1946.57 1217.86 L1945.98 1217.86 L1945.4 1217.86 L1944.81 1217.86 L1944.22 1217.86 L1943.64 1217.86 L1943.05 1217.86 L1942.46 1217.86 L1941.88 1217.86 L1941.29 1217.86 L1940.71 1217.86 L1940.12 1217.86 L1939.53 1217.86 L1938.95 1217.86 L1938.36 1217.86 L1937.77 1217.86 L1937.19 1217.86 L1936.6 1217.86 L1936.01 1217.86 L1935.43 1217.86 L1934.84 1217.86 L1934.25 1217.86 L1933.67 1217.86 L1933.08 1217.86 L1932.5 1217.86 L1931.91 1217.86 L1931.32 1217.86 L1930.74 1217.86 L1930.15 1217.86 L1929.56 1217.86 L1928.98 1217.86 L1928.39 1217.86 L1927.8 1217.86 L1927.22 1217.86 L1926.63 1217.86 L1926.04 1217.86 L1925.46 1217.86 L1924.87 1217.86 L1924.29 1217.86 L1923.7 1217.86 L1923.11 1217.86 L1922.53 1217.86 L1921.94 1217.86 L1921.35 1217.86 L1920.77 1217.86 L1920.18 1217.86 L1919.59 1217.86 L1919.01 1217.86 L1918.42 1217.86 L1917.83 1217.86 L1917.25 1217.86 L1916.66 1217.86 L1916.08 1217.86 L1915.49 1217.86 L1914.9 1217.86 L1914.32 1217.86 L1913.73 1217.86 L1913.14 1217.86 L1912.56 1217.86 L1911.97 1217.86 L1911.38 1217.86 L1910.8 1217.86 L1910.21 1217.86 L1909.63 1217.86 L1909.04 1217.86 L1908.45 1217.86 L1907.87 1217.86 L1907.28 1217.86 L1906.69 1217.86 L1906.11 1217.86 L1905.52 1217.86 L1904.93 1217.86 L1904.35 1217.86 L1903.76 1217.86 L1903.17 1217.86 L1902.59 1217.86 L1902 1217.86 L1901.42 1217.86 L1900.83 1217.86 L1900.24 1217.86 L1899.66 1217.86 L1899.07 1217.86 L1898.48 1217.86 L1897.9 1217.86 L1897.31 1217.86 L1896.72 1217.86 L1896.14 1217.86 L1895.55 1217.86 L1894.96 1217.86 L1894.38 1217.86 L1893.79 1217.86 L1893.21 1217.86 L1892.62 1217.86 L1892.03 1217.86 L1891.45 1217.86 L1890.86 1217.86 L1890.27 1217.86 L1889.69 1217.86 L1889.1 1217.86 L1888.51 1217.86 L1887.93 1217.86 L1887.34 1217.86 L1886.76 1217.86 L1886.17 1217.86 L1885.58 1217.86 L1885 1217.86 L1884.41 1217.86 L1883.82 1217.86 L1883.24 1217.86 L1882.65 1217.86 L1882.06 1217.86 L1881.48 1217.86 L1880.89 1217.86 L1880.3 1217.86 L1879.72 1217.86 L1879.13 1217.86 L1878.55 1217.86 L1877.96 1217.86 L1877.37 1217.86 L1876.79 1217.86 L1876.2 1217.86 L1875.61 1217.86 L1875.03 1217.86 L1874.44 1217.86 L1873.85 1217.86 L1873.27 1217.86 L1872.68 1217.86 L1872.09 1217.86 L1871.51 1217.86 L1870.92 1217.86 L1870.34 1217.86 L1869.75 1217.86 L1869.16 1217.86 L1868.58 1217.86 L1867.99 1217.86 L1867.4 1217.86 L1866.82 1217.86 L1866.23 1217.86 L1865.64 1217.86 L1865.06 1217.86 L1864.47 1217.86 L1863.88 1217.86 L1863.3 1217.86 L1862.71 1217.86 L1862.13 1217.86 L1861.54 1217.86 L1860.95 1217.86 L1860.37 1217.86 L1859.78 1217.86 L1859.19 1217.86 L1858.61 1217.86 L1858.02 1217.86 L1857.43 1217.86 L1856.85 1217.86 L1856.26 1217.86 L1855.68 1217.86 L1855.09 1217.86 L1854.5 1217.86 L1853.92 1217.86 L1853.33 1217.86 L1852.74 1217.86 L1852.16 1217.86 L1851.57 1217.86 L1850.98 1217.86 L1850.4 1217.86 L1849.81 1217.86 L1849.22 1217.86 L1848.64 1217.86 L1848.05 1217.86 L1847.47 1217.86 L1846.88 1217.86 L1846.29 1217.86 L1845.71 1217.86 L1845.12 1217.86 L1844.53 1217.86 L1843.95 1217.86 L1843.36 1217.86 L1842.77 1217.86 L1842.19 1217.86 L1841.6 1217.86 L1841.01 1217.86 L1840.43 1217.86 L1839.84 1217.86 L1839.26 1217.86 L1838.67 1217.86 L1838.08 1217.86 L1837.5 1217.86 L1836.91 1217.86 L1836.32 1217.86 L1835.74 1217.86 L1835.15 1217.86 L1834.56 1217.86 L1833.98 1217.86 L1833.39 1217.86 L1832.81 1217.86 L1832.22 1217.86 L1831.63 1217.86 L1831.05 1217.86 L1830.46 1217.86 L1829.87 1217.86 L1829.29 1217.86 L1828.7 1217.86 L1828.11 1217.86 L1827.53 1217.86 L1826.94 1217.86 L1826.35 1217.86 L1825.77 1217.86 L1825.18 1217.86 L1824.6 1217.86 L1824.01 1217.86 L1823.42 1217.86 L1822.84 1217.86 L1822.25 1217.86 L1821.66 1217.86 L1821.08 1217.86 L1820.49 1217.86 L1819.9 1217.86 L1819.32 1217.86 L1818.73 1217.86 L1818.14 1217.86 L1817.56 1217.86 L1816.97 1217.86 L1816.39 1217.86 L1815.8 1217.86 L1815.21 1217.86 L1814.63 1217.86 L1814.04 1217.86 L1813.45 1217.86 L1812.87 1217.86 L1812.28 1217.86 L1811.69 1217.86 L1811.11 1217.86 L1810.52 1217.86 L1809.94 1217.86 L1809.35 1217.86 L1808.76 1217.86 L1808.18 1217.86 L1807.59 1217.86 L1807 1217.86 L1806.42 1217.86 L1805.83 1217.86 L1805.24 1217.86 L1804.66 1217.86 L1804.07 1217.86 L1803.48 1217.86 L1802.9 1217.86 L1802.31 1217.86 L1801.73 1217.86 L1801.14 1217.86 L1800.55 1217.86 L1799.97 1217.86 L1799.38 1217.86 L1798.79 1217.86 L1798.21 1217.86 L1797.62 1217.86 L1797.03 1217.86 L1796.45 1217.86 L1795.86 1217.86 L1795.27 1217.86 L1794.69 1217.86 L1794.1 1217.86 L1793.52 1217.86 L1792.93 1217.86 L1792.34 1217.86 L1791.76 1217.86 L1791.17 1217.86 L1790.58 1217.86 L1790 1217.86 L1789.41 1217.86 L1788.82 1217.86 L1788.24 1217.86 L1787.65 1217.86 L1787.06 1217.86 L1786.48 1217.86 L1785.89 1217.86 L1785.31 1217.86 L1784.72 1217.86 L1784.13 1217.86 L1783.55 1217.86 L1782.96 1217.86 L1782.37 1217.86 L1781.79 1217.86 L1781.2 1217.86 L1780.61 1217.86 L1780.03 1217.86 L1779.44 1217.86 L1778.86 1217.86 L1778.27 1217.86 L1777.68 1217.86 L1777.1 1217.86 L1776.51 1217.86 L1775.92 1217.86 L1775.34 1217.86 L1774.75 1217.86 L1774.16 1217.86 L1773.58 1217.86 L1772.99 1217.86 L1772.4 1217.86 L1771.82 1217.86 L1771.23 1217.86 L1770.65 1217.86 L1770.06 1217.86 L1769.47 1217.86 L1768.89 1217.86 L1768.3 1217.86 L1767.71 1217.86 L1767.13 1217.86 L1766.54 1217.86 L1765.95 1217.86 L1765.37 1217.86 L1764.78 1217.86 L1764.19 1217.86 L1763.61 1217.86 L1763.02 1217.86 L1762.44 1217.86 L1761.85 1217.86 L1761.26 1217.86 L1760.68 1217.86 L1760.09 1217.86 L1759.5 1217.86 L1758.92 1217.86 L1758.33 1217.86 L1757.74 1217.86 L1757.16 1217.86 L1756.57 1217.86 L1755.99 1217.86 L1755.4 1217.86 L1754.81 1217.86 L1754.23 1217.86 L1753.64 1217.86 L1753.05 1217.86 L1752.47 1217.86 L1751.88 1217.86 L1751.29 1217.86 L1750.71 1217.86 L1750.12 1217.86 L1749.53 1217.86 L1748.95 1217.86 L1748.36 1217.86 L1747.78 1217.86 L1747.19 1217.86 L1746.6 1217.86 L1746.02 1217.86 L1745.43 1217.86 L1744.84 1217.86 L1744.26 1217.86 L1743.67 1217.86 L1743.08 1217.86 L1742.5 1217.86 L1741.91 1217.86 L1741.32 1217.86 L1740.74 1217.86 L1740.15 1217.86 L1739.57 1217.86 L1738.98 1217.86 L1738.39 1217.86 L1737.81 1217.86 L1737.22 1217.86 L1736.63 1217.86 L1736.05 1217.86 L1735.46 1217.86 L1734.87 1217.86 L1734.29 1217.86 L1733.7 1217.86 L1733.11 1217.86 L1732.53 1217.86 L1731.94 1217.86 L1731.36 1217.86 L1730.77 1217.86 L1730.18 1217.86 L1729.6 1217.86 L1729.01 1217.86 L1728.42 1217.86 L1727.84 1217.86 L1727.25 1217.86 L1726.66 1217.86 L1726.08 1217.86 L1725.49 1217.86 L1724.91 1217.86 L1724.32 1217.86 L1723.73 1217.86 L1723.15 1217.86 L1722.56 1217.86 L1721.97 1217.86 L1721.39 1217.86 L1720.8 1217.86 L1720.21 1217.86 L1719.63 1217.86 L1719.04 1217.86 L1718.45 1217.86 L1717.87 1217.86 L1717.28 1217.86 L1716.7 1217.86 L1716.11 1217.86 L1715.52 1217.86 L1714.94 1217.86 L1714.35 1217.86 L1713.76 1217.86 L1713.18 1217.86 L1712.59 1217.86 L1712 1217.86 L1711.42 1217.86 L1710.83 1217.86 L1710.24 1217.86 L1709.66 1217.86 L1709.07 1217.86 L1708.49 1217.86 L1707.9 1217.86 L1707.31 1217.86 L1706.73 1217.86 L1706.14 1217.86 L1705.55 1217.86 L1704.97 1217.86 L1704.38 1217.86 L1703.79 1217.86 L1703.21 1217.86 L1702.62 1217.86 L1702.04 1217.86 L1701.45 1217.86 L1700.86 1217.86 L1700.28 1217.86 L1699.69 1217.86 L1699.1 1217.86 L1698.52 1217.86 L1697.93 1217.86 L1697.34 1217.86 L1696.76 1217.86 L1696.17 1217.86 L1695.58 1217.86 L1695 1217.86 L1694.41 1217.86 L1693.83 1217.86 L1693.24 1217.86 L1692.65 1217.86 L1692.07 1217.86 L1691.48 1217.86 L1690.89 1217.86 L1690.31 1217.86 L1689.72 1217.86 L1689.13 1217.86 L1688.55 1217.86 L1687.96 1217.86 L1687.37 1217.86 L1686.79 1217.86 L1686.2 1217.86 L1685.62 1217.86 L1685.03 1217.86 L1684.44 1217.86 L1683.86 1217.86 L1683.27 1217.86 L1682.68 1217.86 L1682.1 1217.86 L1681.51 1217.86 L1680.92 1217.86 L1680.34 1217.86 L1679.75 1217.86 L1679.17 1217.86 L1678.58 1217.86 L1677.99 1217.86 L1677.41 1217.86 L1676.82 1217.86 L1676.23 1217.86 L1675.65 1217.86 L1675.06 1217.86 L1674.47 1217.86 L1673.89 1217.86 L1673.3 1217.86 L1672.71 1217.86 L1672.13 1217.86 L1671.54 1217.86 L1670.96 1217.86 L1670.37 1217.86 L1669.78 1217.86 L1669.2 1217.86 L1668.61 1217.86 L1668.02 1217.86 L1667.44 1217.86 L1666.85 1217.86 L1666.26 1217.86 L1665.68 1217.86 L1665.09 1217.86 L1664.5 1217.86 L1663.92 1217.86 L1663.33 1217.86 L1662.75 1217.86 L1662.16 1217.86 L1661.57 1217.86 L1660.99 1217.86 L1660.4 1217.86 L1659.81 1217.86 L1659.23 1217.86 L1658.64 1217.86 L1658.05 1217.86 L1657.47 1217.86 L1656.88 1217.86 L1656.29 1217.86 L1655.71 1217.86 L1655.12 1217.86 L1654.54 1217.86 L1653.95 1217.86 L1653.36 1217.86 L1652.78 1217.86 L1652.19 1217.86 L1651.6 1217.86 L1651.02 1217.86 L1650.43 1217.86 L1649.84 1217.86 L1649.26 1217.86 L1648.67 1217.86 L1648.09 1217.86 L1647.5 1217.86 L1646.91 1217.86 L1646.33 1217.86 L1645.74 1217.86 L1645.15 1217.86 L1644.57 1217.86 L1643.98 1217.86 L1643.39 1217.86 L1642.81 1217.86 L1642.22 1217.86 L1641.63 1217.86 L1641.05 1217.86 L1640.46 1217.86 L1639.88 1217.86 L1639.29 1217.86 L1638.7 1217.86 L1638.12 1217.86 L1637.53 1217.86 L1636.94 1217.86 L1636.36 1217.86 L1635.77 1217.86 L1635.18 1217.86 L1634.6 1217.86 L1634.01 1217.86 L1633.42 1217.86 L1632.84 1217.86 L1632.25 1217.86 L1631.67 1217.86 L1631.08 1217.86 L1630.49 1217.86 L1629.91 1217.86 L1629.32 1217.86 L1628.73 1217.86 L1628.15 1217.86 L1627.56 1217.86 L1626.97 1217.86 L1626.39 1217.86 L1625.8 1217.86 L1625.22 1217.86 L1624.63 1217.86 L1624.04 1217.86 L1623.46 1217.86 L1622.87 1217.86 L1622.28 1217.86 L1621.7 1217.86 L1621.11 1217.86 L1620.52 1217.86 L1619.94 1217.86 L1619.35 1217.86 L1618.76 1217.86 L1618.18 1217.86 L1617.59 1217.86 L1617.01 1217.86 L1616.42 1217.86 L1615.83 1217.86 L1615.25 1217.86 L1614.66 1217.86 L1614.07 1217.86 L1613.49 1217.86 L1612.9 1217.86 L1612.31 1217.86 L1611.73 1217.86 L1611.14 1217.86 L1610.55 1217.86 L1609.97 1217.86 L1609.38 1217.86 L1608.8 1217.86 L1608.21 1217.86 L1607.62 1217.86 L1607.04 1217.86 L1606.45 1217.86 L1605.86 1217.86 L1605.28 1217.86 L1604.69 1217.86 L1604.1 1217.86 L1603.52 1217.86 L1602.93 1217.86 L1602.34 1217.86 L1601.76 1217.86 L1601.17 1217.86 L1600.59 1217.86 L1600 1217.86 L1599.41 1217.86 L1598.83 1217.86 L1598.24 1217.86 L1597.65 1217.86 L1597.07 1217.86 L1596.48 1217.86 L1595.89 1217.86 L1595.31 1217.86 L1594.72 1217.86 L1594.14 1217.86 L1593.55 1217.86 L1592.96 1217.86 L1592.38 1217.86 L1591.79 1217.86 L1591.2 1217.86 L1590.62 1217.86 L1590.03 1217.86 L1589.44 1217.86 L1588.86 1217.86 L1588.27 1217.86 L1587.68 1217.86 L1587.1 1217.86 L1586.51 1217.86 L1585.93 1217.86 L1585.34 1217.86 L1584.75 1217.86 L1584.17 1217.86 L1583.58 1217.86 L1582.99 1217.86 L1582.41 1217.86 L1581.82 1217.86 L1581.23 1217.86 L1580.65 1217.86 L1580.06 1217.86 L1579.47 1217.86 L1578.89 1217.86 L1578.3 1217.86 L1577.72 1217.86 L1577.13 1217.86 L1576.54 1217.86 L1575.96 1217.86 L1575.37 1217.86 L1574.78 1217.86 L1574.2 1217.86 L1573.61 1217.86 L1573.02 1217.86 L1572.44 1217.86 L1571.85 1217.86 L1571.27 1217.86 L1570.68 1217.86 L1570.09 1217.86 L1569.51 1217.86 L1568.92 1217.86 L1568.33 1217.86 L1567.75 1217.86 L1567.16 1217.86 L1566.57 1217.86 L1565.99 1217.86 L1565.4 1217.86 L1564.81 1217.86 L1564.23 1217.86 L1563.64 1217.86 L1563.06 1217.86 L1562.47 1217.86 L1561.88 1217.86 L1561.3 1217.86 L1560.71 1217.86 L1560.12 1217.86 L1559.54 1217.86 L1558.95 1217.86 L1558.36 1217.86 L1557.78 1217.86 L1557.19 1217.86 L1556.6 1217.86 L1556.02 1217.86 L1555.43 1217.86 L1554.85 1217.86 L1554.26 1217.86 L1553.67 1217.86 L1553.09 1217.86 L1552.5 1217.86 L1551.91 1217.86 L1551.33 1217.86 L1550.74 1217.86 L1550.15 1217.86 L1549.57 1217.86 L1548.98 1217.86 L1548.4 1217.86 L1547.81 1217.86 L1547.22 1217.86 L1546.64 1217.86 L1546.05 1217.86 L1545.46 1217.86 L1544.88 1217.86 L1544.29 1217.86 L1543.7 1217.86 L1543.12 1217.86 L1542.53 1217.86 L1541.94 1217.86 L1541.36 1217.86 L1540.77 1217.86 L1540.19 1217.86 L1539.6 1217.86 L1539.01 1217.86 L1538.43 1217.86 L1537.84 1217.86 L1537.25 1217.86 L1536.67 1217.86 L1536.08 1217.86 L1535.49 1217.86 L1534.91 1217.86 L1534.32 1217.86 L1533.73 1217.86 L1533.15 1217.86 L1532.56 1217.86 L1531.98 1217.86 L1531.39 1217.86 L1530.8 1217.86 L1530.22 1217.86 L1529.63 1217.86 L1529.04 1217.86 L1528.46 1217.86 L1527.87 1217.86 L1527.28 1217.86 L1526.7 1217.86 L1526.11 1217.86 L1525.52 1217.86 L1524.94 1217.86 L1524.35 1217.86 L1523.77 1217.86 L1523.18 1217.86 L1522.59 1217.86 L1522.01 1217.86 L1521.42 1217.86 L1520.83 1217.86 L1520.25 1217.86 L1519.66 1217.86 L1519.07 1217.86 L1518.49 1217.86 L1517.9 1217.86 L1517.32 1217.86 L1516.73 1217.86 L1516.14 1217.86 L1515.56 1217.86 L1514.97 1217.86 L1514.38 1217.86 L1513.8 1217.86 L1513.21 1217.86 L1512.62 1217.86 L1512.04 1217.86 L1511.45 1217.86 L1510.86 1217.86 L1510.28 1217.86 L1509.69 1217.86 L1509.11 1217.86 L1508.52 1217.86 L1507.93 1217.86 L1507.35 1217.86 L1506.76 1217.86 L1506.17 1217.86 L1505.59 1217.86 L1505 1217.86 L1504.41 1217.86 L1503.83 1217.86 L1503.24 1217.86 L1502.65 1217.86 L1502.07 1217.86 L1501.48 1217.86 L1500.9 1217.86 L1500.31 1217.86 L1499.72 1217.86 L1499.14 1217.86 L1498.55 1217.86 L1497.96 1217.86 L1497.38 1217.86 L1496.79 1217.86 L1496.2 1217.86 L1495.62 1217.86 L1495.03 1217.86 L1494.45 1217.86 L1493.86 1217.86 L1493.27 1217.86 L1492.69 1217.86 L1492.1 1217.86 L1491.51 1217.86 L1490.93 1217.86 L1490.34 1217.86 L1489.75 1217.86 L1489.17 1217.86 L1488.58 1217.86 L1487.99 1217.86 L1487.41 1217.86 L1486.82 1217.86 L1486.24 1217.86 L1485.65 1217.86 L1485.06 1217.86 L1484.48 1217.86 L1483.89 1217.86 L1483.3 1217.86 L1482.72 1217.86 L1482.13 1217.86 L1481.54 1217.86 L1480.96 1217.86 L1480.37 1217.86 L1479.78 1217.86 L1479.2 1217.86 L1478.61 1217.86 L1478.03 1217.86 L1477.44 1217.86 L1476.85 1217.86 L1476.27 1217.86 L1475.68 1217.86 L1475.09 1217.86 L1474.51 1217.86 L1473.92 1217.86 L1473.33 1217.86 L1472.75 1217.86 L1472.16 1217.86 L1471.57 1217.86 L1470.99 1217.86 L1470.4 1217.86 L1469.82 1217.86 L1469.23 1217.86 L1468.64 1217.86 L1468.06 1217.86 L1467.47 1217.86 L1466.88 1217.86 L1466.3 1217.86 L1465.71 1217.86 L1465.12 1217.86 L1464.54 1217.86 L1463.95 1217.86 L1463.37 1217.86 L1462.78 1217.86 L1462.19 1217.86 L1461.61 1217.86 L1461.02 1217.86 L1460.43 1217.86 L1459.85 1217.86 L1459.26 1217.86 L1458.67 1217.86 L1458.09 1217.86 L1457.5 1217.86 L1456.91 1217.86 L1456.33 1217.86 L1455.74 1217.86 L1455.16 1217.86 L1454.57 1217.86 L1453.98 1217.86 L1453.4 1217.86 L1452.81 1217.86 L1452.22 1217.86 L1451.64 1217.86 L1451.05 1217.86 L1450.46 1217.86 L1449.88 1217.86 L1449.29 1217.86 L1448.7 1217.86 L1448.12 1217.86 L1447.53 1217.86 L1446.95 1217.86 L1446.36 1217.86 L1445.77 1217.86 L1445.19 1217.86 L1444.6 1217.86 L1444.01 1217.86 L1443.43 1217.86 L1442.84 1217.86 L1442.25 1217.86 L1441.67 1217.86 L1441.08 1217.86 L1440.5 1217.86 L1439.91 1217.86 L1439.32 1217.86 L1438.74 1217.86 L1438.15 1217.86 L1437.56 1217.86 L1436.98 1217.86 L1436.39 1217.86 L1435.8 1217.86 L1435.22 1217.86 L1434.63 1217.86 L1434.04 1217.86 L1433.46 1217.86 L1432.87 1217.86 L1432.29 1217.86 L1431.7 1217.86 L1431.11 1217.86 L1430.53 1217.86 L1429.94 1217.86 L1429.35 1217.86 L1428.77 1217.86 L1428.18 1217.86 L1427.59 1217.86 L1427.01 1217.86 L1426.42 1217.86 L1425.83 1217.86 L1425.25 1217.86 L1424.66 1217.86 L1424.08 1217.86 L1423.49 1217.86 L1422.9 1217.86 L1422.32 1217.86 L1421.73 1217.86 L1421.14 1217.86 L1420.56 1217.86 L1419.97 1217.86 L1419.38 1217.86 L1418.8 1217.86 L1418.21 1217.86 L1417.63 1217.86 L1417.04 1217.86 L1416.45 1217.86 L1415.87 1217.86 L1415.28 1217.86 L1414.69 1217.86 L1414.11 1217.86 L1413.52 1217.86 L1412.93 1217.86 L1412.35 1217.86 L1411.76 1217.86 L1411.17 1217.86 L1410.59 1217.86 L1410 1217.86 L1409.42 1217.86 L1408.83 1217.86 L1408.24 1217.86 L1407.66 1217.86 L1407.07 1217.86 L1406.48 1217.86 L1405.9 1217.86 L1405.31 1217.86 L1404.72 1217.86 L1404.14 1217.86 L1403.55 1217.86 L1402.96 1217.86 L1402.38 1217.86 L1401.79 1217.86 L1401.21 1217.86 L1400.62 1217.86 L1400.03 1217.86 L1399.45 1217.86 L1398.86 1217.86 L1398.27 1217.86 L1397.69 1217.86 L1397.1 1217.86 L1396.51 1217.86 L1395.93 1217.86 L1395.34 1217.86 L1394.75 1217.86 L1394.17 1217.86 L1393.58 1217.86 L1393 1217.86 L1392.41 1217.86 L1391.82 1217.86 L1391.24 1217.86 L1390.65 1217.86 L1390.06 1217.86 L1389.48 1217.86 L1388.89 1217.86 L1388.3 1217.86 L1387.72 1217.86 L1387.13 1217.86 L1386.55 1217.86 L1385.96 1217.86 L1385.37 1217.86 L1384.79 1217.86 L1384.2 1217.86 L1383.61 1217.86 L1383.03 1217.86 L1382.44 1217.86 L1381.85 1217.86 L1381.27 1217.86 L1380.68 1217.86 L1380.09 1217.86 L1379.51 1217.86 L1378.92 1217.86 L1378.34 1217.86 L1377.75 1217.86 L1377.16 1217.86 L1376.58 1217.86 L1375.99 1217.86 L1375.4 1217.86 L1374.82 1217.86 L1374.23 1217.86 L1373.64 1217.86 L1373.06 1217.86 L1372.47 1217.86 L1371.88 1217.86 L1371.3 1217.86 L1370.71 1217.86 L1370.13 1217.86 L1369.54 1217.86 L1368.95 1217.86 L1368.37 1217.86 L1367.78 1217.86 L1367.19 1217.86 L1366.61 1217.86 L1366.02 1217.86 L1365.43 1217.86 L1364.85 1217.86 L1364.26 1217.86 L1363.68 1217.86 L1363.09 1217.86 L1362.5 1217.86 L1361.92 1217.86 L1361.33 1217.86 L1360.74 1217.86 L1360.16 1217.86 L1359.57 1217.86 L1358.98 1217.86 L1358.4 1217.86 L1357.81 1217.86 L1357.22 1217.86 L1356.64 1217.86 L1356.05 1217.86 L1355.47 1217.86 L1354.88 1217.86 L1354.29 1217.86 L1353.71 1217.86 L1353.12 1217.86 L1352.53 1217.86 L1351.95 1217.86 L1351.36 1217.86 L1350.77 1217.86 L1350.19 1217.86 L1349.6 1217.86 L1349.01 1217.86 L1348.43 1217.86 L1347.84 1217.86 L1347.26 1217.86 L1346.67 1217.86 L1346.08 1217.86 L1345.5 1217.86 L1344.91 1217.86 L1344.32 1217.86 L1343.74 1217.86 L1343.15 1217.86 L1342.56 1217.86 L1341.98 1217.86 L1341.39 1217.86 L1340.8 1217.86 L1340.22 1217.86 L1339.63 1217.86 L1339.05 1217.86 L1338.46 1217.86 L1337.87 1217.86 L1337.29 1217.86 L1336.7 1217.86 L1336.11 1217.86 L1335.53 1217.86 L1334.94 1217.86 L1334.35 1217.86 L1333.77 1217.86 L1333.18 1217.86 L1332.6 1217.86 L1332.01 1217.86 L1331.42 1217.86 L1330.84 1217.86 L1330.25 1217.86 L1329.66 1217.86 L1329.08 1217.86 L1328.49 1217.86 L1327.9 1217.86 L1327.32 1217.86 L1326.73 1217.86 L1326.14 1217.86 L1325.56 1217.86 L1324.97 1217.86 L1324.39 1217.86 L1323.8 1217.86 L1323.21 1217.86 L1322.63 1217.86 L1322.04 1217.86 L1321.45 1217.86 L1320.87 1217.86 L1320.28 1217.86 L1319.69 1217.86 L1319.11 1217.86 L1318.52 1217.86 L1317.93 1217.86 L1317.35 1217.86 L1316.76 1217.86 L1316.18 1217.86 L1315.59 1217.86 L1315 1217.86 L1314.42 1217.86 L1313.83 1217.86 L1313.24 1217.86 L1312.66 1217.86 L1312.07 1217.86 L1311.48 1217.86 L1310.9 1217.86 L1310.31 1217.86 L1309.73 1217.86 L1309.14 1217.86 L1308.55 1217.86 L1307.97 1217.86 L1307.38 1217.86 L1306.79 1217.86 L1306.21 1217.86 L1305.62 1217.86 L1305.03 1217.86 L1304.45 1217.86 L1303.86 1217.86 L1303.27 1217.86 L1302.69 1217.86 L1302.1 1217.86 L1301.52 1217.86 L1300.93 1217.86 L1300.34 1217.86 L1299.76 1217.86 L1299.17 1217.86 L1298.58 1217.86 L1298 1217.86 L1297.41 1217.86 L1296.82 1217.86 L1296.24 1217.86 L1295.65 1217.86 L1295.06 1217.86 L1294.48 1217.86 L1293.89 1217.86 L1293.31 1217.86 L1292.72 1217.86 L1292.13 1217.86 L1291.55 1217.86 L1290.96 1217.86 L1290.37 1217.86 L1289.79 1217.86 L1289.2 1217.86 L1288.61 1217.86 L1288.03 1217.86 L1287.44 1217.86 L1286.86 1217.86 L1286.27 1217.86 L1285.68 1217.86 L1285.1 1217.86 L1284.51 1217.86 L1283.92 1217.86 L1283.34 1217.86 L1282.75 1217.86 L1282.16 1217.86 L1281.58 1217.86 L1280.99 1217.86 L1280.4 1217.86 L1279.82 1217.86 L1279.23 1217.86 L1278.65 1217.86 L1278.06 1217.86 L1277.47 1217.86 L1276.89 1217.86 L1276.3 1217.86 L1275.71 1217.86 L1275.13 1217.86 L1274.54 1217.86 L1273.95 1217.86 L1273.37 1217.86 L1272.78 1217.86 L1272.19 1217.86 L1271.61 1217.86 L1271.02 1217.86 L1270.44 1217.86 L1269.85 1217.86 L1269.26 1217.86 L1268.68 1217.86 L1268.09 1217.86 L1267.5 1217.86 L1266.92 1217.86 L1266.33 1217.86 L1265.74 1217.86 L1265.16 1217.86 L1264.57 1217.86 L1263.98 1217.86 L1263.4 1217.86 L1262.81 1217.86 L1262.23 1217.86 L1261.64 1217.86 L1261.05 1217.86 L1260.47 1217.86 L1259.88 1217.86 L1259.29 1217.86 L1258.71 1217.86 L1258.12 1217.86 L1257.53 1217.86 L1256.95 1217.86 L1256.36 1217.86 L1255.78 1217.86 L1255.19 1217.86 L1254.6 1217.86 L1254.02 1217.86 L1253.43 1217.86 L1252.84 1217.86 L1252.26 1217.86 L1251.67 1217.86 L1251.08 1217.86 L1250.5 1217.86 L1249.91 1217.86 L1249.32 1217.86 L1248.74 1217.86 L1248.15 1217.86 L1247.57 1217.86 L1246.98 1217.86 L1246.39 1217.86 L1245.81 1217.86 L1245.22 1217.86 L1244.63 1217.86 L1244.05 1217.86 L1243.46 1217.86 L1242.87 1217.86 L1242.29 1217.86 L1241.7 1217.86 L1241.11 1217.86 L1240.53 1217.86 L1239.94 1217.86 L1239.36 1217.86 L1238.77 1217.86 L1238.18 1217.86 L1237.6 1217.86 L1237.01 1217.86 L1236.42 1217.86 L1235.84 1217.86 L1235.25 1217.86 L1234.66 1217.86 L1234.08 1217.86 L1233.49 1217.86 L1232.91 1217.86 L1232.32 1217.86 L1231.73 1217.86 L1231.15 1217.86 L1230.56 1217.86 L1229.97 1217.86 L1229.39 1217.86 L1228.8 1217.86 L1228.21 1217.86 L1227.63 1217.86 L1227.04 1217.86 L1226.45 1217.86 L1225.87 1217.86 L1225.28 1217.86 L1224.7 1217.86 L1224.11 1217.86 L1223.52 1217.86 L1222.94 1217.86 L1222.35 1217.86 L1221.76 1217.86 L1221.18 1217.86 L1220.59 1217.86 L1220 1217.86 L1219.42 1217.86 L1218.83 1217.86 L1218.24 1217.86 L1217.66 1217.86 L1217.07 1217.86 L1216.49 1217.86 L1215.9 1217.86 L1215.31 1217.86 L1214.73 1217.86 L1214.14 1217.86 L1213.55 1217.86 L1212.97 1217.86 L1212.38 1217.86 L1211.79 1217.86 L1211.21 1217.86 L1210.62 1217.86 L1210.03 1217.86 L1209.45 1217.86 L1208.86 1217.86 L1208.28 1217.86 L1207.69 1217.86 L1207.1 1217.86 L1206.52 1217.86 L1205.93 1217.86 L1205.34 1217.86 L1204.76 1217.86 L1204.17 1217.86 L1203.58 1217.86 L1203 1217.86 L1202.41 1217.86 L1201.83 1217.86 L1201.24 1217.86 L1200.65 1217.86 L1200.07 1217.86 L1199.48 1217.86 L1198.89 1217.86 L1198.31 1217.86 L1197.72 1217.86 L1197.13 1217.86 L1196.55 1217.86 L1195.96 1217.86 L1195.37 1217.86 L1194.79 1217.86 L1194.2 1217.86 L1193.62 1217.86 L1193.03 1217.86 L1192.44 1217.86 L1191.86 1217.86 L1191.27 1217.86 L1190.68 1217.86 L1190.1 1217.86 L1189.51 1217.86 L1188.92 1217.86 L1188.34 1217.86 L1187.75 1217.86 L1187.16 1217.86 L1186.58 1217.86 L1185.99 1217.86 L1185.41 1217.86 L1184.82 1217.86 L1184.23 1217.86 L1183.65 1217.86 L1183.06 1217.86 L1182.47 1217.86 L1181.89 1217.86 L1181.3 1217.86 L1180.71 1217.86 L1180.13 1217.86 L1179.54 1217.86 L1178.96 1217.86 L1178.37 1217.86 L1177.78 1217.86 L1177.2 1217.86 L1176.61 1217.86 L1176.02 1217.86 L1175.44 1217.86 L1174.85 1217.86 L1174.26 1217.86 L1173.68 1217.86 L1173.09 1217.86 L1172.5 1217.86 L1171.92 1217.86 L1171.33 1217.86 L1170.75 1217.86 L1170.16 1217.86 L1169.57 1217.86 L1168.99 1217.86 L1168.4 1217.86 L1167.81 1217.86 L1167.23 1217.86 L1166.64 1217.86 L1166.05 1217.86 L1165.47 1217.86 L1164.88 1217.86 L1164.29 1217.86 L1163.71 1217.86 L1163.12 1217.86 L1162.54 1217.86 L1161.95 1217.86 L1161.36 1217.86 L1160.78 1217.86 L1160.19 1217.86 L1159.6 1217.86 L1159.02 1217.86 L1158.43 1217.86 L1157.84 1217.86 L1157.26 1217.86 L1156.67 1217.86 L1156.09 1217.86 L1155.5 1217.86 L1154.91 1217.86 L1154.33 1217.86 L1153.74 1217.86 L1153.15 1217.86 L1152.57 1217.86 L1151.98 1217.86 L1151.39 1217.86 L1150.81 1217.86 L1150.22 1217.86 L1149.63 1217.86 L1149.05 1217.86 L1148.46 1217.86 L1147.88 1217.86 L1147.29 1217.86 L1146.7 1217.86 L1146.12 1217.86 L1145.53 1217.86 L1144.94 1217.86 L1144.36 1217.86 L1143.77 1217.86 L1143.18 1217.86 L1142.6 1217.86 L1142.01 1217.86 L1141.42 1217.86 L1140.84 1217.86 L1140.25 1217.86 L1139.67 1217.86 L1139.08 1217.86 L1138.49 1217.86 L1137.91 1217.86 L1137.32 1217.86 L1136.73 1217.86 L1136.15 1217.86 L1135.56 1217.86 L1134.97 1217.86 L1134.39 1217.86 L1133.8 1217.86 L1133.21 1217.86 L1132.63 1217.86 L1132.04 1217.86 L1131.46 1217.86 L1130.87 1217.86 L1130.28 1217.86 L1129.7 1217.86 L1129.11 1217.86 L1128.52 1217.86 L1127.94 1217.86 L1127.35 1217.86 L1126.76 1217.86 L1126.18 1217.86 L1125.59 1217.86 L1125.01 1217.86 L1124.42 1217.86 L1123.83 1217.86 L1123.25 1217.86 L1122.66 1217.86 L1122.07 1217.86 L1121.49 1217.86 L1120.9 1217.86 L1120.31 1217.86 L1119.73 1217.86 L1119.14 1217.86 L1118.55 1217.86 L1117.97 1217.86 L1117.38 1217.86 L1116.8 1217.86 L1116.21 1217.86 L1115.62 1217.86 L1115.04 1217.86 L1114.45 1217.86 L1113.86 1217.86 L1113.28 1217.86 L1112.69 1217.86 L1112.1 1217.86 L1111.52 1217.86 L1110.93 1217.86 L1110.34 1217.86 L1109.76 1217.86 L1109.17 1217.86 L1108.59 1217.86 L1108 1217.86 L1107.41 1217.86 L1106.83 1217.86 L1106.24 1217.86 L1105.65 1217.86 L1105.07 1217.86 L1104.48 1217.86 L1103.89 1217.86 L1103.31 1217.86 L1102.72 1217.86 L1102.14 1217.86 L1101.55 1217.86 L1100.96 1217.86 L1100.38 1217.86 L1099.79 1217.86 L1099.2 1217.86 L1098.62 1217.86 L1098.03 1217.86 L1097.44 1217.86 L1096.86 1217.86 L1096.27 1217.86 L1095.68 1217.86 L1095.1 1217.86 L1094.51 1217.86 L1093.93 1217.86 L1093.34 1217.86 L1092.75 1217.86 L1092.17 1217.86 L1091.58 1217.86 L1090.99 1217.86 L1090.41 1217.86 L1089.82 1217.86 L1089.23 1217.86 L1088.65 1217.86 L1088.06 1217.86 L1087.47 1217.86 L1086.89 1217.86 L1086.3 1217.86 L1085.72 1217.86 L1085.13 1217.86 L1084.54 1217.86 L1083.96 1217.86 L1083.37 1217.86 L1082.78 1217.86 L1082.2 1217.86 L1081.61 1217.86 L1081.02 1217.86 L1080.44 1217.86 L1079.85 1217.86 L1079.26 1217.86 L1078.68 1217.86 L1078.09 1217.86 L1077.51 1217.86 L1076.92 1217.86 L1076.33 1217.86 L1075.75 1217.86 L1075.16 1217.86 L1074.57 1217.86 L1073.99 1217.86 L1073.4 1217.86 L1072.81 1217.86 L1072.23 1217.86 L1071.64 1217.86 L1071.06 1217.86 L1070.47 1217.86 L1069.88 1217.86 L1069.3 1217.86 L1068.71 1217.86 L1068.12 1217.86 L1067.54 1217.86 L1066.95 1217.86 L1066.36 1217.86 L1065.78 1217.86 L1065.19 1217.86 L1064.6 1217.86 L1064.02 1217.86 L1063.43 1217.86 L1062.85 1217.86 L1062.26 1217.86 L1061.67 1217.86 L1061.09 1217.86 L1060.5 1217.86 L1059.91 1217.86 L1059.33 1217.86 L1058.74 1217.86 L1058.15 1217.86 L1057.57 1217.86 L1056.98 1217.86 L1056.39 1217.86 L1055.81 1217.86 L1055.22 1217.86 L1054.64 1217.86 L1054.05 1217.86 L1053.46 1217.86 L1052.88 1217.86 L1052.29 1217.86 L1051.7 1217.86 L1051.12 1217.86 L1050.53 1217.86 L1049.94 1217.86 L1049.36 1217.86 L1048.77 1217.86 L1048.19 1217.86 L1047.6 1217.86 L1047.01 1217.86 L1046.43 1217.86 L1045.84 1217.86 L1045.25 1217.86 L1044.67 1217.86 L1044.08 1217.86 L1043.49 1217.86 L1042.91 1217.86 L1042.32 1217.86 L1041.73 1217.86 L1041.15 1217.86 L1040.56 1217.86 L1039.98 1217.86 L1039.39 1217.86 L1038.8 1217.86 L1038.22 1217.86 L1037.63 1217.86 L1037.04 1217.86 L1036.46 1217.86 L1035.87 1217.86 L1035.28 1217.86 L1034.7 1217.86 L1034.11 1217.86 L1033.52 1217.86 L1032.94 1217.86 L1032.35 1217.86 L1031.77 1217.86 L1031.18 1217.86 L1030.59 1217.86 L1030.01 1217.86 L1029.42 1217.86 L1028.83 1217.86 L1028.25 1217.86 L1027.66 1217.86 L1027.07 1217.86 L1026.49 1217.86 L1025.9 1217.86 L1025.32 1217.86 L1024.73 1217.86 L1024.14 1217.86 L1023.56 1217.86 L1022.97 1217.86 L1022.38 1217.86 L1021.8 1217.86 L1021.21 1217.86 L1020.62 1217.86 L1020.04 1217.86 L1019.45 1217.86 L1018.86 1217.86 L1018.28 1217.86 L1017.69 1217.86 L1017.11 1217.86 L1016.52 1217.86 L1015.93 1217.86 L1015.35 1217.86 L1014.76 1217.86 L1014.17 1217.86 L1013.59 1217.86 L1013 1217.86 L1012.41 1217.86 L1011.83 1217.86 L1011.24 1217.86 L1010.65 1217.86 L1010.07 1217.86 L1009.48 1217.86 L1008.9 1217.86 L1008.31 1217.86 L1007.72 1217.86 L1007.14 1217.86 L1006.55 1217.86 L1005.96 1217.86 L1005.38 1217.86 L1004.79 1217.86 L1004.2 1217.86 L1003.62 1217.86 L1003.03 1217.86 L1002.44 1217.86 L1001.86 1217.86 L1001.27 1217.86 L1000.69 1217.86 L1000.1 1217.86 L999.513 1217.86 L998.926 1217.86 L998.34 1217.86 L997.754 1217.86 L997.167 1217.86 L996.581 1217.86 L995.994 1217.86 L995.408 1217.86 L994.822 1217.86 L994.235 1217.86 L993.649 1217.86 L993.062 1217.86 L992.476 1217.86 L991.889 1217.86 L991.303 1217.86 L990.717 1217.86 L990.13 1217.86 L989.544 1217.86 L988.957 1217.86 L988.371 1217.86 L987.785 1217.86 L987.198 1217.86 L986.612 1217.86 L986.025 1217.86  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip532)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1218.26 986.612,1218.26 987.198,1218.26 987.785,1218.26 988.371,1218.26 988.957,1218.26 989.544,1218.26 990.13,1218.26 990.717,1218.26 991.303,1218.26 991.889,1218.26 992.476,1218.26 993.062,1218.26 993.649,1218.26 994.235,1218.26 994.822,1218.26 995.408,1218.26 995.994,1218.26 996.581,1218.26 997.167,1218.26 997.754,1218.26 998.34,1218.26 998.926,1218.26 999.513,1218.26 1000.1,1218.26 1000.69,1218.26 1001.27,1218.26 1001.86,1218.26 1002.44,1218.26 1003.03,1218.26 1003.62,1218.26 1004.2,1218.26 1004.79,1218.26 1005.38,1218.26 1005.96,1218.26 1006.55,1218.26 1007.14,1218.26 1007.72,1218.26 1008.31,1218.26 1008.9,1218.26 1009.48,1218.26 1010.07,1218.26 1010.65,1218.26 1011.24,1218.26 1011.83,1218.26 1012.41,1218.26 1013,1218.26 1013.59,1218.26 1014.17,1218.26 1014.76,1218.26 1015.35,1218.26 1015.93,1218.26 1016.52,1218.26 1017.11,1218.26 1017.69,1218.26 1018.28,1218.26 1018.86,1218.26 1019.45,1218.26 1020.04,1218.26 1020.62,1218.26 1021.21,1218.26 1021.8,1218.26 1022.38,1218.26 1022.97,1218.26 1023.56,1218.26 1024.14,1218.26 1024.73,1218.26 1025.32,1218.26 1025.9,1218.26 1026.49,1218.26 1027.07,1218.26 1027.66,1218.26 1028.25,1218.26 1028.83,1218.26 1029.42,1218.26 1030.01,1218.26 1030.59,1218.26 1031.18,1218.26 1031.77,1218.26 1032.35,1218.26 1032.94,1218.26 1033.52,1218.26 1034.11,1218.26 1034.7,1218.26 1035.28,1218.26 1035.87,1218.26 1036.46,1218.26 1037.04,1218.26 1037.63,1218.26 1038.22,1218.26 1038.8,1218.26 1039.39,1218.26 1039.98,1218.26 1040.56,1218.26 1041.15,1218.26 1041.73,1218.26 1042.32,1218.26 1042.91,1218.26 1043.49,1218.26 1044.08,1218.26 1044.67,1218.26 1045.25,1218.26 1045.84,1218.26 1046.43,1218.26 1047.01,1218.26 1047.6,1218.26 1048.19,1218.26 1048.77,1218.26 1049.36,1218.26 1049.94,1218.26 1050.53,1218.26 1051.12,1218.26 1051.7,1218.26 1052.29,1218.26 1052.88,1218.26 1053.46,1218.26 1054.05,1218.26 1054.64,1218.26 1055.22,1218.26 1055.81,1218.26 1056.39,1218.26 1056.98,1218.26 1057.57,1218.26 1058.15,1218.26 1058.74,1218.26 1059.33,1218.26 1059.91,1218.26 1060.5,1218.26 1061.09,1218.26 1061.67,1218.26 1062.26,1218.26 1062.85,1218.26 1063.43,1218.26 1064.02,1218.26 1064.6,1218.26 1065.19,1218.26 1065.78,1218.26 1066.36,1218.26 1066.95,1218.26 1067.54,1218.26 1068.12,1218.26 1068.71,1218.26 1069.3,1218.26 1069.88,1218.26 1070.47,1218.26 1071.06,1218.26 1071.64,1218.26 1072.23,1218.26 1072.81,1218.26 1073.4,1218.26 1073.99,1218.26 1074.57,1218.26 1075.16,1218.26 1075.75,1218.26 1076.33,1218.26 1076.92,1218.26 1077.51,1218.26 1078.09,1218.26 1078.68,1218.26 1079.26,1218.26 1079.85,1218.26 1080.44,1218.26 1081.02,1218.26 1081.61,1218.26 1082.2,1218.26 1082.78,1218.26 1083.37,1218.26 1083.96,1218.26 1084.54,1218.26 1085.13,1218.26 1085.72,1218.26 1086.3,1218.26 1086.89,1218.26 1087.47,1218.26 1088.06,1218.26 1088.65,1218.26 1089.23,1218.26 1089.82,1218.26 1090.41,1218.26 1090.99,1218.26 1091.58,1218.26 1092.17,1218.26 1092.75,1218.26 1093.34,1218.26 1093.93,1218.26 1094.51,1218.26 1095.1,1218.26 1095.68,1218.26 1096.27,1218.26 1096.86,1218.26 1097.44,1218.26 1098.03,1218.26 1098.62,1218.26 1099.2,1218.26 1099.79,1218.26 1100.38,1218.26 1100.96,1218.26 1101.55,1218.26 1102.14,1218.26 1102.72,1218.26 1103.31,1218.26 1103.89,1218.26 1104.48,1218.26 1105.07,1218.26 1105.65,1218.26 1106.24,1218.26 1106.83,1218.26 1107.41,1218.26 1108,1218.26 1108.59,1218.26 1109.17,1218.26 1109.76,1218.26 1110.34,1218.26 1110.93,1218.26 1111.52,1218.26 1112.1,1218.26 1112.69,1218.26 1113.28,1218.26 1113.86,1218.26 1114.45,1218.26 1115.04,1218.26 1115.62,1218.26 1116.21,1218.26 1116.8,1218.26 1117.38,1218.26 1117.97,1218.26 1118.55,1218.26 1119.14,1218.26 1119.73,1218.26 1120.31,1218.26 1120.9,1218.26 1121.49,1218.26 1122.07,1218.26 1122.66,1218.26 1123.25,1218.26 1123.83,1218.26 1124.42,1218.26 1125.01,1218.26 1125.59,1218.26 1126.18,1218.26 1126.76,1218.26 1127.35,1218.26 1127.94,1218.26 1128.52,1218.26 1129.11,1218.26 1129.7,1218.26 1130.28,1218.26 1130.87,1218.26 1131.46,1218.26 1132.04,1218.26 1132.63,1218.26 1133.21,1218.26 1133.8,1218.26 1134.39,1218.26 1134.97,1218.26 1135.56,1218.26 1136.15,1218.26 1136.73,1218.26 1137.32,1218.26 1137.91,1218.26 1138.49,1218.26 1139.08,1218.26 1139.67,1218.26 1140.25,1218.26 1140.84,1218.26 1141.42,1218.26 1142.01,1218.26 1142.6,1218.26 1143.18,1218.26 1143.77,1218.26 1144.36,1218.26 1144.94,1218.26 1145.53,1218.26 1146.12,1218.26 1146.7,1218.26 1147.29,1218.26 1147.88,1218.26 1148.46,1218.26 1149.05,1218.26 1149.63,1218.26 1150.22,1218.26 1150.81,1218.26 1151.39,1218.26 1151.98,1218.26 1152.57,1218.26 1153.15,1218.26 1153.74,1218.26 1154.33,1218.26 1154.91,1218.26 1155.5,1218.26 1156.09,1218.26 1156.67,1218.26 1157.26,1218.26 1157.84,1218.26 1158.43,1218.26 1159.02,1218.26 1159.6,1218.26 1160.19,1218.26 1160.78,1218.26 1161.36,1218.26 1161.95,1218.26 1162.54,1218.26 1163.12,1218.26 1163.71,1218.26 1164.29,1218.26 1164.88,1218.26 1165.47,1218.26 1166.05,1218.26 1166.64,1218.26 1167.23,1218.26 1167.81,1218.26 1168.4,1218.26 1168.99,1218.26 1169.57,1218.26 1170.16,1218.26 1170.75,1218.26 1171.33,1218.26 1171.92,1218.26 1172.5,1218.26 1173.09,1218.26 1173.68,1218.26 1174.26,1218.26 1174.85,1218.26 1175.44,1218.26 1176.02,1218.26 1176.61,1218.26 1177.2,1218.26 1177.78,1218.26 1178.37,1218.26 1178.96,1218.26 1179.54,1218.26 1180.13,1218.26 1180.71,1218.26 1181.3,1218.26 1181.89,1218.26 1182.47,1218.26 1183.06,1218.26 1183.65,1218.26 1184.23,1218.26 1184.82,1218.26 1185.41,1218.26 1185.99,1218.26 1186.58,1218.26 1187.16,1218.26 1187.75,1218.26 1188.34,1218.26 1188.92,1218.26 1189.51,1218.26 1190.1,1218.26 1190.68,1218.26 1191.27,1218.26 1191.86,1218.26 1192.44,1218.26 1193.03,1218.26 1193.62,1218.26 1194.2,1218.26 1194.79,1218.26 1195.37,1218.26 1195.96,1218.26 1196.55,1218.26 1197.13,1218.26 1197.72,1218.26 1198.31,1218.26 1198.89,1218.26 1199.48,1218.26 1200.07,1218.26 1200.65,1218.26 1201.24,1218.26 1201.83,1218.26 1202.41,1218.26 1203,1218.26 1203.58,1218.26 1204.17,1218.26 1204.76,1218.26 1205.34,1218.26 1205.93,1218.26 1206.52,1218.26 1207.1,1218.26 1207.69,1218.26 1208.28,1218.26 1208.86,1218.26 1209.45,1218.26 1210.03,1218.26 1210.62,1218.26 1211.21,1218.26 1211.79,1218.26 1212.38,1218.26 1212.97,1218.26 1213.55,1218.26 1214.14,1218.26 1214.73,1218.26 1215.31,1218.26 1215.9,1218.26 1216.49,1218.26 1217.07,1218.26 1217.66,1218.26 1218.24,1218.26 1218.83,1218.26 1219.42,1218.26 1220,1218.26 1220.59,1218.26 1221.18,1218.26 1221.76,1218.26 1222.35,1218.26 1222.94,1218.26 1223.52,1218.26 1224.11,1218.26 1224.7,1218.26 1225.28,1218.26 1225.87,1218.26 1226.45,1218.26 1227.04,1218.26 1227.63,1218.26 1228.21,1218.26 1228.8,1218.26 1229.39,1218.26 1229.97,1218.26 1230.56,1218.26 1231.15,1218.26 1231.73,1218.26 1232.32,1218.26 1232.91,1218.26 1233.49,1218.26 1234.08,1218.26 1234.66,1218.26 1235.25,1218.26 1235.84,1218.26 1236.42,1218.26 1237.01,1218.26 1237.6,1218.26 1238.18,1218.26 1238.77,1218.26 1239.36,1218.26 1239.94,1218.26 1240.53,1218.26 1241.11,1218.26 1241.7,1218.26 1242.29,1218.26 1242.87,1218.26 1243.46,1218.26 1244.05,1218.26 1244.63,1218.26 1245.22,1218.26 1245.81,1218.26 1246.39,1218.26 1246.98,1218.26 1247.57,1218.26 1248.15,1218.26 1248.74,1218.26 1249.32,1218.26 1249.91,1218.26 1250.5,1218.26 1251.08,1218.26 1251.67,1218.26 1252.26,1218.26 1252.84,1218.26 1253.43,1218.26 1254.02,1218.26 1254.6,1218.26 1255.19,1218.26 1255.78,1218.26 1256.36,1218.26 1256.95,1218.26 1257.53,1218.26 1258.12,1218.26 1258.71,1218.26 1259.29,1218.26 1259.88,1218.26 1260.47,1218.26 1261.05,1218.26 1261.64,1218.26 1262.23,1218.26 1262.81,1218.26 1263.4,1218.26 1263.98,1218.26 1264.57,1218.26 1265.16,1218.26 1265.74,1218.26 1266.33,1218.26 1266.92,1218.26 1267.5,1218.26 1268.09,1218.26 1268.68,1218.26 1269.26,1218.26 1269.85,1218.26 1270.44,1218.26 1271.02,1218.26 1271.61,1218.26 1272.19,1218.26 1272.78,1218.26 1273.37,1218.26 1273.95,1218.26 1274.54,1218.26 1275.13,1218.26 1275.71,1218.26 1276.3,1218.26 1276.89,1218.26 1277.47,1218.26 1278.06,1218.26 1278.65,1218.26 1279.23,1218.26 1279.82,1218.26 1280.4,1218.26 1280.99,1218.26 1281.58,1218.26 1282.16,1218.26 1282.75,1218.26 1283.34,1218.26 1283.92,1218.26 1284.51,1218.26 1285.1,1218.26 1285.68,1218.26 1286.27,1218.26 1286.86,1218.26 1287.44,1218.26 1288.03,1218.26 1288.61,1218.26 1289.2,1218.26 1289.79,1218.26 1290.37,1218.26 1290.96,1218.26 1291.55,1218.26 1292.13,1218.26 1292.72,1218.26 1293.31,1218.26 1293.89,1218.26 1294.48,1218.26 1295.06,1218.26 1295.65,1218.26 1296.24,1218.26 1296.82,1218.26 1297.41,1218.26 1298,1218.26 1298.58,1218.26 1299.17,1218.26 1299.76,1218.26 1300.34,1218.26 1300.93,1218.26 1301.52,1218.26 1302.1,1218.26 1302.69,1218.26 1303.27,1218.26 1303.86,1218.26 1304.45,1218.26 1305.03,1218.26 1305.62,1218.26 1306.21,1218.26 1306.79,1218.26 1307.38,1218.26 1307.97,1218.26 1308.55,1218.26 1309.14,1218.26 1309.73,1218.26 1310.31,1218.26 1310.9,1218.26 1311.48,1218.26 1312.07,1218.26 1312.66,1218.26 1313.24,1218.26 1313.83,1218.26 1314.42,1218.26 1315,1218.26 1315.59,1218.26 1316.18,1218.26 1316.76,1218.26 1317.35,1218.26 1317.93,1218.26 1318.52,1218.26 1319.11,1218.26 1319.69,1218.26 1320.28,1218.26 1320.87,1218.26 1321.45,1218.26 1322.04,1218.26 1322.63,1218.26 1323.21,1218.26 1323.8,1218.26 1324.39,1218.26 1324.97,1218.26 1325.56,1218.26 1326.14,1218.26 1326.73,1218.26 1327.32,1218.26 1327.9,1218.26 1328.49,1218.26 1329.08,1218.26 1329.66,1218.26 1330.25,1218.26 1330.84,1218.26 1331.42,1218.26 1332.01,1218.26 1332.6,1218.26 1333.18,1218.26 1333.77,1218.26 1334.35,1218.26 1334.94,1218.26 1335.53,1218.26 1336.11,1218.26 1336.7,1218.26 1337.29,1218.26 1337.87,1218.26 1338.46,1218.26 1339.05,1218.26 1339.63,1218.26 1340.22,1218.26 1340.8,1218.26 1341.39,1218.26 1341.98,1218.26 1342.56,1218.26 1343.15,1218.26 1343.74,1218.26 1344.32,1218.26 1344.91,1218.26 1345.5,1218.26 1346.08,1218.26 1346.67,1218.26 1347.26,1218.26 1347.84,1218.26 1348.43,1218.26 1349.01,1218.26 1349.6,1218.26 1350.19,1218.26 1350.77,1218.26 1351.36,1218.26 1351.95,1218.26 1352.53,1218.26 1353.12,1218.26 1353.71,1218.26 1354.29,1218.26 1354.88,1218.26 1355.47,1218.26 1356.05,1218.26 1356.64,1218.26 1357.22,1218.26 1357.81,1218.26 1358.4,1218.26 1358.98,1218.26 1359.57,1218.26 1360.16,1218.26 1360.74,1218.26 1361.33,1218.26 1361.92,1218.26 1362.5,1218.26 1363.09,1218.26 1363.68,1218.26 1364.26,1218.26 1364.85,1218.26 1365.43,1218.26 1366.02,1218.26 1366.61,1218.26 1367.19,1218.26 1367.78,1218.26 1368.37,1218.26 1368.95,1218.26 1369.54,1218.26 1370.13,1218.26 1370.71,1218.26 1371.3,1218.26 1371.88,1218.26 1372.47,1218.26 1373.06,1218.26 1373.64,1218.26 1374.23,1218.26 1374.82,1218.26 1375.4,1218.26 1375.99,1218.26 1376.58,1218.26 1377.16,1218.26 1377.75,1218.26 1378.34,1218.26 1378.92,1218.26 1379.51,1218.26 1380.09,1218.26 1380.68,1218.26 1381.27,1218.26 1381.85,1218.26 1382.44,1218.26 1383.03,1218.26 1383.61,1218.26 1384.2,1218.26 1384.79,1218.26 1385.37,1218.26 1385.96,1218.26 1386.55,1218.26 1387.13,1218.26 1387.72,1218.26 1388.3,1218.26 1388.89,1218.26 1389.48,1218.26 1390.06,1218.26 1390.65,1218.26 1391.24,1218.26 1391.82,1218.26 1392.41,1218.26 1393,1218.26 1393.58,1218.26 1394.17,1218.26 1394.75,1218.26 1395.34,1218.26 1395.93,1218.26 1396.51,1218.26 1397.1,1218.26 1397.69,1218.26 1398.27,1218.26 1398.86,1218.26 1399.45,1218.26 1400.03,1218.26 1400.62,1218.26 1401.21,1218.26 1401.79,1218.26 1402.38,1218.26 1402.96,1218.26 1403.55,1218.26 1404.14,1218.26 1404.72,1218.26 1405.31,1218.26 1405.9,1218.26 1406.48,1218.26 1407.07,1218.26 1407.66,1218.26 1408.24,1218.26 1408.83,1218.26 1409.42,1218.26 1410,1218.26 1410.59,1218.26 1411.17,1218.26 1411.76,1218.26 1412.35,1218.26 1412.93,1218.26 1413.52,1218.26 1414.11,1218.26 1414.69,1218.26 1415.28,1218.26 1415.87,1218.26 1416.45,1218.26 1417.04,1218.26 1417.63,1218.26 1418.21,1218.26 1418.8,1218.26 1419.38,1218.26 1419.97,1218.26 1420.56,1218.26 1421.14,1218.26 1421.73,1218.26 1422.32,1218.26 1422.9,1218.26 1423.49,1218.26 1424.08,1218.26 1424.66,1218.26 1425.25,1218.26 1425.83,1218.26 1426.42,1218.26 1427.01,1218.26 1427.59,1218.26 1428.18,1218.26 1428.77,1218.26 1429.35,1218.26 1429.94,1218.26 1430.53,1218.26 1431.11,1218.26 1431.7,1218.26 1432.29,1218.26 1432.87,1218.26 1433.46,1218.26 1434.04,1218.26 1434.63,1218.26 1435.22,1218.26 1435.8,1218.26 1436.39,1218.26 1436.98,1218.26 1437.56,1218.26 1438.15,1218.26 1438.74,1218.26 1439.32,1218.26 1439.91,1218.26 1440.5,1218.26 1441.08,1218.26 1441.67,1218.26 1442.25,1218.26 1442.84,1218.26 1443.43,1218.26 1444.01,1218.26 1444.6,1218.26 1445.19,1218.26 1445.77,1218.26 1446.36,1218.26 1446.95,1218.26 1447.53,1218.26 1448.12,1218.26 1448.7,1218.26 1449.29,1218.26 1449.88,1218.26 1450.46,1218.26 1451.05,1218.26 1451.64,1218.26 1452.22,1218.26 1452.81,1218.26 1453.4,1218.26 1453.98,1218.26 1454.57,1218.26 1455.16,1218.26 1455.74,1218.26 1456.33,1218.26 1456.91,1218.26 1457.5,1218.26 1458.09,1218.26 1458.67,1218.26 1459.26,1218.26 1459.85,1218.26 1460.43,1218.26 1461.02,1218.26 1461.61,1218.26 1462.19,1218.26 1462.78,1218.26 1463.37,1218.26 1463.95,1218.26 1464.54,1218.26 1465.12,1218.26 1465.71,1218.26 1466.3,1218.26 1466.88,1218.26 1467.47,1218.26 1468.06,1218.26 1468.64,1218.26 1469.23,1218.26 1469.82,1218.26 1470.4,1218.26 1470.99,1218.26 1471.57,1218.26 1472.16,1218.26 1472.75,1218.26 1473.33,1218.26 1473.92,1218.26 1474.51,1218.26 1475.09,1218.26 1475.68,1218.26 1476.27,1218.26 1476.85,1218.26 1477.44,1218.26 1478.03,1218.26 1478.61,1218.26 1479.2,1218.26 1479.78,1218.26 1480.37,1218.26 1480.96,1218.26 1481.54,1218.26 1482.13,1218.26 1482.72,1218.26 1483.3,1218.26 1483.89,1218.26 1484.48,1218.26 1485.06,1218.26 1485.65,1218.26 1486.24,1218.26 1486.82,1218.26 1487.41,1218.26 1487.99,1218.26 1488.58,1218.26 1489.17,1218.26 1489.75,1218.26 1490.34,1218.26 1490.93,1218.26 1491.51,1218.26 1492.1,1218.26 1492.69,1218.26 1493.27,1218.26 1493.86,1218.26 1494.45,1218.26 1495.03,1218.26 1495.62,1218.26 1496.2,1218.26 1496.79,1218.26 1497.38,1218.26 1497.96,1218.26 1498.55,1218.26 1499.14,1218.26 1499.72,1218.26 1500.31,1218.26 1500.9,1218.26 1501.48,1218.26 1502.07,1218.26 1502.65,1218.26 1503.24,1218.26 1503.83,1218.26 1504.41,1218.26 1505,1218.26 1505.59,1218.26 1506.17,1218.26 1506.76,1218.26 1507.35,1218.26 1507.93,1218.26 1508.52,1218.26 1509.11,1218.26 1509.69,1218.26 1510.28,1218.26 1510.86,1218.26 1511.45,1218.26 1512.04,1218.26 1512.62,1218.26 1513.21,1218.26 1513.8,1218.26 1514.38,1218.26 1514.97,1218.26 1515.56,1218.26 1516.14,1218.26 1516.73,1218.26 1517.32,1218.26 1517.9,1218.26 1518.49,1218.26 1519.07,1218.26 1519.66,1218.26 1520.25,1218.26 1520.83,1218.26 1521.42,1218.26 1522.01,1218.26 1522.59,1218.26 1523.18,1218.26 1523.77,1218.26 1524.35,1218.26 1524.94,1218.26 1525.52,1218.26 1526.11,1218.26 1526.7,1218.26 1527.28,1218.26 1527.87,1218.26 1528.46,1218.26 1529.04,1218.26 1529.63,1218.26 1530.22,1218.26 1530.8,1218.26 1531.39,1218.26 1531.98,1218.26 1532.56,1218.26 1533.15,1218.26 1533.73,1218.26 1534.32,1218.26 1534.91,1218.26 1535.49,1218.26 1536.08,1218.26 1536.67,1218.26 1537.25,1218.26 1537.84,1218.26 1538.43,1218.26 1539.01,1218.26 1539.6,1218.26 1540.19,1218.26 1540.77,1218.26 1541.36,1218.26 1541.94,1218.26 1542.53,1218.26 1543.12,1218.26 1543.7,1218.26 1544.29,1218.26 1544.88,1218.26 1545.46,1218.26 1546.05,1218.26 1546.64,1218.26 1547.22,1218.26 1547.81,1218.26 1548.4,1218.26 1548.98,1218.26 1549.57,1218.26 1550.15,1218.26 1550.74,1218.26 1551.33,1218.26 1551.91,1218.26 1552.5,1218.26 1553.09,1218.26 1553.67,1218.26 1554.26,1218.26 1554.85,1218.26 1555.43,1218.26 1556.02,1218.26 1556.6,1218.26 1557.19,1218.26 1557.78,1218.26 1558.36,1218.26 1558.95,1218.26 1559.54,1218.26 1560.12,1218.26 1560.71,1218.26 1561.3,1218.26 1561.88,1218.26 1562.47,1218.26 1563.06,1218.26 1563.64,1218.26 1564.23,1218.26 1564.81,1218.26 1565.4,1218.26 1565.99,1218.26 1566.57,1218.26 1567.16,1218.26 1567.75,1218.26 1568.33,1218.26 1568.92,1218.26 1569.51,1218.26 1570.09,1218.26 1570.68,1218.26 1571.27,1218.26 1571.85,1218.26 1572.44,1218.26 1573.02,1218.26 1573.61,1218.26 1574.2,1218.26 1574.78,1218.26 1575.37,1218.26 1575.96,1218.26 1576.54,1218.26 1577.13,1218.26 1577.72,1218.26 1578.3,1218.26 1578.89,1218.26 1579.47,1218.26 1580.06,1218.26 1580.65,1218.26 1581.23,1218.26 1581.82,1218.26 1582.41,1218.26 1582.99,1218.26 1583.58,1218.26 1584.17,1218.26 1584.75,1218.26 1585.34,1218.26 1585.93,1218.26 1586.51,1218.26 1587.1,1218.26 1587.68,1218.26 1588.27,1218.26 1588.86,1218.26 1589.44,1218.26 1590.03,1218.26 1590.62,1218.26 1591.2,1218.26 1591.79,1218.26 1592.38,1218.26 1592.96,1218.26 1593.55,1218.26 1594.14,1218.26 1594.72,1218.26 1595.31,1218.26 1595.89,1218.26 1596.48,1218.26 1597.07,1218.26 1597.65,1218.26 1598.24,1218.26 1598.83,1218.26 1599.41,1218.26 1600,1218.26 1600.59,1218.26 1601.17,1218.26 1601.76,1218.26 1602.34,1218.26 1602.93,1218.26 1603.52,1218.26 1604.1,1218.26 1604.69,1218.26 1605.28,1218.26 1605.86,1218.26 1606.45,1218.26 1607.04,1218.26 1607.62,1218.26 1608.21,1218.26 1608.8,1218.26 1609.38,1218.26 1609.97,1218.26 1610.55,1218.26 1611.14,1218.26 1611.73,1218.26 1612.31,1218.26 1612.9,1218.26 1613.49,1218.26 1614.07,1218.26 1614.66,1218.26 1615.25,1218.26 1615.83,1218.26 1616.42,1218.26 1617.01,1218.26 1617.59,1218.26 1618.18,1218.26 1618.76,1218.26 1619.35,1218.26 1619.94,1218.26 1620.52,1218.26 1621.11,1218.26 1621.7,1218.26 1622.28,1218.26 1622.87,1218.26 1623.46,1218.26 1624.04,1218.26 1624.63,1218.26 1625.22,1218.26 1625.8,1218.26 1626.39,1218.26 1626.97,1218.26 1627.56,1218.26 1628.15,1218.26 1628.73,1218.26 1629.32,1218.26 1629.91,1218.26 1630.49,1218.26 1631.08,1218.26 1631.67,1218.26 1632.25,1218.26 1632.84,1218.26 1633.42,1218.26 1634.01,1218.26 1634.6,1218.26 1635.18,1218.26 1635.77,1218.26 1636.36,1218.26 1636.94,1218.26 1637.53,1218.26 1638.12,1218.26 1638.7,1218.26 1639.29,1218.26 1639.88,1218.26 1640.46,1218.26 1641.05,1218.26 1641.63,1218.26 1642.22,1218.26 1642.81,1218.26 1643.39,1218.26 1643.98,1218.26 1644.57,1218.26 1645.15,1218.26 1645.74,1218.26 1646.33,1218.26 1646.91,1218.26 1647.5,1218.26 1648.09,1218.26 1648.67,1218.26 1649.26,1218.26 1649.84,1218.26 1650.43,1218.26 1651.02,1218.26 1651.6,1218.26 1652.19,1218.26 1652.78,1218.26 1653.36,1218.26 1653.95,1218.26 1654.54,1218.26 1655.12,1218.26 1655.71,1218.26 1656.29,1218.26 1656.88,1218.26 1657.47,1218.26 1658.05,1218.26 1658.64,1218.26 1659.23,1218.26 1659.81,1218.26 1660.4,1218.26 1660.99,1218.26 1661.57,1218.26 1662.16,1218.26 1662.75,1218.26 1663.33,1218.26 1663.92,1218.26 1664.5,1218.26 1665.09,1218.26 1665.68,1218.26 1666.26,1218.26 1666.85,1218.26 1667.44,1218.26 1668.02,1218.26 1668.61,1218.26 1669.2,1218.26 1669.78,1218.26 1670.37,1218.26 1670.96,1218.26 1671.54,1218.26 1672.13,1218.26 1672.71,1218.26 1673.3,1218.26 1673.89,1218.26 1674.47,1218.26 1675.06,1218.26 1675.65,1218.26 1676.23,1218.26 1676.82,1218.26 1677.41,1218.26 1677.99,1218.26 1678.58,1218.26 1679.17,1218.26 1679.75,1218.26 1680.34,1218.26 1680.92,1218.26 1681.51,1218.26 1682.1,1218.26 1682.68,1218.26 1683.27,1218.26 1683.86,1218.26 1684.44,1218.26 1685.03,1218.26 1685.62,1218.26 1686.2,1218.26 1686.79,1218.26 1687.37,1218.26 1687.96,1218.26 1688.55,1218.26 1689.13,1218.26 1689.72,1218.26 1690.31,1218.26 1690.89,1218.26 1691.48,1218.26 1692.07,1218.26 1692.65,1218.26 1693.24,1218.26 1693.83,1218.26 1694.41,1218.26 1695,1218.26 1695.58,1218.26 1696.17,1218.26 1696.76,1218.26 1697.34,1218.26 1697.93,1218.26 1698.52,1218.26 1699.1,1218.26 1699.69,1218.26 1700.28,1218.26 1700.86,1218.26 1701.45,1218.26 1702.04,1218.26 1702.62,1218.26 1703.21,1218.26 1703.79,1218.26 1704.38,1218.26 1704.97,1218.26 1705.55,1218.26 1706.14,1218.26 1706.73,1218.26 1707.31,1218.26 1707.9,1218.26 1708.49,1218.26 1709.07,1218.26 1709.66,1218.26 1710.24,1218.26 1710.83,1218.26 1711.42,1218.26 1712,1218.26 1712.59,1218.26 1713.18,1218.26 1713.76,1218.26 1714.35,1218.26 1714.94,1218.26 1715.52,1218.26 1716.11,1218.26 1716.7,1218.26 1717.28,1218.26 1717.87,1218.26 1718.45,1218.26 1719.04,1218.26 1719.63,1218.26 1720.21,1218.26 1720.8,1218.26 1721.39,1218.26 1721.97,1218.26 1722.56,1218.26 1723.15,1218.26 1723.73,1218.26 1724.32,1218.26 1724.91,1218.26 1725.49,1218.26 1726.08,1218.26 1726.66,1218.26 1727.25,1218.26 1727.84,1218.26 1728.42,1218.26 1729.01,1218.26 1729.6,1218.26 1730.18,1218.26 1730.77,1218.26 1731.36,1218.26 1731.94,1218.26 1732.53,1218.26 1733.11,1218.26 1733.7,1218.26 1734.29,1218.26 1734.87,1218.26 1735.46,1218.26 1736.05,1218.26 1736.63,1218.26 1737.22,1218.26 1737.81,1218.26 1738.39,1218.26 1738.98,1218.26 1739.57,1218.26 1740.15,1218.26 1740.74,1218.26 1741.32,1218.26 1741.91,1218.26 1742.5,1218.26 1743.08,1218.26 1743.67,1218.26 1744.26,1218.26 1744.84,1218.26 1745.43,1218.26 1746.02,1218.26 1746.6,1218.26 1747.19,1218.26 1747.78,1218.26 1748.36,1218.26 1748.95,1218.26 1749.53,1218.26 1750.12,1218.26 1750.71,1218.26 1751.29,1218.26 1751.88,1218.26 1752.47,1218.26 1753.05,1218.26 1753.64,1218.26 1754.23,1218.26 1754.81,1218.26 1755.4,1218.26 1755.99,1218.26 1756.57,1218.26 1757.16,1218.26 1757.74,1218.26 1758.33,1218.26 1758.92,1218.26 1759.5,1218.26 1760.09,1218.26 1760.68,1218.26 1761.26,1218.26 1761.85,1218.26 1762.44,1218.26 1763.02,1218.26 1763.61,1218.26 1764.19,1218.26 1764.78,1218.26 1765.37,1218.26 1765.95,1218.26 1766.54,1218.26 1767.13,1218.26 1767.71,1218.26 1768.3,1218.26 1768.89,1218.26 1769.47,1218.26 1770.06,1218.26 1770.65,1218.26 1771.23,1218.26 1771.82,1218.26 1772.4,1218.26 1772.99,1218.26 1773.58,1218.26 1774.16,1218.26 1774.75,1218.26 1775.34,1218.26 1775.92,1218.26 1776.51,1218.26 1777.1,1218.26 1777.68,1218.26 1778.27,1218.26 1778.86,1218.26 1779.44,1218.26 1780.03,1218.26 1780.61,1218.26 1781.2,1218.26 1781.79,1218.26 1782.37,1218.26 1782.96,1218.26 1783.55,1218.26 1784.13,1218.26 1784.72,1218.26 1785.31,1218.26 1785.89,1218.26 1786.48,1218.26 1787.06,1218.26 1787.65,1218.26 1788.24,1218.26 1788.82,1218.26 1789.41,1218.26 1790,1218.26 1790.58,1218.26 1791.17,1218.26 1791.76,1218.26 1792.34,1218.26 1792.93,1218.26 1793.52,1218.26 1794.1,1218.26 1794.69,1218.26 1795.27,1218.26 1795.86,1218.26 1796.45,1218.26 1797.03,1218.26 1797.62,1218.26 1798.21,1218.26 1798.79,1218.26 1799.38,1218.26 1799.97,1218.26 1800.55,1218.26 1801.14,1218.26 1801.73,1218.26 1802.31,1218.26 1802.9,1218.26 1803.48,1218.26 1804.07,1218.26 1804.66,1218.26 1805.24,1218.26 1805.83,1218.26 1806.42,1218.26 1807,1218.26 1807.59,1218.26 1808.18,1218.26 1808.76,1218.26 1809.35,1218.26 1809.94,1218.26 1810.52,1218.26 1811.11,1218.26 1811.69,1218.26 1812.28,1218.26 1812.87,1218.26 1813.45,1218.26 1814.04,1218.26 1814.63,1218.26 1815.21,1218.26 1815.8,1218.26 1816.39,1218.26 1816.97,1218.26 1817.56,1218.26 1818.14,1218.26 1818.73,1218.26 1819.32,1218.26 1819.9,1218.26 1820.49,1218.26 1821.08,1218.26 1821.66,1218.26 1822.25,1218.26 1822.84,1218.26 1823.42,1218.26 1824.01,1218.26 1824.6,1218.26 1825.18,1218.26 1825.77,1218.26 1826.35,1218.26 1826.94,1218.26 1827.53,1218.26 1828.11,1218.26 1828.7,1218.26 1829.29,1218.26 1829.87,1218.26 1830.46,1218.26 1831.05,1218.26 1831.63,1218.26 1832.22,1218.26 1832.81,1218.26 1833.39,1218.26 1833.98,1218.26 1834.56,1218.26 1835.15,1218.26 1835.74,1218.26 1836.32,1218.26 1836.91,1218.26 1837.5,1218.26 1838.08,1218.26 1838.67,1218.26 1839.26,1218.26 1839.84,1218.26 1840.43,1218.26 1841.01,1218.26 1841.6,1218.26 1842.19,1218.26 1842.77,1218.26 1843.36,1218.26 1843.95,1218.26 1844.53,1218.26 1845.12,1218.26 1845.71,1218.26 1846.29,1218.26 1846.88,1218.26 1847.47,1218.26 1848.05,1218.26 1848.64,1218.26 1849.22,1218.26 1849.81,1218.26 1850.4,1218.26 1850.98,1218.26 1851.57,1218.26 1852.16,1218.26 1852.74,1218.26 1853.33,1218.26 1853.92,1218.26 1854.5,1218.26 1855.09,1218.26 1855.68,1218.26 1856.26,1218.26 1856.85,1218.26 1857.43,1218.26 1858.02,1218.26 1858.61,1218.26 1859.19,1218.26 1859.78,1218.26 1860.37,1218.26 1860.95,1218.26 1861.54,1218.26 1862.13,1218.26 1862.71,1218.26 1863.3,1218.26 1863.88,1218.26 1864.47,1218.26 1865.06,1218.26 1865.64,1218.26 1866.23,1218.26 1866.82,1218.26 1867.4,1218.26 1867.99,1218.26 1868.58,1218.26 1869.16,1218.26 1869.75,1218.26 1870.34,1218.26 1870.92,1218.26 1871.51,1218.26 1872.09,1218.26 1872.68,1218.26 1873.27,1218.26 1873.85,1218.26 1874.44,1218.26 1875.03,1218.26 1875.61,1218.26 1876.2,1218.26 1876.79,1218.26 1877.37,1218.26 1877.96,1218.26 1878.55,1218.26 1879.13,1218.26 1879.72,1218.26 1880.3,1218.26 1880.89,1218.26 1881.48,1218.26 1882.06,1218.26 1882.65,1218.26 1883.24,1218.26 1883.82,1218.26 1884.41,1218.26 1885,1218.26 1885.58,1218.26 1886.17,1218.26 1886.76,1218.26 1887.34,1218.26 1887.93,1218.26 1888.51,1218.26 1889.1,1218.26 1889.69,1218.26 1890.27,1218.26 1890.86,1218.26 1891.45,1218.26 1892.03,1218.26 1892.62,1218.26 1893.21,1218.26 1893.79,1218.26 1894.38,1218.26 1894.96,1218.26 1895.55,1218.26 1896.14,1218.26 1896.72,1218.26 1897.31,1218.26 1897.9,1218.26 1898.48,1218.26 1899.07,1218.26 1899.66,1218.26 1900.24,1218.26 1900.83,1218.26 1901.42,1218.26 1902,1218.26 1902.59,1218.26 1903.17,1218.26 1903.76,1218.26 1904.35,1218.26 1904.93,1218.26 1905.52,1218.26 1906.11,1218.26 1906.69,1218.26 1907.28,1218.26 1907.87,1218.26 1908.45,1218.26 1909.04,1218.26 1909.63,1218.26 1910.21,1218.26 1910.8,1218.26 1911.38,1218.26 1911.97,1218.26 1912.56,1218.26 1913.14,1218.26 1913.73,1218.26 1914.32,1218.26 1914.9,1218.26 1915.49,1218.26 1916.08,1218.26 1916.66,1218.26 1917.25,1218.26 1917.83,1218.26 1918.42,1218.26 1919.01,1218.26 1919.59,1218.26 1920.18,1218.26 1920.77,1218.26 1921.35,1218.26 1921.94,1218.26 1922.53,1218.26 1923.11,1218.26 1923.7,1218.26 1924.29,1218.26 1924.87,1218.26 1925.46,1218.26 1926.04,1218.26 1926.63,1218.26 1927.22,1218.26 1927.8,1218.26 1928.39,1218.26 1928.98,1218.26 1929.56,1218.26 1930.15,1218.26 1930.74,1218.26 1931.32,1218.26 1931.91,1218.26 1932.5,1218.26 1933.08,1218.26 1933.67,1218.26 1934.25,1218.26 1934.84,1218.26 1935.43,1218.26 1936.01,1218.26 1936.6,1218.26 1937.19,1218.26 1937.77,1218.26 1938.36,1218.26 1938.95,1218.26 1939.53,1218.26 1940.12,1218.26 1940.71,1218.26 1941.29,1218.26 1941.88,1218.26 1942.46,1218.26 1943.05,1218.26 1943.64,1218.26 1944.22,1218.26 1944.81,1218.26 1945.4,1218.26 1945.98,1218.26 1946.57,1218.26 1947.16,1218.26 1947.74,1218.26 1948.33,1218.26 1948.91,1218.26 1949.5,1218.26 1950.09,1218.26 1950.67,1218.26 1951.26,1218.26 1951.85,1218.26 1952.43,1218.26 1953.02,1218.26 1953.61,1218.26 1954.19,1218.26 1954.78,1218.26 1955.37,1218.26 1955.95,1218.26 1956.54,1218.26 1957.12,1218.26 1957.71,1218.26 1958.3,1218.26 1958.88,1218.26 1959.47,1218.26 1960.06,1218.26 1960.64,1218.26 1961.23,1218.26 1961.82,1218.26 1962.4,1218.26 1962.99,1218.26 1963.58,1218.26 1964.16,1218.26 1964.75,1218.26 1965.33,1218.26 1965.92,1218.26 1966.51,1218.26 1967.09,1218.26 1967.68,1218.26 1968.27,1218.26 1968.85,1218.26 1969.44,1218.26 1970.03,1218.26 1970.61,1218.26 1971.2,1218.26 1971.78,1218.26 1972.37,1218.26 1972.96,1218.26 1973.54,1218.26 1974.13,1218.26 1974.72,1218.26 1975.3,1218.26 1975.89,1218.26 1976.48,1218.26 1977.06,1218.26 1977.65,1218.26 1978.24,1218.26 1978.82,1218.26 1979.41,1218.26 1979.99,1218.26 1980.58,1218.26 1981.17,1218.26 1981.75,1218.26 1982.34,1218.26 1982.93,1218.26 1983.51,1218.26 1984.1,1218.26 1984.69,1218.26 1985.27,1218.26 1985.86,1218.26 1986.45,1218.26 1987.03,1218.26 1987.62,1218.26 1988.2,1218.26 1988.79,1218.26 1989.38,1218.26 1989.96,1218.26 1990.55,1218.26 1991.14,1218.26 1991.72,1218.26 1992.31,1218.26 1992.9,1218.26 1993.48,1218.26 1994.07,1218.26 1994.65,1218.26 1995.24,1218.26 1995.83,1218.26 1996.41,1218.26 1997,1218.26 1997.59,1218.26 1998.17,1218.26 1998.76,1218.26 1999.35,1218.26 1999.93,1218.26 2000.52,1218.26 2001.11,1218.26 2001.69,1218.26 2002.28,1218.26 2002.86,1218.26 2003.45,1218.26 2004.04,1218.26 2004.62,1218.26 2005.21,1218.26 2005.8,1218.26 2006.38,1218.26 2006.97,1218.26 2007.56,1218.26 2008.14,1218.26 2008.73,1218.26 2009.32,1218.26 2009.9,1218.26 2010.49,1218.26 2011.07,1218.26 2011.66,1218.26 2012.25,1218.26 2012.83,1218.26 2013.42,1218.26 2014.01,1218.26 2014.59,1218.26 2015.18,1218.26 2015.77,1218.26 2016.35,1218.26 2016.94,1218.26 2017.53,1218.26 2018.11,1218.26 2018.7,1218.26 2019.28,1218.26 2019.87,1218.26 2020.46,1218.26 2021.04,1218.26 2021.63,1218.26 2022.22,1218.26 2022.8,1218.26 2023.39,1218.26 2023.98,1218.26 2024.56,1218.26 2025.15,1218.26 2025.73,1218.26 2026.32,1218.26 2026.91,1218.26 2027.49,1218.26 2028.08,1218.26 2028.67,1218.26 2029.25,1218.26 2029.84,1218.26 2030.43,1218.26 2031.01,1218.26 2031.6,1218.26 2032.19,1218.26 2032.77,1218.26 2033.36,1218.26 2033.94,1218.26 2034.53,1218.26 2035.12,1218.26 2035.7,1218.26 2036.29,1218.26 2036.88,1218.26 2037.46,1218.26 2038.05,1218.26 2038.64,1218.26 2039.22,1218.26 2039.81,1218.26 2040.4,1218.26 2040.98,1218.26 2041.57,1218.26 2042.15,1218.26 2042.74,1218.26 2043.33,1218.26 2043.91,1218.26 2044.5,1218.26 2045.09,1218.26 2045.67,1218.26 2046.26,1218.26 2046.85,1218.26 2047.43,1218.26 2048.02,1218.26 2048.6,1218.26 2049.19,1218.26 2049.78,1218.26 2050.36,1218.26 2050.95,1218.26 2051.54,1218.26 2052.12,1218.26 2052.71,1218.26 2053.3,1218.26 2053.88,1218.26 2054.47,1218.26 2055.06,1218.26 2055.64,1218.26 2056.23,1218.26 2056.81,1218.26 2057.4,1218.26 2057.99,1218.26 2058.57,1218.26 2059.16,1218.26 2059.75,1218.26 2060.33,1218.26 2060.92,1218.26 2061.51,1218.26 2062.09,1218.26 2062.68,1218.26 2063.27,1218.26 2063.85,1218.26 2064.44,1218.26 2065.02,1218.26 2065.61,1218.26 2066.2,1218.26 2066.78,1218.26 2067.37,1218.26 2067.96,1218.26 2068.54,1218.26 2069.13,1218.26 2069.72,1218.26 2070.3,1218.26 2070.89,1218.26 2071.48,1218.26 2072.06,1218.26 2072.65,1218.26 2073.23,1218.26 2073.82,1218.26 2074.41,1218.26 2074.99,1218.26 2075.58,1218.26 2076.17,1218.26 2076.75,1218.26 2077.34,1218.26 2077.93,1218.26 2078.51,1218.26 2079.1,1218.26 2079.68,1218.26 2080.27,1218.26 2080.86,1218.26 2081.44,1218.26 2082.03,1218.26 2082.62,1218.26 2083.2,1218.26 2083.79,1218.26 2084.38,1218.26 2084.96,1218.26 2085.55,1218.26 2086.14,1218.26 2086.72,1218.26 2087.31,1218.26 2087.89,1218.26 2088.48,1218.26 2089.07,1218.26 2089.65,1218.26 2090.24,1218.26 2090.83,1218.26 2091.41,1218.26 2092,1218.26 2092.59,1218.26 2093.17,1218.26 2093.76,1218.26 2094.35,1218.26 2094.93,1218.26 2095.52,1218.26 2096.1,1218.26 2096.69,1218.26 2097.28,1218.26 2097.86,1218.26 2098.45,1218.26 2099.04,1218.26 2099.62,1218.26 2100.21,1218.26 2100.8,1218.26 2101.38,1218.26 2101.97,1218.26 2102.55,1218.26 2103.14,1218.26 2103.73,1218.26 2104.31,1218.26 2104.9,1218.26 2105.49,1218.26 2106.07,1218.26 2106.66,1218.26 2107.25,1218.26 2107.83,1218.26 2108.42,1218.26 2109.01,1218.26 2109.59,1218.26 2110.18,1218.26 2110.76,1218.26 2111.35,1218.26 2111.94,1218.26 2112.52,1218.26 2113.11,1218.26 2113.7,1218.26 2114.28,1218.26 2114.87,1218.26 2115.46,1218.26 2116.04,1218.26 2116.63,1218.26 2117.22,1218.26 2117.8,1218.26 2118.39,1218.26 2118.97,1218.26 2119.56,1218.26 2120.15,1218.26 2120.73,1218.26 2121.32,1218.26 2121.91,1218.26 2122.49,1218.26 2123.08,1218.26 2123.67,1218.26 2124.25,1218.26 2124.84,1218.26 2125.42,1218.26 2126.01,1218.26 2126.6,1218.26 2127.18,1218.26 2127.77,1218.26 2128.36,1218.26 2128.94,1218.26 2129.53,1218.26 2130.12,1218.26 2130.7,1218.26 2131.29,1218.26 2131.88,1218.26 2132.46,1218.26 2133.05,1218.26 2133.63,1218.26 2134.22,1218.26 2134.81,1218.26 2135.39,1218.26 2135.98,1218.26 2136.57,1218.26 2137.15,1218.26 2137.74,1218.26 2138.33,1218.26 2138.91,1218.26 2139.5,1218.26 2140.09,1218.26 2140.67,1218.26 2141.26,1218.26 2141.84,1218.26 2142.43,1218.26 2143.02,1218.26 2143.6,1218.26 2144.19,1218.26 2144.78,1218.26 2145.36,1218.26 2145.95,1218.26 2146.54,1218.26 2147.12,1218.26 2147.71,1218.26 2148.3,1218.26 2148.88,1218.26 2149.47,1218.26 2150.05,1218.26 2150.64,1218.26 2151.23,1218.26 2151.81,1218.26 2152.4,1218.26 2152.99,1218.26 2153.57,1218.26 2154.16,1218.26 2154.75,1218.26 2155.33,1218.26 2155.92,1218.26 2156.5,1218.26 2157.09,1218.26 2157.68,1218.26 2158.26,1218.26 \"/>\n<path clip-path=\"url(#clip532)\" d=\"M986.025 1218.17 L986.612 1218.17 L987.198 1218.17 L987.785 1218.17 L988.371 1218.17 L988.957 1218.17 L989.544 1218.17 L990.13 1218.17 L990.717 1218.17 L991.303 1218.17 L991.889 1218.17 L992.476 1218.17 L993.062 1218.17 L993.649 1218.17 L994.235 1218.17 L994.822 1218.17 L995.408 1218.17 L995.994 1218.17 L996.581 1218.17 L997.167 1218.17 L997.754 1218.17 L998.34 1218.17 L998.926 1218.17 L999.513 1218.17 L1000.1 1218.17 L1000.69 1218.17 L1001.27 1218.17 L1001.86 1218.17 L1002.44 1218.17 L1003.03 1218.17 L1003.62 1218.17 L1004.2 1218.17 L1004.79 1218.17 L1005.38 1218.17 L1005.96 1218.17 L1006.55 1218.17 L1007.14 1218.17 L1007.72 1218.17 L1008.31 1218.17 L1008.9 1218.17 L1009.48 1218.17 L1010.07 1218.17 L1010.65 1218.17 L1011.24 1218.17 L1011.83 1218.17 L1012.41 1218.17 L1013 1218.17 L1013.59 1218.17 L1014.17 1218.17 L1014.76 1218.17 L1015.35 1218.17 L1015.93 1218.17 L1016.52 1218.17 L1017.11 1218.17 L1017.69 1218.17 L1018.28 1218.17 L1018.86 1218.17 L1019.45 1218.17 L1020.04 1218.17 L1020.62 1218.17 L1021.21 1218.17 L1021.8 1218.17 L1022.38 1218.17 L1022.97 1218.17 L1023.56 1218.17 L1024.14 1218.17 L1024.73 1218.17 L1025.32 1218.17 L1025.9 1218.17 L1026.49 1218.17 L1027.07 1218.17 L1027.66 1218.17 L1028.25 1218.17 L1028.83 1218.17 L1029.42 1218.17 L1030.01 1218.17 L1030.59 1218.17 L1031.18 1218.17 L1031.77 1218.17 L1032.35 1218.17 L1032.94 1218.17 L1033.52 1218.17 L1034.11 1218.17 L1034.7 1218.17 L1035.28 1218.17 L1035.87 1218.17 L1036.46 1218.17 L1037.04 1218.17 L1037.63 1218.17 L1038.22 1218.17 L1038.8 1218.17 L1039.39 1218.17 L1039.98 1218.17 L1040.56 1218.17 L1041.15 1218.17 L1041.73 1218.17 L1042.32 1218.17 L1042.91 1218.17 L1043.49 1218.17 L1044.08 1218.17 L1044.67 1218.17 L1045.25 1218.17 L1045.84 1218.17 L1046.43 1218.17 L1047.01 1218.17 L1047.6 1218.17 L1048.19 1218.17 L1048.77 1218.17 L1049.36 1218.17 L1049.94 1218.17 L1050.53 1218.17 L1051.12 1218.17 L1051.7 1218.17 L1052.29 1218.17 L1052.88 1218.17 L1053.46 1218.17 L1054.05 1218.17 L1054.64 1218.17 L1055.22 1218.17 L1055.81 1218.17 L1056.39 1218.17 L1056.98 1218.17 L1057.57 1218.17 L1058.15 1218.17 L1058.74 1218.17 L1059.33 1218.17 L1059.91 1218.17 L1060.5 1218.17 L1061.09 1218.17 L1061.67 1218.17 L1062.26 1218.17 L1062.85 1218.17 L1063.43 1218.17 L1064.02 1218.17 L1064.6 1218.17 L1065.19 1218.17 L1065.78 1218.17 L1066.36 1218.17 L1066.95 1218.17 L1067.54 1218.17 L1068.12 1218.17 L1068.71 1218.17 L1069.3 1218.17 L1069.88 1218.17 L1070.47 1218.17 L1071.06 1218.17 L1071.64 1218.17 L1072.23 1218.17 L1072.81 1218.17 L1073.4 1218.17 L1073.99 1218.17 L1074.57 1218.17 L1075.16 1218.17 L1075.75 1218.17 L1076.33 1218.17 L1076.92 1218.17 L1077.51 1218.17 L1078.09 1218.17 L1078.68 1218.17 L1079.26 1218.17 L1079.85 1218.17 L1080.44 1218.17 L1081.02 1218.17 L1081.61 1218.17 L1082.2 1218.17 L1082.78 1218.17 L1083.37 1218.17 L1083.96 1218.17 L1084.54 1218.17 L1085.13 1218.17 L1085.72 1218.17 L1086.3 1218.17 L1086.89 1218.17 L1087.47 1218.17 L1088.06 1218.17 L1088.65 1218.17 L1089.23 1218.17 L1089.82 1218.17 L1090.41 1218.17 L1090.99 1218.17 L1091.58 1218.17 L1092.17 1218.17 L1092.75 1218.17 L1093.34 1218.17 L1093.93 1218.17 L1094.51 1218.17 L1095.1 1218.17 L1095.68 1218.17 L1096.27 1218.17 L1096.86 1218.17 L1097.44 1218.17 L1098.03 1218.17 L1098.62 1218.17 L1099.2 1218.17 L1099.79 1218.17 L1100.38 1218.17 L1100.96 1218.17 L1101.55 1218.17 L1102.14 1218.17 L1102.72 1218.17 L1103.31 1218.17 L1103.89 1218.17 L1104.48 1218.17 L1105.07 1218.17 L1105.65 1218.17 L1106.24 1218.17 L1106.83 1218.17 L1107.41 1218.17 L1108 1218.17 L1108.59 1218.17 L1109.17 1218.17 L1109.76 1218.17 L1110.34 1218.17 L1110.93 1218.17 L1111.52 1218.17 L1112.1 1218.17 L1112.69 1218.17 L1113.28 1218.17 L1113.86 1218.17 L1114.45 1218.17 L1115.04 1218.17 L1115.62 1218.17 L1116.21 1218.17 L1116.8 1218.17 L1117.38 1218.17 L1117.97 1218.17 L1118.55 1218.17 L1119.14 1218.17 L1119.73 1218.17 L1120.31 1218.17 L1120.9 1218.17 L1121.49 1218.17 L1122.07 1218.17 L1122.66 1218.17 L1123.25 1218.17 L1123.83 1218.17 L1124.42 1218.17 L1125.01 1218.17 L1125.59 1218.17 L1126.18 1218.17 L1126.76 1218.17 L1127.35 1218.17 L1127.94 1218.17 L1128.52 1218.17 L1129.11 1218.17 L1129.7 1218.17 L1130.28 1218.17 L1130.87 1218.17 L1131.46 1218.17 L1132.04 1218.17 L1132.63 1218.17 L1133.21 1218.17 L1133.8 1218.17 L1134.39 1218.17 L1134.97 1218.17 L1135.56 1218.17 L1136.15 1218.17 L1136.73 1218.17 L1137.32 1218.17 L1137.91 1218.17 L1138.49 1218.17 L1139.08 1218.17 L1139.67 1218.17 L1140.25 1218.17 L1140.84 1218.17 L1141.42 1218.17 L1142.01 1218.17 L1142.6 1218.17 L1143.18 1218.17 L1143.77 1218.17 L1144.36 1218.17 L1144.94 1218.17 L1145.53 1218.17 L1146.12 1218.17 L1146.7 1218.17 L1147.29 1218.17 L1147.88 1218.17 L1148.46 1218.17 L1149.05 1218.17 L1149.63 1218.17 L1150.22 1218.17 L1150.81 1218.17 L1151.39 1218.17 L1151.98 1218.17 L1152.57 1218.17 L1153.15 1218.17 L1153.74 1218.17 L1154.33 1218.17 L1154.91 1218.17 L1155.5 1218.17 L1156.09 1218.17 L1156.67 1218.17 L1157.26 1218.17 L1157.84 1218.17 L1158.43 1218.17 L1159.02 1218.17 L1159.6 1218.17 L1160.19 1218.17 L1160.78 1218.17 L1161.36 1218.17 L1161.95 1218.17 L1162.54 1218.17 L1163.12 1218.17 L1163.71 1218.17 L1164.29 1218.17 L1164.88 1218.17 L1165.47 1218.17 L1166.05 1218.17 L1166.64 1218.17 L1167.23 1218.17 L1167.81 1218.17 L1168.4 1218.17 L1168.99 1218.17 L1169.57 1218.17 L1170.16 1218.17 L1170.75 1218.17 L1171.33 1218.17 L1171.92 1218.17 L1172.5 1218.17 L1173.09 1218.17 L1173.68 1218.17 L1174.26 1218.17 L1174.85 1218.17 L1175.44 1218.17 L1176.02 1218.17 L1176.61 1218.17 L1177.2 1218.17 L1177.78 1218.17 L1178.37 1218.17 L1178.96 1218.17 L1179.54 1218.17 L1180.13 1218.17 L1180.71 1218.17 L1181.3 1218.17 L1181.89 1218.17 L1182.47 1218.17 L1183.06 1218.17 L1183.65 1218.17 L1184.23 1218.17 L1184.82 1218.17 L1185.41 1218.17 L1185.99 1218.17 L1186.58 1218.17 L1187.16 1218.17 L1187.75 1218.17 L1188.34 1218.17 L1188.92 1218.17 L1189.51 1218.17 L1190.1 1218.17 L1190.68 1218.17 L1191.27 1218.17 L1191.86 1218.17 L1192.44 1218.17 L1193.03 1218.17 L1193.62 1218.17 L1194.2 1218.17 L1194.79 1218.17 L1195.37 1218.17 L1195.96 1218.17 L1196.55 1218.17 L1197.13 1218.17 L1197.72 1218.17 L1198.31 1218.17 L1198.89 1218.17 L1199.48 1218.17 L1200.07 1218.17 L1200.65 1218.17 L1201.24 1218.17 L1201.83 1218.17 L1202.41 1218.17 L1203 1218.17 L1203.58 1218.17 L1204.17 1218.17 L1204.76 1218.17 L1205.34 1218.17 L1205.93 1218.17 L1206.52 1218.17 L1207.1 1218.17 L1207.69 1218.17 L1208.28 1218.17 L1208.86 1218.17 L1209.45 1218.17 L1210.03 1218.17 L1210.62 1218.17 L1211.21 1218.17 L1211.79 1218.17 L1212.38 1218.17 L1212.97 1218.17 L1213.55 1218.17 L1214.14 1218.17 L1214.73 1218.17 L1215.31 1218.17 L1215.9 1218.17 L1216.49 1218.17 L1217.07 1218.17 L1217.66 1218.17 L1218.24 1218.17 L1218.83 1218.17 L1219.42 1218.17 L1220 1218.17 L1220.59 1218.17 L1221.18 1218.17 L1221.76 1218.17 L1222.35 1218.17 L1222.94 1218.17 L1223.52 1218.17 L1224.11 1218.17 L1224.7 1218.17 L1225.28 1218.17 L1225.87 1218.17 L1226.45 1218.17 L1227.04 1218.17 L1227.63 1218.17 L1228.21 1218.17 L1228.8 1218.17 L1229.39 1218.17 L1229.97 1218.17 L1230.56 1218.17 L1231.15 1218.17 L1231.73 1218.17 L1232.32 1218.17 L1232.91 1218.17 L1233.49 1218.17 L1234.08 1218.17 L1234.66 1218.17 L1235.25 1218.17 L1235.84 1218.17 L1236.42 1218.17 L1237.01 1218.17 L1237.6 1218.17 L1238.18 1218.17 L1238.77 1218.17 L1239.36 1218.17 L1239.94 1218.17 L1240.53 1218.17 L1241.11 1218.17 L1241.7 1218.17 L1242.29 1218.17 L1242.87 1218.17 L1243.46 1218.17 L1244.05 1218.17 L1244.63 1218.17 L1245.22 1218.17 L1245.81 1218.17 L1246.39 1218.17 L1246.98 1218.17 L1247.57 1218.17 L1248.15 1218.17 L1248.74 1218.17 L1249.32 1218.17 L1249.91 1218.17 L1250.5 1218.17 L1251.08 1218.17 L1251.67 1218.17 L1252.26 1218.17 L1252.84 1218.17 L1253.43 1218.17 L1254.02 1218.17 L1254.6 1218.17 L1255.19 1218.17 L1255.78 1218.17 L1256.36 1218.17 L1256.95 1218.17 L1257.53 1218.17 L1258.12 1218.17 L1258.71 1218.17 L1259.29 1218.17 L1259.88 1218.17 L1260.47 1218.17 L1261.05 1218.17 L1261.64 1218.17 L1262.23 1218.17 L1262.81 1218.17 L1263.4 1218.17 L1263.98 1218.17 L1264.57 1218.17 L1265.16 1218.17 L1265.74 1218.17 L1266.33 1218.17 L1266.92 1218.17 L1267.5 1218.17 L1268.09 1218.17 L1268.68 1218.17 L1269.26 1218.17 L1269.85 1218.17 L1270.44 1218.17 L1271.02 1218.17 L1271.61 1218.17 L1272.19 1218.17 L1272.78 1218.17 L1273.37 1218.17 L1273.95 1218.17 L1274.54 1218.17 L1275.13 1218.17 L1275.71 1218.17 L1276.3 1218.17 L1276.89 1218.17 L1277.47 1218.17 L1278.06 1218.17 L1278.65 1218.17 L1279.23 1218.17 L1279.82 1218.17 L1280.4 1218.17 L1280.99 1218.17 L1281.58 1218.17 L1282.16 1218.17 L1282.75 1218.17 L1283.34 1218.17 L1283.92 1218.17 L1284.51 1218.17 L1285.1 1218.17 L1285.68 1218.17 L1286.27 1218.17 L1286.86 1218.17 L1287.44 1218.17 L1288.03 1218.17 L1288.61 1218.17 L1289.2 1218.17 L1289.79 1218.17 L1290.37 1218.17 L1290.96 1218.17 L1291.55 1218.17 L1292.13 1218.17 L1292.72 1218.17 L1293.31 1218.17 L1293.89 1218.17 L1294.48 1218.17 L1295.06 1218.17 L1295.65 1218.17 L1296.24 1218.17 L1296.82 1218.17 L1297.41 1218.17 L1298 1218.17 L1298.58 1218.17 L1299.17 1218.17 L1299.76 1218.17 L1300.34 1218.17 L1300.93 1218.17 L1301.52 1218.17 L1302.1 1218.17 L1302.69 1218.17 L1303.27 1218.17 L1303.86 1218.17 L1304.45 1218.17 L1305.03 1218.17 L1305.62 1218.17 L1306.21 1218.17 L1306.79 1218.17 L1307.38 1218.17 L1307.97 1218.17 L1308.55 1218.17 L1309.14 1218.17 L1309.73 1218.17 L1310.31 1218.17 L1310.9 1218.17 L1311.48 1218.17 L1312.07 1218.17 L1312.66 1218.17 L1313.24 1218.17 L1313.83 1218.17 L1314.42 1218.17 L1315 1218.17 L1315.59 1218.17 L1316.18 1218.17 L1316.76 1218.17 L1317.35 1218.17 L1317.93 1218.17 L1318.52 1218.17 L1319.11 1218.17 L1319.69 1218.17 L1320.28 1218.17 L1320.87 1218.17 L1321.45 1218.17 L1322.04 1218.17 L1322.63 1218.17 L1323.21 1218.17 L1323.8 1218.17 L1324.39 1218.17 L1324.97 1218.17 L1325.56 1218.17 L1326.14 1218.17 L1326.73 1218.17 L1327.32 1218.17 L1327.9 1218.17 L1328.49 1218.17 L1329.08 1218.17 L1329.66 1218.17 L1330.25 1218.17 L1330.84 1218.17 L1331.42 1218.17 L1332.01 1218.17 L1332.6 1218.17 L1333.18 1218.17 L1333.77 1218.17 L1334.35 1218.17 L1334.94 1218.17 L1335.53 1218.17 L1336.11 1218.17 L1336.7 1218.17 L1337.29 1218.17 L1337.87 1218.17 L1338.46 1218.17 L1339.05 1218.17 L1339.63 1218.17 L1340.22 1218.17 L1340.8 1218.17 L1341.39 1218.17 L1341.98 1218.17 L1342.56 1218.17 L1343.15 1218.17 L1343.74 1218.17 L1344.32 1218.17 L1344.91 1218.17 L1345.5 1218.17 L1346.08 1218.17 L1346.67 1218.17 L1347.26 1218.17 L1347.84 1218.17 L1348.43 1218.17 L1349.01 1218.17 L1349.6 1218.17 L1350.19 1218.17 L1350.77 1218.17 L1351.36 1218.17 L1351.95 1218.17 L1352.53 1218.17 L1353.12 1218.17 L1353.71 1218.17 L1354.29 1218.17 L1354.88 1218.17 L1355.47 1218.17 L1356.05 1218.17 L1356.64 1218.17 L1357.22 1218.17 L1357.81 1218.17 L1358.4 1218.17 L1358.98 1218.17 L1359.57 1218.17 L1360.16 1218.17 L1360.74 1218.17 L1361.33 1218.17 L1361.92 1218.17 L1362.5 1218.17 L1363.09 1218.17 L1363.68 1218.17 L1364.26 1218.17 L1364.85 1218.17 L1365.43 1218.17 L1366.02 1218.17 L1366.61 1218.17 L1367.19 1218.17 L1367.78 1218.17 L1368.37 1218.17 L1368.95 1218.17 L1369.54 1218.17 L1370.13 1218.17 L1370.71 1218.17 L1371.3 1218.17 L1371.88 1218.17 L1372.47 1218.17 L1373.06 1218.17 L1373.64 1218.17 L1374.23 1218.17 L1374.82 1218.17 L1375.4 1218.17 L1375.99 1218.17 L1376.58 1218.17 L1377.16 1218.17 L1377.75 1218.17 L1378.34 1218.17 L1378.92 1218.17 L1379.51 1218.17 L1380.09 1218.17 L1380.68 1218.17 L1381.27 1218.17 L1381.85 1218.17 L1382.44 1218.17 L1383.03 1218.17 L1383.61 1218.17 L1384.2 1218.17 L1384.79 1218.17 L1385.37 1218.17 L1385.96 1218.17 L1386.55 1218.17 L1387.13 1218.17 L1387.72 1218.17 L1388.3 1218.17 L1388.89 1218.17 L1389.48 1218.17 L1390.06 1218.17 L1390.65 1218.17 L1391.24 1218.17 L1391.82 1218.17 L1392.41 1218.17 L1393 1218.17 L1393.58 1218.17 L1394.17 1218.17 L1394.75 1218.17 L1395.34 1218.17 L1395.93 1218.17 L1396.51 1218.17 L1397.1 1218.17 L1397.69 1218.17 L1398.27 1218.17 L1398.86 1218.17 L1399.45 1218.17 L1400.03 1218.17 L1400.62 1218.17 L1401.21 1218.17 L1401.79 1218.17 L1402.38 1218.17 L1402.96 1218.17 L1403.55 1218.17 L1404.14 1218.17 L1404.72 1218.17 L1405.31 1218.17 L1405.9 1218.17 L1406.48 1218.17 L1407.07 1218.17 L1407.66 1218.17 L1408.24 1218.17 L1408.83 1218.17 L1409.42 1218.17 L1410 1218.17 L1410.59 1218.17 L1411.17 1218.17 L1411.76 1218.17 L1412.35 1218.17 L1412.93 1218.17 L1413.52 1218.17 L1414.11 1218.17 L1414.69 1218.17 L1415.28 1218.17 L1415.87 1218.17 L1416.45 1218.17 L1417.04 1218.17 L1417.63 1218.17 L1418.21 1218.17 L1418.8 1218.17 L1419.38 1218.17 L1419.97 1218.17 L1420.56 1218.17 L1421.14 1218.17 L1421.73 1218.17 L1422.32 1218.17 L1422.9 1218.17 L1423.49 1218.17 L1424.08 1218.17 L1424.66 1218.17 L1425.25 1218.17 L1425.83 1218.17 L1426.42 1218.17 L1427.01 1218.17 L1427.59 1218.17 L1428.18 1218.17 L1428.77 1218.17 L1429.35 1218.17 L1429.94 1218.17 L1430.53 1218.17 L1431.11 1218.17 L1431.7 1218.17 L1432.29 1218.17 L1432.87 1218.17 L1433.46 1218.17 L1434.04 1218.17 L1434.63 1218.17 L1435.22 1218.17 L1435.8 1218.17 L1436.39 1218.17 L1436.98 1218.17 L1437.56 1218.17 L1438.15 1218.17 L1438.74 1218.17 L1439.32 1218.17 L1439.91 1218.17 L1440.5 1218.17 L1441.08 1218.17 L1441.67 1218.17 L1442.25 1218.17 L1442.84 1218.17 L1443.43 1218.17 L1444.01 1218.17 L1444.6 1218.17 L1445.19 1218.17 L1445.77 1218.17 L1446.36 1218.17 L1446.95 1218.17 L1447.53 1218.17 L1448.12 1218.17 L1448.7 1218.17 L1449.29 1218.17 L1449.88 1218.17 L1450.46 1218.17 L1451.05 1218.17 L1451.64 1218.17 L1452.22 1218.17 L1452.81 1218.17 L1453.4 1218.17 L1453.98 1218.17 L1454.57 1218.17 L1455.16 1218.17 L1455.74 1218.17 L1456.33 1218.17 L1456.91 1218.17 L1457.5 1218.17 L1458.09 1218.17 L1458.67 1218.17 L1459.26 1218.17 L1459.85 1218.17 L1460.43 1218.17 L1461.02 1218.17 L1461.61 1218.17 L1462.19 1218.17 L1462.78 1218.17 L1463.37 1218.17 L1463.95 1218.17 L1464.54 1218.17 L1465.12 1218.17 L1465.71 1218.17 L1466.3 1218.17 L1466.88 1218.17 L1467.47 1218.17 L1468.06 1218.17 L1468.64 1218.17 L1469.23 1218.17 L1469.82 1218.17 L1470.4 1218.17 L1470.99 1218.17 L1471.57 1218.17 L1472.16 1218.17 L1472.75 1218.17 L1473.33 1218.17 L1473.92 1218.17 L1474.51 1218.17 L1475.09 1218.17 L1475.68 1218.17 L1476.27 1218.17 L1476.85 1218.17 L1477.44 1218.17 L1478.03 1218.17 L1478.61 1218.17 L1479.2 1218.17 L1479.78 1218.17 L1480.37 1218.17 L1480.96 1218.17 L1481.54 1218.17 L1482.13 1218.17 L1482.72 1218.17 L1483.3 1218.17 L1483.89 1218.17 L1484.48 1218.17 L1485.06 1218.17 L1485.65 1218.17 L1486.24 1218.17 L1486.82 1218.17 L1487.41 1218.17 L1487.99 1218.17 L1488.58 1218.17 L1489.17 1218.17 L1489.75 1218.17 L1490.34 1218.17 L1490.93 1218.17 L1491.51 1218.17 L1492.1 1218.17 L1492.69 1218.17 L1493.27 1218.17 L1493.86 1218.17 L1494.45 1218.17 L1495.03 1218.17 L1495.62 1218.17 L1496.2 1218.17 L1496.79 1218.17 L1497.38 1218.17 L1497.96 1218.17 L1498.55 1218.17 L1499.14 1218.17 L1499.72 1218.17 L1500.31 1218.17 L1500.9 1218.17 L1501.48 1218.17 L1502.07 1218.17 L1502.65 1218.17 L1503.24 1218.17 L1503.83 1218.17 L1504.41 1218.17 L1505 1218.17 L1505.59 1218.17 L1506.17 1218.17 L1506.76 1218.17 L1507.35 1218.17 L1507.93 1218.17 L1508.52 1218.17 L1509.11 1218.17 L1509.69 1218.17 L1510.28 1218.17 L1510.86 1218.17 L1511.45 1218.17 L1512.04 1218.17 L1512.62 1218.17 L1513.21 1218.17 L1513.8 1218.17 L1514.38 1218.17 L1514.97 1218.17 L1515.56 1218.17 L1516.14 1218.17 L1516.73 1218.17 L1517.32 1218.17 L1517.9 1218.17 L1518.49 1218.17 L1519.07 1218.17 L1519.66 1218.17 L1520.25 1218.17 L1520.83 1218.17 L1521.42 1218.17 L1522.01 1218.17 L1522.59 1218.17 L1523.18 1218.17 L1523.77 1218.17 L1524.35 1218.17 L1524.94 1218.17 L1525.52 1218.17 L1526.11 1218.17 L1526.7 1218.17 L1527.28 1218.17 L1527.87 1218.17 L1528.46 1218.17 L1529.04 1218.17 L1529.63 1218.17 L1530.22 1218.17 L1530.8 1218.17 L1531.39 1218.17 L1531.98 1218.17 L1532.56 1218.17 L1533.15 1218.17 L1533.73 1218.17 L1534.32 1218.17 L1534.91 1218.17 L1535.49 1218.17 L1536.08 1218.17 L1536.67 1218.17 L1537.25 1218.17 L1537.84 1218.17 L1538.43 1218.17 L1539.01 1218.17 L1539.6 1218.17 L1540.19 1218.17 L1540.77 1218.17 L1541.36 1218.17 L1541.94 1218.17 L1542.53 1218.17 L1543.12 1218.17 L1543.7 1218.17 L1544.29 1218.17 L1544.88 1218.17 L1545.46 1218.17 L1546.05 1218.17 L1546.64 1218.17 L1547.22 1218.17 L1547.81 1218.17 L1548.4 1218.17 L1548.98 1218.17 L1549.57 1218.17 L1550.15 1218.17 L1550.74 1218.17 L1551.33 1218.17 L1551.91 1218.17 L1552.5 1218.17 L1553.09 1218.17 L1553.67 1218.17 L1554.26 1218.17 L1554.85 1218.17 L1555.43 1218.17 L1556.02 1218.17 L1556.6 1218.17 L1557.19 1218.17 L1557.78 1218.17 L1558.36 1218.17 L1558.95 1218.17 L1559.54 1218.17 L1560.12 1218.17 L1560.71 1218.17 L1561.3 1218.17 L1561.88 1218.17 L1562.47 1218.17 L1563.06 1218.17 L1563.64 1218.17 L1564.23 1218.17 L1564.81 1218.17 L1565.4 1218.17 L1565.99 1218.17 L1566.57 1218.17 L1567.16 1218.17 L1567.75 1218.17 L1568.33 1218.17 L1568.92 1218.17 L1569.51 1218.17 L1570.09 1218.17 L1570.68 1218.17 L1571.27 1218.17 L1571.85 1218.17 L1572.44 1218.17 L1573.02 1218.17 L1573.61 1218.17 L1574.2 1218.17 L1574.78 1218.17 L1575.37 1218.17 L1575.96 1218.17 L1576.54 1218.17 L1577.13 1218.17 L1577.72 1218.17 L1578.3 1218.17 L1578.89 1218.17 L1579.47 1218.17 L1580.06 1218.17 L1580.65 1218.17 L1581.23 1218.17 L1581.82 1218.17 L1582.41 1218.17 L1582.99 1218.17 L1583.58 1218.17 L1584.17 1218.17 L1584.75 1218.17 L1585.34 1218.17 L1585.93 1218.17 L1586.51 1218.17 L1587.1 1218.17 L1587.68 1218.17 L1588.27 1218.17 L1588.86 1218.17 L1589.44 1218.17 L1590.03 1218.17 L1590.62 1218.17 L1591.2 1218.17 L1591.79 1218.17 L1592.38 1218.17 L1592.96 1218.17 L1593.55 1218.17 L1594.14 1218.17 L1594.72 1218.17 L1595.31 1218.17 L1595.89 1218.17 L1596.48 1218.17 L1597.07 1218.17 L1597.65 1218.17 L1598.24 1218.17 L1598.83 1218.17 L1599.41 1218.17 L1600 1218.17 L1600.59 1218.17 L1601.17 1218.17 L1601.76 1218.17 L1602.34 1218.17 L1602.93 1218.17 L1603.52 1218.17 L1604.1 1218.17 L1604.69 1218.17 L1605.28 1218.17 L1605.86 1218.17 L1606.45 1218.17 L1607.04 1218.17 L1607.62 1218.17 L1608.21 1218.17 L1608.8 1218.17 L1609.38 1218.17 L1609.97 1218.17 L1610.55 1218.17 L1611.14 1218.17 L1611.73 1218.17 L1612.31 1218.17 L1612.9 1218.17 L1613.49 1218.17 L1614.07 1218.17 L1614.66 1218.17 L1615.25 1218.17 L1615.83 1218.17 L1616.42 1218.17 L1617.01 1218.17 L1617.59 1218.17 L1618.18 1218.17 L1618.76 1218.17 L1619.35 1218.17 L1619.94 1218.17 L1620.52 1218.17 L1621.11 1218.17 L1621.7 1218.17 L1622.28 1218.17 L1622.87 1218.17 L1623.46 1218.17 L1624.04 1218.17 L1624.63 1218.17 L1625.22 1218.17 L1625.8 1218.17 L1626.39 1218.17 L1626.97 1218.17 L1627.56 1218.17 L1628.15 1218.17 L1628.73 1218.17 L1629.32 1218.17 L1629.91 1218.17 L1630.49 1218.17 L1631.08 1218.17 L1631.67 1218.17 L1632.25 1218.17 L1632.84 1218.17 L1633.42 1218.17 L1634.01 1218.17 L1634.6 1218.17 L1635.18 1218.17 L1635.77 1218.17 L1636.36 1218.17 L1636.94 1218.17 L1637.53 1218.17 L1638.12 1218.17 L1638.7 1218.17 L1639.29 1218.17 L1639.88 1218.17 L1640.46 1218.17 L1641.05 1218.17 L1641.63 1218.17 L1642.22 1218.17 L1642.81 1218.17 L1643.39 1218.17 L1643.98 1218.17 L1644.57 1218.17 L1645.15 1218.17 L1645.74 1218.17 L1646.33 1218.17 L1646.91 1218.17 L1647.5 1218.17 L1648.09 1218.17 L1648.67 1218.17 L1649.26 1218.17 L1649.84 1218.17 L1650.43 1218.17 L1651.02 1218.17 L1651.6 1218.17 L1652.19 1218.17 L1652.78 1218.17 L1653.36 1218.17 L1653.95 1218.17 L1654.54 1218.17 L1655.12 1218.17 L1655.71 1218.17 L1656.29 1218.17 L1656.88 1218.17 L1657.47 1218.17 L1658.05 1218.17 L1658.64 1218.17 L1659.23 1218.17 L1659.81 1218.17 L1660.4 1218.17 L1660.99 1218.17 L1661.57 1218.17 L1662.16 1218.17 L1662.75 1218.17 L1663.33 1218.17 L1663.92 1218.17 L1664.5 1218.17 L1665.09 1218.17 L1665.68 1218.17 L1666.26 1218.17 L1666.85 1218.17 L1667.44 1218.17 L1668.02 1218.17 L1668.61 1218.17 L1669.2 1218.17 L1669.78 1218.17 L1670.37 1218.17 L1670.96 1218.17 L1671.54 1218.17 L1672.13 1218.17 L1672.71 1218.17 L1673.3 1218.17 L1673.89 1218.17 L1674.47 1218.17 L1675.06 1218.17 L1675.65 1218.17 L1676.23 1218.17 L1676.82 1218.17 L1677.41 1218.17 L1677.99 1218.17 L1678.58 1218.17 L1679.17 1218.17 L1679.75 1218.17 L1680.34 1218.17 L1680.92 1218.17 L1681.51 1218.17 L1682.1 1218.17 L1682.68 1218.17 L1683.27 1218.17 L1683.86 1218.17 L1684.44 1218.17 L1685.03 1218.17 L1685.62 1218.17 L1686.2 1218.17 L1686.79 1218.17 L1687.37 1218.17 L1687.96 1218.17 L1688.55 1218.17 L1689.13 1218.17 L1689.72 1218.17 L1690.31 1218.17 L1690.89 1218.17 L1691.48 1218.17 L1692.07 1218.17 L1692.65 1218.17 L1693.24 1218.17 L1693.83 1218.17 L1694.41 1218.17 L1695 1218.17 L1695.58 1218.17 L1696.17 1218.17 L1696.76 1218.17 L1697.34 1218.17 L1697.93 1218.17 L1698.52 1218.17 L1699.1 1218.17 L1699.69 1218.17 L1700.28 1218.17 L1700.86 1218.17 L1701.45 1218.17 L1702.04 1218.17 L1702.62 1218.17 L1703.21 1218.17 L1703.79 1218.17 L1704.38 1218.17 L1704.97 1218.17 L1705.55 1218.17 L1706.14 1218.17 L1706.73 1218.17 L1707.31 1218.17 L1707.9 1218.17 L1708.49 1218.17 L1709.07 1218.17 L1709.66 1218.17 L1710.24 1218.17 L1710.83 1218.17 L1711.42 1218.17 L1712 1218.17 L1712.59 1218.17 L1713.18 1218.17 L1713.76 1218.17 L1714.35 1218.17 L1714.94 1218.17 L1715.52 1218.17 L1716.11 1218.17 L1716.7 1218.17 L1717.28 1218.17 L1717.87 1218.17 L1718.45 1218.17 L1719.04 1218.17 L1719.63 1218.17 L1720.21 1218.17 L1720.8 1218.17 L1721.39 1218.17 L1721.97 1218.17 L1722.56 1218.17 L1723.15 1218.17 L1723.73 1218.17 L1724.32 1218.17 L1724.91 1218.17 L1725.49 1218.17 L1726.08 1218.17 L1726.66 1218.17 L1727.25 1218.17 L1727.84 1218.17 L1728.42 1218.17 L1729.01 1218.17 L1729.6 1218.17 L1730.18 1218.17 L1730.77 1218.17 L1731.36 1218.17 L1731.94 1218.17 L1732.53 1218.17 L1733.11 1218.17 L1733.7 1218.17 L1734.29 1218.17 L1734.87 1218.17 L1735.46 1218.17 L1736.05 1218.17 L1736.63 1218.17 L1737.22 1218.17 L1737.81 1218.17 L1738.39 1218.17 L1738.98 1218.17 L1739.57 1218.17 L1740.15 1218.17 L1740.74 1218.17 L1741.32 1218.17 L1741.91 1218.17 L1742.5 1218.17 L1743.08 1218.17 L1743.67 1218.17 L1744.26 1218.17 L1744.84 1218.17 L1745.43 1218.17 L1746.02 1218.17 L1746.6 1218.17 L1747.19 1218.17 L1747.78 1218.17 L1748.36 1218.17 L1748.95 1218.17 L1749.53 1218.17 L1750.12 1218.17 L1750.71 1218.17 L1751.29 1218.17 L1751.88 1218.17 L1752.47 1218.17 L1753.05 1218.17 L1753.64 1218.17 L1754.23 1218.17 L1754.81 1218.17 L1755.4 1218.17 L1755.99 1218.17 L1756.57 1218.17 L1757.16 1218.17 L1757.74 1218.17 L1758.33 1218.17 L1758.92 1218.17 L1759.5 1218.17 L1760.09 1218.17 L1760.68 1218.17 L1761.26 1218.17 L1761.85 1218.17 L1762.44 1218.17 L1763.02 1218.17 L1763.61 1218.17 L1764.19 1218.17 L1764.78 1218.17 L1765.37 1218.17 L1765.95 1218.17 L1766.54 1218.17 L1767.13 1218.17 L1767.71 1218.17 L1768.3 1218.17 L1768.89 1218.17 L1769.47 1218.17 L1770.06 1218.17 L1770.65 1218.17 L1771.23 1218.17 L1771.82 1218.17 L1772.4 1218.17 L1772.99 1218.17 L1773.58 1218.17 L1774.16 1218.17 L1774.75 1218.17 L1775.34 1218.17 L1775.92 1218.17 L1776.51 1218.17 L1777.1 1218.17 L1777.68 1218.17 L1778.27 1218.17 L1778.86 1218.17 L1779.44 1218.17 L1780.03 1218.17 L1780.61 1218.17 L1781.2 1218.17 L1781.79 1218.17 L1782.37 1218.17 L1782.96 1218.17 L1783.55 1218.17 L1784.13 1218.17 L1784.72 1218.17 L1785.31 1218.17 L1785.89 1218.17 L1786.48 1218.17 L1787.06 1218.17 L1787.65 1218.17 L1788.24 1218.17 L1788.82 1218.17 L1789.41 1218.17 L1790 1218.17 L1790.58 1218.17 L1791.17 1218.17 L1791.76 1218.17 L1792.34 1218.17 L1792.93 1218.17 L1793.52 1218.17 L1794.1 1218.17 L1794.69 1218.17 L1795.27 1218.17 L1795.86 1218.17 L1796.45 1218.17 L1797.03 1218.17 L1797.62 1218.17 L1798.21 1218.17 L1798.79 1218.17 L1799.38 1218.17 L1799.97 1218.17 L1800.55 1218.17 L1801.14 1218.17 L1801.73 1218.17 L1802.31 1218.17 L1802.9 1218.17 L1803.48 1218.17 L1804.07 1218.17 L1804.66 1218.17 L1805.24 1218.17 L1805.83 1218.17 L1806.42 1218.17 L1807 1218.17 L1807.59 1218.17 L1808.18 1218.17 L1808.76 1218.17 L1809.35 1218.17 L1809.94 1218.17 L1810.52 1218.17 L1811.11 1218.17 L1811.69 1218.17 L1812.28 1218.17 L1812.87 1218.17 L1813.45 1218.17 L1814.04 1218.17 L1814.63 1218.17 L1815.21 1218.17 L1815.8 1218.17 L1816.39 1218.17 L1816.97 1218.17 L1817.56 1218.17 L1818.14 1218.17 L1818.73 1218.17 L1819.32 1218.17 L1819.9 1218.17 L1820.49 1218.17 L1821.08 1218.17 L1821.66 1218.17 L1822.25 1218.17 L1822.84 1218.17 L1823.42 1218.17 L1824.01 1218.17 L1824.6 1218.17 L1825.18 1218.17 L1825.77 1218.17 L1826.35 1218.17 L1826.94 1218.17 L1827.53 1218.17 L1828.11 1218.17 L1828.7 1218.17 L1829.29 1218.17 L1829.87 1218.17 L1830.46 1218.17 L1831.05 1218.17 L1831.63 1218.17 L1832.22 1218.17 L1832.81 1218.17 L1833.39 1218.17 L1833.98 1218.17 L1834.56 1218.17 L1835.15 1218.17 L1835.74 1218.17 L1836.32 1218.17 L1836.91 1218.17 L1837.5 1218.17 L1838.08 1218.17 L1838.67 1218.17 L1839.26 1218.17 L1839.84 1218.17 L1840.43 1218.17 L1841.01 1218.17 L1841.6 1218.17 L1842.19 1218.17 L1842.77 1218.17 L1843.36 1218.17 L1843.95 1218.17 L1844.53 1218.17 L1845.12 1218.17 L1845.71 1218.17 L1846.29 1218.17 L1846.88 1218.17 L1847.47 1218.17 L1848.05 1218.17 L1848.64 1218.17 L1849.22 1218.17 L1849.81 1218.17 L1850.4 1218.17 L1850.98 1218.17 L1851.57 1218.17 L1852.16 1218.17 L1852.74 1218.17 L1853.33 1218.17 L1853.92 1218.17 L1854.5 1218.17 L1855.09 1218.17 L1855.68 1218.17 L1856.26 1218.17 L1856.85 1218.17 L1857.43 1218.17 L1858.02 1218.17 L1858.61 1218.17 L1859.19 1218.17 L1859.78 1218.17 L1860.37 1218.17 L1860.95 1218.17 L1861.54 1218.17 L1862.13 1218.17 L1862.71 1218.17 L1863.3 1218.17 L1863.88 1218.17 L1864.47 1218.17 L1865.06 1218.17 L1865.64 1218.17 L1866.23 1218.17 L1866.82 1218.17 L1867.4 1218.17 L1867.99 1218.17 L1868.58 1218.17 L1869.16 1218.17 L1869.75 1218.17 L1870.34 1218.17 L1870.92 1218.17 L1871.51 1218.17 L1872.09 1218.17 L1872.68 1218.17 L1873.27 1218.17 L1873.85 1218.17 L1874.44 1218.17 L1875.03 1218.17 L1875.61 1218.17 L1876.2 1218.17 L1876.79 1218.17 L1877.37 1218.17 L1877.96 1218.17 L1878.55 1218.17 L1879.13 1218.17 L1879.72 1218.17 L1880.3 1218.17 L1880.89 1218.17 L1881.48 1218.17 L1882.06 1218.17 L1882.65 1218.17 L1883.24 1218.17 L1883.82 1218.17 L1884.41 1218.17 L1885 1218.17 L1885.58 1218.17 L1886.17 1218.17 L1886.76 1218.17 L1887.34 1218.17 L1887.93 1218.17 L1888.51 1218.17 L1889.1 1218.17 L1889.69 1218.17 L1890.27 1218.17 L1890.86 1218.17 L1891.45 1218.17 L1892.03 1218.17 L1892.62 1218.17 L1893.21 1218.17 L1893.79 1218.17 L1894.38 1218.17 L1894.96 1218.17 L1895.55 1218.17 L1896.14 1218.17 L1896.72 1218.17 L1897.31 1218.17 L1897.9 1218.17 L1898.48 1218.17 L1899.07 1218.17 L1899.66 1218.17 L1900.24 1218.17 L1900.83 1218.17 L1901.42 1218.17 L1902 1218.17 L1902.59 1218.17 L1903.17 1218.17 L1903.76 1218.17 L1904.35 1218.17 L1904.93 1218.17 L1905.52 1218.17 L1906.11 1218.17 L1906.69 1218.17 L1907.28 1218.17 L1907.87 1218.17 L1908.45 1218.17 L1909.04 1218.17 L1909.63 1218.17 L1910.21 1218.17 L1910.8 1218.17 L1911.38 1218.17 L1911.97 1218.17 L1912.56 1218.17 L1913.14 1218.17 L1913.73 1218.17 L1914.32 1218.17 L1914.9 1218.17 L1915.49 1218.17 L1916.08 1218.17 L1916.66 1218.17 L1917.25 1218.17 L1917.83 1218.17 L1918.42 1218.17 L1919.01 1218.17 L1919.59 1218.17 L1920.18 1218.17 L1920.77 1218.17 L1921.35 1218.17 L1921.94 1218.17 L1922.53 1218.17 L1923.11 1218.17 L1923.7 1218.17 L1924.29 1218.17 L1924.87 1218.17 L1925.46 1218.17 L1926.04 1218.17 L1926.63 1218.17 L1927.22 1218.17 L1927.8 1218.17 L1928.39 1218.17 L1928.98 1218.17 L1929.56 1218.17 L1930.15 1218.17 L1930.74 1218.17 L1931.32 1218.17 L1931.91 1218.17 L1932.5 1218.17 L1933.08 1218.17 L1933.67 1218.17 L1934.25 1218.17 L1934.84 1218.17 L1935.43 1218.17 L1936.01 1218.17 L1936.6 1218.17 L1937.19 1218.17 L1937.77 1218.17 L1938.36 1218.17 L1938.95 1218.17 L1939.53 1218.17 L1940.12 1218.17 L1940.71 1218.17 L1941.29 1218.17 L1941.88 1218.17 L1942.46 1218.17 L1943.05 1218.17 L1943.64 1218.17 L1944.22 1218.17 L1944.81 1218.17 L1945.4 1218.17 L1945.98 1218.17 L1946.57 1218.17 L1947.16 1218.17 L1947.74 1218.17 L1948.33 1218.17 L1948.91 1218.17 L1949.5 1218.17 L1950.09 1218.17 L1950.67 1218.17 L1951.26 1218.17 L1951.85 1218.17 L1952.43 1218.17 L1953.02 1218.17 L1953.61 1218.17 L1954.19 1218.17 L1954.78 1218.17 L1955.37 1218.17 L1955.95 1218.17 L1956.54 1218.17 L1957.12 1218.17 L1957.71 1218.17 L1958.3 1218.17 L1958.88 1218.17 L1959.47 1218.17 L1960.06 1218.17 L1960.64 1218.17 L1961.23 1218.17 L1961.82 1218.17 L1962.4 1218.17 L1962.99 1218.17 L1963.58 1218.17 L1964.16 1218.17 L1964.75 1218.17 L1965.33 1218.17 L1965.92 1218.17 L1966.51 1218.17 L1967.09 1218.17 L1967.68 1218.17 L1968.27 1218.17 L1968.85 1218.17 L1969.44 1218.17 L1970.03 1218.17 L1970.61 1218.17 L1971.2 1218.17 L1971.78 1218.17 L1972.37 1218.17 L1972.96 1218.17 L1973.54 1218.17 L1974.13 1218.17 L1974.72 1218.17 L1975.3 1218.17 L1975.89 1218.17 L1976.48 1218.17 L1977.06 1218.17 L1977.65 1218.17 L1978.24 1218.17 L1978.82 1218.17 L1979.41 1218.17 L1979.99 1218.17 L1980.58 1218.17 L1981.17 1218.17 L1981.75 1218.17 L1982.34 1218.17 L1982.93 1218.17 L1983.51 1218.17 L1984.1 1218.17 L1984.69 1218.17 L1985.27 1218.17 L1985.86 1218.17 L1986.45 1218.17 L1987.03 1218.17 L1987.62 1218.17 L1988.2 1218.17 L1988.79 1218.17 L1989.38 1218.17 L1989.96 1218.17 L1990.55 1218.17 L1991.14 1218.17 L1991.72 1218.17 L1992.31 1218.17 L1992.9 1218.17 L1993.48 1218.17 L1994.07 1218.17 L1994.65 1218.17 L1995.24 1218.17 L1995.83 1218.17 L1996.41 1218.17 L1997 1218.17 L1997.59 1218.17 L1998.17 1218.17 L1998.76 1218.17 L1999.35 1218.17 L1999.93 1218.17 L2000.52 1218.17 L2001.11 1218.17 L2001.69 1218.17 L2002.28 1218.17 L2002.86 1218.17 L2003.45 1218.17 L2004.04 1218.17 L2004.62 1218.17 L2005.21 1218.17 L2005.8 1218.17 L2006.38 1218.17 L2006.97 1218.17 L2007.56 1218.17 L2008.14 1218.17 L2008.73 1218.17 L2009.32 1218.17 L2009.9 1218.17 L2010.49 1218.17 L2011.07 1218.17 L2011.66 1218.17 L2012.25 1218.17 L2012.83 1218.17 L2013.42 1218.17 L2014.01 1218.17 L2014.59 1218.17 L2015.18 1218.17 L2015.77 1218.17 L2016.35 1218.17 L2016.94 1218.17 L2017.53 1218.17 L2018.11 1218.17 L2018.7 1218.17 L2019.28 1218.17 L2019.87 1218.17 L2020.46 1218.17 L2021.04 1218.17 L2021.63 1218.17 L2022.22 1218.17 L2022.8 1218.17 L2023.39 1218.17 L2023.98 1218.17 L2024.56 1218.17 L2025.15 1218.17 L2025.73 1218.17 L2026.32 1218.17 L2026.91 1218.17 L2027.49 1218.17 L2028.08 1218.17 L2028.67 1218.17 L2029.25 1218.17 L2029.84 1218.17 L2030.43 1218.17 L2031.01 1218.17 L2031.6 1218.17 L2032.19 1218.17 L2032.77 1218.17 L2033.36 1218.17 L2033.94 1218.17 L2034.53 1218.17 L2035.12 1218.17 L2035.7 1218.17 L2036.29 1218.17 L2036.88 1218.17 L2037.46 1218.17 L2038.05 1218.17 L2038.64 1218.17 L2039.22 1218.17 L2039.81 1218.17 L2040.4 1218.17 L2040.98 1218.17 L2041.57 1218.17 L2042.15 1218.17 L2042.74 1218.17 L2043.33 1218.17 L2043.91 1218.17 L2044.5 1218.17 L2045.09 1218.17 L2045.67 1218.17 L2046.26 1218.17 L2046.85 1218.17 L2047.43 1218.17 L2048.02 1218.17 L2048.6 1218.17 L2049.19 1218.17 L2049.78 1218.17 L2050.36 1218.17 L2050.95 1218.17 L2051.54 1218.17 L2052.12 1218.17 L2052.71 1218.17 L2053.3 1218.17 L2053.88 1218.17 L2054.47 1218.17 L2055.06 1218.17 L2055.64 1218.17 L2056.23 1218.17 L2056.81 1218.17 L2057.4 1218.17 L2057.99 1218.17 L2058.57 1218.17 L2059.16 1218.17 L2059.75 1218.17 L2060.33 1218.17 L2060.92 1218.17 L2061.51 1218.17 L2062.09 1218.17 L2062.68 1218.17 L2063.27 1218.17 L2063.85 1218.17 L2064.44 1218.17 L2065.02 1218.17 L2065.61 1218.17 L2066.2 1218.17 L2066.78 1218.17 L2067.37 1218.17 L2067.96 1218.17 L2068.54 1218.17 L2069.13 1218.17 L2069.72 1218.17 L2070.3 1218.17 L2070.89 1218.17 L2071.48 1218.17 L2072.06 1218.17 L2072.65 1218.17 L2073.23 1218.17 L2073.82 1218.17 L2074.41 1218.17 L2074.99 1218.17 L2075.58 1218.17 L2076.17 1218.17 L2076.75 1218.17 L2077.34 1218.17 L2077.93 1218.17 L2078.51 1218.17 L2079.1 1218.17 L2079.68 1218.17 L2080.27 1218.17 L2080.86 1218.17 L2081.44 1218.17 L2082.03 1218.17 L2082.62 1218.17 L2083.2 1218.17 L2083.79 1218.17 L2084.38 1218.17 L2084.96 1218.17 L2085.55 1218.17 L2086.14 1218.17 L2086.72 1218.17 L2087.31 1218.17 L2087.89 1218.17 L2088.48 1218.17 L2089.07 1218.17 L2089.65 1218.17 L2090.24 1218.17 L2090.83 1218.17 L2091.41 1218.17 L2092 1218.17 L2092.59 1218.17 L2093.17 1218.17 L2093.76 1218.17 L2094.35 1218.17 L2094.93 1218.17 L2095.52 1218.17 L2096.1 1218.17 L2096.69 1218.17 L2097.28 1218.17 L2097.86 1218.17 L2098.45 1218.17 L2099.04 1218.17 L2099.62 1218.17 L2100.21 1218.17 L2100.8 1218.17 L2101.38 1218.17 L2101.97 1218.17 L2102.55 1218.17 L2103.14 1218.17 L2103.73 1218.17 L2104.31 1218.17 L2104.9 1218.17 L2105.49 1218.17 L2106.07 1218.17 L2106.66 1218.17 L2107.25 1218.17 L2107.83 1218.17 L2108.42 1218.17 L2109.01 1218.17 L2109.59 1218.17 L2110.18 1218.17 L2110.76 1218.17 L2111.35 1218.17 L2111.94 1218.17 L2112.52 1218.17 L2113.11 1218.17 L2113.7 1218.17 L2114.28 1218.17 L2114.87 1218.17 L2115.46 1218.17 L2116.04 1218.17 L2116.63 1218.17 L2117.22 1218.17 L2117.8 1218.17 L2118.39 1218.17 L2118.97 1218.17 L2119.56 1218.17 L2120.15 1218.17 L2120.73 1218.17 L2121.32 1218.17 L2121.91 1218.17 L2122.49 1218.17 L2123.08 1218.17 L2123.67 1218.17 L2124.25 1218.17 L2124.84 1218.17 L2125.42 1218.17 L2126.01 1218.17 L2126.6 1218.17 L2127.18 1218.17 L2127.77 1218.17 L2128.36 1218.17 L2128.94 1218.17 L2129.53 1218.17 L2130.12 1218.17 L2130.7 1218.17 L2131.29 1218.17 L2131.88 1218.17 L2132.46 1218.17 L2133.05 1218.17 L2133.63 1218.17 L2134.22 1218.17 L2134.81 1218.17 L2135.39 1218.17 L2135.98 1218.17 L2136.57 1218.17 L2137.15 1218.17 L2137.74 1218.17 L2138.33 1218.17 L2138.91 1218.17 L2139.5 1218.17 L2140.09 1218.17 L2140.67 1218.17 L2141.26 1218.17 L2141.84 1218.17 L2142.43 1218.17 L2143.02 1218.17 L2143.6 1218.17 L2144.19 1218.17 L2144.78 1218.17 L2145.36 1218.17 L2145.95 1218.17 L2146.54 1218.17 L2147.12 1218.17 L2147.71 1218.17 L2148.3 1218.17 L2148.88 1218.17 L2149.47 1218.17 L2150.05 1218.17 L2150.64 1218.17 L2151.23 1218.17 L2151.81 1218.17 L2152.4 1218.17 L2152.99 1218.17 L2153.57 1218.17 L2154.16 1218.17 L2154.75 1218.17 L2155.33 1218.17 L2155.92 1218.17 L2156.5 1218.17 L2157.09 1218.17 L2157.68 1218.17 L2158.26 1218.17 L2158.26 1218.03 L2157.68 1218.03 L2157.09 1218.03 L2156.5 1218.03 L2155.92 1218.03 L2155.33 1218.03 L2154.75 1218.03 L2154.16 1218.03 L2153.57 1218.03 L2152.99 1218.03 L2152.4 1218.03 L2151.81 1218.03 L2151.23 1218.03 L2150.64 1218.03 L2150.05 1218.03 L2149.47 1218.03 L2148.88 1218.03 L2148.3 1218.03 L2147.71 1218.03 L2147.12 1218.03 L2146.54 1218.03 L2145.95 1218.03 L2145.36 1218.03 L2144.78 1218.03 L2144.19 1218.03 L2143.6 1218.03 L2143.02 1218.03 L2142.43 1218.03 L2141.84 1218.03 L2141.26 1218.03 L2140.67 1218.03 L2140.09 1218.03 L2139.5 1218.03 L2138.91 1218.03 L2138.33 1218.03 L2137.74 1218.03 L2137.15 1218.03 L2136.57 1218.03 L2135.98 1218.03 L2135.39 1218.03 L2134.81 1218.03 L2134.22 1218.03 L2133.63 1218.03 L2133.05 1218.03 L2132.46 1218.03 L2131.88 1218.03 L2131.29 1218.03 L2130.7 1218.03 L2130.12 1218.03 L2129.53 1218.03 L2128.94 1218.03 L2128.36 1218.03 L2127.77 1218.03 L2127.18 1218.03 L2126.6 1218.03 L2126.01 1218.03 L2125.42 1218.03 L2124.84 1218.03 L2124.25 1218.03 L2123.67 1218.03 L2123.08 1218.03 L2122.49 1218.03 L2121.91 1218.03 L2121.32 1218.03 L2120.73 1218.03 L2120.15 1218.03 L2119.56 1218.03 L2118.97 1218.03 L2118.39 1218.03 L2117.8 1218.03 L2117.22 1218.03 L2116.63 1218.03 L2116.04 1218.03 L2115.46 1218.03 L2114.87 1218.03 L2114.28 1218.03 L2113.7 1218.03 L2113.11 1218.03 L2112.52 1218.03 L2111.94 1218.03 L2111.35 1218.03 L2110.76 1218.03 L2110.18 1218.03 L2109.59 1218.03 L2109.01 1218.03 L2108.42 1218.03 L2107.83 1218.03 L2107.25 1218.03 L2106.66 1218.03 L2106.07 1218.03 L2105.49 1218.03 L2104.9 1218.03 L2104.31 1218.03 L2103.73 1218.03 L2103.14 1218.03 L2102.55 1218.03 L2101.97 1218.03 L2101.38 1218.03 L2100.8 1218.03 L2100.21 1218.03 L2099.62 1218.03 L2099.04 1218.03 L2098.45 1218.03 L2097.86 1218.03 L2097.28 1218.03 L2096.69 1218.03 L2096.1 1218.03 L2095.52 1218.03 L2094.93 1218.03 L2094.35 1218.03 L2093.76 1218.03 L2093.17 1218.03 L2092.59 1218.03 L2092 1218.03 L2091.41 1218.03 L2090.83 1218.03 L2090.24 1218.03 L2089.65 1218.03 L2089.07 1218.03 L2088.48 1218.03 L2087.89 1218.03 L2087.31 1218.03 L2086.72 1218.03 L2086.14 1218.03 L2085.55 1218.03 L2084.96 1218.03 L2084.38 1218.03 L2083.79 1218.03 L2083.2 1218.03 L2082.62 1218.03 L2082.03 1218.03 L2081.44 1218.03 L2080.86 1218.03 L2080.27 1218.03 L2079.68 1218.03 L2079.1 1218.03 L2078.51 1218.03 L2077.93 1218.03 L2077.34 1218.03 L2076.75 1218.03 L2076.17 1218.03 L2075.58 1218.03 L2074.99 1218.03 L2074.41 1218.03 L2073.82 1218.03 L2073.23 1218.03 L2072.65 1218.03 L2072.06 1218.03 L2071.48 1218.03 L2070.89 1218.03 L2070.3 1218.03 L2069.72 1218.03 L2069.13 1218.03 L2068.54 1218.03 L2067.96 1218.03 L2067.37 1218.03 L2066.78 1218.03 L2066.2 1218.03 L2065.61 1218.03 L2065.02 1218.03 L2064.44 1218.03 L2063.85 1218.03 L2063.27 1218.03 L2062.68 1218.03 L2062.09 1218.03 L2061.51 1218.03 L2060.92 1218.03 L2060.33 1218.03 L2059.75 1218.03 L2059.16 1218.03 L2058.57 1218.03 L2057.99 1218.03 L2057.4 1218.03 L2056.81 1218.03 L2056.23 1218.03 L2055.64 1218.03 L2055.06 1218.03 L2054.47 1218.03 L2053.88 1218.03 L2053.3 1218.03 L2052.71 1218.03 L2052.12 1218.03 L2051.54 1218.03 L2050.95 1218.03 L2050.36 1218.03 L2049.78 1218.03 L2049.19 1218.03 L2048.6 1218.03 L2048.02 1218.03 L2047.43 1218.03 L2046.85 1218.03 L2046.26 1218.03 L2045.67 1218.03 L2045.09 1218.03 L2044.5 1218.03 L2043.91 1218.03 L2043.33 1218.03 L2042.74 1218.03 L2042.15 1218.03 L2041.57 1218.03 L2040.98 1218.03 L2040.4 1218.03 L2039.81 1218.03 L2039.22 1218.03 L2038.64 1218.03 L2038.05 1218.03 L2037.46 1218.03 L2036.88 1218.03 L2036.29 1218.03 L2035.7 1218.03 L2035.12 1218.03 L2034.53 1218.03 L2033.94 1218.03 L2033.36 1218.03 L2032.77 1218.03 L2032.19 1218.03 L2031.6 1218.03 L2031.01 1218.03 L2030.43 1218.03 L2029.84 1218.03 L2029.25 1218.03 L2028.67 1218.03 L2028.08 1218.03 L2027.49 1218.03 L2026.91 1218.03 L2026.32 1218.03 L2025.73 1218.03 L2025.15 1218.03 L2024.56 1218.03 L2023.98 1218.03 L2023.39 1218.03 L2022.8 1218.03 L2022.22 1218.03 L2021.63 1218.03 L2021.04 1218.03 L2020.46 1218.03 L2019.87 1218.03 L2019.28 1218.03 L2018.7 1218.03 L2018.11 1218.03 L2017.53 1218.03 L2016.94 1218.03 L2016.35 1218.03 L2015.77 1218.03 L2015.18 1218.03 L2014.59 1218.03 L2014.01 1218.03 L2013.42 1218.03 L2012.83 1218.03 L2012.25 1218.03 L2011.66 1218.03 L2011.07 1218.03 L2010.49 1218.03 L2009.9 1218.03 L2009.32 1218.03 L2008.73 1218.03 L2008.14 1218.03 L2007.56 1218.03 L2006.97 1218.03 L2006.38 1218.03 L2005.8 1218.03 L2005.21 1218.03 L2004.62 1218.03 L2004.04 1218.03 L2003.45 1218.03 L2002.86 1218.03 L2002.28 1218.03 L2001.69 1218.03 L2001.11 1218.03 L2000.52 1218.03 L1999.93 1218.03 L1999.35 1218.03 L1998.76 1218.03 L1998.17 1218.03 L1997.59 1218.03 L1997 1218.03 L1996.41 1218.03 L1995.83 1218.03 L1995.24 1218.03 L1994.65 1218.03 L1994.07 1218.03 L1993.48 1218.03 L1992.9 1218.03 L1992.31 1218.03 L1991.72 1218.03 L1991.14 1218.03 L1990.55 1218.03 L1989.96 1218.03 L1989.38 1218.03 L1988.79 1218.03 L1988.2 1218.03 L1987.62 1218.03 L1987.03 1218.03 L1986.45 1218.03 L1985.86 1218.03 L1985.27 1218.03 L1984.69 1218.03 L1984.1 1218.03 L1983.51 1218.03 L1982.93 1218.03 L1982.34 1218.03 L1981.75 1218.03 L1981.17 1218.03 L1980.58 1218.03 L1979.99 1218.03 L1979.41 1218.03 L1978.82 1218.03 L1978.24 1218.03 L1977.65 1218.03 L1977.06 1218.03 L1976.48 1218.03 L1975.89 1218.03 L1975.3 1218.03 L1974.72 1218.03 L1974.13 1218.03 L1973.54 1218.03 L1972.96 1218.03 L1972.37 1218.03 L1971.78 1218.03 L1971.2 1218.03 L1970.61 1218.03 L1970.03 1218.03 L1969.44 1218.03 L1968.85 1218.03 L1968.27 1218.03 L1967.68 1218.03 L1967.09 1218.03 L1966.51 1218.03 L1965.92 1218.03 L1965.33 1218.03 L1964.75 1218.03 L1964.16 1218.03 L1963.58 1218.03 L1962.99 1218.03 L1962.4 1218.03 L1961.82 1218.03 L1961.23 1218.03 L1960.64 1218.03 L1960.06 1218.03 L1959.47 1218.03 L1958.88 1218.03 L1958.3 1218.03 L1957.71 1218.03 L1957.12 1218.03 L1956.54 1218.03 L1955.95 1218.03 L1955.37 1218.03 L1954.78 1218.03 L1954.19 1218.03 L1953.61 1218.03 L1953.02 1218.03 L1952.43 1218.03 L1951.85 1218.03 L1951.26 1218.03 L1950.67 1218.03 L1950.09 1218.03 L1949.5 1218.03 L1948.91 1218.03 L1948.33 1218.03 L1947.74 1218.03 L1947.16 1218.03 L1946.57 1218.03 L1945.98 1218.03 L1945.4 1218.03 L1944.81 1218.03 L1944.22 1218.03 L1943.64 1218.03 L1943.05 1218.03 L1942.46 1218.03 L1941.88 1218.03 L1941.29 1218.03 L1940.71 1218.03 L1940.12 1218.03 L1939.53 1218.03 L1938.95 1218.03 L1938.36 1218.03 L1937.77 1218.03 L1937.19 1218.03 L1936.6 1218.03 L1936.01 1218.03 L1935.43 1218.03 L1934.84 1218.03 L1934.25 1218.03 L1933.67 1218.03 L1933.08 1218.03 L1932.5 1218.03 L1931.91 1218.03 L1931.32 1218.03 L1930.74 1218.03 L1930.15 1218.03 L1929.56 1218.03 L1928.98 1218.03 L1928.39 1218.03 L1927.8 1218.03 L1927.22 1218.03 L1926.63 1218.03 L1926.04 1218.03 L1925.46 1218.03 L1924.87 1218.03 L1924.29 1218.03 L1923.7 1218.03 L1923.11 1218.03 L1922.53 1218.03 L1921.94 1218.03 L1921.35 1218.03 L1920.77 1218.03 L1920.18 1218.03 L1919.59 1218.03 L1919.01 1218.03 L1918.42 1218.03 L1917.83 1218.03 L1917.25 1218.03 L1916.66 1218.03 L1916.08 1218.03 L1915.49 1218.03 L1914.9 1218.03 L1914.32 1218.03 L1913.73 1218.03 L1913.14 1218.03 L1912.56 1218.03 L1911.97 1218.03 L1911.38 1218.03 L1910.8 1218.03 L1910.21 1218.03 L1909.63 1218.03 L1909.04 1218.03 L1908.45 1218.03 L1907.87 1218.03 L1907.28 1218.03 L1906.69 1218.03 L1906.11 1218.03 L1905.52 1218.03 L1904.93 1218.03 L1904.35 1218.03 L1903.76 1218.03 L1903.17 1218.03 L1902.59 1218.03 L1902 1218.03 L1901.42 1218.03 L1900.83 1218.03 L1900.24 1218.03 L1899.66 1218.03 L1899.07 1218.03 L1898.48 1218.03 L1897.9 1218.03 L1897.31 1218.03 L1896.72 1218.03 L1896.14 1218.03 L1895.55 1218.03 L1894.96 1218.03 L1894.38 1218.03 L1893.79 1218.03 L1893.21 1218.03 L1892.62 1218.03 L1892.03 1218.03 L1891.45 1218.03 L1890.86 1218.03 L1890.27 1218.03 L1889.69 1218.03 L1889.1 1218.03 L1888.51 1218.03 L1887.93 1218.03 L1887.34 1218.03 L1886.76 1218.03 L1886.17 1218.03 L1885.58 1218.03 L1885 1218.03 L1884.41 1218.03 L1883.82 1218.03 L1883.24 1218.03 L1882.65 1218.03 L1882.06 1218.03 L1881.48 1218.03 L1880.89 1218.03 L1880.3 1218.03 L1879.72 1218.03 L1879.13 1218.03 L1878.55 1218.03 L1877.96 1218.03 L1877.37 1218.03 L1876.79 1218.03 L1876.2 1218.03 L1875.61 1218.03 L1875.03 1218.03 L1874.44 1218.03 L1873.85 1218.03 L1873.27 1218.03 L1872.68 1218.03 L1872.09 1218.03 L1871.51 1218.03 L1870.92 1218.03 L1870.34 1218.03 L1869.75 1218.03 L1869.16 1218.03 L1868.58 1218.03 L1867.99 1218.03 L1867.4 1218.03 L1866.82 1218.03 L1866.23 1218.03 L1865.64 1218.03 L1865.06 1218.03 L1864.47 1218.03 L1863.88 1218.03 L1863.3 1218.03 L1862.71 1218.03 L1862.13 1218.03 L1861.54 1218.03 L1860.95 1218.03 L1860.37 1218.03 L1859.78 1218.03 L1859.19 1218.03 L1858.61 1218.03 L1858.02 1218.03 L1857.43 1218.03 L1856.85 1218.03 L1856.26 1218.03 L1855.68 1218.03 L1855.09 1218.03 L1854.5 1218.03 L1853.92 1218.03 L1853.33 1218.03 L1852.74 1218.03 L1852.16 1218.03 L1851.57 1218.03 L1850.98 1218.03 L1850.4 1218.03 L1849.81 1218.03 L1849.22 1218.03 L1848.64 1218.03 L1848.05 1218.03 L1847.47 1218.03 L1846.88 1218.03 L1846.29 1218.03 L1845.71 1218.03 L1845.12 1218.03 L1844.53 1218.03 L1843.95 1218.03 L1843.36 1218.03 L1842.77 1218.03 L1842.19 1218.03 L1841.6 1218.03 L1841.01 1218.03 L1840.43 1218.03 L1839.84 1218.03 L1839.26 1218.03 L1838.67 1218.03 L1838.08 1218.03 L1837.5 1218.03 L1836.91 1218.03 L1836.32 1218.03 L1835.74 1218.03 L1835.15 1218.03 L1834.56 1218.03 L1833.98 1218.03 L1833.39 1218.03 L1832.81 1218.03 L1832.22 1218.03 L1831.63 1218.03 L1831.05 1218.03 L1830.46 1218.03 L1829.87 1218.03 L1829.29 1218.03 L1828.7 1218.03 L1828.11 1218.03 L1827.53 1218.03 L1826.94 1218.03 L1826.35 1218.03 L1825.77 1218.03 L1825.18 1218.03 L1824.6 1218.03 L1824.01 1218.03 L1823.42 1218.03 L1822.84 1218.03 L1822.25 1218.03 L1821.66 1218.03 L1821.08 1218.03 L1820.49 1218.03 L1819.9 1218.03 L1819.32 1218.03 L1818.73 1218.03 L1818.14 1218.03 L1817.56 1218.03 L1816.97 1218.03 L1816.39 1218.03 L1815.8 1218.03 L1815.21 1218.03 L1814.63 1218.03 L1814.04 1218.03 L1813.45 1218.03 L1812.87 1218.03 L1812.28 1218.03 L1811.69 1218.03 L1811.11 1218.03 L1810.52 1218.03 L1809.94 1218.03 L1809.35 1218.03 L1808.76 1218.03 L1808.18 1218.03 L1807.59 1218.03 L1807 1218.03 L1806.42 1218.03 L1805.83 1218.03 L1805.24 1218.03 L1804.66 1218.03 L1804.07 1218.03 L1803.48 1218.03 L1802.9 1218.03 L1802.31 1218.03 L1801.73 1218.03 L1801.14 1218.03 L1800.55 1218.03 L1799.97 1218.03 L1799.38 1218.03 L1798.79 1218.03 L1798.21 1218.03 L1797.62 1218.03 L1797.03 1218.03 L1796.45 1218.03 L1795.86 1218.03 L1795.27 1218.03 L1794.69 1218.03 L1794.1 1218.03 L1793.52 1218.03 L1792.93 1218.03 L1792.34 1218.03 L1791.76 1218.03 L1791.17 1218.03 L1790.58 1218.03 L1790 1218.03 L1789.41 1218.03 L1788.82 1218.03 L1788.24 1218.03 L1787.65 1218.03 L1787.06 1218.03 L1786.48 1218.03 L1785.89 1218.03 L1785.31 1218.03 L1784.72 1218.03 L1784.13 1218.03 L1783.55 1218.03 L1782.96 1218.03 L1782.37 1218.03 L1781.79 1218.03 L1781.2 1218.03 L1780.61 1218.03 L1780.03 1218.03 L1779.44 1218.03 L1778.86 1218.03 L1778.27 1218.03 L1777.68 1218.03 L1777.1 1218.03 L1776.51 1218.03 L1775.92 1218.03 L1775.34 1218.03 L1774.75 1218.03 L1774.16 1218.03 L1773.58 1218.03 L1772.99 1218.03 L1772.4 1218.03 L1771.82 1218.03 L1771.23 1218.03 L1770.65 1218.03 L1770.06 1218.03 L1769.47 1218.03 L1768.89 1218.03 L1768.3 1218.03 L1767.71 1218.03 L1767.13 1218.03 L1766.54 1218.03 L1765.95 1218.03 L1765.37 1218.03 L1764.78 1218.03 L1764.19 1218.03 L1763.61 1218.03 L1763.02 1218.03 L1762.44 1218.03 L1761.85 1218.03 L1761.26 1218.03 L1760.68 1218.03 L1760.09 1218.03 L1759.5 1218.03 L1758.92 1218.03 L1758.33 1218.03 L1757.74 1218.03 L1757.16 1218.03 L1756.57 1218.03 L1755.99 1218.03 L1755.4 1218.03 L1754.81 1218.03 L1754.23 1218.03 L1753.64 1218.03 L1753.05 1218.03 L1752.47 1218.03 L1751.88 1218.03 L1751.29 1218.03 L1750.71 1218.03 L1750.12 1218.03 L1749.53 1218.03 L1748.95 1218.03 L1748.36 1218.03 L1747.78 1218.03 L1747.19 1218.03 L1746.6 1218.03 L1746.02 1218.03 L1745.43 1218.03 L1744.84 1218.03 L1744.26 1218.03 L1743.67 1218.03 L1743.08 1218.03 L1742.5 1218.03 L1741.91 1218.03 L1741.32 1218.03 L1740.74 1218.03 L1740.15 1218.03 L1739.57 1218.03 L1738.98 1218.03 L1738.39 1218.03 L1737.81 1218.03 L1737.22 1218.03 L1736.63 1218.03 L1736.05 1218.03 L1735.46 1218.03 L1734.87 1218.03 L1734.29 1218.03 L1733.7 1218.03 L1733.11 1218.03 L1732.53 1218.03 L1731.94 1218.03 L1731.36 1218.03 L1730.77 1218.03 L1730.18 1218.03 L1729.6 1218.03 L1729.01 1218.03 L1728.42 1218.03 L1727.84 1218.03 L1727.25 1218.03 L1726.66 1218.03 L1726.08 1218.03 L1725.49 1218.03 L1724.91 1218.03 L1724.32 1218.03 L1723.73 1218.03 L1723.15 1218.03 L1722.56 1218.03 L1721.97 1218.03 L1721.39 1218.03 L1720.8 1218.03 L1720.21 1218.03 L1719.63 1218.03 L1719.04 1218.03 L1718.45 1218.03 L1717.87 1218.03 L1717.28 1218.03 L1716.7 1218.03 L1716.11 1218.03 L1715.52 1218.03 L1714.94 1218.03 L1714.35 1218.03 L1713.76 1218.03 L1713.18 1218.03 L1712.59 1218.03 L1712 1218.03 L1711.42 1218.03 L1710.83 1218.03 L1710.24 1218.03 L1709.66 1218.03 L1709.07 1218.03 L1708.49 1218.03 L1707.9 1218.03 L1707.31 1218.03 L1706.73 1218.03 L1706.14 1218.03 L1705.55 1218.03 L1704.97 1218.03 L1704.38 1218.03 L1703.79 1218.03 L1703.21 1218.03 L1702.62 1218.03 L1702.04 1218.03 L1701.45 1218.03 L1700.86 1218.03 L1700.28 1218.03 L1699.69 1218.03 L1699.1 1218.03 L1698.52 1218.03 L1697.93 1218.03 L1697.34 1218.03 L1696.76 1218.03 L1696.17 1218.03 L1695.58 1218.03 L1695 1218.03 L1694.41 1218.03 L1693.83 1218.03 L1693.24 1218.03 L1692.65 1218.03 L1692.07 1218.03 L1691.48 1218.03 L1690.89 1218.03 L1690.31 1218.03 L1689.72 1218.03 L1689.13 1218.03 L1688.55 1218.03 L1687.96 1218.03 L1687.37 1218.03 L1686.79 1218.03 L1686.2 1218.03 L1685.62 1218.03 L1685.03 1218.03 L1684.44 1218.03 L1683.86 1218.03 L1683.27 1218.03 L1682.68 1218.03 L1682.1 1218.03 L1681.51 1218.03 L1680.92 1218.03 L1680.34 1218.03 L1679.75 1218.03 L1679.17 1218.03 L1678.58 1218.03 L1677.99 1218.03 L1677.41 1218.03 L1676.82 1218.03 L1676.23 1218.03 L1675.65 1218.03 L1675.06 1218.03 L1674.47 1218.03 L1673.89 1218.03 L1673.3 1218.03 L1672.71 1218.03 L1672.13 1218.03 L1671.54 1218.03 L1670.96 1218.03 L1670.37 1218.03 L1669.78 1218.03 L1669.2 1218.03 L1668.61 1218.03 L1668.02 1218.03 L1667.44 1218.03 L1666.85 1218.03 L1666.26 1218.03 L1665.68 1218.03 L1665.09 1218.03 L1664.5 1218.03 L1663.92 1218.03 L1663.33 1218.03 L1662.75 1218.03 L1662.16 1218.03 L1661.57 1218.03 L1660.99 1218.03 L1660.4 1218.03 L1659.81 1218.03 L1659.23 1218.03 L1658.64 1218.03 L1658.05 1218.03 L1657.47 1218.03 L1656.88 1218.03 L1656.29 1218.03 L1655.71 1218.03 L1655.12 1218.03 L1654.54 1218.03 L1653.95 1218.03 L1653.36 1218.03 L1652.78 1218.03 L1652.19 1218.03 L1651.6 1218.03 L1651.02 1218.03 L1650.43 1218.03 L1649.84 1218.03 L1649.26 1218.03 L1648.67 1218.03 L1648.09 1218.03 L1647.5 1218.03 L1646.91 1218.03 L1646.33 1218.03 L1645.74 1218.03 L1645.15 1218.03 L1644.57 1218.03 L1643.98 1218.03 L1643.39 1218.03 L1642.81 1218.03 L1642.22 1218.03 L1641.63 1218.03 L1641.05 1218.03 L1640.46 1218.03 L1639.88 1218.03 L1639.29 1218.03 L1638.7 1218.03 L1638.12 1218.03 L1637.53 1218.03 L1636.94 1218.03 L1636.36 1218.03 L1635.77 1218.03 L1635.18 1218.03 L1634.6 1218.03 L1634.01 1218.03 L1633.42 1218.03 L1632.84 1218.03 L1632.25 1218.03 L1631.67 1218.03 L1631.08 1218.03 L1630.49 1218.03 L1629.91 1218.03 L1629.32 1218.03 L1628.73 1218.03 L1628.15 1218.03 L1627.56 1218.03 L1626.97 1218.03 L1626.39 1218.03 L1625.8 1218.03 L1625.22 1218.03 L1624.63 1218.03 L1624.04 1218.03 L1623.46 1218.03 L1622.87 1218.03 L1622.28 1218.03 L1621.7 1218.03 L1621.11 1218.03 L1620.52 1218.03 L1619.94 1218.03 L1619.35 1218.03 L1618.76 1218.03 L1618.18 1218.03 L1617.59 1218.03 L1617.01 1218.03 L1616.42 1218.03 L1615.83 1218.03 L1615.25 1218.03 L1614.66 1218.03 L1614.07 1218.03 L1613.49 1218.03 L1612.9 1218.03 L1612.31 1218.03 L1611.73 1218.03 L1611.14 1218.03 L1610.55 1218.03 L1609.97 1218.03 L1609.38 1218.03 L1608.8 1218.03 L1608.21 1218.03 L1607.62 1218.03 L1607.04 1218.03 L1606.45 1218.03 L1605.86 1218.03 L1605.28 1218.03 L1604.69 1218.03 L1604.1 1218.03 L1603.52 1218.03 L1602.93 1218.03 L1602.34 1218.03 L1601.76 1218.03 L1601.17 1218.03 L1600.59 1218.03 L1600 1218.03 L1599.41 1218.03 L1598.83 1218.03 L1598.24 1218.03 L1597.65 1218.03 L1597.07 1218.03 L1596.48 1218.03 L1595.89 1218.03 L1595.31 1218.03 L1594.72 1218.03 L1594.14 1218.03 L1593.55 1218.03 L1592.96 1218.03 L1592.38 1218.03 L1591.79 1218.03 L1591.2 1218.03 L1590.62 1218.03 L1590.03 1218.03 L1589.44 1218.03 L1588.86 1218.03 L1588.27 1218.03 L1587.68 1218.03 L1587.1 1218.03 L1586.51 1218.03 L1585.93 1218.03 L1585.34 1218.03 L1584.75 1218.03 L1584.17 1218.03 L1583.58 1218.03 L1582.99 1218.03 L1582.41 1218.03 L1581.82 1218.03 L1581.23 1218.03 L1580.65 1218.03 L1580.06 1218.03 L1579.47 1218.03 L1578.89 1218.03 L1578.3 1218.03 L1577.72 1218.03 L1577.13 1218.03 L1576.54 1218.03 L1575.96 1218.03 L1575.37 1218.03 L1574.78 1218.03 L1574.2 1218.03 L1573.61 1218.03 L1573.02 1218.03 L1572.44 1218.03 L1571.85 1218.03 L1571.27 1218.03 L1570.68 1218.03 L1570.09 1218.03 L1569.51 1218.03 L1568.92 1218.03 L1568.33 1218.03 L1567.75 1218.03 L1567.16 1218.03 L1566.57 1218.03 L1565.99 1218.03 L1565.4 1218.03 L1564.81 1218.03 L1564.23 1218.03 L1563.64 1218.03 L1563.06 1218.03 L1562.47 1218.03 L1561.88 1218.03 L1561.3 1218.03 L1560.71 1218.03 L1560.12 1218.03 L1559.54 1218.03 L1558.95 1218.03 L1558.36 1218.03 L1557.78 1218.03 L1557.19 1218.03 L1556.6 1218.03 L1556.02 1218.03 L1555.43 1218.03 L1554.85 1218.03 L1554.26 1218.03 L1553.67 1218.03 L1553.09 1218.03 L1552.5 1218.03 L1551.91 1218.03 L1551.33 1218.03 L1550.74 1218.03 L1550.15 1218.03 L1549.57 1218.03 L1548.98 1218.03 L1548.4 1218.03 L1547.81 1218.03 L1547.22 1218.03 L1546.64 1218.03 L1546.05 1218.03 L1545.46 1218.03 L1544.88 1218.03 L1544.29 1218.03 L1543.7 1218.03 L1543.12 1218.03 L1542.53 1218.03 L1541.94 1218.03 L1541.36 1218.03 L1540.77 1218.03 L1540.19 1218.03 L1539.6 1218.03 L1539.01 1218.03 L1538.43 1218.03 L1537.84 1218.03 L1537.25 1218.03 L1536.67 1218.03 L1536.08 1218.03 L1535.49 1218.03 L1534.91 1218.03 L1534.32 1218.03 L1533.73 1218.03 L1533.15 1218.03 L1532.56 1218.03 L1531.98 1218.03 L1531.39 1218.03 L1530.8 1218.03 L1530.22 1218.03 L1529.63 1218.03 L1529.04 1218.03 L1528.46 1218.03 L1527.87 1218.03 L1527.28 1218.03 L1526.7 1218.03 L1526.11 1218.03 L1525.52 1218.03 L1524.94 1218.03 L1524.35 1218.03 L1523.77 1218.03 L1523.18 1218.03 L1522.59 1218.03 L1522.01 1218.03 L1521.42 1218.03 L1520.83 1218.03 L1520.25 1218.03 L1519.66 1218.03 L1519.07 1218.03 L1518.49 1218.03 L1517.9 1218.03 L1517.32 1218.03 L1516.73 1218.03 L1516.14 1218.03 L1515.56 1218.03 L1514.97 1218.03 L1514.38 1218.03 L1513.8 1218.03 L1513.21 1218.03 L1512.62 1218.03 L1512.04 1218.03 L1511.45 1218.03 L1510.86 1218.03 L1510.28 1218.03 L1509.69 1218.03 L1509.11 1218.03 L1508.52 1218.03 L1507.93 1218.03 L1507.35 1218.03 L1506.76 1218.03 L1506.17 1218.03 L1505.59 1218.03 L1505 1218.03 L1504.41 1218.03 L1503.83 1218.03 L1503.24 1218.03 L1502.65 1218.03 L1502.07 1218.03 L1501.48 1218.03 L1500.9 1218.03 L1500.31 1218.03 L1499.72 1218.03 L1499.14 1218.03 L1498.55 1218.03 L1497.96 1218.03 L1497.38 1218.03 L1496.79 1218.03 L1496.2 1218.03 L1495.62 1218.03 L1495.03 1218.03 L1494.45 1218.03 L1493.86 1218.03 L1493.27 1218.03 L1492.69 1218.03 L1492.1 1218.03 L1491.51 1218.03 L1490.93 1218.03 L1490.34 1218.03 L1489.75 1218.03 L1489.17 1218.03 L1488.58 1218.03 L1487.99 1218.03 L1487.41 1218.03 L1486.82 1218.03 L1486.24 1218.03 L1485.65 1218.03 L1485.06 1218.03 L1484.48 1218.03 L1483.89 1218.03 L1483.3 1218.03 L1482.72 1218.03 L1482.13 1218.03 L1481.54 1218.03 L1480.96 1218.03 L1480.37 1218.03 L1479.78 1218.03 L1479.2 1218.03 L1478.61 1218.03 L1478.03 1218.03 L1477.44 1218.03 L1476.85 1218.03 L1476.27 1218.03 L1475.68 1218.03 L1475.09 1218.03 L1474.51 1218.03 L1473.92 1218.03 L1473.33 1218.03 L1472.75 1218.03 L1472.16 1218.03 L1471.57 1218.03 L1470.99 1218.03 L1470.4 1218.03 L1469.82 1218.03 L1469.23 1218.03 L1468.64 1218.03 L1468.06 1218.03 L1467.47 1218.03 L1466.88 1218.03 L1466.3 1218.03 L1465.71 1218.03 L1465.12 1218.03 L1464.54 1218.03 L1463.95 1218.03 L1463.37 1218.03 L1462.78 1218.03 L1462.19 1218.03 L1461.61 1218.03 L1461.02 1218.03 L1460.43 1218.03 L1459.85 1218.03 L1459.26 1218.03 L1458.67 1218.03 L1458.09 1218.03 L1457.5 1218.03 L1456.91 1218.03 L1456.33 1218.03 L1455.74 1218.03 L1455.16 1218.03 L1454.57 1218.03 L1453.98 1218.03 L1453.4 1218.03 L1452.81 1218.03 L1452.22 1218.03 L1451.64 1218.03 L1451.05 1218.03 L1450.46 1218.03 L1449.88 1218.03 L1449.29 1218.03 L1448.7 1218.03 L1448.12 1218.03 L1447.53 1218.03 L1446.95 1218.03 L1446.36 1218.03 L1445.77 1218.03 L1445.19 1218.03 L1444.6 1218.03 L1444.01 1218.03 L1443.43 1218.03 L1442.84 1218.03 L1442.25 1218.03 L1441.67 1218.03 L1441.08 1218.03 L1440.5 1218.03 L1439.91 1218.03 L1439.32 1218.03 L1438.74 1218.03 L1438.15 1218.03 L1437.56 1218.03 L1436.98 1218.03 L1436.39 1218.03 L1435.8 1218.03 L1435.22 1218.03 L1434.63 1218.03 L1434.04 1218.03 L1433.46 1218.03 L1432.87 1218.03 L1432.29 1218.03 L1431.7 1218.03 L1431.11 1218.03 L1430.53 1218.03 L1429.94 1218.03 L1429.35 1218.03 L1428.77 1218.03 L1428.18 1218.03 L1427.59 1218.03 L1427.01 1218.03 L1426.42 1218.03 L1425.83 1218.03 L1425.25 1218.03 L1424.66 1218.03 L1424.08 1218.03 L1423.49 1218.03 L1422.9 1218.03 L1422.32 1218.03 L1421.73 1218.03 L1421.14 1218.03 L1420.56 1218.03 L1419.97 1218.03 L1419.38 1218.03 L1418.8 1218.03 L1418.21 1218.03 L1417.63 1218.03 L1417.04 1218.03 L1416.45 1218.03 L1415.87 1218.03 L1415.28 1218.03 L1414.69 1218.03 L1414.11 1218.03 L1413.52 1218.03 L1412.93 1218.03 L1412.35 1218.03 L1411.76 1218.03 L1411.17 1218.03 L1410.59 1218.03 L1410 1218.03 L1409.42 1218.03 L1408.83 1218.03 L1408.24 1218.03 L1407.66 1218.03 L1407.07 1218.03 L1406.48 1218.03 L1405.9 1218.03 L1405.31 1218.03 L1404.72 1218.03 L1404.14 1218.03 L1403.55 1218.03 L1402.96 1218.03 L1402.38 1218.03 L1401.79 1218.03 L1401.21 1218.03 L1400.62 1218.03 L1400.03 1218.03 L1399.45 1218.03 L1398.86 1218.03 L1398.27 1218.03 L1397.69 1218.03 L1397.1 1218.03 L1396.51 1218.03 L1395.93 1218.03 L1395.34 1218.03 L1394.75 1218.03 L1394.17 1218.03 L1393.58 1218.03 L1393 1218.03 L1392.41 1218.03 L1391.82 1218.03 L1391.24 1218.03 L1390.65 1218.03 L1390.06 1218.03 L1389.48 1218.03 L1388.89 1218.03 L1388.3 1218.03 L1387.72 1218.03 L1387.13 1218.03 L1386.55 1218.03 L1385.96 1218.03 L1385.37 1218.03 L1384.79 1218.03 L1384.2 1218.03 L1383.61 1218.03 L1383.03 1218.03 L1382.44 1218.03 L1381.85 1218.03 L1381.27 1218.03 L1380.68 1218.03 L1380.09 1218.03 L1379.51 1218.03 L1378.92 1218.03 L1378.34 1218.03 L1377.75 1218.03 L1377.16 1218.03 L1376.58 1218.03 L1375.99 1218.03 L1375.4 1218.03 L1374.82 1218.03 L1374.23 1218.03 L1373.64 1218.03 L1373.06 1218.03 L1372.47 1218.03 L1371.88 1218.03 L1371.3 1218.03 L1370.71 1218.03 L1370.13 1218.03 L1369.54 1218.03 L1368.95 1218.03 L1368.37 1218.03 L1367.78 1218.03 L1367.19 1218.03 L1366.61 1218.03 L1366.02 1218.03 L1365.43 1218.03 L1364.85 1218.03 L1364.26 1218.03 L1363.68 1218.03 L1363.09 1218.03 L1362.5 1218.03 L1361.92 1218.03 L1361.33 1218.03 L1360.74 1218.03 L1360.16 1218.03 L1359.57 1218.03 L1358.98 1218.03 L1358.4 1218.03 L1357.81 1218.03 L1357.22 1218.03 L1356.64 1218.03 L1356.05 1218.03 L1355.47 1218.03 L1354.88 1218.03 L1354.29 1218.03 L1353.71 1218.03 L1353.12 1218.03 L1352.53 1218.03 L1351.95 1218.03 L1351.36 1218.03 L1350.77 1218.03 L1350.19 1218.03 L1349.6 1218.03 L1349.01 1218.03 L1348.43 1218.03 L1347.84 1218.03 L1347.26 1218.03 L1346.67 1218.03 L1346.08 1218.03 L1345.5 1218.03 L1344.91 1218.03 L1344.32 1218.03 L1343.74 1218.03 L1343.15 1218.03 L1342.56 1218.03 L1341.98 1218.03 L1341.39 1218.03 L1340.8 1218.03 L1340.22 1218.03 L1339.63 1218.03 L1339.05 1218.03 L1338.46 1218.03 L1337.87 1218.03 L1337.29 1218.03 L1336.7 1218.03 L1336.11 1218.03 L1335.53 1218.03 L1334.94 1218.03 L1334.35 1218.03 L1333.77 1218.03 L1333.18 1218.03 L1332.6 1218.03 L1332.01 1218.03 L1331.42 1218.03 L1330.84 1218.03 L1330.25 1218.03 L1329.66 1218.03 L1329.08 1218.03 L1328.49 1218.03 L1327.9 1218.03 L1327.32 1218.03 L1326.73 1218.03 L1326.14 1218.03 L1325.56 1218.03 L1324.97 1218.03 L1324.39 1218.03 L1323.8 1218.03 L1323.21 1218.03 L1322.63 1218.03 L1322.04 1218.03 L1321.45 1218.03 L1320.87 1218.03 L1320.28 1218.03 L1319.69 1218.03 L1319.11 1218.03 L1318.52 1218.03 L1317.93 1218.03 L1317.35 1218.03 L1316.76 1218.03 L1316.18 1218.03 L1315.59 1218.03 L1315 1218.03 L1314.42 1218.03 L1313.83 1218.03 L1313.24 1218.03 L1312.66 1218.03 L1312.07 1218.03 L1311.48 1218.03 L1310.9 1218.03 L1310.31 1218.03 L1309.73 1218.03 L1309.14 1218.03 L1308.55 1218.03 L1307.97 1218.03 L1307.38 1218.03 L1306.79 1218.03 L1306.21 1218.03 L1305.62 1218.03 L1305.03 1218.03 L1304.45 1218.03 L1303.86 1218.03 L1303.27 1218.03 L1302.69 1218.03 L1302.1 1218.03 L1301.52 1218.03 L1300.93 1218.03 L1300.34 1218.03 L1299.76 1218.03 L1299.17 1218.03 L1298.58 1218.03 L1298 1218.03 L1297.41 1218.03 L1296.82 1218.03 L1296.24 1218.03 L1295.65 1218.03 L1295.06 1218.03 L1294.48 1218.03 L1293.89 1218.03 L1293.31 1218.03 L1292.72 1218.03 L1292.13 1218.03 L1291.55 1218.03 L1290.96 1218.03 L1290.37 1218.03 L1289.79 1218.03 L1289.2 1218.03 L1288.61 1218.03 L1288.03 1218.03 L1287.44 1218.03 L1286.86 1218.03 L1286.27 1218.03 L1285.68 1218.03 L1285.1 1218.03 L1284.51 1218.03 L1283.92 1218.03 L1283.34 1218.03 L1282.75 1218.03 L1282.16 1218.03 L1281.58 1218.03 L1280.99 1218.03 L1280.4 1218.03 L1279.82 1218.03 L1279.23 1218.03 L1278.65 1218.03 L1278.06 1218.03 L1277.47 1218.03 L1276.89 1218.03 L1276.3 1218.03 L1275.71 1218.03 L1275.13 1218.03 L1274.54 1218.03 L1273.95 1218.03 L1273.37 1218.03 L1272.78 1218.03 L1272.19 1218.03 L1271.61 1218.03 L1271.02 1218.03 L1270.44 1218.03 L1269.85 1218.03 L1269.26 1218.03 L1268.68 1218.03 L1268.09 1218.03 L1267.5 1218.03 L1266.92 1218.03 L1266.33 1218.03 L1265.74 1218.03 L1265.16 1218.03 L1264.57 1218.03 L1263.98 1218.03 L1263.4 1218.03 L1262.81 1218.03 L1262.23 1218.03 L1261.64 1218.03 L1261.05 1218.03 L1260.47 1218.03 L1259.88 1218.03 L1259.29 1218.03 L1258.71 1218.03 L1258.12 1218.03 L1257.53 1218.03 L1256.95 1218.03 L1256.36 1218.03 L1255.78 1218.03 L1255.19 1218.03 L1254.6 1218.03 L1254.02 1218.03 L1253.43 1218.03 L1252.84 1218.03 L1252.26 1218.03 L1251.67 1218.03 L1251.08 1218.03 L1250.5 1218.03 L1249.91 1218.03 L1249.32 1218.03 L1248.74 1218.03 L1248.15 1218.03 L1247.57 1218.03 L1246.98 1218.03 L1246.39 1218.03 L1245.81 1218.03 L1245.22 1218.03 L1244.63 1218.03 L1244.05 1218.03 L1243.46 1218.03 L1242.87 1218.03 L1242.29 1218.03 L1241.7 1218.03 L1241.11 1218.03 L1240.53 1218.03 L1239.94 1218.03 L1239.36 1218.03 L1238.77 1218.03 L1238.18 1218.03 L1237.6 1218.03 L1237.01 1218.03 L1236.42 1218.03 L1235.84 1218.03 L1235.25 1218.03 L1234.66 1218.03 L1234.08 1218.03 L1233.49 1218.03 L1232.91 1218.03 L1232.32 1218.03 L1231.73 1218.03 L1231.15 1218.03 L1230.56 1218.03 L1229.97 1218.03 L1229.39 1218.03 L1228.8 1218.03 L1228.21 1218.03 L1227.63 1218.03 L1227.04 1218.03 L1226.45 1218.03 L1225.87 1218.03 L1225.28 1218.03 L1224.7 1218.03 L1224.11 1218.03 L1223.52 1218.03 L1222.94 1218.03 L1222.35 1218.03 L1221.76 1218.03 L1221.18 1218.03 L1220.59 1218.03 L1220 1218.03 L1219.42 1218.03 L1218.83 1218.03 L1218.24 1218.03 L1217.66 1218.03 L1217.07 1218.03 L1216.49 1218.03 L1215.9 1218.03 L1215.31 1218.03 L1214.73 1218.03 L1214.14 1218.03 L1213.55 1218.03 L1212.97 1218.03 L1212.38 1218.03 L1211.79 1218.03 L1211.21 1218.03 L1210.62 1218.03 L1210.03 1218.03 L1209.45 1218.03 L1208.86 1218.03 L1208.28 1218.03 L1207.69 1218.03 L1207.1 1218.03 L1206.52 1218.03 L1205.93 1218.03 L1205.34 1218.03 L1204.76 1218.03 L1204.17 1218.03 L1203.58 1218.03 L1203 1218.03 L1202.41 1218.03 L1201.83 1218.03 L1201.24 1218.03 L1200.65 1218.03 L1200.07 1218.03 L1199.48 1218.03 L1198.89 1218.03 L1198.31 1218.03 L1197.72 1218.03 L1197.13 1218.03 L1196.55 1218.03 L1195.96 1218.03 L1195.37 1218.03 L1194.79 1218.03 L1194.2 1218.03 L1193.62 1218.03 L1193.03 1218.03 L1192.44 1218.03 L1191.86 1218.03 L1191.27 1218.03 L1190.68 1218.03 L1190.1 1218.03 L1189.51 1218.03 L1188.92 1218.03 L1188.34 1218.03 L1187.75 1218.03 L1187.16 1218.03 L1186.58 1218.03 L1185.99 1218.03 L1185.41 1218.03 L1184.82 1218.03 L1184.23 1218.03 L1183.65 1218.03 L1183.06 1218.03 L1182.47 1218.03 L1181.89 1218.03 L1181.3 1218.03 L1180.71 1218.03 L1180.13 1218.03 L1179.54 1218.03 L1178.96 1218.03 L1178.37 1218.03 L1177.78 1218.03 L1177.2 1218.03 L1176.61 1218.03 L1176.02 1218.03 L1175.44 1218.03 L1174.85 1218.03 L1174.26 1218.03 L1173.68 1218.03 L1173.09 1218.03 L1172.5 1218.03 L1171.92 1218.03 L1171.33 1218.03 L1170.75 1218.03 L1170.16 1218.03 L1169.57 1218.03 L1168.99 1218.03 L1168.4 1218.03 L1167.81 1218.03 L1167.23 1218.03 L1166.64 1218.03 L1166.05 1218.03 L1165.47 1218.03 L1164.88 1218.03 L1164.29 1218.03 L1163.71 1218.03 L1163.12 1218.03 L1162.54 1218.03 L1161.95 1218.03 L1161.36 1218.03 L1160.78 1218.03 L1160.19 1218.03 L1159.6 1218.03 L1159.02 1218.03 L1158.43 1218.03 L1157.84 1218.03 L1157.26 1218.03 L1156.67 1218.03 L1156.09 1218.03 L1155.5 1218.03 L1154.91 1218.03 L1154.33 1218.03 L1153.74 1218.03 L1153.15 1218.03 L1152.57 1218.03 L1151.98 1218.03 L1151.39 1218.03 L1150.81 1218.03 L1150.22 1218.03 L1149.63 1218.03 L1149.05 1218.03 L1148.46 1218.03 L1147.88 1218.03 L1147.29 1218.03 L1146.7 1218.03 L1146.12 1218.03 L1145.53 1218.03 L1144.94 1218.03 L1144.36 1218.03 L1143.77 1218.03 L1143.18 1218.03 L1142.6 1218.03 L1142.01 1218.03 L1141.42 1218.03 L1140.84 1218.03 L1140.25 1218.03 L1139.67 1218.03 L1139.08 1218.03 L1138.49 1218.03 L1137.91 1218.03 L1137.32 1218.03 L1136.73 1218.03 L1136.15 1218.03 L1135.56 1218.03 L1134.97 1218.03 L1134.39 1218.03 L1133.8 1218.03 L1133.21 1218.03 L1132.63 1218.03 L1132.04 1218.03 L1131.46 1218.03 L1130.87 1218.03 L1130.28 1218.03 L1129.7 1218.03 L1129.11 1218.03 L1128.52 1218.03 L1127.94 1218.03 L1127.35 1218.03 L1126.76 1218.03 L1126.18 1218.03 L1125.59 1218.03 L1125.01 1218.03 L1124.42 1218.03 L1123.83 1218.03 L1123.25 1218.03 L1122.66 1218.03 L1122.07 1218.03 L1121.49 1218.03 L1120.9 1218.03 L1120.31 1218.03 L1119.73 1218.03 L1119.14 1218.03 L1118.55 1218.03 L1117.97 1218.03 L1117.38 1218.03 L1116.8 1218.03 L1116.21 1218.03 L1115.62 1218.03 L1115.04 1218.03 L1114.45 1218.03 L1113.86 1218.03 L1113.28 1218.03 L1112.69 1218.03 L1112.1 1218.03 L1111.52 1218.03 L1110.93 1218.03 L1110.34 1218.03 L1109.76 1218.03 L1109.17 1218.03 L1108.59 1218.03 L1108 1218.03 L1107.41 1218.03 L1106.83 1218.03 L1106.24 1218.03 L1105.65 1218.03 L1105.07 1218.03 L1104.48 1218.03 L1103.89 1218.03 L1103.31 1218.03 L1102.72 1218.03 L1102.14 1218.03 L1101.55 1218.03 L1100.96 1218.03 L1100.38 1218.03 L1099.79 1218.03 L1099.2 1218.03 L1098.62 1218.03 L1098.03 1218.03 L1097.44 1218.03 L1096.86 1218.03 L1096.27 1218.03 L1095.68 1218.03 L1095.1 1218.03 L1094.51 1218.03 L1093.93 1218.03 L1093.34 1218.03 L1092.75 1218.03 L1092.17 1218.03 L1091.58 1218.03 L1090.99 1218.03 L1090.41 1218.03 L1089.82 1218.03 L1089.23 1218.03 L1088.65 1218.03 L1088.06 1218.03 L1087.47 1218.03 L1086.89 1218.03 L1086.3 1218.03 L1085.72 1218.03 L1085.13 1218.03 L1084.54 1218.03 L1083.96 1218.03 L1083.37 1218.03 L1082.78 1218.03 L1082.2 1218.03 L1081.61 1218.03 L1081.02 1218.03 L1080.44 1218.03 L1079.85 1218.03 L1079.26 1218.03 L1078.68 1218.03 L1078.09 1218.03 L1077.51 1218.03 L1076.92 1218.03 L1076.33 1218.03 L1075.75 1218.03 L1075.16 1218.03 L1074.57 1218.03 L1073.99 1218.03 L1073.4 1218.03 L1072.81 1218.03 L1072.23 1218.03 L1071.64 1218.03 L1071.06 1218.03 L1070.47 1218.03 L1069.88 1218.03 L1069.3 1218.03 L1068.71 1218.03 L1068.12 1218.03 L1067.54 1218.03 L1066.95 1218.03 L1066.36 1218.03 L1065.78 1218.03 L1065.19 1218.03 L1064.6 1218.03 L1064.02 1218.03 L1063.43 1218.03 L1062.85 1218.03 L1062.26 1218.03 L1061.67 1218.03 L1061.09 1218.03 L1060.5 1218.03 L1059.91 1218.03 L1059.33 1218.03 L1058.74 1218.03 L1058.15 1218.03 L1057.57 1218.03 L1056.98 1218.03 L1056.39 1218.03 L1055.81 1218.03 L1055.22 1218.03 L1054.64 1218.03 L1054.05 1218.03 L1053.46 1218.03 L1052.88 1218.03 L1052.29 1218.03 L1051.7 1218.03 L1051.12 1218.03 L1050.53 1218.03 L1049.94 1218.03 L1049.36 1218.03 L1048.77 1218.03 L1048.19 1218.03 L1047.6 1218.03 L1047.01 1218.03 L1046.43 1218.03 L1045.84 1218.03 L1045.25 1218.03 L1044.67 1218.03 L1044.08 1218.03 L1043.49 1218.03 L1042.91 1218.03 L1042.32 1218.03 L1041.73 1218.03 L1041.15 1218.03 L1040.56 1218.03 L1039.98 1218.03 L1039.39 1218.03 L1038.8 1218.03 L1038.22 1218.03 L1037.63 1218.03 L1037.04 1218.03 L1036.46 1218.03 L1035.87 1218.03 L1035.28 1218.03 L1034.7 1218.03 L1034.11 1218.03 L1033.52 1218.03 L1032.94 1218.03 L1032.35 1218.03 L1031.77 1218.03 L1031.18 1218.03 L1030.59 1218.03 L1030.01 1218.03 L1029.42 1218.03 L1028.83 1218.03 L1028.25 1218.03 L1027.66 1218.03 L1027.07 1218.03 L1026.49 1218.03 L1025.9 1218.03 L1025.32 1218.03 L1024.73 1218.03 L1024.14 1218.03 L1023.56 1218.03 L1022.97 1218.03 L1022.38 1218.03 L1021.8 1218.03 L1021.21 1218.03 L1020.62 1218.03 L1020.04 1218.03 L1019.45 1218.03 L1018.86 1218.03 L1018.28 1218.03 L1017.69 1218.03 L1017.11 1218.03 L1016.52 1218.03 L1015.93 1218.03 L1015.35 1218.03 L1014.76 1218.03 L1014.17 1218.03 L1013.59 1218.03 L1013 1218.03 L1012.41 1218.03 L1011.83 1218.03 L1011.24 1218.03 L1010.65 1218.03 L1010.07 1218.03 L1009.48 1218.03 L1008.9 1218.03 L1008.31 1218.03 L1007.72 1218.03 L1007.14 1218.03 L1006.55 1218.03 L1005.96 1218.03 L1005.38 1218.03 L1004.79 1218.03 L1004.2 1218.03 L1003.62 1218.03 L1003.03 1218.03 L1002.44 1218.03 L1001.86 1218.03 L1001.27 1218.03 L1000.69 1218.03 L1000.1 1218.03 L999.513 1218.03 L998.926 1218.03 L998.34 1218.03 L997.754 1218.03 L997.167 1218.03 L996.581 1218.03 L995.994 1218.03 L995.408 1218.03 L994.822 1218.03 L994.235 1218.03 L993.649 1218.03 L993.062 1218.03 L992.476 1218.03 L991.889 1218.03 L991.303 1218.03 L990.717 1218.03 L990.13 1218.03 L989.544 1218.03 L988.957 1218.03 L988.371 1218.03 L987.785 1218.03 L987.198 1218.03 L986.612 1218.03 L986.025 1218.03  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip532)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1218.1 986.612,1218.1 987.198,1218.1 987.785,1218.1 988.371,1218.1 988.957,1218.1 989.544,1218.1 990.13,1218.1 990.717,1218.1 991.303,1218.1 991.889,1218.1 992.476,1218.1 993.062,1218.1 993.649,1218.1 994.235,1218.1 994.822,1218.1 995.408,1218.1 995.994,1218.1 996.581,1218.1 997.167,1218.1 997.754,1218.1 998.34,1218.1 998.926,1218.1 999.513,1218.1 1000.1,1218.1 1000.69,1218.1 1001.27,1218.1 1001.86,1218.1 1002.44,1218.1 1003.03,1218.1 1003.62,1218.1 1004.2,1218.1 1004.79,1218.1 1005.38,1218.1 1005.96,1218.1 1006.55,1218.1 1007.14,1218.1 1007.72,1218.1 1008.31,1218.1 1008.9,1218.1 1009.48,1218.1 1010.07,1218.1 1010.65,1218.1 1011.24,1218.1 1011.83,1218.1 1012.41,1218.1 1013,1218.1 1013.59,1218.1 1014.17,1218.1 1014.76,1218.1 1015.35,1218.1 1015.93,1218.1 1016.52,1218.1 1017.11,1218.1 1017.69,1218.1 1018.28,1218.1 1018.86,1218.1 1019.45,1218.1 1020.04,1218.1 1020.62,1218.1 1021.21,1218.1 1021.8,1218.1 1022.38,1218.1 1022.97,1218.1 1023.56,1218.1 1024.14,1218.1 1024.73,1218.1 1025.32,1218.1 1025.9,1218.1 1026.49,1218.1 1027.07,1218.1 1027.66,1218.1 1028.25,1218.1 1028.83,1218.1 1029.42,1218.1 1030.01,1218.1 1030.59,1218.1 1031.18,1218.1 1031.77,1218.1 1032.35,1218.1 1032.94,1218.1 1033.52,1218.1 1034.11,1218.1 1034.7,1218.1 1035.28,1218.1 1035.87,1218.1 1036.46,1218.1 1037.04,1218.1 1037.63,1218.1 1038.22,1218.1 1038.8,1218.1 1039.39,1218.1 1039.98,1218.1 1040.56,1218.1 1041.15,1218.1 1041.73,1218.1 1042.32,1218.1 1042.91,1218.1 1043.49,1218.1 1044.08,1218.1 1044.67,1218.1 1045.25,1218.1 1045.84,1218.1 1046.43,1218.1 1047.01,1218.1 1047.6,1218.1 1048.19,1218.1 1048.77,1218.1 1049.36,1218.1 1049.94,1218.1 1050.53,1218.1 1051.12,1218.1 1051.7,1218.1 1052.29,1218.1 1052.88,1218.1 1053.46,1218.1 1054.05,1218.1 1054.64,1218.1 1055.22,1218.1 1055.81,1218.1 1056.39,1218.1 1056.98,1218.1 1057.57,1218.1 1058.15,1218.1 1058.74,1218.1 1059.33,1218.1 1059.91,1218.1 1060.5,1218.1 1061.09,1218.1 1061.67,1218.1 1062.26,1218.1 1062.85,1218.1 1063.43,1218.1 1064.02,1218.1 1064.6,1218.1 1065.19,1218.1 1065.78,1218.1 1066.36,1218.1 1066.95,1218.1 1067.54,1218.1 1068.12,1218.1 1068.71,1218.1 1069.3,1218.1 1069.88,1218.1 1070.47,1218.1 1071.06,1218.1 1071.64,1218.1 1072.23,1218.1 1072.81,1218.1 1073.4,1218.1 1073.99,1218.1 1074.57,1218.1 1075.16,1218.1 1075.75,1218.1 1076.33,1218.1 1076.92,1218.1 1077.51,1218.1 1078.09,1218.1 1078.68,1218.1 1079.26,1218.1 1079.85,1218.1 1080.44,1218.1 1081.02,1218.1 1081.61,1218.1 1082.2,1218.1 1082.78,1218.1 1083.37,1218.1 1083.96,1218.1 1084.54,1218.1 1085.13,1218.1 1085.72,1218.1 1086.3,1218.1 1086.89,1218.1 1087.47,1218.1 1088.06,1218.1 1088.65,1218.1 1089.23,1218.1 1089.82,1218.1 1090.41,1218.1 1090.99,1218.1 1091.58,1218.1 1092.17,1218.1 1092.75,1218.1 1093.34,1218.1 1093.93,1218.1 1094.51,1218.1 1095.1,1218.1 1095.68,1218.1 1096.27,1218.1 1096.86,1218.1 1097.44,1218.1 1098.03,1218.1 1098.62,1218.1 1099.2,1218.1 1099.79,1218.1 1100.38,1218.1 1100.96,1218.1 1101.55,1218.1 1102.14,1218.1 1102.72,1218.1 1103.31,1218.1 1103.89,1218.1 1104.48,1218.1 1105.07,1218.1 1105.65,1218.1 1106.24,1218.1 1106.83,1218.1 1107.41,1218.1 1108,1218.1 1108.59,1218.1 1109.17,1218.1 1109.76,1218.1 1110.34,1218.1 1110.93,1218.1 1111.52,1218.1 1112.1,1218.1 1112.69,1218.1 1113.28,1218.1 1113.86,1218.1 1114.45,1218.1 1115.04,1218.1 1115.62,1218.1 1116.21,1218.1 1116.8,1218.1 1117.38,1218.1 1117.97,1218.1 1118.55,1218.1 1119.14,1218.1 1119.73,1218.1 1120.31,1218.1 1120.9,1218.1 1121.49,1218.1 1122.07,1218.1 1122.66,1218.1 1123.25,1218.1 1123.83,1218.1 1124.42,1218.1 1125.01,1218.1 1125.59,1218.1 1126.18,1218.1 1126.76,1218.1 1127.35,1218.1 1127.94,1218.1 1128.52,1218.1 1129.11,1218.1 1129.7,1218.1 1130.28,1218.1 1130.87,1218.1 1131.46,1218.1 1132.04,1218.1 1132.63,1218.1 1133.21,1218.1 1133.8,1218.1 1134.39,1218.1 1134.97,1218.1 1135.56,1218.1 1136.15,1218.1 1136.73,1218.1 1137.32,1218.1 1137.91,1218.1 1138.49,1218.1 1139.08,1218.1 1139.67,1218.1 1140.25,1218.1 1140.84,1218.1 1141.42,1218.1 1142.01,1218.1 1142.6,1218.1 1143.18,1218.1 1143.77,1218.1 1144.36,1218.1 1144.94,1218.1 1145.53,1218.1 1146.12,1218.1 1146.7,1218.1 1147.29,1218.1 1147.88,1218.1 1148.46,1218.1 1149.05,1218.1 1149.63,1218.1 1150.22,1218.1 1150.81,1218.1 1151.39,1218.1 1151.98,1218.1 1152.57,1218.1 1153.15,1218.1 1153.74,1218.1 1154.33,1218.1 1154.91,1218.1 1155.5,1218.1 1156.09,1218.1 1156.67,1218.1 1157.26,1218.1 1157.84,1218.1 1158.43,1218.1 1159.02,1218.1 1159.6,1218.1 1160.19,1218.1 1160.78,1218.1 1161.36,1218.1 1161.95,1218.1 1162.54,1218.1 1163.12,1218.1 1163.71,1218.1 1164.29,1218.1 1164.88,1218.1 1165.47,1218.1 1166.05,1218.1 1166.64,1218.1 1167.23,1218.1 1167.81,1218.1 1168.4,1218.1 1168.99,1218.1 1169.57,1218.1 1170.16,1218.1 1170.75,1218.1 1171.33,1218.1 1171.92,1218.1 1172.5,1218.1 1173.09,1218.1 1173.68,1218.1 1174.26,1218.1 1174.85,1218.1 1175.44,1218.1 1176.02,1218.1 1176.61,1218.1 1177.2,1218.1 1177.78,1218.1 1178.37,1218.1 1178.96,1218.1 1179.54,1218.1 1180.13,1218.1 1180.71,1218.1 1181.3,1218.1 1181.89,1218.1 1182.47,1218.1 1183.06,1218.1 1183.65,1218.1 1184.23,1218.1 1184.82,1218.1 1185.41,1218.1 1185.99,1218.1 1186.58,1218.1 1187.16,1218.1 1187.75,1218.1 1188.34,1218.1 1188.92,1218.1 1189.51,1218.1 1190.1,1218.1 1190.68,1218.1 1191.27,1218.1 1191.86,1218.1 1192.44,1218.1 1193.03,1218.1 1193.62,1218.1 1194.2,1218.1 1194.79,1218.1 1195.37,1218.1 1195.96,1218.1 1196.55,1218.1 1197.13,1218.1 1197.72,1218.1 1198.31,1218.1 1198.89,1218.1 1199.48,1218.1 1200.07,1218.1 1200.65,1218.1 1201.24,1218.1 1201.83,1218.1 1202.41,1218.1 1203,1218.1 1203.58,1218.1 1204.17,1218.1 1204.76,1218.1 1205.34,1218.1 1205.93,1218.1 1206.52,1218.1 1207.1,1218.1 1207.69,1218.1 1208.28,1218.1 1208.86,1218.1 1209.45,1218.1 1210.03,1218.1 1210.62,1218.1 1211.21,1218.1 1211.79,1218.1 1212.38,1218.1 1212.97,1218.1 1213.55,1218.1 1214.14,1218.1 1214.73,1218.1 1215.31,1218.1 1215.9,1218.1 1216.49,1218.1 1217.07,1218.1 1217.66,1218.1 1218.24,1218.1 1218.83,1218.1 1219.42,1218.1 1220,1218.1 1220.59,1218.1 1221.18,1218.1 1221.76,1218.1 1222.35,1218.1 1222.94,1218.1 1223.52,1218.1 1224.11,1218.1 1224.7,1218.1 1225.28,1218.1 1225.87,1218.1 1226.45,1218.1 1227.04,1218.1 1227.63,1218.1 1228.21,1218.1 1228.8,1218.1 1229.39,1218.1 1229.97,1218.1 1230.56,1218.1 1231.15,1218.1 1231.73,1218.1 1232.32,1218.1 1232.91,1218.1 1233.49,1218.1 1234.08,1218.1 1234.66,1218.1 1235.25,1218.1 1235.84,1218.1 1236.42,1218.1 1237.01,1218.1 1237.6,1218.1 1238.18,1218.1 1238.77,1218.1 1239.36,1218.1 1239.94,1218.1 1240.53,1218.1 1241.11,1218.1 1241.7,1218.1 1242.29,1218.1 1242.87,1218.1 1243.46,1218.1 1244.05,1218.1 1244.63,1218.1 1245.22,1218.1 1245.81,1218.1 1246.39,1218.1 1246.98,1218.1 1247.57,1218.1 1248.15,1218.1 1248.74,1218.1 1249.32,1218.1 1249.91,1218.1 1250.5,1218.1 1251.08,1218.1 1251.67,1218.1 1252.26,1218.1 1252.84,1218.1 1253.43,1218.1 1254.02,1218.1 1254.6,1218.1 1255.19,1218.1 1255.78,1218.1 1256.36,1218.1 1256.95,1218.1 1257.53,1218.1 1258.12,1218.1 1258.71,1218.1 1259.29,1218.1 1259.88,1218.1 1260.47,1218.1 1261.05,1218.1 1261.64,1218.1 1262.23,1218.1 1262.81,1218.1 1263.4,1218.1 1263.98,1218.1 1264.57,1218.1 1265.16,1218.1 1265.74,1218.1 1266.33,1218.1 1266.92,1218.1 1267.5,1218.1 1268.09,1218.1 1268.68,1218.1 1269.26,1218.1 1269.85,1218.1 1270.44,1218.1 1271.02,1218.1 1271.61,1218.1 1272.19,1218.1 1272.78,1218.1 1273.37,1218.1 1273.95,1218.1 1274.54,1218.1 1275.13,1218.1 1275.71,1218.1 1276.3,1218.1 1276.89,1218.1 1277.47,1218.1 1278.06,1218.1 1278.65,1218.1 1279.23,1218.1 1279.82,1218.1 1280.4,1218.1 1280.99,1218.1 1281.58,1218.1 1282.16,1218.1 1282.75,1218.1 1283.34,1218.1 1283.92,1218.1 1284.51,1218.1 1285.1,1218.1 1285.68,1218.1 1286.27,1218.1 1286.86,1218.1 1287.44,1218.1 1288.03,1218.1 1288.61,1218.1 1289.2,1218.1 1289.79,1218.1 1290.37,1218.1 1290.96,1218.1 1291.55,1218.1 1292.13,1218.1 1292.72,1218.1 1293.31,1218.1 1293.89,1218.1 1294.48,1218.1 1295.06,1218.1 1295.65,1218.1 1296.24,1218.1 1296.82,1218.1 1297.41,1218.1 1298,1218.1 1298.58,1218.1 1299.17,1218.1 1299.76,1218.1 1300.34,1218.1 1300.93,1218.1 1301.52,1218.1 1302.1,1218.1 1302.69,1218.1 1303.27,1218.1 1303.86,1218.1 1304.45,1218.1 1305.03,1218.1 1305.62,1218.1 1306.21,1218.1 1306.79,1218.1 1307.38,1218.1 1307.97,1218.1 1308.55,1218.1 1309.14,1218.1 1309.73,1218.1 1310.31,1218.1 1310.9,1218.1 1311.48,1218.1 1312.07,1218.1 1312.66,1218.1 1313.24,1218.1 1313.83,1218.1 1314.42,1218.1 1315,1218.1 1315.59,1218.1 1316.18,1218.1 1316.76,1218.1 1317.35,1218.1 1317.93,1218.1 1318.52,1218.1 1319.11,1218.1 1319.69,1218.1 1320.28,1218.1 1320.87,1218.1 1321.45,1218.1 1322.04,1218.1 1322.63,1218.1 1323.21,1218.1 1323.8,1218.1 1324.39,1218.1 1324.97,1218.1 1325.56,1218.1 1326.14,1218.1 1326.73,1218.1 1327.32,1218.1 1327.9,1218.1 1328.49,1218.1 1329.08,1218.1 1329.66,1218.1 1330.25,1218.1 1330.84,1218.1 1331.42,1218.1 1332.01,1218.1 1332.6,1218.1 1333.18,1218.1 1333.77,1218.1 1334.35,1218.1 1334.94,1218.1 1335.53,1218.1 1336.11,1218.1 1336.7,1218.1 1337.29,1218.1 1337.87,1218.1 1338.46,1218.1 1339.05,1218.1 1339.63,1218.1 1340.22,1218.1 1340.8,1218.1 1341.39,1218.1 1341.98,1218.1 1342.56,1218.1 1343.15,1218.1 1343.74,1218.1 1344.32,1218.1 1344.91,1218.1 1345.5,1218.1 1346.08,1218.1 1346.67,1218.1 1347.26,1218.1 1347.84,1218.1 1348.43,1218.1 1349.01,1218.1 1349.6,1218.1 1350.19,1218.1 1350.77,1218.1 1351.36,1218.1 1351.95,1218.1 1352.53,1218.1 1353.12,1218.1 1353.71,1218.1 1354.29,1218.1 1354.88,1218.1 1355.47,1218.1 1356.05,1218.1 1356.64,1218.1 1357.22,1218.1 1357.81,1218.1 1358.4,1218.1 1358.98,1218.1 1359.57,1218.1 1360.16,1218.1 1360.74,1218.1 1361.33,1218.1 1361.92,1218.1 1362.5,1218.1 1363.09,1218.1 1363.68,1218.1 1364.26,1218.1 1364.85,1218.1 1365.43,1218.1 1366.02,1218.1 1366.61,1218.1 1367.19,1218.1 1367.78,1218.1 1368.37,1218.1 1368.95,1218.1 1369.54,1218.1 1370.13,1218.1 1370.71,1218.1 1371.3,1218.1 1371.88,1218.1 1372.47,1218.1 1373.06,1218.1 1373.64,1218.1 1374.23,1218.1 1374.82,1218.1 1375.4,1218.1 1375.99,1218.1 1376.58,1218.1 1377.16,1218.1 1377.75,1218.1 1378.34,1218.1 1378.92,1218.1 1379.51,1218.1 1380.09,1218.1 1380.68,1218.1 1381.27,1218.1 1381.85,1218.1 1382.44,1218.1 1383.03,1218.1 1383.61,1218.1 1384.2,1218.1 1384.79,1218.1 1385.37,1218.1 1385.96,1218.1 1386.55,1218.1 1387.13,1218.1 1387.72,1218.1 1388.3,1218.1 1388.89,1218.1 1389.48,1218.1 1390.06,1218.1 1390.65,1218.1 1391.24,1218.1 1391.82,1218.1 1392.41,1218.1 1393,1218.1 1393.58,1218.1 1394.17,1218.1 1394.75,1218.1 1395.34,1218.1 1395.93,1218.1 1396.51,1218.1 1397.1,1218.1 1397.69,1218.1 1398.27,1218.1 1398.86,1218.1 1399.45,1218.1 1400.03,1218.1 1400.62,1218.1 1401.21,1218.1 1401.79,1218.1 1402.38,1218.1 1402.96,1218.1 1403.55,1218.1 1404.14,1218.1 1404.72,1218.1 1405.31,1218.1 1405.9,1218.1 1406.48,1218.1 1407.07,1218.1 1407.66,1218.1 1408.24,1218.1 1408.83,1218.1 1409.42,1218.1 1410,1218.1 1410.59,1218.1 1411.17,1218.1 1411.76,1218.1 1412.35,1218.1 1412.93,1218.1 1413.52,1218.1 1414.11,1218.1 1414.69,1218.1 1415.28,1218.1 1415.87,1218.1 1416.45,1218.1 1417.04,1218.1 1417.63,1218.1 1418.21,1218.1 1418.8,1218.1 1419.38,1218.1 1419.97,1218.1 1420.56,1218.1 1421.14,1218.1 1421.73,1218.1 1422.32,1218.1 1422.9,1218.1 1423.49,1218.1 1424.08,1218.1 1424.66,1218.1 1425.25,1218.1 1425.83,1218.1 1426.42,1218.1 1427.01,1218.1 1427.59,1218.1 1428.18,1218.1 1428.77,1218.1 1429.35,1218.1 1429.94,1218.1 1430.53,1218.1 1431.11,1218.1 1431.7,1218.1 1432.29,1218.1 1432.87,1218.1 1433.46,1218.1 1434.04,1218.1 1434.63,1218.1 1435.22,1218.1 1435.8,1218.1 1436.39,1218.1 1436.98,1218.1 1437.56,1218.1 1438.15,1218.1 1438.74,1218.1 1439.32,1218.1 1439.91,1218.1 1440.5,1218.1 1441.08,1218.1 1441.67,1218.1 1442.25,1218.1 1442.84,1218.1 1443.43,1218.1 1444.01,1218.1 1444.6,1218.1 1445.19,1218.1 1445.77,1218.1 1446.36,1218.1 1446.95,1218.1 1447.53,1218.1 1448.12,1218.1 1448.7,1218.1 1449.29,1218.1 1449.88,1218.1 1450.46,1218.1 1451.05,1218.1 1451.64,1218.1 1452.22,1218.1 1452.81,1218.1 1453.4,1218.1 1453.98,1218.1 1454.57,1218.1 1455.16,1218.1 1455.74,1218.1 1456.33,1218.1 1456.91,1218.1 1457.5,1218.1 1458.09,1218.1 1458.67,1218.1 1459.26,1218.1 1459.85,1218.1 1460.43,1218.1 1461.02,1218.1 1461.61,1218.1 1462.19,1218.1 1462.78,1218.1 1463.37,1218.1 1463.95,1218.1 1464.54,1218.1 1465.12,1218.1 1465.71,1218.1 1466.3,1218.1 1466.88,1218.1 1467.47,1218.1 1468.06,1218.1 1468.64,1218.1 1469.23,1218.1 1469.82,1218.1 1470.4,1218.1 1470.99,1218.1 1471.57,1218.1 1472.16,1218.1 1472.75,1218.1 1473.33,1218.1 1473.92,1218.1 1474.51,1218.1 1475.09,1218.1 1475.68,1218.1 1476.27,1218.1 1476.85,1218.1 1477.44,1218.1 1478.03,1218.1 1478.61,1218.1 1479.2,1218.1 1479.78,1218.1 1480.37,1218.1 1480.96,1218.1 1481.54,1218.1 1482.13,1218.1 1482.72,1218.1 1483.3,1218.1 1483.89,1218.1 1484.48,1218.1 1485.06,1218.1 1485.65,1218.1 1486.24,1218.1 1486.82,1218.1 1487.41,1218.1 1487.99,1218.1 1488.58,1218.1 1489.17,1218.1 1489.75,1218.1 1490.34,1218.1 1490.93,1218.1 1491.51,1218.1 1492.1,1218.1 1492.69,1218.1 1493.27,1218.1 1493.86,1218.1 1494.45,1218.1 1495.03,1218.1 1495.62,1218.1 1496.2,1218.1 1496.79,1218.1 1497.38,1218.1 1497.96,1218.1 1498.55,1218.1 1499.14,1218.1 1499.72,1218.1 1500.31,1218.1 1500.9,1218.1 1501.48,1218.1 1502.07,1218.1 1502.65,1218.1 1503.24,1218.1 1503.83,1218.1 1504.41,1218.1 1505,1218.1 1505.59,1218.1 1506.17,1218.1 1506.76,1218.1 1507.35,1218.1 1507.93,1218.1 1508.52,1218.1 1509.11,1218.1 1509.69,1218.1 1510.28,1218.1 1510.86,1218.1 1511.45,1218.1 1512.04,1218.1 1512.62,1218.1 1513.21,1218.1 1513.8,1218.1 1514.38,1218.1 1514.97,1218.1 1515.56,1218.1 1516.14,1218.1 1516.73,1218.1 1517.32,1218.1 1517.9,1218.1 1518.49,1218.1 1519.07,1218.1 1519.66,1218.1 1520.25,1218.1 1520.83,1218.1 1521.42,1218.1 1522.01,1218.1 1522.59,1218.1 1523.18,1218.1 1523.77,1218.1 1524.35,1218.1 1524.94,1218.1 1525.52,1218.1 1526.11,1218.1 1526.7,1218.1 1527.28,1218.1 1527.87,1218.1 1528.46,1218.1 1529.04,1218.1 1529.63,1218.1 1530.22,1218.1 1530.8,1218.1 1531.39,1218.1 1531.98,1218.1 1532.56,1218.1 1533.15,1218.1 1533.73,1218.1 1534.32,1218.1 1534.91,1218.1 1535.49,1218.1 1536.08,1218.1 1536.67,1218.1 1537.25,1218.1 1537.84,1218.1 1538.43,1218.1 1539.01,1218.1 1539.6,1218.1 1540.19,1218.1 1540.77,1218.1 1541.36,1218.1 1541.94,1218.1 1542.53,1218.1 1543.12,1218.1 1543.7,1218.1 1544.29,1218.1 1544.88,1218.1 1545.46,1218.1 1546.05,1218.1 1546.64,1218.1 1547.22,1218.1 1547.81,1218.1 1548.4,1218.1 1548.98,1218.1 1549.57,1218.1 1550.15,1218.1 1550.74,1218.1 1551.33,1218.1 1551.91,1218.1 1552.5,1218.1 1553.09,1218.1 1553.67,1218.1 1554.26,1218.1 1554.85,1218.1 1555.43,1218.1 1556.02,1218.1 1556.6,1218.1 1557.19,1218.1 1557.78,1218.1 1558.36,1218.1 1558.95,1218.1 1559.54,1218.1 1560.12,1218.1 1560.71,1218.1 1561.3,1218.1 1561.88,1218.1 1562.47,1218.1 1563.06,1218.1 1563.64,1218.1 1564.23,1218.1 1564.81,1218.1 1565.4,1218.1 1565.99,1218.1 1566.57,1218.1 1567.16,1218.1 1567.75,1218.1 1568.33,1218.1 1568.92,1218.1 1569.51,1218.1 1570.09,1218.1 1570.68,1218.1 1571.27,1218.1 1571.85,1218.1 1572.44,1218.1 1573.02,1218.1 1573.61,1218.1 1574.2,1218.1 1574.78,1218.1 1575.37,1218.1 1575.96,1218.1 1576.54,1218.1 1577.13,1218.1 1577.72,1218.1 1578.3,1218.1 1578.89,1218.1 1579.47,1218.1 1580.06,1218.1 1580.65,1218.1 1581.23,1218.1 1581.82,1218.1 1582.41,1218.1 1582.99,1218.1 1583.58,1218.1 1584.17,1218.1 1584.75,1218.1 1585.34,1218.1 1585.93,1218.1 1586.51,1218.1 1587.1,1218.1 1587.68,1218.1 1588.27,1218.1 1588.86,1218.1 1589.44,1218.1 1590.03,1218.1 1590.62,1218.1 1591.2,1218.1 1591.79,1218.1 1592.38,1218.1 1592.96,1218.1 1593.55,1218.1 1594.14,1218.1 1594.72,1218.1 1595.31,1218.1 1595.89,1218.1 1596.48,1218.1 1597.07,1218.1 1597.65,1218.1 1598.24,1218.1 1598.83,1218.1 1599.41,1218.1 1600,1218.1 1600.59,1218.1 1601.17,1218.1 1601.76,1218.1 1602.34,1218.1 1602.93,1218.1 1603.52,1218.1 1604.1,1218.1 1604.69,1218.1 1605.28,1218.1 1605.86,1218.1 1606.45,1218.1 1607.04,1218.1 1607.62,1218.1 1608.21,1218.1 1608.8,1218.1 1609.38,1218.1 1609.97,1218.1 1610.55,1218.1 1611.14,1218.1 1611.73,1218.1 1612.31,1218.1 1612.9,1218.1 1613.49,1218.1 1614.07,1218.1 1614.66,1218.1 1615.25,1218.1 1615.83,1218.1 1616.42,1218.1 1617.01,1218.1 1617.59,1218.1 1618.18,1218.1 1618.76,1218.1 1619.35,1218.1 1619.94,1218.1 1620.52,1218.1 1621.11,1218.1 1621.7,1218.1 1622.28,1218.1 1622.87,1218.1 1623.46,1218.1 1624.04,1218.1 1624.63,1218.1 1625.22,1218.1 1625.8,1218.1 1626.39,1218.1 1626.97,1218.1 1627.56,1218.1 1628.15,1218.1 1628.73,1218.1 1629.32,1218.1 1629.91,1218.1 1630.49,1218.1 1631.08,1218.1 1631.67,1218.1 1632.25,1218.1 1632.84,1218.1 1633.42,1218.1 1634.01,1218.1 1634.6,1218.1 1635.18,1218.1 1635.77,1218.1 1636.36,1218.1 1636.94,1218.1 1637.53,1218.1 1638.12,1218.1 1638.7,1218.1 1639.29,1218.1 1639.88,1218.1 1640.46,1218.1 1641.05,1218.1 1641.63,1218.1 1642.22,1218.1 1642.81,1218.1 1643.39,1218.1 1643.98,1218.1 1644.57,1218.1 1645.15,1218.1 1645.74,1218.1 1646.33,1218.1 1646.91,1218.1 1647.5,1218.1 1648.09,1218.1 1648.67,1218.1 1649.26,1218.1 1649.84,1218.1 1650.43,1218.1 1651.02,1218.1 1651.6,1218.1 1652.19,1218.1 1652.78,1218.1 1653.36,1218.1 1653.95,1218.1 1654.54,1218.1 1655.12,1218.1 1655.71,1218.1 1656.29,1218.1 1656.88,1218.1 1657.47,1218.1 1658.05,1218.1 1658.64,1218.1 1659.23,1218.1 1659.81,1218.1 1660.4,1218.1 1660.99,1218.1 1661.57,1218.1 1662.16,1218.1 1662.75,1218.1 1663.33,1218.1 1663.92,1218.1 1664.5,1218.1 1665.09,1218.1 1665.68,1218.1 1666.26,1218.1 1666.85,1218.1 1667.44,1218.1 1668.02,1218.1 1668.61,1218.1 1669.2,1218.1 1669.78,1218.1 1670.37,1218.1 1670.96,1218.1 1671.54,1218.1 1672.13,1218.1 1672.71,1218.1 1673.3,1218.1 1673.89,1218.1 1674.47,1218.1 1675.06,1218.1 1675.65,1218.1 1676.23,1218.1 1676.82,1218.1 1677.41,1218.1 1677.99,1218.1 1678.58,1218.1 1679.17,1218.1 1679.75,1218.1 1680.34,1218.1 1680.92,1218.1 1681.51,1218.1 1682.1,1218.1 1682.68,1218.1 1683.27,1218.1 1683.86,1218.1 1684.44,1218.1 1685.03,1218.1 1685.62,1218.1 1686.2,1218.1 1686.79,1218.1 1687.37,1218.1 1687.96,1218.1 1688.55,1218.1 1689.13,1218.1 1689.72,1218.1 1690.31,1218.1 1690.89,1218.1 1691.48,1218.1 1692.07,1218.1 1692.65,1218.1 1693.24,1218.1 1693.83,1218.1 1694.41,1218.1 1695,1218.1 1695.58,1218.1 1696.17,1218.1 1696.76,1218.1 1697.34,1218.1 1697.93,1218.1 1698.52,1218.1 1699.1,1218.1 1699.69,1218.1 1700.28,1218.1 1700.86,1218.1 1701.45,1218.1 1702.04,1218.1 1702.62,1218.1 1703.21,1218.1 1703.79,1218.1 1704.38,1218.1 1704.97,1218.1 1705.55,1218.1 1706.14,1218.1 1706.73,1218.1 1707.31,1218.1 1707.9,1218.1 1708.49,1218.1 1709.07,1218.1 1709.66,1218.1 1710.24,1218.1 1710.83,1218.1 1711.42,1218.1 1712,1218.1 1712.59,1218.1 1713.18,1218.1 1713.76,1218.1 1714.35,1218.1 1714.94,1218.1 1715.52,1218.1 1716.11,1218.1 1716.7,1218.1 1717.28,1218.1 1717.87,1218.1 1718.45,1218.1 1719.04,1218.1 1719.63,1218.1 1720.21,1218.1 1720.8,1218.1 1721.39,1218.1 1721.97,1218.1 1722.56,1218.1 1723.15,1218.1 1723.73,1218.1 1724.32,1218.1 1724.91,1218.1 1725.49,1218.1 1726.08,1218.1 1726.66,1218.1 1727.25,1218.1 1727.84,1218.1 1728.42,1218.1 1729.01,1218.1 1729.6,1218.1 1730.18,1218.1 1730.77,1218.1 1731.36,1218.1 1731.94,1218.1 1732.53,1218.1 1733.11,1218.1 1733.7,1218.1 1734.29,1218.1 1734.87,1218.1 1735.46,1218.1 1736.05,1218.1 1736.63,1218.1 1737.22,1218.1 1737.81,1218.1 1738.39,1218.1 1738.98,1218.1 1739.57,1218.1 1740.15,1218.1 1740.74,1218.1 1741.32,1218.1 1741.91,1218.1 1742.5,1218.1 1743.08,1218.1 1743.67,1218.1 1744.26,1218.1 1744.84,1218.1 1745.43,1218.1 1746.02,1218.1 1746.6,1218.1 1747.19,1218.1 1747.78,1218.1 1748.36,1218.1 1748.95,1218.1 1749.53,1218.1 1750.12,1218.1 1750.71,1218.1 1751.29,1218.1 1751.88,1218.1 1752.47,1218.1 1753.05,1218.1 1753.64,1218.1 1754.23,1218.1 1754.81,1218.1 1755.4,1218.1 1755.99,1218.1 1756.57,1218.1 1757.16,1218.1 1757.74,1218.1 1758.33,1218.1 1758.92,1218.1 1759.5,1218.1 1760.09,1218.1 1760.68,1218.1 1761.26,1218.1 1761.85,1218.1 1762.44,1218.1 1763.02,1218.1 1763.61,1218.1 1764.19,1218.1 1764.78,1218.1 1765.37,1218.1 1765.95,1218.1 1766.54,1218.1 1767.13,1218.1 1767.71,1218.1 1768.3,1218.1 1768.89,1218.1 1769.47,1218.1 1770.06,1218.1 1770.65,1218.1 1771.23,1218.1 1771.82,1218.1 1772.4,1218.1 1772.99,1218.1 1773.58,1218.1 1774.16,1218.1 1774.75,1218.1 1775.34,1218.1 1775.92,1218.1 1776.51,1218.1 1777.1,1218.1 1777.68,1218.1 1778.27,1218.1 1778.86,1218.1 1779.44,1218.1 1780.03,1218.1 1780.61,1218.1 1781.2,1218.1 1781.79,1218.1 1782.37,1218.1 1782.96,1218.1 1783.55,1218.1 1784.13,1218.1 1784.72,1218.1 1785.31,1218.1 1785.89,1218.1 1786.48,1218.1 1787.06,1218.1 1787.65,1218.1 1788.24,1218.1 1788.82,1218.1 1789.41,1218.1 1790,1218.1 1790.58,1218.1 1791.17,1218.1 1791.76,1218.1 1792.34,1218.1 1792.93,1218.1 1793.52,1218.1 1794.1,1218.1 1794.69,1218.1 1795.27,1218.1 1795.86,1218.1 1796.45,1218.1 1797.03,1218.1 1797.62,1218.1 1798.21,1218.1 1798.79,1218.1 1799.38,1218.1 1799.97,1218.1 1800.55,1218.1 1801.14,1218.1 1801.73,1218.1 1802.31,1218.1 1802.9,1218.1 1803.48,1218.1 1804.07,1218.1 1804.66,1218.1 1805.24,1218.1 1805.83,1218.1 1806.42,1218.1 1807,1218.1 1807.59,1218.1 1808.18,1218.1 1808.76,1218.1 1809.35,1218.1 1809.94,1218.1 1810.52,1218.1 1811.11,1218.1 1811.69,1218.1 1812.28,1218.1 1812.87,1218.1 1813.45,1218.1 1814.04,1218.1 1814.63,1218.1 1815.21,1218.1 1815.8,1218.1 1816.39,1218.1 1816.97,1218.1 1817.56,1218.1 1818.14,1218.1 1818.73,1218.1 1819.32,1218.1 1819.9,1218.1 1820.49,1218.1 1821.08,1218.1 1821.66,1218.1 1822.25,1218.1 1822.84,1218.1 1823.42,1218.1 1824.01,1218.1 1824.6,1218.1 1825.18,1218.1 1825.77,1218.1 1826.35,1218.1 1826.94,1218.1 1827.53,1218.1 1828.11,1218.1 1828.7,1218.1 1829.29,1218.1 1829.87,1218.1 1830.46,1218.1 1831.05,1218.1 1831.63,1218.1 1832.22,1218.1 1832.81,1218.1 1833.39,1218.1 1833.98,1218.1 1834.56,1218.1 1835.15,1218.1 1835.74,1218.1 1836.32,1218.1 1836.91,1218.1 1837.5,1218.1 1838.08,1218.1 1838.67,1218.1 1839.26,1218.1 1839.84,1218.1 1840.43,1218.1 1841.01,1218.1 1841.6,1218.1 1842.19,1218.1 1842.77,1218.1 1843.36,1218.1 1843.95,1218.1 1844.53,1218.1 1845.12,1218.1 1845.71,1218.1 1846.29,1218.1 1846.88,1218.1 1847.47,1218.1 1848.05,1218.1 1848.64,1218.1 1849.22,1218.1 1849.81,1218.1 1850.4,1218.1 1850.98,1218.1 1851.57,1218.1 1852.16,1218.1 1852.74,1218.1 1853.33,1218.1 1853.92,1218.1 1854.5,1218.1 1855.09,1218.1 1855.68,1218.1 1856.26,1218.1 1856.85,1218.1 1857.43,1218.1 1858.02,1218.1 1858.61,1218.1 1859.19,1218.1 1859.78,1218.1 1860.37,1218.1 1860.95,1218.1 1861.54,1218.1 1862.13,1218.1 1862.71,1218.1 1863.3,1218.1 1863.88,1218.1 1864.47,1218.1 1865.06,1218.1 1865.64,1218.1 1866.23,1218.1 1866.82,1218.1 1867.4,1218.1 1867.99,1218.1 1868.58,1218.1 1869.16,1218.1 1869.75,1218.1 1870.34,1218.1 1870.92,1218.1 1871.51,1218.1 1872.09,1218.1 1872.68,1218.1 1873.27,1218.1 1873.85,1218.1 1874.44,1218.1 1875.03,1218.1 1875.61,1218.1 1876.2,1218.1 1876.79,1218.1 1877.37,1218.1 1877.96,1218.1 1878.55,1218.1 1879.13,1218.1 1879.72,1218.1 1880.3,1218.1 1880.89,1218.1 1881.48,1218.1 1882.06,1218.1 1882.65,1218.1 1883.24,1218.1 1883.82,1218.1 1884.41,1218.1 1885,1218.1 1885.58,1218.1 1886.17,1218.1 1886.76,1218.1 1887.34,1218.1 1887.93,1218.1 1888.51,1218.1 1889.1,1218.1 1889.69,1218.1 1890.27,1218.1 1890.86,1218.1 1891.45,1218.1 1892.03,1218.1 1892.62,1218.1 1893.21,1218.1 1893.79,1218.1 1894.38,1218.1 1894.96,1218.1 1895.55,1218.1 1896.14,1218.1 1896.72,1218.1 1897.31,1218.1 1897.9,1218.1 1898.48,1218.1 1899.07,1218.1 1899.66,1218.1 1900.24,1218.1 1900.83,1218.1 1901.42,1218.1 1902,1218.1 1902.59,1218.1 1903.17,1218.1 1903.76,1218.1 1904.35,1218.1 1904.93,1218.1 1905.52,1218.1 1906.11,1218.1 1906.69,1218.1 1907.28,1218.1 1907.87,1218.1 1908.45,1218.1 1909.04,1218.1 1909.63,1218.1 1910.21,1218.1 1910.8,1218.1 1911.38,1218.1 1911.97,1218.1 1912.56,1218.1 1913.14,1218.1 1913.73,1218.1 1914.32,1218.1 1914.9,1218.1 1915.49,1218.1 1916.08,1218.1 1916.66,1218.1 1917.25,1218.1 1917.83,1218.1 1918.42,1218.1 1919.01,1218.1 1919.59,1218.1 1920.18,1218.1 1920.77,1218.1 1921.35,1218.1 1921.94,1218.1 1922.53,1218.1 1923.11,1218.1 1923.7,1218.1 1924.29,1218.1 1924.87,1218.1 1925.46,1218.1 1926.04,1218.1 1926.63,1218.1 1927.22,1218.1 1927.8,1218.1 1928.39,1218.1 1928.98,1218.1 1929.56,1218.1 1930.15,1218.1 1930.74,1218.1 1931.32,1218.1 1931.91,1218.1 1932.5,1218.1 1933.08,1218.1 1933.67,1218.1 1934.25,1218.1 1934.84,1218.1 1935.43,1218.1 1936.01,1218.1 1936.6,1218.1 1937.19,1218.1 1937.77,1218.1 1938.36,1218.1 1938.95,1218.1 1939.53,1218.1 1940.12,1218.1 1940.71,1218.1 1941.29,1218.1 1941.88,1218.1 1942.46,1218.1 1943.05,1218.1 1943.64,1218.1 1944.22,1218.1 1944.81,1218.1 1945.4,1218.1 1945.98,1218.1 1946.57,1218.1 1947.16,1218.1 1947.74,1218.1 1948.33,1218.1 1948.91,1218.1 1949.5,1218.1 1950.09,1218.1 1950.67,1218.1 1951.26,1218.1 1951.85,1218.1 1952.43,1218.1 1953.02,1218.1 1953.61,1218.1 1954.19,1218.1 1954.78,1218.1 1955.37,1218.1 1955.95,1218.1 1956.54,1218.1 1957.12,1218.1 1957.71,1218.1 1958.3,1218.1 1958.88,1218.1 1959.47,1218.1 1960.06,1218.1 1960.64,1218.1 1961.23,1218.1 1961.82,1218.1 1962.4,1218.1 1962.99,1218.1 1963.58,1218.1 1964.16,1218.1 1964.75,1218.1 1965.33,1218.1 1965.92,1218.1 1966.51,1218.1 1967.09,1218.1 1967.68,1218.1 1968.27,1218.1 1968.85,1218.1 1969.44,1218.1 1970.03,1218.1 1970.61,1218.1 1971.2,1218.1 1971.78,1218.1 1972.37,1218.1 1972.96,1218.1 1973.54,1218.1 1974.13,1218.1 1974.72,1218.1 1975.3,1218.1 1975.89,1218.1 1976.48,1218.1 1977.06,1218.1 1977.65,1218.1 1978.24,1218.1 1978.82,1218.1 1979.41,1218.1 1979.99,1218.1 1980.58,1218.1 1981.17,1218.1 1981.75,1218.1 1982.34,1218.1 1982.93,1218.1 1983.51,1218.1 1984.1,1218.1 1984.69,1218.1 1985.27,1218.1 1985.86,1218.1 1986.45,1218.1 1987.03,1218.1 1987.62,1218.1 1988.2,1218.1 1988.79,1218.1 1989.38,1218.1 1989.96,1218.1 1990.55,1218.1 1991.14,1218.1 1991.72,1218.1 1992.31,1218.1 1992.9,1218.1 1993.48,1218.1 1994.07,1218.1 1994.65,1218.1 1995.24,1218.1 1995.83,1218.1 1996.41,1218.1 1997,1218.1 1997.59,1218.1 1998.17,1218.1 1998.76,1218.1 1999.35,1218.1 1999.93,1218.1 2000.52,1218.1 2001.11,1218.1 2001.69,1218.1 2002.28,1218.1 2002.86,1218.1 2003.45,1218.1 2004.04,1218.1 2004.62,1218.1 2005.21,1218.1 2005.8,1218.1 2006.38,1218.1 2006.97,1218.1 2007.56,1218.1 2008.14,1218.1 2008.73,1218.1 2009.32,1218.1 2009.9,1218.1 2010.49,1218.1 2011.07,1218.1 2011.66,1218.1 2012.25,1218.1 2012.83,1218.1 2013.42,1218.1 2014.01,1218.1 2014.59,1218.1 2015.18,1218.1 2015.77,1218.1 2016.35,1218.1 2016.94,1218.1 2017.53,1218.1 2018.11,1218.1 2018.7,1218.1 2019.28,1218.1 2019.87,1218.1 2020.46,1218.1 2021.04,1218.1 2021.63,1218.1 2022.22,1218.1 2022.8,1218.1 2023.39,1218.1 2023.98,1218.1 2024.56,1218.1 2025.15,1218.1 2025.73,1218.1 2026.32,1218.1 2026.91,1218.1 2027.49,1218.1 2028.08,1218.1 2028.67,1218.1 2029.25,1218.1 2029.84,1218.1 2030.43,1218.1 2031.01,1218.1 2031.6,1218.1 2032.19,1218.1 2032.77,1218.1 2033.36,1218.1 2033.94,1218.1 2034.53,1218.1 2035.12,1218.1 2035.7,1218.1 2036.29,1218.1 2036.88,1218.1 2037.46,1218.1 2038.05,1218.1 2038.64,1218.1 2039.22,1218.1 2039.81,1218.1 2040.4,1218.1 2040.98,1218.1 2041.57,1218.1 2042.15,1218.1 2042.74,1218.1 2043.33,1218.1 2043.91,1218.1 2044.5,1218.1 2045.09,1218.1 2045.67,1218.1 2046.26,1218.1 2046.85,1218.1 2047.43,1218.1 2048.02,1218.1 2048.6,1218.1 2049.19,1218.1 2049.78,1218.1 2050.36,1218.1 2050.95,1218.1 2051.54,1218.1 2052.12,1218.1 2052.71,1218.1 2053.3,1218.1 2053.88,1218.1 2054.47,1218.1 2055.06,1218.1 2055.64,1218.1 2056.23,1218.1 2056.81,1218.1 2057.4,1218.1 2057.99,1218.1 2058.57,1218.1 2059.16,1218.1 2059.75,1218.1 2060.33,1218.1 2060.92,1218.1 2061.51,1218.1 2062.09,1218.1 2062.68,1218.1 2063.27,1218.1 2063.85,1218.1 2064.44,1218.1 2065.02,1218.1 2065.61,1218.1 2066.2,1218.1 2066.78,1218.1 2067.37,1218.1 2067.96,1218.1 2068.54,1218.1 2069.13,1218.1 2069.72,1218.1 2070.3,1218.1 2070.89,1218.1 2071.48,1218.1 2072.06,1218.1 2072.65,1218.1 2073.23,1218.1 2073.82,1218.1 2074.41,1218.1 2074.99,1218.1 2075.58,1218.1 2076.17,1218.1 2076.75,1218.1 2077.34,1218.1 2077.93,1218.1 2078.51,1218.1 2079.1,1218.1 2079.68,1218.1 2080.27,1218.1 2080.86,1218.1 2081.44,1218.1 2082.03,1218.1 2082.62,1218.1 2083.2,1218.1 2083.79,1218.1 2084.38,1218.1 2084.96,1218.1 2085.55,1218.1 2086.14,1218.1 2086.72,1218.1 2087.31,1218.1 2087.89,1218.1 2088.48,1218.1 2089.07,1218.1 2089.65,1218.1 2090.24,1218.1 2090.83,1218.1 2091.41,1218.1 2092,1218.1 2092.59,1218.1 2093.17,1218.1 2093.76,1218.1 2094.35,1218.1 2094.93,1218.1 2095.52,1218.1 2096.1,1218.1 2096.69,1218.1 2097.28,1218.1 2097.86,1218.1 2098.45,1218.1 2099.04,1218.1 2099.62,1218.1 2100.21,1218.1 2100.8,1218.1 2101.38,1218.1 2101.97,1218.1 2102.55,1218.1 2103.14,1218.1 2103.73,1218.1 2104.31,1218.1 2104.9,1218.1 2105.49,1218.1 2106.07,1218.1 2106.66,1218.1 2107.25,1218.1 2107.83,1218.1 2108.42,1218.1 2109.01,1218.1 2109.59,1218.1 2110.18,1218.1 2110.76,1218.1 2111.35,1218.1 2111.94,1218.1 2112.52,1218.1 2113.11,1218.1 2113.7,1218.1 2114.28,1218.1 2114.87,1218.1 2115.46,1218.1 2116.04,1218.1 2116.63,1218.1 2117.22,1218.1 2117.8,1218.1 2118.39,1218.1 2118.97,1218.1 2119.56,1218.1 2120.15,1218.1 2120.73,1218.1 2121.32,1218.1 2121.91,1218.1 2122.49,1218.1 2123.08,1218.1 2123.67,1218.1 2124.25,1218.1 2124.84,1218.1 2125.42,1218.1 2126.01,1218.1 2126.6,1218.1 2127.18,1218.1 2127.77,1218.1 2128.36,1218.1 2128.94,1218.1 2129.53,1218.1 2130.12,1218.1 2130.7,1218.1 2131.29,1218.1 2131.88,1218.1 2132.46,1218.1 2133.05,1218.1 2133.63,1218.1 2134.22,1218.1 2134.81,1218.1 2135.39,1218.1 2135.98,1218.1 2136.57,1218.1 2137.15,1218.1 2137.74,1218.1 2138.33,1218.1 2138.91,1218.1 2139.5,1218.1 2140.09,1218.1 2140.67,1218.1 2141.26,1218.1 2141.84,1218.1 2142.43,1218.1 2143.02,1218.1 2143.6,1218.1 2144.19,1218.1 2144.78,1218.1 2145.36,1218.1 2145.95,1218.1 2146.54,1218.1 2147.12,1218.1 2147.71,1218.1 2148.3,1218.1 2148.88,1218.1 2149.47,1218.1 2150.05,1218.1 2150.64,1218.1 2151.23,1218.1 2151.81,1218.1 2152.4,1218.1 2152.99,1218.1 2153.57,1218.1 2154.16,1218.1 2154.75,1218.1 2155.33,1218.1 2155.92,1218.1 2156.5,1218.1 2157.09,1218.1 2157.68,1218.1 2158.26,1218.1 \"/>\n<polyline clip-path=\"url(#clip532)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1562.77,1201.25 1398.05,899.083 \"/>\n<polyline clip-path=\"url(#clip532)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1234.56 985.439,1201.25 2158.26,1201.25 2158.26,1234.56 985.439,1234.56 \"/>\n<path clip-path=\"url(#clip530)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip530)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip530)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip530)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip530)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip530)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip530)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip530)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip533\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip533)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip533)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip533)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip533)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip533)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip530)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip530)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip530)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip530)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip530)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip530)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip530)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip533)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip533)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip533)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip533)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip533)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip530)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip530)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip530)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip530)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip530)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip530)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip530)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip530)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip533)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-1577.5 161.555,-2922.08 162.114,-4155.78 162.673,-5286.05 163.232,-6319.78 163.792,-7263.33 164.351,-8122.62 164.91,-8903.13 165.469,-8354.17 166.029,-9052.18 166.588,-9682.55 167.147,-10249.6 167.706,-10757.6 168.266,-11210.1 168.825,-11611 169.384,-11946.3 169.943,-11471.6 170.503,-11768.4 171.062,-12024.4 171.621,-12231.7 172.18,-12414.6 172.74,-12007.1 173.299,-12136.3 173.858,-11302.2 174.417,-10978 174.977,-10679.8 175.536,-10758.6 176.095,-10459.8 176.655,-10502.1 177.214,-10508.7 177.773,-10226.5 178.332,-10204.9 178.892,-10170 179.451,-9885.85 180.01,-9826.12 180.569,-9762.14 181.129,-9488.59 181.688,-9228.53 182.247,-8980.79 182.806,-8752.59 183.366,-8375.07 183.925,-8311.55 184.484,-7971.29 185.043,-7900.74 185.603,-7712.41 186.162,-7401.11 186.721,-7339.15 187.28,-7161.86 187.84,-6987.48 188.399,-6634.28 188.958,-6575.88 189.517,-6241.85 190.077,-6161.32 190.636,-6071.07 191.195,-5830.92 191.754,-5741.67 192.314,-5589.05 192.873,-5362.7 193.432,-5281.26 193.991,-5126.75 194.551,-4979.47 195.11,-4658.58 195.669,-4578.37 196.228,-4499.97 196.788,-4363.26 197.347,-4232.75 197.906,-3953.38 198.465,-3732.66 199.025,-3624.12 199.584,-3561.49 200.143,-3446.89 200.702,-3296.6 201.262,-3199.53 201.821,-3018.02 202.38,-2880.45 202.939,-2783.23 203.499,-2686.09 204.058,-2553.6 204.617,-2500.67 205.176,-2409.41 205.736,-2317.48 206.295,-2259.54 206.854,-2170.47 207.413,-2051.21 207.973,-1836.95 208.532,-1728.93 209.091,-1651.92 209.65,-1607.09 210.21,-1504.09 210.769,-1432.97 211.328,-1361.39 211.887,-1264.96 212.447,-1146.26 213.006,-1090.57 213.565,-1033.77 214.124,-950.124 214.684,-919.374 215.243,-890.139 215.802,-857.48 216.361,-823.773 216.921,-764.401 217.48,-656.648 218.039,-529.133 218.598,-453.738 219.158,-426.404 219.717,-375.465 220.276,-327.983 220.835,-259.14 221.395,-236.464 221.954,-127.075 222.513,-110.79 223.072,-92.3781 223.632,-69.7952 224.191,-50.481 224.75,-6.36883 225.309,97.7235 225.869,133.669 226.428,162.846 226.987,198.72 227.546,275.591 228.106,285.049 228.665,358.841 229.224,365.587 229.783,393.993 230.343,408.414 230.902,412.556 231.461,437.608 232.02,443.754 232.58,470.935 233.139,477.189 233.698,505.245 234.257,533.849 234.817,579.841 235.376,585.222 235.935,607.616 236.494,632.548 237.054,615.516 237.613,621.208 238.172,627.857 238.731,633.153 239.291,658.496 239.85,685.24 240.409,692.998 240.968,717.81 241.528,740.268 242.087,742.854 242.646,800.04 243.205,784.715 243.765,781.858 244.324,803.187 244.883,838.707 245.442,875.284 246.002,871.742 246.561,924.372 247.12,934.932 247.679,896.303 248.239,910.942 248.798,959.592 249.357,972.144 249.916,1005.51 250.476,1001.53 251.035,944.206 251.594,940.749 252.153,935.866 252.713,970.638 253.272,967.896 253.831,982.566 254.39,976.319 254.95,936.989 255.509,947.456 256.068,947.603 256.627,944.403 257.187,925.292 257.746,958.498 258.305,972.778 258.864,966.244 259.424,960.928 259.983,958.963 260.542,955.319 261.101,956.912 261.661,970.377 262.22,999.184 262.779,1013.52 263.338,1027.02 263.898,1020.52 264.457,979.231 265.016,973.789 265.575,974.451 266.135,1025.73 266.694,1072.28 267.253,1057.83 267.812,1050.25 268.372,1040.88 268.931,1053.82 269.49,1064.79 270.049,1041.86 270.609,1023.64 271.168,1053.45 271.727,1062.41 272.286,1068.81 272.846,1093.18 273.405,1086.26 273.964,1023.1 274.523,1053.78 275.083,1078.83 275.642,1071.92 276.201,1082.68 276.76,1108.66 277.32,1100.83 277.879,1059.77 278.438,1083.87 278.997,1076.44 279.557,1082.74 280.116,1093.74 280.675,1066.45 281.234,1022.72 281.794,1050.09 282.353,1055.18 282.912,1050.28 283.471,1043.05 284.031,1020.29 284.59,1015.13 285.149,1011.53 285.708,976.404 286.268,959.049 286.827,953.8 287.386,968.672 287.945,983.009 288.505,960.605 289.064,974.097 289.623,971.16 290.182,952.32 290.742,952.353 291.301,934.909 291.86,971.074 292.419,984.265 292.979,994.881 293.538,1006.52 294.097,968.868 294.656,967.862 295.216,949.068 295.775,946.786 296.334,943.147 296.893,938.099 297.453,922.527 298.012,953.662 298.571,999.006 299.13,995.614 299.69,977.286 300.249,1005.42 300.808,1001.79 301.368,993.779 301.927,1022.06 302.486,1016.09 303.045,1008.93 303.605,1003.28 304.164,1008.72 304.723,1051.19 305.282,1057.3 305.842,1035.1 306.401,1048.3 306.96,1054.13 307.519,1080.03 308.079,1084.22 308.638,1046.57 309.197,1051.56 309.756,1089.69 310.316,1047.21 310.875,1055.08 311.434,1046.17 311.993,1072.64 312.553,1061.38 313.112,1034.79 313.671,1055.42 314.23,1026.21 314.79,1035.7 315.349,1023.77 315.908,997.093 316.467,1008.4 317.027,1017.41 317.586,1027.5 318.145,1036.57 318.704,1027.99 319.264,1038.46 319.823,1011.57 320.382,1053.57 320.941,1044.28 321.501,1034.4 322.06,1010.83 322.619,973.857 323.178,971.751 323.738,965.699 324.297,944.235 324.856,956.756 325.415,987.356 325.975,1045.35 326.534,1069 327.093,1087.47 327.652,1090.11 328.212,1076.37 328.771,1047.03 329.33,1066.7 329.889,1054.21 330.449,1076.49 331.008,1092.09 331.567,1064.71 332.126,1051.98 332.686,1089.96 333.245,1093.62 333.804,1047.21 334.363,1052.81 334.923,1059.65 335.482,1044.77 336.041,1031.64 336.6,1023.11 337.16,1012.4 337.719,1002.3 338.278,992.668 338.837,1000.98 339.397,977.652 339.956,988.364 340.515,981.098 341.074,989.77 341.634,963.783 342.193,954.943 342.752,950.267 343.311,963.53 343.871,943.156 344.43,952.769 344.989,930.227 345.548,940.564 346.108,920.094 346.667,962.93 347.226,991.685 347.785,995.883 348.345,985.521 348.904,973.873 349.463,935.312 350.022,912.978 350.582,857.173 351.141,854.702 351.7,841.353 352.259,819.949 352.819,787.501 353.378,788.632 353.937,789.997 354.496,792.992 355.056,808.11 355.615,790.401 356.174,791.977 356.733,793.456 357.293,794.758 357.852,745.377 358.411,744.352 358.97,763.645 359.53,749.464 360.089,767.869 360.648,803.245 361.207,821.353 361.767,855.904 362.326,855.902 362.885,870.331 363.444,866.915 364.004,811.413 364.563,827.315 365.122,807.514 365.681,792.09 366.241,808.629 366.8,790.264 367.359,759.529 367.918,742.475 368.478,749.416 369.037,754.868 369.596,805.683 370.155,804.614 370.715,820.002 371.274,834.317 371.833,816.409 372.392,814.373 372.952,831.574 373.511,861.533 374.07,887.35 374.629,866.225 375.189,878.714 375.748,872.124 376.307,870.832 376.866,851.344 377.426,879.79 377.985,874.895 378.544,838.996 379.103,821.591 379.663,852.265 380.222,848.447 380.781,844.582 381.34,840.39 381.9,839.5 382.459,855.11 383.018,836.487 383.577,807.442 384.137,790.467 384.696,810.252 385.255,759.806 385.814,760.779 386.374,778.872 386.933,779.16 387.492,795.169 388.051,775.751 388.611,777.902 389.17,794.694 389.729,761.706 390.288,760.831 390.848,782.021 391.407,782.915 391.966,817.296 392.525,798.669 393.085,799.037 393.644,796.864 394.203,779.581 394.762,795.014 395.322,823.453 395.881,820.307 396.44,817.123 396.999,812.325 397.559,876.813 398.118,872.809 398.677,900.285 399.236,911.116 399.796,938.968 400.355,945.368 400.914,984.567 401.473,959.543 402.033,950.873 402.592,910.651 403.151,919.402 403.71,944.594 404.27,935.03 404.829,926.63 405.388,919.21 405.947,911.174 406.507,922.371 407.066,915.502 407.625,923.894 408.184,884.858 408.744,911.985 409.303,904.396 409.862,878.87 410.421,888.193 410.981,880.901 411.54,892.499 412.099,918.205 412.658,893.071 413.218,903.281 413.777,879.419 414.336,909.352 414.895,900.787 415.455,898.593 416.014,863.74 416.573,858.205 417.132,838.269 417.692,816.96 418.251,815.55 418.81,827.309 419.369,825.515 419.929,821.528 420.488,831.59 421.047,794.028 421.606,794.725 422.166,791.802 422.725,806.495 423.284,822.587 423.843,772.51 424.403,787.168 424.962,787.52 425.521,783.731 426.08,784.601 426.64,801.135 427.199,785.227 427.758,783.011 428.318,782.164 428.877,752.744 429.436,750.413 429.995,748.791 430.555,780.462 431.114,810.692 431.673,806.012 432.232,805.253 432.792,771.387 433.351,773.226 433.91,786.667 434.469,767.824 435.029,764.525 435.588,764.605 436.147,765.44 436.706,761.789 437.266,761.601 437.825,761.049 438.384,777.246 438.943,793.102 439.503,791.534 440.062,740.298 440.621,756.176 441.18,739.503 441.74,707.899 442.299,725.736 442.858,760.722 443.417,741.613 443.977,755.559 444.536,724.595 445.095,693.752 445.654,697.135 446.214,714.702 446.773,732.308 447.332,714.988 447.891,750.427 448.451,751.838 449.01,770.738 449.569,753.67 450.128,753.53 450.688,770.361 451.247,753.3 451.806,753.04 452.365,754.57 452.925,770.588 453.484,787.128 454.043,781.243 454.602,781.537 455.162,793.159 455.721,791.578 456.28,791.628 456.839,793.725 457.399,808.866 457.958,808.68 458.517,787.508 459.076,802.306 459.636,816.141 460.195,844.198 460.754,871.159 461.313,849.171 461.873,797.108 462.432,779.637 462.991,778.806 463.55,794.414 464.11,808.108 464.669,804.362 465.228,798.61 465.787,797.951 466.347,810.317 466.906,823.991 467.465,803.02 468.024,796.221 468.584,822.6 469.143,786.015 469.702,766.822 470.261,764.244 470.821,776.007 471.38,773.673 471.939,773.778 472.498,788.93 473.058,772.397 473.617,756.803 474.176,768.724 474.735,737.286 475.295,785.391 475.854,784.761 476.413,749.014 476.972,719.472 477.532,719.453 478.091,737.314 478.65,707.364 479.209,742.526 479.769,759.466 480.328,759.955 480.887,762.354 481.446,794.64 482.006,806.512 482.565,786.317 483.124,815.872 483.683,829.731 484.243,856.297 484.802,867.948 485.361,862.006 485.92,872.284 486.48,847.74 487.039,815.226 487.598,809.78 488.157,791.807 488.717,790.945 489.276,787.544 489.835,786.275 490.394,770.735 490.954,784.777 491.513,781.13 492.072,778.592 492.631,777.923 493.191,790.029 493.75,789.77 494.309,785.796 494.868,765.412 495.428,763.676 495.987,762.293 496.546,762.605 497.105,745.229 497.665,747.955 498.224,715.561 498.783,702.232 499.342,691.109 499.902,709.603 500.461,726.799 501.02,772.684 501.579,788.013 502.139,785.265 502.698,770.799 503.257,750.416 503.816,750.676 504.376,751.06 504.935,718.428 505.494,685.458 506.053,701.093 506.613,685.262 507.172,669.845 507.731,660.365 508.29,647.893 508.85,650.011 509.409,671.025 509.968,708.427 510.527,708.237 511.087,710.002 511.646,707.282 512.205,709.83 512.764,690.222 513.324,706.739 513.883,739.269 514.442,767.726 515.001,747.793 515.561,713.647 516.12,678.518 516.679,696.046 517.238,727.349 517.798,698.315 518.357,699.265 518.916,701.016 519.475,702.882 520.035,705.717 520.594,693.287 521.153,680.846 521.712,666.899 522.272,670.105 522.831,691.457 523.39,694.058 523.949,696.032 524.509,694.47 525.068,696.636 525.627,698.414 526.186,685.927 526.746,685.908 527.305,672.692 527.864,694.426 528.423,728.071 528.983,743.665 529.542,742.37 530.101,743.77 530.66,743.921 531.22,739.562 531.779,754.908 532.338,751.47 532.897,747.803 533.457,761.381 534.016,788.982 534.575,782.095 535.134,798.301 535.694,764.366 536.253,712.383 536.812,748.735 537.371,698.134 537.931,702.226 538.49,740.289 539.049,738.143 539.608,722.968 540.168,725.646 540.727,744.262 541.286,744.89 541.845,706.924 542.405,739.047 542.964,785.843 543.523,814.307 544.082,807.714 544.642,789.371 545.201,752.851 545.76,782.808 546.319,795.97 546.879,793.547 547.438,757.048 547.997,736.433 548.556,715.929 549.116,717.597 549.675,684.836 550.234,668.741 550.793,654.646 551.353,674.184 551.912,690.763 552.471,674.256 553.031,673.466 553.59,678.675 554.149,685.536 554.708,717.458 555.268,735.309 555.827,796.105 556.386,774.958 556.945,774.86 557.505,770.149 558.064,784.06 558.623,795.193 559.182,774.85 559.742,750.202 560.301,731.935 560.86,729.224 561.419,758.507 561.979,738.117 562.538,719.876 563.097,705.231 563.656,725.324 564.216,706.931 564.775,737.904 565.334,756.422 565.893,752.169 566.453,764.277 567.012,776.197 567.571,791.303 568.13,787.711 568.69,750.177 569.249,749.879 569.808,762.998 570.367,789.353 570.927,801.003 571.486,794.483 572.045,790.799 572.604,752.492 573.164,747.886 573.723,729.054 574.282,712.602 574.841,710.374 575.401,694.142 575.96,678.998 576.519,729.382 577.078,730.12 577.638,730.512 578.197,715.818 578.756,715.696 579.315,712.352 579.875,716.206 580.434,717.56 580.993,719.413 581.552,718.355 582.112,683.053 582.671,668.566 583.23,653.799 583.789,655.962 584.349,676.016 584.908,659.909 585.467,680.956 586.026,654.229 586.586,685.914 587.145,672.485 587.704,676.136 588.263,658.518 588.823,659.201 589.382,631.325 589.941,621.207 590.5,594.148 591.06,600.55 591.619,574.758 592.178,598.981 592.737,572.618 593.297,579.121 593.856,636.609 594.415,688.05 594.974,670.756 595.534,671.681 596.093,675.344 596.652,675.822 597.211,691.896 597.771,691.226 598.33,677.034 598.889,645.241 599.448,651.162 600.008,637.889 600.567,640.555 601.126,662.694 601.685,665.853 602.245,654.248 602.804,674.377 603.363,691.423 603.922,692.845 604.482,676.348 605.041,695.386 605.6,714.299 606.159,728.94 606.719,778.304 607.278,791.136 607.837,786.453 608.396,780.974 608.956,778.393 609.515,772.104 610.074,754.728 610.633,765.404 611.193,729.71 611.752,710.987 612.311,692.681 612.87,708.726 613.43,690.25 613.989,706.937 614.548,690.164 615.107,706.381 615.667,702.054 616.226,719.221 616.785,735.527 617.344,748.249 617.904,764.375 618.463,779.329 619.022,825.844 619.581,820.077 620.141,814.415 620.7,810.005 621.259,786.424 621.818,762.411 622.378,743.861 622.937,724.903 623.496,725.492 624.055,721.542 624.615,721.163 625.174,736.006 625.733,751.938 626.292,746.492 626.852,745.353 627.411,757.907 627.97,739.334 628.529,753.147 629.089,767.062 629.648,712.974 630.207,692.298 630.766,676.062 631.326,660.014 631.885,679.367 632.444,681.872 633.003,701.086 633.563,718.101 634.122,733.936 634.681,746.876 635.24,727.847 635.8,709.489 636.359,708.933 636.918,709.024 637.477,690.412 638.037,705.403 638.596,718.704 639.155,733.136 639.714,731.605 640.274,727.89 640.833,742.572 641.392,741.184 641.951,753.821 642.511,733.348 643.07,733.036 643.629,717.048 644.188,715.328 644.748,714.286 645.307,758.32 645.866,737.175 646.425,734.831 646.985,732.136 647.544,729.535 648.103,693.015 648.662,689.69 649.222,708.227 649.781,740.788 650.34,723.571 650.899,692.531 651.459,690.388 652.018,706.939 652.577,721.404 653.136,705.361 653.696,671.117 654.255,671.947 654.814,675.753 655.373,675.842 655.933,657.994 656.492,626.099 657.051,610.308 657.61,617.917 658.17,603.921 658.729,625.496 659.288,627.415 659.847,647.572 660.407,666.203 660.966,719.65 661.525,686.456 662.084,686.767 662.644,686.901 663.203,702.75 663.762,747.444 664.321,726.54 664.881,741.676 665.44,771.433 665.999,782.052 666.558,790.01 667.118,769.002 667.677,768.586 668.236,764.791 668.795,778.427 669.355,755.863 669.914,770.014 670.473,767.769 671.032,715.573 671.592,727.673 672.151,693.911 672.71,694.596 673.269,694.314 673.829,695.306 674.388,678.841 674.947,691.003 675.506,687.719 676.066,689.73 676.625,691.574 677.184,661.516 677.743,646.26 678.303,644.851 678.862,631.256 679.421,606.219 679.981,628.205 680.54,647.294 681.099,649.261 681.658,649.963 682.218,652.887 682.777,672.092 683.336,674.345 683.895,664.283 684.455,667.491 685.014,637.284 685.573,653.739 686.132,657.908 686.692,660.897 687.251,662.702 687.81,665.412 688.369,634.335 688.929,608.193 689.488,616.084 690.047,621.125 690.606,655.625 691.166,687.756 691.725,703.904 692.284,720.068 692.843,721.782 693.403,754.465 693.962,765.368 694.521,779.314 695.08,758.583 695.64,771.551 696.199,765.349 696.758,748.24 697.317,743.422 697.877,725.168 698.436,723.763 698.995,723.09 699.554,689.793 700.114,676.02 700.673,676.796 701.232,678.023 701.791,696.989 702.351,699.486 702.91,684.122 703.469,684.698 704.028,623.528 704.588,644.362 705.147,666.367 705.706,622.232 706.265,608.671 706.825,615.458 707.384,638.343 707.943,580.482 708.502,570.68 709.062,575.176 709.621,615.171 710.18,622.204 710.739,622.658 711.299,641.786 711.858,695.951 712.417,681.154 712.976,700.056 713.536,686.06 714.095,669.164 714.654,688.227 715.213,672.038 715.773,655.256 716.332,636.927 716.891,656.603 717.45,656.292 718.01,705.493 718.569,735.452 719.128,730.966 719.687,709.751 720.247,723.619 720.806,755.841 721.365,771.565 721.924,769.507 722.484,745.425 723.043,708.043 723.602,705.907 724.161,733.442 724.721,713.022 725.28,730.631 725.839,730.188 726.398,715.685 726.958,726.305 727.517,741.795 728.076,740.025 728.635,755.198 729.195,734.543 729.754,731.997 730.313,746.681 730.872,778.084 731.432,774.748 731.991,802.743 732.55,796.433 733.109,723.602 733.669,753.556 734.228,733.038 734.787,763.831 735.346,791.785 735.906,801.676 736.465,811.786 737.024,823.495 737.583,828.138 738.143,837.514 738.702,828.467 739.261,866.555 739.82,825.252 740.38,789.257 740.939,785.826 741.498,780.06 742.057,760.298 742.617,728.122 743.176,724.785 743.735,720.062 744.294,737.683 744.854,751.548 745.413,766.143 745.972,747.028 746.531,730.005 747.091,744.843 747.65,724.142 748.209,736.643 748.768,749.769 749.328,745.657 749.887,760.449 750.446,757.229 751.005,782.097 751.565,778.07 752.124,740.628 752.683,739.674 753.242,739.298 753.802,690.386 754.361,692.225 754.92,691.617 755.479,670.24 756.039,655.095 756.598,690.241 757.157,688.753 757.716,686.623 758.276,720.34 758.835,705.357 759.394,690.88 759.953,677.5 760.513,679.199 761.072,661.718 761.631,696.472 762.19,665.722 762.75,652.338 763.309,627.169 763.868,644.994 764.427,647.35 764.987,697.362 765.546,680.658 766.105,667.403 766.664,640.178 767.224,625.758 767.783,645.939 768.342,647.136 768.901,614.041 769.461,637.238 770.02,639.404 770.579,643.747 771.138,676.669 771.698,661.799 772.257,661.107 772.816,681.092 773.375,718.33 773.935,702.361 774.494,684.966 775.053,714.026 775.612,711.771 776.172,677.75 776.731,679.246 777.29,663.121 777.849,668.444 778.409,684.803 778.968,749.155 779.527,731.96 780.086,677.724 780.646,677.156 781.205,661.458 781.764,693.106 782.323,728.63 782.883,736.367 783.442,749.624 784.001,727.137 784.56,727.369 785.12,725.144 785.679,723.094 786.238,688.635 786.797,675.261 787.357,642.273 787.916,645.629 788.475,614.236 789.034,599.691 789.594,618.689 790.153,657.078 790.712,659.443 791.271,659.899 791.831,663.505 792.39,630.236 792.949,616.955 793.508,622.621 794.068,676.642 794.627,708.159 795.186,709.496 795.745,694.076 796.305,676.851 796.864,680.433 797.423,681.205 797.982,679.194 798.542,711.959 799.101,709.604 799.66,708.442 800.219,706.787 800.779,690.416 801.338,658.117 801.897,625.776 802.456,613.01 803.016,611.37 803.575,617.35 804.134,622.113 804.693,626.023 805.253,645.01 805.812,649.96 806.371,634.979 806.931,669.673 807.49,704.941 808.049,708.658 808.608,708.92 809.168,704.655 809.727,687.122 810.286,640.061 810.845,659.989 811.405,648.917 811.964,667.012 812.523,639.903 813.082,644.132 813.642,649.934 814.201,668.445 814.76,652.199 815.319,651.421 815.879,670.62 816.438,637.123 816.997,641.776 817.556,660.136 818.116,644.548 818.675,646.967 819.234,650.042 819.793,640.348 820.353,658.34 820.912,687.986 821.471,687.018 822.03,687.465 822.59,657.832 823.149,690.957 823.708,722.119 824.267,720.8 824.827,733.684 825.386,732.323 825.945,729.675 826.504,695.045 827.064,679.698 827.623,713.21 828.182,682.041 828.741,685.962 829.301,668.985 829.86,687.607 830.419,703.891 830.978,688.635 831.538,709.99 832.097,674.435 832.656,687.816 833.215,669.47 833.775,653.485 834.334,622.364 834.893,610.275 835.452,599.834 836.012,605.253 836.571,610.584 837.13,679.198 837.689,663.892 838.249,666.728 838.808,648.359 839.367,584.37 839.926,603.412 840.486,623.157 841.045,609.124 841.604,633.043 842.163,620.025 842.723,625.427 843.282,657.763 843.841,673.61 844.4,675.989 844.96,676.016 845.519,675.15 846.078,692.786 846.637,710.047 847.197,711.943 847.756,693.644 848.315,679.252 848.874,666.704 849.434,649.124 849.993,683.764 850.552,685.62 851.111,684.579 851.671,685.971 852.23,698.57 852.789,682.58 853.348,695.039 853.908,740.254 854.467,770.491 855.026,751.708 855.585,714.075 856.145,695.384 856.704,674.323 857.263,676.687 857.822,678.434 858.382,661.379 858.941,679.622 859.5,691.603 860.059,708.233 860.619,721.762 861.178,673.929 861.737,657.275 862.296,722.387 862.856,687.601 863.415,684.778 863.974,671.505 864.533,689.363 865.093,702.875 865.652,714.869 866.211,744.895 866.77,742.876 867.33,740.866 867.889,736.849 868.448,764.036 869.007,762.201 869.567,759.169 870.126,738.008 870.685,734.514 871.244,711.496 871.804,661.826 872.363,599.126 872.922,585.034 873.481,591.929 874.041,580.16 874.6,605.038 875.159,608.785 875.718,630.625 876.278,634.804 876.837,620.519 877.396,622.662 877.955,609.642 878.515,583.56 879.074,607.076 879.633,623.699 880.192,644.321 880.752,631.355 881.311,651.096 881.87,655.895 882.429,660.636 882.989,660.558 883.548,616.661 884.107,637.066 884.666,637.577 885.226,593.119 885.785,584.27 886.344,619.282 886.903,605.974 887.463,578.363 888.022,584.076 888.581,575.887 889.14,565.747 889.7,589.055 890.259,577.032 890.818,581.563 891.377,588.119 891.937,675.431 892.496,709.187 893.055,693.001 893.614,709.576 894.174,694.21 894.733,727.679 895.292,726.915 895.851,742.248 896.411,736.491 896.97,750.802 897.529,735.31 898.088,717.284 898.648,714.755 899.207,696.465 899.766,724.08 900.325,704.153 900.885,684.63 901.444,696.866 902.003,679.236 902.562,647.378 903.122,648.991 903.681,649.945 904.24,649.156 904.799,666.838 905.359,685.615 905.918,684.303 906.477,717.939 907.036,700.392 907.596,686.917 908.155,704.739 908.714,686.474 909.273,719.722 909.833,701.268 910.392,684.862 910.951,656.162 911.51,671.131 912.07,690.954 912.629,695.603 913.188,679.842 913.747,682.69 914.307,744.271 914.866,727.746 915.425,676.267 915.984,692.156 916.544,692.164 917.103,672.72 917.662,691.57 918.221,711.848 918.781,727.773 919.34,724.002 919.899,720.601 920.458,702.684 921.018,682.036 921.577,682.005 922.136,714.874 922.695,715.126 923.255,679.534 923.814,681.17 924.373,682.775 924.932,680.732 925.492,678.531 926.051,674.432 926.61,707.195 927.169,689.354 927.729,708.585 928.288,707.914 928.847,723.751 929.406,737.517 929.966,766.655 930.525,794.134 931.084,790.237 931.644,784.921 932.203,779.999 932.762,791.314 933.321,768.446 933.881,764.337 934.44,729.45 934.999,760.633 935.558,754.08 936.118,767.608 936.677,764.079 937.236,776.573 937.795,770.974 938.355,769.422 938.914,797.678 939.473,774.203 940.032,753.897 940.592,752.477 941.151,749.151 941.71,728.9 942.269,760.52 942.829,756.975 943.388,787.095 943.947,751.941 944.506,763.781 945.066,744.891 945.625,724.106 946.184,719.413 946.743,717.271 947.303,732.847 947.862,714.758 948.421,679.676 948.98,694.622 949.54,727.23 950.099,708.98 950.658,704.769 951.217,718.307 951.777,747.921 952.336,729.54 952.895,727.239 953.454,726.501 954.014,724.875 954.573,737.783 955.132,749.231 955.691,712.304 956.251,713.915 956.81,725.747 957.369,706.433 957.928,703.478 958.488,718.436 959.047,737.103 959.606,734.723 960.165,687.076 960.725,684.265 961.284,667.926 961.843,665.785 962.402,686.426 962.962,689.433 963.521,686.902 964.08,707.676 964.639,723.038 965.199,751.442 965.758,744.949 966.317,711.659 966.876,674.234 967.436,688.358 967.995,705.097 968.554,705.772 969.113,702.806 969.673,687.749 970.232,706.52 970.791,689.496 971.35,691.933 971.91,675.648 972.469,675.894 973.028,656.006 973.587,659.421 974.147,626.877 974.706,645.103 975.265,597.403 975.824,601.722 976.384,606.259 976.943,641.606 977.502,641.187 978.061,664.105 978.621,664.663 979.18,644.826 979.739,647.14 980.298,647.585 980.858,631.98 981.417,582.417 981.976,603.795 982.535,560.801 983.095,569.075 983.654,580.665 984.213,587.575 984.772,578.816 985.332,585.466 985.891,593.314 986.45,600.841 987.009,639.136 987.569,627.841 988.128,665.883 988.687,666.298 989.246,665.688 989.806,653.195 990.365,674.348 990.924,657.431 991.483,659.559 992.043,629.854 992.602,647.625 993.161,651.021 993.72,668.011 994.28,667.878 994.839,667.727 995.398,638.085 995.957,626.493 996.517,648.445 997.076,648.366 997.635,681.694 998.194,678.729 998.754,678.47 999.313,697.137 999.872,681.333 1000.43,646.268 1000.99,666.298 1001.55,651.596 1002.11,685.735 1002.67,684.193 1003.23,682.185 1003.79,666.072 1004.35,601.24 1004.91,670.08 1005.46,683.097 1006.02,731.705 1006.58,730.802 1007.14,744.235 1007.7,751.825 1008.26,763.923 1008.82,790.791 1009.38,771.868 1009.94,765.256 1010.5,758.737 1011.06,722.919 1011.62,736.807 1012.18,748.923 1012.73,761.012 1013.29,807.662 1013.85,786.518 1014.41,786.441 1014.97,780.882 1015.53,759.956 1016.09,788.478 1016.65,785.203 1017.21,779.761 1017.77,789.426 1018.33,797.869 1018.89,790.561 1019.45,753.966 1020.01,765.175 1020.56,796.116 1021.12,755.514 1021.68,752.131 1022.24,748.834 1022.8,762.086 1023.36,738.106 1023.92,716.117 1024.48,696.292 1025.04,714.895 1025.6,695.526 1026.16,707.817 1026.72,690.988 1027.28,675.053 1027.83,629.63 1028.39,681.252 1028.95,712.898 1029.51,712.659 1030.07,706.571 1030.63,706.418 1031.19,719.818 1031.75,749.923 1032.31,744.256 1032.87,759.181 1033.43,753.909 1033.99,766.198 1034.55,746.794 1035.1,747.203 1035.66,744.061 1036.22,741.629 1036.78,752.504 1037.34,764.87 1037.9,760.169 1038.46,753.938 1039.02,715.945 1039.58,713.347 1040.14,728.194 1040.7,726.823 1041.26,755.991 1041.82,766.883 1042.38,762.593 1042.93,744.387 1043.49,723.626 1044.05,708.335 1044.61,709.595 1045.17,723.859 1045.73,657.765 1046.29,658.409 1046.85,610.618 1047.41,630.377 1047.97,630.328 1048.53,634.081 1049.09,657.471 1049.65,673.135 1050.2,688.702 1050.76,703.541 1051.32,718.603 1051.88,714.203 1052.44,713.275 1053,675.777 1053.56,688.585 1054.12,671.928 1054.68,674.302 1055.24,676.505 1055.8,646.915 1056.36,636.316 1056.92,655.108 1057.48,722.826 1058.03,705.498 1058.59,704.511 1059.15,703.657 1059.71,717.951 1060.27,696.206 1060.83,724.819 1061.39,691.534 1061.95,739.547 1062.51,735.663 1063.07,718.224 1063.63,763.797 1064.19,757.356 1064.75,718.712 1065.3,685.306 1065.86,669.496 1066.42,672.032 1066.98,655.633 1067.54,622.244 1068.1,613.473 1068.66,631.203 1069.22,651.056 1069.78,653.186 1070.34,641.858 1070.9,662.005 1071.46,695.12 1072.02,711.1 1072.57,679.182 1073.13,663.873 1073.69,645.131 1074.25,663.239 1074.81,665.277 1075.37,635.787 1075.93,591.067 1076.49,599.543 1077.05,634.758 1077.61,672.403 1078.17,656.541 1078.73,643.245 1079.29,626.253 1079.85,632.225 1080.4,634.159 1080.96,623.176 1081.52,642.856 1082.08,693.664 1082.64,709.178 1083.2,705.42 1083.76,686.993 1084.32,685.701 1084.88,683.336 1085.44,713.492 1086,728.405 1086.56,724.789 1087.12,707.218 1087.67,688.365 1088.23,692.94 1088.79,692.421 1089.35,723.89 1089.91,720.262 1090.47,699.644 1091.03,718.208 1091.59,714.168 1092.15,714.694 1092.71,710.712 1093.27,691.192 1093.83,675.023 1094.39,675.677 1094.94,676.948 1095.5,677.976 1096.06,647.207 1096.62,632.938 1097.18,634.599 1097.74,601.106 1098.3,589.884 1098.86,564.82 1099.42,538.045 1099.98,528.664 1100.54,518.762 1101.1,545.175 1101.66,565.291 1102.22,572.735 1102.77,610.013 1103.33,629.652 1103.89,600.053 1104.45,604.647 1105.01,609.835 1105.57,617.578 1106.13,620.294 1106.69,655.085 1107.25,639.321 1107.81,643.316 1108.37,649.648 1108.93,649.206 1109.49,653.577 1110.04,671.742 1110.6,640.511 1111.16,641.391 1111.72,644.158 1112.28,631.14 1112.84,653.135 1113.4,655.032 1113.96,655.891 1114.52,660.079 1115.08,650.056 1115.64,668.66 1116.2,668.89 1116.76,689.193 1117.31,705.946 1117.87,735.465 1118.43,734.281 1118.99,732.384 1119.55,728.502 1120.11,738.628 1120.67,752.661 1121.23,764.103 1121.79,733.989 1122.35,700.029 1122.91,695.94 1123.47,681.242 1124.03,681.947 1124.59,650.003 1125.14,667.191 1125.7,636.309 1126.26,643.491 1126.82,646.285 1127.38,633.464 1127.94,617.417 1128.5,618.973 1129.06,606.74 1129.62,609.108 1130.18,629.921 1130.74,632.562 1131.3,664.724 1131.86,696.34 1132.41,729.742 1132.97,710.707 1133.53,744.06 1134.09,754.887 1134.65,749.467 1135.21,717.027 1135.77,733.757 1136.33,731.156 1136.89,727.998 1137.45,697.349 1138.01,696.558 1138.57,679.92 1139.13,665.699 1139.68,684.384 1140.24,699.393 1140.8,682.129 1141.36,680.078 1141.92,680.752 1142.48,681.212 1143.04,714.022 1143.6,696.101 1144.16,713.678 1144.72,712.32 1145.28,727.575 1145.84,707.435 1146.4,726.428 1146.96,710.51 1147.51,691.456 1148.07,707.945 1148.63,694.587 1149.19,694.093 1149.75,659.748 1150.31,662.155 1150.87,663.477 1151.43,682.09 1151.99,699.271 1152.55,703.102 1153.11,687.993 1153.67,683.847 1154.23,700.681 1154.78,698.613 1155.34,710.614 1155.9,742.548 1156.46,738.191 1157.02,719.363 1157.58,719.96 1158.14,718.985 1158.7,717.548 1159.26,715.695 1159.82,680.832 1160.38,708.582 1160.94,706.529 1161.5,703.957 1162.05,718.007 1162.61,745.57 1163.17,693.467 1163.73,694.603 1164.29,678.33 1164.85,679.592 1165.41,714.686 1165.97,711.066 1166.53,724.781 1167.09,708.294 1167.65,740.309 1168.21,720.289 1168.77,736.624 1169.33,751.426 1169.88,766.425 1170.44,779.334 1171,775.552 1171.56,784.01 1172.12,775.905 1172.68,770.121 1173.24,765.136 1173.8,774.42 1174.36,770.458 1174.92,766.161 1175.48,778.252 1176.04,778.234 1176.6,757.828 1177.15,754.748 1177.71,734.994 1178.27,701.068 1178.83,731.347 1179.39,710.33 1179.95,724.628 1180.51,721.884 1181.07,770.487 1181.63,714.092 1182.19,745.404 1182.75,755.93 1183.31,751.701 1183.87,749.668 1184.43,762.23 1184.98,775.941 1185.54,754.659 1186.1,751.826 1186.66,749.478 1187.22,709.645 1187.78,683.26 1188.34,715.958 1188.9,732.319 1189.46,713.974 1190.02,715.794 1190.58,701.574 1191.14,701.923 1191.7,702.58 1192.25,718.544 1192.81,719.755 1193.37,734.01 1193.93,650.584 1194.49,652.929 1195.05,639.179 1195.61,627.426 1196.17,630.257 1196.73,649.439 1197.29,638.882 1197.85,624.052 1198.41,643.17 1198.97,664.529 1199.52,679.735 1200.08,661.734 1200.64,675.385 1201.2,676.396 1201.76,628.82 1202.32,631.942 1202.88,598.659 1203.44,631.878 1204,648.755 1204.56,633.14 1205.12,635.764 1205.68,603.872 1206.24,624.715 1206.8,625.214 1207.35,627.362 1207.91,613.414 1208.47,604.054 1209.03,610.565 1209.59,616.233 1210.15,621.878 1210.71,642.469 1211.27,613.801 1211.83,584.52 1212.39,591.033 1212.95,562.045 1213.51,568.945 1214.07,576.007 1214.62,596.74 1215.18,619.998 1215.74,620.551 1216.3,625.811 1216.86,626.108 1217.42,564.714 1217.98,539.538 1218.54,535.452 1219.1,556.751 1219.66,548.459 1220.22,573.869 1220.78,597.806 1221.34,601.958 1221.89,608.243 1222.45,592.341 1223.01,582.389 1223.57,588.166 1224.13,561.43 1224.69,617.803 1225.25,620.821 1225.81,622.484 1226.37,614.41 1226.93,601.619 1227.49,587.878 1228.05,606.098 1228.61,593.201 1229.17,583.139 1229.72,573.942 1230.28,581.266 1230.84,570.724 1231.4,564.874 1231.96,543.059 1232.52,568.549 1233.08,605.872 1233.64,628.581 1234.2,628.584 1234.76,633.198 1235.32,670.379 1235.88,685.15 1236.44,685.387 1236.99,718.983 1237.55,749.641 1238.11,747.368 1238.67,756.39 1239.23,735.914 1239.79,721.513 1240.35,701.525 1240.91,700.658 1241.47,698.347 1242.03,681.941 1242.59,682.991 1243.15,686.011 1243.71,701.212 1244.26,702.694 1244.82,718.617 1245.38,745.567 1245.94,707.384 1246.5,676.478 1247.06,706.803 1247.62,722.129 1248.18,738.786 1248.74,783.499 1249.3,794.063 1249.86,768.555 1250.42,776.508 1250.98,770.132 1251.54,734.53 1252.09,782.093 1252.65,760.14 1253.21,753.909 1253.77,752.535 1254.33,781.547 1254.89,761.66 1255.45,785.364 1256.01,733.241 1256.57,731.052 1257.13,695.631 1257.69,726.992 1258.25,707.561 1258.81,673.701 1259.36,708.603 1259.92,674.375 1260.48,690.263 1261.04,704.543 1261.6,716.933 1262.16,728.214 1262.72,757.071 1263.28,736.529 1263.84,700.238 1264.4,696.787 1264.96,694.313 1265.52,693.908 1266.08,675.745 1266.63,675.798 1267.19,676.115 1267.75,656.179 1268.31,669.797 1268.87,619.14 1269.43,639.309 1269.99,619.709 1270.55,640.481 1271.11,641.237 1271.67,624.622 1272.23,627.401 1272.79,645.499 1273.35,630.705 1273.91,619.463 1274.46,623.535 1275.02,624.607 1275.58,629.77 1276.14,633.817 1276.7,638.095 1277.26,626.696 1277.82,615.68 1278.38,614.791 1278.94,617.873 1279.5,624.106 1280.06,610.997 1280.62,615.851 1281.18,605.42 1281.73,577.242 1282.29,580.913 1282.85,568.49 1283.41,620.294 1283.97,640.145 1284.53,624.327 1285.09,629.912 1285.65,633.506 1286.21,634.167 1286.77,638.481 1287.33,674.868 1287.89,694.66 1288.45,708.344 1289,737.904 1289.56,725.371 1290.12,740.435 1290.68,751.28 1291.24,746.843 1291.8,757.801 1292.36,767.863 1292.92,765.232 1293.48,760.265 1294.04,771.878 1294.6,799.484 1295.16,777.037 1295.72,836.591 1296.28,831.212 1296.83,836.897 1297.39,799.307 1297.95,807.539 1298.51,834.685 1299.07,828.427 1299.63,884.374 1300.19,842.564 1300.75,868.675 1301.31,875.934 1301.87,903.673 1302.43,894.226 1302.99,870.275 1303.55,842.362 1304.1,814.89 1304.66,809.439 1305.22,783.494 1305.78,811.253 1306.34,787.379 1306.9,809.202 1307.46,783.571 1308.02,793.648 1308.58,788.805 1309.14,816.221 1309.7,810.507 1310.26,837.558 1310.82,811.6 1311.38,838.548 1311.93,833.644 1312.49,807.271 1313.05,803.355 1313.61,799.459 1314.17,803.564 1314.73,780.262 1315.29,754.504 1315.85,715.087 1316.41,713.794 1316.97,696.894 1317.53,697.79 1318.09,697.804 1318.65,715.358 1319.2,697.129 1319.76,715.341 1320.32,698.994 1320.88,696.221 1321.44,692.824 1322,675.481 1322.56,689.264 1323.12,655.471 1323.68,638.562 1324.24,659.599 1324.8,661.421 1325.36,662.317 1325.92,681.02 1326.47,665.121 1327.03,713.041 1327.59,665.972 1328.15,683.075 1328.71,666.458 1329.27,651.189 1329.83,617.65 1330.39,622.381 1330.95,625.624 1331.51,659.115 1332.07,676.91 1332.63,710.54 1333.19,727.548 1333.75,709.337 1334.3,691.682 1334.86,676.534 1335.42,673.391 1335.98,640.567 1336.54,658.111 1337.1,643.733 1337.66,660.438 1338.22,678.955 1338.78,663.229 1339.34,614.316 1339.9,615.448 1340.46,603.78 1341.02,579.243 1341.57,552.996 1342.13,561.65 1342.69,554.128 1343.25,530.266 1343.81,524.7 1344.37,518.704 1344.93,541.69 1345.49,551.027 1346.05,560.132 1346.61,568.672 1347.17,556.592 1347.73,578.861 1348.29,664.073 1348.84,681.835 1349.4,697.895 1349.96,698.246 1350.52,712.966 1351.08,664.169 1351.64,695.402 1352.2,666.368 1352.76,651.595 1353.32,669.645 1353.88,737.452 1354.44,750.388 1355,765.254 1355.56,729.619 1356.12,678.462 1356.67,677.227 1357.23,676.675 1357.79,696.201 1358.35,713.782 1358.91,680.085 1359.47,696.512 1360.03,663.855 1360.59,682.43 1361.15,679.257 1361.71,680.874 1362.27,646.224 1362.83,632.313 1363.39,642.039 1363.94,675.995 1364.5,642.766 1365.06,659.645 1365.62,658.296 1366.18,643.558 1366.74,628.125 1367.3,628.368 1367.86,630.19 1368.42,630.436 1368.98,651.641 1369.54,667.684 1370.1,651.3 1370.66,635.257 1371.21,623.254 1371.77,624.586 1372.33,616.435 1372.89,636.434 1373.45,637.689 1374.01,654.905 1374.57,659.532 1375.13,680.041 1375.69,650.282 1376.25,622.632 1376.81,657.295 1377.37,659.552 1377.93,647.066 1378.49,632.961 1379.04,633.863 1379.6,639.886 1380.16,624.292 1380.72,643.047 1381.28,678.881 1381.84,662.731 1382.4,682.722 1382.96,685.97 1383.52,686.261 1384.08,683.753 1384.64,667.366 1385.2,668.992 1385.76,654.881 1386.31,655.544 1386.87,675.156 1387.43,675.573 1387.99,691.314 1388.55,641.331 1389.11,645.736 1389.67,660.685 1390.23,661.005 1390.79,663.815 1391.35,664.161 1391.91,650.843 1392.47,647.707 1393.03,649.965 1393.58,637.158 1394.14,622.777 1394.7,628.057 1395.26,615.181 1395.82,635.239 1396.38,622.484 1396.94,624.368 1397.5,658.688 1398.06,692.242 1398.62,690.455 1399.18,705.491 1399.74,720.526 1400.3,686.983 1400.86,685.245 1401.41,713.611 1401.97,712.431 1402.53,708.337 1403.09,736.583 1403.65,715.668 1404.21,715.069 1404.77,696.616 1405.33,676.39 1405.89,689.398 1406.45,705.666 1407.01,687.463 1407.57,657.171 1408.13,658.874 1408.68,643.735 1409.24,647.296 1409.8,637.52 1410.36,624.299 1410.92,611.233 1411.48,634.211 1412.04,674.015 1412.6,674.101 1413.16,693.85 1413.72,694.442 1414.28,726.078 1414.84,706.509 1415.4,718.455 1415.95,728.828 1416.51,740.986 1417.07,705.315 1417.63,736.996 1418.19,730.539 1418.75,712.204 1419.31,711.297 1419.87,724.181 1420.43,690.487 1420.99,641.073 1421.55,645.239 1422.11,647.426 1422.67,661.828 1423.23,633.434 1423.78,619.638 1424.34,573.892 1424.9,596.11 1425.46,632.959 1426.02,652.993 1426.58,638.198 1427.14,658.966 1427.7,660.563 1428.26,682.814 1428.82,702.128 1429.38,671.363 1429.94,639.333 1430.5,708.174 1431.05,671.258 1431.61,638.959 1432.17,654.172 1432.73,636.227 1433.29,624.273 1433.85,630.052 1434.41,634.026 1434.97,651.076 1435.53,669.334 1436.09,670.313 1436.65,655.82 1437.21,688.616 1437.77,703.627 1438.33,722.301 1438.88,735.956 1439.44,720.316 1440,719.598 1440.56,715.202 1441.12,730.512 1441.68,710.838 1442.24,692.608 1442.8,692.787 1443.36,676.867 1443.92,724.725 1444.48,691.267 1445.04,674.315 1445.6,658.619 1446.15,677.251 1446.71,677.767 1447.27,663.15 1447.83,681.494 1448.39,646.223 1448.95,664.382 1449.51,649.447 1450.07,649.235 1450.63,681.922 1451.19,698.334 1451.75,712.008 1452.31,679.656 1452.87,663.454 1453.42,631.508 1453.98,650.85 1454.54,656.596 1455.1,640.143 1455.66,625.646 1456.22,662.976 1456.78,666.717 1457.34,701.468 1457.9,697.376 1458.46,709.309 1459.02,691.004 1459.58,675.256 1460.14,642.118 1460.7,632.977 1461.25,653.825 1461.81,668.886 1462.37,654.131 1462.93,637.886 1463.49,641.238 1464.05,658.412 1464.61,625.776 1465.17,595.364 1465.73,599.75 1466.29,621.248 1466.85,592.06 1467.41,615.698 1467.97,619.913 1468.52,603.615 1469.08,574.254 1469.64,624.973 1470.2,612.264 1470.76,616.965 1471.32,620.648 1471.88,624.313 1472.44,628.766 1473,633.36 1473.56,650.447 1474.12,647.712 1474.68,651.624 1475.24,652.071 1475.79,622.513 1476.35,625.227 1476.91,627.425 1477.47,616.635 1478.03,637.591 1478.59,673.701 1479.15,677.706 1479.71,691.285 1480.27,707.133 1480.83,721.856 1481.39,707.42 1481.95,708.429 1482.51,692.808 1483.07,678.224 1483.62,695.769 1484.18,693.272 1484.74,693.049 1485.3,658.73 1485.86,660.192 1486.42,676.908 1486.98,730.23 1487.54,747.847 1488.1,764.915 1488.66,773.888 1489.22,772.832 1489.78,770.774 1490.34,747.412 1490.89,744.846 1491.45,739.489 1492.01,700.229 1492.57,716.795 1493.13,713.691 1493.69,713.973 1494.25,743.038 1494.81,757.603 1495.37,736.104 1495.93,751.48 1496.49,766.37 1497.05,745.161 1497.61,756.002 1498.16,738.172 1498.72,720.621 1499.28,673.031 1499.84,688.882 1500.4,721.347 1500.96,730.967 1501.52,696.028 1502.08,709.257 1502.64,722.91 1503.2,749.499 1503.76,745.293 1504.32,744.206 1504.88,774.084 1505.44,768.72 1505.99,749.072 1506.55,748.366 1507.11,730.636 1507.67,708.518 1508.23,691.34 1508.79,721.516 1509.35,721.397 1509.91,717.209 1510.47,713.431 1511.03,692.513 1511.59,708.15 1512.15,706.995 1512.71,736.947 1513.26,752.742 1513.82,732.953 1514.38,726.121 1514.94,740.073 1515.5,735.664 1516.06,744.871 1516.62,740.661 1517.18,754.295 1517.74,717.189 1518.3,714.134 1518.86,710.17 1519.42,721.662 1519.98,717.327 1520.53,715.528 1521.09,730.064 1521.65,694.809 1522.21,692.832 1522.77,707.638 1523.33,721.565 1523.89,685.365 1524.45,701.449 1525.01,702.789 1525.57,690.677 1526.13,721.724 1526.69,683.249 1527.25,714.872 1527.81,726.771 1528.36,741.319 1528.92,720.863 1529.48,717.81 1530.04,701.36 1530.6,705.151 1531.16,701.245 1531.72,701.225 1532.28,717.081 1532.84,681.534 1533.4,678.699 1533.96,697.421 1534.52,663.4 1535.08,648.234 1535.63,718.059 1536.19,715.783 1536.75,715.776 1537.31,732.706 1537.87,717.404 1538.43,719.073 1538.99,703.339 1539.55,702.401 1540.11,684.81 1540.67,682.84 1541.23,649.755 1541.79,683.301 1542.35,700.308 1542.9,702.969 1543.46,682.194 1544.02,650.515 1544.58,668.13 1545.14,697.528 1545.7,677.893 1546.26,696.61 1546.82,680.851 1547.38,665.387 1547.94,667.591 1548.5,651.222 1549.06,635.275 1549.62,638.203 1550.18,622.308 1550.73,608.326 1551.29,630.593 1551.85,634.713 1552.41,652.15 1552.97,654.412 1553.53,671.374 1554.09,669.276 1554.65,669.154 1555.21,682.92 1555.77,697.719 1556.33,698.31 1556.89,732.567 1557.45,748.001 1558,746.754 1558.56,725.913 1559.12,710.179 1559.68,742.856 1560.24,693.352 1560.8,658.711 1561.36,657.561 1561.92,642.14 1562.48,658.101 1563.04,691.674 1563.6,708.489 1564.16,707.009 1564.72,676.396 1565.28,641.127 1565.83,661.462 1566.39,664.027 1566.95,662.163 1567.51,662.308 1568.07,693.856 1568.63,708.538 1569.19,707.1 1569.75,691.21 1570.31,673.493 1570.87,690.523 1571.43,677.144 1571.99,665.634 1572.55,651.182 1573.1,654.847 1573.66,656.985 1574.22,657.488 1574.78,675.06 1575.34,708.041 1575.9,689.816 1576.46,711.227 1577.02,710.301 1577.58,707.119 1578.14,702.252 1578.7,713.11 1579.26,714.659 1579.82,728.906 1580.37,728.299 1580.93,709.852 1581.49,673.971 1582.05,659.543 1582.61,678.222 1583.17,661.272 1583.73,659.991 1584.29,646.681 1584.85,649.364 1585.41,635.773 1585.97,639.903 1586.53,660.692 1587.09,680.335 1587.65,713.473 1588.2,708.125 1588.76,723.976 1589.32,707.736 1589.88,687.074 1590.44,666.935 1591,715.119 1591.56,697.651 1592.12,681.195 1592.68,663.606 1593.24,664.9 1593.8,663.255 1594.36,731.453 1594.92,731.207 1595.47,695.045 1596.03,713.48 1596.59,695.733 1597.15,696.667 1597.71,664.192 1598.27,666.67 1598.83,634.28 1599.39,656.379 1599.95,677.015 1600.51,730.038 1601.07,733.284 1601.63,713.892 1602.19,729.928 1602.74,727.535 1603.3,722.953 1603.86,718.274 1604.42,732.772 1604.98,727.061 1605.54,724.958 1606.1,704.116 1606.66,690.729 1607.22,679.061 1607.78,664.949 1608.34,648.348 1608.9,632.662 1609.46,651.296 1610.02,587.536 1610.57,593.155 1611.13,551.9 1611.69,575.758 1612.25,594.748 1612.81,615.918 1613.37,638.812 1613.93,658.432 1614.49,676.183 1615.05,678.362 1615.61,694.777 1616.17,691.419 1616.73,689.7 1617.29,654.453 1617.84,623.963 1618.4,640.712 1618.96,659.189 1619.52,644.792 1620.08,677.825 1620.64,696.633 1621.2,709.88 1621.76,709.309 1622.32,724.75 1622.88,706.319 1623.44,702.614 1624,701.329 1624.56,716.258 1625.11,731.648 1625.67,710.758 1626.23,726.758 1626.79,722.599 1627.35,720.126 1627.91,719.65 1628.47,733.706 1629.03,735.349 1629.59,718.759 1630.15,732.05 1630.71,729.403 1631.27,740.066 1631.83,736.278 1632.39,720.788 1632.94,705.446 1633.5,686.256 1634.06,716.755 1634.62,732.138 1635.18,730.765 1635.74,729.487 1636.3,694.588 1636.86,706.214 1637.42,720.32 1637.98,669.371 1638.54,687.431 1639.1,689.426 1639.66,673.964 1640.21,676.91 1640.77,659.468 1641.33,644.392 1641.89,647.585 1642.45,633.332 1643.01,636.718 1643.57,657.09 1644.13,640.858 1644.69,679.813 1645.25,647.788 1645.81,650.498 1646.37,683.244 1646.93,678.777 1647.48,710.601 1648.04,725.059 1648.6,724.576 1649.16,737.216 1649.72,706.647 1650.28,703.641 1650.84,704.503 1651.4,735.661 1651.96,748.515 1652.52,730.985 1653.08,760.937 1653.64,771.306 1654.2,717.078 1654.76,701.242 1655.31,698.576 1655.87,682.377 1656.43,698.13 1656.99,730.138 1657.55,744.051 1658.11,727.425 1658.67,724.165 1659.23,706.479 1659.79,738.811 1660.35,735.326 1660.91,718.297 1661.47,700.077 1662.03,717.271 1662.58,731.199 1663.14,713.071 1663.7,727.543 1664.26,740.958 1664.82,736.032 1665.38,716.657 1665.94,731.355 1666.5,726.601 1667.06,708.661 1667.62,737.375 1668.18,717.648 1668.74,716.251 1669.3,715.582 1669.85,765.252 1670.41,763.176 1670.97,789.385 1671.53,798.56 1672.09,775.647 1672.65,757.675 1673.21,769.522 1673.77,764.62 1674.33,744.26 1674.89,722.323 1675.45,686.547 1676.01,681.511 1676.57,679.212 1677.13,674.626 1677.68,689.153 1678.24,657.638 1678.8,691.337 1679.36,675.614 1679.92,676.637 1680.48,680.021 1681.04,682.189 1681.6,680.744 1682.16,680.864 1682.72,695.944 1683.28,695.188 1683.84,691.713 1684.4,705.988 1684.95,717.909 1685.51,702.408 1686.07,716.565 1686.63,683.285 1687.19,650.586 1687.75,636.463 1688.31,624.6 1688.87,642.571 1689.43,628.929 1689.99,618.17 1690.55,604.658 1691.11,603.941 1691.67,606.652 1692.23,574.137 1692.78,598.856 1693.34,608.164 1693.9,612.148 1694.46,611.795 1695.02,610.991 1695.58,600.417 1696.14,620.739 1696.7,605.981 1697.26,610.023 1697.82,608.199 1698.38,630.838 1698.94,651.621 1699.5,636.275 1700.05,623.202 1700.61,621.38 1701.17,639.173 1701.73,638.965 1702.29,623.161 1702.85,658.706 1703.41,658.33 1703.97,661.975 1704.53,646.379 1705.09,628.939 1705.65,679.198 1706.21,677.685 1706.77,742.499 1707.32,804.595 1707.88,767.655 1708.44,798.691 1709,810.854 1709.56,807.915 1710.12,787.399 1710.68,767.363 1711.24,767.464 1711.8,764.884 1712.36,762.071 1712.92,706.562 1713.48,708.307 1714.04,706.594 1714.6,703.082 1715.15,685.758 1715.71,698.265 1716.27,699.581 1716.83,668.815 1717.39,653.9 1717.95,653.061 1718.51,671.343 1719.07,672.573 1719.63,671.999 1720.19,654.431 1720.75,656.152 1721.31,659.306 1721.87,675.832 1722.42,674.969 1722.98,675.746 1723.54,694.599 1724.1,712.441 1724.66,710.676 1725.22,691.211 1725.78,706.864 1726.34,705.934 1726.9,706.071 1727.46,687.295 1728.02,688.811 1728.58,688.071 1729.14,687.856 1729.69,670.626 1730.25,652.568 1730.81,606.752 1731.37,610.003 1731.93,616.044 1732.49,603.479 1733.05,577.004 1733.61,581.246 1734.17,620.848 1734.73,687.011 1735.29,704.177 1735.85,703.137 1736.41,689.299 1736.97,672.601 1737.52,657.036 1738.08,673.595 1738.64,656.109 1739.2,625.475 1739.76,640.781 1740.32,626.77 1740.88,613.929 1741.44,630.926 1742,603.023 1742.56,558.478 1743.12,578.769 1743.68,614.07 1744.24,602.682 1744.79,605.744 1745.35,597.219 1745.91,601.199 1746.47,574.071 1747.03,562.171 1747.59,583.082 1748.15,589.302 1748.71,596.555 1749.27,648.375 1749.83,684.093 1750.39,715.392 1750.95,685.168 1751.51,702.751 1752.06,717.196 1752.62,666.956 1753.18,638.235 1753.74,645.088 1754.3,648.237 1754.86,667.021 1755.42,665.505 1755.98,716.325 1756.54,749.416 1757.1,746.031 1757.66,730.884 1758.22,714.172 1758.78,698.201 1759.34,730.982 1759.89,713.047 1760.45,728.839 1761.01,694.841 1761.57,710.689 1762.13,696.536 1762.69,694.898 1763.25,660.856 1763.81,662.779 1764.37,647.073 1764.93,648.037 1765.49,649.76 1766.05,649.268 1766.61,669.801 1767.16,670.963 1767.72,672.561 1768.28,658.949 1768.84,660.563 1769.4,663.07 1769.96,633.203 1770.52,637.367 1771.08,639.995 1771.64,625.26 1772.2,643.881 1772.76,659.709 1773.32,630.228 1773.88,617.378 1774.43,623.913 1774.99,609.709 1775.55,613.293 1776.11,589.465 1776.67,579.478 1777.23,568.626 1777.79,576.063 1778.35,598.162 1778.91,649.051 1779.47,649.502 1780.03,633.838 1780.59,651.548 1781.15,638.793 1781.71,656.358 1782.26,689.02 1782.82,671.524 1783.38,638.018 1783.94,662.119 1784.5,616.638 1785.06,621.713 1785.62,659.302 1786.18,627.278 1786.74,596.072 1787.3,616.961 1787.86,621.101 1788.42,624.27 1788.98,644.363 1789.53,626.78 1790.09,629.938 1790.65,583.48 1791.21,589.21 1791.77,639.831 1792.33,642.725 1792.89,674.472 1793.45,670.689 1794.01,670.526 1794.57,685.705 1795.13,668.112 1795.69,667.272 1796.25,637.796 1796.8,639.38 1797.36,640.17 1797.92,641.364 1798.48,642.305 1799.04,642.815 1799.6,615.062 1800.16,649.003 1800.72,634.983 1801.28,636.707 1801.84,621.827 1802.4,622.441 1802.96,654.681 1803.52,674.381 1804.08,725.012 1804.63,723.871 1805.19,721.982 1805.75,721.691 1806.31,702.345 1806.87,736.379 1807.43,734.268 1807.99,714.709 1808.55,681.844 1809.11,714.041 1809.67,697.534 1810.23,679.668 1810.79,669.405 1811.35,684.806 1811.9,736.175 1812.46,733.574 1813.02,747.519 1813.58,746.73 1814.14,755.428 1814.7,740.239 1815.26,702.737 1815.82,685.24 1816.38,704.77 1816.94,737.991 1817.5,705.762 1818.06,703.764 1818.62,708.906 1819.18,709.352 1819.73,691.141 1820.29,685.847 1820.85,687.401 1821.41,637.619 1821.97,642.306 1822.53,646.623 1823.09,682.607 1823.65,680.672 1824.21,667.591 1824.77,667.606 1825.33,682.867 1825.89,683.801 1826.45,669.235 1827,651.385 1827.56,688.188 1828.12,706.19 1828.68,687.603 1829.24,700.777 1829.8,687.453 1830.36,690.432 1830.92,705.34 1831.48,668.28 1832.04,700.525 1832.6,701.209 1833.16,713.405 1833.72,710.766 1834.27,694.145 1834.83,705.793 1835.39,702.49 1835.95,698.325 1836.51,697.634 1837.07,695.34 1837.63,644.846 1838.19,644.839 \"/>\n<path clip-path=\"url(#clip533)\" d=\"M720.247 690.375 L720.806 690.375 L721.365 690.375 L721.924 690.375 L722.484 690.375 L723.043 690.375 L723.602 690.375 L724.161 690.375 L724.721 690.375 L725.28 690.375 L725.839 690.375 L726.398 690.375 L726.958 690.375 L727.517 690.375 L728.076 690.375 L728.635 690.375 L729.195 690.375 L729.754 690.375 L730.313 690.375 L730.872 690.375 L731.432 690.375 L731.991 690.375 L732.55 690.375 L733.109 690.375 L733.669 690.375 L734.228 690.375 L734.787 690.375 L735.346 690.375 L735.906 690.375 L736.465 690.375 L737.024 690.375 L737.583 690.375 L738.143 690.375 L738.702 690.375 L739.261 690.375 L739.82 690.375 L740.38 690.375 L740.939 690.375 L741.498 690.375 L742.057 690.375 L742.617 690.375 L743.176 690.375 L743.735 690.375 L744.294 690.375 L744.854 690.375 L745.413 690.375 L745.972 690.375 L746.531 690.375 L747.091 690.375 L747.65 690.375 L748.209 690.375 L748.768 690.375 L749.328 690.375 L749.887 690.375 L750.446 690.375 L751.005 690.375 L751.565 690.375 L752.124 690.375 L752.683 690.375 L753.242 690.375 L753.802 690.375 L754.361 690.375 L754.92 690.375 L755.479 690.375 L756.039 690.375 L756.598 690.375 L757.157 690.375 L757.716 690.375 L758.276 690.375 L758.835 690.375 L759.394 690.375 L759.953 690.375 L760.513 690.375 L761.072 690.375 L761.631 690.375 L762.19 690.375 L762.75 690.375 L763.309 690.375 L763.868 690.375 L764.427 690.375 L764.987 690.375 L765.546 690.375 L766.105 690.375 L766.664 690.375 L767.224 690.375 L767.783 690.375 L768.342 690.375 L768.901 690.375 L769.461 690.375 L770.02 690.375 L770.579 690.375 L771.138 690.375 L771.698 690.375 L772.257 690.375 L772.816 690.375 L773.375 690.375 L773.935 690.375 L774.494 690.375 L775.053 690.375 L775.612 690.375 L776.172 690.375 L776.731 690.375 L777.29 690.375 L777.849 690.375 L778.409 690.375 L778.968 690.375 L779.527 690.375 L780.086 690.375 L780.646 690.375 L781.205 690.375 L781.764 690.375 L782.323 690.375 L782.883 690.375 L783.442 690.375 L784.001 690.375 L784.56 690.375 L785.12 690.375 L785.679 690.375 L786.238 690.375 L786.797 690.375 L787.357 690.375 L787.916 690.375 L788.475 690.375 L789.034 690.375 L789.594 690.375 L790.153 690.375 L790.712 690.375 L791.271 690.375 L791.831 690.375 L792.39 690.375 L792.949 690.375 L793.508 690.375 L794.068 690.375 L794.627 690.375 L795.186 690.375 L795.745 690.375 L796.305 690.375 L796.864 690.375 L797.423 690.375 L797.982 690.375 L798.542 690.375 L799.101 690.375 L799.66 690.375 L800.219 690.375 L800.779 690.375 L801.338 690.375 L801.897 690.375 L802.456 690.375 L803.016 690.375 L803.575 690.375 L804.134 690.375 L804.693 690.375 L805.253 690.375 L805.812 690.375 L806.371 690.375 L806.931 690.375 L807.49 690.375 L808.049 690.375 L808.608 690.375 L809.168 690.375 L809.727 690.375 L810.286 690.375 L810.845 690.375 L811.405 690.375 L811.964 690.375 L812.523 690.375 L813.082 690.375 L813.642 690.375 L814.201 690.375 L814.76 690.375 L815.319 690.375 L815.879 690.375 L816.438 690.375 L816.997 690.375 L817.556 690.375 L818.116 690.375 L818.675 690.375 L819.234 690.375 L819.793 690.375 L820.353 690.375 L820.912 690.375 L821.471 690.375 L822.03 690.375 L822.59 690.375 L823.149 690.375 L823.708 690.375 L824.267 690.375 L824.827 690.375 L825.386 690.375 L825.945 690.375 L826.504 690.375 L827.064 690.375 L827.623 690.375 L828.182 690.375 L828.741 690.375 L829.301 690.375 L829.86 690.375 L830.419 690.375 L830.978 690.375 L831.538 690.375 L832.097 690.375 L832.656 690.375 L833.215 690.375 L833.775 690.375 L834.334 690.375 L834.893 690.375 L835.452 690.375 L836.012 690.375 L836.571 690.375 L837.13 690.375 L837.689 690.375 L838.249 690.375 L838.808 690.375 L839.367 690.375 L839.926 690.375 L840.486 690.375 L841.045 690.375 L841.604 690.375 L842.163 690.375 L842.723 690.375 L843.282 690.375 L843.841 690.375 L844.4 690.375 L844.96 690.375 L845.519 690.375 L846.078 690.375 L846.637 690.375 L847.197 690.375 L847.756 690.375 L848.315 690.375 L848.874 690.375 L849.434 690.375 L849.993 690.375 L850.552 690.375 L851.111 690.375 L851.671 690.375 L852.23 690.375 L852.789 690.375 L853.348 690.375 L853.908 690.375 L854.467 690.375 L855.026 690.375 L855.585 690.375 L856.145 690.375 L856.704 690.375 L857.263 690.375 L857.822 690.375 L858.382 690.375 L858.941 690.375 L859.5 690.375 L860.059 690.375 L860.619 690.375 L861.178 690.375 L861.737 690.375 L862.296 690.375 L862.856 690.375 L863.415 690.375 L863.974 690.375 L864.533 690.375 L865.093 690.375 L865.652 690.375 L866.211 690.375 L866.77 690.375 L867.33 690.375 L867.889 690.375 L868.448 690.375 L869.007 690.375 L869.567 690.375 L870.126 690.375 L870.685 690.375 L871.244 690.375 L871.804 690.375 L872.363 690.375 L872.922 690.375 L873.481 690.375 L874.041 690.375 L874.6 690.375 L875.159 690.375 L875.718 690.375 L876.278 690.375 L876.837 690.375 L877.396 690.375 L877.955 690.375 L878.515 690.375 L879.074 690.375 L879.633 690.375 L880.192 690.375 L880.752 690.375 L881.311 690.375 L881.87 690.375 L882.429 690.375 L882.989 690.375 L883.548 690.375 L884.107 690.375 L884.666 690.375 L885.226 690.375 L885.785 690.375 L886.344 690.375 L886.903 690.375 L887.463 690.375 L888.022 690.375 L888.581 690.375 L889.14 690.375 L889.7 690.375 L890.259 690.375 L890.818 690.375 L891.377 690.375 L891.937 690.375 L892.496 690.375 L893.055 690.375 L893.614 690.375 L894.174 690.375 L894.733 690.375 L895.292 690.375 L895.851 690.375 L896.411 690.375 L896.97 690.375 L897.529 690.375 L898.088 690.375 L898.648 690.375 L899.207 690.375 L899.766 690.375 L900.325 690.375 L900.885 690.375 L901.444 690.375 L902.003 690.375 L902.562 690.375 L903.122 690.375 L903.681 690.375 L904.24 690.375 L904.799 690.375 L905.359 690.375 L905.918 690.375 L906.477 690.375 L907.036 690.375 L907.596 690.375 L908.155 690.375 L908.714 690.375 L909.273 690.375 L909.833 690.375 L910.392 690.375 L910.951 690.375 L911.51 690.375 L912.07 690.375 L912.629 690.375 L913.188 690.375 L913.747 690.375 L914.307 690.375 L914.866 690.375 L915.425 690.375 L915.984 690.375 L916.544 690.375 L917.103 690.375 L917.662 690.375 L918.221 690.375 L918.781 690.375 L919.34 690.375 L919.899 690.375 L920.458 690.375 L921.018 690.375 L921.577 690.375 L922.136 690.375 L922.695 690.375 L923.255 690.375 L923.814 690.375 L924.373 690.375 L924.932 690.375 L925.492 690.375 L926.051 690.375 L926.61 690.375 L927.169 690.375 L927.729 690.375 L928.288 690.375 L928.847 690.375 L929.406 690.375 L929.966 690.375 L930.525 690.375 L931.084 690.375 L931.644 690.375 L932.203 690.375 L932.762 690.375 L933.321 690.375 L933.881 690.375 L934.44 690.375 L934.999 690.375 L935.558 690.375 L936.118 690.375 L936.677 690.375 L937.236 690.375 L937.795 690.375 L938.355 690.375 L938.914 690.375 L939.473 690.375 L940.032 690.375 L940.592 690.375 L941.151 690.375 L941.71 690.375 L942.269 690.375 L942.829 690.375 L943.388 690.375 L943.947 690.375 L944.506 690.375 L945.066 690.375 L945.625 690.375 L946.184 690.375 L946.743 690.375 L947.303 690.375 L947.862 690.375 L948.421 690.375 L948.98 690.375 L949.54 690.375 L950.099 690.375 L950.658 690.375 L951.217 690.375 L951.777 690.375 L952.336 690.375 L952.895 690.375 L953.454 690.375 L954.014 690.375 L954.573 690.375 L955.132 690.375 L955.691 690.375 L956.251 690.375 L956.81 690.375 L957.369 690.375 L957.928 690.375 L958.488 690.375 L959.047 690.375 L959.606 690.375 L960.165 690.375 L960.725 690.375 L961.284 690.375 L961.843 690.375 L962.402 690.375 L962.962 690.375 L963.521 690.375 L964.08 690.375 L964.639 690.375 L965.199 690.375 L965.758 690.375 L966.317 690.375 L966.876 690.375 L967.436 690.375 L967.995 690.375 L968.554 690.375 L969.113 690.375 L969.673 690.375 L970.232 690.375 L970.791 690.375 L971.35 690.375 L971.91 690.375 L972.469 690.375 L973.028 690.375 L973.587 690.375 L974.147 690.375 L974.706 690.375 L975.265 690.375 L975.824 690.375 L976.384 690.375 L976.943 690.375 L977.502 690.375 L978.061 690.375 L978.621 690.375 L979.18 690.375 L979.739 690.375 L980.298 690.375 L980.858 690.375 L981.417 690.375 L981.976 690.375 L982.535 690.375 L983.095 690.375 L983.654 690.375 L984.213 690.375 L984.772 690.375 L985.332 690.375 L985.891 690.375 L986.45 690.375 L987.009 690.375 L987.569 690.375 L988.128 690.375 L988.687 690.375 L989.246 690.375 L989.806 690.375 L990.365 690.375 L990.924 690.375 L991.483 690.375 L992.043 690.375 L992.602 690.375 L993.161 690.375 L993.72 690.375 L994.28 690.375 L994.839 690.375 L995.398 690.375 L995.957 690.375 L996.517 690.375 L997.076 690.375 L997.635 690.375 L998.194 690.375 L998.754 690.375 L999.313 690.375 L999.872 690.375 L1000.43 690.375 L1000.99 690.375 L1001.55 690.375 L1002.11 690.375 L1002.67 690.375 L1003.23 690.375 L1003.79 690.375 L1004.35 690.375 L1004.91 690.375 L1005.46 690.375 L1006.02 690.375 L1006.58 690.375 L1007.14 690.375 L1007.7 690.375 L1008.26 690.375 L1008.82 690.375 L1009.38 690.375 L1009.94 690.375 L1010.5 690.375 L1011.06 690.375 L1011.62 690.375 L1012.18 690.375 L1012.73 690.375 L1013.29 690.375 L1013.85 690.375 L1014.41 690.375 L1014.97 690.375 L1015.53 690.375 L1016.09 690.375 L1016.65 690.375 L1017.21 690.375 L1017.77 690.375 L1018.33 690.375 L1018.89 690.375 L1019.45 690.375 L1020.01 690.375 L1020.56 690.375 L1021.12 690.375 L1021.68 690.375 L1022.24 690.375 L1022.8 690.375 L1023.36 690.375 L1023.92 690.375 L1024.48 690.375 L1025.04 690.375 L1025.6 690.375 L1026.16 690.375 L1026.72 690.375 L1027.28 690.375 L1027.83 690.375 L1028.39 690.375 L1028.95 690.375 L1029.51 690.375 L1030.07 690.375 L1030.63 690.375 L1031.19 690.375 L1031.75 690.375 L1032.31 690.375 L1032.87 690.375 L1033.43 690.375 L1033.99 690.375 L1034.55 690.375 L1035.1 690.375 L1035.66 690.375 L1036.22 690.375 L1036.78 690.375 L1037.34 690.375 L1037.9 690.375 L1038.46 690.375 L1039.02 690.375 L1039.58 690.375 L1040.14 690.375 L1040.7 690.375 L1041.26 690.375 L1041.82 690.375 L1042.38 690.375 L1042.93 690.375 L1043.49 690.375 L1044.05 690.375 L1044.61 690.375 L1045.17 690.375 L1045.73 690.375 L1046.29 690.375 L1046.85 690.375 L1047.41 690.375 L1047.97 690.375 L1048.53 690.375 L1049.09 690.375 L1049.65 690.375 L1050.2 690.375 L1050.76 690.375 L1051.32 690.375 L1051.88 690.375 L1052.44 690.375 L1053 690.375 L1053.56 690.375 L1054.12 690.375 L1054.68 690.375 L1055.24 690.375 L1055.8 690.375 L1056.36 690.375 L1056.92 690.375 L1057.48 690.375 L1058.03 690.375 L1058.59 690.375 L1059.15 690.375 L1059.71 690.375 L1060.27 690.375 L1060.83 690.375 L1061.39 690.375 L1061.95 690.375 L1062.51 690.375 L1063.07 690.375 L1063.63 690.375 L1064.19 690.375 L1064.75 690.375 L1065.3 690.375 L1065.86 690.375 L1066.42 690.375 L1066.98 690.375 L1067.54 690.375 L1068.1 690.375 L1068.66 690.375 L1069.22 690.375 L1069.78 690.375 L1070.34 690.375 L1070.9 690.375 L1071.46 690.375 L1072.02 690.375 L1072.57 690.375 L1073.13 690.375 L1073.69 690.375 L1074.25 690.375 L1074.81 690.375 L1075.37 690.375 L1075.93 690.375 L1076.49 690.375 L1077.05 690.375 L1077.61 690.375 L1078.17 690.375 L1078.73 690.375 L1079.29 690.375 L1079.85 690.375 L1080.4 690.375 L1080.96 690.375 L1081.52 690.375 L1082.08 690.375 L1082.64 690.375 L1083.2 690.375 L1083.76 690.375 L1084.32 690.375 L1084.88 690.375 L1085.44 690.375 L1086 690.375 L1086.56 690.375 L1087.12 690.375 L1087.67 690.375 L1088.23 690.375 L1088.79 690.375 L1089.35 690.375 L1089.91 690.375 L1090.47 690.375 L1091.03 690.375 L1091.59 690.375 L1092.15 690.375 L1092.71 690.375 L1093.27 690.375 L1093.83 690.375 L1094.39 690.375 L1094.94 690.375 L1095.5 690.375 L1096.06 690.375 L1096.62 690.375 L1097.18 690.375 L1097.74 690.375 L1098.3 690.375 L1098.86 690.375 L1099.42 690.375 L1099.98 690.375 L1100.54 690.375 L1101.1 690.375 L1101.66 690.375 L1102.22 690.375 L1102.77 690.375 L1103.33 690.375 L1103.89 690.375 L1104.45 690.375 L1105.01 690.375 L1105.57 690.375 L1106.13 690.375 L1106.69 690.375 L1107.25 690.375 L1107.81 690.375 L1108.37 690.375 L1108.93 690.375 L1109.49 690.375 L1110.04 690.375 L1110.6 690.375 L1111.16 690.375 L1111.72 690.375 L1112.28 690.375 L1112.84 690.375 L1113.4 690.375 L1113.96 690.375 L1114.52 690.375 L1115.08 690.375 L1115.64 690.375 L1116.2 690.375 L1116.76 690.375 L1117.31 690.375 L1117.87 690.375 L1118.43 690.375 L1118.99 690.375 L1119.55 690.375 L1120.11 690.375 L1120.67 690.375 L1121.23 690.375 L1121.79 690.375 L1122.35 690.375 L1122.91 690.375 L1123.47 690.375 L1124.03 690.375 L1124.59 690.375 L1125.14 690.375 L1125.7 690.375 L1126.26 690.375 L1126.82 690.375 L1127.38 690.375 L1127.94 690.375 L1128.5 690.375 L1129.06 690.375 L1129.62 690.375 L1130.18 690.375 L1130.74 690.375 L1131.3 690.375 L1131.86 690.375 L1132.41 690.375 L1132.97 690.375 L1133.53 690.375 L1134.09 690.375 L1134.65 690.375 L1135.21 690.375 L1135.77 690.375 L1136.33 690.375 L1136.89 690.375 L1137.45 690.375 L1138.01 690.375 L1138.57 690.375 L1139.13 690.375 L1139.68 690.375 L1140.24 690.375 L1140.8 690.375 L1141.36 690.375 L1141.92 690.375 L1142.48 690.375 L1143.04 690.375 L1143.6 690.375 L1144.16 690.375 L1144.72 690.375 L1145.28 690.375 L1145.84 690.375 L1146.4 690.375 L1146.96 690.375 L1147.51 690.375 L1148.07 690.375 L1148.63 690.375 L1149.19 690.375 L1149.75 690.375 L1150.31 690.375 L1150.87 690.375 L1151.43 690.375 L1151.99 690.375 L1152.55 690.375 L1153.11 690.375 L1153.67 690.375 L1154.23 690.375 L1154.78 690.375 L1155.34 690.375 L1155.9 690.375 L1156.46 690.375 L1157.02 690.375 L1157.58 690.375 L1158.14 690.375 L1158.7 690.375 L1159.26 690.375 L1159.82 690.375 L1160.38 690.375 L1160.94 690.375 L1161.5 690.375 L1162.05 690.375 L1162.61 690.375 L1163.17 690.375 L1163.73 690.375 L1164.29 690.375 L1164.85 690.375 L1165.41 690.375 L1165.97 690.375 L1166.53 690.375 L1167.09 690.375 L1167.65 690.375 L1168.21 690.375 L1168.77 690.375 L1169.33 690.375 L1169.88 690.375 L1170.44 690.375 L1171 690.375 L1171.56 690.375 L1172.12 690.375 L1172.68 690.375 L1173.24 690.375 L1173.8 690.375 L1174.36 690.375 L1174.92 690.375 L1175.48 690.375 L1176.04 690.375 L1176.6 690.375 L1177.15 690.375 L1177.71 690.375 L1178.27 690.375 L1178.83 690.375 L1179.39 690.375 L1179.95 690.375 L1180.51 690.375 L1181.07 690.375 L1181.63 690.375 L1182.19 690.375 L1182.75 690.375 L1183.31 690.375 L1183.87 690.375 L1184.43 690.375 L1184.98 690.375 L1185.54 690.375 L1186.1 690.375 L1186.66 690.375 L1187.22 690.375 L1187.78 690.375 L1188.34 690.375 L1188.9 690.375 L1189.46 690.375 L1190.02 690.375 L1190.58 690.375 L1191.14 690.375 L1191.7 690.375 L1192.25 690.375 L1192.81 690.375 L1193.37 690.375 L1193.93 690.375 L1194.49 690.375 L1195.05 690.375 L1195.61 690.375 L1196.17 690.375 L1196.73 690.375 L1197.29 690.375 L1197.85 690.375 L1198.41 690.375 L1198.97 690.375 L1199.52 690.375 L1200.08 690.375 L1200.64 690.375 L1201.2 690.375 L1201.76 690.375 L1202.32 690.375 L1202.88 690.375 L1203.44 690.375 L1204 690.375 L1204.56 690.375 L1205.12 690.375 L1205.68 690.375 L1206.24 690.375 L1206.8 690.375 L1207.35 690.375 L1207.91 690.375 L1208.47 690.375 L1209.03 690.375 L1209.59 690.375 L1210.15 690.375 L1210.71 690.375 L1211.27 690.375 L1211.83 690.375 L1212.39 690.375 L1212.95 690.375 L1213.51 690.375 L1214.07 690.375 L1214.62 690.375 L1215.18 690.375 L1215.74 690.375 L1216.3 690.375 L1216.86 690.375 L1217.42 690.375 L1217.98 690.375 L1218.54 690.375 L1219.1 690.375 L1219.66 690.375 L1220.22 690.375 L1220.78 690.375 L1221.34 690.375 L1221.89 690.375 L1222.45 690.375 L1223.01 690.375 L1223.57 690.375 L1224.13 690.375 L1224.69 690.375 L1225.25 690.375 L1225.81 690.375 L1226.37 690.375 L1226.93 690.375 L1227.49 690.375 L1228.05 690.375 L1228.61 690.375 L1229.17 690.375 L1229.72 690.375 L1230.28 690.375 L1230.84 690.375 L1231.4 690.375 L1231.96 690.375 L1232.52 690.375 L1233.08 690.375 L1233.64 690.375 L1234.2 690.375 L1234.76 690.375 L1235.32 690.375 L1235.88 690.375 L1236.44 690.375 L1236.99 690.375 L1237.55 690.375 L1238.11 690.375 L1238.67 690.375 L1239.23 690.375 L1239.79 690.375 L1240.35 690.375 L1240.91 690.375 L1241.47 690.375 L1242.03 690.375 L1242.59 690.375 L1243.15 690.375 L1243.71 690.375 L1244.26 690.375 L1244.82 690.375 L1245.38 690.375 L1245.94 690.375 L1246.5 690.375 L1247.06 690.375 L1247.62 690.375 L1248.18 690.375 L1248.74 690.375 L1249.3 690.375 L1249.86 690.375 L1250.42 690.375 L1250.98 690.375 L1251.54 690.375 L1252.09 690.375 L1252.65 690.375 L1253.21 690.375 L1253.77 690.375 L1254.33 690.375 L1254.89 690.375 L1255.45 690.375 L1256.01 690.375 L1256.57 690.375 L1257.13 690.375 L1257.69 690.375 L1258.25 690.375 L1258.81 690.375 L1259.36 690.375 L1259.92 690.375 L1260.48 690.375 L1261.04 690.375 L1261.6 690.375 L1262.16 690.375 L1262.72 690.375 L1263.28 690.375 L1263.84 690.375 L1264.4 690.375 L1264.96 690.375 L1265.52 690.375 L1266.08 690.375 L1266.63 690.375 L1267.19 690.375 L1267.75 690.375 L1268.31 690.375 L1268.87 690.375 L1269.43 690.375 L1269.99 690.375 L1270.55 690.375 L1271.11 690.375 L1271.67 690.375 L1272.23 690.375 L1272.79 690.375 L1273.35 690.375 L1273.91 690.375 L1274.46 690.375 L1275.02 690.375 L1275.58 690.375 L1276.14 690.375 L1276.7 690.375 L1277.26 690.375 L1277.82 690.375 L1278.38 690.375 L1278.94 690.375 L1279.5 690.375 L1280.06 690.375 L1280.62 690.375 L1281.18 690.375 L1281.73 690.375 L1282.29 690.375 L1282.85 690.375 L1283.41 690.375 L1283.97 690.375 L1284.53 690.375 L1285.09 690.375 L1285.65 690.375 L1286.21 690.375 L1286.77 690.375 L1287.33 690.375 L1287.89 690.375 L1288.45 690.375 L1289 690.375 L1289.56 690.375 L1290.12 690.375 L1290.68 690.375 L1291.24 690.375 L1291.8 690.375 L1292.36 690.375 L1292.92 690.375 L1293.48 690.375 L1294.04 690.375 L1294.6 690.375 L1295.16 690.375 L1295.72 690.375 L1296.28 690.375 L1296.83 690.375 L1297.39 690.375 L1297.95 690.375 L1298.51 690.375 L1299.07 690.375 L1299.63 690.375 L1300.19 690.375 L1300.75 690.375 L1301.31 690.375 L1301.87 690.375 L1302.43 690.375 L1302.99 690.375 L1303.55 690.375 L1304.1 690.375 L1304.66 690.375 L1305.22 690.375 L1305.78 690.375 L1306.34 690.375 L1306.9 690.375 L1307.46 690.375 L1308.02 690.375 L1308.58 690.375 L1309.14 690.375 L1309.7 690.375 L1310.26 690.375 L1310.82 690.375 L1311.38 690.375 L1311.93 690.375 L1312.49 690.375 L1313.05 690.375 L1313.61 690.375 L1314.17 690.375 L1314.73 690.375 L1315.29 690.375 L1315.85 690.375 L1316.41 690.375 L1316.97 690.375 L1317.53 690.375 L1318.09 690.375 L1318.65 690.375 L1319.2 690.375 L1319.76 690.375 L1320.32 690.375 L1320.88 690.375 L1321.44 690.375 L1322 690.375 L1322.56 690.375 L1323.12 690.375 L1323.68 690.375 L1324.24 690.375 L1324.8 690.375 L1325.36 690.375 L1325.92 690.375 L1326.47 690.375 L1327.03 690.375 L1327.59 690.375 L1328.15 690.375 L1328.71 690.375 L1329.27 690.375 L1329.83 690.375 L1330.39 690.375 L1330.95 690.375 L1331.51 690.375 L1332.07 690.375 L1332.63 690.375 L1333.19 690.375 L1333.75 690.375 L1334.3 690.375 L1334.86 690.375 L1335.42 690.375 L1335.98 690.375 L1336.54 690.375 L1337.1 690.375 L1337.66 690.375 L1338.22 690.375 L1338.78 690.375 L1339.34 690.375 L1339.9 690.375 L1340.46 690.375 L1341.02 690.375 L1341.57 690.375 L1342.13 690.375 L1342.69 690.375 L1343.25 690.375 L1343.81 690.375 L1344.37 690.375 L1344.93 690.375 L1345.49 690.375 L1346.05 690.375 L1346.61 690.375 L1347.17 690.375 L1347.73 690.375 L1348.29 690.375 L1348.84 690.375 L1349.4 690.375 L1349.96 690.375 L1350.52 690.375 L1351.08 690.375 L1351.64 690.375 L1352.2 690.375 L1352.76 690.375 L1353.32 690.375 L1353.88 690.375 L1354.44 690.375 L1355 690.375 L1355.56 690.375 L1356.12 690.375 L1356.67 690.375 L1357.23 690.375 L1357.79 690.375 L1358.35 690.375 L1358.91 690.375 L1359.47 690.375 L1360.03 690.375 L1360.59 690.375 L1361.15 690.375 L1361.71 690.375 L1362.27 690.375 L1362.83 690.375 L1363.39 690.375 L1363.94 690.375 L1364.5 690.375 L1365.06 690.375 L1365.62 690.375 L1366.18 690.375 L1366.74 690.375 L1367.3 690.375 L1367.86 690.375 L1368.42 690.375 L1368.98 690.375 L1369.54 690.375 L1370.1 690.375 L1370.66 690.375 L1371.21 690.375 L1371.77 690.375 L1372.33 690.375 L1372.89 690.375 L1373.45 690.375 L1374.01 690.375 L1374.57 690.375 L1375.13 690.375 L1375.69 690.375 L1376.25 690.375 L1376.81 690.375 L1377.37 690.375 L1377.93 690.375 L1378.49 690.375 L1379.04 690.375 L1379.6 690.375 L1380.16 690.375 L1380.72 690.375 L1381.28 690.375 L1381.84 690.375 L1382.4 690.375 L1382.96 690.375 L1383.52 690.375 L1384.08 690.375 L1384.64 690.375 L1385.2 690.375 L1385.76 690.375 L1386.31 690.375 L1386.87 690.375 L1387.43 690.375 L1387.99 690.375 L1388.55 690.375 L1389.11 690.375 L1389.67 690.375 L1390.23 690.375 L1390.79 690.375 L1391.35 690.375 L1391.91 690.375 L1392.47 690.375 L1393.03 690.375 L1393.58 690.375 L1394.14 690.375 L1394.7 690.375 L1395.26 690.375 L1395.82 690.375 L1396.38 690.375 L1396.94 690.375 L1397.5 690.375 L1398.06 690.375 L1398.62 690.375 L1399.18 690.375 L1399.74 690.375 L1400.3 690.375 L1400.86 690.375 L1401.41 690.375 L1401.97 690.375 L1402.53 690.375 L1403.09 690.375 L1403.65 690.375 L1404.21 690.375 L1404.77 690.375 L1405.33 690.375 L1405.89 690.375 L1406.45 690.375 L1407.01 690.375 L1407.57 690.375 L1408.13 690.375 L1408.68 690.375 L1409.24 690.375 L1409.8 690.375 L1410.36 690.375 L1410.92 690.375 L1411.48 690.375 L1412.04 690.375 L1412.6 690.375 L1413.16 690.375 L1413.72 690.375 L1414.28 690.375 L1414.84 690.375 L1415.4 690.375 L1415.95 690.375 L1416.51 690.375 L1417.07 690.375 L1417.63 690.375 L1418.19 690.375 L1418.75 690.375 L1419.31 690.375 L1419.87 690.375 L1420.43 690.375 L1420.99 690.375 L1421.55 690.375 L1422.11 690.375 L1422.67 690.375 L1423.23 690.375 L1423.78 690.375 L1424.34 690.375 L1424.9 690.375 L1425.46 690.375 L1426.02 690.375 L1426.58 690.375 L1427.14 690.375 L1427.7 690.375 L1428.26 690.375 L1428.82 690.375 L1429.38 690.375 L1429.94 690.375 L1430.5 690.375 L1431.05 690.375 L1431.61 690.375 L1432.17 690.375 L1432.73 690.375 L1433.29 690.375 L1433.85 690.375 L1434.41 690.375 L1434.97 690.375 L1435.53 690.375 L1436.09 690.375 L1436.65 690.375 L1437.21 690.375 L1437.77 690.375 L1438.33 690.375 L1438.88 690.375 L1439.44 690.375 L1440 690.375 L1440.56 690.375 L1441.12 690.375 L1441.68 690.375 L1442.24 690.375 L1442.8 690.375 L1443.36 690.375 L1443.92 690.375 L1444.48 690.375 L1445.04 690.375 L1445.6 690.375 L1446.15 690.375 L1446.71 690.375 L1447.27 690.375 L1447.83 690.375 L1448.39 690.375 L1448.95 690.375 L1449.51 690.375 L1450.07 690.375 L1450.63 690.375 L1451.19 690.375 L1451.75 690.375 L1452.31 690.375 L1452.87 690.375 L1453.42 690.375 L1453.98 690.375 L1454.54 690.375 L1455.1 690.375 L1455.66 690.375 L1456.22 690.375 L1456.78 690.375 L1457.34 690.375 L1457.9 690.375 L1458.46 690.375 L1459.02 690.375 L1459.58 690.375 L1460.14 690.375 L1460.7 690.375 L1461.25 690.375 L1461.81 690.375 L1462.37 690.375 L1462.93 690.375 L1463.49 690.375 L1464.05 690.375 L1464.61 690.375 L1465.17 690.375 L1465.73 690.375 L1466.29 690.375 L1466.85 690.375 L1467.41 690.375 L1467.97 690.375 L1468.52 690.375 L1469.08 690.375 L1469.64 690.375 L1470.2 690.375 L1470.76 690.375 L1471.32 690.375 L1471.88 690.375 L1472.44 690.375 L1473 690.375 L1473.56 690.375 L1474.12 690.375 L1474.68 690.375 L1475.24 690.375 L1475.79 690.375 L1476.35 690.375 L1476.91 690.375 L1477.47 690.375 L1478.03 690.375 L1478.59 690.375 L1479.15 690.375 L1479.71 690.375 L1480.27 690.375 L1480.83 690.375 L1481.39 690.375 L1481.95 690.375 L1482.51 690.375 L1483.07 690.375 L1483.62 690.375 L1484.18 690.375 L1484.74 690.375 L1485.3 690.375 L1485.86 690.375 L1486.42 690.375 L1486.98 690.375 L1487.54 690.375 L1488.1 690.375 L1488.66 690.375 L1489.22 690.375 L1489.78 690.375 L1490.34 690.375 L1490.89 690.375 L1491.45 690.375 L1492.01 690.375 L1492.57 690.375 L1493.13 690.375 L1493.69 690.375 L1494.25 690.375 L1494.81 690.375 L1495.37 690.375 L1495.93 690.375 L1496.49 690.375 L1497.05 690.375 L1497.61 690.375 L1498.16 690.375 L1498.72 690.375 L1499.28 690.375 L1499.84 690.375 L1500.4 690.375 L1500.96 690.375 L1501.52 690.375 L1502.08 690.375 L1502.64 690.375 L1503.2 690.375 L1503.76 690.375 L1504.32 690.375 L1504.88 690.375 L1505.44 690.375 L1505.99 690.375 L1506.55 690.375 L1507.11 690.375 L1507.67 690.375 L1508.23 690.375 L1508.79 690.375 L1509.35 690.375 L1509.91 690.375 L1510.47 690.375 L1511.03 690.375 L1511.59 690.375 L1512.15 690.375 L1512.71 690.375 L1513.26 690.375 L1513.82 690.375 L1514.38 690.375 L1514.94 690.375 L1515.5 690.375 L1516.06 690.375 L1516.62 690.375 L1517.18 690.375 L1517.74 690.375 L1518.3 690.375 L1518.86 690.375 L1519.42 690.375 L1519.98 690.375 L1520.53 690.375 L1521.09 690.375 L1521.65 690.375 L1522.21 690.375 L1522.77 690.375 L1523.33 690.375 L1523.89 690.375 L1524.45 690.375 L1525.01 690.375 L1525.57 690.375 L1526.13 690.375 L1526.69 690.375 L1527.25 690.375 L1527.81 690.375 L1528.36 690.375 L1528.92 690.375 L1529.48 690.375 L1530.04 690.375 L1530.6 690.375 L1531.16 690.375 L1531.72 690.375 L1532.28 690.375 L1532.84 690.375 L1533.4 690.375 L1533.96 690.375 L1534.52 690.375 L1535.08 690.375 L1535.63 690.375 L1536.19 690.375 L1536.75 690.375 L1537.31 690.375 L1537.87 690.375 L1538.43 690.375 L1538.99 690.375 L1539.55 690.375 L1540.11 690.375 L1540.67 690.375 L1541.23 690.375 L1541.79 690.375 L1542.35 690.375 L1542.9 690.375 L1543.46 690.375 L1544.02 690.375 L1544.58 690.375 L1545.14 690.375 L1545.7 690.375 L1546.26 690.375 L1546.82 690.375 L1547.38 690.375 L1547.94 690.375 L1548.5 690.375 L1549.06 690.375 L1549.62 690.375 L1550.18 690.375 L1550.73 690.375 L1551.29 690.375 L1551.85 690.375 L1552.41 690.375 L1552.97 690.375 L1553.53 690.375 L1554.09 690.375 L1554.65 690.375 L1555.21 690.375 L1555.77 690.375 L1556.33 690.375 L1556.89 690.375 L1557.45 690.375 L1558 690.375 L1558.56 690.375 L1559.12 690.375 L1559.68 690.375 L1560.24 690.375 L1560.8 690.375 L1561.36 690.375 L1561.92 690.375 L1562.48 690.375 L1563.04 690.375 L1563.6 690.375 L1564.16 690.375 L1564.72 690.375 L1565.28 690.375 L1565.83 690.375 L1566.39 690.375 L1566.95 690.375 L1567.51 690.375 L1568.07 690.375 L1568.63 690.375 L1569.19 690.375 L1569.75 690.375 L1570.31 690.375 L1570.87 690.375 L1571.43 690.375 L1571.99 690.375 L1572.55 690.375 L1573.1 690.375 L1573.66 690.375 L1574.22 690.375 L1574.78 690.375 L1575.34 690.375 L1575.9 690.375 L1576.46 690.375 L1577.02 690.375 L1577.58 690.375 L1578.14 690.375 L1578.7 690.375 L1579.26 690.375 L1579.82 690.375 L1580.37 690.375 L1580.93 690.375 L1581.49 690.375 L1582.05 690.375 L1582.61 690.375 L1583.17 690.375 L1583.73 690.375 L1584.29 690.375 L1584.85 690.375 L1585.41 690.375 L1585.97 690.375 L1586.53 690.375 L1587.09 690.375 L1587.65 690.375 L1588.2 690.375 L1588.76 690.375 L1589.32 690.375 L1589.88 690.375 L1590.44 690.375 L1591 690.375 L1591.56 690.375 L1592.12 690.375 L1592.68 690.375 L1593.24 690.375 L1593.8 690.375 L1594.36 690.375 L1594.92 690.375 L1595.47 690.375 L1596.03 690.375 L1596.59 690.375 L1597.15 690.375 L1597.71 690.375 L1598.27 690.375 L1598.83 690.375 L1599.39 690.375 L1599.95 690.375 L1600.51 690.375 L1601.07 690.375 L1601.63 690.375 L1602.19 690.375 L1602.74 690.375 L1603.3 690.375 L1603.86 690.375 L1604.42 690.375 L1604.98 690.375 L1605.54 690.375 L1606.1 690.375 L1606.66 690.375 L1607.22 690.375 L1607.78 690.375 L1608.34 690.375 L1608.9 690.375 L1609.46 690.375 L1610.02 690.375 L1610.57 690.375 L1611.13 690.375 L1611.69 690.375 L1612.25 690.375 L1612.81 690.375 L1613.37 690.375 L1613.93 690.375 L1614.49 690.375 L1615.05 690.375 L1615.61 690.375 L1616.17 690.375 L1616.73 690.375 L1617.29 690.375 L1617.84 690.375 L1618.4 690.375 L1618.96 690.375 L1619.52 690.375 L1620.08 690.375 L1620.64 690.375 L1621.2 690.375 L1621.76 690.375 L1622.32 690.375 L1622.88 690.375 L1623.44 690.375 L1624 690.375 L1624.56 690.375 L1625.11 690.375 L1625.67 690.375 L1626.23 690.375 L1626.79 690.375 L1627.35 690.375 L1627.91 690.375 L1628.47 690.375 L1629.03 690.375 L1629.59 690.375 L1630.15 690.375 L1630.71 690.375 L1631.27 690.375 L1631.83 690.375 L1632.39 690.375 L1632.94 690.375 L1633.5 690.375 L1634.06 690.375 L1634.62 690.375 L1635.18 690.375 L1635.74 690.375 L1636.3 690.375 L1636.86 690.375 L1637.42 690.375 L1637.98 690.375 L1638.54 690.375 L1639.1 690.375 L1639.66 690.375 L1640.21 690.375 L1640.77 690.375 L1641.33 690.375 L1641.89 690.375 L1642.45 690.375 L1643.01 690.375 L1643.57 690.375 L1644.13 690.375 L1644.69 690.375 L1645.25 690.375 L1645.81 690.375 L1646.37 690.375 L1646.93 690.375 L1647.48 690.375 L1648.04 690.375 L1648.6 690.375 L1649.16 690.375 L1649.72 690.375 L1650.28 690.375 L1650.84 690.375 L1651.4 690.375 L1651.96 690.375 L1652.52 690.375 L1653.08 690.375 L1653.64 690.375 L1654.2 690.375 L1654.76 690.375 L1655.31 690.375 L1655.87 690.375 L1656.43 690.375 L1656.99 690.375 L1657.55 690.375 L1658.11 690.375 L1658.67 690.375 L1659.23 690.375 L1659.79 690.375 L1660.35 690.375 L1660.91 690.375 L1661.47 690.375 L1662.03 690.375 L1662.58 690.375 L1663.14 690.375 L1663.7 690.375 L1664.26 690.375 L1664.82 690.375 L1665.38 690.375 L1665.94 690.375 L1666.5 690.375 L1667.06 690.375 L1667.62 690.375 L1668.18 690.375 L1668.74 690.375 L1669.3 690.375 L1669.85 690.375 L1670.41 690.375 L1670.97 690.375 L1671.53 690.375 L1672.09 690.375 L1672.65 690.375 L1673.21 690.375 L1673.77 690.375 L1674.33 690.375 L1674.89 690.375 L1675.45 690.375 L1676.01 690.375 L1676.57 690.375 L1677.13 690.375 L1677.68 690.375 L1678.24 690.375 L1678.8 690.375 L1679.36 690.375 L1679.92 690.375 L1680.48 690.375 L1681.04 690.375 L1681.6 690.375 L1682.16 690.375 L1682.72 690.375 L1683.28 690.375 L1683.84 690.375 L1684.4 690.375 L1684.95 690.375 L1685.51 690.375 L1686.07 690.375 L1686.63 690.375 L1687.19 690.375 L1687.75 690.375 L1688.31 690.375 L1688.87 690.375 L1689.43 690.375 L1689.99 690.375 L1690.55 690.375 L1691.11 690.375 L1691.67 690.375 L1692.23 690.375 L1692.78 690.375 L1693.34 690.375 L1693.9 690.375 L1694.46 690.375 L1695.02 690.375 L1695.58 690.375 L1696.14 690.375 L1696.7 690.375 L1697.26 690.375 L1697.82 690.375 L1698.38 690.375 L1698.94 690.375 L1699.5 690.375 L1700.05 690.375 L1700.61 690.375 L1701.17 690.375 L1701.73 690.375 L1702.29 690.375 L1702.85 690.375 L1703.41 690.375 L1703.97 690.375 L1704.53 690.375 L1705.09 690.375 L1705.65 690.375 L1706.21 690.375 L1706.77 690.375 L1707.32 690.375 L1707.88 690.375 L1708.44 690.375 L1709 690.375 L1709.56 690.375 L1710.12 690.375 L1710.68 690.375 L1711.24 690.375 L1711.8 690.375 L1712.36 690.375 L1712.92 690.375 L1713.48 690.375 L1714.04 690.375 L1714.6 690.375 L1715.15 690.375 L1715.71 690.375 L1716.27 690.375 L1716.83 690.375 L1717.39 690.375 L1717.95 690.375 L1718.51 690.375 L1719.07 690.375 L1719.63 690.375 L1720.19 690.375 L1720.75 690.375 L1721.31 690.375 L1721.87 690.375 L1722.42 690.375 L1722.98 690.375 L1723.54 690.375 L1724.1 690.375 L1724.66 690.375 L1725.22 690.375 L1725.78 690.375 L1726.34 690.375 L1726.9 690.375 L1727.46 690.375 L1728.02 690.375 L1728.58 690.375 L1729.14 690.375 L1729.69 690.375 L1730.25 690.375 L1730.81 690.375 L1731.37 690.375 L1731.93 690.375 L1732.49 690.375 L1733.05 690.375 L1733.61 690.375 L1734.17 690.375 L1734.73 690.375 L1735.29 690.375 L1735.85 690.375 L1736.41 690.375 L1736.97 690.375 L1737.52 690.375 L1738.08 690.375 L1738.64 690.375 L1739.2 690.375 L1739.76 690.375 L1740.32 690.375 L1740.88 690.375 L1741.44 690.375 L1742 690.375 L1742.56 690.375 L1743.12 690.375 L1743.68 690.375 L1744.24 690.375 L1744.79 690.375 L1745.35 690.375 L1745.91 690.375 L1746.47 690.375 L1747.03 690.375 L1747.59 690.375 L1748.15 690.375 L1748.71 690.375 L1749.27 690.375 L1749.83 690.375 L1750.39 690.375 L1750.95 690.375 L1751.51 690.375 L1752.06 690.375 L1752.62 690.375 L1753.18 690.375 L1753.74 690.375 L1754.3 690.375 L1754.86 690.375 L1755.42 690.375 L1755.98 690.375 L1756.54 690.375 L1757.1 690.375 L1757.66 690.375 L1758.22 690.375 L1758.78 690.375 L1759.34 690.375 L1759.89 690.375 L1760.45 690.375 L1761.01 690.375 L1761.57 690.375 L1762.13 690.375 L1762.69 690.375 L1763.25 690.375 L1763.81 690.375 L1764.37 690.375 L1764.93 690.375 L1765.49 690.375 L1766.05 690.375 L1766.61 690.375 L1767.16 690.375 L1767.72 690.375 L1768.28 690.375 L1768.84 690.375 L1769.4 690.375 L1769.96 690.375 L1770.52 690.375 L1771.08 690.375 L1771.64 690.375 L1772.2 690.375 L1772.76 690.375 L1773.32 690.375 L1773.88 690.375 L1774.43 690.375 L1774.99 690.375 L1775.55 690.375 L1776.11 690.375 L1776.67 690.375 L1777.23 690.375 L1777.79 690.375 L1778.35 690.375 L1778.91 690.375 L1779.47 690.375 L1780.03 690.375 L1780.59 690.375 L1781.15 690.375 L1781.71 690.375 L1782.26 690.375 L1782.82 690.375 L1783.38 690.375 L1783.94 690.375 L1784.5 690.375 L1785.06 690.375 L1785.62 690.375 L1786.18 690.375 L1786.74 690.375 L1787.3 690.375 L1787.86 690.375 L1788.42 690.375 L1788.98 690.375 L1789.53 690.375 L1790.09 690.375 L1790.65 690.375 L1791.21 690.375 L1791.77 690.375 L1792.33 690.375 L1792.89 690.375 L1793.45 690.375 L1794.01 690.375 L1794.57 690.375 L1795.13 690.375 L1795.69 690.375 L1796.25 690.375 L1796.8 690.375 L1797.36 690.375 L1797.92 690.375 L1798.48 690.375 L1799.04 690.375 L1799.6 690.375 L1800.16 690.375 L1800.72 690.375 L1801.28 690.375 L1801.84 690.375 L1802.4 690.375 L1802.96 690.375 L1803.52 690.375 L1804.08 690.375 L1804.63 690.375 L1805.19 690.375 L1805.75 690.375 L1806.31 690.375 L1806.87 690.375 L1807.43 690.375 L1807.99 690.375 L1808.55 690.375 L1809.11 690.375 L1809.67 690.375 L1810.23 690.375 L1810.79 690.375 L1811.35 690.375 L1811.9 690.375 L1812.46 690.375 L1813.02 690.375 L1813.58 690.375 L1814.14 690.375 L1814.7 690.375 L1815.26 690.375 L1815.82 690.375 L1816.38 690.375 L1816.94 690.375 L1817.5 690.375 L1818.06 690.375 L1818.62 690.375 L1819.18 690.375 L1819.73 690.375 L1820.29 690.375 L1820.85 690.375 L1821.41 690.375 L1821.97 690.375 L1822.53 690.375 L1823.09 690.375 L1823.65 690.375 L1824.21 690.375 L1824.77 690.375 L1825.33 690.375 L1825.89 690.375 L1826.45 690.375 L1827 690.375 L1827.56 690.375 L1828.12 690.375 L1828.68 690.375 L1829.24 690.375 L1829.8 690.375 L1830.36 690.375 L1830.92 690.375 L1831.48 690.375 L1832.04 690.375 L1832.6 690.375 L1833.16 690.375 L1833.72 690.375 L1834.27 690.375 L1834.83 690.375 L1835.39 690.375 L1835.95 690.375 L1836.51 690.375 L1837.07 690.375 L1837.63 690.375 L1838.19 690.375 L1838.19 680.035 L1837.63 680.035 L1837.07 680.035 L1836.51 680.035 L1835.95 680.035 L1835.39 680.035 L1834.83 680.035 L1834.27 680.035 L1833.72 680.035 L1833.16 680.035 L1832.6 680.035 L1832.04 680.035 L1831.48 680.035 L1830.92 680.035 L1830.36 680.035 L1829.8 680.035 L1829.24 680.035 L1828.68 680.035 L1828.12 680.035 L1827.56 680.035 L1827 680.035 L1826.45 680.035 L1825.89 680.035 L1825.33 680.035 L1824.77 680.035 L1824.21 680.035 L1823.65 680.035 L1823.09 680.035 L1822.53 680.035 L1821.97 680.035 L1821.41 680.035 L1820.85 680.035 L1820.29 680.035 L1819.73 680.035 L1819.18 680.035 L1818.62 680.035 L1818.06 680.035 L1817.5 680.035 L1816.94 680.035 L1816.38 680.035 L1815.82 680.035 L1815.26 680.035 L1814.7 680.035 L1814.14 680.035 L1813.58 680.035 L1813.02 680.035 L1812.46 680.035 L1811.9 680.035 L1811.35 680.035 L1810.79 680.035 L1810.23 680.035 L1809.67 680.035 L1809.11 680.035 L1808.55 680.035 L1807.99 680.035 L1807.43 680.035 L1806.87 680.035 L1806.31 680.035 L1805.75 680.035 L1805.19 680.035 L1804.63 680.035 L1804.08 680.035 L1803.52 680.035 L1802.96 680.035 L1802.4 680.035 L1801.84 680.035 L1801.28 680.035 L1800.72 680.035 L1800.16 680.035 L1799.6 680.035 L1799.04 680.035 L1798.48 680.035 L1797.92 680.035 L1797.36 680.035 L1796.8 680.035 L1796.25 680.035 L1795.69 680.035 L1795.13 680.035 L1794.57 680.035 L1794.01 680.035 L1793.45 680.035 L1792.89 680.035 L1792.33 680.035 L1791.77 680.035 L1791.21 680.035 L1790.65 680.035 L1790.09 680.035 L1789.53 680.035 L1788.98 680.035 L1788.42 680.035 L1787.86 680.035 L1787.3 680.035 L1786.74 680.035 L1786.18 680.035 L1785.62 680.035 L1785.06 680.035 L1784.5 680.035 L1783.94 680.035 L1783.38 680.035 L1782.82 680.035 L1782.26 680.035 L1781.71 680.035 L1781.15 680.035 L1780.59 680.035 L1780.03 680.035 L1779.47 680.035 L1778.91 680.035 L1778.35 680.035 L1777.79 680.035 L1777.23 680.035 L1776.67 680.035 L1776.11 680.035 L1775.55 680.035 L1774.99 680.035 L1774.43 680.035 L1773.88 680.035 L1773.32 680.035 L1772.76 680.035 L1772.2 680.035 L1771.64 680.035 L1771.08 680.035 L1770.52 680.035 L1769.96 680.035 L1769.4 680.035 L1768.84 680.035 L1768.28 680.035 L1767.72 680.035 L1767.16 680.035 L1766.61 680.035 L1766.05 680.035 L1765.49 680.035 L1764.93 680.035 L1764.37 680.035 L1763.81 680.035 L1763.25 680.035 L1762.69 680.035 L1762.13 680.035 L1761.57 680.035 L1761.01 680.035 L1760.45 680.035 L1759.89 680.035 L1759.34 680.035 L1758.78 680.035 L1758.22 680.035 L1757.66 680.035 L1757.1 680.035 L1756.54 680.035 L1755.98 680.035 L1755.42 680.035 L1754.86 680.035 L1754.3 680.035 L1753.74 680.035 L1753.18 680.035 L1752.62 680.035 L1752.06 680.035 L1751.51 680.035 L1750.95 680.035 L1750.39 680.035 L1749.83 680.035 L1749.27 680.035 L1748.71 680.035 L1748.15 680.035 L1747.59 680.035 L1747.03 680.035 L1746.47 680.035 L1745.91 680.035 L1745.35 680.035 L1744.79 680.035 L1744.24 680.035 L1743.68 680.035 L1743.12 680.035 L1742.56 680.035 L1742 680.035 L1741.44 680.035 L1740.88 680.035 L1740.32 680.035 L1739.76 680.035 L1739.2 680.035 L1738.64 680.035 L1738.08 680.035 L1737.52 680.035 L1736.97 680.035 L1736.41 680.035 L1735.85 680.035 L1735.29 680.035 L1734.73 680.035 L1734.17 680.035 L1733.61 680.035 L1733.05 680.035 L1732.49 680.035 L1731.93 680.035 L1731.37 680.035 L1730.81 680.035 L1730.25 680.035 L1729.69 680.035 L1729.14 680.035 L1728.58 680.035 L1728.02 680.035 L1727.46 680.035 L1726.9 680.035 L1726.34 680.035 L1725.78 680.035 L1725.22 680.035 L1724.66 680.035 L1724.1 680.035 L1723.54 680.035 L1722.98 680.035 L1722.42 680.035 L1721.87 680.035 L1721.31 680.035 L1720.75 680.035 L1720.19 680.035 L1719.63 680.035 L1719.07 680.035 L1718.51 680.035 L1717.95 680.035 L1717.39 680.035 L1716.83 680.035 L1716.27 680.035 L1715.71 680.035 L1715.15 680.035 L1714.6 680.035 L1714.04 680.035 L1713.48 680.035 L1712.92 680.035 L1712.36 680.035 L1711.8 680.035 L1711.24 680.035 L1710.68 680.035 L1710.12 680.035 L1709.56 680.035 L1709 680.035 L1708.44 680.035 L1707.88 680.035 L1707.32 680.035 L1706.77 680.035 L1706.21 680.035 L1705.65 680.035 L1705.09 680.035 L1704.53 680.035 L1703.97 680.035 L1703.41 680.035 L1702.85 680.035 L1702.29 680.035 L1701.73 680.035 L1701.17 680.035 L1700.61 680.035 L1700.05 680.035 L1699.5 680.035 L1698.94 680.035 L1698.38 680.035 L1697.82 680.035 L1697.26 680.035 L1696.7 680.035 L1696.14 680.035 L1695.58 680.035 L1695.02 680.035 L1694.46 680.035 L1693.9 680.035 L1693.34 680.035 L1692.78 680.035 L1692.23 680.035 L1691.67 680.035 L1691.11 680.035 L1690.55 680.035 L1689.99 680.035 L1689.43 680.035 L1688.87 680.035 L1688.31 680.035 L1687.75 680.035 L1687.19 680.035 L1686.63 680.035 L1686.07 680.035 L1685.51 680.035 L1684.95 680.035 L1684.4 680.035 L1683.84 680.035 L1683.28 680.035 L1682.72 680.035 L1682.16 680.035 L1681.6 680.035 L1681.04 680.035 L1680.48 680.035 L1679.92 680.035 L1679.36 680.035 L1678.8 680.035 L1678.24 680.035 L1677.68 680.035 L1677.13 680.035 L1676.57 680.035 L1676.01 680.035 L1675.45 680.035 L1674.89 680.035 L1674.33 680.035 L1673.77 680.035 L1673.21 680.035 L1672.65 680.035 L1672.09 680.035 L1671.53 680.035 L1670.97 680.035 L1670.41 680.035 L1669.85 680.035 L1669.3 680.035 L1668.74 680.035 L1668.18 680.035 L1667.62 680.035 L1667.06 680.035 L1666.5 680.035 L1665.94 680.035 L1665.38 680.035 L1664.82 680.035 L1664.26 680.035 L1663.7 680.035 L1663.14 680.035 L1662.58 680.035 L1662.03 680.035 L1661.47 680.035 L1660.91 680.035 L1660.35 680.035 L1659.79 680.035 L1659.23 680.035 L1658.67 680.035 L1658.11 680.035 L1657.55 680.035 L1656.99 680.035 L1656.43 680.035 L1655.87 680.035 L1655.31 680.035 L1654.76 680.035 L1654.2 680.035 L1653.64 680.035 L1653.08 680.035 L1652.52 680.035 L1651.96 680.035 L1651.4 680.035 L1650.84 680.035 L1650.28 680.035 L1649.72 680.035 L1649.16 680.035 L1648.6 680.035 L1648.04 680.035 L1647.48 680.035 L1646.93 680.035 L1646.37 680.035 L1645.81 680.035 L1645.25 680.035 L1644.69 680.035 L1644.13 680.035 L1643.57 680.035 L1643.01 680.035 L1642.45 680.035 L1641.89 680.035 L1641.33 680.035 L1640.77 680.035 L1640.21 680.035 L1639.66 680.035 L1639.1 680.035 L1638.54 680.035 L1637.98 680.035 L1637.42 680.035 L1636.86 680.035 L1636.3 680.035 L1635.74 680.035 L1635.18 680.035 L1634.62 680.035 L1634.06 680.035 L1633.5 680.035 L1632.94 680.035 L1632.39 680.035 L1631.83 680.035 L1631.27 680.035 L1630.71 680.035 L1630.15 680.035 L1629.59 680.035 L1629.03 680.035 L1628.47 680.035 L1627.91 680.035 L1627.35 680.035 L1626.79 680.035 L1626.23 680.035 L1625.67 680.035 L1625.11 680.035 L1624.56 680.035 L1624 680.035 L1623.44 680.035 L1622.88 680.035 L1622.32 680.035 L1621.76 680.035 L1621.2 680.035 L1620.64 680.035 L1620.08 680.035 L1619.52 680.035 L1618.96 680.035 L1618.4 680.035 L1617.84 680.035 L1617.29 680.035 L1616.73 680.035 L1616.17 680.035 L1615.61 680.035 L1615.05 680.035 L1614.49 680.035 L1613.93 680.035 L1613.37 680.035 L1612.81 680.035 L1612.25 680.035 L1611.69 680.035 L1611.13 680.035 L1610.57 680.035 L1610.02 680.035 L1609.46 680.035 L1608.9 680.035 L1608.34 680.035 L1607.78 680.035 L1607.22 680.035 L1606.66 680.035 L1606.1 680.035 L1605.54 680.035 L1604.98 680.035 L1604.42 680.035 L1603.86 680.035 L1603.3 680.035 L1602.74 680.035 L1602.19 680.035 L1601.63 680.035 L1601.07 680.035 L1600.51 680.035 L1599.95 680.035 L1599.39 680.035 L1598.83 680.035 L1598.27 680.035 L1597.71 680.035 L1597.15 680.035 L1596.59 680.035 L1596.03 680.035 L1595.47 680.035 L1594.92 680.035 L1594.36 680.035 L1593.8 680.035 L1593.24 680.035 L1592.68 680.035 L1592.12 680.035 L1591.56 680.035 L1591 680.035 L1590.44 680.035 L1589.88 680.035 L1589.32 680.035 L1588.76 680.035 L1588.2 680.035 L1587.65 680.035 L1587.09 680.035 L1586.53 680.035 L1585.97 680.035 L1585.41 680.035 L1584.85 680.035 L1584.29 680.035 L1583.73 680.035 L1583.17 680.035 L1582.61 680.035 L1582.05 680.035 L1581.49 680.035 L1580.93 680.035 L1580.37 680.035 L1579.82 680.035 L1579.26 680.035 L1578.7 680.035 L1578.14 680.035 L1577.58 680.035 L1577.02 680.035 L1576.46 680.035 L1575.9 680.035 L1575.34 680.035 L1574.78 680.035 L1574.22 680.035 L1573.66 680.035 L1573.1 680.035 L1572.55 680.035 L1571.99 680.035 L1571.43 680.035 L1570.87 680.035 L1570.31 680.035 L1569.75 680.035 L1569.19 680.035 L1568.63 680.035 L1568.07 680.035 L1567.51 680.035 L1566.95 680.035 L1566.39 680.035 L1565.83 680.035 L1565.28 680.035 L1564.72 680.035 L1564.16 680.035 L1563.6 680.035 L1563.04 680.035 L1562.48 680.035 L1561.92 680.035 L1561.36 680.035 L1560.8 680.035 L1560.24 680.035 L1559.68 680.035 L1559.12 680.035 L1558.56 680.035 L1558 680.035 L1557.45 680.035 L1556.89 680.035 L1556.33 680.035 L1555.77 680.035 L1555.21 680.035 L1554.65 680.035 L1554.09 680.035 L1553.53 680.035 L1552.97 680.035 L1552.41 680.035 L1551.85 680.035 L1551.29 680.035 L1550.73 680.035 L1550.18 680.035 L1549.62 680.035 L1549.06 680.035 L1548.5 680.035 L1547.94 680.035 L1547.38 680.035 L1546.82 680.035 L1546.26 680.035 L1545.7 680.035 L1545.14 680.035 L1544.58 680.035 L1544.02 680.035 L1543.46 680.035 L1542.9 680.035 L1542.35 680.035 L1541.79 680.035 L1541.23 680.035 L1540.67 680.035 L1540.11 680.035 L1539.55 680.035 L1538.99 680.035 L1538.43 680.035 L1537.87 680.035 L1537.31 680.035 L1536.75 680.035 L1536.19 680.035 L1535.63 680.035 L1535.08 680.035 L1534.52 680.035 L1533.96 680.035 L1533.4 680.035 L1532.84 680.035 L1532.28 680.035 L1531.72 680.035 L1531.16 680.035 L1530.6 680.035 L1530.04 680.035 L1529.48 680.035 L1528.92 680.035 L1528.36 680.035 L1527.81 680.035 L1527.25 680.035 L1526.69 680.035 L1526.13 680.035 L1525.57 680.035 L1525.01 680.035 L1524.45 680.035 L1523.89 680.035 L1523.33 680.035 L1522.77 680.035 L1522.21 680.035 L1521.65 680.035 L1521.09 680.035 L1520.53 680.035 L1519.98 680.035 L1519.42 680.035 L1518.86 680.035 L1518.3 680.035 L1517.74 680.035 L1517.18 680.035 L1516.62 680.035 L1516.06 680.035 L1515.5 680.035 L1514.94 680.035 L1514.38 680.035 L1513.82 680.035 L1513.26 680.035 L1512.71 680.035 L1512.15 680.035 L1511.59 680.035 L1511.03 680.035 L1510.47 680.035 L1509.91 680.035 L1509.35 680.035 L1508.79 680.035 L1508.23 680.035 L1507.67 680.035 L1507.11 680.035 L1506.55 680.035 L1505.99 680.035 L1505.44 680.035 L1504.88 680.035 L1504.32 680.035 L1503.76 680.035 L1503.2 680.035 L1502.64 680.035 L1502.08 680.035 L1501.52 680.035 L1500.96 680.035 L1500.4 680.035 L1499.84 680.035 L1499.28 680.035 L1498.72 680.035 L1498.16 680.035 L1497.61 680.035 L1497.05 680.035 L1496.49 680.035 L1495.93 680.035 L1495.37 680.035 L1494.81 680.035 L1494.25 680.035 L1493.69 680.035 L1493.13 680.035 L1492.57 680.035 L1492.01 680.035 L1491.45 680.035 L1490.89 680.035 L1490.34 680.035 L1489.78 680.035 L1489.22 680.035 L1488.66 680.035 L1488.1 680.035 L1487.54 680.035 L1486.98 680.035 L1486.42 680.035 L1485.86 680.035 L1485.3 680.035 L1484.74 680.035 L1484.18 680.035 L1483.62 680.035 L1483.07 680.035 L1482.51 680.035 L1481.95 680.035 L1481.39 680.035 L1480.83 680.035 L1480.27 680.035 L1479.71 680.035 L1479.15 680.035 L1478.59 680.035 L1478.03 680.035 L1477.47 680.035 L1476.91 680.035 L1476.35 680.035 L1475.79 680.035 L1475.24 680.035 L1474.68 680.035 L1474.12 680.035 L1473.56 680.035 L1473 680.035 L1472.44 680.035 L1471.88 680.035 L1471.32 680.035 L1470.76 680.035 L1470.2 680.035 L1469.64 680.035 L1469.08 680.035 L1468.52 680.035 L1467.97 680.035 L1467.41 680.035 L1466.85 680.035 L1466.29 680.035 L1465.73 680.035 L1465.17 680.035 L1464.61 680.035 L1464.05 680.035 L1463.49 680.035 L1462.93 680.035 L1462.37 680.035 L1461.81 680.035 L1461.25 680.035 L1460.7 680.035 L1460.14 680.035 L1459.58 680.035 L1459.02 680.035 L1458.46 680.035 L1457.9 680.035 L1457.34 680.035 L1456.78 680.035 L1456.22 680.035 L1455.66 680.035 L1455.1 680.035 L1454.54 680.035 L1453.98 680.035 L1453.42 680.035 L1452.87 680.035 L1452.31 680.035 L1451.75 680.035 L1451.19 680.035 L1450.63 680.035 L1450.07 680.035 L1449.51 680.035 L1448.95 680.035 L1448.39 680.035 L1447.83 680.035 L1447.27 680.035 L1446.71 680.035 L1446.15 680.035 L1445.6 680.035 L1445.04 680.035 L1444.48 680.035 L1443.92 680.035 L1443.36 680.035 L1442.8 680.035 L1442.24 680.035 L1441.68 680.035 L1441.12 680.035 L1440.56 680.035 L1440 680.035 L1439.44 680.035 L1438.88 680.035 L1438.33 680.035 L1437.77 680.035 L1437.21 680.035 L1436.65 680.035 L1436.09 680.035 L1435.53 680.035 L1434.97 680.035 L1434.41 680.035 L1433.85 680.035 L1433.29 680.035 L1432.73 680.035 L1432.17 680.035 L1431.61 680.035 L1431.05 680.035 L1430.5 680.035 L1429.94 680.035 L1429.38 680.035 L1428.82 680.035 L1428.26 680.035 L1427.7 680.035 L1427.14 680.035 L1426.58 680.035 L1426.02 680.035 L1425.46 680.035 L1424.9 680.035 L1424.34 680.035 L1423.78 680.035 L1423.23 680.035 L1422.67 680.035 L1422.11 680.035 L1421.55 680.035 L1420.99 680.035 L1420.43 680.035 L1419.87 680.035 L1419.31 680.035 L1418.75 680.035 L1418.19 680.035 L1417.63 680.035 L1417.07 680.035 L1416.51 680.035 L1415.95 680.035 L1415.4 680.035 L1414.84 680.035 L1414.28 680.035 L1413.72 680.035 L1413.16 680.035 L1412.6 680.035 L1412.04 680.035 L1411.48 680.035 L1410.92 680.035 L1410.36 680.035 L1409.8 680.035 L1409.24 680.035 L1408.68 680.035 L1408.13 680.035 L1407.57 680.035 L1407.01 680.035 L1406.45 680.035 L1405.89 680.035 L1405.33 680.035 L1404.77 680.035 L1404.21 680.035 L1403.65 680.035 L1403.09 680.035 L1402.53 680.035 L1401.97 680.035 L1401.41 680.035 L1400.86 680.035 L1400.3 680.035 L1399.74 680.035 L1399.18 680.035 L1398.62 680.035 L1398.06 680.035 L1397.5 680.035 L1396.94 680.035 L1396.38 680.035 L1395.82 680.035 L1395.26 680.035 L1394.7 680.035 L1394.14 680.035 L1393.58 680.035 L1393.03 680.035 L1392.47 680.035 L1391.91 680.035 L1391.35 680.035 L1390.79 680.035 L1390.23 680.035 L1389.67 680.035 L1389.11 680.035 L1388.55 680.035 L1387.99 680.035 L1387.43 680.035 L1386.87 680.035 L1386.31 680.035 L1385.76 680.035 L1385.2 680.035 L1384.64 680.035 L1384.08 680.035 L1383.52 680.035 L1382.96 680.035 L1382.4 680.035 L1381.84 680.035 L1381.28 680.035 L1380.72 680.035 L1380.16 680.035 L1379.6 680.035 L1379.04 680.035 L1378.49 680.035 L1377.93 680.035 L1377.37 680.035 L1376.81 680.035 L1376.25 680.035 L1375.69 680.035 L1375.13 680.035 L1374.57 680.035 L1374.01 680.035 L1373.45 680.035 L1372.89 680.035 L1372.33 680.035 L1371.77 680.035 L1371.21 680.035 L1370.66 680.035 L1370.1 680.035 L1369.54 680.035 L1368.98 680.035 L1368.42 680.035 L1367.86 680.035 L1367.3 680.035 L1366.74 680.035 L1366.18 680.035 L1365.62 680.035 L1365.06 680.035 L1364.5 680.035 L1363.94 680.035 L1363.39 680.035 L1362.83 680.035 L1362.27 680.035 L1361.71 680.035 L1361.15 680.035 L1360.59 680.035 L1360.03 680.035 L1359.47 680.035 L1358.91 680.035 L1358.35 680.035 L1357.79 680.035 L1357.23 680.035 L1356.67 680.035 L1356.12 680.035 L1355.56 680.035 L1355 680.035 L1354.44 680.035 L1353.88 680.035 L1353.32 680.035 L1352.76 680.035 L1352.2 680.035 L1351.64 680.035 L1351.08 680.035 L1350.52 680.035 L1349.96 680.035 L1349.4 680.035 L1348.84 680.035 L1348.29 680.035 L1347.73 680.035 L1347.17 680.035 L1346.61 680.035 L1346.05 680.035 L1345.49 680.035 L1344.93 680.035 L1344.37 680.035 L1343.81 680.035 L1343.25 680.035 L1342.69 680.035 L1342.13 680.035 L1341.57 680.035 L1341.02 680.035 L1340.46 680.035 L1339.9 680.035 L1339.34 680.035 L1338.78 680.035 L1338.22 680.035 L1337.66 680.035 L1337.1 680.035 L1336.54 680.035 L1335.98 680.035 L1335.42 680.035 L1334.86 680.035 L1334.3 680.035 L1333.75 680.035 L1333.19 680.035 L1332.63 680.035 L1332.07 680.035 L1331.51 680.035 L1330.95 680.035 L1330.39 680.035 L1329.83 680.035 L1329.27 680.035 L1328.71 680.035 L1328.15 680.035 L1327.59 680.035 L1327.03 680.035 L1326.47 680.035 L1325.92 680.035 L1325.36 680.035 L1324.8 680.035 L1324.24 680.035 L1323.68 680.035 L1323.12 680.035 L1322.56 680.035 L1322 680.035 L1321.44 680.035 L1320.88 680.035 L1320.32 680.035 L1319.76 680.035 L1319.2 680.035 L1318.65 680.035 L1318.09 680.035 L1317.53 680.035 L1316.97 680.035 L1316.41 680.035 L1315.85 680.035 L1315.29 680.035 L1314.73 680.035 L1314.17 680.035 L1313.61 680.035 L1313.05 680.035 L1312.49 680.035 L1311.93 680.035 L1311.38 680.035 L1310.82 680.035 L1310.26 680.035 L1309.7 680.035 L1309.14 680.035 L1308.58 680.035 L1308.02 680.035 L1307.46 680.035 L1306.9 680.035 L1306.34 680.035 L1305.78 680.035 L1305.22 680.035 L1304.66 680.035 L1304.1 680.035 L1303.55 680.035 L1302.99 680.035 L1302.43 680.035 L1301.87 680.035 L1301.31 680.035 L1300.75 680.035 L1300.19 680.035 L1299.63 680.035 L1299.07 680.035 L1298.51 680.035 L1297.95 680.035 L1297.39 680.035 L1296.83 680.035 L1296.28 680.035 L1295.72 680.035 L1295.16 680.035 L1294.6 680.035 L1294.04 680.035 L1293.48 680.035 L1292.92 680.035 L1292.36 680.035 L1291.8 680.035 L1291.24 680.035 L1290.68 680.035 L1290.12 680.035 L1289.56 680.035 L1289 680.035 L1288.45 680.035 L1287.89 680.035 L1287.33 680.035 L1286.77 680.035 L1286.21 680.035 L1285.65 680.035 L1285.09 680.035 L1284.53 680.035 L1283.97 680.035 L1283.41 680.035 L1282.85 680.035 L1282.29 680.035 L1281.73 680.035 L1281.18 680.035 L1280.62 680.035 L1280.06 680.035 L1279.5 680.035 L1278.94 680.035 L1278.38 680.035 L1277.82 680.035 L1277.26 680.035 L1276.7 680.035 L1276.14 680.035 L1275.58 680.035 L1275.02 680.035 L1274.46 680.035 L1273.91 680.035 L1273.35 680.035 L1272.79 680.035 L1272.23 680.035 L1271.67 680.035 L1271.11 680.035 L1270.55 680.035 L1269.99 680.035 L1269.43 680.035 L1268.87 680.035 L1268.31 680.035 L1267.75 680.035 L1267.19 680.035 L1266.63 680.035 L1266.08 680.035 L1265.52 680.035 L1264.96 680.035 L1264.4 680.035 L1263.84 680.035 L1263.28 680.035 L1262.72 680.035 L1262.16 680.035 L1261.6 680.035 L1261.04 680.035 L1260.48 680.035 L1259.92 680.035 L1259.36 680.035 L1258.81 680.035 L1258.25 680.035 L1257.69 680.035 L1257.13 680.035 L1256.57 680.035 L1256.01 680.035 L1255.45 680.035 L1254.89 680.035 L1254.33 680.035 L1253.77 680.035 L1253.21 680.035 L1252.65 680.035 L1252.09 680.035 L1251.54 680.035 L1250.98 680.035 L1250.42 680.035 L1249.86 680.035 L1249.3 680.035 L1248.74 680.035 L1248.18 680.035 L1247.62 680.035 L1247.06 680.035 L1246.5 680.035 L1245.94 680.035 L1245.38 680.035 L1244.82 680.035 L1244.26 680.035 L1243.71 680.035 L1243.15 680.035 L1242.59 680.035 L1242.03 680.035 L1241.47 680.035 L1240.91 680.035 L1240.35 680.035 L1239.79 680.035 L1239.23 680.035 L1238.67 680.035 L1238.11 680.035 L1237.55 680.035 L1236.99 680.035 L1236.44 680.035 L1235.88 680.035 L1235.32 680.035 L1234.76 680.035 L1234.2 680.035 L1233.64 680.035 L1233.08 680.035 L1232.52 680.035 L1231.96 680.035 L1231.4 680.035 L1230.84 680.035 L1230.28 680.035 L1229.72 680.035 L1229.17 680.035 L1228.61 680.035 L1228.05 680.035 L1227.49 680.035 L1226.93 680.035 L1226.37 680.035 L1225.81 680.035 L1225.25 680.035 L1224.69 680.035 L1224.13 680.035 L1223.57 680.035 L1223.01 680.035 L1222.45 680.035 L1221.89 680.035 L1221.34 680.035 L1220.78 680.035 L1220.22 680.035 L1219.66 680.035 L1219.1 680.035 L1218.54 680.035 L1217.98 680.035 L1217.42 680.035 L1216.86 680.035 L1216.3 680.035 L1215.74 680.035 L1215.18 680.035 L1214.62 680.035 L1214.07 680.035 L1213.51 680.035 L1212.95 680.035 L1212.39 680.035 L1211.83 680.035 L1211.27 680.035 L1210.71 680.035 L1210.15 680.035 L1209.59 680.035 L1209.03 680.035 L1208.47 680.035 L1207.91 680.035 L1207.35 680.035 L1206.8 680.035 L1206.24 680.035 L1205.68 680.035 L1205.12 680.035 L1204.56 680.035 L1204 680.035 L1203.44 680.035 L1202.88 680.035 L1202.32 680.035 L1201.76 680.035 L1201.2 680.035 L1200.64 680.035 L1200.08 680.035 L1199.52 680.035 L1198.97 680.035 L1198.41 680.035 L1197.85 680.035 L1197.29 680.035 L1196.73 680.035 L1196.17 680.035 L1195.61 680.035 L1195.05 680.035 L1194.49 680.035 L1193.93 680.035 L1193.37 680.035 L1192.81 680.035 L1192.25 680.035 L1191.7 680.035 L1191.14 680.035 L1190.58 680.035 L1190.02 680.035 L1189.46 680.035 L1188.9 680.035 L1188.34 680.035 L1187.78 680.035 L1187.22 680.035 L1186.66 680.035 L1186.1 680.035 L1185.54 680.035 L1184.98 680.035 L1184.43 680.035 L1183.87 680.035 L1183.31 680.035 L1182.75 680.035 L1182.19 680.035 L1181.63 680.035 L1181.07 680.035 L1180.51 680.035 L1179.95 680.035 L1179.39 680.035 L1178.83 680.035 L1178.27 680.035 L1177.71 680.035 L1177.15 680.035 L1176.6 680.035 L1176.04 680.035 L1175.48 680.035 L1174.92 680.035 L1174.36 680.035 L1173.8 680.035 L1173.24 680.035 L1172.68 680.035 L1172.12 680.035 L1171.56 680.035 L1171 680.035 L1170.44 680.035 L1169.88 680.035 L1169.33 680.035 L1168.77 680.035 L1168.21 680.035 L1167.65 680.035 L1167.09 680.035 L1166.53 680.035 L1165.97 680.035 L1165.41 680.035 L1164.85 680.035 L1164.29 680.035 L1163.73 680.035 L1163.17 680.035 L1162.61 680.035 L1162.05 680.035 L1161.5 680.035 L1160.94 680.035 L1160.38 680.035 L1159.82 680.035 L1159.26 680.035 L1158.7 680.035 L1158.14 680.035 L1157.58 680.035 L1157.02 680.035 L1156.46 680.035 L1155.9 680.035 L1155.34 680.035 L1154.78 680.035 L1154.23 680.035 L1153.67 680.035 L1153.11 680.035 L1152.55 680.035 L1151.99 680.035 L1151.43 680.035 L1150.87 680.035 L1150.31 680.035 L1149.75 680.035 L1149.19 680.035 L1148.63 680.035 L1148.07 680.035 L1147.51 680.035 L1146.96 680.035 L1146.4 680.035 L1145.84 680.035 L1145.28 680.035 L1144.72 680.035 L1144.16 680.035 L1143.6 680.035 L1143.04 680.035 L1142.48 680.035 L1141.92 680.035 L1141.36 680.035 L1140.8 680.035 L1140.24 680.035 L1139.68 680.035 L1139.13 680.035 L1138.57 680.035 L1138.01 680.035 L1137.45 680.035 L1136.89 680.035 L1136.33 680.035 L1135.77 680.035 L1135.21 680.035 L1134.65 680.035 L1134.09 680.035 L1133.53 680.035 L1132.97 680.035 L1132.41 680.035 L1131.86 680.035 L1131.3 680.035 L1130.74 680.035 L1130.18 680.035 L1129.62 680.035 L1129.06 680.035 L1128.5 680.035 L1127.94 680.035 L1127.38 680.035 L1126.82 680.035 L1126.26 680.035 L1125.7 680.035 L1125.14 680.035 L1124.59 680.035 L1124.03 680.035 L1123.47 680.035 L1122.91 680.035 L1122.35 680.035 L1121.79 680.035 L1121.23 680.035 L1120.67 680.035 L1120.11 680.035 L1119.55 680.035 L1118.99 680.035 L1118.43 680.035 L1117.87 680.035 L1117.31 680.035 L1116.76 680.035 L1116.2 680.035 L1115.64 680.035 L1115.08 680.035 L1114.52 680.035 L1113.96 680.035 L1113.4 680.035 L1112.84 680.035 L1112.28 680.035 L1111.72 680.035 L1111.16 680.035 L1110.6 680.035 L1110.04 680.035 L1109.49 680.035 L1108.93 680.035 L1108.37 680.035 L1107.81 680.035 L1107.25 680.035 L1106.69 680.035 L1106.13 680.035 L1105.57 680.035 L1105.01 680.035 L1104.45 680.035 L1103.89 680.035 L1103.33 680.035 L1102.77 680.035 L1102.22 680.035 L1101.66 680.035 L1101.1 680.035 L1100.54 680.035 L1099.98 680.035 L1099.42 680.035 L1098.86 680.035 L1098.3 680.035 L1097.74 680.035 L1097.18 680.035 L1096.62 680.035 L1096.06 680.035 L1095.5 680.035 L1094.94 680.035 L1094.39 680.035 L1093.83 680.035 L1093.27 680.035 L1092.71 680.035 L1092.15 680.035 L1091.59 680.035 L1091.03 680.035 L1090.47 680.035 L1089.91 680.035 L1089.35 680.035 L1088.79 680.035 L1088.23 680.035 L1087.67 680.035 L1087.12 680.035 L1086.56 680.035 L1086 680.035 L1085.44 680.035 L1084.88 680.035 L1084.32 680.035 L1083.76 680.035 L1083.2 680.035 L1082.64 680.035 L1082.08 680.035 L1081.52 680.035 L1080.96 680.035 L1080.4 680.035 L1079.85 680.035 L1079.29 680.035 L1078.73 680.035 L1078.17 680.035 L1077.61 680.035 L1077.05 680.035 L1076.49 680.035 L1075.93 680.035 L1075.37 680.035 L1074.81 680.035 L1074.25 680.035 L1073.69 680.035 L1073.13 680.035 L1072.57 680.035 L1072.02 680.035 L1071.46 680.035 L1070.9 680.035 L1070.34 680.035 L1069.78 680.035 L1069.22 680.035 L1068.66 680.035 L1068.1 680.035 L1067.54 680.035 L1066.98 680.035 L1066.42 680.035 L1065.86 680.035 L1065.3 680.035 L1064.75 680.035 L1064.19 680.035 L1063.63 680.035 L1063.07 680.035 L1062.51 680.035 L1061.95 680.035 L1061.39 680.035 L1060.83 680.035 L1060.27 680.035 L1059.71 680.035 L1059.15 680.035 L1058.59 680.035 L1058.03 680.035 L1057.48 680.035 L1056.92 680.035 L1056.36 680.035 L1055.8 680.035 L1055.24 680.035 L1054.68 680.035 L1054.12 680.035 L1053.56 680.035 L1053 680.035 L1052.44 680.035 L1051.88 680.035 L1051.32 680.035 L1050.76 680.035 L1050.2 680.035 L1049.65 680.035 L1049.09 680.035 L1048.53 680.035 L1047.97 680.035 L1047.41 680.035 L1046.85 680.035 L1046.29 680.035 L1045.73 680.035 L1045.17 680.035 L1044.61 680.035 L1044.05 680.035 L1043.49 680.035 L1042.93 680.035 L1042.38 680.035 L1041.82 680.035 L1041.26 680.035 L1040.7 680.035 L1040.14 680.035 L1039.58 680.035 L1039.02 680.035 L1038.46 680.035 L1037.9 680.035 L1037.34 680.035 L1036.78 680.035 L1036.22 680.035 L1035.66 680.035 L1035.1 680.035 L1034.55 680.035 L1033.99 680.035 L1033.43 680.035 L1032.87 680.035 L1032.31 680.035 L1031.75 680.035 L1031.19 680.035 L1030.63 680.035 L1030.07 680.035 L1029.51 680.035 L1028.95 680.035 L1028.39 680.035 L1027.83 680.035 L1027.28 680.035 L1026.72 680.035 L1026.16 680.035 L1025.6 680.035 L1025.04 680.035 L1024.48 680.035 L1023.92 680.035 L1023.36 680.035 L1022.8 680.035 L1022.24 680.035 L1021.68 680.035 L1021.12 680.035 L1020.56 680.035 L1020.01 680.035 L1019.45 680.035 L1018.89 680.035 L1018.33 680.035 L1017.77 680.035 L1017.21 680.035 L1016.65 680.035 L1016.09 680.035 L1015.53 680.035 L1014.97 680.035 L1014.41 680.035 L1013.85 680.035 L1013.29 680.035 L1012.73 680.035 L1012.18 680.035 L1011.62 680.035 L1011.06 680.035 L1010.5 680.035 L1009.94 680.035 L1009.38 680.035 L1008.82 680.035 L1008.26 680.035 L1007.7 680.035 L1007.14 680.035 L1006.58 680.035 L1006.02 680.035 L1005.46 680.035 L1004.91 680.035 L1004.35 680.035 L1003.79 680.035 L1003.23 680.035 L1002.67 680.035 L1002.11 680.035 L1001.55 680.035 L1000.99 680.035 L1000.43 680.035 L999.872 680.035 L999.313 680.035 L998.754 680.035 L998.194 680.035 L997.635 680.035 L997.076 680.035 L996.517 680.035 L995.957 680.035 L995.398 680.035 L994.839 680.035 L994.28 680.035 L993.72 680.035 L993.161 680.035 L992.602 680.035 L992.043 680.035 L991.483 680.035 L990.924 680.035 L990.365 680.035 L989.806 680.035 L989.246 680.035 L988.687 680.035 L988.128 680.035 L987.569 680.035 L987.009 680.035 L986.45 680.035 L985.891 680.035 L985.332 680.035 L984.772 680.035 L984.213 680.035 L983.654 680.035 L983.095 680.035 L982.535 680.035 L981.976 680.035 L981.417 680.035 L980.858 680.035 L980.298 680.035 L979.739 680.035 L979.18 680.035 L978.621 680.035 L978.061 680.035 L977.502 680.035 L976.943 680.035 L976.384 680.035 L975.824 680.035 L975.265 680.035 L974.706 680.035 L974.147 680.035 L973.587 680.035 L973.028 680.035 L972.469 680.035 L971.91 680.035 L971.35 680.035 L970.791 680.035 L970.232 680.035 L969.673 680.035 L969.113 680.035 L968.554 680.035 L967.995 680.035 L967.436 680.035 L966.876 680.035 L966.317 680.035 L965.758 680.035 L965.199 680.035 L964.639 680.035 L964.08 680.035 L963.521 680.035 L962.962 680.035 L962.402 680.035 L961.843 680.035 L961.284 680.035 L960.725 680.035 L960.165 680.035 L959.606 680.035 L959.047 680.035 L958.488 680.035 L957.928 680.035 L957.369 680.035 L956.81 680.035 L956.251 680.035 L955.691 680.035 L955.132 680.035 L954.573 680.035 L954.014 680.035 L953.454 680.035 L952.895 680.035 L952.336 680.035 L951.777 680.035 L951.217 680.035 L950.658 680.035 L950.099 680.035 L949.54 680.035 L948.98 680.035 L948.421 680.035 L947.862 680.035 L947.303 680.035 L946.743 680.035 L946.184 680.035 L945.625 680.035 L945.066 680.035 L944.506 680.035 L943.947 680.035 L943.388 680.035 L942.829 680.035 L942.269 680.035 L941.71 680.035 L941.151 680.035 L940.592 680.035 L940.032 680.035 L939.473 680.035 L938.914 680.035 L938.355 680.035 L937.795 680.035 L937.236 680.035 L936.677 680.035 L936.118 680.035 L935.558 680.035 L934.999 680.035 L934.44 680.035 L933.881 680.035 L933.321 680.035 L932.762 680.035 L932.203 680.035 L931.644 680.035 L931.084 680.035 L930.525 680.035 L929.966 680.035 L929.406 680.035 L928.847 680.035 L928.288 680.035 L927.729 680.035 L927.169 680.035 L926.61 680.035 L926.051 680.035 L925.492 680.035 L924.932 680.035 L924.373 680.035 L923.814 680.035 L923.255 680.035 L922.695 680.035 L922.136 680.035 L921.577 680.035 L921.018 680.035 L920.458 680.035 L919.899 680.035 L919.34 680.035 L918.781 680.035 L918.221 680.035 L917.662 680.035 L917.103 680.035 L916.544 680.035 L915.984 680.035 L915.425 680.035 L914.866 680.035 L914.307 680.035 L913.747 680.035 L913.188 680.035 L912.629 680.035 L912.07 680.035 L911.51 680.035 L910.951 680.035 L910.392 680.035 L909.833 680.035 L909.273 680.035 L908.714 680.035 L908.155 680.035 L907.596 680.035 L907.036 680.035 L906.477 680.035 L905.918 680.035 L905.359 680.035 L904.799 680.035 L904.24 680.035 L903.681 680.035 L903.122 680.035 L902.562 680.035 L902.003 680.035 L901.444 680.035 L900.885 680.035 L900.325 680.035 L899.766 680.035 L899.207 680.035 L898.648 680.035 L898.088 680.035 L897.529 680.035 L896.97 680.035 L896.411 680.035 L895.851 680.035 L895.292 680.035 L894.733 680.035 L894.174 680.035 L893.614 680.035 L893.055 680.035 L892.496 680.035 L891.937 680.035 L891.377 680.035 L890.818 680.035 L890.259 680.035 L889.7 680.035 L889.14 680.035 L888.581 680.035 L888.022 680.035 L887.463 680.035 L886.903 680.035 L886.344 680.035 L885.785 680.035 L885.226 680.035 L884.666 680.035 L884.107 680.035 L883.548 680.035 L882.989 680.035 L882.429 680.035 L881.87 680.035 L881.311 680.035 L880.752 680.035 L880.192 680.035 L879.633 680.035 L879.074 680.035 L878.515 680.035 L877.955 680.035 L877.396 680.035 L876.837 680.035 L876.278 680.035 L875.718 680.035 L875.159 680.035 L874.6 680.035 L874.041 680.035 L873.481 680.035 L872.922 680.035 L872.363 680.035 L871.804 680.035 L871.244 680.035 L870.685 680.035 L870.126 680.035 L869.567 680.035 L869.007 680.035 L868.448 680.035 L867.889 680.035 L867.33 680.035 L866.77 680.035 L866.211 680.035 L865.652 680.035 L865.093 680.035 L864.533 680.035 L863.974 680.035 L863.415 680.035 L862.856 680.035 L862.296 680.035 L861.737 680.035 L861.178 680.035 L860.619 680.035 L860.059 680.035 L859.5 680.035 L858.941 680.035 L858.382 680.035 L857.822 680.035 L857.263 680.035 L856.704 680.035 L856.145 680.035 L855.585 680.035 L855.026 680.035 L854.467 680.035 L853.908 680.035 L853.348 680.035 L852.789 680.035 L852.23 680.035 L851.671 680.035 L851.111 680.035 L850.552 680.035 L849.993 680.035 L849.434 680.035 L848.874 680.035 L848.315 680.035 L847.756 680.035 L847.197 680.035 L846.637 680.035 L846.078 680.035 L845.519 680.035 L844.96 680.035 L844.4 680.035 L843.841 680.035 L843.282 680.035 L842.723 680.035 L842.163 680.035 L841.604 680.035 L841.045 680.035 L840.486 680.035 L839.926 680.035 L839.367 680.035 L838.808 680.035 L838.249 680.035 L837.689 680.035 L837.13 680.035 L836.571 680.035 L836.012 680.035 L835.452 680.035 L834.893 680.035 L834.334 680.035 L833.775 680.035 L833.215 680.035 L832.656 680.035 L832.097 680.035 L831.538 680.035 L830.978 680.035 L830.419 680.035 L829.86 680.035 L829.301 680.035 L828.741 680.035 L828.182 680.035 L827.623 680.035 L827.064 680.035 L826.504 680.035 L825.945 680.035 L825.386 680.035 L824.827 680.035 L824.267 680.035 L823.708 680.035 L823.149 680.035 L822.59 680.035 L822.03 680.035 L821.471 680.035 L820.912 680.035 L820.353 680.035 L819.793 680.035 L819.234 680.035 L818.675 680.035 L818.116 680.035 L817.556 680.035 L816.997 680.035 L816.438 680.035 L815.879 680.035 L815.319 680.035 L814.76 680.035 L814.201 680.035 L813.642 680.035 L813.082 680.035 L812.523 680.035 L811.964 680.035 L811.405 680.035 L810.845 680.035 L810.286 680.035 L809.727 680.035 L809.168 680.035 L808.608 680.035 L808.049 680.035 L807.49 680.035 L806.931 680.035 L806.371 680.035 L805.812 680.035 L805.253 680.035 L804.693 680.035 L804.134 680.035 L803.575 680.035 L803.016 680.035 L802.456 680.035 L801.897 680.035 L801.338 680.035 L800.779 680.035 L800.219 680.035 L799.66 680.035 L799.101 680.035 L798.542 680.035 L797.982 680.035 L797.423 680.035 L796.864 680.035 L796.305 680.035 L795.745 680.035 L795.186 680.035 L794.627 680.035 L794.068 680.035 L793.508 680.035 L792.949 680.035 L792.39 680.035 L791.831 680.035 L791.271 680.035 L790.712 680.035 L790.153 680.035 L789.594 680.035 L789.034 680.035 L788.475 680.035 L787.916 680.035 L787.357 680.035 L786.797 680.035 L786.238 680.035 L785.679 680.035 L785.12 680.035 L784.56 680.035 L784.001 680.035 L783.442 680.035 L782.883 680.035 L782.323 680.035 L781.764 680.035 L781.205 680.035 L780.646 680.035 L780.086 680.035 L779.527 680.035 L778.968 680.035 L778.409 680.035 L777.849 680.035 L777.29 680.035 L776.731 680.035 L776.172 680.035 L775.612 680.035 L775.053 680.035 L774.494 680.035 L773.935 680.035 L773.375 680.035 L772.816 680.035 L772.257 680.035 L771.698 680.035 L771.138 680.035 L770.579 680.035 L770.02 680.035 L769.461 680.035 L768.901 680.035 L768.342 680.035 L767.783 680.035 L767.224 680.035 L766.664 680.035 L766.105 680.035 L765.546 680.035 L764.987 680.035 L764.427 680.035 L763.868 680.035 L763.309 680.035 L762.75 680.035 L762.19 680.035 L761.631 680.035 L761.072 680.035 L760.513 680.035 L759.953 680.035 L759.394 680.035 L758.835 680.035 L758.276 680.035 L757.716 680.035 L757.157 680.035 L756.598 680.035 L756.039 680.035 L755.479 680.035 L754.92 680.035 L754.361 680.035 L753.802 680.035 L753.242 680.035 L752.683 680.035 L752.124 680.035 L751.565 680.035 L751.005 680.035 L750.446 680.035 L749.887 680.035 L749.328 680.035 L748.768 680.035 L748.209 680.035 L747.65 680.035 L747.091 680.035 L746.531 680.035 L745.972 680.035 L745.413 680.035 L744.854 680.035 L744.294 680.035 L743.735 680.035 L743.176 680.035 L742.617 680.035 L742.057 680.035 L741.498 680.035 L740.939 680.035 L740.38 680.035 L739.82 680.035 L739.261 680.035 L738.702 680.035 L738.143 680.035 L737.583 680.035 L737.024 680.035 L736.465 680.035 L735.906 680.035 L735.346 680.035 L734.787 680.035 L734.228 680.035 L733.669 680.035 L733.109 680.035 L732.55 680.035 L731.991 680.035 L731.432 680.035 L730.872 680.035 L730.313 680.035 L729.754 680.035 L729.195 680.035 L728.635 680.035 L728.076 680.035 L727.517 680.035 L726.958 680.035 L726.398 680.035 L725.839 680.035 L725.28 680.035 L724.721 680.035 L724.161 680.035 L723.602 680.035 L723.043 680.035 L722.484 680.035 L721.924 680.035 L721.365 680.035 L720.806 680.035 L720.247 680.035  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip533)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,685.205 720.806,685.205 721.365,685.205 721.924,685.205 722.484,685.205 723.043,685.205 723.602,685.205 724.161,685.205 724.721,685.205 725.28,685.205 725.839,685.205 726.398,685.205 726.958,685.205 727.517,685.205 728.076,685.205 728.635,685.205 729.195,685.205 729.754,685.205 730.313,685.205 730.872,685.205 731.432,685.205 731.991,685.205 732.55,685.205 733.109,685.205 733.669,685.205 734.228,685.205 734.787,685.205 735.346,685.205 735.906,685.205 736.465,685.205 737.024,685.205 737.583,685.205 738.143,685.205 738.702,685.205 739.261,685.205 739.82,685.205 740.38,685.205 740.939,685.205 741.498,685.205 742.057,685.205 742.617,685.205 743.176,685.205 743.735,685.205 744.294,685.205 744.854,685.205 745.413,685.205 745.972,685.205 746.531,685.205 747.091,685.205 747.65,685.205 748.209,685.205 748.768,685.205 749.328,685.205 749.887,685.205 750.446,685.205 751.005,685.205 751.565,685.205 752.124,685.205 752.683,685.205 753.242,685.205 753.802,685.205 754.361,685.205 754.92,685.205 755.479,685.205 756.039,685.205 756.598,685.205 757.157,685.205 757.716,685.205 758.276,685.205 758.835,685.205 759.394,685.205 759.953,685.205 760.513,685.205 761.072,685.205 761.631,685.205 762.19,685.205 762.75,685.205 763.309,685.205 763.868,685.205 764.427,685.205 764.987,685.205 765.546,685.205 766.105,685.205 766.664,685.205 767.224,685.205 767.783,685.205 768.342,685.205 768.901,685.205 769.461,685.205 770.02,685.205 770.579,685.205 771.138,685.205 771.698,685.205 772.257,685.205 772.816,685.205 773.375,685.205 773.935,685.205 774.494,685.205 775.053,685.205 775.612,685.205 776.172,685.205 776.731,685.205 777.29,685.205 777.849,685.205 778.409,685.205 778.968,685.205 779.527,685.205 780.086,685.205 780.646,685.205 781.205,685.205 781.764,685.205 782.323,685.205 782.883,685.205 783.442,685.205 784.001,685.205 784.56,685.205 785.12,685.205 785.679,685.205 786.238,685.205 786.797,685.205 787.357,685.205 787.916,685.205 788.475,685.205 789.034,685.205 789.594,685.205 790.153,685.205 790.712,685.205 791.271,685.205 791.831,685.205 792.39,685.205 792.949,685.205 793.508,685.205 794.068,685.205 794.627,685.205 795.186,685.205 795.745,685.205 796.305,685.205 796.864,685.205 797.423,685.205 797.982,685.205 798.542,685.205 799.101,685.205 799.66,685.205 800.219,685.205 800.779,685.205 801.338,685.205 801.897,685.205 802.456,685.205 803.016,685.205 803.575,685.205 804.134,685.205 804.693,685.205 805.253,685.205 805.812,685.205 806.371,685.205 806.931,685.205 807.49,685.205 808.049,685.205 808.608,685.205 809.168,685.205 809.727,685.205 810.286,685.205 810.845,685.205 811.405,685.205 811.964,685.205 812.523,685.205 813.082,685.205 813.642,685.205 814.201,685.205 814.76,685.205 815.319,685.205 815.879,685.205 816.438,685.205 816.997,685.205 817.556,685.205 818.116,685.205 818.675,685.205 819.234,685.205 819.793,685.205 820.353,685.205 820.912,685.205 821.471,685.205 822.03,685.205 822.59,685.205 823.149,685.205 823.708,685.205 824.267,685.205 824.827,685.205 825.386,685.205 825.945,685.205 826.504,685.205 827.064,685.205 827.623,685.205 828.182,685.205 828.741,685.205 829.301,685.205 829.86,685.205 830.419,685.205 830.978,685.205 831.538,685.205 832.097,685.205 832.656,685.205 833.215,685.205 833.775,685.205 834.334,685.205 834.893,685.205 835.452,685.205 836.012,685.205 836.571,685.205 837.13,685.205 837.689,685.205 838.249,685.205 838.808,685.205 839.367,685.205 839.926,685.205 840.486,685.205 841.045,685.205 841.604,685.205 842.163,685.205 842.723,685.205 843.282,685.205 843.841,685.205 844.4,685.205 844.96,685.205 845.519,685.205 846.078,685.205 846.637,685.205 847.197,685.205 847.756,685.205 848.315,685.205 848.874,685.205 849.434,685.205 849.993,685.205 850.552,685.205 851.111,685.205 851.671,685.205 852.23,685.205 852.789,685.205 853.348,685.205 853.908,685.205 854.467,685.205 855.026,685.205 855.585,685.205 856.145,685.205 856.704,685.205 857.263,685.205 857.822,685.205 858.382,685.205 858.941,685.205 859.5,685.205 860.059,685.205 860.619,685.205 861.178,685.205 861.737,685.205 862.296,685.205 862.856,685.205 863.415,685.205 863.974,685.205 864.533,685.205 865.093,685.205 865.652,685.205 866.211,685.205 866.77,685.205 867.33,685.205 867.889,685.205 868.448,685.205 869.007,685.205 869.567,685.205 870.126,685.205 870.685,685.205 871.244,685.205 871.804,685.205 872.363,685.205 872.922,685.205 873.481,685.205 874.041,685.205 874.6,685.205 875.159,685.205 875.718,685.205 876.278,685.205 876.837,685.205 877.396,685.205 877.955,685.205 878.515,685.205 879.074,685.205 879.633,685.205 880.192,685.205 880.752,685.205 881.311,685.205 881.87,685.205 882.429,685.205 882.989,685.205 883.548,685.205 884.107,685.205 884.666,685.205 885.226,685.205 885.785,685.205 886.344,685.205 886.903,685.205 887.463,685.205 888.022,685.205 888.581,685.205 889.14,685.205 889.7,685.205 890.259,685.205 890.818,685.205 891.377,685.205 891.937,685.205 892.496,685.205 893.055,685.205 893.614,685.205 894.174,685.205 894.733,685.205 895.292,685.205 895.851,685.205 896.411,685.205 896.97,685.205 897.529,685.205 898.088,685.205 898.648,685.205 899.207,685.205 899.766,685.205 900.325,685.205 900.885,685.205 901.444,685.205 902.003,685.205 902.562,685.205 903.122,685.205 903.681,685.205 904.24,685.205 904.799,685.205 905.359,685.205 905.918,685.205 906.477,685.205 907.036,685.205 907.596,685.205 908.155,685.205 908.714,685.205 909.273,685.205 909.833,685.205 910.392,685.205 910.951,685.205 911.51,685.205 912.07,685.205 912.629,685.205 913.188,685.205 913.747,685.205 914.307,685.205 914.866,685.205 915.425,685.205 915.984,685.205 916.544,685.205 917.103,685.205 917.662,685.205 918.221,685.205 918.781,685.205 919.34,685.205 919.899,685.205 920.458,685.205 921.018,685.205 921.577,685.205 922.136,685.205 922.695,685.205 923.255,685.205 923.814,685.205 924.373,685.205 924.932,685.205 925.492,685.205 926.051,685.205 926.61,685.205 927.169,685.205 927.729,685.205 928.288,685.205 928.847,685.205 929.406,685.205 929.966,685.205 930.525,685.205 931.084,685.205 931.644,685.205 932.203,685.205 932.762,685.205 933.321,685.205 933.881,685.205 934.44,685.205 934.999,685.205 935.558,685.205 936.118,685.205 936.677,685.205 937.236,685.205 937.795,685.205 938.355,685.205 938.914,685.205 939.473,685.205 940.032,685.205 940.592,685.205 941.151,685.205 941.71,685.205 942.269,685.205 942.829,685.205 943.388,685.205 943.947,685.205 944.506,685.205 945.066,685.205 945.625,685.205 946.184,685.205 946.743,685.205 947.303,685.205 947.862,685.205 948.421,685.205 948.98,685.205 949.54,685.205 950.099,685.205 950.658,685.205 951.217,685.205 951.777,685.205 952.336,685.205 952.895,685.205 953.454,685.205 954.014,685.205 954.573,685.205 955.132,685.205 955.691,685.205 956.251,685.205 956.81,685.205 957.369,685.205 957.928,685.205 958.488,685.205 959.047,685.205 959.606,685.205 960.165,685.205 960.725,685.205 961.284,685.205 961.843,685.205 962.402,685.205 962.962,685.205 963.521,685.205 964.08,685.205 964.639,685.205 965.199,685.205 965.758,685.205 966.317,685.205 966.876,685.205 967.436,685.205 967.995,685.205 968.554,685.205 969.113,685.205 969.673,685.205 970.232,685.205 970.791,685.205 971.35,685.205 971.91,685.205 972.469,685.205 973.028,685.205 973.587,685.205 974.147,685.205 974.706,685.205 975.265,685.205 975.824,685.205 976.384,685.205 976.943,685.205 977.502,685.205 978.061,685.205 978.621,685.205 979.18,685.205 979.739,685.205 980.298,685.205 980.858,685.205 981.417,685.205 981.976,685.205 982.535,685.205 983.095,685.205 983.654,685.205 984.213,685.205 984.772,685.205 985.332,685.205 985.891,685.205 986.45,685.205 987.009,685.205 987.569,685.205 988.128,685.205 988.687,685.205 989.246,685.205 989.806,685.205 990.365,685.205 990.924,685.205 991.483,685.205 992.043,685.205 992.602,685.205 993.161,685.205 993.72,685.205 994.28,685.205 994.839,685.205 995.398,685.205 995.957,685.205 996.517,685.205 997.076,685.205 997.635,685.205 998.194,685.205 998.754,685.205 999.313,685.205 999.872,685.205 1000.43,685.205 1000.99,685.205 1001.55,685.205 1002.11,685.205 1002.67,685.205 1003.23,685.205 1003.79,685.205 1004.35,685.205 1004.91,685.205 1005.46,685.205 1006.02,685.205 1006.58,685.205 1007.14,685.205 1007.7,685.205 1008.26,685.205 1008.82,685.205 1009.38,685.205 1009.94,685.205 1010.5,685.205 1011.06,685.205 1011.62,685.205 1012.18,685.205 1012.73,685.205 1013.29,685.205 1013.85,685.205 1014.41,685.205 1014.97,685.205 1015.53,685.205 1016.09,685.205 1016.65,685.205 1017.21,685.205 1017.77,685.205 1018.33,685.205 1018.89,685.205 1019.45,685.205 1020.01,685.205 1020.56,685.205 1021.12,685.205 1021.68,685.205 1022.24,685.205 1022.8,685.205 1023.36,685.205 1023.92,685.205 1024.48,685.205 1025.04,685.205 1025.6,685.205 1026.16,685.205 1026.72,685.205 1027.28,685.205 1027.83,685.205 1028.39,685.205 1028.95,685.205 1029.51,685.205 1030.07,685.205 1030.63,685.205 1031.19,685.205 1031.75,685.205 1032.31,685.205 1032.87,685.205 1033.43,685.205 1033.99,685.205 1034.55,685.205 1035.1,685.205 1035.66,685.205 1036.22,685.205 1036.78,685.205 1037.34,685.205 1037.9,685.205 1038.46,685.205 1039.02,685.205 1039.58,685.205 1040.14,685.205 1040.7,685.205 1041.26,685.205 1041.82,685.205 1042.38,685.205 1042.93,685.205 1043.49,685.205 1044.05,685.205 1044.61,685.205 1045.17,685.205 1045.73,685.205 1046.29,685.205 1046.85,685.205 1047.41,685.205 1047.97,685.205 1048.53,685.205 1049.09,685.205 1049.65,685.205 1050.2,685.205 1050.76,685.205 1051.32,685.205 1051.88,685.205 1052.44,685.205 1053,685.205 1053.56,685.205 1054.12,685.205 1054.68,685.205 1055.24,685.205 1055.8,685.205 1056.36,685.205 1056.92,685.205 1057.48,685.205 1058.03,685.205 1058.59,685.205 1059.15,685.205 1059.71,685.205 1060.27,685.205 1060.83,685.205 1061.39,685.205 1061.95,685.205 1062.51,685.205 1063.07,685.205 1063.63,685.205 1064.19,685.205 1064.75,685.205 1065.3,685.205 1065.86,685.205 1066.42,685.205 1066.98,685.205 1067.54,685.205 1068.1,685.205 1068.66,685.205 1069.22,685.205 1069.78,685.205 1070.34,685.205 1070.9,685.205 1071.46,685.205 1072.02,685.205 1072.57,685.205 1073.13,685.205 1073.69,685.205 1074.25,685.205 1074.81,685.205 1075.37,685.205 1075.93,685.205 1076.49,685.205 1077.05,685.205 1077.61,685.205 1078.17,685.205 1078.73,685.205 1079.29,685.205 1079.85,685.205 1080.4,685.205 1080.96,685.205 1081.52,685.205 1082.08,685.205 1082.64,685.205 1083.2,685.205 1083.76,685.205 1084.32,685.205 1084.88,685.205 1085.44,685.205 1086,685.205 1086.56,685.205 1087.12,685.205 1087.67,685.205 1088.23,685.205 1088.79,685.205 1089.35,685.205 1089.91,685.205 1090.47,685.205 1091.03,685.205 1091.59,685.205 1092.15,685.205 1092.71,685.205 1093.27,685.205 1093.83,685.205 1094.39,685.205 1094.94,685.205 1095.5,685.205 1096.06,685.205 1096.62,685.205 1097.18,685.205 1097.74,685.205 1098.3,685.205 1098.86,685.205 1099.42,685.205 1099.98,685.205 1100.54,685.205 1101.1,685.205 1101.66,685.205 1102.22,685.205 1102.77,685.205 1103.33,685.205 1103.89,685.205 1104.45,685.205 1105.01,685.205 1105.57,685.205 1106.13,685.205 1106.69,685.205 1107.25,685.205 1107.81,685.205 1108.37,685.205 1108.93,685.205 1109.49,685.205 1110.04,685.205 1110.6,685.205 1111.16,685.205 1111.72,685.205 1112.28,685.205 1112.84,685.205 1113.4,685.205 1113.96,685.205 1114.52,685.205 1115.08,685.205 1115.64,685.205 1116.2,685.205 1116.76,685.205 1117.31,685.205 1117.87,685.205 1118.43,685.205 1118.99,685.205 1119.55,685.205 1120.11,685.205 1120.67,685.205 1121.23,685.205 1121.79,685.205 1122.35,685.205 1122.91,685.205 1123.47,685.205 1124.03,685.205 1124.59,685.205 1125.14,685.205 1125.7,685.205 1126.26,685.205 1126.82,685.205 1127.38,685.205 1127.94,685.205 1128.5,685.205 1129.06,685.205 1129.62,685.205 1130.18,685.205 1130.74,685.205 1131.3,685.205 1131.86,685.205 1132.41,685.205 1132.97,685.205 1133.53,685.205 1134.09,685.205 1134.65,685.205 1135.21,685.205 1135.77,685.205 1136.33,685.205 1136.89,685.205 1137.45,685.205 1138.01,685.205 1138.57,685.205 1139.13,685.205 1139.68,685.205 1140.24,685.205 1140.8,685.205 1141.36,685.205 1141.92,685.205 1142.48,685.205 1143.04,685.205 1143.6,685.205 1144.16,685.205 1144.72,685.205 1145.28,685.205 1145.84,685.205 1146.4,685.205 1146.96,685.205 1147.51,685.205 1148.07,685.205 1148.63,685.205 1149.19,685.205 1149.75,685.205 1150.31,685.205 1150.87,685.205 1151.43,685.205 1151.99,685.205 1152.55,685.205 1153.11,685.205 1153.67,685.205 1154.23,685.205 1154.78,685.205 1155.34,685.205 1155.9,685.205 1156.46,685.205 1157.02,685.205 1157.58,685.205 1158.14,685.205 1158.7,685.205 1159.26,685.205 1159.82,685.205 1160.38,685.205 1160.94,685.205 1161.5,685.205 1162.05,685.205 1162.61,685.205 1163.17,685.205 1163.73,685.205 1164.29,685.205 1164.85,685.205 1165.41,685.205 1165.97,685.205 1166.53,685.205 1167.09,685.205 1167.65,685.205 1168.21,685.205 1168.77,685.205 1169.33,685.205 1169.88,685.205 1170.44,685.205 1171,685.205 1171.56,685.205 1172.12,685.205 1172.68,685.205 1173.24,685.205 1173.8,685.205 1174.36,685.205 1174.92,685.205 1175.48,685.205 1176.04,685.205 1176.6,685.205 1177.15,685.205 1177.71,685.205 1178.27,685.205 1178.83,685.205 1179.39,685.205 1179.95,685.205 1180.51,685.205 1181.07,685.205 1181.63,685.205 1182.19,685.205 1182.75,685.205 1183.31,685.205 1183.87,685.205 1184.43,685.205 1184.98,685.205 1185.54,685.205 1186.1,685.205 1186.66,685.205 1187.22,685.205 1187.78,685.205 1188.34,685.205 1188.9,685.205 1189.46,685.205 1190.02,685.205 1190.58,685.205 1191.14,685.205 1191.7,685.205 1192.25,685.205 1192.81,685.205 1193.37,685.205 1193.93,685.205 1194.49,685.205 1195.05,685.205 1195.61,685.205 1196.17,685.205 1196.73,685.205 1197.29,685.205 1197.85,685.205 1198.41,685.205 1198.97,685.205 1199.52,685.205 1200.08,685.205 1200.64,685.205 1201.2,685.205 1201.76,685.205 1202.32,685.205 1202.88,685.205 1203.44,685.205 1204,685.205 1204.56,685.205 1205.12,685.205 1205.68,685.205 1206.24,685.205 1206.8,685.205 1207.35,685.205 1207.91,685.205 1208.47,685.205 1209.03,685.205 1209.59,685.205 1210.15,685.205 1210.71,685.205 1211.27,685.205 1211.83,685.205 1212.39,685.205 1212.95,685.205 1213.51,685.205 1214.07,685.205 1214.62,685.205 1215.18,685.205 1215.74,685.205 1216.3,685.205 1216.86,685.205 1217.42,685.205 1217.98,685.205 1218.54,685.205 1219.1,685.205 1219.66,685.205 1220.22,685.205 1220.78,685.205 1221.34,685.205 1221.89,685.205 1222.45,685.205 1223.01,685.205 1223.57,685.205 1224.13,685.205 1224.69,685.205 1225.25,685.205 1225.81,685.205 1226.37,685.205 1226.93,685.205 1227.49,685.205 1228.05,685.205 1228.61,685.205 1229.17,685.205 1229.72,685.205 1230.28,685.205 1230.84,685.205 1231.4,685.205 1231.96,685.205 1232.52,685.205 1233.08,685.205 1233.64,685.205 1234.2,685.205 1234.76,685.205 1235.32,685.205 1235.88,685.205 1236.44,685.205 1236.99,685.205 1237.55,685.205 1238.11,685.205 1238.67,685.205 1239.23,685.205 1239.79,685.205 1240.35,685.205 1240.91,685.205 1241.47,685.205 1242.03,685.205 1242.59,685.205 1243.15,685.205 1243.71,685.205 1244.26,685.205 1244.82,685.205 1245.38,685.205 1245.94,685.205 1246.5,685.205 1247.06,685.205 1247.62,685.205 1248.18,685.205 1248.74,685.205 1249.3,685.205 1249.86,685.205 1250.42,685.205 1250.98,685.205 1251.54,685.205 1252.09,685.205 1252.65,685.205 1253.21,685.205 1253.77,685.205 1254.33,685.205 1254.89,685.205 1255.45,685.205 1256.01,685.205 1256.57,685.205 1257.13,685.205 1257.69,685.205 1258.25,685.205 1258.81,685.205 1259.36,685.205 1259.92,685.205 1260.48,685.205 1261.04,685.205 1261.6,685.205 1262.16,685.205 1262.72,685.205 1263.28,685.205 1263.84,685.205 1264.4,685.205 1264.96,685.205 1265.52,685.205 1266.08,685.205 1266.63,685.205 1267.19,685.205 1267.75,685.205 1268.31,685.205 1268.87,685.205 1269.43,685.205 1269.99,685.205 1270.55,685.205 1271.11,685.205 1271.67,685.205 1272.23,685.205 1272.79,685.205 1273.35,685.205 1273.91,685.205 1274.46,685.205 1275.02,685.205 1275.58,685.205 1276.14,685.205 1276.7,685.205 1277.26,685.205 1277.82,685.205 1278.38,685.205 1278.94,685.205 1279.5,685.205 1280.06,685.205 1280.62,685.205 1281.18,685.205 1281.73,685.205 1282.29,685.205 1282.85,685.205 1283.41,685.205 1283.97,685.205 1284.53,685.205 1285.09,685.205 1285.65,685.205 1286.21,685.205 1286.77,685.205 1287.33,685.205 1287.89,685.205 1288.45,685.205 1289,685.205 1289.56,685.205 1290.12,685.205 1290.68,685.205 1291.24,685.205 1291.8,685.205 1292.36,685.205 1292.92,685.205 1293.48,685.205 1294.04,685.205 1294.6,685.205 1295.16,685.205 1295.72,685.205 1296.28,685.205 1296.83,685.205 1297.39,685.205 1297.95,685.205 1298.51,685.205 1299.07,685.205 1299.63,685.205 1300.19,685.205 1300.75,685.205 1301.31,685.205 1301.87,685.205 1302.43,685.205 1302.99,685.205 1303.55,685.205 1304.1,685.205 1304.66,685.205 1305.22,685.205 1305.78,685.205 1306.34,685.205 1306.9,685.205 1307.46,685.205 1308.02,685.205 1308.58,685.205 1309.14,685.205 1309.7,685.205 1310.26,685.205 1310.82,685.205 1311.38,685.205 1311.93,685.205 1312.49,685.205 1313.05,685.205 1313.61,685.205 1314.17,685.205 1314.73,685.205 1315.29,685.205 1315.85,685.205 1316.41,685.205 1316.97,685.205 1317.53,685.205 1318.09,685.205 1318.65,685.205 1319.2,685.205 1319.76,685.205 1320.32,685.205 1320.88,685.205 1321.44,685.205 1322,685.205 1322.56,685.205 1323.12,685.205 1323.68,685.205 1324.24,685.205 1324.8,685.205 1325.36,685.205 1325.92,685.205 1326.47,685.205 1327.03,685.205 1327.59,685.205 1328.15,685.205 1328.71,685.205 1329.27,685.205 1329.83,685.205 1330.39,685.205 1330.95,685.205 1331.51,685.205 1332.07,685.205 1332.63,685.205 1333.19,685.205 1333.75,685.205 1334.3,685.205 1334.86,685.205 1335.42,685.205 1335.98,685.205 1336.54,685.205 1337.1,685.205 1337.66,685.205 1338.22,685.205 1338.78,685.205 1339.34,685.205 1339.9,685.205 1340.46,685.205 1341.02,685.205 1341.57,685.205 1342.13,685.205 1342.69,685.205 1343.25,685.205 1343.81,685.205 1344.37,685.205 1344.93,685.205 1345.49,685.205 1346.05,685.205 1346.61,685.205 1347.17,685.205 1347.73,685.205 1348.29,685.205 1348.84,685.205 1349.4,685.205 1349.96,685.205 1350.52,685.205 1351.08,685.205 1351.64,685.205 1352.2,685.205 1352.76,685.205 1353.32,685.205 1353.88,685.205 1354.44,685.205 1355,685.205 1355.56,685.205 1356.12,685.205 1356.67,685.205 1357.23,685.205 1357.79,685.205 1358.35,685.205 1358.91,685.205 1359.47,685.205 1360.03,685.205 1360.59,685.205 1361.15,685.205 1361.71,685.205 1362.27,685.205 1362.83,685.205 1363.39,685.205 1363.94,685.205 1364.5,685.205 1365.06,685.205 1365.62,685.205 1366.18,685.205 1366.74,685.205 1367.3,685.205 1367.86,685.205 1368.42,685.205 1368.98,685.205 1369.54,685.205 1370.1,685.205 1370.66,685.205 1371.21,685.205 1371.77,685.205 1372.33,685.205 1372.89,685.205 1373.45,685.205 1374.01,685.205 1374.57,685.205 1375.13,685.205 1375.69,685.205 1376.25,685.205 1376.81,685.205 1377.37,685.205 1377.93,685.205 1378.49,685.205 1379.04,685.205 1379.6,685.205 1380.16,685.205 1380.72,685.205 1381.28,685.205 1381.84,685.205 1382.4,685.205 1382.96,685.205 1383.52,685.205 1384.08,685.205 1384.64,685.205 1385.2,685.205 1385.76,685.205 1386.31,685.205 1386.87,685.205 1387.43,685.205 1387.99,685.205 1388.55,685.205 1389.11,685.205 1389.67,685.205 1390.23,685.205 1390.79,685.205 1391.35,685.205 1391.91,685.205 1392.47,685.205 1393.03,685.205 1393.58,685.205 1394.14,685.205 1394.7,685.205 1395.26,685.205 1395.82,685.205 1396.38,685.205 1396.94,685.205 1397.5,685.205 1398.06,685.205 1398.62,685.205 1399.18,685.205 1399.74,685.205 1400.3,685.205 1400.86,685.205 1401.41,685.205 1401.97,685.205 1402.53,685.205 1403.09,685.205 1403.65,685.205 1404.21,685.205 1404.77,685.205 1405.33,685.205 1405.89,685.205 1406.45,685.205 1407.01,685.205 1407.57,685.205 1408.13,685.205 1408.68,685.205 1409.24,685.205 1409.8,685.205 1410.36,685.205 1410.92,685.205 1411.48,685.205 1412.04,685.205 1412.6,685.205 1413.16,685.205 1413.72,685.205 1414.28,685.205 1414.84,685.205 1415.4,685.205 1415.95,685.205 1416.51,685.205 1417.07,685.205 1417.63,685.205 1418.19,685.205 1418.75,685.205 1419.31,685.205 1419.87,685.205 1420.43,685.205 1420.99,685.205 1421.55,685.205 1422.11,685.205 1422.67,685.205 1423.23,685.205 1423.78,685.205 1424.34,685.205 1424.9,685.205 1425.46,685.205 1426.02,685.205 1426.58,685.205 1427.14,685.205 1427.7,685.205 1428.26,685.205 1428.82,685.205 1429.38,685.205 1429.94,685.205 1430.5,685.205 1431.05,685.205 1431.61,685.205 1432.17,685.205 1432.73,685.205 1433.29,685.205 1433.85,685.205 1434.41,685.205 1434.97,685.205 1435.53,685.205 1436.09,685.205 1436.65,685.205 1437.21,685.205 1437.77,685.205 1438.33,685.205 1438.88,685.205 1439.44,685.205 1440,685.205 1440.56,685.205 1441.12,685.205 1441.68,685.205 1442.24,685.205 1442.8,685.205 1443.36,685.205 1443.92,685.205 1444.48,685.205 1445.04,685.205 1445.6,685.205 1446.15,685.205 1446.71,685.205 1447.27,685.205 1447.83,685.205 1448.39,685.205 1448.95,685.205 1449.51,685.205 1450.07,685.205 1450.63,685.205 1451.19,685.205 1451.75,685.205 1452.31,685.205 1452.87,685.205 1453.42,685.205 1453.98,685.205 1454.54,685.205 1455.1,685.205 1455.66,685.205 1456.22,685.205 1456.78,685.205 1457.34,685.205 1457.9,685.205 1458.46,685.205 1459.02,685.205 1459.58,685.205 1460.14,685.205 1460.7,685.205 1461.25,685.205 1461.81,685.205 1462.37,685.205 1462.93,685.205 1463.49,685.205 1464.05,685.205 1464.61,685.205 1465.17,685.205 1465.73,685.205 1466.29,685.205 1466.85,685.205 1467.41,685.205 1467.97,685.205 1468.52,685.205 1469.08,685.205 1469.64,685.205 1470.2,685.205 1470.76,685.205 1471.32,685.205 1471.88,685.205 1472.44,685.205 1473,685.205 1473.56,685.205 1474.12,685.205 1474.68,685.205 1475.24,685.205 1475.79,685.205 1476.35,685.205 1476.91,685.205 1477.47,685.205 1478.03,685.205 1478.59,685.205 1479.15,685.205 1479.71,685.205 1480.27,685.205 1480.83,685.205 1481.39,685.205 1481.95,685.205 1482.51,685.205 1483.07,685.205 1483.62,685.205 1484.18,685.205 1484.74,685.205 1485.3,685.205 1485.86,685.205 1486.42,685.205 1486.98,685.205 1487.54,685.205 1488.1,685.205 1488.66,685.205 1489.22,685.205 1489.78,685.205 1490.34,685.205 1490.89,685.205 1491.45,685.205 1492.01,685.205 1492.57,685.205 1493.13,685.205 1493.69,685.205 1494.25,685.205 1494.81,685.205 1495.37,685.205 1495.93,685.205 1496.49,685.205 1497.05,685.205 1497.61,685.205 1498.16,685.205 1498.72,685.205 1499.28,685.205 1499.84,685.205 1500.4,685.205 1500.96,685.205 1501.52,685.205 1502.08,685.205 1502.64,685.205 1503.2,685.205 1503.76,685.205 1504.32,685.205 1504.88,685.205 1505.44,685.205 1505.99,685.205 1506.55,685.205 1507.11,685.205 1507.67,685.205 1508.23,685.205 1508.79,685.205 1509.35,685.205 1509.91,685.205 1510.47,685.205 1511.03,685.205 1511.59,685.205 1512.15,685.205 1512.71,685.205 1513.26,685.205 1513.82,685.205 1514.38,685.205 1514.94,685.205 1515.5,685.205 1516.06,685.205 1516.62,685.205 1517.18,685.205 1517.74,685.205 1518.3,685.205 1518.86,685.205 1519.42,685.205 1519.98,685.205 1520.53,685.205 1521.09,685.205 1521.65,685.205 1522.21,685.205 1522.77,685.205 1523.33,685.205 1523.89,685.205 1524.45,685.205 1525.01,685.205 1525.57,685.205 1526.13,685.205 1526.69,685.205 1527.25,685.205 1527.81,685.205 1528.36,685.205 1528.92,685.205 1529.48,685.205 1530.04,685.205 1530.6,685.205 1531.16,685.205 1531.72,685.205 1532.28,685.205 1532.84,685.205 1533.4,685.205 1533.96,685.205 1534.52,685.205 1535.08,685.205 1535.63,685.205 1536.19,685.205 1536.75,685.205 1537.31,685.205 1537.87,685.205 1538.43,685.205 1538.99,685.205 1539.55,685.205 1540.11,685.205 1540.67,685.205 1541.23,685.205 1541.79,685.205 1542.35,685.205 1542.9,685.205 1543.46,685.205 1544.02,685.205 1544.58,685.205 1545.14,685.205 1545.7,685.205 1546.26,685.205 1546.82,685.205 1547.38,685.205 1547.94,685.205 1548.5,685.205 1549.06,685.205 1549.62,685.205 1550.18,685.205 1550.73,685.205 1551.29,685.205 1551.85,685.205 1552.41,685.205 1552.97,685.205 1553.53,685.205 1554.09,685.205 1554.65,685.205 1555.21,685.205 1555.77,685.205 1556.33,685.205 1556.89,685.205 1557.45,685.205 1558,685.205 1558.56,685.205 1559.12,685.205 1559.68,685.205 1560.24,685.205 1560.8,685.205 1561.36,685.205 1561.92,685.205 1562.48,685.205 1563.04,685.205 1563.6,685.205 1564.16,685.205 1564.72,685.205 1565.28,685.205 1565.83,685.205 1566.39,685.205 1566.95,685.205 1567.51,685.205 1568.07,685.205 1568.63,685.205 1569.19,685.205 1569.75,685.205 1570.31,685.205 1570.87,685.205 1571.43,685.205 1571.99,685.205 1572.55,685.205 1573.1,685.205 1573.66,685.205 1574.22,685.205 1574.78,685.205 1575.34,685.205 1575.9,685.205 1576.46,685.205 1577.02,685.205 1577.58,685.205 1578.14,685.205 1578.7,685.205 1579.26,685.205 1579.82,685.205 1580.37,685.205 1580.93,685.205 1581.49,685.205 1582.05,685.205 1582.61,685.205 1583.17,685.205 1583.73,685.205 1584.29,685.205 1584.85,685.205 1585.41,685.205 1585.97,685.205 1586.53,685.205 1587.09,685.205 1587.65,685.205 1588.2,685.205 1588.76,685.205 1589.32,685.205 1589.88,685.205 1590.44,685.205 1591,685.205 1591.56,685.205 1592.12,685.205 1592.68,685.205 1593.24,685.205 1593.8,685.205 1594.36,685.205 1594.92,685.205 1595.47,685.205 1596.03,685.205 1596.59,685.205 1597.15,685.205 1597.71,685.205 1598.27,685.205 1598.83,685.205 1599.39,685.205 1599.95,685.205 1600.51,685.205 1601.07,685.205 1601.63,685.205 1602.19,685.205 1602.74,685.205 1603.3,685.205 1603.86,685.205 1604.42,685.205 1604.98,685.205 1605.54,685.205 1606.1,685.205 1606.66,685.205 1607.22,685.205 1607.78,685.205 1608.34,685.205 1608.9,685.205 1609.46,685.205 1610.02,685.205 1610.57,685.205 1611.13,685.205 1611.69,685.205 1612.25,685.205 1612.81,685.205 1613.37,685.205 1613.93,685.205 1614.49,685.205 1615.05,685.205 1615.61,685.205 1616.17,685.205 1616.73,685.205 1617.29,685.205 1617.84,685.205 1618.4,685.205 1618.96,685.205 1619.52,685.205 1620.08,685.205 1620.64,685.205 1621.2,685.205 1621.76,685.205 1622.32,685.205 1622.88,685.205 1623.44,685.205 1624,685.205 1624.56,685.205 1625.11,685.205 1625.67,685.205 1626.23,685.205 1626.79,685.205 1627.35,685.205 1627.91,685.205 1628.47,685.205 1629.03,685.205 1629.59,685.205 1630.15,685.205 1630.71,685.205 1631.27,685.205 1631.83,685.205 1632.39,685.205 1632.94,685.205 1633.5,685.205 1634.06,685.205 1634.62,685.205 1635.18,685.205 1635.74,685.205 1636.3,685.205 1636.86,685.205 1637.42,685.205 1637.98,685.205 1638.54,685.205 1639.1,685.205 1639.66,685.205 1640.21,685.205 1640.77,685.205 1641.33,685.205 1641.89,685.205 1642.45,685.205 1643.01,685.205 1643.57,685.205 1644.13,685.205 1644.69,685.205 1645.25,685.205 1645.81,685.205 1646.37,685.205 1646.93,685.205 1647.48,685.205 1648.04,685.205 1648.6,685.205 1649.16,685.205 1649.72,685.205 1650.28,685.205 1650.84,685.205 1651.4,685.205 1651.96,685.205 1652.52,685.205 1653.08,685.205 1653.64,685.205 1654.2,685.205 1654.76,685.205 1655.31,685.205 1655.87,685.205 1656.43,685.205 1656.99,685.205 1657.55,685.205 1658.11,685.205 1658.67,685.205 1659.23,685.205 1659.79,685.205 1660.35,685.205 1660.91,685.205 1661.47,685.205 1662.03,685.205 1662.58,685.205 1663.14,685.205 1663.7,685.205 1664.26,685.205 1664.82,685.205 1665.38,685.205 1665.94,685.205 1666.5,685.205 1667.06,685.205 1667.62,685.205 1668.18,685.205 1668.74,685.205 1669.3,685.205 1669.85,685.205 1670.41,685.205 1670.97,685.205 1671.53,685.205 1672.09,685.205 1672.65,685.205 1673.21,685.205 1673.77,685.205 1674.33,685.205 1674.89,685.205 1675.45,685.205 1676.01,685.205 1676.57,685.205 1677.13,685.205 1677.68,685.205 1678.24,685.205 1678.8,685.205 1679.36,685.205 1679.92,685.205 1680.48,685.205 1681.04,685.205 1681.6,685.205 1682.16,685.205 1682.72,685.205 1683.28,685.205 1683.84,685.205 1684.4,685.205 1684.95,685.205 1685.51,685.205 1686.07,685.205 1686.63,685.205 1687.19,685.205 1687.75,685.205 1688.31,685.205 1688.87,685.205 1689.43,685.205 1689.99,685.205 1690.55,685.205 1691.11,685.205 1691.67,685.205 1692.23,685.205 1692.78,685.205 1693.34,685.205 1693.9,685.205 1694.46,685.205 1695.02,685.205 1695.58,685.205 1696.14,685.205 1696.7,685.205 1697.26,685.205 1697.82,685.205 1698.38,685.205 1698.94,685.205 1699.5,685.205 1700.05,685.205 1700.61,685.205 1701.17,685.205 1701.73,685.205 1702.29,685.205 1702.85,685.205 1703.41,685.205 1703.97,685.205 1704.53,685.205 1705.09,685.205 1705.65,685.205 1706.21,685.205 1706.77,685.205 1707.32,685.205 1707.88,685.205 1708.44,685.205 1709,685.205 1709.56,685.205 1710.12,685.205 1710.68,685.205 1711.24,685.205 1711.8,685.205 1712.36,685.205 1712.92,685.205 1713.48,685.205 1714.04,685.205 1714.6,685.205 1715.15,685.205 1715.71,685.205 1716.27,685.205 1716.83,685.205 1717.39,685.205 1717.95,685.205 1718.51,685.205 1719.07,685.205 1719.63,685.205 1720.19,685.205 1720.75,685.205 1721.31,685.205 1721.87,685.205 1722.42,685.205 1722.98,685.205 1723.54,685.205 1724.1,685.205 1724.66,685.205 1725.22,685.205 1725.78,685.205 1726.34,685.205 1726.9,685.205 1727.46,685.205 1728.02,685.205 1728.58,685.205 1729.14,685.205 1729.69,685.205 1730.25,685.205 1730.81,685.205 1731.37,685.205 1731.93,685.205 1732.49,685.205 1733.05,685.205 1733.61,685.205 1734.17,685.205 1734.73,685.205 1735.29,685.205 1735.85,685.205 1736.41,685.205 1736.97,685.205 1737.52,685.205 1738.08,685.205 1738.64,685.205 1739.2,685.205 1739.76,685.205 1740.32,685.205 1740.88,685.205 1741.44,685.205 1742,685.205 1742.56,685.205 1743.12,685.205 1743.68,685.205 1744.24,685.205 1744.79,685.205 1745.35,685.205 1745.91,685.205 1746.47,685.205 1747.03,685.205 1747.59,685.205 1748.15,685.205 1748.71,685.205 1749.27,685.205 1749.83,685.205 1750.39,685.205 1750.95,685.205 1751.51,685.205 1752.06,685.205 1752.62,685.205 1753.18,685.205 1753.74,685.205 1754.3,685.205 1754.86,685.205 1755.42,685.205 1755.98,685.205 1756.54,685.205 1757.1,685.205 1757.66,685.205 1758.22,685.205 1758.78,685.205 1759.34,685.205 1759.89,685.205 1760.45,685.205 1761.01,685.205 1761.57,685.205 1762.13,685.205 1762.69,685.205 1763.25,685.205 1763.81,685.205 1764.37,685.205 1764.93,685.205 1765.49,685.205 1766.05,685.205 1766.61,685.205 1767.16,685.205 1767.72,685.205 1768.28,685.205 1768.84,685.205 1769.4,685.205 1769.96,685.205 1770.52,685.205 1771.08,685.205 1771.64,685.205 1772.2,685.205 1772.76,685.205 1773.32,685.205 1773.88,685.205 1774.43,685.205 1774.99,685.205 1775.55,685.205 1776.11,685.205 1776.67,685.205 1777.23,685.205 1777.79,685.205 1778.35,685.205 1778.91,685.205 1779.47,685.205 1780.03,685.205 1780.59,685.205 1781.15,685.205 1781.71,685.205 1782.26,685.205 1782.82,685.205 1783.38,685.205 1783.94,685.205 1784.5,685.205 1785.06,685.205 1785.62,685.205 1786.18,685.205 1786.74,685.205 1787.3,685.205 1787.86,685.205 1788.42,685.205 1788.98,685.205 1789.53,685.205 1790.09,685.205 1790.65,685.205 1791.21,685.205 1791.77,685.205 1792.33,685.205 1792.89,685.205 1793.45,685.205 1794.01,685.205 1794.57,685.205 1795.13,685.205 1795.69,685.205 1796.25,685.205 1796.8,685.205 1797.36,685.205 1797.92,685.205 1798.48,685.205 1799.04,685.205 1799.6,685.205 1800.16,685.205 1800.72,685.205 1801.28,685.205 1801.84,685.205 1802.4,685.205 1802.96,685.205 1803.52,685.205 1804.08,685.205 1804.63,685.205 1805.19,685.205 1805.75,685.205 1806.31,685.205 1806.87,685.205 1807.43,685.205 1807.99,685.205 1808.55,685.205 1809.11,685.205 1809.67,685.205 1810.23,685.205 1810.79,685.205 1811.35,685.205 1811.9,685.205 1812.46,685.205 1813.02,685.205 1813.58,685.205 1814.14,685.205 1814.7,685.205 1815.26,685.205 1815.82,685.205 1816.38,685.205 1816.94,685.205 1817.5,685.205 1818.06,685.205 1818.62,685.205 1819.18,685.205 1819.73,685.205 1820.29,685.205 1820.85,685.205 1821.41,685.205 1821.97,685.205 1822.53,685.205 1823.09,685.205 1823.65,685.205 1824.21,685.205 1824.77,685.205 1825.33,685.205 1825.89,685.205 1826.45,685.205 1827,685.205 1827.56,685.205 1828.12,685.205 1828.68,685.205 1829.24,685.205 1829.8,685.205 1830.36,685.205 1830.92,685.205 1831.48,685.205 1832.04,685.205 1832.6,685.205 1833.16,685.205 1833.72,685.205 1834.27,685.205 1834.83,685.205 1835.39,685.205 1835.95,685.205 1836.51,685.205 1837.07,685.205 1837.63,685.205 1838.19,685.205 \"/>\n<path clip-path=\"url(#clip533)\" d=\"M720.247 684.101 L720.806 684.101 L721.365 684.101 L721.924 684.101 L722.484 684.101 L723.043 684.101 L723.602 684.101 L724.161 684.101 L724.721 684.101 L725.28 684.101 L725.839 684.101 L726.398 684.101 L726.958 684.101 L727.517 684.101 L728.076 684.101 L728.635 684.101 L729.195 684.101 L729.754 684.101 L730.313 684.101 L730.872 684.101 L731.432 684.101 L731.991 684.101 L732.55 684.101 L733.109 684.101 L733.669 684.101 L734.228 684.101 L734.787 684.101 L735.346 684.101 L735.906 684.101 L736.465 684.101 L737.024 684.101 L737.583 684.101 L738.143 684.101 L738.702 684.101 L739.261 684.101 L739.82 684.101 L740.38 684.101 L740.939 684.101 L741.498 684.101 L742.057 684.101 L742.617 684.101 L743.176 684.101 L743.735 684.101 L744.294 684.101 L744.854 684.101 L745.413 684.101 L745.972 684.101 L746.531 684.101 L747.091 684.101 L747.65 684.101 L748.209 684.101 L748.768 684.101 L749.328 684.101 L749.887 684.101 L750.446 684.101 L751.005 684.101 L751.565 684.101 L752.124 684.101 L752.683 684.101 L753.242 684.101 L753.802 684.101 L754.361 684.101 L754.92 684.101 L755.479 684.101 L756.039 684.101 L756.598 684.101 L757.157 684.101 L757.716 684.101 L758.276 684.101 L758.835 684.101 L759.394 684.101 L759.953 684.101 L760.513 684.101 L761.072 684.101 L761.631 684.101 L762.19 684.101 L762.75 684.101 L763.309 684.101 L763.868 684.101 L764.427 684.101 L764.987 684.101 L765.546 684.101 L766.105 684.101 L766.664 684.101 L767.224 684.101 L767.783 684.101 L768.342 684.101 L768.901 684.101 L769.461 684.101 L770.02 684.101 L770.579 684.101 L771.138 684.101 L771.698 684.101 L772.257 684.101 L772.816 684.101 L773.375 684.101 L773.935 684.101 L774.494 684.101 L775.053 684.101 L775.612 684.101 L776.172 684.101 L776.731 684.101 L777.29 684.101 L777.849 684.101 L778.409 684.101 L778.968 684.101 L779.527 684.101 L780.086 684.101 L780.646 684.101 L781.205 684.101 L781.764 684.101 L782.323 684.101 L782.883 684.101 L783.442 684.101 L784.001 684.101 L784.56 684.101 L785.12 684.101 L785.679 684.101 L786.238 684.101 L786.797 684.101 L787.357 684.101 L787.916 684.101 L788.475 684.101 L789.034 684.101 L789.594 684.101 L790.153 684.101 L790.712 684.101 L791.271 684.101 L791.831 684.101 L792.39 684.101 L792.949 684.101 L793.508 684.101 L794.068 684.101 L794.627 684.101 L795.186 684.101 L795.745 684.101 L796.305 684.101 L796.864 684.101 L797.423 684.101 L797.982 684.101 L798.542 684.101 L799.101 684.101 L799.66 684.101 L800.219 684.101 L800.779 684.101 L801.338 684.101 L801.897 684.101 L802.456 684.101 L803.016 684.101 L803.575 684.101 L804.134 684.101 L804.693 684.101 L805.253 684.101 L805.812 684.101 L806.371 684.101 L806.931 684.101 L807.49 684.101 L808.049 684.101 L808.608 684.101 L809.168 684.101 L809.727 684.101 L810.286 684.101 L810.845 684.101 L811.405 684.101 L811.964 684.101 L812.523 684.101 L813.082 684.101 L813.642 684.101 L814.201 684.101 L814.76 684.101 L815.319 684.101 L815.879 684.101 L816.438 684.101 L816.997 684.101 L817.556 684.101 L818.116 684.101 L818.675 684.101 L819.234 684.101 L819.793 684.101 L820.353 684.101 L820.912 684.101 L821.471 684.101 L822.03 684.101 L822.59 684.101 L823.149 684.101 L823.708 684.101 L824.267 684.101 L824.827 684.101 L825.386 684.101 L825.945 684.101 L826.504 684.101 L827.064 684.101 L827.623 684.101 L828.182 684.101 L828.741 684.101 L829.301 684.101 L829.86 684.101 L830.419 684.101 L830.978 684.101 L831.538 684.101 L832.097 684.101 L832.656 684.101 L833.215 684.101 L833.775 684.101 L834.334 684.101 L834.893 684.101 L835.452 684.101 L836.012 684.101 L836.571 684.101 L837.13 684.101 L837.689 684.101 L838.249 684.101 L838.808 684.101 L839.367 684.101 L839.926 684.101 L840.486 684.101 L841.045 684.101 L841.604 684.101 L842.163 684.101 L842.723 684.101 L843.282 684.101 L843.841 684.101 L844.4 684.101 L844.96 684.101 L845.519 684.101 L846.078 684.101 L846.637 684.101 L847.197 684.101 L847.756 684.101 L848.315 684.101 L848.874 684.101 L849.434 684.101 L849.993 684.101 L850.552 684.101 L851.111 684.101 L851.671 684.101 L852.23 684.101 L852.789 684.101 L853.348 684.101 L853.908 684.101 L854.467 684.101 L855.026 684.101 L855.585 684.101 L856.145 684.101 L856.704 684.101 L857.263 684.101 L857.822 684.101 L858.382 684.101 L858.941 684.101 L859.5 684.101 L860.059 684.101 L860.619 684.101 L861.178 684.101 L861.737 684.101 L862.296 684.101 L862.856 684.101 L863.415 684.101 L863.974 684.101 L864.533 684.101 L865.093 684.101 L865.652 684.101 L866.211 684.101 L866.77 684.101 L867.33 684.101 L867.889 684.101 L868.448 684.101 L869.007 684.101 L869.567 684.101 L870.126 684.101 L870.685 684.101 L871.244 684.101 L871.804 684.101 L872.363 684.101 L872.922 684.101 L873.481 684.101 L874.041 684.101 L874.6 684.101 L875.159 684.101 L875.718 684.101 L876.278 684.101 L876.837 684.101 L877.396 684.101 L877.955 684.101 L878.515 684.101 L879.074 684.101 L879.633 684.101 L880.192 684.101 L880.752 684.101 L881.311 684.101 L881.87 684.101 L882.429 684.101 L882.989 684.101 L883.548 684.101 L884.107 684.101 L884.666 684.101 L885.226 684.101 L885.785 684.101 L886.344 684.101 L886.903 684.101 L887.463 684.101 L888.022 684.101 L888.581 684.101 L889.14 684.101 L889.7 684.101 L890.259 684.101 L890.818 684.101 L891.377 684.101 L891.937 684.101 L892.496 684.101 L893.055 684.101 L893.614 684.101 L894.174 684.101 L894.733 684.101 L895.292 684.101 L895.851 684.101 L896.411 684.101 L896.97 684.101 L897.529 684.101 L898.088 684.101 L898.648 684.101 L899.207 684.101 L899.766 684.101 L900.325 684.101 L900.885 684.101 L901.444 684.101 L902.003 684.101 L902.562 684.101 L903.122 684.101 L903.681 684.101 L904.24 684.101 L904.799 684.101 L905.359 684.101 L905.918 684.101 L906.477 684.101 L907.036 684.101 L907.596 684.101 L908.155 684.101 L908.714 684.101 L909.273 684.101 L909.833 684.101 L910.392 684.101 L910.951 684.101 L911.51 684.101 L912.07 684.101 L912.629 684.101 L913.188 684.101 L913.747 684.101 L914.307 684.101 L914.866 684.101 L915.425 684.101 L915.984 684.101 L916.544 684.101 L917.103 684.101 L917.662 684.101 L918.221 684.101 L918.781 684.101 L919.34 684.101 L919.899 684.101 L920.458 684.101 L921.018 684.101 L921.577 684.101 L922.136 684.101 L922.695 684.101 L923.255 684.101 L923.814 684.101 L924.373 684.101 L924.932 684.101 L925.492 684.101 L926.051 684.101 L926.61 684.101 L927.169 684.101 L927.729 684.101 L928.288 684.101 L928.847 684.101 L929.406 684.101 L929.966 684.101 L930.525 684.101 L931.084 684.101 L931.644 684.101 L932.203 684.101 L932.762 684.101 L933.321 684.101 L933.881 684.101 L934.44 684.101 L934.999 684.101 L935.558 684.101 L936.118 684.101 L936.677 684.101 L937.236 684.101 L937.795 684.101 L938.355 684.101 L938.914 684.101 L939.473 684.101 L940.032 684.101 L940.592 684.101 L941.151 684.101 L941.71 684.101 L942.269 684.101 L942.829 684.101 L943.388 684.101 L943.947 684.101 L944.506 684.101 L945.066 684.101 L945.625 684.101 L946.184 684.101 L946.743 684.101 L947.303 684.101 L947.862 684.101 L948.421 684.101 L948.98 684.101 L949.54 684.101 L950.099 684.101 L950.658 684.101 L951.217 684.101 L951.777 684.101 L952.336 684.101 L952.895 684.101 L953.454 684.101 L954.014 684.101 L954.573 684.101 L955.132 684.101 L955.691 684.101 L956.251 684.101 L956.81 684.101 L957.369 684.101 L957.928 684.101 L958.488 684.101 L959.047 684.101 L959.606 684.101 L960.165 684.101 L960.725 684.101 L961.284 684.101 L961.843 684.101 L962.402 684.101 L962.962 684.101 L963.521 684.101 L964.08 684.101 L964.639 684.101 L965.199 684.101 L965.758 684.101 L966.317 684.101 L966.876 684.101 L967.436 684.101 L967.995 684.101 L968.554 684.101 L969.113 684.101 L969.673 684.101 L970.232 684.101 L970.791 684.101 L971.35 684.101 L971.91 684.101 L972.469 684.101 L973.028 684.101 L973.587 684.101 L974.147 684.101 L974.706 684.101 L975.265 684.101 L975.824 684.101 L976.384 684.101 L976.943 684.101 L977.502 684.101 L978.061 684.101 L978.621 684.101 L979.18 684.101 L979.739 684.101 L980.298 684.101 L980.858 684.101 L981.417 684.101 L981.976 684.101 L982.535 684.101 L983.095 684.101 L983.654 684.101 L984.213 684.101 L984.772 684.101 L985.332 684.101 L985.891 684.101 L986.45 684.101 L987.009 684.101 L987.569 684.101 L988.128 684.101 L988.687 684.101 L989.246 684.101 L989.806 684.101 L990.365 684.101 L990.924 684.101 L991.483 684.101 L992.043 684.101 L992.602 684.101 L993.161 684.101 L993.72 684.101 L994.28 684.101 L994.839 684.101 L995.398 684.101 L995.957 684.101 L996.517 684.101 L997.076 684.101 L997.635 684.101 L998.194 684.101 L998.754 684.101 L999.313 684.101 L999.872 684.101 L1000.43 684.101 L1000.99 684.101 L1001.55 684.101 L1002.11 684.101 L1002.67 684.101 L1003.23 684.101 L1003.79 684.101 L1004.35 684.101 L1004.91 684.101 L1005.46 684.101 L1006.02 684.101 L1006.58 684.101 L1007.14 684.101 L1007.7 684.101 L1008.26 684.101 L1008.82 684.101 L1009.38 684.101 L1009.94 684.101 L1010.5 684.101 L1011.06 684.101 L1011.62 684.101 L1012.18 684.101 L1012.73 684.101 L1013.29 684.101 L1013.85 684.101 L1014.41 684.101 L1014.97 684.101 L1015.53 684.101 L1016.09 684.101 L1016.65 684.101 L1017.21 684.101 L1017.77 684.101 L1018.33 684.101 L1018.89 684.101 L1019.45 684.101 L1020.01 684.101 L1020.56 684.101 L1021.12 684.101 L1021.68 684.101 L1022.24 684.101 L1022.8 684.101 L1023.36 684.101 L1023.92 684.101 L1024.48 684.101 L1025.04 684.101 L1025.6 684.101 L1026.16 684.101 L1026.72 684.101 L1027.28 684.101 L1027.83 684.101 L1028.39 684.101 L1028.95 684.101 L1029.51 684.101 L1030.07 684.101 L1030.63 684.101 L1031.19 684.101 L1031.75 684.101 L1032.31 684.101 L1032.87 684.101 L1033.43 684.101 L1033.99 684.101 L1034.55 684.101 L1035.1 684.101 L1035.66 684.101 L1036.22 684.101 L1036.78 684.101 L1037.34 684.101 L1037.9 684.101 L1038.46 684.101 L1039.02 684.101 L1039.58 684.101 L1040.14 684.101 L1040.7 684.101 L1041.26 684.101 L1041.82 684.101 L1042.38 684.101 L1042.93 684.101 L1043.49 684.101 L1044.05 684.101 L1044.61 684.101 L1045.17 684.101 L1045.73 684.101 L1046.29 684.101 L1046.85 684.101 L1047.41 684.101 L1047.97 684.101 L1048.53 684.101 L1049.09 684.101 L1049.65 684.101 L1050.2 684.101 L1050.76 684.101 L1051.32 684.101 L1051.88 684.101 L1052.44 684.101 L1053 684.101 L1053.56 684.101 L1054.12 684.101 L1054.68 684.101 L1055.24 684.101 L1055.8 684.101 L1056.36 684.101 L1056.92 684.101 L1057.48 684.101 L1058.03 684.101 L1058.59 684.101 L1059.15 684.101 L1059.71 684.101 L1060.27 684.101 L1060.83 684.101 L1061.39 684.101 L1061.95 684.101 L1062.51 684.101 L1063.07 684.101 L1063.63 684.101 L1064.19 684.101 L1064.75 684.101 L1065.3 684.101 L1065.86 684.101 L1066.42 684.101 L1066.98 684.101 L1067.54 684.101 L1068.1 684.101 L1068.66 684.101 L1069.22 684.101 L1069.78 684.101 L1070.34 684.101 L1070.9 684.101 L1071.46 684.101 L1072.02 684.101 L1072.57 684.101 L1073.13 684.101 L1073.69 684.101 L1074.25 684.101 L1074.81 684.101 L1075.37 684.101 L1075.93 684.101 L1076.49 684.101 L1077.05 684.101 L1077.61 684.101 L1078.17 684.101 L1078.73 684.101 L1079.29 684.101 L1079.85 684.101 L1080.4 684.101 L1080.96 684.101 L1081.52 684.101 L1082.08 684.101 L1082.64 684.101 L1083.2 684.101 L1083.76 684.101 L1084.32 684.101 L1084.88 684.101 L1085.44 684.101 L1086 684.101 L1086.56 684.101 L1087.12 684.101 L1087.67 684.101 L1088.23 684.101 L1088.79 684.101 L1089.35 684.101 L1089.91 684.101 L1090.47 684.101 L1091.03 684.101 L1091.59 684.101 L1092.15 684.101 L1092.71 684.101 L1093.27 684.101 L1093.83 684.101 L1094.39 684.101 L1094.94 684.101 L1095.5 684.101 L1096.06 684.101 L1096.62 684.101 L1097.18 684.101 L1097.74 684.101 L1098.3 684.101 L1098.86 684.101 L1099.42 684.101 L1099.98 684.101 L1100.54 684.101 L1101.1 684.101 L1101.66 684.101 L1102.22 684.101 L1102.77 684.101 L1103.33 684.101 L1103.89 684.101 L1104.45 684.101 L1105.01 684.101 L1105.57 684.101 L1106.13 684.101 L1106.69 684.101 L1107.25 684.101 L1107.81 684.101 L1108.37 684.101 L1108.93 684.101 L1109.49 684.101 L1110.04 684.101 L1110.6 684.101 L1111.16 684.101 L1111.72 684.101 L1112.28 684.101 L1112.84 684.101 L1113.4 684.101 L1113.96 684.101 L1114.52 684.101 L1115.08 684.101 L1115.64 684.101 L1116.2 684.101 L1116.76 684.101 L1117.31 684.101 L1117.87 684.101 L1118.43 684.101 L1118.99 684.101 L1119.55 684.101 L1120.11 684.101 L1120.67 684.101 L1121.23 684.101 L1121.79 684.101 L1122.35 684.101 L1122.91 684.101 L1123.47 684.101 L1124.03 684.101 L1124.59 684.101 L1125.14 684.101 L1125.7 684.101 L1126.26 684.101 L1126.82 684.101 L1127.38 684.101 L1127.94 684.101 L1128.5 684.101 L1129.06 684.101 L1129.62 684.101 L1130.18 684.101 L1130.74 684.101 L1131.3 684.101 L1131.86 684.101 L1132.41 684.101 L1132.97 684.101 L1133.53 684.101 L1134.09 684.101 L1134.65 684.101 L1135.21 684.101 L1135.77 684.101 L1136.33 684.101 L1136.89 684.101 L1137.45 684.101 L1138.01 684.101 L1138.57 684.101 L1139.13 684.101 L1139.68 684.101 L1140.24 684.101 L1140.8 684.101 L1141.36 684.101 L1141.92 684.101 L1142.48 684.101 L1143.04 684.101 L1143.6 684.101 L1144.16 684.101 L1144.72 684.101 L1145.28 684.101 L1145.84 684.101 L1146.4 684.101 L1146.96 684.101 L1147.51 684.101 L1148.07 684.101 L1148.63 684.101 L1149.19 684.101 L1149.75 684.101 L1150.31 684.101 L1150.87 684.101 L1151.43 684.101 L1151.99 684.101 L1152.55 684.101 L1153.11 684.101 L1153.67 684.101 L1154.23 684.101 L1154.78 684.101 L1155.34 684.101 L1155.9 684.101 L1156.46 684.101 L1157.02 684.101 L1157.58 684.101 L1158.14 684.101 L1158.7 684.101 L1159.26 684.101 L1159.82 684.101 L1160.38 684.101 L1160.94 684.101 L1161.5 684.101 L1162.05 684.101 L1162.61 684.101 L1163.17 684.101 L1163.73 684.101 L1164.29 684.101 L1164.85 684.101 L1165.41 684.101 L1165.97 684.101 L1166.53 684.101 L1167.09 684.101 L1167.65 684.101 L1168.21 684.101 L1168.77 684.101 L1169.33 684.101 L1169.88 684.101 L1170.44 684.101 L1171 684.101 L1171.56 684.101 L1172.12 684.101 L1172.68 684.101 L1173.24 684.101 L1173.8 684.101 L1174.36 684.101 L1174.92 684.101 L1175.48 684.101 L1176.04 684.101 L1176.6 684.101 L1177.15 684.101 L1177.71 684.101 L1178.27 684.101 L1178.83 684.101 L1179.39 684.101 L1179.95 684.101 L1180.51 684.101 L1181.07 684.101 L1181.63 684.101 L1182.19 684.101 L1182.75 684.101 L1183.31 684.101 L1183.87 684.101 L1184.43 684.101 L1184.98 684.101 L1185.54 684.101 L1186.1 684.101 L1186.66 684.101 L1187.22 684.101 L1187.78 684.101 L1188.34 684.101 L1188.9 684.101 L1189.46 684.101 L1190.02 684.101 L1190.58 684.101 L1191.14 684.101 L1191.7 684.101 L1192.25 684.101 L1192.81 684.101 L1193.37 684.101 L1193.93 684.101 L1194.49 684.101 L1195.05 684.101 L1195.61 684.101 L1196.17 684.101 L1196.73 684.101 L1197.29 684.101 L1197.85 684.101 L1198.41 684.101 L1198.97 684.101 L1199.52 684.101 L1200.08 684.101 L1200.64 684.101 L1201.2 684.101 L1201.76 684.101 L1202.32 684.101 L1202.88 684.101 L1203.44 684.101 L1204 684.101 L1204.56 684.101 L1205.12 684.101 L1205.68 684.101 L1206.24 684.101 L1206.8 684.101 L1207.35 684.101 L1207.91 684.101 L1208.47 684.101 L1209.03 684.101 L1209.59 684.101 L1210.15 684.101 L1210.71 684.101 L1211.27 684.101 L1211.83 684.101 L1212.39 684.101 L1212.95 684.101 L1213.51 684.101 L1214.07 684.101 L1214.62 684.101 L1215.18 684.101 L1215.74 684.101 L1216.3 684.101 L1216.86 684.101 L1217.42 684.101 L1217.98 684.101 L1218.54 684.101 L1219.1 684.101 L1219.66 684.101 L1220.22 684.101 L1220.78 684.101 L1221.34 684.101 L1221.89 684.101 L1222.45 684.101 L1223.01 684.101 L1223.57 684.101 L1224.13 684.101 L1224.69 684.101 L1225.25 684.101 L1225.81 684.101 L1226.37 684.101 L1226.93 684.101 L1227.49 684.101 L1228.05 684.101 L1228.61 684.101 L1229.17 684.101 L1229.72 684.101 L1230.28 684.101 L1230.84 684.101 L1231.4 684.101 L1231.96 684.101 L1232.52 684.101 L1233.08 684.101 L1233.64 684.101 L1234.2 684.101 L1234.76 684.101 L1235.32 684.101 L1235.88 684.101 L1236.44 684.101 L1236.99 684.101 L1237.55 684.101 L1238.11 684.101 L1238.67 684.101 L1239.23 684.101 L1239.79 684.101 L1240.35 684.101 L1240.91 684.101 L1241.47 684.101 L1242.03 684.101 L1242.59 684.101 L1243.15 684.101 L1243.71 684.101 L1244.26 684.101 L1244.82 684.101 L1245.38 684.101 L1245.94 684.101 L1246.5 684.101 L1247.06 684.101 L1247.62 684.101 L1248.18 684.101 L1248.74 684.101 L1249.3 684.101 L1249.86 684.101 L1250.42 684.101 L1250.98 684.101 L1251.54 684.101 L1252.09 684.101 L1252.65 684.101 L1253.21 684.101 L1253.77 684.101 L1254.33 684.101 L1254.89 684.101 L1255.45 684.101 L1256.01 684.101 L1256.57 684.101 L1257.13 684.101 L1257.69 684.101 L1258.25 684.101 L1258.81 684.101 L1259.36 684.101 L1259.92 684.101 L1260.48 684.101 L1261.04 684.101 L1261.6 684.101 L1262.16 684.101 L1262.72 684.101 L1263.28 684.101 L1263.84 684.101 L1264.4 684.101 L1264.96 684.101 L1265.52 684.101 L1266.08 684.101 L1266.63 684.101 L1267.19 684.101 L1267.75 684.101 L1268.31 684.101 L1268.87 684.101 L1269.43 684.101 L1269.99 684.101 L1270.55 684.101 L1271.11 684.101 L1271.67 684.101 L1272.23 684.101 L1272.79 684.101 L1273.35 684.101 L1273.91 684.101 L1274.46 684.101 L1275.02 684.101 L1275.58 684.101 L1276.14 684.101 L1276.7 684.101 L1277.26 684.101 L1277.82 684.101 L1278.38 684.101 L1278.94 684.101 L1279.5 684.101 L1280.06 684.101 L1280.62 684.101 L1281.18 684.101 L1281.73 684.101 L1282.29 684.101 L1282.85 684.101 L1283.41 684.101 L1283.97 684.101 L1284.53 684.101 L1285.09 684.101 L1285.65 684.101 L1286.21 684.101 L1286.77 684.101 L1287.33 684.101 L1287.89 684.101 L1288.45 684.101 L1289 684.101 L1289.56 684.101 L1290.12 684.101 L1290.68 684.101 L1291.24 684.101 L1291.8 684.101 L1292.36 684.101 L1292.92 684.101 L1293.48 684.101 L1294.04 684.101 L1294.6 684.101 L1295.16 684.101 L1295.72 684.101 L1296.28 684.101 L1296.83 684.101 L1297.39 684.101 L1297.95 684.101 L1298.51 684.101 L1299.07 684.101 L1299.63 684.101 L1300.19 684.101 L1300.75 684.101 L1301.31 684.101 L1301.87 684.101 L1302.43 684.101 L1302.99 684.101 L1303.55 684.101 L1304.1 684.101 L1304.66 684.101 L1305.22 684.101 L1305.78 684.101 L1306.34 684.101 L1306.9 684.101 L1307.46 684.101 L1308.02 684.101 L1308.58 684.101 L1309.14 684.101 L1309.7 684.101 L1310.26 684.101 L1310.82 684.101 L1311.38 684.101 L1311.93 684.101 L1312.49 684.101 L1313.05 684.101 L1313.61 684.101 L1314.17 684.101 L1314.73 684.101 L1315.29 684.101 L1315.85 684.101 L1316.41 684.101 L1316.97 684.101 L1317.53 684.101 L1318.09 684.101 L1318.65 684.101 L1319.2 684.101 L1319.76 684.101 L1320.32 684.101 L1320.88 684.101 L1321.44 684.101 L1322 684.101 L1322.56 684.101 L1323.12 684.101 L1323.68 684.101 L1324.24 684.101 L1324.8 684.101 L1325.36 684.101 L1325.92 684.101 L1326.47 684.101 L1327.03 684.101 L1327.59 684.101 L1328.15 684.101 L1328.71 684.101 L1329.27 684.101 L1329.83 684.101 L1330.39 684.101 L1330.95 684.101 L1331.51 684.101 L1332.07 684.101 L1332.63 684.101 L1333.19 684.101 L1333.75 684.101 L1334.3 684.101 L1334.86 684.101 L1335.42 684.101 L1335.98 684.101 L1336.54 684.101 L1337.1 684.101 L1337.66 684.101 L1338.22 684.101 L1338.78 684.101 L1339.34 684.101 L1339.9 684.101 L1340.46 684.101 L1341.02 684.101 L1341.57 684.101 L1342.13 684.101 L1342.69 684.101 L1343.25 684.101 L1343.81 684.101 L1344.37 684.101 L1344.93 684.101 L1345.49 684.101 L1346.05 684.101 L1346.61 684.101 L1347.17 684.101 L1347.73 684.101 L1348.29 684.101 L1348.84 684.101 L1349.4 684.101 L1349.96 684.101 L1350.52 684.101 L1351.08 684.101 L1351.64 684.101 L1352.2 684.101 L1352.76 684.101 L1353.32 684.101 L1353.88 684.101 L1354.44 684.101 L1355 684.101 L1355.56 684.101 L1356.12 684.101 L1356.67 684.101 L1357.23 684.101 L1357.79 684.101 L1358.35 684.101 L1358.91 684.101 L1359.47 684.101 L1360.03 684.101 L1360.59 684.101 L1361.15 684.101 L1361.71 684.101 L1362.27 684.101 L1362.83 684.101 L1363.39 684.101 L1363.94 684.101 L1364.5 684.101 L1365.06 684.101 L1365.62 684.101 L1366.18 684.101 L1366.74 684.101 L1367.3 684.101 L1367.86 684.101 L1368.42 684.101 L1368.98 684.101 L1369.54 684.101 L1370.1 684.101 L1370.66 684.101 L1371.21 684.101 L1371.77 684.101 L1372.33 684.101 L1372.89 684.101 L1373.45 684.101 L1374.01 684.101 L1374.57 684.101 L1375.13 684.101 L1375.69 684.101 L1376.25 684.101 L1376.81 684.101 L1377.37 684.101 L1377.93 684.101 L1378.49 684.101 L1379.04 684.101 L1379.6 684.101 L1380.16 684.101 L1380.72 684.101 L1381.28 684.101 L1381.84 684.101 L1382.4 684.101 L1382.96 684.101 L1383.52 684.101 L1384.08 684.101 L1384.64 684.101 L1385.2 684.101 L1385.76 684.101 L1386.31 684.101 L1386.87 684.101 L1387.43 684.101 L1387.99 684.101 L1388.55 684.101 L1389.11 684.101 L1389.67 684.101 L1390.23 684.101 L1390.79 684.101 L1391.35 684.101 L1391.91 684.101 L1392.47 684.101 L1393.03 684.101 L1393.58 684.101 L1394.14 684.101 L1394.7 684.101 L1395.26 684.101 L1395.82 684.101 L1396.38 684.101 L1396.94 684.101 L1397.5 684.101 L1398.06 684.101 L1398.62 684.101 L1399.18 684.101 L1399.74 684.101 L1400.3 684.101 L1400.86 684.101 L1401.41 684.101 L1401.97 684.101 L1402.53 684.101 L1403.09 684.101 L1403.65 684.101 L1404.21 684.101 L1404.77 684.101 L1405.33 684.101 L1405.89 684.101 L1406.45 684.101 L1407.01 684.101 L1407.57 684.101 L1408.13 684.101 L1408.68 684.101 L1409.24 684.101 L1409.8 684.101 L1410.36 684.101 L1410.92 684.101 L1411.48 684.101 L1412.04 684.101 L1412.6 684.101 L1413.16 684.101 L1413.72 684.101 L1414.28 684.101 L1414.84 684.101 L1415.4 684.101 L1415.95 684.101 L1416.51 684.101 L1417.07 684.101 L1417.63 684.101 L1418.19 684.101 L1418.75 684.101 L1419.31 684.101 L1419.87 684.101 L1420.43 684.101 L1420.99 684.101 L1421.55 684.101 L1422.11 684.101 L1422.67 684.101 L1423.23 684.101 L1423.78 684.101 L1424.34 684.101 L1424.9 684.101 L1425.46 684.101 L1426.02 684.101 L1426.58 684.101 L1427.14 684.101 L1427.7 684.101 L1428.26 684.101 L1428.82 684.101 L1429.38 684.101 L1429.94 684.101 L1430.5 684.101 L1431.05 684.101 L1431.61 684.101 L1432.17 684.101 L1432.73 684.101 L1433.29 684.101 L1433.85 684.101 L1434.41 684.101 L1434.97 684.101 L1435.53 684.101 L1436.09 684.101 L1436.65 684.101 L1437.21 684.101 L1437.77 684.101 L1438.33 684.101 L1438.88 684.101 L1439.44 684.101 L1440 684.101 L1440.56 684.101 L1441.12 684.101 L1441.68 684.101 L1442.24 684.101 L1442.8 684.101 L1443.36 684.101 L1443.92 684.101 L1444.48 684.101 L1445.04 684.101 L1445.6 684.101 L1446.15 684.101 L1446.71 684.101 L1447.27 684.101 L1447.83 684.101 L1448.39 684.101 L1448.95 684.101 L1449.51 684.101 L1450.07 684.101 L1450.63 684.101 L1451.19 684.101 L1451.75 684.101 L1452.31 684.101 L1452.87 684.101 L1453.42 684.101 L1453.98 684.101 L1454.54 684.101 L1455.1 684.101 L1455.66 684.101 L1456.22 684.101 L1456.78 684.101 L1457.34 684.101 L1457.9 684.101 L1458.46 684.101 L1459.02 684.101 L1459.58 684.101 L1460.14 684.101 L1460.7 684.101 L1461.25 684.101 L1461.81 684.101 L1462.37 684.101 L1462.93 684.101 L1463.49 684.101 L1464.05 684.101 L1464.61 684.101 L1465.17 684.101 L1465.73 684.101 L1466.29 684.101 L1466.85 684.101 L1467.41 684.101 L1467.97 684.101 L1468.52 684.101 L1469.08 684.101 L1469.64 684.101 L1470.2 684.101 L1470.76 684.101 L1471.32 684.101 L1471.88 684.101 L1472.44 684.101 L1473 684.101 L1473.56 684.101 L1474.12 684.101 L1474.68 684.101 L1475.24 684.101 L1475.79 684.101 L1476.35 684.101 L1476.91 684.101 L1477.47 684.101 L1478.03 684.101 L1478.59 684.101 L1479.15 684.101 L1479.71 684.101 L1480.27 684.101 L1480.83 684.101 L1481.39 684.101 L1481.95 684.101 L1482.51 684.101 L1483.07 684.101 L1483.62 684.101 L1484.18 684.101 L1484.74 684.101 L1485.3 684.101 L1485.86 684.101 L1486.42 684.101 L1486.98 684.101 L1487.54 684.101 L1488.1 684.101 L1488.66 684.101 L1489.22 684.101 L1489.78 684.101 L1490.34 684.101 L1490.89 684.101 L1491.45 684.101 L1492.01 684.101 L1492.57 684.101 L1493.13 684.101 L1493.69 684.101 L1494.25 684.101 L1494.81 684.101 L1495.37 684.101 L1495.93 684.101 L1496.49 684.101 L1497.05 684.101 L1497.61 684.101 L1498.16 684.101 L1498.72 684.101 L1499.28 684.101 L1499.84 684.101 L1500.4 684.101 L1500.96 684.101 L1501.52 684.101 L1502.08 684.101 L1502.64 684.101 L1503.2 684.101 L1503.76 684.101 L1504.32 684.101 L1504.88 684.101 L1505.44 684.101 L1505.99 684.101 L1506.55 684.101 L1507.11 684.101 L1507.67 684.101 L1508.23 684.101 L1508.79 684.101 L1509.35 684.101 L1509.91 684.101 L1510.47 684.101 L1511.03 684.101 L1511.59 684.101 L1512.15 684.101 L1512.71 684.101 L1513.26 684.101 L1513.82 684.101 L1514.38 684.101 L1514.94 684.101 L1515.5 684.101 L1516.06 684.101 L1516.62 684.101 L1517.18 684.101 L1517.74 684.101 L1518.3 684.101 L1518.86 684.101 L1519.42 684.101 L1519.98 684.101 L1520.53 684.101 L1521.09 684.101 L1521.65 684.101 L1522.21 684.101 L1522.77 684.101 L1523.33 684.101 L1523.89 684.101 L1524.45 684.101 L1525.01 684.101 L1525.57 684.101 L1526.13 684.101 L1526.69 684.101 L1527.25 684.101 L1527.81 684.101 L1528.36 684.101 L1528.92 684.101 L1529.48 684.101 L1530.04 684.101 L1530.6 684.101 L1531.16 684.101 L1531.72 684.101 L1532.28 684.101 L1532.84 684.101 L1533.4 684.101 L1533.96 684.101 L1534.52 684.101 L1535.08 684.101 L1535.63 684.101 L1536.19 684.101 L1536.75 684.101 L1537.31 684.101 L1537.87 684.101 L1538.43 684.101 L1538.99 684.101 L1539.55 684.101 L1540.11 684.101 L1540.67 684.101 L1541.23 684.101 L1541.79 684.101 L1542.35 684.101 L1542.9 684.101 L1543.46 684.101 L1544.02 684.101 L1544.58 684.101 L1545.14 684.101 L1545.7 684.101 L1546.26 684.101 L1546.82 684.101 L1547.38 684.101 L1547.94 684.101 L1548.5 684.101 L1549.06 684.101 L1549.62 684.101 L1550.18 684.101 L1550.73 684.101 L1551.29 684.101 L1551.85 684.101 L1552.41 684.101 L1552.97 684.101 L1553.53 684.101 L1554.09 684.101 L1554.65 684.101 L1555.21 684.101 L1555.77 684.101 L1556.33 684.101 L1556.89 684.101 L1557.45 684.101 L1558 684.101 L1558.56 684.101 L1559.12 684.101 L1559.68 684.101 L1560.24 684.101 L1560.8 684.101 L1561.36 684.101 L1561.92 684.101 L1562.48 684.101 L1563.04 684.101 L1563.6 684.101 L1564.16 684.101 L1564.72 684.101 L1565.28 684.101 L1565.83 684.101 L1566.39 684.101 L1566.95 684.101 L1567.51 684.101 L1568.07 684.101 L1568.63 684.101 L1569.19 684.101 L1569.75 684.101 L1570.31 684.101 L1570.87 684.101 L1571.43 684.101 L1571.99 684.101 L1572.55 684.101 L1573.1 684.101 L1573.66 684.101 L1574.22 684.101 L1574.78 684.101 L1575.34 684.101 L1575.9 684.101 L1576.46 684.101 L1577.02 684.101 L1577.58 684.101 L1578.14 684.101 L1578.7 684.101 L1579.26 684.101 L1579.82 684.101 L1580.37 684.101 L1580.93 684.101 L1581.49 684.101 L1582.05 684.101 L1582.61 684.101 L1583.17 684.101 L1583.73 684.101 L1584.29 684.101 L1584.85 684.101 L1585.41 684.101 L1585.97 684.101 L1586.53 684.101 L1587.09 684.101 L1587.65 684.101 L1588.2 684.101 L1588.76 684.101 L1589.32 684.101 L1589.88 684.101 L1590.44 684.101 L1591 684.101 L1591.56 684.101 L1592.12 684.101 L1592.68 684.101 L1593.24 684.101 L1593.8 684.101 L1594.36 684.101 L1594.92 684.101 L1595.47 684.101 L1596.03 684.101 L1596.59 684.101 L1597.15 684.101 L1597.71 684.101 L1598.27 684.101 L1598.83 684.101 L1599.39 684.101 L1599.95 684.101 L1600.51 684.101 L1601.07 684.101 L1601.63 684.101 L1602.19 684.101 L1602.74 684.101 L1603.3 684.101 L1603.86 684.101 L1604.42 684.101 L1604.98 684.101 L1605.54 684.101 L1606.1 684.101 L1606.66 684.101 L1607.22 684.101 L1607.78 684.101 L1608.34 684.101 L1608.9 684.101 L1609.46 684.101 L1610.02 684.101 L1610.57 684.101 L1611.13 684.101 L1611.69 684.101 L1612.25 684.101 L1612.81 684.101 L1613.37 684.101 L1613.93 684.101 L1614.49 684.101 L1615.05 684.101 L1615.61 684.101 L1616.17 684.101 L1616.73 684.101 L1617.29 684.101 L1617.84 684.101 L1618.4 684.101 L1618.96 684.101 L1619.52 684.101 L1620.08 684.101 L1620.64 684.101 L1621.2 684.101 L1621.76 684.101 L1622.32 684.101 L1622.88 684.101 L1623.44 684.101 L1624 684.101 L1624.56 684.101 L1625.11 684.101 L1625.67 684.101 L1626.23 684.101 L1626.79 684.101 L1627.35 684.101 L1627.91 684.101 L1628.47 684.101 L1629.03 684.101 L1629.59 684.101 L1630.15 684.101 L1630.71 684.101 L1631.27 684.101 L1631.83 684.101 L1632.39 684.101 L1632.94 684.101 L1633.5 684.101 L1634.06 684.101 L1634.62 684.101 L1635.18 684.101 L1635.74 684.101 L1636.3 684.101 L1636.86 684.101 L1637.42 684.101 L1637.98 684.101 L1638.54 684.101 L1639.1 684.101 L1639.66 684.101 L1640.21 684.101 L1640.77 684.101 L1641.33 684.101 L1641.89 684.101 L1642.45 684.101 L1643.01 684.101 L1643.57 684.101 L1644.13 684.101 L1644.69 684.101 L1645.25 684.101 L1645.81 684.101 L1646.37 684.101 L1646.93 684.101 L1647.48 684.101 L1648.04 684.101 L1648.6 684.101 L1649.16 684.101 L1649.72 684.101 L1650.28 684.101 L1650.84 684.101 L1651.4 684.101 L1651.96 684.101 L1652.52 684.101 L1653.08 684.101 L1653.64 684.101 L1654.2 684.101 L1654.76 684.101 L1655.31 684.101 L1655.87 684.101 L1656.43 684.101 L1656.99 684.101 L1657.55 684.101 L1658.11 684.101 L1658.67 684.101 L1659.23 684.101 L1659.79 684.101 L1660.35 684.101 L1660.91 684.101 L1661.47 684.101 L1662.03 684.101 L1662.58 684.101 L1663.14 684.101 L1663.7 684.101 L1664.26 684.101 L1664.82 684.101 L1665.38 684.101 L1665.94 684.101 L1666.5 684.101 L1667.06 684.101 L1667.62 684.101 L1668.18 684.101 L1668.74 684.101 L1669.3 684.101 L1669.85 684.101 L1670.41 684.101 L1670.97 684.101 L1671.53 684.101 L1672.09 684.101 L1672.65 684.101 L1673.21 684.101 L1673.77 684.101 L1674.33 684.101 L1674.89 684.101 L1675.45 684.101 L1676.01 684.101 L1676.57 684.101 L1677.13 684.101 L1677.68 684.101 L1678.24 684.101 L1678.8 684.101 L1679.36 684.101 L1679.92 684.101 L1680.48 684.101 L1681.04 684.101 L1681.6 684.101 L1682.16 684.101 L1682.72 684.101 L1683.28 684.101 L1683.84 684.101 L1684.4 684.101 L1684.95 684.101 L1685.51 684.101 L1686.07 684.101 L1686.63 684.101 L1687.19 684.101 L1687.75 684.101 L1688.31 684.101 L1688.87 684.101 L1689.43 684.101 L1689.99 684.101 L1690.55 684.101 L1691.11 684.101 L1691.67 684.101 L1692.23 684.101 L1692.78 684.101 L1693.34 684.101 L1693.9 684.101 L1694.46 684.101 L1695.02 684.101 L1695.58 684.101 L1696.14 684.101 L1696.7 684.101 L1697.26 684.101 L1697.82 684.101 L1698.38 684.101 L1698.94 684.101 L1699.5 684.101 L1700.05 684.101 L1700.61 684.101 L1701.17 684.101 L1701.73 684.101 L1702.29 684.101 L1702.85 684.101 L1703.41 684.101 L1703.97 684.101 L1704.53 684.101 L1705.09 684.101 L1705.65 684.101 L1706.21 684.101 L1706.77 684.101 L1707.32 684.101 L1707.88 684.101 L1708.44 684.101 L1709 684.101 L1709.56 684.101 L1710.12 684.101 L1710.68 684.101 L1711.24 684.101 L1711.8 684.101 L1712.36 684.101 L1712.92 684.101 L1713.48 684.101 L1714.04 684.101 L1714.6 684.101 L1715.15 684.101 L1715.71 684.101 L1716.27 684.101 L1716.83 684.101 L1717.39 684.101 L1717.95 684.101 L1718.51 684.101 L1719.07 684.101 L1719.63 684.101 L1720.19 684.101 L1720.75 684.101 L1721.31 684.101 L1721.87 684.101 L1722.42 684.101 L1722.98 684.101 L1723.54 684.101 L1724.1 684.101 L1724.66 684.101 L1725.22 684.101 L1725.78 684.101 L1726.34 684.101 L1726.9 684.101 L1727.46 684.101 L1728.02 684.101 L1728.58 684.101 L1729.14 684.101 L1729.69 684.101 L1730.25 684.101 L1730.81 684.101 L1731.37 684.101 L1731.93 684.101 L1732.49 684.101 L1733.05 684.101 L1733.61 684.101 L1734.17 684.101 L1734.73 684.101 L1735.29 684.101 L1735.85 684.101 L1736.41 684.101 L1736.97 684.101 L1737.52 684.101 L1738.08 684.101 L1738.64 684.101 L1739.2 684.101 L1739.76 684.101 L1740.32 684.101 L1740.88 684.101 L1741.44 684.101 L1742 684.101 L1742.56 684.101 L1743.12 684.101 L1743.68 684.101 L1744.24 684.101 L1744.79 684.101 L1745.35 684.101 L1745.91 684.101 L1746.47 684.101 L1747.03 684.101 L1747.59 684.101 L1748.15 684.101 L1748.71 684.101 L1749.27 684.101 L1749.83 684.101 L1750.39 684.101 L1750.95 684.101 L1751.51 684.101 L1752.06 684.101 L1752.62 684.101 L1753.18 684.101 L1753.74 684.101 L1754.3 684.101 L1754.86 684.101 L1755.42 684.101 L1755.98 684.101 L1756.54 684.101 L1757.1 684.101 L1757.66 684.101 L1758.22 684.101 L1758.78 684.101 L1759.34 684.101 L1759.89 684.101 L1760.45 684.101 L1761.01 684.101 L1761.57 684.101 L1762.13 684.101 L1762.69 684.101 L1763.25 684.101 L1763.81 684.101 L1764.37 684.101 L1764.93 684.101 L1765.49 684.101 L1766.05 684.101 L1766.61 684.101 L1767.16 684.101 L1767.72 684.101 L1768.28 684.101 L1768.84 684.101 L1769.4 684.101 L1769.96 684.101 L1770.52 684.101 L1771.08 684.101 L1771.64 684.101 L1772.2 684.101 L1772.76 684.101 L1773.32 684.101 L1773.88 684.101 L1774.43 684.101 L1774.99 684.101 L1775.55 684.101 L1776.11 684.101 L1776.67 684.101 L1777.23 684.101 L1777.79 684.101 L1778.35 684.101 L1778.91 684.101 L1779.47 684.101 L1780.03 684.101 L1780.59 684.101 L1781.15 684.101 L1781.71 684.101 L1782.26 684.101 L1782.82 684.101 L1783.38 684.101 L1783.94 684.101 L1784.5 684.101 L1785.06 684.101 L1785.62 684.101 L1786.18 684.101 L1786.74 684.101 L1787.3 684.101 L1787.86 684.101 L1788.42 684.101 L1788.98 684.101 L1789.53 684.101 L1790.09 684.101 L1790.65 684.101 L1791.21 684.101 L1791.77 684.101 L1792.33 684.101 L1792.89 684.101 L1793.45 684.101 L1794.01 684.101 L1794.57 684.101 L1795.13 684.101 L1795.69 684.101 L1796.25 684.101 L1796.8 684.101 L1797.36 684.101 L1797.92 684.101 L1798.48 684.101 L1799.04 684.101 L1799.6 684.101 L1800.16 684.101 L1800.72 684.101 L1801.28 684.101 L1801.84 684.101 L1802.4 684.101 L1802.96 684.101 L1803.52 684.101 L1804.08 684.101 L1804.63 684.101 L1805.19 684.101 L1805.75 684.101 L1806.31 684.101 L1806.87 684.101 L1807.43 684.101 L1807.99 684.101 L1808.55 684.101 L1809.11 684.101 L1809.67 684.101 L1810.23 684.101 L1810.79 684.101 L1811.35 684.101 L1811.9 684.101 L1812.46 684.101 L1813.02 684.101 L1813.58 684.101 L1814.14 684.101 L1814.7 684.101 L1815.26 684.101 L1815.82 684.101 L1816.38 684.101 L1816.94 684.101 L1817.5 684.101 L1818.06 684.101 L1818.62 684.101 L1819.18 684.101 L1819.73 684.101 L1820.29 684.101 L1820.85 684.101 L1821.41 684.101 L1821.97 684.101 L1822.53 684.101 L1823.09 684.101 L1823.65 684.101 L1824.21 684.101 L1824.77 684.101 L1825.33 684.101 L1825.89 684.101 L1826.45 684.101 L1827 684.101 L1827.56 684.101 L1828.12 684.101 L1828.68 684.101 L1829.24 684.101 L1829.8 684.101 L1830.36 684.101 L1830.92 684.101 L1831.48 684.101 L1832.04 684.101 L1832.6 684.101 L1833.16 684.101 L1833.72 684.101 L1834.27 684.101 L1834.83 684.101 L1835.39 684.101 L1835.95 684.101 L1836.51 684.101 L1837.07 684.101 L1837.63 684.101 L1838.19 684.101 L1838.19 682.282 L1837.63 682.282 L1837.07 682.282 L1836.51 682.282 L1835.95 682.282 L1835.39 682.282 L1834.83 682.282 L1834.27 682.282 L1833.72 682.282 L1833.16 682.282 L1832.6 682.282 L1832.04 682.282 L1831.48 682.282 L1830.92 682.282 L1830.36 682.282 L1829.8 682.282 L1829.24 682.282 L1828.68 682.282 L1828.12 682.282 L1827.56 682.282 L1827 682.282 L1826.45 682.282 L1825.89 682.282 L1825.33 682.282 L1824.77 682.282 L1824.21 682.282 L1823.65 682.282 L1823.09 682.282 L1822.53 682.282 L1821.97 682.282 L1821.41 682.282 L1820.85 682.282 L1820.29 682.282 L1819.73 682.282 L1819.18 682.282 L1818.62 682.282 L1818.06 682.282 L1817.5 682.282 L1816.94 682.282 L1816.38 682.282 L1815.82 682.282 L1815.26 682.282 L1814.7 682.282 L1814.14 682.282 L1813.58 682.282 L1813.02 682.282 L1812.46 682.282 L1811.9 682.282 L1811.35 682.282 L1810.79 682.282 L1810.23 682.282 L1809.67 682.282 L1809.11 682.282 L1808.55 682.282 L1807.99 682.282 L1807.43 682.282 L1806.87 682.282 L1806.31 682.282 L1805.75 682.282 L1805.19 682.282 L1804.63 682.282 L1804.08 682.282 L1803.52 682.282 L1802.96 682.282 L1802.4 682.282 L1801.84 682.282 L1801.28 682.282 L1800.72 682.282 L1800.16 682.282 L1799.6 682.282 L1799.04 682.282 L1798.48 682.282 L1797.92 682.282 L1797.36 682.282 L1796.8 682.282 L1796.25 682.282 L1795.69 682.282 L1795.13 682.282 L1794.57 682.282 L1794.01 682.282 L1793.45 682.282 L1792.89 682.282 L1792.33 682.282 L1791.77 682.282 L1791.21 682.282 L1790.65 682.282 L1790.09 682.282 L1789.53 682.282 L1788.98 682.282 L1788.42 682.282 L1787.86 682.282 L1787.3 682.282 L1786.74 682.282 L1786.18 682.282 L1785.62 682.282 L1785.06 682.282 L1784.5 682.282 L1783.94 682.282 L1783.38 682.282 L1782.82 682.282 L1782.26 682.282 L1781.71 682.282 L1781.15 682.282 L1780.59 682.282 L1780.03 682.282 L1779.47 682.282 L1778.91 682.282 L1778.35 682.282 L1777.79 682.282 L1777.23 682.282 L1776.67 682.282 L1776.11 682.282 L1775.55 682.282 L1774.99 682.282 L1774.43 682.282 L1773.88 682.282 L1773.32 682.282 L1772.76 682.282 L1772.2 682.282 L1771.64 682.282 L1771.08 682.282 L1770.52 682.282 L1769.96 682.282 L1769.4 682.282 L1768.84 682.282 L1768.28 682.282 L1767.72 682.282 L1767.16 682.282 L1766.61 682.282 L1766.05 682.282 L1765.49 682.282 L1764.93 682.282 L1764.37 682.282 L1763.81 682.282 L1763.25 682.282 L1762.69 682.282 L1762.13 682.282 L1761.57 682.282 L1761.01 682.282 L1760.45 682.282 L1759.89 682.282 L1759.34 682.282 L1758.78 682.282 L1758.22 682.282 L1757.66 682.282 L1757.1 682.282 L1756.54 682.282 L1755.98 682.282 L1755.42 682.282 L1754.86 682.282 L1754.3 682.282 L1753.74 682.282 L1753.18 682.282 L1752.62 682.282 L1752.06 682.282 L1751.51 682.282 L1750.95 682.282 L1750.39 682.282 L1749.83 682.282 L1749.27 682.282 L1748.71 682.282 L1748.15 682.282 L1747.59 682.282 L1747.03 682.282 L1746.47 682.282 L1745.91 682.282 L1745.35 682.282 L1744.79 682.282 L1744.24 682.282 L1743.68 682.282 L1743.12 682.282 L1742.56 682.282 L1742 682.282 L1741.44 682.282 L1740.88 682.282 L1740.32 682.282 L1739.76 682.282 L1739.2 682.282 L1738.64 682.282 L1738.08 682.282 L1737.52 682.282 L1736.97 682.282 L1736.41 682.282 L1735.85 682.282 L1735.29 682.282 L1734.73 682.282 L1734.17 682.282 L1733.61 682.282 L1733.05 682.282 L1732.49 682.282 L1731.93 682.282 L1731.37 682.282 L1730.81 682.282 L1730.25 682.282 L1729.69 682.282 L1729.14 682.282 L1728.58 682.282 L1728.02 682.282 L1727.46 682.282 L1726.9 682.282 L1726.34 682.282 L1725.78 682.282 L1725.22 682.282 L1724.66 682.282 L1724.1 682.282 L1723.54 682.282 L1722.98 682.282 L1722.42 682.282 L1721.87 682.282 L1721.31 682.282 L1720.75 682.282 L1720.19 682.282 L1719.63 682.282 L1719.07 682.282 L1718.51 682.282 L1717.95 682.282 L1717.39 682.282 L1716.83 682.282 L1716.27 682.282 L1715.71 682.282 L1715.15 682.282 L1714.6 682.282 L1714.04 682.282 L1713.48 682.282 L1712.92 682.282 L1712.36 682.282 L1711.8 682.282 L1711.24 682.282 L1710.68 682.282 L1710.12 682.282 L1709.56 682.282 L1709 682.282 L1708.44 682.282 L1707.88 682.282 L1707.32 682.282 L1706.77 682.282 L1706.21 682.282 L1705.65 682.282 L1705.09 682.282 L1704.53 682.282 L1703.97 682.282 L1703.41 682.282 L1702.85 682.282 L1702.29 682.282 L1701.73 682.282 L1701.17 682.282 L1700.61 682.282 L1700.05 682.282 L1699.5 682.282 L1698.94 682.282 L1698.38 682.282 L1697.82 682.282 L1697.26 682.282 L1696.7 682.282 L1696.14 682.282 L1695.58 682.282 L1695.02 682.282 L1694.46 682.282 L1693.9 682.282 L1693.34 682.282 L1692.78 682.282 L1692.23 682.282 L1691.67 682.282 L1691.11 682.282 L1690.55 682.282 L1689.99 682.282 L1689.43 682.282 L1688.87 682.282 L1688.31 682.282 L1687.75 682.282 L1687.19 682.282 L1686.63 682.282 L1686.07 682.282 L1685.51 682.282 L1684.95 682.282 L1684.4 682.282 L1683.84 682.282 L1683.28 682.282 L1682.72 682.282 L1682.16 682.282 L1681.6 682.282 L1681.04 682.282 L1680.48 682.282 L1679.92 682.282 L1679.36 682.282 L1678.8 682.282 L1678.24 682.282 L1677.68 682.282 L1677.13 682.282 L1676.57 682.282 L1676.01 682.282 L1675.45 682.282 L1674.89 682.282 L1674.33 682.282 L1673.77 682.282 L1673.21 682.282 L1672.65 682.282 L1672.09 682.282 L1671.53 682.282 L1670.97 682.282 L1670.41 682.282 L1669.85 682.282 L1669.3 682.282 L1668.74 682.282 L1668.18 682.282 L1667.62 682.282 L1667.06 682.282 L1666.5 682.282 L1665.94 682.282 L1665.38 682.282 L1664.82 682.282 L1664.26 682.282 L1663.7 682.282 L1663.14 682.282 L1662.58 682.282 L1662.03 682.282 L1661.47 682.282 L1660.91 682.282 L1660.35 682.282 L1659.79 682.282 L1659.23 682.282 L1658.67 682.282 L1658.11 682.282 L1657.55 682.282 L1656.99 682.282 L1656.43 682.282 L1655.87 682.282 L1655.31 682.282 L1654.76 682.282 L1654.2 682.282 L1653.64 682.282 L1653.08 682.282 L1652.52 682.282 L1651.96 682.282 L1651.4 682.282 L1650.84 682.282 L1650.28 682.282 L1649.72 682.282 L1649.16 682.282 L1648.6 682.282 L1648.04 682.282 L1647.48 682.282 L1646.93 682.282 L1646.37 682.282 L1645.81 682.282 L1645.25 682.282 L1644.69 682.282 L1644.13 682.282 L1643.57 682.282 L1643.01 682.282 L1642.45 682.282 L1641.89 682.282 L1641.33 682.282 L1640.77 682.282 L1640.21 682.282 L1639.66 682.282 L1639.1 682.282 L1638.54 682.282 L1637.98 682.282 L1637.42 682.282 L1636.86 682.282 L1636.3 682.282 L1635.74 682.282 L1635.18 682.282 L1634.62 682.282 L1634.06 682.282 L1633.5 682.282 L1632.94 682.282 L1632.39 682.282 L1631.83 682.282 L1631.27 682.282 L1630.71 682.282 L1630.15 682.282 L1629.59 682.282 L1629.03 682.282 L1628.47 682.282 L1627.91 682.282 L1627.35 682.282 L1626.79 682.282 L1626.23 682.282 L1625.67 682.282 L1625.11 682.282 L1624.56 682.282 L1624 682.282 L1623.44 682.282 L1622.88 682.282 L1622.32 682.282 L1621.76 682.282 L1621.2 682.282 L1620.64 682.282 L1620.08 682.282 L1619.52 682.282 L1618.96 682.282 L1618.4 682.282 L1617.84 682.282 L1617.29 682.282 L1616.73 682.282 L1616.17 682.282 L1615.61 682.282 L1615.05 682.282 L1614.49 682.282 L1613.93 682.282 L1613.37 682.282 L1612.81 682.282 L1612.25 682.282 L1611.69 682.282 L1611.13 682.282 L1610.57 682.282 L1610.02 682.282 L1609.46 682.282 L1608.9 682.282 L1608.34 682.282 L1607.78 682.282 L1607.22 682.282 L1606.66 682.282 L1606.1 682.282 L1605.54 682.282 L1604.98 682.282 L1604.42 682.282 L1603.86 682.282 L1603.3 682.282 L1602.74 682.282 L1602.19 682.282 L1601.63 682.282 L1601.07 682.282 L1600.51 682.282 L1599.95 682.282 L1599.39 682.282 L1598.83 682.282 L1598.27 682.282 L1597.71 682.282 L1597.15 682.282 L1596.59 682.282 L1596.03 682.282 L1595.47 682.282 L1594.92 682.282 L1594.36 682.282 L1593.8 682.282 L1593.24 682.282 L1592.68 682.282 L1592.12 682.282 L1591.56 682.282 L1591 682.282 L1590.44 682.282 L1589.88 682.282 L1589.32 682.282 L1588.76 682.282 L1588.2 682.282 L1587.65 682.282 L1587.09 682.282 L1586.53 682.282 L1585.97 682.282 L1585.41 682.282 L1584.85 682.282 L1584.29 682.282 L1583.73 682.282 L1583.17 682.282 L1582.61 682.282 L1582.05 682.282 L1581.49 682.282 L1580.93 682.282 L1580.37 682.282 L1579.82 682.282 L1579.26 682.282 L1578.7 682.282 L1578.14 682.282 L1577.58 682.282 L1577.02 682.282 L1576.46 682.282 L1575.9 682.282 L1575.34 682.282 L1574.78 682.282 L1574.22 682.282 L1573.66 682.282 L1573.1 682.282 L1572.55 682.282 L1571.99 682.282 L1571.43 682.282 L1570.87 682.282 L1570.31 682.282 L1569.75 682.282 L1569.19 682.282 L1568.63 682.282 L1568.07 682.282 L1567.51 682.282 L1566.95 682.282 L1566.39 682.282 L1565.83 682.282 L1565.28 682.282 L1564.72 682.282 L1564.16 682.282 L1563.6 682.282 L1563.04 682.282 L1562.48 682.282 L1561.92 682.282 L1561.36 682.282 L1560.8 682.282 L1560.24 682.282 L1559.68 682.282 L1559.12 682.282 L1558.56 682.282 L1558 682.282 L1557.45 682.282 L1556.89 682.282 L1556.33 682.282 L1555.77 682.282 L1555.21 682.282 L1554.65 682.282 L1554.09 682.282 L1553.53 682.282 L1552.97 682.282 L1552.41 682.282 L1551.85 682.282 L1551.29 682.282 L1550.73 682.282 L1550.18 682.282 L1549.62 682.282 L1549.06 682.282 L1548.5 682.282 L1547.94 682.282 L1547.38 682.282 L1546.82 682.282 L1546.26 682.282 L1545.7 682.282 L1545.14 682.282 L1544.58 682.282 L1544.02 682.282 L1543.46 682.282 L1542.9 682.282 L1542.35 682.282 L1541.79 682.282 L1541.23 682.282 L1540.67 682.282 L1540.11 682.282 L1539.55 682.282 L1538.99 682.282 L1538.43 682.282 L1537.87 682.282 L1537.31 682.282 L1536.75 682.282 L1536.19 682.282 L1535.63 682.282 L1535.08 682.282 L1534.52 682.282 L1533.96 682.282 L1533.4 682.282 L1532.84 682.282 L1532.28 682.282 L1531.72 682.282 L1531.16 682.282 L1530.6 682.282 L1530.04 682.282 L1529.48 682.282 L1528.92 682.282 L1528.36 682.282 L1527.81 682.282 L1527.25 682.282 L1526.69 682.282 L1526.13 682.282 L1525.57 682.282 L1525.01 682.282 L1524.45 682.282 L1523.89 682.282 L1523.33 682.282 L1522.77 682.282 L1522.21 682.282 L1521.65 682.282 L1521.09 682.282 L1520.53 682.282 L1519.98 682.282 L1519.42 682.282 L1518.86 682.282 L1518.3 682.282 L1517.74 682.282 L1517.18 682.282 L1516.62 682.282 L1516.06 682.282 L1515.5 682.282 L1514.94 682.282 L1514.38 682.282 L1513.82 682.282 L1513.26 682.282 L1512.71 682.282 L1512.15 682.282 L1511.59 682.282 L1511.03 682.282 L1510.47 682.282 L1509.91 682.282 L1509.35 682.282 L1508.79 682.282 L1508.23 682.282 L1507.67 682.282 L1507.11 682.282 L1506.55 682.282 L1505.99 682.282 L1505.44 682.282 L1504.88 682.282 L1504.32 682.282 L1503.76 682.282 L1503.2 682.282 L1502.64 682.282 L1502.08 682.282 L1501.52 682.282 L1500.96 682.282 L1500.4 682.282 L1499.84 682.282 L1499.28 682.282 L1498.72 682.282 L1498.16 682.282 L1497.61 682.282 L1497.05 682.282 L1496.49 682.282 L1495.93 682.282 L1495.37 682.282 L1494.81 682.282 L1494.25 682.282 L1493.69 682.282 L1493.13 682.282 L1492.57 682.282 L1492.01 682.282 L1491.45 682.282 L1490.89 682.282 L1490.34 682.282 L1489.78 682.282 L1489.22 682.282 L1488.66 682.282 L1488.1 682.282 L1487.54 682.282 L1486.98 682.282 L1486.42 682.282 L1485.86 682.282 L1485.3 682.282 L1484.74 682.282 L1484.18 682.282 L1483.62 682.282 L1483.07 682.282 L1482.51 682.282 L1481.95 682.282 L1481.39 682.282 L1480.83 682.282 L1480.27 682.282 L1479.71 682.282 L1479.15 682.282 L1478.59 682.282 L1478.03 682.282 L1477.47 682.282 L1476.91 682.282 L1476.35 682.282 L1475.79 682.282 L1475.24 682.282 L1474.68 682.282 L1474.12 682.282 L1473.56 682.282 L1473 682.282 L1472.44 682.282 L1471.88 682.282 L1471.32 682.282 L1470.76 682.282 L1470.2 682.282 L1469.64 682.282 L1469.08 682.282 L1468.52 682.282 L1467.97 682.282 L1467.41 682.282 L1466.85 682.282 L1466.29 682.282 L1465.73 682.282 L1465.17 682.282 L1464.61 682.282 L1464.05 682.282 L1463.49 682.282 L1462.93 682.282 L1462.37 682.282 L1461.81 682.282 L1461.25 682.282 L1460.7 682.282 L1460.14 682.282 L1459.58 682.282 L1459.02 682.282 L1458.46 682.282 L1457.9 682.282 L1457.34 682.282 L1456.78 682.282 L1456.22 682.282 L1455.66 682.282 L1455.1 682.282 L1454.54 682.282 L1453.98 682.282 L1453.42 682.282 L1452.87 682.282 L1452.31 682.282 L1451.75 682.282 L1451.19 682.282 L1450.63 682.282 L1450.07 682.282 L1449.51 682.282 L1448.95 682.282 L1448.39 682.282 L1447.83 682.282 L1447.27 682.282 L1446.71 682.282 L1446.15 682.282 L1445.6 682.282 L1445.04 682.282 L1444.48 682.282 L1443.92 682.282 L1443.36 682.282 L1442.8 682.282 L1442.24 682.282 L1441.68 682.282 L1441.12 682.282 L1440.56 682.282 L1440 682.282 L1439.44 682.282 L1438.88 682.282 L1438.33 682.282 L1437.77 682.282 L1437.21 682.282 L1436.65 682.282 L1436.09 682.282 L1435.53 682.282 L1434.97 682.282 L1434.41 682.282 L1433.85 682.282 L1433.29 682.282 L1432.73 682.282 L1432.17 682.282 L1431.61 682.282 L1431.05 682.282 L1430.5 682.282 L1429.94 682.282 L1429.38 682.282 L1428.82 682.282 L1428.26 682.282 L1427.7 682.282 L1427.14 682.282 L1426.58 682.282 L1426.02 682.282 L1425.46 682.282 L1424.9 682.282 L1424.34 682.282 L1423.78 682.282 L1423.23 682.282 L1422.67 682.282 L1422.11 682.282 L1421.55 682.282 L1420.99 682.282 L1420.43 682.282 L1419.87 682.282 L1419.31 682.282 L1418.75 682.282 L1418.19 682.282 L1417.63 682.282 L1417.07 682.282 L1416.51 682.282 L1415.95 682.282 L1415.4 682.282 L1414.84 682.282 L1414.28 682.282 L1413.72 682.282 L1413.16 682.282 L1412.6 682.282 L1412.04 682.282 L1411.48 682.282 L1410.92 682.282 L1410.36 682.282 L1409.8 682.282 L1409.24 682.282 L1408.68 682.282 L1408.13 682.282 L1407.57 682.282 L1407.01 682.282 L1406.45 682.282 L1405.89 682.282 L1405.33 682.282 L1404.77 682.282 L1404.21 682.282 L1403.65 682.282 L1403.09 682.282 L1402.53 682.282 L1401.97 682.282 L1401.41 682.282 L1400.86 682.282 L1400.3 682.282 L1399.74 682.282 L1399.18 682.282 L1398.62 682.282 L1398.06 682.282 L1397.5 682.282 L1396.94 682.282 L1396.38 682.282 L1395.82 682.282 L1395.26 682.282 L1394.7 682.282 L1394.14 682.282 L1393.58 682.282 L1393.03 682.282 L1392.47 682.282 L1391.91 682.282 L1391.35 682.282 L1390.79 682.282 L1390.23 682.282 L1389.67 682.282 L1389.11 682.282 L1388.55 682.282 L1387.99 682.282 L1387.43 682.282 L1386.87 682.282 L1386.31 682.282 L1385.76 682.282 L1385.2 682.282 L1384.64 682.282 L1384.08 682.282 L1383.52 682.282 L1382.96 682.282 L1382.4 682.282 L1381.84 682.282 L1381.28 682.282 L1380.72 682.282 L1380.16 682.282 L1379.6 682.282 L1379.04 682.282 L1378.49 682.282 L1377.93 682.282 L1377.37 682.282 L1376.81 682.282 L1376.25 682.282 L1375.69 682.282 L1375.13 682.282 L1374.57 682.282 L1374.01 682.282 L1373.45 682.282 L1372.89 682.282 L1372.33 682.282 L1371.77 682.282 L1371.21 682.282 L1370.66 682.282 L1370.1 682.282 L1369.54 682.282 L1368.98 682.282 L1368.42 682.282 L1367.86 682.282 L1367.3 682.282 L1366.74 682.282 L1366.18 682.282 L1365.62 682.282 L1365.06 682.282 L1364.5 682.282 L1363.94 682.282 L1363.39 682.282 L1362.83 682.282 L1362.27 682.282 L1361.71 682.282 L1361.15 682.282 L1360.59 682.282 L1360.03 682.282 L1359.47 682.282 L1358.91 682.282 L1358.35 682.282 L1357.79 682.282 L1357.23 682.282 L1356.67 682.282 L1356.12 682.282 L1355.56 682.282 L1355 682.282 L1354.44 682.282 L1353.88 682.282 L1353.32 682.282 L1352.76 682.282 L1352.2 682.282 L1351.64 682.282 L1351.08 682.282 L1350.52 682.282 L1349.96 682.282 L1349.4 682.282 L1348.84 682.282 L1348.29 682.282 L1347.73 682.282 L1347.17 682.282 L1346.61 682.282 L1346.05 682.282 L1345.49 682.282 L1344.93 682.282 L1344.37 682.282 L1343.81 682.282 L1343.25 682.282 L1342.69 682.282 L1342.13 682.282 L1341.57 682.282 L1341.02 682.282 L1340.46 682.282 L1339.9 682.282 L1339.34 682.282 L1338.78 682.282 L1338.22 682.282 L1337.66 682.282 L1337.1 682.282 L1336.54 682.282 L1335.98 682.282 L1335.42 682.282 L1334.86 682.282 L1334.3 682.282 L1333.75 682.282 L1333.19 682.282 L1332.63 682.282 L1332.07 682.282 L1331.51 682.282 L1330.95 682.282 L1330.39 682.282 L1329.83 682.282 L1329.27 682.282 L1328.71 682.282 L1328.15 682.282 L1327.59 682.282 L1327.03 682.282 L1326.47 682.282 L1325.92 682.282 L1325.36 682.282 L1324.8 682.282 L1324.24 682.282 L1323.68 682.282 L1323.12 682.282 L1322.56 682.282 L1322 682.282 L1321.44 682.282 L1320.88 682.282 L1320.32 682.282 L1319.76 682.282 L1319.2 682.282 L1318.65 682.282 L1318.09 682.282 L1317.53 682.282 L1316.97 682.282 L1316.41 682.282 L1315.85 682.282 L1315.29 682.282 L1314.73 682.282 L1314.17 682.282 L1313.61 682.282 L1313.05 682.282 L1312.49 682.282 L1311.93 682.282 L1311.38 682.282 L1310.82 682.282 L1310.26 682.282 L1309.7 682.282 L1309.14 682.282 L1308.58 682.282 L1308.02 682.282 L1307.46 682.282 L1306.9 682.282 L1306.34 682.282 L1305.78 682.282 L1305.22 682.282 L1304.66 682.282 L1304.1 682.282 L1303.55 682.282 L1302.99 682.282 L1302.43 682.282 L1301.87 682.282 L1301.31 682.282 L1300.75 682.282 L1300.19 682.282 L1299.63 682.282 L1299.07 682.282 L1298.51 682.282 L1297.95 682.282 L1297.39 682.282 L1296.83 682.282 L1296.28 682.282 L1295.72 682.282 L1295.16 682.282 L1294.6 682.282 L1294.04 682.282 L1293.48 682.282 L1292.92 682.282 L1292.36 682.282 L1291.8 682.282 L1291.24 682.282 L1290.68 682.282 L1290.12 682.282 L1289.56 682.282 L1289 682.282 L1288.45 682.282 L1287.89 682.282 L1287.33 682.282 L1286.77 682.282 L1286.21 682.282 L1285.65 682.282 L1285.09 682.282 L1284.53 682.282 L1283.97 682.282 L1283.41 682.282 L1282.85 682.282 L1282.29 682.282 L1281.73 682.282 L1281.18 682.282 L1280.62 682.282 L1280.06 682.282 L1279.5 682.282 L1278.94 682.282 L1278.38 682.282 L1277.82 682.282 L1277.26 682.282 L1276.7 682.282 L1276.14 682.282 L1275.58 682.282 L1275.02 682.282 L1274.46 682.282 L1273.91 682.282 L1273.35 682.282 L1272.79 682.282 L1272.23 682.282 L1271.67 682.282 L1271.11 682.282 L1270.55 682.282 L1269.99 682.282 L1269.43 682.282 L1268.87 682.282 L1268.31 682.282 L1267.75 682.282 L1267.19 682.282 L1266.63 682.282 L1266.08 682.282 L1265.52 682.282 L1264.96 682.282 L1264.4 682.282 L1263.84 682.282 L1263.28 682.282 L1262.72 682.282 L1262.16 682.282 L1261.6 682.282 L1261.04 682.282 L1260.48 682.282 L1259.92 682.282 L1259.36 682.282 L1258.81 682.282 L1258.25 682.282 L1257.69 682.282 L1257.13 682.282 L1256.57 682.282 L1256.01 682.282 L1255.45 682.282 L1254.89 682.282 L1254.33 682.282 L1253.77 682.282 L1253.21 682.282 L1252.65 682.282 L1252.09 682.282 L1251.54 682.282 L1250.98 682.282 L1250.42 682.282 L1249.86 682.282 L1249.3 682.282 L1248.74 682.282 L1248.18 682.282 L1247.62 682.282 L1247.06 682.282 L1246.5 682.282 L1245.94 682.282 L1245.38 682.282 L1244.82 682.282 L1244.26 682.282 L1243.71 682.282 L1243.15 682.282 L1242.59 682.282 L1242.03 682.282 L1241.47 682.282 L1240.91 682.282 L1240.35 682.282 L1239.79 682.282 L1239.23 682.282 L1238.67 682.282 L1238.11 682.282 L1237.55 682.282 L1236.99 682.282 L1236.44 682.282 L1235.88 682.282 L1235.32 682.282 L1234.76 682.282 L1234.2 682.282 L1233.64 682.282 L1233.08 682.282 L1232.52 682.282 L1231.96 682.282 L1231.4 682.282 L1230.84 682.282 L1230.28 682.282 L1229.72 682.282 L1229.17 682.282 L1228.61 682.282 L1228.05 682.282 L1227.49 682.282 L1226.93 682.282 L1226.37 682.282 L1225.81 682.282 L1225.25 682.282 L1224.69 682.282 L1224.13 682.282 L1223.57 682.282 L1223.01 682.282 L1222.45 682.282 L1221.89 682.282 L1221.34 682.282 L1220.78 682.282 L1220.22 682.282 L1219.66 682.282 L1219.1 682.282 L1218.54 682.282 L1217.98 682.282 L1217.42 682.282 L1216.86 682.282 L1216.3 682.282 L1215.74 682.282 L1215.18 682.282 L1214.62 682.282 L1214.07 682.282 L1213.51 682.282 L1212.95 682.282 L1212.39 682.282 L1211.83 682.282 L1211.27 682.282 L1210.71 682.282 L1210.15 682.282 L1209.59 682.282 L1209.03 682.282 L1208.47 682.282 L1207.91 682.282 L1207.35 682.282 L1206.8 682.282 L1206.24 682.282 L1205.68 682.282 L1205.12 682.282 L1204.56 682.282 L1204 682.282 L1203.44 682.282 L1202.88 682.282 L1202.32 682.282 L1201.76 682.282 L1201.2 682.282 L1200.64 682.282 L1200.08 682.282 L1199.52 682.282 L1198.97 682.282 L1198.41 682.282 L1197.85 682.282 L1197.29 682.282 L1196.73 682.282 L1196.17 682.282 L1195.61 682.282 L1195.05 682.282 L1194.49 682.282 L1193.93 682.282 L1193.37 682.282 L1192.81 682.282 L1192.25 682.282 L1191.7 682.282 L1191.14 682.282 L1190.58 682.282 L1190.02 682.282 L1189.46 682.282 L1188.9 682.282 L1188.34 682.282 L1187.78 682.282 L1187.22 682.282 L1186.66 682.282 L1186.1 682.282 L1185.54 682.282 L1184.98 682.282 L1184.43 682.282 L1183.87 682.282 L1183.31 682.282 L1182.75 682.282 L1182.19 682.282 L1181.63 682.282 L1181.07 682.282 L1180.51 682.282 L1179.95 682.282 L1179.39 682.282 L1178.83 682.282 L1178.27 682.282 L1177.71 682.282 L1177.15 682.282 L1176.6 682.282 L1176.04 682.282 L1175.48 682.282 L1174.92 682.282 L1174.36 682.282 L1173.8 682.282 L1173.24 682.282 L1172.68 682.282 L1172.12 682.282 L1171.56 682.282 L1171 682.282 L1170.44 682.282 L1169.88 682.282 L1169.33 682.282 L1168.77 682.282 L1168.21 682.282 L1167.65 682.282 L1167.09 682.282 L1166.53 682.282 L1165.97 682.282 L1165.41 682.282 L1164.85 682.282 L1164.29 682.282 L1163.73 682.282 L1163.17 682.282 L1162.61 682.282 L1162.05 682.282 L1161.5 682.282 L1160.94 682.282 L1160.38 682.282 L1159.82 682.282 L1159.26 682.282 L1158.7 682.282 L1158.14 682.282 L1157.58 682.282 L1157.02 682.282 L1156.46 682.282 L1155.9 682.282 L1155.34 682.282 L1154.78 682.282 L1154.23 682.282 L1153.67 682.282 L1153.11 682.282 L1152.55 682.282 L1151.99 682.282 L1151.43 682.282 L1150.87 682.282 L1150.31 682.282 L1149.75 682.282 L1149.19 682.282 L1148.63 682.282 L1148.07 682.282 L1147.51 682.282 L1146.96 682.282 L1146.4 682.282 L1145.84 682.282 L1145.28 682.282 L1144.72 682.282 L1144.16 682.282 L1143.6 682.282 L1143.04 682.282 L1142.48 682.282 L1141.92 682.282 L1141.36 682.282 L1140.8 682.282 L1140.24 682.282 L1139.68 682.282 L1139.13 682.282 L1138.57 682.282 L1138.01 682.282 L1137.45 682.282 L1136.89 682.282 L1136.33 682.282 L1135.77 682.282 L1135.21 682.282 L1134.65 682.282 L1134.09 682.282 L1133.53 682.282 L1132.97 682.282 L1132.41 682.282 L1131.86 682.282 L1131.3 682.282 L1130.74 682.282 L1130.18 682.282 L1129.62 682.282 L1129.06 682.282 L1128.5 682.282 L1127.94 682.282 L1127.38 682.282 L1126.82 682.282 L1126.26 682.282 L1125.7 682.282 L1125.14 682.282 L1124.59 682.282 L1124.03 682.282 L1123.47 682.282 L1122.91 682.282 L1122.35 682.282 L1121.79 682.282 L1121.23 682.282 L1120.67 682.282 L1120.11 682.282 L1119.55 682.282 L1118.99 682.282 L1118.43 682.282 L1117.87 682.282 L1117.31 682.282 L1116.76 682.282 L1116.2 682.282 L1115.64 682.282 L1115.08 682.282 L1114.52 682.282 L1113.96 682.282 L1113.4 682.282 L1112.84 682.282 L1112.28 682.282 L1111.72 682.282 L1111.16 682.282 L1110.6 682.282 L1110.04 682.282 L1109.49 682.282 L1108.93 682.282 L1108.37 682.282 L1107.81 682.282 L1107.25 682.282 L1106.69 682.282 L1106.13 682.282 L1105.57 682.282 L1105.01 682.282 L1104.45 682.282 L1103.89 682.282 L1103.33 682.282 L1102.77 682.282 L1102.22 682.282 L1101.66 682.282 L1101.1 682.282 L1100.54 682.282 L1099.98 682.282 L1099.42 682.282 L1098.86 682.282 L1098.3 682.282 L1097.74 682.282 L1097.18 682.282 L1096.62 682.282 L1096.06 682.282 L1095.5 682.282 L1094.94 682.282 L1094.39 682.282 L1093.83 682.282 L1093.27 682.282 L1092.71 682.282 L1092.15 682.282 L1091.59 682.282 L1091.03 682.282 L1090.47 682.282 L1089.91 682.282 L1089.35 682.282 L1088.79 682.282 L1088.23 682.282 L1087.67 682.282 L1087.12 682.282 L1086.56 682.282 L1086 682.282 L1085.44 682.282 L1084.88 682.282 L1084.32 682.282 L1083.76 682.282 L1083.2 682.282 L1082.64 682.282 L1082.08 682.282 L1081.52 682.282 L1080.96 682.282 L1080.4 682.282 L1079.85 682.282 L1079.29 682.282 L1078.73 682.282 L1078.17 682.282 L1077.61 682.282 L1077.05 682.282 L1076.49 682.282 L1075.93 682.282 L1075.37 682.282 L1074.81 682.282 L1074.25 682.282 L1073.69 682.282 L1073.13 682.282 L1072.57 682.282 L1072.02 682.282 L1071.46 682.282 L1070.9 682.282 L1070.34 682.282 L1069.78 682.282 L1069.22 682.282 L1068.66 682.282 L1068.1 682.282 L1067.54 682.282 L1066.98 682.282 L1066.42 682.282 L1065.86 682.282 L1065.3 682.282 L1064.75 682.282 L1064.19 682.282 L1063.63 682.282 L1063.07 682.282 L1062.51 682.282 L1061.95 682.282 L1061.39 682.282 L1060.83 682.282 L1060.27 682.282 L1059.71 682.282 L1059.15 682.282 L1058.59 682.282 L1058.03 682.282 L1057.48 682.282 L1056.92 682.282 L1056.36 682.282 L1055.8 682.282 L1055.24 682.282 L1054.68 682.282 L1054.12 682.282 L1053.56 682.282 L1053 682.282 L1052.44 682.282 L1051.88 682.282 L1051.32 682.282 L1050.76 682.282 L1050.2 682.282 L1049.65 682.282 L1049.09 682.282 L1048.53 682.282 L1047.97 682.282 L1047.41 682.282 L1046.85 682.282 L1046.29 682.282 L1045.73 682.282 L1045.17 682.282 L1044.61 682.282 L1044.05 682.282 L1043.49 682.282 L1042.93 682.282 L1042.38 682.282 L1041.82 682.282 L1041.26 682.282 L1040.7 682.282 L1040.14 682.282 L1039.58 682.282 L1039.02 682.282 L1038.46 682.282 L1037.9 682.282 L1037.34 682.282 L1036.78 682.282 L1036.22 682.282 L1035.66 682.282 L1035.1 682.282 L1034.55 682.282 L1033.99 682.282 L1033.43 682.282 L1032.87 682.282 L1032.31 682.282 L1031.75 682.282 L1031.19 682.282 L1030.63 682.282 L1030.07 682.282 L1029.51 682.282 L1028.95 682.282 L1028.39 682.282 L1027.83 682.282 L1027.28 682.282 L1026.72 682.282 L1026.16 682.282 L1025.6 682.282 L1025.04 682.282 L1024.48 682.282 L1023.92 682.282 L1023.36 682.282 L1022.8 682.282 L1022.24 682.282 L1021.68 682.282 L1021.12 682.282 L1020.56 682.282 L1020.01 682.282 L1019.45 682.282 L1018.89 682.282 L1018.33 682.282 L1017.77 682.282 L1017.21 682.282 L1016.65 682.282 L1016.09 682.282 L1015.53 682.282 L1014.97 682.282 L1014.41 682.282 L1013.85 682.282 L1013.29 682.282 L1012.73 682.282 L1012.18 682.282 L1011.62 682.282 L1011.06 682.282 L1010.5 682.282 L1009.94 682.282 L1009.38 682.282 L1008.82 682.282 L1008.26 682.282 L1007.7 682.282 L1007.14 682.282 L1006.58 682.282 L1006.02 682.282 L1005.46 682.282 L1004.91 682.282 L1004.35 682.282 L1003.79 682.282 L1003.23 682.282 L1002.67 682.282 L1002.11 682.282 L1001.55 682.282 L1000.99 682.282 L1000.43 682.282 L999.872 682.282 L999.313 682.282 L998.754 682.282 L998.194 682.282 L997.635 682.282 L997.076 682.282 L996.517 682.282 L995.957 682.282 L995.398 682.282 L994.839 682.282 L994.28 682.282 L993.72 682.282 L993.161 682.282 L992.602 682.282 L992.043 682.282 L991.483 682.282 L990.924 682.282 L990.365 682.282 L989.806 682.282 L989.246 682.282 L988.687 682.282 L988.128 682.282 L987.569 682.282 L987.009 682.282 L986.45 682.282 L985.891 682.282 L985.332 682.282 L984.772 682.282 L984.213 682.282 L983.654 682.282 L983.095 682.282 L982.535 682.282 L981.976 682.282 L981.417 682.282 L980.858 682.282 L980.298 682.282 L979.739 682.282 L979.18 682.282 L978.621 682.282 L978.061 682.282 L977.502 682.282 L976.943 682.282 L976.384 682.282 L975.824 682.282 L975.265 682.282 L974.706 682.282 L974.147 682.282 L973.587 682.282 L973.028 682.282 L972.469 682.282 L971.91 682.282 L971.35 682.282 L970.791 682.282 L970.232 682.282 L969.673 682.282 L969.113 682.282 L968.554 682.282 L967.995 682.282 L967.436 682.282 L966.876 682.282 L966.317 682.282 L965.758 682.282 L965.199 682.282 L964.639 682.282 L964.08 682.282 L963.521 682.282 L962.962 682.282 L962.402 682.282 L961.843 682.282 L961.284 682.282 L960.725 682.282 L960.165 682.282 L959.606 682.282 L959.047 682.282 L958.488 682.282 L957.928 682.282 L957.369 682.282 L956.81 682.282 L956.251 682.282 L955.691 682.282 L955.132 682.282 L954.573 682.282 L954.014 682.282 L953.454 682.282 L952.895 682.282 L952.336 682.282 L951.777 682.282 L951.217 682.282 L950.658 682.282 L950.099 682.282 L949.54 682.282 L948.98 682.282 L948.421 682.282 L947.862 682.282 L947.303 682.282 L946.743 682.282 L946.184 682.282 L945.625 682.282 L945.066 682.282 L944.506 682.282 L943.947 682.282 L943.388 682.282 L942.829 682.282 L942.269 682.282 L941.71 682.282 L941.151 682.282 L940.592 682.282 L940.032 682.282 L939.473 682.282 L938.914 682.282 L938.355 682.282 L937.795 682.282 L937.236 682.282 L936.677 682.282 L936.118 682.282 L935.558 682.282 L934.999 682.282 L934.44 682.282 L933.881 682.282 L933.321 682.282 L932.762 682.282 L932.203 682.282 L931.644 682.282 L931.084 682.282 L930.525 682.282 L929.966 682.282 L929.406 682.282 L928.847 682.282 L928.288 682.282 L927.729 682.282 L927.169 682.282 L926.61 682.282 L926.051 682.282 L925.492 682.282 L924.932 682.282 L924.373 682.282 L923.814 682.282 L923.255 682.282 L922.695 682.282 L922.136 682.282 L921.577 682.282 L921.018 682.282 L920.458 682.282 L919.899 682.282 L919.34 682.282 L918.781 682.282 L918.221 682.282 L917.662 682.282 L917.103 682.282 L916.544 682.282 L915.984 682.282 L915.425 682.282 L914.866 682.282 L914.307 682.282 L913.747 682.282 L913.188 682.282 L912.629 682.282 L912.07 682.282 L911.51 682.282 L910.951 682.282 L910.392 682.282 L909.833 682.282 L909.273 682.282 L908.714 682.282 L908.155 682.282 L907.596 682.282 L907.036 682.282 L906.477 682.282 L905.918 682.282 L905.359 682.282 L904.799 682.282 L904.24 682.282 L903.681 682.282 L903.122 682.282 L902.562 682.282 L902.003 682.282 L901.444 682.282 L900.885 682.282 L900.325 682.282 L899.766 682.282 L899.207 682.282 L898.648 682.282 L898.088 682.282 L897.529 682.282 L896.97 682.282 L896.411 682.282 L895.851 682.282 L895.292 682.282 L894.733 682.282 L894.174 682.282 L893.614 682.282 L893.055 682.282 L892.496 682.282 L891.937 682.282 L891.377 682.282 L890.818 682.282 L890.259 682.282 L889.7 682.282 L889.14 682.282 L888.581 682.282 L888.022 682.282 L887.463 682.282 L886.903 682.282 L886.344 682.282 L885.785 682.282 L885.226 682.282 L884.666 682.282 L884.107 682.282 L883.548 682.282 L882.989 682.282 L882.429 682.282 L881.87 682.282 L881.311 682.282 L880.752 682.282 L880.192 682.282 L879.633 682.282 L879.074 682.282 L878.515 682.282 L877.955 682.282 L877.396 682.282 L876.837 682.282 L876.278 682.282 L875.718 682.282 L875.159 682.282 L874.6 682.282 L874.041 682.282 L873.481 682.282 L872.922 682.282 L872.363 682.282 L871.804 682.282 L871.244 682.282 L870.685 682.282 L870.126 682.282 L869.567 682.282 L869.007 682.282 L868.448 682.282 L867.889 682.282 L867.33 682.282 L866.77 682.282 L866.211 682.282 L865.652 682.282 L865.093 682.282 L864.533 682.282 L863.974 682.282 L863.415 682.282 L862.856 682.282 L862.296 682.282 L861.737 682.282 L861.178 682.282 L860.619 682.282 L860.059 682.282 L859.5 682.282 L858.941 682.282 L858.382 682.282 L857.822 682.282 L857.263 682.282 L856.704 682.282 L856.145 682.282 L855.585 682.282 L855.026 682.282 L854.467 682.282 L853.908 682.282 L853.348 682.282 L852.789 682.282 L852.23 682.282 L851.671 682.282 L851.111 682.282 L850.552 682.282 L849.993 682.282 L849.434 682.282 L848.874 682.282 L848.315 682.282 L847.756 682.282 L847.197 682.282 L846.637 682.282 L846.078 682.282 L845.519 682.282 L844.96 682.282 L844.4 682.282 L843.841 682.282 L843.282 682.282 L842.723 682.282 L842.163 682.282 L841.604 682.282 L841.045 682.282 L840.486 682.282 L839.926 682.282 L839.367 682.282 L838.808 682.282 L838.249 682.282 L837.689 682.282 L837.13 682.282 L836.571 682.282 L836.012 682.282 L835.452 682.282 L834.893 682.282 L834.334 682.282 L833.775 682.282 L833.215 682.282 L832.656 682.282 L832.097 682.282 L831.538 682.282 L830.978 682.282 L830.419 682.282 L829.86 682.282 L829.301 682.282 L828.741 682.282 L828.182 682.282 L827.623 682.282 L827.064 682.282 L826.504 682.282 L825.945 682.282 L825.386 682.282 L824.827 682.282 L824.267 682.282 L823.708 682.282 L823.149 682.282 L822.59 682.282 L822.03 682.282 L821.471 682.282 L820.912 682.282 L820.353 682.282 L819.793 682.282 L819.234 682.282 L818.675 682.282 L818.116 682.282 L817.556 682.282 L816.997 682.282 L816.438 682.282 L815.879 682.282 L815.319 682.282 L814.76 682.282 L814.201 682.282 L813.642 682.282 L813.082 682.282 L812.523 682.282 L811.964 682.282 L811.405 682.282 L810.845 682.282 L810.286 682.282 L809.727 682.282 L809.168 682.282 L808.608 682.282 L808.049 682.282 L807.49 682.282 L806.931 682.282 L806.371 682.282 L805.812 682.282 L805.253 682.282 L804.693 682.282 L804.134 682.282 L803.575 682.282 L803.016 682.282 L802.456 682.282 L801.897 682.282 L801.338 682.282 L800.779 682.282 L800.219 682.282 L799.66 682.282 L799.101 682.282 L798.542 682.282 L797.982 682.282 L797.423 682.282 L796.864 682.282 L796.305 682.282 L795.745 682.282 L795.186 682.282 L794.627 682.282 L794.068 682.282 L793.508 682.282 L792.949 682.282 L792.39 682.282 L791.831 682.282 L791.271 682.282 L790.712 682.282 L790.153 682.282 L789.594 682.282 L789.034 682.282 L788.475 682.282 L787.916 682.282 L787.357 682.282 L786.797 682.282 L786.238 682.282 L785.679 682.282 L785.12 682.282 L784.56 682.282 L784.001 682.282 L783.442 682.282 L782.883 682.282 L782.323 682.282 L781.764 682.282 L781.205 682.282 L780.646 682.282 L780.086 682.282 L779.527 682.282 L778.968 682.282 L778.409 682.282 L777.849 682.282 L777.29 682.282 L776.731 682.282 L776.172 682.282 L775.612 682.282 L775.053 682.282 L774.494 682.282 L773.935 682.282 L773.375 682.282 L772.816 682.282 L772.257 682.282 L771.698 682.282 L771.138 682.282 L770.579 682.282 L770.02 682.282 L769.461 682.282 L768.901 682.282 L768.342 682.282 L767.783 682.282 L767.224 682.282 L766.664 682.282 L766.105 682.282 L765.546 682.282 L764.987 682.282 L764.427 682.282 L763.868 682.282 L763.309 682.282 L762.75 682.282 L762.19 682.282 L761.631 682.282 L761.072 682.282 L760.513 682.282 L759.953 682.282 L759.394 682.282 L758.835 682.282 L758.276 682.282 L757.716 682.282 L757.157 682.282 L756.598 682.282 L756.039 682.282 L755.479 682.282 L754.92 682.282 L754.361 682.282 L753.802 682.282 L753.242 682.282 L752.683 682.282 L752.124 682.282 L751.565 682.282 L751.005 682.282 L750.446 682.282 L749.887 682.282 L749.328 682.282 L748.768 682.282 L748.209 682.282 L747.65 682.282 L747.091 682.282 L746.531 682.282 L745.972 682.282 L745.413 682.282 L744.854 682.282 L744.294 682.282 L743.735 682.282 L743.176 682.282 L742.617 682.282 L742.057 682.282 L741.498 682.282 L740.939 682.282 L740.38 682.282 L739.82 682.282 L739.261 682.282 L738.702 682.282 L738.143 682.282 L737.583 682.282 L737.024 682.282 L736.465 682.282 L735.906 682.282 L735.346 682.282 L734.787 682.282 L734.228 682.282 L733.669 682.282 L733.109 682.282 L732.55 682.282 L731.991 682.282 L731.432 682.282 L730.872 682.282 L730.313 682.282 L729.754 682.282 L729.195 682.282 L728.635 682.282 L728.076 682.282 L727.517 682.282 L726.958 682.282 L726.398 682.282 L725.839 682.282 L725.28 682.282 L724.721 682.282 L724.161 682.282 L723.602 682.282 L723.043 682.282 L722.484 682.282 L721.924 682.282 L721.365 682.282 L720.806 682.282 L720.247 682.282  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip533)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,683.212 720.806,683.212 721.365,683.212 721.924,683.212 722.484,683.212 723.043,683.212 723.602,683.212 724.161,683.212 724.721,683.212 725.28,683.212 725.839,683.212 726.398,683.212 726.958,683.212 727.517,683.212 728.076,683.212 728.635,683.212 729.195,683.212 729.754,683.212 730.313,683.212 730.872,683.212 731.432,683.212 731.991,683.212 732.55,683.212 733.109,683.212 733.669,683.212 734.228,683.212 734.787,683.212 735.346,683.212 735.906,683.212 736.465,683.212 737.024,683.212 737.583,683.212 738.143,683.212 738.702,683.212 739.261,683.212 739.82,683.212 740.38,683.212 740.939,683.212 741.498,683.212 742.057,683.212 742.617,683.212 743.176,683.212 743.735,683.212 744.294,683.212 744.854,683.212 745.413,683.212 745.972,683.212 746.531,683.212 747.091,683.212 747.65,683.212 748.209,683.212 748.768,683.212 749.328,683.212 749.887,683.212 750.446,683.212 751.005,683.212 751.565,683.212 752.124,683.212 752.683,683.212 753.242,683.212 753.802,683.212 754.361,683.212 754.92,683.212 755.479,683.212 756.039,683.212 756.598,683.212 757.157,683.212 757.716,683.212 758.276,683.212 758.835,683.212 759.394,683.212 759.953,683.212 760.513,683.212 761.072,683.212 761.631,683.212 762.19,683.212 762.75,683.212 763.309,683.212 763.868,683.212 764.427,683.212 764.987,683.212 765.546,683.212 766.105,683.212 766.664,683.212 767.224,683.212 767.783,683.212 768.342,683.212 768.901,683.212 769.461,683.212 770.02,683.212 770.579,683.212 771.138,683.212 771.698,683.212 772.257,683.212 772.816,683.212 773.375,683.212 773.935,683.212 774.494,683.212 775.053,683.212 775.612,683.212 776.172,683.212 776.731,683.212 777.29,683.212 777.849,683.212 778.409,683.212 778.968,683.212 779.527,683.212 780.086,683.212 780.646,683.212 781.205,683.212 781.764,683.212 782.323,683.212 782.883,683.212 783.442,683.212 784.001,683.212 784.56,683.212 785.12,683.212 785.679,683.212 786.238,683.212 786.797,683.212 787.357,683.212 787.916,683.212 788.475,683.212 789.034,683.212 789.594,683.212 790.153,683.212 790.712,683.212 791.271,683.212 791.831,683.212 792.39,683.212 792.949,683.212 793.508,683.212 794.068,683.212 794.627,683.212 795.186,683.212 795.745,683.212 796.305,683.212 796.864,683.212 797.423,683.212 797.982,683.212 798.542,683.212 799.101,683.212 799.66,683.212 800.219,683.212 800.779,683.212 801.338,683.212 801.897,683.212 802.456,683.212 803.016,683.212 803.575,683.212 804.134,683.212 804.693,683.212 805.253,683.212 805.812,683.212 806.371,683.212 806.931,683.212 807.49,683.212 808.049,683.212 808.608,683.212 809.168,683.212 809.727,683.212 810.286,683.212 810.845,683.212 811.405,683.212 811.964,683.212 812.523,683.212 813.082,683.212 813.642,683.212 814.201,683.212 814.76,683.212 815.319,683.212 815.879,683.212 816.438,683.212 816.997,683.212 817.556,683.212 818.116,683.212 818.675,683.212 819.234,683.212 819.793,683.212 820.353,683.212 820.912,683.212 821.471,683.212 822.03,683.212 822.59,683.212 823.149,683.212 823.708,683.212 824.267,683.212 824.827,683.212 825.386,683.212 825.945,683.212 826.504,683.212 827.064,683.212 827.623,683.212 828.182,683.212 828.741,683.212 829.301,683.212 829.86,683.212 830.419,683.212 830.978,683.212 831.538,683.212 832.097,683.212 832.656,683.212 833.215,683.212 833.775,683.212 834.334,683.212 834.893,683.212 835.452,683.212 836.012,683.212 836.571,683.212 837.13,683.212 837.689,683.212 838.249,683.212 838.808,683.212 839.367,683.212 839.926,683.212 840.486,683.212 841.045,683.212 841.604,683.212 842.163,683.212 842.723,683.212 843.282,683.212 843.841,683.212 844.4,683.212 844.96,683.212 845.519,683.212 846.078,683.212 846.637,683.212 847.197,683.212 847.756,683.212 848.315,683.212 848.874,683.212 849.434,683.212 849.993,683.212 850.552,683.212 851.111,683.212 851.671,683.212 852.23,683.212 852.789,683.212 853.348,683.212 853.908,683.212 854.467,683.212 855.026,683.212 855.585,683.212 856.145,683.212 856.704,683.212 857.263,683.212 857.822,683.212 858.382,683.212 858.941,683.212 859.5,683.212 860.059,683.212 860.619,683.212 861.178,683.212 861.737,683.212 862.296,683.212 862.856,683.212 863.415,683.212 863.974,683.212 864.533,683.212 865.093,683.212 865.652,683.212 866.211,683.212 866.77,683.212 867.33,683.212 867.889,683.212 868.448,683.212 869.007,683.212 869.567,683.212 870.126,683.212 870.685,683.212 871.244,683.212 871.804,683.212 872.363,683.212 872.922,683.212 873.481,683.212 874.041,683.212 874.6,683.212 875.159,683.212 875.718,683.212 876.278,683.212 876.837,683.212 877.396,683.212 877.955,683.212 878.515,683.212 879.074,683.212 879.633,683.212 880.192,683.212 880.752,683.212 881.311,683.212 881.87,683.212 882.429,683.212 882.989,683.212 883.548,683.212 884.107,683.212 884.666,683.212 885.226,683.212 885.785,683.212 886.344,683.212 886.903,683.212 887.463,683.212 888.022,683.212 888.581,683.212 889.14,683.212 889.7,683.212 890.259,683.212 890.818,683.212 891.377,683.212 891.937,683.212 892.496,683.212 893.055,683.212 893.614,683.212 894.174,683.212 894.733,683.212 895.292,683.212 895.851,683.212 896.411,683.212 896.97,683.212 897.529,683.212 898.088,683.212 898.648,683.212 899.207,683.212 899.766,683.212 900.325,683.212 900.885,683.212 901.444,683.212 902.003,683.212 902.562,683.212 903.122,683.212 903.681,683.212 904.24,683.212 904.799,683.212 905.359,683.212 905.918,683.212 906.477,683.212 907.036,683.212 907.596,683.212 908.155,683.212 908.714,683.212 909.273,683.212 909.833,683.212 910.392,683.212 910.951,683.212 911.51,683.212 912.07,683.212 912.629,683.212 913.188,683.212 913.747,683.212 914.307,683.212 914.866,683.212 915.425,683.212 915.984,683.212 916.544,683.212 917.103,683.212 917.662,683.212 918.221,683.212 918.781,683.212 919.34,683.212 919.899,683.212 920.458,683.212 921.018,683.212 921.577,683.212 922.136,683.212 922.695,683.212 923.255,683.212 923.814,683.212 924.373,683.212 924.932,683.212 925.492,683.212 926.051,683.212 926.61,683.212 927.169,683.212 927.729,683.212 928.288,683.212 928.847,683.212 929.406,683.212 929.966,683.212 930.525,683.212 931.084,683.212 931.644,683.212 932.203,683.212 932.762,683.212 933.321,683.212 933.881,683.212 934.44,683.212 934.999,683.212 935.558,683.212 936.118,683.212 936.677,683.212 937.236,683.212 937.795,683.212 938.355,683.212 938.914,683.212 939.473,683.212 940.032,683.212 940.592,683.212 941.151,683.212 941.71,683.212 942.269,683.212 942.829,683.212 943.388,683.212 943.947,683.212 944.506,683.212 945.066,683.212 945.625,683.212 946.184,683.212 946.743,683.212 947.303,683.212 947.862,683.212 948.421,683.212 948.98,683.212 949.54,683.212 950.099,683.212 950.658,683.212 951.217,683.212 951.777,683.212 952.336,683.212 952.895,683.212 953.454,683.212 954.014,683.212 954.573,683.212 955.132,683.212 955.691,683.212 956.251,683.212 956.81,683.212 957.369,683.212 957.928,683.212 958.488,683.212 959.047,683.212 959.606,683.212 960.165,683.212 960.725,683.212 961.284,683.212 961.843,683.212 962.402,683.212 962.962,683.212 963.521,683.212 964.08,683.212 964.639,683.212 965.199,683.212 965.758,683.212 966.317,683.212 966.876,683.212 967.436,683.212 967.995,683.212 968.554,683.212 969.113,683.212 969.673,683.212 970.232,683.212 970.791,683.212 971.35,683.212 971.91,683.212 972.469,683.212 973.028,683.212 973.587,683.212 974.147,683.212 974.706,683.212 975.265,683.212 975.824,683.212 976.384,683.212 976.943,683.212 977.502,683.212 978.061,683.212 978.621,683.212 979.18,683.212 979.739,683.212 980.298,683.212 980.858,683.212 981.417,683.212 981.976,683.212 982.535,683.212 983.095,683.212 983.654,683.212 984.213,683.212 984.772,683.212 985.332,683.212 985.891,683.212 986.45,683.212 987.009,683.212 987.569,683.212 988.128,683.212 988.687,683.212 989.246,683.212 989.806,683.212 990.365,683.212 990.924,683.212 991.483,683.212 992.043,683.212 992.602,683.212 993.161,683.212 993.72,683.212 994.28,683.212 994.839,683.212 995.398,683.212 995.957,683.212 996.517,683.212 997.076,683.212 997.635,683.212 998.194,683.212 998.754,683.212 999.313,683.212 999.872,683.212 1000.43,683.212 1000.99,683.212 1001.55,683.212 1002.11,683.212 1002.67,683.212 1003.23,683.212 1003.79,683.212 1004.35,683.212 1004.91,683.212 1005.46,683.212 1006.02,683.212 1006.58,683.212 1007.14,683.212 1007.7,683.212 1008.26,683.212 1008.82,683.212 1009.38,683.212 1009.94,683.212 1010.5,683.212 1011.06,683.212 1011.62,683.212 1012.18,683.212 1012.73,683.212 1013.29,683.212 1013.85,683.212 1014.41,683.212 1014.97,683.212 1015.53,683.212 1016.09,683.212 1016.65,683.212 1017.21,683.212 1017.77,683.212 1018.33,683.212 1018.89,683.212 1019.45,683.212 1020.01,683.212 1020.56,683.212 1021.12,683.212 1021.68,683.212 1022.24,683.212 1022.8,683.212 1023.36,683.212 1023.92,683.212 1024.48,683.212 1025.04,683.212 1025.6,683.212 1026.16,683.212 1026.72,683.212 1027.28,683.212 1027.83,683.212 1028.39,683.212 1028.95,683.212 1029.51,683.212 1030.07,683.212 1030.63,683.212 1031.19,683.212 1031.75,683.212 1032.31,683.212 1032.87,683.212 1033.43,683.212 1033.99,683.212 1034.55,683.212 1035.1,683.212 1035.66,683.212 1036.22,683.212 1036.78,683.212 1037.34,683.212 1037.9,683.212 1038.46,683.212 1039.02,683.212 1039.58,683.212 1040.14,683.212 1040.7,683.212 1041.26,683.212 1041.82,683.212 1042.38,683.212 1042.93,683.212 1043.49,683.212 1044.05,683.212 1044.61,683.212 1045.17,683.212 1045.73,683.212 1046.29,683.212 1046.85,683.212 1047.41,683.212 1047.97,683.212 1048.53,683.212 1049.09,683.212 1049.65,683.212 1050.2,683.212 1050.76,683.212 1051.32,683.212 1051.88,683.212 1052.44,683.212 1053,683.212 1053.56,683.212 1054.12,683.212 1054.68,683.212 1055.24,683.212 1055.8,683.212 1056.36,683.212 1056.92,683.212 1057.48,683.212 1058.03,683.212 1058.59,683.212 1059.15,683.212 1059.71,683.212 1060.27,683.212 1060.83,683.212 1061.39,683.212 1061.95,683.212 1062.51,683.212 1063.07,683.212 1063.63,683.212 1064.19,683.212 1064.75,683.212 1065.3,683.212 1065.86,683.212 1066.42,683.212 1066.98,683.212 1067.54,683.212 1068.1,683.212 1068.66,683.212 1069.22,683.212 1069.78,683.212 1070.34,683.212 1070.9,683.212 1071.46,683.212 1072.02,683.212 1072.57,683.212 1073.13,683.212 1073.69,683.212 1074.25,683.212 1074.81,683.212 1075.37,683.212 1075.93,683.212 1076.49,683.212 1077.05,683.212 1077.61,683.212 1078.17,683.212 1078.73,683.212 1079.29,683.212 1079.85,683.212 1080.4,683.212 1080.96,683.212 1081.52,683.212 1082.08,683.212 1082.64,683.212 1083.2,683.212 1083.76,683.212 1084.32,683.212 1084.88,683.212 1085.44,683.212 1086,683.212 1086.56,683.212 1087.12,683.212 1087.67,683.212 1088.23,683.212 1088.79,683.212 1089.35,683.212 1089.91,683.212 1090.47,683.212 1091.03,683.212 1091.59,683.212 1092.15,683.212 1092.71,683.212 1093.27,683.212 1093.83,683.212 1094.39,683.212 1094.94,683.212 1095.5,683.212 1096.06,683.212 1096.62,683.212 1097.18,683.212 1097.74,683.212 1098.3,683.212 1098.86,683.212 1099.42,683.212 1099.98,683.212 1100.54,683.212 1101.1,683.212 1101.66,683.212 1102.22,683.212 1102.77,683.212 1103.33,683.212 1103.89,683.212 1104.45,683.212 1105.01,683.212 1105.57,683.212 1106.13,683.212 1106.69,683.212 1107.25,683.212 1107.81,683.212 1108.37,683.212 1108.93,683.212 1109.49,683.212 1110.04,683.212 1110.6,683.212 1111.16,683.212 1111.72,683.212 1112.28,683.212 1112.84,683.212 1113.4,683.212 1113.96,683.212 1114.52,683.212 1115.08,683.212 1115.64,683.212 1116.2,683.212 1116.76,683.212 1117.31,683.212 1117.87,683.212 1118.43,683.212 1118.99,683.212 1119.55,683.212 1120.11,683.212 1120.67,683.212 1121.23,683.212 1121.79,683.212 1122.35,683.212 1122.91,683.212 1123.47,683.212 1124.03,683.212 1124.59,683.212 1125.14,683.212 1125.7,683.212 1126.26,683.212 1126.82,683.212 1127.38,683.212 1127.94,683.212 1128.5,683.212 1129.06,683.212 1129.62,683.212 1130.18,683.212 1130.74,683.212 1131.3,683.212 1131.86,683.212 1132.41,683.212 1132.97,683.212 1133.53,683.212 1134.09,683.212 1134.65,683.212 1135.21,683.212 1135.77,683.212 1136.33,683.212 1136.89,683.212 1137.45,683.212 1138.01,683.212 1138.57,683.212 1139.13,683.212 1139.68,683.212 1140.24,683.212 1140.8,683.212 1141.36,683.212 1141.92,683.212 1142.48,683.212 1143.04,683.212 1143.6,683.212 1144.16,683.212 1144.72,683.212 1145.28,683.212 1145.84,683.212 1146.4,683.212 1146.96,683.212 1147.51,683.212 1148.07,683.212 1148.63,683.212 1149.19,683.212 1149.75,683.212 1150.31,683.212 1150.87,683.212 1151.43,683.212 1151.99,683.212 1152.55,683.212 1153.11,683.212 1153.67,683.212 1154.23,683.212 1154.78,683.212 1155.34,683.212 1155.9,683.212 1156.46,683.212 1157.02,683.212 1157.58,683.212 1158.14,683.212 1158.7,683.212 1159.26,683.212 1159.82,683.212 1160.38,683.212 1160.94,683.212 1161.5,683.212 1162.05,683.212 1162.61,683.212 1163.17,683.212 1163.73,683.212 1164.29,683.212 1164.85,683.212 1165.41,683.212 1165.97,683.212 1166.53,683.212 1167.09,683.212 1167.65,683.212 1168.21,683.212 1168.77,683.212 1169.33,683.212 1169.88,683.212 1170.44,683.212 1171,683.212 1171.56,683.212 1172.12,683.212 1172.68,683.212 1173.24,683.212 1173.8,683.212 1174.36,683.212 1174.92,683.212 1175.48,683.212 1176.04,683.212 1176.6,683.212 1177.15,683.212 1177.71,683.212 1178.27,683.212 1178.83,683.212 1179.39,683.212 1179.95,683.212 1180.51,683.212 1181.07,683.212 1181.63,683.212 1182.19,683.212 1182.75,683.212 1183.31,683.212 1183.87,683.212 1184.43,683.212 1184.98,683.212 1185.54,683.212 1186.1,683.212 1186.66,683.212 1187.22,683.212 1187.78,683.212 1188.34,683.212 1188.9,683.212 1189.46,683.212 1190.02,683.212 1190.58,683.212 1191.14,683.212 1191.7,683.212 1192.25,683.212 1192.81,683.212 1193.37,683.212 1193.93,683.212 1194.49,683.212 1195.05,683.212 1195.61,683.212 1196.17,683.212 1196.73,683.212 1197.29,683.212 1197.85,683.212 1198.41,683.212 1198.97,683.212 1199.52,683.212 1200.08,683.212 1200.64,683.212 1201.2,683.212 1201.76,683.212 1202.32,683.212 1202.88,683.212 1203.44,683.212 1204,683.212 1204.56,683.212 1205.12,683.212 1205.68,683.212 1206.24,683.212 1206.8,683.212 1207.35,683.212 1207.91,683.212 1208.47,683.212 1209.03,683.212 1209.59,683.212 1210.15,683.212 1210.71,683.212 1211.27,683.212 1211.83,683.212 1212.39,683.212 1212.95,683.212 1213.51,683.212 1214.07,683.212 1214.62,683.212 1215.18,683.212 1215.74,683.212 1216.3,683.212 1216.86,683.212 1217.42,683.212 1217.98,683.212 1218.54,683.212 1219.1,683.212 1219.66,683.212 1220.22,683.212 1220.78,683.212 1221.34,683.212 1221.89,683.212 1222.45,683.212 1223.01,683.212 1223.57,683.212 1224.13,683.212 1224.69,683.212 1225.25,683.212 1225.81,683.212 1226.37,683.212 1226.93,683.212 1227.49,683.212 1228.05,683.212 1228.61,683.212 1229.17,683.212 1229.72,683.212 1230.28,683.212 1230.84,683.212 1231.4,683.212 1231.96,683.212 1232.52,683.212 1233.08,683.212 1233.64,683.212 1234.2,683.212 1234.76,683.212 1235.32,683.212 1235.88,683.212 1236.44,683.212 1236.99,683.212 1237.55,683.212 1238.11,683.212 1238.67,683.212 1239.23,683.212 1239.79,683.212 1240.35,683.212 1240.91,683.212 1241.47,683.212 1242.03,683.212 1242.59,683.212 1243.15,683.212 1243.71,683.212 1244.26,683.212 1244.82,683.212 1245.38,683.212 1245.94,683.212 1246.5,683.212 1247.06,683.212 1247.62,683.212 1248.18,683.212 1248.74,683.212 1249.3,683.212 1249.86,683.212 1250.42,683.212 1250.98,683.212 1251.54,683.212 1252.09,683.212 1252.65,683.212 1253.21,683.212 1253.77,683.212 1254.33,683.212 1254.89,683.212 1255.45,683.212 1256.01,683.212 1256.57,683.212 1257.13,683.212 1257.69,683.212 1258.25,683.212 1258.81,683.212 1259.36,683.212 1259.92,683.212 1260.48,683.212 1261.04,683.212 1261.6,683.212 1262.16,683.212 1262.72,683.212 1263.28,683.212 1263.84,683.212 1264.4,683.212 1264.96,683.212 1265.52,683.212 1266.08,683.212 1266.63,683.212 1267.19,683.212 1267.75,683.212 1268.31,683.212 1268.87,683.212 1269.43,683.212 1269.99,683.212 1270.55,683.212 1271.11,683.212 1271.67,683.212 1272.23,683.212 1272.79,683.212 1273.35,683.212 1273.91,683.212 1274.46,683.212 1275.02,683.212 1275.58,683.212 1276.14,683.212 1276.7,683.212 1277.26,683.212 1277.82,683.212 1278.38,683.212 1278.94,683.212 1279.5,683.212 1280.06,683.212 1280.62,683.212 1281.18,683.212 1281.73,683.212 1282.29,683.212 1282.85,683.212 1283.41,683.212 1283.97,683.212 1284.53,683.212 1285.09,683.212 1285.65,683.212 1286.21,683.212 1286.77,683.212 1287.33,683.212 1287.89,683.212 1288.45,683.212 1289,683.212 1289.56,683.212 1290.12,683.212 1290.68,683.212 1291.24,683.212 1291.8,683.212 1292.36,683.212 1292.92,683.212 1293.48,683.212 1294.04,683.212 1294.6,683.212 1295.16,683.212 1295.72,683.212 1296.28,683.212 1296.83,683.212 1297.39,683.212 1297.95,683.212 1298.51,683.212 1299.07,683.212 1299.63,683.212 1300.19,683.212 1300.75,683.212 1301.31,683.212 1301.87,683.212 1302.43,683.212 1302.99,683.212 1303.55,683.212 1304.1,683.212 1304.66,683.212 1305.22,683.212 1305.78,683.212 1306.34,683.212 1306.9,683.212 1307.46,683.212 1308.02,683.212 1308.58,683.212 1309.14,683.212 1309.7,683.212 1310.26,683.212 1310.82,683.212 1311.38,683.212 1311.93,683.212 1312.49,683.212 1313.05,683.212 1313.61,683.212 1314.17,683.212 1314.73,683.212 1315.29,683.212 1315.85,683.212 1316.41,683.212 1316.97,683.212 1317.53,683.212 1318.09,683.212 1318.65,683.212 1319.2,683.212 1319.76,683.212 1320.32,683.212 1320.88,683.212 1321.44,683.212 1322,683.212 1322.56,683.212 1323.12,683.212 1323.68,683.212 1324.24,683.212 1324.8,683.212 1325.36,683.212 1325.92,683.212 1326.47,683.212 1327.03,683.212 1327.59,683.212 1328.15,683.212 1328.71,683.212 1329.27,683.212 1329.83,683.212 1330.39,683.212 1330.95,683.212 1331.51,683.212 1332.07,683.212 1332.63,683.212 1333.19,683.212 1333.75,683.212 1334.3,683.212 1334.86,683.212 1335.42,683.212 1335.98,683.212 1336.54,683.212 1337.1,683.212 1337.66,683.212 1338.22,683.212 1338.78,683.212 1339.34,683.212 1339.9,683.212 1340.46,683.212 1341.02,683.212 1341.57,683.212 1342.13,683.212 1342.69,683.212 1343.25,683.212 1343.81,683.212 1344.37,683.212 1344.93,683.212 1345.49,683.212 1346.05,683.212 1346.61,683.212 1347.17,683.212 1347.73,683.212 1348.29,683.212 1348.84,683.212 1349.4,683.212 1349.96,683.212 1350.52,683.212 1351.08,683.212 1351.64,683.212 1352.2,683.212 1352.76,683.212 1353.32,683.212 1353.88,683.212 1354.44,683.212 1355,683.212 1355.56,683.212 1356.12,683.212 1356.67,683.212 1357.23,683.212 1357.79,683.212 1358.35,683.212 1358.91,683.212 1359.47,683.212 1360.03,683.212 1360.59,683.212 1361.15,683.212 1361.71,683.212 1362.27,683.212 1362.83,683.212 1363.39,683.212 1363.94,683.212 1364.5,683.212 1365.06,683.212 1365.62,683.212 1366.18,683.212 1366.74,683.212 1367.3,683.212 1367.86,683.212 1368.42,683.212 1368.98,683.212 1369.54,683.212 1370.1,683.212 1370.66,683.212 1371.21,683.212 1371.77,683.212 1372.33,683.212 1372.89,683.212 1373.45,683.212 1374.01,683.212 1374.57,683.212 1375.13,683.212 1375.69,683.212 1376.25,683.212 1376.81,683.212 1377.37,683.212 1377.93,683.212 1378.49,683.212 1379.04,683.212 1379.6,683.212 1380.16,683.212 1380.72,683.212 1381.28,683.212 1381.84,683.212 1382.4,683.212 1382.96,683.212 1383.52,683.212 1384.08,683.212 1384.64,683.212 1385.2,683.212 1385.76,683.212 1386.31,683.212 1386.87,683.212 1387.43,683.212 1387.99,683.212 1388.55,683.212 1389.11,683.212 1389.67,683.212 1390.23,683.212 1390.79,683.212 1391.35,683.212 1391.91,683.212 1392.47,683.212 1393.03,683.212 1393.58,683.212 1394.14,683.212 1394.7,683.212 1395.26,683.212 1395.82,683.212 1396.38,683.212 1396.94,683.212 1397.5,683.212 1398.06,683.212 1398.62,683.212 1399.18,683.212 1399.74,683.212 1400.3,683.212 1400.86,683.212 1401.41,683.212 1401.97,683.212 1402.53,683.212 1403.09,683.212 1403.65,683.212 1404.21,683.212 1404.77,683.212 1405.33,683.212 1405.89,683.212 1406.45,683.212 1407.01,683.212 1407.57,683.212 1408.13,683.212 1408.68,683.212 1409.24,683.212 1409.8,683.212 1410.36,683.212 1410.92,683.212 1411.48,683.212 1412.04,683.212 1412.6,683.212 1413.16,683.212 1413.72,683.212 1414.28,683.212 1414.84,683.212 1415.4,683.212 1415.95,683.212 1416.51,683.212 1417.07,683.212 1417.63,683.212 1418.19,683.212 1418.75,683.212 1419.31,683.212 1419.87,683.212 1420.43,683.212 1420.99,683.212 1421.55,683.212 1422.11,683.212 1422.67,683.212 1423.23,683.212 1423.78,683.212 1424.34,683.212 1424.9,683.212 1425.46,683.212 1426.02,683.212 1426.58,683.212 1427.14,683.212 1427.7,683.212 1428.26,683.212 1428.82,683.212 1429.38,683.212 1429.94,683.212 1430.5,683.212 1431.05,683.212 1431.61,683.212 1432.17,683.212 1432.73,683.212 1433.29,683.212 1433.85,683.212 1434.41,683.212 1434.97,683.212 1435.53,683.212 1436.09,683.212 1436.65,683.212 1437.21,683.212 1437.77,683.212 1438.33,683.212 1438.88,683.212 1439.44,683.212 1440,683.212 1440.56,683.212 1441.12,683.212 1441.68,683.212 1442.24,683.212 1442.8,683.212 1443.36,683.212 1443.92,683.212 1444.48,683.212 1445.04,683.212 1445.6,683.212 1446.15,683.212 1446.71,683.212 1447.27,683.212 1447.83,683.212 1448.39,683.212 1448.95,683.212 1449.51,683.212 1450.07,683.212 1450.63,683.212 1451.19,683.212 1451.75,683.212 1452.31,683.212 1452.87,683.212 1453.42,683.212 1453.98,683.212 1454.54,683.212 1455.1,683.212 1455.66,683.212 1456.22,683.212 1456.78,683.212 1457.34,683.212 1457.9,683.212 1458.46,683.212 1459.02,683.212 1459.58,683.212 1460.14,683.212 1460.7,683.212 1461.25,683.212 1461.81,683.212 1462.37,683.212 1462.93,683.212 1463.49,683.212 1464.05,683.212 1464.61,683.212 1465.17,683.212 1465.73,683.212 1466.29,683.212 1466.85,683.212 1467.41,683.212 1467.97,683.212 1468.52,683.212 1469.08,683.212 1469.64,683.212 1470.2,683.212 1470.76,683.212 1471.32,683.212 1471.88,683.212 1472.44,683.212 1473,683.212 1473.56,683.212 1474.12,683.212 1474.68,683.212 1475.24,683.212 1475.79,683.212 1476.35,683.212 1476.91,683.212 1477.47,683.212 1478.03,683.212 1478.59,683.212 1479.15,683.212 1479.71,683.212 1480.27,683.212 1480.83,683.212 1481.39,683.212 1481.95,683.212 1482.51,683.212 1483.07,683.212 1483.62,683.212 1484.18,683.212 1484.74,683.212 1485.3,683.212 1485.86,683.212 1486.42,683.212 1486.98,683.212 1487.54,683.212 1488.1,683.212 1488.66,683.212 1489.22,683.212 1489.78,683.212 1490.34,683.212 1490.89,683.212 1491.45,683.212 1492.01,683.212 1492.57,683.212 1493.13,683.212 1493.69,683.212 1494.25,683.212 1494.81,683.212 1495.37,683.212 1495.93,683.212 1496.49,683.212 1497.05,683.212 1497.61,683.212 1498.16,683.212 1498.72,683.212 1499.28,683.212 1499.84,683.212 1500.4,683.212 1500.96,683.212 1501.52,683.212 1502.08,683.212 1502.64,683.212 1503.2,683.212 1503.76,683.212 1504.32,683.212 1504.88,683.212 1505.44,683.212 1505.99,683.212 1506.55,683.212 1507.11,683.212 1507.67,683.212 1508.23,683.212 1508.79,683.212 1509.35,683.212 1509.91,683.212 1510.47,683.212 1511.03,683.212 1511.59,683.212 1512.15,683.212 1512.71,683.212 1513.26,683.212 1513.82,683.212 1514.38,683.212 1514.94,683.212 1515.5,683.212 1516.06,683.212 1516.62,683.212 1517.18,683.212 1517.74,683.212 1518.3,683.212 1518.86,683.212 1519.42,683.212 1519.98,683.212 1520.53,683.212 1521.09,683.212 1521.65,683.212 1522.21,683.212 1522.77,683.212 1523.33,683.212 1523.89,683.212 1524.45,683.212 1525.01,683.212 1525.57,683.212 1526.13,683.212 1526.69,683.212 1527.25,683.212 1527.81,683.212 1528.36,683.212 1528.92,683.212 1529.48,683.212 1530.04,683.212 1530.6,683.212 1531.16,683.212 1531.72,683.212 1532.28,683.212 1532.84,683.212 1533.4,683.212 1533.96,683.212 1534.52,683.212 1535.08,683.212 1535.63,683.212 1536.19,683.212 1536.75,683.212 1537.31,683.212 1537.87,683.212 1538.43,683.212 1538.99,683.212 1539.55,683.212 1540.11,683.212 1540.67,683.212 1541.23,683.212 1541.79,683.212 1542.35,683.212 1542.9,683.212 1543.46,683.212 1544.02,683.212 1544.58,683.212 1545.14,683.212 1545.7,683.212 1546.26,683.212 1546.82,683.212 1547.38,683.212 1547.94,683.212 1548.5,683.212 1549.06,683.212 1549.62,683.212 1550.18,683.212 1550.73,683.212 1551.29,683.212 1551.85,683.212 1552.41,683.212 1552.97,683.212 1553.53,683.212 1554.09,683.212 1554.65,683.212 1555.21,683.212 1555.77,683.212 1556.33,683.212 1556.89,683.212 1557.45,683.212 1558,683.212 1558.56,683.212 1559.12,683.212 1559.68,683.212 1560.24,683.212 1560.8,683.212 1561.36,683.212 1561.92,683.212 1562.48,683.212 1563.04,683.212 1563.6,683.212 1564.16,683.212 1564.72,683.212 1565.28,683.212 1565.83,683.212 1566.39,683.212 1566.95,683.212 1567.51,683.212 1568.07,683.212 1568.63,683.212 1569.19,683.212 1569.75,683.212 1570.31,683.212 1570.87,683.212 1571.43,683.212 1571.99,683.212 1572.55,683.212 1573.1,683.212 1573.66,683.212 1574.22,683.212 1574.78,683.212 1575.34,683.212 1575.9,683.212 1576.46,683.212 1577.02,683.212 1577.58,683.212 1578.14,683.212 1578.7,683.212 1579.26,683.212 1579.82,683.212 1580.37,683.212 1580.93,683.212 1581.49,683.212 1582.05,683.212 1582.61,683.212 1583.17,683.212 1583.73,683.212 1584.29,683.212 1584.85,683.212 1585.41,683.212 1585.97,683.212 1586.53,683.212 1587.09,683.212 1587.65,683.212 1588.2,683.212 1588.76,683.212 1589.32,683.212 1589.88,683.212 1590.44,683.212 1591,683.212 1591.56,683.212 1592.12,683.212 1592.68,683.212 1593.24,683.212 1593.8,683.212 1594.36,683.212 1594.92,683.212 1595.47,683.212 1596.03,683.212 1596.59,683.212 1597.15,683.212 1597.71,683.212 1598.27,683.212 1598.83,683.212 1599.39,683.212 1599.95,683.212 1600.51,683.212 1601.07,683.212 1601.63,683.212 1602.19,683.212 1602.74,683.212 1603.3,683.212 1603.86,683.212 1604.42,683.212 1604.98,683.212 1605.54,683.212 1606.1,683.212 1606.66,683.212 1607.22,683.212 1607.78,683.212 1608.34,683.212 1608.9,683.212 1609.46,683.212 1610.02,683.212 1610.57,683.212 1611.13,683.212 1611.69,683.212 1612.25,683.212 1612.81,683.212 1613.37,683.212 1613.93,683.212 1614.49,683.212 1615.05,683.212 1615.61,683.212 1616.17,683.212 1616.73,683.212 1617.29,683.212 1617.84,683.212 1618.4,683.212 1618.96,683.212 1619.52,683.212 1620.08,683.212 1620.64,683.212 1621.2,683.212 1621.76,683.212 1622.32,683.212 1622.88,683.212 1623.44,683.212 1624,683.212 1624.56,683.212 1625.11,683.212 1625.67,683.212 1626.23,683.212 1626.79,683.212 1627.35,683.212 1627.91,683.212 1628.47,683.212 1629.03,683.212 1629.59,683.212 1630.15,683.212 1630.71,683.212 1631.27,683.212 1631.83,683.212 1632.39,683.212 1632.94,683.212 1633.5,683.212 1634.06,683.212 1634.62,683.212 1635.18,683.212 1635.74,683.212 1636.3,683.212 1636.86,683.212 1637.42,683.212 1637.98,683.212 1638.54,683.212 1639.1,683.212 1639.66,683.212 1640.21,683.212 1640.77,683.212 1641.33,683.212 1641.89,683.212 1642.45,683.212 1643.01,683.212 1643.57,683.212 1644.13,683.212 1644.69,683.212 1645.25,683.212 1645.81,683.212 1646.37,683.212 1646.93,683.212 1647.48,683.212 1648.04,683.212 1648.6,683.212 1649.16,683.212 1649.72,683.212 1650.28,683.212 1650.84,683.212 1651.4,683.212 1651.96,683.212 1652.52,683.212 1653.08,683.212 1653.64,683.212 1654.2,683.212 1654.76,683.212 1655.31,683.212 1655.87,683.212 1656.43,683.212 1656.99,683.212 1657.55,683.212 1658.11,683.212 1658.67,683.212 1659.23,683.212 1659.79,683.212 1660.35,683.212 1660.91,683.212 1661.47,683.212 1662.03,683.212 1662.58,683.212 1663.14,683.212 1663.7,683.212 1664.26,683.212 1664.82,683.212 1665.38,683.212 1665.94,683.212 1666.5,683.212 1667.06,683.212 1667.62,683.212 1668.18,683.212 1668.74,683.212 1669.3,683.212 1669.85,683.212 1670.41,683.212 1670.97,683.212 1671.53,683.212 1672.09,683.212 1672.65,683.212 1673.21,683.212 1673.77,683.212 1674.33,683.212 1674.89,683.212 1675.45,683.212 1676.01,683.212 1676.57,683.212 1677.13,683.212 1677.68,683.212 1678.24,683.212 1678.8,683.212 1679.36,683.212 1679.92,683.212 1680.48,683.212 1681.04,683.212 1681.6,683.212 1682.16,683.212 1682.72,683.212 1683.28,683.212 1683.84,683.212 1684.4,683.212 1684.95,683.212 1685.51,683.212 1686.07,683.212 1686.63,683.212 1687.19,683.212 1687.75,683.212 1688.31,683.212 1688.87,683.212 1689.43,683.212 1689.99,683.212 1690.55,683.212 1691.11,683.212 1691.67,683.212 1692.23,683.212 1692.78,683.212 1693.34,683.212 1693.9,683.212 1694.46,683.212 1695.02,683.212 1695.58,683.212 1696.14,683.212 1696.7,683.212 1697.26,683.212 1697.82,683.212 1698.38,683.212 1698.94,683.212 1699.5,683.212 1700.05,683.212 1700.61,683.212 1701.17,683.212 1701.73,683.212 1702.29,683.212 1702.85,683.212 1703.41,683.212 1703.97,683.212 1704.53,683.212 1705.09,683.212 1705.65,683.212 1706.21,683.212 1706.77,683.212 1707.32,683.212 1707.88,683.212 1708.44,683.212 1709,683.212 1709.56,683.212 1710.12,683.212 1710.68,683.212 1711.24,683.212 1711.8,683.212 1712.36,683.212 1712.92,683.212 1713.48,683.212 1714.04,683.212 1714.6,683.212 1715.15,683.212 1715.71,683.212 1716.27,683.212 1716.83,683.212 1717.39,683.212 1717.95,683.212 1718.51,683.212 1719.07,683.212 1719.63,683.212 1720.19,683.212 1720.75,683.212 1721.31,683.212 1721.87,683.212 1722.42,683.212 1722.98,683.212 1723.54,683.212 1724.1,683.212 1724.66,683.212 1725.22,683.212 1725.78,683.212 1726.34,683.212 1726.9,683.212 1727.46,683.212 1728.02,683.212 1728.58,683.212 1729.14,683.212 1729.69,683.212 1730.25,683.212 1730.81,683.212 1731.37,683.212 1731.93,683.212 1732.49,683.212 1733.05,683.212 1733.61,683.212 1734.17,683.212 1734.73,683.212 1735.29,683.212 1735.85,683.212 1736.41,683.212 1736.97,683.212 1737.52,683.212 1738.08,683.212 1738.64,683.212 1739.2,683.212 1739.76,683.212 1740.32,683.212 1740.88,683.212 1741.44,683.212 1742,683.212 1742.56,683.212 1743.12,683.212 1743.68,683.212 1744.24,683.212 1744.79,683.212 1745.35,683.212 1745.91,683.212 1746.47,683.212 1747.03,683.212 1747.59,683.212 1748.15,683.212 1748.71,683.212 1749.27,683.212 1749.83,683.212 1750.39,683.212 1750.95,683.212 1751.51,683.212 1752.06,683.212 1752.62,683.212 1753.18,683.212 1753.74,683.212 1754.3,683.212 1754.86,683.212 1755.42,683.212 1755.98,683.212 1756.54,683.212 1757.1,683.212 1757.66,683.212 1758.22,683.212 1758.78,683.212 1759.34,683.212 1759.89,683.212 1760.45,683.212 1761.01,683.212 1761.57,683.212 1762.13,683.212 1762.69,683.212 1763.25,683.212 1763.81,683.212 1764.37,683.212 1764.93,683.212 1765.49,683.212 1766.05,683.212 1766.61,683.212 1767.16,683.212 1767.72,683.212 1768.28,683.212 1768.84,683.212 1769.4,683.212 1769.96,683.212 1770.52,683.212 1771.08,683.212 1771.64,683.212 1772.2,683.212 1772.76,683.212 1773.32,683.212 1773.88,683.212 1774.43,683.212 1774.99,683.212 1775.55,683.212 1776.11,683.212 1776.67,683.212 1777.23,683.212 1777.79,683.212 1778.35,683.212 1778.91,683.212 1779.47,683.212 1780.03,683.212 1780.59,683.212 1781.15,683.212 1781.71,683.212 1782.26,683.212 1782.82,683.212 1783.38,683.212 1783.94,683.212 1784.5,683.212 1785.06,683.212 1785.62,683.212 1786.18,683.212 1786.74,683.212 1787.3,683.212 1787.86,683.212 1788.42,683.212 1788.98,683.212 1789.53,683.212 1790.09,683.212 1790.65,683.212 1791.21,683.212 1791.77,683.212 1792.33,683.212 1792.89,683.212 1793.45,683.212 1794.01,683.212 1794.57,683.212 1795.13,683.212 1795.69,683.212 1796.25,683.212 1796.8,683.212 1797.36,683.212 1797.92,683.212 1798.48,683.212 1799.04,683.212 1799.6,683.212 1800.16,683.212 1800.72,683.212 1801.28,683.212 1801.84,683.212 1802.4,683.212 1802.96,683.212 1803.52,683.212 1804.08,683.212 1804.63,683.212 1805.19,683.212 1805.75,683.212 1806.31,683.212 1806.87,683.212 1807.43,683.212 1807.99,683.212 1808.55,683.212 1809.11,683.212 1809.67,683.212 1810.23,683.212 1810.79,683.212 1811.35,683.212 1811.9,683.212 1812.46,683.212 1813.02,683.212 1813.58,683.212 1814.14,683.212 1814.7,683.212 1815.26,683.212 1815.82,683.212 1816.38,683.212 1816.94,683.212 1817.5,683.212 1818.06,683.212 1818.62,683.212 1819.18,683.212 1819.73,683.212 1820.29,683.212 1820.85,683.212 1821.41,683.212 1821.97,683.212 1822.53,683.212 1823.09,683.212 1823.65,683.212 1824.21,683.212 1824.77,683.212 1825.33,683.212 1825.89,683.212 1826.45,683.212 1827,683.212 1827.56,683.212 1828.12,683.212 1828.68,683.212 1829.24,683.212 1829.8,683.212 1830.36,683.212 1830.92,683.212 1831.48,683.212 1832.04,683.212 1832.6,683.212 1833.16,683.212 1833.72,683.212 1834.27,683.212 1834.83,683.212 1835.39,683.212 1835.95,683.212 1836.51,683.212 1837.07,683.212 1837.63,683.212 1838.19,683.212 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ¬± $(se.err)\n    Projected Energy: $(v.val) ¬± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.023242668561095 ¬± 0.026026614094972162\nProjected Energy: -4.013208757804984 ¬± (0.0044748131380609735, 0.004681949247316908)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from solve as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; Œ± = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-Œ±.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ¬± 0.0029\n  with uncertainty of ¬± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13√ó6 DataFrame\n Row ‚îÇ blocks  mean      std_err      std_err_err  p_cov       mj\n     ‚îÇ Int64   Float64   Float64      Float64      Float64     Float64\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n   1 ‚îÇ  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 ‚îÇ   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 ‚îÇ   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 ‚îÇ   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 ‚îÇ    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 ‚îÇ    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 ‚îÇ    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 ‚îÇ     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 ‚îÇ     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 ‚îÇ     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 ‚îÇ      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 ‚îÇ      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 ‚îÇ      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ästd err vs blocking steps‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n               ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n    0.00423501 ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ m test\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ std err\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚°†‚¢∫‚†í‚†í‚¢∫‚†Ä‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚°Ä‚†Ä‚†Ä‚°Ü‚£Ä‚†§‚°ó‚†â‚†Ä‚¢∏‚†Ä‚†Ä‚¢∏‚°Ü‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°ß‚†§‚†î‚°ó‚†ä‚†â‚°è‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚¢∏‚¢£‚†Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚†Å‚°á‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†∏‚°Ä‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†¥‚†Å‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚†Ä‚°á‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚†ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£¶‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°†‚†î‚†í‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚†§‚†í‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚îÇ\n               ‚îÇ‚†Ä‚†í‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚îÇ\n   -0.00012335 ‚îÇ‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†ß‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚îÇ\n               ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n               ‚†Ä0.64‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Äk‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä13.36‚†Ä\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; Œ± = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; Œ±=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.œÉ_f using x_by_y_linear. The standard error estimate r.œÉ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.Œ¥_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and D√≠az-Franc√©s, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ¬± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*œÉ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3√ó3 DataFrame\n Row ‚îÇ res      res_l    res_u\n     ‚îÇ Float64  Float64  Float64\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n   1 ‚îÇ    11.5  1.7282   1.7282\n   2 ‚îÇ    13.0  1.7282   1.7282\n   3 ‚îÇ    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dœÑ=df.dœÑ[end], skip=0)\ngrowth_witness(sim::PMCSimulation, [b]; kwargs...)\n\nCalculate the growth witness directly from the result (DataFrame or PMCSimulation) of solveing a ProjectorMonteCarloProblem. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0)\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ‚â• 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dœÑ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n)\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    dœÑ=determine_constant_time_step(df),\n    kwargs...\n)\ngrowth_estimator(sim::PMCSimulation; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively.  Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means. dœÑ is the time step and weights a function that calulates the weights. See w_exp and w_lin.\n\nE_gr = E_r - frac1dœÑln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dœÑ^2) and potentially increased confidence intervals compared to the (biased) shift estimator.  Error propagation is done with MonteCarloMeasurements. Propagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a PMCSimulation or DataFrame returned by solve. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\ngrowth_estimator_analysis(sim::PMCSimulation; kwargs...)\n-> (; df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df or PMCSimulation sim. repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\nsim = solve(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(sim; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"‚ü®S‚ü©\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-Tuple{AbstractVector, AbstractVector, AbstractVector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dœÑ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n)\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    dœÑ=df.dœÑ[end],\n    kwargs...\n)\nmixed_estimator(sim::PMCSimulation, h; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up).  Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means. dœÑ is the time step and weights a function that calulates the weights. See w_exp and w_lin.  Additional keyword arguments are passed on to ratio_of_means.\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dœÑ^2) and potentially increased confidence intervals compared to the unweighted ratio.  Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame or PMCSimulation returned by solve. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\nmixed_estimator_analysis(sim::PMCSimulation; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df or PMCSimulation sim returned from solve repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\nsim = solve(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(sim; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"‚ü®S‚ü©\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(df::DataFrame; skip=0, hproj=:hproj, vproj=:vproj, kwargs...)\nprojected_energy(sim::PMCSimulation; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy(...) to set these up in ProjectorMonteCarloProblem). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dœÑ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n)\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n)\nrayleigh_replica_estimator(sim::PMCSimulation; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame or PMCSimulation returned by solve. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means. dœÑ is the time step and weights a function that calulates the weights. See w_exp and w_lin. Additional keyword arguments are passed on to ratio_of_means.\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\nrayleigh_replica_estimator_analysis(sim::PMCSimulation; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df or PMCSimulation sim returned from solve repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\nsim = solve(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(sim; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"‚ü®S‚ü©\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...)\nshift_estimator(sim::PMCSimulation; kwargs...)\n-> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dœÑ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dœÑ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin, growth_estimator, mixed_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dœÑ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dœÑ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp, growth_estimator, mixed_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\nreplica_fidelity(sim::PMCSimulation; kwargs...)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the PMCSimulation or DataFrame returned by solve, using replicas _1 and _2. Calls ratio_of_means to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |œà‚ü© and |œï‚ü© is defined as\n\nF(œàœï) = fracœàœï^2œàœàœïœï \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v‚ãÖv == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\nvariational_energy_estimator(sim::PMCSimulation; kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame and PMCSimulation versions can extract the relevant information from the result of solve. Set up the ProjectorMonteCarloProblem with the keyword argument replica_strategy = AllOverlaps(R) and R ‚â• 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.¬±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:¬±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ¬± 0.029\n  with uncertainty of ¬± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.¬±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; Œ± = 0.01) -> k\nmtest(table::NamedTuple; Œ± = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-Œ± after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, œÉ_f, Œ¥_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nœÉ_f::T: std from linear propagation\nŒ¥_y::T: coefficient of variation for denominator (‚â§ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, Œº, œÉ)\nparticles(samples, Œº::AbstractVector, Œ£::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, œÉ_f, Œ¥_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nœÉ_f standard deviation of f from linear error propagation (normal approximation)\nŒ¥_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(Œº_x,Œº_y,œÉ_x,œÉ_y,œÅ) -> f, œÉ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and D√≠az-Franc√©s, Rubio (2013).\n\nœÉ_f = sqrtfracœÉ_xŒº_y^2 + fracŒº_x œÉ_yŒº_y^2^2 - frac2 œÅ Œº_xŒº_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3√ó7 DataFrame\n Row ‚îÇ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     ‚îÇ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n   1 ‚îÇ    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 ‚îÇ    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 ‚îÇ    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1√ó9 DataFrame\n Row ‚îÇ val       val_l      val_u      val_f     val_œÉ_f    val_Œ¥_y    val_k  val_blocks  val_success\n     ‚îÇ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n   1 ‚îÇ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.determine_constant_time_step-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.determine_constant_time_step","text":"determine_constant_time_step(df) -> dœÑ\n\nGiven a DataFrame df, determine the time step that was used to compute it. Throw an error if time step is not constant.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7√ó6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS‚Ä¶</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple‚Ä¶</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.452584</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.4237e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">1.3284e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">9.558e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.433e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.945e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0‚ü©&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">8.135e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ‚â† basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10√ó10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10√ó10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nŒîE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ŒîE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(fs\"|0 0 4 0 0‚ü©\"; u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14√ó14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ          ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ‚ãÖ        0.282843  0.565685   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n   ‚ãÖ        0.8       0.4       0.581966  0.4        ‚ãÖ        0.4        0.282843  0.565685   ‚ãÖ        0.69282   0.69282    ‚ãÖ         ‚ãÖ \n   ‚ãÖ        0.4       0.8       0.4       2.81803   0.4        ‚ãÖ          ‚ãÖ        0.565685  0.282843  0.69282    ‚ãÖ        0.69282    ‚ãÖ \n   ‚ãÖ        0.8       0.4        ‚ãÖ        0.4       0.581966  0.4        0.282843  0.565685   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282\n   ‚ãÖ        0.4       0.8       0.4        ‚ãÖ        0.4       2.81803     ‚ãÖ        0.565685  0.282843   ‚ãÖ        0.69282    ‚ãÖ        0.69282\n   ‚ãÖ        0.565685   ‚ãÖ        0.282843   ‚ãÖ        0.282843   ‚ãÖ        -0.472136  0.8        ‚ãÖ        0.489898   ‚ãÖ         ‚ãÖ        0.489898\n   ‚ãÖ        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ‚ãÖ         ‚ãÖ        0.565685   ‚ãÖ        0.282843   ‚ãÖ        0.282843    ‚ãÖ        0.8       8.47214    ‚ãÖ        0.489898  0.489898   ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    ‚ãÖ         ‚ãÖ         0.489898  0.489898   ‚ãÖ        1.56393    ‚ãÖ         ‚ãÖ         ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282    ‚ãÖ         ‚ãÖ        0.69282     ‚ãÖ        0.489898  0.489898   ‚ãÖ        6.03607    ‚ãÖ         ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    ‚ãÖ          ‚ãÖ        0.489898  0.489898   ‚ãÖ         ‚ãÖ        6.03607    ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    0.489898  0.489898   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0‚ü©\"\n fs\"|0 1 2 1 0‚ü©\"\n fs\"|1 0 2 0 1‚ü©\"\n fs\"|1 0 1 2 0‚ü©\"\n fs\"|0 0 1 1 2‚ü©\"\n fs\"|0 2 1 0 1‚ü©\"\n fs\"|2 1 1 0 0‚ü©\"\n fs\"|0 2 0 2 0‚ü©\"\n fs\"|1 1 0 1 1‚ü©\"\n fs\"|2 0 0 0 2‚ü©\"\n fs\"|0 0 0 3 1‚ü©\"\n fs\"|3 0 0 1 0‚ü©\"\n fs\"|0 1 0 0 3‚ü©\"\n fs\"|1 3 0 0 0‚ü©\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14√ó14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14√ó14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ          ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ‚ãÖ        0.282843  0.565685   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ \n   ‚ãÖ        0.8       0.4       0.581966  0.4        ‚ãÖ        0.4        0.282843  0.565685   ‚ãÖ        0.69282   0.69282    ‚ãÖ         ‚ãÖ \n   ‚ãÖ        0.4       0.8       0.4       2.81803   0.4        ‚ãÖ          ‚ãÖ        0.565685  0.282843  0.69282    ‚ãÖ        0.69282    ‚ãÖ \n   ‚ãÖ        0.8       0.4        ‚ãÖ        0.4       0.581966  0.4        0.282843  0.565685   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282\n   ‚ãÖ        0.4       0.8       0.4        ‚ãÖ        0.4       2.81803     ‚ãÖ        0.565685  0.282843   ‚ãÖ        0.69282    ‚ãÖ        0.69282\n   ‚ãÖ        0.565685   ‚ãÖ        0.282843   ‚ãÖ        0.282843   ‚ãÖ        -0.472136  0.8        ‚ãÖ        0.489898   ‚ãÖ         ‚ãÖ        0.489898\n   ‚ãÖ        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ‚ãÖ         ‚ãÖ        0.565685   ‚ãÖ        0.282843   ‚ãÖ        0.282843    ‚ãÖ        0.8       8.47214    ‚ãÖ        0.489898  0.489898   ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    ‚ãÖ         ‚ãÖ         0.489898  0.489898   ‚ãÖ        1.56393    ‚ãÖ         ‚ãÖ         ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282    ‚ãÖ         ‚ãÖ        0.69282     ‚ãÖ        0.489898  0.489898   ‚ãÖ        6.03607    ‚ãÖ         ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    ‚ãÖ          ‚ãÖ        0.489898  0.489898   ‚ãÖ         ‚ãÖ        6.03607    ‚ãÖ \n   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        0.69282   0.69282    0.489898  0.489898   ‚ãÖ         ‚ãÖ         ‚ãÖ         ‚ãÖ        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14√ó14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0‚ü©\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ‚âà all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0‚ü©\" => -0.0214153\n  fs\"|2 0 0 0 2‚ü©\" => -0.00237613\n  fs\"|0 0 4 0 0‚ü©\" => -0.980348\n  fs\"|0 0 0 3 1‚ü©\" => 0.00363555\n  fs\"|2 1 1 0 0‚ü©\" => -0.0119687\n  fs\"|1 0 2 0 1‚ü©\" => 0.0768085\n  fs\"|1 3 0 0 0‚ü©\" => 0.00363555\n  fs\"|0 1 2 1 0‚ü©\" => 0.177701\n  fs\"|0 0 1 1 2‚ü©\" => -0.0119687\n  fs\"|3 0 0 1 0‚ü©\" => 0.00195478\n  fs\"|0 2 0 2 0‚ü©\" => -0.0138439\n  fs\"|1 1 0 1 1‚ü©\" => -0.00234782\n  fs\"|0 1 0 0 3‚ü©\" => 0.00195478\n  fs\"|0 2 1 0 1‚ü©\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i œµ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential œµ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleœÉ t_œÉ a^_iœÉ a_jœÉ +\n  frac12sum_iœÉ u_œÉœÉ n_iœÉ (n_iœÉ - 1) +\n  sum_iœÉœÑu_œÉœÑ n_iœÉ n_iœÑ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iœÉd v_œÉd x_di^2 n_iœÉ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C √ó D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k œµ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k Œ¥_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines œµ_k =t*dispersion(k)\nhubbard_dispersion: œµ_k = -2t cos(k)\ncontinuum_dispersion: œµ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k Œ¥_r+qp+k\n\nArguments\n\naddress: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k œµ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k Œ¥_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines œµ_k =t*dispersion(k)\nhubbard_dispersion: œµ_k = -2t cos(k)\ncontinuum_dispersion: œµ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, Œ∑, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions\n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl\n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x so that single particle energies are\n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl\n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between basis states of any noninteracting energy level, leading to many more offdiagonals and fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The   allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults   to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make   the first dimension the largest.\nŒ∑: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the   interactions. The values are always scaled relative to the first dimension, which sets   the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed   to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are   ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without   comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, Œ∑, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions\n\nhatH = sum_i œµ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x so that single particle energies are\n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator basis functions, see four_oscillator_integral_general, with the additional restriction that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults   to a 1D spectrum with number of levels matching modes of addr. Will be sorted to   make the first dimension the largest.\nŒ∑: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets   the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed   to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are   ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi œµ_mathbfi n_mathbfi\n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x so that single particle energies are\n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix representation of this Hamiltonian for a single particle is completely dense in the even-parity subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nŒ∑s = (): a tuple of aspect ratios for the remaining dimensions (Œ∑_y, ...). Should be empty   for a 1D trap or contain values greater than 1.0. The maximum index   in other dimensions will be the largest even number less than M/Œ∑_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,   including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if   only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of\nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kœÉk^2 n_kœÉ \n    quad + sum_pqkœÉœÉ T_pqk a^_p-kœÉ a^_q+kœÉ a_qœÉ a_pœÉ \n    quad + sum_pqskkœÉœÉ Q_kka^_p-kœÉ a^_q+kœÉ a^_s+k-kœÉ\n                                       a_sœÉ a_qœÉ a_pœÉ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + œâN - v Œ£‚Çñ(a‚Çñ^ + a‚Çñ)\n\nwhere p is the total momentum, p_f = Œ£_k k a‚Çñ^ a‚Çñ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2œÄl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons œâ.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0‚ü©{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M√∑2, M√∑2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M√∑2, M√∑2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(fs\"|1 1 1‚ü©\"; u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(fs\"|1 1 1‚ü©\"; u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address Œ± is replaced by frac12(Œ±  Œ±) for even and odd parity, respectively, where Œ±ÃÑ == reverse(Œ±).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(fs\"|0 2 1‚ü©\"; u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ‚âà eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ‚âà eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ‚â§ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0‚ü©{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ‚â§ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, œÉ=1, œÑ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_œÉœÑ(d) = frac1M _i n_œÉi (n_œÑi+d - Œ¥_0dŒ¥_œÉœÑ)\n\nFor multicomponent addresses, œÉ and œÑ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2√ó2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)√óSOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|‚áÖ‚ãÖ‚Üì‚Üë‚ü©\")\n2√ó2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)√óSOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|‚áÖ‚ãÖ‚Üì‚Üë‚ü©\")\n2√ó2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)√óSOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|‚áÖ‚ãÖ‚Üì‚Üë‚ü©\")\n2√ó2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)√óSOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2œÄM a^_s b^_p  b_q a_r Œ¥_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2œÄM a^_s a^_p  a_q a_r Œ¥_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ‚â§ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ‚â§ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iœÉ = hat a^_iœÉ hat a_iœÉ\n\nwhere i is the mode and œÉ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0‚ü©\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0‚ü©\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x‚ãÖ(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1‚ü©\", -3.0)\n (fs\"|2 2 2‚ü©\", -2.449489742783178)\n (fs\"|3 1 2‚ü©\", -2.0)\n (fs\"|4 1 1‚ü©\", -2.8284271247461903)\n (fs\"|4 2 0‚ü©\", -2.0)\n (fs\"|3 3 0‚ü©\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ‚Ä¶.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb‚ãÖ(1:7) == onr(b)‚ãÖ(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w‚ãÖop(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ‚ãÖ A ‚ãÖ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3√ó4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3√ó4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions,\n\n    mathcalI(ijkl) = int_-infty^infty dx \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function, and is non-zero unless i+j+k+l is odd. See e.g. Titchmarsh (1948). This is a generalisation of the closed form in Papenbrock (2002), which is is the special case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin,\n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state corresponds to a D-tuple of harmonic oscillator indices mathbfn_i. S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of phi_i(0) to speed-up the calculation. The values can be calculated with log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem\nsolve(::ExactDiagonalizationProblem)\ninit(::ExactDiagonalizationProblem)","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1‚ü©\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1‚ü©\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1‚ü©\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ‚âà values[1]\ntrue\n\nSee also solve(::ExactDiagonalizationProblem), init(::ExactDiagonalizationProblem), KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#CommonSolve.solve-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.solve","text":"solve(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nSolve an ExactDiagonalizationProblem p directly. Optionally specify an algorithm. Returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\nSee also solve(::ProjectorMonteCarloProblem).\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#CommonSolve.init-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\n```jldoctest julia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian) BasisSetRepresentation(HubbardReal1D(fs\"|1 0 0‚ü©\"; u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3√ó3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:   0.0  -1.0  -1.0  -1.0   0.0  -1.0  -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating BasisSetRepresentation(HubbardReal1D(fs\"|1 0 0‚ü©\"; u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2√ó2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:   0.0  -1.0  -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues 3-element Vector{Float64}:  -1.9999999999999996   0.9999999999999997   1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector 3-element Vector{Float64}:  -0.5773502691896257  -0.5773502691896255  -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec DVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()   fs\"|0 0 1‚ü©\" => -0.57735   fs\"|0 1 0‚ü©\" => -0.57735   fs\"|1 0 0‚ü©\" => -0.57735   ``Has methods for [dimension](@ref), [sparse](@ref), [Matrix](@ref), [starting_address`](@ref).\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nŒ±mathrmnaddrrangle\n\nReturns the new address naddr and the factor Œ±. The value of Œ± is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0‚ü©\" => 1\n\njulia> fs\"|0 1 2 0‚ü©\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3‚ü©‚äó|0 1 0‚ü©\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|‚Üë‚Üì‚Üë‚ü©\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0‚ü©{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0‚ü©{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ‚â§ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0‚ü©\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4‚ü©\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Œ£_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen)\n\nCompute the new address of a hopping event for the Bose-Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) √∑ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic.\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ‚â§ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|‚ãÖ‚Üë‚Üë‚Üë‚ãÖ‚ü©\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4‚ü©\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|‚Üë‚Üì‚Üì‚ü©\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3‚ü©{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n‚Üí (nadd, Œ±)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of Œ± is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3‚ü©{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, Œ± = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dœÑ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, Œ∂ = 0.08, Œæ = Œ∂^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter Œ∂ and Œæ after projecting onto projector.\n\nS^n+1 = S^n -fracŒ∂dœÑlnleft(fracPŒ®^(n+1)PŒ®^(n)right)-fracŒædœÑlnleft(fracPŒ®^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, Œ∂ = 0.08, Œæ = Œ∂^2/4, Œ± = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters Œ∂ and Œæ.\n\nS^n+1 = S^n -fracŒ∂dœÑlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracŒædœÑlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-Œ±)*walkernumber() + Œ±*UniformProjector()‚ãÖœà computed with walkernumber() and UniformProjector(). When Œæ = Œ∂^2/4 this corresponds to critical damping with a damping time scale T = 2/Œ∂.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, Œ∂ = 0.08, Œæ = Œ∂^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter Œ∂ and Œæ.\n\nS^n+1 = S^n -fracŒ∂dœÑlnleft(fracŒ®_1^n+1Œ®_1^nright)-fracŒædœÑlnleft(fracŒ®_1^n+1Œ®_1^texttargetright)\n\nWhen Œæ = Œ∂^2/4 this corresponds to critical damping with a damping time scale T = 2/Œ∂.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, Œ∂ = 0.08, Œæ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter Œ∂ and Œæ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, Œ∂ = 0.08,   Œæ = Œ∂^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dœÑ) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\nùêì = 1 + dœÑ(S - ùêá)\n\nwhere ùêá is the hamiltonian and S is the shift.\n\nùêì represents the first order expansion of the exponential evolution operator of the imaginary-time Schr√∂dinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(Œ∂ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter Œ∂.\n\nS^n+1 = S^n -fracŒ∂dœÑlnleft(fracŒ®_1^n+1Œ®_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, Œ∂ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter Œ∂.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntargetwalkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; targetwalkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nŒ∂ = 0.08: Damping parameter for the shift update.\nŒæ = Œ∂^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; targetwalkers, Œ∂, Œæ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, see   TimeStepStrategy.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * targetwalkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dœÑ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(‚ãÖ,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dœÑ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation, and solve(::ExactDiagonalizationProblem).\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndœÑ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> address = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(address);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(fs\\\"|1 2 3‚ü©\\\"; u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nœÑ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, Œ∂ = 0.08, Œæ = Œ∂^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ‚âà num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|‚ãÖ‚Üë‚áÖ‚Üì‚ãÖ‚ü©\" => 1.0, fs\"|‚Üì‚Üì‚ãÖ‚Üë‚Üë‚ü©\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|‚Üì‚Üì‚ãÖ‚Üë‚Üë‚ü©\" => 0.5\n  fs\"|‚ãÖ‚Üë‚áÖ‚Üì‚ãÖ‚ü©\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dœÑ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dœÑ","text":"update_dœÑ(s<:TimeStepStrategy, dœÑ, tnorm) -> new dœÑ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI. MPI is a standard for parallel and distributed computing, and it is widely used in high-performance computing. Rimu provides support for MPI to enable parallel computations on multiple nodes.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with 2 MPI ranks with mpirun -n 2 julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum, which is located at mode 5 in the momentum grid. We put all 10 particles, all in the zero momentum mode.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(fs\"|0 0 0 0 10 0 0 0 0 0‚ü©\"; u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for MPI calculations, as they will typically run non-interactively. The reports will be written to disk and can be inspected later. This has the additional benefit of reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The default settings will ensure that only the root MPI rank will write to the file, which is reasonable, and that data is saved in chunks of 1000 time steps. We choose to suppress progress messages with setting io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"For running parallel computations with MPI, it is important that a compatible state vector is used. Here we explicitly set up an MPI-enabled state vector, PDVec, which is automatically MPI-distributed over the available number of MPI ranks. In addition, threading will be used with all threads available to Julia.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0‚ü©\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10000 walkers and for 10000 time steps. We will also compute the projected energy by passing a ProjectedEnergy object as a post_step_strategy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"problem = ProjectorMonteCarloProblem(H;\n    start_at=initial_vector,\n    reporting_strategy,\n    post_step_strategy=ProjectedEnergy(H, initial_vector),\n    targetwalkers=10_000,\n    time_step=1e-4,\n    last_step=10_000\n);","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"simulation = solve(problem);\n\n@mpi_root println(\"Simulation success = \", simulation.success)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Simulation success = true\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Once the calculation is done, the results are available in the arrow file on disk.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In a typical workflow, the simulation results would be loaded from disk and analysed in the REPL or with a separate script. The arrow file can be loaded into a DataFrame with metadata using the load_df function.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schr√∂dinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Bl√∂te PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schr√∂dinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija ƒåufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. ProjectorMonteCarloProblem, ExactDiagonalizationProblem.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. ƒåufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelm√ºller, D. Huber, M. ƒåufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/œÄ^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|‚Üë‚Üë‚Üì‚Üì‚ü©\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|‚Üë‚Üì‚Üë‚Üì‚ü©\" => 1.0\n  fs\"|‚Üë‚Üë‚Üì‚Üì‚ü©\" => 4.0\n  fs\"|‚Üì‚Üë‚Üì‚Üë‚ü©\" => 1.0\n  fs\"|‚Üì‚Üë‚Üë‚Üì‚ü©\" => -1.0\n  fs\"|‚áÖ‚ãÖ‚ãÖ‚áÖ‚ü©\" => 1.0\n  fs\"|‚Üë‚Üì‚Üì‚Üë‚ü©\" => -1.0\n  fs\"|‚ãÖ‚áÖ‚áÖ‚ãÖ‚ü©\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|‚Üë‚Üì‚Üë‚Üì‚ü©\" => -1.0\n  fs\"|‚Üë‚Üë‚Üì‚Üì‚ü©\" => -4.0\n  fs\"|‚Üì‚Üë‚Üì‚Üë‚ü©\" => -1.0\n  fs\"|‚Üì‚Üë‚Üë‚Üì‚ü©\" => 1.0\n  fs\"|‚áÖ‚ãÖ‚ãÖ‚áÖ‚ü©\" => -1.0\n  fs\"|‚Üë‚Üì‚Üì‚Üë‚ü©\" => 1.0\n  fs\"|‚ãÖ‚áÖ‚áÖ‚ãÖ‚ü©\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|‚Üë‚Üì‚Üë‚Üì‚ü©\" => 1.0\n  fs\"|‚Üë‚Üë‚Üì‚Üì‚ü©\" => -2.0\n  fs\"|‚Üì‚Üë‚Üì‚Üë‚ü©\" => 1.0\n  fs\"|‚Üì‚Üë‚Üë‚Üì‚ü©\" => 3.0\n  fs\"|‚áÖ‚ãÖ‚ãÖ‚áÖ‚ü©\" => 1.0\n  fs\"|‚Üë‚Üì‚Üì‚Üë‚ü©\" => 3.0\n  fs\"|‚ãÖ‚áÖ‚áÖ‚ãÖ‚ü©\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()‚ãÖv == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
