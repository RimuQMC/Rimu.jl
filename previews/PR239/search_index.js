var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndτ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dτ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ± $(r.σ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ± 0.0029454115601256865\n   G2(1) = 0.9179375998196901 ± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ± 0.0008078855891766442\n   G2(3) = 0.9888034965386578 ± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ± 0.0008078855891766442\n   G2(5) = 0.9179375998196901 ± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ± 0.1374885675286172\n   Replica 2: -3.974753826250174 ± 0.12466355058904437\n   Replica 3: -4.011054302602587 ± 0.12438161612595744\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlaststep = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dτ = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1⟩\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the lomc! function with the post_step keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0), Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}(Pair{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}[fs\"|1 1 1 1 1 1⟩\" => 10.0]), Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}(Pair{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}[fs\"|1 1 1 1 2 0⟩\" => -14.142135623730951, fs\"|0 2 1 1 1 1⟩\" => -14.142135623730951, fs\"|1 1 1 1 0 2⟩\" => -14.142135623730951, fs\"|1 2 0 1 1 1⟩\" => -14.142135623730951, fs\"|2 0 1 1 1 1⟩\" => -14.142135623730951, fs\"|1 1 1 2 0 1⟩\" => -14.142135623730951, fs\"|1 1 2 0 1 1⟩\" => -14.142135623730951, fs\"|1 1 0 2 1 1⟩\" => -14.142135623730951, fs\"|1 1 1 0 2 1⟩\" => -14.142135623730951, fs\"|1 0 2 1 1 1⟩\" => -14.142135623730951, fs\"|2 1 1 1 1 0⟩\" => -14.142135623730951, fs\"|0 1 1 1 1 2⟩\" => -14.142135623730951]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this example, we seed the random number generator in order to get reproducible results. This should not be done for actual computations.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Random\nRandom.seed!(17);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Finally, we can start the FCIQMC run.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df, state = lomc!(\n    H, initial_vector;\n    laststep,\n    dτ,\n    targetwalkers,\n    post_step,\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, df is a DataFrame containing the time series data, while state contains the internal state of FCIQMC, which can be used to continue computations.","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 2Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip260\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip260)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip261\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip260)\" d=\"M401.953 1206.05 L2053.54 1206.05 L2053.54 346.457 L401.953 346.457  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip262\">\n    <rect x=\"401\" y=\"346\" width=\"1653\" height=\"861\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip262)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"448.176,1206.05 448.176,346.457 \"/>\n<polyline clip-path=\"url(#clip262)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"967.718,1206.05 967.718,346.457 \"/>\n<polyline clip-path=\"url(#clip262)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1487.26,1206.05 1487.26,346.457 \"/>\n<polyline clip-path=\"url(#clip262)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2006.8,1206.05 2006.8,346.457 \"/>\n<polyline clip-path=\"url(#clip260)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"401.953,1206.05 2053.54,1206.05 \"/>\n<polyline clip-path=\"url(#clip260)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"448.176,1206.05 448.176,1187.15 \"/>\n<polyline clip-path=\"url(#clip260)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"967.718,1206.05 967.718,1187.15 \"/>\n<polyline clip-path=\"url(#clip260)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1487.26,1206.05 1487.26,1187.15 \"/>\n<polyline clip-path=\"url(#clip260)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2006.8,1206.05 2006.8,1187.15 \"/>\n<path clip-path=\"url(#clip260)\" d=\"M448.176 1236.97 Q444.565 1236.97 442.737 1240.53 Q440.931 1244.07 440.931 1251.2 Q440.931 1258.31 442.737 1261.87 Q444.565 1265.41 448.176 1265.41 Q451.811 1265.41 453.616 1261.87 Q455.445 1258.31 455.445 1251.2 Q455.445 1244.07 453.616 1240.53 Q451.811 1236.97 448.176 1236.97 M448.176 1233.26 Q453.986 1233.26 457.042 1237.87 Q460.121 1242.45 460.121 1251.2 Q460.121 1259.93 457.042 1264.54 Q453.986 1269.12 448.176 1269.12 Q442.366 1269.12 439.288 1264.54 Q436.232 1259.93 436.232 1251.2 Q436.232 1242.45 439.288 1237.87 Q442.366 1233.26 448.176 1233.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M912.243 1264.51 L919.882 1264.51 L919.882 1238.15 L911.572 1239.81 L911.572 1235.55 L919.836 1233.89 L924.512 1233.89 L924.512 1264.51 L932.151 1264.51 L932.151 1268.45 L912.243 1268.45 L912.243 1264.51 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M951.595 1236.97 Q947.984 1236.97 946.155 1240.53 Q944.35 1244.07 944.35 1251.2 Q944.35 1258.31 946.155 1261.87 Q947.984 1265.41 951.595 1265.41 Q955.229 1265.41 957.035 1261.87 Q958.864 1258.31 958.864 1251.2 Q958.864 1244.07 957.035 1240.53 Q955.229 1236.97 951.595 1236.97 M951.595 1233.26 Q957.405 1233.26 960.461 1237.87 Q963.539 1242.45 963.539 1251.2 Q963.539 1259.93 960.461 1264.54 Q957.405 1269.12 951.595 1269.12 Q945.785 1269.12 942.706 1264.54 Q939.651 1259.93 939.651 1251.2 Q939.651 1242.45 942.706 1237.87 Q945.785 1233.26 951.595 1233.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M981.757 1236.97 Q978.146 1236.97 976.317 1240.53 Q974.512 1244.07 974.512 1251.2 Q974.512 1258.31 976.317 1261.87 Q978.146 1265.41 981.757 1265.41 Q985.391 1265.41 987.197 1261.87 Q989.025 1258.31 989.025 1251.2 Q989.025 1244.07 987.197 1240.53 Q985.391 1236.97 981.757 1236.97 M981.757 1233.26 Q987.567 1233.26 990.623 1237.87 Q993.701 1242.45 993.701 1251.2 Q993.701 1259.93 990.623 1264.54 Q987.567 1269.12 981.757 1269.12 Q975.947 1269.12 972.868 1264.54 Q969.813 1259.93 969.813 1251.2 Q969.813 1242.45 972.868 1237.87 Q975.947 1233.26 981.757 1233.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M1011.92 1236.97 Q1008.31 1236.97 1006.48 1240.53 Q1004.67 1244.07 1004.67 1251.2 Q1004.67 1258.31 1006.48 1261.87 Q1008.31 1265.41 1011.92 1265.41 Q1015.55 1265.41 1017.36 1261.87 Q1019.19 1258.31 1019.19 1251.2 Q1019.19 1244.07 1017.36 1240.53 Q1015.55 1236.97 1011.92 1236.97 M1011.92 1233.26 Q1017.73 1233.26 1020.78 1237.87 Q1023.86 1242.45 1023.86 1251.2 Q1023.86 1259.93 1020.78 1264.54 Q1017.73 1269.12 1011.92 1269.12 Q1006.11 1269.12 1003.03 1264.54 Q999.974 1259.93 999.974 1251.2 Q999.974 1242.45 1003.03 1237.87 Q1006.11 1233.26 1011.92 1233.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M1435.87 1264.51 L1452.19 1264.51 L1452.19 1268.45 L1430.25 1268.45 L1430.25 1264.51 Q1432.91 1261.76 1437.49 1257.13 Q1442.1 1252.48 1443.28 1251.13 Q1445.52 1248.61 1446.4 1246.87 Q1447.31 1245.11 1447.31 1243.42 Q1447.31 1240.67 1445.36 1238.93 Q1443.44 1237.2 1440.34 1237.2 Q1438.14 1237.2 1435.69 1237.96 Q1433.25 1238.73 1430.48 1240.28 L1430.48 1235.55 Q1433.3 1234.42 1435.75 1233.84 Q1438.21 1233.26 1440.25 1233.26 Q1445.62 1233.26 1448.81 1235.95 Q1452 1238.63 1452 1243.12 Q1452 1245.25 1451.19 1247.17 Q1450.41 1249.07 1448.3 1251.66 Q1447.72 1252.34 1444.62 1255.55 Q1441.52 1258.75 1435.87 1264.51 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M1472 1236.97 Q1468.39 1236.97 1466.56 1240.53 Q1464.76 1244.07 1464.76 1251.2 Q1464.76 1258.31 1466.56 1261.87 Q1468.39 1265.41 1472 1265.41 Q1475.64 1265.41 1477.44 1261.87 Q1479.27 1258.31 1479.27 1251.2 Q1479.27 1244.07 1477.44 1240.53 Q1475.64 1236.97 1472 1236.97 M1472 1233.26 Q1477.81 1233.26 1480.87 1237.87 Q1483.95 1242.45 1483.95 1251.2 Q1483.95 1259.93 1480.87 1264.54 Q1477.81 1269.12 1472 1269.12 Q1466.19 1269.12 1463.12 1264.54 Q1460.06 1259.93 1460.06 1251.2 Q1460.06 1242.45 1463.12 1237.87 Q1466.19 1233.26 1472 1233.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M1502.17 1236.97 Q1498.56 1236.97 1496.73 1240.53 Q1494.92 1244.07 1494.92 1251.2 Q1494.92 1258.31 1496.73 1261.87 Q1498.56 1265.41 1502.17 1265.41 Q1505.8 1265.41 1507.61 1261.87 Q1509.43 1258.31 1509.43 1251.2 Q1509.43 1244.07 1507.61 1240.53 Q1505.8 1236.97 1502.17 1236.97 M1502.17 1233.26 Q1507.98 1233.26 1511.03 1237.87 Q1514.11 1242.45 1514.11 1251.2 Q1514.11 1259.93 1511.03 1264.54 Q1507.98 1269.12 1502.17 1269.12 Q1496.36 1269.12 1493.28 1264.54 Q1490.22 1259.93 1490.22 1251.2 Q1490.22 1242.45 1493.28 1237.87 Q1496.36 1233.26 1502.17 1233.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M1532.33 1236.97 Q1528.72 1236.97 1526.89 1240.53 Q1525.08 1244.07 1525.08 1251.2 Q1525.08 1258.31 1526.89 1261.87 Q1528.72 1265.41 1532.33 1265.41 Q1535.96 1265.41 1537.77 1261.87 Q1539.6 1258.31 1539.6 1251.2 Q1539.6 1244.07 1537.77 1240.53 Q1535.96 1236.97 1532.33 1236.97 M1532.33 1233.26 Q1538.14 1233.26 1541.19 1237.87 Q1544.27 1242.45 1544.27 1251.2 Q1544.27 1259.93 1541.19 1264.54 Q1538.14 1269.12 1532.33 1269.12 Q1526.52 1269.12 1523.44 1264.54 Q1520.38 1259.93 1520.38 1251.2 Q1520.38 1242.45 1523.44 1237.87 Q1526.52 1233.26 1532.33 1233.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M1965.48 1249.81 Q1968.84 1250.53 1970.71 1252.8 Q1972.61 1255.07 1972.61 1258.4 Q1972.61 1263.52 1969.09 1266.32 Q1965.57 1269.12 1959.09 1269.12 Q1956.92 1269.12 1954.6 1268.68 Q1952.31 1268.26 1949.86 1267.41 L1949.86 1262.89 Q1951.8 1264.03 1954.12 1264.6 Q1956.43 1265.18 1958.95 1265.18 Q1963.35 1265.18 1965.64 1263.45 Q1967.96 1261.71 1967.96 1258.4 Q1967.96 1255.35 1965.81 1253.63 Q1963.68 1251.9 1959.86 1251.9 L1955.83 1251.9 L1955.83 1248.05 L1960.04 1248.05 Q1963.49 1248.05 1965.32 1246.69 Q1967.15 1245.3 1967.15 1242.71 Q1967.15 1240.04 1965.25 1238.63 Q1963.37 1237.2 1959.86 1237.2 Q1957.93 1237.2 1955.74 1237.61 Q1953.54 1238.03 1950.9 1238.91 L1950.9 1234.74 Q1953.56 1234 1955.87 1233.63 Q1958.21 1233.26 1960.27 1233.26 Q1965.6 1233.26 1968.7 1235.69 Q1971.8 1238.1 1971.8 1242.22 Q1971.8 1245.09 1970.16 1247.08 Q1968.51 1249.05 1965.48 1249.81 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M1991.48 1236.97 Q1987.87 1236.97 1986.04 1240.53 Q1984.23 1244.07 1984.23 1251.2 Q1984.23 1258.31 1986.04 1261.87 Q1987.87 1265.41 1991.48 1265.41 Q1995.11 1265.41 1996.92 1261.87 Q1998.74 1258.31 1998.74 1251.2 Q1998.74 1244.07 1996.92 1240.53 Q1995.11 1236.97 1991.48 1236.97 M1991.48 1233.26 Q1997.29 1233.26 2000.34 1237.87 Q2003.42 1242.45 2003.42 1251.2 Q2003.42 1259.93 2000.34 1264.54 Q1997.29 1269.12 1991.48 1269.12 Q1985.67 1269.12 1982.59 1264.54 Q1979.53 1259.93 1979.53 1251.2 Q1979.53 1242.45 1982.59 1237.87 Q1985.67 1233.26 1991.48 1233.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M2021.64 1236.97 Q2018.03 1236.97 2016.2 1240.53 Q2014.39 1244.07 2014.39 1251.2 Q2014.39 1258.31 2016.2 1261.87 Q2018.03 1265.41 2021.64 1265.41 Q2025.27 1265.41 2027.08 1261.87 Q2028.91 1258.31 2028.91 1251.2 Q2028.91 1244.07 2027.08 1240.53 Q2025.27 1236.97 2021.64 1236.97 M2021.64 1233.26 Q2027.45 1233.26 2030.5 1237.87 Q2033.58 1242.45 2033.58 1251.2 Q2033.58 1259.93 2030.5 1264.54 Q2027.45 1269.12 2021.64 1269.12 Q2015.83 1269.12 2012.75 1264.54 Q2009.69 1259.93 2009.69 1251.2 Q2009.69 1242.45 2012.75 1237.87 Q2015.83 1233.26 2021.64 1233.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M2051.8 1236.97 Q2048.19 1236.97 2046.36 1240.53 Q2044.55 1244.07 2044.55 1251.2 Q2044.55 1258.31 2046.36 1261.87 Q2048.19 1265.41 2051.8 1265.41 Q2055.43 1265.41 2057.24 1261.87 Q2059.07 1258.31 2059.07 1251.2 Q2059.07 1244.07 2057.24 1240.53 Q2055.43 1236.97 2051.8 1236.97 M2051.8 1233.26 Q2057.61 1233.26 2060.67 1237.87 Q2063.74 1242.45 2063.74 1251.2 Q2063.74 1259.93 2060.67 1264.54 Q2057.61 1269.12 2051.8 1269.12 Q2045.99 1269.12 2042.91 1264.54 Q2039.86 1259.93 2039.86 1251.2 Q2039.86 1242.45 2042.91 1237.87 Q2045.99 1233.26 2051.8 1233.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M1168.96 1316.31 L1168.96 1321.85 Q1166.48 1320.58 1163.8 1319.94 Q1161.13 1319.31 1158.27 1319.31 Q1153.91 1319.31 1151.71 1320.64 Q1149.55 1321.98 1149.55 1324.65 Q1149.55 1326.69 1151.1 1327.87 Q1152.66 1329.01 1157.38 1330.06 L1159.38 1330.51 Q1165.62 1331.85 1168.23 1334.3 Q1170.87 1336.72 1170.87 1341.08 Q1170.87 1346.04 1166.92 1348.94 Q1163.01 1351.83 1156.13 1351.83 Q1153.27 1351.83 1150.15 1351.26 Q1147.06 1350.72 1143.63 1349.61 L1143.63 1343.56 Q1146.87 1345.25 1150.02 1346.11 Q1153.17 1346.93 1156.26 1346.93 Q1160.4 1346.93 1162.63 1345.53 Q1164.85 1344.1 1164.85 1341.52 Q1164.85 1339.13 1163.23 1337.86 Q1161.64 1336.59 1156.2 1335.41 L1154.16 1334.93 Q1148.72 1333.79 1146.3 1331.43 Q1143.88 1329.05 1143.88 1324.91 Q1143.88 1319.88 1147.44 1317.14 Q1151.01 1314.4 1157.57 1314.4 Q1160.81 1314.4 1163.68 1314.88 Q1166.54 1315.36 1168.96 1316.31 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M1185.99 1305.14 L1185.99 1315.26 L1198.05 1315.26 L1198.05 1319.81 L1185.99 1319.81 L1185.99 1339.17 Q1185.99 1343.53 1187.17 1344.77 Q1188.38 1346.01 1192.04 1346.01 L1198.05 1346.01 L1198.05 1350.91 L1192.04 1350.91 Q1185.26 1350.91 1182.68 1348.4 Q1180.1 1345.85 1180.1 1339.17 L1180.1 1319.81 L1175.8 1319.81 L1175.8 1315.26 L1180.1 1315.26 L1180.1 1305.14 L1185.99 1305.14 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M1236.25 1331.62 L1236.25 1334.49 L1209.32 1334.49 Q1209.7 1340.54 1212.95 1343.72 Q1216.23 1346.87 1222.05 1346.87 Q1225.42 1346.87 1228.58 1346.04 Q1231.76 1345.21 1234.88 1343.56 L1234.88 1349.1 Q1231.73 1350.43 1228.42 1351.13 Q1225.11 1351.83 1221.7 1351.83 Q1213.17 1351.83 1208.17 1346.87 Q1203.21 1341.9 1203.21 1333.44 Q1203.21 1324.68 1207.92 1319.56 Q1212.66 1314.4 1220.68 1314.4 Q1227.88 1314.4 1232.04 1319.05 Q1236.25 1323.67 1236.25 1331.62 M1230.39 1329.9 Q1230.33 1325.1 1227.68 1322.23 Q1225.07 1319.37 1220.75 1319.37 Q1215.84 1319.37 1212.88 1322.14 Q1209.96 1324.91 1209.51 1329.94 L1230.39 1329.9 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M1251.52 1345.56 L1251.52 1364.47 L1245.64 1364.47 L1245.64 1315.26 L1251.52 1315.26 L1251.52 1320.67 Q1253.37 1317.49 1256.17 1315.96 Q1259 1314.4 1262.92 1314.4 Q1269.41 1314.4 1273.45 1319.56 Q1277.53 1324.72 1277.53 1333.12 Q1277.53 1341.52 1273.45 1346.68 Q1269.41 1351.83 1262.92 1351.83 Q1259 1351.83 1256.17 1350.31 Q1253.37 1348.75 1251.52 1345.56 M1271.45 1333.12 Q1271.45 1326.66 1268.78 1323 Q1266.13 1319.31 1261.49 1319.31 Q1256.84 1319.31 1254.17 1323 Q1251.52 1326.66 1251.52 1333.12 Q1251.52 1339.58 1254.17 1343.27 Q1256.84 1346.93 1261.49 1346.93 Q1266.13 1346.93 1268.78 1343.27 Q1271.45 1339.58 1271.45 1333.12 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M1309.96 1316.31 L1309.96 1321.85 Q1307.48 1320.58 1304.8 1319.94 Q1302.13 1319.31 1299.27 1319.31 Q1294.91 1319.31 1292.71 1320.64 Q1290.55 1321.98 1290.55 1324.65 Q1290.55 1326.69 1292.11 1327.87 Q1293.66 1329.01 1298.38 1330.06 L1300.38 1330.51 Q1306.62 1331.85 1309.23 1334.3 Q1311.87 1336.72 1311.87 1341.08 Q1311.87 1346.04 1307.92 1348.94 Q1304.01 1351.83 1297.13 1351.83 Q1294.27 1351.83 1291.15 1351.26 Q1288.06 1350.72 1284.63 1349.61 L1284.63 1343.56 Q1287.87 1345.25 1291.02 1346.11 Q1294.17 1346.93 1297.26 1346.93 Q1301.4 1346.93 1303.63 1345.53 Q1305.86 1344.1 1305.86 1341.52 Q1305.86 1339.13 1304.23 1337.86 Q1302.64 1336.59 1297.2 1335.41 L1295.16 1334.93 Q1289.72 1333.79 1287.3 1331.43 Q1284.88 1329.05 1284.88 1324.91 Q1284.88 1319.88 1288.45 1317.14 Q1292.01 1314.4 1298.57 1314.4 Q1301.81 1314.4 1304.68 1314.88 Q1307.54 1315.36 1309.96 1316.31 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip262)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"401.953,1189.82 2053.54,1189.82 \"/>\n<polyline clip-path=\"url(#clip262)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"401.953,987.275 2053.54,987.275 \"/>\n<polyline clip-path=\"url(#clip262)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"401.953,784.728 2053.54,784.728 \"/>\n<polyline clip-path=\"url(#clip262)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"401.953,582.182 2053.54,582.182 \"/>\n<polyline clip-path=\"url(#clip262)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"401.953,379.636 2053.54,379.636 \"/>\n<polyline clip-path=\"url(#clip260)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"401.953,1206.05 401.953,346.457 \"/>\n<polyline clip-path=\"url(#clip260)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"401.953,1189.82 420.85,1189.82 \"/>\n<polyline clip-path=\"url(#clip260)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"401.953,987.275 420.85,987.275 \"/>\n<polyline clip-path=\"url(#clip260)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"401.953,784.728 420.85,784.728 \"/>\n<polyline clip-path=\"url(#clip260)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"401.953,582.182 420.85,582.182 \"/>\n<polyline clip-path=\"url(#clip260)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"401.953,379.636 420.85,379.636 \"/>\n<path clip-path=\"url(#clip260)\" d=\"M354.008 1175.62 Q350.397 1175.62 348.569 1179.18 Q346.763 1182.73 346.763 1189.86 Q346.763 1196.96 348.569 1200.53 Q350.397 1204.07 354.008 1204.07 Q357.643 1204.07 359.448 1200.53 Q361.277 1196.96 361.277 1189.86 Q361.277 1182.73 359.448 1179.18 Q357.643 1175.62 354.008 1175.62 M354.008 1171.92 Q359.819 1171.92 362.874 1176.52 Q365.953 1181.11 365.953 1189.86 Q365.953 1198.58 362.874 1203.19 Q359.819 1207.77 354.008 1207.77 Q348.198 1207.77 345.12 1203.19 Q342.064 1198.58 342.064 1189.86 Q342.064 1181.11 345.12 1176.52 Q348.198 1171.92 354.008 1171.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M287.712 1000.62 L304.032 1000.62 L304.032 1004.55 L282.087 1004.55 L282.087 1000.62 Q284.749 997.865 289.333 993.235 Q293.939 988.583 295.12 987.24 Q297.365 984.717 298.245 982.981 Q299.148 981.221 299.148 979.532 Q299.148 976.777 297.203 975.041 Q295.282 973.305 292.18 973.305 Q289.981 973.305 287.527 974.069 Q285.097 974.833 282.319 976.384 L282.319 971.661 Q285.143 970.527 287.597 969.948 Q290.05 969.37 292.087 969.37 Q297.458 969.37 300.652 972.055 Q303.847 974.74 303.847 979.231 Q303.847 981.36 303.036 983.282 Q302.249 985.18 300.143 987.772 Q299.564 988.444 296.462 991.661 Q293.361 994.856 287.712 1000.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M313.893 969.995 L332.249 969.995 L332.249 973.93 L318.175 973.93 L318.175 982.402 Q319.194 982.055 320.212 981.893 Q321.231 981.708 322.249 981.708 Q328.036 981.708 331.416 984.879 Q334.796 988.05 334.796 993.467 Q334.796 999.045 331.323 1002.15 Q327.851 1005.23 321.532 1005.23 Q319.356 1005.23 317.087 1004.86 Q314.842 1004.49 312.435 1003.74 L312.435 999.045 Q314.518 1000.18 316.74 1000.74 Q318.962 1001.29 321.439 1001.29 Q325.444 1001.29 327.782 999.184 Q330.12 997.078 330.12 993.467 Q330.12 989.856 327.782 987.749 Q325.444 985.643 321.439 985.643 Q319.564 985.643 317.689 986.059 Q315.837 986.476 313.893 987.356 L313.893 969.995 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M354.008 973.073 Q350.397 973.073 348.569 976.638 Q346.763 980.18 346.763 987.309 Q346.763 994.416 348.569 997.981 Q350.397 1001.52 354.008 1001.52 Q357.643 1001.52 359.448 997.981 Q361.277 994.416 361.277 987.309 Q361.277 980.18 359.448 976.638 Q357.643 973.073 354.008 973.073 M354.008 969.37 Q359.819 969.37 362.874 973.976 Q365.953 978.559 365.953 987.309 Q365.953 996.036 362.874 1000.64 Q359.819 1005.23 354.008 1005.23 Q348.198 1005.23 345.12 1000.64 Q342.064 996.036 342.064 987.309 Q342.064 978.559 345.12 973.976 Q348.198 969.37 354.008 969.37 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M283.731 767.448 L302.087 767.448 L302.087 771.383 L288.013 771.383 L288.013 779.856 Q289.032 779.508 290.05 779.346 Q291.069 779.161 292.087 779.161 Q297.874 779.161 301.254 782.332 Q304.634 785.504 304.634 790.92 Q304.634 796.499 301.161 799.601 Q297.689 802.68 291.37 802.68 Q289.194 802.68 286.925 802.309 Q284.68 801.939 282.273 801.198 L282.273 796.499 Q284.356 797.633 286.578 798.189 Q288.8 798.744 291.277 798.744 Q295.282 798.744 297.62 796.638 Q299.958 794.532 299.958 790.92 Q299.958 787.309 297.62 785.203 Q295.282 783.096 291.277 783.096 Q289.402 783.096 287.527 783.513 Q285.675 783.93 283.731 784.809 L283.731 767.448 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M323.847 770.527 Q320.235 770.527 318.407 774.092 Q316.601 777.633 316.601 784.763 Q316.601 791.869 318.407 795.434 Q320.235 798.976 323.847 798.976 Q327.481 798.976 329.286 795.434 Q331.115 791.869 331.115 784.763 Q331.115 777.633 329.286 774.092 Q327.481 770.527 323.847 770.527 M323.847 766.823 Q329.657 766.823 332.712 771.43 Q335.791 776.013 335.791 784.763 Q335.791 793.49 332.712 798.096 Q329.657 802.68 323.847 802.68 Q318.036 802.68 314.958 798.096 Q311.902 793.49 311.902 784.763 Q311.902 776.013 314.958 771.43 Q318.036 766.823 323.847 766.823 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M354.008 770.527 Q350.397 770.527 348.569 774.092 Q346.763 777.633 346.763 784.763 Q346.763 791.869 348.569 795.434 Q350.397 798.976 354.008 798.976 Q357.643 798.976 359.448 795.434 Q361.277 791.869 361.277 784.763 Q361.277 777.633 359.448 774.092 Q357.643 770.527 354.008 770.527 M354.008 766.823 Q359.819 766.823 362.874 771.43 Q365.953 776.013 365.953 784.763 Q365.953 793.49 362.874 798.096 Q359.819 802.68 354.008 802.68 Q348.198 802.68 345.12 798.096 Q342.064 793.49 342.064 784.763 Q342.064 776.013 345.12 771.43 Q348.198 766.823 354.008 766.823 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M282.504 564.902 L304.726 564.902 L304.726 566.893 L292.18 599.462 L287.296 599.462 L299.101 568.837 L282.504 568.837 L282.504 564.902 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M313.893 564.902 L332.249 564.902 L332.249 568.837 L318.175 568.837 L318.175 577.309 Q319.194 576.962 320.212 576.8 Q321.231 576.615 322.249 576.615 Q328.036 576.615 331.416 579.786 Q334.796 582.957 334.796 588.374 Q334.796 593.953 331.323 597.055 Q327.851 600.133 321.532 600.133 Q319.356 600.133 317.087 599.763 Q314.842 599.392 312.435 598.652 L312.435 593.953 Q314.518 595.087 316.74 595.643 Q318.962 596.198 321.439 596.198 Q325.444 596.198 327.782 594.092 Q330.12 591.985 330.12 588.374 Q330.12 584.763 327.782 582.656 Q325.444 580.55 321.439 580.55 Q319.564 580.55 317.689 580.967 Q315.837 581.383 313.893 582.263 L313.893 564.902 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M354.008 567.981 Q350.397 567.981 348.569 571.545 Q346.763 575.087 346.763 582.217 Q346.763 589.323 348.569 592.888 Q350.397 596.43 354.008 596.43 Q357.643 596.43 359.448 592.888 Q361.277 589.323 361.277 582.217 Q361.277 575.087 359.448 571.545 Q357.643 567.981 354.008 567.981 M354.008 564.277 Q359.819 564.277 362.874 568.883 Q365.953 573.467 365.953 582.217 Q365.953 590.943 362.874 595.55 Q359.819 600.133 354.008 600.133 Q348.198 600.133 345.12 595.55 Q342.064 590.943 342.064 582.217 Q342.064 573.467 345.12 568.883 Q348.198 564.277 354.008 564.277 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M254.333 392.98 L261.972 392.98 L261.972 366.615 L253.662 368.281 L253.662 364.022 L261.926 362.356 L266.601 362.356 L266.601 392.98 L274.24 392.98 L274.24 396.916 L254.333 396.916 L254.333 392.98 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M293.685 365.434 Q290.074 365.434 288.245 368.999 Q286.439 372.541 286.439 379.67 Q286.439 386.777 288.245 390.342 Q290.074 393.883 293.685 393.883 Q297.319 393.883 299.124 390.342 Q300.953 386.777 300.953 379.67 Q300.953 372.541 299.124 368.999 Q297.319 365.434 293.685 365.434 M293.685 361.731 Q299.495 361.731 302.55 366.337 Q305.629 370.92 305.629 379.67 Q305.629 388.397 302.55 393.004 Q299.495 397.587 293.685 397.587 Q287.874 397.587 284.796 393.004 Q281.74 388.397 281.74 379.67 Q281.74 370.92 284.796 366.337 Q287.874 361.731 293.685 361.731 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M323.847 365.434 Q320.235 365.434 318.407 368.999 Q316.601 372.541 316.601 379.67 Q316.601 386.777 318.407 390.342 Q320.235 393.883 323.847 393.883 Q327.481 393.883 329.286 390.342 Q331.115 386.777 331.115 379.67 Q331.115 372.541 329.286 368.999 Q327.481 365.434 323.847 365.434 M323.847 361.731 Q329.657 361.731 332.712 366.337 Q335.791 370.92 335.791 379.67 Q335.791 388.397 332.712 393.004 Q329.657 397.587 323.847 397.587 Q318.036 397.587 314.958 393.004 Q311.902 388.397 311.902 379.67 Q311.902 370.92 314.958 366.337 Q318.036 361.731 323.847 361.731 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M354.008 365.434 Q350.397 365.434 348.569 368.999 Q346.763 372.541 346.763 379.67 Q346.763 386.777 348.569 390.342 Q350.397 393.883 354.008 393.883 Q357.643 393.883 359.448 390.342 Q361.277 386.777 361.277 379.67 Q361.277 372.541 359.448 368.999 Q357.643 365.434 354.008 365.434 M354.008 361.731 Q359.819 361.731 362.874 366.337 Q365.953 370.92 365.953 379.67 Q365.953 388.397 362.874 393.004 Q359.819 397.587 354.008 397.587 Q348.198 397.587 345.12 393.004 Q342.064 388.397 342.064 379.67 Q342.064 370.92 345.12 366.337 Q348.198 361.731 354.008 361.731 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M181.89 825.841 L203.406 825.841 L203.406 831.697 L182.081 831.697 Q177.02 831.697 174.505 833.671 Q171.991 835.644 171.991 839.591 Q171.991 844.333 175.015 847.07 Q178.038 849.808 183.258 849.808 L203.406 849.808 L203.406 855.696 L167.758 855.696 L167.758 849.808 L173.296 849.808 Q170.081 847.707 168.49 844.874 Q166.898 842.01 166.898 838.286 Q166.898 832.143 170.718 828.992 Q174.505 825.841 181.89 825.841 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M171.864 800.346 Q171.864 805.057 175.556 807.794 Q179.216 810.531 185.614 810.531 Q192.011 810.531 195.703 807.826 Q199.363 805.089 199.363 800.346 Q199.363 795.667 195.671 792.93 Q191.979 790.193 185.614 790.193 Q179.28 790.193 175.588 792.93 Q171.864 795.667 171.864 800.346 M166.898 800.346 Q166.898 792.707 171.864 788.347 Q176.829 783.986 185.614 783.986 Q194.366 783.986 199.363 788.347 Q204.329 792.707 204.329 800.346 Q204.329 808.017 199.363 812.377 Q194.366 816.706 185.614 816.706 Q176.829 816.706 171.864 812.377 Q166.898 808.017 166.898 800.346 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M173.232 753.622 Q172.659 754.609 172.405 755.786 Q172.118 756.932 172.118 758.333 Q172.118 763.298 175.365 765.971 Q178.579 768.613 184.627 768.613 L203.406 768.613 L203.406 774.501 L167.758 774.501 L167.758 768.613 L173.296 768.613 Q170.049 766.767 168.49 763.807 Q166.898 760.847 166.898 756.614 Q166.898 756.009 166.994 755.277 Q167.058 754.545 167.217 753.654 L173.232 753.622 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M174.601 720.87 Q170.654 718.674 168.776 715.619 Q166.898 712.563 166.898 708.425 Q166.898 702.855 170.813 699.832 Q174.696 696.808 181.89 696.808 L203.406 696.808 L203.406 702.696 L182.081 702.696 Q176.956 702.696 174.474 704.51 Q171.991 706.325 171.991 710.049 Q171.991 714.6 175.015 717.242 Q178.038 719.884 183.258 719.884 L203.406 719.884 L203.406 725.772 L182.081 725.772 Q176.924 725.772 174.474 727.586 Q171.991 729.4 171.991 733.188 Q171.991 737.676 175.046 740.318 Q178.07 742.959 183.258 742.959 L203.406 742.959 L203.406 748.848 L167.758 748.848 L167.758 742.959 L173.296 742.959 Q170.018 740.954 168.458 738.153 Q166.898 735.352 166.898 731.501 Q166.898 727.618 168.872 724.913 Q170.845 722.175 174.601 720.87 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip262)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1249.64,379.636 3705.13,379.636 \"/>\n<polyline clip-path=\"url(#clip262)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"448.696,1181.72 449.215,1180.85 449.735,1180.77 450.255,1180.66 450.774,1180.48 451.294,1180.22 451.813,1179.12 452.333,1178.8 452.852,1178.42 453.372,1178 453.891,1177.5 454.411,1176.14 454.93,1174.75 455.45,1174.14 455.969,1173.45 456.489,1172.68 457.009,1171.82 457.528,1170.88 458.048,1169.86 458.567,1168.75 459.087,1167.54 459.606,1166.24 460.126,1164.03 460.645,1161.71 461.165,1160.13 461.684,1158.42 462.204,1156.6 462.723,1154.65 463.243,1152.54 463.763,1150.3 464.282,1147.94 464.802,1145.42 465.321,1142.7 465.841,1138.27 466.36,1135.27 466.88,1131.24 467.399,1127.85 467.919,1123.5 468.438,1118.99 468.958,1114.28 469.478,1109.22 469.997,1104.88 470.517,1100.3 471.036,1095.54 471.556,1090.6 472.075,1085.54 472.595,1080.31 473.114,1070.8 473.634,1065.23 474.153,1059.5 474.673,1052.77 475.192,1045.12 475.712,1038.01 476.232,1030.88 476.751,1023.56 477.271,1016.12 477.79,1008.61 478.31,1001.71 478.829,993.125 479.349,984.547 479.868,976.597 480.388,968.641 480.907,960.601 481.427,953.333 481.947,945.891 482.466,937.594 482.986,928.361 483.505,918.383 484.025,910.15 484.544,900.976 485.064,892.493 485.583,882.441 486.103,873.358 486.622,865.065 487.142,854.372 487.661,845.442 488.181,836.674 488.701,827.915 489.22,819.296 489.74,809.096 490.259,802.189 490.779,793.663 491.298,785.967 491.818,776.762 492.337,767.578 492.857,759.241 493.376,752.057 493.896,746.416 494.416,739.946 494.935,731.732 495.455,723.768 495.974,716.617 496.494,709.513 497.013,700.838 497.533,692.405 498.052,684.985 498.572,677.558 499.091,671.111 499.611,665.58 500.13,659.474 500.65,654.139 501.17,646.419 501.689,639.634 502.209,634.584 502.728,628.655 503.248,623.715 503.767,618.031 504.287,611.346 504.806,606.665 505.326,601.931 505.845,596.539 506.365,590.35 506.885,585.187 507.404,580.825 507.924,575.657 508.443,569.918 508.963,565.987 509.482,559.643 510.002,555.878 510.521,551.416 511.041,548.588 511.56,543.469 512.08,539.901 512.599,534.171 513.119,529.361 513.639,526.463 514.158,522.583 514.678,519.678 515.197,515.958 515.717,513.212 516.236,510.537 516.756,507.819 517.275,503.453 517.795,500.111 518.314,498.476 518.834,495.932 519.353,493.525 519.873,488.771 520.393,486.478 520.912,484.19 521.432,481.151 521.951,476.67 522.471,474.122 522.99,469.938 523.51,468.279 524.029,465.956 524.549,462.857 525.068,462.311 525.588,459.296 526.108,458.622 526.627,458.183 527.147,457.555 527.666,455.284 528.186,453.097 528.705,451.782 529.225,449.611 529.744,445.968 530.264,444.11 530.783,442.48 531.303,440.712 531.822,438.08 532.342,437.106 532.862,435.597 533.381,433.991 533.901,433.112 534.42,429.265 534.94,427.993 535.459,427.563 535.979,427.045 536.498,426.708 537.018,426.167 537.537,424.822 538.057,424.308 538.577,423.833 539.096,424.099 539.616,422.681 540.135,422.064 540.655,420.897 541.174,419.652 541.694,420.791 542.213,419.259 542.733,418.059 543.252,417.496 543.772,416.272 544.291,415.663 544.811,412.731 545.331,411.695 545.85,410.604 546.37,410.398 546.889,410.175 547.409,409.18 547.928,407.448 548.448,407.497 548.967,406.68 549.487,405.145 550.006,403.702 550.526,403.736 551.046,403.805 551.565,403.96 552.085,404.027 552.604,402.472 553.124,403.424 553.643,401.785 554.163,401.858 554.682,401.882 555.202,401.759 555.721,400.921 556.241,401.066 556.76,400.295 557.28,398.755 557.8,400.731 558.319,398.166 558.839,397.807 559.358,397.222 559.878,397.571 560.397,397.722 560.917,396.85 561.436,397.01 561.956,398.762 562.475,398.611 562.995,396.289 563.515,396.385 564.034,394.101 564.554,394.395 565.073,396.387 565.593,396.553 566.112,395.88 566.632,396.812 567.151,396.051 567.671,395.36 568.19,395.355 568.71,394.654 569.229,394.789 569.749,396.285 570.269,397.899 570.788,398.258 571.308,398.989 571.827,397.838 572.347,397.768 572.866,399.208 573.386,398.824 573.905,397.714 574.425,397.484 574.944,394.87 575.464,394.588 575.983,395.528 576.503,394.783 577.023,392.986 577.542,392.855 578.062,392.006 578.581,391.26 579.101,391.971 579.62,391.899 580.14,392.721 580.659,390.967 581.179,390.958 581.698,391.816 582.218,393.235 582.738,393.257 583.257,393.165 583.777,393.084 584.296,394.558 584.816,394.453 585.335,393.34 585.855,392.326 586.374,391.258 586.894,391.05 587.413,390.922 587.933,390.755 588.452,392.257 588.972,391.265 589.492,390.476 590.011,389.54 590.531,387.036 591.05,387.316 591.57,387.286 592.089,387.341 592.609,387.389 593.128,385.737 593.648,385.902 594.167,386.184 594.687,385.652 595.207,385.751 595.726,385.163 596.246,384.458 596.765,382.936 597.285,383.926 597.804,383.39 598.324,383.789 598.843,384.222 599.363,382.981 599.882,384.243 600.402,384.5 600.921,384.666 601.441,384.962 601.961,383.687 602.48,383.981 603,384.468 603.519,384.717 604.039,382.595 604.558,383.528 605.078,383.869 605.597,384.045 606.117,384.19 606.636,384.373 607.156,384.651 607.676,384.787 608.195,385.071 608.715,387.001 609.234,386.23 609.754,384.841 610.273,384.28 610.793,384.475 611.312,385.587 611.832,384.179 612.351,384.489 612.871,385.441 613.39,385.603 613.91,386.544 614.43,384.922 614.949,381.183 615.469,382.616 615.988,383.02 616.508,381.595 617.027,382.7 617.547,383.809 618.066,382.979 618.586,382.41 619.105,382.758 619.625,383.796 620.145,383.873 620.664,384.065 621.184,382.661 621.703,381.456 622.223,381.033 622.742,380.639 623.262,381.047 623.781,380.504 624.301,379.407 624.82,383.156 625.34,384.202 625.859,383.554 626.379,383.714 626.899,384.516 627.418,384.686 627.938,386.399 628.457,386.56 628.977,387.356 629.496,386.496 630.016,385.009 630.535,382.808 631.055,383.864 631.574,383.14 632.094,383.399 632.613,382.18 633.133,382.369 633.653,383.438 634.172,382.774 634.692,383.923 635.211,383.232 635.731,383.438 636.25,385.288 636.77,386.133 637.289,386.291 637.809,386.985 638.328,386.839 638.848,386.634 639.368,386.58 639.887,385.621 640.407,384.841 640.926,384.818 641.446,384.941 641.965,386.534 642.485,383.175 643.004,383.388 643.524,383.496 644.043,382.057 644.563,383.065 645.082,383.33 645.602,381.004 646.122,381.371 646.641,381.43 647.161,381.768 647.68,381.913 648.2,380.709 648.719,380.913 649.239,381.486 649.758,380.882 650.278,380.249 650.797,379.879 651.317,380.07 651.837,378.948 652.356,379.403 652.876,379.86 653.395,379.462 653.915,378.215 654.434,379.513 654.954,381.625 655.473,382.602 655.993,384.385 656.512,384.456 657.032,385.438 657.551,385.386 658.071,385.25 658.591,386.144 659.11,386.136 659.63,383.538 660.149,382.822 660.669,383.706 661.188,382.138 661.708,384.001 662.227,384.777 662.747,384.061 663.266,382.445 663.786,382.741 664.306,383.526 664.825,382.826 665.345,382.84 665.864,383.717 666.384,382.94 666.903,383.843 667.423,383.841 667.942,383.773 668.462,384.602 668.981,384.461 669.501,384.494 670.02,385.403 670.54,384.412 671.06,384.515 671.579,384.382 672.099,381.954 672.618,382.136 673.138,382.066 673.657,382.129 674.177,381.433 674.696,382.516 675.216,382.656 675.735,384.274 676.255,385.032 676.775,385.522 677.294,386.964 677.814,386.668 678.333,386.485 678.853,386.116 679.372,385.892 679.892,384.996 680.411,385.691 680.931,385.508 681.45,384.487 681.97,382.721 682.489,382.645 683.009,382.579 683.529,382.623 684.048,381.814 684.568,382.631 685.087,382.582 685.607,384.935 686.126,383.954 686.646,384.604 687.165,385.996 687.685,385.653 688.204,383.756 688.724,384.471 689.243,384.18 689.763,383.871 690.283,382.141 690.802,380.394 691.322,381.051 691.841,381.838 692.361,381.68 692.88,382.414 693.4,382.344 693.919,383.019 694.439,382.903 694.958,383.736 695.478,384.343 695.998,383.181 696.517,383.717 697.037,381.925 697.556,381.192 698.076,379.676 698.595,380.019 699.115,380.2 699.634,381.856 700.154,380.252 700.673,379.697 701.193,379.027 701.712,379.14 702.232,379.424 702.752,379.473 703.271,379.636 703.791,382.055 704.31,382.182 704.83,382.139 705.349,382.91 705.869,383.716 706.388,382.752 706.908,381.097 707.427,380.159 707.947,381.886 708.467,380.948 708.986,381.901 709.506,381.094 710.025,381.159 710.545,382.797 711.064,381.018 711.584,380.143 712.103,379.397 712.623,379.556 713.142,378.877 713.662,379.168 714.181,381.719 714.701,378.586 715.221,377.183 715.74,376.508 716.26,376.154 716.779,377.467 717.299,377.78 717.818,377.267 718.338,377.732 718.857,374.836 719.377,375.287 719.896,375.77 720.416,373.824 720.936,372.718 721.455,374.983 721.975,375.521 722.494,375.905 723.014,378.054 723.533,378.495 724.053,379.37 724.572,380.488 725.092,380.66 725.611,380.722 726.131,379.959 726.65,382.518 727.17,380.843 727.69,380.98 728.209,381.001 728.729,381.866 729.248,381.321 729.768,383.182 730.287,384.016 730.807,383.891 731.326,384.508 731.846,384.259 732.365,383.985 732.885,382.041 733.405,382.91 733.924,382.902 734.444,382.105 734.963,382.007 735.483,381.273 736.002,379.647 736.522,382.46 737.041,380.793 737.561,381.712 738.08,381.666 738.6,383.242 739.119,383.861 739.639,382.938 740.159,381.973 740.678,380.156 741.198,380.13 741.717,379.571 742.237,380.43 742.756,381.313 743.276,381.524 743.795,382.294 744.315,384.691 744.834,384.326 745.354,384.114 745.873,383.072 746.393,382.978 746.913,381.833 747.432,379.46 747.952,380.289 748.471,380.291 748.991,380.165 749.51,379.411 750.03,378.935 750.549,380.806 751.069,381.704 751.588,383.269 752.108,383.064 752.628,382.776 753.147,383.39 753.667,383.212 754.186,382.409 754.706,382.408 755.225,382.253 755.745,382.204 756.264,381.223 756.784,379.631 757.303,378.09 757.823,378.368 758.342,378.574 758.862,378.769 759.382,379.822 759.901,379.116 760.421,379.252 760.94,379.481 761.46,381.177 761.979,381.195 762.499,381.243 763.018,381.15 763.538,381.082 764.057,379.607 764.577,381.288 765.097,381.913 765.616,381.883 766.136,381.828 766.655,381.018 767.175,383.337 767.694,384.829 768.214,382.825 768.733,383.489 769.253,383.434 769.772,381.149 770.292,380.276 770.811,380.208 771.331,377.711 771.851,377.962 772.37,378.814 772.89,379.88 773.409,378.959 773.929,379.256 774.448,379.286 774.968,380.12 775.487,378.638 776.007,378.774 776.526,378.894 777.046,378.953 777.566,378.147 778.085,376.561 778.605,377.369 779.124,375.978 779.644,375.388 780.163,374.285 780.683,374.84 781.202,376.762 781.722,376.141 782.241,378.828 782.761,381.306 783.28,381.349 783.8,382.2 784.32,381.853 784.839,380.871 785.359,380.936 785.878,381.83 786.398,383.386 786.917,382.493 787.437,381.459 787.956,382.233 788.476,382.197 788.995,381.21 789.515,382.005 790.035,381.05 790.554,381.853 791.074,383.472 791.593,383.349 792.113,383.648 792.632,383.576 793.152,383.646 793.671,383.365 794.191,384.006 794.71,383.632 795.23,386.011 795.749,384.695 796.269,383.565 796.789,382.642 797.308,383.249 797.828,383.229 798.347,383.841 798.867,383.633 799.386,382.676 799.906,383.304 800.425,382.021 800.945,382.599 801.464,384.874 801.984,384.481 802.503,385.71 803.023,384.586 803.543,384.184 804.062,382.85 804.582,383.545 805.101,382.597 805.621,382.374 806.14,381.27 806.66,379.665 807.179,381.225 807.699,381.995 808.218,382.59 808.738,382.384 809.258,382.036 809.777,380.173 810.297,379.956 810.816,379.853 811.336,379.812 811.855,378.971 812.375,378.279 812.894,377.589 813.414,375.271 813.933,375.553 814.453,375.888 814.972,375.341 815.492,377.177 816.012,376.682 816.531,375.946 817.051,377.076 817.57,378.127 818.09,377.246 818.609,376.384 819.129,375.805 819.648,377.603 820.168,379.567 820.687,379.596 821.207,377.962 821.727,379.61 822.246,378.834 822.766,377.33 823.285,378.247 823.805,377.612 824.324,377.825 824.844,378.752 825.363,378.979 825.883,378.287 826.402,379.157 826.922,380.913 827.441,381.602 827.961,383.011 828.481,382.659 829,380.936 829.52,381.616 830.039,380.003 830.559,379.251 831.078,379.307 831.598,380.286 832.117,382.76 832.637,380.128 833.156,380.15 833.676,379.286 834.196,379.498 834.715,378.01 835.235,378.175 835.754,378.259 836.274,378.435 836.793,380.876 837.313,379.071 837.832,379.249 838.352,380.933 838.871,379.407 839.391,379.481 839.91,379.491 840.43,381.102 840.95,381.029 841.469,380.194 841.989,379.322 842.508,380.292 843.028,381.029 843.547,379.354 844.067,377.742 844.586,379.498 845.106,377.913 845.625,380.498 846.145,380.437 846.665,379.549 847.184,381.116 847.704,381.021 848.223,380.948 848.743,381.867 849.262,381.713 849.782,379.986 850.301,379.014 850.821,377.577 851.34,380.303 851.86,380.325 852.379,380.296 852.899,380.247 853.419,380.352 853.938,381.948 854.458,380.178 854.977,380.255 855.497,379.591 856.016,378.818 856.536,379.607 857.055,378.943 857.575,378.094 858.094,377.189 858.614,377.349 859.133,378.266 859.653,377.543 860.173,377.79 860.692,376.341 861.212,377.281 861.731,377.532 862.251,376.968 862.77,377.256 863.29,378.176 863.809,377.394 864.329,376.102 864.848,375.61 865.368,376.954 865.888,376.422 866.407,376.798 866.927,377.947 867.446,374.97 867.966,375.297 868.485,376.555 869.005,377.648 869.524,378.751 870.044,383.037 870.563,381.113 871.083,381.757 871.602,380.943 872.122,380.967 872.642,381.745 873.161,381.914 873.681,381.728 874.2,380.806 874.72,382.475 875.239,379.947 875.759,380.012 876.278,379.432 876.798,380.434 877.317,379.657 877.837,379.452 878.357,381.302 878.876,381.324 879.396,382.14 879.915,381.169 880.435,380.118 880.954,381.089 881.474,381.708 881.993,383.22 882.513,382.968 883.032,385.107 883.552,383.941 884.071,384.457 884.591,384.223 885.111,382.476 885.63,383.266 886.15,382.265 886.669,382.147 887.189,382.151 887.708,381.003 888.228,382.694 888.747,381.758 889.267,382.399 889.786,382.989 890.306,382.899 890.826,381.223 891.345,381.029 891.865,380.923 892.384,381.694 892.904,379.889 893.423,379.184 893.943,378.37 894.462,378.54 894.982,378.619 895.501,377.947 896.021,378.724 896.54,380.333 897.06,379.622 897.58,378.017 898.099,377.346 898.619,378.17 899.138,378.245 899.658,378.568 900.177,380.247 900.697,379.629 901.216,378.138 901.736,378.526 902.255,378.608 902.775,380.338 903.295,380.429 903.814,380.478 904.334,380.523 904.853,381.329 905.373,381.208 905.892,382.758 906.412,381.598 906.931,381.582 907.451,381.399 907.97,381.236 908.49,382.114 909.009,381.88 909.529,381.711 910.049,380.729 910.568,378.076 911.088,379.022 911.607,378.328 912.127,379.967 912.646,379.948 913.166,379.799 913.685,378.999 914.205,379.09 914.724,381.614 915.244,377.857 915.763,379.585 916.283,378.087 916.803,376.662 917.322,376.311 917.842,374.985 918.361,374.508 918.881,373.318 919.4,373.709 919.92,374.041 920.439,375.237 920.959,374.829 921.478,374.509 921.998,375.611 922.518,376.937 923.037,378.686 923.557,378.84 924.076,378.973 924.596,380.557 925.115,379.693 925.635,376.442 926.154,375.269 926.674,374.696 927.193,375.822 927.713,375.287 928.232,376.368 928.752,375.923 929.272,375.4 929.791,375.862 930.311,376.288 930.83,379.007 931.35,378.223 931.869,377.576 932.389,376.17 932.908,375.621 933.428,375.934 933.947,377.108 934.467,379.126 934.987,377.644 935.506,377.848 936.026,378.809 936.545,377.532 937.065,377.06 937.584,378.219 938.104,378.418 938.623,379.423 939.143,380.367 939.662,379.825 940.182,381.391 940.701,382.205 941.221,382.208 941.741,383.055 942.26,382.972 942.78,384.552 943.299,384.294 943.819,383.269 944.338,384.737 944.858,385.234 945.377,385.149 945.897,385.712 946.416,383.921 946.936,385.161 947.456,384.983 947.975,386.059 948.495,387.345 949.014,386.07 949.534,386.443 950.053,385.231 950.573,384.102 951.092,383.925 951.612,385.321 952.131,386.462 952.651,385.991 953.17,387.237 953.69,384.258 954.21,382.97 954.729,383.66 955.249,382.517 955.768,383.159 956.288,382.125 956.807,382.727 957.327,382.635 957.846,383.057 958.366,383.474 958.885,381.54 959.405,381.423 959.925,380.451 960.444,379.493 960.964,380.206 961.483,381.763 962.003,381.376 962.522,380.432 963.042,381.697 963.561,381.342 964.081,381.095 964.6,380.977 965.12,380.744 965.639,380.039 966.159,380.053 966.679,380.688 967.198,379.892 967.718,381.224 968.237,381.879 968.757,380.226 969.276,379.385 969.796,376.992 970.315,377.957 970.835,377.338 971.354,379.126 971.874,378.931 972.393,379.652 972.913,379.466 973.433,379.492 973.952,377.006 974.472,377.026 974.991,377.835 975.511,377.744 976.03,376.285 976.55,376.504 977.069,375.058 977.589,375.27 978.108,374.765 978.628,374.974 979.148,375.468 979.667,375.693 980.187,377.619 980.706,377.65 981.226,376.23 981.745,376.527 982.265,376.796 982.784,376.93 983.304,377.124 983.823,377.281 984.343,379.257 984.862,381.815 985.382,381.828 985.902,381.646 986.421,381.612 986.941,380.756 987.46,379.816 987.98,381.58 988.499,381.518 989.019,382.181 989.538,382.861 990.058,382.7 990.577,382.372 991.097,382.167 991.617,382.811 992.136,382.481 992.656,384.582 993.175,383.481 993.695,383.119 994.214,382.728 994.734,381.678 995.253,380.45 995.773,377.771 996.292,377.21 996.812,376.648 997.331,375.979 997.851,376.203 998.371,376.333 998.89,376.563 999.41,378.317 999.929,378.405 1000.45,379.398 1000.97,379.413 1001.49,379.419 1002.01,378.643 1002.53,377.861 1003.05,377.145 1003.57,376.577 1004.09,377.418 1004.61,379.171 1005.12,378.429 1005.64,378.518 1006.16,379.417 1006.68,380.256 1007.2,380.286 1007.72,378.799 1008.24,379.085 1008.76,379.131 1009.28,379.187 1009.8,378.429 1010.32,379.496 1010.84,380.381 1011.36,379.662 1011.88,380.496 1012.4,381.186 1012.92,380.967 1013.44,380.124 1013.96,381.503 1014.48,382.299 1015,381.257 1015.52,382.839 1016.03,383.583 1016.55,383.187 1017.07,383.735 1017.59,383.388 1018.11,383.134 1018.63,382.708 1019.15,384.214 1019.67,383.895 1020.19,384.35 1020.71,384.868 1021.23,382.675 1021.75,381.612 1022.27,381.496 1022.79,380.581 1023.31,380.487 1023.83,378.735 1024.35,379.69 1024.87,379.596 1025.39,379.513 1025.91,381.584 1026.43,382.198 1026.95,381.095 1027.46,380.874 1027.98,381.607 1028.5,380.624 1029.02,382.22 1029.54,382.642 1030.06,383.268 1030.58,383.114 1031.1,381.899 1031.62,381.774 1032.14,381.53 1032.66,382.149 1033.18,381.697 1033.7,380.728 1034.22,380.572 1034.74,381.996 1035.26,380.133 1035.78,380.019 1036.3,379.694 1036.82,379.525 1037.34,378.726 1037.86,376.428 1038.38,373.45 1038.89,372.937 1039.41,372.648 1039.93,373.861 1040.45,374.286 1040.97,374.7 1041.49,374.178 1042.01,373.767 1042.53,373.531 1043.05,373.797 1043.57,374.978 1044.09,375.207 1044.61,376.32 1045.13,376.68 1045.65,373.745 1046.17,374.229 1046.69,374.665 1047.21,375.113 1047.73,376.965 1048.25,377.146 1048.77,375.819 1049.29,374.625 1049.81,375.101 1050.32,375.563 1050.84,375.138 1051.36,374.502 1051.88,374.871 1052.4,375.228 1052.92,377.117 1053.44,376.629 1053.96,376.149 1054.48,377.211 1055,377.513 1055.52,379.424 1056.04,379.625 1056.56,382.114 1057.08,381.432 1057.6,382.244 1058.12,383.971 1058.64,382.11 1059.16,381.246 1059.68,380.391 1060.2,380.503 1060.72,380.521 1061.24,380.504 1061.75,381.387 1062.27,382.661 1062.79,383.215 1063.31,383.781 1063.83,385.3 1064.35,384.987 1064.87,384.531 1065.39,384.148 1065.91,382.895 1066.43,382.911 1066.95,383.286 1067.47,383.116 1067.99,382.922 1068.51,381.959 1069.03,381.86 1069.55,382.507 1070.07,381.456 1070.59,382.939 1071.11,383.516 1071.63,382.34 1072.15,382.211 1072.66,380.469 1073.18,377.278 1073.7,375.889 1074.22,378.525 1074.74,378.523 1075.26,379.325 1075.78,373.766 1076.3,372.665 1076.82,373.848 1077.34,375.029 1077.86,375.32 1078.38,374.771 1078.9,375.134 1079.42,374.016 1079.94,376.12 1080.46,377.132 1080.98,376.531 1081.5,376.778 1082.02,377.025 1082.54,378.248 1083.06,378.304 1083.58,379.148 1084.09,379.281 1084.61,380.092 1085.13,380.868 1085.65,380.916 1086.17,383.379 1086.69,383.149 1087.21,383.101 1087.73,382.892 1088.25,381.936 1088.77,382.656 1089.29,383.365 1089.81,383.121 1090.33,383.688 1090.85,384.142 1091.37,383.024 1091.89,385.174 1092.41,384.007 1092.93,380.554 1093.45,381.242 1093.97,381.099 1094.49,381.177 1095.01,380.478 1095.52,380.591 1096.04,380.602 1096.56,382.138 1097.08,382.859 1097.6,382.656 1098.12,381.684 1098.64,379.842 1099.16,380.564 1099.68,381.293 1100.2,380.42 1100.72,381.319 1101.24,382.976 1101.76,383.438 1102.28,383.148 1102.8,382.086 1103.32,380.238 1103.84,380.156 1104.36,379.944 1104.88,379.003 1105.4,378.184 1105.92,377.549 1106.44,378.538 1106.95,378.7 1107.47,379.477 1107.99,381.006 1108.51,380.787 1109.03,379.229 1109.55,380.225 1110.07,378.705 1110.59,377.337 1111.11,376.785 1111.63,377.018 1112.15,376.469 1112.67,375.092 1113.19,373.087 1113.71,374.194 1114.23,374.55 1114.75,375.613 1115.27,374.191 1115.79,376.099 1116.31,377.085 1116.83,379.053 1117.35,378.994 1117.87,379.918 1118.38,379.103 1118.9,380.799 1119.42,379.046 1119.94,378.98 1120.46,377.442 1120.98,379.884 1121.5,379.148 1122.02,380.158 1122.54,379.5 1123.06,377.051 1123.58,378.918 1124.1,378.003 1124.62,378.948 1125.14,379.8 1125.66,379.178 1126.18,379.173 1126.7,380.164 1127.22,379.377 1127.74,377.882 1128.26,375.662 1128.78,375.952 1129.29,374.779 1129.81,375.19 1130.33,375.476 1130.85,375.032 1131.37,375.355 1131.89,375.817 1132.41,374.401 1132.93,374.093 1133.45,374.601 1133.97,373.369 1134.49,372.358 1135.01,375.517 1135.53,375.243 1136.05,377.228 1136.57,377.389 1137.09,379.294 1137.61,379.271 1138.13,381.797 1138.65,381.74 1139.17,381.725 1139.69,382.554 1140.21,381.629 1140.72,382.274 1141.24,382.153 1141.76,385.333 1142.28,386.746 1142.8,383.866 1143.32,382.856 1143.84,382.725 1144.36,382.541 1144.88,381.67 1145.4,382.573 1145.92,382.916 1146.44,382.888 1146.96,383.541 1147.48,380.948 1148,380.798 1148.52,380.669 1149.04,382.295 1149.56,382.269 1150.08,382.973 1150.6,382.172 1151.12,383.648 1151.64,384.868 1152.15,384.541 1152.67,384.292 1153.19,383.078 1153.71,382.956 1154.23,382.622 1154.75,382.313 1155.27,383.808 1155.79,382.639 1156.31,380.835 1156.83,379.816 1157.35,380.616 1157.87,380.653 1158.39,380.553 1158.91,380.535 1159.43,379.68 1159.95,381.31 1160.47,381.161 1160.99,381.917 1161.51,383.319 1162.03,383.014 1162.55,382.825 1163.07,382.562 1163.58,382.231 1164.1,382.048 1164.62,381.763 1165.14,379.277 1165.66,379.097 1166.18,378.238 1166.7,378.177 1167.22,378.227 1167.74,378.246 1168.26,378.366 1168.78,376.853 1169.3,376.971 1169.82,377.05 1170.34,378.095 1170.86,377.468 1171.38,376.861 1171.9,377.012 1172.42,376.538 1172.94,377.362 1173.46,377.447 1173.98,377.592 1174.5,377.149 1175.01,377.16 1175.53,377.392 1176.05,377.477 1176.57,377.66 1177.09,375.471 1177.61,376.542 1178.13,376.008 1178.65,375.497 1179.17,378.169 1179.69,376.617 1180.21,373.579 1180.73,374.771 1181.25,375.367 1181.77,375.785 1182.29,375.253 1182.81,375.636 1183.33,377.56 1183.85,378.575 1184.37,377.033 1184.89,378.186 1185.41,379.136 1185.92,379.181 1186.44,379.346 1186.96,381.057 1187.48,380.112 1188,379.313 1188.52,382.642 1189.04,381.726 1189.56,379.353 1190.08,378.736 1190.6,378.185 1191.12,380.781 1191.64,380.845 1192.16,380.857 1192.68,381.828 1193.2,381.789 1193.72,383.507 1194.24,384.953 1194.76,384.016 1195.28,383.611 1195.8,383.312 1196.32,382.945 1196.84,379.63 1197.35,380.706 1197.87,382.232 1198.39,381.278 1198.91,382.162 1199.43,382.032 1199.95,382.706 1200.47,380.855 1200.99,380.641 1201.51,381.364 1202.03,381.968 1202.55,383.589 1203.07,384.126 1203.59,383.667 1204.11,383.195 1204.63,381.247 1205.15,380.248 1205.67,381.038 1206.19,380.844 1206.71,379.892 1207.23,379.146 1207.75,380.753 1208.27,379.756 1208.78,378.071 1209.3,378.072 1209.82,377.229 1210.34,374.78 1210.86,375.012 1211.38,376.169 1211.9,375.745 1212.42,376.018 1212.94,377.731 1213.46,377.953 1213.98,379.022 1214.5,378.998 1215.02,379.023 1215.54,379.787 1216.06,379.69 1216.58,378.836 1217.1,378.952 1217.62,379.843 1218.14,378.946 1218.66,377.279 1219.18,377.366 1219.7,379.959 1220.21,379.986 1220.73,380.108 1221.25,379.445 1221.77,378.534 1222.29,381.1 1222.81,380.954 1223.33,380.201 1223.85,379.457 1224.37,379.482 1224.89,380.314 1225.41,381.231 1225.93,382.689 1226.45,382.328 1226.97,382.777 1227.49,380.192 1228.01,380.871 1228.53,379.94 1229.05,380.079 1229.57,380.027 1230.09,378.659 1230.61,378.788 1231.13,378.816 1231.64,379.07 1232.16,380.61 1232.68,381.366 1233.2,381.322 1233.72,383.676 1234.24,382.754 1234.76,380.935 1235.28,380.221 1235.8,377.681 1236.32,377.182 1236.84,376.505 1237.36,377.66 1237.88,379.556 1238.4,379.684 1238.92,379.709 1239.44,380.394 1239.96,380.333 1240.48,380.372 1241,380.259 1241.52,380.975 1242.04,382.693 1242.55,385.705 1243.07,385.199 1243.59,385.674 1244.11,386.054 1244.63,384.627 1245.15,385.864 1245.67,387.755 1246.19,387.796 1246.71,387.173 1247.23,386.528 1247.75,388.425 1248.27,385.295 1248.79,386.424 1249.31,385.715 1249.83,385.103 1250.35,384.621 1250.87,384.175 1251.39,382.799 1251.91,383.228 1252.43,383.875 1252.95,384.257 1253.47,383.77 1253.98,383.334 1254.5,382.138 1255.02,380.976 1255.54,378.21 1256.06,378.224 1256.58,378.98 1257.1,380.642 1257.62,381.228 1258.14,380.875 1258.66,379.792 1259.18,380.519 1259.7,381.052 1260.22,381.76 1260.74,381.403 1261.26,380.992 1261.78,382.333 1262.3,381.899 1262.82,380.912 1263.34,381.514 1263.86,381.406 1264.38,380.994 1264.9,379.943 1265.41,379.033 1265.93,378.81 1266.45,379.455 1266.97,378.517 1267.49,378.389 1268.01,378.176 1268.53,378.287 1269.05,377.4 1269.57,375.889 1270.09,374.384 1270.61,373.815 1271.13,374.326 1271.65,374.615 1272.17,373.881 1272.69,372.54 1273.21,372.147 1273.73,372.466 1274.25,374.503 1274.77,374.626 1275.29,375.106 1275.81,375.317 1276.33,374.969 1276.84,375.216 1277.36,372.176 1277.88,372.637 1278.4,372.241 1278.92,372.66 1279.44,370.785 1279.96,371.425 1280.48,372.015 1281,372.457 1281.52,372.376 1282.04,371.304 1282.56,371.956 1283.08,374.893 1283.6,375.117 1284.12,373.824 1284.64,375.983 1285.16,377.903 1285.68,379.649 1286.2,379.699 1286.72,379.122 1287.24,378.449 1287.76,379.43 1288.27,380.305 1288.79,381.114 1289.31,379.433 1289.83,380.451 1290.35,381.196 1290.87,378.073 1291.39,378.219 1291.91,377.467 1292.43,378.418 1292.95,379.349 1293.47,380.376 1293.99,378.785 1294.51,379.821 1295.03,380.714 1295.55,379.243 1296.07,380.234 1296.59,380.115 1297.11,378.476 1297.63,379.293 1298.15,378.573 1298.67,378.771 1299.18,379.895 1299.7,379.195 1300.22,378.469 1300.74,380.193 1301.26,381.77 1301.78,383.164 1302.3,383.855 1302.82,383.516 1303.34,383.185 1303.86,382.208 1304.38,382.055 1304.9,381.905 1305.42,383.409 1305.94,383.211 1306.46,382.15 1306.98,381.815 1307.5,380.891 1308.02,380.799 1308.54,380.882 1309.06,382.384 1309.58,381.404 1310.1,381.181 1310.61,378.646 1311.13,379.525 1311.65,380.423 1312.17,379.015 1312.69,378.237 1313.21,379.107 1313.73,379.134 1314.25,379.233 1314.77,380.218 1315.29,380.963 1315.81,380.155 1316.33,377.77 1316.85,377.951 1317.37,378.818 1317.89,378.09 1318.41,377.376 1318.93,379.063 1319.45,379.121 1319.97,378.477 1320.49,379.223 1321.01,381.613 1321.53,382.313 1322.04,381.334 1322.56,381.199 1323.08,381.957 1323.6,381.762 1324.12,381.722 1324.64,379.155 1325.16,378.322 1325.68,379.246 1326.2,380.211 1326.72,380.148 1327.24,380.891 1327.76,382.626 1328.28,382.534 1328.8,383.157 1329.32,382.041 1329.84,381.141 1330.36,380.38 1330.88,380.371 1331.4,378.545 1331.92,380.207 1332.44,381.652 1332.96,383.069 1333.47,381.189 1333.99,381.831 1334.51,380.888 1335.03,380.036 1335.55,380.617 1336.07,382.178 1336.59,382.221 1337.11,384.422 1337.63,381.615 1338.15,382.334 1338.67,381.362 1339.19,381.798 1339.71,381.443 1340.23,381.881 1340.75,381.751 1341.27,381.662 1341.79,382.397 1342.31,382.063 1342.83,381.892 1343.35,380.796 1343.87,380.795 1344.39,380.014 1344.9,380.542 1345.42,379.443 1345.94,379.194 1346.46,379.213 1346.98,379.142 1347.5,379.307 1348.02,378.4 1348.54,378.474 1349.06,377.56 1349.58,377.554 1350.1,379.214 1350.62,379.926 1351.14,380.671 1351.66,381.529 1352.18,382.145 1352.7,381.762 1353.22,380.775 1353.74,380.686 1354.26,379.84 1354.78,379.007 1355.3,378.906 1355.81,379.781 1356.33,380.401 1356.85,381.141 1357.37,381.744 1357.89,381.432 1358.41,380.886 1358.93,379.273 1359.45,380.815 1359.97,380.794 1360.49,379.877 1361.01,379.661 1361.53,379.355 1362.05,379.347 1362.57,379.336 1363.09,379.34 1363.61,379.264 1364.13,379.206 1364.65,379.13 1365.17,377.337 1365.69,376.648 1366.21,375.958 1366.73,375.227 1367.24,376.303 1367.76,377.197 1368.28,376.621 1368.8,378.302 1369.32,375.713 1369.84,375.131 1370.36,373.768 1370.88,372.562 1371.4,372.992 1371.92,374.372 1372.44,374.471 1372.96,375.7 1373.48,375.858 1374,378.531 1374.52,381.089 1375.04,380.09 1375.56,378.424 1376.08,376.179 1376.6,375.666 1377.12,376.066 1377.64,376.435 1378.16,373.436 1378.67,373.121 1379.19,374.399 1379.71,375.571 1380.23,378.369 1380.75,379.258 1381.27,377.824 1381.79,378.861 1382.31,379.987 1382.83,380.009 1383.35,380.2 1383.87,379.288 1384.39,378.554 1384.91,377.108 1385.43,376.363 1385.95,376.62 1386.47,376.236 1386.99,376.428 1387.51,376.682 1388.03,375.374 1388.55,376.766 1389.07,376.389 1389.59,379.253 1390.1,378.646 1390.62,378.756 1391.14,378.837 1391.66,380.602 1392.18,380.678 1392.7,382.332 1393.22,382.886 1393.74,382.674 1394.26,382.618 1394.78,383.448 1395.3,384.994 1395.82,384.719 1396.34,383.773 1396.86,383.431 1397.38,385.064 1397.9,386.461 1398.42,386.018 1398.94,386.535 1399.46,385.238 1399.98,385.479 1400.5,385.842 1401.02,387.795 1401.53,386.367 1402.05,385.982 1402.57,385.559 1403.09,382.042 1403.61,381.933 1404.13,381.704 1404.65,381.579 1405.17,381.294 1405.69,378.579 1406.21,377.992 1406.73,376.286 1407.25,377.224 1407.77,376.012 1408.29,377.117 1408.81,375.703 1409.33,376.059 1409.85,375.296 1410.37,375.625 1410.89,375.902 1411.41,377.062 1411.93,375.695 1412.44,375.245 1412.96,374.679 1413.48,375.78 1414,376.976 1414.52,376.411 1415.04,376.582 1415.56,377.609 1416.08,376.8 1416.6,377.962 1417.12,378.231 1417.64,379.081 1418.16,379.121 1418.68,379.925 1419.2,379.021 1419.72,378.139 1420.24,379.093 1420.76,379.197 1421.28,379.342 1421.8,380.941 1422.32,381.058 1422.84,380.103 1423.36,380.116 1423.87,380.909 1424.39,379.99 1424.91,380 1425.43,379.211 1425.95,379.943 1426.47,381.417 1426.99,381.398 1427.51,382.048 1428.03,383.428 1428.55,384.069 1429.07,382.772 1429.59,381.676 1430.11,379.857 1430.63,380.691 1431.15,380.553 1431.67,379.762 1432.19,378.974 1432.71,379.156 1433.23,378.404 1433.75,378.609 1434.27,377.211 1434.79,378.353 1435.3,377.731 1435.82,377.346 1436.34,376.697 1436.86,376.227 1437.38,372.47 1437.9,372.941 1438.42,373.479 1438.94,375.817 1439.46,376.363 1439.98,374.232 1440.5,375.305 1441.02,376.341 1441.54,374.117 1442.06,375.38 1442.58,375.844 1443.1,376.907 1443.62,377.377 1444.14,375.306 1444.66,375.556 1445.18,376.1 1445.7,375.721 1446.22,376.192 1446.73,378.322 1447.25,378.374 1447.77,378.713 1448.29,379.713 1448.81,381.261 1449.33,380.629 1449.85,382.432 1450.37,381.704 1450.89,382.619 1451.41,380.895 1451.93,381.613 1452.45,384.877 1452.97,385.461 1453.49,384.109 1454.01,383.129 1454.53,384.722 1455.05,385.889 1455.57,385.309 1456.09,384.144 1456.61,384.595 1457.13,385.191 1457.65,385.533 1458.16,386.996 1458.68,385.68 1459.2,385.235 1459.72,387.336 1460.24,388.265 1460.76,387.504 1461.28,386.928 1461.8,386.258 1462.32,386.63 1462.84,387.062 1463.36,384.731 1463.88,382.772 1464.4,382.558 1464.92,382.414 1465.44,382.275 1465.96,380.469 1466.48,380.25 1467,380.003 1467.52,381.355 1468.04,380.49 1468.56,380.441 1469.07,380.379 1469.59,379.542 1470.11,379.703 1470.63,378.875 1471.15,377.998 1471.67,378.086 1472.19,376.639 1472.71,375.815 1473.23,376.102 1473.75,377.961 1474.27,377.182 1474.79,377.328 1475.31,377.468 1475.83,377.506 1476.35,378.347 1476.87,379.256 1477.39,380.037 1477.91,379.864 1478.43,379.74 1478.95,381.158 1479.47,380.114 1479.99,382.438 1480.5,381.392 1481.02,379.679 1481.54,378.791 1482.06,377.825 1482.58,377.115 1483.1,377.969 1483.62,378.218 1484.14,376.74 1484.66,376.854 1485.18,378.462 1485.7,377.832 1486.22,376.369 1486.74,376.691 1487.26,377.843 1487.78,376.287 1488.3,374.909 1488.82,376.01 1489.34,376.287 1489.86,378.883 1490.38,378.239 1490.9,378.125 1491.42,376.506 1491.93,375.238 1492.45,373.955 1492.97,373.729 1493.49,373.925 1494.01,376.73 1494.53,377.141 1495.05,377.248 1495.57,379.029 1496.09,377.589 1496.61,377.942 1497.13,378.128 1497.65,377.424 1498.17,377.544 1498.69,376.856 1499.21,376.258 1499.73,375.768 1500.25,374.468 1500.77,375.055 1501.29,375.527 1501.81,378.449 1502.33,381.109 1502.85,381.187 1503.36,381.108 1503.88,381.983 1504.4,380.1 1504.92,380.089 1505.44,378.386 1505.96,380.234 1506.48,378.613 1507,378.599 1507.52,377.884 1508.04,378.978 1508.56,379.133 1509.08,378.457 1509.6,378.553 1510.12,378.698 1510.64,380.365 1511.16,380.39 1511.68,380.245 1512.2,380.205 1512.72,380.263 1513.24,379.561 1513.76,380.529 1514.28,380.556 1514.79,380.7 1515.31,380.748 1515.83,379.967 1516.35,377.667 1516.87,381.266 1517.39,382.044 1517.91,382.881 1518.43,382.845 1518.95,381.87 1519.47,381.63 1519.99,381.644 1520.51,381.531 1521.03,382.332 1521.55,382.198 1522.07,381.932 1522.59,381.706 1523.11,382.338 1523.63,382.264 1524.15,383.974 1524.67,385.455 1525.19,385.018 1525.7,385.343 1526.22,385.102 1526.74,386.199 1527.26,384.923 1527.78,385.442 1528.3,384.249 1528.82,384.978 1529.34,383.803 1529.86,383.323 1530.38,382.275 1530.9,382.163 1531.42,382.772 1531.94,383.234 1532.46,382.058 1532.98,381.706 1533.5,380.651 1534.02,381.189 1534.54,381.831 1535.06,380.071 1535.58,379.125 1536.1,380.567 1536.62,378.912 1537.13,379.699 1537.65,379.715 1538.17,379.646 1538.69,378.866 1539.21,380.361 1539.73,380.991 1540.25,381.593 1540.77,382.256 1541.29,382.8 1541.81,383.388 1542.33,382.125 1542.85,382.732 1543.37,382.505 1543.89,381.58 1544.41,380.456 1544.93,379.618 1545.45,378.104 1545.97,378.83 1546.49,378.757 1547.01,376.325 1547.53,377.444 1548.05,378.297 1548.56,378.433 1549.08,378.584 1549.6,377.831 1550.12,378.561 1550.64,380.179 1551.16,379.106 1551.68,378.261 1552.2,378.418 1552.72,379.246 1553.24,378.413 1553.76,377.414 1554.28,378.236 1554.8,376.501 1555.32,378.184 1555.84,377.425 1556.36,376.732 1556.88,376.097 1557.4,378.549 1557.92,381.934 1558.44,382.324 1558.96,381.117 1559.48,381.836 1559.99,381.73 1560.51,381.475 1561.03,381.989 1561.55,381.776 1562.07,381.495 1562.59,380.3 1563.11,381.766 1563.63,380.768 1564.15,380.736 1564.67,380.644 1565.19,378.041 1565.71,377.435 1566.23,375.908 1566.75,376.116 1567.27,376.927 1567.79,376.954 1568.31,377.944 1568.83,377.232 1569.35,376.788 1569.87,377.736 1570.39,377.985 1570.91,377.12 1571.42,377.16 1571.94,376.469 1572.46,376.639 1572.98,376.923 1573.5,377.838 1574.02,380.454 1574.54,378.737 1575.06,378.758 1575.58,378.004 1576.1,380.437 1576.62,380.377 1577.14,380.202 1577.66,378.512 1578.18,378.624 1578.7,381.107 1579.22,380.274 1579.74,380.288 1580.26,380.12 1580.78,379.866 1581.3,380.625 1581.82,378.916 1582.33,378.118 1582.85,378.279 1583.37,380.04 1583.89,379.325 1584.41,378.351 1584.93,376.784 1585.45,377.735 1585.97,375.427 1586.49,376.406 1587.01,374.11 1587.53,376.215 1588.05,377.302 1588.57,376.646 1589.09,377.656 1589.61,377.829 1590.13,378.689 1590.65,381.102 1591.17,381.132 1591.69,382.018 1592.21,382.582 1592.73,381.705 1593.25,381.491 1593.76,380.387 1594.28,380.418 1594.8,379.41 1595.32,379.494 1595.84,377.8 1596.36,377.868 1596.88,377.921 1597.4,378.136 1597.92,379.86 1598.44,378.373 1598.96,377.796 1599.48,376.928 1600,377.954 1600.52,378.865 1601.04,378.129 1601.56,378.444 1602.08,378.512 1602.6,379.348 1603.12,378.663 1603.64,379.585 1604.16,379.733 1604.68,381.448 1605.19,382.946 1605.71,382 1606.23,381.775 1606.75,381.882 1607.27,382.592 1607.79,384.009 1608.31,383.737 1608.83,383.566 1609.35,383.088 1609.87,382.902 1610.39,382.604 1610.91,382.331 1611.43,382.154 1611.95,380.44 1612.47,380.443 1612.99,381.075 1613.51,379.373 1614.03,378.481 1614.55,377.721 1615.07,376.337 1615.59,377.322 1616.11,376.429 1616.62,375.812 1617.14,375.477 1617.66,376.459 1618.18,376.611 1618.7,376.926 1619.22,377.931 1619.74,379.071 1620.26,380.82 1620.78,380.824 1621.3,381.549 1621.82,380.584 1622.34,379.729 1622.86,377.32 1623.38,377.593 1623.9,377.871 1624.42,378.911 1624.94,378.345 1625.46,378.464 1625.98,378.683 1626.5,380.508 1627.02,379.599 1627.54,379.721 1628.05,379.883 1628.57,379.184 1629.09,379.199 1629.61,379.342 1630.13,378.433 1630.65,380.103 1631.17,379.371 1631.69,380.162 1632.21,380.064 1632.73,378.263 1633.25,378.422 1633.77,380.956 1634.29,380.177 1634.81,380.4 1635.33,380.307 1635.85,378.8 1636.37,379.733 1636.89,379.843 1637.41,379.71 1637.93,381.372 1638.45,381.317 1638.96,380.486 1639.48,381.249 1640,382.774 1640.52,383.449 1641.04,383.923 1641.56,382.943 1642.08,381.733 1642.6,381.503 1643.12,383.837 1643.64,383.53 1644.16,384.783 1644.68,385.224 1645.2,384.973 1645.72,384.597 1646.24,385.96 1646.76,384.347 1647.28,384.93 1647.8,384.434 1648.32,383.233 1648.84,381.03 1649.36,379.255 1649.88,380.027 1650.39,379.101 1650.91,379.856 1651.43,378.169 1651.95,379.779 1652.47,379.83 1652.99,378.056 1653.51,378.049 1654.03,379.696 1654.55,379.005 1655.07,378.859 1655.59,379.023 1656.11,379.02 1656.63,378.242 1657.15,378.287 1657.67,378.336 1658.19,378.621 1658.71,378.073 1659.23,378.198 1659.75,379.019 1660.27,381.35 1660.79,380.316 1661.31,380.806 1661.82,380.724 1662.34,379.023 1662.86,379.064 1663.38,378.224 1663.9,376.015 1664.42,377.094 1664.94,377.315 1665.46,378.284 1665.98,378.26 1666.5,379.963 1667.02,379.859 1667.54,380.514 1668.06,378.894 1668.58,379.785 1669.1,380.443 1669.62,380.445 1670.14,381.029 1670.66,380.154 1671.18,380.016 1671.7,380.002 1672.22,380.928 1672.74,380.03 1673.25,380.8 1673.77,380.633 1674.29,380.37 1674.81,380.056 1675.33,379.059 1675.85,378.177 1676.37,379.214 1676.89,379.118 1677.41,378.238 1677.93,377.402 1678.45,379.211 1678.97,378.234 1679.49,377.449 1680.01,377.595 1680.53,378.492 1681.05,376.077 1681.57,376.245 1682.09,378.944 1682.61,379.819 1683.13,378.89 1683.65,378.861 1684.17,378.837 1684.68,379.672 1685.2,378.907 1685.72,378.797 1686.24,378.125 1686.76,376.637 1687.28,377.719 1687.8,376.218 1688.32,375.795 1688.84,374.313 1689.36,374.72 1689.88,376.635 1690.4,377.755 1690.92,376.258 1691.44,376.552 1691.96,375.216 1692.48,376.325 1693,376.577 1693.52,378.47 1694.04,381.01 1694.56,382.551 1695.08,383.159 1695.59,383.539 1696.11,384.868 1696.63,382.312 1697.15,382.878 1697.67,381.026 1698.19,379.951 1698.71,379.832 1699.23,379.86 1699.75,380.583 1700.27,382.058 1700.79,381.816 1701.31,382.419 1701.83,382.931 1702.35,381.69 1702.87,383.204 1703.39,383.819 1703.91,381.781 1704.43,382.403 1704.95,383.816 1705.47,382.632 1705.99,381.505 1706.51,381.345 1707.02,381.131 1707.54,381.827 1708.06,382.459 1708.58,381.377 1709.1,379.722 1709.62,381.947 1710.14,380.967 1710.66,379.213 1711.18,379.943 1711.7,380.106 1712.22,381.655 1712.74,381.488 1713.26,381.43 1713.78,382.07 1714.3,381.906 1714.82,382.368 1715.34,379.711 1715.86,380.31 1716.38,378.495 1716.9,377.767 1717.42,378.476 1717.94,377.632 1718.45,376.01 1718.97,375.398 1719.49,378.174 1720.01,378.075 1720.53,376.431 1721.05,378.158 1721.57,377.367 1722.09,377.636 1722.61,377.892 1723.13,378.064 1723.65,379.01 1724.17,377.418 1724.69,377.838 1725.21,378.872 1725.73,380.409 1726.25,379.438 1726.77,379.368 1727.29,380.131 1727.81,380.207 1728.33,380.251 1728.85,381.126 1729.37,382.549 1729.88,384.032 1730.4,382.119 1730.92,383.465 1731.44,382.34 1731.96,381.979 1732.48,381.866 1733,381.747 1733.52,381.376 1734.04,381.162 1734.56,384.267 1735.08,383.848 1735.6,383.42 1736.12,381.44 1736.64,381.176 1737.16,381.173 1737.68,381.82 1738.2,380.82 1738.72,380.629 1739.24,378.792 1739.76,376.345 1740.28,378.861 1740.8,378.691 1741.31,378.602 1741.83,377.63 1742.35,377.627 1742.87,377.702 1743.39,377.026 1743.91,376.447 1744.43,378.277 1744.95,379.132 1745.47,379.096 1745.99,378.318 1746.51,375.9 1747.03,376.883 1747.55,376.431 1748.07,378.177 1748.59,379.073 1749.11,378.966 1749.63,381.535 1750.15,380.645 1750.67,378.926 1751.19,378.874 1751.71,378.991 1752.22,378.129 1752.74,378.983 1753.26,379.884 1753.78,378.92 1754.3,378.78 1754.82,378.751 1755.34,378.849 1755.86,378.056 1756.38,377.178 1756.9,373.98 1757.42,375.449 1757.94,374.342 1758.46,372.248 1758.98,371.136 1759.5,371.047 1760.02,373.179 1760.54,375.283 1761.06,376.43 1761.58,378.214 1762.1,378.295 1762.62,378.338 1763.14,378.624 1763.65,378.081 1764.17,378.901 1764.69,379.84 1765.21,378.279 1765.73,379.296 1766.25,380.161 1766.77,380.264 1767.29,379.32 1767.81,376.645 1768.33,378.5 1768.85,379.458 1769.37,381.221 1769.89,379.415 1770.41,380.25 1770.93,379.381 1771.45,379.395 1771.97,380.206 1772.49,380.961 1773.01,380.137 1773.53,379.27 1774.05,379.3 1774.57,381.73 1775.08,379.359 1775.6,378.532 1776.12,377.979 1776.64,377.332 1777.16,377.51 1777.68,377.69 1778.2,377.691 1778.72,377.731 1779.24,377.798 1779.76,378.005 1780.28,379.807 1780.8,378.198 1781.32,378.25 1781.84,378.353 1782.36,378.66 1782.88,379.671 1783.4,379.815 1783.92,380.808 1784.44,380.712 1784.96,380.706 1785.48,379.891 1786,378.309 1786.51,380.157 1787.03,381.782 1787.55,381.614 1788.07,381.48 1788.59,381.988 1789.11,381.843 1789.63,380.919 1790.15,380.872 1790.67,379.953 1791.19,381.594 1791.71,381.382 1792.23,381.412 1792.75,381.375 1793.27,380.351 1793.79,379.472 1794.31,378.647 1794.83,378.753 1795.35,379.658 1795.87,379.517 1796.39,379.6 1796.91,378.777 1797.43,378.697 1797.94,380.233 1798.46,378.412 1798.98,377.72 1799.5,377.12 1800.02,377.313 1800.54,378.349 1801.06,377.739 1801.58,377.079 1802.1,378.081 1802.62,378.193 1803.14,377.624 1803.66,377.204 1804.18,378.283 1804.7,379.334 1805.22,378.679 1805.74,377.899 1806.26,378.944 1806.78,378.082 1807.3,376.475 1807.82,376.804 1808.34,375.526 1808.85,376.697 1809.37,377.664 1809.89,379.38 1810.41,379.465 1810.93,379.635 1811.45,379.742 1811.97,381.366 1812.49,381.346 1813.01,382.178 1813.53,378.995 1814.05,378.219 1814.57,378.327 1815.09,379.22 1815.61,380.286 1816.13,379.575 1816.65,378.754 1817.17,379.141 1817.69,377.592 1818.21,377.861 1818.73,378.771 1819.25,378.12 1819.77,379.177 1820.28,376.925 1820.8,380.592 1821.32,380.532 1821.84,380.513 1822.36,381.347 1822.88,378.997 1823.4,377.253 1823.92,378.31 1824.44,378.456 1824.96,378.746 1825.48,380.326 1826,381.103 1826.52,380.983 1827.04,381.633 1827.56,382.257 1828.08,383.003 1828.6,381.174 1829.12,381.171 1829.64,379.452 1830.16,381.096 1830.68,379.362 1831.2,379.311 1831.71,380.151 1832.23,379.126 1832.75,380.089 1833.27,380.966 1833.79,383.323 1834.31,385.644 1834.83,382.906 1835.35,383.565 1835.87,385.63 1836.39,386.179 1836.91,387.364 1837.43,386.827 1837.95,385.518 1838.47,385.124 1838.99,384.033 1839.51,383.645 1840.03,385.052 1840.55,385.497 1841.07,384.432 1841.59,385.724 1842.11,384.315 1842.63,382.219 1843.14,385.233 1843.66,384.657 1844.18,384.264 1844.7,384.752 1845.22,385.049 1845.74,385.382 1846.26,384.777 1846.78,385.043 1847.3,383.878 1847.82,383.398 1848.34,384.039 1848.86,383.499 1849.38,381.527 1849.9,380.46 1850.42,381.147 1850.94,381.646 1851.46,381.42 1851.98,381.276 1852.5,378.652 1853.02,378.618 1853.54,379.252 1854.06,379.337 1854.57,378.585 1855.09,379.368 1855.61,378.6 1856.13,380.39 1856.65,380.164 1857.17,380.055 1857.69,378.936 1858.21,379.719 1858.73,378.89 1859.25,379.691 1859.77,377.908 1860.29,377.961 1860.81,377.343 1861.33,377.323 1861.85,376.733 1862.37,377.587 1862.89,376.686 1863.41,377.603 1863.93,377.661 1864.45,377.582 1864.97,377.684 1865.48,379.36 1866,378.49 1866.52,378.398 1867.04,379.186 1867.56,379.051 1868.08,378.985 1868.6,379.697 1869.12,378.855 1869.64,378.89 1870.16,378.094 1870.68,378.14 1871.2,378.274 1871.72,377.374 1872.24,378.092 1872.76,378.234 1873.28,377.642 1873.8,377.76 1874.32,376.348 1874.84,376.605 1875.36,377.522 1875.88,375.306 1876.4,375.452 1876.91,375.585 1877.43,374.155 1877.95,375.278 1878.47,376.998 1878.99,378.847 1879.51,381.235 1880.03,379.528 1880.55,377.9 1881.07,376.187 1881.59,376.415 1882.11,374.968 1882.63,374.629 1883.15,374.959 1883.67,377.109 1884.19,378.831 1884.71,377.992 1885.23,378.061 1885.75,379.073 1886.27,380.763 1886.79,381.553 1887.31,380.489 1887.83,379.661 1888.34,378.821 1888.86,381.332 1889.38,382.046 1889.9,382.471 1890.42,381.594 1890.94,379.801 1891.46,379.544 1891.98,378.603 1892.5,378.028 1893.02,377.388 1893.54,378.138 1894.06,380.003 1894.58,379.243 1895.1,378.252 1895.62,379.241 1896.14,377.73 1896.66,378.653 1897.18,378.107 1897.7,377.436 1898.22,376.709 1898.74,377.076 1899.26,377.349 1899.77,375.825 1900.29,374.372 1900.81,374.853 1901.33,375.35 1901.85,375.025 1902.37,376.283 1902.89,376.608 1903.41,376.868 1903.93,379.609 1904.45,378.758 1904.97,378.728 1905.49,378.823 1906.01,378.855 1906.53,377.992 1907.05,376.543 1907.57,376.773 1908.09,376.112 1908.61,377.113 1909.13,377.357 1909.65,378.459 1910.17,376.951 1910.69,377.955 1911.2,378.219 1911.72,378.429 1912.24,378.742 1912.76,379.685 1913.28,377.263 1913.8,376.438 1914.32,375.097 1914.84,373.954 1915.36,375.295 1915.88,375.606 1916.4,376.752 1916.92,376.069 1917.44,378.151 1917.96,378.369 1918.48,379.261 1919,378.526 1919.52,380.335 1920.04,380.506 1920.56,380.72 1921.08,381.594 1921.6,380.719 1922.11,379.332 1922.63,379.52 1923.15,379.641 1923.67,381.368 1924.19,381.434 1924.71,382.099 1925.23,382.723 1925.75,383.297 1926.27,382.372 1926.79,383.911 1927.31,386.02 1927.83,384.853 1928.35,385.424 1928.87,385.17 1929.39,385.63 1929.91,385.397 1930.43,385.927 1930.95,387.133 1931.47,387.661 1931.99,387.805 1932.51,387.541 1933.03,389.607 1933.54,389.619 1934.06,389.714 1934.58,388.946 1935.1,388.333 1935.62,386.846 1936.14,386.146 1936.66,385.83 1937.18,383.702 1937.7,384.217 1938.22,383.819 1938.74,382.534 1939.26,382.201 1939.78,383.522 1940.3,384.829 1940.82,385.103 1941.34,383.741 1941.86,382.463 1942.38,381.417 1942.9,379.492 1943.42,376.908 1943.94,377.739 1944.46,377.749 1944.97,377.711 1945.49,376.975 1946.01,377.002 1946.53,378.035 1947.05,376.62 1947.57,376.113 1948.09,375.418 1948.61,376.441 1949.13,376.6 1949.65,375.754 1950.17,375.062 1950.69,374.535 1951.21,374.865 1951.73,374.491 1952.25,374.627 1952.77,375.725 1953.29,377.712 1953.81,377.823 1954.33,377.129 1954.85,377.178 1955.37,377.324 1955.89,375.863 1956.4,375.413 1956.92,374.687 1957.44,375.795 1957.96,377.794 1958.48,377.979 1959,376.42 1959.52,376.614 1960.04,375.233 1960.56,375.446 1961.08,375.797 1961.6,378.499 1962.12,379.404 1962.64,378.499 1963.16,378.52 1963.68,376.106 1964.2,376.446 1964.72,375.891 1965.24,377.032 1965.76,378.141 1966.28,380.022 1966.8,380.713 1967.32,380.588 1967.83,379.795 1968.35,379.053 1968.87,378.248 1969.39,377.406 1969.91,379.287 1970.43,381.611 1970.95,383.112 1971.47,382.961 1971.99,383.582 1972.51,382.551 1973.03,382.319 1973.55,381.427 1974.07,381.991 1974.59,381.819 1975.11,382.455 1975.63,382.258 1976.15,384.54 1976.67,385.025 1977.19,384.628 1977.71,384.455 1978.23,385.008 1978.74,383.83 1979.26,381.982 1979.78,381.921 1980.3,378.565 1980.82,376.95 1981.34,375.69 1981.86,377.669 1982.38,377.73 1982.9,378.455 1983.42,379.25 1983.94,379.115 1984.46,378.386 1984.98,379.215 1985.5,379.141 1986.02,378.31 1986.54,380.103 1987.06,379.316 1987.58,377.054 1988.1,378.139 1988.62,378.31 1989.14,378.268 1989.66,376.921 1990.17,377.178 1990.69,377.987 1991.21,378.93 1991.73,378.909 1992.25,379.801 1992.77,381.428 1993.29,382.202 1993.81,383.597 1994.33,380.839 1994.85,380.766 1995.37,379.216 1995.89,379.962 1996.41,382.34 1996.93,382.24 1997.45,382.947 1997.97,382.573 1998.49,382.224 1999.01,382.045 1999.53,383.589 2000.05,383.289 2000.57,381.532 2001.09,381.431 2001.6,381.358 2002.12,381.162 2002.64,381.095 2003.16,381.826 2003.68,380.847 2004.2,379.716 2004.72,378.847 2005.24,378.54 2005.76,379.342 2006.28,380.125 2006.8,379.173 \"/>\n<path clip-path=\"url(#clip260)\" d=\"M1512.66 1177.39 L1998.49 1177.39 L1998.49 1021.87 L1512.66 1021.87  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip260)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1512.66,1177.39 1998.49,1177.39 1998.49,1021.87 1512.66,1021.87 1512.66,1177.39 \"/>\n<polyline clip-path=\"url(#clip260)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1531.01,1073.71 1641.12,1073.71 \"/>\n<path clip-path=\"url(#clip260)\" d=\"M1666.88 1057.71 L1666.88 1065.07 L1675.65 1065.07 L1675.65 1068.38 L1666.88 1068.38 L1666.88 1082.45 Q1666.88 1085.62 1667.73 1086.53 Q1668.61 1087.43 1671.28 1087.43 L1675.65 1087.43 L1675.65 1090.99 L1671.28 1090.99 Q1666.34 1090.99 1664.47 1089.17 Q1662.59 1087.31 1662.59 1082.45 L1662.59 1068.38 L1659.47 1068.38 L1659.47 1065.07 L1662.59 1065.07 L1662.59 1057.71 L1666.88 1057.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M1693.03 1077.96 Q1687.87 1077.96 1685.88 1079.14 Q1683.89 1080.32 1683.89 1083.17 Q1683.89 1085.44 1685.37 1086.78 Q1686.88 1088.1 1689.45 1088.1 Q1692.99 1088.1 1695.12 1085.6 Q1697.27 1083.08 1697.27 1078.91 L1697.27 1077.96 L1693.03 1077.96 M1701.53 1076.2 L1701.53 1090.99 L1697.27 1090.99 L1697.27 1087.06 Q1695.81 1089.42 1693.64 1090.55 Q1691.46 1091.67 1688.31 1091.67 Q1684.33 1091.67 1681.97 1089.44 Q1679.63 1087.2 1679.63 1083.45 Q1679.63 1079.07 1682.55 1076.85 Q1685.49 1074.63 1691.3 1074.63 L1697.27 1074.63 L1697.27 1074.21 Q1697.27 1071.27 1695.33 1069.67 Q1693.4 1068.05 1689.91 1068.05 Q1687.69 1068.05 1685.58 1068.59 Q1683.47 1069.12 1681.53 1070.18 L1681.53 1066.25 Q1683.87 1065.35 1686.07 1064.91 Q1688.27 1064.44 1690.35 1064.44 Q1695.97 1064.44 1698.75 1067.36 Q1701.53 1070.28 1701.53 1076.2 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M1725.33 1069.05 Q1724.61 1068.63 1723.75 1068.45 Q1722.92 1068.24 1721.9 1068.24 Q1718.29 1068.24 1716.34 1070.6 Q1714.42 1072.94 1714.42 1077.34 L1714.42 1090.99 L1710.14 1090.99 L1710.14 1065.07 L1714.42 1065.07 L1714.42 1069.1 Q1715.77 1066.74 1717.92 1065.6 Q1720.07 1064.44 1723.15 1064.44 Q1723.59 1064.44 1724.12 1064.51 Q1724.65 1064.56 1725.3 1064.67 L1725.33 1069.05 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M1746.02 1077.73 Q1746.02 1073.1 1744.1 1070.55 Q1742.2 1068.01 1738.75 1068.01 Q1735.33 1068.01 1733.4 1070.55 Q1731.51 1073.1 1731.51 1077.73 Q1731.51 1082.34 1733.4 1084.88 Q1735.33 1087.43 1738.75 1087.43 Q1742.2 1087.43 1744.1 1084.88 Q1746.02 1082.34 1746.02 1077.73 M1750.28 1087.78 Q1750.28 1094.4 1747.34 1097.61 Q1744.4 1100.86 1738.34 1100.86 Q1736.09 1100.86 1734.1 1100.51 Q1732.11 1100.18 1730.23 1099.49 L1730.23 1095.35 Q1732.11 1096.36 1733.94 1096.85 Q1735.77 1097.34 1737.66 1097.34 Q1741.85 1097.34 1743.94 1095.14 Q1746.02 1092.96 1746.02 1088.54 L1746.02 1086.43 Q1744.7 1088.73 1742.64 1089.86 Q1740.58 1090.99 1737.71 1090.99 Q1732.94 1090.99 1730.02 1087.36 Q1727.11 1083.73 1727.11 1077.73 Q1727.11 1071.71 1730.02 1068.08 Q1732.94 1064.44 1737.71 1064.44 Q1740.58 1064.44 1742.64 1065.58 Q1744.7 1066.71 1746.02 1069 L1746.02 1065.07 L1750.28 1065.07 L1750.28 1087.78 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M1781.23 1076.97 L1781.23 1079.05 L1761.65 1079.05 Q1761.92 1083.45 1764.28 1085.76 Q1766.67 1088.05 1770.9 1088.05 Q1773.36 1088.05 1775.65 1087.45 Q1777.96 1086.85 1780.23 1085.65 L1780.23 1089.67 Q1777.94 1090.65 1775.53 1091.16 Q1773.13 1091.67 1770.65 1091.67 Q1764.45 1091.67 1760.81 1088.05 Q1757.2 1084.44 1757.2 1078.29 Q1757.2 1071.92 1760.63 1068.19 Q1764.08 1064.44 1769.91 1064.44 Q1775.14 1064.44 1778.17 1067.82 Q1781.23 1071.18 1781.23 1076.97 M1776.97 1075.72 Q1776.92 1072.22 1775 1070.14 Q1773.1 1068.05 1769.96 1068.05 Q1766.39 1068.05 1764.24 1070.07 Q1762.11 1072.08 1761.78 1075.74 L1776.97 1075.72 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M1792.43 1057.71 L1792.43 1065.07 L1801.21 1065.07 L1801.21 1068.38 L1792.43 1068.38 L1792.43 1082.45 Q1792.43 1085.62 1793.29 1086.53 Q1794.17 1087.43 1796.83 1087.43 L1801.21 1087.43 L1801.21 1090.99 L1796.83 1090.99 Q1791.9 1090.99 1790.02 1089.17 Q1788.15 1087.31 1788.15 1082.45 L1788.15 1068.38 L1785.02 1068.38 L1785.02 1065.07 L1788.15 1065.07 L1788.15 1057.71 L1792.43 1057.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M1804.33 1065.07 L1808.59 1065.07 L1813.91 1085.3 L1819.21 1065.07 L1824.24 1065.07 L1829.56 1085.3 L1834.86 1065.07 L1839.12 1065.07 L1832.34 1090.99 L1827.32 1090.99 L1821.74 1069.74 L1816.14 1090.99 L1811.11 1090.99 L1804.33 1065.07 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M1857.36 1077.96 Q1852.2 1077.96 1850.21 1079.14 Q1848.22 1080.32 1848.22 1083.17 Q1848.22 1085.44 1849.7 1086.78 Q1851.2 1088.1 1853.77 1088.1 Q1857.32 1088.1 1859.45 1085.6 Q1861.6 1083.08 1861.6 1078.91 L1861.6 1077.96 L1857.36 1077.96 M1865.86 1076.2 L1865.86 1090.99 L1861.6 1090.99 L1861.6 1087.06 Q1860.14 1089.42 1857.96 1090.55 Q1855.79 1091.67 1852.64 1091.67 Q1848.66 1091.67 1846.3 1089.44 Q1843.96 1087.2 1843.96 1083.45 Q1843.96 1079.07 1846.88 1076.85 Q1849.82 1074.63 1855.63 1074.63 L1861.6 1074.63 L1861.6 1074.21 Q1861.6 1071.27 1859.65 1069.67 Q1857.73 1068.05 1854.24 1068.05 Q1852.01 1068.05 1849.91 1068.59 Q1847.8 1069.12 1845.86 1070.18 L1845.86 1066.25 Q1848.2 1065.35 1850.39 1064.91 Q1852.59 1064.44 1854.68 1064.44 Q1860.3 1064.44 1863.08 1067.36 Q1865.86 1070.28 1865.86 1076.2 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M1874.63 1054.98 L1878.89 1054.98 L1878.89 1090.99 L1874.63 1090.99 L1874.63 1054.98 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M1887.64 1054.98 L1891.92 1054.98 L1891.92 1076.25 L1904.63 1065.07 L1910.07 1065.07 L1896.32 1077.2 L1910.65 1090.99 L1905.09 1090.99 L1891.92 1078.33 L1891.92 1090.99 L1887.64 1090.99 L1887.64 1054.98 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M1935.74 1076.97 L1935.74 1079.05 L1916.16 1079.05 Q1916.44 1083.45 1918.8 1085.76 Q1921.18 1088.05 1925.42 1088.05 Q1927.87 1088.05 1930.16 1087.45 Q1932.48 1086.85 1934.75 1085.65 L1934.75 1089.67 Q1932.45 1090.65 1930.05 1091.16 Q1927.64 1091.67 1925.16 1091.67 Q1918.96 1091.67 1915.32 1088.05 Q1911.71 1084.44 1911.71 1078.29 Q1911.71 1071.92 1915.14 1068.19 Q1918.59 1064.44 1924.42 1064.44 Q1929.65 1064.44 1932.69 1067.82 Q1935.74 1071.18 1935.74 1076.97 M1931.48 1075.72 Q1931.44 1072.22 1929.51 1070.14 Q1927.62 1068.05 1924.47 1068.05 Q1920.9 1068.05 1918.75 1070.07 Q1916.62 1072.08 1916.3 1075.74 L1931.48 1075.72 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M1957.76 1069.05 Q1957.04 1068.63 1956.18 1068.45 Q1955.35 1068.24 1954.33 1068.24 Q1950.72 1068.24 1948.77 1070.6 Q1946.85 1072.94 1946.85 1077.34 L1946.85 1090.99 L1942.57 1090.99 L1942.57 1065.07 L1946.85 1065.07 L1946.85 1069.1 Q1948.2 1066.74 1950.35 1065.6 Q1952.5 1064.44 1955.58 1064.44 Q1956.02 1064.44 1956.55 1064.51 Q1957.08 1064.56 1957.73 1064.67 L1957.76 1069.05 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M1978.75 1065.83 L1978.75 1069.86 Q1976.94 1068.93 1975 1068.47 Q1973.06 1068.01 1970.97 1068.01 Q1967.8 1068.01 1966.2 1068.98 Q1964.63 1069.95 1964.63 1071.9 Q1964.63 1073.38 1965.76 1074.24 Q1966.9 1075.07 1970.32 1075.83 L1971.78 1076.16 Q1976.32 1077.13 1978.22 1078.91 Q1980.14 1080.67 1980.14 1083.84 Q1980.14 1087.45 1977.27 1089.56 Q1974.42 1091.67 1969.42 1091.67 Q1967.34 1091.67 1965.07 1091.25 Q1962.82 1090.86 1960.32 1090.05 L1960.32 1085.65 Q1962.69 1086.87 1964.98 1087.5 Q1967.27 1088.1 1969.51 1088.1 Q1972.52 1088.1 1974.14 1087.08 Q1975.76 1086.04 1975.76 1084.17 Q1975.76 1082.43 1974.58 1081.5 Q1973.43 1080.58 1969.47 1079.72 L1967.99 1079.37 Q1964.03 1078.54 1962.27 1076.83 Q1960.51 1075.09 1960.51 1072.08 Q1960.51 1068.42 1963.1 1066.43 Q1965.69 1064.44 1970.46 1064.44 Q1972.82 1064.44 1974.91 1064.79 Q1976.99 1065.14 1978.75 1065.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip260)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1531.01,1125.55 1641.12,1125.55 \"/>\n<path clip-path=\"url(#clip260)\" d=\"M1681.18 1127.19 L1681.18 1142.83 L1676.92 1142.83 L1676.92 1127.33 Q1676.92 1123.64 1675.49 1121.82 Q1674.05 1119.99 1671.18 1119.99 Q1667.73 1119.99 1665.74 1122.19 Q1663.75 1124.39 1663.75 1128.18 L1663.75 1142.83 L1659.47 1142.83 L1659.47 1116.91 L1663.75 1116.91 L1663.75 1120.94 Q1665.28 1118.6 1667.34 1117.44 Q1669.42 1116.28 1672.13 1116.28 Q1676.6 1116.28 1678.89 1119.06 Q1681.18 1121.82 1681.18 1127.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M1699.72 1119.89 Q1696.3 1119.89 1694.31 1122.58 Q1692.32 1125.24 1692.32 1129.89 Q1692.32 1134.55 1694.28 1137.23 Q1696.28 1139.89 1699.72 1139.89 Q1703.13 1139.89 1705.12 1137.21 Q1707.11 1134.52 1707.11 1129.89 Q1707.11 1125.29 1705.12 1122.6 Q1703.13 1119.89 1699.72 1119.89 M1699.72 1116.28 Q1705.28 1116.28 1708.45 1119.89 Q1711.62 1123.51 1711.62 1129.89 Q1711.62 1136.26 1708.45 1139.89 Q1705.28 1143.51 1699.72 1143.51 Q1694.15 1143.51 1690.97 1139.89 Q1687.83 1136.26 1687.83 1129.89 Q1687.83 1123.51 1690.97 1119.89 Q1694.15 1116.28 1699.72 1116.28 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M1733.71 1120.89 Q1732.99 1120.47 1732.13 1120.29 Q1731.3 1120.08 1730.28 1120.08 Q1726.67 1120.08 1724.72 1122.44 Q1722.8 1124.78 1722.8 1129.18 L1722.8 1142.83 L1718.52 1142.83 L1718.52 1116.91 L1722.8 1116.91 L1722.8 1120.94 Q1724.15 1118.58 1726.3 1117.44 Q1728.45 1116.28 1731.53 1116.28 Q1731.97 1116.28 1732.5 1116.35 Q1733.03 1116.4 1733.68 1116.51 L1733.71 1120.89 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip260)\" d=\"M1757.52 1121.89 Q1759.12 1119.01 1761.34 1117.65 Q1763.57 1116.28 1766.58 1116.28 Q1770.63 1116.28 1772.83 1119.13 Q1775.02 1121.95 1775.02 1127.19 L1775.02 1142.83 L1770.74 1142.83 L1770.74 1127.33 Q1770.74 1123.6 1769.42 1121.79 Q1768.1 1119.99 1765.4 1119.99 Q1762.08 1119.99 1760.16 1122.19 Q1758.24 1124.39 1758.24 1128.18 L1758.24 1142.83 L1753.96 1142.83 L1753.96 1127.33 Q1753.96 1123.58 1752.64 1121.79 Q1751.32 1119.99 1748.57 1119.99 Q1745.3 1119.99 1743.38 1122.21 Q1741.46 1124.41 1741.46 1128.18 L1741.46 1142.83 L1737.18 1142.83 L1737.18 1116.91 L1741.46 1116.91 L1741.46 1120.94 Q1742.92 1118.55 1744.96 1117.42 Q1746.99 1116.28 1749.79 1116.28 Q1752.62 1116.28 1754.58 1117.72 Q1756.58 1119.15 1757.52 1121.89 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.028 ± 0.028\n  with uncertainty of ± 0.0025028718411415646\n  from 62 blocks after 5 transformations (k = 6).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables. Thankfully, the complications are handled by the following function.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01631 ± (0.00212832, 0.00206379) (MC)\n  95% confidence interval: [-4.02062, -4.01212]) (MC)\n  linear error propagation: -4.01637 ± 0.00215589\n  |δ_y| = |0.00243897| (≤ 0.1 for normal approx)\n  Blocking successful with 15 blocks after 7 transformations (k = 8).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.016314467689392, val_l = 0.004304544683139788, val_u = 0.00419639764247659)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 2Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, laststep], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip290\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip290)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip291\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip290)\" d=\"M401.953 1206.05 L2053.54 1206.05 L2053.54 346.457 L401.953 346.457  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip292\">\n    <rect x=\"401\" y=\"346\" width=\"1653\" height=\"861\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip292)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"448.176,1206.05 448.176,346.457 \"/>\n<polyline clip-path=\"url(#clip292)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"967.718,1206.05 967.718,346.457 \"/>\n<polyline clip-path=\"url(#clip292)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1487.26,1206.05 1487.26,346.457 \"/>\n<polyline clip-path=\"url(#clip292)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2006.8,1206.05 2006.8,346.457 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"401.953,1206.05 2053.54,1206.05 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"448.176,1206.05 448.176,1187.15 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"967.718,1206.05 967.718,1187.15 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1487.26,1206.05 1487.26,1187.15 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2006.8,1206.05 2006.8,1187.15 \"/>\n<path clip-path=\"url(#clip290)\" d=\"M448.176 1236.97 Q444.565 1236.97 442.737 1240.53 Q440.931 1244.07 440.931 1251.2 Q440.931 1258.31 442.737 1261.87 Q444.565 1265.41 448.176 1265.41 Q451.811 1265.41 453.616 1261.87 Q455.445 1258.31 455.445 1251.2 Q455.445 1244.07 453.616 1240.53 Q451.811 1236.97 448.176 1236.97 M448.176 1233.26 Q453.986 1233.26 457.042 1237.87 Q460.121 1242.45 460.121 1251.2 Q460.121 1259.93 457.042 1264.54 Q453.986 1269.12 448.176 1269.12 Q442.366 1269.12 439.288 1264.54 Q436.232 1259.93 436.232 1251.2 Q436.232 1242.45 439.288 1237.87 Q442.366 1233.26 448.176 1233.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M912.243 1264.51 L919.882 1264.51 L919.882 1238.15 L911.572 1239.81 L911.572 1235.55 L919.836 1233.89 L924.512 1233.89 L924.512 1264.51 L932.151 1264.51 L932.151 1268.45 L912.243 1268.45 L912.243 1264.51 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M951.595 1236.97 Q947.984 1236.97 946.155 1240.53 Q944.35 1244.07 944.35 1251.2 Q944.35 1258.31 946.155 1261.87 Q947.984 1265.41 951.595 1265.41 Q955.229 1265.41 957.035 1261.87 Q958.864 1258.31 958.864 1251.2 Q958.864 1244.07 957.035 1240.53 Q955.229 1236.97 951.595 1236.97 M951.595 1233.26 Q957.405 1233.26 960.461 1237.87 Q963.539 1242.45 963.539 1251.2 Q963.539 1259.93 960.461 1264.54 Q957.405 1269.12 951.595 1269.12 Q945.785 1269.12 942.706 1264.54 Q939.651 1259.93 939.651 1251.2 Q939.651 1242.45 942.706 1237.87 Q945.785 1233.26 951.595 1233.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M981.757 1236.97 Q978.146 1236.97 976.317 1240.53 Q974.512 1244.07 974.512 1251.2 Q974.512 1258.31 976.317 1261.87 Q978.146 1265.41 981.757 1265.41 Q985.391 1265.41 987.197 1261.87 Q989.025 1258.31 989.025 1251.2 Q989.025 1244.07 987.197 1240.53 Q985.391 1236.97 981.757 1236.97 M981.757 1233.26 Q987.567 1233.26 990.623 1237.87 Q993.701 1242.45 993.701 1251.2 Q993.701 1259.93 990.623 1264.54 Q987.567 1269.12 981.757 1269.12 Q975.947 1269.12 972.868 1264.54 Q969.813 1259.93 969.813 1251.2 Q969.813 1242.45 972.868 1237.87 Q975.947 1233.26 981.757 1233.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1011.92 1236.97 Q1008.31 1236.97 1006.48 1240.53 Q1004.67 1244.07 1004.67 1251.2 Q1004.67 1258.31 1006.48 1261.87 Q1008.31 1265.41 1011.92 1265.41 Q1015.55 1265.41 1017.36 1261.87 Q1019.19 1258.31 1019.19 1251.2 Q1019.19 1244.07 1017.36 1240.53 Q1015.55 1236.97 1011.92 1236.97 M1011.92 1233.26 Q1017.73 1233.26 1020.78 1237.87 Q1023.86 1242.45 1023.86 1251.2 Q1023.86 1259.93 1020.78 1264.54 Q1017.73 1269.12 1011.92 1269.12 Q1006.11 1269.12 1003.03 1264.54 Q999.974 1259.93 999.974 1251.2 Q999.974 1242.45 1003.03 1237.87 Q1006.11 1233.26 1011.92 1233.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1435.87 1264.51 L1452.19 1264.51 L1452.19 1268.45 L1430.25 1268.45 L1430.25 1264.51 Q1432.91 1261.76 1437.49 1257.13 Q1442.1 1252.48 1443.28 1251.13 Q1445.52 1248.61 1446.4 1246.87 Q1447.31 1245.11 1447.31 1243.42 Q1447.31 1240.67 1445.36 1238.93 Q1443.44 1237.2 1440.34 1237.2 Q1438.14 1237.2 1435.69 1237.96 Q1433.25 1238.73 1430.48 1240.28 L1430.48 1235.55 Q1433.3 1234.42 1435.75 1233.84 Q1438.21 1233.26 1440.25 1233.26 Q1445.62 1233.26 1448.81 1235.95 Q1452 1238.63 1452 1243.12 Q1452 1245.25 1451.19 1247.17 Q1450.41 1249.07 1448.3 1251.66 Q1447.72 1252.34 1444.62 1255.55 Q1441.52 1258.75 1435.87 1264.51 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1472 1236.97 Q1468.39 1236.97 1466.56 1240.53 Q1464.76 1244.07 1464.76 1251.2 Q1464.76 1258.31 1466.56 1261.87 Q1468.39 1265.41 1472 1265.41 Q1475.64 1265.41 1477.44 1261.87 Q1479.27 1258.31 1479.27 1251.2 Q1479.27 1244.07 1477.44 1240.53 Q1475.64 1236.97 1472 1236.97 M1472 1233.26 Q1477.81 1233.26 1480.87 1237.87 Q1483.95 1242.45 1483.95 1251.2 Q1483.95 1259.93 1480.87 1264.54 Q1477.81 1269.12 1472 1269.12 Q1466.19 1269.12 1463.12 1264.54 Q1460.06 1259.93 1460.06 1251.2 Q1460.06 1242.45 1463.12 1237.87 Q1466.19 1233.26 1472 1233.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1502.17 1236.97 Q1498.56 1236.97 1496.73 1240.53 Q1494.92 1244.07 1494.92 1251.2 Q1494.92 1258.31 1496.73 1261.87 Q1498.56 1265.41 1502.17 1265.41 Q1505.8 1265.41 1507.61 1261.87 Q1509.43 1258.31 1509.43 1251.2 Q1509.43 1244.07 1507.61 1240.53 Q1505.8 1236.97 1502.17 1236.97 M1502.17 1233.26 Q1507.98 1233.26 1511.03 1237.87 Q1514.11 1242.45 1514.11 1251.2 Q1514.11 1259.93 1511.03 1264.54 Q1507.98 1269.12 1502.17 1269.12 Q1496.36 1269.12 1493.28 1264.54 Q1490.22 1259.93 1490.22 1251.2 Q1490.22 1242.45 1493.28 1237.87 Q1496.36 1233.26 1502.17 1233.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1532.33 1236.97 Q1528.72 1236.97 1526.89 1240.53 Q1525.08 1244.07 1525.08 1251.2 Q1525.08 1258.31 1526.89 1261.87 Q1528.72 1265.41 1532.33 1265.41 Q1535.96 1265.41 1537.77 1261.87 Q1539.6 1258.31 1539.6 1251.2 Q1539.6 1244.07 1537.77 1240.53 Q1535.96 1236.97 1532.33 1236.97 M1532.33 1233.26 Q1538.14 1233.26 1541.19 1237.87 Q1544.27 1242.45 1544.27 1251.2 Q1544.27 1259.93 1541.19 1264.54 Q1538.14 1269.12 1532.33 1269.12 Q1526.52 1269.12 1523.44 1264.54 Q1520.38 1259.93 1520.38 1251.2 Q1520.38 1242.45 1523.44 1237.87 Q1526.52 1233.26 1532.33 1233.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1965.48 1249.81 Q1968.84 1250.53 1970.71 1252.8 Q1972.61 1255.07 1972.61 1258.4 Q1972.61 1263.52 1969.09 1266.32 Q1965.57 1269.12 1959.09 1269.12 Q1956.92 1269.12 1954.6 1268.68 Q1952.31 1268.26 1949.86 1267.41 L1949.86 1262.89 Q1951.8 1264.03 1954.12 1264.6 Q1956.43 1265.18 1958.95 1265.18 Q1963.35 1265.18 1965.64 1263.45 Q1967.96 1261.71 1967.96 1258.4 Q1967.96 1255.35 1965.81 1253.63 Q1963.68 1251.9 1959.86 1251.9 L1955.83 1251.9 L1955.83 1248.05 L1960.04 1248.05 Q1963.49 1248.05 1965.32 1246.69 Q1967.15 1245.3 1967.15 1242.71 Q1967.15 1240.04 1965.25 1238.63 Q1963.37 1237.2 1959.86 1237.2 Q1957.93 1237.2 1955.74 1237.61 Q1953.54 1238.03 1950.9 1238.91 L1950.9 1234.74 Q1953.56 1234 1955.87 1233.63 Q1958.21 1233.26 1960.27 1233.26 Q1965.6 1233.26 1968.7 1235.69 Q1971.8 1238.1 1971.8 1242.22 Q1971.8 1245.09 1970.16 1247.08 Q1968.51 1249.05 1965.48 1249.81 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1991.48 1236.97 Q1987.87 1236.97 1986.04 1240.53 Q1984.23 1244.07 1984.23 1251.2 Q1984.23 1258.31 1986.04 1261.87 Q1987.87 1265.41 1991.48 1265.41 Q1995.11 1265.41 1996.92 1261.87 Q1998.74 1258.31 1998.74 1251.2 Q1998.74 1244.07 1996.92 1240.53 Q1995.11 1236.97 1991.48 1236.97 M1991.48 1233.26 Q1997.29 1233.26 2000.34 1237.87 Q2003.42 1242.45 2003.42 1251.2 Q2003.42 1259.93 2000.34 1264.54 Q1997.29 1269.12 1991.48 1269.12 Q1985.67 1269.12 1982.59 1264.54 Q1979.53 1259.93 1979.53 1251.2 Q1979.53 1242.45 1982.59 1237.87 Q1985.67 1233.26 1991.48 1233.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M2021.64 1236.97 Q2018.03 1236.97 2016.2 1240.53 Q2014.39 1244.07 2014.39 1251.2 Q2014.39 1258.31 2016.2 1261.87 Q2018.03 1265.41 2021.64 1265.41 Q2025.27 1265.41 2027.08 1261.87 Q2028.91 1258.31 2028.91 1251.2 Q2028.91 1244.07 2027.08 1240.53 Q2025.27 1236.97 2021.64 1236.97 M2021.64 1233.26 Q2027.45 1233.26 2030.5 1237.87 Q2033.58 1242.45 2033.58 1251.2 Q2033.58 1259.93 2030.5 1264.54 Q2027.45 1269.12 2021.64 1269.12 Q2015.83 1269.12 2012.75 1264.54 Q2009.69 1259.93 2009.69 1251.2 Q2009.69 1242.45 2012.75 1237.87 Q2015.83 1233.26 2021.64 1233.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M2051.8 1236.97 Q2048.19 1236.97 2046.36 1240.53 Q2044.55 1244.07 2044.55 1251.2 Q2044.55 1258.31 2046.36 1261.87 Q2048.19 1265.41 2051.8 1265.41 Q2055.43 1265.41 2057.24 1261.87 Q2059.07 1258.31 2059.07 1251.2 Q2059.07 1244.07 2057.24 1240.53 Q2055.43 1236.97 2051.8 1236.97 M2051.8 1233.26 Q2057.61 1233.26 2060.67 1237.87 Q2063.74 1242.45 2063.74 1251.2 Q2063.74 1259.93 2060.67 1264.54 Q2057.61 1269.12 2051.8 1269.12 Q2045.99 1269.12 2042.91 1264.54 Q2039.86 1259.93 2039.86 1251.2 Q2039.86 1242.45 2042.91 1237.87 Q2045.99 1233.26 2051.8 1233.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1168.96 1316.31 L1168.96 1321.85 Q1166.48 1320.58 1163.8 1319.94 Q1161.13 1319.31 1158.27 1319.31 Q1153.91 1319.31 1151.71 1320.64 Q1149.55 1321.98 1149.55 1324.65 Q1149.55 1326.69 1151.1 1327.87 Q1152.66 1329.01 1157.38 1330.06 L1159.38 1330.51 Q1165.62 1331.85 1168.23 1334.3 Q1170.87 1336.72 1170.87 1341.08 Q1170.87 1346.04 1166.92 1348.94 Q1163.01 1351.83 1156.13 1351.83 Q1153.27 1351.83 1150.15 1351.26 Q1147.06 1350.72 1143.63 1349.61 L1143.63 1343.56 Q1146.87 1345.25 1150.02 1346.11 Q1153.17 1346.93 1156.26 1346.93 Q1160.4 1346.93 1162.63 1345.53 Q1164.85 1344.1 1164.85 1341.52 Q1164.85 1339.13 1163.23 1337.86 Q1161.64 1336.59 1156.2 1335.41 L1154.16 1334.93 Q1148.72 1333.79 1146.3 1331.43 Q1143.88 1329.05 1143.88 1324.91 Q1143.88 1319.88 1147.44 1317.14 Q1151.01 1314.4 1157.57 1314.4 Q1160.81 1314.4 1163.68 1314.88 Q1166.54 1315.36 1168.96 1316.31 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1185.99 1305.14 L1185.99 1315.26 L1198.05 1315.26 L1198.05 1319.81 L1185.99 1319.81 L1185.99 1339.17 Q1185.99 1343.53 1187.17 1344.77 Q1188.38 1346.01 1192.04 1346.01 L1198.05 1346.01 L1198.05 1350.91 L1192.04 1350.91 Q1185.26 1350.91 1182.68 1348.4 Q1180.1 1345.85 1180.1 1339.17 L1180.1 1319.81 L1175.8 1319.81 L1175.8 1315.26 L1180.1 1315.26 L1180.1 1305.14 L1185.99 1305.14 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1236.25 1331.62 L1236.25 1334.49 L1209.32 1334.49 Q1209.7 1340.54 1212.95 1343.72 Q1216.23 1346.87 1222.05 1346.87 Q1225.42 1346.87 1228.58 1346.04 Q1231.76 1345.21 1234.88 1343.56 L1234.88 1349.1 Q1231.73 1350.43 1228.42 1351.13 Q1225.11 1351.83 1221.7 1351.83 Q1213.17 1351.83 1208.17 1346.87 Q1203.21 1341.9 1203.21 1333.44 Q1203.21 1324.68 1207.92 1319.56 Q1212.66 1314.4 1220.68 1314.4 Q1227.88 1314.4 1232.04 1319.05 Q1236.25 1323.67 1236.25 1331.62 M1230.39 1329.9 Q1230.33 1325.1 1227.68 1322.23 Q1225.07 1319.37 1220.75 1319.37 Q1215.84 1319.37 1212.88 1322.14 Q1209.96 1324.91 1209.51 1329.94 L1230.39 1329.9 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1251.52 1345.56 L1251.52 1364.47 L1245.64 1364.47 L1245.64 1315.26 L1251.52 1315.26 L1251.52 1320.67 Q1253.37 1317.49 1256.17 1315.96 Q1259 1314.4 1262.92 1314.4 Q1269.41 1314.4 1273.45 1319.56 Q1277.53 1324.72 1277.53 1333.12 Q1277.53 1341.52 1273.45 1346.68 Q1269.41 1351.83 1262.92 1351.83 Q1259 1351.83 1256.17 1350.31 Q1253.37 1348.75 1251.52 1345.56 M1271.45 1333.12 Q1271.45 1326.66 1268.78 1323 Q1266.13 1319.31 1261.49 1319.31 Q1256.84 1319.31 1254.17 1323 Q1251.52 1326.66 1251.52 1333.12 Q1251.52 1339.58 1254.17 1343.27 Q1256.84 1346.93 1261.49 1346.93 Q1266.13 1346.93 1268.78 1343.27 Q1271.45 1339.58 1271.45 1333.12 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1309.96 1316.31 L1309.96 1321.85 Q1307.48 1320.58 1304.8 1319.94 Q1302.13 1319.31 1299.27 1319.31 Q1294.91 1319.31 1292.71 1320.64 Q1290.55 1321.98 1290.55 1324.65 Q1290.55 1326.69 1292.11 1327.87 Q1293.66 1329.01 1298.38 1330.06 L1300.38 1330.51 Q1306.62 1331.85 1309.23 1334.3 Q1311.87 1336.72 1311.87 1341.08 Q1311.87 1346.04 1307.92 1348.94 Q1304.01 1351.83 1297.13 1351.83 Q1294.27 1351.83 1291.15 1351.26 Q1288.06 1350.72 1284.63 1349.61 L1284.63 1343.56 Q1287.87 1345.25 1291.02 1346.11 Q1294.17 1346.93 1297.26 1346.93 Q1301.4 1346.93 1303.63 1345.53 Q1305.86 1344.1 1305.86 1341.52 Q1305.86 1339.13 1304.23 1337.86 Q1302.64 1336.59 1297.2 1335.41 L1295.16 1334.93 Q1289.72 1333.79 1287.3 1331.43 Q1284.88 1329.05 1284.88 1324.91 Q1284.88 1319.88 1288.45 1317.14 Q1292.01 1314.4 1298.57 1314.4 Q1301.81 1314.4 1304.68 1314.88 Q1307.54 1315.36 1309.96 1316.31 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip292)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"401.953,1101.06 2053.54,1101.06 \"/>\n<polyline clip-path=\"url(#clip292)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"401.953,976.767 2053.54,976.767 \"/>\n<polyline clip-path=\"url(#clip292)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"401.953,852.473 2053.54,852.473 \"/>\n<polyline clip-path=\"url(#clip292)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"401.953,728.179 2053.54,728.179 \"/>\n<polyline clip-path=\"url(#clip292)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"401.953,603.885 2053.54,603.885 \"/>\n<polyline clip-path=\"url(#clip292)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"401.953,479.59 2053.54,479.59 \"/>\n<polyline clip-path=\"url(#clip292)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"401.953,355.296 2053.54,355.296 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"401.953,1206.05 401.953,346.457 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"401.953,1101.06 420.85,1101.06 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"401.953,976.767 420.85,976.767 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"401.953,852.473 420.85,852.473 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"401.953,728.179 420.85,728.179 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"401.953,603.885 420.85,603.885 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"401.953,479.59 420.85,479.59 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"401.953,355.296 420.85,355.296 \"/>\n<path clip-path=\"url(#clip290)\" d=\"M354.008 1086.86 Q350.397 1086.86 348.569 1090.42 Q346.763 1093.97 346.763 1101.1 Q346.763 1108.2 348.569 1111.77 Q350.397 1115.31 354.008 1115.31 Q357.643 1115.31 359.448 1111.77 Q361.277 1108.2 361.277 1101.1 Q361.277 1093.97 359.448 1090.42 Q357.643 1086.86 354.008 1086.86 M354.008 1083.16 Q359.819 1083.16 362.874 1087.76 Q365.953 1092.35 365.953 1101.1 Q365.953 1109.82 362.874 1114.43 Q359.819 1119.01 354.008 1119.01 Q348.198 1119.01 345.12 1114.43 Q342.064 1109.82 342.064 1101.1 Q342.064 1092.35 345.12 1087.76 Q348.198 1083.16 354.008 1083.16 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M314.657 990.112 L322.296 990.112 L322.296 963.746 L313.985 965.413 L313.985 961.154 L322.249 959.487 L326.925 959.487 L326.925 990.112 L334.564 990.112 L334.564 994.047 L314.657 994.047 L314.657 990.112 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M354.008 962.566 Q350.397 962.566 348.569 966.131 Q346.763 969.672 346.763 976.802 Q346.763 983.908 348.569 987.473 Q350.397 991.015 354.008 991.015 Q357.643 991.015 359.448 987.473 Q361.277 983.908 361.277 976.802 Q361.277 969.672 359.448 966.131 Q357.643 962.566 354.008 962.566 M354.008 958.862 Q359.819 958.862 362.874 963.469 Q365.953 968.052 365.953 976.802 Q365.953 985.529 362.874 990.135 Q359.819 994.718 354.008 994.718 Q348.198 994.718 345.12 990.135 Q342.064 985.529 342.064 976.802 Q342.064 968.052 345.12 963.469 Q348.198 958.862 354.008 958.862 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M317.874 865.818 L334.194 865.818 L334.194 869.753 L312.249 869.753 L312.249 865.818 Q314.911 863.063 319.495 858.434 Q324.101 853.781 325.282 852.438 Q327.527 849.915 328.407 848.179 Q329.309 846.42 329.309 844.73 Q329.309 841.975 327.365 840.239 Q325.444 838.503 322.342 838.503 Q320.143 838.503 317.689 839.267 Q315.259 840.031 312.481 841.582 L312.481 836.86 Q315.305 835.725 317.759 835.147 Q320.212 834.568 322.249 834.568 Q327.62 834.568 330.814 837.253 Q334.008 839.938 334.008 844.429 Q334.008 846.559 333.198 848.48 Q332.411 850.378 330.305 852.971 Q329.726 853.642 326.624 856.86 Q323.522 860.054 317.874 865.818 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M354.008 838.272 Q350.397 838.272 348.569 841.836 Q346.763 845.378 346.763 852.508 Q346.763 859.614 348.569 863.179 Q350.397 866.721 354.008 866.721 Q357.643 866.721 359.448 863.179 Q361.277 859.614 361.277 852.508 Q361.277 845.378 359.448 841.836 Q357.643 838.272 354.008 838.272 M354.008 834.568 Q359.819 834.568 362.874 839.174 Q365.953 843.758 365.953 852.508 Q365.953 861.235 362.874 865.841 Q359.819 870.424 354.008 870.424 Q348.198 870.424 345.12 865.841 Q342.064 861.235 342.064 852.508 Q342.064 843.758 345.12 839.174 Q348.198 834.568 354.008 834.568 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M328.013 726.825 Q331.37 727.542 333.245 729.811 Q335.143 732.079 335.143 735.413 Q335.143 740.528 331.624 743.329 Q328.106 746.13 321.624 746.13 Q319.448 746.13 317.134 745.69 Q314.842 745.274 312.388 744.417 L312.388 739.903 Q314.333 741.038 316.647 741.616 Q318.962 742.195 321.485 742.195 Q325.884 742.195 328.175 740.459 Q330.49 738.723 330.49 735.413 Q330.49 732.357 328.337 730.644 Q326.208 728.908 322.388 728.908 L318.36 728.908 L318.36 725.065 L322.573 725.065 Q326.022 725.065 327.851 723.7 Q329.68 722.311 329.68 719.718 Q329.68 717.056 327.782 715.644 Q325.907 714.209 322.388 714.209 Q320.467 714.209 318.268 714.626 Q316.069 715.042 313.43 715.922 L313.43 711.755 Q316.092 711.015 318.407 710.644 Q320.745 710.274 322.805 710.274 Q328.129 710.274 331.231 712.704 Q334.333 715.112 334.333 719.232 Q334.333 722.102 332.689 724.093 Q331.046 726.061 328.013 726.825 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M354.008 713.978 Q350.397 713.978 348.569 717.542 Q346.763 721.084 346.763 728.214 Q346.763 735.32 348.569 738.885 Q350.397 742.426 354.008 742.426 Q357.643 742.426 359.448 738.885 Q361.277 735.32 361.277 728.214 Q361.277 721.084 359.448 717.542 Q357.643 713.978 354.008 713.978 M354.008 710.274 Q359.819 710.274 362.874 714.88 Q365.953 719.464 365.953 728.214 Q365.953 736.94 362.874 741.547 Q359.819 746.13 354.008 746.13 Q348.198 746.13 345.12 741.547 Q342.064 736.94 342.064 728.214 Q342.064 719.464 345.12 714.88 Q348.198 710.274 354.008 710.274 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M326.694 590.679 L314.888 609.128 L326.694 609.128 L326.694 590.679 M325.467 586.605 L331.346 586.605 L331.346 609.128 L336.277 609.128 L336.277 613.017 L331.346 613.017 L331.346 621.165 L326.694 621.165 L326.694 613.017 L311.092 613.017 L311.092 608.503 L325.467 586.605 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M354.008 589.683 Q350.397 589.683 348.569 593.248 Q346.763 596.79 346.763 603.919 Q346.763 611.026 348.569 614.591 Q350.397 618.132 354.008 618.132 Q357.643 618.132 359.448 614.591 Q361.277 611.026 361.277 603.919 Q361.277 596.79 359.448 593.248 Q357.643 589.683 354.008 589.683 M354.008 585.98 Q359.819 585.98 362.874 590.586 Q365.953 595.169 365.953 603.919 Q365.953 612.646 362.874 617.253 Q359.819 621.836 354.008 621.836 Q348.198 621.836 345.12 617.253 Q342.064 612.646 342.064 603.919 Q342.064 595.169 345.12 590.586 Q348.198 585.98 354.008 585.98 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M313.893 462.31 L332.249 462.31 L332.249 466.246 L318.175 466.246 L318.175 474.718 Q319.194 474.371 320.212 474.209 Q321.231 474.023 322.249 474.023 Q328.036 474.023 331.416 477.195 Q334.796 480.366 334.796 485.783 Q334.796 491.361 331.323 494.463 Q327.851 497.542 321.532 497.542 Q319.356 497.542 317.087 497.171 Q314.842 496.801 312.435 496.06 L312.435 491.361 Q314.518 492.496 316.74 493.051 Q318.962 493.607 321.439 493.607 Q325.444 493.607 327.782 491.5 Q330.12 489.394 330.12 485.783 Q330.12 482.171 327.782 480.065 Q325.444 477.959 321.439 477.959 Q319.564 477.959 317.689 478.375 Q315.837 478.792 313.893 479.671 L313.893 462.31 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M354.008 465.389 Q350.397 465.389 348.569 468.954 Q346.763 472.496 346.763 479.625 Q346.763 486.732 348.569 490.296 Q350.397 493.838 354.008 493.838 Q357.643 493.838 359.448 490.296 Q361.277 486.732 361.277 479.625 Q361.277 472.496 359.448 468.954 Q357.643 465.389 354.008 465.389 M354.008 461.685 Q359.819 461.685 362.874 466.292 Q365.953 470.875 365.953 479.625 Q365.953 488.352 362.874 492.958 Q359.819 497.542 354.008 497.542 Q348.198 497.542 345.12 492.958 Q342.064 488.352 342.064 479.625 Q342.064 470.875 345.12 466.292 Q348.198 461.685 354.008 461.685 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M324.425 353.433 Q321.277 353.433 319.425 355.586 Q317.597 357.738 317.597 361.488 Q317.597 365.215 319.425 367.391 Q321.277 369.544 324.425 369.544 Q327.573 369.544 329.402 367.391 Q331.254 365.215 331.254 361.488 Q331.254 357.738 329.402 355.586 Q327.573 353.433 324.425 353.433 M333.708 338.78 L333.708 343.039 Q331.948 342.206 330.143 341.766 Q328.36 341.326 326.601 341.326 Q321.972 341.326 319.518 344.451 Q317.087 347.576 316.74 353.896 Q318.106 351.882 320.166 350.817 Q322.226 349.729 324.703 349.729 Q329.911 349.729 332.921 352.9 Q335.953 356.049 335.953 361.488 Q335.953 366.812 332.805 370.03 Q329.657 373.248 324.425 373.248 Q318.43 373.248 315.259 368.664 Q312.087 364.058 312.087 355.331 Q312.087 347.137 315.976 342.276 Q319.865 337.391 326.416 337.391 Q328.175 337.391 329.958 337.739 Q331.763 338.086 333.708 338.78 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M354.008 341.095 Q350.397 341.095 348.569 344.66 Q346.763 348.201 346.763 355.331 Q346.763 362.437 348.569 366.002 Q350.397 369.544 354.008 369.544 Q357.643 369.544 359.448 366.002 Q361.277 362.437 361.277 355.331 Q361.277 348.201 359.448 344.66 Q357.643 341.095 354.008 341.095 M354.008 337.391 Q359.819 337.391 362.874 341.998 Q365.953 346.581 365.953 355.331 Q365.953 364.058 362.874 368.664 Q359.819 373.248 354.008 373.248 Q348.198 373.248 345.12 368.664 Q342.064 364.058 342.064 355.331 Q342.064 346.581 345.12 341.998 Q348.198 337.391 354.008 337.391 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M241.548 854.009 L244.412 854.009 L244.412 880.936 Q250.46 880.554 253.643 877.308 Q256.794 874.029 256.794 868.205 Q256.794 864.831 255.966 861.68 Q255.139 858.497 253.484 855.378 L259.022 855.378 Q260.359 858.529 261.059 861.839 Q261.759 865.149 261.759 868.555 Q261.759 877.085 256.794 882.082 Q251.828 887.047 243.362 887.047 Q234.609 887.047 229.485 882.336 Q224.329 877.594 224.329 869.573 Q224.329 862.38 228.976 858.21 Q233.591 854.009 241.548 854.009 M239.829 859.866 Q235.023 859.929 232.158 862.571 Q229.294 865.181 229.294 869.51 Q229.294 874.411 232.063 877.371 Q234.832 880.299 239.861 880.745 L239.829 859.866 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M239.32 814.764 L260.836 814.764 L260.836 820.621 L239.511 820.621 Q234.45 820.621 231.936 822.594 Q229.421 824.568 229.421 828.514 Q229.421 833.257 232.445 835.994 Q235.469 838.731 240.688 838.731 L260.836 838.731 L260.836 844.62 L225.188 844.62 L225.188 838.731 L230.726 838.731 Q227.511 836.631 225.92 833.798 Q224.329 830.933 224.329 827.209 Q224.329 821.067 228.148 817.916 Q231.936 814.764 239.32 814.764 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M241.548 772.592 L244.412 772.592 L244.412 799.519 Q250.46 799.137 253.643 795.89 Q256.794 792.612 256.794 786.787 Q256.794 783.413 255.966 780.262 Q255.139 777.08 253.484 773.96 L259.022 773.96 Q260.359 777.111 261.059 780.422 Q261.759 783.732 261.759 787.137 Q261.759 795.667 256.794 800.664 Q251.828 805.63 243.362 805.63 Q234.609 805.63 229.485 800.919 Q224.329 796.177 224.329 788.156 Q224.329 780.963 228.976 776.793 Q233.591 772.592 241.548 772.592 M239.829 778.448 Q235.023 778.512 232.158 781.154 Q229.294 783.764 229.294 788.092 Q229.294 792.994 232.063 795.954 Q234.832 798.882 239.861 799.328 L239.829 778.448 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M230.662 742.323 Q230.09 743.309 229.835 744.487 Q229.548 745.633 229.548 747.033 Q229.548 751.999 232.795 754.672 Q236.01 757.314 242.057 757.314 L260.836 757.314 L260.836 763.202 L225.188 763.202 L225.188 757.314 L230.726 757.314 Q227.48 755.468 225.92 752.508 Q224.329 749.548 224.329 745.315 Q224.329 744.71 224.424 743.978 Q224.488 743.246 224.647 742.355 L230.662 742.323 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M242.598 713.868 Q236.232 713.868 232.731 716.51 Q229.23 719.12 229.23 723.862 Q229.23 728.573 232.731 731.215 Q236.232 733.825 242.598 733.825 Q248.932 733.825 252.433 731.215 Q255.934 728.573 255.934 723.862 Q255.934 719.12 252.433 716.51 Q248.932 713.868 242.598 713.868 M256.412 708.012 Q265.515 708.012 269.939 712.054 Q274.395 716.096 274.395 724.435 Q274.395 727.522 273.917 730.26 Q273.472 732.997 272.517 735.575 L266.82 735.575 Q268.22 732.997 268.889 730.483 Q269.557 727.968 269.557 725.358 Q269.557 719.597 266.533 716.733 Q263.541 713.868 257.462 713.868 L254.566 713.868 Q257.717 715.682 259.276 718.515 Q260.836 721.348 260.836 725.294 Q260.836 731.851 255.839 735.862 Q250.842 739.872 242.598 739.872 Q234.323 739.872 229.326 735.862 Q224.329 731.851 224.329 725.294 Q224.329 721.348 225.888 718.515 Q227.448 715.682 230.599 713.868 L225.188 713.868 L225.188 708.012 L256.412 708.012 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M264.146 681.116 Q270.512 683.599 272.453 685.954 Q274.395 688.31 274.395 692.256 L274.395 696.935 L269.493 696.935 L269.493 693.498 Q269.493 691.079 268.347 689.742 Q267.202 688.405 262.937 686.782 L260.263 685.732 L225.188 700.15 L225.188 693.943 L253.07 682.803 L225.188 671.663 L225.188 665.457 L264.146 681.116 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip292)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"448.696,1009.48 449.215,1021.33 449.735,940.826 450.255,863.883 450.774,794.667 451.294,733.128 451.813,755.3 452.333,698.664 452.852,648.276 453.372,600.021 453.891,557.38 454.411,580.781 454.93,597.794 455.45,558.709 455.969,524.08 456.489,493.011 457.009,465.783 457.528,441.551 458.048,420.223 458.567,401.7 459.087,385.685 459.606,371.43 460.126,392.317 460.645,410.928 461.165,399.608 461.684,390.645 462.204,382.968 462.723,377.358 463.243,374.214 463.763,372.177 464.282,370.785 464.802,371.249 465.321,373.791 465.841,408.353 466.36,410.894 466.88,429.478 467.399,434.307 467.919,452.088 468.438,468.964 468.958,485.835 469.478,504.339 469.997,511.677 470.517,520.112 471.036,528.796 471.556,537.85 472.075,546.567 472.595,555.387 473.114,600.064 473.634,608.292 474.153,616.698 474.673,631.384 475.192,651.152 475.712,665.591 476.232,678.833 476.751,692.058 477.271,704.976 477.79,717.269 478.31,725.403 478.829,741.636 479.349,756.777 479.868,768.013 480.388,778.622 480.907,789.015 481.427,795.566 481.947,802.503 482.466,812.555 482.986,825.814 483.505,841.308 484.025,849.865 484.544,861.45 485.064,870.296 485.583,884.081 486.103,894.344 486.622,901.887 487.142,916.561 487.661,925.674 488.181,934.16 488.701,942.493 489.22,950.34 489.74,962.325 490.259,965.539 490.779,972.947 491.298,978.233 491.818,987.245 492.337,996.151 492.857,1003.02 493.376,1007.23 493.896,1007.98 494.416,1010.68 494.935,1017.33 495.455,1023.47 495.974,1027.92 496.494,1032.34 497.013,1040.1 497.533,1047.4 498.052,1052.72 498.572,1058.12 499.091,1061.69 499.611,1063.58 500.13,1066.67 500.65,1068.39 501.17,1074.68 501.689,1079.32 502.209,1080.89 502.728,1084.15 503.248,1085.73 503.767,1088.74 504.287,1093.6 504.806,1095.07 505.326,1096.73 505.845,1099.61 506.365,1103.94 506.885,1106.65 507.404,1108.12 507.924,1111.01 508.443,1114.94 508.963,1116.03 509.482,1121.09 510.002,1122.14 510.521,1124.37 511.041,1124.12 511.56,1127.53 512.08,1128.62 512.599,1133.14 513.119,1136.34 513.639,1136.72 514.158,1138.66 514.678,1139.2 515.197,1141.05 515.717,1141.51 516.236,1141.93 516.756,1142.47 517.275,1145.52 517.795,1147.15 518.314,1146.35 518.834,1146.92 519.353,1147.35 519.873,1151.24 520.393,1151.67 520.912,1152.15 521.432,1153.76 521.951,1157.49 522.471,1158.57 522.99,1162.02 523.51,1162 524.029,1162.96 524.549,1165.05 525.068,1163.66 525.588,1165.71 526.108,1164.59 526.627,1163.16 527.147,1162 527.666,1163.13 528.186,1164.2 528.705,1164.12 529.225,1165.24 529.744,1168.42 530.264,1169.25 530.783,1169.82 531.303,1170.61 531.822,1172.61 532.342,1172.43 532.862,1173 533.381,1173.73 533.901,1173.53 534.42,1177.32 534.94,1177.76 535.459,1177.1 535.979,1176.58 536.498,1175.83 537.018,1175.36 537.537,1175.97 538.057,1175.51 538.577,1175.01 539.096,1173.54 539.616,1174.29 540.135,1174.02 540.655,1174.49 541.174,1175.1 541.694,1172.59 542.213,1173.57 542.733,1174.15 543.252,1173.92 543.772,1174.58 544.291,1174.46 544.811,1177.38 545.331,1177.91 545.85,1178.52 546.37,1178.02 546.889,1177.54 547.409,1178.07 547.928,1179.58 548.448,1178.82 548.967,1179.18 549.487,1180.49 550.006,1181.72 550.526,1181.08 551.046,1180.39 551.565,1179.58 552.085,1178.89 552.604,1180.29 553.124,1178.49 553.643,1180.01 554.163,1179.37 554.682,1178.78 555.202,1178.39 555.721,1178.91 556.241,1178.2 556.76,1178.66 557.28,1180.12 557.8,1177.11 558.319,1179.87 558.839,1179.87 559.358,1180.17 559.878,1179.29 560.397,1178.65 560.917,1179.32 561.436,1178.69 561.956,1176.01 562.475,1175.73 562.995,1178.23 563.515,1177.69 564.034,1180.19 564.554,1179.46 565.073,1176.55 565.593,1175.92 566.112,1176.36 566.632,1174.77 567.151,1175.32 567.671,1175.79 568.19,1175.41 568.71,1175.91 569.229,1175.37 569.749,1173.08 570.269,1170.61 570.788,1169.69 571.308,1168.29 571.827,1169.29 572.347,1168.92 572.866,1166.63 573.386,1166.63 573.905,1167.58 574.425,1167.43 574.944,1170.32 575.464,1170.31 575.983,1168.74 576.503,1169.29 577.023,1171.21 577.542,1171.04 578.062,1171.8 578.581,1172.44 579.101,1171.25 579.62,1171.03 580.14,1169.69 580.659,1171.59 581.179,1171.32 581.698,1169.95 582.218,1167.85 582.738,1167.48 583.257,1167.26 583.777,1167.03 584.296,1164.82 584.816,1164.58 585.335,1165.63 585.855,1166.59 586.374,1167.63 586.894,1167.61 587.413,1167.49 587.933,1167.42 588.452,1165.24 588.972,1166.18 589.492,1166.9 590.011,1167.82 590.531,1170.74 591.05,1170.21 591.57,1170.05 592.089,1169.79 592.609,1169.54 593.128,1171.44 593.648,1171.08 594.167,1170.57 594.687,1171.08 595.207,1170.81 595.726,1171.4 596.246,1172.15 596.765,1173.95 597.285,1172.62 597.804,1173.19 598.324,1172.59 598.843,1171.95 599.363,1173.4 599.882,1171.73 600.402,1171.29 600.921,1170.96 601.441,1170.46 601.961,1171.94 602.48,1171.47 603,1170.75 603.519,1170.31 604.039,1172.86 604.558,1171.61 605.078,1171.09 605.597,1170.76 606.117,1170.47 606.636,1170.13 607.156,1169.66 607.676,1169.37 608.195,1168.88 608.715,1166.31 609.234,1167.11 609.754,1168.7 610.273,1169.27 610.793,1168.91 611.312,1167.39 611.832,1169.02 612.351,1168.52 612.871,1167.2 613.39,1166.85 613.91,1165.52 614.43,1167.39 614.949,1171.96 615.469,1170.13 615.988,1169.55 616.508,1171.25 617.027,1169.82 617.547,1168.35 618.066,1169.29 618.586,1169.92 619.105,1169.41 619.625,1168.03 620.145,1167.83 620.664,1167.49 621.184,1169.14 621.703,1170.58 622.223,1171.07 622.742,1171.53 623.262,1170.99 623.781,1171.64 624.301,1172.99 624.82,1168.29 625.34,1166.89 625.859,1167.59 626.379,1167.3 626.899,1166.19 627.418,1165.85 627.938,1163.57 628.457,1163.2 628.977,1162.02 629.496,1162.92 630.016,1164.62 630.535,1167.26 631.055,1165.85 631.574,1166.66 632.094,1166.25 632.613,1167.69 633.133,1167.39 633.653,1165.98 634.172,1166.72 634.692,1165.2 635.211,1165.96 635.731,1165.61 636.25,1163.19 636.77,1161.99 637.289,1161.63 637.809,1160.59 638.328,1160.59 638.848,1160.67 639.368,1160.57 639.887,1161.6 640.407,1162.44 640.926,1162.34 641.446,1162.06 641.965,1159.92 642.485,1163.98 643.004,1163.63 643.524,1163.4 644.043,1165.11 644.563,1163.78 645.082,1163.37 645.602,1166.2 646.122,1165.7 646.641,1165.59 647.161,1165.12 647.68,1164.88 648.2,1166.34 648.719,1166.06 649.239,1165.31 649.758,1166.02 650.278,1166.78 650.797,1167.23 651.317,1166.98 651.837,1168.38 652.356,1167.83 652.876,1167.26 653.395,1167.75 653.915,1169.32 654.434,1167.73 654.954,1165.08 655.473,1163.81 655.993,1161.49 656.512,1161.29 657.032,1159.93 657.551,1159.85 658.071,1159.88 658.591,1158.62 659.11,1158.47 659.63,1161.58 660.149,1162.38 660.669,1161.19 661.188,1163.06 661.708,1160.66 662.227,1159.58 662.747,1160.35 663.266,1162.27 663.786,1161.83 664.306,1160.77 664.825,1161.55 665.345,1161.46 665.864,1160.28 666.384,1161.15 666.903,1159.94 667.423,1159.84 667.942,1159.82 668.462,1158.67 668.981,1158.73 669.501,1158.57 670.02,1157.3 670.54,1158.41 671.06,1158.16 671.579,1158.21 672.099,1161.14 672.618,1160.86 673.138,1160.89 673.657,1160.75 674.177,1161.56 674.696,1160.16 675.216,1159.91 675.735,1157.8 676.255,1156.73 676.775,1155.98 677.294,1154.01 677.814,1154.21 678.333,1154.26 678.853,1154.56 679.372,1154.69 679.892,1155.66 680.411,1154.65 680.931,1154.73 681.45,1155.88 681.97,1157.98 682.489,1158 683.009,1158.01 683.529,1157.88 684.048,1158.82 684.568,1157.74 685.087,1157.73 685.607,1154.7 686.126,1155.8 686.646,1154.88 687.165,1153 687.685,1153.28 688.204,1155.52 688.724,1154.52 689.243,1154.76 689.763,1155.04 690.283,1157.11 690.802,1159.24 691.322,1158.4 691.841,1157.38 692.361,1157.52 692.88,1156.55 693.4,1156.57 693.919,1155.65 694.439,1155.72 694.958,1154.59 695.478,1153.72 695.998,1155.07 696.517,1154.31 697.037,1156.46 697.556,1157.32 698.076,1159.18 698.595,1158.75 699.115,1158.52 699.634,1156.43 700.154,1158.38 700.673,1159.06 701.193,1159.9 701.712,1159.77 702.232,1159.43 702.752,1159.38 703.271,1159.17 703.791,1156.14 704.31,1155.92 704.83,1155.91 705.349,1154.89 705.869,1153.79 706.388,1154.9 706.908,1156.9 707.427,1158.04 707.947,1155.86 708.467,1156.99 708.986,1155.76 709.506,1156.72 710.025,1156.6 710.545,1154.5 711.064,1156.66 711.584,1157.72 712.103,1158.64 712.623,1158.45 713.142,1159.3 713.662,1158.96 714.181,1155.77 714.701,1159.64 715.221,1161.42 715.74,1162.32 716.26,1162.84 716.779,1161.29 717.299,1160.95 717.818,1161.64 718.338,1161.12 718.857,1164.77 719.377,1164.33 719.896,1163.83 720.416,1166.35 720.936,1167.87 721.455,1165.22 721.975,1164.66 722.494,1164.29 723.014,1161.7 723.533,1161.18 724.053,1160.12 724.572,1158.72 725.092,1158.49 725.611,1158.39 726.131,1159.31 726.65,1156.1 727.17,1158.13 727.69,1157.93 728.209,1157.87 728.729,1156.75 729.248,1157.38 729.768,1155 730.287,1153.86 730.807,1153.91 731.326,1153.03 731.846,1153.22 732.365,1153.45 732.885,1155.79 733.405,1154.64 733.924,1154.57 734.444,1155.49 734.963,1155.55 735.483,1156.42 736.002,1158.41 736.522,1154.89 737.041,1156.91 737.561,1155.73 738.08,1155.73 738.6,1153.7 739.119,1152.84 739.639,1153.89 740.159,1155.02 740.678,1157.25 741.198,1157.27 741.717,1157.95 742.237,1156.88 742.756,1155.75 743.276,1155.45 743.795,1154.43 744.315,1151.35 744.834,1151.69 745.354,1151.84 745.873,1153.04 746.393,1153.07 746.913,1154.43 747.432,1157.35 747.952,1156.32 748.471,1156.3 748.991,1156.44 749.51,1157.37 750.03,1157.97 750.549,1155.65 751.069,1154.49 751.588,1152.47 752.108,1152.64 752.628,1152.92 753.147,1152.07 753.667,1152.2 754.186,1153.12 754.706,1153.06 755.225,1153.18 755.745,1153.18 756.264,1154.35 756.784,1156.3 757.303,1158.23 757.823,1157.92 758.342,1157.7 758.862,1157.48 759.382,1156.18 759.901,1157.06 760.421,1156.9 760.94,1156.63 761.46,1154.51 761.979,1154.44 762.499,1154.35 763.018,1154.42 763.538,1154.47 764.057,1156.28 764.577,1154.18 765.097,1153.35 765.616,1153.33 766.136,1153.35 766.655,1154.31 767.175,1151.36 767.694,1149.4 768.214,1151.79 768.733,1150.88 769.253,1150.85 769.772,1153.63 770.292,1154.68 770.811,1154.75 771.331,1157.86 771.851,1157.6 772.37,1156.57 772.89,1155.26 773.409,1156.41 773.929,1156.05 774.448,1156.02 774.968,1154.99 775.487,1156.83 776.007,1156.68 776.526,1156.56 777.046,1156.5 777.566,1157.52 778.085,1159.54 778.605,1158.61 779.124,1160.4 779.644,1161.22 780.163,1162.7 780.683,1162.14 781.202,1159.86 781.722,1160.71 782.241,1157.44 782.761,1154.35 783.28,1154.26 783.8,1153.15 784.32,1153.52 784.839,1154.7 785.359,1154.59 785.878,1153.43 786.398,1151.42 786.917,1152.45 787.437,1153.68 787.956,1152.67 788.476,1152.65 788.995,1153.82 789.515,1152.79 790.035,1153.93 790.554,1152.88 791.074,1150.8 791.593,1150.86 792.113,1150.39 792.632,1150.38 793.152,1150.2 793.671,1150.45 794.191,1149.55 794.71,1149.91 795.23,1146.82 795.749,1148.32 796.269,1149.62 796.789,1150.68 797.308,1149.85 797.828,1149.78 798.347,1148.92 798.867,1149.08 799.386,1150.19 799.906,1149.32 800.425,1150.84 800.945,1150.06 801.464,1147.12 801.984,1147.49 802.503,1145.82 803.023,1147.09 803.543,1147.47 804.062,1149.04 804.582,1148.09 805.101,1149.18 805.621,1149.39 806.14,1150.71 806.66,1152.68 807.179,1150.72 807.699,1149.72 808.218,1148.91 808.738,1149.1 809.258,1149.47 809.777,1151.75 810.297,1152.01 810.816,1152.13 811.336,1152.17 811.855,1153.22 812.375,1154.1 812.894,1155 813.414,1157.94 813.933,1157.69 814.453,1157.38 814.972,1158.15 815.492,1155.97 816.012,1156.64 816.531,1157.63 817.051,1156.31 817.57,1155.06 818.09,1156.2 818.609,1157.34 819.129,1158.14 819.648,1155.99 820.168,1153.58 820.687,1153.55 821.207,1155.59 821.727,1153.57 822.246,1154.54 822.766,1156.44 823.285,1155.35 823.805,1156.18 824.324,1155.96 824.844,1154.85 825.363,1154.59 825.883,1155.47 826.402,1154.41 826.922,1152.23 827.441,1151.33 827.961,1149.51 828.481,1149.87 829,1151.96 829.52,1151.08 830.039,1153.05 830.559,1153.98 831.078,1153.92 831.598,1152.7 832.117,1149.58 832.637,1152.81 833.156,1152.77 833.676,1153.84 834.196,1153.58 834.715,1155.45 835.235,1155.28 835.754,1155.21 836.274,1155.02 836.793,1152 837.313,1154.23 837.832,1154.02 838.352,1151.92 838.871,1153.8 839.391,1153.71 839.91,1153.7 840.43,1151.69 840.95,1151.74 841.469,1152.76 841.989,1153.83 842.508,1152.63 843.028,1151.69 843.547,1153.75 844.067,1155.77 844.586,1153.63 845.106,1155.61 845.625,1152.42 846.145,1152.47 846.665,1153.57 847.184,1151.6 847.704,1151.69 848.223,1151.75 848.743,1150.56 849.262,1150.7 849.782,1152.81 850.301,1154.02 850.821,1155.83 851.34,1152.47 851.86,1152.43 852.379,1152.45 852.899,1152.49 853.419,1152.35 853.938,1150.33 854.458,1152.49 854.977,1152.38 855.497,1153.2 856.016,1154.17 856.536,1153.2 857.055,1154.03 857.575,1155.11 858.094,1156.27 858.614,1156.14 859.133,1155.05 859.653,1155.98 860.173,1155.73 860.692,1157.58 861.212,1156.49 861.731,1156.23 862.251,1156.99 862.77,1156.69 863.29,1155.6 863.809,1156.62 864.329,1158.28 864.848,1158.98 865.368,1157.4 865.888,1158.13 866.407,1157.74 866.927,1156.38 867.446,1160.13 867.966,1159.84 868.485,1158.38 869.005,1157.09 869.524,1155.76 870.044,1150.41 870.563,1152.74 871.083,1151.89 871.602,1152.86 872.122,1152.8 872.642,1151.79 873.161,1151.53 873.681,1151.71 874.2,1152.81 874.72,1150.69 875.239,1153.79 875.759,1153.7 876.278,1154.42 876.798,1153.17 877.317,1154.12 877.837,1154.38 878.357,1152.06 878.876,1152 879.396,1150.93 879.915,1152.09 880.435,1153.37 880.954,1152.14 881.474,1151.33 881.993,1149.37 882.513,1149.6 883.032,1146.83 883.552,1148.16 884.071,1147.41 884.591,1147.58 885.111,1149.67 885.63,1148.6 886.15,1149.77 886.669,1149.86 887.189,1149.79 887.708,1151.17 888.228,1149.01 888.747,1150.11 889.267,1149.26 889.786,1148.45 890.306,1148.48 890.826,1150.5 891.345,1150.71 891.865,1150.8 892.384,1149.81 892.904,1152.02 893.423,1152.89 893.943,1153.92 894.462,1153.74 894.982,1153.67 895.501,1154.54 896.021,1153.6 896.54,1151.61 897.06,1152.49 897.58,1154.49 898.099,1155.37 898.619,1154.4 899.138,1154.34 899.658,1153.97 900.177,1151.9 900.697,1152.65 901.216,1154.52 901.736,1154.07 902.255,1154 902.775,1151.86 903.295,1151.72 903.814,1151.64 904.334,1151.57 904.853,1150.53 905.373,1150.64 905.892,1148.66 906.412,1150.04 906.931,1150.01 907.451,1150.19 907.97,1150.35 908.49,1149.21 909.009,1149.45 909.529,1149.6 910.049,1150.78 910.568,1154.08 911.088,1152.93 911.607,1153.82 912.127,1151.8 912.646,1151.81 913.166,1151.99 913.685,1152.99 914.205,1152.89 914.724,1149.74 915.244,1154.4 915.763,1152.28 916.283,1154.15 916.803,1155.97 917.322,1156.48 917.842,1158.22 918.361,1158.92 918.881,1160.53 919.4,1160.2 919.92,1159.93 920.439,1158.58 920.959,1159.19 921.478,1159.71 921.998,1158.46 922.518,1156.91 923.037,1154.79 923.557,1154.62 924.076,1154.47 924.596,1152.51 925.115,1153.57 925.635,1157.63 926.154,1159.17 926.674,1159.99 927.193,1158.7 927.713,1159.47 928.232,1158.22 928.752,1158.86 929.272,1159.6 929.791,1159.13 930.311,1158.69 930.83,1155.38 931.35,1156.37 931.869,1157.22 932.389,1159.02 932.908,1159.79 933.428,1159.5 933.947,1158.12 934.467,1155.67 934.987,1157.53 935.506,1157.32 936.026,1156.17 936.545,1157.78 937.065,1158.42 937.584,1157.04 938.104,1156.82 938.623,1155.6 939.143,1154.42 939.662,1155.08 940.182,1153.11 940.701,1152.05 941.221,1151.98 941.741,1150.86 942.26,1150.88 942.78,1148.81 943.299,1149.01 943.819,1150.18 944.338,1148.25 944.858,1147.5 945.377,1147.47 945.897,1146.62 946.416,1148.73 946.936,1147.06 947.456,1147.15 947.975,1145.66 948.495,1143.88 949.014,1145.3 949.534,1144.67 950.053,1146.03 950.573,1147.31 951.092,1147.43 951.612,1145.56 952.131,1143.98 952.651,1144.41 953.17,1142.68 953.69,1146.25 954.21,1147.75 954.729,1146.8 955.249,1148.14 955.768,1147.26 956.288,1148.48 956.807,1147.66 957.327,1147.7 957.846,1147.1 958.366,1146.49 958.885,1148.82 959.405,1148.92 959.925,1150.1 960.444,1151.28 960.964,1150.39 961.483,1148.42 962.003,1148.85 962.522,1149.99 963.042,1148.39 963.561,1148.78 964.081,1149.05 964.6,1149.16 965.12,1149.42 965.639,1150.28 966.159,1150.25 966.679,1149.45 967.198,1150.42 967.718,1148.74 968.237,1147.88 968.757,1149.9 969.276,1150.94 969.796,1153.93 970.315,1152.79 970.835,1153.61 971.354,1151.43 971.874,1151.69 972.393,1150.8 972.913,1151.03 973.433,1151.01 973.952,1154.12 974.472,1154.16 974.991,1153.21 975.511,1153.37 976.03,1155.23 976.55,1155.04 977.069,1156.92 977.589,1156.77 978.108,1157.5 978.628,1157.36 979.148,1156.86 979.667,1156.69 980.187,1154.38 980.706,1154.39 981.226,1156.21 981.745,1155.92 982.265,1155.66 982.784,1155.57 983.304,1155.39 983.823,1155.26 984.343,1152.84 984.862,1149.65 985.382,1149.58 985.902,1149.75 986.421,1149.75 986.941,1150.77 987.46,1151.92 987.98,1149.71 988.499,1149.73 989.019,1148.86 989.538,1147.94 990.058,1148.06 990.577,1148.4 991.097,1148.59 991.617,1147.72 992.136,1148.05 992.656,1145.34 993.175,1146.61 993.695,1146.97 994.214,1147.37 994.734,1148.61 995.253,1150.1 995.773,1153.44 996.292,1154.18 996.812,1154.94 997.331,1155.85 997.851,1155.66 998.371,1155.58 998.89,1155.38 999.41,1153.26 999.929,1153.18 1000.45,1151.97 1000.97,1151.96 1001.49,1151.96 1002.01,1152.93 1002.53,1153.94 1003.05,1154.87 1003.57,1155.64 1004.09,1154.67 1004.61,1152.53 1005.12,1153.47 1005.64,1153.39 1006.16,1152.29 1006.68,1151.25 1007.2,1151.19 1007.72,1153.04 1008.24,1152.7 1008.76,1152.66 1009.28,1152.6 1009.8,1153.56 1010.32,1152.25 1010.84,1151.15 1011.36,1152.03 1011.88,1150.99 1012.4,1150.1 1012.92,1150.34 1013.44,1151.36 1013.96,1149.62 1014.48,1148.58 1015,1149.82 1015.52,1147.79 1016.03,1146.78 1016.55,1147.18 1017.07,1146.4 1017.59,1146.74 1018.11,1146.96 1018.63,1147.41 1019.15,1145.44 1019.67,1145.73 1020.19,1145.06 1020.71,1144.29 1021.23,1146.92 1021.75,1148.18 1022.27,1148.27 1022.79,1149.38 1023.31,1149.47 1023.83,1151.64 1024.35,1150.47 1024.87,1150.59 1025.39,1150.69 1025.91,1148.1 1026.43,1147.28 1026.95,1148.6 1027.46,1148.84 1027.98,1147.89 1028.5,1149.08 1029.02,1147.05 1029.54,1146.46 1030.06,1145.6 1030.58,1145.7 1031.1,1147.14 1031.62,1147.24 1032.14,1147.5 1032.66,1146.67 1033.18,1147.18 1033.7,1148.34 1034.22,1148.51 1034.74,1146.7 1035.26,1148.98 1035.78,1149.11 1036.3,1149.51 1036.82,1149.72 1037.34,1150.72 1037.86,1153.61 1038.38,1157.4 1038.89,1158.19 1039.41,1158.71 1039.93,1157.37 1040.45,1156.99 1040.97,1156.6 1041.49,1157.37 1042.01,1158.02 1042.53,1158.45 1043.05,1158.27 1043.57,1156.94 1044.09,1156.77 1044.61,1155.5 1045.13,1155.13 1045.65,1158.86 1046.17,1158.4 1046.69,1157.99 1047.21,1157.55 1047.73,1155.35 1048.25,1155.19 1048.77,1156.91 1049.29,1158.49 1049.81,1158.02 1050.32,1157.55 1050.84,1158.18 1051.36,1159.09 1051.88,1158.75 1052.4,1158.42 1052.92,1156.18 1053.44,1156.85 1053.96,1157.52 1054.48,1156.28 1055,1155.96 1055.52,1153.63 1056.04,1153.38 1056.56,1150.26 1057.08,1151.05 1057.6,1149.99 1058.12,1147.76 1058.64,1149.99 1059.16,1151.01 1059.68,1152.05 1060.2,1151.89 1060.72,1151.84 1061.24,1151.84 1061.75,1150.71 1062.27,1149.07 1062.79,1148.3 1063.31,1147.5 1063.83,1145.48 1064.35,1145.74 1064.87,1146.18 1065.39,1146.54 1065.91,1148.01 1066.43,1147.91 1066.95,1147.36 1067.47,1147.48 1067.99,1147.64 1068.51,1148.77 1069.03,1148.83 1069.55,1147.97 1070.07,1149.22 1070.59,1147.31 1071.11,1146.5 1071.63,1147.89 1072.15,1147.98 1072.66,1150.1 1073.18,1154.07 1073.7,1155.86 1074.22,1152.66 1074.74,1152.69 1075.26,1151.72 1075.78,1158.66 1076.3,1160.17 1076.82,1158.87 1077.34,1157.54 1077.86,1157.29 1078.38,1158.08 1078.9,1157.75 1079.42,1159.25 1079.94,1156.77 1080.46,1155.59 1080.98,1156.41 1081.5,1156.17 1082.02,1155.94 1082.54,1154.47 1083.06,1154.44 1083.58,1153.41 1084.09,1153.26 1084.61,1152.25 1085.13,1151.27 1085.65,1151.18 1086.17,1148.05 1086.69,1148.25 1087.21,1148.23 1087.73,1148.4 1088.25,1149.52 1088.77,1148.56 1089.29,1147.6 1089.81,1147.81 1090.33,1147.01 1090.85,1146.34 1091.37,1147.64 1091.89,1144.85 1092.41,1146.18 1092.93,1150.41 1093.45,1149.52 1093.97,1149.67 1094.49,1149.53 1095.01,1150.37 1095.52,1150.21 1096.04,1150.17 1096.56,1148.22 1097.08,1147.25 1097.6,1147.43 1098.12,1148.57 1098.64,1150.83 1099.16,1149.92 1099.68,1148.99 1100.2,1150.04 1100.72,1148.89 1101.24,1146.77 1101.76,1146.11 1102.28,1146.38 1102.8,1147.63 1103.32,1149.89 1103.84,1149.97 1104.36,1150.23 1104.88,1151.4 1105.4,1152.44 1105.92,1153.26 1106.44,1152.08 1106.95,1151.9 1107.47,1150.95 1107.99,1149.04 1108.51,1149.29 1109.03,1151.21 1109.55,1149.97 1110.07,1151.86 1110.59,1153.59 1111.11,1154.34 1111.63,1154.12 1112.15,1154.86 1112.67,1156.66 1113.19,1159.26 1113.71,1158.05 1114.23,1157.74 1114.75,1156.54 1115.27,1158.41 1115.79,1156.16 1116.31,1155.02 1116.83,1152.62 1117.35,1152.71 1117.87,1151.57 1118.38,1152.58 1118.9,1150.47 1119.42,1152.64 1119.94,1152.74 1120.46,1154.67 1120.98,1151.68 1121.5,1152.59 1122.02,1151.34 1122.54,1152.15 1123.06,1155.21 1123.58,1152.94 1124.1,1154.11 1124.62,1152.96 1125.14,1151.91 1125.66,1152.69 1126.18,1152.71 1126.7,1151.48 1127.22,1152.45 1127.74,1154.33 1128.26,1157.14 1128.78,1156.87 1129.29,1158.43 1129.81,1158.03 1130.33,1157.78 1130.85,1158.44 1131.37,1158.15 1131.89,1157.68 1132.41,1159.54 1132.93,1160.05 1133.45,1159.55 1133.97,1161.2 1134.49,1162.61 1135.01,1158.86 1135.53,1159.31 1136.05,1156.94 1136.57,1156.8 1137.09,1154.47 1137.61,1154.51 1138.13,1151.35 1138.65,1151.37 1139.17,1151.34 1139.69,1150.25 1140.21,1151.33 1140.72,1150.48 1141.24,1150.56 1141.76,1146.5 1142.28,1144.58 1142.8,1148.03 1143.32,1149.2 1143.84,1149.28 1144.36,1149.44 1144.88,1150.46 1145.4,1149.28 1145.92,1148.77 1146.44,1148.73 1146.96,1147.83 1147.48,1150.99 1148,1151.14 1148.52,1151.28 1149.04,1149.21 1149.56,1149.18 1150.08,1148.23 1150.6,1149.15 1151.12,1147.24 1151.64,1145.6 1152.15,1145.88 1152.67,1146.08 1153.19,1147.49 1153.71,1147.56 1154.23,1147.9 1154.75,1148.21 1155.27,1146.27 1155.79,1147.63 1156.31,1149.82 1156.83,1151.07 1157.35,1150.06 1157.87,1149.99 1158.39,1150.09 1158.91,1150.09 1159.43,1151.14 1159.95,1149.1 1160.47,1149.25 1160.99,1148.26 1161.51,1146.44 1162.03,1146.73 1162.55,1146.89 1163.07,1147.14 1163.58,1147.49 1164.1,1147.65 1164.62,1147.95 1165.14,1151.01 1165.66,1151.25 1166.18,1152.33 1166.7,1152.44 1167.22,1152.42 1167.74,1152.43 1168.26,1152.31 1168.78,1154.23 1169.3,1154.15 1169.82,1154.12 1170.34,1152.88 1170.86,1153.7 1171.38,1154.51 1171.9,1154.39 1172.42,1155.05 1172.94,1154.09 1173.46,1154.04 1173.98,1153.92 1174.5,1154.52 1175.01,1154.57 1175.53,1154.34 1176.05,1154.29 1176.57,1154.11 1177.09,1156.89 1177.61,1155.66 1178.13,1156.4 1178.65,1157.12 1179.17,1153.89 1179.69,1155.86 1180.21,1159.72 1180.73,1158.39 1181.25,1157.76 1181.77,1157.35 1182.29,1158.1 1182.81,1157.73 1183.33,1155.43 1183.85,1154.22 1184.37,1156.17 1184.89,1154.79 1185.41,1153.64 1185.92,1153.59 1186.44,1153.4 1186.96,1151.26 1187.48,1152.41 1188,1153.4 1188.52,1149.23 1189.04,1150.31 1189.56,1153.23 1190.08,1154.01 1190.6,1154.72 1191.12,1151.51 1191.64,1151.4 1192.16,1151.36 1192.68,1150.11 1193.2,1150.1 1193.72,1147.89 1194.24,1145.98 1194.76,1147.03 1195.28,1147.43 1195.8,1147.71 1196.32,1148.08 1196.84,1152.15 1197.35,1150.81 1197.87,1148.86 1198.39,1150 1198.91,1148.85 1199.43,1148.95 1199.95,1148.04 1200.47,1150.29 1200.99,1150.53 1201.51,1149.6 1202.03,1148.8 1202.55,1146.7 1203.07,1145.93 1203.59,1146.4 1204.11,1146.89 1204.63,1149.25 1205.15,1150.46 1205.67,1149.46 1206.19,1149.67 1206.71,1150.83 1207.23,1151.76 1207.75,1149.76 1208.27,1150.98 1208.78,1153.08 1209.3,1153.12 1209.82,1154.21 1210.34,1157.32 1210.86,1157.15 1211.38,1155.83 1211.9,1156.44 1212.42,1156.19 1212.94,1154.15 1213.46,1153.91 1213.98,1152.62 1214.5,1152.66 1215.02,1152.65 1215.54,1151.71 1216.06,1151.82 1216.58,1152.89 1217.1,1152.77 1217.62,1151.67 1218.14,1152.79 1218.66,1154.89 1219.18,1154.84 1219.7,1151.65 1220.21,1151.61 1220.73,1151.45 1221.25,1152.26 1221.77,1153.41 1222.29,1150.22 1222.81,1150.37 1223.33,1151.28 1223.85,1152.2 1224.37,1152.17 1224.89,1151.13 1225.41,1149.97 1225.93,1148.1 1226.45,1148.48 1226.97,1147.85 1227.49,1151.01 1228.01,1150.15 1228.53,1151.28 1229.05,1151.1 1229.57,1151.16 1230.09,1152.86 1230.61,1152.72 1231.13,1152.71 1231.64,1152.41 1232.16,1150.49 1232.68,1149.52 1233.2,1149.54 1233.72,1146.54 1234.24,1147.6 1234.76,1149.8 1235.28,1150.67 1235.8,1153.83 1236.32,1154.5 1236.84,1155.41 1237.36,1154.04 1237.88,1151.72 1238.4,1151.56 1238.92,1151.53 1239.44,1150.67 1239.96,1150.73 1240.48,1150.66 1241,1150.78 1241.52,1149.87 1242.04,1147.68 1242.55,1143.81 1243.07,1144.3 1243.59,1143.57 1244.11,1142.94 1244.63,1144.58 1245.15,1142.9 1245.67,1140.35 1246.19,1140.1 1246.71,1140.69 1247.23,1141.32 1247.75,1138.75 1248.27,1142.49 1248.79,1140.92 1249.31,1141.65 1249.83,1142.27 1250.35,1142.74 1250.87,1143.18 1251.39,1144.8 1251.91,1144.19 1252.43,1143.28 1252.95,1142.7 1253.47,1143.2 1253.98,1143.64 1254.5,1145.06 1255.02,1146.45 1255.54,1149.88 1256.06,1149.9 1256.58,1148.99 1257.1,1146.92 1257.62,1146.16 1258.14,1146.57 1258.66,1147.89 1259.18,1146.98 1259.7,1146.29 1260.22,1145.37 1260.74,1145.76 1261.26,1146.23 1261.78,1144.52 1262.3,1145 1262.82,1146.18 1263.34,1145.39 1263.86,1145.48 1264.38,1145.96 1264.9,1147.24 1265.41,1148.37 1265.93,1148.66 1266.45,1147.88 1266.97,1149.06 1267.49,1149.24 1268.01,1149.54 1268.53,1149.44 1269.05,1150.58 1269.57,1152.52 1270.09,1154.48 1270.61,1155.32 1271.13,1154.83 1271.65,1154.6 1272.17,1155.63 1272.69,1157.44 1273.21,1158.1 1273.73,1157.89 1274.25,1155.53 1274.77,1155.5 1275.29,1155.03 1275.81,1154.88 1276.33,1155.42 1276.84,1155.22 1277.36,1159.11 1277.88,1158.72 1278.4,1159.38 1278.92,1159.04 1279.44,1161.54 1279.96,1160.96 1280.48,1160.43 1281,1160.07 1281.52,1160.34 1282.04,1161.85 1282.56,1161.25 1283.08,1157.78 1283.6,1157.62 1284.12,1159.34 1284.64,1156.8 1285.16,1154.49 1285.68,1152.35 1286.2,1152.29 1286.72,1153.01 1287.24,1153.86 1287.76,1152.66 1288.27,1151.57 1288.79,1150.54 1289.31,1152.61 1289.83,1151.34 1290.35,1150.39 1290.87,1154.26 1291.39,1154.11 1291.91,1155.09 1292.43,1153.95 1292.95,1152.82 1293.47,1151.54 1293.99,1153.51 1294.51,1152.24 1295.03,1151.11 1295.55,1152.93 1296.07,1151.7 1296.59,1151.83 1297.11,1153.87 1297.63,1152.88 1298.15,1153.79 1298.67,1153.57 1299.18,1152.18 1299.7,1153.05 1300.22,1153.97 1300.74,1151.84 1301.26,1149.85 1301.78,1148.05 1302.3,1147.09 1302.82,1147.41 1303.34,1147.73 1303.86,1148.87 1304.38,1149 1304.9,1149.13 1305.42,1147.19 1305.94,1147.34 1306.46,1148.59 1306.98,1148.95 1307.5,1150.05 1308.02,1150.14 1308.54,1150 1309.06,1148.09 1309.58,1149.25 1310.1,1149.49 1310.61,1152.62 1311.13,1151.55 1311.65,1150.43 1312.17,1152.17 1312.69,1153.16 1313.21,1152.1 1313.73,1152.08 1314.25,1151.97 1314.77,1150.75 1315.29,1149.8 1315.81,1150.78 1316.33,1153.75 1316.85,1153.57 1317.37,1152.53 1317.89,1153.46 1318.41,1154.39 1318.93,1152.34 1319.45,1152.28 1319.97,1153.09 1320.49,1152.19 1321.01,1149.2 1321.53,1148.28 1322.04,1149.44 1322.56,1149.57 1323.08,1148.58 1323.6,1148.77 1324.12,1148.76 1324.64,1151.93 1325.16,1152.98 1325.68,1151.86 1326.2,1150.66 1326.72,1150.73 1327.24,1149.78 1327.76,1147.57 1328.28,1147.62 1328.8,1146.76 1329.32,1148.08 1329.84,1149.15 1330.36,1150.06 1330.88,1150.06 1331.4,1152.33 1331.92,1150.27 1332.44,1148.45 1332.96,1146.62 1333.47,1148.89 1333.99,1148.05 1334.51,1149.18 1335.03,1150.21 1335.55,1149.48 1336.07,1147.49 1336.59,1147.38 1337.11,1144.55 1337.63,1147.96 1338.15,1147.01 1338.67,1148.16 1339.19,1147.57 1339.71,1147.96 1340.23,1147.37 1340.75,1147.48 1341.27,1147.54 1341.79,1146.56 1342.31,1146.92 1342.83,1147.07 1343.35,1148.39 1343.87,1148.36 1344.39,1149.31 1344.9,1148.64 1345.42,1150 1345.94,1150.31 1346.46,1150.3 1346.98,1150.4 1347.5,1150.21 1348.02,1151.35 1348.54,1151.28 1349.06,1152.45 1349.58,1152.51 1350.1,1150.49 1350.62,1149.61 1351.14,1148.67 1351.66,1147.57 1352.18,1146.75 1352.7,1147.17 1353.22,1148.35 1353.74,1148.44 1354.26,1149.47 1354.78,1150.51 1355.3,1150.65 1355.81,1149.57 1356.33,1148.79 1356.85,1147.85 1357.37,1147.05 1357.89,1147.39 1358.41,1148.03 1358.93,1150.02 1359.45,1148.1 1359.97,1148.1 1360.49,1149.22 1361.01,1149.48 1361.53,1149.86 1362.05,1149.88 1362.57,1149.9 1363.09,1149.9 1363.61,1150.01 1364.13,1150.09 1364.65,1150.19 1365.17,1152.45 1365.69,1153.36 1366.21,1154.3 1366.73,1155.3 1367.24,1154.06 1367.76,1153.03 1368.28,1153.81 1368.8,1151.78 1369.32,1155.05 1369.84,1155.87 1370.36,1157.67 1370.88,1159.32 1371.4,1158.95 1371.92,1157.4 1372.44,1157.41 1372.96,1156 1373.48,1155.9 1374,1152.66 1374.52,1149.48 1375.04,1150.7 1375.56,1152.77 1376.08,1155.61 1376.6,1156.33 1377.12,1155.93 1377.64,1155.56 1378.16,1159.37 1378.67,1159.91 1379.19,1158.48 1379.71,1157.15 1380.23,1153.76 1380.75,1152.68 1381.27,1154.48 1381.79,1153.23 1382.31,1151.84 1382.83,1151.8 1383.35,1151.55 1383.87,1152.68 1384.39,1153.61 1384.91,1155.44 1385.43,1156.43 1385.95,1156.19 1386.47,1156.74 1386.99,1156.59 1387.51,1156.35 1388.03,1158.05 1388.55,1156.42 1389.07,1156.96 1389.59,1153.47 1390.1,1154.23 1390.62,1154.12 1391.14,1154.04 1391.66,1151.85 1392.18,1151.73 1392.7,1149.63 1393.22,1148.87 1393.74,1149.05 1394.26,1149.05 1394.78,1147.93 1395.3,1145.89 1395.82,1146.11 1396.34,1147.17 1396.86,1147.5 1397.38,1145.35 1397.9,1143.46 1398.42,1143.85 1398.94,1143.04 1399.46,1144.5 1399.98,1144.06 1400.5,1143.46 1401.02,1140.84 1401.53,1142.44 1402.05,1142.76 1402.57,1143.14 1403.09,1147.42 1403.61,1147.5 1404.13,1147.73 1404.65,1147.83 1405.17,1148.14 1405.69,1151.5 1406.21,1152.26 1406.73,1154.43 1407.25,1153.35 1407.77,1154.92 1408.29,1153.63 1408.81,1155.45 1409.33,1155.1 1409.85,1156.14 1410.37,1155.84 1410.89,1155.59 1411.41,1154.24 1411.93,1156 1412.44,1156.66 1412.96,1157.47 1413.48,1156.22 1414,1154.83 1414.52,1155.6 1415.04,1155.46 1415.56,1154.25 1416.08,1155.31 1416.6,1153.93 1417.12,1153.64 1417.64,1152.61 1418.16,1152.57 1418.68,1151.58 1419.2,1152.7 1419.72,1153.82 1420.24,1152.67 1420.76,1152.55 1421.28,1152.38 1421.8,1150.38 1422.32,1150.2 1422.84,1151.37 1423.36,1151.34 1423.87,1150.33 1424.39,1151.45 1424.91,1151.43 1425.43,1152.41 1425.95,1151.5 1426.47,1149.65 1426.99,1149.63 1427.51,1148.77 1428.03,1146.98 1428.55,1146.08 1429.07,1147.6 1429.59,1148.9 1430.11,1151.13 1430.63,1150.08 1431.15,1150.23 1431.67,1151.19 1432.19,1152.18 1432.71,1151.97 1433.23,1152.92 1433.75,1152.69 1434.27,1154.46 1434.79,1153.1 1435.3,1153.9 1435.82,1154.43 1436.34,1155.3 1436.86,1155.96 1437.38,1160.71 1437.9,1160.3 1438.42,1159.8 1438.94,1157.04 1439.46,1156.45 1439.98,1159.19 1440.5,1157.98 1441.02,1156.8 1441.54,1159.65 1442.06,1158.21 1442.58,1157.74 1443.1,1156.51 1443.62,1155.99 1444.14,1158.62 1444.66,1158.42 1445.18,1157.84 1445.7,1158.4 1446.22,1157.91 1446.73,1155.33 1447.25,1155.3 1447.77,1154.91 1448.29,1153.68 1448.81,1151.74 1449.33,1152.49 1449.85,1150.2 1450.37,1151.05 1450.89,1149.85 1451.41,1151.94 1451.93,1151.01 1452.45,1146.85 1452.97,1145.99 1453.49,1147.55 1454.01,1148.67 1454.53,1146.58 1455.05,1144.99 1455.57,1145.56 1456.09,1146.89 1456.61,1146.21 1457.13,1145.34 1457.65,1144.77 1458.16,1142.78 1458.68,1144.26 1459.2,1144.67 1459.72,1141.88 1460.24,1140.52 1460.76,1141.27 1461.28,1141.8 1461.8,1142.46 1462.32,1141.83 1462.84,1141.11 1463.36,1143.87 1463.88,1146.21 1464.4,1146.4 1464.92,1146.51 1465.44,1146.62 1465.96,1148.82 1466.48,1149.07 1467,1149.37 1467.52,1147.66 1468.04,1148.71 1468.56,1148.75 1469.07,1148.8 1469.59,1149.83 1470.11,1149.63 1470.63,1150.67 1471.15,1151.78 1471.67,1151.71 1472.19,1153.56 1472.71,1154.66 1473.23,1154.39 1473.75,1152.16 1474.27,1153.18 1474.79,1153.05 1475.31,1152.94 1475.83,1152.94 1476.35,1151.94 1476.87,1150.84 1477.39,1149.87 1477.91,1150.08 1478.43,1150.23 1478.95,1148.45 1479.47,1149.72 1479.99,1146.79 1480.5,1148.03 1481.02,1150.14 1481.54,1151.25 1482.06,1152.48 1482.58,1153.41 1483.1,1152.4 1483.62,1152.13 1484.14,1154.01 1484.66,1153.94 1485.18,1152 1485.7,1152.82 1486.22,1154.69 1486.74,1154.37 1487.26,1153 1487.78,1154.99 1488.3,1156.78 1488.82,1155.53 1489.34,1155.27 1489.86,1152.11 1490.38,1152.94 1490.9,1153.11 1491.42,1155.17 1491.93,1156.83 1492.45,1158.53 1492.97,1158.95 1493.49,1158.85 1494.01,1155.5 1494.53,1155.06 1495.05,1154.98 1495.57,1152.82 1496.09,1154.63 1496.61,1154.24 1497.13,1154.05 1497.65,1154.97 1498.17,1154.87 1498.69,1155.78 1499.21,1156.6 1499.73,1157.29 1500.25,1159 1500.77,1158.4 1501.29,1157.92 1501.81,1154.38 1502.33,1151.08 1502.85,1150.94 1503.36,1151 1503.88,1149.87 1504.4,1152.17 1504.92,1152.17 1505.44,1154.29 1505.96,1152.01 1506.48,1154.03 1507,1154.07 1507.52,1154.99 1508.04,1153.66 1508.56,1153.49 1509.08,1154.34 1509.6,1154.25 1510.12,1154.1 1510.64,1152.03 1511.16,1151.99 1511.68,1152.15 1512.2,1152.18 1512.72,1152.1 1513.24,1152.96 1513.76,1151.75 1514.28,1151.69 1514.79,1151.49 1515.31,1151.4 1515.83,1152.36 1516.35,1155.22 1516.87,1150.77 1517.39,1149.75 1517.91,1148.64 1518.43,1148.61 1518.95,1149.75 1519.47,1150 1519.99,1149.93 1520.51,1150.02 1521.03,1148.97 1521.55,1149.07 1522.07,1149.34 1522.59,1149.57 1523.11,1148.73 1523.63,1148.75 1524.15,1146.54 1524.67,1144.57 1525.19,1144.97 1525.7,1144.43 1526.22,1144.59 1526.74,1143.08 1527.26,1144.52 1527.78,1143.74 1528.3,1145.1 1528.82,1144.07 1529.34,1145.42 1529.86,1145.92 1530.38,1147.14 1530.9,1147.22 1531.42,1146.39 1531.94,1145.73 1532.46,1147.12 1532.98,1147.51 1533.5,1148.78 1534.02,1148.08 1534.54,1147.24 1535.06,1149.39 1535.58,1150.56 1536.1,1148.77 1536.62,1150.82 1537.13,1149.85 1537.65,1149.83 1538.17,1149.91 1538.69,1150.89 1539.21,1149.04 1539.73,1148.23 1540.25,1147.44 1540.77,1146.56 1541.29,1145.81 1541.81,1144.99 1542.33,1146.49 1542.85,1145.67 1543.37,1145.88 1543.89,1146.97 1544.41,1148.33 1544.93,1149.36 1545.45,1151.25 1545.97,1150.38 1546.49,1150.49 1547.01,1153.55 1547.53,1152.24 1548.05,1151.22 1548.56,1151.09 1549.08,1150.93 1549.6,1151.89 1550.12,1151.03 1550.64,1149.03 1551.16,1150.36 1551.68,1151.43 1552.2,1151.27 1552.72,1150.26 1553.24,1151.31 1553.76,1152.59 1554.28,1151.62 1554.8,1153.82 1555.32,1151.79 1555.84,1152.78 1556.36,1153.7 1556.88,1154.56 1557.4,1151.58 1557.92,1147.37 1558.44,1146.82 1558.96,1148.27 1559.48,1147.33 1559.99,1147.41 1560.51,1147.68 1561.03,1146.99 1561.55,1147.2 1562.07,1147.5 1562.59,1148.95 1563.11,1147.1 1563.63,1148.3 1564.15,1148.31 1564.67,1148.4 1565.19,1151.63 1565.71,1152.43 1566.23,1154.39 1566.75,1154.22 1567.27,1153.29 1567.79,1153.33 1568.31,1152.15 1568.83,1153.09 1569.35,1153.7 1569.87,1152.59 1570.39,1152.32 1570.91,1153.44 1571.42,1153.45 1571.94,1154.38 1572.46,1154.24 1572.98,1153.96 1573.5,1152.88 1574.02,1149.66 1574.54,1151.78 1575.06,1151.78 1575.58,1152.74 1576.1,1149.74 1576.62,1149.8 1577.14,1150 1577.66,1152.1 1578.18,1151.99 1578.7,1148.9 1579.22,1149.91 1579.74,1149.88 1580.26,1150.07 1580.78,1150.38 1581.3,1149.42 1581.82,1151.54 1582.33,1152.55 1582.85,1152.39 1583.37,1150.22 1583.89,1151.1 1584.41,1152.33 1584.93,1154.32 1585.45,1153.2 1585.97,1156.12 1586.49,1155.01 1587.01,1157.95 1587.53,1155.46 1588.05,1154.19 1588.57,1155.06 1589.09,1153.88 1589.61,1153.71 1590.13,1152.68 1590.65,1149.68 1591.17,1149.61 1591.69,1148.46 1592.21,1147.69 1592.73,1148.72 1593.25,1148.94 1593.76,1150.27 1594.28,1150.22 1594.8,1151.46 1595.32,1151.36 1595.84,1153.48 1596.36,1153.44 1596.88,1153.42 1597.4,1153.19 1597.92,1151.07 1598.44,1152.93 1598.96,1153.68 1599.48,1154.81 1600,1153.59 1600.52,1152.5 1601.04,1153.44 1601.56,1153.08 1602.08,1153.02 1602.6,1152 1603.12,1152.87 1603.64,1151.74 1604.16,1151.56 1604.68,1149.4 1605.19,1147.48 1605.71,1148.58 1606.23,1148.81 1606.75,1148.62 1607.27,1147.68 1607.79,1145.82 1608.31,1146.06 1608.83,1146.17 1609.35,1146.67 1609.87,1146.82 1610.39,1147.12 1610.91,1147.39 1611.43,1147.54 1611.95,1149.63 1612.47,1149.61 1612.99,1148.8 1613.51,1150.89 1614.03,1152.01 1614.55,1152.99 1615.07,1154.77 1615.59,1153.62 1616.11,1154.79 1616.62,1155.64 1617.14,1156.15 1617.66,1155.03 1618.18,1154.91 1618.7,1154.6 1619.22,1153.41 1619.74,1152.02 1620.26,1149.85 1620.78,1149.81 1621.3,1148.87 1621.82,1150.04 1622.34,1151.09 1622.86,1154.1 1623.38,1153.81 1623.9,1153.51 1624.42,1152.26 1624.94,1152.98 1625.46,1152.87 1625.98,1152.62 1626.5,1150.36 1627.02,1151.48 1627.54,1151.32 1628.05,1151.12 1628.57,1151.99 1629.09,1151.98 1629.61,1151.81 1630.13,1152.96 1630.65,1150.9 1631.17,1151.8 1631.69,1150.82 1632.21,1150.93 1632.73,1153.17 1633.25,1153 1633.77,1149.86 1634.29,1150.81 1634.81,1150.51 1635.33,1150.61 1635.85,1152.48 1636.37,1151.33 1636.89,1151.19 1637.41,1151.36 1637.93,1149.27 1638.45,1149.3 1638.96,1150.3 1639.48,1149.32 1640,1147.37 1640.52,1146.44 1641.04,1145.75 1641.56,1146.88 1642.08,1148.32 1642.6,1148.55 1643.12,1145.57 1643.64,1145.86 1644.16,1144.18 1644.68,1143.5 1645.2,1143.68 1645.72,1144.02 1646.24,1142.18 1646.76,1144.06 1647.28,1143.21 1647.8,1143.7 1648.32,1145.1 1648.84,1147.77 1649.36,1149.96 1649.88,1149.01 1650.39,1150.16 1650.91,1149.22 1651.43,1151.33 1651.95,1149.35 1652.47,1149.28 1652.99,1151.5 1653.51,1151.54 1654.03,1149.52 1654.55,1150.39 1655.07,1150.58 1655.59,1150.4 1656.11,1150.42 1656.63,1151.41 1657.15,1151.38 1657.67,1151.36 1658.19,1151.03 1658.71,1151.74 1659.23,1151.62 1659.75,1150.63 1660.27,1147.73 1660.79,1148.98 1661.31,1148.35 1661.82,1148.42 1662.34,1150.53 1662.86,1150.49 1663.38,1151.56 1663.9,1154.35 1664.42,1153.09 1664.94,1152.88 1665.46,1151.72 1665.98,1151.79 1666.5,1149.69 1667.02,1149.81 1667.54,1148.99 1668.06,1150.99 1668.58,1149.9 1669.1,1149.07 1669.62,1149.05 1670.14,1148.29 1670.66,1149.36 1671.18,1149.52 1671.7,1149.52 1672.22,1148.35 1672.74,1149.45 1673.25,1148.47 1673.77,1148.66 1674.29,1148.96 1674.81,1149.33 1675.33,1150.57 1675.85,1151.69 1676.37,1150.43 1676.89,1150.56 1677.41,1151.67 1677.93,1152.75 1678.45,1150.54 1678.97,1151.78 1679.49,1152.79 1680.01,1152.66 1680.53,1151.59 1681.05,1154.64 1681.57,1154.51 1682.09,1151.22 1682.61,1150.15 1683.13,1151.31 1683.65,1151.36 1684.17,1151.41 1684.68,1150.38 1685.2,1151.34 1685.72,1151.5 1686.24,1152.36 1686.76,1154.25 1687.28,1152.97 1687.8,1154.89 1688.32,1155.5 1688.84,1157.44 1689.36,1157.07 1689.88,1154.8 1690.4,1153.48 1690.92,1155.39 1691.44,1155.11 1691.96,1156.85 1692.48,1155.57 1693,1155.34 1693.52,1153.05 1694.04,1149.9 1694.56,1147.93 1695.08,1147.1 1695.59,1146.53 1696.11,1144.76 1696.63,1147.85 1697.15,1147.07 1697.67,1149.32 1698.19,1150.63 1698.71,1150.77 1699.23,1150.73 1699.75,1149.82 1700.27,1147.95 1700.79,1148.19 1701.31,1147.38 1701.83,1146.67 1702.35,1148.15 1702.87,1146.19 1703.39,1145.33 1703.91,1147.79 1704.43,1146.96 1704.95,1145.11 1705.47,1146.5 1705.99,1147.84 1706.51,1148 1707.02,1148.22 1707.54,1147.31 1708.06,1146.46 1708.58,1147.75 1709.1,1149.78 1709.62,1146.99 1710.14,1148.17 1710.66,1150.33 1711.18,1149.43 1711.7,1149.22 1712.22,1147.26 1712.74,1147.42 1713.26,1147.45 1713.78,1146.6 1714.3,1146.75 1714.82,1146.11 1715.34,1149.38 1715.86,1148.62 1716.38,1150.88 1716.9,1151.82 1717.42,1150.98 1717.94,1152.06 1718.45,1154.13 1718.97,1154.98 1719.49,1151.62 1720.01,1151.78 1720.53,1153.87 1721.05,1151.8 1721.57,1152.82 1722.09,1152.54 1722.61,1152.27 1723.13,1152.1 1723.65,1150.95 1724.17,1152.96 1724.69,1152.49 1725.21,1151.24 1725.73,1149.34 1726.25,1150.53 1726.77,1150.62 1727.29,1149.68 1727.81,1149.57 1728.33,1149.5 1728.85,1148.39 1729.37,1146.56 1729.88,1144.63 1730.4,1146.92 1730.92,1145.17 1731.44,1146.49 1731.96,1146.88 1732.48,1146.96 1733,1147.06 1733.52,1147.47 1734.04,1147.7 1734.56,1143.76 1735.08,1144.17 1735.6,1144.6 1736.12,1147 1736.64,1147.29 1737.16,1147.25 1737.68,1146.4 1738.2,1147.6 1738.72,1147.81 1739.24,1150.09 1739.76,1153.17 1740.28,1150.1 1740.8,1150.34 1741.31,1150.47 1741.83,1151.71 1742.35,1151.76 1742.87,1151.72 1743.39,1152.61 1743.91,1153.4 1744.43,1151.19 1744.95,1150.15 1745.47,1150.21 1745.99,1151.2 1746.51,1154.25 1747.03,1153.11 1747.55,1153.74 1748.07,1151.64 1748.59,1150.56 1749.11,1150.71 1749.63,1147.51 1750.15,1148.57 1750.67,1150.7 1751.19,1150.78 1751.71,1150.66 1752.22,1151.75 1752.74,1150.72 1753.26,1149.61 1753.78,1150.81 1754.3,1151 1754.82,1151.06 1755.34,1150.96 1755.86,1151.97 1756.38,1153.1 1756.9,1157.15 1757.42,1155.46 1757.94,1156.94 1758.46,1159.67 1758.98,1161.23 1759.5,1161.54 1760.02,1159.11 1760.54,1156.65 1761.06,1155.33 1761.58,1153.18 1762.1,1153.11 1762.62,1153.09 1763.14,1152.77 1763.65,1153.47 1764.17,1152.48 1764.69,1151.33 1765.21,1153.27 1765.73,1152.04 1766.25,1150.96 1766.77,1150.82 1767.29,1151.99 1767.81,1155.34 1768.33,1153.09 1768.85,1151.92 1769.37,1149.72 1769.89,1151.94 1770.41,1150.9 1770.93,1151.97 1771.45,1151.96 1771.97,1150.95 1772.49,1149.99 1773.01,1150.99 1773.53,1152.07 1774.05,1152.04 1774.57,1149 1775.08,1151.92 1775.6,1152.96 1776.12,1153.68 1776.64,1154.53 1777.16,1154.36 1777.68,1154.19 1778.2,1154.24 1778.72,1154.23 1779.24,1154.2 1779.76,1153.98 1780.28,1151.77 1780.8,1153.78 1781.32,1153.75 1781.84,1153.65 1782.36,1153.3 1782.88,1152.06 1783.4,1151.88 1783.92,1150.63 1784.44,1150.72 1784.96,1150.7 1785.48,1151.7 1786,1153.67 1786.51,1151.39 1787.03,1149.34 1787.55,1149.5 1788.07,1149.62 1788.59,1148.94 1789.11,1149.06 1789.63,1150.17 1790.15,1150.19 1790.67,1151.31 1791.19,1149.25 1791.71,1149.47 1792.23,1149.39 1792.75,1149.39 1793.27,1150.63 1793.79,1151.71 1794.31,1152.75 1794.83,1152.64 1795.35,1151.53 1795.87,1151.71 1796.39,1151.6 1796.91,1152.64 1797.43,1152.76 1797.94,1150.86 1798.46,1153.12 1798.98,1154.02 1799.5,1154.81 1800.02,1154.63 1800.54,1153.4 1801.06,1154.19 1801.58,1155.06 1802.1,1153.87 1802.62,1153.77 1803.14,1154.52 1803.66,1155.09 1804.18,1153.8 1804.7,1152.52 1805.22,1153.35 1805.74,1154.34 1806.26,1153.08 1806.78,1154.18 1807.3,1156.22 1807.82,1155.89 1808.34,1157.55 1808.85,1156.19 1809.37,1155.06 1809.89,1152.96 1810.41,1152.86 1810.93,1152.65 1811.45,1152.52 1811.97,1150.48 1812.49,1150.46 1813.01,1149.37 1813.53,1153.3 1814.05,1154.29 1814.57,1154.19 1815.09,1153.1 1815.61,1151.78 1816.13,1152.65 1816.65,1153.68 1817.17,1153.22 1817.69,1155.17 1818.21,1154.88 1818.73,1153.79 1819.25,1154.62 1819.77,1153.34 1820.28,1156.16 1820.8,1151.64 1821.32,1151.7 1821.84,1151.7 1822.36,1150.63 1822.88,1153.53 1823.4,1155.73 1823.92,1154.46 1824.44,1154.31 1824.96,1153.98 1825.48,1152.02 1826,1151.03 1826.52,1151.15 1827.04,1150.3 1827.56,1149.47 1828.08,1148.47 1828.6,1150.68 1829.12,1150.65 1829.64,1152.76 1830.16,1150.71 1830.68,1152.84 1831.2,1152.91 1831.71,1151.87 1832.23,1153.14 1832.75,1151.95 1833.27,1150.84 1833.79,1147.84 1834.31,1144.83 1834.83,1148.13 1835.35,1147.22 1835.87,1144.52 1836.39,1143.68 1836.91,1142.02 1837.43,1142.51 1837.95,1143.99 1838.47,1144.34 1838.99,1145.58 1839.51,1145.96 1840.03,1144.09 1840.55,1143.39 1841.07,1144.59 1841.59,1142.84 1842.11,1144.47 1842.63,1146.99 1843.14,1143.14 1843.66,1143.72 1844.18,1144.09 1844.7,1143.37 1845.22,1142.87 1845.74,1142.31 1846.26,1142.93 1846.78,1142.47 1847.3,1143.8 1847.82,1144.31 1848.34,1143.41 1848.86,1143.98 1849.38,1146.36 1849.9,1147.65 1850.42,1146.77 1850.94,1146.11 1851.46,1146.34 1851.98,1146.48 1852.5,1149.72 1853.02,1149.79 1853.54,1149.02 1854.06,1148.92 1854.57,1149.87 1855.09,1148.92 1855.61,1149.89 1856.13,1147.67 1856.65,1147.94 1857.17,1148.06 1857.69,1149.45 1858.21,1148.49 1858.73,1149.52 1859.25,1148.54 1859.77,1150.77 1860.29,1150.74 1860.81,1151.56 1861.33,1151.64 1861.85,1152.43 1862.37,1151.44 1862.89,1152.61 1863.41,1151.54 1863.93,1151.52 1864.45,1151.66 1864.97,1151.59 1865.48,1149.54 1866,1150.63 1866.52,1150.78 1867.04,1149.82 1867.56,1150 1868.08,1150.1 1868.6,1149.22 1869.12,1150.27 1869.64,1150.25 1870.16,1151.26 1870.68,1151.24 1871.2,1151.11 1871.72,1152.27 1872.24,1151.43 1872.76,1151.29 1873.28,1152.06 1873.8,1151.97 1874.32,1153.77 1874.84,1153.53 1875.36,1152.46 1875.88,1155.28 1876.4,1155.2 1876.91,1155.14 1877.43,1157.02 1877.95,1155.75 1878.47,1153.72 1878.99,1151.47 1879.51,1148.5 1880.03,1150.6 1880.55,1152.64 1881.07,1154.82 1881.59,1154.62 1882.11,1156.5 1882.63,1157.04 1883.15,1156.75 1883.67,1154.18 1884.19,1152.09 1884.71,1153.16 1885.23,1153.12 1885.75,1151.89 1886.27,1149.79 1886.79,1148.77 1887.31,1150.06 1887.83,1151.07 1888.34,1152.12 1888.86,1149 1889.38,1148.06 1889.9,1147.47 1890.42,1148.5 1890.94,1150.7 1891.46,1151.01 1891.98,1152.19 1892.5,1152.94 1893.02,1153.78 1893.54,1152.9 1894.06,1150.6 1894.58,1151.54 1895.1,1152.79 1895.62,1151.59 1896.14,1153.49 1896.66,1152.38 1897.18,1153.09 1897.7,1153.96 1898.22,1154.92 1898.74,1154.54 1899.26,1154.26 1899.77,1156.21 1900.29,1158.12 1900.81,1157.65 1901.33,1157.15 1901.85,1157.66 1902.37,1156.2 1902.89,1155.88 1903.41,1155.63 1903.93,1152.27 1904.45,1153.34 1904.97,1153.4 1905.49,1153.3 1906.01,1153.28 1906.53,1154.38 1907.05,1156.23 1907.57,1156.01 1908.09,1156.91 1908.61,1155.75 1909.13,1155.5 1909.65,1154.18 1910.17,1156.09 1910.69,1154.91 1911.2,1154.62 1911.72,1154.39 1912.24,1154.03 1912.76,1152.87 1913.28,1155.9 1913.8,1156.98 1914.32,1158.73 1914.84,1160.27 1915.36,1158.74 1915.88,1158.46 1916.4,1157.13 1916.92,1158.05 1917.44,1155.54 1917.96,1155.3 1918.48,1154.22 1919,1155.15 1919.52,1152.91 1920.04,1152.68 1920.56,1152.39 1921.08,1151.27 1921.6,1152.31 1922.11,1154.03 1922.63,1153.8 1923.15,1153.65 1923.67,1151.48 1924.19,1151.36 1924.71,1150.48 1925.23,1149.64 1925.75,1148.84 1926.27,1149.91 1926.79,1147.91 1927.31,1145.15 1927.83,1146.46 1928.35,1145.61 1928.87,1145.79 1929.39,1145.07 1929.91,1145.22 1930.43,1144.41 1930.95,1142.73 1931.47,1141.88 1931.99,1141.5 1932.51,1141.63 1933.03,1138.82 1933.54,1138.56 1934.06,1138.19 1934.58,1138.92 1935.1,1139.46 1935.62,1141.13 1936.14,1141.83 1936.66,1142.07 1937.18,1144.6 1937.7,1143.85 1938.22,1144.24 1938.74,1145.75 1939.26,1146.1 1939.78,1144.38 1940.3,1142.64 1940.82,1142.16 1941.34,1143.74 1941.86,1145.25 1942.38,1146.49 1942.9,1148.86 1943.42,1152.09 1943.94,1151.12 1944.46,1151.16 1944.97,1151.25 1945.49,1152.22 1946.01,1152.25 1946.53,1151.02 1947.05,1152.83 1947.57,1153.53 1948.09,1154.49 1948.61,1153.31 1949.13,1153.19 1949.65,1154.32 1950.17,1155.28 1950.69,1156.05 1951.21,1155.76 1951.73,1156.34 1952.25,1156.3 1952.77,1155.06 1953.29,1152.67 1953.81,1152.58 1954.33,1153.49 1954.85,1153.49 1955.37,1153.37 1955.89,1155.25 1956.4,1155.9 1956.92,1156.91 1957.44,1155.65 1957.96,1153.25 1958.48,1153.07 1959,1155.05 1959.52,1154.89 1960.04,1156.68 1960.56,1156.53 1961.08,1156.19 1961.6,1152.91 1962.12,1151.81 1962.64,1152.95 1963.16,1152.95 1963.68,1155.99 1964.2,1155.65 1964.72,1156.42 1965.24,1155.09 1965.76,1153.77 1966.28,1151.45 1966.8,1150.58 1967.32,1150.71 1967.83,1151.68 1968.35,1152.6 1968.87,1153.62 1969.39,1154.71 1969.91,1152.41 1970.43,1149.51 1970.95,1147.58 1971.47,1147.68 1971.99,1146.82 1972.51,1148.02 1973.03,1148.24 1973.55,1149.29 1974.07,1148.54 1974.59,1148.7 1975.11,1147.84 1975.63,1148.02 1976.15,1145.09 1976.67,1144.36 1977.19,1144.72 1977.71,1144.82 1978.23,1144 1978.74,1145.35 1979.26,1147.57 1979.78,1147.59 1980.3,1151.74 1980.82,1153.78 1981.34,1155.42 1981.86,1153.05 1982.38,1153.02 1982.9,1152.16 1983.42,1151.2 1983.94,1151.38 1984.46,1152.3 1984.98,1151.29 1985.5,1151.4 1986.02,1152.45 1986.54,1150.24 1987.06,1151.21 1987.58,1154.05 1988.1,1152.75 1988.62,1152.58 1989.14,1152.66 1989.66,1154.38 1990.17,1154.12 1990.69,1153.17 1991.21,1152.04 1991.73,1152.08 1992.25,1150.98 1992.77,1148.94 1993.29,1147.92 1993.81,1146.11 1994.33,1149.47 1994.85,1149.53 1995.37,1151.45 1995.89,1150.52 1996.41,1147.53 1996.93,1147.59 1997.45,1146.64 1997.97,1147.03 1998.49,1147.39 1999.01,1147.55 1999.53,1145.55 2000.05,1145.83 2000.57,1147.95 2001.09,1148.03 2001.6,1148.08 2002.12,1148.28 2002.64,1148.33 2003.16,1147.38 2003.68,1148.55 2004.2,1149.94 2004.72,1151.02 2005.24,1151.43 2005.76,1150.45 2006.28,1149.48 2006.8,1150.66 \"/>\n<path clip-path=\"url(#clip292)\" d=\"M968.237 1151.47 L968.757 1151.47 L969.276 1151.47 L969.796 1151.47 L970.315 1151.47 L970.835 1151.47 L971.354 1151.47 L971.874 1151.47 L972.393 1151.47 L972.913 1151.47 L973.433 1151.47 L973.952 1151.47 L974.472 1151.47 L974.991 1151.47 L975.511 1151.47 L976.03 1151.47 L976.55 1151.47 L977.069 1151.47 L977.589 1151.47 L978.108 1151.47 L978.628 1151.47 L979.148 1151.47 L979.667 1151.47 L980.187 1151.47 L980.706 1151.47 L981.226 1151.47 L981.745 1151.47 L982.265 1151.47 L982.784 1151.47 L983.304 1151.47 L983.823 1151.47 L984.343 1151.47 L984.862 1151.47 L985.382 1151.47 L985.902 1151.47 L986.421 1151.47 L986.941 1151.47 L987.46 1151.47 L987.98 1151.47 L988.499 1151.47 L989.019 1151.47 L989.538 1151.47 L990.058 1151.47 L990.577 1151.47 L991.097 1151.47 L991.617 1151.47 L992.136 1151.47 L992.656 1151.47 L993.175 1151.47 L993.695 1151.47 L994.214 1151.47 L994.734 1151.47 L995.253 1151.47 L995.773 1151.47 L996.292 1151.47 L996.812 1151.47 L997.331 1151.47 L997.851 1151.47 L998.371 1151.47 L998.89 1151.47 L999.41 1151.47 L999.929 1151.47 L1000.45 1151.47 L1000.97 1151.47 L1001.49 1151.47 L1002.01 1151.47 L1002.53 1151.47 L1003.05 1151.47 L1003.57 1151.47 L1004.09 1151.47 L1004.61 1151.47 L1005.12 1151.47 L1005.64 1151.47 L1006.16 1151.47 L1006.68 1151.47 L1007.2 1151.47 L1007.72 1151.47 L1008.24 1151.47 L1008.76 1151.47 L1009.28 1151.47 L1009.8 1151.47 L1010.32 1151.47 L1010.84 1151.47 L1011.36 1151.47 L1011.88 1151.47 L1012.4 1151.47 L1012.92 1151.47 L1013.44 1151.47 L1013.96 1151.47 L1014.48 1151.47 L1015 1151.47 L1015.52 1151.47 L1016.03 1151.47 L1016.55 1151.47 L1017.07 1151.47 L1017.59 1151.47 L1018.11 1151.47 L1018.63 1151.47 L1019.15 1151.47 L1019.67 1151.47 L1020.19 1151.47 L1020.71 1151.47 L1021.23 1151.47 L1021.75 1151.47 L1022.27 1151.47 L1022.79 1151.47 L1023.31 1151.47 L1023.83 1151.47 L1024.35 1151.47 L1024.87 1151.47 L1025.39 1151.47 L1025.91 1151.47 L1026.43 1151.47 L1026.95 1151.47 L1027.46 1151.47 L1027.98 1151.47 L1028.5 1151.47 L1029.02 1151.47 L1029.54 1151.47 L1030.06 1151.47 L1030.58 1151.47 L1031.1 1151.47 L1031.62 1151.47 L1032.14 1151.47 L1032.66 1151.47 L1033.18 1151.47 L1033.7 1151.47 L1034.22 1151.47 L1034.74 1151.47 L1035.26 1151.47 L1035.78 1151.47 L1036.3 1151.47 L1036.82 1151.47 L1037.34 1151.47 L1037.86 1151.47 L1038.38 1151.47 L1038.89 1151.47 L1039.41 1151.47 L1039.93 1151.47 L1040.45 1151.47 L1040.97 1151.47 L1041.49 1151.47 L1042.01 1151.47 L1042.53 1151.47 L1043.05 1151.47 L1043.57 1151.47 L1044.09 1151.47 L1044.61 1151.47 L1045.13 1151.47 L1045.65 1151.47 L1046.17 1151.47 L1046.69 1151.47 L1047.21 1151.47 L1047.73 1151.47 L1048.25 1151.47 L1048.77 1151.47 L1049.29 1151.47 L1049.81 1151.47 L1050.32 1151.47 L1050.84 1151.47 L1051.36 1151.47 L1051.88 1151.47 L1052.4 1151.47 L1052.92 1151.47 L1053.44 1151.47 L1053.96 1151.47 L1054.48 1151.47 L1055 1151.47 L1055.52 1151.47 L1056.04 1151.47 L1056.56 1151.47 L1057.08 1151.47 L1057.6 1151.47 L1058.12 1151.47 L1058.64 1151.47 L1059.16 1151.47 L1059.68 1151.47 L1060.2 1151.47 L1060.72 1151.47 L1061.24 1151.47 L1061.75 1151.47 L1062.27 1151.47 L1062.79 1151.47 L1063.31 1151.47 L1063.83 1151.47 L1064.35 1151.47 L1064.87 1151.47 L1065.39 1151.47 L1065.91 1151.47 L1066.43 1151.47 L1066.95 1151.47 L1067.47 1151.47 L1067.99 1151.47 L1068.51 1151.47 L1069.03 1151.47 L1069.55 1151.47 L1070.07 1151.47 L1070.59 1151.47 L1071.11 1151.47 L1071.63 1151.47 L1072.15 1151.47 L1072.66 1151.47 L1073.18 1151.47 L1073.7 1151.47 L1074.22 1151.47 L1074.74 1151.47 L1075.26 1151.47 L1075.78 1151.47 L1076.3 1151.47 L1076.82 1151.47 L1077.34 1151.47 L1077.86 1151.47 L1078.38 1151.47 L1078.9 1151.47 L1079.42 1151.47 L1079.94 1151.47 L1080.46 1151.47 L1080.98 1151.47 L1081.5 1151.47 L1082.02 1151.47 L1082.54 1151.47 L1083.06 1151.47 L1083.58 1151.47 L1084.09 1151.47 L1084.61 1151.47 L1085.13 1151.47 L1085.65 1151.47 L1086.17 1151.47 L1086.69 1151.47 L1087.21 1151.47 L1087.73 1151.47 L1088.25 1151.47 L1088.77 1151.47 L1089.29 1151.47 L1089.81 1151.47 L1090.33 1151.47 L1090.85 1151.47 L1091.37 1151.47 L1091.89 1151.47 L1092.41 1151.47 L1092.93 1151.47 L1093.45 1151.47 L1093.97 1151.47 L1094.49 1151.47 L1095.01 1151.47 L1095.52 1151.47 L1096.04 1151.47 L1096.56 1151.47 L1097.08 1151.47 L1097.6 1151.47 L1098.12 1151.47 L1098.64 1151.47 L1099.16 1151.47 L1099.68 1151.47 L1100.2 1151.47 L1100.72 1151.47 L1101.24 1151.47 L1101.76 1151.47 L1102.28 1151.47 L1102.8 1151.47 L1103.32 1151.47 L1103.84 1151.47 L1104.36 1151.47 L1104.88 1151.47 L1105.4 1151.47 L1105.92 1151.47 L1106.44 1151.47 L1106.95 1151.47 L1107.47 1151.47 L1107.99 1151.47 L1108.51 1151.47 L1109.03 1151.47 L1109.55 1151.47 L1110.07 1151.47 L1110.59 1151.47 L1111.11 1151.47 L1111.63 1151.47 L1112.15 1151.47 L1112.67 1151.47 L1113.19 1151.47 L1113.71 1151.47 L1114.23 1151.47 L1114.75 1151.47 L1115.27 1151.47 L1115.79 1151.47 L1116.31 1151.47 L1116.83 1151.47 L1117.35 1151.47 L1117.87 1151.47 L1118.38 1151.47 L1118.9 1151.47 L1119.42 1151.47 L1119.94 1151.47 L1120.46 1151.47 L1120.98 1151.47 L1121.5 1151.47 L1122.02 1151.47 L1122.54 1151.47 L1123.06 1151.47 L1123.58 1151.47 L1124.1 1151.47 L1124.62 1151.47 L1125.14 1151.47 L1125.66 1151.47 L1126.18 1151.47 L1126.7 1151.47 L1127.22 1151.47 L1127.74 1151.47 L1128.26 1151.47 L1128.78 1151.47 L1129.29 1151.47 L1129.81 1151.47 L1130.33 1151.47 L1130.85 1151.47 L1131.37 1151.47 L1131.89 1151.47 L1132.41 1151.47 L1132.93 1151.47 L1133.45 1151.47 L1133.97 1151.47 L1134.49 1151.47 L1135.01 1151.47 L1135.53 1151.47 L1136.05 1151.47 L1136.57 1151.47 L1137.09 1151.47 L1137.61 1151.47 L1138.13 1151.47 L1138.65 1151.47 L1139.17 1151.47 L1139.69 1151.47 L1140.21 1151.47 L1140.72 1151.47 L1141.24 1151.47 L1141.76 1151.47 L1142.28 1151.47 L1142.8 1151.47 L1143.32 1151.47 L1143.84 1151.47 L1144.36 1151.47 L1144.88 1151.47 L1145.4 1151.47 L1145.92 1151.47 L1146.44 1151.47 L1146.96 1151.47 L1147.48 1151.47 L1148 1151.47 L1148.52 1151.47 L1149.04 1151.47 L1149.56 1151.47 L1150.08 1151.47 L1150.6 1151.47 L1151.12 1151.47 L1151.64 1151.47 L1152.15 1151.47 L1152.67 1151.47 L1153.19 1151.47 L1153.71 1151.47 L1154.23 1151.47 L1154.75 1151.47 L1155.27 1151.47 L1155.79 1151.47 L1156.31 1151.47 L1156.83 1151.47 L1157.35 1151.47 L1157.87 1151.47 L1158.39 1151.47 L1158.91 1151.47 L1159.43 1151.47 L1159.95 1151.47 L1160.47 1151.47 L1160.99 1151.47 L1161.51 1151.47 L1162.03 1151.47 L1162.55 1151.47 L1163.07 1151.47 L1163.58 1151.47 L1164.1 1151.47 L1164.62 1151.47 L1165.14 1151.47 L1165.66 1151.47 L1166.18 1151.47 L1166.7 1151.47 L1167.22 1151.47 L1167.74 1151.47 L1168.26 1151.47 L1168.78 1151.47 L1169.3 1151.47 L1169.82 1151.47 L1170.34 1151.47 L1170.86 1151.47 L1171.38 1151.47 L1171.9 1151.47 L1172.42 1151.47 L1172.94 1151.47 L1173.46 1151.47 L1173.98 1151.47 L1174.5 1151.47 L1175.01 1151.47 L1175.53 1151.47 L1176.05 1151.47 L1176.57 1151.47 L1177.09 1151.47 L1177.61 1151.47 L1178.13 1151.47 L1178.65 1151.47 L1179.17 1151.47 L1179.69 1151.47 L1180.21 1151.47 L1180.73 1151.47 L1181.25 1151.47 L1181.77 1151.47 L1182.29 1151.47 L1182.81 1151.47 L1183.33 1151.47 L1183.85 1151.47 L1184.37 1151.47 L1184.89 1151.47 L1185.41 1151.47 L1185.92 1151.47 L1186.44 1151.47 L1186.96 1151.47 L1187.48 1151.47 L1188 1151.47 L1188.52 1151.47 L1189.04 1151.47 L1189.56 1151.47 L1190.08 1151.47 L1190.6 1151.47 L1191.12 1151.47 L1191.64 1151.47 L1192.16 1151.47 L1192.68 1151.47 L1193.2 1151.47 L1193.72 1151.47 L1194.24 1151.47 L1194.76 1151.47 L1195.28 1151.47 L1195.8 1151.47 L1196.32 1151.47 L1196.84 1151.47 L1197.35 1151.47 L1197.87 1151.47 L1198.39 1151.47 L1198.91 1151.47 L1199.43 1151.47 L1199.95 1151.47 L1200.47 1151.47 L1200.99 1151.47 L1201.51 1151.47 L1202.03 1151.47 L1202.55 1151.47 L1203.07 1151.47 L1203.59 1151.47 L1204.11 1151.47 L1204.63 1151.47 L1205.15 1151.47 L1205.67 1151.47 L1206.19 1151.47 L1206.71 1151.47 L1207.23 1151.47 L1207.75 1151.47 L1208.27 1151.47 L1208.78 1151.47 L1209.3 1151.47 L1209.82 1151.47 L1210.34 1151.47 L1210.86 1151.47 L1211.38 1151.47 L1211.9 1151.47 L1212.42 1151.47 L1212.94 1151.47 L1213.46 1151.47 L1213.98 1151.47 L1214.5 1151.47 L1215.02 1151.47 L1215.54 1151.47 L1216.06 1151.47 L1216.58 1151.47 L1217.1 1151.47 L1217.62 1151.47 L1218.14 1151.47 L1218.66 1151.47 L1219.18 1151.47 L1219.7 1151.47 L1220.21 1151.47 L1220.73 1151.47 L1221.25 1151.47 L1221.77 1151.47 L1222.29 1151.47 L1222.81 1151.47 L1223.33 1151.47 L1223.85 1151.47 L1224.37 1151.47 L1224.89 1151.47 L1225.41 1151.47 L1225.93 1151.47 L1226.45 1151.47 L1226.97 1151.47 L1227.49 1151.47 L1228.01 1151.47 L1228.53 1151.47 L1229.05 1151.47 L1229.57 1151.47 L1230.09 1151.47 L1230.61 1151.47 L1231.13 1151.47 L1231.64 1151.47 L1232.16 1151.47 L1232.68 1151.47 L1233.2 1151.47 L1233.72 1151.47 L1234.24 1151.47 L1234.76 1151.47 L1235.28 1151.47 L1235.8 1151.47 L1236.32 1151.47 L1236.84 1151.47 L1237.36 1151.47 L1237.88 1151.47 L1238.4 1151.47 L1238.92 1151.47 L1239.44 1151.47 L1239.96 1151.47 L1240.48 1151.47 L1241 1151.47 L1241.52 1151.47 L1242.04 1151.47 L1242.55 1151.47 L1243.07 1151.47 L1243.59 1151.47 L1244.11 1151.47 L1244.63 1151.47 L1245.15 1151.47 L1245.67 1151.47 L1246.19 1151.47 L1246.71 1151.47 L1247.23 1151.47 L1247.75 1151.47 L1248.27 1151.47 L1248.79 1151.47 L1249.31 1151.47 L1249.83 1151.47 L1250.35 1151.47 L1250.87 1151.47 L1251.39 1151.47 L1251.91 1151.47 L1252.43 1151.47 L1252.95 1151.47 L1253.47 1151.47 L1253.98 1151.47 L1254.5 1151.47 L1255.02 1151.47 L1255.54 1151.47 L1256.06 1151.47 L1256.58 1151.47 L1257.1 1151.47 L1257.62 1151.47 L1258.14 1151.47 L1258.66 1151.47 L1259.18 1151.47 L1259.7 1151.47 L1260.22 1151.47 L1260.74 1151.47 L1261.26 1151.47 L1261.78 1151.47 L1262.3 1151.47 L1262.82 1151.47 L1263.34 1151.47 L1263.86 1151.47 L1264.38 1151.47 L1264.9 1151.47 L1265.41 1151.47 L1265.93 1151.47 L1266.45 1151.47 L1266.97 1151.47 L1267.49 1151.47 L1268.01 1151.47 L1268.53 1151.47 L1269.05 1151.47 L1269.57 1151.47 L1270.09 1151.47 L1270.61 1151.47 L1271.13 1151.47 L1271.65 1151.47 L1272.17 1151.47 L1272.69 1151.47 L1273.21 1151.47 L1273.73 1151.47 L1274.25 1151.47 L1274.77 1151.47 L1275.29 1151.47 L1275.81 1151.47 L1276.33 1151.47 L1276.84 1151.47 L1277.36 1151.47 L1277.88 1151.47 L1278.4 1151.47 L1278.92 1151.47 L1279.44 1151.47 L1279.96 1151.47 L1280.48 1151.47 L1281 1151.47 L1281.52 1151.47 L1282.04 1151.47 L1282.56 1151.47 L1283.08 1151.47 L1283.6 1151.47 L1284.12 1151.47 L1284.64 1151.47 L1285.16 1151.47 L1285.68 1151.47 L1286.2 1151.47 L1286.72 1151.47 L1287.24 1151.47 L1287.76 1151.47 L1288.27 1151.47 L1288.79 1151.47 L1289.31 1151.47 L1289.83 1151.47 L1290.35 1151.47 L1290.87 1151.47 L1291.39 1151.47 L1291.91 1151.47 L1292.43 1151.47 L1292.95 1151.47 L1293.47 1151.47 L1293.99 1151.47 L1294.51 1151.47 L1295.03 1151.47 L1295.55 1151.47 L1296.07 1151.47 L1296.59 1151.47 L1297.11 1151.47 L1297.63 1151.47 L1298.15 1151.47 L1298.67 1151.47 L1299.18 1151.47 L1299.7 1151.47 L1300.22 1151.47 L1300.74 1151.47 L1301.26 1151.47 L1301.78 1151.47 L1302.3 1151.47 L1302.82 1151.47 L1303.34 1151.47 L1303.86 1151.47 L1304.38 1151.47 L1304.9 1151.47 L1305.42 1151.47 L1305.94 1151.47 L1306.46 1151.47 L1306.98 1151.47 L1307.5 1151.47 L1308.02 1151.47 L1308.54 1151.47 L1309.06 1151.47 L1309.58 1151.47 L1310.1 1151.47 L1310.61 1151.47 L1311.13 1151.47 L1311.65 1151.47 L1312.17 1151.47 L1312.69 1151.47 L1313.21 1151.47 L1313.73 1151.47 L1314.25 1151.47 L1314.77 1151.47 L1315.29 1151.47 L1315.81 1151.47 L1316.33 1151.47 L1316.85 1151.47 L1317.37 1151.47 L1317.89 1151.47 L1318.41 1151.47 L1318.93 1151.47 L1319.45 1151.47 L1319.97 1151.47 L1320.49 1151.47 L1321.01 1151.47 L1321.53 1151.47 L1322.04 1151.47 L1322.56 1151.47 L1323.08 1151.47 L1323.6 1151.47 L1324.12 1151.47 L1324.64 1151.47 L1325.16 1151.47 L1325.68 1151.47 L1326.2 1151.47 L1326.72 1151.47 L1327.24 1151.47 L1327.76 1151.47 L1328.28 1151.47 L1328.8 1151.47 L1329.32 1151.47 L1329.84 1151.47 L1330.36 1151.47 L1330.88 1151.47 L1331.4 1151.47 L1331.92 1151.47 L1332.44 1151.47 L1332.96 1151.47 L1333.47 1151.47 L1333.99 1151.47 L1334.51 1151.47 L1335.03 1151.47 L1335.55 1151.47 L1336.07 1151.47 L1336.59 1151.47 L1337.11 1151.47 L1337.63 1151.47 L1338.15 1151.47 L1338.67 1151.47 L1339.19 1151.47 L1339.71 1151.47 L1340.23 1151.47 L1340.75 1151.47 L1341.27 1151.47 L1341.79 1151.47 L1342.31 1151.47 L1342.83 1151.47 L1343.35 1151.47 L1343.87 1151.47 L1344.39 1151.47 L1344.9 1151.47 L1345.42 1151.47 L1345.94 1151.47 L1346.46 1151.47 L1346.98 1151.47 L1347.5 1151.47 L1348.02 1151.47 L1348.54 1151.47 L1349.06 1151.47 L1349.58 1151.47 L1350.1 1151.47 L1350.62 1151.47 L1351.14 1151.47 L1351.66 1151.47 L1352.18 1151.47 L1352.7 1151.47 L1353.22 1151.47 L1353.74 1151.47 L1354.26 1151.47 L1354.78 1151.47 L1355.3 1151.47 L1355.81 1151.47 L1356.33 1151.47 L1356.85 1151.47 L1357.37 1151.47 L1357.89 1151.47 L1358.41 1151.47 L1358.93 1151.47 L1359.45 1151.47 L1359.97 1151.47 L1360.49 1151.47 L1361.01 1151.47 L1361.53 1151.47 L1362.05 1151.47 L1362.57 1151.47 L1363.09 1151.47 L1363.61 1151.47 L1364.13 1151.47 L1364.65 1151.47 L1365.17 1151.47 L1365.69 1151.47 L1366.21 1151.47 L1366.73 1151.47 L1367.24 1151.47 L1367.76 1151.47 L1368.28 1151.47 L1368.8 1151.47 L1369.32 1151.47 L1369.84 1151.47 L1370.36 1151.47 L1370.88 1151.47 L1371.4 1151.47 L1371.92 1151.47 L1372.44 1151.47 L1372.96 1151.47 L1373.48 1151.47 L1374 1151.47 L1374.52 1151.47 L1375.04 1151.47 L1375.56 1151.47 L1376.08 1151.47 L1376.6 1151.47 L1377.12 1151.47 L1377.64 1151.47 L1378.16 1151.47 L1378.67 1151.47 L1379.19 1151.47 L1379.71 1151.47 L1380.23 1151.47 L1380.75 1151.47 L1381.27 1151.47 L1381.79 1151.47 L1382.31 1151.47 L1382.83 1151.47 L1383.35 1151.47 L1383.87 1151.47 L1384.39 1151.47 L1384.91 1151.47 L1385.43 1151.47 L1385.95 1151.47 L1386.47 1151.47 L1386.99 1151.47 L1387.51 1151.47 L1388.03 1151.47 L1388.55 1151.47 L1389.07 1151.47 L1389.59 1151.47 L1390.1 1151.47 L1390.62 1151.47 L1391.14 1151.47 L1391.66 1151.47 L1392.18 1151.47 L1392.7 1151.47 L1393.22 1151.47 L1393.74 1151.47 L1394.26 1151.47 L1394.78 1151.47 L1395.3 1151.47 L1395.82 1151.47 L1396.34 1151.47 L1396.86 1151.47 L1397.38 1151.47 L1397.9 1151.47 L1398.42 1151.47 L1398.94 1151.47 L1399.46 1151.47 L1399.98 1151.47 L1400.5 1151.47 L1401.02 1151.47 L1401.53 1151.47 L1402.05 1151.47 L1402.57 1151.47 L1403.09 1151.47 L1403.61 1151.47 L1404.13 1151.47 L1404.65 1151.47 L1405.17 1151.47 L1405.69 1151.47 L1406.21 1151.47 L1406.73 1151.47 L1407.25 1151.47 L1407.77 1151.47 L1408.29 1151.47 L1408.81 1151.47 L1409.33 1151.47 L1409.85 1151.47 L1410.37 1151.47 L1410.89 1151.47 L1411.41 1151.47 L1411.93 1151.47 L1412.44 1151.47 L1412.96 1151.47 L1413.48 1151.47 L1414 1151.47 L1414.52 1151.47 L1415.04 1151.47 L1415.56 1151.47 L1416.08 1151.47 L1416.6 1151.47 L1417.12 1151.47 L1417.64 1151.47 L1418.16 1151.47 L1418.68 1151.47 L1419.2 1151.47 L1419.72 1151.47 L1420.24 1151.47 L1420.76 1151.47 L1421.28 1151.47 L1421.8 1151.47 L1422.32 1151.47 L1422.84 1151.47 L1423.36 1151.47 L1423.87 1151.47 L1424.39 1151.47 L1424.91 1151.47 L1425.43 1151.47 L1425.95 1151.47 L1426.47 1151.47 L1426.99 1151.47 L1427.51 1151.47 L1428.03 1151.47 L1428.55 1151.47 L1429.07 1151.47 L1429.59 1151.47 L1430.11 1151.47 L1430.63 1151.47 L1431.15 1151.47 L1431.67 1151.47 L1432.19 1151.47 L1432.71 1151.47 L1433.23 1151.47 L1433.75 1151.47 L1434.27 1151.47 L1434.79 1151.47 L1435.3 1151.47 L1435.82 1151.47 L1436.34 1151.47 L1436.86 1151.47 L1437.38 1151.47 L1437.9 1151.47 L1438.42 1151.47 L1438.94 1151.47 L1439.46 1151.47 L1439.98 1151.47 L1440.5 1151.47 L1441.02 1151.47 L1441.54 1151.47 L1442.06 1151.47 L1442.58 1151.47 L1443.1 1151.47 L1443.62 1151.47 L1444.14 1151.47 L1444.66 1151.47 L1445.18 1151.47 L1445.7 1151.47 L1446.22 1151.47 L1446.73 1151.47 L1447.25 1151.47 L1447.77 1151.47 L1448.29 1151.47 L1448.81 1151.47 L1449.33 1151.47 L1449.85 1151.47 L1450.37 1151.47 L1450.89 1151.47 L1451.41 1151.47 L1451.93 1151.47 L1452.45 1151.47 L1452.97 1151.47 L1453.49 1151.47 L1454.01 1151.47 L1454.53 1151.47 L1455.05 1151.47 L1455.57 1151.47 L1456.09 1151.47 L1456.61 1151.47 L1457.13 1151.47 L1457.65 1151.47 L1458.16 1151.47 L1458.68 1151.47 L1459.2 1151.47 L1459.72 1151.47 L1460.24 1151.47 L1460.76 1151.47 L1461.28 1151.47 L1461.8 1151.47 L1462.32 1151.47 L1462.84 1151.47 L1463.36 1151.47 L1463.88 1151.47 L1464.4 1151.47 L1464.92 1151.47 L1465.44 1151.47 L1465.96 1151.47 L1466.48 1151.47 L1467 1151.47 L1467.52 1151.47 L1468.04 1151.47 L1468.56 1151.47 L1469.07 1151.47 L1469.59 1151.47 L1470.11 1151.47 L1470.63 1151.47 L1471.15 1151.47 L1471.67 1151.47 L1472.19 1151.47 L1472.71 1151.47 L1473.23 1151.47 L1473.75 1151.47 L1474.27 1151.47 L1474.79 1151.47 L1475.31 1151.47 L1475.83 1151.47 L1476.35 1151.47 L1476.87 1151.47 L1477.39 1151.47 L1477.91 1151.47 L1478.43 1151.47 L1478.95 1151.47 L1479.47 1151.47 L1479.99 1151.47 L1480.5 1151.47 L1481.02 1151.47 L1481.54 1151.47 L1482.06 1151.47 L1482.58 1151.47 L1483.1 1151.47 L1483.62 1151.47 L1484.14 1151.47 L1484.66 1151.47 L1485.18 1151.47 L1485.7 1151.47 L1486.22 1151.47 L1486.74 1151.47 L1487.26 1151.47 L1487.78 1151.47 L1488.3 1151.47 L1488.82 1151.47 L1489.34 1151.47 L1489.86 1151.47 L1490.38 1151.47 L1490.9 1151.47 L1491.42 1151.47 L1491.93 1151.47 L1492.45 1151.47 L1492.97 1151.47 L1493.49 1151.47 L1494.01 1151.47 L1494.53 1151.47 L1495.05 1151.47 L1495.57 1151.47 L1496.09 1151.47 L1496.61 1151.47 L1497.13 1151.47 L1497.65 1151.47 L1498.17 1151.47 L1498.69 1151.47 L1499.21 1151.47 L1499.73 1151.47 L1500.25 1151.47 L1500.77 1151.47 L1501.29 1151.47 L1501.81 1151.47 L1502.33 1151.47 L1502.85 1151.47 L1503.36 1151.47 L1503.88 1151.47 L1504.4 1151.47 L1504.92 1151.47 L1505.44 1151.47 L1505.96 1151.47 L1506.48 1151.47 L1507 1151.47 L1507.52 1151.47 L1508.04 1151.47 L1508.56 1151.47 L1509.08 1151.47 L1509.6 1151.47 L1510.12 1151.47 L1510.64 1151.47 L1511.16 1151.47 L1511.68 1151.47 L1512.2 1151.47 L1512.72 1151.47 L1513.24 1151.47 L1513.76 1151.47 L1514.28 1151.47 L1514.79 1151.47 L1515.31 1151.47 L1515.83 1151.47 L1516.35 1151.47 L1516.87 1151.47 L1517.39 1151.47 L1517.91 1151.47 L1518.43 1151.47 L1518.95 1151.47 L1519.47 1151.47 L1519.99 1151.47 L1520.51 1151.47 L1521.03 1151.47 L1521.55 1151.47 L1522.07 1151.47 L1522.59 1151.47 L1523.11 1151.47 L1523.63 1151.47 L1524.15 1151.47 L1524.67 1151.47 L1525.19 1151.47 L1525.7 1151.47 L1526.22 1151.47 L1526.74 1151.47 L1527.26 1151.47 L1527.78 1151.47 L1528.3 1151.47 L1528.82 1151.47 L1529.34 1151.47 L1529.86 1151.47 L1530.38 1151.47 L1530.9 1151.47 L1531.42 1151.47 L1531.94 1151.47 L1532.46 1151.47 L1532.98 1151.47 L1533.5 1151.47 L1534.02 1151.47 L1534.54 1151.47 L1535.06 1151.47 L1535.58 1151.47 L1536.1 1151.47 L1536.62 1151.47 L1537.13 1151.47 L1537.65 1151.47 L1538.17 1151.47 L1538.69 1151.47 L1539.21 1151.47 L1539.73 1151.47 L1540.25 1151.47 L1540.77 1151.47 L1541.29 1151.47 L1541.81 1151.47 L1542.33 1151.47 L1542.85 1151.47 L1543.37 1151.47 L1543.89 1151.47 L1544.41 1151.47 L1544.93 1151.47 L1545.45 1151.47 L1545.97 1151.47 L1546.49 1151.47 L1547.01 1151.47 L1547.53 1151.47 L1548.05 1151.47 L1548.56 1151.47 L1549.08 1151.47 L1549.6 1151.47 L1550.12 1151.47 L1550.64 1151.47 L1551.16 1151.47 L1551.68 1151.47 L1552.2 1151.47 L1552.72 1151.47 L1553.24 1151.47 L1553.76 1151.47 L1554.28 1151.47 L1554.8 1151.47 L1555.32 1151.47 L1555.84 1151.47 L1556.36 1151.47 L1556.88 1151.47 L1557.4 1151.47 L1557.92 1151.47 L1558.44 1151.47 L1558.96 1151.47 L1559.48 1151.47 L1559.99 1151.47 L1560.51 1151.47 L1561.03 1151.47 L1561.55 1151.47 L1562.07 1151.47 L1562.59 1151.47 L1563.11 1151.47 L1563.63 1151.47 L1564.15 1151.47 L1564.67 1151.47 L1565.19 1151.47 L1565.71 1151.47 L1566.23 1151.47 L1566.75 1151.47 L1567.27 1151.47 L1567.79 1151.47 L1568.31 1151.47 L1568.83 1151.47 L1569.35 1151.47 L1569.87 1151.47 L1570.39 1151.47 L1570.91 1151.47 L1571.42 1151.47 L1571.94 1151.47 L1572.46 1151.47 L1572.98 1151.47 L1573.5 1151.47 L1574.02 1151.47 L1574.54 1151.47 L1575.06 1151.47 L1575.58 1151.47 L1576.1 1151.47 L1576.62 1151.47 L1577.14 1151.47 L1577.66 1151.47 L1578.18 1151.47 L1578.7 1151.47 L1579.22 1151.47 L1579.74 1151.47 L1580.26 1151.47 L1580.78 1151.47 L1581.3 1151.47 L1581.82 1151.47 L1582.33 1151.47 L1582.85 1151.47 L1583.37 1151.47 L1583.89 1151.47 L1584.41 1151.47 L1584.93 1151.47 L1585.45 1151.47 L1585.97 1151.47 L1586.49 1151.47 L1587.01 1151.47 L1587.53 1151.47 L1588.05 1151.47 L1588.57 1151.47 L1589.09 1151.47 L1589.61 1151.47 L1590.13 1151.47 L1590.65 1151.47 L1591.17 1151.47 L1591.69 1151.47 L1592.21 1151.47 L1592.73 1151.47 L1593.25 1151.47 L1593.76 1151.47 L1594.28 1151.47 L1594.8 1151.47 L1595.32 1151.47 L1595.84 1151.47 L1596.36 1151.47 L1596.88 1151.47 L1597.4 1151.47 L1597.92 1151.47 L1598.44 1151.47 L1598.96 1151.47 L1599.48 1151.47 L1600 1151.47 L1600.52 1151.47 L1601.04 1151.47 L1601.56 1151.47 L1602.08 1151.47 L1602.6 1151.47 L1603.12 1151.47 L1603.64 1151.47 L1604.16 1151.47 L1604.68 1151.47 L1605.19 1151.47 L1605.71 1151.47 L1606.23 1151.47 L1606.75 1151.47 L1607.27 1151.47 L1607.79 1151.47 L1608.31 1151.47 L1608.83 1151.47 L1609.35 1151.47 L1609.87 1151.47 L1610.39 1151.47 L1610.91 1151.47 L1611.43 1151.47 L1611.95 1151.47 L1612.47 1151.47 L1612.99 1151.47 L1613.51 1151.47 L1614.03 1151.47 L1614.55 1151.47 L1615.07 1151.47 L1615.59 1151.47 L1616.11 1151.47 L1616.62 1151.47 L1617.14 1151.47 L1617.66 1151.47 L1618.18 1151.47 L1618.7 1151.47 L1619.22 1151.47 L1619.74 1151.47 L1620.26 1151.47 L1620.78 1151.47 L1621.3 1151.47 L1621.82 1151.47 L1622.34 1151.47 L1622.86 1151.47 L1623.38 1151.47 L1623.9 1151.47 L1624.42 1151.47 L1624.94 1151.47 L1625.46 1151.47 L1625.98 1151.47 L1626.5 1151.47 L1627.02 1151.47 L1627.54 1151.47 L1628.05 1151.47 L1628.57 1151.47 L1629.09 1151.47 L1629.61 1151.47 L1630.13 1151.47 L1630.65 1151.47 L1631.17 1151.47 L1631.69 1151.47 L1632.21 1151.47 L1632.73 1151.47 L1633.25 1151.47 L1633.77 1151.47 L1634.29 1151.47 L1634.81 1151.47 L1635.33 1151.47 L1635.85 1151.47 L1636.37 1151.47 L1636.89 1151.47 L1637.41 1151.47 L1637.93 1151.47 L1638.45 1151.47 L1638.96 1151.47 L1639.48 1151.47 L1640 1151.47 L1640.52 1151.47 L1641.04 1151.47 L1641.56 1151.47 L1642.08 1151.47 L1642.6 1151.47 L1643.12 1151.47 L1643.64 1151.47 L1644.16 1151.47 L1644.68 1151.47 L1645.2 1151.47 L1645.72 1151.47 L1646.24 1151.47 L1646.76 1151.47 L1647.28 1151.47 L1647.8 1151.47 L1648.32 1151.47 L1648.84 1151.47 L1649.36 1151.47 L1649.88 1151.47 L1650.39 1151.47 L1650.91 1151.47 L1651.43 1151.47 L1651.95 1151.47 L1652.47 1151.47 L1652.99 1151.47 L1653.51 1151.47 L1654.03 1151.47 L1654.55 1151.47 L1655.07 1151.47 L1655.59 1151.47 L1656.11 1151.47 L1656.63 1151.47 L1657.15 1151.47 L1657.67 1151.47 L1658.19 1151.47 L1658.71 1151.47 L1659.23 1151.47 L1659.75 1151.47 L1660.27 1151.47 L1660.79 1151.47 L1661.31 1151.47 L1661.82 1151.47 L1662.34 1151.47 L1662.86 1151.47 L1663.38 1151.47 L1663.9 1151.47 L1664.42 1151.47 L1664.94 1151.47 L1665.46 1151.47 L1665.98 1151.47 L1666.5 1151.47 L1667.02 1151.47 L1667.54 1151.47 L1668.06 1151.47 L1668.58 1151.47 L1669.1 1151.47 L1669.62 1151.47 L1670.14 1151.47 L1670.66 1151.47 L1671.18 1151.47 L1671.7 1151.47 L1672.22 1151.47 L1672.74 1151.47 L1673.25 1151.47 L1673.77 1151.47 L1674.29 1151.47 L1674.81 1151.47 L1675.33 1151.47 L1675.85 1151.47 L1676.37 1151.47 L1676.89 1151.47 L1677.41 1151.47 L1677.93 1151.47 L1678.45 1151.47 L1678.97 1151.47 L1679.49 1151.47 L1680.01 1151.47 L1680.53 1151.47 L1681.05 1151.47 L1681.57 1151.47 L1682.09 1151.47 L1682.61 1151.47 L1683.13 1151.47 L1683.65 1151.47 L1684.17 1151.47 L1684.68 1151.47 L1685.2 1151.47 L1685.72 1151.47 L1686.24 1151.47 L1686.76 1151.47 L1687.28 1151.47 L1687.8 1151.47 L1688.32 1151.47 L1688.84 1151.47 L1689.36 1151.47 L1689.88 1151.47 L1690.4 1151.47 L1690.92 1151.47 L1691.44 1151.47 L1691.96 1151.47 L1692.48 1151.47 L1693 1151.47 L1693.52 1151.47 L1694.04 1151.47 L1694.56 1151.47 L1695.08 1151.47 L1695.59 1151.47 L1696.11 1151.47 L1696.63 1151.47 L1697.15 1151.47 L1697.67 1151.47 L1698.19 1151.47 L1698.71 1151.47 L1699.23 1151.47 L1699.75 1151.47 L1700.27 1151.47 L1700.79 1151.47 L1701.31 1151.47 L1701.83 1151.47 L1702.35 1151.47 L1702.87 1151.47 L1703.39 1151.47 L1703.91 1151.47 L1704.43 1151.47 L1704.95 1151.47 L1705.47 1151.47 L1705.99 1151.47 L1706.51 1151.47 L1707.02 1151.47 L1707.54 1151.47 L1708.06 1151.47 L1708.58 1151.47 L1709.1 1151.47 L1709.62 1151.47 L1710.14 1151.47 L1710.66 1151.47 L1711.18 1151.47 L1711.7 1151.47 L1712.22 1151.47 L1712.74 1151.47 L1713.26 1151.47 L1713.78 1151.47 L1714.3 1151.47 L1714.82 1151.47 L1715.34 1151.47 L1715.86 1151.47 L1716.38 1151.47 L1716.9 1151.47 L1717.42 1151.47 L1717.94 1151.47 L1718.45 1151.47 L1718.97 1151.47 L1719.49 1151.47 L1720.01 1151.47 L1720.53 1151.47 L1721.05 1151.47 L1721.57 1151.47 L1722.09 1151.47 L1722.61 1151.47 L1723.13 1151.47 L1723.65 1151.47 L1724.17 1151.47 L1724.69 1151.47 L1725.21 1151.47 L1725.73 1151.47 L1726.25 1151.47 L1726.77 1151.47 L1727.29 1151.47 L1727.81 1151.47 L1728.33 1151.47 L1728.85 1151.47 L1729.37 1151.47 L1729.88 1151.47 L1730.4 1151.47 L1730.92 1151.47 L1731.44 1151.47 L1731.96 1151.47 L1732.48 1151.47 L1733 1151.47 L1733.52 1151.47 L1734.04 1151.47 L1734.56 1151.47 L1735.08 1151.47 L1735.6 1151.47 L1736.12 1151.47 L1736.64 1151.47 L1737.16 1151.47 L1737.68 1151.47 L1738.2 1151.47 L1738.72 1151.47 L1739.24 1151.47 L1739.76 1151.47 L1740.28 1151.47 L1740.8 1151.47 L1741.31 1151.47 L1741.83 1151.47 L1742.35 1151.47 L1742.87 1151.47 L1743.39 1151.47 L1743.91 1151.47 L1744.43 1151.47 L1744.95 1151.47 L1745.47 1151.47 L1745.99 1151.47 L1746.51 1151.47 L1747.03 1151.47 L1747.55 1151.47 L1748.07 1151.47 L1748.59 1151.47 L1749.11 1151.47 L1749.63 1151.47 L1750.15 1151.47 L1750.67 1151.47 L1751.19 1151.47 L1751.71 1151.47 L1752.22 1151.47 L1752.74 1151.47 L1753.26 1151.47 L1753.78 1151.47 L1754.3 1151.47 L1754.82 1151.47 L1755.34 1151.47 L1755.86 1151.47 L1756.38 1151.47 L1756.9 1151.47 L1757.42 1151.47 L1757.94 1151.47 L1758.46 1151.47 L1758.98 1151.47 L1759.5 1151.47 L1760.02 1151.47 L1760.54 1151.47 L1761.06 1151.47 L1761.58 1151.47 L1762.1 1151.47 L1762.62 1151.47 L1763.14 1151.47 L1763.65 1151.47 L1764.17 1151.47 L1764.69 1151.47 L1765.21 1151.47 L1765.73 1151.47 L1766.25 1151.47 L1766.77 1151.47 L1767.29 1151.47 L1767.81 1151.47 L1768.33 1151.47 L1768.85 1151.47 L1769.37 1151.47 L1769.89 1151.47 L1770.41 1151.47 L1770.93 1151.47 L1771.45 1151.47 L1771.97 1151.47 L1772.49 1151.47 L1773.01 1151.47 L1773.53 1151.47 L1774.05 1151.47 L1774.57 1151.47 L1775.08 1151.47 L1775.6 1151.47 L1776.12 1151.47 L1776.64 1151.47 L1777.16 1151.47 L1777.68 1151.47 L1778.2 1151.47 L1778.72 1151.47 L1779.24 1151.47 L1779.76 1151.47 L1780.28 1151.47 L1780.8 1151.47 L1781.32 1151.47 L1781.84 1151.47 L1782.36 1151.47 L1782.88 1151.47 L1783.4 1151.47 L1783.92 1151.47 L1784.44 1151.47 L1784.96 1151.47 L1785.48 1151.47 L1786 1151.47 L1786.51 1151.47 L1787.03 1151.47 L1787.55 1151.47 L1788.07 1151.47 L1788.59 1151.47 L1789.11 1151.47 L1789.63 1151.47 L1790.15 1151.47 L1790.67 1151.47 L1791.19 1151.47 L1791.71 1151.47 L1792.23 1151.47 L1792.75 1151.47 L1793.27 1151.47 L1793.79 1151.47 L1794.31 1151.47 L1794.83 1151.47 L1795.35 1151.47 L1795.87 1151.47 L1796.39 1151.47 L1796.91 1151.47 L1797.43 1151.47 L1797.94 1151.47 L1798.46 1151.47 L1798.98 1151.47 L1799.5 1151.47 L1800.02 1151.47 L1800.54 1151.47 L1801.06 1151.47 L1801.58 1151.47 L1802.1 1151.47 L1802.62 1151.47 L1803.14 1151.47 L1803.66 1151.47 L1804.18 1151.47 L1804.7 1151.47 L1805.22 1151.47 L1805.74 1151.47 L1806.26 1151.47 L1806.78 1151.47 L1807.3 1151.47 L1807.82 1151.47 L1808.34 1151.47 L1808.85 1151.47 L1809.37 1151.47 L1809.89 1151.47 L1810.41 1151.47 L1810.93 1151.47 L1811.45 1151.47 L1811.97 1151.47 L1812.49 1151.47 L1813.01 1151.47 L1813.53 1151.47 L1814.05 1151.47 L1814.57 1151.47 L1815.09 1151.47 L1815.61 1151.47 L1816.13 1151.47 L1816.65 1151.47 L1817.17 1151.47 L1817.69 1151.47 L1818.21 1151.47 L1818.73 1151.47 L1819.25 1151.47 L1819.77 1151.47 L1820.28 1151.47 L1820.8 1151.47 L1821.32 1151.47 L1821.84 1151.47 L1822.36 1151.47 L1822.88 1151.47 L1823.4 1151.47 L1823.92 1151.47 L1824.44 1151.47 L1824.96 1151.47 L1825.48 1151.47 L1826 1151.47 L1826.52 1151.47 L1827.04 1151.47 L1827.56 1151.47 L1828.08 1151.47 L1828.6 1151.47 L1829.12 1151.47 L1829.64 1151.47 L1830.16 1151.47 L1830.68 1151.47 L1831.2 1151.47 L1831.71 1151.47 L1832.23 1151.47 L1832.75 1151.47 L1833.27 1151.47 L1833.79 1151.47 L1834.31 1151.47 L1834.83 1151.47 L1835.35 1151.47 L1835.87 1151.47 L1836.39 1151.47 L1836.91 1151.47 L1837.43 1151.47 L1837.95 1151.47 L1838.47 1151.47 L1838.99 1151.47 L1839.51 1151.47 L1840.03 1151.47 L1840.55 1151.47 L1841.07 1151.47 L1841.59 1151.47 L1842.11 1151.47 L1842.63 1151.47 L1843.14 1151.47 L1843.66 1151.47 L1844.18 1151.47 L1844.7 1151.47 L1845.22 1151.47 L1845.74 1151.47 L1846.26 1151.47 L1846.78 1151.47 L1847.3 1151.47 L1847.82 1151.47 L1848.34 1151.47 L1848.86 1151.47 L1849.38 1151.47 L1849.9 1151.47 L1850.42 1151.47 L1850.94 1151.47 L1851.46 1151.47 L1851.98 1151.47 L1852.5 1151.47 L1853.02 1151.47 L1853.54 1151.47 L1854.06 1151.47 L1854.57 1151.47 L1855.09 1151.47 L1855.61 1151.47 L1856.13 1151.47 L1856.65 1151.47 L1857.17 1151.47 L1857.69 1151.47 L1858.21 1151.47 L1858.73 1151.47 L1859.25 1151.47 L1859.77 1151.47 L1860.29 1151.47 L1860.81 1151.47 L1861.33 1151.47 L1861.85 1151.47 L1862.37 1151.47 L1862.89 1151.47 L1863.41 1151.47 L1863.93 1151.47 L1864.45 1151.47 L1864.97 1151.47 L1865.48 1151.47 L1866 1151.47 L1866.52 1151.47 L1867.04 1151.47 L1867.56 1151.47 L1868.08 1151.47 L1868.6 1151.47 L1869.12 1151.47 L1869.64 1151.47 L1870.16 1151.47 L1870.68 1151.47 L1871.2 1151.47 L1871.72 1151.47 L1872.24 1151.47 L1872.76 1151.47 L1873.28 1151.47 L1873.8 1151.47 L1874.32 1151.47 L1874.84 1151.47 L1875.36 1151.47 L1875.88 1151.47 L1876.4 1151.47 L1876.91 1151.47 L1877.43 1151.47 L1877.95 1151.47 L1878.47 1151.47 L1878.99 1151.47 L1879.51 1151.47 L1880.03 1151.47 L1880.55 1151.47 L1881.07 1151.47 L1881.59 1151.47 L1882.11 1151.47 L1882.63 1151.47 L1883.15 1151.47 L1883.67 1151.47 L1884.19 1151.47 L1884.71 1151.47 L1885.23 1151.47 L1885.75 1151.47 L1886.27 1151.47 L1886.79 1151.47 L1887.31 1151.47 L1887.83 1151.47 L1888.34 1151.47 L1888.86 1151.47 L1889.38 1151.47 L1889.9 1151.47 L1890.42 1151.47 L1890.94 1151.47 L1891.46 1151.47 L1891.98 1151.47 L1892.5 1151.47 L1893.02 1151.47 L1893.54 1151.47 L1894.06 1151.47 L1894.58 1151.47 L1895.1 1151.47 L1895.62 1151.47 L1896.14 1151.47 L1896.66 1151.47 L1897.18 1151.47 L1897.7 1151.47 L1898.22 1151.47 L1898.74 1151.47 L1899.26 1151.47 L1899.77 1151.47 L1900.29 1151.47 L1900.81 1151.47 L1901.33 1151.47 L1901.85 1151.47 L1902.37 1151.47 L1902.89 1151.47 L1903.41 1151.47 L1903.93 1151.47 L1904.45 1151.47 L1904.97 1151.47 L1905.49 1151.47 L1906.01 1151.47 L1906.53 1151.47 L1907.05 1151.47 L1907.57 1151.47 L1908.09 1151.47 L1908.61 1151.47 L1909.13 1151.47 L1909.65 1151.47 L1910.17 1151.47 L1910.69 1151.47 L1911.2 1151.47 L1911.72 1151.47 L1912.24 1151.47 L1912.76 1151.47 L1913.28 1151.47 L1913.8 1151.47 L1914.32 1151.47 L1914.84 1151.47 L1915.36 1151.47 L1915.88 1151.47 L1916.4 1151.47 L1916.92 1151.47 L1917.44 1151.47 L1917.96 1151.47 L1918.48 1151.47 L1919 1151.47 L1919.52 1151.47 L1920.04 1151.47 L1920.56 1151.47 L1921.08 1151.47 L1921.6 1151.47 L1922.11 1151.47 L1922.63 1151.47 L1923.15 1151.47 L1923.67 1151.47 L1924.19 1151.47 L1924.71 1151.47 L1925.23 1151.47 L1925.75 1151.47 L1926.27 1151.47 L1926.79 1151.47 L1927.31 1151.47 L1927.83 1151.47 L1928.35 1151.47 L1928.87 1151.47 L1929.39 1151.47 L1929.91 1151.47 L1930.43 1151.47 L1930.95 1151.47 L1931.47 1151.47 L1931.99 1151.47 L1932.51 1151.47 L1933.03 1151.47 L1933.54 1151.47 L1934.06 1151.47 L1934.58 1151.47 L1935.1 1151.47 L1935.62 1151.47 L1936.14 1151.47 L1936.66 1151.47 L1937.18 1151.47 L1937.7 1151.47 L1938.22 1151.47 L1938.74 1151.47 L1939.26 1151.47 L1939.78 1151.47 L1940.3 1151.47 L1940.82 1151.47 L1941.34 1151.47 L1941.86 1151.47 L1942.38 1151.47 L1942.9 1151.47 L1943.42 1151.47 L1943.94 1151.47 L1944.46 1151.47 L1944.97 1151.47 L1945.49 1151.47 L1946.01 1151.47 L1946.53 1151.47 L1947.05 1151.47 L1947.57 1151.47 L1948.09 1151.47 L1948.61 1151.47 L1949.13 1151.47 L1949.65 1151.47 L1950.17 1151.47 L1950.69 1151.47 L1951.21 1151.47 L1951.73 1151.47 L1952.25 1151.47 L1952.77 1151.47 L1953.29 1151.47 L1953.81 1151.47 L1954.33 1151.47 L1954.85 1151.47 L1955.37 1151.47 L1955.89 1151.47 L1956.4 1151.47 L1956.92 1151.47 L1957.44 1151.47 L1957.96 1151.47 L1958.48 1151.47 L1959 1151.47 L1959.52 1151.47 L1960.04 1151.47 L1960.56 1151.47 L1961.08 1151.47 L1961.6 1151.47 L1962.12 1151.47 L1962.64 1151.47 L1963.16 1151.47 L1963.68 1151.47 L1964.2 1151.47 L1964.72 1151.47 L1965.24 1151.47 L1965.76 1151.47 L1966.28 1151.47 L1966.8 1151.47 L1967.32 1151.47 L1967.83 1151.47 L1968.35 1151.47 L1968.87 1151.47 L1969.39 1151.47 L1969.91 1151.47 L1970.43 1151.47 L1970.95 1151.47 L1971.47 1151.47 L1971.99 1151.47 L1972.51 1151.47 L1973.03 1151.47 L1973.55 1151.47 L1974.07 1151.47 L1974.59 1151.47 L1975.11 1151.47 L1975.63 1151.47 L1976.15 1151.47 L1976.67 1151.47 L1977.19 1151.47 L1977.71 1151.47 L1978.23 1151.47 L1978.74 1151.47 L1979.26 1151.47 L1979.78 1151.47 L1980.3 1151.47 L1980.82 1151.47 L1981.34 1151.47 L1981.86 1151.47 L1982.38 1151.47 L1982.9 1151.47 L1983.42 1151.47 L1983.94 1151.47 L1984.46 1151.47 L1984.98 1151.47 L1985.5 1151.47 L1986.02 1151.47 L1986.54 1151.47 L1987.06 1151.47 L1987.58 1151.47 L1988.1 1151.47 L1988.62 1151.47 L1989.14 1151.47 L1989.66 1151.47 L1990.17 1151.47 L1990.69 1151.47 L1991.21 1151.47 L1991.73 1151.47 L1992.25 1151.47 L1992.77 1151.47 L1993.29 1151.47 L1993.81 1151.47 L1994.33 1151.47 L1994.85 1151.47 L1995.37 1151.47 L1995.89 1151.47 L1996.41 1151.47 L1996.93 1151.47 L1997.45 1151.47 L1997.97 1151.47 L1998.49 1151.47 L1999.01 1151.47 L1999.53 1151.47 L2000.05 1151.47 L2000.57 1151.47 L2001.09 1151.47 L2001.6 1151.47 L2002.12 1151.47 L2002.64 1151.47 L2003.16 1151.47 L2003.68 1151.47 L2004.2 1151.47 L2004.72 1151.47 L2005.24 1151.47 L2005.76 1151.47 L2006.28 1151.47 L2006.8 1151.47 L2006.8 1150.78 L2006.28 1150.78 L2005.76 1150.78 L2005.24 1150.78 L2004.72 1150.78 L2004.2 1150.78 L2003.68 1150.78 L2003.16 1150.78 L2002.64 1150.78 L2002.12 1150.78 L2001.6 1150.78 L2001.09 1150.78 L2000.57 1150.78 L2000.05 1150.78 L1999.53 1150.78 L1999.01 1150.78 L1998.49 1150.78 L1997.97 1150.78 L1997.45 1150.78 L1996.93 1150.78 L1996.41 1150.78 L1995.89 1150.78 L1995.37 1150.78 L1994.85 1150.78 L1994.33 1150.78 L1993.81 1150.78 L1993.29 1150.78 L1992.77 1150.78 L1992.25 1150.78 L1991.73 1150.78 L1991.21 1150.78 L1990.69 1150.78 L1990.17 1150.78 L1989.66 1150.78 L1989.14 1150.78 L1988.62 1150.78 L1988.1 1150.78 L1987.58 1150.78 L1987.06 1150.78 L1986.54 1150.78 L1986.02 1150.78 L1985.5 1150.78 L1984.98 1150.78 L1984.46 1150.78 L1983.94 1150.78 L1983.42 1150.78 L1982.9 1150.78 L1982.38 1150.78 L1981.86 1150.78 L1981.34 1150.78 L1980.82 1150.78 L1980.3 1150.78 L1979.78 1150.78 L1979.26 1150.78 L1978.74 1150.78 L1978.23 1150.78 L1977.71 1150.78 L1977.19 1150.78 L1976.67 1150.78 L1976.15 1150.78 L1975.63 1150.78 L1975.11 1150.78 L1974.59 1150.78 L1974.07 1150.78 L1973.55 1150.78 L1973.03 1150.78 L1972.51 1150.78 L1971.99 1150.78 L1971.47 1150.78 L1970.95 1150.78 L1970.43 1150.78 L1969.91 1150.78 L1969.39 1150.78 L1968.87 1150.78 L1968.35 1150.78 L1967.83 1150.78 L1967.32 1150.78 L1966.8 1150.78 L1966.28 1150.78 L1965.76 1150.78 L1965.24 1150.78 L1964.72 1150.78 L1964.2 1150.78 L1963.68 1150.78 L1963.16 1150.78 L1962.64 1150.78 L1962.12 1150.78 L1961.6 1150.78 L1961.08 1150.78 L1960.56 1150.78 L1960.04 1150.78 L1959.52 1150.78 L1959 1150.78 L1958.48 1150.78 L1957.96 1150.78 L1957.44 1150.78 L1956.92 1150.78 L1956.4 1150.78 L1955.89 1150.78 L1955.37 1150.78 L1954.85 1150.78 L1954.33 1150.78 L1953.81 1150.78 L1953.29 1150.78 L1952.77 1150.78 L1952.25 1150.78 L1951.73 1150.78 L1951.21 1150.78 L1950.69 1150.78 L1950.17 1150.78 L1949.65 1150.78 L1949.13 1150.78 L1948.61 1150.78 L1948.09 1150.78 L1947.57 1150.78 L1947.05 1150.78 L1946.53 1150.78 L1946.01 1150.78 L1945.49 1150.78 L1944.97 1150.78 L1944.46 1150.78 L1943.94 1150.78 L1943.42 1150.78 L1942.9 1150.78 L1942.38 1150.78 L1941.86 1150.78 L1941.34 1150.78 L1940.82 1150.78 L1940.3 1150.78 L1939.78 1150.78 L1939.26 1150.78 L1938.74 1150.78 L1938.22 1150.78 L1937.7 1150.78 L1937.18 1150.78 L1936.66 1150.78 L1936.14 1150.78 L1935.62 1150.78 L1935.1 1150.78 L1934.58 1150.78 L1934.06 1150.78 L1933.54 1150.78 L1933.03 1150.78 L1932.51 1150.78 L1931.99 1150.78 L1931.47 1150.78 L1930.95 1150.78 L1930.43 1150.78 L1929.91 1150.78 L1929.39 1150.78 L1928.87 1150.78 L1928.35 1150.78 L1927.83 1150.78 L1927.31 1150.78 L1926.79 1150.78 L1926.27 1150.78 L1925.75 1150.78 L1925.23 1150.78 L1924.71 1150.78 L1924.19 1150.78 L1923.67 1150.78 L1923.15 1150.78 L1922.63 1150.78 L1922.11 1150.78 L1921.6 1150.78 L1921.08 1150.78 L1920.56 1150.78 L1920.04 1150.78 L1919.52 1150.78 L1919 1150.78 L1918.48 1150.78 L1917.96 1150.78 L1917.44 1150.78 L1916.92 1150.78 L1916.4 1150.78 L1915.88 1150.78 L1915.36 1150.78 L1914.84 1150.78 L1914.32 1150.78 L1913.8 1150.78 L1913.28 1150.78 L1912.76 1150.78 L1912.24 1150.78 L1911.72 1150.78 L1911.2 1150.78 L1910.69 1150.78 L1910.17 1150.78 L1909.65 1150.78 L1909.13 1150.78 L1908.61 1150.78 L1908.09 1150.78 L1907.57 1150.78 L1907.05 1150.78 L1906.53 1150.78 L1906.01 1150.78 L1905.49 1150.78 L1904.97 1150.78 L1904.45 1150.78 L1903.93 1150.78 L1903.41 1150.78 L1902.89 1150.78 L1902.37 1150.78 L1901.85 1150.78 L1901.33 1150.78 L1900.81 1150.78 L1900.29 1150.78 L1899.77 1150.78 L1899.26 1150.78 L1898.74 1150.78 L1898.22 1150.78 L1897.7 1150.78 L1897.18 1150.78 L1896.66 1150.78 L1896.14 1150.78 L1895.62 1150.78 L1895.1 1150.78 L1894.58 1150.78 L1894.06 1150.78 L1893.54 1150.78 L1893.02 1150.78 L1892.5 1150.78 L1891.98 1150.78 L1891.46 1150.78 L1890.94 1150.78 L1890.42 1150.78 L1889.9 1150.78 L1889.38 1150.78 L1888.86 1150.78 L1888.34 1150.78 L1887.83 1150.78 L1887.31 1150.78 L1886.79 1150.78 L1886.27 1150.78 L1885.75 1150.78 L1885.23 1150.78 L1884.71 1150.78 L1884.19 1150.78 L1883.67 1150.78 L1883.15 1150.78 L1882.63 1150.78 L1882.11 1150.78 L1881.59 1150.78 L1881.07 1150.78 L1880.55 1150.78 L1880.03 1150.78 L1879.51 1150.78 L1878.99 1150.78 L1878.47 1150.78 L1877.95 1150.78 L1877.43 1150.78 L1876.91 1150.78 L1876.4 1150.78 L1875.88 1150.78 L1875.36 1150.78 L1874.84 1150.78 L1874.32 1150.78 L1873.8 1150.78 L1873.28 1150.78 L1872.76 1150.78 L1872.24 1150.78 L1871.72 1150.78 L1871.2 1150.78 L1870.68 1150.78 L1870.16 1150.78 L1869.64 1150.78 L1869.12 1150.78 L1868.6 1150.78 L1868.08 1150.78 L1867.56 1150.78 L1867.04 1150.78 L1866.52 1150.78 L1866 1150.78 L1865.48 1150.78 L1864.97 1150.78 L1864.45 1150.78 L1863.93 1150.78 L1863.41 1150.78 L1862.89 1150.78 L1862.37 1150.78 L1861.85 1150.78 L1861.33 1150.78 L1860.81 1150.78 L1860.29 1150.78 L1859.77 1150.78 L1859.25 1150.78 L1858.73 1150.78 L1858.21 1150.78 L1857.69 1150.78 L1857.17 1150.78 L1856.65 1150.78 L1856.13 1150.78 L1855.61 1150.78 L1855.09 1150.78 L1854.57 1150.78 L1854.06 1150.78 L1853.54 1150.78 L1853.02 1150.78 L1852.5 1150.78 L1851.98 1150.78 L1851.46 1150.78 L1850.94 1150.78 L1850.42 1150.78 L1849.9 1150.78 L1849.38 1150.78 L1848.86 1150.78 L1848.34 1150.78 L1847.82 1150.78 L1847.3 1150.78 L1846.78 1150.78 L1846.26 1150.78 L1845.74 1150.78 L1845.22 1150.78 L1844.7 1150.78 L1844.18 1150.78 L1843.66 1150.78 L1843.14 1150.78 L1842.63 1150.78 L1842.11 1150.78 L1841.59 1150.78 L1841.07 1150.78 L1840.55 1150.78 L1840.03 1150.78 L1839.51 1150.78 L1838.99 1150.78 L1838.47 1150.78 L1837.95 1150.78 L1837.43 1150.78 L1836.91 1150.78 L1836.39 1150.78 L1835.87 1150.78 L1835.35 1150.78 L1834.83 1150.78 L1834.31 1150.78 L1833.79 1150.78 L1833.27 1150.78 L1832.75 1150.78 L1832.23 1150.78 L1831.71 1150.78 L1831.2 1150.78 L1830.68 1150.78 L1830.16 1150.78 L1829.64 1150.78 L1829.12 1150.78 L1828.6 1150.78 L1828.08 1150.78 L1827.56 1150.78 L1827.04 1150.78 L1826.52 1150.78 L1826 1150.78 L1825.48 1150.78 L1824.96 1150.78 L1824.44 1150.78 L1823.92 1150.78 L1823.4 1150.78 L1822.88 1150.78 L1822.36 1150.78 L1821.84 1150.78 L1821.32 1150.78 L1820.8 1150.78 L1820.28 1150.78 L1819.77 1150.78 L1819.25 1150.78 L1818.73 1150.78 L1818.21 1150.78 L1817.69 1150.78 L1817.17 1150.78 L1816.65 1150.78 L1816.13 1150.78 L1815.61 1150.78 L1815.09 1150.78 L1814.57 1150.78 L1814.05 1150.78 L1813.53 1150.78 L1813.01 1150.78 L1812.49 1150.78 L1811.97 1150.78 L1811.45 1150.78 L1810.93 1150.78 L1810.41 1150.78 L1809.89 1150.78 L1809.37 1150.78 L1808.85 1150.78 L1808.34 1150.78 L1807.82 1150.78 L1807.3 1150.78 L1806.78 1150.78 L1806.26 1150.78 L1805.74 1150.78 L1805.22 1150.78 L1804.7 1150.78 L1804.18 1150.78 L1803.66 1150.78 L1803.14 1150.78 L1802.62 1150.78 L1802.1 1150.78 L1801.58 1150.78 L1801.06 1150.78 L1800.54 1150.78 L1800.02 1150.78 L1799.5 1150.78 L1798.98 1150.78 L1798.46 1150.78 L1797.94 1150.78 L1797.43 1150.78 L1796.91 1150.78 L1796.39 1150.78 L1795.87 1150.78 L1795.35 1150.78 L1794.83 1150.78 L1794.31 1150.78 L1793.79 1150.78 L1793.27 1150.78 L1792.75 1150.78 L1792.23 1150.78 L1791.71 1150.78 L1791.19 1150.78 L1790.67 1150.78 L1790.15 1150.78 L1789.63 1150.78 L1789.11 1150.78 L1788.59 1150.78 L1788.07 1150.78 L1787.55 1150.78 L1787.03 1150.78 L1786.51 1150.78 L1786 1150.78 L1785.48 1150.78 L1784.96 1150.78 L1784.44 1150.78 L1783.92 1150.78 L1783.4 1150.78 L1782.88 1150.78 L1782.36 1150.78 L1781.84 1150.78 L1781.32 1150.78 L1780.8 1150.78 L1780.28 1150.78 L1779.76 1150.78 L1779.24 1150.78 L1778.72 1150.78 L1778.2 1150.78 L1777.68 1150.78 L1777.16 1150.78 L1776.64 1150.78 L1776.12 1150.78 L1775.6 1150.78 L1775.08 1150.78 L1774.57 1150.78 L1774.05 1150.78 L1773.53 1150.78 L1773.01 1150.78 L1772.49 1150.78 L1771.97 1150.78 L1771.45 1150.78 L1770.93 1150.78 L1770.41 1150.78 L1769.89 1150.78 L1769.37 1150.78 L1768.85 1150.78 L1768.33 1150.78 L1767.81 1150.78 L1767.29 1150.78 L1766.77 1150.78 L1766.25 1150.78 L1765.73 1150.78 L1765.21 1150.78 L1764.69 1150.78 L1764.17 1150.78 L1763.65 1150.78 L1763.14 1150.78 L1762.62 1150.78 L1762.1 1150.78 L1761.58 1150.78 L1761.06 1150.78 L1760.54 1150.78 L1760.02 1150.78 L1759.5 1150.78 L1758.98 1150.78 L1758.46 1150.78 L1757.94 1150.78 L1757.42 1150.78 L1756.9 1150.78 L1756.38 1150.78 L1755.86 1150.78 L1755.34 1150.78 L1754.82 1150.78 L1754.3 1150.78 L1753.78 1150.78 L1753.26 1150.78 L1752.74 1150.78 L1752.22 1150.78 L1751.71 1150.78 L1751.19 1150.78 L1750.67 1150.78 L1750.15 1150.78 L1749.63 1150.78 L1749.11 1150.78 L1748.59 1150.78 L1748.07 1150.78 L1747.55 1150.78 L1747.03 1150.78 L1746.51 1150.78 L1745.99 1150.78 L1745.47 1150.78 L1744.95 1150.78 L1744.43 1150.78 L1743.91 1150.78 L1743.39 1150.78 L1742.87 1150.78 L1742.35 1150.78 L1741.83 1150.78 L1741.31 1150.78 L1740.8 1150.78 L1740.28 1150.78 L1739.76 1150.78 L1739.24 1150.78 L1738.72 1150.78 L1738.2 1150.78 L1737.68 1150.78 L1737.16 1150.78 L1736.64 1150.78 L1736.12 1150.78 L1735.6 1150.78 L1735.08 1150.78 L1734.56 1150.78 L1734.04 1150.78 L1733.52 1150.78 L1733 1150.78 L1732.48 1150.78 L1731.96 1150.78 L1731.44 1150.78 L1730.92 1150.78 L1730.4 1150.78 L1729.88 1150.78 L1729.37 1150.78 L1728.85 1150.78 L1728.33 1150.78 L1727.81 1150.78 L1727.29 1150.78 L1726.77 1150.78 L1726.25 1150.78 L1725.73 1150.78 L1725.21 1150.78 L1724.69 1150.78 L1724.17 1150.78 L1723.65 1150.78 L1723.13 1150.78 L1722.61 1150.78 L1722.09 1150.78 L1721.57 1150.78 L1721.05 1150.78 L1720.53 1150.78 L1720.01 1150.78 L1719.49 1150.78 L1718.97 1150.78 L1718.45 1150.78 L1717.94 1150.78 L1717.42 1150.78 L1716.9 1150.78 L1716.38 1150.78 L1715.86 1150.78 L1715.34 1150.78 L1714.82 1150.78 L1714.3 1150.78 L1713.78 1150.78 L1713.26 1150.78 L1712.74 1150.78 L1712.22 1150.78 L1711.7 1150.78 L1711.18 1150.78 L1710.66 1150.78 L1710.14 1150.78 L1709.62 1150.78 L1709.1 1150.78 L1708.58 1150.78 L1708.06 1150.78 L1707.54 1150.78 L1707.02 1150.78 L1706.51 1150.78 L1705.99 1150.78 L1705.47 1150.78 L1704.95 1150.78 L1704.43 1150.78 L1703.91 1150.78 L1703.39 1150.78 L1702.87 1150.78 L1702.35 1150.78 L1701.83 1150.78 L1701.31 1150.78 L1700.79 1150.78 L1700.27 1150.78 L1699.75 1150.78 L1699.23 1150.78 L1698.71 1150.78 L1698.19 1150.78 L1697.67 1150.78 L1697.15 1150.78 L1696.63 1150.78 L1696.11 1150.78 L1695.59 1150.78 L1695.08 1150.78 L1694.56 1150.78 L1694.04 1150.78 L1693.52 1150.78 L1693 1150.78 L1692.48 1150.78 L1691.96 1150.78 L1691.44 1150.78 L1690.92 1150.78 L1690.4 1150.78 L1689.88 1150.78 L1689.36 1150.78 L1688.84 1150.78 L1688.32 1150.78 L1687.8 1150.78 L1687.28 1150.78 L1686.76 1150.78 L1686.24 1150.78 L1685.72 1150.78 L1685.2 1150.78 L1684.68 1150.78 L1684.17 1150.78 L1683.65 1150.78 L1683.13 1150.78 L1682.61 1150.78 L1682.09 1150.78 L1681.57 1150.78 L1681.05 1150.78 L1680.53 1150.78 L1680.01 1150.78 L1679.49 1150.78 L1678.97 1150.78 L1678.45 1150.78 L1677.93 1150.78 L1677.41 1150.78 L1676.89 1150.78 L1676.37 1150.78 L1675.85 1150.78 L1675.33 1150.78 L1674.81 1150.78 L1674.29 1150.78 L1673.77 1150.78 L1673.25 1150.78 L1672.74 1150.78 L1672.22 1150.78 L1671.7 1150.78 L1671.18 1150.78 L1670.66 1150.78 L1670.14 1150.78 L1669.62 1150.78 L1669.1 1150.78 L1668.58 1150.78 L1668.06 1150.78 L1667.54 1150.78 L1667.02 1150.78 L1666.5 1150.78 L1665.98 1150.78 L1665.46 1150.78 L1664.94 1150.78 L1664.42 1150.78 L1663.9 1150.78 L1663.38 1150.78 L1662.86 1150.78 L1662.34 1150.78 L1661.82 1150.78 L1661.31 1150.78 L1660.79 1150.78 L1660.27 1150.78 L1659.75 1150.78 L1659.23 1150.78 L1658.71 1150.78 L1658.19 1150.78 L1657.67 1150.78 L1657.15 1150.78 L1656.63 1150.78 L1656.11 1150.78 L1655.59 1150.78 L1655.07 1150.78 L1654.55 1150.78 L1654.03 1150.78 L1653.51 1150.78 L1652.99 1150.78 L1652.47 1150.78 L1651.95 1150.78 L1651.43 1150.78 L1650.91 1150.78 L1650.39 1150.78 L1649.88 1150.78 L1649.36 1150.78 L1648.84 1150.78 L1648.32 1150.78 L1647.8 1150.78 L1647.28 1150.78 L1646.76 1150.78 L1646.24 1150.78 L1645.72 1150.78 L1645.2 1150.78 L1644.68 1150.78 L1644.16 1150.78 L1643.64 1150.78 L1643.12 1150.78 L1642.6 1150.78 L1642.08 1150.78 L1641.56 1150.78 L1641.04 1150.78 L1640.52 1150.78 L1640 1150.78 L1639.48 1150.78 L1638.96 1150.78 L1638.45 1150.78 L1637.93 1150.78 L1637.41 1150.78 L1636.89 1150.78 L1636.37 1150.78 L1635.85 1150.78 L1635.33 1150.78 L1634.81 1150.78 L1634.29 1150.78 L1633.77 1150.78 L1633.25 1150.78 L1632.73 1150.78 L1632.21 1150.78 L1631.69 1150.78 L1631.17 1150.78 L1630.65 1150.78 L1630.13 1150.78 L1629.61 1150.78 L1629.09 1150.78 L1628.57 1150.78 L1628.05 1150.78 L1627.54 1150.78 L1627.02 1150.78 L1626.5 1150.78 L1625.98 1150.78 L1625.46 1150.78 L1624.94 1150.78 L1624.42 1150.78 L1623.9 1150.78 L1623.38 1150.78 L1622.86 1150.78 L1622.34 1150.78 L1621.82 1150.78 L1621.3 1150.78 L1620.78 1150.78 L1620.26 1150.78 L1619.74 1150.78 L1619.22 1150.78 L1618.7 1150.78 L1618.18 1150.78 L1617.66 1150.78 L1617.14 1150.78 L1616.62 1150.78 L1616.11 1150.78 L1615.59 1150.78 L1615.07 1150.78 L1614.55 1150.78 L1614.03 1150.78 L1613.51 1150.78 L1612.99 1150.78 L1612.47 1150.78 L1611.95 1150.78 L1611.43 1150.78 L1610.91 1150.78 L1610.39 1150.78 L1609.87 1150.78 L1609.35 1150.78 L1608.83 1150.78 L1608.31 1150.78 L1607.79 1150.78 L1607.27 1150.78 L1606.75 1150.78 L1606.23 1150.78 L1605.71 1150.78 L1605.19 1150.78 L1604.68 1150.78 L1604.16 1150.78 L1603.64 1150.78 L1603.12 1150.78 L1602.6 1150.78 L1602.08 1150.78 L1601.56 1150.78 L1601.04 1150.78 L1600.52 1150.78 L1600 1150.78 L1599.48 1150.78 L1598.96 1150.78 L1598.44 1150.78 L1597.92 1150.78 L1597.4 1150.78 L1596.88 1150.78 L1596.36 1150.78 L1595.84 1150.78 L1595.32 1150.78 L1594.8 1150.78 L1594.28 1150.78 L1593.76 1150.78 L1593.25 1150.78 L1592.73 1150.78 L1592.21 1150.78 L1591.69 1150.78 L1591.17 1150.78 L1590.65 1150.78 L1590.13 1150.78 L1589.61 1150.78 L1589.09 1150.78 L1588.57 1150.78 L1588.05 1150.78 L1587.53 1150.78 L1587.01 1150.78 L1586.49 1150.78 L1585.97 1150.78 L1585.45 1150.78 L1584.93 1150.78 L1584.41 1150.78 L1583.89 1150.78 L1583.37 1150.78 L1582.85 1150.78 L1582.33 1150.78 L1581.82 1150.78 L1581.3 1150.78 L1580.78 1150.78 L1580.26 1150.78 L1579.74 1150.78 L1579.22 1150.78 L1578.7 1150.78 L1578.18 1150.78 L1577.66 1150.78 L1577.14 1150.78 L1576.62 1150.78 L1576.1 1150.78 L1575.58 1150.78 L1575.06 1150.78 L1574.54 1150.78 L1574.02 1150.78 L1573.5 1150.78 L1572.98 1150.78 L1572.46 1150.78 L1571.94 1150.78 L1571.42 1150.78 L1570.91 1150.78 L1570.39 1150.78 L1569.87 1150.78 L1569.35 1150.78 L1568.83 1150.78 L1568.31 1150.78 L1567.79 1150.78 L1567.27 1150.78 L1566.75 1150.78 L1566.23 1150.78 L1565.71 1150.78 L1565.19 1150.78 L1564.67 1150.78 L1564.15 1150.78 L1563.63 1150.78 L1563.11 1150.78 L1562.59 1150.78 L1562.07 1150.78 L1561.55 1150.78 L1561.03 1150.78 L1560.51 1150.78 L1559.99 1150.78 L1559.48 1150.78 L1558.96 1150.78 L1558.44 1150.78 L1557.92 1150.78 L1557.4 1150.78 L1556.88 1150.78 L1556.36 1150.78 L1555.84 1150.78 L1555.32 1150.78 L1554.8 1150.78 L1554.28 1150.78 L1553.76 1150.78 L1553.24 1150.78 L1552.72 1150.78 L1552.2 1150.78 L1551.68 1150.78 L1551.16 1150.78 L1550.64 1150.78 L1550.12 1150.78 L1549.6 1150.78 L1549.08 1150.78 L1548.56 1150.78 L1548.05 1150.78 L1547.53 1150.78 L1547.01 1150.78 L1546.49 1150.78 L1545.97 1150.78 L1545.45 1150.78 L1544.93 1150.78 L1544.41 1150.78 L1543.89 1150.78 L1543.37 1150.78 L1542.85 1150.78 L1542.33 1150.78 L1541.81 1150.78 L1541.29 1150.78 L1540.77 1150.78 L1540.25 1150.78 L1539.73 1150.78 L1539.21 1150.78 L1538.69 1150.78 L1538.17 1150.78 L1537.65 1150.78 L1537.13 1150.78 L1536.62 1150.78 L1536.1 1150.78 L1535.58 1150.78 L1535.06 1150.78 L1534.54 1150.78 L1534.02 1150.78 L1533.5 1150.78 L1532.98 1150.78 L1532.46 1150.78 L1531.94 1150.78 L1531.42 1150.78 L1530.9 1150.78 L1530.38 1150.78 L1529.86 1150.78 L1529.34 1150.78 L1528.82 1150.78 L1528.3 1150.78 L1527.78 1150.78 L1527.26 1150.78 L1526.74 1150.78 L1526.22 1150.78 L1525.7 1150.78 L1525.19 1150.78 L1524.67 1150.78 L1524.15 1150.78 L1523.63 1150.78 L1523.11 1150.78 L1522.59 1150.78 L1522.07 1150.78 L1521.55 1150.78 L1521.03 1150.78 L1520.51 1150.78 L1519.99 1150.78 L1519.47 1150.78 L1518.95 1150.78 L1518.43 1150.78 L1517.91 1150.78 L1517.39 1150.78 L1516.87 1150.78 L1516.35 1150.78 L1515.83 1150.78 L1515.31 1150.78 L1514.79 1150.78 L1514.28 1150.78 L1513.76 1150.78 L1513.24 1150.78 L1512.72 1150.78 L1512.2 1150.78 L1511.68 1150.78 L1511.16 1150.78 L1510.64 1150.78 L1510.12 1150.78 L1509.6 1150.78 L1509.08 1150.78 L1508.56 1150.78 L1508.04 1150.78 L1507.52 1150.78 L1507 1150.78 L1506.48 1150.78 L1505.96 1150.78 L1505.44 1150.78 L1504.92 1150.78 L1504.4 1150.78 L1503.88 1150.78 L1503.36 1150.78 L1502.85 1150.78 L1502.33 1150.78 L1501.81 1150.78 L1501.29 1150.78 L1500.77 1150.78 L1500.25 1150.78 L1499.73 1150.78 L1499.21 1150.78 L1498.69 1150.78 L1498.17 1150.78 L1497.65 1150.78 L1497.13 1150.78 L1496.61 1150.78 L1496.09 1150.78 L1495.57 1150.78 L1495.05 1150.78 L1494.53 1150.78 L1494.01 1150.78 L1493.49 1150.78 L1492.97 1150.78 L1492.45 1150.78 L1491.93 1150.78 L1491.42 1150.78 L1490.9 1150.78 L1490.38 1150.78 L1489.86 1150.78 L1489.34 1150.78 L1488.82 1150.78 L1488.3 1150.78 L1487.78 1150.78 L1487.26 1150.78 L1486.74 1150.78 L1486.22 1150.78 L1485.7 1150.78 L1485.18 1150.78 L1484.66 1150.78 L1484.14 1150.78 L1483.62 1150.78 L1483.1 1150.78 L1482.58 1150.78 L1482.06 1150.78 L1481.54 1150.78 L1481.02 1150.78 L1480.5 1150.78 L1479.99 1150.78 L1479.47 1150.78 L1478.95 1150.78 L1478.43 1150.78 L1477.91 1150.78 L1477.39 1150.78 L1476.87 1150.78 L1476.35 1150.78 L1475.83 1150.78 L1475.31 1150.78 L1474.79 1150.78 L1474.27 1150.78 L1473.75 1150.78 L1473.23 1150.78 L1472.71 1150.78 L1472.19 1150.78 L1471.67 1150.78 L1471.15 1150.78 L1470.63 1150.78 L1470.11 1150.78 L1469.59 1150.78 L1469.07 1150.78 L1468.56 1150.78 L1468.04 1150.78 L1467.52 1150.78 L1467 1150.78 L1466.48 1150.78 L1465.96 1150.78 L1465.44 1150.78 L1464.92 1150.78 L1464.4 1150.78 L1463.88 1150.78 L1463.36 1150.78 L1462.84 1150.78 L1462.32 1150.78 L1461.8 1150.78 L1461.28 1150.78 L1460.76 1150.78 L1460.24 1150.78 L1459.72 1150.78 L1459.2 1150.78 L1458.68 1150.78 L1458.16 1150.78 L1457.65 1150.78 L1457.13 1150.78 L1456.61 1150.78 L1456.09 1150.78 L1455.57 1150.78 L1455.05 1150.78 L1454.53 1150.78 L1454.01 1150.78 L1453.49 1150.78 L1452.97 1150.78 L1452.45 1150.78 L1451.93 1150.78 L1451.41 1150.78 L1450.89 1150.78 L1450.37 1150.78 L1449.85 1150.78 L1449.33 1150.78 L1448.81 1150.78 L1448.29 1150.78 L1447.77 1150.78 L1447.25 1150.78 L1446.73 1150.78 L1446.22 1150.78 L1445.7 1150.78 L1445.18 1150.78 L1444.66 1150.78 L1444.14 1150.78 L1443.62 1150.78 L1443.1 1150.78 L1442.58 1150.78 L1442.06 1150.78 L1441.54 1150.78 L1441.02 1150.78 L1440.5 1150.78 L1439.98 1150.78 L1439.46 1150.78 L1438.94 1150.78 L1438.42 1150.78 L1437.9 1150.78 L1437.38 1150.78 L1436.86 1150.78 L1436.34 1150.78 L1435.82 1150.78 L1435.3 1150.78 L1434.79 1150.78 L1434.27 1150.78 L1433.75 1150.78 L1433.23 1150.78 L1432.71 1150.78 L1432.19 1150.78 L1431.67 1150.78 L1431.15 1150.78 L1430.63 1150.78 L1430.11 1150.78 L1429.59 1150.78 L1429.07 1150.78 L1428.55 1150.78 L1428.03 1150.78 L1427.51 1150.78 L1426.99 1150.78 L1426.47 1150.78 L1425.95 1150.78 L1425.43 1150.78 L1424.91 1150.78 L1424.39 1150.78 L1423.87 1150.78 L1423.36 1150.78 L1422.84 1150.78 L1422.32 1150.78 L1421.8 1150.78 L1421.28 1150.78 L1420.76 1150.78 L1420.24 1150.78 L1419.72 1150.78 L1419.2 1150.78 L1418.68 1150.78 L1418.16 1150.78 L1417.64 1150.78 L1417.12 1150.78 L1416.6 1150.78 L1416.08 1150.78 L1415.56 1150.78 L1415.04 1150.78 L1414.52 1150.78 L1414 1150.78 L1413.48 1150.78 L1412.96 1150.78 L1412.44 1150.78 L1411.93 1150.78 L1411.41 1150.78 L1410.89 1150.78 L1410.37 1150.78 L1409.85 1150.78 L1409.33 1150.78 L1408.81 1150.78 L1408.29 1150.78 L1407.77 1150.78 L1407.25 1150.78 L1406.73 1150.78 L1406.21 1150.78 L1405.69 1150.78 L1405.17 1150.78 L1404.65 1150.78 L1404.13 1150.78 L1403.61 1150.78 L1403.09 1150.78 L1402.57 1150.78 L1402.05 1150.78 L1401.53 1150.78 L1401.02 1150.78 L1400.5 1150.78 L1399.98 1150.78 L1399.46 1150.78 L1398.94 1150.78 L1398.42 1150.78 L1397.9 1150.78 L1397.38 1150.78 L1396.86 1150.78 L1396.34 1150.78 L1395.82 1150.78 L1395.3 1150.78 L1394.78 1150.78 L1394.26 1150.78 L1393.74 1150.78 L1393.22 1150.78 L1392.7 1150.78 L1392.18 1150.78 L1391.66 1150.78 L1391.14 1150.78 L1390.62 1150.78 L1390.1 1150.78 L1389.59 1150.78 L1389.07 1150.78 L1388.55 1150.78 L1388.03 1150.78 L1387.51 1150.78 L1386.99 1150.78 L1386.47 1150.78 L1385.95 1150.78 L1385.43 1150.78 L1384.91 1150.78 L1384.39 1150.78 L1383.87 1150.78 L1383.35 1150.78 L1382.83 1150.78 L1382.31 1150.78 L1381.79 1150.78 L1381.27 1150.78 L1380.75 1150.78 L1380.23 1150.78 L1379.71 1150.78 L1379.19 1150.78 L1378.67 1150.78 L1378.16 1150.78 L1377.64 1150.78 L1377.12 1150.78 L1376.6 1150.78 L1376.08 1150.78 L1375.56 1150.78 L1375.04 1150.78 L1374.52 1150.78 L1374 1150.78 L1373.48 1150.78 L1372.96 1150.78 L1372.44 1150.78 L1371.92 1150.78 L1371.4 1150.78 L1370.88 1150.78 L1370.36 1150.78 L1369.84 1150.78 L1369.32 1150.78 L1368.8 1150.78 L1368.28 1150.78 L1367.76 1150.78 L1367.24 1150.78 L1366.73 1150.78 L1366.21 1150.78 L1365.69 1150.78 L1365.17 1150.78 L1364.65 1150.78 L1364.13 1150.78 L1363.61 1150.78 L1363.09 1150.78 L1362.57 1150.78 L1362.05 1150.78 L1361.53 1150.78 L1361.01 1150.78 L1360.49 1150.78 L1359.97 1150.78 L1359.45 1150.78 L1358.93 1150.78 L1358.41 1150.78 L1357.89 1150.78 L1357.37 1150.78 L1356.85 1150.78 L1356.33 1150.78 L1355.81 1150.78 L1355.3 1150.78 L1354.78 1150.78 L1354.26 1150.78 L1353.74 1150.78 L1353.22 1150.78 L1352.7 1150.78 L1352.18 1150.78 L1351.66 1150.78 L1351.14 1150.78 L1350.62 1150.78 L1350.1 1150.78 L1349.58 1150.78 L1349.06 1150.78 L1348.54 1150.78 L1348.02 1150.78 L1347.5 1150.78 L1346.98 1150.78 L1346.46 1150.78 L1345.94 1150.78 L1345.42 1150.78 L1344.9 1150.78 L1344.39 1150.78 L1343.87 1150.78 L1343.35 1150.78 L1342.83 1150.78 L1342.31 1150.78 L1341.79 1150.78 L1341.27 1150.78 L1340.75 1150.78 L1340.23 1150.78 L1339.71 1150.78 L1339.19 1150.78 L1338.67 1150.78 L1338.15 1150.78 L1337.63 1150.78 L1337.11 1150.78 L1336.59 1150.78 L1336.07 1150.78 L1335.55 1150.78 L1335.03 1150.78 L1334.51 1150.78 L1333.99 1150.78 L1333.47 1150.78 L1332.96 1150.78 L1332.44 1150.78 L1331.92 1150.78 L1331.4 1150.78 L1330.88 1150.78 L1330.36 1150.78 L1329.84 1150.78 L1329.32 1150.78 L1328.8 1150.78 L1328.28 1150.78 L1327.76 1150.78 L1327.24 1150.78 L1326.72 1150.78 L1326.2 1150.78 L1325.68 1150.78 L1325.16 1150.78 L1324.64 1150.78 L1324.12 1150.78 L1323.6 1150.78 L1323.08 1150.78 L1322.56 1150.78 L1322.04 1150.78 L1321.53 1150.78 L1321.01 1150.78 L1320.49 1150.78 L1319.97 1150.78 L1319.45 1150.78 L1318.93 1150.78 L1318.41 1150.78 L1317.89 1150.78 L1317.37 1150.78 L1316.85 1150.78 L1316.33 1150.78 L1315.81 1150.78 L1315.29 1150.78 L1314.77 1150.78 L1314.25 1150.78 L1313.73 1150.78 L1313.21 1150.78 L1312.69 1150.78 L1312.17 1150.78 L1311.65 1150.78 L1311.13 1150.78 L1310.61 1150.78 L1310.1 1150.78 L1309.58 1150.78 L1309.06 1150.78 L1308.54 1150.78 L1308.02 1150.78 L1307.5 1150.78 L1306.98 1150.78 L1306.46 1150.78 L1305.94 1150.78 L1305.42 1150.78 L1304.9 1150.78 L1304.38 1150.78 L1303.86 1150.78 L1303.34 1150.78 L1302.82 1150.78 L1302.3 1150.78 L1301.78 1150.78 L1301.26 1150.78 L1300.74 1150.78 L1300.22 1150.78 L1299.7 1150.78 L1299.18 1150.78 L1298.67 1150.78 L1298.15 1150.78 L1297.63 1150.78 L1297.11 1150.78 L1296.59 1150.78 L1296.07 1150.78 L1295.55 1150.78 L1295.03 1150.78 L1294.51 1150.78 L1293.99 1150.78 L1293.47 1150.78 L1292.95 1150.78 L1292.43 1150.78 L1291.91 1150.78 L1291.39 1150.78 L1290.87 1150.78 L1290.35 1150.78 L1289.83 1150.78 L1289.31 1150.78 L1288.79 1150.78 L1288.27 1150.78 L1287.76 1150.78 L1287.24 1150.78 L1286.72 1150.78 L1286.2 1150.78 L1285.68 1150.78 L1285.16 1150.78 L1284.64 1150.78 L1284.12 1150.78 L1283.6 1150.78 L1283.08 1150.78 L1282.56 1150.78 L1282.04 1150.78 L1281.52 1150.78 L1281 1150.78 L1280.48 1150.78 L1279.96 1150.78 L1279.44 1150.78 L1278.92 1150.78 L1278.4 1150.78 L1277.88 1150.78 L1277.36 1150.78 L1276.84 1150.78 L1276.33 1150.78 L1275.81 1150.78 L1275.29 1150.78 L1274.77 1150.78 L1274.25 1150.78 L1273.73 1150.78 L1273.21 1150.78 L1272.69 1150.78 L1272.17 1150.78 L1271.65 1150.78 L1271.13 1150.78 L1270.61 1150.78 L1270.09 1150.78 L1269.57 1150.78 L1269.05 1150.78 L1268.53 1150.78 L1268.01 1150.78 L1267.49 1150.78 L1266.97 1150.78 L1266.45 1150.78 L1265.93 1150.78 L1265.41 1150.78 L1264.9 1150.78 L1264.38 1150.78 L1263.86 1150.78 L1263.34 1150.78 L1262.82 1150.78 L1262.3 1150.78 L1261.78 1150.78 L1261.26 1150.78 L1260.74 1150.78 L1260.22 1150.78 L1259.7 1150.78 L1259.18 1150.78 L1258.66 1150.78 L1258.14 1150.78 L1257.62 1150.78 L1257.1 1150.78 L1256.58 1150.78 L1256.06 1150.78 L1255.54 1150.78 L1255.02 1150.78 L1254.5 1150.78 L1253.98 1150.78 L1253.47 1150.78 L1252.95 1150.78 L1252.43 1150.78 L1251.91 1150.78 L1251.39 1150.78 L1250.87 1150.78 L1250.35 1150.78 L1249.83 1150.78 L1249.31 1150.78 L1248.79 1150.78 L1248.27 1150.78 L1247.75 1150.78 L1247.23 1150.78 L1246.71 1150.78 L1246.19 1150.78 L1245.67 1150.78 L1245.15 1150.78 L1244.63 1150.78 L1244.11 1150.78 L1243.59 1150.78 L1243.07 1150.78 L1242.55 1150.78 L1242.04 1150.78 L1241.52 1150.78 L1241 1150.78 L1240.48 1150.78 L1239.96 1150.78 L1239.44 1150.78 L1238.92 1150.78 L1238.4 1150.78 L1237.88 1150.78 L1237.36 1150.78 L1236.84 1150.78 L1236.32 1150.78 L1235.8 1150.78 L1235.28 1150.78 L1234.76 1150.78 L1234.24 1150.78 L1233.72 1150.78 L1233.2 1150.78 L1232.68 1150.78 L1232.16 1150.78 L1231.64 1150.78 L1231.13 1150.78 L1230.61 1150.78 L1230.09 1150.78 L1229.57 1150.78 L1229.05 1150.78 L1228.53 1150.78 L1228.01 1150.78 L1227.49 1150.78 L1226.97 1150.78 L1226.45 1150.78 L1225.93 1150.78 L1225.41 1150.78 L1224.89 1150.78 L1224.37 1150.78 L1223.85 1150.78 L1223.33 1150.78 L1222.81 1150.78 L1222.29 1150.78 L1221.77 1150.78 L1221.25 1150.78 L1220.73 1150.78 L1220.21 1150.78 L1219.7 1150.78 L1219.18 1150.78 L1218.66 1150.78 L1218.14 1150.78 L1217.62 1150.78 L1217.1 1150.78 L1216.58 1150.78 L1216.06 1150.78 L1215.54 1150.78 L1215.02 1150.78 L1214.5 1150.78 L1213.98 1150.78 L1213.46 1150.78 L1212.94 1150.78 L1212.42 1150.78 L1211.9 1150.78 L1211.38 1150.78 L1210.86 1150.78 L1210.34 1150.78 L1209.82 1150.78 L1209.3 1150.78 L1208.78 1150.78 L1208.27 1150.78 L1207.75 1150.78 L1207.23 1150.78 L1206.71 1150.78 L1206.19 1150.78 L1205.67 1150.78 L1205.15 1150.78 L1204.63 1150.78 L1204.11 1150.78 L1203.59 1150.78 L1203.07 1150.78 L1202.55 1150.78 L1202.03 1150.78 L1201.51 1150.78 L1200.99 1150.78 L1200.47 1150.78 L1199.95 1150.78 L1199.43 1150.78 L1198.91 1150.78 L1198.39 1150.78 L1197.87 1150.78 L1197.35 1150.78 L1196.84 1150.78 L1196.32 1150.78 L1195.8 1150.78 L1195.28 1150.78 L1194.76 1150.78 L1194.24 1150.78 L1193.72 1150.78 L1193.2 1150.78 L1192.68 1150.78 L1192.16 1150.78 L1191.64 1150.78 L1191.12 1150.78 L1190.6 1150.78 L1190.08 1150.78 L1189.56 1150.78 L1189.04 1150.78 L1188.52 1150.78 L1188 1150.78 L1187.48 1150.78 L1186.96 1150.78 L1186.44 1150.78 L1185.92 1150.78 L1185.41 1150.78 L1184.89 1150.78 L1184.37 1150.78 L1183.85 1150.78 L1183.33 1150.78 L1182.81 1150.78 L1182.29 1150.78 L1181.77 1150.78 L1181.25 1150.78 L1180.73 1150.78 L1180.21 1150.78 L1179.69 1150.78 L1179.17 1150.78 L1178.65 1150.78 L1178.13 1150.78 L1177.61 1150.78 L1177.09 1150.78 L1176.57 1150.78 L1176.05 1150.78 L1175.53 1150.78 L1175.01 1150.78 L1174.5 1150.78 L1173.98 1150.78 L1173.46 1150.78 L1172.94 1150.78 L1172.42 1150.78 L1171.9 1150.78 L1171.38 1150.78 L1170.86 1150.78 L1170.34 1150.78 L1169.82 1150.78 L1169.3 1150.78 L1168.78 1150.78 L1168.26 1150.78 L1167.74 1150.78 L1167.22 1150.78 L1166.7 1150.78 L1166.18 1150.78 L1165.66 1150.78 L1165.14 1150.78 L1164.62 1150.78 L1164.1 1150.78 L1163.58 1150.78 L1163.07 1150.78 L1162.55 1150.78 L1162.03 1150.78 L1161.51 1150.78 L1160.99 1150.78 L1160.47 1150.78 L1159.95 1150.78 L1159.43 1150.78 L1158.91 1150.78 L1158.39 1150.78 L1157.87 1150.78 L1157.35 1150.78 L1156.83 1150.78 L1156.31 1150.78 L1155.79 1150.78 L1155.27 1150.78 L1154.75 1150.78 L1154.23 1150.78 L1153.71 1150.78 L1153.19 1150.78 L1152.67 1150.78 L1152.15 1150.78 L1151.64 1150.78 L1151.12 1150.78 L1150.6 1150.78 L1150.08 1150.78 L1149.56 1150.78 L1149.04 1150.78 L1148.52 1150.78 L1148 1150.78 L1147.48 1150.78 L1146.96 1150.78 L1146.44 1150.78 L1145.92 1150.78 L1145.4 1150.78 L1144.88 1150.78 L1144.36 1150.78 L1143.84 1150.78 L1143.32 1150.78 L1142.8 1150.78 L1142.28 1150.78 L1141.76 1150.78 L1141.24 1150.78 L1140.72 1150.78 L1140.21 1150.78 L1139.69 1150.78 L1139.17 1150.78 L1138.65 1150.78 L1138.13 1150.78 L1137.61 1150.78 L1137.09 1150.78 L1136.57 1150.78 L1136.05 1150.78 L1135.53 1150.78 L1135.01 1150.78 L1134.49 1150.78 L1133.97 1150.78 L1133.45 1150.78 L1132.93 1150.78 L1132.41 1150.78 L1131.89 1150.78 L1131.37 1150.78 L1130.85 1150.78 L1130.33 1150.78 L1129.81 1150.78 L1129.29 1150.78 L1128.78 1150.78 L1128.26 1150.78 L1127.74 1150.78 L1127.22 1150.78 L1126.7 1150.78 L1126.18 1150.78 L1125.66 1150.78 L1125.14 1150.78 L1124.62 1150.78 L1124.1 1150.78 L1123.58 1150.78 L1123.06 1150.78 L1122.54 1150.78 L1122.02 1150.78 L1121.5 1150.78 L1120.98 1150.78 L1120.46 1150.78 L1119.94 1150.78 L1119.42 1150.78 L1118.9 1150.78 L1118.38 1150.78 L1117.87 1150.78 L1117.35 1150.78 L1116.83 1150.78 L1116.31 1150.78 L1115.79 1150.78 L1115.27 1150.78 L1114.75 1150.78 L1114.23 1150.78 L1113.71 1150.78 L1113.19 1150.78 L1112.67 1150.78 L1112.15 1150.78 L1111.63 1150.78 L1111.11 1150.78 L1110.59 1150.78 L1110.07 1150.78 L1109.55 1150.78 L1109.03 1150.78 L1108.51 1150.78 L1107.99 1150.78 L1107.47 1150.78 L1106.95 1150.78 L1106.44 1150.78 L1105.92 1150.78 L1105.4 1150.78 L1104.88 1150.78 L1104.36 1150.78 L1103.84 1150.78 L1103.32 1150.78 L1102.8 1150.78 L1102.28 1150.78 L1101.76 1150.78 L1101.24 1150.78 L1100.72 1150.78 L1100.2 1150.78 L1099.68 1150.78 L1099.16 1150.78 L1098.64 1150.78 L1098.12 1150.78 L1097.6 1150.78 L1097.08 1150.78 L1096.56 1150.78 L1096.04 1150.78 L1095.52 1150.78 L1095.01 1150.78 L1094.49 1150.78 L1093.97 1150.78 L1093.45 1150.78 L1092.93 1150.78 L1092.41 1150.78 L1091.89 1150.78 L1091.37 1150.78 L1090.85 1150.78 L1090.33 1150.78 L1089.81 1150.78 L1089.29 1150.78 L1088.77 1150.78 L1088.25 1150.78 L1087.73 1150.78 L1087.21 1150.78 L1086.69 1150.78 L1086.17 1150.78 L1085.65 1150.78 L1085.13 1150.78 L1084.61 1150.78 L1084.09 1150.78 L1083.58 1150.78 L1083.06 1150.78 L1082.54 1150.78 L1082.02 1150.78 L1081.5 1150.78 L1080.98 1150.78 L1080.46 1150.78 L1079.94 1150.78 L1079.42 1150.78 L1078.9 1150.78 L1078.38 1150.78 L1077.86 1150.78 L1077.34 1150.78 L1076.82 1150.78 L1076.3 1150.78 L1075.78 1150.78 L1075.26 1150.78 L1074.74 1150.78 L1074.22 1150.78 L1073.7 1150.78 L1073.18 1150.78 L1072.66 1150.78 L1072.15 1150.78 L1071.63 1150.78 L1071.11 1150.78 L1070.59 1150.78 L1070.07 1150.78 L1069.55 1150.78 L1069.03 1150.78 L1068.51 1150.78 L1067.99 1150.78 L1067.47 1150.78 L1066.95 1150.78 L1066.43 1150.78 L1065.91 1150.78 L1065.39 1150.78 L1064.87 1150.78 L1064.35 1150.78 L1063.83 1150.78 L1063.31 1150.78 L1062.79 1150.78 L1062.27 1150.78 L1061.75 1150.78 L1061.24 1150.78 L1060.72 1150.78 L1060.2 1150.78 L1059.68 1150.78 L1059.16 1150.78 L1058.64 1150.78 L1058.12 1150.78 L1057.6 1150.78 L1057.08 1150.78 L1056.56 1150.78 L1056.04 1150.78 L1055.52 1150.78 L1055 1150.78 L1054.48 1150.78 L1053.96 1150.78 L1053.44 1150.78 L1052.92 1150.78 L1052.4 1150.78 L1051.88 1150.78 L1051.36 1150.78 L1050.84 1150.78 L1050.32 1150.78 L1049.81 1150.78 L1049.29 1150.78 L1048.77 1150.78 L1048.25 1150.78 L1047.73 1150.78 L1047.21 1150.78 L1046.69 1150.78 L1046.17 1150.78 L1045.65 1150.78 L1045.13 1150.78 L1044.61 1150.78 L1044.09 1150.78 L1043.57 1150.78 L1043.05 1150.78 L1042.53 1150.78 L1042.01 1150.78 L1041.49 1150.78 L1040.97 1150.78 L1040.45 1150.78 L1039.93 1150.78 L1039.41 1150.78 L1038.89 1150.78 L1038.38 1150.78 L1037.86 1150.78 L1037.34 1150.78 L1036.82 1150.78 L1036.3 1150.78 L1035.78 1150.78 L1035.26 1150.78 L1034.74 1150.78 L1034.22 1150.78 L1033.7 1150.78 L1033.18 1150.78 L1032.66 1150.78 L1032.14 1150.78 L1031.62 1150.78 L1031.1 1150.78 L1030.58 1150.78 L1030.06 1150.78 L1029.54 1150.78 L1029.02 1150.78 L1028.5 1150.78 L1027.98 1150.78 L1027.46 1150.78 L1026.95 1150.78 L1026.43 1150.78 L1025.91 1150.78 L1025.39 1150.78 L1024.87 1150.78 L1024.35 1150.78 L1023.83 1150.78 L1023.31 1150.78 L1022.79 1150.78 L1022.27 1150.78 L1021.75 1150.78 L1021.23 1150.78 L1020.71 1150.78 L1020.19 1150.78 L1019.67 1150.78 L1019.15 1150.78 L1018.63 1150.78 L1018.11 1150.78 L1017.59 1150.78 L1017.07 1150.78 L1016.55 1150.78 L1016.03 1150.78 L1015.52 1150.78 L1015 1150.78 L1014.48 1150.78 L1013.96 1150.78 L1013.44 1150.78 L1012.92 1150.78 L1012.4 1150.78 L1011.88 1150.78 L1011.36 1150.78 L1010.84 1150.78 L1010.32 1150.78 L1009.8 1150.78 L1009.28 1150.78 L1008.76 1150.78 L1008.24 1150.78 L1007.72 1150.78 L1007.2 1150.78 L1006.68 1150.78 L1006.16 1150.78 L1005.64 1150.78 L1005.12 1150.78 L1004.61 1150.78 L1004.09 1150.78 L1003.57 1150.78 L1003.05 1150.78 L1002.53 1150.78 L1002.01 1150.78 L1001.49 1150.78 L1000.97 1150.78 L1000.45 1150.78 L999.929 1150.78 L999.41 1150.78 L998.89 1150.78 L998.371 1150.78 L997.851 1150.78 L997.331 1150.78 L996.812 1150.78 L996.292 1150.78 L995.773 1150.78 L995.253 1150.78 L994.734 1150.78 L994.214 1150.78 L993.695 1150.78 L993.175 1150.78 L992.656 1150.78 L992.136 1150.78 L991.617 1150.78 L991.097 1150.78 L990.577 1150.78 L990.058 1150.78 L989.538 1150.78 L989.019 1150.78 L988.499 1150.78 L987.98 1150.78 L987.46 1150.78 L986.941 1150.78 L986.421 1150.78 L985.902 1150.78 L985.382 1150.78 L984.862 1150.78 L984.343 1150.78 L983.823 1150.78 L983.304 1150.78 L982.784 1150.78 L982.265 1150.78 L981.745 1150.78 L981.226 1150.78 L980.706 1150.78 L980.187 1150.78 L979.667 1150.78 L979.148 1150.78 L978.628 1150.78 L978.108 1150.78 L977.589 1150.78 L977.069 1150.78 L976.55 1150.78 L976.03 1150.78 L975.511 1150.78 L974.991 1150.78 L974.472 1150.78 L973.952 1150.78 L973.433 1150.78 L972.913 1150.78 L972.393 1150.78 L971.874 1150.78 L971.354 1150.78 L970.835 1150.78 L970.315 1150.78 L969.796 1150.78 L969.276 1150.78 L968.757 1150.78 L968.237 1150.78  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip292)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"968.237,1151.13 968.757,1151.13 969.276,1151.13 969.796,1151.13 970.315,1151.13 970.835,1151.13 971.354,1151.13 971.874,1151.13 972.393,1151.13 972.913,1151.13 973.433,1151.13 973.952,1151.13 974.472,1151.13 974.991,1151.13 975.511,1151.13 976.03,1151.13 976.55,1151.13 977.069,1151.13 977.589,1151.13 978.108,1151.13 978.628,1151.13 979.148,1151.13 979.667,1151.13 980.187,1151.13 980.706,1151.13 981.226,1151.13 981.745,1151.13 982.265,1151.13 982.784,1151.13 983.304,1151.13 983.823,1151.13 984.343,1151.13 984.862,1151.13 985.382,1151.13 985.902,1151.13 986.421,1151.13 986.941,1151.13 987.46,1151.13 987.98,1151.13 988.499,1151.13 989.019,1151.13 989.538,1151.13 990.058,1151.13 990.577,1151.13 991.097,1151.13 991.617,1151.13 992.136,1151.13 992.656,1151.13 993.175,1151.13 993.695,1151.13 994.214,1151.13 994.734,1151.13 995.253,1151.13 995.773,1151.13 996.292,1151.13 996.812,1151.13 997.331,1151.13 997.851,1151.13 998.371,1151.13 998.89,1151.13 999.41,1151.13 999.929,1151.13 1000.45,1151.13 1000.97,1151.13 1001.49,1151.13 1002.01,1151.13 1002.53,1151.13 1003.05,1151.13 1003.57,1151.13 1004.09,1151.13 1004.61,1151.13 1005.12,1151.13 1005.64,1151.13 1006.16,1151.13 1006.68,1151.13 1007.2,1151.13 1007.72,1151.13 1008.24,1151.13 1008.76,1151.13 1009.28,1151.13 1009.8,1151.13 1010.32,1151.13 1010.84,1151.13 1011.36,1151.13 1011.88,1151.13 1012.4,1151.13 1012.92,1151.13 1013.44,1151.13 1013.96,1151.13 1014.48,1151.13 1015,1151.13 1015.52,1151.13 1016.03,1151.13 1016.55,1151.13 1017.07,1151.13 1017.59,1151.13 1018.11,1151.13 1018.63,1151.13 1019.15,1151.13 1019.67,1151.13 1020.19,1151.13 1020.71,1151.13 1021.23,1151.13 1021.75,1151.13 1022.27,1151.13 1022.79,1151.13 1023.31,1151.13 1023.83,1151.13 1024.35,1151.13 1024.87,1151.13 1025.39,1151.13 1025.91,1151.13 1026.43,1151.13 1026.95,1151.13 1027.46,1151.13 1027.98,1151.13 1028.5,1151.13 1029.02,1151.13 1029.54,1151.13 1030.06,1151.13 1030.58,1151.13 1031.1,1151.13 1031.62,1151.13 1032.14,1151.13 1032.66,1151.13 1033.18,1151.13 1033.7,1151.13 1034.22,1151.13 1034.74,1151.13 1035.26,1151.13 1035.78,1151.13 1036.3,1151.13 1036.82,1151.13 1037.34,1151.13 1037.86,1151.13 1038.38,1151.13 1038.89,1151.13 1039.41,1151.13 1039.93,1151.13 1040.45,1151.13 1040.97,1151.13 1041.49,1151.13 1042.01,1151.13 1042.53,1151.13 1043.05,1151.13 1043.57,1151.13 1044.09,1151.13 1044.61,1151.13 1045.13,1151.13 1045.65,1151.13 1046.17,1151.13 1046.69,1151.13 1047.21,1151.13 1047.73,1151.13 1048.25,1151.13 1048.77,1151.13 1049.29,1151.13 1049.81,1151.13 1050.32,1151.13 1050.84,1151.13 1051.36,1151.13 1051.88,1151.13 1052.4,1151.13 1052.92,1151.13 1053.44,1151.13 1053.96,1151.13 1054.48,1151.13 1055,1151.13 1055.52,1151.13 1056.04,1151.13 1056.56,1151.13 1057.08,1151.13 1057.6,1151.13 1058.12,1151.13 1058.64,1151.13 1059.16,1151.13 1059.68,1151.13 1060.2,1151.13 1060.72,1151.13 1061.24,1151.13 1061.75,1151.13 1062.27,1151.13 1062.79,1151.13 1063.31,1151.13 1063.83,1151.13 1064.35,1151.13 1064.87,1151.13 1065.39,1151.13 1065.91,1151.13 1066.43,1151.13 1066.95,1151.13 1067.47,1151.13 1067.99,1151.13 1068.51,1151.13 1069.03,1151.13 1069.55,1151.13 1070.07,1151.13 1070.59,1151.13 1071.11,1151.13 1071.63,1151.13 1072.15,1151.13 1072.66,1151.13 1073.18,1151.13 1073.7,1151.13 1074.22,1151.13 1074.74,1151.13 1075.26,1151.13 1075.78,1151.13 1076.3,1151.13 1076.82,1151.13 1077.34,1151.13 1077.86,1151.13 1078.38,1151.13 1078.9,1151.13 1079.42,1151.13 1079.94,1151.13 1080.46,1151.13 1080.98,1151.13 1081.5,1151.13 1082.02,1151.13 1082.54,1151.13 1083.06,1151.13 1083.58,1151.13 1084.09,1151.13 1084.61,1151.13 1085.13,1151.13 1085.65,1151.13 1086.17,1151.13 1086.69,1151.13 1087.21,1151.13 1087.73,1151.13 1088.25,1151.13 1088.77,1151.13 1089.29,1151.13 1089.81,1151.13 1090.33,1151.13 1090.85,1151.13 1091.37,1151.13 1091.89,1151.13 1092.41,1151.13 1092.93,1151.13 1093.45,1151.13 1093.97,1151.13 1094.49,1151.13 1095.01,1151.13 1095.52,1151.13 1096.04,1151.13 1096.56,1151.13 1097.08,1151.13 1097.6,1151.13 1098.12,1151.13 1098.64,1151.13 1099.16,1151.13 1099.68,1151.13 1100.2,1151.13 1100.72,1151.13 1101.24,1151.13 1101.76,1151.13 1102.28,1151.13 1102.8,1151.13 1103.32,1151.13 1103.84,1151.13 1104.36,1151.13 1104.88,1151.13 1105.4,1151.13 1105.92,1151.13 1106.44,1151.13 1106.95,1151.13 1107.47,1151.13 1107.99,1151.13 1108.51,1151.13 1109.03,1151.13 1109.55,1151.13 1110.07,1151.13 1110.59,1151.13 1111.11,1151.13 1111.63,1151.13 1112.15,1151.13 1112.67,1151.13 1113.19,1151.13 1113.71,1151.13 1114.23,1151.13 1114.75,1151.13 1115.27,1151.13 1115.79,1151.13 1116.31,1151.13 1116.83,1151.13 1117.35,1151.13 1117.87,1151.13 1118.38,1151.13 1118.9,1151.13 1119.42,1151.13 1119.94,1151.13 1120.46,1151.13 1120.98,1151.13 1121.5,1151.13 1122.02,1151.13 1122.54,1151.13 1123.06,1151.13 1123.58,1151.13 1124.1,1151.13 1124.62,1151.13 1125.14,1151.13 1125.66,1151.13 1126.18,1151.13 1126.7,1151.13 1127.22,1151.13 1127.74,1151.13 1128.26,1151.13 1128.78,1151.13 1129.29,1151.13 1129.81,1151.13 1130.33,1151.13 1130.85,1151.13 1131.37,1151.13 1131.89,1151.13 1132.41,1151.13 1132.93,1151.13 1133.45,1151.13 1133.97,1151.13 1134.49,1151.13 1135.01,1151.13 1135.53,1151.13 1136.05,1151.13 1136.57,1151.13 1137.09,1151.13 1137.61,1151.13 1138.13,1151.13 1138.65,1151.13 1139.17,1151.13 1139.69,1151.13 1140.21,1151.13 1140.72,1151.13 1141.24,1151.13 1141.76,1151.13 1142.28,1151.13 1142.8,1151.13 1143.32,1151.13 1143.84,1151.13 1144.36,1151.13 1144.88,1151.13 1145.4,1151.13 1145.92,1151.13 1146.44,1151.13 1146.96,1151.13 1147.48,1151.13 1148,1151.13 1148.52,1151.13 1149.04,1151.13 1149.56,1151.13 1150.08,1151.13 1150.6,1151.13 1151.12,1151.13 1151.64,1151.13 1152.15,1151.13 1152.67,1151.13 1153.19,1151.13 1153.71,1151.13 1154.23,1151.13 1154.75,1151.13 1155.27,1151.13 1155.79,1151.13 1156.31,1151.13 1156.83,1151.13 1157.35,1151.13 1157.87,1151.13 1158.39,1151.13 1158.91,1151.13 1159.43,1151.13 1159.95,1151.13 1160.47,1151.13 1160.99,1151.13 1161.51,1151.13 1162.03,1151.13 1162.55,1151.13 1163.07,1151.13 1163.58,1151.13 1164.1,1151.13 1164.62,1151.13 1165.14,1151.13 1165.66,1151.13 1166.18,1151.13 1166.7,1151.13 1167.22,1151.13 1167.74,1151.13 1168.26,1151.13 1168.78,1151.13 1169.3,1151.13 1169.82,1151.13 1170.34,1151.13 1170.86,1151.13 1171.38,1151.13 1171.9,1151.13 1172.42,1151.13 1172.94,1151.13 1173.46,1151.13 1173.98,1151.13 1174.5,1151.13 1175.01,1151.13 1175.53,1151.13 1176.05,1151.13 1176.57,1151.13 1177.09,1151.13 1177.61,1151.13 1178.13,1151.13 1178.65,1151.13 1179.17,1151.13 1179.69,1151.13 1180.21,1151.13 1180.73,1151.13 1181.25,1151.13 1181.77,1151.13 1182.29,1151.13 1182.81,1151.13 1183.33,1151.13 1183.85,1151.13 1184.37,1151.13 1184.89,1151.13 1185.41,1151.13 1185.92,1151.13 1186.44,1151.13 1186.96,1151.13 1187.48,1151.13 1188,1151.13 1188.52,1151.13 1189.04,1151.13 1189.56,1151.13 1190.08,1151.13 1190.6,1151.13 1191.12,1151.13 1191.64,1151.13 1192.16,1151.13 1192.68,1151.13 1193.2,1151.13 1193.72,1151.13 1194.24,1151.13 1194.76,1151.13 1195.28,1151.13 1195.8,1151.13 1196.32,1151.13 1196.84,1151.13 1197.35,1151.13 1197.87,1151.13 1198.39,1151.13 1198.91,1151.13 1199.43,1151.13 1199.95,1151.13 1200.47,1151.13 1200.99,1151.13 1201.51,1151.13 1202.03,1151.13 1202.55,1151.13 1203.07,1151.13 1203.59,1151.13 1204.11,1151.13 1204.63,1151.13 1205.15,1151.13 1205.67,1151.13 1206.19,1151.13 1206.71,1151.13 1207.23,1151.13 1207.75,1151.13 1208.27,1151.13 1208.78,1151.13 1209.3,1151.13 1209.82,1151.13 1210.34,1151.13 1210.86,1151.13 1211.38,1151.13 1211.9,1151.13 1212.42,1151.13 1212.94,1151.13 1213.46,1151.13 1213.98,1151.13 1214.5,1151.13 1215.02,1151.13 1215.54,1151.13 1216.06,1151.13 1216.58,1151.13 1217.1,1151.13 1217.62,1151.13 1218.14,1151.13 1218.66,1151.13 1219.18,1151.13 1219.7,1151.13 1220.21,1151.13 1220.73,1151.13 1221.25,1151.13 1221.77,1151.13 1222.29,1151.13 1222.81,1151.13 1223.33,1151.13 1223.85,1151.13 1224.37,1151.13 1224.89,1151.13 1225.41,1151.13 1225.93,1151.13 1226.45,1151.13 1226.97,1151.13 1227.49,1151.13 1228.01,1151.13 1228.53,1151.13 1229.05,1151.13 1229.57,1151.13 1230.09,1151.13 1230.61,1151.13 1231.13,1151.13 1231.64,1151.13 1232.16,1151.13 1232.68,1151.13 1233.2,1151.13 1233.72,1151.13 1234.24,1151.13 1234.76,1151.13 1235.28,1151.13 1235.8,1151.13 1236.32,1151.13 1236.84,1151.13 1237.36,1151.13 1237.88,1151.13 1238.4,1151.13 1238.92,1151.13 1239.44,1151.13 1239.96,1151.13 1240.48,1151.13 1241,1151.13 1241.52,1151.13 1242.04,1151.13 1242.55,1151.13 1243.07,1151.13 1243.59,1151.13 1244.11,1151.13 1244.63,1151.13 1245.15,1151.13 1245.67,1151.13 1246.19,1151.13 1246.71,1151.13 1247.23,1151.13 1247.75,1151.13 1248.27,1151.13 1248.79,1151.13 1249.31,1151.13 1249.83,1151.13 1250.35,1151.13 1250.87,1151.13 1251.39,1151.13 1251.91,1151.13 1252.43,1151.13 1252.95,1151.13 1253.47,1151.13 1253.98,1151.13 1254.5,1151.13 1255.02,1151.13 1255.54,1151.13 1256.06,1151.13 1256.58,1151.13 1257.1,1151.13 1257.62,1151.13 1258.14,1151.13 1258.66,1151.13 1259.18,1151.13 1259.7,1151.13 1260.22,1151.13 1260.74,1151.13 1261.26,1151.13 1261.78,1151.13 1262.3,1151.13 1262.82,1151.13 1263.34,1151.13 1263.86,1151.13 1264.38,1151.13 1264.9,1151.13 1265.41,1151.13 1265.93,1151.13 1266.45,1151.13 1266.97,1151.13 1267.49,1151.13 1268.01,1151.13 1268.53,1151.13 1269.05,1151.13 1269.57,1151.13 1270.09,1151.13 1270.61,1151.13 1271.13,1151.13 1271.65,1151.13 1272.17,1151.13 1272.69,1151.13 1273.21,1151.13 1273.73,1151.13 1274.25,1151.13 1274.77,1151.13 1275.29,1151.13 1275.81,1151.13 1276.33,1151.13 1276.84,1151.13 1277.36,1151.13 1277.88,1151.13 1278.4,1151.13 1278.92,1151.13 1279.44,1151.13 1279.96,1151.13 1280.48,1151.13 1281,1151.13 1281.52,1151.13 1282.04,1151.13 1282.56,1151.13 1283.08,1151.13 1283.6,1151.13 1284.12,1151.13 1284.64,1151.13 1285.16,1151.13 1285.68,1151.13 1286.2,1151.13 1286.72,1151.13 1287.24,1151.13 1287.76,1151.13 1288.27,1151.13 1288.79,1151.13 1289.31,1151.13 1289.83,1151.13 1290.35,1151.13 1290.87,1151.13 1291.39,1151.13 1291.91,1151.13 1292.43,1151.13 1292.95,1151.13 1293.47,1151.13 1293.99,1151.13 1294.51,1151.13 1295.03,1151.13 1295.55,1151.13 1296.07,1151.13 1296.59,1151.13 1297.11,1151.13 1297.63,1151.13 1298.15,1151.13 1298.67,1151.13 1299.18,1151.13 1299.7,1151.13 1300.22,1151.13 1300.74,1151.13 1301.26,1151.13 1301.78,1151.13 1302.3,1151.13 1302.82,1151.13 1303.34,1151.13 1303.86,1151.13 1304.38,1151.13 1304.9,1151.13 1305.42,1151.13 1305.94,1151.13 1306.46,1151.13 1306.98,1151.13 1307.5,1151.13 1308.02,1151.13 1308.54,1151.13 1309.06,1151.13 1309.58,1151.13 1310.1,1151.13 1310.61,1151.13 1311.13,1151.13 1311.65,1151.13 1312.17,1151.13 1312.69,1151.13 1313.21,1151.13 1313.73,1151.13 1314.25,1151.13 1314.77,1151.13 1315.29,1151.13 1315.81,1151.13 1316.33,1151.13 1316.85,1151.13 1317.37,1151.13 1317.89,1151.13 1318.41,1151.13 1318.93,1151.13 1319.45,1151.13 1319.97,1151.13 1320.49,1151.13 1321.01,1151.13 1321.53,1151.13 1322.04,1151.13 1322.56,1151.13 1323.08,1151.13 1323.6,1151.13 1324.12,1151.13 1324.64,1151.13 1325.16,1151.13 1325.68,1151.13 1326.2,1151.13 1326.72,1151.13 1327.24,1151.13 1327.76,1151.13 1328.28,1151.13 1328.8,1151.13 1329.32,1151.13 1329.84,1151.13 1330.36,1151.13 1330.88,1151.13 1331.4,1151.13 1331.92,1151.13 1332.44,1151.13 1332.96,1151.13 1333.47,1151.13 1333.99,1151.13 1334.51,1151.13 1335.03,1151.13 1335.55,1151.13 1336.07,1151.13 1336.59,1151.13 1337.11,1151.13 1337.63,1151.13 1338.15,1151.13 1338.67,1151.13 1339.19,1151.13 1339.71,1151.13 1340.23,1151.13 1340.75,1151.13 1341.27,1151.13 1341.79,1151.13 1342.31,1151.13 1342.83,1151.13 1343.35,1151.13 1343.87,1151.13 1344.39,1151.13 1344.9,1151.13 1345.42,1151.13 1345.94,1151.13 1346.46,1151.13 1346.98,1151.13 1347.5,1151.13 1348.02,1151.13 1348.54,1151.13 1349.06,1151.13 1349.58,1151.13 1350.1,1151.13 1350.62,1151.13 1351.14,1151.13 1351.66,1151.13 1352.18,1151.13 1352.7,1151.13 1353.22,1151.13 1353.74,1151.13 1354.26,1151.13 1354.78,1151.13 1355.3,1151.13 1355.81,1151.13 1356.33,1151.13 1356.85,1151.13 1357.37,1151.13 1357.89,1151.13 1358.41,1151.13 1358.93,1151.13 1359.45,1151.13 1359.97,1151.13 1360.49,1151.13 1361.01,1151.13 1361.53,1151.13 1362.05,1151.13 1362.57,1151.13 1363.09,1151.13 1363.61,1151.13 1364.13,1151.13 1364.65,1151.13 1365.17,1151.13 1365.69,1151.13 1366.21,1151.13 1366.73,1151.13 1367.24,1151.13 1367.76,1151.13 1368.28,1151.13 1368.8,1151.13 1369.32,1151.13 1369.84,1151.13 1370.36,1151.13 1370.88,1151.13 1371.4,1151.13 1371.92,1151.13 1372.44,1151.13 1372.96,1151.13 1373.48,1151.13 1374,1151.13 1374.52,1151.13 1375.04,1151.13 1375.56,1151.13 1376.08,1151.13 1376.6,1151.13 1377.12,1151.13 1377.64,1151.13 1378.16,1151.13 1378.67,1151.13 1379.19,1151.13 1379.71,1151.13 1380.23,1151.13 1380.75,1151.13 1381.27,1151.13 1381.79,1151.13 1382.31,1151.13 1382.83,1151.13 1383.35,1151.13 1383.87,1151.13 1384.39,1151.13 1384.91,1151.13 1385.43,1151.13 1385.95,1151.13 1386.47,1151.13 1386.99,1151.13 1387.51,1151.13 1388.03,1151.13 1388.55,1151.13 1389.07,1151.13 1389.59,1151.13 1390.1,1151.13 1390.62,1151.13 1391.14,1151.13 1391.66,1151.13 1392.18,1151.13 1392.7,1151.13 1393.22,1151.13 1393.74,1151.13 1394.26,1151.13 1394.78,1151.13 1395.3,1151.13 1395.82,1151.13 1396.34,1151.13 1396.86,1151.13 1397.38,1151.13 1397.9,1151.13 1398.42,1151.13 1398.94,1151.13 1399.46,1151.13 1399.98,1151.13 1400.5,1151.13 1401.02,1151.13 1401.53,1151.13 1402.05,1151.13 1402.57,1151.13 1403.09,1151.13 1403.61,1151.13 1404.13,1151.13 1404.65,1151.13 1405.17,1151.13 1405.69,1151.13 1406.21,1151.13 1406.73,1151.13 1407.25,1151.13 1407.77,1151.13 1408.29,1151.13 1408.81,1151.13 1409.33,1151.13 1409.85,1151.13 1410.37,1151.13 1410.89,1151.13 1411.41,1151.13 1411.93,1151.13 1412.44,1151.13 1412.96,1151.13 1413.48,1151.13 1414,1151.13 1414.52,1151.13 1415.04,1151.13 1415.56,1151.13 1416.08,1151.13 1416.6,1151.13 1417.12,1151.13 1417.64,1151.13 1418.16,1151.13 1418.68,1151.13 1419.2,1151.13 1419.72,1151.13 1420.24,1151.13 1420.76,1151.13 1421.28,1151.13 1421.8,1151.13 1422.32,1151.13 1422.84,1151.13 1423.36,1151.13 1423.87,1151.13 1424.39,1151.13 1424.91,1151.13 1425.43,1151.13 1425.95,1151.13 1426.47,1151.13 1426.99,1151.13 1427.51,1151.13 1428.03,1151.13 1428.55,1151.13 1429.07,1151.13 1429.59,1151.13 1430.11,1151.13 1430.63,1151.13 1431.15,1151.13 1431.67,1151.13 1432.19,1151.13 1432.71,1151.13 1433.23,1151.13 1433.75,1151.13 1434.27,1151.13 1434.79,1151.13 1435.3,1151.13 1435.82,1151.13 1436.34,1151.13 1436.86,1151.13 1437.38,1151.13 1437.9,1151.13 1438.42,1151.13 1438.94,1151.13 1439.46,1151.13 1439.98,1151.13 1440.5,1151.13 1441.02,1151.13 1441.54,1151.13 1442.06,1151.13 1442.58,1151.13 1443.1,1151.13 1443.62,1151.13 1444.14,1151.13 1444.66,1151.13 1445.18,1151.13 1445.7,1151.13 1446.22,1151.13 1446.73,1151.13 1447.25,1151.13 1447.77,1151.13 1448.29,1151.13 1448.81,1151.13 1449.33,1151.13 1449.85,1151.13 1450.37,1151.13 1450.89,1151.13 1451.41,1151.13 1451.93,1151.13 1452.45,1151.13 1452.97,1151.13 1453.49,1151.13 1454.01,1151.13 1454.53,1151.13 1455.05,1151.13 1455.57,1151.13 1456.09,1151.13 1456.61,1151.13 1457.13,1151.13 1457.65,1151.13 1458.16,1151.13 1458.68,1151.13 1459.2,1151.13 1459.72,1151.13 1460.24,1151.13 1460.76,1151.13 1461.28,1151.13 1461.8,1151.13 1462.32,1151.13 1462.84,1151.13 1463.36,1151.13 1463.88,1151.13 1464.4,1151.13 1464.92,1151.13 1465.44,1151.13 1465.96,1151.13 1466.48,1151.13 1467,1151.13 1467.52,1151.13 1468.04,1151.13 1468.56,1151.13 1469.07,1151.13 1469.59,1151.13 1470.11,1151.13 1470.63,1151.13 1471.15,1151.13 1471.67,1151.13 1472.19,1151.13 1472.71,1151.13 1473.23,1151.13 1473.75,1151.13 1474.27,1151.13 1474.79,1151.13 1475.31,1151.13 1475.83,1151.13 1476.35,1151.13 1476.87,1151.13 1477.39,1151.13 1477.91,1151.13 1478.43,1151.13 1478.95,1151.13 1479.47,1151.13 1479.99,1151.13 1480.5,1151.13 1481.02,1151.13 1481.54,1151.13 1482.06,1151.13 1482.58,1151.13 1483.1,1151.13 1483.62,1151.13 1484.14,1151.13 1484.66,1151.13 1485.18,1151.13 1485.7,1151.13 1486.22,1151.13 1486.74,1151.13 1487.26,1151.13 1487.78,1151.13 1488.3,1151.13 1488.82,1151.13 1489.34,1151.13 1489.86,1151.13 1490.38,1151.13 1490.9,1151.13 1491.42,1151.13 1491.93,1151.13 1492.45,1151.13 1492.97,1151.13 1493.49,1151.13 1494.01,1151.13 1494.53,1151.13 1495.05,1151.13 1495.57,1151.13 1496.09,1151.13 1496.61,1151.13 1497.13,1151.13 1497.65,1151.13 1498.17,1151.13 1498.69,1151.13 1499.21,1151.13 1499.73,1151.13 1500.25,1151.13 1500.77,1151.13 1501.29,1151.13 1501.81,1151.13 1502.33,1151.13 1502.85,1151.13 1503.36,1151.13 1503.88,1151.13 1504.4,1151.13 1504.92,1151.13 1505.44,1151.13 1505.96,1151.13 1506.48,1151.13 1507,1151.13 1507.52,1151.13 1508.04,1151.13 1508.56,1151.13 1509.08,1151.13 1509.6,1151.13 1510.12,1151.13 1510.64,1151.13 1511.16,1151.13 1511.68,1151.13 1512.2,1151.13 1512.72,1151.13 1513.24,1151.13 1513.76,1151.13 1514.28,1151.13 1514.79,1151.13 1515.31,1151.13 1515.83,1151.13 1516.35,1151.13 1516.87,1151.13 1517.39,1151.13 1517.91,1151.13 1518.43,1151.13 1518.95,1151.13 1519.47,1151.13 1519.99,1151.13 1520.51,1151.13 1521.03,1151.13 1521.55,1151.13 1522.07,1151.13 1522.59,1151.13 1523.11,1151.13 1523.63,1151.13 1524.15,1151.13 1524.67,1151.13 1525.19,1151.13 1525.7,1151.13 1526.22,1151.13 1526.74,1151.13 1527.26,1151.13 1527.78,1151.13 1528.3,1151.13 1528.82,1151.13 1529.34,1151.13 1529.86,1151.13 1530.38,1151.13 1530.9,1151.13 1531.42,1151.13 1531.94,1151.13 1532.46,1151.13 1532.98,1151.13 1533.5,1151.13 1534.02,1151.13 1534.54,1151.13 1535.06,1151.13 1535.58,1151.13 1536.1,1151.13 1536.62,1151.13 1537.13,1151.13 1537.65,1151.13 1538.17,1151.13 1538.69,1151.13 1539.21,1151.13 1539.73,1151.13 1540.25,1151.13 1540.77,1151.13 1541.29,1151.13 1541.81,1151.13 1542.33,1151.13 1542.85,1151.13 1543.37,1151.13 1543.89,1151.13 1544.41,1151.13 1544.93,1151.13 1545.45,1151.13 1545.97,1151.13 1546.49,1151.13 1547.01,1151.13 1547.53,1151.13 1548.05,1151.13 1548.56,1151.13 1549.08,1151.13 1549.6,1151.13 1550.12,1151.13 1550.64,1151.13 1551.16,1151.13 1551.68,1151.13 1552.2,1151.13 1552.72,1151.13 1553.24,1151.13 1553.76,1151.13 1554.28,1151.13 1554.8,1151.13 1555.32,1151.13 1555.84,1151.13 1556.36,1151.13 1556.88,1151.13 1557.4,1151.13 1557.92,1151.13 1558.44,1151.13 1558.96,1151.13 1559.48,1151.13 1559.99,1151.13 1560.51,1151.13 1561.03,1151.13 1561.55,1151.13 1562.07,1151.13 1562.59,1151.13 1563.11,1151.13 1563.63,1151.13 1564.15,1151.13 1564.67,1151.13 1565.19,1151.13 1565.71,1151.13 1566.23,1151.13 1566.75,1151.13 1567.27,1151.13 1567.79,1151.13 1568.31,1151.13 1568.83,1151.13 1569.35,1151.13 1569.87,1151.13 1570.39,1151.13 1570.91,1151.13 1571.42,1151.13 1571.94,1151.13 1572.46,1151.13 1572.98,1151.13 1573.5,1151.13 1574.02,1151.13 1574.54,1151.13 1575.06,1151.13 1575.58,1151.13 1576.1,1151.13 1576.62,1151.13 1577.14,1151.13 1577.66,1151.13 1578.18,1151.13 1578.7,1151.13 1579.22,1151.13 1579.74,1151.13 1580.26,1151.13 1580.78,1151.13 1581.3,1151.13 1581.82,1151.13 1582.33,1151.13 1582.85,1151.13 1583.37,1151.13 1583.89,1151.13 1584.41,1151.13 1584.93,1151.13 1585.45,1151.13 1585.97,1151.13 1586.49,1151.13 1587.01,1151.13 1587.53,1151.13 1588.05,1151.13 1588.57,1151.13 1589.09,1151.13 1589.61,1151.13 1590.13,1151.13 1590.65,1151.13 1591.17,1151.13 1591.69,1151.13 1592.21,1151.13 1592.73,1151.13 1593.25,1151.13 1593.76,1151.13 1594.28,1151.13 1594.8,1151.13 1595.32,1151.13 1595.84,1151.13 1596.36,1151.13 1596.88,1151.13 1597.4,1151.13 1597.92,1151.13 1598.44,1151.13 1598.96,1151.13 1599.48,1151.13 1600,1151.13 1600.52,1151.13 1601.04,1151.13 1601.56,1151.13 1602.08,1151.13 1602.6,1151.13 1603.12,1151.13 1603.64,1151.13 1604.16,1151.13 1604.68,1151.13 1605.19,1151.13 1605.71,1151.13 1606.23,1151.13 1606.75,1151.13 1607.27,1151.13 1607.79,1151.13 1608.31,1151.13 1608.83,1151.13 1609.35,1151.13 1609.87,1151.13 1610.39,1151.13 1610.91,1151.13 1611.43,1151.13 1611.95,1151.13 1612.47,1151.13 1612.99,1151.13 1613.51,1151.13 1614.03,1151.13 1614.55,1151.13 1615.07,1151.13 1615.59,1151.13 1616.11,1151.13 1616.62,1151.13 1617.14,1151.13 1617.66,1151.13 1618.18,1151.13 1618.7,1151.13 1619.22,1151.13 1619.74,1151.13 1620.26,1151.13 1620.78,1151.13 1621.3,1151.13 1621.82,1151.13 1622.34,1151.13 1622.86,1151.13 1623.38,1151.13 1623.9,1151.13 1624.42,1151.13 1624.94,1151.13 1625.46,1151.13 1625.98,1151.13 1626.5,1151.13 1627.02,1151.13 1627.54,1151.13 1628.05,1151.13 1628.57,1151.13 1629.09,1151.13 1629.61,1151.13 1630.13,1151.13 1630.65,1151.13 1631.17,1151.13 1631.69,1151.13 1632.21,1151.13 1632.73,1151.13 1633.25,1151.13 1633.77,1151.13 1634.29,1151.13 1634.81,1151.13 1635.33,1151.13 1635.85,1151.13 1636.37,1151.13 1636.89,1151.13 1637.41,1151.13 1637.93,1151.13 1638.45,1151.13 1638.96,1151.13 1639.48,1151.13 1640,1151.13 1640.52,1151.13 1641.04,1151.13 1641.56,1151.13 1642.08,1151.13 1642.6,1151.13 1643.12,1151.13 1643.64,1151.13 1644.16,1151.13 1644.68,1151.13 1645.2,1151.13 1645.72,1151.13 1646.24,1151.13 1646.76,1151.13 1647.28,1151.13 1647.8,1151.13 1648.32,1151.13 1648.84,1151.13 1649.36,1151.13 1649.88,1151.13 1650.39,1151.13 1650.91,1151.13 1651.43,1151.13 1651.95,1151.13 1652.47,1151.13 1652.99,1151.13 1653.51,1151.13 1654.03,1151.13 1654.55,1151.13 1655.07,1151.13 1655.59,1151.13 1656.11,1151.13 1656.63,1151.13 1657.15,1151.13 1657.67,1151.13 1658.19,1151.13 1658.71,1151.13 1659.23,1151.13 1659.75,1151.13 1660.27,1151.13 1660.79,1151.13 1661.31,1151.13 1661.82,1151.13 1662.34,1151.13 1662.86,1151.13 1663.38,1151.13 1663.9,1151.13 1664.42,1151.13 1664.94,1151.13 1665.46,1151.13 1665.98,1151.13 1666.5,1151.13 1667.02,1151.13 1667.54,1151.13 1668.06,1151.13 1668.58,1151.13 1669.1,1151.13 1669.62,1151.13 1670.14,1151.13 1670.66,1151.13 1671.18,1151.13 1671.7,1151.13 1672.22,1151.13 1672.74,1151.13 1673.25,1151.13 1673.77,1151.13 1674.29,1151.13 1674.81,1151.13 1675.33,1151.13 1675.85,1151.13 1676.37,1151.13 1676.89,1151.13 1677.41,1151.13 1677.93,1151.13 1678.45,1151.13 1678.97,1151.13 1679.49,1151.13 1680.01,1151.13 1680.53,1151.13 1681.05,1151.13 1681.57,1151.13 1682.09,1151.13 1682.61,1151.13 1683.13,1151.13 1683.65,1151.13 1684.17,1151.13 1684.68,1151.13 1685.2,1151.13 1685.72,1151.13 1686.24,1151.13 1686.76,1151.13 1687.28,1151.13 1687.8,1151.13 1688.32,1151.13 1688.84,1151.13 1689.36,1151.13 1689.88,1151.13 1690.4,1151.13 1690.92,1151.13 1691.44,1151.13 1691.96,1151.13 1692.48,1151.13 1693,1151.13 1693.52,1151.13 1694.04,1151.13 1694.56,1151.13 1695.08,1151.13 1695.59,1151.13 1696.11,1151.13 1696.63,1151.13 1697.15,1151.13 1697.67,1151.13 1698.19,1151.13 1698.71,1151.13 1699.23,1151.13 1699.75,1151.13 1700.27,1151.13 1700.79,1151.13 1701.31,1151.13 1701.83,1151.13 1702.35,1151.13 1702.87,1151.13 1703.39,1151.13 1703.91,1151.13 1704.43,1151.13 1704.95,1151.13 1705.47,1151.13 1705.99,1151.13 1706.51,1151.13 1707.02,1151.13 1707.54,1151.13 1708.06,1151.13 1708.58,1151.13 1709.1,1151.13 1709.62,1151.13 1710.14,1151.13 1710.66,1151.13 1711.18,1151.13 1711.7,1151.13 1712.22,1151.13 1712.74,1151.13 1713.26,1151.13 1713.78,1151.13 1714.3,1151.13 1714.82,1151.13 1715.34,1151.13 1715.86,1151.13 1716.38,1151.13 1716.9,1151.13 1717.42,1151.13 1717.94,1151.13 1718.45,1151.13 1718.97,1151.13 1719.49,1151.13 1720.01,1151.13 1720.53,1151.13 1721.05,1151.13 1721.57,1151.13 1722.09,1151.13 1722.61,1151.13 1723.13,1151.13 1723.65,1151.13 1724.17,1151.13 1724.69,1151.13 1725.21,1151.13 1725.73,1151.13 1726.25,1151.13 1726.77,1151.13 1727.29,1151.13 1727.81,1151.13 1728.33,1151.13 1728.85,1151.13 1729.37,1151.13 1729.88,1151.13 1730.4,1151.13 1730.92,1151.13 1731.44,1151.13 1731.96,1151.13 1732.48,1151.13 1733,1151.13 1733.52,1151.13 1734.04,1151.13 1734.56,1151.13 1735.08,1151.13 1735.6,1151.13 1736.12,1151.13 1736.64,1151.13 1737.16,1151.13 1737.68,1151.13 1738.2,1151.13 1738.72,1151.13 1739.24,1151.13 1739.76,1151.13 1740.28,1151.13 1740.8,1151.13 1741.31,1151.13 1741.83,1151.13 1742.35,1151.13 1742.87,1151.13 1743.39,1151.13 1743.91,1151.13 1744.43,1151.13 1744.95,1151.13 1745.47,1151.13 1745.99,1151.13 1746.51,1151.13 1747.03,1151.13 1747.55,1151.13 1748.07,1151.13 1748.59,1151.13 1749.11,1151.13 1749.63,1151.13 1750.15,1151.13 1750.67,1151.13 1751.19,1151.13 1751.71,1151.13 1752.22,1151.13 1752.74,1151.13 1753.26,1151.13 1753.78,1151.13 1754.3,1151.13 1754.82,1151.13 1755.34,1151.13 1755.86,1151.13 1756.38,1151.13 1756.9,1151.13 1757.42,1151.13 1757.94,1151.13 1758.46,1151.13 1758.98,1151.13 1759.5,1151.13 1760.02,1151.13 1760.54,1151.13 1761.06,1151.13 1761.58,1151.13 1762.1,1151.13 1762.62,1151.13 1763.14,1151.13 1763.65,1151.13 1764.17,1151.13 1764.69,1151.13 1765.21,1151.13 1765.73,1151.13 1766.25,1151.13 1766.77,1151.13 1767.29,1151.13 1767.81,1151.13 1768.33,1151.13 1768.85,1151.13 1769.37,1151.13 1769.89,1151.13 1770.41,1151.13 1770.93,1151.13 1771.45,1151.13 1771.97,1151.13 1772.49,1151.13 1773.01,1151.13 1773.53,1151.13 1774.05,1151.13 1774.57,1151.13 1775.08,1151.13 1775.6,1151.13 1776.12,1151.13 1776.64,1151.13 1777.16,1151.13 1777.68,1151.13 1778.2,1151.13 1778.72,1151.13 1779.24,1151.13 1779.76,1151.13 1780.28,1151.13 1780.8,1151.13 1781.32,1151.13 1781.84,1151.13 1782.36,1151.13 1782.88,1151.13 1783.4,1151.13 1783.92,1151.13 1784.44,1151.13 1784.96,1151.13 1785.48,1151.13 1786,1151.13 1786.51,1151.13 1787.03,1151.13 1787.55,1151.13 1788.07,1151.13 1788.59,1151.13 1789.11,1151.13 1789.63,1151.13 1790.15,1151.13 1790.67,1151.13 1791.19,1151.13 1791.71,1151.13 1792.23,1151.13 1792.75,1151.13 1793.27,1151.13 1793.79,1151.13 1794.31,1151.13 1794.83,1151.13 1795.35,1151.13 1795.87,1151.13 1796.39,1151.13 1796.91,1151.13 1797.43,1151.13 1797.94,1151.13 1798.46,1151.13 1798.98,1151.13 1799.5,1151.13 1800.02,1151.13 1800.54,1151.13 1801.06,1151.13 1801.58,1151.13 1802.1,1151.13 1802.62,1151.13 1803.14,1151.13 1803.66,1151.13 1804.18,1151.13 1804.7,1151.13 1805.22,1151.13 1805.74,1151.13 1806.26,1151.13 1806.78,1151.13 1807.3,1151.13 1807.82,1151.13 1808.34,1151.13 1808.85,1151.13 1809.37,1151.13 1809.89,1151.13 1810.41,1151.13 1810.93,1151.13 1811.45,1151.13 1811.97,1151.13 1812.49,1151.13 1813.01,1151.13 1813.53,1151.13 1814.05,1151.13 1814.57,1151.13 1815.09,1151.13 1815.61,1151.13 1816.13,1151.13 1816.65,1151.13 1817.17,1151.13 1817.69,1151.13 1818.21,1151.13 1818.73,1151.13 1819.25,1151.13 1819.77,1151.13 1820.28,1151.13 1820.8,1151.13 1821.32,1151.13 1821.84,1151.13 1822.36,1151.13 1822.88,1151.13 1823.4,1151.13 1823.92,1151.13 1824.44,1151.13 1824.96,1151.13 1825.48,1151.13 1826,1151.13 1826.52,1151.13 1827.04,1151.13 1827.56,1151.13 1828.08,1151.13 1828.6,1151.13 1829.12,1151.13 1829.64,1151.13 1830.16,1151.13 1830.68,1151.13 1831.2,1151.13 1831.71,1151.13 1832.23,1151.13 1832.75,1151.13 1833.27,1151.13 1833.79,1151.13 1834.31,1151.13 1834.83,1151.13 1835.35,1151.13 1835.87,1151.13 1836.39,1151.13 1836.91,1151.13 1837.43,1151.13 1837.95,1151.13 1838.47,1151.13 1838.99,1151.13 1839.51,1151.13 1840.03,1151.13 1840.55,1151.13 1841.07,1151.13 1841.59,1151.13 1842.11,1151.13 1842.63,1151.13 1843.14,1151.13 1843.66,1151.13 1844.18,1151.13 1844.7,1151.13 1845.22,1151.13 1845.74,1151.13 1846.26,1151.13 1846.78,1151.13 1847.3,1151.13 1847.82,1151.13 1848.34,1151.13 1848.86,1151.13 1849.38,1151.13 1849.9,1151.13 1850.42,1151.13 1850.94,1151.13 1851.46,1151.13 1851.98,1151.13 1852.5,1151.13 1853.02,1151.13 1853.54,1151.13 1854.06,1151.13 1854.57,1151.13 1855.09,1151.13 1855.61,1151.13 1856.13,1151.13 1856.65,1151.13 1857.17,1151.13 1857.69,1151.13 1858.21,1151.13 1858.73,1151.13 1859.25,1151.13 1859.77,1151.13 1860.29,1151.13 1860.81,1151.13 1861.33,1151.13 1861.85,1151.13 1862.37,1151.13 1862.89,1151.13 1863.41,1151.13 1863.93,1151.13 1864.45,1151.13 1864.97,1151.13 1865.48,1151.13 1866,1151.13 1866.52,1151.13 1867.04,1151.13 1867.56,1151.13 1868.08,1151.13 1868.6,1151.13 1869.12,1151.13 1869.64,1151.13 1870.16,1151.13 1870.68,1151.13 1871.2,1151.13 1871.72,1151.13 1872.24,1151.13 1872.76,1151.13 1873.28,1151.13 1873.8,1151.13 1874.32,1151.13 1874.84,1151.13 1875.36,1151.13 1875.88,1151.13 1876.4,1151.13 1876.91,1151.13 1877.43,1151.13 1877.95,1151.13 1878.47,1151.13 1878.99,1151.13 1879.51,1151.13 1880.03,1151.13 1880.55,1151.13 1881.07,1151.13 1881.59,1151.13 1882.11,1151.13 1882.63,1151.13 1883.15,1151.13 1883.67,1151.13 1884.19,1151.13 1884.71,1151.13 1885.23,1151.13 1885.75,1151.13 1886.27,1151.13 1886.79,1151.13 1887.31,1151.13 1887.83,1151.13 1888.34,1151.13 1888.86,1151.13 1889.38,1151.13 1889.9,1151.13 1890.42,1151.13 1890.94,1151.13 1891.46,1151.13 1891.98,1151.13 1892.5,1151.13 1893.02,1151.13 1893.54,1151.13 1894.06,1151.13 1894.58,1151.13 1895.1,1151.13 1895.62,1151.13 1896.14,1151.13 1896.66,1151.13 1897.18,1151.13 1897.7,1151.13 1898.22,1151.13 1898.74,1151.13 1899.26,1151.13 1899.77,1151.13 1900.29,1151.13 1900.81,1151.13 1901.33,1151.13 1901.85,1151.13 1902.37,1151.13 1902.89,1151.13 1903.41,1151.13 1903.93,1151.13 1904.45,1151.13 1904.97,1151.13 1905.49,1151.13 1906.01,1151.13 1906.53,1151.13 1907.05,1151.13 1907.57,1151.13 1908.09,1151.13 1908.61,1151.13 1909.13,1151.13 1909.65,1151.13 1910.17,1151.13 1910.69,1151.13 1911.2,1151.13 1911.72,1151.13 1912.24,1151.13 1912.76,1151.13 1913.28,1151.13 1913.8,1151.13 1914.32,1151.13 1914.84,1151.13 1915.36,1151.13 1915.88,1151.13 1916.4,1151.13 1916.92,1151.13 1917.44,1151.13 1917.96,1151.13 1918.48,1151.13 1919,1151.13 1919.52,1151.13 1920.04,1151.13 1920.56,1151.13 1921.08,1151.13 1921.6,1151.13 1922.11,1151.13 1922.63,1151.13 1923.15,1151.13 1923.67,1151.13 1924.19,1151.13 1924.71,1151.13 1925.23,1151.13 1925.75,1151.13 1926.27,1151.13 1926.79,1151.13 1927.31,1151.13 1927.83,1151.13 1928.35,1151.13 1928.87,1151.13 1929.39,1151.13 1929.91,1151.13 1930.43,1151.13 1930.95,1151.13 1931.47,1151.13 1931.99,1151.13 1932.51,1151.13 1933.03,1151.13 1933.54,1151.13 1934.06,1151.13 1934.58,1151.13 1935.1,1151.13 1935.62,1151.13 1936.14,1151.13 1936.66,1151.13 1937.18,1151.13 1937.7,1151.13 1938.22,1151.13 1938.74,1151.13 1939.26,1151.13 1939.78,1151.13 1940.3,1151.13 1940.82,1151.13 1941.34,1151.13 1941.86,1151.13 1942.38,1151.13 1942.9,1151.13 1943.42,1151.13 1943.94,1151.13 1944.46,1151.13 1944.97,1151.13 1945.49,1151.13 1946.01,1151.13 1946.53,1151.13 1947.05,1151.13 1947.57,1151.13 1948.09,1151.13 1948.61,1151.13 1949.13,1151.13 1949.65,1151.13 1950.17,1151.13 1950.69,1151.13 1951.21,1151.13 1951.73,1151.13 1952.25,1151.13 1952.77,1151.13 1953.29,1151.13 1953.81,1151.13 1954.33,1151.13 1954.85,1151.13 1955.37,1151.13 1955.89,1151.13 1956.4,1151.13 1956.92,1151.13 1957.44,1151.13 1957.96,1151.13 1958.48,1151.13 1959,1151.13 1959.52,1151.13 1960.04,1151.13 1960.56,1151.13 1961.08,1151.13 1961.6,1151.13 1962.12,1151.13 1962.64,1151.13 1963.16,1151.13 1963.68,1151.13 1964.2,1151.13 1964.72,1151.13 1965.24,1151.13 1965.76,1151.13 1966.28,1151.13 1966.8,1151.13 1967.32,1151.13 1967.83,1151.13 1968.35,1151.13 1968.87,1151.13 1969.39,1151.13 1969.91,1151.13 1970.43,1151.13 1970.95,1151.13 1971.47,1151.13 1971.99,1151.13 1972.51,1151.13 1973.03,1151.13 1973.55,1151.13 1974.07,1151.13 1974.59,1151.13 1975.11,1151.13 1975.63,1151.13 1976.15,1151.13 1976.67,1151.13 1977.19,1151.13 1977.71,1151.13 1978.23,1151.13 1978.74,1151.13 1979.26,1151.13 1979.78,1151.13 1980.3,1151.13 1980.82,1151.13 1981.34,1151.13 1981.86,1151.13 1982.38,1151.13 1982.9,1151.13 1983.42,1151.13 1983.94,1151.13 1984.46,1151.13 1984.98,1151.13 1985.5,1151.13 1986.02,1151.13 1986.54,1151.13 1987.06,1151.13 1987.58,1151.13 1988.1,1151.13 1988.62,1151.13 1989.14,1151.13 1989.66,1151.13 1990.17,1151.13 1990.69,1151.13 1991.21,1151.13 1991.73,1151.13 1992.25,1151.13 1992.77,1151.13 1993.29,1151.13 1993.81,1151.13 1994.33,1151.13 1994.85,1151.13 1995.37,1151.13 1995.89,1151.13 1996.41,1151.13 1996.93,1151.13 1997.45,1151.13 1997.97,1151.13 1998.49,1151.13 1999.01,1151.13 1999.53,1151.13 2000.05,1151.13 2000.57,1151.13 2001.09,1151.13 2001.6,1151.13 2002.12,1151.13 2002.64,1151.13 2003.16,1151.13 2003.68,1151.13 2004.2,1151.13 2004.72,1151.13 2005.24,1151.13 2005.76,1151.13 2006.28,1151.13 2006.8,1151.13 \"/>\n<path clip-path=\"url(#clip292)\" d=\"M968.237 1151.04 L968.757 1151.04 L969.276 1151.04 L969.796 1151.04 L970.315 1151.04 L970.835 1151.04 L971.354 1151.04 L971.874 1151.04 L972.393 1151.04 L972.913 1151.04 L973.433 1151.04 L973.952 1151.04 L974.472 1151.04 L974.991 1151.04 L975.511 1151.04 L976.03 1151.04 L976.55 1151.04 L977.069 1151.04 L977.589 1151.04 L978.108 1151.04 L978.628 1151.04 L979.148 1151.04 L979.667 1151.04 L980.187 1151.04 L980.706 1151.04 L981.226 1151.04 L981.745 1151.04 L982.265 1151.04 L982.784 1151.04 L983.304 1151.04 L983.823 1151.04 L984.343 1151.04 L984.862 1151.04 L985.382 1151.04 L985.902 1151.04 L986.421 1151.04 L986.941 1151.04 L987.46 1151.04 L987.98 1151.04 L988.499 1151.04 L989.019 1151.04 L989.538 1151.04 L990.058 1151.04 L990.577 1151.04 L991.097 1151.04 L991.617 1151.04 L992.136 1151.04 L992.656 1151.04 L993.175 1151.04 L993.695 1151.04 L994.214 1151.04 L994.734 1151.04 L995.253 1151.04 L995.773 1151.04 L996.292 1151.04 L996.812 1151.04 L997.331 1151.04 L997.851 1151.04 L998.371 1151.04 L998.89 1151.04 L999.41 1151.04 L999.929 1151.04 L1000.45 1151.04 L1000.97 1151.04 L1001.49 1151.04 L1002.01 1151.04 L1002.53 1151.04 L1003.05 1151.04 L1003.57 1151.04 L1004.09 1151.04 L1004.61 1151.04 L1005.12 1151.04 L1005.64 1151.04 L1006.16 1151.04 L1006.68 1151.04 L1007.2 1151.04 L1007.72 1151.04 L1008.24 1151.04 L1008.76 1151.04 L1009.28 1151.04 L1009.8 1151.04 L1010.32 1151.04 L1010.84 1151.04 L1011.36 1151.04 L1011.88 1151.04 L1012.4 1151.04 L1012.92 1151.04 L1013.44 1151.04 L1013.96 1151.04 L1014.48 1151.04 L1015 1151.04 L1015.52 1151.04 L1016.03 1151.04 L1016.55 1151.04 L1017.07 1151.04 L1017.59 1151.04 L1018.11 1151.04 L1018.63 1151.04 L1019.15 1151.04 L1019.67 1151.04 L1020.19 1151.04 L1020.71 1151.04 L1021.23 1151.04 L1021.75 1151.04 L1022.27 1151.04 L1022.79 1151.04 L1023.31 1151.04 L1023.83 1151.04 L1024.35 1151.04 L1024.87 1151.04 L1025.39 1151.04 L1025.91 1151.04 L1026.43 1151.04 L1026.95 1151.04 L1027.46 1151.04 L1027.98 1151.04 L1028.5 1151.04 L1029.02 1151.04 L1029.54 1151.04 L1030.06 1151.04 L1030.58 1151.04 L1031.1 1151.04 L1031.62 1151.04 L1032.14 1151.04 L1032.66 1151.04 L1033.18 1151.04 L1033.7 1151.04 L1034.22 1151.04 L1034.74 1151.04 L1035.26 1151.04 L1035.78 1151.04 L1036.3 1151.04 L1036.82 1151.04 L1037.34 1151.04 L1037.86 1151.04 L1038.38 1151.04 L1038.89 1151.04 L1039.41 1151.04 L1039.93 1151.04 L1040.45 1151.04 L1040.97 1151.04 L1041.49 1151.04 L1042.01 1151.04 L1042.53 1151.04 L1043.05 1151.04 L1043.57 1151.04 L1044.09 1151.04 L1044.61 1151.04 L1045.13 1151.04 L1045.65 1151.04 L1046.17 1151.04 L1046.69 1151.04 L1047.21 1151.04 L1047.73 1151.04 L1048.25 1151.04 L1048.77 1151.04 L1049.29 1151.04 L1049.81 1151.04 L1050.32 1151.04 L1050.84 1151.04 L1051.36 1151.04 L1051.88 1151.04 L1052.4 1151.04 L1052.92 1151.04 L1053.44 1151.04 L1053.96 1151.04 L1054.48 1151.04 L1055 1151.04 L1055.52 1151.04 L1056.04 1151.04 L1056.56 1151.04 L1057.08 1151.04 L1057.6 1151.04 L1058.12 1151.04 L1058.64 1151.04 L1059.16 1151.04 L1059.68 1151.04 L1060.2 1151.04 L1060.72 1151.04 L1061.24 1151.04 L1061.75 1151.04 L1062.27 1151.04 L1062.79 1151.04 L1063.31 1151.04 L1063.83 1151.04 L1064.35 1151.04 L1064.87 1151.04 L1065.39 1151.04 L1065.91 1151.04 L1066.43 1151.04 L1066.95 1151.04 L1067.47 1151.04 L1067.99 1151.04 L1068.51 1151.04 L1069.03 1151.04 L1069.55 1151.04 L1070.07 1151.04 L1070.59 1151.04 L1071.11 1151.04 L1071.63 1151.04 L1072.15 1151.04 L1072.66 1151.04 L1073.18 1151.04 L1073.7 1151.04 L1074.22 1151.04 L1074.74 1151.04 L1075.26 1151.04 L1075.78 1151.04 L1076.3 1151.04 L1076.82 1151.04 L1077.34 1151.04 L1077.86 1151.04 L1078.38 1151.04 L1078.9 1151.04 L1079.42 1151.04 L1079.94 1151.04 L1080.46 1151.04 L1080.98 1151.04 L1081.5 1151.04 L1082.02 1151.04 L1082.54 1151.04 L1083.06 1151.04 L1083.58 1151.04 L1084.09 1151.04 L1084.61 1151.04 L1085.13 1151.04 L1085.65 1151.04 L1086.17 1151.04 L1086.69 1151.04 L1087.21 1151.04 L1087.73 1151.04 L1088.25 1151.04 L1088.77 1151.04 L1089.29 1151.04 L1089.81 1151.04 L1090.33 1151.04 L1090.85 1151.04 L1091.37 1151.04 L1091.89 1151.04 L1092.41 1151.04 L1092.93 1151.04 L1093.45 1151.04 L1093.97 1151.04 L1094.49 1151.04 L1095.01 1151.04 L1095.52 1151.04 L1096.04 1151.04 L1096.56 1151.04 L1097.08 1151.04 L1097.6 1151.04 L1098.12 1151.04 L1098.64 1151.04 L1099.16 1151.04 L1099.68 1151.04 L1100.2 1151.04 L1100.72 1151.04 L1101.24 1151.04 L1101.76 1151.04 L1102.28 1151.04 L1102.8 1151.04 L1103.32 1151.04 L1103.84 1151.04 L1104.36 1151.04 L1104.88 1151.04 L1105.4 1151.04 L1105.92 1151.04 L1106.44 1151.04 L1106.95 1151.04 L1107.47 1151.04 L1107.99 1151.04 L1108.51 1151.04 L1109.03 1151.04 L1109.55 1151.04 L1110.07 1151.04 L1110.59 1151.04 L1111.11 1151.04 L1111.63 1151.04 L1112.15 1151.04 L1112.67 1151.04 L1113.19 1151.04 L1113.71 1151.04 L1114.23 1151.04 L1114.75 1151.04 L1115.27 1151.04 L1115.79 1151.04 L1116.31 1151.04 L1116.83 1151.04 L1117.35 1151.04 L1117.87 1151.04 L1118.38 1151.04 L1118.9 1151.04 L1119.42 1151.04 L1119.94 1151.04 L1120.46 1151.04 L1120.98 1151.04 L1121.5 1151.04 L1122.02 1151.04 L1122.54 1151.04 L1123.06 1151.04 L1123.58 1151.04 L1124.1 1151.04 L1124.62 1151.04 L1125.14 1151.04 L1125.66 1151.04 L1126.18 1151.04 L1126.7 1151.04 L1127.22 1151.04 L1127.74 1151.04 L1128.26 1151.04 L1128.78 1151.04 L1129.29 1151.04 L1129.81 1151.04 L1130.33 1151.04 L1130.85 1151.04 L1131.37 1151.04 L1131.89 1151.04 L1132.41 1151.04 L1132.93 1151.04 L1133.45 1151.04 L1133.97 1151.04 L1134.49 1151.04 L1135.01 1151.04 L1135.53 1151.04 L1136.05 1151.04 L1136.57 1151.04 L1137.09 1151.04 L1137.61 1151.04 L1138.13 1151.04 L1138.65 1151.04 L1139.17 1151.04 L1139.69 1151.04 L1140.21 1151.04 L1140.72 1151.04 L1141.24 1151.04 L1141.76 1151.04 L1142.28 1151.04 L1142.8 1151.04 L1143.32 1151.04 L1143.84 1151.04 L1144.36 1151.04 L1144.88 1151.04 L1145.4 1151.04 L1145.92 1151.04 L1146.44 1151.04 L1146.96 1151.04 L1147.48 1151.04 L1148 1151.04 L1148.52 1151.04 L1149.04 1151.04 L1149.56 1151.04 L1150.08 1151.04 L1150.6 1151.04 L1151.12 1151.04 L1151.64 1151.04 L1152.15 1151.04 L1152.67 1151.04 L1153.19 1151.04 L1153.71 1151.04 L1154.23 1151.04 L1154.75 1151.04 L1155.27 1151.04 L1155.79 1151.04 L1156.31 1151.04 L1156.83 1151.04 L1157.35 1151.04 L1157.87 1151.04 L1158.39 1151.04 L1158.91 1151.04 L1159.43 1151.04 L1159.95 1151.04 L1160.47 1151.04 L1160.99 1151.04 L1161.51 1151.04 L1162.03 1151.04 L1162.55 1151.04 L1163.07 1151.04 L1163.58 1151.04 L1164.1 1151.04 L1164.62 1151.04 L1165.14 1151.04 L1165.66 1151.04 L1166.18 1151.04 L1166.7 1151.04 L1167.22 1151.04 L1167.74 1151.04 L1168.26 1151.04 L1168.78 1151.04 L1169.3 1151.04 L1169.82 1151.04 L1170.34 1151.04 L1170.86 1151.04 L1171.38 1151.04 L1171.9 1151.04 L1172.42 1151.04 L1172.94 1151.04 L1173.46 1151.04 L1173.98 1151.04 L1174.5 1151.04 L1175.01 1151.04 L1175.53 1151.04 L1176.05 1151.04 L1176.57 1151.04 L1177.09 1151.04 L1177.61 1151.04 L1178.13 1151.04 L1178.65 1151.04 L1179.17 1151.04 L1179.69 1151.04 L1180.21 1151.04 L1180.73 1151.04 L1181.25 1151.04 L1181.77 1151.04 L1182.29 1151.04 L1182.81 1151.04 L1183.33 1151.04 L1183.85 1151.04 L1184.37 1151.04 L1184.89 1151.04 L1185.41 1151.04 L1185.92 1151.04 L1186.44 1151.04 L1186.96 1151.04 L1187.48 1151.04 L1188 1151.04 L1188.52 1151.04 L1189.04 1151.04 L1189.56 1151.04 L1190.08 1151.04 L1190.6 1151.04 L1191.12 1151.04 L1191.64 1151.04 L1192.16 1151.04 L1192.68 1151.04 L1193.2 1151.04 L1193.72 1151.04 L1194.24 1151.04 L1194.76 1151.04 L1195.28 1151.04 L1195.8 1151.04 L1196.32 1151.04 L1196.84 1151.04 L1197.35 1151.04 L1197.87 1151.04 L1198.39 1151.04 L1198.91 1151.04 L1199.43 1151.04 L1199.95 1151.04 L1200.47 1151.04 L1200.99 1151.04 L1201.51 1151.04 L1202.03 1151.04 L1202.55 1151.04 L1203.07 1151.04 L1203.59 1151.04 L1204.11 1151.04 L1204.63 1151.04 L1205.15 1151.04 L1205.67 1151.04 L1206.19 1151.04 L1206.71 1151.04 L1207.23 1151.04 L1207.75 1151.04 L1208.27 1151.04 L1208.78 1151.04 L1209.3 1151.04 L1209.82 1151.04 L1210.34 1151.04 L1210.86 1151.04 L1211.38 1151.04 L1211.9 1151.04 L1212.42 1151.04 L1212.94 1151.04 L1213.46 1151.04 L1213.98 1151.04 L1214.5 1151.04 L1215.02 1151.04 L1215.54 1151.04 L1216.06 1151.04 L1216.58 1151.04 L1217.1 1151.04 L1217.62 1151.04 L1218.14 1151.04 L1218.66 1151.04 L1219.18 1151.04 L1219.7 1151.04 L1220.21 1151.04 L1220.73 1151.04 L1221.25 1151.04 L1221.77 1151.04 L1222.29 1151.04 L1222.81 1151.04 L1223.33 1151.04 L1223.85 1151.04 L1224.37 1151.04 L1224.89 1151.04 L1225.41 1151.04 L1225.93 1151.04 L1226.45 1151.04 L1226.97 1151.04 L1227.49 1151.04 L1228.01 1151.04 L1228.53 1151.04 L1229.05 1151.04 L1229.57 1151.04 L1230.09 1151.04 L1230.61 1151.04 L1231.13 1151.04 L1231.64 1151.04 L1232.16 1151.04 L1232.68 1151.04 L1233.2 1151.04 L1233.72 1151.04 L1234.24 1151.04 L1234.76 1151.04 L1235.28 1151.04 L1235.8 1151.04 L1236.32 1151.04 L1236.84 1151.04 L1237.36 1151.04 L1237.88 1151.04 L1238.4 1151.04 L1238.92 1151.04 L1239.44 1151.04 L1239.96 1151.04 L1240.48 1151.04 L1241 1151.04 L1241.52 1151.04 L1242.04 1151.04 L1242.55 1151.04 L1243.07 1151.04 L1243.59 1151.04 L1244.11 1151.04 L1244.63 1151.04 L1245.15 1151.04 L1245.67 1151.04 L1246.19 1151.04 L1246.71 1151.04 L1247.23 1151.04 L1247.75 1151.04 L1248.27 1151.04 L1248.79 1151.04 L1249.31 1151.04 L1249.83 1151.04 L1250.35 1151.04 L1250.87 1151.04 L1251.39 1151.04 L1251.91 1151.04 L1252.43 1151.04 L1252.95 1151.04 L1253.47 1151.04 L1253.98 1151.04 L1254.5 1151.04 L1255.02 1151.04 L1255.54 1151.04 L1256.06 1151.04 L1256.58 1151.04 L1257.1 1151.04 L1257.62 1151.04 L1258.14 1151.04 L1258.66 1151.04 L1259.18 1151.04 L1259.7 1151.04 L1260.22 1151.04 L1260.74 1151.04 L1261.26 1151.04 L1261.78 1151.04 L1262.3 1151.04 L1262.82 1151.04 L1263.34 1151.04 L1263.86 1151.04 L1264.38 1151.04 L1264.9 1151.04 L1265.41 1151.04 L1265.93 1151.04 L1266.45 1151.04 L1266.97 1151.04 L1267.49 1151.04 L1268.01 1151.04 L1268.53 1151.04 L1269.05 1151.04 L1269.57 1151.04 L1270.09 1151.04 L1270.61 1151.04 L1271.13 1151.04 L1271.65 1151.04 L1272.17 1151.04 L1272.69 1151.04 L1273.21 1151.04 L1273.73 1151.04 L1274.25 1151.04 L1274.77 1151.04 L1275.29 1151.04 L1275.81 1151.04 L1276.33 1151.04 L1276.84 1151.04 L1277.36 1151.04 L1277.88 1151.04 L1278.4 1151.04 L1278.92 1151.04 L1279.44 1151.04 L1279.96 1151.04 L1280.48 1151.04 L1281 1151.04 L1281.52 1151.04 L1282.04 1151.04 L1282.56 1151.04 L1283.08 1151.04 L1283.6 1151.04 L1284.12 1151.04 L1284.64 1151.04 L1285.16 1151.04 L1285.68 1151.04 L1286.2 1151.04 L1286.72 1151.04 L1287.24 1151.04 L1287.76 1151.04 L1288.27 1151.04 L1288.79 1151.04 L1289.31 1151.04 L1289.83 1151.04 L1290.35 1151.04 L1290.87 1151.04 L1291.39 1151.04 L1291.91 1151.04 L1292.43 1151.04 L1292.95 1151.04 L1293.47 1151.04 L1293.99 1151.04 L1294.51 1151.04 L1295.03 1151.04 L1295.55 1151.04 L1296.07 1151.04 L1296.59 1151.04 L1297.11 1151.04 L1297.63 1151.04 L1298.15 1151.04 L1298.67 1151.04 L1299.18 1151.04 L1299.7 1151.04 L1300.22 1151.04 L1300.74 1151.04 L1301.26 1151.04 L1301.78 1151.04 L1302.3 1151.04 L1302.82 1151.04 L1303.34 1151.04 L1303.86 1151.04 L1304.38 1151.04 L1304.9 1151.04 L1305.42 1151.04 L1305.94 1151.04 L1306.46 1151.04 L1306.98 1151.04 L1307.5 1151.04 L1308.02 1151.04 L1308.54 1151.04 L1309.06 1151.04 L1309.58 1151.04 L1310.1 1151.04 L1310.61 1151.04 L1311.13 1151.04 L1311.65 1151.04 L1312.17 1151.04 L1312.69 1151.04 L1313.21 1151.04 L1313.73 1151.04 L1314.25 1151.04 L1314.77 1151.04 L1315.29 1151.04 L1315.81 1151.04 L1316.33 1151.04 L1316.85 1151.04 L1317.37 1151.04 L1317.89 1151.04 L1318.41 1151.04 L1318.93 1151.04 L1319.45 1151.04 L1319.97 1151.04 L1320.49 1151.04 L1321.01 1151.04 L1321.53 1151.04 L1322.04 1151.04 L1322.56 1151.04 L1323.08 1151.04 L1323.6 1151.04 L1324.12 1151.04 L1324.64 1151.04 L1325.16 1151.04 L1325.68 1151.04 L1326.2 1151.04 L1326.72 1151.04 L1327.24 1151.04 L1327.76 1151.04 L1328.28 1151.04 L1328.8 1151.04 L1329.32 1151.04 L1329.84 1151.04 L1330.36 1151.04 L1330.88 1151.04 L1331.4 1151.04 L1331.92 1151.04 L1332.44 1151.04 L1332.96 1151.04 L1333.47 1151.04 L1333.99 1151.04 L1334.51 1151.04 L1335.03 1151.04 L1335.55 1151.04 L1336.07 1151.04 L1336.59 1151.04 L1337.11 1151.04 L1337.63 1151.04 L1338.15 1151.04 L1338.67 1151.04 L1339.19 1151.04 L1339.71 1151.04 L1340.23 1151.04 L1340.75 1151.04 L1341.27 1151.04 L1341.79 1151.04 L1342.31 1151.04 L1342.83 1151.04 L1343.35 1151.04 L1343.87 1151.04 L1344.39 1151.04 L1344.9 1151.04 L1345.42 1151.04 L1345.94 1151.04 L1346.46 1151.04 L1346.98 1151.04 L1347.5 1151.04 L1348.02 1151.04 L1348.54 1151.04 L1349.06 1151.04 L1349.58 1151.04 L1350.1 1151.04 L1350.62 1151.04 L1351.14 1151.04 L1351.66 1151.04 L1352.18 1151.04 L1352.7 1151.04 L1353.22 1151.04 L1353.74 1151.04 L1354.26 1151.04 L1354.78 1151.04 L1355.3 1151.04 L1355.81 1151.04 L1356.33 1151.04 L1356.85 1151.04 L1357.37 1151.04 L1357.89 1151.04 L1358.41 1151.04 L1358.93 1151.04 L1359.45 1151.04 L1359.97 1151.04 L1360.49 1151.04 L1361.01 1151.04 L1361.53 1151.04 L1362.05 1151.04 L1362.57 1151.04 L1363.09 1151.04 L1363.61 1151.04 L1364.13 1151.04 L1364.65 1151.04 L1365.17 1151.04 L1365.69 1151.04 L1366.21 1151.04 L1366.73 1151.04 L1367.24 1151.04 L1367.76 1151.04 L1368.28 1151.04 L1368.8 1151.04 L1369.32 1151.04 L1369.84 1151.04 L1370.36 1151.04 L1370.88 1151.04 L1371.4 1151.04 L1371.92 1151.04 L1372.44 1151.04 L1372.96 1151.04 L1373.48 1151.04 L1374 1151.04 L1374.52 1151.04 L1375.04 1151.04 L1375.56 1151.04 L1376.08 1151.04 L1376.6 1151.04 L1377.12 1151.04 L1377.64 1151.04 L1378.16 1151.04 L1378.67 1151.04 L1379.19 1151.04 L1379.71 1151.04 L1380.23 1151.04 L1380.75 1151.04 L1381.27 1151.04 L1381.79 1151.04 L1382.31 1151.04 L1382.83 1151.04 L1383.35 1151.04 L1383.87 1151.04 L1384.39 1151.04 L1384.91 1151.04 L1385.43 1151.04 L1385.95 1151.04 L1386.47 1151.04 L1386.99 1151.04 L1387.51 1151.04 L1388.03 1151.04 L1388.55 1151.04 L1389.07 1151.04 L1389.59 1151.04 L1390.1 1151.04 L1390.62 1151.04 L1391.14 1151.04 L1391.66 1151.04 L1392.18 1151.04 L1392.7 1151.04 L1393.22 1151.04 L1393.74 1151.04 L1394.26 1151.04 L1394.78 1151.04 L1395.3 1151.04 L1395.82 1151.04 L1396.34 1151.04 L1396.86 1151.04 L1397.38 1151.04 L1397.9 1151.04 L1398.42 1151.04 L1398.94 1151.04 L1399.46 1151.04 L1399.98 1151.04 L1400.5 1151.04 L1401.02 1151.04 L1401.53 1151.04 L1402.05 1151.04 L1402.57 1151.04 L1403.09 1151.04 L1403.61 1151.04 L1404.13 1151.04 L1404.65 1151.04 L1405.17 1151.04 L1405.69 1151.04 L1406.21 1151.04 L1406.73 1151.04 L1407.25 1151.04 L1407.77 1151.04 L1408.29 1151.04 L1408.81 1151.04 L1409.33 1151.04 L1409.85 1151.04 L1410.37 1151.04 L1410.89 1151.04 L1411.41 1151.04 L1411.93 1151.04 L1412.44 1151.04 L1412.96 1151.04 L1413.48 1151.04 L1414 1151.04 L1414.52 1151.04 L1415.04 1151.04 L1415.56 1151.04 L1416.08 1151.04 L1416.6 1151.04 L1417.12 1151.04 L1417.64 1151.04 L1418.16 1151.04 L1418.68 1151.04 L1419.2 1151.04 L1419.72 1151.04 L1420.24 1151.04 L1420.76 1151.04 L1421.28 1151.04 L1421.8 1151.04 L1422.32 1151.04 L1422.84 1151.04 L1423.36 1151.04 L1423.87 1151.04 L1424.39 1151.04 L1424.91 1151.04 L1425.43 1151.04 L1425.95 1151.04 L1426.47 1151.04 L1426.99 1151.04 L1427.51 1151.04 L1428.03 1151.04 L1428.55 1151.04 L1429.07 1151.04 L1429.59 1151.04 L1430.11 1151.04 L1430.63 1151.04 L1431.15 1151.04 L1431.67 1151.04 L1432.19 1151.04 L1432.71 1151.04 L1433.23 1151.04 L1433.75 1151.04 L1434.27 1151.04 L1434.79 1151.04 L1435.3 1151.04 L1435.82 1151.04 L1436.34 1151.04 L1436.86 1151.04 L1437.38 1151.04 L1437.9 1151.04 L1438.42 1151.04 L1438.94 1151.04 L1439.46 1151.04 L1439.98 1151.04 L1440.5 1151.04 L1441.02 1151.04 L1441.54 1151.04 L1442.06 1151.04 L1442.58 1151.04 L1443.1 1151.04 L1443.62 1151.04 L1444.14 1151.04 L1444.66 1151.04 L1445.18 1151.04 L1445.7 1151.04 L1446.22 1151.04 L1446.73 1151.04 L1447.25 1151.04 L1447.77 1151.04 L1448.29 1151.04 L1448.81 1151.04 L1449.33 1151.04 L1449.85 1151.04 L1450.37 1151.04 L1450.89 1151.04 L1451.41 1151.04 L1451.93 1151.04 L1452.45 1151.04 L1452.97 1151.04 L1453.49 1151.04 L1454.01 1151.04 L1454.53 1151.04 L1455.05 1151.04 L1455.57 1151.04 L1456.09 1151.04 L1456.61 1151.04 L1457.13 1151.04 L1457.65 1151.04 L1458.16 1151.04 L1458.68 1151.04 L1459.2 1151.04 L1459.72 1151.04 L1460.24 1151.04 L1460.76 1151.04 L1461.28 1151.04 L1461.8 1151.04 L1462.32 1151.04 L1462.84 1151.04 L1463.36 1151.04 L1463.88 1151.04 L1464.4 1151.04 L1464.92 1151.04 L1465.44 1151.04 L1465.96 1151.04 L1466.48 1151.04 L1467 1151.04 L1467.52 1151.04 L1468.04 1151.04 L1468.56 1151.04 L1469.07 1151.04 L1469.59 1151.04 L1470.11 1151.04 L1470.63 1151.04 L1471.15 1151.04 L1471.67 1151.04 L1472.19 1151.04 L1472.71 1151.04 L1473.23 1151.04 L1473.75 1151.04 L1474.27 1151.04 L1474.79 1151.04 L1475.31 1151.04 L1475.83 1151.04 L1476.35 1151.04 L1476.87 1151.04 L1477.39 1151.04 L1477.91 1151.04 L1478.43 1151.04 L1478.95 1151.04 L1479.47 1151.04 L1479.99 1151.04 L1480.5 1151.04 L1481.02 1151.04 L1481.54 1151.04 L1482.06 1151.04 L1482.58 1151.04 L1483.1 1151.04 L1483.62 1151.04 L1484.14 1151.04 L1484.66 1151.04 L1485.18 1151.04 L1485.7 1151.04 L1486.22 1151.04 L1486.74 1151.04 L1487.26 1151.04 L1487.78 1151.04 L1488.3 1151.04 L1488.82 1151.04 L1489.34 1151.04 L1489.86 1151.04 L1490.38 1151.04 L1490.9 1151.04 L1491.42 1151.04 L1491.93 1151.04 L1492.45 1151.04 L1492.97 1151.04 L1493.49 1151.04 L1494.01 1151.04 L1494.53 1151.04 L1495.05 1151.04 L1495.57 1151.04 L1496.09 1151.04 L1496.61 1151.04 L1497.13 1151.04 L1497.65 1151.04 L1498.17 1151.04 L1498.69 1151.04 L1499.21 1151.04 L1499.73 1151.04 L1500.25 1151.04 L1500.77 1151.04 L1501.29 1151.04 L1501.81 1151.04 L1502.33 1151.04 L1502.85 1151.04 L1503.36 1151.04 L1503.88 1151.04 L1504.4 1151.04 L1504.92 1151.04 L1505.44 1151.04 L1505.96 1151.04 L1506.48 1151.04 L1507 1151.04 L1507.52 1151.04 L1508.04 1151.04 L1508.56 1151.04 L1509.08 1151.04 L1509.6 1151.04 L1510.12 1151.04 L1510.64 1151.04 L1511.16 1151.04 L1511.68 1151.04 L1512.2 1151.04 L1512.72 1151.04 L1513.24 1151.04 L1513.76 1151.04 L1514.28 1151.04 L1514.79 1151.04 L1515.31 1151.04 L1515.83 1151.04 L1516.35 1151.04 L1516.87 1151.04 L1517.39 1151.04 L1517.91 1151.04 L1518.43 1151.04 L1518.95 1151.04 L1519.47 1151.04 L1519.99 1151.04 L1520.51 1151.04 L1521.03 1151.04 L1521.55 1151.04 L1522.07 1151.04 L1522.59 1151.04 L1523.11 1151.04 L1523.63 1151.04 L1524.15 1151.04 L1524.67 1151.04 L1525.19 1151.04 L1525.7 1151.04 L1526.22 1151.04 L1526.74 1151.04 L1527.26 1151.04 L1527.78 1151.04 L1528.3 1151.04 L1528.82 1151.04 L1529.34 1151.04 L1529.86 1151.04 L1530.38 1151.04 L1530.9 1151.04 L1531.42 1151.04 L1531.94 1151.04 L1532.46 1151.04 L1532.98 1151.04 L1533.5 1151.04 L1534.02 1151.04 L1534.54 1151.04 L1535.06 1151.04 L1535.58 1151.04 L1536.1 1151.04 L1536.62 1151.04 L1537.13 1151.04 L1537.65 1151.04 L1538.17 1151.04 L1538.69 1151.04 L1539.21 1151.04 L1539.73 1151.04 L1540.25 1151.04 L1540.77 1151.04 L1541.29 1151.04 L1541.81 1151.04 L1542.33 1151.04 L1542.85 1151.04 L1543.37 1151.04 L1543.89 1151.04 L1544.41 1151.04 L1544.93 1151.04 L1545.45 1151.04 L1545.97 1151.04 L1546.49 1151.04 L1547.01 1151.04 L1547.53 1151.04 L1548.05 1151.04 L1548.56 1151.04 L1549.08 1151.04 L1549.6 1151.04 L1550.12 1151.04 L1550.64 1151.04 L1551.16 1151.04 L1551.68 1151.04 L1552.2 1151.04 L1552.72 1151.04 L1553.24 1151.04 L1553.76 1151.04 L1554.28 1151.04 L1554.8 1151.04 L1555.32 1151.04 L1555.84 1151.04 L1556.36 1151.04 L1556.88 1151.04 L1557.4 1151.04 L1557.92 1151.04 L1558.44 1151.04 L1558.96 1151.04 L1559.48 1151.04 L1559.99 1151.04 L1560.51 1151.04 L1561.03 1151.04 L1561.55 1151.04 L1562.07 1151.04 L1562.59 1151.04 L1563.11 1151.04 L1563.63 1151.04 L1564.15 1151.04 L1564.67 1151.04 L1565.19 1151.04 L1565.71 1151.04 L1566.23 1151.04 L1566.75 1151.04 L1567.27 1151.04 L1567.79 1151.04 L1568.31 1151.04 L1568.83 1151.04 L1569.35 1151.04 L1569.87 1151.04 L1570.39 1151.04 L1570.91 1151.04 L1571.42 1151.04 L1571.94 1151.04 L1572.46 1151.04 L1572.98 1151.04 L1573.5 1151.04 L1574.02 1151.04 L1574.54 1151.04 L1575.06 1151.04 L1575.58 1151.04 L1576.1 1151.04 L1576.62 1151.04 L1577.14 1151.04 L1577.66 1151.04 L1578.18 1151.04 L1578.7 1151.04 L1579.22 1151.04 L1579.74 1151.04 L1580.26 1151.04 L1580.78 1151.04 L1581.3 1151.04 L1581.82 1151.04 L1582.33 1151.04 L1582.85 1151.04 L1583.37 1151.04 L1583.89 1151.04 L1584.41 1151.04 L1584.93 1151.04 L1585.45 1151.04 L1585.97 1151.04 L1586.49 1151.04 L1587.01 1151.04 L1587.53 1151.04 L1588.05 1151.04 L1588.57 1151.04 L1589.09 1151.04 L1589.61 1151.04 L1590.13 1151.04 L1590.65 1151.04 L1591.17 1151.04 L1591.69 1151.04 L1592.21 1151.04 L1592.73 1151.04 L1593.25 1151.04 L1593.76 1151.04 L1594.28 1151.04 L1594.8 1151.04 L1595.32 1151.04 L1595.84 1151.04 L1596.36 1151.04 L1596.88 1151.04 L1597.4 1151.04 L1597.92 1151.04 L1598.44 1151.04 L1598.96 1151.04 L1599.48 1151.04 L1600 1151.04 L1600.52 1151.04 L1601.04 1151.04 L1601.56 1151.04 L1602.08 1151.04 L1602.6 1151.04 L1603.12 1151.04 L1603.64 1151.04 L1604.16 1151.04 L1604.68 1151.04 L1605.19 1151.04 L1605.71 1151.04 L1606.23 1151.04 L1606.75 1151.04 L1607.27 1151.04 L1607.79 1151.04 L1608.31 1151.04 L1608.83 1151.04 L1609.35 1151.04 L1609.87 1151.04 L1610.39 1151.04 L1610.91 1151.04 L1611.43 1151.04 L1611.95 1151.04 L1612.47 1151.04 L1612.99 1151.04 L1613.51 1151.04 L1614.03 1151.04 L1614.55 1151.04 L1615.07 1151.04 L1615.59 1151.04 L1616.11 1151.04 L1616.62 1151.04 L1617.14 1151.04 L1617.66 1151.04 L1618.18 1151.04 L1618.7 1151.04 L1619.22 1151.04 L1619.74 1151.04 L1620.26 1151.04 L1620.78 1151.04 L1621.3 1151.04 L1621.82 1151.04 L1622.34 1151.04 L1622.86 1151.04 L1623.38 1151.04 L1623.9 1151.04 L1624.42 1151.04 L1624.94 1151.04 L1625.46 1151.04 L1625.98 1151.04 L1626.5 1151.04 L1627.02 1151.04 L1627.54 1151.04 L1628.05 1151.04 L1628.57 1151.04 L1629.09 1151.04 L1629.61 1151.04 L1630.13 1151.04 L1630.65 1151.04 L1631.17 1151.04 L1631.69 1151.04 L1632.21 1151.04 L1632.73 1151.04 L1633.25 1151.04 L1633.77 1151.04 L1634.29 1151.04 L1634.81 1151.04 L1635.33 1151.04 L1635.85 1151.04 L1636.37 1151.04 L1636.89 1151.04 L1637.41 1151.04 L1637.93 1151.04 L1638.45 1151.04 L1638.96 1151.04 L1639.48 1151.04 L1640 1151.04 L1640.52 1151.04 L1641.04 1151.04 L1641.56 1151.04 L1642.08 1151.04 L1642.6 1151.04 L1643.12 1151.04 L1643.64 1151.04 L1644.16 1151.04 L1644.68 1151.04 L1645.2 1151.04 L1645.72 1151.04 L1646.24 1151.04 L1646.76 1151.04 L1647.28 1151.04 L1647.8 1151.04 L1648.32 1151.04 L1648.84 1151.04 L1649.36 1151.04 L1649.88 1151.04 L1650.39 1151.04 L1650.91 1151.04 L1651.43 1151.04 L1651.95 1151.04 L1652.47 1151.04 L1652.99 1151.04 L1653.51 1151.04 L1654.03 1151.04 L1654.55 1151.04 L1655.07 1151.04 L1655.59 1151.04 L1656.11 1151.04 L1656.63 1151.04 L1657.15 1151.04 L1657.67 1151.04 L1658.19 1151.04 L1658.71 1151.04 L1659.23 1151.04 L1659.75 1151.04 L1660.27 1151.04 L1660.79 1151.04 L1661.31 1151.04 L1661.82 1151.04 L1662.34 1151.04 L1662.86 1151.04 L1663.38 1151.04 L1663.9 1151.04 L1664.42 1151.04 L1664.94 1151.04 L1665.46 1151.04 L1665.98 1151.04 L1666.5 1151.04 L1667.02 1151.04 L1667.54 1151.04 L1668.06 1151.04 L1668.58 1151.04 L1669.1 1151.04 L1669.62 1151.04 L1670.14 1151.04 L1670.66 1151.04 L1671.18 1151.04 L1671.7 1151.04 L1672.22 1151.04 L1672.74 1151.04 L1673.25 1151.04 L1673.77 1151.04 L1674.29 1151.04 L1674.81 1151.04 L1675.33 1151.04 L1675.85 1151.04 L1676.37 1151.04 L1676.89 1151.04 L1677.41 1151.04 L1677.93 1151.04 L1678.45 1151.04 L1678.97 1151.04 L1679.49 1151.04 L1680.01 1151.04 L1680.53 1151.04 L1681.05 1151.04 L1681.57 1151.04 L1682.09 1151.04 L1682.61 1151.04 L1683.13 1151.04 L1683.65 1151.04 L1684.17 1151.04 L1684.68 1151.04 L1685.2 1151.04 L1685.72 1151.04 L1686.24 1151.04 L1686.76 1151.04 L1687.28 1151.04 L1687.8 1151.04 L1688.32 1151.04 L1688.84 1151.04 L1689.36 1151.04 L1689.88 1151.04 L1690.4 1151.04 L1690.92 1151.04 L1691.44 1151.04 L1691.96 1151.04 L1692.48 1151.04 L1693 1151.04 L1693.52 1151.04 L1694.04 1151.04 L1694.56 1151.04 L1695.08 1151.04 L1695.59 1151.04 L1696.11 1151.04 L1696.63 1151.04 L1697.15 1151.04 L1697.67 1151.04 L1698.19 1151.04 L1698.71 1151.04 L1699.23 1151.04 L1699.75 1151.04 L1700.27 1151.04 L1700.79 1151.04 L1701.31 1151.04 L1701.83 1151.04 L1702.35 1151.04 L1702.87 1151.04 L1703.39 1151.04 L1703.91 1151.04 L1704.43 1151.04 L1704.95 1151.04 L1705.47 1151.04 L1705.99 1151.04 L1706.51 1151.04 L1707.02 1151.04 L1707.54 1151.04 L1708.06 1151.04 L1708.58 1151.04 L1709.1 1151.04 L1709.62 1151.04 L1710.14 1151.04 L1710.66 1151.04 L1711.18 1151.04 L1711.7 1151.04 L1712.22 1151.04 L1712.74 1151.04 L1713.26 1151.04 L1713.78 1151.04 L1714.3 1151.04 L1714.82 1151.04 L1715.34 1151.04 L1715.86 1151.04 L1716.38 1151.04 L1716.9 1151.04 L1717.42 1151.04 L1717.94 1151.04 L1718.45 1151.04 L1718.97 1151.04 L1719.49 1151.04 L1720.01 1151.04 L1720.53 1151.04 L1721.05 1151.04 L1721.57 1151.04 L1722.09 1151.04 L1722.61 1151.04 L1723.13 1151.04 L1723.65 1151.04 L1724.17 1151.04 L1724.69 1151.04 L1725.21 1151.04 L1725.73 1151.04 L1726.25 1151.04 L1726.77 1151.04 L1727.29 1151.04 L1727.81 1151.04 L1728.33 1151.04 L1728.85 1151.04 L1729.37 1151.04 L1729.88 1151.04 L1730.4 1151.04 L1730.92 1151.04 L1731.44 1151.04 L1731.96 1151.04 L1732.48 1151.04 L1733 1151.04 L1733.52 1151.04 L1734.04 1151.04 L1734.56 1151.04 L1735.08 1151.04 L1735.6 1151.04 L1736.12 1151.04 L1736.64 1151.04 L1737.16 1151.04 L1737.68 1151.04 L1738.2 1151.04 L1738.72 1151.04 L1739.24 1151.04 L1739.76 1151.04 L1740.28 1151.04 L1740.8 1151.04 L1741.31 1151.04 L1741.83 1151.04 L1742.35 1151.04 L1742.87 1151.04 L1743.39 1151.04 L1743.91 1151.04 L1744.43 1151.04 L1744.95 1151.04 L1745.47 1151.04 L1745.99 1151.04 L1746.51 1151.04 L1747.03 1151.04 L1747.55 1151.04 L1748.07 1151.04 L1748.59 1151.04 L1749.11 1151.04 L1749.63 1151.04 L1750.15 1151.04 L1750.67 1151.04 L1751.19 1151.04 L1751.71 1151.04 L1752.22 1151.04 L1752.74 1151.04 L1753.26 1151.04 L1753.78 1151.04 L1754.3 1151.04 L1754.82 1151.04 L1755.34 1151.04 L1755.86 1151.04 L1756.38 1151.04 L1756.9 1151.04 L1757.42 1151.04 L1757.94 1151.04 L1758.46 1151.04 L1758.98 1151.04 L1759.5 1151.04 L1760.02 1151.04 L1760.54 1151.04 L1761.06 1151.04 L1761.58 1151.04 L1762.1 1151.04 L1762.62 1151.04 L1763.14 1151.04 L1763.65 1151.04 L1764.17 1151.04 L1764.69 1151.04 L1765.21 1151.04 L1765.73 1151.04 L1766.25 1151.04 L1766.77 1151.04 L1767.29 1151.04 L1767.81 1151.04 L1768.33 1151.04 L1768.85 1151.04 L1769.37 1151.04 L1769.89 1151.04 L1770.41 1151.04 L1770.93 1151.04 L1771.45 1151.04 L1771.97 1151.04 L1772.49 1151.04 L1773.01 1151.04 L1773.53 1151.04 L1774.05 1151.04 L1774.57 1151.04 L1775.08 1151.04 L1775.6 1151.04 L1776.12 1151.04 L1776.64 1151.04 L1777.16 1151.04 L1777.68 1151.04 L1778.2 1151.04 L1778.72 1151.04 L1779.24 1151.04 L1779.76 1151.04 L1780.28 1151.04 L1780.8 1151.04 L1781.32 1151.04 L1781.84 1151.04 L1782.36 1151.04 L1782.88 1151.04 L1783.4 1151.04 L1783.92 1151.04 L1784.44 1151.04 L1784.96 1151.04 L1785.48 1151.04 L1786 1151.04 L1786.51 1151.04 L1787.03 1151.04 L1787.55 1151.04 L1788.07 1151.04 L1788.59 1151.04 L1789.11 1151.04 L1789.63 1151.04 L1790.15 1151.04 L1790.67 1151.04 L1791.19 1151.04 L1791.71 1151.04 L1792.23 1151.04 L1792.75 1151.04 L1793.27 1151.04 L1793.79 1151.04 L1794.31 1151.04 L1794.83 1151.04 L1795.35 1151.04 L1795.87 1151.04 L1796.39 1151.04 L1796.91 1151.04 L1797.43 1151.04 L1797.94 1151.04 L1798.46 1151.04 L1798.98 1151.04 L1799.5 1151.04 L1800.02 1151.04 L1800.54 1151.04 L1801.06 1151.04 L1801.58 1151.04 L1802.1 1151.04 L1802.62 1151.04 L1803.14 1151.04 L1803.66 1151.04 L1804.18 1151.04 L1804.7 1151.04 L1805.22 1151.04 L1805.74 1151.04 L1806.26 1151.04 L1806.78 1151.04 L1807.3 1151.04 L1807.82 1151.04 L1808.34 1151.04 L1808.85 1151.04 L1809.37 1151.04 L1809.89 1151.04 L1810.41 1151.04 L1810.93 1151.04 L1811.45 1151.04 L1811.97 1151.04 L1812.49 1151.04 L1813.01 1151.04 L1813.53 1151.04 L1814.05 1151.04 L1814.57 1151.04 L1815.09 1151.04 L1815.61 1151.04 L1816.13 1151.04 L1816.65 1151.04 L1817.17 1151.04 L1817.69 1151.04 L1818.21 1151.04 L1818.73 1151.04 L1819.25 1151.04 L1819.77 1151.04 L1820.28 1151.04 L1820.8 1151.04 L1821.32 1151.04 L1821.84 1151.04 L1822.36 1151.04 L1822.88 1151.04 L1823.4 1151.04 L1823.92 1151.04 L1824.44 1151.04 L1824.96 1151.04 L1825.48 1151.04 L1826 1151.04 L1826.52 1151.04 L1827.04 1151.04 L1827.56 1151.04 L1828.08 1151.04 L1828.6 1151.04 L1829.12 1151.04 L1829.64 1151.04 L1830.16 1151.04 L1830.68 1151.04 L1831.2 1151.04 L1831.71 1151.04 L1832.23 1151.04 L1832.75 1151.04 L1833.27 1151.04 L1833.79 1151.04 L1834.31 1151.04 L1834.83 1151.04 L1835.35 1151.04 L1835.87 1151.04 L1836.39 1151.04 L1836.91 1151.04 L1837.43 1151.04 L1837.95 1151.04 L1838.47 1151.04 L1838.99 1151.04 L1839.51 1151.04 L1840.03 1151.04 L1840.55 1151.04 L1841.07 1151.04 L1841.59 1151.04 L1842.11 1151.04 L1842.63 1151.04 L1843.14 1151.04 L1843.66 1151.04 L1844.18 1151.04 L1844.7 1151.04 L1845.22 1151.04 L1845.74 1151.04 L1846.26 1151.04 L1846.78 1151.04 L1847.3 1151.04 L1847.82 1151.04 L1848.34 1151.04 L1848.86 1151.04 L1849.38 1151.04 L1849.9 1151.04 L1850.42 1151.04 L1850.94 1151.04 L1851.46 1151.04 L1851.98 1151.04 L1852.5 1151.04 L1853.02 1151.04 L1853.54 1151.04 L1854.06 1151.04 L1854.57 1151.04 L1855.09 1151.04 L1855.61 1151.04 L1856.13 1151.04 L1856.65 1151.04 L1857.17 1151.04 L1857.69 1151.04 L1858.21 1151.04 L1858.73 1151.04 L1859.25 1151.04 L1859.77 1151.04 L1860.29 1151.04 L1860.81 1151.04 L1861.33 1151.04 L1861.85 1151.04 L1862.37 1151.04 L1862.89 1151.04 L1863.41 1151.04 L1863.93 1151.04 L1864.45 1151.04 L1864.97 1151.04 L1865.48 1151.04 L1866 1151.04 L1866.52 1151.04 L1867.04 1151.04 L1867.56 1151.04 L1868.08 1151.04 L1868.6 1151.04 L1869.12 1151.04 L1869.64 1151.04 L1870.16 1151.04 L1870.68 1151.04 L1871.2 1151.04 L1871.72 1151.04 L1872.24 1151.04 L1872.76 1151.04 L1873.28 1151.04 L1873.8 1151.04 L1874.32 1151.04 L1874.84 1151.04 L1875.36 1151.04 L1875.88 1151.04 L1876.4 1151.04 L1876.91 1151.04 L1877.43 1151.04 L1877.95 1151.04 L1878.47 1151.04 L1878.99 1151.04 L1879.51 1151.04 L1880.03 1151.04 L1880.55 1151.04 L1881.07 1151.04 L1881.59 1151.04 L1882.11 1151.04 L1882.63 1151.04 L1883.15 1151.04 L1883.67 1151.04 L1884.19 1151.04 L1884.71 1151.04 L1885.23 1151.04 L1885.75 1151.04 L1886.27 1151.04 L1886.79 1151.04 L1887.31 1151.04 L1887.83 1151.04 L1888.34 1151.04 L1888.86 1151.04 L1889.38 1151.04 L1889.9 1151.04 L1890.42 1151.04 L1890.94 1151.04 L1891.46 1151.04 L1891.98 1151.04 L1892.5 1151.04 L1893.02 1151.04 L1893.54 1151.04 L1894.06 1151.04 L1894.58 1151.04 L1895.1 1151.04 L1895.62 1151.04 L1896.14 1151.04 L1896.66 1151.04 L1897.18 1151.04 L1897.7 1151.04 L1898.22 1151.04 L1898.74 1151.04 L1899.26 1151.04 L1899.77 1151.04 L1900.29 1151.04 L1900.81 1151.04 L1901.33 1151.04 L1901.85 1151.04 L1902.37 1151.04 L1902.89 1151.04 L1903.41 1151.04 L1903.93 1151.04 L1904.45 1151.04 L1904.97 1151.04 L1905.49 1151.04 L1906.01 1151.04 L1906.53 1151.04 L1907.05 1151.04 L1907.57 1151.04 L1908.09 1151.04 L1908.61 1151.04 L1909.13 1151.04 L1909.65 1151.04 L1910.17 1151.04 L1910.69 1151.04 L1911.2 1151.04 L1911.72 1151.04 L1912.24 1151.04 L1912.76 1151.04 L1913.28 1151.04 L1913.8 1151.04 L1914.32 1151.04 L1914.84 1151.04 L1915.36 1151.04 L1915.88 1151.04 L1916.4 1151.04 L1916.92 1151.04 L1917.44 1151.04 L1917.96 1151.04 L1918.48 1151.04 L1919 1151.04 L1919.52 1151.04 L1920.04 1151.04 L1920.56 1151.04 L1921.08 1151.04 L1921.6 1151.04 L1922.11 1151.04 L1922.63 1151.04 L1923.15 1151.04 L1923.67 1151.04 L1924.19 1151.04 L1924.71 1151.04 L1925.23 1151.04 L1925.75 1151.04 L1926.27 1151.04 L1926.79 1151.04 L1927.31 1151.04 L1927.83 1151.04 L1928.35 1151.04 L1928.87 1151.04 L1929.39 1151.04 L1929.91 1151.04 L1930.43 1151.04 L1930.95 1151.04 L1931.47 1151.04 L1931.99 1151.04 L1932.51 1151.04 L1933.03 1151.04 L1933.54 1151.04 L1934.06 1151.04 L1934.58 1151.04 L1935.1 1151.04 L1935.62 1151.04 L1936.14 1151.04 L1936.66 1151.04 L1937.18 1151.04 L1937.7 1151.04 L1938.22 1151.04 L1938.74 1151.04 L1939.26 1151.04 L1939.78 1151.04 L1940.3 1151.04 L1940.82 1151.04 L1941.34 1151.04 L1941.86 1151.04 L1942.38 1151.04 L1942.9 1151.04 L1943.42 1151.04 L1943.94 1151.04 L1944.46 1151.04 L1944.97 1151.04 L1945.49 1151.04 L1946.01 1151.04 L1946.53 1151.04 L1947.05 1151.04 L1947.57 1151.04 L1948.09 1151.04 L1948.61 1151.04 L1949.13 1151.04 L1949.65 1151.04 L1950.17 1151.04 L1950.69 1151.04 L1951.21 1151.04 L1951.73 1151.04 L1952.25 1151.04 L1952.77 1151.04 L1953.29 1151.04 L1953.81 1151.04 L1954.33 1151.04 L1954.85 1151.04 L1955.37 1151.04 L1955.89 1151.04 L1956.4 1151.04 L1956.92 1151.04 L1957.44 1151.04 L1957.96 1151.04 L1958.48 1151.04 L1959 1151.04 L1959.52 1151.04 L1960.04 1151.04 L1960.56 1151.04 L1961.08 1151.04 L1961.6 1151.04 L1962.12 1151.04 L1962.64 1151.04 L1963.16 1151.04 L1963.68 1151.04 L1964.2 1151.04 L1964.72 1151.04 L1965.24 1151.04 L1965.76 1151.04 L1966.28 1151.04 L1966.8 1151.04 L1967.32 1151.04 L1967.83 1151.04 L1968.35 1151.04 L1968.87 1151.04 L1969.39 1151.04 L1969.91 1151.04 L1970.43 1151.04 L1970.95 1151.04 L1971.47 1151.04 L1971.99 1151.04 L1972.51 1151.04 L1973.03 1151.04 L1973.55 1151.04 L1974.07 1151.04 L1974.59 1151.04 L1975.11 1151.04 L1975.63 1151.04 L1976.15 1151.04 L1976.67 1151.04 L1977.19 1151.04 L1977.71 1151.04 L1978.23 1151.04 L1978.74 1151.04 L1979.26 1151.04 L1979.78 1151.04 L1980.3 1151.04 L1980.82 1151.04 L1981.34 1151.04 L1981.86 1151.04 L1982.38 1151.04 L1982.9 1151.04 L1983.42 1151.04 L1983.94 1151.04 L1984.46 1151.04 L1984.98 1151.04 L1985.5 1151.04 L1986.02 1151.04 L1986.54 1151.04 L1987.06 1151.04 L1987.58 1151.04 L1988.1 1151.04 L1988.62 1151.04 L1989.14 1151.04 L1989.66 1151.04 L1990.17 1151.04 L1990.69 1151.04 L1991.21 1151.04 L1991.73 1151.04 L1992.25 1151.04 L1992.77 1151.04 L1993.29 1151.04 L1993.81 1151.04 L1994.33 1151.04 L1994.85 1151.04 L1995.37 1151.04 L1995.89 1151.04 L1996.41 1151.04 L1996.93 1151.04 L1997.45 1151.04 L1997.97 1151.04 L1998.49 1151.04 L1999.01 1151.04 L1999.53 1151.04 L2000.05 1151.04 L2000.57 1151.04 L2001.09 1151.04 L2001.6 1151.04 L2002.12 1151.04 L2002.64 1151.04 L2003.16 1151.04 L2003.68 1151.04 L2004.2 1151.04 L2004.72 1151.04 L2005.24 1151.04 L2005.76 1151.04 L2006.28 1151.04 L2006.8 1151.04 L2006.8 1150.93 L2006.28 1150.93 L2005.76 1150.93 L2005.24 1150.93 L2004.72 1150.93 L2004.2 1150.93 L2003.68 1150.93 L2003.16 1150.93 L2002.64 1150.93 L2002.12 1150.93 L2001.6 1150.93 L2001.09 1150.93 L2000.57 1150.93 L2000.05 1150.93 L1999.53 1150.93 L1999.01 1150.93 L1998.49 1150.93 L1997.97 1150.93 L1997.45 1150.93 L1996.93 1150.93 L1996.41 1150.93 L1995.89 1150.93 L1995.37 1150.93 L1994.85 1150.93 L1994.33 1150.93 L1993.81 1150.93 L1993.29 1150.93 L1992.77 1150.93 L1992.25 1150.93 L1991.73 1150.93 L1991.21 1150.93 L1990.69 1150.93 L1990.17 1150.93 L1989.66 1150.93 L1989.14 1150.93 L1988.62 1150.93 L1988.1 1150.93 L1987.58 1150.93 L1987.06 1150.93 L1986.54 1150.93 L1986.02 1150.93 L1985.5 1150.93 L1984.98 1150.93 L1984.46 1150.93 L1983.94 1150.93 L1983.42 1150.93 L1982.9 1150.93 L1982.38 1150.93 L1981.86 1150.93 L1981.34 1150.93 L1980.82 1150.93 L1980.3 1150.93 L1979.78 1150.93 L1979.26 1150.93 L1978.74 1150.93 L1978.23 1150.93 L1977.71 1150.93 L1977.19 1150.93 L1976.67 1150.93 L1976.15 1150.93 L1975.63 1150.93 L1975.11 1150.93 L1974.59 1150.93 L1974.07 1150.93 L1973.55 1150.93 L1973.03 1150.93 L1972.51 1150.93 L1971.99 1150.93 L1971.47 1150.93 L1970.95 1150.93 L1970.43 1150.93 L1969.91 1150.93 L1969.39 1150.93 L1968.87 1150.93 L1968.35 1150.93 L1967.83 1150.93 L1967.32 1150.93 L1966.8 1150.93 L1966.28 1150.93 L1965.76 1150.93 L1965.24 1150.93 L1964.72 1150.93 L1964.2 1150.93 L1963.68 1150.93 L1963.16 1150.93 L1962.64 1150.93 L1962.12 1150.93 L1961.6 1150.93 L1961.08 1150.93 L1960.56 1150.93 L1960.04 1150.93 L1959.52 1150.93 L1959 1150.93 L1958.48 1150.93 L1957.96 1150.93 L1957.44 1150.93 L1956.92 1150.93 L1956.4 1150.93 L1955.89 1150.93 L1955.37 1150.93 L1954.85 1150.93 L1954.33 1150.93 L1953.81 1150.93 L1953.29 1150.93 L1952.77 1150.93 L1952.25 1150.93 L1951.73 1150.93 L1951.21 1150.93 L1950.69 1150.93 L1950.17 1150.93 L1949.65 1150.93 L1949.13 1150.93 L1948.61 1150.93 L1948.09 1150.93 L1947.57 1150.93 L1947.05 1150.93 L1946.53 1150.93 L1946.01 1150.93 L1945.49 1150.93 L1944.97 1150.93 L1944.46 1150.93 L1943.94 1150.93 L1943.42 1150.93 L1942.9 1150.93 L1942.38 1150.93 L1941.86 1150.93 L1941.34 1150.93 L1940.82 1150.93 L1940.3 1150.93 L1939.78 1150.93 L1939.26 1150.93 L1938.74 1150.93 L1938.22 1150.93 L1937.7 1150.93 L1937.18 1150.93 L1936.66 1150.93 L1936.14 1150.93 L1935.62 1150.93 L1935.1 1150.93 L1934.58 1150.93 L1934.06 1150.93 L1933.54 1150.93 L1933.03 1150.93 L1932.51 1150.93 L1931.99 1150.93 L1931.47 1150.93 L1930.95 1150.93 L1930.43 1150.93 L1929.91 1150.93 L1929.39 1150.93 L1928.87 1150.93 L1928.35 1150.93 L1927.83 1150.93 L1927.31 1150.93 L1926.79 1150.93 L1926.27 1150.93 L1925.75 1150.93 L1925.23 1150.93 L1924.71 1150.93 L1924.19 1150.93 L1923.67 1150.93 L1923.15 1150.93 L1922.63 1150.93 L1922.11 1150.93 L1921.6 1150.93 L1921.08 1150.93 L1920.56 1150.93 L1920.04 1150.93 L1919.52 1150.93 L1919 1150.93 L1918.48 1150.93 L1917.96 1150.93 L1917.44 1150.93 L1916.92 1150.93 L1916.4 1150.93 L1915.88 1150.93 L1915.36 1150.93 L1914.84 1150.93 L1914.32 1150.93 L1913.8 1150.93 L1913.28 1150.93 L1912.76 1150.93 L1912.24 1150.93 L1911.72 1150.93 L1911.2 1150.93 L1910.69 1150.93 L1910.17 1150.93 L1909.65 1150.93 L1909.13 1150.93 L1908.61 1150.93 L1908.09 1150.93 L1907.57 1150.93 L1907.05 1150.93 L1906.53 1150.93 L1906.01 1150.93 L1905.49 1150.93 L1904.97 1150.93 L1904.45 1150.93 L1903.93 1150.93 L1903.41 1150.93 L1902.89 1150.93 L1902.37 1150.93 L1901.85 1150.93 L1901.33 1150.93 L1900.81 1150.93 L1900.29 1150.93 L1899.77 1150.93 L1899.26 1150.93 L1898.74 1150.93 L1898.22 1150.93 L1897.7 1150.93 L1897.18 1150.93 L1896.66 1150.93 L1896.14 1150.93 L1895.62 1150.93 L1895.1 1150.93 L1894.58 1150.93 L1894.06 1150.93 L1893.54 1150.93 L1893.02 1150.93 L1892.5 1150.93 L1891.98 1150.93 L1891.46 1150.93 L1890.94 1150.93 L1890.42 1150.93 L1889.9 1150.93 L1889.38 1150.93 L1888.86 1150.93 L1888.34 1150.93 L1887.83 1150.93 L1887.31 1150.93 L1886.79 1150.93 L1886.27 1150.93 L1885.75 1150.93 L1885.23 1150.93 L1884.71 1150.93 L1884.19 1150.93 L1883.67 1150.93 L1883.15 1150.93 L1882.63 1150.93 L1882.11 1150.93 L1881.59 1150.93 L1881.07 1150.93 L1880.55 1150.93 L1880.03 1150.93 L1879.51 1150.93 L1878.99 1150.93 L1878.47 1150.93 L1877.95 1150.93 L1877.43 1150.93 L1876.91 1150.93 L1876.4 1150.93 L1875.88 1150.93 L1875.36 1150.93 L1874.84 1150.93 L1874.32 1150.93 L1873.8 1150.93 L1873.28 1150.93 L1872.76 1150.93 L1872.24 1150.93 L1871.72 1150.93 L1871.2 1150.93 L1870.68 1150.93 L1870.16 1150.93 L1869.64 1150.93 L1869.12 1150.93 L1868.6 1150.93 L1868.08 1150.93 L1867.56 1150.93 L1867.04 1150.93 L1866.52 1150.93 L1866 1150.93 L1865.48 1150.93 L1864.97 1150.93 L1864.45 1150.93 L1863.93 1150.93 L1863.41 1150.93 L1862.89 1150.93 L1862.37 1150.93 L1861.85 1150.93 L1861.33 1150.93 L1860.81 1150.93 L1860.29 1150.93 L1859.77 1150.93 L1859.25 1150.93 L1858.73 1150.93 L1858.21 1150.93 L1857.69 1150.93 L1857.17 1150.93 L1856.65 1150.93 L1856.13 1150.93 L1855.61 1150.93 L1855.09 1150.93 L1854.57 1150.93 L1854.06 1150.93 L1853.54 1150.93 L1853.02 1150.93 L1852.5 1150.93 L1851.98 1150.93 L1851.46 1150.93 L1850.94 1150.93 L1850.42 1150.93 L1849.9 1150.93 L1849.38 1150.93 L1848.86 1150.93 L1848.34 1150.93 L1847.82 1150.93 L1847.3 1150.93 L1846.78 1150.93 L1846.26 1150.93 L1845.74 1150.93 L1845.22 1150.93 L1844.7 1150.93 L1844.18 1150.93 L1843.66 1150.93 L1843.14 1150.93 L1842.63 1150.93 L1842.11 1150.93 L1841.59 1150.93 L1841.07 1150.93 L1840.55 1150.93 L1840.03 1150.93 L1839.51 1150.93 L1838.99 1150.93 L1838.47 1150.93 L1837.95 1150.93 L1837.43 1150.93 L1836.91 1150.93 L1836.39 1150.93 L1835.87 1150.93 L1835.35 1150.93 L1834.83 1150.93 L1834.31 1150.93 L1833.79 1150.93 L1833.27 1150.93 L1832.75 1150.93 L1832.23 1150.93 L1831.71 1150.93 L1831.2 1150.93 L1830.68 1150.93 L1830.16 1150.93 L1829.64 1150.93 L1829.12 1150.93 L1828.6 1150.93 L1828.08 1150.93 L1827.56 1150.93 L1827.04 1150.93 L1826.52 1150.93 L1826 1150.93 L1825.48 1150.93 L1824.96 1150.93 L1824.44 1150.93 L1823.92 1150.93 L1823.4 1150.93 L1822.88 1150.93 L1822.36 1150.93 L1821.84 1150.93 L1821.32 1150.93 L1820.8 1150.93 L1820.28 1150.93 L1819.77 1150.93 L1819.25 1150.93 L1818.73 1150.93 L1818.21 1150.93 L1817.69 1150.93 L1817.17 1150.93 L1816.65 1150.93 L1816.13 1150.93 L1815.61 1150.93 L1815.09 1150.93 L1814.57 1150.93 L1814.05 1150.93 L1813.53 1150.93 L1813.01 1150.93 L1812.49 1150.93 L1811.97 1150.93 L1811.45 1150.93 L1810.93 1150.93 L1810.41 1150.93 L1809.89 1150.93 L1809.37 1150.93 L1808.85 1150.93 L1808.34 1150.93 L1807.82 1150.93 L1807.3 1150.93 L1806.78 1150.93 L1806.26 1150.93 L1805.74 1150.93 L1805.22 1150.93 L1804.7 1150.93 L1804.18 1150.93 L1803.66 1150.93 L1803.14 1150.93 L1802.62 1150.93 L1802.1 1150.93 L1801.58 1150.93 L1801.06 1150.93 L1800.54 1150.93 L1800.02 1150.93 L1799.5 1150.93 L1798.98 1150.93 L1798.46 1150.93 L1797.94 1150.93 L1797.43 1150.93 L1796.91 1150.93 L1796.39 1150.93 L1795.87 1150.93 L1795.35 1150.93 L1794.83 1150.93 L1794.31 1150.93 L1793.79 1150.93 L1793.27 1150.93 L1792.75 1150.93 L1792.23 1150.93 L1791.71 1150.93 L1791.19 1150.93 L1790.67 1150.93 L1790.15 1150.93 L1789.63 1150.93 L1789.11 1150.93 L1788.59 1150.93 L1788.07 1150.93 L1787.55 1150.93 L1787.03 1150.93 L1786.51 1150.93 L1786 1150.93 L1785.48 1150.93 L1784.96 1150.93 L1784.44 1150.93 L1783.92 1150.93 L1783.4 1150.93 L1782.88 1150.93 L1782.36 1150.93 L1781.84 1150.93 L1781.32 1150.93 L1780.8 1150.93 L1780.28 1150.93 L1779.76 1150.93 L1779.24 1150.93 L1778.72 1150.93 L1778.2 1150.93 L1777.68 1150.93 L1777.16 1150.93 L1776.64 1150.93 L1776.12 1150.93 L1775.6 1150.93 L1775.08 1150.93 L1774.57 1150.93 L1774.05 1150.93 L1773.53 1150.93 L1773.01 1150.93 L1772.49 1150.93 L1771.97 1150.93 L1771.45 1150.93 L1770.93 1150.93 L1770.41 1150.93 L1769.89 1150.93 L1769.37 1150.93 L1768.85 1150.93 L1768.33 1150.93 L1767.81 1150.93 L1767.29 1150.93 L1766.77 1150.93 L1766.25 1150.93 L1765.73 1150.93 L1765.21 1150.93 L1764.69 1150.93 L1764.17 1150.93 L1763.65 1150.93 L1763.14 1150.93 L1762.62 1150.93 L1762.1 1150.93 L1761.58 1150.93 L1761.06 1150.93 L1760.54 1150.93 L1760.02 1150.93 L1759.5 1150.93 L1758.98 1150.93 L1758.46 1150.93 L1757.94 1150.93 L1757.42 1150.93 L1756.9 1150.93 L1756.38 1150.93 L1755.86 1150.93 L1755.34 1150.93 L1754.82 1150.93 L1754.3 1150.93 L1753.78 1150.93 L1753.26 1150.93 L1752.74 1150.93 L1752.22 1150.93 L1751.71 1150.93 L1751.19 1150.93 L1750.67 1150.93 L1750.15 1150.93 L1749.63 1150.93 L1749.11 1150.93 L1748.59 1150.93 L1748.07 1150.93 L1747.55 1150.93 L1747.03 1150.93 L1746.51 1150.93 L1745.99 1150.93 L1745.47 1150.93 L1744.95 1150.93 L1744.43 1150.93 L1743.91 1150.93 L1743.39 1150.93 L1742.87 1150.93 L1742.35 1150.93 L1741.83 1150.93 L1741.31 1150.93 L1740.8 1150.93 L1740.28 1150.93 L1739.76 1150.93 L1739.24 1150.93 L1738.72 1150.93 L1738.2 1150.93 L1737.68 1150.93 L1737.16 1150.93 L1736.64 1150.93 L1736.12 1150.93 L1735.6 1150.93 L1735.08 1150.93 L1734.56 1150.93 L1734.04 1150.93 L1733.52 1150.93 L1733 1150.93 L1732.48 1150.93 L1731.96 1150.93 L1731.44 1150.93 L1730.92 1150.93 L1730.4 1150.93 L1729.88 1150.93 L1729.37 1150.93 L1728.85 1150.93 L1728.33 1150.93 L1727.81 1150.93 L1727.29 1150.93 L1726.77 1150.93 L1726.25 1150.93 L1725.73 1150.93 L1725.21 1150.93 L1724.69 1150.93 L1724.17 1150.93 L1723.65 1150.93 L1723.13 1150.93 L1722.61 1150.93 L1722.09 1150.93 L1721.57 1150.93 L1721.05 1150.93 L1720.53 1150.93 L1720.01 1150.93 L1719.49 1150.93 L1718.97 1150.93 L1718.45 1150.93 L1717.94 1150.93 L1717.42 1150.93 L1716.9 1150.93 L1716.38 1150.93 L1715.86 1150.93 L1715.34 1150.93 L1714.82 1150.93 L1714.3 1150.93 L1713.78 1150.93 L1713.26 1150.93 L1712.74 1150.93 L1712.22 1150.93 L1711.7 1150.93 L1711.18 1150.93 L1710.66 1150.93 L1710.14 1150.93 L1709.62 1150.93 L1709.1 1150.93 L1708.58 1150.93 L1708.06 1150.93 L1707.54 1150.93 L1707.02 1150.93 L1706.51 1150.93 L1705.99 1150.93 L1705.47 1150.93 L1704.95 1150.93 L1704.43 1150.93 L1703.91 1150.93 L1703.39 1150.93 L1702.87 1150.93 L1702.35 1150.93 L1701.83 1150.93 L1701.31 1150.93 L1700.79 1150.93 L1700.27 1150.93 L1699.75 1150.93 L1699.23 1150.93 L1698.71 1150.93 L1698.19 1150.93 L1697.67 1150.93 L1697.15 1150.93 L1696.63 1150.93 L1696.11 1150.93 L1695.59 1150.93 L1695.08 1150.93 L1694.56 1150.93 L1694.04 1150.93 L1693.52 1150.93 L1693 1150.93 L1692.48 1150.93 L1691.96 1150.93 L1691.44 1150.93 L1690.92 1150.93 L1690.4 1150.93 L1689.88 1150.93 L1689.36 1150.93 L1688.84 1150.93 L1688.32 1150.93 L1687.8 1150.93 L1687.28 1150.93 L1686.76 1150.93 L1686.24 1150.93 L1685.72 1150.93 L1685.2 1150.93 L1684.68 1150.93 L1684.17 1150.93 L1683.65 1150.93 L1683.13 1150.93 L1682.61 1150.93 L1682.09 1150.93 L1681.57 1150.93 L1681.05 1150.93 L1680.53 1150.93 L1680.01 1150.93 L1679.49 1150.93 L1678.97 1150.93 L1678.45 1150.93 L1677.93 1150.93 L1677.41 1150.93 L1676.89 1150.93 L1676.37 1150.93 L1675.85 1150.93 L1675.33 1150.93 L1674.81 1150.93 L1674.29 1150.93 L1673.77 1150.93 L1673.25 1150.93 L1672.74 1150.93 L1672.22 1150.93 L1671.7 1150.93 L1671.18 1150.93 L1670.66 1150.93 L1670.14 1150.93 L1669.62 1150.93 L1669.1 1150.93 L1668.58 1150.93 L1668.06 1150.93 L1667.54 1150.93 L1667.02 1150.93 L1666.5 1150.93 L1665.98 1150.93 L1665.46 1150.93 L1664.94 1150.93 L1664.42 1150.93 L1663.9 1150.93 L1663.38 1150.93 L1662.86 1150.93 L1662.34 1150.93 L1661.82 1150.93 L1661.31 1150.93 L1660.79 1150.93 L1660.27 1150.93 L1659.75 1150.93 L1659.23 1150.93 L1658.71 1150.93 L1658.19 1150.93 L1657.67 1150.93 L1657.15 1150.93 L1656.63 1150.93 L1656.11 1150.93 L1655.59 1150.93 L1655.07 1150.93 L1654.55 1150.93 L1654.03 1150.93 L1653.51 1150.93 L1652.99 1150.93 L1652.47 1150.93 L1651.95 1150.93 L1651.43 1150.93 L1650.91 1150.93 L1650.39 1150.93 L1649.88 1150.93 L1649.36 1150.93 L1648.84 1150.93 L1648.32 1150.93 L1647.8 1150.93 L1647.28 1150.93 L1646.76 1150.93 L1646.24 1150.93 L1645.72 1150.93 L1645.2 1150.93 L1644.68 1150.93 L1644.16 1150.93 L1643.64 1150.93 L1643.12 1150.93 L1642.6 1150.93 L1642.08 1150.93 L1641.56 1150.93 L1641.04 1150.93 L1640.52 1150.93 L1640 1150.93 L1639.48 1150.93 L1638.96 1150.93 L1638.45 1150.93 L1637.93 1150.93 L1637.41 1150.93 L1636.89 1150.93 L1636.37 1150.93 L1635.85 1150.93 L1635.33 1150.93 L1634.81 1150.93 L1634.29 1150.93 L1633.77 1150.93 L1633.25 1150.93 L1632.73 1150.93 L1632.21 1150.93 L1631.69 1150.93 L1631.17 1150.93 L1630.65 1150.93 L1630.13 1150.93 L1629.61 1150.93 L1629.09 1150.93 L1628.57 1150.93 L1628.05 1150.93 L1627.54 1150.93 L1627.02 1150.93 L1626.5 1150.93 L1625.98 1150.93 L1625.46 1150.93 L1624.94 1150.93 L1624.42 1150.93 L1623.9 1150.93 L1623.38 1150.93 L1622.86 1150.93 L1622.34 1150.93 L1621.82 1150.93 L1621.3 1150.93 L1620.78 1150.93 L1620.26 1150.93 L1619.74 1150.93 L1619.22 1150.93 L1618.7 1150.93 L1618.18 1150.93 L1617.66 1150.93 L1617.14 1150.93 L1616.62 1150.93 L1616.11 1150.93 L1615.59 1150.93 L1615.07 1150.93 L1614.55 1150.93 L1614.03 1150.93 L1613.51 1150.93 L1612.99 1150.93 L1612.47 1150.93 L1611.95 1150.93 L1611.43 1150.93 L1610.91 1150.93 L1610.39 1150.93 L1609.87 1150.93 L1609.35 1150.93 L1608.83 1150.93 L1608.31 1150.93 L1607.79 1150.93 L1607.27 1150.93 L1606.75 1150.93 L1606.23 1150.93 L1605.71 1150.93 L1605.19 1150.93 L1604.68 1150.93 L1604.16 1150.93 L1603.64 1150.93 L1603.12 1150.93 L1602.6 1150.93 L1602.08 1150.93 L1601.56 1150.93 L1601.04 1150.93 L1600.52 1150.93 L1600 1150.93 L1599.48 1150.93 L1598.96 1150.93 L1598.44 1150.93 L1597.92 1150.93 L1597.4 1150.93 L1596.88 1150.93 L1596.36 1150.93 L1595.84 1150.93 L1595.32 1150.93 L1594.8 1150.93 L1594.28 1150.93 L1593.76 1150.93 L1593.25 1150.93 L1592.73 1150.93 L1592.21 1150.93 L1591.69 1150.93 L1591.17 1150.93 L1590.65 1150.93 L1590.13 1150.93 L1589.61 1150.93 L1589.09 1150.93 L1588.57 1150.93 L1588.05 1150.93 L1587.53 1150.93 L1587.01 1150.93 L1586.49 1150.93 L1585.97 1150.93 L1585.45 1150.93 L1584.93 1150.93 L1584.41 1150.93 L1583.89 1150.93 L1583.37 1150.93 L1582.85 1150.93 L1582.33 1150.93 L1581.82 1150.93 L1581.3 1150.93 L1580.78 1150.93 L1580.26 1150.93 L1579.74 1150.93 L1579.22 1150.93 L1578.7 1150.93 L1578.18 1150.93 L1577.66 1150.93 L1577.14 1150.93 L1576.62 1150.93 L1576.1 1150.93 L1575.58 1150.93 L1575.06 1150.93 L1574.54 1150.93 L1574.02 1150.93 L1573.5 1150.93 L1572.98 1150.93 L1572.46 1150.93 L1571.94 1150.93 L1571.42 1150.93 L1570.91 1150.93 L1570.39 1150.93 L1569.87 1150.93 L1569.35 1150.93 L1568.83 1150.93 L1568.31 1150.93 L1567.79 1150.93 L1567.27 1150.93 L1566.75 1150.93 L1566.23 1150.93 L1565.71 1150.93 L1565.19 1150.93 L1564.67 1150.93 L1564.15 1150.93 L1563.63 1150.93 L1563.11 1150.93 L1562.59 1150.93 L1562.07 1150.93 L1561.55 1150.93 L1561.03 1150.93 L1560.51 1150.93 L1559.99 1150.93 L1559.48 1150.93 L1558.96 1150.93 L1558.44 1150.93 L1557.92 1150.93 L1557.4 1150.93 L1556.88 1150.93 L1556.36 1150.93 L1555.84 1150.93 L1555.32 1150.93 L1554.8 1150.93 L1554.28 1150.93 L1553.76 1150.93 L1553.24 1150.93 L1552.72 1150.93 L1552.2 1150.93 L1551.68 1150.93 L1551.16 1150.93 L1550.64 1150.93 L1550.12 1150.93 L1549.6 1150.93 L1549.08 1150.93 L1548.56 1150.93 L1548.05 1150.93 L1547.53 1150.93 L1547.01 1150.93 L1546.49 1150.93 L1545.97 1150.93 L1545.45 1150.93 L1544.93 1150.93 L1544.41 1150.93 L1543.89 1150.93 L1543.37 1150.93 L1542.85 1150.93 L1542.33 1150.93 L1541.81 1150.93 L1541.29 1150.93 L1540.77 1150.93 L1540.25 1150.93 L1539.73 1150.93 L1539.21 1150.93 L1538.69 1150.93 L1538.17 1150.93 L1537.65 1150.93 L1537.13 1150.93 L1536.62 1150.93 L1536.1 1150.93 L1535.58 1150.93 L1535.06 1150.93 L1534.54 1150.93 L1534.02 1150.93 L1533.5 1150.93 L1532.98 1150.93 L1532.46 1150.93 L1531.94 1150.93 L1531.42 1150.93 L1530.9 1150.93 L1530.38 1150.93 L1529.86 1150.93 L1529.34 1150.93 L1528.82 1150.93 L1528.3 1150.93 L1527.78 1150.93 L1527.26 1150.93 L1526.74 1150.93 L1526.22 1150.93 L1525.7 1150.93 L1525.19 1150.93 L1524.67 1150.93 L1524.15 1150.93 L1523.63 1150.93 L1523.11 1150.93 L1522.59 1150.93 L1522.07 1150.93 L1521.55 1150.93 L1521.03 1150.93 L1520.51 1150.93 L1519.99 1150.93 L1519.47 1150.93 L1518.95 1150.93 L1518.43 1150.93 L1517.91 1150.93 L1517.39 1150.93 L1516.87 1150.93 L1516.35 1150.93 L1515.83 1150.93 L1515.31 1150.93 L1514.79 1150.93 L1514.28 1150.93 L1513.76 1150.93 L1513.24 1150.93 L1512.72 1150.93 L1512.2 1150.93 L1511.68 1150.93 L1511.16 1150.93 L1510.64 1150.93 L1510.12 1150.93 L1509.6 1150.93 L1509.08 1150.93 L1508.56 1150.93 L1508.04 1150.93 L1507.52 1150.93 L1507 1150.93 L1506.48 1150.93 L1505.96 1150.93 L1505.44 1150.93 L1504.92 1150.93 L1504.4 1150.93 L1503.88 1150.93 L1503.36 1150.93 L1502.85 1150.93 L1502.33 1150.93 L1501.81 1150.93 L1501.29 1150.93 L1500.77 1150.93 L1500.25 1150.93 L1499.73 1150.93 L1499.21 1150.93 L1498.69 1150.93 L1498.17 1150.93 L1497.65 1150.93 L1497.13 1150.93 L1496.61 1150.93 L1496.09 1150.93 L1495.57 1150.93 L1495.05 1150.93 L1494.53 1150.93 L1494.01 1150.93 L1493.49 1150.93 L1492.97 1150.93 L1492.45 1150.93 L1491.93 1150.93 L1491.42 1150.93 L1490.9 1150.93 L1490.38 1150.93 L1489.86 1150.93 L1489.34 1150.93 L1488.82 1150.93 L1488.3 1150.93 L1487.78 1150.93 L1487.26 1150.93 L1486.74 1150.93 L1486.22 1150.93 L1485.7 1150.93 L1485.18 1150.93 L1484.66 1150.93 L1484.14 1150.93 L1483.62 1150.93 L1483.1 1150.93 L1482.58 1150.93 L1482.06 1150.93 L1481.54 1150.93 L1481.02 1150.93 L1480.5 1150.93 L1479.99 1150.93 L1479.47 1150.93 L1478.95 1150.93 L1478.43 1150.93 L1477.91 1150.93 L1477.39 1150.93 L1476.87 1150.93 L1476.35 1150.93 L1475.83 1150.93 L1475.31 1150.93 L1474.79 1150.93 L1474.27 1150.93 L1473.75 1150.93 L1473.23 1150.93 L1472.71 1150.93 L1472.19 1150.93 L1471.67 1150.93 L1471.15 1150.93 L1470.63 1150.93 L1470.11 1150.93 L1469.59 1150.93 L1469.07 1150.93 L1468.56 1150.93 L1468.04 1150.93 L1467.52 1150.93 L1467 1150.93 L1466.48 1150.93 L1465.96 1150.93 L1465.44 1150.93 L1464.92 1150.93 L1464.4 1150.93 L1463.88 1150.93 L1463.36 1150.93 L1462.84 1150.93 L1462.32 1150.93 L1461.8 1150.93 L1461.28 1150.93 L1460.76 1150.93 L1460.24 1150.93 L1459.72 1150.93 L1459.2 1150.93 L1458.68 1150.93 L1458.16 1150.93 L1457.65 1150.93 L1457.13 1150.93 L1456.61 1150.93 L1456.09 1150.93 L1455.57 1150.93 L1455.05 1150.93 L1454.53 1150.93 L1454.01 1150.93 L1453.49 1150.93 L1452.97 1150.93 L1452.45 1150.93 L1451.93 1150.93 L1451.41 1150.93 L1450.89 1150.93 L1450.37 1150.93 L1449.85 1150.93 L1449.33 1150.93 L1448.81 1150.93 L1448.29 1150.93 L1447.77 1150.93 L1447.25 1150.93 L1446.73 1150.93 L1446.22 1150.93 L1445.7 1150.93 L1445.18 1150.93 L1444.66 1150.93 L1444.14 1150.93 L1443.62 1150.93 L1443.1 1150.93 L1442.58 1150.93 L1442.06 1150.93 L1441.54 1150.93 L1441.02 1150.93 L1440.5 1150.93 L1439.98 1150.93 L1439.46 1150.93 L1438.94 1150.93 L1438.42 1150.93 L1437.9 1150.93 L1437.38 1150.93 L1436.86 1150.93 L1436.34 1150.93 L1435.82 1150.93 L1435.3 1150.93 L1434.79 1150.93 L1434.27 1150.93 L1433.75 1150.93 L1433.23 1150.93 L1432.71 1150.93 L1432.19 1150.93 L1431.67 1150.93 L1431.15 1150.93 L1430.63 1150.93 L1430.11 1150.93 L1429.59 1150.93 L1429.07 1150.93 L1428.55 1150.93 L1428.03 1150.93 L1427.51 1150.93 L1426.99 1150.93 L1426.47 1150.93 L1425.95 1150.93 L1425.43 1150.93 L1424.91 1150.93 L1424.39 1150.93 L1423.87 1150.93 L1423.36 1150.93 L1422.84 1150.93 L1422.32 1150.93 L1421.8 1150.93 L1421.28 1150.93 L1420.76 1150.93 L1420.24 1150.93 L1419.72 1150.93 L1419.2 1150.93 L1418.68 1150.93 L1418.16 1150.93 L1417.64 1150.93 L1417.12 1150.93 L1416.6 1150.93 L1416.08 1150.93 L1415.56 1150.93 L1415.04 1150.93 L1414.52 1150.93 L1414 1150.93 L1413.48 1150.93 L1412.96 1150.93 L1412.44 1150.93 L1411.93 1150.93 L1411.41 1150.93 L1410.89 1150.93 L1410.37 1150.93 L1409.85 1150.93 L1409.33 1150.93 L1408.81 1150.93 L1408.29 1150.93 L1407.77 1150.93 L1407.25 1150.93 L1406.73 1150.93 L1406.21 1150.93 L1405.69 1150.93 L1405.17 1150.93 L1404.65 1150.93 L1404.13 1150.93 L1403.61 1150.93 L1403.09 1150.93 L1402.57 1150.93 L1402.05 1150.93 L1401.53 1150.93 L1401.02 1150.93 L1400.5 1150.93 L1399.98 1150.93 L1399.46 1150.93 L1398.94 1150.93 L1398.42 1150.93 L1397.9 1150.93 L1397.38 1150.93 L1396.86 1150.93 L1396.34 1150.93 L1395.82 1150.93 L1395.3 1150.93 L1394.78 1150.93 L1394.26 1150.93 L1393.74 1150.93 L1393.22 1150.93 L1392.7 1150.93 L1392.18 1150.93 L1391.66 1150.93 L1391.14 1150.93 L1390.62 1150.93 L1390.1 1150.93 L1389.59 1150.93 L1389.07 1150.93 L1388.55 1150.93 L1388.03 1150.93 L1387.51 1150.93 L1386.99 1150.93 L1386.47 1150.93 L1385.95 1150.93 L1385.43 1150.93 L1384.91 1150.93 L1384.39 1150.93 L1383.87 1150.93 L1383.35 1150.93 L1382.83 1150.93 L1382.31 1150.93 L1381.79 1150.93 L1381.27 1150.93 L1380.75 1150.93 L1380.23 1150.93 L1379.71 1150.93 L1379.19 1150.93 L1378.67 1150.93 L1378.16 1150.93 L1377.64 1150.93 L1377.12 1150.93 L1376.6 1150.93 L1376.08 1150.93 L1375.56 1150.93 L1375.04 1150.93 L1374.52 1150.93 L1374 1150.93 L1373.48 1150.93 L1372.96 1150.93 L1372.44 1150.93 L1371.92 1150.93 L1371.4 1150.93 L1370.88 1150.93 L1370.36 1150.93 L1369.84 1150.93 L1369.32 1150.93 L1368.8 1150.93 L1368.28 1150.93 L1367.76 1150.93 L1367.24 1150.93 L1366.73 1150.93 L1366.21 1150.93 L1365.69 1150.93 L1365.17 1150.93 L1364.65 1150.93 L1364.13 1150.93 L1363.61 1150.93 L1363.09 1150.93 L1362.57 1150.93 L1362.05 1150.93 L1361.53 1150.93 L1361.01 1150.93 L1360.49 1150.93 L1359.97 1150.93 L1359.45 1150.93 L1358.93 1150.93 L1358.41 1150.93 L1357.89 1150.93 L1357.37 1150.93 L1356.85 1150.93 L1356.33 1150.93 L1355.81 1150.93 L1355.3 1150.93 L1354.78 1150.93 L1354.26 1150.93 L1353.74 1150.93 L1353.22 1150.93 L1352.7 1150.93 L1352.18 1150.93 L1351.66 1150.93 L1351.14 1150.93 L1350.62 1150.93 L1350.1 1150.93 L1349.58 1150.93 L1349.06 1150.93 L1348.54 1150.93 L1348.02 1150.93 L1347.5 1150.93 L1346.98 1150.93 L1346.46 1150.93 L1345.94 1150.93 L1345.42 1150.93 L1344.9 1150.93 L1344.39 1150.93 L1343.87 1150.93 L1343.35 1150.93 L1342.83 1150.93 L1342.31 1150.93 L1341.79 1150.93 L1341.27 1150.93 L1340.75 1150.93 L1340.23 1150.93 L1339.71 1150.93 L1339.19 1150.93 L1338.67 1150.93 L1338.15 1150.93 L1337.63 1150.93 L1337.11 1150.93 L1336.59 1150.93 L1336.07 1150.93 L1335.55 1150.93 L1335.03 1150.93 L1334.51 1150.93 L1333.99 1150.93 L1333.47 1150.93 L1332.96 1150.93 L1332.44 1150.93 L1331.92 1150.93 L1331.4 1150.93 L1330.88 1150.93 L1330.36 1150.93 L1329.84 1150.93 L1329.32 1150.93 L1328.8 1150.93 L1328.28 1150.93 L1327.76 1150.93 L1327.24 1150.93 L1326.72 1150.93 L1326.2 1150.93 L1325.68 1150.93 L1325.16 1150.93 L1324.64 1150.93 L1324.12 1150.93 L1323.6 1150.93 L1323.08 1150.93 L1322.56 1150.93 L1322.04 1150.93 L1321.53 1150.93 L1321.01 1150.93 L1320.49 1150.93 L1319.97 1150.93 L1319.45 1150.93 L1318.93 1150.93 L1318.41 1150.93 L1317.89 1150.93 L1317.37 1150.93 L1316.85 1150.93 L1316.33 1150.93 L1315.81 1150.93 L1315.29 1150.93 L1314.77 1150.93 L1314.25 1150.93 L1313.73 1150.93 L1313.21 1150.93 L1312.69 1150.93 L1312.17 1150.93 L1311.65 1150.93 L1311.13 1150.93 L1310.61 1150.93 L1310.1 1150.93 L1309.58 1150.93 L1309.06 1150.93 L1308.54 1150.93 L1308.02 1150.93 L1307.5 1150.93 L1306.98 1150.93 L1306.46 1150.93 L1305.94 1150.93 L1305.42 1150.93 L1304.9 1150.93 L1304.38 1150.93 L1303.86 1150.93 L1303.34 1150.93 L1302.82 1150.93 L1302.3 1150.93 L1301.78 1150.93 L1301.26 1150.93 L1300.74 1150.93 L1300.22 1150.93 L1299.7 1150.93 L1299.18 1150.93 L1298.67 1150.93 L1298.15 1150.93 L1297.63 1150.93 L1297.11 1150.93 L1296.59 1150.93 L1296.07 1150.93 L1295.55 1150.93 L1295.03 1150.93 L1294.51 1150.93 L1293.99 1150.93 L1293.47 1150.93 L1292.95 1150.93 L1292.43 1150.93 L1291.91 1150.93 L1291.39 1150.93 L1290.87 1150.93 L1290.35 1150.93 L1289.83 1150.93 L1289.31 1150.93 L1288.79 1150.93 L1288.27 1150.93 L1287.76 1150.93 L1287.24 1150.93 L1286.72 1150.93 L1286.2 1150.93 L1285.68 1150.93 L1285.16 1150.93 L1284.64 1150.93 L1284.12 1150.93 L1283.6 1150.93 L1283.08 1150.93 L1282.56 1150.93 L1282.04 1150.93 L1281.52 1150.93 L1281 1150.93 L1280.48 1150.93 L1279.96 1150.93 L1279.44 1150.93 L1278.92 1150.93 L1278.4 1150.93 L1277.88 1150.93 L1277.36 1150.93 L1276.84 1150.93 L1276.33 1150.93 L1275.81 1150.93 L1275.29 1150.93 L1274.77 1150.93 L1274.25 1150.93 L1273.73 1150.93 L1273.21 1150.93 L1272.69 1150.93 L1272.17 1150.93 L1271.65 1150.93 L1271.13 1150.93 L1270.61 1150.93 L1270.09 1150.93 L1269.57 1150.93 L1269.05 1150.93 L1268.53 1150.93 L1268.01 1150.93 L1267.49 1150.93 L1266.97 1150.93 L1266.45 1150.93 L1265.93 1150.93 L1265.41 1150.93 L1264.9 1150.93 L1264.38 1150.93 L1263.86 1150.93 L1263.34 1150.93 L1262.82 1150.93 L1262.3 1150.93 L1261.78 1150.93 L1261.26 1150.93 L1260.74 1150.93 L1260.22 1150.93 L1259.7 1150.93 L1259.18 1150.93 L1258.66 1150.93 L1258.14 1150.93 L1257.62 1150.93 L1257.1 1150.93 L1256.58 1150.93 L1256.06 1150.93 L1255.54 1150.93 L1255.02 1150.93 L1254.5 1150.93 L1253.98 1150.93 L1253.47 1150.93 L1252.95 1150.93 L1252.43 1150.93 L1251.91 1150.93 L1251.39 1150.93 L1250.87 1150.93 L1250.35 1150.93 L1249.83 1150.93 L1249.31 1150.93 L1248.79 1150.93 L1248.27 1150.93 L1247.75 1150.93 L1247.23 1150.93 L1246.71 1150.93 L1246.19 1150.93 L1245.67 1150.93 L1245.15 1150.93 L1244.63 1150.93 L1244.11 1150.93 L1243.59 1150.93 L1243.07 1150.93 L1242.55 1150.93 L1242.04 1150.93 L1241.52 1150.93 L1241 1150.93 L1240.48 1150.93 L1239.96 1150.93 L1239.44 1150.93 L1238.92 1150.93 L1238.4 1150.93 L1237.88 1150.93 L1237.36 1150.93 L1236.84 1150.93 L1236.32 1150.93 L1235.8 1150.93 L1235.28 1150.93 L1234.76 1150.93 L1234.24 1150.93 L1233.72 1150.93 L1233.2 1150.93 L1232.68 1150.93 L1232.16 1150.93 L1231.64 1150.93 L1231.13 1150.93 L1230.61 1150.93 L1230.09 1150.93 L1229.57 1150.93 L1229.05 1150.93 L1228.53 1150.93 L1228.01 1150.93 L1227.49 1150.93 L1226.97 1150.93 L1226.45 1150.93 L1225.93 1150.93 L1225.41 1150.93 L1224.89 1150.93 L1224.37 1150.93 L1223.85 1150.93 L1223.33 1150.93 L1222.81 1150.93 L1222.29 1150.93 L1221.77 1150.93 L1221.25 1150.93 L1220.73 1150.93 L1220.21 1150.93 L1219.7 1150.93 L1219.18 1150.93 L1218.66 1150.93 L1218.14 1150.93 L1217.62 1150.93 L1217.1 1150.93 L1216.58 1150.93 L1216.06 1150.93 L1215.54 1150.93 L1215.02 1150.93 L1214.5 1150.93 L1213.98 1150.93 L1213.46 1150.93 L1212.94 1150.93 L1212.42 1150.93 L1211.9 1150.93 L1211.38 1150.93 L1210.86 1150.93 L1210.34 1150.93 L1209.82 1150.93 L1209.3 1150.93 L1208.78 1150.93 L1208.27 1150.93 L1207.75 1150.93 L1207.23 1150.93 L1206.71 1150.93 L1206.19 1150.93 L1205.67 1150.93 L1205.15 1150.93 L1204.63 1150.93 L1204.11 1150.93 L1203.59 1150.93 L1203.07 1150.93 L1202.55 1150.93 L1202.03 1150.93 L1201.51 1150.93 L1200.99 1150.93 L1200.47 1150.93 L1199.95 1150.93 L1199.43 1150.93 L1198.91 1150.93 L1198.39 1150.93 L1197.87 1150.93 L1197.35 1150.93 L1196.84 1150.93 L1196.32 1150.93 L1195.8 1150.93 L1195.28 1150.93 L1194.76 1150.93 L1194.24 1150.93 L1193.72 1150.93 L1193.2 1150.93 L1192.68 1150.93 L1192.16 1150.93 L1191.64 1150.93 L1191.12 1150.93 L1190.6 1150.93 L1190.08 1150.93 L1189.56 1150.93 L1189.04 1150.93 L1188.52 1150.93 L1188 1150.93 L1187.48 1150.93 L1186.96 1150.93 L1186.44 1150.93 L1185.92 1150.93 L1185.41 1150.93 L1184.89 1150.93 L1184.37 1150.93 L1183.85 1150.93 L1183.33 1150.93 L1182.81 1150.93 L1182.29 1150.93 L1181.77 1150.93 L1181.25 1150.93 L1180.73 1150.93 L1180.21 1150.93 L1179.69 1150.93 L1179.17 1150.93 L1178.65 1150.93 L1178.13 1150.93 L1177.61 1150.93 L1177.09 1150.93 L1176.57 1150.93 L1176.05 1150.93 L1175.53 1150.93 L1175.01 1150.93 L1174.5 1150.93 L1173.98 1150.93 L1173.46 1150.93 L1172.94 1150.93 L1172.42 1150.93 L1171.9 1150.93 L1171.38 1150.93 L1170.86 1150.93 L1170.34 1150.93 L1169.82 1150.93 L1169.3 1150.93 L1168.78 1150.93 L1168.26 1150.93 L1167.74 1150.93 L1167.22 1150.93 L1166.7 1150.93 L1166.18 1150.93 L1165.66 1150.93 L1165.14 1150.93 L1164.62 1150.93 L1164.1 1150.93 L1163.58 1150.93 L1163.07 1150.93 L1162.55 1150.93 L1162.03 1150.93 L1161.51 1150.93 L1160.99 1150.93 L1160.47 1150.93 L1159.95 1150.93 L1159.43 1150.93 L1158.91 1150.93 L1158.39 1150.93 L1157.87 1150.93 L1157.35 1150.93 L1156.83 1150.93 L1156.31 1150.93 L1155.79 1150.93 L1155.27 1150.93 L1154.75 1150.93 L1154.23 1150.93 L1153.71 1150.93 L1153.19 1150.93 L1152.67 1150.93 L1152.15 1150.93 L1151.64 1150.93 L1151.12 1150.93 L1150.6 1150.93 L1150.08 1150.93 L1149.56 1150.93 L1149.04 1150.93 L1148.52 1150.93 L1148 1150.93 L1147.48 1150.93 L1146.96 1150.93 L1146.44 1150.93 L1145.92 1150.93 L1145.4 1150.93 L1144.88 1150.93 L1144.36 1150.93 L1143.84 1150.93 L1143.32 1150.93 L1142.8 1150.93 L1142.28 1150.93 L1141.76 1150.93 L1141.24 1150.93 L1140.72 1150.93 L1140.21 1150.93 L1139.69 1150.93 L1139.17 1150.93 L1138.65 1150.93 L1138.13 1150.93 L1137.61 1150.93 L1137.09 1150.93 L1136.57 1150.93 L1136.05 1150.93 L1135.53 1150.93 L1135.01 1150.93 L1134.49 1150.93 L1133.97 1150.93 L1133.45 1150.93 L1132.93 1150.93 L1132.41 1150.93 L1131.89 1150.93 L1131.37 1150.93 L1130.85 1150.93 L1130.33 1150.93 L1129.81 1150.93 L1129.29 1150.93 L1128.78 1150.93 L1128.26 1150.93 L1127.74 1150.93 L1127.22 1150.93 L1126.7 1150.93 L1126.18 1150.93 L1125.66 1150.93 L1125.14 1150.93 L1124.62 1150.93 L1124.1 1150.93 L1123.58 1150.93 L1123.06 1150.93 L1122.54 1150.93 L1122.02 1150.93 L1121.5 1150.93 L1120.98 1150.93 L1120.46 1150.93 L1119.94 1150.93 L1119.42 1150.93 L1118.9 1150.93 L1118.38 1150.93 L1117.87 1150.93 L1117.35 1150.93 L1116.83 1150.93 L1116.31 1150.93 L1115.79 1150.93 L1115.27 1150.93 L1114.75 1150.93 L1114.23 1150.93 L1113.71 1150.93 L1113.19 1150.93 L1112.67 1150.93 L1112.15 1150.93 L1111.63 1150.93 L1111.11 1150.93 L1110.59 1150.93 L1110.07 1150.93 L1109.55 1150.93 L1109.03 1150.93 L1108.51 1150.93 L1107.99 1150.93 L1107.47 1150.93 L1106.95 1150.93 L1106.44 1150.93 L1105.92 1150.93 L1105.4 1150.93 L1104.88 1150.93 L1104.36 1150.93 L1103.84 1150.93 L1103.32 1150.93 L1102.8 1150.93 L1102.28 1150.93 L1101.76 1150.93 L1101.24 1150.93 L1100.72 1150.93 L1100.2 1150.93 L1099.68 1150.93 L1099.16 1150.93 L1098.64 1150.93 L1098.12 1150.93 L1097.6 1150.93 L1097.08 1150.93 L1096.56 1150.93 L1096.04 1150.93 L1095.52 1150.93 L1095.01 1150.93 L1094.49 1150.93 L1093.97 1150.93 L1093.45 1150.93 L1092.93 1150.93 L1092.41 1150.93 L1091.89 1150.93 L1091.37 1150.93 L1090.85 1150.93 L1090.33 1150.93 L1089.81 1150.93 L1089.29 1150.93 L1088.77 1150.93 L1088.25 1150.93 L1087.73 1150.93 L1087.21 1150.93 L1086.69 1150.93 L1086.17 1150.93 L1085.65 1150.93 L1085.13 1150.93 L1084.61 1150.93 L1084.09 1150.93 L1083.58 1150.93 L1083.06 1150.93 L1082.54 1150.93 L1082.02 1150.93 L1081.5 1150.93 L1080.98 1150.93 L1080.46 1150.93 L1079.94 1150.93 L1079.42 1150.93 L1078.9 1150.93 L1078.38 1150.93 L1077.86 1150.93 L1077.34 1150.93 L1076.82 1150.93 L1076.3 1150.93 L1075.78 1150.93 L1075.26 1150.93 L1074.74 1150.93 L1074.22 1150.93 L1073.7 1150.93 L1073.18 1150.93 L1072.66 1150.93 L1072.15 1150.93 L1071.63 1150.93 L1071.11 1150.93 L1070.59 1150.93 L1070.07 1150.93 L1069.55 1150.93 L1069.03 1150.93 L1068.51 1150.93 L1067.99 1150.93 L1067.47 1150.93 L1066.95 1150.93 L1066.43 1150.93 L1065.91 1150.93 L1065.39 1150.93 L1064.87 1150.93 L1064.35 1150.93 L1063.83 1150.93 L1063.31 1150.93 L1062.79 1150.93 L1062.27 1150.93 L1061.75 1150.93 L1061.24 1150.93 L1060.72 1150.93 L1060.2 1150.93 L1059.68 1150.93 L1059.16 1150.93 L1058.64 1150.93 L1058.12 1150.93 L1057.6 1150.93 L1057.08 1150.93 L1056.56 1150.93 L1056.04 1150.93 L1055.52 1150.93 L1055 1150.93 L1054.48 1150.93 L1053.96 1150.93 L1053.44 1150.93 L1052.92 1150.93 L1052.4 1150.93 L1051.88 1150.93 L1051.36 1150.93 L1050.84 1150.93 L1050.32 1150.93 L1049.81 1150.93 L1049.29 1150.93 L1048.77 1150.93 L1048.25 1150.93 L1047.73 1150.93 L1047.21 1150.93 L1046.69 1150.93 L1046.17 1150.93 L1045.65 1150.93 L1045.13 1150.93 L1044.61 1150.93 L1044.09 1150.93 L1043.57 1150.93 L1043.05 1150.93 L1042.53 1150.93 L1042.01 1150.93 L1041.49 1150.93 L1040.97 1150.93 L1040.45 1150.93 L1039.93 1150.93 L1039.41 1150.93 L1038.89 1150.93 L1038.38 1150.93 L1037.86 1150.93 L1037.34 1150.93 L1036.82 1150.93 L1036.3 1150.93 L1035.78 1150.93 L1035.26 1150.93 L1034.74 1150.93 L1034.22 1150.93 L1033.7 1150.93 L1033.18 1150.93 L1032.66 1150.93 L1032.14 1150.93 L1031.62 1150.93 L1031.1 1150.93 L1030.58 1150.93 L1030.06 1150.93 L1029.54 1150.93 L1029.02 1150.93 L1028.5 1150.93 L1027.98 1150.93 L1027.46 1150.93 L1026.95 1150.93 L1026.43 1150.93 L1025.91 1150.93 L1025.39 1150.93 L1024.87 1150.93 L1024.35 1150.93 L1023.83 1150.93 L1023.31 1150.93 L1022.79 1150.93 L1022.27 1150.93 L1021.75 1150.93 L1021.23 1150.93 L1020.71 1150.93 L1020.19 1150.93 L1019.67 1150.93 L1019.15 1150.93 L1018.63 1150.93 L1018.11 1150.93 L1017.59 1150.93 L1017.07 1150.93 L1016.55 1150.93 L1016.03 1150.93 L1015.52 1150.93 L1015 1150.93 L1014.48 1150.93 L1013.96 1150.93 L1013.44 1150.93 L1012.92 1150.93 L1012.4 1150.93 L1011.88 1150.93 L1011.36 1150.93 L1010.84 1150.93 L1010.32 1150.93 L1009.8 1150.93 L1009.28 1150.93 L1008.76 1150.93 L1008.24 1150.93 L1007.72 1150.93 L1007.2 1150.93 L1006.68 1150.93 L1006.16 1150.93 L1005.64 1150.93 L1005.12 1150.93 L1004.61 1150.93 L1004.09 1150.93 L1003.57 1150.93 L1003.05 1150.93 L1002.53 1150.93 L1002.01 1150.93 L1001.49 1150.93 L1000.97 1150.93 L1000.45 1150.93 L999.929 1150.93 L999.41 1150.93 L998.89 1150.93 L998.371 1150.93 L997.851 1150.93 L997.331 1150.93 L996.812 1150.93 L996.292 1150.93 L995.773 1150.93 L995.253 1150.93 L994.734 1150.93 L994.214 1150.93 L993.695 1150.93 L993.175 1150.93 L992.656 1150.93 L992.136 1150.93 L991.617 1150.93 L991.097 1150.93 L990.577 1150.93 L990.058 1150.93 L989.538 1150.93 L989.019 1150.93 L988.499 1150.93 L987.98 1150.93 L987.46 1150.93 L986.941 1150.93 L986.421 1150.93 L985.902 1150.93 L985.382 1150.93 L984.862 1150.93 L984.343 1150.93 L983.823 1150.93 L983.304 1150.93 L982.784 1150.93 L982.265 1150.93 L981.745 1150.93 L981.226 1150.93 L980.706 1150.93 L980.187 1150.93 L979.667 1150.93 L979.148 1150.93 L978.628 1150.93 L978.108 1150.93 L977.589 1150.93 L977.069 1150.93 L976.55 1150.93 L976.03 1150.93 L975.511 1150.93 L974.991 1150.93 L974.472 1150.93 L973.952 1150.93 L973.433 1150.93 L972.913 1150.93 L972.393 1150.93 L971.874 1150.93 L971.354 1150.93 L970.835 1150.93 L970.315 1150.93 L969.796 1150.93 L969.276 1150.93 L968.757 1150.93 L968.237 1150.93  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip292)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"968.237,1150.98 968.757,1150.98 969.276,1150.98 969.796,1150.98 970.315,1150.98 970.835,1150.98 971.354,1150.98 971.874,1150.98 972.393,1150.98 972.913,1150.98 973.433,1150.98 973.952,1150.98 974.472,1150.98 974.991,1150.98 975.511,1150.98 976.03,1150.98 976.55,1150.98 977.069,1150.98 977.589,1150.98 978.108,1150.98 978.628,1150.98 979.148,1150.98 979.667,1150.98 980.187,1150.98 980.706,1150.98 981.226,1150.98 981.745,1150.98 982.265,1150.98 982.784,1150.98 983.304,1150.98 983.823,1150.98 984.343,1150.98 984.862,1150.98 985.382,1150.98 985.902,1150.98 986.421,1150.98 986.941,1150.98 987.46,1150.98 987.98,1150.98 988.499,1150.98 989.019,1150.98 989.538,1150.98 990.058,1150.98 990.577,1150.98 991.097,1150.98 991.617,1150.98 992.136,1150.98 992.656,1150.98 993.175,1150.98 993.695,1150.98 994.214,1150.98 994.734,1150.98 995.253,1150.98 995.773,1150.98 996.292,1150.98 996.812,1150.98 997.331,1150.98 997.851,1150.98 998.371,1150.98 998.89,1150.98 999.41,1150.98 999.929,1150.98 1000.45,1150.98 1000.97,1150.98 1001.49,1150.98 1002.01,1150.98 1002.53,1150.98 1003.05,1150.98 1003.57,1150.98 1004.09,1150.98 1004.61,1150.98 1005.12,1150.98 1005.64,1150.98 1006.16,1150.98 1006.68,1150.98 1007.2,1150.98 1007.72,1150.98 1008.24,1150.98 1008.76,1150.98 1009.28,1150.98 1009.8,1150.98 1010.32,1150.98 1010.84,1150.98 1011.36,1150.98 1011.88,1150.98 1012.4,1150.98 1012.92,1150.98 1013.44,1150.98 1013.96,1150.98 1014.48,1150.98 1015,1150.98 1015.52,1150.98 1016.03,1150.98 1016.55,1150.98 1017.07,1150.98 1017.59,1150.98 1018.11,1150.98 1018.63,1150.98 1019.15,1150.98 1019.67,1150.98 1020.19,1150.98 1020.71,1150.98 1021.23,1150.98 1021.75,1150.98 1022.27,1150.98 1022.79,1150.98 1023.31,1150.98 1023.83,1150.98 1024.35,1150.98 1024.87,1150.98 1025.39,1150.98 1025.91,1150.98 1026.43,1150.98 1026.95,1150.98 1027.46,1150.98 1027.98,1150.98 1028.5,1150.98 1029.02,1150.98 1029.54,1150.98 1030.06,1150.98 1030.58,1150.98 1031.1,1150.98 1031.62,1150.98 1032.14,1150.98 1032.66,1150.98 1033.18,1150.98 1033.7,1150.98 1034.22,1150.98 1034.74,1150.98 1035.26,1150.98 1035.78,1150.98 1036.3,1150.98 1036.82,1150.98 1037.34,1150.98 1037.86,1150.98 1038.38,1150.98 1038.89,1150.98 1039.41,1150.98 1039.93,1150.98 1040.45,1150.98 1040.97,1150.98 1041.49,1150.98 1042.01,1150.98 1042.53,1150.98 1043.05,1150.98 1043.57,1150.98 1044.09,1150.98 1044.61,1150.98 1045.13,1150.98 1045.65,1150.98 1046.17,1150.98 1046.69,1150.98 1047.21,1150.98 1047.73,1150.98 1048.25,1150.98 1048.77,1150.98 1049.29,1150.98 1049.81,1150.98 1050.32,1150.98 1050.84,1150.98 1051.36,1150.98 1051.88,1150.98 1052.4,1150.98 1052.92,1150.98 1053.44,1150.98 1053.96,1150.98 1054.48,1150.98 1055,1150.98 1055.52,1150.98 1056.04,1150.98 1056.56,1150.98 1057.08,1150.98 1057.6,1150.98 1058.12,1150.98 1058.64,1150.98 1059.16,1150.98 1059.68,1150.98 1060.2,1150.98 1060.72,1150.98 1061.24,1150.98 1061.75,1150.98 1062.27,1150.98 1062.79,1150.98 1063.31,1150.98 1063.83,1150.98 1064.35,1150.98 1064.87,1150.98 1065.39,1150.98 1065.91,1150.98 1066.43,1150.98 1066.95,1150.98 1067.47,1150.98 1067.99,1150.98 1068.51,1150.98 1069.03,1150.98 1069.55,1150.98 1070.07,1150.98 1070.59,1150.98 1071.11,1150.98 1071.63,1150.98 1072.15,1150.98 1072.66,1150.98 1073.18,1150.98 1073.7,1150.98 1074.22,1150.98 1074.74,1150.98 1075.26,1150.98 1075.78,1150.98 1076.3,1150.98 1076.82,1150.98 1077.34,1150.98 1077.86,1150.98 1078.38,1150.98 1078.9,1150.98 1079.42,1150.98 1079.94,1150.98 1080.46,1150.98 1080.98,1150.98 1081.5,1150.98 1082.02,1150.98 1082.54,1150.98 1083.06,1150.98 1083.58,1150.98 1084.09,1150.98 1084.61,1150.98 1085.13,1150.98 1085.65,1150.98 1086.17,1150.98 1086.69,1150.98 1087.21,1150.98 1087.73,1150.98 1088.25,1150.98 1088.77,1150.98 1089.29,1150.98 1089.81,1150.98 1090.33,1150.98 1090.85,1150.98 1091.37,1150.98 1091.89,1150.98 1092.41,1150.98 1092.93,1150.98 1093.45,1150.98 1093.97,1150.98 1094.49,1150.98 1095.01,1150.98 1095.52,1150.98 1096.04,1150.98 1096.56,1150.98 1097.08,1150.98 1097.6,1150.98 1098.12,1150.98 1098.64,1150.98 1099.16,1150.98 1099.68,1150.98 1100.2,1150.98 1100.72,1150.98 1101.24,1150.98 1101.76,1150.98 1102.28,1150.98 1102.8,1150.98 1103.32,1150.98 1103.84,1150.98 1104.36,1150.98 1104.88,1150.98 1105.4,1150.98 1105.92,1150.98 1106.44,1150.98 1106.95,1150.98 1107.47,1150.98 1107.99,1150.98 1108.51,1150.98 1109.03,1150.98 1109.55,1150.98 1110.07,1150.98 1110.59,1150.98 1111.11,1150.98 1111.63,1150.98 1112.15,1150.98 1112.67,1150.98 1113.19,1150.98 1113.71,1150.98 1114.23,1150.98 1114.75,1150.98 1115.27,1150.98 1115.79,1150.98 1116.31,1150.98 1116.83,1150.98 1117.35,1150.98 1117.87,1150.98 1118.38,1150.98 1118.9,1150.98 1119.42,1150.98 1119.94,1150.98 1120.46,1150.98 1120.98,1150.98 1121.5,1150.98 1122.02,1150.98 1122.54,1150.98 1123.06,1150.98 1123.58,1150.98 1124.1,1150.98 1124.62,1150.98 1125.14,1150.98 1125.66,1150.98 1126.18,1150.98 1126.7,1150.98 1127.22,1150.98 1127.74,1150.98 1128.26,1150.98 1128.78,1150.98 1129.29,1150.98 1129.81,1150.98 1130.33,1150.98 1130.85,1150.98 1131.37,1150.98 1131.89,1150.98 1132.41,1150.98 1132.93,1150.98 1133.45,1150.98 1133.97,1150.98 1134.49,1150.98 1135.01,1150.98 1135.53,1150.98 1136.05,1150.98 1136.57,1150.98 1137.09,1150.98 1137.61,1150.98 1138.13,1150.98 1138.65,1150.98 1139.17,1150.98 1139.69,1150.98 1140.21,1150.98 1140.72,1150.98 1141.24,1150.98 1141.76,1150.98 1142.28,1150.98 1142.8,1150.98 1143.32,1150.98 1143.84,1150.98 1144.36,1150.98 1144.88,1150.98 1145.4,1150.98 1145.92,1150.98 1146.44,1150.98 1146.96,1150.98 1147.48,1150.98 1148,1150.98 1148.52,1150.98 1149.04,1150.98 1149.56,1150.98 1150.08,1150.98 1150.6,1150.98 1151.12,1150.98 1151.64,1150.98 1152.15,1150.98 1152.67,1150.98 1153.19,1150.98 1153.71,1150.98 1154.23,1150.98 1154.75,1150.98 1155.27,1150.98 1155.79,1150.98 1156.31,1150.98 1156.83,1150.98 1157.35,1150.98 1157.87,1150.98 1158.39,1150.98 1158.91,1150.98 1159.43,1150.98 1159.95,1150.98 1160.47,1150.98 1160.99,1150.98 1161.51,1150.98 1162.03,1150.98 1162.55,1150.98 1163.07,1150.98 1163.58,1150.98 1164.1,1150.98 1164.62,1150.98 1165.14,1150.98 1165.66,1150.98 1166.18,1150.98 1166.7,1150.98 1167.22,1150.98 1167.74,1150.98 1168.26,1150.98 1168.78,1150.98 1169.3,1150.98 1169.82,1150.98 1170.34,1150.98 1170.86,1150.98 1171.38,1150.98 1171.9,1150.98 1172.42,1150.98 1172.94,1150.98 1173.46,1150.98 1173.98,1150.98 1174.5,1150.98 1175.01,1150.98 1175.53,1150.98 1176.05,1150.98 1176.57,1150.98 1177.09,1150.98 1177.61,1150.98 1178.13,1150.98 1178.65,1150.98 1179.17,1150.98 1179.69,1150.98 1180.21,1150.98 1180.73,1150.98 1181.25,1150.98 1181.77,1150.98 1182.29,1150.98 1182.81,1150.98 1183.33,1150.98 1183.85,1150.98 1184.37,1150.98 1184.89,1150.98 1185.41,1150.98 1185.92,1150.98 1186.44,1150.98 1186.96,1150.98 1187.48,1150.98 1188,1150.98 1188.52,1150.98 1189.04,1150.98 1189.56,1150.98 1190.08,1150.98 1190.6,1150.98 1191.12,1150.98 1191.64,1150.98 1192.16,1150.98 1192.68,1150.98 1193.2,1150.98 1193.72,1150.98 1194.24,1150.98 1194.76,1150.98 1195.28,1150.98 1195.8,1150.98 1196.32,1150.98 1196.84,1150.98 1197.35,1150.98 1197.87,1150.98 1198.39,1150.98 1198.91,1150.98 1199.43,1150.98 1199.95,1150.98 1200.47,1150.98 1200.99,1150.98 1201.51,1150.98 1202.03,1150.98 1202.55,1150.98 1203.07,1150.98 1203.59,1150.98 1204.11,1150.98 1204.63,1150.98 1205.15,1150.98 1205.67,1150.98 1206.19,1150.98 1206.71,1150.98 1207.23,1150.98 1207.75,1150.98 1208.27,1150.98 1208.78,1150.98 1209.3,1150.98 1209.82,1150.98 1210.34,1150.98 1210.86,1150.98 1211.38,1150.98 1211.9,1150.98 1212.42,1150.98 1212.94,1150.98 1213.46,1150.98 1213.98,1150.98 1214.5,1150.98 1215.02,1150.98 1215.54,1150.98 1216.06,1150.98 1216.58,1150.98 1217.1,1150.98 1217.62,1150.98 1218.14,1150.98 1218.66,1150.98 1219.18,1150.98 1219.7,1150.98 1220.21,1150.98 1220.73,1150.98 1221.25,1150.98 1221.77,1150.98 1222.29,1150.98 1222.81,1150.98 1223.33,1150.98 1223.85,1150.98 1224.37,1150.98 1224.89,1150.98 1225.41,1150.98 1225.93,1150.98 1226.45,1150.98 1226.97,1150.98 1227.49,1150.98 1228.01,1150.98 1228.53,1150.98 1229.05,1150.98 1229.57,1150.98 1230.09,1150.98 1230.61,1150.98 1231.13,1150.98 1231.64,1150.98 1232.16,1150.98 1232.68,1150.98 1233.2,1150.98 1233.72,1150.98 1234.24,1150.98 1234.76,1150.98 1235.28,1150.98 1235.8,1150.98 1236.32,1150.98 1236.84,1150.98 1237.36,1150.98 1237.88,1150.98 1238.4,1150.98 1238.92,1150.98 1239.44,1150.98 1239.96,1150.98 1240.48,1150.98 1241,1150.98 1241.52,1150.98 1242.04,1150.98 1242.55,1150.98 1243.07,1150.98 1243.59,1150.98 1244.11,1150.98 1244.63,1150.98 1245.15,1150.98 1245.67,1150.98 1246.19,1150.98 1246.71,1150.98 1247.23,1150.98 1247.75,1150.98 1248.27,1150.98 1248.79,1150.98 1249.31,1150.98 1249.83,1150.98 1250.35,1150.98 1250.87,1150.98 1251.39,1150.98 1251.91,1150.98 1252.43,1150.98 1252.95,1150.98 1253.47,1150.98 1253.98,1150.98 1254.5,1150.98 1255.02,1150.98 1255.54,1150.98 1256.06,1150.98 1256.58,1150.98 1257.1,1150.98 1257.62,1150.98 1258.14,1150.98 1258.66,1150.98 1259.18,1150.98 1259.7,1150.98 1260.22,1150.98 1260.74,1150.98 1261.26,1150.98 1261.78,1150.98 1262.3,1150.98 1262.82,1150.98 1263.34,1150.98 1263.86,1150.98 1264.38,1150.98 1264.9,1150.98 1265.41,1150.98 1265.93,1150.98 1266.45,1150.98 1266.97,1150.98 1267.49,1150.98 1268.01,1150.98 1268.53,1150.98 1269.05,1150.98 1269.57,1150.98 1270.09,1150.98 1270.61,1150.98 1271.13,1150.98 1271.65,1150.98 1272.17,1150.98 1272.69,1150.98 1273.21,1150.98 1273.73,1150.98 1274.25,1150.98 1274.77,1150.98 1275.29,1150.98 1275.81,1150.98 1276.33,1150.98 1276.84,1150.98 1277.36,1150.98 1277.88,1150.98 1278.4,1150.98 1278.92,1150.98 1279.44,1150.98 1279.96,1150.98 1280.48,1150.98 1281,1150.98 1281.52,1150.98 1282.04,1150.98 1282.56,1150.98 1283.08,1150.98 1283.6,1150.98 1284.12,1150.98 1284.64,1150.98 1285.16,1150.98 1285.68,1150.98 1286.2,1150.98 1286.72,1150.98 1287.24,1150.98 1287.76,1150.98 1288.27,1150.98 1288.79,1150.98 1289.31,1150.98 1289.83,1150.98 1290.35,1150.98 1290.87,1150.98 1291.39,1150.98 1291.91,1150.98 1292.43,1150.98 1292.95,1150.98 1293.47,1150.98 1293.99,1150.98 1294.51,1150.98 1295.03,1150.98 1295.55,1150.98 1296.07,1150.98 1296.59,1150.98 1297.11,1150.98 1297.63,1150.98 1298.15,1150.98 1298.67,1150.98 1299.18,1150.98 1299.7,1150.98 1300.22,1150.98 1300.74,1150.98 1301.26,1150.98 1301.78,1150.98 1302.3,1150.98 1302.82,1150.98 1303.34,1150.98 1303.86,1150.98 1304.38,1150.98 1304.9,1150.98 1305.42,1150.98 1305.94,1150.98 1306.46,1150.98 1306.98,1150.98 1307.5,1150.98 1308.02,1150.98 1308.54,1150.98 1309.06,1150.98 1309.58,1150.98 1310.1,1150.98 1310.61,1150.98 1311.13,1150.98 1311.65,1150.98 1312.17,1150.98 1312.69,1150.98 1313.21,1150.98 1313.73,1150.98 1314.25,1150.98 1314.77,1150.98 1315.29,1150.98 1315.81,1150.98 1316.33,1150.98 1316.85,1150.98 1317.37,1150.98 1317.89,1150.98 1318.41,1150.98 1318.93,1150.98 1319.45,1150.98 1319.97,1150.98 1320.49,1150.98 1321.01,1150.98 1321.53,1150.98 1322.04,1150.98 1322.56,1150.98 1323.08,1150.98 1323.6,1150.98 1324.12,1150.98 1324.64,1150.98 1325.16,1150.98 1325.68,1150.98 1326.2,1150.98 1326.72,1150.98 1327.24,1150.98 1327.76,1150.98 1328.28,1150.98 1328.8,1150.98 1329.32,1150.98 1329.84,1150.98 1330.36,1150.98 1330.88,1150.98 1331.4,1150.98 1331.92,1150.98 1332.44,1150.98 1332.96,1150.98 1333.47,1150.98 1333.99,1150.98 1334.51,1150.98 1335.03,1150.98 1335.55,1150.98 1336.07,1150.98 1336.59,1150.98 1337.11,1150.98 1337.63,1150.98 1338.15,1150.98 1338.67,1150.98 1339.19,1150.98 1339.71,1150.98 1340.23,1150.98 1340.75,1150.98 1341.27,1150.98 1341.79,1150.98 1342.31,1150.98 1342.83,1150.98 1343.35,1150.98 1343.87,1150.98 1344.39,1150.98 1344.9,1150.98 1345.42,1150.98 1345.94,1150.98 1346.46,1150.98 1346.98,1150.98 1347.5,1150.98 1348.02,1150.98 1348.54,1150.98 1349.06,1150.98 1349.58,1150.98 1350.1,1150.98 1350.62,1150.98 1351.14,1150.98 1351.66,1150.98 1352.18,1150.98 1352.7,1150.98 1353.22,1150.98 1353.74,1150.98 1354.26,1150.98 1354.78,1150.98 1355.3,1150.98 1355.81,1150.98 1356.33,1150.98 1356.85,1150.98 1357.37,1150.98 1357.89,1150.98 1358.41,1150.98 1358.93,1150.98 1359.45,1150.98 1359.97,1150.98 1360.49,1150.98 1361.01,1150.98 1361.53,1150.98 1362.05,1150.98 1362.57,1150.98 1363.09,1150.98 1363.61,1150.98 1364.13,1150.98 1364.65,1150.98 1365.17,1150.98 1365.69,1150.98 1366.21,1150.98 1366.73,1150.98 1367.24,1150.98 1367.76,1150.98 1368.28,1150.98 1368.8,1150.98 1369.32,1150.98 1369.84,1150.98 1370.36,1150.98 1370.88,1150.98 1371.4,1150.98 1371.92,1150.98 1372.44,1150.98 1372.96,1150.98 1373.48,1150.98 1374,1150.98 1374.52,1150.98 1375.04,1150.98 1375.56,1150.98 1376.08,1150.98 1376.6,1150.98 1377.12,1150.98 1377.64,1150.98 1378.16,1150.98 1378.67,1150.98 1379.19,1150.98 1379.71,1150.98 1380.23,1150.98 1380.75,1150.98 1381.27,1150.98 1381.79,1150.98 1382.31,1150.98 1382.83,1150.98 1383.35,1150.98 1383.87,1150.98 1384.39,1150.98 1384.91,1150.98 1385.43,1150.98 1385.95,1150.98 1386.47,1150.98 1386.99,1150.98 1387.51,1150.98 1388.03,1150.98 1388.55,1150.98 1389.07,1150.98 1389.59,1150.98 1390.1,1150.98 1390.62,1150.98 1391.14,1150.98 1391.66,1150.98 1392.18,1150.98 1392.7,1150.98 1393.22,1150.98 1393.74,1150.98 1394.26,1150.98 1394.78,1150.98 1395.3,1150.98 1395.82,1150.98 1396.34,1150.98 1396.86,1150.98 1397.38,1150.98 1397.9,1150.98 1398.42,1150.98 1398.94,1150.98 1399.46,1150.98 1399.98,1150.98 1400.5,1150.98 1401.02,1150.98 1401.53,1150.98 1402.05,1150.98 1402.57,1150.98 1403.09,1150.98 1403.61,1150.98 1404.13,1150.98 1404.65,1150.98 1405.17,1150.98 1405.69,1150.98 1406.21,1150.98 1406.73,1150.98 1407.25,1150.98 1407.77,1150.98 1408.29,1150.98 1408.81,1150.98 1409.33,1150.98 1409.85,1150.98 1410.37,1150.98 1410.89,1150.98 1411.41,1150.98 1411.93,1150.98 1412.44,1150.98 1412.96,1150.98 1413.48,1150.98 1414,1150.98 1414.52,1150.98 1415.04,1150.98 1415.56,1150.98 1416.08,1150.98 1416.6,1150.98 1417.12,1150.98 1417.64,1150.98 1418.16,1150.98 1418.68,1150.98 1419.2,1150.98 1419.72,1150.98 1420.24,1150.98 1420.76,1150.98 1421.28,1150.98 1421.8,1150.98 1422.32,1150.98 1422.84,1150.98 1423.36,1150.98 1423.87,1150.98 1424.39,1150.98 1424.91,1150.98 1425.43,1150.98 1425.95,1150.98 1426.47,1150.98 1426.99,1150.98 1427.51,1150.98 1428.03,1150.98 1428.55,1150.98 1429.07,1150.98 1429.59,1150.98 1430.11,1150.98 1430.63,1150.98 1431.15,1150.98 1431.67,1150.98 1432.19,1150.98 1432.71,1150.98 1433.23,1150.98 1433.75,1150.98 1434.27,1150.98 1434.79,1150.98 1435.3,1150.98 1435.82,1150.98 1436.34,1150.98 1436.86,1150.98 1437.38,1150.98 1437.9,1150.98 1438.42,1150.98 1438.94,1150.98 1439.46,1150.98 1439.98,1150.98 1440.5,1150.98 1441.02,1150.98 1441.54,1150.98 1442.06,1150.98 1442.58,1150.98 1443.1,1150.98 1443.62,1150.98 1444.14,1150.98 1444.66,1150.98 1445.18,1150.98 1445.7,1150.98 1446.22,1150.98 1446.73,1150.98 1447.25,1150.98 1447.77,1150.98 1448.29,1150.98 1448.81,1150.98 1449.33,1150.98 1449.85,1150.98 1450.37,1150.98 1450.89,1150.98 1451.41,1150.98 1451.93,1150.98 1452.45,1150.98 1452.97,1150.98 1453.49,1150.98 1454.01,1150.98 1454.53,1150.98 1455.05,1150.98 1455.57,1150.98 1456.09,1150.98 1456.61,1150.98 1457.13,1150.98 1457.65,1150.98 1458.16,1150.98 1458.68,1150.98 1459.2,1150.98 1459.72,1150.98 1460.24,1150.98 1460.76,1150.98 1461.28,1150.98 1461.8,1150.98 1462.32,1150.98 1462.84,1150.98 1463.36,1150.98 1463.88,1150.98 1464.4,1150.98 1464.92,1150.98 1465.44,1150.98 1465.96,1150.98 1466.48,1150.98 1467,1150.98 1467.52,1150.98 1468.04,1150.98 1468.56,1150.98 1469.07,1150.98 1469.59,1150.98 1470.11,1150.98 1470.63,1150.98 1471.15,1150.98 1471.67,1150.98 1472.19,1150.98 1472.71,1150.98 1473.23,1150.98 1473.75,1150.98 1474.27,1150.98 1474.79,1150.98 1475.31,1150.98 1475.83,1150.98 1476.35,1150.98 1476.87,1150.98 1477.39,1150.98 1477.91,1150.98 1478.43,1150.98 1478.95,1150.98 1479.47,1150.98 1479.99,1150.98 1480.5,1150.98 1481.02,1150.98 1481.54,1150.98 1482.06,1150.98 1482.58,1150.98 1483.1,1150.98 1483.62,1150.98 1484.14,1150.98 1484.66,1150.98 1485.18,1150.98 1485.7,1150.98 1486.22,1150.98 1486.74,1150.98 1487.26,1150.98 1487.78,1150.98 1488.3,1150.98 1488.82,1150.98 1489.34,1150.98 1489.86,1150.98 1490.38,1150.98 1490.9,1150.98 1491.42,1150.98 1491.93,1150.98 1492.45,1150.98 1492.97,1150.98 1493.49,1150.98 1494.01,1150.98 1494.53,1150.98 1495.05,1150.98 1495.57,1150.98 1496.09,1150.98 1496.61,1150.98 1497.13,1150.98 1497.65,1150.98 1498.17,1150.98 1498.69,1150.98 1499.21,1150.98 1499.73,1150.98 1500.25,1150.98 1500.77,1150.98 1501.29,1150.98 1501.81,1150.98 1502.33,1150.98 1502.85,1150.98 1503.36,1150.98 1503.88,1150.98 1504.4,1150.98 1504.92,1150.98 1505.44,1150.98 1505.96,1150.98 1506.48,1150.98 1507,1150.98 1507.52,1150.98 1508.04,1150.98 1508.56,1150.98 1509.08,1150.98 1509.6,1150.98 1510.12,1150.98 1510.64,1150.98 1511.16,1150.98 1511.68,1150.98 1512.2,1150.98 1512.72,1150.98 1513.24,1150.98 1513.76,1150.98 1514.28,1150.98 1514.79,1150.98 1515.31,1150.98 1515.83,1150.98 1516.35,1150.98 1516.87,1150.98 1517.39,1150.98 1517.91,1150.98 1518.43,1150.98 1518.95,1150.98 1519.47,1150.98 1519.99,1150.98 1520.51,1150.98 1521.03,1150.98 1521.55,1150.98 1522.07,1150.98 1522.59,1150.98 1523.11,1150.98 1523.63,1150.98 1524.15,1150.98 1524.67,1150.98 1525.19,1150.98 1525.7,1150.98 1526.22,1150.98 1526.74,1150.98 1527.26,1150.98 1527.78,1150.98 1528.3,1150.98 1528.82,1150.98 1529.34,1150.98 1529.86,1150.98 1530.38,1150.98 1530.9,1150.98 1531.42,1150.98 1531.94,1150.98 1532.46,1150.98 1532.98,1150.98 1533.5,1150.98 1534.02,1150.98 1534.54,1150.98 1535.06,1150.98 1535.58,1150.98 1536.1,1150.98 1536.62,1150.98 1537.13,1150.98 1537.65,1150.98 1538.17,1150.98 1538.69,1150.98 1539.21,1150.98 1539.73,1150.98 1540.25,1150.98 1540.77,1150.98 1541.29,1150.98 1541.81,1150.98 1542.33,1150.98 1542.85,1150.98 1543.37,1150.98 1543.89,1150.98 1544.41,1150.98 1544.93,1150.98 1545.45,1150.98 1545.97,1150.98 1546.49,1150.98 1547.01,1150.98 1547.53,1150.98 1548.05,1150.98 1548.56,1150.98 1549.08,1150.98 1549.6,1150.98 1550.12,1150.98 1550.64,1150.98 1551.16,1150.98 1551.68,1150.98 1552.2,1150.98 1552.72,1150.98 1553.24,1150.98 1553.76,1150.98 1554.28,1150.98 1554.8,1150.98 1555.32,1150.98 1555.84,1150.98 1556.36,1150.98 1556.88,1150.98 1557.4,1150.98 1557.92,1150.98 1558.44,1150.98 1558.96,1150.98 1559.48,1150.98 1559.99,1150.98 1560.51,1150.98 1561.03,1150.98 1561.55,1150.98 1562.07,1150.98 1562.59,1150.98 1563.11,1150.98 1563.63,1150.98 1564.15,1150.98 1564.67,1150.98 1565.19,1150.98 1565.71,1150.98 1566.23,1150.98 1566.75,1150.98 1567.27,1150.98 1567.79,1150.98 1568.31,1150.98 1568.83,1150.98 1569.35,1150.98 1569.87,1150.98 1570.39,1150.98 1570.91,1150.98 1571.42,1150.98 1571.94,1150.98 1572.46,1150.98 1572.98,1150.98 1573.5,1150.98 1574.02,1150.98 1574.54,1150.98 1575.06,1150.98 1575.58,1150.98 1576.1,1150.98 1576.62,1150.98 1577.14,1150.98 1577.66,1150.98 1578.18,1150.98 1578.7,1150.98 1579.22,1150.98 1579.74,1150.98 1580.26,1150.98 1580.78,1150.98 1581.3,1150.98 1581.82,1150.98 1582.33,1150.98 1582.85,1150.98 1583.37,1150.98 1583.89,1150.98 1584.41,1150.98 1584.93,1150.98 1585.45,1150.98 1585.97,1150.98 1586.49,1150.98 1587.01,1150.98 1587.53,1150.98 1588.05,1150.98 1588.57,1150.98 1589.09,1150.98 1589.61,1150.98 1590.13,1150.98 1590.65,1150.98 1591.17,1150.98 1591.69,1150.98 1592.21,1150.98 1592.73,1150.98 1593.25,1150.98 1593.76,1150.98 1594.28,1150.98 1594.8,1150.98 1595.32,1150.98 1595.84,1150.98 1596.36,1150.98 1596.88,1150.98 1597.4,1150.98 1597.92,1150.98 1598.44,1150.98 1598.96,1150.98 1599.48,1150.98 1600,1150.98 1600.52,1150.98 1601.04,1150.98 1601.56,1150.98 1602.08,1150.98 1602.6,1150.98 1603.12,1150.98 1603.64,1150.98 1604.16,1150.98 1604.68,1150.98 1605.19,1150.98 1605.71,1150.98 1606.23,1150.98 1606.75,1150.98 1607.27,1150.98 1607.79,1150.98 1608.31,1150.98 1608.83,1150.98 1609.35,1150.98 1609.87,1150.98 1610.39,1150.98 1610.91,1150.98 1611.43,1150.98 1611.95,1150.98 1612.47,1150.98 1612.99,1150.98 1613.51,1150.98 1614.03,1150.98 1614.55,1150.98 1615.07,1150.98 1615.59,1150.98 1616.11,1150.98 1616.62,1150.98 1617.14,1150.98 1617.66,1150.98 1618.18,1150.98 1618.7,1150.98 1619.22,1150.98 1619.74,1150.98 1620.26,1150.98 1620.78,1150.98 1621.3,1150.98 1621.82,1150.98 1622.34,1150.98 1622.86,1150.98 1623.38,1150.98 1623.9,1150.98 1624.42,1150.98 1624.94,1150.98 1625.46,1150.98 1625.98,1150.98 1626.5,1150.98 1627.02,1150.98 1627.54,1150.98 1628.05,1150.98 1628.57,1150.98 1629.09,1150.98 1629.61,1150.98 1630.13,1150.98 1630.65,1150.98 1631.17,1150.98 1631.69,1150.98 1632.21,1150.98 1632.73,1150.98 1633.25,1150.98 1633.77,1150.98 1634.29,1150.98 1634.81,1150.98 1635.33,1150.98 1635.85,1150.98 1636.37,1150.98 1636.89,1150.98 1637.41,1150.98 1637.93,1150.98 1638.45,1150.98 1638.96,1150.98 1639.48,1150.98 1640,1150.98 1640.52,1150.98 1641.04,1150.98 1641.56,1150.98 1642.08,1150.98 1642.6,1150.98 1643.12,1150.98 1643.64,1150.98 1644.16,1150.98 1644.68,1150.98 1645.2,1150.98 1645.72,1150.98 1646.24,1150.98 1646.76,1150.98 1647.28,1150.98 1647.8,1150.98 1648.32,1150.98 1648.84,1150.98 1649.36,1150.98 1649.88,1150.98 1650.39,1150.98 1650.91,1150.98 1651.43,1150.98 1651.95,1150.98 1652.47,1150.98 1652.99,1150.98 1653.51,1150.98 1654.03,1150.98 1654.55,1150.98 1655.07,1150.98 1655.59,1150.98 1656.11,1150.98 1656.63,1150.98 1657.15,1150.98 1657.67,1150.98 1658.19,1150.98 1658.71,1150.98 1659.23,1150.98 1659.75,1150.98 1660.27,1150.98 1660.79,1150.98 1661.31,1150.98 1661.82,1150.98 1662.34,1150.98 1662.86,1150.98 1663.38,1150.98 1663.9,1150.98 1664.42,1150.98 1664.94,1150.98 1665.46,1150.98 1665.98,1150.98 1666.5,1150.98 1667.02,1150.98 1667.54,1150.98 1668.06,1150.98 1668.58,1150.98 1669.1,1150.98 1669.62,1150.98 1670.14,1150.98 1670.66,1150.98 1671.18,1150.98 1671.7,1150.98 1672.22,1150.98 1672.74,1150.98 1673.25,1150.98 1673.77,1150.98 1674.29,1150.98 1674.81,1150.98 1675.33,1150.98 1675.85,1150.98 1676.37,1150.98 1676.89,1150.98 1677.41,1150.98 1677.93,1150.98 1678.45,1150.98 1678.97,1150.98 1679.49,1150.98 1680.01,1150.98 1680.53,1150.98 1681.05,1150.98 1681.57,1150.98 1682.09,1150.98 1682.61,1150.98 1683.13,1150.98 1683.65,1150.98 1684.17,1150.98 1684.68,1150.98 1685.2,1150.98 1685.72,1150.98 1686.24,1150.98 1686.76,1150.98 1687.28,1150.98 1687.8,1150.98 1688.32,1150.98 1688.84,1150.98 1689.36,1150.98 1689.88,1150.98 1690.4,1150.98 1690.92,1150.98 1691.44,1150.98 1691.96,1150.98 1692.48,1150.98 1693,1150.98 1693.52,1150.98 1694.04,1150.98 1694.56,1150.98 1695.08,1150.98 1695.59,1150.98 1696.11,1150.98 1696.63,1150.98 1697.15,1150.98 1697.67,1150.98 1698.19,1150.98 1698.71,1150.98 1699.23,1150.98 1699.75,1150.98 1700.27,1150.98 1700.79,1150.98 1701.31,1150.98 1701.83,1150.98 1702.35,1150.98 1702.87,1150.98 1703.39,1150.98 1703.91,1150.98 1704.43,1150.98 1704.95,1150.98 1705.47,1150.98 1705.99,1150.98 1706.51,1150.98 1707.02,1150.98 1707.54,1150.98 1708.06,1150.98 1708.58,1150.98 1709.1,1150.98 1709.62,1150.98 1710.14,1150.98 1710.66,1150.98 1711.18,1150.98 1711.7,1150.98 1712.22,1150.98 1712.74,1150.98 1713.26,1150.98 1713.78,1150.98 1714.3,1150.98 1714.82,1150.98 1715.34,1150.98 1715.86,1150.98 1716.38,1150.98 1716.9,1150.98 1717.42,1150.98 1717.94,1150.98 1718.45,1150.98 1718.97,1150.98 1719.49,1150.98 1720.01,1150.98 1720.53,1150.98 1721.05,1150.98 1721.57,1150.98 1722.09,1150.98 1722.61,1150.98 1723.13,1150.98 1723.65,1150.98 1724.17,1150.98 1724.69,1150.98 1725.21,1150.98 1725.73,1150.98 1726.25,1150.98 1726.77,1150.98 1727.29,1150.98 1727.81,1150.98 1728.33,1150.98 1728.85,1150.98 1729.37,1150.98 1729.88,1150.98 1730.4,1150.98 1730.92,1150.98 1731.44,1150.98 1731.96,1150.98 1732.48,1150.98 1733,1150.98 1733.52,1150.98 1734.04,1150.98 1734.56,1150.98 1735.08,1150.98 1735.6,1150.98 1736.12,1150.98 1736.64,1150.98 1737.16,1150.98 1737.68,1150.98 1738.2,1150.98 1738.72,1150.98 1739.24,1150.98 1739.76,1150.98 1740.28,1150.98 1740.8,1150.98 1741.31,1150.98 1741.83,1150.98 1742.35,1150.98 1742.87,1150.98 1743.39,1150.98 1743.91,1150.98 1744.43,1150.98 1744.95,1150.98 1745.47,1150.98 1745.99,1150.98 1746.51,1150.98 1747.03,1150.98 1747.55,1150.98 1748.07,1150.98 1748.59,1150.98 1749.11,1150.98 1749.63,1150.98 1750.15,1150.98 1750.67,1150.98 1751.19,1150.98 1751.71,1150.98 1752.22,1150.98 1752.74,1150.98 1753.26,1150.98 1753.78,1150.98 1754.3,1150.98 1754.82,1150.98 1755.34,1150.98 1755.86,1150.98 1756.38,1150.98 1756.9,1150.98 1757.42,1150.98 1757.94,1150.98 1758.46,1150.98 1758.98,1150.98 1759.5,1150.98 1760.02,1150.98 1760.54,1150.98 1761.06,1150.98 1761.58,1150.98 1762.1,1150.98 1762.62,1150.98 1763.14,1150.98 1763.65,1150.98 1764.17,1150.98 1764.69,1150.98 1765.21,1150.98 1765.73,1150.98 1766.25,1150.98 1766.77,1150.98 1767.29,1150.98 1767.81,1150.98 1768.33,1150.98 1768.85,1150.98 1769.37,1150.98 1769.89,1150.98 1770.41,1150.98 1770.93,1150.98 1771.45,1150.98 1771.97,1150.98 1772.49,1150.98 1773.01,1150.98 1773.53,1150.98 1774.05,1150.98 1774.57,1150.98 1775.08,1150.98 1775.6,1150.98 1776.12,1150.98 1776.64,1150.98 1777.16,1150.98 1777.68,1150.98 1778.2,1150.98 1778.72,1150.98 1779.24,1150.98 1779.76,1150.98 1780.28,1150.98 1780.8,1150.98 1781.32,1150.98 1781.84,1150.98 1782.36,1150.98 1782.88,1150.98 1783.4,1150.98 1783.92,1150.98 1784.44,1150.98 1784.96,1150.98 1785.48,1150.98 1786,1150.98 1786.51,1150.98 1787.03,1150.98 1787.55,1150.98 1788.07,1150.98 1788.59,1150.98 1789.11,1150.98 1789.63,1150.98 1790.15,1150.98 1790.67,1150.98 1791.19,1150.98 1791.71,1150.98 1792.23,1150.98 1792.75,1150.98 1793.27,1150.98 1793.79,1150.98 1794.31,1150.98 1794.83,1150.98 1795.35,1150.98 1795.87,1150.98 1796.39,1150.98 1796.91,1150.98 1797.43,1150.98 1797.94,1150.98 1798.46,1150.98 1798.98,1150.98 1799.5,1150.98 1800.02,1150.98 1800.54,1150.98 1801.06,1150.98 1801.58,1150.98 1802.1,1150.98 1802.62,1150.98 1803.14,1150.98 1803.66,1150.98 1804.18,1150.98 1804.7,1150.98 1805.22,1150.98 1805.74,1150.98 1806.26,1150.98 1806.78,1150.98 1807.3,1150.98 1807.82,1150.98 1808.34,1150.98 1808.85,1150.98 1809.37,1150.98 1809.89,1150.98 1810.41,1150.98 1810.93,1150.98 1811.45,1150.98 1811.97,1150.98 1812.49,1150.98 1813.01,1150.98 1813.53,1150.98 1814.05,1150.98 1814.57,1150.98 1815.09,1150.98 1815.61,1150.98 1816.13,1150.98 1816.65,1150.98 1817.17,1150.98 1817.69,1150.98 1818.21,1150.98 1818.73,1150.98 1819.25,1150.98 1819.77,1150.98 1820.28,1150.98 1820.8,1150.98 1821.32,1150.98 1821.84,1150.98 1822.36,1150.98 1822.88,1150.98 1823.4,1150.98 1823.92,1150.98 1824.44,1150.98 1824.96,1150.98 1825.48,1150.98 1826,1150.98 1826.52,1150.98 1827.04,1150.98 1827.56,1150.98 1828.08,1150.98 1828.6,1150.98 1829.12,1150.98 1829.64,1150.98 1830.16,1150.98 1830.68,1150.98 1831.2,1150.98 1831.71,1150.98 1832.23,1150.98 1832.75,1150.98 1833.27,1150.98 1833.79,1150.98 1834.31,1150.98 1834.83,1150.98 1835.35,1150.98 1835.87,1150.98 1836.39,1150.98 1836.91,1150.98 1837.43,1150.98 1837.95,1150.98 1838.47,1150.98 1838.99,1150.98 1839.51,1150.98 1840.03,1150.98 1840.55,1150.98 1841.07,1150.98 1841.59,1150.98 1842.11,1150.98 1842.63,1150.98 1843.14,1150.98 1843.66,1150.98 1844.18,1150.98 1844.7,1150.98 1845.22,1150.98 1845.74,1150.98 1846.26,1150.98 1846.78,1150.98 1847.3,1150.98 1847.82,1150.98 1848.34,1150.98 1848.86,1150.98 1849.38,1150.98 1849.9,1150.98 1850.42,1150.98 1850.94,1150.98 1851.46,1150.98 1851.98,1150.98 1852.5,1150.98 1853.02,1150.98 1853.54,1150.98 1854.06,1150.98 1854.57,1150.98 1855.09,1150.98 1855.61,1150.98 1856.13,1150.98 1856.65,1150.98 1857.17,1150.98 1857.69,1150.98 1858.21,1150.98 1858.73,1150.98 1859.25,1150.98 1859.77,1150.98 1860.29,1150.98 1860.81,1150.98 1861.33,1150.98 1861.85,1150.98 1862.37,1150.98 1862.89,1150.98 1863.41,1150.98 1863.93,1150.98 1864.45,1150.98 1864.97,1150.98 1865.48,1150.98 1866,1150.98 1866.52,1150.98 1867.04,1150.98 1867.56,1150.98 1868.08,1150.98 1868.6,1150.98 1869.12,1150.98 1869.64,1150.98 1870.16,1150.98 1870.68,1150.98 1871.2,1150.98 1871.72,1150.98 1872.24,1150.98 1872.76,1150.98 1873.28,1150.98 1873.8,1150.98 1874.32,1150.98 1874.84,1150.98 1875.36,1150.98 1875.88,1150.98 1876.4,1150.98 1876.91,1150.98 1877.43,1150.98 1877.95,1150.98 1878.47,1150.98 1878.99,1150.98 1879.51,1150.98 1880.03,1150.98 1880.55,1150.98 1881.07,1150.98 1881.59,1150.98 1882.11,1150.98 1882.63,1150.98 1883.15,1150.98 1883.67,1150.98 1884.19,1150.98 1884.71,1150.98 1885.23,1150.98 1885.75,1150.98 1886.27,1150.98 1886.79,1150.98 1887.31,1150.98 1887.83,1150.98 1888.34,1150.98 1888.86,1150.98 1889.38,1150.98 1889.9,1150.98 1890.42,1150.98 1890.94,1150.98 1891.46,1150.98 1891.98,1150.98 1892.5,1150.98 1893.02,1150.98 1893.54,1150.98 1894.06,1150.98 1894.58,1150.98 1895.1,1150.98 1895.62,1150.98 1896.14,1150.98 1896.66,1150.98 1897.18,1150.98 1897.7,1150.98 1898.22,1150.98 1898.74,1150.98 1899.26,1150.98 1899.77,1150.98 1900.29,1150.98 1900.81,1150.98 1901.33,1150.98 1901.85,1150.98 1902.37,1150.98 1902.89,1150.98 1903.41,1150.98 1903.93,1150.98 1904.45,1150.98 1904.97,1150.98 1905.49,1150.98 1906.01,1150.98 1906.53,1150.98 1907.05,1150.98 1907.57,1150.98 1908.09,1150.98 1908.61,1150.98 1909.13,1150.98 1909.65,1150.98 1910.17,1150.98 1910.69,1150.98 1911.2,1150.98 1911.72,1150.98 1912.24,1150.98 1912.76,1150.98 1913.28,1150.98 1913.8,1150.98 1914.32,1150.98 1914.84,1150.98 1915.36,1150.98 1915.88,1150.98 1916.4,1150.98 1916.92,1150.98 1917.44,1150.98 1917.96,1150.98 1918.48,1150.98 1919,1150.98 1919.52,1150.98 1920.04,1150.98 1920.56,1150.98 1921.08,1150.98 1921.6,1150.98 1922.11,1150.98 1922.63,1150.98 1923.15,1150.98 1923.67,1150.98 1924.19,1150.98 1924.71,1150.98 1925.23,1150.98 1925.75,1150.98 1926.27,1150.98 1926.79,1150.98 1927.31,1150.98 1927.83,1150.98 1928.35,1150.98 1928.87,1150.98 1929.39,1150.98 1929.91,1150.98 1930.43,1150.98 1930.95,1150.98 1931.47,1150.98 1931.99,1150.98 1932.51,1150.98 1933.03,1150.98 1933.54,1150.98 1934.06,1150.98 1934.58,1150.98 1935.1,1150.98 1935.62,1150.98 1936.14,1150.98 1936.66,1150.98 1937.18,1150.98 1937.7,1150.98 1938.22,1150.98 1938.74,1150.98 1939.26,1150.98 1939.78,1150.98 1940.3,1150.98 1940.82,1150.98 1941.34,1150.98 1941.86,1150.98 1942.38,1150.98 1942.9,1150.98 1943.42,1150.98 1943.94,1150.98 1944.46,1150.98 1944.97,1150.98 1945.49,1150.98 1946.01,1150.98 1946.53,1150.98 1947.05,1150.98 1947.57,1150.98 1948.09,1150.98 1948.61,1150.98 1949.13,1150.98 1949.65,1150.98 1950.17,1150.98 1950.69,1150.98 1951.21,1150.98 1951.73,1150.98 1952.25,1150.98 1952.77,1150.98 1953.29,1150.98 1953.81,1150.98 1954.33,1150.98 1954.85,1150.98 1955.37,1150.98 1955.89,1150.98 1956.4,1150.98 1956.92,1150.98 1957.44,1150.98 1957.96,1150.98 1958.48,1150.98 1959,1150.98 1959.52,1150.98 1960.04,1150.98 1960.56,1150.98 1961.08,1150.98 1961.6,1150.98 1962.12,1150.98 1962.64,1150.98 1963.16,1150.98 1963.68,1150.98 1964.2,1150.98 1964.72,1150.98 1965.24,1150.98 1965.76,1150.98 1966.28,1150.98 1966.8,1150.98 1967.32,1150.98 1967.83,1150.98 1968.35,1150.98 1968.87,1150.98 1969.39,1150.98 1969.91,1150.98 1970.43,1150.98 1970.95,1150.98 1971.47,1150.98 1971.99,1150.98 1972.51,1150.98 1973.03,1150.98 1973.55,1150.98 1974.07,1150.98 1974.59,1150.98 1975.11,1150.98 1975.63,1150.98 1976.15,1150.98 1976.67,1150.98 1977.19,1150.98 1977.71,1150.98 1978.23,1150.98 1978.74,1150.98 1979.26,1150.98 1979.78,1150.98 1980.3,1150.98 1980.82,1150.98 1981.34,1150.98 1981.86,1150.98 1982.38,1150.98 1982.9,1150.98 1983.42,1150.98 1983.94,1150.98 1984.46,1150.98 1984.98,1150.98 1985.5,1150.98 1986.02,1150.98 1986.54,1150.98 1987.06,1150.98 1987.58,1150.98 1988.1,1150.98 1988.62,1150.98 1989.14,1150.98 1989.66,1150.98 1990.17,1150.98 1990.69,1150.98 1991.21,1150.98 1991.73,1150.98 1992.25,1150.98 1992.77,1150.98 1993.29,1150.98 1993.81,1150.98 1994.33,1150.98 1994.85,1150.98 1995.37,1150.98 1995.89,1150.98 1996.41,1150.98 1996.93,1150.98 1997.45,1150.98 1997.97,1150.98 1998.49,1150.98 1999.01,1150.98 1999.53,1150.98 2000.05,1150.98 2000.57,1150.98 2001.09,1150.98 2001.6,1150.98 2002.12,1150.98 2002.64,1150.98 2003.16,1150.98 2003.68,1150.98 2004.2,1150.98 2004.72,1150.98 2005.24,1150.98 2005.76,1150.98 2006.28,1150.98 2006.8,1150.98 \"/>\n<polyline clip-path=\"url(#clip292)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1478.76,1137.11 1334.61,905.191 \"/>\n<polyline clip-path=\"url(#clip292)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"967.718,1164.45 967.718,1137.11 2006.8,1137.11 2006.8,1164.45 967.718,1164.45 \"/>\n<path clip-path=\"url(#clip290)\" d=\"M1435 582.47 L1998.49 582.47 L1998.49 375.11 L1435 375.11  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1435,582.47 1998.49,582.47 1998.49,375.11 1435,375.11 1435,582.47 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1453.35,426.95 1563.46,426.95 \"/>\n<path clip-path=\"url(#clip290)\" d=\"M1600.23 419.068 L1600.23 423.096 Q1598.43 422.17 1596.48 421.707 Q1594.54 421.244 1592.46 421.244 Q1589.28 421.244 1587.69 422.216 Q1586.11 423.188 1586.11 425.133 Q1586.11 426.614 1587.25 427.471 Q1588.38 428.304 1591.81 429.068 L1593.27 429.392 Q1597.8 430.364 1599.7 432.146 Q1601.62 433.906 1601.62 437.077 Q1601.62 440.688 1598.75 442.795 Q1595.91 444.901 1590.91 444.901 Q1588.82 444.901 1586.55 444.484 Q1584.31 444.091 1581.81 443.281 L1581.81 438.883 Q1584.17 440.109 1586.46 440.734 Q1588.75 441.336 1591 441.336 Q1594.01 441.336 1595.63 440.318 Q1597.25 439.276 1597.25 437.401 Q1597.25 435.665 1596.07 434.739 Q1594.91 433.813 1590.95 432.957 L1589.47 432.609 Q1585.51 431.776 1583.75 430.063 Q1581.99 428.327 1581.99 425.318 Q1581.99 421.66 1584.59 419.67 Q1587.18 417.679 1591.95 417.679 Q1594.31 417.679 1596.39 418.026 Q1598.47 418.373 1600.23 419.068 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1629.96 428.582 L1629.96 444.23 L1625.7 444.23 L1625.7 428.721 Q1625.7 425.04 1624.26 423.211 Q1622.83 421.383 1619.96 421.383 Q1616.51 421.383 1614.52 423.582 Q1612.53 425.781 1612.53 429.577 L1612.53 444.23 L1608.24 444.23 L1608.24 408.211 L1612.53 408.211 L1612.53 422.332 Q1614.05 419.994 1616.11 418.836 Q1618.2 417.679 1620.91 417.679 Q1625.37 417.679 1627.66 420.457 Q1629.96 423.211 1629.96 428.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1638.45 418.304 L1642.71 418.304 L1642.71 444.23 L1638.45 444.23 L1638.45 418.304 M1638.45 408.211 L1642.71 408.211 L1642.71 413.605 L1638.45 413.605 L1638.45 408.211 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1664.75 408.211 L1664.75 411.753 L1660.67 411.753 Q1658.38 411.753 1657.48 412.679 Q1656.6 413.605 1656.6 416.012 L1656.6 418.304 L1663.61 418.304 L1663.61 421.614 L1656.6 421.614 L1656.6 444.23 L1652.32 444.23 L1652.32 421.614 L1648.24 421.614 L1648.24 418.304 L1652.32 418.304 L1652.32 416.498 Q1652.32 412.17 1654.33 410.202 Q1656.34 408.211 1660.72 408.211 L1664.75 408.211 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1671.69 410.943 L1671.69 418.304 L1680.46 418.304 L1680.46 421.614 L1671.69 421.614 L1671.69 435.688 Q1671.69 438.859 1672.55 439.762 Q1673.43 440.665 1676.09 440.665 L1680.46 440.665 L1680.46 444.23 L1676.09 444.23 Q1671.16 444.23 1669.28 442.401 Q1667.41 440.549 1667.41 435.688 L1667.41 421.614 L1664.28 421.614 L1664.28 418.304 L1667.41 418.304 L1667.41 410.943 L1671.69 410.943 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip290)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1453.35,478.79 1563.46,478.79 \"/>\n<path clip-path=\"url(#clip290)\" d=\"M1600.23 470.908 L1600.23 474.936 Q1598.43 474.01 1596.48 473.547 Q1594.54 473.084 1592.46 473.084 Q1589.28 473.084 1587.69 474.056 Q1586.11 475.028 1586.11 476.973 Q1586.11 478.454 1587.25 479.311 Q1588.38 480.144 1591.81 480.908 L1593.27 481.232 Q1597.8 482.204 1599.7 483.986 Q1601.62 485.746 1601.62 488.917 Q1601.62 492.528 1598.75 494.635 Q1595.91 496.741 1590.91 496.741 Q1588.82 496.741 1586.55 496.324 Q1584.31 495.931 1581.81 495.121 L1581.81 490.723 Q1584.17 491.949 1586.46 492.574 Q1588.75 493.176 1591 493.176 Q1594.01 493.176 1595.63 492.158 Q1597.25 491.116 1597.25 489.241 Q1597.25 487.505 1596.07 486.579 Q1594.91 485.653 1590.95 484.797 L1589.47 484.449 Q1585.51 483.616 1583.75 481.903 Q1581.99 480.167 1581.99 477.158 Q1581.99 473.5 1584.59 471.51 Q1587.18 469.519 1591.95 469.519 Q1594.31 469.519 1596.39 469.866 Q1598.47 470.213 1600.23 470.908 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1629.96 480.422 L1629.96 496.07 L1625.7 496.07 L1625.7 480.561 Q1625.7 476.88 1624.26 475.051 Q1622.83 473.223 1619.96 473.223 Q1616.51 473.223 1614.52 475.422 Q1612.53 477.621 1612.53 481.417 L1612.53 496.07 L1608.24 496.07 L1608.24 460.051 L1612.53 460.051 L1612.53 474.172 Q1614.05 471.834 1616.11 470.676 Q1618.2 469.519 1620.91 469.519 Q1625.37 469.519 1627.66 472.297 Q1629.96 475.051 1629.96 480.422 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1638.45 470.144 L1642.71 470.144 L1642.71 496.07 L1638.45 496.07 L1638.45 470.144 M1638.45 460.051 L1642.71 460.051 L1642.71 465.445 L1638.45 465.445 L1638.45 460.051 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1664.75 460.051 L1664.75 463.593 L1660.67 463.593 Q1658.38 463.593 1657.48 464.519 Q1656.6 465.445 1656.6 467.852 L1656.6 470.144 L1663.61 470.144 L1663.61 473.454 L1656.6 473.454 L1656.6 496.07 L1652.32 496.07 L1652.32 473.454 L1648.24 473.454 L1648.24 470.144 L1652.32 470.144 L1652.32 468.338 Q1652.32 464.01 1654.33 462.042 Q1656.34 460.051 1660.72 460.051 L1664.75 460.051 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1671.69 462.783 L1671.69 470.144 L1680.46 470.144 L1680.46 473.454 L1671.69 473.454 L1671.69 487.528 Q1671.69 490.699 1672.55 491.602 Q1673.43 492.505 1676.09 492.505 L1680.46 492.505 L1680.46 496.07 L1676.09 496.07 Q1671.16 496.07 1669.28 494.241 Q1667.41 492.389 1667.41 487.528 L1667.41 473.454 L1664.28 473.454 L1664.28 470.144 L1667.41 470.144 L1667.41 462.783 L1671.69 462.783 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1721.32 475.121 Q1722.92 472.25 1725.14 470.885 Q1727.36 469.519 1730.37 469.519 Q1734.42 469.519 1736.62 472.366 Q1738.82 475.19 1738.82 480.422 L1738.82 496.07 L1734.54 496.07 L1734.54 480.561 Q1734.54 476.834 1733.22 475.028 Q1731.9 473.223 1729.19 473.223 Q1725.88 473.223 1723.96 475.422 Q1722.04 477.621 1722.04 481.417 L1722.04 496.07 L1717.76 496.07 L1717.76 480.561 Q1717.76 476.811 1716.44 475.028 Q1715.12 473.223 1712.36 473.223 Q1709.1 473.223 1707.18 475.445 Q1705.26 477.644 1705.26 481.417 L1705.26 496.07 L1700.97 496.07 L1700.97 470.144 L1705.26 470.144 L1705.26 474.172 Q1706.71 471.787 1708.75 470.653 Q1710.79 469.519 1713.59 469.519 Q1716.41 469.519 1718.38 470.954 Q1720.37 472.389 1721.32 475.121 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1769.49 482.042 L1769.49 484.125 L1749.91 484.125 Q1750.19 488.523 1752.55 490.838 Q1754.93 493.13 1759.17 493.13 Q1761.62 493.13 1763.91 492.528 Q1766.23 491.926 1768.5 490.723 L1768.5 494.75 Q1766.21 495.722 1763.8 496.232 Q1761.39 496.741 1758.91 496.741 Q1752.71 496.741 1749.08 493.13 Q1745.46 489.519 1745.46 483.361 Q1745.46 476.996 1748.89 473.269 Q1752.34 469.519 1758.17 469.519 Q1763.4 469.519 1766.44 472.899 Q1769.49 476.255 1769.49 482.042 M1765.23 480.792 Q1765.19 477.297 1763.27 475.213 Q1761.37 473.13 1758.22 473.13 Q1754.65 473.13 1752.5 475.144 Q1750.37 477.158 1750.05 480.815 L1765.23 480.792 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1788.27 483.037 Q1783.1 483.037 1781.11 484.218 Q1779.12 485.398 1779.12 488.246 Q1779.12 490.514 1780.6 491.857 Q1782.11 493.176 1784.68 493.176 Q1788.22 493.176 1790.35 490.676 Q1792.5 488.153 1792.5 483.986 L1792.5 483.037 L1788.27 483.037 M1796.76 481.278 L1796.76 496.07 L1792.5 496.07 L1792.5 492.135 Q1791.04 494.496 1788.87 495.63 Q1786.69 496.741 1783.54 496.741 Q1779.56 496.741 1777.2 494.519 Q1774.86 492.273 1774.86 488.523 Q1774.86 484.148 1777.78 481.926 Q1780.72 479.704 1786.53 479.704 L1792.5 479.704 L1792.5 479.287 Q1792.5 476.348 1790.56 474.75 Q1788.64 473.13 1785.14 473.13 Q1782.92 473.13 1780.81 473.662 Q1778.71 474.195 1776.76 475.26 L1776.76 471.324 Q1779.1 470.422 1781.3 469.982 Q1783.5 469.519 1785.58 469.519 Q1791.21 469.519 1793.98 472.436 Q1796.76 475.352 1796.76 481.278 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1827.08 480.422 L1827.08 496.07 L1822.83 496.07 L1822.83 480.561 Q1822.83 476.88 1821.39 475.051 Q1819.95 473.223 1817.08 473.223 Q1813.64 473.223 1811.64 475.422 Q1809.65 477.621 1809.65 481.417 L1809.65 496.07 L1805.37 496.07 L1805.37 470.144 L1809.65 470.144 L1809.65 474.172 Q1811.18 471.834 1813.24 470.676 Q1815.33 469.519 1818.03 469.519 Q1822.5 469.519 1824.79 472.297 Q1827.08 475.051 1827.08 480.422 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip290)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1453.35,530.63 1563.46,530.63 \"/>\n<path clip-path=\"url(#clip290)\" d=\"M1586.09 544.021 L1586.09 557.771 L1581.81 557.771 L1581.81 521.984 L1586.09 521.984 L1586.09 525.919 Q1587.43 523.604 1589.47 522.493 Q1591.53 521.359 1594.38 521.359 Q1599.1 521.359 1602.04 525.109 Q1605 528.859 1605 534.97 Q1605 541.081 1602.04 544.831 Q1599.1 548.581 1594.38 548.581 Q1591.53 548.581 1589.47 547.47 Q1587.43 546.336 1586.09 544.021 M1600.58 534.97 Q1600.58 530.271 1598.64 527.609 Q1596.72 524.924 1593.34 524.924 Q1589.96 524.924 1588.01 527.609 Q1586.09 530.271 1586.09 534.97 Q1586.09 539.669 1588.01 542.354 Q1589.96 545.016 1593.34 545.016 Q1596.72 545.016 1598.64 542.354 Q1600.58 539.669 1600.58 534.97 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1627.09 525.965 Q1626.37 525.549 1625.51 525.364 Q1624.68 525.155 1623.66 525.155 Q1620.05 525.155 1618.1 527.516 Q1616.18 529.854 1616.18 534.252 L1616.18 547.91 L1611.9 547.91 L1611.9 521.984 L1616.18 521.984 L1616.18 526.012 Q1617.53 523.651 1619.68 522.516 Q1621.83 521.359 1624.91 521.359 Q1625.35 521.359 1625.88 521.428 Q1626.41 521.475 1627.06 521.59 L1627.09 525.965 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1640.56 524.97 Q1637.13 524.97 1635.14 527.655 Q1633.15 530.317 1633.15 534.97 Q1633.15 539.623 1635.12 542.308 Q1637.11 544.97 1640.56 544.97 Q1643.96 544.97 1645.95 542.285 Q1647.94 539.6 1647.94 534.97 Q1647.94 530.364 1645.95 527.678 Q1643.96 524.97 1640.56 524.97 M1640.56 521.359 Q1646.11 521.359 1649.28 524.97 Q1652.46 528.581 1652.46 534.97 Q1652.46 541.336 1649.28 544.97 Q1646.11 548.581 1640.56 548.581 Q1634.98 548.581 1631.81 544.97 Q1628.66 541.336 1628.66 534.97 Q1628.66 528.581 1631.81 524.97 Q1634.98 521.359 1640.56 521.359 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1659.52 521.984 L1663.78 521.984 L1663.78 548.373 Q1663.78 553.326 1661.88 555.549 Q1660 557.771 1655.81 557.771 L1654.19 557.771 L1654.19 554.16 L1655.33 554.16 Q1657.76 554.16 1658.64 553.025 Q1659.52 551.914 1659.52 548.373 L1659.52 521.984 M1659.52 511.891 L1663.78 511.891 L1663.78 517.285 L1659.52 517.285 L1659.52 511.891 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1694.86 533.882 L1694.86 535.965 L1675.28 535.965 Q1675.56 540.363 1677.92 542.678 Q1680.3 544.97 1684.54 544.97 Q1686.99 544.97 1689.28 544.368 Q1691.6 543.766 1693.87 542.563 L1693.87 546.59 Q1691.58 547.562 1689.17 548.072 Q1686.76 548.581 1684.28 548.581 Q1678.08 548.581 1674.45 544.97 Q1670.84 541.359 1670.84 535.201 Q1670.84 528.836 1674.26 525.109 Q1677.71 521.359 1683.54 521.359 Q1688.78 521.359 1691.81 524.739 Q1694.86 528.095 1694.86 533.882 M1690.6 532.632 Q1690.56 529.137 1688.64 527.053 Q1686.74 524.97 1683.59 524.97 Q1680.03 524.97 1677.87 526.984 Q1675.74 528.998 1675.42 532.655 L1690.6 532.632 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1720.51 522.979 L1720.51 526.961 Q1718.71 525.965 1716.88 525.479 Q1715.07 524.97 1713.22 524.97 Q1709.08 524.97 1706.78 527.609 Q1704.49 530.225 1704.49 534.97 Q1704.49 539.715 1706.78 542.354 Q1709.08 544.97 1713.22 544.97 Q1715.07 544.97 1716.88 544.484 Q1718.71 543.975 1720.51 542.979 L1720.51 546.914 Q1718.73 547.748 1716.81 548.164 Q1714.91 548.581 1712.76 548.581 Q1706.9 548.581 1703.45 544.9 Q1700 541.22 1700 534.97 Q1700 528.627 1703.47 524.993 Q1706.97 521.359 1713.03 521.359 Q1715 521.359 1716.88 521.776 Q1718.75 522.169 1720.51 522.979 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1732.13 514.623 L1732.13 521.984 L1740.9 521.984 L1740.9 525.294 L1732.13 525.294 L1732.13 539.368 Q1732.13 542.539 1732.99 543.442 Q1733.87 544.345 1736.53 544.345 L1740.9 544.345 L1740.9 547.91 L1736.53 547.91 Q1731.6 547.91 1729.72 546.081 Q1727.85 544.229 1727.85 539.368 L1727.85 525.294 L1724.72 525.294 L1724.72 521.984 L1727.85 521.984 L1727.85 514.623 L1732.13 514.623 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1768.68 533.882 L1768.68 535.965 L1749.1 535.965 Q1749.38 540.363 1751.74 542.678 Q1754.12 544.97 1758.36 544.97 Q1760.81 544.97 1763.1 544.368 Q1765.42 543.766 1767.69 542.563 L1767.69 546.59 Q1765.4 547.562 1762.99 548.072 Q1760.58 548.581 1758.1 548.581 Q1751.9 548.581 1748.27 544.97 Q1744.65 541.359 1744.65 535.201 Q1744.65 528.836 1748.08 525.109 Q1751.53 521.359 1757.36 521.359 Q1762.59 521.359 1765.63 524.739 Q1768.68 528.095 1768.68 533.882 M1764.42 532.632 Q1764.38 529.137 1762.46 527.053 Q1760.56 524.97 1757.41 524.97 Q1753.84 524.97 1751.69 526.984 Q1749.56 528.998 1749.24 532.655 L1764.42 532.632 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1792.73 525.919 L1792.73 511.891 L1796.99 511.891 L1796.99 547.91 L1792.73 547.91 L1792.73 544.021 Q1791.39 546.336 1789.33 547.47 Q1787.29 548.581 1784.42 548.581 Q1779.72 548.581 1776.76 544.831 Q1773.82 541.081 1773.82 534.97 Q1773.82 528.859 1776.76 525.109 Q1779.72 521.359 1784.42 521.359 Q1787.29 521.359 1789.33 522.493 Q1791.39 523.604 1792.73 525.919 M1778.22 534.97 Q1778.22 539.669 1780.14 542.354 Q1782.08 545.016 1785.46 545.016 Q1788.84 545.016 1790.79 542.354 Q1792.73 539.669 1792.73 534.97 Q1792.73 530.271 1790.79 527.609 Q1788.84 524.924 1785.46 524.924 Q1782.08 524.924 1780.14 527.609 Q1778.22 530.271 1778.22 534.97 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1843.01 533.882 L1843.01 535.965 L1823.43 535.965 Q1823.7 540.363 1826.07 542.678 Q1828.45 544.97 1832.69 544.97 Q1835.14 544.97 1837.43 544.368 Q1839.75 543.766 1842.02 542.563 L1842.02 546.59 Q1839.72 547.562 1837.32 548.072 Q1834.91 548.581 1832.43 548.581 Q1826.23 548.581 1822.59 544.97 Q1818.98 541.359 1818.98 535.201 Q1818.98 528.836 1822.41 525.109 Q1825.86 521.359 1831.69 521.359 Q1836.92 521.359 1839.95 524.739 Q1843.01 528.095 1843.01 533.882 M1838.75 532.632 Q1838.7 529.137 1836.78 527.053 Q1834.89 524.97 1831.74 524.97 Q1828.17 524.97 1826.02 526.984 Q1823.89 528.998 1823.57 532.655 L1838.75 532.632 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1871.55 532.262 L1871.55 547.91 L1867.29 547.91 L1867.29 532.401 Q1867.29 528.72 1865.86 526.891 Q1864.42 525.063 1861.55 525.063 Q1858.1 525.063 1856.11 527.262 Q1854.12 529.461 1854.12 533.257 L1854.12 547.91 L1849.84 547.91 L1849.84 521.984 L1854.12 521.984 L1854.12 526.012 Q1855.65 523.674 1857.71 522.516 Q1859.79 521.359 1862.5 521.359 Q1866.97 521.359 1869.26 524.137 Q1871.55 526.891 1871.55 532.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1902.22 533.882 L1902.22 535.965 L1882.64 535.965 Q1882.92 540.363 1885.28 542.678 Q1887.66 544.97 1891.9 544.97 Q1894.35 544.97 1896.64 544.368 Q1898.96 543.766 1901.23 542.563 L1901.23 546.59 Q1898.94 547.562 1896.53 548.072 Q1894.12 548.581 1891.64 548.581 Q1885.44 548.581 1881.81 544.97 Q1878.2 541.359 1878.2 535.201 Q1878.2 528.836 1881.62 525.109 Q1885.07 521.359 1890.9 521.359 Q1896.14 521.359 1899.17 524.739 Q1902.22 528.095 1902.22 533.882 M1897.96 532.632 Q1897.92 529.137 1896 527.053 Q1894.1 524.97 1890.95 524.97 Q1887.39 524.97 1885.23 526.984 Q1883.1 528.998 1882.78 532.655 L1897.96 532.632 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1924.24 525.965 Q1923.52 525.549 1922.66 525.364 Q1921.83 525.155 1920.81 525.155 Q1917.2 525.155 1915.26 527.516 Q1913.33 529.854 1913.33 534.252 L1913.33 547.91 L1909.05 547.91 L1909.05 521.984 L1913.33 521.984 L1913.33 526.012 Q1914.68 523.651 1916.83 522.516 Q1918.98 521.359 1922.06 521.359 Q1922.5 521.359 1923.03 521.428 Q1923.57 521.475 1924.21 521.59 L1924.24 525.965 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1944.93 534.646 Q1944.93 530.016 1943.01 527.47 Q1941.11 524.924 1937.66 524.924 Q1934.24 524.924 1932.32 527.47 Q1930.42 530.016 1930.42 534.646 Q1930.42 539.252 1932.32 541.799 Q1934.24 544.345 1937.66 544.345 Q1941.11 544.345 1943.01 541.799 Q1944.93 539.252 1944.93 534.646 M1949.19 544.692 Q1949.19 551.312 1946.25 554.53 Q1943.31 557.771 1937.25 557.771 Q1935 557.771 1933.01 557.424 Q1931.02 557.099 1929.14 556.405 L1929.14 552.262 Q1931.02 553.28 1932.85 553.766 Q1934.68 554.252 1936.57 554.252 Q1940.76 554.252 1942.85 552.053 Q1944.93 549.877 1944.93 545.456 L1944.93 543.35 Q1943.61 545.641 1941.55 546.775 Q1939.49 547.91 1936.62 547.91 Q1931.85 547.91 1928.94 544.275 Q1926.02 540.641 1926.02 534.646 Q1926.02 528.627 1928.94 524.993 Q1931.85 521.359 1936.62 521.359 Q1939.49 521.359 1941.55 522.493 Q1943.61 523.627 1944.93 525.919 L1944.93 521.984 L1949.19 521.984 L1949.19 544.692 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1968.75 550.317 Q1966.94 554.947 1965.23 556.359 Q1963.52 557.771 1960.65 557.771 L1957.25 557.771 L1957.25 554.206 L1959.75 554.206 Q1961.51 554.206 1962.48 553.373 Q1963.45 552.539 1964.63 549.437 L1965.39 547.493 L1954.91 521.984 L1959.42 521.984 L1967.52 542.262 L1975.63 521.984 L1980.14 521.984 L1968.75 550.317 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M732.271 905.191 L1723.23 905.191 L1723.23 561.354 L732.271 561.354  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip293\">\n    <rect x=\"732\" y=\"561\" width=\"992\" height=\"345\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip293)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"732.271,905.191 732.271,561.354 \"/>\n<polyline clip-path=\"url(#clip293)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"980.009,905.191 980.009,561.354 \"/>\n<polyline clip-path=\"url(#clip293)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1227.75,905.191 1227.75,561.354 \"/>\n<polyline clip-path=\"url(#clip293)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1475.49,905.191 1475.49,561.354 \"/>\n<polyline clip-path=\"url(#clip293)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1723.23,905.191 1723.23,561.354 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"732.271,905.191 1723.23,905.191 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"732.271,905.191 732.271,886.293 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"980.009,905.191 980.009,886.293 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1227.75,905.191 1227.75,886.293 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1475.49,905.191 1475.49,886.293 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1723.23,905.191 1723.23,886.293 \"/>\n<path clip-path=\"url(#clip290)\" d=\"M676.797 963.655 L684.435 963.655 L684.435 937.29 L676.125 938.956 L676.125 934.697 L684.389 933.031 L689.065 933.031 L689.065 963.655 L696.704 963.655 L696.704 967.591 L676.797 967.591 L676.797 963.655 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M716.148 936.109 Q712.537 936.109 710.708 939.674 Q708.903 943.216 708.903 950.345 Q708.903 957.452 710.708 961.017 Q712.537 964.558 716.148 964.558 Q719.783 964.558 721.588 961.017 Q723.417 957.452 723.417 950.345 Q723.417 943.216 721.588 939.674 Q719.783 936.109 716.148 936.109 M716.148 932.406 Q721.958 932.406 725.014 937.012 Q728.093 941.595 728.093 950.345 Q728.093 959.072 725.014 963.679 Q721.958 968.262 716.148 968.262 Q710.338 968.262 707.259 963.679 Q704.204 959.072 704.204 950.345 Q704.204 941.595 707.259 937.012 Q710.338 932.406 716.148 932.406 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M746.31 936.109 Q742.699 936.109 740.87 939.674 Q739.065 943.216 739.065 950.345 Q739.065 957.452 740.87 961.017 Q742.699 964.558 746.31 964.558 Q749.944 964.558 751.75 961.017 Q753.579 957.452 753.579 950.345 Q753.579 943.216 751.75 939.674 Q749.944 936.109 746.31 936.109 M746.31 932.406 Q752.12 932.406 755.176 937.012 Q758.255 941.595 758.255 950.345 Q758.255 959.072 755.176 963.679 Q752.12 968.262 746.31 968.262 Q740.5 968.262 737.421 963.679 Q734.366 959.072 734.366 950.345 Q734.366 941.595 737.421 937.012 Q740.5 932.406 746.31 932.406 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M776.472 936.109 Q772.861 936.109 771.032 939.674 Q769.227 943.216 769.227 950.345 Q769.227 957.452 771.032 961.017 Q772.861 964.558 776.472 964.558 Q780.106 964.558 781.912 961.017 Q783.74 957.452 783.74 950.345 Q783.74 943.216 781.912 939.674 Q780.106 936.109 776.472 936.109 M776.472 932.406 Q782.282 932.406 785.338 937.012 Q788.416 941.595 788.416 950.345 Q788.416 959.072 785.338 963.679 Q782.282 968.262 776.472 968.262 Q770.662 968.262 767.583 963.679 Q764.528 959.072 764.528 950.345 Q764.528 941.595 767.583 937.012 Q770.662 932.406 776.472 932.406 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M924.535 963.655 L932.174 963.655 L932.174 937.29 L923.864 938.956 L923.864 934.697 L932.128 933.031 L936.804 933.031 L936.804 963.655 L944.443 963.655 L944.443 967.591 L924.535 967.591 L924.535 963.655 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M953.933 933.031 L972.29 933.031 L972.29 936.966 L958.216 936.966 L958.216 945.438 Q959.234 945.091 960.253 944.929 Q961.271 944.743 962.29 944.743 Q968.077 944.743 971.456 947.915 Q974.836 951.086 974.836 956.503 Q974.836 962.081 971.364 965.183 Q967.891 968.262 961.572 968.262 Q959.396 968.262 957.128 967.891 Q954.882 967.521 952.475 966.78 L952.475 962.081 Q954.558 963.216 956.78 963.771 Q959.003 964.327 961.479 964.327 Q965.484 964.327 967.822 962.22 Q970.16 960.114 970.16 956.503 Q970.16 952.892 967.822 950.785 Q965.484 948.679 961.479 948.679 Q959.604 948.679 957.729 949.095 Q955.878 949.512 953.933 950.392 L953.933 933.031 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M994.049 936.109 Q990.438 936.109 988.609 939.674 Q986.803 943.216 986.803 950.345 Q986.803 957.452 988.609 961.017 Q990.438 964.558 994.049 964.558 Q997.683 964.558 999.489 961.017 Q1001.32 957.452 1001.32 950.345 Q1001.32 943.216 999.489 939.674 Q997.683 936.109 994.049 936.109 M994.049 932.406 Q999.859 932.406 1002.91 937.012 Q1005.99 941.595 1005.99 950.345 Q1005.99 959.072 1002.91 963.679 Q999.859 968.262 994.049 968.262 Q988.239 968.262 985.16 963.679 Q982.104 959.072 982.104 950.345 Q982.104 941.595 985.16 937.012 Q988.239 932.406 994.049 932.406 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1024.21 936.109 Q1020.6 936.109 1018.77 939.674 Q1016.97 943.216 1016.97 950.345 Q1016.97 957.452 1018.77 961.017 Q1020.6 964.558 1024.21 964.558 Q1027.84 964.558 1029.65 961.017 Q1031.48 957.452 1031.48 950.345 Q1031.48 943.216 1029.65 939.674 Q1027.84 936.109 1024.21 936.109 M1024.21 932.406 Q1030.02 932.406 1033.08 937.012 Q1036.15 941.595 1036.15 950.345 Q1036.15 959.072 1033.08 963.679 Q1030.02 968.262 1024.21 968.262 Q1018.4 968.262 1015.32 963.679 Q1012.27 959.072 1012.27 950.345 Q1012.27 941.595 1015.32 937.012 Q1018.4 932.406 1024.21 932.406 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1176.36 963.655 L1192.68 963.655 L1192.68 967.591 L1170.73 967.591 L1170.73 963.655 Q1173.4 960.901 1177.98 956.271 Q1182.59 951.618 1183.77 950.276 Q1186.01 947.753 1186.89 946.017 Q1187.79 944.257 1187.79 942.568 Q1187.79 939.813 1185.85 938.077 Q1183.93 936.341 1180.83 936.341 Q1178.63 936.341 1176.17 937.105 Q1173.74 937.868 1170.97 939.419 L1170.97 934.697 Q1173.79 933.563 1176.24 932.984 Q1178.7 932.406 1180.73 932.406 Q1186.1 932.406 1189.3 935.091 Q1192.49 937.776 1192.49 942.267 Q1192.49 944.396 1191.68 946.318 Q1190.9 948.216 1188.79 950.808 Q1188.21 951.48 1185.11 954.697 Q1182.01 957.892 1176.36 963.655 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1212.49 936.109 Q1208.88 936.109 1207.05 939.674 Q1205.25 943.216 1205.25 950.345 Q1205.25 957.452 1207.05 961.017 Q1208.88 964.558 1212.49 964.558 Q1216.13 964.558 1217.93 961.017 Q1219.76 957.452 1219.76 950.345 Q1219.76 943.216 1217.93 939.674 Q1216.13 936.109 1212.49 936.109 M1212.49 932.406 Q1218.3 932.406 1221.36 937.012 Q1224.44 941.595 1224.44 950.345 Q1224.44 959.072 1221.36 963.679 Q1218.3 968.262 1212.49 968.262 Q1206.68 968.262 1203.6 963.679 Q1200.55 959.072 1200.55 950.345 Q1200.55 941.595 1203.6 937.012 Q1206.68 932.406 1212.49 932.406 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1242.66 936.109 Q1239.04 936.109 1237.22 939.674 Q1235.41 943.216 1235.41 950.345 Q1235.41 957.452 1237.22 961.017 Q1239.04 964.558 1242.66 964.558 Q1246.29 964.558 1248.1 961.017 Q1249.92 957.452 1249.92 950.345 Q1249.92 943.216 1248.1 939.674 Q1246.29 936.109 1242.66 936.109 M1242.66 932.406 Q1248.47 932.406 1251.52 937.012 Q1254.6 941.595 1254.6 950.345 Q1254.6 959.072 1251.52 963.679 Q1248.47 968.262 1242.66 968.262 Q1236.85 968.262 1233.77 963.679 Q1230.71 959.072 1230.71 950.345 Q1230.71 941.595 1233.77 937.012 Q1236.85 932.406 1242.66 932.406 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1272.82 936.109 Q1269.21 936.109 1267.38 939.674 Q1265.57 943.216 1265.57 950.345 Q1265.57 957.452 1267.38 961.017 Q1269.21 964.558 1272.82 964.558 Q1276.45 964.558 1278.26 961.017 Q1280.09 957.452 1280.09 950.345 Q1280.09 943.216 1278.26 939.674 Q1276.45 936.109 1272.82 936.109 M1272.82 932.406 Q1278.63 932.406 1281.68 937.012 Q1284.76 941.595 1284.76 950.345 Q1284.76 959.072 1281.68 963.679 Q1278.63 968.262 1272.82 968.262 Q1267.01 968.262 1263.93 963.679 Q1260.87 959.072 1260.87 950.345 Q1260.87 941.595 1263.93 937.012 Q1267.01 932.406 1272.82 932.406 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1424.1 963.655 L1440.42 963.655 L1440.42 967.591 L1418.47 967.591 L1418.47 963.655 Q1421.14 960.901 1425.72 956.271 Q1430.32 951.618 1431.51 950.276 Q1433.75 947.753 1434.63 946.017 Q1435.53 944.257 1435.53 942.568 Q1435.53 939.813 1433.59 938.077 Q1431.67 936.341 1428.57 936.341 Q1426.37 936.341 1423.91 937.105 Q1421.48 937.868 1418.7 939.419 L1418.7 934.697 Q1421.53 933.563 1423.98 932.984 Q1426.44 932.406 1428.47 932.406 Q1433.84 932.406 1437.04 935.091 Q1440.23 937.776 1440.23 942.267 Q1440.23 944.396 1439.42 946.318 Q1438.63 948.216 1436.53 950.808 Q1435.95 951.48 1432.85 954.697 Q1429.75 957.892 1424.1 963.655 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1450.28 933.031 L1468.63 933.031 L1468.63 936.966 L1454.56 936.966 L1454.56 945.438 Q1455.58 945.091 1456.6 944.929 Q1457.62 944.743 1458.63 944.743 Q1464.42 944.743 1467.8 947.915 Q1471.18 951.086 1471.18 956.503 Q1471.18 962.081 1467.71 965.183 Q1464.24 968.262 1457.92 968.262 Q1455.74 968.262 1453.47 967.891 Q1451.23 967.521 1448.82 966.78 L1448.82 962.081 Q1450.9 963.216 1453.13 963.771 Q1455.35 964.327 1457.82 964.327 Q1461.83 964.327 1464.17 962.22 Q1466.51 960.114 1466.51 956.503 Q1466.51 952.892 1464.17 950.785 Q1461.83 948.679 1457.82 948.679 Q1455.95 948.679 1454.07 949.095 Q1452.22 949.512 1450.28 950.392 L1450.28 933.031 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1490.39 936.109 Q1486.78 936.109 1484.95 939.674 Q1483.15 943.216 1483.15 950.345 Q1483.15 957.452 1484.95 961.017 Q1486.78 964.558 1490.39 964.558 Q1494.03 964.558 1495.83 961.017 Q1497.66 957.452 1497.66 950.345 Q1497.66 943.216 1495.83 939.674 Q1494.03 936.109 1490.39 936.109 M1490.39 932.406 Q1496.2 932.406 1499.26 937.012 Q1502.34 941.595 1502.34 950.345 Q1502.34 959.072 1499.26 963.679 Q1496.2 968.262 1490.39 968.262 Q1484.58 968.262 1481.51 963.679 Q1478.45 959.072 1478.45 950.345 Q1478.45 941.595 1481.51 937.012 Q1484.58 932.406 1490.39 932.406 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1520.56 936.109 Q1516.94 936.109 1515.12 939.674 Q1513.31 943.216 1513.31 950.345 Q1513.31 957.452 1515.12 961.017 Q1516.94 964.558 1520.56 964.558 Q1524.19 964.558 1526 961.017 Q1527.82 957.452 1527.82 950.345 Q1527.82 943.216 1526 939.674 Q1524.19 936.109 1520.56 936.109 M1520.56 932.406 Q1526.37 932.406 1529.42 937.012 Q1532.5 941.595 1532.5 950.345 Q1532.5 959.072 1529.42 963.679 Q1526.37 968.262 1520.56 968.262 Q1514.75 968.262 1511.67 963.679 Q1508.61 959.072 1508.61 950.345 Q1508.61 941.595 1511.67 937.012 Q1514.75 932.406 1520.56 932.406 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1681.91 948.956 Q1685.26 949.674 1687.14 951.942 Q1689.04 954.211 1689.04 957.544 Q1689.04 962.66 1685.52 965.461 Q1682 968.262 1675.52 968.262 Q1673.34 968.262 1671.03 967.822 Q1668.73 967.405 1666.28 966.549 L1666.28 962.035 Q1668.23 963.169 1670.54 963.748 Q1672.86 964.327 1675.38 964.327 Q1679.78 964.327 1682.07 962.591 Q1684.38 960.854 1684.38 957.544 Q1684.38 954.489 1682.23 952.776 Q1680.1 951.04 1676.28 951.04 L1672.25 951.04 L1672.25 947.197 L1676.47 947.197 Q1679.92 947.197 1681.74 945.831 Q1683.57 944.443 1683.57 941.85 Q1683.57 939.188 1681.67 937.776 Q1679.8 936.341 1676.28 936.341 Q1674.36 936.341 1672.16 936.757 Q1669.96 937.174 1667.32 938.054 L1667.32 933.887 Q1669.98 933.146 1672.3 932.776 Q1674.64 932.406 1676.7 932.406 Q1682.02 932.406 1685.12 934.836 Q1688.23 937.243 1688.23 941.364 Q1688.23 944.234 1686.58 946.225 Q1684.94 948.193 1681.91 948.956 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1707.9 936.109 Q1704.29 936.109 1702.46 939.674 Q1700.66 943.216 1700.66 950.345 Q1700.66 957.452 1702.46 961.017 Q1704.29 964.558 1707.9 964.558 Q1711.54 964.558 1713.34 961.017 Q1715.17 957.452 1715.17 950.345 Q1715.17 943.216 1713.34 939.674 Q1711.54 936.109 1707.9 936.109 M1707.9 932.406 Q1713.71 932.406 1716.77 937.012 Q1719.85 941.595 1719.85 950.345 Q1719.85 959.072 1716.77 963.679 Q1713.71 968.262 1707.9 968.262 Q1702.09 968.262 1699.01 963.679 Q1695.96 959.072 1695.96 950.345 Q1695.96 941.595 1699.01 937.012 Q1702.09 932.406 1707.9 932.406 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1738.06 936.109 Q1734.45 936.109 1732.62 939.674 Q1730.82 943.216 1730.82 950.345 Q1730.82 957.452 1732.62 961.017 Q1734.45 964.558 1738.06 964.558 Q1741.7 964.558 1743.5 961.017 Q1745.33 957.452 1745.33 950.345 Q1745.33 943.216 1743.5 939.674 Q1741.7 936.109 1738.06 936.109 M1738.06 932.406 Q1743.87 932.406 1746.93 937.012 Q1750.01 941.595 1750.01 950.345 Q1750.01 959.072 1746.93 963.679 Q1743.87 968.262 1738.06 968.262 Q1732.25 968.262 1729.17 963.679 Q1726.12 959.072 1726.12 950.345 Q1726.12 941.595 1729.17 937.012 Q1732.25 932.406 1738.06 932.406 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M1768.22 936.109 Q1764.61 936.109 1762.79 939.674 Q1760.98 943.216 1760.98 950.345 Q1760.98 957.452 1762.79 961.017 Q1764.61 964.558 1768.22 964.558 Q1771.86 964.558 1773.66 961.017 Q1775.49 957.452 1775.49 950.345 Q1775.49 943.216 1773.66 939.674 Q1771.86 936.109 1768.22 936.109 M1768.22 932.406 Q1774.04 932.406 1777.09 937.012 Q1780.17 941.595 1780.17 950.345 Q1780.17 959.072 1777.09 963.679 Q1774.04 968.262 1768.22 968.262 Q1762.41 968.262 1759.34 963.679 Q1756.28 959.072 1756.28 950.345 Q1756.28 941.595 1759.34 937.012 Q1762.41 932.406 1768.22 932.406 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip293)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"732.271,889.562 1723.23,889.562 \"/>\n<polyline clip-path=\"url(#clip293)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"732.271,811.417 1723.23,811.417 \"/>\n<polyline clip-path=\"url(#clip293)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"732.271,733.272 1723.23,733.272 \"/>\n<polyline clip-path=\"url(#clip293)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"732.271,655.128 1723.23,655.128 \"/>\n<polyline clip-path=\"url(#clip293)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"732.271,576.983 1723.23,576.983 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"732.271,905.191 732.271,561.354 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"732.271,889.562 751.169,889.562 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"732.271,811.417 751.169,811.417 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"732.271,733.272 751.169,733.272 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"732.271,655.128 751.169,655.128 \"/>\n<polyline clip-path=\"url(#clip290)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"732.271,576.983 751.169,576.983 \"/>\n<path clip-path=\"url(#clip290)\" d=\"M589.327 890.013 L619.003 890.013 L619.003 893.948 L589.327 893.948 L589.327 890.013 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M629.142 872.282 L647.498 872.282 L647.498 876.217 L633.424 876.217 L633.424 884.689 Q634.442 884.342 635.461 884.18 Q636.48 883.995 637.498 883.995 Q643.285 883.995 646.665 887.166 Q650.044 890.337 650.044 895.754 Q650.044 901.332 646.572 904.434 Q643.1 907.513 636.78 907.513 Q634.605 907.513 632.336 907.143 Q630.091 906.772 627.683 906.031 L627.683 901.332 Q629.767 902.467 631.989 903.022 Q634.211 903.578 636.688 903.578 Q640.692 903.578 643.03 901.471 Q645.368 899.365 645.368 895.754 Q645.368 892.143 643.03 890.036 Q640.692 887.93 636.688 887.93 Q634.813 887.93 632.938 888.346 Q631.086 888.763 629.142 889.643 L629.142 872.282 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M659.257 900.962 L664.141 900.962 L664.141 906.842 L659.257 906.842 L659.257 900.962 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M684.326 875.36 Q680.715 875.36 678.887 878.925 Q677.081 882.467 677.081 889.596 Q677.081 896.703 678.887 900.268 Q680.715 903.809 684.326 903.809 Q687.961 903.809 689.766 900.268 Q691.595 896.703 691.595 889.596 Q691.595 882.467 689.766 878.925 Q687.961 875.36 684.326 875.36 M684.326 871.657 Q690.137 871.657 693.192 876.263 Q696.271 880.846 696.271 889.596 Q696.271 898.323 693.192 902.93 Q690.137 907.513 684.326 907.513 Q678.516 907.513 675.438 902.93 Q672.382 898.323 672.382 889.596 Q672.382 880.846 675.438 876.263 Q678.516 871.657 684.326 871.657 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M590.322 811.868 L619.998 811.868 L619.998 815.804 L590.322 815.804 L590.322 811.868 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M642.938 798.211 L631.132 816.66 L642.938 816.66 L642.938 798.211 M641.711 794.137 L647.591 794.137 L647.591 816.66 L652.521 816.66 L652.521 820.549 L647.591 820.549 L647.591 828.697 L642.938 828.697 L642.938 820.549 L627.336 820.549 L627.336 816.035 L641.711 794.137 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M660.253 822.817 L665.137 822.817 L665.137 828.697 L660.253 828.697 L660.253 822.817 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M675.368 794.137 L693.725 794.137 L693.725 798.072 L679.651 798.072 L679.651 806.544 Q680.669 806.197 681.688 806.035 Q682.706 805.85 683.725 805.85 Q689.512 805.85 692.891 809.021 Q696.271 812.192 696.271 817.609 Q696.271 823.188 692.799 826.29 Q689.326 829.368 683.007 829.368 Q680.831 829.368 678.563 828.998 Q676.317 828.628 673.91 827.887 L673.91 823.188 Q675.993 824.322 678.215 824.878 Q680.438 825.433 682.914 825.433 Q686.919 825.433 689.257 823.327 Q691.595 821.22 691.595 817.609 Q691.595 813.998 689.257 811.892 Q686.919 809.785 682.914 809.785 Q681.039 809.785 679.164 810.202 Q677.313 810.618 675.368 811.498 L675.368 794.137 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M589.327 733.724 L619.003 733.724 L619.003 737.659 L589.327 737.659 L589.327 733.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M641.942 720.066 L630.137 738.515 L641.942 738.515 L641.942 720.066 M640.716 715.992 L646.595 715.992 L646.595 738.515 L651.526 738.515 L651.526 742.404 L646.595 742.404 L646.595 750.552 L641.942 750.552 L641.942 742.404 L626.341 742.404 L626.341 737.89 L640.716 715.992 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M659.257 744.673 L664.141 744.673 L664.141 750.552 L659.257 750.552 L659.257 744.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M684.326 719.071 Q680.715 719.071 678.887 722.636 Q677.081 726.178 677.081 733.307 Q677.081 740.414 678.887 743.978 Q680.715 747.52 684.326 747.52 Q687.961 747.52 689.766 743.978 Q691.595 740.414 691.595 733.307 Q691.595 726.178 689.766 722.636 Q687.961 719.071 684.326 719.071 M684.326 715.367 Q690.137 715.367 693.192 719.974 Q696.271 724.557 696.271 733.307 Q696.271 742.034 693.192 746.64 Q690.137 751.224 684.326 751.224 Q678.516 751.224 675.438 746.64 Q672.382 742.034 672.382 733.307 Q672.382 724.557 675.438 719.974 Q678.516 715.367 684.326 715.367 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M590.322 655.579 L619.998 655.579 L619.998 659.514 L590.322 659.514 L590.322 655.579 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M644.257 653.774 Q647.614 654.491 649.489 656.76 Q651.387 659.028 651.387 662.362 Q651.387 667.477 647.868 670.278 Q644.35 673.079 637.868 673.079 Q635.692 673.079 633.378 672.639 Q631.086 672.223 628.632 671.366 L628.632 666.852 Q630.577 667.987 632.892 668.565 Q635.206 669.144 637.73 669.144 Q642.128 669.144 644.419 667.408 Q646.734 665.672 646.734 662.362 Q646.734 659.306 644.581 657.593 Q642.452 655.857 638.632 655.857 L634.605 655.857 L634.605 652.014 L638.817 652.014 Q642.267 652.014 644.095 650.649 Q645.924 649.26 645.924 646.667 Q645.924 644.005 644.026 642.593 Q642.151 641.158 638.632 641.158 Q636.711 641.158 634.512 641.575 Q632.313 641.991 629.674 642.871 L629.674 638.704 Q632.336 637.964 634.651 637.593 Q636.989 637.223 639.049 637.223 Q644.373 637.223 647.475 639.653 Q650.577 642.061 650.577 646.181 Q650.577 649.051 648.933 651.042 Q647.29 653.01 644.257 653.774 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M660.253 666.528 L665.137 666.528 L665.137 672.408 L660.253 672.408 L660.253 666.528 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M675.368 637.848 L693.725 637.848 L693.725 641.783 L679.651 641.783 L679.651 650.255 Q680.669 649.908 681.688 649.746 Q682.706 649.561 683.725 649.561 Q689.512 649.561 692.891 652.732 Q696.271 655.903 696.271 661.32 Q696.271 666.899 692.799 670 Q689.326 673.079 683.007 673.079 Q680.831 673.079 678.563 672.709 Q676.317 672.338 673.91 671.598 L673.91 666.899 Q675.993 668.033 678.215 668.588 Q680.438 669.144 682.914 669.144 Q686.919 669.144 689.257 667.038 Q691.595 664.931 691.595 661.32 Q691.595 657.709 689.257 655.602 Q686.919 653.496 682.914 653.496 Q681.039 653.496 679.164 653.913 Q677.313 654.329 675.368 655.209 L675.368 637.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M589.327 577.435 L619.003 577.435 L619.003 581.37 L589.327 581.37 L589.327 577.435 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M643.262 575.629 Q646.618 576.347 648.493 578.615 Q650.391 580.884 650.391 584.217 Q650.391 589.333 646.873 592.134 Q643.354 594.935 636.873 594.935 Q634.697 594.935 632.382 594.495 Q630.091 594.078 627.637 593.222 L627.637 588.708 Q629.581 589.842 631.896 590.421 Q634.211 590.999 636.734 590.999 Q641.132 590.999 643.424 589.263 Q645.739 587.527 645.739 584.217 Q645.739 581.161 643.586 579.449 Q641.456 577.712 637.637 577.712 L633.609 577.712 L633.609 573.87 L637.822 573.87 Q641.271 573.87 643.1 572.504 Q644.929 571.115 644.929 568.523 Q644.929 565.861 643.03 564.449 Q641.155 563.013 637.637 563.013 Q635.716 563.013 633.517 563.43 Q631.318 563.847 628.679 564.726 L628.679 560.56 Q631.341 559.819 633.655 559.449 Q635.993 559.078 638.054 559.078 Q643.378 559.078 646.479 561.509 Q649.581 563.916 649.581 568.037 Q649.581 570.907 647.938 572.898 Q646.294 574.865 643.262 575.629 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M659.257 588.384 L664.141 588.384 L664.141 594.263 L659.257 594.263 L659.257 588.384 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip290)\" d=\"M684.326 562.782 Q680.715 562.782 678.887 566.347 Q677.081 569.888 677.081 577.018 Q677.081 584.124 678.887 587.689 Q680.715 591.231 684.326 591.231 Q687.961 591.231 689.766 587.689 Q691.595 584.124 691.595 577.018 Q691.595 569.888 689.766 566.347 Q687.961 562.782 684.326 562.782 M684.326 559.078 Q690.137 559.078 693.192 563.685 Q696.271 568.268 696.271 577.018 Q696.271 585.745 693.192 590.351 Q690.137 594.935 684.326 594.935 Q678.516 594.935 675.438 590.351 Q672.382 585.745 672.382 577.018 Q672.382 568.268 675.438 563.685 Q678.516 559.078 684.326 559.078 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip293)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"237.289,-1043.47 237.785,-894.396 238.28,-1906.71 238.776,-2874.2 239.271,-3744.53 239.767,-4518.33 240.262,-4239.54 240.758,-4951.68 241.253,-5585.27 241.748,-6192.03 242.244,-6728.21 242.739,-6433.96 243.235,-6220.03 243.73,-6711.5 244.226,-7146.92 244.721,-7537.59 245.217,-7879.96 245.712,-8184.66 246.208,-8452.84 246.703,-8685.75 247.199,-8887.12 247.694,-9066.37 248.19,-8803.74 248.685,-8569.72 249.181,-8712.05 249.676,-8824.76 250.172,-8921.29 250.667,-8991.83 251.163,-9031.37 251.658,-9056.97 252.153,-9074.48 252.649,-9068.65 253.144,-9036.68 253.64,-8602.09 254.135,-8570.14 254.631,-8336.47 255.126,-8275.74 255.622,-8052.17 256.117,-7839.97 256.613,-7627.83 257.108,-7395.16 257.604,-7302.88 258.099,-7196.82 258.595,-7087.63 259.09,-6973.78 259.586,-6864.17 260.081,-6753.27 260.577,-6191.5 261.072,-6088.04 261.568,-5982.33 262.063,-5797.67 262.559,-5549.1 263.054,-5367.54 263.549,-5201.04 264.045,-5034.75 264.54,-4872.32 265.036,-4717.75 265.531,-4615.47 266.027,-4411.35 266.522,-4220.96 267.018,-4079.68 267.513,-3946.28 268.009,-3815.6 268.504,-3733.22 269,-3646 269.495,-3519.6 269.991,-3352.89 270.486,-3158.05 270.982,-3050.47 271.477,-2904.79 271.973,-2793.56 272.468,-2620.22 272.964,-2491.17 273.459,-2396.33 273.954,-2211.82 274.45,-2097.23 274.945,-1990.52 275.441,-1885.74 275.936,-1787.08 276.432,-1636.38 276.927,-1595.96 277.423,-1502.81 277.918,-1436.34 278.414,-1323.03 278.909,-1211.04 279.405,-1124.64 279.9,-1071.69 280.396,-1062.35 280.891,-1028.33 281.387,-944.685 281.882,-867.466 282.378,-811.544 282.873,-755.968 283.369,-658.432 283.864,-566.633 284.36,-499.785 284.855,-431.828 285.35,-386.944 285.846,-363.187 286.341,-324.372 286.837,-302.672 287.332,-223.641 287.828,-165.273 288.323,-145.528 288.819,-104.553 289.314,-84.6184 289.81,-46.8381 290.305,14.2338 290.801,32.7854 291.296,53.6716 291.792,89.9157 292.287,144.349 292.783,178.387 293.278,196.883 293.774,233.268 294.269,282.628 294.765,296.293 295.26,359.967 295.755,373.104 296.251,401.218 296.746,398.006 297.242,440.925 297.737,454.635 298.233,511.467 298.728,551.769 299.224,556.495 299.719,580.889 300.215,587.735 300.71,610.885 301.206,616.676 301.701,621.942 302.197,628.81 302.692,667.119 303.188,687.587 303.683,677.529 304.179,684.711 304.674,690.114 305.17,739.025 305.665,744.486 306.161,750.544 306.656,770.803 307.151,817.704 307.647,831.284 308.142,874.627 308.638,874.416 309.133,886.442 309.629,912.745 310.124,895.226 310.62,921.045 311.115,906.924 311.611,888.931 312.106,874.372 312.602,888.581 313.097,901.984 313.593,900.962 314.088,915.098 314.584,955.115 315.079,965.578 315.575,972.68 316.07,982.624 316.566,1007.76 317.061,1005.55 317.556,1012.7 318.052,1021.92 318.547,1019.38 319.043,1066.98 319.538,1072.49 320.034,1064.29 320.529,1057.69 321.025,1048.26 321.52,1042.32 322.016,1049.98 322.511,1044.19 323.007,1037.92 323.502,1019.47 323.998,1028.94 324.493,1025.54 324.989,1031.47 325.484,1039.03 325.98,1007.49 326.475,1019.82 326.971,1027.14 327.466,1024.29 327.961,1032.51 328.457,1030.98 328.952,1067.81 329.448,1074.38 329.943,1082.15 330.439,1075.77 330.934,1069.74 331.43,1076.4 331.925,1095.37 332.421,1085.84 332.916,1090.4 333.412,1106.88 333.907,1122.32 334.403,1114.22 334.898,1105.55 335.394,1095.47 335.889,1086.75 336.385,1104.32 336.88,1081.75 337.376,1100.84 337.871,1092.73 338.367,1085.39 338.862,1080.41 339.357,1087.05 339.853,1078.05 340.348,1083.79 340.844,1102.19 341.339,1064.33 341.835,1099.11 342.33,1099.11 342.826,1102.86 343.321,1091.74 343.817,1083.72 344.312,1092.11 344.808,1084.17 345.303,1050.53 345.799,1046.98 346.294,1078.43 346.79,1071.69 347.285,1103.13 347.781,1093.92 348.276,1057.35 348.772,1049.45 349.267,1054.98 349.762,1034.94 350.258,1041.81 350.753,1047.8 351.249,1042.97 351.744,1049.31 352.24,1042.47 352.735,1013.74 353.231,982.573 353.726,971.087 354.222,953.492 354.717,966.004 355.213,961.435 355.708,932.582 356.204,932.647 356.699,944.545 357.195,942.597 357.69,979.035 358.186,978.811 358.681,959.07 359.177,966.068 359.672,990.141 360.168,988.085 360.663,997.559 361.158,1005.62 361.654,990.649 362.149,987.961 362.645,971.013 363.14,994.964 363.636,991.583 364.131,974.367 364.627,947.87 365.122,943.299 365.618,940.52 366.113,937.61 366.609,909.808 367.104,906.845 367.6,920.063 368.095,932.021 368.591,945.15 369.086,944.85 369.582,943.347 370.077,942.506 370.573,915.056 371.068,926.986 371.563,935.961 372.059,947.517 372.554,984.287 373.05,977.543 373.545,975.624 374.041,972.379 374.536,969.226 375.032,993.059 375.527,988.555 376.023,982.133 376.518,988.538 377.014,985.103 377.509,992.541 378.005,1001.99 378.5,1024.58 378.996,1007.9 379.491,1015.06 379.987,1007.58 380.482,999.44 380.978,1017.65 381.473,996.657 381.969,991.166 382.464,987.022 382.959,980.784 383.455,999.315 383.95,993.416 384.446,984.361 384.941,978.916 385.437,1010.91 385.932,995.25 386.428,988.65 386.923,984.559 387.419,980.891 387.914,976.593 388.41,970.716 388.905,967.019 389.401,960.915 389.896,928.616 390.392,938.564 390.887,958.551 391.383,965.824 391.878,961.294 392.374,942.181 392.869,962.644 393.364,956.326 393.86,939.745 394.355,935.371 394.851,918.587 395.346,942.172 395.842,999.639 396.337,976.546 396.833,969.241 397.328,990.702 397.824,972.645 398.319,954.169 398.815,966.005 399.31,973.957 399.806,967.593 400.301,950.224 400.797,947.709 401.292,943.359 401.788,964.198 402.283,982.287 402.779,988.394 403.274,994.177 403.77,987.426 404.265,995.559 404.76,1012.56 405.256,953.496 405.751,935.864 406.247,944.709 406.742,940.955 407.238,927.008 407.733,922.798 408.229,894.075 408.724,889.419 409.22,874.625 409.715,885.905 410.211,907.349 410.706,940.517 411.202,922.839 411.697,932.981 412.193,927.812 412.688,945.897 413.184,942.128 413.679,924.399 414.175,933.705 414.67,914.575 415.165,924.176 415.661,919.81 416.156,889.332 416.652,874.183 417.147,869.657 417.643,856.583 418.138,856.618 418.634,857.637 419.129,856.331 419.625,869.391 420.12,879.904 420.616,878.655 421.111,875.106 421.607,848.189 422.102,899.28 422.598,894.818 423.093,891.949 423.589,913.488 424.084,896.812 424.58,891.568 425.075,927.146 425.571,920.943 426.066,919.474 426.561,913.589 427.057,910.635 427.552,928.925 428.048,925.378 428.543,915.94 429.039,924.892 429.534,934.49 430.03,940.124 430.525,937.045 431.021,954.563 431.516,947.618 432.012,940.5 432.507,946.692 433.003,966.353 433.498,946.392 433.994,913.136 434.489,897.095 434.985,867.989 435.48,865.38 435.976,848.333 436.471,847.363 436.966,847.731 437.462,831.817 437.957,829.922 438.453,869.066 438.948,879.184 439.444,864.231 439.939,887.739 440.435,857.516 440.93,843.881 441.426,853.637 441.921,877.806 442.417,872.272 442.912,858.892 443.408,868.762 443.903,867.557 444.399,852.699 444.894,863.72 445.39,848.422 445.885,847.152 446.381,846.915 446.876,832.518 447.371,833.21 447.867,831.198 448.362,815.288 448.858,829.198 449.353,826.087 449.849,826.689 450.344,863.611 450.84,860.008 451.335,860.352 451.831,858.609 452.326,868.823 452.822,851.17 453.317,848.055 453.813,821.545 454.308,808.092 454.804,798.651 455.299,773.956 455.795,776.376 456.29,777.102 456.786,780.834 457.281,782.388 457.777,794.648 458.272,781.973 458.767,782.993 459.263,797.356 459.758,823.789 460.254,824.031 460.749,824.147 461.245,822.547 461.74,834.397 462.236,820.822 462.731,820.675 463.227,782.536 463.722,796.429 464.218,784.79 464.713,761.191 465.209,764.667 465.704,792.842 466.2,780.26 466.695,783.36 467.191,786.847 467.686,812.887 468.182,839.669 468.677,829.074 469.172,816.215 469.668,818.033 470.163,805.81 470.659,806.061 471.154,794.554 471.65,795.339 472.145,781.163 472.641,770.287 473.136,787.216 473.632,777.633 474.127,804.691 474.623,815.558 475.118,838.965 475.614,833.551 476.109,830.57 476.605,804.291 477.1,828.906 477.596,837.451 478.091,847.975 478.587,846.385 479.082,842.065 479.578,841.366 480.073,838.843 480.568,800.712 481.064,797.956 481.559,797.846 482.055,784.903 482.55,771.141 483.046,785.12 483.541,810.28 484.037,824.618 484.532,797.212 485.028,811.318 485.523,795.878 486.019,807.916 486.514,806.437 487.01,780.113 487.505,807.207 488.001,820.568 488.496,832.163 488.992,829.729 489.487,840.433 489.983,836.098 490.478,796.041 490.973,844.75 491.469,867.111 491.964,878.452 492.46,884.969 492.955,865.45 493.451,861.198 493.946,869.82 494.442,863.251 494.937,909.235 495.433,903.655 495.928,897.436 496.424,929.07 496.919,948.138 497.415,914.856 497.91,907.87 498.406,903.114 498.901,870.55 499.397,864.107 499.892,850.695 500.388,833.172 500.883,830.196 501.379,828.914 501.874,840.59 502.369,800.132 502.865,825.675 503.36,823.148 503.856,822.397 504.351,808.319 504.847,816.232 505.342,786.328 505.838,772.036 506.333,772.667 506.829,761.577 507.324,764.012 507.82,766.91 508.315,796.292 508.811,781.824 509.306,780.936 509.802,792.519 510.297,793.309 510.793,804.153 511.288,829.274 511.784,784.904 512.279,810.336 512.774,795.484 513.27,795.573 513.765,770.049 514.261,759.147 514.756,772.435 515.252,786.656 515.747,814.579 516.243,814.832 516.738,823.485 517.234,809.973 517.729,795.808 518.225,791.963 518.72,779.219 519.216,740.491 519.711,744.703 520.207,746.601 520.702,761.706 521.198,762.122 521.693,779.178 522.189,815.907 522.684,802.898 523.18,802.673 523.675,804.457 524.17,816.159 524.666,823.709 525.161,794.473 525.657,779.943 526.152,754.592 526.648,756.71 527.143,760.19 527.639,749.517 528.134,751.176 528.63,762.755 529.125,761.911 529.621,763.511 530.116,763.461 530.612,778.158 531.107,802.743 531.603,826.987 532.098,823.093 532.594,820.252 533.089,817.503 533.585,801.212 534.08,812.263 534.575,810.273 535.071,806.794 535.566,780.128 536.062,779.36 536.557,778.117 537.053,779.097 537.548,779.696 538.044,802.483 538.539,776.005 539.035,765.645 539.53,765.401 540.026,765.588 540.521,777.69 541.017,740.633 541.512,715.878 542.008,745.98 542.503,734.488 542.999,734.171 543.494,769.088 543.99,782.382 544.485,783.255 544.98,822.353 545.476,818.998 545.971,806.114 546.467,789.594 546.962,804.023 547.458,799.561 547.953,799.195 548.449,786.182 548.944,809.347 549.44,807.517 549.935,805.906 550.431,805.192 550.926,818.088 551.422,843.438 551.917,831.7 552.413,854.216 552.908,864.596 553.404,883.153 553.899,876.114 554.395,847.488 554.89,858.109 555.386,817.006 555.881,778.226 556.376,777.029 556.872,763.071 557.367,767.747 557.863,782.557 558.358,781.15 558.854,766.642 559.349,741.378 559.845,754.336 560.34,769.774 560.836,756.996 561.331,756.764 561.827,771.543 562.322,758.511 562.818,772.857 563.313,759.742 563.809,733.487 564.304,734.246 564.8,728.359 565.295,728.262 565.791,725.934 566.286,729.13 566.781,717.846 567.277,722.404 567.772,683.479 568.268,702.363 568.763,718.685 569.259,732.059 569.754,721.547 570.25,720.739 570.745,709.939 571.241,711.94 571.736,725.836 572.232,714.965 572.727,734.095 573.223,724.235 573.718,687.316 574.214,691.934 574.709,670.955 575.205,686.877 575.7,691.721 576.196,711.414 576.691,699.429 577.187,713.203 577.682,715.804 578.177,732.385 578.673,757.177 579.168,732.576 579.664,719.944 580.159,709.819 580.655,712.16 581.15,716.794 581.646,745.439 582.141,748.697 582.637,750.209 583.132,750.783 583.628,763.976 584.123,775.055 584.619,786.306 585.114,823.281 585.61,820.213 586.105,816.223 586.601,825.946 587.096,798.483 587.592,807.014 588.087,819.464 588.582,802.874 589.078,787.159 589.573,801.464 590.069,815.714 590.564,825.799 591.06,798.78 591.555,768.532 592.051,768.083 592.546,793.792 593.042,768.394 593.537,780.611 594.033,804.489 594.528,790.8 595.024,801.196 595.519,798.477 596.015,784.476 596.51,781.176 597.006,792.25 597.501,778.988 597.997,751.481 598.492,740.227 598.988,717.371 599.483,721.879 599.978,748.146 600.474,737.015 600.969,761.831 601.465,773.551 601.96,772.792 602.456,757.477 602.951,718.251 603.447,758.8 603.942,758.31 604.438,771.741 604.933,768.513 605.429,791.956 605.924,789.859 606.42,788.995 606.915,786.655 607.411,748.598 607.906,776.636 608.402,774.007 608.897,747.616 609.393,771.245 609.888,770.159 610.383,770.043 610.879,744.715 611.374,745.399 611.87,758.14 612.365,771.684 612.861,756.523 613.356,744.703 613.852,770.651 614.347,796.084 614.843,769.061 615.338,794.027 615.834,753.88 616.329,754.57 616.825,768.312 617.32,743.658 617.816,744.698 618.311,745.421 618.807,730.521 619.302,732.255 619.798,758.842 620.293,774.028 620.789,796.796 621.284,754.562 621.779,754.007 622.275,754.253 622.77,754.822 623.266,752.983 623.761,727.582 624.257,754.787 624.752,753.397 625.248,763.672 625.743,775.849 626.239,763.687 626.734,774.132 627.23,787.698 627.725,802.377 628.221,800.63 628.716,786.93 629.212,798.711 629.707,795.473 630.203,818.788 630.698,805.058 631.194,801.833 631.689,811.34 632.184,807.644 632.68,793.93 633.175,806.66 633.671,827.606 634.166,836.408 634.662,816.58 635.157,825.748 635.653,820.847 636.148,803.681 636.644,850.877 637.139,847.201 637.635,828.814 638.13,812.617 638.626,795.905 639.121,728.603 639.617,757.927 640.112,747.304 640.608,759.491 641.103,758.705 641.599,746.025 642.094,742.711 642.589,744.936 643.085,758.836 643.58,732.131 644.076,771.13 644.571,770.014 645.067,779.031 645.562,763.306 646.058,775.303 646.553,778.517 647.049,749.437 647.544,748.564 648.04,735.166 648.535,749.709 649.031,765.815 649.526,750.363 650.022,740.143 650.517,715.615 651.013,718.488 651.508,683.603 652.004,700.371 652.499,690.871 652.995,693.094 653.49,719.299 653.985,705.927 654.481,720.623 654.976,721.679 655.472,720.832 655.967,738.178 656.463,711.059 656.958,724.895 657.454,714.127 657.949,703.944 658.445,704.332 658.94,729.775 659.436,732.346 659.931,733.592 660.427,721.039 660.922,748.852 661.418,759.864 661.913,772.799 662.409,770.528 662.904,769.625 663.4,780.501 663.895,768.798 664.39,743.768 664.886,754.744 665.381,779.989 665.877,791.02 666.372,778.787 666.868,778.061 667.363,773.405 667.859,747.314 668.354,756.859 668.85,780.304 669.345,774.675 669.841,773.731 670.336,746.817 670.832,745.161 671.327,744.15 671.823,743.175 672.318,730.203 672.814,731.582 673.309,706.623 673.805,723.98 674.3,723.631 674.796,725.911 675.291,727.941 675.786,713.592 676.282,716.519 676.777,718.492 677.273,733.34 677.768,774.744 678.264,760.366 678.759,771.453 679.255,746.082 679.75,746.276 680.246,748.531 680.741,761.061 681.237,759.824 681.732,720.227 682.228,778.768 682.723,752.148 683.219,775.721 683.714,798.561 684.21,804.988 684.705,826.785 685.201,835.681 685.696,855.847 686.191,851.685 686.687,848.324 687.182,831.328 687.678,839.07 688.173,845.557 688.669,829.875 689.164,810.339 689.66,783.703 690.155,781.574 690.651,779.722 691.146,754.986 691.642,768.311 692.137,819.37 692.633,838.739 693.128,849.042 693.624,832.934 694.119,842.494 694.615,826.897 695.11,834.873 695.606,844.205 696.101,838.283 696.597,832.754 697.092,791.099 697.587,803.615 698.083,814.214 698.578,836.906 699.074,846.576 699.569,842.915 700.065,825.632 700.56,794.714 701.056,818.158 701.551,815.579 702.047,801.021 702.542,821.343 703.038,829.39 703.533,811.993 704.029,809.294 704.524,793.877 705.02,779.07 705.515,787.375 706.011,762.643 706.506,749.246 707.002,748.415 707.497,734.232 707.992,734.487 708.488,708.453 708.983,711.024 709.479,725.796 709.974,701.447 710.47,691.987 710.965,691.605 711.461,680.973 711.956,707.46 712.452,686.49 712.947,687.6 713.443,668.891 713.938,646.466 714.434,664.329 714.929,656.415 715.425,673.537 715.92,689.675 716.416,691.105 716.911,667.659 717.407,647.807 717.902,653.153 718.398,631.403 718.893,676.293 719.388,695.237 719.884,683.302 720.379,700.118 720.875,689.08 721.37,704.328 721.866,694.057 722.361,694.556 722.857,686.961 723.352,679.301 723.848,708.672 724.343,709.932 724.839,724.694 725.334,739.525 725.83,728.344 726.325,703.632 726.821,709.08 727.316,723.412 727.812,703.225 728.307,708.19 728.803,711.554 729.298,712.969 729.793,716.222 730.289,726.994 730.784,726.653 731.28,716.511 731.775,728.722 732.271,707.657 732.766,696.837 733.262,722.211 733.757,735.256 734.253,772.936 734.748,758.611 735.244,768.836 735.739,741.453 736.235,744.673 736.73,733.559 737.226,736.483 737.721,736.118 738.217,775.233 738.712,775.732 739.208,763.834 739.703,765.817 740.199,789.284 740.694,786.886 741.189,810.499 741.685,808.597 742.18,817.837 742.676,816.072 743.171,809.776 743.667,807.537 744.162,778.538 744.658,778.68 745.153,801.557 745.649,797.962 746.144,794.701 746.64,793.47 747.135,791.258 747.631,789.564 748.126,759.239 748.622,719.047 749.117,718.17 749.613,720.361 750.108,720.285 750.604,733.162 751.099,747.634 751.594,719.775 752.09,720.142 752.585,709.096 753.081,697.575 753.576,699.125 754.072,703.348 754.567,705.74 755.063,694.793 755.558,699.02 756.054,664.904 756.549,680.799 757.045,685.345 757.54,690.437 758.036,706.06 758.531,724.792 759.027,766.69 759.522,776.064 760.018,785.632 760.513,797.043 761.009,794.666 761.504,793.686 761.999,791.097 762.495,764.501 762.99,763.523 763.486,748.295 763.981,748.126 764.477,748.106 764.972,760.375 765.468,772.969 765.963,784.76 766.459,794.426 766.954,782.184 767.45,755.317 767.945,767.131 768.441,766.106 768.936,752.31 769.432,739.164 769.927,738.492 770.423,761.708 770.918,757.463 771.414,756.905 771.909,756.18 772.405,768.243 772.9,751.826 773.395,737.945 773.891,749.036 774.386,735.892 774.882,724.739 775.377,727.712 775.873,740.586 776.368,718.706 776.864,705.566 777.359,721.183 777.855,695.698 778.35,682.947 778.846,687.985 779.341,678.223 779.837,682.446 780.332,685.304 780.828,690.949 781.323,666.184 781.819,669.82 782.314,661.304 782.81,651.636 783.305,684.703 783.8,700.558 784.296,701.77 784.791,715.622 785.287,716.813 785.782,744.124 786.278,729.381 786.773,730.84 787.269,732.17 787.764,699.56 788.26,689.269 788.755,705.89 789.251,708.925 789.746,696.973 790.242,711.866 790.737,686.382 791.233,678.917 791.728,668.095 792.224,669.402 792.719,687.523 793.215,688.793 793.71,691.989 794.206,681.624 794.701,687.982 795.196,702.628 795.692,704.752 796.187,681.998 796.683,710.654 797.178,712.297 797.674,717.292 798.169,719.934 798.665,732.541 799.16,768.906 799.656,816.502 800.151,826.405 800.647,832.98 801.142,816.18 801.638,811.322 802.133,806.486 802.629,816.166 803.124,824.27 803.62,829.767 804.115,827.486 804.611,810.803 805.106,808.664 805.601,792.581 806.097,787.965 806.592,834.824 807.088,829.068 807.583,823.903 808.079,818.425 808.574,790.802 809.07,788.786 809.565,810.363 810.061,830.229 810.556,824.322 811.052,818.473 811.547,826.385 812.043,837.728 812.538,833.536 813.034,829.401 813.529,801.148 814.025,809.58 814.52,818.036 815.016,802.453 815.511,798.471 816.007,769.075 816.502,765.976 816.997,726.75 817.493,736.736 817.988,723.365 818.484,695.259 818.979,723.346 819.475,736.214 819.97,749.197 820.466,747.198 820.961,746.644 821.457,746.635 821.952,732.444 822.448,711.783 822.943,702.096 823.439,692.044 823.934,666.701 824.43,669.913 824.925,675.472 825.421,680.027 825.916,698.436 826.412,697.177 826.907,690.242 827.402,691.794 827.898,693.786 828.393,707.984 828.889,708.827 829.384,697.931 829.88,713.629 830.375,689.644 830.871,679.507 831.366,696.884 831.862,698.088 832.357,724.774 832.853,774.703 833.348,797.206 833.844,756.986 834.339,757.362 834.835,745.094 835.33,832.367 835.826,851.369 836.321,835.023 836.817,818.338 837.312,815.199 837.808,825.126 838.303,820.94 838.798,839.815 839.294,808.611 839.789,793.825 840.285,804.025 840.78,801.107 841.276,798.111 841.771,779.7 842.267,779.261 842.762,766.393 843.258,764.45 843.753,751.793 844.249,739.432 844.744,738.283 845.24,699 845.735,701.489 846.231,701.16 846.726,703.39 847.222,717.486 847.717,705.391 848.213,693.251 848.708,695.966 849.203,685.918 849.699,677.477 850.194,693.764 850.69,658.682 851.185,675.45 851.681,728.628 852.176,717.501 852.672,719.267 853.167,717.578 853.663,728.131 854.158,726.09 854.654,725.607 855.149,701.094 855.645,688.917 856.14,691.132 856.636,705.546 857.131,733.952 857.627,722.512 858.122,710.739 858.618,723.987 859.113,709.567 859.608,682.886 860.104,674.542 860.599,677.955 861.095,693.656 861.59,722.032 862.086,723.135 862.581,726.323 863.077,741.035 863.572,754.111 864.068,764.519 864.563,749.626 865.059,747.416 865.554,735.484 866.05,711.457 866.545,714.487 867.041,738.662 867.536,723.113 868.032,746.854 868.527,768.617 869.023,777.999 869.518,775.223 870.014,784.64 870.509,807.188 871.004,839.929 871.5,824.637 871.995,820.746 872.491,805.672 872.986,829.166 873.482,800.968 873.977,786.604 874.473,756.475 874.968,757.57 875.464,743.228 875.959,755.969 876.455,729.425 876.95,756.675 877.446,757.886 877.941,782.258 878.437,744.55 878.932,756.045 879.428,740.304 879.923,750.509 880.419,789.026 880.914,760.493 881.409,775.096 881.905,760.742 882.4,747.549 882.896,757.294 883.391,757.52 883.887,742.059 884.382,754.287 884.878,777.87 885.373,813.223 885.869,809.907 886.364,829.417 886.86,824.477 887.355,821.363 887.851,829.601 888.346,825.953 888.842,820.031 889.337,843.383 889.833,849.809 890.328,843.559 890.824,864.367 891.319,882.079 891.815,834.945 892.31,840.501 892.805,810.731 893.301,808.957 893.796,779.701 894.292,780.177 894.787,740.478 895.283,740.712 895.778,740.289 896.274,726.566 896.769,740.255 897.265,729.466 897.76,730.554 898.256,679.475 898.751,655.28 899.247,698.737 899.742,713.398 900.238,714.469 900.733,716.426 901.229,729.28 901.724,714.392 902.22,708.067 902.715,707.483 903.21,696.163 903.706,735.904 904.201,737.86 904.697,739.531 905.192,713.563 905.688,713.155 906.183,701.215 906.679,712.838 907.174,688.72 907.67,668.164 908.165,671.72 908.661,674.153 909.156,691.918 909.652,692.784 910.147,697.036 910.643,700.988 911.138,676.528 911.634,693.714 912.129,721.259 912.625,736.946 913.12,724.282 913.616,723.395 914.111,724.658 914.606,724.665 915.102,737.859 915.597,712.158 916.093,713.985 916.588,701.581 917.084,678.737 917.579,682.409 918.075,684.351 918.57,687.525 919.066,691.854 919.561,693.94 920.057,697.686 920.552,736.205 921.048,739.147 921.543,752.818 922.039,754.215 922.534,753.878 923.03,754.015 923.525,752.556 924.021,776.696 924.516,775.714 925.011,775.287 925.507,759.678 926.002,770.005 926.498,780.194 926.993,778.674 927.489,786.922 927.984,774.954 928.48,774.319 928.975,772.717 929.471,780.294 929.966,780.894 930.462,778.018 930.957,777.373 931.453,775.164 931.948,810.098 932.444,794.597 932.939,803.915 933.435,813.044 933.93,772.405 934.426,797.218 934.921,845.709 935.417,828.925 935.912,821.089 936.407,815.866 936.903,825.375 937.398,820.738 937.894,791.793 938.389,776.486 938.885,801.033 939.38,783.725 939.876,769.23 940.371,768.678 940.867,766.225 941.362,739.358 941.858,753.818 942.353,766.245 942.849,713.858 943.344,727.397 943.84,764.136 944.335,773.939 944.831,782.867 945.326,742.472 945.822,741.109 946.317,740.543 946.812,724.85 947.308,724.788 947.803,696.976 948.299,672.882 948.794,686.078 949.29,691.129 949.785,694.629 950.281,699.286 950.776,750.555 951.272,733.61 951.767,709.205 952.263,723.458 952.758,709 953.254,710.275 953.749,698.878 954.245,727.15 954.74,730.144 955.236,718.431 955.731,708.372 956.227,682.039 956.722,672.309 957.217,678.186 957.713,684.404 958.208,714.061 958.704,729.319 959.199,716.668 959.695,719.297 960.19,733.931 960.686,745.59 961.181,720.435 961.677,735.789 962.172,762.262 962.668,762.716 963.163,776.447 963.659,815.564 964.154,813.425 964.65,796.733 965.145,804.432 965.641,801.352 966.136,775.604 966.632,772.701 967.127,756.412 967.623,756.984 968.118,756.791 968.613,744.955 969.109,746.425 969.604,759.855 970.1,758.278 970.595,744.468 971.091,758.512 971.586,784.922 972.082,784.288 972.577,744.216 973.073,743.681 973.568,741.654 974.064,751.947 974.559,766.334 975.055,726.28 975.55,728.131 976.046,739.583 976.541,751.131 977.037,750.792 977.532,737.738 978.028,723.073 978.523,699.564 979.018,704.324 979.514,696.401 980.009,736.203 980.505,725.33 981,739.618 981.496,737.341 981.991,738.026 982.487,759.424 982.982,757.697 983.478,757.517 983.973,753.785 984.469,729.697 984.964,717.48 985.46,717.645 985.955,679.94 986.451,693.262 986.946,721.005 987.442,731.859 987.937,771.625 988.433,780.07 988.928,791.446 989.424,774.276 989.919,745.09 990.414,743.086 990.91,742.681 991.405,731.879 991.901,732.607 992.396,731.779 992.892,733.318 993.387,721.851 993.883,694.31 994.378,645.692 994.874,651.826 995.369,642.58 995.865,634.688 996.36,655.314 996.856,634.165 997.351,602.194 997.847,599.026 998.342,606.4 998.838,614.3 999.333,582.02 999.829,628.996 1000.32,609.339 1000.82,618.477 1001.31,626.303 1001.81,632.249 1002.31,637.764 1002.8,658.127 1003.3,650.372 1003.79,639.015 1004.29,631.664 1004.78,637.933 1005.28,643.556 1005.77,661.308 1006.27,678.866 1006.77,722.001 1007.26,722.213 1007.76,710.771 1008.25,684.798 1008.75,675.255 1009.24,680.318 1009.74,697.007 1010.23,685.512 1010.73,676.827 1011.22,665.216 1011.72,670.199 1012.22,676.127 1012.71,654.557 1013.21,660.576 1013.7,675.444 1014.2,665.551 1014.69,666.676 1015.19,672.632 1015.68,688.774 1016.18,702.992 1016.67,706.683 1017.17,696.805 1017.67,711.609 1018.16,713.97 1018.66,717.69 1019.15,716.4 1019.65,730.756 1020.14,755.14 1020.64,779.848 1021.13,790.366 1021.63,784.16 1022.13,781.277 1022.62,794.295 1023.12,817.011 1023.61,825.322 1024.11,822.639 1024.6,793.032 1025.1,792.682 1025.59,786.706 1026.09,784.795 1026.58,791.584 1027.08,789.149 1027.58,838.007 1028.07,833.114 1028.57,841.447 1029.06,837.17 1029.56,868.554 1030.05,861.297 1030.55,854.625 1031.04,850.067 1031.54,853.537 1032.03,872.488 1032.53,864.879 1033.03,821.362 1033.52,819.315 1034.02,840.918 1034.51,808.925 1035.01,779.924 1035.5,753.007 1036,752.218 1036.49,761.281 1036.99,772.018 1037.48,756.947 1037.98,743.238 1038.48,730.285 1038.97,756.308 1039.47,740.337 1039.96,728.336 1040.46,777.018 1040.95,775.206 1041.45,787.448 1041.94,773.186 1042.44,758.916 1042.94,742.834 1043.43,767.657 1043.93,751.612 1044.42,737.495 1044.92,760.324 1045.41,744.843 1045.91,746.535 1046.4,772.17 1046.9,759.673 1047.39,771.103 1047.89,768.329 1048.39,750.909 1048.88,761.848 1049.38,773.4 1049.87,746.622 1050.37,721.596 1050.86,698.907 1051.36,686.882 1051.85,690.946 1052.35,694.978 1052.84,709.32 1053.34,710.937 1053.84,712.564 1054.33,688.087 1054.83,690.061 1055.32,705.723 1055.82,710.224 1056.31,724.124 1056.81,725.196 1057.3,723.524 1057.8,699.436 1058.29,714.053 1058.79,717.032 1059.29,756.462 1059.78,742.943 1060.28,728.838 1060.77,750.768 1061.27,763.184 1061.76,749.944 1062.26,749.674 1062.75,748.28 1063.25,732.889 1063.75,720.972 1064.24,733.3 1064.74,770.643 1065.23,768.372 1065.73,755.264 1066.22,766.968 1066.72,778.662 1067.21,752.84 1067.71,752.108 1068.2,762.384 1068.7,751.021 1069.2,713.479 1069.69,701.831 1070.19,716.449 1070.68,718.06 1071.18,705.616 1071.67,707.972 1072.17,707.945 1072.66,747.747 1073.16,760.997 1073.65,746.865 1074.15,731.797 1074.65,732.62 1075.14,720.754 1075.64,692.982 1076.13,693.501 1076.63,682.757 1077.12,699.301 1077.62,712.769 1078.11,724.29 1078.61,724.206 1079.1,752.723 1079.6,726.893 1080.1,703.945 1080.59,680.936 1081.09,709.556 1081.58,698.948 1082.08,713.149 1082.57,726.178 1083.07,716.914 1083.56,691.975 1084.06,690.517 1084.56,654.914 1085.05,697.807 1085.55,685.838 1086.04,700.34 1086.54,692.929 1087.03,697.862 1087.53,690.393 1088.02,691.75 1088.52,692.511 1089.01,680.275 1089.51,684.699 1090.01,686.651 1090.5,703.235 1091,702.899 1091.49,714.846 1091.99,706.406 1092.48,723.438 1092.98,727.412 1093.47,727.242 1093.97,728.492 1094.46,726.055 1094.96,740.417 1095.46,739.627 1095.95,754.346 1096.45,755.087 1096.94,729.632 1097.44,718.562 1097.93,706.739 1098.43,692.882 1098.92,682.569 1099.42,687.851 1099.91,702.752 1100.41,703.81 1100.91,716.814 1101.4,729.85 1101.9,731.642 1102.39,718.098 1102.89,708.281 1103.38,696.386 1103.88,686.408 1104.37,690.67 1104.87,698.74 1105.37,723.745 1105.86,699.581 1106.36,699.55 1106.85,713.636 1107.35,716.957 1107.84,721.768 1108.34,721.984 1108.83,722.241 1109.33,722.275 1109.82,723.558 1110.32,724.582 1110.82,725.91 1111.31,754.241 1111.81,765.769 1112.3,777.496 1112.8,790.086 1113.29,774.579 1113.79,761.593 1114.28,771.374 1114.78,745.921 1115.27,786.947 1115.77,797.275 1116.27,819.979 1116.76,840.616 1117.26,836.071 1117.75,816.547 1118.25,816.629 1118.74,798.979 1119.24,797.717 1119.73,756.926 1120.23,716.99 1120.72,732.279 1121.22,758.36 1121.72,793.963 1122.21,803.073 1122.71,798.032 1123.2,793.342 1123.7,841.262 1124.19,848.091 1124.69,830.12 1125.18,813.391 1125.68,770.735 1126.18,757.143 1126.67,779.807 1127.17,764.074 1127.66,746.59 1128.16,746.14 1128.65,743.004 1129.15,757.201 1129.64,768.851 1130.14,791.891 1130.63,804.352 1131.13,801.326 1131.63,808.284 1132.12,806.316 1132.62,803.324 1133.11,824.728 1133.61,804.229 1134.1,811.017 1134.6,767.048 1135.09,776.708 1135.59,775.282 1136.08,774.274 1136.58,746.737 1137.08,745.25 1137.57,718.832 1138.07,709.238 1138.56,711.581 1139.06,711.524 1139.55,697.489 1140.05,671.837 1140.54,674.525 1141.04,687.927 1141.54,692.058 1142.03,665.033 1142.53,641.197 1143.02,646.117 1143.52,635.935 1144.01,654.369 1144.51,648.808 1145,641.241 1145.5,608.308 1145.99,628.455 1146.49,632.48 1146.99,637.227 1147.48,691.044 1147.98,692.017 1148.47,694.921 1148.97,696.246 1149.46,700.148 1149.96,742.381 1150.45,751.94 1150.95,779.223 1151.44,765.543 1151.94,785.289 1152.44,769.081 1152.93,792.027 1153.43,787.651 1153.92,800.708 1154.42,796.883 1154.91,793.783 1155.41,776.744 1155.9,798.971 1156.4,807.232 1156.89,817.439 1157.39,801.728 1157.89,784.169 1158.38,793.855 1158.88,792.161 1159.37,776.977 1159.87,790.3 1160.36,772.938 1160.86,769.232 1161.35,756.292 1161.85,755.833 1162.35,743.346 1162.84,757.483 1163.34,771.54 1163.83,756.998 1164.33,755.537 1164.82,753.383 1165.32,728.286 1165.81,726.041 1166.31,740.65 1166.8,740.311 1167.3,727.652 1167.8,741.751 1168.29,741.481 1168.79,753.793 1169.28,742.4 1169.78,719.068 1170.27,718.825 1170.77,708.016 1171.26,685.467 1171.76,674.157 1172.25,693.29 1172.75,709.621 1173.25,737.666 1173.74,724.465 1174.24,726.311 1174.73,738.492 1175.23,750.851 1175.72,748.193 1176.22,760.155 1176.71,757.314 1177.21,779.589 1177.7,762.405 1178.2,772.572 1178.7,779.212 1179.19,790.095 1179.69,798.364 1180.18,858.181 1180.68,853.024 1181.17,846.687 1181.67,812.003 1182.16,804.616 1182.66,838.991 1183.16,823.856 1183.65,808.958 1184.15,844.801 1184.64,826.736 1185.14,820.768 1185.63,805.279 1186.13,798.745 1186.62,831.907 1187.12,829.326 1187.61,822.057 1188.11,829.093 1188.61,822.903 1189.1,790.54 1189.6,790.126 1190.09,785.182 1190.59,769.735 1191.08,745.318 1191.58,754.781 1192.07,726.033 1192.57,736.663 1193.06,721.565 1193.56,747.862 1194.06,736.145 1194.55,683.925 1195.05,673.045 1195.54,692.655 1196.04,706.779 1196.53,680.481 1197.03,660.42 1197.52,667.675 1198.02,684.378 1198.51,675.83 1199.01,664.857 1199.51,657.721 1200,632.665 1200.5,651.279 1200.99,656.463 1201.49,621.376 1201.98,604.215 1202.48,613.643 1202.97,620.348 1203.47,628.723 1203.97,620.764 1204.46,611.745 1204.96,646.412 1205.45,675.836 1205.95,678.251 1206.44,679.609 1206.94,680.948 1207.43,708.63 1207.93,711.826 1208.42,715.527 1208.92,694.098 1209.42,707.209 1209.91,707.706 1210.41,708.446 1210.9,721.388 1211.4,718.882 1211.89,731.893 1212.39,745.919 1212.88,745.033 1213.38,768.227 1213.87,782.073 1214.37,778.739 1214.87,750.659 1215.36,763.407 1215.86,761.876 1216.35,760.387 1216.85,760.46 1217.34,747.908 1217.84,734.011 1218.33,721.842 1218.83,724.438 1219.32,726.309 1219.82,703.936 1220.32,719.926 1220.81,683.124 1221.31,698.769 1221.8,725.222 1222.3,739.17 1222.79,754.623 1223.29,766.322 1223.78,753.692 1224.28,750.287 1224.78,773.93 1225.27,773.035 1225.77,748.649 1226.26,758.903 1226.76,782.412 1227.25,778.371 1227.75,761.207 1228.24,786.168 1228.74,808.778 1229.23,792.997 1229.73,789.777 1230.23,750.036 1230.72,760.398 1231.22,762.613 1231.71,788.497 1232.21,809.332 1232.7,830.752 1233.2,836.03 1233.69,834.783 1234.19,792.625 1234.68,787.076 1235.18,786.154 1235.68,758.908 1236.17,781.734 1236.67,776.821 1237.16,774.412 1237.66,785.94 1238.15,784.742 1238.65,796.184 1239.14,806.405 1239.64,815.127 1240.13,836.67 1240.63,829.069 1241.13,823.1 1241.62,778.521 1242.12,737.001 1242.61,735.325 1243.11,736.077 1243.6,721.818 1244.1,750.787 1244.59,750.816 1245.09,777.469 1245.59,748.778 1246.08,774.112 1246.58,774.646 1247.07,786.194 1247.57,769.549 1248.06,767.303 1248.56,778.083 1249.05,776.951 1249.55,775.001 1250.04,749.056 1250.54,748.439 1251.04,750.483 1251.53,750.922 1252.03,749.843 1252.52,760.696 1253.02,745.479 1253.51,744.779 1254.01,742.215 1254.5,741.135 1255,753.096 1255.49,789.158 1255.99,733.134 1256.49,720.342 1256.98,706.387 1257.48,705.946 1257.97,720.352 1258.47,723.452 1258.96,722.619 1259.46,723.77 1259.95,710.544 1260.45,711.821 1260.95,715.237 1261.44,718.089 1261.94,707.482 1262.43,707.81 1262.93,679.969 1263.42,655.156 1263.92,660.283 1264.41,653.458 1264.91,655.512 1265.4,636.43 1265.9,654.626 1266.4,644.762 1266.89,661.86 1267.39,648.891 1267.88,665.837 1268.38,672.15 1268.87,687.569 1269.37,688.512 1269.86,678.124 1270.36,669.848 1270.85,687.314 1271.35,692.12 1271.85,708.111 1272.34,699.328 1272.84,688.717 1273.33,715.78 1273.83,730.542 1274.32,707.996 1274.82,733.765 1275.31,721.608 1275.81,721.335 1276.3,722.397 1276.8,734.665 1277.3,711.359 1277.79,701.206 1278.29,691.304 1278.78,680.22 1279.28,670.828 1279.77,660.542 1280.27,679.351 1280.76,668.983 1281.26,671.618 1281.76,685.334 1282.25,702.462 1282.75,715.408 1283.24,739.219 1283.74,728.282 1284.23,729.676 1284.73,768.123 1285.22,751.594 1285.72,738.87 1286.21,737.148 1286.71,735.149 1287.21,747.304 1287.7,736.387 1288.2,711.248 1288.69,727.972 1289.19,741.427 1289.68,739.385 1290.18,726.735 1290.67,739.959 1291.17,756.027 1291.66,743.808 1292.16,771.472 1292.66,746.015 1293.15,758.383 1293.65,769.945 1294.14,780.793 1294.64,743.399 1295.13,690.398 1295.63,683.543 1296.12,701.752 1296.62,689.959 1297.11,690.948 1297.61,694.317 1298.11,685.635 1298.6,688.271 1299.1,692.055 1299.59,710.32 1300.09,686.986 1300.58,702.068 1301.08,702.236 1301.57,703.34 1302.07,743.992 1302.57,753.994 1303.06,778.621 1303.56,776.508 1304.05,764.878 1304.55,765.294 1305.04,750.567 1305.54,762.272 1306.03,769.984 1306.53,755.987 1307.02,752.663 1307.52,766.753 1308.02,766.89 1308.51,778.497 1309.01,776.808 1309.5,773.27 1310,759.742 1310.49,719.142 1310.99,745.915 1311.48,745.87 1311.98,757.986 1312.47,720.213 1312.97,720.907 1313.47,723.439 1313.96,749.853 1314.46,748.442 1314.95,709.656 1315.45,722.337 1315.94,721.914 1316.44,724.363 1316.93,728.215 1317.43,716.177 1317.92,742.782 1318.42,755.546 1318.92,753.493 1319.41,726.197 1319.91,737.339 1320.4,752.74 1320.9,777.75 1321.39,763.694 1321.89,800.478 1322.38,786.44 1322.88,823.38 1323.38,792.123 1323.87,776.119 1324.37,787.142 1324.86,772.209 1325.36,770.101 1325.85,757.145 1326.35,719.435 1326.84,718.52 1327.34,704.074 1327.83,694.429 1328.33,707.359 1328.83,710.105 1329.32,726.933 1329.82,726.212 1330.31,741.846 1330.81,740.596 1331.3,767.269 1331.8,766.772 1332.29,766.477 1332.79,763.636 1333.28,736.983 1333.78,760.299 1334.28,769.751 1334.77,783.941 1335.27,768.68 1335.76,754.875 1336.26,766.688 1336.75,762.194 1337.25,761.499 1337.74,748.686 1338.24,759.557 1338.73,745.35 1339.23,743.045 1339.73,715.979 1340.22,691.765 1340.72,705.679 1341.21,708.506 1341.71,706.159 1342.2,694.252 1342.7,670.934 1343.19,673.875 1343.69,675.313 1344.19,681.66 1344.68,683.535 1345.18,687.231 1345.67,690.622 1346.17,692.589 1346.66,718.848 1347.16,718.546 1347.65,708.34 1348.15,734.695 1348.64,748.812 1349.14,761.104 1349.64,783.413 1350.13,768.979 1350.63,783.693 1351.12,794.365 1351.62,800.782 1352.11,786.669 1352.61,785.276 1353.1,781.265 1353.6,766.326 1354.09,748.919 1354.59,721.563 1355.09,721.136 1355.58,709.33 1356.08,723.96 1356.57,737.133 1357.07,774.974 1357.56,771.392 1358.06,767.66 1358.55,751.863 1359.05,760.975 1359.54,759.506 1360.04,756.418 1360.54,727.994 1361.03,742.036 1361.53,740.131 1362.02,737.555 1362.52,748.484 1363.01,748.389 1363.51,746.275 1364,760.646 1364.5,734.743 1365,746.132 1365.49,733.755 1365.99,735.145 1366.48,763.34 1366.98,761.256 1367.47,721.741 1367.97,733.615 1368.46,729.933 1368.96,731.165 1369.45,754.68 1369.95,740.248 1370.45,738.491 1370.94,740.528 1371.44,714.314 1371.93,714.642 1372.43,727.227 1372.92,714.936 1373.42,690.352 1373.91,678.707 1374.41,670.04 1374.9,684.215 1375.4,702.303 1375.9,705.284 1376.39,667.819 1376.89,671.372 1377.38,650.344 1377.88,641.763 1378.37,644.008 1378.87,648.311 1379.36,625.162 1379.86,648.766 1380.35,638.08 1380.85,644.301 1381.35,661.82 1381.84,695.493 1382.34,723.013 1382.83,710.986 1383.33,725.436 1383.82,713.717 1384.32,740.183 1384.81,715.308 1385.31,714.466 1385.81,742.301 1386.3,742.901 1386.8,717.492 1387.29,728.344 1387.79,730.832 1388.28,728.496 1388.78,728.731 1389.27,741.151 1389.77,740.877 1390.26,740.528 1390.76,736.439 1391.26,745.373 1391.75,743.883 1392.25,731.427 1392.74,694.894 1393.24,710.667 1393.73,702.735 1394.23,703.672 1394.72,730.111 1395.22,729.662 1395.71,743.041 1396.21,778.138 1396.71,762.339 1397.2,759.653 1397.7,745.139 1398.19,745.944 1398.69,719.574 1399.18,721.11 1399.68,710.725 1400.17,735.956 1400.67,722.163 1401.17,711.747 1401.66,711.478 1402.16,702.025 1402.65,715.383 1403.15,717.385 1403.64,717.498 1404.14,702.786 1404.63,716.548 1405.13,704.29 1405.62,706.567 1406.12,710.402 1406.62,715.114 1407.11,730.671 1407.61,744.728 1408.1,728.866 1408.6,730.504 1409.09,744.51 1409.59,758.059 1410.08,730.32 1410.58,745.815 1411.07,758.584 1411.57,756.963 1412.07,743.499 1412.56,781.759 1413.06,780.22 1413.55,738.881 1414.05,725.326 1414.54,739.892 1415.04,740.578 1415.53,741.191 1416.03,728.294 1416.52,740.327 1417.02,742.281 1417.52,753.094 1418.01,776.919 1418.51,760.872 1419,785.013 1419.5,792.691 1419.99,817.07 1420.49,812.346 1420.98,783.862 1421.48,767.206 1421.98,791.266 1422.47,787.704 1422.97,809.589 1423.46,793.571 1423.96,790.635 1424.45,761.856 1424.95,722.237 1425.44,697.493 1425.94,686.977 1426.43,679.879 1426.93,657.639 1427.43,696.439 1427.92,686.677 1428.42,714.906 1428.91,731.422 1429.41,733.193 1429.9,732.692 1430.4,721.242 1430.89,697.679 1431.39,700.752 1431.88,690.549 1432.38,681.595 1432.88,700.188 1433.37,675.629 1433.87,664.808 1434.36,695.719 1434.86,685.223 1435.35,662.039 1435.85,679.458 1436.34,696.33 1436.84,698.283 1437.33,701.116 1437.83,689.673 1438.33,679.019 1438.82,695.228 1439.32,720.771 1439.81,685.674 1440.31,700.41 1440.8,727.629 1441.3,716.272 1441.79,713.615 1442.29,689.037 1442.79,691.053 1443.28,691.403 1443.78,680.742 1444.27,682.572 1444.77,674.579 1445.26,715.636 1445.76,706.172 1446.25,734.532 1446.75,746.321 1447.24,735.764 1447.74,749.374 1448.24,775.43 1448.73,786.14 1449.23,743.898 1449.72,745.898 1450.22,772.193 1450.71,746.078 1451.21,758.954 1451.7,755.425 1452.2,752.014 1452.69,749.853 1453.19,735.476 1453.69,760.68 1454.18,754.769 1454.68,739.073 1455.17,715.119 1455.67,730.166 1456.16,731.33 1456.66,719.396 1457.15,718.053 1457.65,717.179 1458.14,703.196 1458.64,680.272 1459.14,655.918 1459.63,684.811 1460.13,662.769 1460.62,679.366 1461.12,684.221 1461.61,685.288 1462.11,686.478 1462.6,691.672 1463.1,694.507 1463.6,644.976 1464.09,650.172 1464.59,655.637 1465.08,685.751 1465.58,689.36 1466.07,688.933 1466.57,678.252 1467.06,693.344 1467.56,695.988 1468.05,724.595 1468.55,763.283 1469.05,724.783 1469.54,727.705 1470.04,729.395 1470.53,744.982 1471.03,745.654 1471.52,745.095 1472.02,756.296 1472.51,766.182 1473.01,738.432 1473.5,725.418 1474,726.135 1474.5,738.528 1474.99,776.887 1475.49,762.628 1475.98,770.56 1476.48,744.138 1476.97,730.511 1477.47,732.356 1477.96,692.107 1478.46,705.55 1478.95,732.305 1479.45,733.332 1479.95,731.73 1480.44,745.485 1480.94,732.527 1481.43,718.539 1481.93,733.639 1482.42,736.051 1482.92,736.771 1483.41,735.516 1483.91,748.221 1484.41,762.494 1484.9,813.339 1485.4,792.1 1485.89,810.699 1486.39,845.035 1486.88,864.638 1487.38,868.635 1487.87,838.021 1488.37,807.114 1488.86,790.473 1489.36,763.459 1489.86,762.632 1490.35,762.364 1490.85,758.266 1491.34,767.125 1491.84,754.715 1492.33,740.166 1492.83,764.654 1493.32,749.082 1493.82,735.563 1494.31,733.772 1494.81,748.443 1495.31,790.572 1495.8,762.36 1496.3,747.646 1496.79,719.917 1497.29,747.889 1497.78,734.8 1498.28,748.304 1498.77,748.164 1499.27,735.457 1499.76,723.385 1500.26,735.96 1500.76,749.455 1501.25,749.102 1501.75,710.918 1502.24,747.623 1502.74,760.722 1503.23,769.754 1503.73,780.421 1504.22,778.332 1504.72,776.163 1505.22,776.744 1505.71,776.714 1506.21,776.256 1506.7,773.572 1507.2,745.728 1507.69,770.99 1508.19,770.617 1508.68,769.428 1509.18,764.988 1509.67,749.393 1510.17,747.113 1510.67,731.416 1511.16,732.569 1511.66,732.326 1512.15,744.83 1512.65,769.642 1513.14,740.975 1513.64,715.191 1514.13,717.176 1514.63,718.681 1515.12,710.095 1515.62,711.665 1516.12,725.556 1516.61,725.901 1517.11,739.991 1517.6,714.035 1518.1,716.772 1518.59,715.757 1519.09,715.793 1519.58,731.394 1520.08,745.014 1520.58,758.037 1521.07,756.683 1521.57,742.713 1522.06,744.925 1522.56,743.652 1523.05,756.624 1523.55,758.138 1524.04,734.264 1524.54,762.727 1525.03,773.969 1525.53,783.983 1526.03,781.729 1526.52,766.169 1527.02,776.15 1527.51,787.093 1528.01,772.153 1528.5,770.872 1529,780.256 1529.49,787.467 1529.99,771.276 1530.48,755.162 1530.98,765.559 1531.48,778.11 1531.97,762.231 1532.47,775.98 1532.96,801.696 1533.46,797.507 1533.95,818.404 1534.45,801.322 1534.94,787.049 1535.44,760.681 1535.93,759.416 1536.43,756.801 1536.93,755.112 1537.42,729.485 1537.92,729.269 1538.41,715.609 1538.91,764.993 1539.4,777.387 1539.9,776.118 1540.39,762.486 1540.89,745.831 1541.39,756.831 1541.88,769.763 1542.38,763.942 1542.87,788.438 1543.37,784.846 1543.86,771.088 1544.36,781.593 1544.85,765.444 1545.35,800.961 1545.84,744.138 1546.34,744.795 1546.84,744.82 1547.33,731.388 1547.83,767.877 1548.32,795.474 1548.82,779.616 1549.31,777.734 1549.81,773.529 1550.3,748.934 1550.8,736.483 1551.29,737.916 1551.79,727.244 1552.29,716.782 1552.78,704.186 1553.28,732.012 1553.77,731.598 1554.27,758.203 1554.76,732.351 1555.26,759.215 1555.75,760.104 1556.25,746.985 1556.74,762.957 1557.24,747.964 1557.74,734.005 1558.23,696.364 1558.73,658.472 1559.22,699.963 1559.72,688.532 1560.21,654.61 1560.71,644.047 1561.2,623.187 1561.7,629.331 1562.2,647.879 1562.69,652.296 1563.19,667.872 1563.68,672.652 1564.18,649.139 1564.67,640.408 1565.17,655.471 1565.66,633.497 1566.16,653.949 1566.65,685.636 1567.15,637.163 1567.65,644.556 1568.14,649.216 1568.64,640.055 1569.13,633.764 1569.63,626.812 1570.12,634.615 1570.62,628.813 1571.11,645.58 1571.61,651.875 1572.1,640.565 1572.6,647.751 1573.1,677.699 1573.59,693.94 1574.09,682.85 1574.58,674.512 1575.08,677.464 1575.57,679.179 1576.07,720.003 1576.56,720.828 1577.06,711.179 1577.55,709.955 1578.05,721.884 1578.55,709.88 1579.04,722.055 1579.54,694.194 1580.03,697.519 1580.53,699.071 1581.02,716.558 1581.52,704.46 1582.01,717.466 1582.51,705.097 1583.01,733.113 1583.5,732.825 1584,743.044 1584.49,744.064 1584.99,754.025 1585.48,741.53 1585.98,756.292 1586.47,742.819 1586.97,742.529 1587.46,744.384 1587.96,743.412 1588.46,717.661 1588.95,731.437 1589.45,733.235 1589.94,721.22 1590.44,723.479 1590.93,724.698 1591.43,713.702 1591.92,726.921 1592.42,726.619 1592.91,739.366 1593.41,739.111 1593.91,737.474 1594.4,752.031 1594.9,741.442 1595.39,739.69 1595.89,749.421 1596.38,748.186 1596.88,770.918 1597.37,767.907 1597.87,754.448 1598.36,789.847 1598.86,788.895 1599.36,788.091 1599.85,811.723 1600.35,795.84 1600.84,770.224 1601.34,741.988 1601.83,704.626 1602.33,731.022 1602.82,756.651 1603.32,784.072 1603.82,781.559 1604.31,805.21 1604.81,811.953 1605.3,808.327 1605.8,776.082 1606.29,749.798 1606.79,763.24 1607.28,762.662 1607.78,747.243 1608.27,720.804 1608.77,707.993 1609.27,724.173 1609.76,736.961 1610.26,750.161 1610.75,710.87 1611.25,699.077 1611.74,691.612 1612.24,704.586 1612.73,732.25 1613.23,736.239 1613.72,751.072 1614.22,760.429 1614.72,770.965 1615.21,759.885 1615.71,731.002 1616.2,742.851 1616.7,758.555 1617.19,743.433 1617.69,767.317 1618.18,753.398 1618.68,762.276 1619.17,773.294 1619.67,785.369 1620.17,780.522 1620.66,777.015 1621.16,801.619 1621.65,825.549 1622.15,819.646 1622.64,813.326 1623.14,819.735 1623.63,801.459 1624.13,797.383 1624.63,794.236 1625.12,752.02 1625.62,765.421 1626.11,766.167 1626.61,764.945 1627.1,764.695 1627.6,778.497 1628.09,801.758 1628.59,799.092 1629.08,810.346 1629.58,795.728 1630.08,792.67 1630.57,776.073 1631.07,800.112 1631.56,785.172 1632.06,781.541 1632.55,778.684 1633.05,774.141 1633.54,759.58 1634.04,797.635 1634.53,811.302 1635.03,833.296 1635.53,852.581 1636.02,833.335 1636.52,829.815 1637.01,813.09 1637.51,824.679 1638,793.115 1638.5,790.137 1638.99,776.512 1639.49,788.186 1639.99,760.052 1640.48,757.141 1640.98,753.508 1641.47,739.392 1641.97,752.583 1642.46,774.094 1642.96,771.22 1643.45,769.358 1643.95,742.146 1644.44,740.566 1644.94,729.509 1645.44,718.896 1645.93,708.865 1646.43,722.347 1646.92,697.17 1647.42,662.436 1647.91,678.95 1648.41,668.286 1648.9,670.52 1649.4,661.522 1649.89,663.35 1650.39,653.164 1650.89,632.072 1651.38,621.352 1651.88,616.578 1652.37,618.235 1652.87,582.897 1653.36,579.611 1653.86,574.993 1654.35,584.109 1654.85,590.969 1655.34,611.912 1655.84,620.788 1656.34,623.782 1656.83,655.574 1657.33,646.167 1657.82,651.048 1658.32,670.07 1658.81,674.437 1659.31,652.768 1659.8,630.87 1660.3,624.921 1660.8,644.799 1661.29,663.723 1661.79,679.359 1662.28,709.143 1662.78,749.793 1663.27,737.591 1663.77,738.014 1664.26,739.201 1664.76,751.351 1665.25,751.734 1665.75,736.329 1666.25,759.035 1666.74,767.917 1667.24,779.891 1667.73,765.156 1668.23,763.647 1668.72,777.846 1669.22,789.874 1669.71,799.532 1670.21,795.931 1670.7,803.253 1671.2,802.715 1671.7,787.056 1672.19,757.1 1672.69,755.947 1673.18,767.403 1673.68,767.405 1674.17,765.876 1674.67,789.495 1675.16,797.711 1675.66,810.377 1676.15,794.545 1676.65,764.379 1677.15,762.038 1677.64,787.006 1678.14,784.961 1678.63,807.53 1679.13,805.556 1679.62,801.342 1680.12,760.125 1680.61,746.248 1681.11,760.553 1681.61,760.564 1682.1,798.802 1682.6,794.55 1683.09,804.235 1683.59,787.496 1684.08,770.899 1684.58,741.766 1685.07,730.757 1685.57,732.397 1686.06,744.599 1686.56,756.22 1687.06,769.052 1687.55,782.701 1688.05,753.836 1688.54,717.319 1689.04,693.011 1689.53,694.312 1690.03,683.465 1690.52,698.546 1691.02,701.301 1691.51,714.558 1692.01,705.108 1692.51,707.091 1693,696.377 1693.5,698.614 1693.99,661.713 1694.49,652.516 1694.98,657.129 1695.48,658.325 1695.97,648.069 1696.47,665.06 1696.96,692.977 1697.46,693.217 1697.96,745.371 1698.45,771.06 1698.95,791.644 1699.44,761.828 1699.94,761.466 1700.43,750.668 1700.93,738.533 1701.42,740.78 1701.92,752.398 1702.42,739.752 1702.91,741.046 1703.41,754.255 1703.9,726.456 1704.4,738.698 1704.89,774.35 1705.39,758.107 1705.88,755.882 1706.38,756.949 1706.87,778.515 1707.37,775.316 1707.87,763.385 1708.36,749.067 1708.86,749.613 1709.35,735.794 1709.85,710.11 1710.34,697.331 1710.84,674.501 1711.33,716.828 1711.83,717.606 1712.32,741.668 1712.82,730.048 1713.32,692.451 1713.81,693.19 1714.31,681.215 1714.8,686.101 1715.3,690.712 1715.79,692.732 1716.29,667.58 1716.78,671.1 1717.28,697.732 1717.77,698.742 1718.27,699.336 1718.77,701.897 1719.26,702.479 1719.76,690.5 1720.25,705.262 1720.75,722.709 1721.24,736.345 1721.74,741.428 1722.23,729.143 1722.73,716.909 1723.23,731.741 \"/>\n<path clip-path=\"url(#clip293)\" d=\"M732.766 741.957 L733.262 741.957 L733.757 741.957 L734.253 741.957 L734.748 741.957 L735.244 741.957 L735.739 741.957 L736.235 741.957 L736.73 741.957 L737.226 741.957 L737.721 741.957 L738.217 741.957 L738.712 741.957 L739.208 741.957 L739.703 741.957 L740.199 741.957 L740.694 741.957 L741.189 741.957 L741.685 741.957 L742.18 741.957 L742.676 741.957 L743.171 741.957 L743.667 741.957 L744.162 741.957 L744.658 741.957 L745.153 741.957 L745.649 741.957 L746.144 741.957 L746.64 741.957 L747.135 741.957 L747.631 741.957 L748.126 741.957 L748.622 741.957 L749.117 741.957 L749.613 741.957 L750.108 741.957 L750.604 741.957 L751.099 741.957 L751.594 741.957 L752.09 741.957 L752.585 741.957 L753.081 741.957 L753.576 741.957 L754.072 741.957 L754.567 741.957 L755.063 741.957 L755.558 741.957 L756.054 741.957 L756.549 741.957 L757.045 741.957 L757.54 741.957 L758.036 741.957 L758.531 741.957 L759.027 741.957 L759.522 741.957 L760.018 741.957 L760.513 741.957 L761.009 741.957 L761.504 741.957 L761.999 741.957 L762.495 741.957 L762.99 741.957 L763.486 741.957 L763.981 741.957 L764.477 741.957 L764.972 741.957 L765.468 741.957 L765.963 741.957 L766.459 741.957 L766.954 741.957 L767.45 741.957 L767.945 741.957 L768.441 741.957 L768.936 741.957 L769.432 741.957 L769.927 741.957 L770.423 741.957 L770.918 741.957 L771.414 741.957 L771.909 741.957 L772.405 741.957 L772.9 741.957 L773.395 741.957 L773.891 741.957 L774.386 741.957 L774.882 741.957 L775.377 741.957 L775.873 741.957 L776.368 741.957 L776.864 741.957 L777.359 741.957 L777.855 741.957 L778.35 741.957 L778.846 741.957 L779.341 741.957 L779.837 741.957 L780.332 741.957 L780.828 741.957 L781.323 741.957 L781.819 741.957 L782.314 741.957 L782.81 741.957 L783.305 741.957 L783.8 741.957 L784.296 741.957 L784.791 741.957 L785.287 741.957 L785.782 741.957 L786.278 741.957 L786.773 741.957 L787.269 741.957 L787.764 741.957 L788.26 741.957 L788.755 741.957 L789.251 741.957 L789.746 741.957 L790.242 741.957 L790.737 741.957 L791.233 741.957 L791.728 741.957 L792.224 741.957 L792.719 741.957 L793.215 741.957 L793.71 741.957 L794.206 741.957 L794.701 741.957 L795.196 741.957 L795.692 741.957 L796.187 741.957 L796.683 741.957 L797.178 741.957 L797.674 741.957 L798.169 741.957 L798.665 741.957 L799.16 741.957 L799.656 741.957 L800.151 741.957 L800.647 741.957 L801.142 741.957 L801.638 741.957 L802.133 741.957 L802.629 741.957 L803.124 741.957 L803.62 741.957 L804.115 741.957 L804.611 741.957 L805.106 741.957 L805.601 741.957 L806.097 741.957 L806.592 741.957 L807.088 741.957 L807.583 741.957 L808.079 741.957 L808.574 741.957 L809.07 741.957 L809.565 741.957 L810.061 741.957 L810.556 741.957 L811.052 741.957 L811.547 741.957 L812.043 741.957 L812.538 741.957 L813.034 741.957 L813.529 741.957 L814.025 741.957 L814.52 741.957 L815.016 741.957 L815.511 741.957 L816.007 741.957 L816.502 741.957 L816.997 741.957 L817.493 741.957 L817.988 741.957 L818.484 741.957 L818.979 741.957 L819.475 741.957 L819.97 741.957 L820.466 741.957 L820.961 741.957 L821.457 741.957 L821.952 741.957 L822.448 741.957 L822.943 741.957 L823.439 741.957 L823.934 741.957 L824.43 741.957 L824.925 741.957 L825.421 741.957 L825.916 741.957 L826.412 741.957 L826.907 741.957 L827.402 741.957 L827.898 741.957 L828.393 741.957 L828.889 741.957 L829.384 741.957 L829.88 741.957 L830.375 741.957 L830.871 741.957 L831.366 741.957 L831.862 741.957 L832.357 741.957 L832.853 741.957 L833.348 741.957 L833.844 741.957 L834.339 741.957 L834.835 741.957 L835.33 741.957 L835.826 741.957 L836.321 741.957 L836.817 741.957 L837.312 741.957 L837.808 741.957 L838.303 741.957 L838.798 741.957 L839.294 741.957 L839.789 741.957 L840.285 741.957 L840.78 741.957 L841.276 741.957 L841.771 741.957 L842.267 741.957 L842.762 741.957 L843.258 741.957 L843.753 741.957 L844.249 741.957 L844.744 741.957 L845.24 741.957 L845.735 741.957 L846.231 741.957 L846.726 741.957 L847.222 741.957 L847.717 741.957 L848.213 741.957 L848.708 741.957 L849.203 741.957 L849.699 741.957 L850.194 741.957 L850.69 741.957 L851.185 741.957 L851.681 741.957 L852.176 741.957 L852.672 741.957 L853.167 741.957 L853.663 741.957 L854.158 741.957 L854.654 741.957 L855.149 741.957 L855.645 741.957 L856.14 741.957 L856.636 741.957 L857.131 741.957 L857.627 741.957 L858.122 741.957 L858.618 741.957 L859.113 741.957 L859.608 741.957 L860.104 741.957 L860.599 741.957 L861.095 741.957 L861.59 741.957 L862.086 741.957 L862.581 741.957 L863.077 741.957 L863.572 741.957 L864.068 741.957 L864.563 741.957 L865.059 741.957 L865.554 741.957 L866.05 741.957 L866.545 741.957 L867.041 741.957 L867.536 741.957 L868.032 741.957 L868.527 741.957 L869.023 741.957 L869.518 741.957 L870.014 741.957 L870.509 741.957 L871.004 741.957 L871.5 741.957 L871.995 741.957 L872.491 741.957 L872.986 741.957 L873.482 741.957 L873.977 741.957 L874.473 741.957 L874.968 741.957 L875.464 741.957 L875.959 741.957 L876.455 741.957 L876.95 741.957 L877.446 741.957 L877.941 741.957 L878.437 741.957 L878.932 741.957 L879.428 741.957 L879.923 741.957 L880.419 741.957 L880.914 741.957 L881.409 741.957 L881.905 741.957 L882.4 741.957 L882.896 741.957 L883.391 741.957 L883.887 741.957 L884.382 741.957 L884.878 741.957 L885.373 741.957 L885.869 741.957 L886.364 741.957 L886.86 741.957 L887.355 741.957 L887.851 741.957 L888.346 741.957 L888.842 741.957 L889.337 741.957 L889.833 741.957 L890.328 741.957 L890.824 741.957 L891.319 741.957 L891.815 741.957 L892.31 741.957 L892.805 741.957 L893.301 741.957 L893.796 741.957 L894.292 741.957 L894.787 741.957 L895.283 741.957 L895.778 741.957 L896.274 741.957 L896.769 741.957 L897.265 741.957 L897.76 741.957 L898.256 741.957 L898.751 741.957 L899.247 741.957 L899.742 741.957 L900.238 741.957 L900.733 741.957 L901.229 741.957 L901.724 741.957 L902.22 741.957 L902.715 741.957 L903.21 741.957 L903.706 741.957 L904.201 741.957 L904.697 741.957 L905.192 741.957 L905.688 741.957 L906.183 741.957 L906.679 741.957 L907.174 741.957 L907.67 741.957 L908.165 741.957 L908.661 741.957 L909.156 741.957 L909.652 741.957 L910.147 741.957 L910.643 741.957 L911.138 741.957 L911.634 741.957 L912.129 741.957 L912.625 741.957 L913.12 741.957 L913.616 741.957 L914.111 741.957 L914.606 741.957 L915.102 741.957 L915.597 741.957 L916.093 741.957 L916.588 741.957 L917.084 741.957 L917.579 741.957 L918.075 741.957 L918.57 741.957 L919.066 741.957 L919.561 741.957 L920.057 741.957 L920.552 741.957 L921.048 741.957 L921.543 741.957 L922.039 741.957 L922.534 741.957 L923.03 741.957 L923.525 741.957 L924.021 741.957 L924.516 741.957 L925.011 741.957 L925.507 741.957 L926.002 741.957 L926.498 741.957 L926.993 741.957 L927.489 741.957 L927.984 741.957 L928.48 741.957 L928.975 741.957 L929.471 741.957 L929.966 741.957 L930.462 741.957 L930.957 741.957 L931.453 741.957 L931.948 741.957 L932.444 741.957 L932.939 741.957 L933.435 741.957 L933.93 741.957 L934.426 741.957 L934.921 741.957 L935.417 741.957 L935.912 741.957 L936.407 741.957 L936.903 741.957 L937.398 741.957 L937.894 741.957 L938.389 741.957 L938.885 741.957 L939.38 741.957 L939.876 741.957 L940.371 741.957 L940.867 741.957 L941.362 741.957 L941.858 741.957 L942.353 741.957 L942.849 741.957 L943.344 741.957 L943.84 741.957 L944.335 741.957 L944.831 741.957 L945.326 741.957 L945.822 741.957 L946.317 741.957 L946.812 741.957 L947.308 741.957 L947.803 741.957 L948.299 741.957 L948.794 741.957 L949.29 741.957 L949.785 741.957 L950.281 741.957 L950.776 741.957 L951.272 741.957 L951.767 741.957 L952.263 741.957 L952.758 741.957 L953.254 741.957 L953.749 741.957 L954.245 741.957 L954.74 741.957 L955.236 741.957 L955.731 741.957 L956.227 741.957 L956.722 741.957 L957.217 741.957 L957.713 741.957 L958.208 741.957 L958.704 741.957 L959.199 741.957 L959.695 741.957 L960.19 741.957 L960.686 741.957 L961.181 741.957 L961.677 741.957 L962.172 741.957 L962.668 741.957 L963.163 741.957 L963.659 741.957 L964.154 741.957 L964.65 741.957 L965.145 741.957 L965.641 741.957 L966.136 741.957 L966.632 741.957 L967.127 741.957 L967.623 741.957 L968.118 741.957 L968.613 741.957 L969.109 741.957 L969.604 741.957 L970.1 741.957 L970.595 741.957 L971.091 741.957 L971.586 741.957 L972.082 741.957 L972.577 741.957 L973.073 741.957 L973.568 741.957 L974.064 741.957 L974.559 741.957 L975.055 741.957 L975.55 741.957 L976.046 741.957 L976.541 741.957 L977.037 741.957 L977.532 741.957 L978.028 741.957 L978.523 741.957 L979.018 741.957 L979.514 741.957 L980.009 741.957 L980.505 741.957 L981 741.957 L981.496 741.957 L981.991 741.957 L982.487 741.957 L982.982 741.957 L983.478 741.957 L983.973 741.957 L984.469 741.957 L984.964 741.957 L985.46 741.957 L985.955 741.957 L986.451 741.957 L986.946 741.957 L987.442 741.957 L987.937 741.957 L988.433 741.957 L988.928 741.957 L989.424 741.957 L989.919 741.957 L990.414 741.957 L990.91 741.957 L991.405 741.957 L991.901 741.957 L992.396 741.957 L992.892 741.957 L993.387 741.957 L993.883 741.957 L994.378 741.957 L994.874 741.957 L995.369 741.957 L995.865 741.957 L996.36 741.957 L996.856 741.957 L997.351 741.957 L997.847 741.957 L998.342 741.957 L998.838 741.957 L999.333 741.957 L999.829 741.957 L1000.32 741.957 L1000.82 741.957 L1001.31 741.957 L1001.81 741.957 L1002.31 741.957 L1002.8 741.957 L1003.3 741.957 L1003.79 741.957 L1004.29 741.957 L1004.78 741.957 L1005.28 741.957 L1005.77 741.957 L1006.27 741.957 L1006.77 741.957 L1007.26 741.957 L1007.76 741.957 L1008.25 741.957 L1008.75 741.957 L1009.24 741.957 L1009.74 741.957 L1010.23 741.957 L1010.73 741.957 L1011.22 741.957 L1011.72 741.957 L1012.22 741.957 L1012.71 741.957 L1013.21 741.957 L1013.7 741.957 L1014.2 741.957 L1014.69 741.957 L1015.19 741.957 L1015.68 741.957 L1016.18 741.957 L1016.67 741.957 L1017.17 741.957 L1017.67 741.957 L1018.16 741.957 L1018.66 741.957 L1019.15 741.957 L1019.65 741.957 L1020.14 741.957 L1020.64 741.957 L1021.13 741.957 L1021.63 741.957 L1022.13 741.957 L1022.62 741.957 L1023.12 741.957 L1023.61 741.957 L1024.11 741.957 L1024.6 741.957 L1025.1 741.957 L1025.59 741.957 L1026.09 741.957 L1026.58 741.957 L1027.08 741.957 L1027.58 741.957 L1028.07 741.957 L1028.57 741.957 L1029.06 741.957 L1029.56 741.957 L1030.05 741.957 L1030.55 741.957 L1031.04 741.957 L1031.54 741.957 L1032.03 741.957 L1032.53 741.957 L1033.03 741.957 L1033.52 741.957 L1034.02 741.957 L1034.51 741.957 L1035.01 741.957 L1035.5 741.957 L1036 741.957 L1036.49 741.957 L1036.99 741.957 L1037.48 741.957 L1037.98 741.957 L1038.48 741.957 L1038.97 741.957 L1039.47 741.957 L1039.96 741.957 L1040.46 741.957 L1040.95 741.957 L1041.45 741.957 L1041.94 741.957 L1042.44 741.957 L1042.94 741.957 L1043.43 741.957 L1043.93 741.957 L1044.42 741.957 L1044.92 741.957 L1045.41 741.957 L1045.91 741.957 L1046.4 741.957 L1046.9 741.957 L1047.39 741.957 L1047.89 741.957 L1048.39 741.957 L1048.88 741.957 L1049.38 741.957 L1049.87 741.957 L1050.37 741.957 L1050.86 741.957 L1051.36 741.957 L1051.85 741.957 L1052.35 741.957 L1052.84 741.957 L1053.34 741.957 L1053.84 741.957 L1054.33 741.957 L1054.83 741.957 L1055.32 741.957 L1055.82 741.957 L1056.31 741.957 L1056.81 741.957 L1057.3 741.957 L1057.8 741.957 L1058.29 741.957 L1058.79 741.957 L1059.29 741.957 L1059.78 741.957 L1060.28 741.957 L1060.77 741.957 L1061.27 741.957 L1061.76 741.957 L1062.26 741.957 L1062.75 741.957 L1063.25 741.957 L1063.75 741.957 L1064.24 741.957 L1064.74 741.957 L1065.23 741.957 L1065.73 741.957 L1066.22 741.957 L1066.72 741.957 L1067.21 741.957 L1067.71 741.957 L1068.2 741.957 L1068.7 741.957 L1069.2 741.957 L1069.69 741.957 L1070.19 741.957 L1070.68 741.957 L1071.18 741.957 L1071.67 741.957 L1072.17 741.957 L1072.66 741.957 L1073.16 741.957 L1073.65 741.957 L1074.15 741.957 L1074.65 741.957 L1075.14 741.957 L1075.64 741.957 L1076.13 741.957 L1076.63 741.957 L1077.12 741.957 L1077.62 741.957 L1078.11 741.957 L1078.61 741.957 L1079.1 741.957 L1079.6 741.957 L1080.1 741.957 L1080.59 741.957 L1081.09 741.957 L1081.58 741.957 L1082.08 741.957 L1082.57 741.957 L1083.07 741.957 L1083.56 741.957 L1084.06 741.957 L1084.56 741.957 L1085.05 741.957 L1085.55 741.957 L1086.04 741.957 L1086.54 741.957 L1087.03 741.957 L1087.53 741.957 L1088.02 741.957 L1088.52 741.957 L1089.01 741.957 L1089.51 741.957 L1090.01 741.957 L1090.5 741.957 L1091 741.957 L1091.49 741.957 L1091.99 741.957 L1092.48 741.957 L1092.98 741.957 L1093.47 741.957 L1093.97 741.957 L1094.46 741.957 L1094.96 741.957 L1095.46 741.957 L1095.95 741.957 L1096.45 741.957 L1096.94 741.957 L1097.44 741.957 L1097.93 741.957 L1098.43 741.957 L1098.92 741.957 L1099.42 741.957 L1099.91 741.957 L1100.41 741.957 L1100.91 741.957 L1101.4 741.957 L1101.9 741.957 L1102.39 741.957 L1102.89 741.957 L1103.38 741.957 L1103.88 741.957 L1104.37 741.957 L1104.87 741.957 L1105.37 741.957 L1105.86 741.957 L1106.36 741.957 L1106.85 741.957 L1107.35 741.957 L1107.84 741.957 L1108.34 741.957 L1108.83 741.957 L1109.33 741.957 L1109.82 741.957 L1110.32 741.957 L1110.82 741.957 L1111.31 741.957 L1111.81 741.957 L1112.3 741.957 L1112.8 741.957 L1113.29 741.957 L1113.79 741.957 L1114.28 741.957 L1114.78 741.957 L1115.27 741.957 L1115.77 741.957 L1116.27 741.957 L1116.76 741.957 L1117.26 741.957 L1117.75 741.957 L1118.25 741.957 L1118.74 741.957 L1119.24 741.957 L1119.73 741.957 L1120.23 741.957 L1120.72 741.957 L1121.22 741.957 L1121.72 741.957 L1122.21 741.957 L1122.71 741.957 L1123.2 741.957 L1123.7 741.957 L1124.19 741.957 L1124.69 741.957 L1125.18 741.957 L1125.68 741.957 L1126.18 741.957 L1126.67 741.957 L1127.17 741.957 L1127.66 741.957 L1128.16 741.957 L1128.65 741.957 L1129.15 741.957 L1129.64 741.957 L1130.14 741.957 L1130.63 741.957 L1131.13 741.957 L1131.63 741.957 L1132.12 741.957 L1132.62 741.957 L1133.11 741.957 L1133.61 741.957 L1134.1 741.957 L1134.6 741.957 L1135.09 741.957 L1135.59 741.957 L1136.08 741.957 L1136.58 741.957 L1137.08 741.957 L1137.57 741.957 L1138.07 741.957 L1138.56 741.957 L1139.06 741.957 L1139.55 741.957 L1140.05 741.957 L1140.54 741.957 L1141.04 741.957 L1141.54 741.957 L1142.03 741.957 L1142.53 741.957 L1143.02 741.957 L1143.52 741.957 L1144.01 741.957 L1144.51 741.957 L1145 741.957 L1145.5 741.957 L1145.99 741.957 L1146.49 741.957 L1146.99 741.957 L1147.48 741.957 L1147.98 741.957 L1148.47 741.957 L1148.97 741.957 L1149.46 741.957 L1149.96 741.957 L1150.45 741.957 L1150.95 741.957 L1151.44 741.957 L1151.94 741.957 L1152.44 741.957 L1152.93 741.957 L1153.43 741.957 L1153.92 741.957 L1154.42 741.957 L1154.91 741.957 L1155.41 741.957 L1155.9 741.957 L1156.4 741.957 L1156.89 741.957 L1157.39 741.957 L1157.89 741.957 L1158.38 741.957 L1158.88 741.957 L1159.37 741.957 L1159.87 741.957 L1160.36 741.957 L1160.86 741.957 L1161.35 741.957 L1161.85 741.957 L1162.35 741.957 L1162.84 741.957 L1163.34 741.957 L1163.83 741.957 L1164.33 741.957 L1164.82 741.957 L1165.32 741.957 L1165.81 741.957 L1166.31 741.957 L1166.8 741.957 L1167.3 741.957 L1167.8 741.957 L1168.29 741.957 L1168.79 741.957 L1169.28 741.957 L1169.78 741.957 L1170.27 741.957 L1170.77 741.957 L1171.26 741.957 L1171.76 741.957 L1172.25 741.957 L1172.75 741.957 L1173.25 741.957 L1173.74 741.957 L1174.24 741.957 L1174.73 741.957 L1175.23 741.957 L1175.72 741.957 L1176.22 741.957 L1176.71 741.957 L1177.21 741.957 L1177.7 741.957 L1178.2 741.957 L1178.7 741.957 L1179.19 741.957 L1179.69 741.957 L1180.18 741.957 L1180.68 741.957 L1181.17 741.957 L1181.67 741.957 L1182.16 741.957 L1182.66 741.957 L1183.16 741.957 L1183.65 741.957 L1184.15 741.957 L1184.64 741.957 L1185.14 741.957 L1185.63 741.957 L1186.13 741.957 L1186.62 741.957 L1187.12 741.957 L1187.61 741.957 L1188.11 741.957 L1188.61 741.957 L1189.1 741.957 L1189.6 741.957 L1190.09 741.957 L1190.59 741.957 L1191.08 741.957 L1191.58 741.957 L1192.07 741.957 L1192.57 741.957 L1193.06 741.957 L1193.56 741.957 L1194.06 741.957 L1194.55 741.957 L1195.05 741.957 L1195.54 741.957 L1196.04 741.957 L1196.53 741.957 L1197.03 741.957 L1197.52 741.957 L1198.02 741.957 L1198.51 741.957 L1199.01 741.957 L1199.51 741.957 L1200 741.957 L1200.5 741.957 L1200.99 741.957 L1201.49 741.957 L1201.98 741.957 L1202.48 741.957 L1202.97 741.957 L1203.47 741.957 L1203.97 741.957 L1204.46 741.957 L1204.96 741.957 L1205.45 741.957 L1205.95 741.957 L1206.44 741.957 L1206.94 741.957 L1207.43 741.957 L1207.93 741.957 L1208.42 741.957 L1208.92 741.957 L1209.42 741.957 L1209.91 741.957 L1210.41 741.957 L1210.9 741.957 L1211.4 741.957 L1211.89 741.957 L1212.39 741.957 L1212.88 741.957 L1213.38 741.957 L1213.87 741.957 L1214.37 741.957 L1214.87 741.957 L1215.36 741.957 L1215.86 741.957 L1216.35 741.957 L1216.85 741.957 L1217.34 741.957 L1217.84 741.957 L1218.33 741.957 L1218.83 741.957 L1219.32 741.957 L1219.82 741.957 L1220.32 741.957 L1220.81 741.957 L1221.31 741.957 L1221.8 741.957 L1222.3 741.957 L1222.79 741.957 L1223.29 741.957 L1223.78 741.957 L1224.28 741.957 L1224.78 741.957 L1225.27 741.957 L1225.77 741.957 L1226.26 741.957 L1226.76 741.957 L1227.25 741.957 L1227.75 741.957 L1228.24 741.957 L1228.74 741.957 L1229.23 741.957 L1229.73 741.957 L1230.23 741.957 L1230.72 741.957 L1231.22 741.957 L1231.71 741.957 L1232.21 741.957 L1232.7 741.957 L1233.2 741.957 L1233.69 741.957 L1234.19 741.957 L1234.68 741.957 L1235.18 741.957 L1235.68 741.957 L1236.17 741.957 L1236.67 741.957 L1237.16 741.957 L1237.66 741.957 L1238.15 741.957 L1238.65 741.957 L1239.14 741.957 L1239.64 741.957 L1240.13 741.957 L1240.63 741.957 L1241.13 741.957 L1241.62 741.957 L1242.12 741.957 L1242.61 741.957 L1243.11 741.957 L1243.6 741.957 L1244.1 741.957 L1244.59 741.957 L1245.09 741.957 L1245.59 741.957 L1246.08 741.957 L1246.58 741.957 L1247.07 741.957 L1247.57 741.957 L1248.06 741.957 L1248.56 741.957 L1249.05 741.957 L1249.55 741.957 L1250.04 741.957 L1250.54 741.957 L1251.04 741.957 L1251.53 741.957 L1252.03 741.957 L1252.52 741.957 L1253.02 741.957 L1253.51 741.957 L1254.01 741.957 L1254.5 741.957 L1255 741.957 L1255.49 741.957 L1255.99 741.957 L1256.49 741.957 L1256.98 741.957 L1257.48 741.957 L1257.97 741.957 L1258.47 741.957 L1258.96 741.957 L1259.46 741.957 L1259.95 741.957 L1260.45 741.957 L1260.95 741.957 L1261.44 741.957 L1261.94 741.957 L1262.43 741.957 L1262.93 741.957 L1263.42 741.957 L1263.92 741.957 L1264.41 741.957 L1264.91 741.957 L1265.4 741.957 L1265.9 741.957 L1266.4 741.957 L1266.89 741.957 L1267.39 741.957 L1267.88 741.957 L1268.38 741.957 L1268.87 741.957 L1269.37 741.957 L1269.86 741.957 L1270.36 741.957 L1270.85 741.957 L1271.35 741.957 L1271.85 741.957 L1272.34 741.957 L1272.84 741.957 L1273.33 741.957 L1273.83 741.957 L1274.32 741.957 L1274.82 741.957 L1275.31 741.957 L1275.81 741.957 L1276.3 741.957 L1276.8 741.957 L1277.3 741.957 L1277.79 741.957 L1278.29 741.957 L1278.78 741.957 L1279.28 741.957 L1279.77 741.957 L1280.27 741.957 L1280.76 741.957 L1281.26 741.957 L1281.76 741.957 L1282.25 741.957 L1282.75 741.957 L1283.24 741.957 L1283.74 741.957 L1284.23 741.957 L1284.73 741.957 L1285.22 741.957 L1285.72 741.957 L1286.21 741.957 L1286.71 741.957 L1287.21 741.957 L1287.7 741.957 L1288.2 741.957 L1288.69 741.957 L1289.19 741.957 L1289.68 741.957 L1290.18 741.957 L1290.67 741.957 L1291.17 741.957 L1291.66 741.957 L1292.16 741.957 L1292.66 741.957 L1293.15 741.957 L1293.65 741.957 L1294.14 741.957 L1294.64 741.957 L1295.13 741.957 L1295.63 741.957 L1296.12 741.957 L1296.62 741.957 L1297.11 741.957 L1297.61 741.957 L1298.11 741.957 L1298.6 741.957 L1299.1 741.957 L1299.59 741.957 L1300.09 741.957 L1300.58 741.957 L1301.08 741.957 L1301.57 741.957 L1302.07 741.957 L1302.57 741.957 L1303.06 741.957 L1303.56 741.957 L1304.05 741.957 L1304.55 741.957 L1305.04 741.957 L1305.54 741.957 L1306.03 741.957 L1306.53 741.957 L1307.02 741.957 L1307.52 741.957 L1308.02 741.957 L1308.51 741.957 L1309.01 741.957 L1309.5 741.957 L1310 741.957 L1310.49 741.957 L1310.99 741.957 L1311.48 741.957 L1311.98 741.957 L1312.47 741.957 L1312.97 741.957 L1313.47 741.957 L1313.96 741.957 L1314.46 741.957 L1314.95 741.957 L1315.45 741.957 L1315.94 741.957 L1316.44 741.957 L1316.93 741.957 L1317.43 741.957 L1317.92 741.957 L1318.42 741.957 L1318.92 741.957 L1319.41 741.957 L1319.91 741.957 L1320.4 741.957 L1320.9 741.957 L1321.39 741.957 L1321.89 741.957 L1322.38 741.957 L1322.88 741.957 L1323.38 741.957 L1323.87 741.957 L1324.37 741.957 L1324.86 741.957 L1325.36 741.957 L1325.85 741.957 L1326.35 741.957 L1326.84 741.957 L1327.34 741.957 L1327.83 741.957 L1328.33 741.957 L1328.83 741.957 L1329.32 741.957 L1329.82 741.957 L1330.31 741.957 L1330.81 741.957 L1331.3 741.957 L1331.8 741.957 L1332.29 741.957 L1332.79 741.957 L1333.28 741.957 L1333.78 741.957 L1334.28 741.957 L1334.77 741.957 L1335.27 741.957 L1335.76 741.957 L1336.26 741.957 L1336.75 741.957 L1337.25 741.957 L1337.74 741.957 L1338.24 741.957 L1338.73 741.957 L1339.23 741.957 L1339.73 741.957 L1340.22 741.957 L1340.72 741.957 L1341.21 741.957 L1341.71 741.957 L1342.2 741.957 L1342.7 741.957 L1343.19 741.957 L1343.69 741.957 L1344.19 741.957 L1344.68 741.957 L1345.18 741.957 L1345.67 741.957 L1346.17 741.957 L1346.66 741.957 L1347.16 741.957 L1347.65 741.957 L1348.15 741.957 L1348.64 741.957 L1349.14 741.957 L1349.64 741.957 L1350.13 741.957 L1350.63 741.957 L1351.12 741.957 L1351.62 741.957 L1352.11 741.957 L1352.61 741.957 L1353.1 741.957 L1353.6 741.957 L1354.09 741.957 L1354.59 741.957 L1355.09 741.957 L1355.58 741.957 L1356.08 741.957 L1356.57 741.957 L1357.07 741.957 L1357.56 741.957 L1358.06 741.957 L1358.55 741.957 L1359.05 741.957 L1359.54 741.957 L1360.04 741.957 L1360.54 741.957 L1361.03 741.957 L1361.53 741.957 L1362.02 741.957 L1362.52 741.957 L1363.01 741.957 L1363.51 741.957 L1364 741.957 L1364.5 741.957 L1365 741.957 L1365.49 741.957 L1365.99 741.957 L1366.48 741.957 L1366.98 741.957 L1367.47 741.957 L1367.97 741.957 L1368.46 741.957 L1368.96 741.957 L1369.45 741.957 L1369.95 741.957 L1370.45 741.957 L1370.94 741.957 L1371.44 741.957 L1371.93 741.957 L1372.43 741.957 L1372.92 741.957 L1373.42 741.957 L1373.91 741.957 L1374.41 741.957 L1374.9 741.957 L1375.4 741.957 L1375.9 741.957 L1376.39 741.957 L1376.89 741.957 L1377.38 741.957 L1377.88 741.957 L1378.37 741.957 L1378.87 741.957 L1379.36 741.957 L1379.86 741.957 L1380.35 741.957 L1380.85 741.957 L1381.35 741.957 L1381.84 741.957 L1382.34 741.957 L1382.83 741.957 L1383.33 741.957 L1383.82 741.957 L1384.32 741.957 L1384.81 741.957 L1385.31 741.957 L1385.81 741.957 L1386.3 741.957 L1386.8 741.957 L1387.29 741.957 L1387.79 741.957 L1388.28 741.957 L1388.78 741.957 L1389.27 741.957 L1389.77 741.957 L1390.26 741.957 L1390.76 741.957 L1391.26 741.957 L1391.75 741.957 L1392.25 741.957 L1392.74 741.957 L1393.24 741.957 L1393.73 741.957 L1394.23 741.957 L1394.72 741.957 L1395.22 741.957 L1395.71 741.957 L1396.21 741.957 L1396.71 741.957 L1397.2 741.957 L1397.7 741.957 L1398.19 741.957 L1398.69 741.957 L1399.18 741.957 L1399.68 741.957 L1400.17 741.957 L1400.67 741.957 L1401.17 741.957 L1401.66 741.957 L1402.16 741.957 L1402.65 741.957 L1403.15 741.957 L1403.64 741.957 L1404.14 741.957 L1404.63 741.957 L1405.13 741.957 L1405.62 741.957 L1406.12 741.957 L1406.62 741.957 L1407.11 741.957 L1407.61 741.957 L1408.1 741.957 L1408.6 741.957 L1409.09 741.957 L1409.59 741.957 L1410.08 741.957 L1410.58 741.957 L1411.07 741.957 L1411.57 741.957 L1412.07 741.957 L1412.56 741.957 L1413.06 741.957 L1413.55 741.957 L1414.05 741.957 L1414.54 741.957 L1415.04 741.957 L1415.53 741.957 L1416.03 741.957 L1416.52 741.957 L1417.02 741.957 L1417.52 741.957 L1418.01 741.957 L1418.51 741.957 L1419 741.957 L1419.5 741.957 L1419.99 741.957 L1420.49 741.957 L1420.98 741.957 L1421.48 741.957 L1421.98 741.957 L1422.47 741.957 L1422.97 741.957 L1423.46 741.957 L1423.96 741.957 L1424.45 741.957 L1424.95 741.957 L1425.44 741.957 L1425.94 741.957 L1426.43 741.957 L1426.93 741.957 L1427.43 741.957 L1427.92 741.957 L1428.42 741.957 L1428.91 741.957 L1429.41 741.957 L1429.9 741.957 L1430.4 741.957 L1430.89 741.957 L1431.39 741.957 L1431.88 741.957 L1432.38 741.957 L1432.88 741.957 L1433.37 741.957 L1433.87 741.957 L1434.36 741.957 L1434.86 741.957 L1435.35 741.957 L1435.85 741.957 L1436.34 741.957 L1436.84 741.957 L1437.33 741.957 L1437.83 741.957 L1438.33 741.957 L1438.82 741.957 L1439.32 741.957 L1439.81 741.957 L1440.31 741.957 L1440.8 741.957 L1441.3 741.957 L1441.79 741.957 L1442.29 741.957 L1442.79 741.957 L1443.28 741.957 L1443.78 741.957 L1444.27 741.957 L1444.77 741.957 L1445.26 741.957 L1445.76 741.957 L1446.25 741.957 L1446.75 741.957 L1447.24 741.957 L1447.74 741.957 L1448.24 741.957 L1448.73 741.957 L1449.23 741.957 L1449.72 741.957 L1450.22 741.957 L1450.71 741.957 L1451.21 741.957 L1451.7 741.957 L1452.2 741.957 L1452.69 741.957 L1453.19 741.957 L1453.69 741.957 L1454.18 741.957 L1454.68 741.957 L1455.17 741.957 L1455.67 741.957 L1456.16 741.957 L1456.66 741.957 L1457.15 741.957 L1457.65 741.957 L1458.14 741.957 L1458.64 741.957 L1459.14 741.957 L1459.63 741.957 L1460.13 741.957 L1460.62 741.957 L1461.12 741.957 L1461.61 741.957 L1462.11 741.957 L1462.6 741.957 L1463.1 741.957 L1463.6 741.957 L1464.09 741.957 L1464.59 741.957 L1465.08 741.957 L1465.58 741.957 L1466.07 741.957 L1466.57 741.957 L1467.06 741.957 L1467.56 741.957 L1468.05 741.957 L1468.55 741.957 L1469.05 741.957 L1469.54 741.957 L1470.04 741.957 L1470.53 741.957 L1471.03 741.957 L1471.52 741.957 L1472.02 741.957 L1472.51 741.957 L1473.01 741.957 L1473.5 741.957 L1474 741.957 L1474.5 741.957 L1474.99 741.957 L1475.49 741.957 L1475.98 741.957 L1476.48 741.957 L1476.97 741.957 L1477.47 741.957 L1477.96 741.957 L1478.46 741.957 L1478.95 741.957 L1479.45 741.957 L1479.95 741.957 L1480.44 741.957 L1480.94 741.957 L1481.43 741.957 L1481.93 741.957 L1482.42 741.957 L1482.92 741.957 L1483.41 741.957 L1483.91 741.957 L1484.41 741.957 L1484.9 741.957 L1485.4 741.957 L1485.89 741.957 L1486.39 741.957 L1486.88 741.957 L1487.38 741.957 L1487.87 741.957 L1488.37 741.957 L1488.86 741.957 L1489.36 741.957 L1489.86 741.957 L1490.35 741.957 L1490.85 741.957 L1491.34 741.957 L1491.84 741.957 L1492.33 741.957 L1492.83 741.957 L1493.32 741.957 L1493.82 741.957 L1494.31 741.957 L1494.81 741.957 L1495.31 741.957 L1495.8 741.957 L1496.3 741.957 L1496.79 741.957 L1497.29 741.957 L1497.78 741.957 L1498.28 741.957 L1498.77 741.957 L1499.27 741.957 L1499.76 741.957 L1500.26 741.957 L1500.76 741.957 L1501.25 741.957 L1501.75 741.957 L1502.24 741.957 L1502.74 741.957 L1503.23 741.957 L1503.73 741.957 L1504.22 741.957 L1504.72 741.957 L1505.22 741.957 L1505.71 741.957 L1506.21 741.957 L1506.7 741.957 L1507.2 741.957 L1507.69 741.957 L1508.19 741.957 L1508.68 741.957 L1509.18 741.957 L1509.67 741.957 L1510.17 741.957 L1510.67 741.957 L1511.16 741.957 L1511.66 741.957 L1512.15 741.957 L1512.65 741.957 L1513.14 741.957 L1513.64 741.957 L1514.13 741.957 L1514.63 741.957 L1515.12 741.957 L1515.62 741.957 L1516.12 741.957 L1516.61 741.957 L1517.11 741.957 L1517.6 741.957 L1518.1 741.957 L1518.59 741.957 L1519.09 741.957 L1519.58 741.957 L1520.08 741.957 L1520.58 741.957 L1521.07 741.957 L1521.57 741.957 L1522.06 741.957 L1522.56 741.957 L1523.05 741.957 L1523.55 741.957 L1524.04 741.957 L1524.54 741.957 L1525.03 741.957 L1525.53 741.957 L1526.03 741.957 L1526.52 741.957 L1527.02 741.957 L1527.51 741.957 L1528.01 741.957 L1528.5 741.957 L1529 741.957 L1529.49 741.957 L1529.99 741.957 L1530.48 741.957 L1530.98 741.957 L1531.48 741.957 L1531.97 741.957 L1532.47 741.957 L1532.96 741.957 L1533.46 741.957 L1533.95 741.957 L1534.45 741.957 L1534.94 741.957 L1535.44 741.957 L1535.93 741.957 L1536.43 741.957 L1536.93 741.957 L1537.42 741.957 L1537.92 741.957 L1538.41 741.957 L1538.91 741.957 L1539.4 741.957 L1539.9 741.957 L1540.39 741.957 L1540.89 741.957 L1541.39 741.957 L1541.88 741.957 L1542.38 741.957 L1542.87 741.957 L1543.37 741.957 L1543.86 741.957 L1544.36 741.957 L1544.85 741.957 L1545.35 741.957 L1545.84 741.957 L1546.34 741.957 L1546.84 741.957 L1547.33 741.957 L1547.83 741.957 L1548.32 741.957 L1548.82 741.957 L1549.31 741.957 L1549.81 741.957 L1550.3 741.957 L1550.8 741.957 L1551.29 741.957 L1551.79 741.957 L1552.29 741.957 L1552.78 741.957 L1553.28 741.957 L1553.77 741.957 L1554.27 741.957 L1554.76 741.957 L1555.26 741.957 L1555.75 741.957 L1556.25 741.957 L1556.74 741.957 L1557.24 741.957 L1557.74 741.957 L1558.23 741.957 L1558.73 741.957 L1559.22 741.957 L1559.72 741.957 L1560.21 741.957 L1560.71 741.957 L1561.2 741.957 L1561.7 741.957 L1562.2 741.957 L1562.69 741.957 L1563.19 741.957 L1563.68 741.957 L1564.18 741.957 L1564.67 741.957 L1565.17 741.957 L1565.66 741.957 L1566.16 741.957 L1566.65 741.957 L1567.15 741.957 L1567.65 741.957 L1568.14 741.957 L1568.64 741.957 L1569.13 741.957 L1569.63 741.957 L1570.12 741.957 L1570.62 741.957 L1571.11 741.957 L1571.61 741.957 L1572.1 741.957 L1572.6 741.957 L1573.1 741.957 L1573.59 741.957 L1574.09 741.957 L1574.58 741.957 L1575.08 741.957 L1575.57 741.957 L1576.07 741.957 L1576.56 741.957 L1577.06 741.957 L1577.55 741.957 L1578.05 741.957 L1578.55 741.957 L1579.04 741.957 L1579.54 741.957 L1580.03 741.957 L1580.53 741.957 L1581.02 741.957 L1581.52 741.957 L1582.01 741.957 L1582.51 741.957 L1583.01 741.957 L1583.5 741.957 L1584 741.957 L1584.49 741.957 L1584.99 741.957 L1585.48 741.957 L1585.98 741.957 L1586.47 741.957 L1586.97 741.957 L1587.46 741.957 L1587.96 741.957 L1588.46 741.957 L1588.95 741.957 L1589.45 741.957 L1589.94 741.957 L1590.44 741.957 L1590.93 741.957 L1591.43 741.957 L1591.92 741.957 L1592.42 741.957 L1592.91 741.957 L1593.41 741.957 L1593.91 741.957 L1594.4 741.957 L1594.9 741.957 L1595.39 741.957 L1595.89 741.957 L1596.38 741.957 L1596.88 741.957 L1597.37 741.957 L1597.87 741.957 L1598.36 741.957 L1598.86 741.957 L1599.36 741.957 L1599.85 741.957 L1600.35 741.957 L1600.84 741.957 L1601.34 741.957 L1601.83 741.957 L1602.33 741.957 L1602.82 741.957 L1603.32 741.957 L1603.82 741.957 L1604.31 741.957 L1604.81 741.957 L1605.3 741.957 L1605.8 741.957 L1606.29 741.957 L1606.79 741.957 L1607.28 741.957 L1607.78 741.957 L1608.27 741.957 L1608.77 741.957 L1609.27 741.957 L1609.76 741.957 L1610.26 741.957 L1610.75 741.957 L1611.25 741.957 L1611.74 741.957 L1612.24 741.957 L1612.73 741.957 L1613.23 741.957 L1613.72 741.957 L1614.22 741.957 L1614.72 741.957 L1615.21 741.957 L1615.71 741.957 L1616.2 741.957 L1616.7 741.957 L1617.19 741.957 L1617.69 741.957 L1618.18 741.957 L1618.68 741.957 L1619.17 741.957 L1619.67 741.957 L1620.17 741.957 L1620.66 741.957 L1621.16 741.957 L1621.65 741.957 L1622.15 741.957 L1622.64 741.957 L1623.14 741.957 L1623.63 741.957 L1624.13 741.957 L1624.63 741.957 L1625.12 741.957 L1625.62 741.957 L1626.11 741.957 L1626.61 741.957 L1627.1 741.957 L1627.6 741.957 L1628.09 741.957 L1628.59 741.957 L1629.08 741.957 L1629.58 741.957 L1630.08 741.957 L1630.57 741.957 L1631.07 741.957 L1631.56 741.957 L1632.06 741.957 L1632.55 741.957 L1633.05 741.957 L1633.54 741.957 L1634.04 741.957 L1634.53 741.957 L1635.03 741.957 L1635.53 741.957 L1636.02 741.957 L1636.52 741.957 L1637.01 741.957 L1637.51 741.957 L1638 741.957 L1638.5 741.957 L1638.99 741.957 L1639.49 741.957 L1639.99 741.957 L1640.48 741.957 L1640.98 741.957 L1641.47 741.957 L1641.97 741.957 L1642.46 741.957 L1642.96 741.957 L1643.45 741.957 L1643.95 741.957 L1644.44 741.957 L1644.94 741.957 L1645.44 741.957 L1645.93 741.957 L1646.43 741.957 L1646.92 741.957 L1647.42 741.957 L1647.91 741.957 L1648.41 741.957 L1648.9 741.957 L1649.4 741.957 L1649.89 741.957 L1650.39 741.957 L1650.89 741.957 L1651.38 741.957 L1651.88 741.957 L1652.37 741.957 L1652.87 741.957 L1653.36 741.957 L1653.86 741.957 L1654.35 741.957 L1654.85 741.957 L1655.34 741.957 L1655.84 741.957 L1656.34 741.957 L1656.83 741.957 L1657.33 741.957 L1657.82 741.957 L1658.32 741.957 L1658.81 741.957 L1659.31 741.957 L1659.8 741.957 L1660.3 741.957 L1660.8 741.957 L1661.29 741.957 L1661.79 741.957 L1662.28 741.957 L1662.78 741.957 L1663.27 741.957 L1663.77 741.957 L1664.26 741.957 L1664.76 741.957 L1665.25 741.957 L1665.75 741.957 L1666.25 741.957 L1666.74 741.957 L1667.24 741.957 L1667.73 741.957 L1668.23 741.957 L1668.72 741.957 L1669.22 741.957 L1669.71 741.957 L1670.21 741.957 L1670.7 741.957 L1671.2 741.957 L1671.7 741.957 L1672.19 741.957 L1672.69 741.957 L1673.18 741.957 L1673.68 741.957 L1674.17 741.957 L1674.67 741.957 L1675.16 741.957 L1675.66 741.957 L1676.15 741.957 L1676.65 741.957 L1677.15 741.957 L1677.64 741.957 L1678.14 741.957 L1678.63 741.957 L1679.13 741.957 L1679.62 741.957 L1680.12 741.957 L1680.61 741.957 L1681.11 741.957 L1681.61 741.957 L1682.1 741.957 L1682.6 741.957 L1683.09 741.957 L1683.59 741.957 L1684.08 741.957 L1684.58 741.957 L1685.07 741.957 L1685.57 741.957 L1686.06 741.957 L1686.56 741.957 L1687.06 741.957 L1687.55 741.957 L1688.05 741.957 L1688.54 741.957 L1689.04 741.957 L1689.53 741.957 L1690.03 741.957 L1690.52 741.957 L1691.02 741.957 L1691.51 741.957 L1692.01 741.957 L1692.51 741.957 L1693 741.957 L1693.5 741.957 L1693.99 741.957 L1694.49 741.957 L1694.98 741.957 L1695.48 741.957 L1695.97 741.957 L1696.47 741.957 L1696.96 741.957 L1697.46 741.957 L1697.96 741.957 L1698.45 741.957 L1698.95 741.957 L1699.44 741.957 L1699.94 741.957 L1700.43 741.957 L1700.93 741.957 L1701.42 741.957 L1701.92 741.957 L1702.42 741.957 L1702.91 741.957 L1703.41 741.957 L1703.9 741.957 L1704.4 741.957 L1704.89 741.957 L1705.39 741.957 L1705.88 741.957 L1706.38 741.957 L1706.87 741.957 L1707.37 741.957 L1707.87 741.957 L1708.36 741.957 L1708.86 741.957 L1709.35 741.957 L1709.85 741.957 L1710.34 741.957 L1710.84 741.957 L1711.33 741.957 L1711.83 741.957 L1712.32 741.957 L1712.82 741.957 L1713.32 741.957 L1713.81 741.957 L1714.31 741.957 L1714.8 741.957 L1715.3 741.957 L1715.79 741.957 L1716.29 741.957 L1716.78 741.957 L1717.28 741.957 L1717.77 741.957 L1718.27 741.957 L1718.77 741.957 L1719.26 741.957 L1719.76 741.957 L1720.25 741.957 L1720.75 741.957 L1721.24 741.957 L1721.74 741.957 L1722.23 741.957 L1722.73 741.957 L1723.23 741.957 L1723.23 733.316 L1722.73 733.316 L1722.23 733.316 L1721.74 733.316 L1721.24 733.316 L1720.75 733.316 L1720.25 733.316 L1719.76 733.316 L1719.26 733.316 L1718.77 733.316 L1718.27 733.316 L1717.77 733.316 L1717.28 733.316 L1716.78 733.316 L1716.29 733.316 L1715.79 733.316 L1715.3 733.316 L1714.8 733.316 L1714.31 733.316 L1713.81 733.316 L1713.32 733.316 L1712.82 733.316 L1712.32 733.316 L1711.83 733.316 L1711.33 733.316 L1710.84 733.316 L1710.34 733.316 L1709.85 733.316 L1709.35 733.316 L1708.86 733.316 L1708.36 733.316 L1707.87 733.316 L1707.37 733.316 L1706.87 733.316 L1706.38 733.316 L1705.88 733.316 L1705.39 733.316 L1704.89 733.316 L1704.4 733.316 L1703.9 733.316 L1703.41 733.316 L1702.91 733.316 L1702.42 733.316 L1701.92 733.316 L1701.42 733.316 L1700.93 733.316 L1700.43 733.316 L1699.94 733.316 L1699.44 733.316 L1698.95 733.316 L1698.45 733.316 L1697.96 733.316 L1697.46 733.316 L1696.96 733.316 L1696.47 733.316 L1695.97 733.316 L1695.48 733.316 L1694.98 733.316 L1694.49 733.316 L1693.99 733.316 L1693.5 733.316 L1693 733.316 L1692.51 733.316 L1692.01 733.316 L1691.51 733.316 L1691.02 733.316 L1690.52 733.316 L1690.03 733.316 L1689.53 733.316 L1689.04 733.316 L1688.54 733.316 L1688.05 733.316 L1687.55 733.316 L1687.06 733.316 L1686.56 733.316 L1686.06 733.316 L1685.57 733.316 L1685.07 733.316 L1684.58 733.316 L1684.08 733.316 L1683.59 733.316 L1683.09 733.316 L1682.6 733.316 L1682.1 733.316 L1681.61 733.316 L1681.11 733.316 L1680.61 733.316 L1680.12 733.316 L1679.62 733.316 L1679.13 733.316 L1678.63 733.316 L1678.14 733.316 L1677.64 733.316 L1677.15 733.316 L1676.65 733.316 L1676.15 733.316 L1675.66 733.316 L1675.16 733.316 L1674.67 733.316 L1674.17 733.316 L1673.68 733.316 L1673.18 733.316 L1672.69 733.316 L1672.19 733.316 L1671.7 733.316 L1671.2 733.316 L1670.7 733.316 L1670.21 733.316 L1669.71 733.316 L1669.22 733.316 L1668.72 733.316 L1668.23 733.316 L1667.73 733.316 L1667.24 733.316 L1666.74 733.316 L1666.25 733.316 L1665.75 733.316 L1665.25 733.316 L1664.76 733.316 L1664.26 733.316 L1663.77 733.316 L1663.27 733.316 L1662.78 733.316 L1662.28 733.316 L1661.79 733.316 L1661.29 733.316 L1660.8 733.316 L1660.3 733.316 L1659.8 733.316 L1659.31 733.316 L1658.81 733.316 L1658.32 733.316 L1657.82 733.316 L1657.33 733.316 L1656.83 733.316 L1656.34 733.316 L1655.84 733.316 L1655.34 733.316 L1654.85 733.316 L1654.35 733.316 L1653.86 733.316 L1653.36 733.316 L1652.87 733.316 L1652.37 733.316 L1651.88 733.316 L1651.38 733.316 L1650.89 733.316 L1650.39 733.316 L1649.89 733.316 L1649.4 733.316 L1648.9 733.316 L1648.41 733.316 L1647.91 733.316 L1647.42 733.316 L1646.92 733.316 L1646.43 733.316 L1645.93 733.316 L1645.44 733.316 L1644.94 733.316 L1644.44 733.316 L1643.95 733.316 L1643.45 733.316 L1642.96 733.316 L1642.46 733.316 L1641.97 733.316 L1641.47 733.316 L1640.98 733.316 L1640.48 733.316 L1639.99 733.316 L1639.49 733.316 L1638.99 733.316 L1638.5 733.316 L1638 733.316 L1637.51 733.316 L1637.01 733.316 L1636.52 733.316 L1636.02 733.316 L1635.53 733.316 L1635.03 733.316 L1634.53 733.316 L1634.04 733.316 L1633.54 733.316 L1633.05 733.316 L1632.55 733.316 L1632.06 733.316 L1631.56 733.316 L1631.07 733.316 L1630.57 733.316 L1630.08 733.316 L1629.58 733.316 L1629.08 733.316 L1628.59 733.316 L1628.09 733.316 L1627.6 733.316 L1627.1 733.316 L1626.61 733.316 L1626.11 733.316 L1625.62 733.316 L1625.12 733.316 L1624.63 733.316 L1624.13 733.316 L1623.63 733.316 L1623.14 733.316 L1622.64 733.316 L1622.15 733.316 L1621.65 733.316 L1621.16 733.316 L1620.66 733.316 L1620.17 733.316 L1619.67 733.316 L1619.17 733.316 L1618.68 733.316 L1618.18 733.316 L1617.69 733.316 L1617.19 733.316 L1616.7 733.316 L1616.2 733.316 L1615.71 733.316 L1615.21 733.316 L1614.72 733.316 L1614.22 733.316 L1613.72 733.316 L1613.23 733.316 L1612.73 733.316 L1612.24 733.316 L1611.74 733.316 L1611.25 733.316 L1610.75 733.316 L1610.26 733.316 L1609.76 733.316 L1609.27 733.316 L1608.77 733.316 L1608.27 733.316 L1607.78 733.316 L1607.28 733.316 L1606.79 733.316 L1606.29 733.316 L1605.8 733.316 L1605.3 733.316 L1604.81 733.316 L1604.31 733.316 L1603.82 733.316 L1603.32 733.316 L1602.82 733.316 L1602.33 733.316 L1601.83 733.316 L1601.34 733.316 L1600.84 733.316 L1600.35 733.316 L1599.85 733.316 L1599.36 733.316 L1598.86 733.316 L1598.36 733.316 L1597.87 733.316 L1597.37 733.316 L1596.88 733.316 L1596.38 733.316 L1595.89 733.316 L1595.39 733.316 L1594.9 733.316 L1594.4 733.316 L1593.91 733.316 L1593.41 733.316 L1592.91 733.316 L1592.42 733.316 L1591.92 733.316 L1591.43 733.316 L1590.93 733.316 L1590.44 733.316 L1589.94 733.316 L1589.45 733.316 L1588.95 733.316 L1588.46 733.316 L1587.96 733.316 L1587.46 733.316 L1586.97 733.316 L1586.47 733.316 L1585.98 733.316 L1585.48 733.316 L1584.99 733.316 L1584.49 733.316 L1584 733.316 L1583.5 733.316 L1583.01 733.316 L1582.51 733.316 L1582.01 733.316 L1581.52 733.316 L1581.02 733.316 L1580.53 733.316 L1580.03 733.316 L1579.54 733.316 L1579.04 733.316 L1578.55 733.316 L1578.05 733.316 L1577.55 733.316 L1577.06 733.316 L1576.56 733.316 L1576.07 733.316 L1575.57 733.316 L1575.08 733.316 L1574.58 733.316 L1574.09 733.316 L1573.59 733.316 L1573.1 733.316 L1572.6 733.316 L1572.1 733.316 L1571.61 733.316 L1571.11 733.316 L1570.62 733.316 L1570.12 733.316 L1569.63 733.316 L1569.13 733.316 L1568.64 733.316 L1568.14 733.316 L1567.65 733.316 L1567.15 733.316 L1566.65 733.316 L1566.16 733.316 L1565.66 733.316 L1565.17 733.316 L1564.67 733.316 L1564.18 733.316 L1563.68 733.316 L1563.19 733.316 L1562.69 733.316 L1562.2 733.316 L1561.7 733.316 L1561.2 733.316 L1560.71 733.316 L1560.21 733.316 L1559.72 733.316 L1559.22 733.316 L1558.73 733.316 L1558.23 733.316 L1557.74 733.316 L1557.24 733.316 L1556.74 733.316 L1556.25 733.316 L1555.75 733.316 L1555.26 733.316 L1554.76 733.316 L1554.27 733.316 L1553.77 733.316 L1553.28 733.316 L1552.78 733.316 L1552.29 733.316 L1551.79 733.316 L1551.29 733.316 L1550.8 733.316 L1550.3 733.316 L1549.81 733.316 L1549.31 733.316 L1548.82 733.316 L1548.32 733.316 L1547.83 733.316 L1547.33 733.316 L1546.84 733.316 L1546.34 733.316 L1545.84 733.316 L1545.35 733.316 L1544.85 733.316 L1544.36 733.316 L1543.86 733.316 L1543.37 733.316 L1542.87 733.316 L1542.38 733.316 L1541.88 733.316 L1541.39 733.316 L1540.89 733.316 L1540.39 733.316 L1539.9 733.316 L1539.4 733.316 L1538.91 733.316 L1538.41 733.316 L1537.92 733.316 L1537.42 733.316 L1536.93 733.316 L1536.43 733.316 L1535.93 733.316 L1535.44 733.316 L1534.94 733.316 L1534.45 733.316 L1533.95 733.316 L1533.46 733.316 L1532.96 733.316 L1532.47 733.316 L1531.97 733.316 L1531.48 733.316 L1530.98 733.316 L1530.48 733.316 L1529.99 733.316 L1529.49 733.316 L1529 733.316 L1528.5 733.316 L1528.01 733.316 L1527.51 733.316 L1527.02 733.316 L1526.52 733.316 L1526.03 733.316 L1525.53 733.316 L1525.03 733.316 L1524.54 733.316 L1524.04 733.316 L1523.55 733.316 L1523.05 733.316 L1522.56 733.316 L1522.06 733.316 L1521.57 733.316 L1521.07 733.316 L1520.58 733.316 L1520.08 733.316 L1519.58 733.316 L1519.09 733.316 L1518.59 733.316 L1518.1 733.316 L1517.6 733.316 L1517.11 733.316 L1516.61 733.316 L1516.12 733.316 L1515.62 733.316 L1515.12 733.316 L1514.63 733.316 L1514.13 733.316 L1513.64 733.316 L1513.14 733.316 L1512.65 733.316 L1512.15 733.316 L1511.66 733.316 L1511.16 733.316 L1510.67 733.316 L1510.17 733.316 L1509.67 733.316 L1509.18 733.316 L1508.68 733.316 L1508.19 733.316 L1507.69 733.316 L1507.2 733.316 L1506.7 733.316 L1506.21 733.316 L1505.71 733.316 L1505.22 733.316 L1504.72 733.316 L1504.22 733.316 L1503.73 733.316 L1503.23 733.316 L1502.74 733.316 L1502.24 733.316 L1501.75 733.316 L1501.25 733.316 L1500.76 733.316 L1500.26 733.316 L1499.76 733.316 L1499.27 733.316 L1498.77 733.316 L1498.28 733.316 L1497.78 733.316 L1497.29 733.316 L1496.79 733.316 L1496.3 733.316 L1495.8 733.316 L1495.31 733.316 L1494.81 733.316 L1494.31 733.316 L1493.82 733.316 L1493.32 733.316 L1492.83 733.316 L1492.33 733.316 L1491.84 733.316 L1491.34 733.316 L1490.85 733.316 L1490.35 733.316 L1489.86 733.316 L1489.36 733.316 L1488.86 733.316 L1488.37 733.316 L1487.87 733.316 L1487.38 733.316 L1486.88 733.316 L1486.39 733.316 L1485.89 733.316 L1485.4 733.316 L1484.9 733.316 L1484.41 733.316 L1483.91 733.316 L1483.41 733.316 L1482.92 733.316 L1482.42 733.316 L1481.93 733.316 L1481.43 733.316 L1480.94 733.316 L1480.44 733.316 L1479.95 733.316 L1479.45 733.316 L1478.95 733.316 L1478.46 733.316 L1477.96 733.316 L1477.47 733.316 L1476.97 733.316 L1476.48 733.316 L1475.98 733.316 L1475.49 733.316 L1474.99 733.316 L1474.5 733.316 L1474 733.316 L1473.5 733.316 L1473.01 733.316 L1472.51 733.316 L1472.02 733.316 L1471.52 733.316 L1471.03 733.316 L1470.53 733.316 L1470.04 733.316 L1469.54 733.316 L1469.05 733.316 L1468.55 733.316 L1468.05 733.316 L1467.56 733.316 L1467.06 733.316 L1466.57 733.316 L1466.07 733.316 L1465.58 733.316 L1465.08 733.316 L1464.59 733.316 L1464.09 733.316 L1463.6 733.316 L1463.1 733.316 L1462.6 733.316 L1462.11 733.316 L1461.61 733.316 L1461.12 733.316 L1460.62 733.316 L1460.13 733.316 L1459.63 733.316 L1459.14 733.316 L1458.64 733.316 L1458.14 733.316 L1457.65 733.316 L1457.15 733.316 L1456.66 733.316 L1456.16 733.316 L1455.67 733.316 L1455.17 733.316 L1454.68 733.316 L1454.18 733.316 L1453.69 733.316 L1453.19 733.316 L1452.69 733.316 L1452.2 733.316 L1451.7 733.316 L1451.21 733.316 L1450.71 733.316 L1450.22 733.316 L1449.72 733.316 L1449.23 733.316 L1448.73 733.316 L1448.24 733.316 L1447.74 733.316 L1447.24 733.316 L1446.75 733.316 L1446.25 733.316 L1445.76 733.316 L1445.26 733.316 L1444.77 733.316 L1444.27 733.316 L1443.78 733.316 L1443.28 733.316 L1442.79 733.316 L1442.29 733.316 L1441.79 733.316 L1441.3 733.316 L1440.8 733.316 L1440.31 733.316 L1439.81 733.316 L1439.32 733.316 L1438.82 733.316 L1438.33 733.316 L1437.83 733.316 L1437.33 733.316 L1436.84 733.316 L1436.34 733.316 L1435.85 733.316 L1435.35 733.316 L1434.86 733.316 L1434.36 733.316 L1433.87 733.316 L1433.37 733.316 L1432.88 733.316 L1432.38 733.316 L1431.88 733.316 L1431.39 733.316 L1430.89 733.316 L1430.4 733.316 L1429.9 733.316 L1429.41 733.316 L1428.91 733.316 L1428.42 733.316 L1427.92 733.316 L1427.43 733.316 L1426.93 733.316 L1426.43 733.316 L1425.94 733.316 L1425.44 733.316 L1424.95 733.316 L1424.45 733.316 L1423.96 733.316 L1423.46 733.316 L1422.97 733.316 L1422.47 733.316 L1421.98 733.316 L1421.48 733.316 L1420.98 733.316 L1420.49 733.316 L1419.99 733.316 L1419.5 733.316 L1419 733.316 L1418.51 733.316 L1418.01 733.316 L1417.52 733.316 L1417.02 733.316 L1416.52 733.316 L1416.03 733.316 L1415.53 733.316 L1415.04 733.316 L1414.54 733.316 L1414.05 733.316 L1413.55 733.316 L1413.06 733.316 L1412.56 733.316 L1412.07 733.316 L1411.57 733.316 L1411.07 733.316 L1410.58 733.316 L1410.08 733.316 L1409.59 733.316 L1409.09 733.316 L1408.6 733.316 L1408.1 733.316 L1407.61 733.316 L1407.11 733.316 L1406.62 733.316 L1406.12 733.316 L1405.62 733.316 L1405.13 733.316 L1404.63 733.316 L1404.14 733.316 L1403.64 733.316 L1403.15 733.316 L1402.65 733.316 L1402.16 733.316 L1401.66 733.316 L1401.17 733.316 L1400.67 733.316 L1400.17 733.316 L1399.68 733.316 L1399.18 733.316 L1398.69 733.316 L1398.19 733.316 L1397.7 733.316 L1397.2 733.316 L1396.71 733.316 L1396.21 733.316 L1395.71 733.316 L1395.22 733.316 L1394.72 733.316 L1394.23 733.316 L1393.73 733.316 L1393.24 733.316 L1392.74 733.316 L1392.25 733.316 L1391.75 733.316 L1391.26 733.316 L1390.76 733.316 L1390.26 733.316 L1389.77 733.316 L1389.27 733.316 L1388.78 733.316 L1388.28 733.316 L1387.79 733.316 L1387.29 733.316 L1386.8 733.316 L1386.3 733.316 L1385.81 733.316 L1385.31 733.316 L1384.81 733.316 L1384.32 733.316 L1383.82 733.316 L1383.33 733.316 L1382.83 733.316 L1382.34 733.316 L1381.84 733.316 L1381.35 733.316 L1380.85 733.316 L1380.35 733.316 L1379.86 733.316 L1379.36 733.316 L1378.87 733.316 L1378.37 733.316 L1377.88 733.316 L1377.38 733.316 L1376.89 733.316 L1376.39 733.316 L1375.9 733.316 L1375.4 733.316 L1374.9 733.316 L1374.41 733.316 L1373.91 733.316 L1373.42 733.316 L1372.92 733.316 L1372.43 733.316 L1371.93 733.316 L1371.44 733.316 L1370.94 733.316 L1370.45 733.316 L1369.95 733.316 L1369.45 733.316 L1368.96 733.316 L1368.46 733.316 L1367.97 733.316 L1367.47 733.316 L1366.98 733.316 L1366.48 733.316 L1365.99 733.316 L1365.49 733.316 L1365 733.316 L1364.5 733.316 L1364 733.316 L1363.51 733.316 L1363.01 733.316 L1362.52 733.316 L1362.02 733.316 L1361.53 733.316 L1361.03 733.316 L1360.54 733.316 L1360.04 733.316 L1359.54 733.316 L1359.05 733.316 L1358.55 733.316 L1358.06 733.316 L1357.56 733.316 L1357.07 733.316 L1356.57 733.316 L1356.08 733.316 L1355.58 733.316 L1355.09 733.316 L1354.59 733.316 L1354.09 733.316 L1353.6 733.316 L1353.1 733.316 L1352.61 733.316 L1352.11 733.316 L1351.62 733.316 L1351.12 733.316 L1350.63 733.316 L1350.13 733.316 L1349.64 733.316 L1349.14 733.316 L1348.64 733.316 L1348.15 733.316 L1347.65 733.316 L1347.16 733.316 L1346.66 733.316 L1346.17 733.316 L1345.67 733.316 L1345.18 733.316 L1344.68 733.316 L1344.19 733.316 L1343.69 733.316 L1343.19 733.316 L1342.7 733.316 L1342.2 733.316 L1341.71 733.316 L1341.21 733.316 L1340.72 733.316 L1340.22 733.316 L1339.73 733.316 L1339.23 733.316 L1338.73 733.316 L1338.24 733.316 L1337.74 733.316 L1337.25 733.316 L1336.75 733.316 L1336.26 733.316 L1335.76 733.316 L1335.27 733.316 L1334.77 733.316 L1334.28 733.316 L1333.78 733.316 L1333.28 733.316 L1332.79 733.316 L1332.29 733.316 L1331.8 733.316 L1331.3 733.316 L1330.81 733.316 L1330.31 733.316 L1329.82 733.316 L1329.32 733.316 L1328.83 733.316 L1328.33 733.316 L1327.83 733.316 L1327.34 733.316 L1326.84 733.316 L1326.35 733.316 L1325.85 733.316 L1325.36 733.316 L1324.86 733.316 L1324.37 733.316 L1323.87 733.316 L1323.38 733.316 L1322.88 733.316 L1322.38 733.316 L1321.89 733.316 L1321.39 733.316 L1320.9 733.316 L1320.4 733.316 L1319.91 733.316 L1319.41 733.316 L1318.92 733.316 L1318.42 733.316 L1317.92 733.316 L1317.43 733.316 L1316.93 733.316 L1316.44 733.316 L1315.94 733.316 L1315.45 733.316 L1314.95 733.316 L1314.46 733.316 L1313.96 733.316 L1313.47 733.316 L1312.97 733.316 L1312.47 733.316 L1311.98 733.316 L1311.48 733.316 L1310.99 733.316 L1310.49 733.316 L1310 733.316 L1309.5 733.316 L1309.01 733.316 L1308.51 733.316 L1308.02 733.316 L1307.52 733.316 L1307.02 733.316 L1306.53 733.316 L1306.03 733.316 L1305.54 733.316 L1305.04 733.316 L1304.55 733.316 L1304.05 733.316 L1303.56 733.316 L1303.06 733.316 L1302.57 733.316 L1302.07 733.316 L1301.57 733.316 L1301.08 733.316 L1300.58 733.316 L1300.09 733.316 L1299.59 733.316 L1299.1 733.316 L1298.6 733.316 L1298.11 733.316 L1297.61 733.316 L1297.11 733.316 L1296.62 733.316 L1296.12 733.316 L1295.63 733.316 L1295.13 733.316 L1294.64 733.316 L1294.14 733.316 L1293.65 733.316 L1293.15 733.316 L1292.66 733.316 L1292.16 733.316 L1291.66 733.316 L1291.17 733.316 L1290.67 733.316 L1290.18 733.316 L1289.68 733.316 L1289.19 733.316 L1288.69 733.316 L1288.2 733.316 L1287.7 733.316 L1287.21 733.316 L1286.71 733.316 L1286.21 733.316 L1285.72 733.316 L1285.22 733.316 L1284.73 733.316 L1284.23 733.316 L1283.74 733.316 L1283.24 733.316 L1282.75 733.316 L1282.25 733.316 L1281.76 733.316 L1281.26 733.316 L1280.76 733.316 L1280.27 733.316 L1279.77 733.316 L1279.28 733.316 L1278.78 733.316 L1278.29 733.316 L1277.79 733.316 L1277.3 733.316 L1276.8 733.316 L1276.3 733.316 L1275.81 733.316 L1275.31 733.316 L1274.82 733.316 L1274.32 733.316 L1273.83 733.316 L1273.33 733.316 L1272.84 733.316 L1272.34 733.316 L1271.85 733.316 L1271.35 733.316 L1270.85 733.316 L1270.36 733.316 L1269.86 733.316 L1269.37 733.316 L1268.87 733.316 L1268.38 733.316 L1267.88 733.316 L1267.39 733.316 L1266.89 733.316 L1266.4 733.316 L1265.9 733.316 L1265.4 733.316 L1264.91 733.316 L1264.41 733.316 L1263.92 733.316 L1263.42 733.316 L1262.93 733.316 L1262.43 733.316 L1261.94 733.316 L1261.44 733.316 L1260.95 733.316 L1260.45 733.316 L1259.95 733.316 L1259.46 733.316 L1258.96 733.316 L1258.47 733.316 L1257.97 733.316 L1257.48 733.316 L1256.98 733.316 L1256.49 733.316 L1255.99 733.316 L1255.49 733.316 L1255 733.316 L1254.5 733.316 L1254.01 733.316 L1253.51 733.316 L1253.02 733.316 L1252.52 733.316 L1252.03 733.316 L1251.53 733.316 L1251.04 733.316 L1250.54 733.316 L1250.04 733.316 L1249.55 733.316 L1249.05 733.316 L1248.56 733.316 L1248.06 733.316 L1247.57 733.316 L1247.07 733.316 L1246.58 733.316 L1246.08 733.316 L1245.59 733.316 L1245.09 733.316 L1244.59 733.316 L1244.1 733.316 L1243.6 733.316 L1243.11 733.316 L1242.61 733.316 L1242.12 733.316 L1241.62 733.316 L1241.13 733.316 L1240.63 733.316 L1240.13 733.316 L1239.64 733.316 L1239.14 733.316 L1238.65 733.316 L1238.15 733.316 L1237.66 733.316 L1237.16 733.316 L1236.67 733.316 L1236.17 733.316 L1235.68 733.316 L1235.18 733.316 L1234.68 733.316 L1234.19 733.316 L1233.69 733.316 L1233.2 733.316 L1232.7 733.316 L1232.21 733.316 L1231.71 733.316 L1231.22 733.316 L1230.72 733.316 L1230.23 733.316 L1229.73 733.316 L1229.23 733.316 L1228.74 733.316 L1228.24 733.316 L1227.75 733.316 L1227.25 733.316 L1226.76 733.316 L1226.26 733.316 L1225.77 733.316 L1225.27 733.316 L1224.78 733.316 L1224.28 733.316 L1223.78 733.316 L1223.29 733.316 L1222.79 733.316 L1222.3 733.316 L1221.8 733.316 L1221.31 733.316 L1220.81 733.316 L1220.32 733.316 L1219.82 733.316 L1219.32 733.316 L1218.83 733.316 L1218.33 733.316 L1217.84 733.316 L1217.34 733.316 L1216.85 733.316 L1216.35 733.316 L1215.86 733.316 L1215.36 733.316 L1214.87 733.316 L1214.37 733.316 L1213.87 733.316 L1213.38 733.316 L1212.88 733.316 L1212.39 733.316 L1211.89 733.316 L1211.4 733.316 L1210.9 733.316 L1210.41 733.316 L1209.91 733.316 L1209.42 733.316 L1208.92 733.316 L1208.42 733.316 L1207.93 733.316 L1207.43 733.316 L1206.94 733.316 L1206.44 733.316 L1205.95 733.316 L1205.45 733.316 L1204.96 733.316 L1204.46 733.316 L1203.97 733.316 L1203.47 733.316 L1202.97 733.316 L1202.48 733.316 L1201.98 733.316 L1201.49 733.316 L1200.99 733.316 L1200.5 733.316 L1200 733.316 L1199.51 733.316 L1199.01 733.316 L1198.51 733.316 L1198.02 733.316 L1197.52 733.316 L1197.03 733.316 L1196.53 733.316 L1196.04 733.316 L1195.54 733.316 L1195.05 733.316 L1194.55 733.316 L1194.06 733.316 L1193.56 733.316 L1193.06 733.316 L1192.57 733.316 L1192.07 733.316 L1191.58 733.316 L1191.08 733.316 L1190.59 733.316 L1190.09 733.316 L1189.6 733.316 L1189.1 733.316 L1188.61 733.316 L1188.11 733.316 L1187.61 733.316 L1187.12 733.316 L1186.62 733.316 L1186.13 733.316 L1185.63 733.316 L1185.14 733.316 L1184.64 733.316 L1184.15 733.316 L1183.65 733.316 L1183.16 733.316 L1182.66 733.316 L1182.16 733.316 L1181.67 733.316 L1181.17 733.316 L1180.68 733.316 L1180.18 733.316 L1179.69 733.316 L1179.19 733.316 L1178.7 733.316 L1178.2 733.316 L1177.7 733.316 L1177.21 733.316 L1176.71 733.316 L1176.22 733.316 L1175.72 733.316 L1175.23 733.316 L1174.73 733.316 L1174.24 733.316 L1173.74 733.316 L1173.25 733.316 L1172.75 733.316 L1172.25 733.316 L1171.76 733.316 L1171.26 733.316 L1170.77 733.316 L1170.27 733.316 L1169.78 733.316 L1169.28 733.316 L1168.79 733.316 L1168.29 733.316 L1167.8 733.316 L1167.3 733.316 L1166.8 733.316 L1166.31 733.316 L1165.81 733.316 L1165.32 733.316 L1164.82 733.316 L1164.33 733.316 L1163.83 733.316 L1163.34 733.316 L1162.84 733.316 L1162.35 733.316 L1161.85 733.316 L1161.35 733.316 L1160.86 733.316 L1160.36 733.316 L1159.87 733.316 L1159.37 733.316 L1158.88 733.316 L1158.38 733.316 L1157.89 733.316 L1157.39 733.316 L1156.89 733.316 L1156.4 733.316 L1155.9 733.316 L1155.41 733.316 L1154.91 733.316 L1154.42 733.316 L1153.92 733.316 L1153.43 733.316 L1152.93 733.316 L1152.44 733.316 L1151.94 733.316 L1151.44 733.316 L1150.95 733.316 L1150.45 733.316 L1149.96 733.316 L1149.46 733.316 L1148.97 733.316 L1148.47 733.316 L1147.98 733.316 L1147.48 733.316 L1146.99 733.316 L1146.49 733.316 L1145.99 733.316 L1145.5 733.316 L1145 733.316 L1144.51 733.316 L1144.01 733.316 L1143.52 733.316 L1143.02 733.316 L1142.53 733.316 L1142.03 733.316 L1141.54 733.316 L1141.04 733.316 L1140.54 733.316 L1140.05 733.316 L1139.55 733.316 L1139.06 733.316 L1138.56 733.316 L1138.07 733.316 L1137.57 733.316 L1137.08 733.316 L1136.58 733.316 L1136.08 733.316 L1135.59 733.316 L1135.09 733.316 L1134.6 733.316 L1134.1 733.316 L1133.61 733.316 L1133.11 733.316 L1132.62 733.316 L1132.12 733.316 L1131.63 733.316 L1131.13 733.316 L1130.63 733.316 L1130.14 733.316 L1129.64 733.316 L1129.15 733.316 L1128.65 733.316 L1128.16 733.316 L1127.66 733.316 L1127.17 733.316 L1126.67 733.316 L1126.18 733.316 L1125.68 733.316 L1125.18 733.316 L1124.69 733.316 L1124.19 733.316 L1123.7 733.316 L1123.2 733.316 L1122.71 733.316 L1122.21 733.316 L1121.72 733.316 L1121.22 733.316 L1120.72 733.316 L1120.23 733.316 L1119.73 733.316 L1119.24 733.316 L1118.74 733.316 L1118.25 733.316 L1117.75 733.316 L1117.26 733.316 L1116.76 733.316 L1116.27 733.316 L1115.77 733.316 L1115.27 733.316 L1114.78 733.316 L1114.28 733.316 L1113.79 733.316 L1113.29 733.316 L1112.8 733.316 L1112.3 733.316 L1111.81 733.316 L1111.31 733.316 L1110.82 733.316 L1110.32 733.316 L1109.82 733.316 L1109.33 733.316 L1108.83 733.316 L1108.34 733.316 L1107.84 733.316 L1107.35 733.316 L1106.85 733.316 L1106.36 733.316 L1105.86 733.316 L1105.37 733.316 L1104.87 733.316 L1104.37 733.316 L1103.88 733.316 L1103.38 733.316 L1102.89 733.316 L1102.39 733.316 L1101.9 733.316 L1101.4 733.316 L1100.91 733.316 L1100.41 733.316 L1099.91 733.316 L1099.42 733.316 L1098.92 733.316 L1098.43 733.316 L1097.93 733.316 L1097.44 733.316 L1096.94 733.316 L1096.45 733.316 L1095.95 733.316 L1095.46 733.316 L1094.96 733.316 L1094.46 733.316 L1093.97 733.316 L1093.47 733.316 L1092.98 733.316 L1092.48 733.316 L1091.99 733.316 L1091.49 733.316 L1091 733.316 L1090.5 733.316 L1090.01 733.316 L1089.51 733.316 L1089.01 733.316 L1088.52 733.316 L1088.02 733.316 L1087.53 733.316 L1087.03 733.316 L1086.54 733.316 L1086.04 733.316 L1085.55 733.316 L1085.05 733.316 L1084.56 733.316 L1084.06 733.316 L1083.56 733.316 L1083.07 733.316 L1082.57 733.316 L1082.08 733.316 L1081.58 733.316 L1081.09 733.316 L1080.59 733.316 L1080.1 733.316 L1079.6 733.316 L1079.1 733.316 L1078.61 733.316 L1078.11 733.316 L1077.62 733.316 L1077.12 733.316 L1076.63 733.316 L1076.13 733.316 L1075.64 733.316 L1075.14 733.316 L1074.65 733.316 L1074.15 733.316 L1073.65 733.316 L1073.16 733.316 L1072.66 733.316 L1072.17 733.316 L1071.67 733.316 L1071.18 733.316 L1070.68 733.316 L1070.19 733.316 L1069.69 733.316 L1069.2 733.316 L1068.7 733.316 L1068.2 733.316 L1067.71 733.316 L1067.21 733.316 L1066.72 733.316 L1066.22 733.316 L1065.73 733.316 L1065.23 733.316 L1064.74 733.316 L1064.24 733.316 L1063.75 733.316 L1063.25 733.316 L1062.75 733.316 L1062.26 733.316 L1061.76 733.316 L1061.27 733.316 L1060.77 733.316 L1060.28 733.316 L1059.78 733.316 L1059.29 733.316 L1058.79 733.316 L1058.29 733.316 L1057.8 733.316 L1057.3 733.316 L1056.81 733.316 L1056.31 733.316 L1055.82 733.316 L1055.32 733.316 L1054.83 733.316 L1054.33 733.316 L1053.84 733.316 L1053.34 733.316 L1052.84 733.316 L1052.35 733.316 L1051.85 733.316 L1051.36 733.316 L1050.86 733.316 L1050.37 733.316 L1049.87 733.316 L1049.38 733.316 L1048.88 733.316 L1048.39 733.316 L1047.89 733.316 L1047.39 733.316 L1046.9 733.316 L1046.4 733.316 L1045.91 733.316 L1045.41 733.316 L1044.92 733.316 L1044.42 733.316 L1043.93 733.316 L1043.43 733.316 L1042.94 733.316 L1042.44 733.316 L1041.94 733.316 L1041.45 733.316 L1040.95 733.316 L1040.46 733.316 L1039.96 733.316 L1039.47 733.316 L1038.97 733.316 L1038.48 733.316 L1037.98 733.316 L1037.48 733.316 L1036.99 733.316 L1036.49 733.316 L1036 733.316 L1035.5 733.316 L1035.01 733.316 L1034.51 733.316 L1034.02 733.316 L1033.52 733.316 L1033.03 733.316 L1032.53 733.316 L1032.03 733.316 L1031.54 733.316 L1031.04 733.316 L1030.55 733.316 L1030.05 733.316 L1029.56 733.316 L1029.06 733.316 L1028.57 733.316 L1028.07 733.316 L1027.58 733.316 L1027.08 733.316 L1026.58 733.316 L1026.09 733.316 L1025.59 733.316 L1025.1 733.316 L1024.6 733.316 L1024.11 733.316 L1023.61 733.316 L1023.12 733.316 L1022.62 733.316 L1022.13 733.316 L1021.63 733.316 L1021.13 733.316 L1020.64 733.316 L1020.14 733.316 L1019.65 733.316 L1019.15 733.316 L1018.66 733.316 L1018.16 733.316 L1017.67 733.316 L1017.17 733.316 L1016.67 733.316 L1016.18 733.316 L1015.68 733.316 L1015.19 733.316 L1014.69 733.316 L1014.2 733.316 L1013.7 733.316 L1013.21 733.316 L1012.71 733.316 L1012.22 733.316 L1011.72 733.316 L1011.22 733.316 L1010.73 733.316 L1010.23 733.316 L1009.74 733.316 L1009.24 733.316 L1008.75 733.316 L1008.25 733.316 L1007.76 733.316 L1007.26 733.316 L1006.77 733.316 L1006.27 733.316 L1005.77 733.316 L1005.28 733.316 L1004.78 733.316 L1004.29 733.316 L1003.79 733.316 L1003.3 733.316 L1002.8 733.316 L1002.31 733.316 L1001.81 733.316 L1001.31 733.316 L1000.82 733.316 L1000.32 733.316 L999.829 733.316 L999.333 733.316 L998.838 733.316 L998.342 733.316 L997.847 733.316 L997.351 733.316 L996.856 733.316 L996.36 733.316 L995.865 733.316 L995.369 733.316 L994.874 733.316 L994.378 733.316 L993.883 733.316 L993.387 733.316 L992.892 733.316 L992.396 733.316 L991.901 733.316 L991.405 733.316 L990.91 733.316 L990.414 733.316 L989.919 733.316 L989.424 733.316 L988.928 733.316 L988.433 733.316 L987.937 733.316 L987.442 733.316 L986.946 733.316 L986.451 733.316 L985.955 733.316 L985.46 733.316 L984.964 733.316 L984.469 733.316 L983.973 733.316 L983.478 733.316 L982.982 733.316 L982.487 733.316 L981.991 733.316 L981.496 733.316 L981 733.316 L980.505 733.316 L980.009 733.316 L979.514 733.316 L979.018 733.316 L978.523 733.316 L978.028 733.316 L977.532 733.316 L977.037 733.316 L976.541 733.316 L976.046 733.316 L975.55 733.316 L975.055 733.316 L974.559 733.316 L974.064 733.316 L973.568 733.316 L973.073 733.316 L972.577 733.316 L972.082 733.316 L971.586 733.316 L971.091 733.316 L970.595 733.316 L970.1 733.316 L969.604 733.316 L969.109 733.316 L968.613 733.316 L968.118 733.316 L967.623 733.316 L967.127 733.316 L966.632 733.316 L966.136 733.316 L965.641 733.316 L965.145 733.316 L964.65 733.316 L964.154 733.316 L963.659 733.316 L963.163 733.316 L962.668 733.316 L962.172 733.316 L961.677 733.316 L961.181 733.316 L960.686 733.316 L960.19 733.316 L959.695 733.316 L959.199 733.316 L958.704 733.316 L958.208 733.316 L957.713 733.316 L957.217 733.316 L956.722 733.316 L956.227 733.316 L955.731 733.316 L955.236 733.316 L954.74 733.316 L954.245 733.316 L953.749 733.316 L953.254 733.316 L952.758 733.316 L952.263 733.316 L951.767 733.316 L951.272 733.316 L950.776 733.316 L950.281 733.316 L949.785 733.316 L949.29 733.316 L948.794 733.316 L948.299 733.316 L947.803 733.316 L947.308 733.316 L946.812 733.316 L946.317 733.316 L945.822 733.316 L945.326 733.316 L944.831 733.316 L944.335 733.316 L943.84 733.316 L943.344 733.316 L942.849 733.316 L942.353 733.316 L941.858 733.316 L941.362 733.316 L940.867 733.316 L940.371 733.316 L939.876 733.316 L939.38 733.316 L938.885 733.316 L938.389 733.316 L937.894 733.316 L937.398 733.316 L936.903 733.316 L936.407 733.316 L935.912 733.316 L935.417 733.316 L934.921 733.316 L934.426 733.316 L933.93 733.316 L933.435 733.316 L932.939 733.316 L932.444 733.316 L931.948 733.316 L931.453 733.316 L930.957 733.316 L930.462 733.316 L929.966 733.316 L929.471 733.316 L928.975 733.316 L928.48 733.316 L927.984 733.316 L927.489 733.316 L926.993 733.316 L926.498 733.316 L926.002 733.316 L925.507 733.316 L925.011 733.316 L924.516 733.316 L924.021 733.316 L923.525 733.316 L923.03 733.316 L922.534 733.316 L922.039 733.316 L921.543 733.316 L921.048 733.316 L920.552 733.316 L920.057 733.316 L919.561 733.316 L919.066 733.316 L918.57 733.316 L918.075 733.316 L917.579 733.316 L917.084 733.316 L916.588 733.316 L916.093 733.316 L915.597 733.316 L915.102 733.316 L914.606 733.316 L914.111 733.316 L913.616 733.316 L913.12 733.316 L912.625 733.316 L912.129 733.316 L911.634 733.316 L911.138 733.316 L910.643 733.316 L910.147 733.316 L909.652 733.316 L909.156 733.316 L908.661 733.316 L908.165 733.316 L907.67 733.316 L907.174 733.316 L906.679 733.316 L906.183 733.316 L905.688 733.316 L905.192 733.316 L904.697 733.316 L904.201 733.316 L903.706 733.316 L903.21 733.316 L902.715 733.316 L902.22 733.316 L901.724 733.316 L901.229 733.316 L900.733 733.316 L900.238 733.316 L899.742 733.316 L899.247 733.316 L898.751 733.316 L898.256 733.316 L897.76 733.316 L897.265 733.316 L896.769 733.316 L896.274 733.316 L895.778 733.316 L895.283 733.316 L894.787 733.316 L894.292 733.316 L893.796 733.316 L893.301 733.316 L892.805 733.316 L892.31 733.316 L891.815 733.316 L891.319 733.316 L890.824 733.316 L890.328 733.316 L889.833 733.316 L889.337 733.316 L888.842 733.316 L888.346 733.316 L887.851 733.316 L887.355 733.316 L886.86 733.316 L886.364 733.316 L885.869 733.316 L885.373 733.316 L884.878 733.316 L884.382 733.316 L883.887 733.316 L883.391 733.316 L882.896 733.316 L882.4 733.316 L881.905 733.316 L881.409 733.316 L880.914 733.316 L880.419 733.316 L879.923 733.316 L879.428 733.316 L878.932 733.316 L878.437 733.316 L877.941 733.316 L877.446 733.316 L876.95 733.316 L876.455 733.316 L875.959 733.316 L875.464 733.316 L874.968 733.316 L874.473 733.316 L873.977 733.316 L873.482 733.316 L872.986 733.316 L872.491 733.316 L871.995 733.316 L871.5 733.316 L871.004 733.316 L870.509 733.316 L870.014 733.316 L869.518 733.316 L869.023 733.316 L868.527 733.316 L868.032 733.316 L867.536 733.316 L867.041 733.316 L866.545 733.316 L866.05 733.316 L865.554 733.316 L865.059 733.316 L864.563 733.316 L864.068 733.316 L863.572 733.316 L863.077 733.316 L862.581 733.316 L862.086 733.316 L861.59 733.316 L861.095 733.316 L860.599 733.316 L860.104 733.316 L859.608 733.316 L859.113 733.316 L858.618 733.316 L858.122 733.316 L857.627 733.316 L857.131 733.316 L856.636 733.316 L856.14 733.316 L855.645 733.316 L855.149 733.316 L854.654 733.316 L854.158 733.316 L853.663 733.316 L853.167 733.316 L852.672 733.316 L852.176 733.316 L851.681 733.316 L851.185 733.316 L850.69 733.316 L850.194 733.316 L849.699 733.316 L849.203 733.316 L848.708 733.316 L848.213 733.316 L847.717 733.316 L847.222 733.316 L846.726 733.316 L846.231 733.316 L845.735 733.316 L845.24 733.316 L844.744 733.316 L844.249 733.316 L843.753 733.316 L843.258 733.316 L842.762 733.316 L842.267 733.316 L841.771 733.316 L841.276 733.316 L840.78 733.316 L840.285 733.316 L839.789 733.316 L839.294 733.316 L838.798 733.316 L838.303 733.316 L837.808 733.316 L837.312 733.316 L836.817 733.316 L836.321 733.316 L835.826 733.316 L835.33 733.316 L834.835 733.316 L834.339 733.316 L833.844 733.316 L833.348 733.316 L832.853 733.316 L832.357 733.316 L831.862 733.316 L831.366 733.316 L830.871 733.316 L830.375 733.316 L829.88 733.316 L829.384 733.316 L828.889 733.316 L828.393 733.316 L827.898 733.316 L827.402 733.316 L826.907 733.316 L826.412 733.316 L825.916 733.316 L825.421 733.316 L824.925 733.316 L824.43 733.316 L823.934 733.316 L823.439 733.316 L822.943 733.316 L822.448 733.316 L821.952 733.316 L821.457 733.316 L820.961 733.316 L820.466 733.316 L819.97 733.316 L819.475 733.316 L818.979 733.316 L818.484 733.316 L817.988 733.316 L817.493 733.316 L816.997 733.316 L816.502 733.316 L816.007 733.316 L815.511 733.316 L815.016 733.316 L814.52 733.316 L814.025 733.316 L813.529 733.316 L813.034 733.316 L812.538 733.316 L812.043 733.316 L811.547 733.316 L811.052 733.316 L810.556 733.316 L810.061 733.316 L809.565 733.316 L809.07 733.316 L808.574 733.316 L808.079 733.316 L807.583 733.316 L807.088 733.316 L806.592 733.316 L806.097 733.316 L805.601 733.316 L805.106 733.316 L804.611 733.316 L804.115 733.316 L803.62 733.316 L803.124 733.316 L802.629 733.316 L802.133 733.316 L801.638 733.316 L801.142 733.316 L800.647 733.316 L800.151 733.316 L799.656 733.316 L799.16 733.316 L798.665 733.316 L798.169 733.316 L797.674 733.316 L797.178 733.316 L796.683 733.316 L796.187 733.316 L795.692 733.316 L795.196 733.316 L794.701 733.316 L794.206 733.316 L793.71 733.316 L793.215 733.316 L792.719 733.316 L792.224 733.316 L791.728 733.316 L791.233 733.316 L790.737 733.316 L790.242 733.316 L789.746 733.316 L789.251 733.316 L788.755 733.316 L788.26 733.316 L787.764 733.316 L787.269 733.316 L786.773 733.316 L786.278 733.316 L785.782 733.316 L785.287 733.316 L784.791 733.316 L784.296 733.316 L783.8 733.316 L783.305 733.316 L782.81 733.316 L782.314 733.316 L781.819 733.316 L781.323 733.316 L780.828 733.316 L780.332 733.316 L779.837 733.316 L779.341 733.316 L778.846 733.316 L778.35 733.316 L777.855 733.316 L777.359 733.316 L776.864 733.316 L776.368 733.316 L775.873 733.316 L775.377 733.316 L774.882 733.316 L774.386 733.316 L773.891 733.316 L773.395 733.316 L772.9 733.316 L772.405 733.316 L771.909 733.316 L771.414 733.316 L770.918 733.316 L770.423 733.316 L769.927 733.316 L769.432 733.316 L768.936 733.316 L768.441 733.316 L767.945 733.316 L767.45 733.316 L766.954 733.316 L766.459 733.316 L765.963 733.316 L765.468 733.316 L764.972 733.316 L764.477 733.316 L763.981 733.316 L763.486 733.316 L762.99 733.316 L762.495 733.316 L761.999 733.316 L761.504 733.316 L761.009 733.316 L760.513 733.316 L760.018 733.316 L759.522 733.316 L759.027 733.316 L758.531 733.316 L758.036 733.316 L757.54 733.316 L757.045 733.316 L756.549 733.316 L756.054 733.316 L755.558 733.316 L755.063 733.316 L754.567 733.316 L754.072 733.316 L753.576 733.316 L753.081 733.316 L752.585 733.316 L752.09 733.316 L751.594 733.316 L751.099 733.316 L750.604 733.316 L750.108 733.316 L749.613 733.316 L749.117 733.316 L748.622 733.316 L748.126 733.316 L747.631 733.316 L747.135 733.316 L746.64 733.316 L746.144 733.316 L745.649 733.316 L745.153 733.316 L744.658 733.316 L744.162 733.316 L743.667 733.316 L743.171 733.316 L742.676 733.316 L742.18 733.316 L741.685 733.316 L741.189 733.316 L740.694 733.316 L740.199 733.316 L739.703 733.316 L739.208 733.316 L738.712 733.316 L738.217 733.316 L737.721 733.316 L737.226 733.316 L736.73 733.316 L736.235 733.316 L735.739 733.316 L735.244 733.316 L734.748 733.316 L734.253 733.316 L733.757 733.316 L733.262 733.316 L732.766 733.316  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip293)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"732.766,737.637 733.262,737.637 733.757,737.637 734.253,737.637 734.748,737.637 735.244,737.637 735.739,737.637 736.235,737.637 736.73,737.637 737.226,737.637 737.721,737.637 738.217,737.637 738.712,737.637 739.208,737.637 739.703,737.637 740.199,737.637 740.694,737.637 741.189,737.637 741.685,737.637 742.18,737.637 742.676,737.637 743.171,737.637 743.667,737.637 744.162,737.637 744.658,737.637 745.153,737.637 745.649,737.637 746.144,737.637 746.64,737.637 747.135,737.637 747.631,737.637 748.126,737.637 748.622,737.637 749.117,737.637 749.613,737.637 750.108,737.637 750.604,737.637 751.099,737.637 751.594,737.637 752.09,737.637 752.585,737.637 753.081,737.637 753.576,737.637 754.072,737.637 754.567,737.637 755.063,737.637 755.558,737.637 756.054,737.637 756.549,737.637 757.045,737.637 757.54,737.637 758.036,737.637 758.531,737.637 759.027,737.637 759.522,737.637 760.018,737.637 760.513,737.637 761.009,737.637 761.504,737.637 761.999,737.637 762.495,737.637 762.99,737.637 763.486,737.637 763.981,737.637 764.477,737.637 764.972,737.637 765.468,737.637 765.963,737.637 766.459,737.637 766.954,737.637 767.45,737.637 767.945,737.637 768.441,737.637 768.936,737.637 769.432,737.637 769.927,737.637 770.423,737.637 770.918,737.637 771.414,737.637 771.909,737.637 772.405,737.637 772.9,737.637 773.395,737.637 773.891,737.637 774.386,737.637 774.882,737.637 775.377,737.637 775.873,737.637 776.368,737.637 776.864,737.637 777.359,737.637 777.855,737.637 778.35,737.637 778.846,737.637 779.341,737.637 779.837,737.637 780.332,737.637 780.828,737.637 781.323,737.637 781.819,737.637 782.314,737.637 782.81,737.637 783.305,737.637 783.8,737.637 784.296,737.637 784.791,737.637 785.287,737.637 785.782,737.637 786.278,737.637 786.773,737.637 787.269,737.637 787.764,737.637 788.26,737.637 788.755,737.637 789.251,737.637 789.746,737.637 790.242,737.637 790.737,737.637 791.233,737.637 791.728,737.637 792.224,737.637 792.719,737.637 793.215,737.637 793.71,737.637 794.206,737.637 794.701,737.637 795.196,737.637 795.692,737.637 796.187,737.637 796.683,737.637 797.178,737.637 797.674,737.637 798.169,737.637 798.665,737.637 799.16,737.637 799.656,737.637 800.151,737.637 800.647,737.637 801.142,737.637 801.638,737.637 802.133,737.637 802.629,737.637 803.124,737.637 803.62,737.637 804.115,737.637 804.611,737.637 805.106,737.637 805.601,737.637 806.097,737.637 806.592,737.637 807.088,737.637 807.583,737.637 808.079,737.637 808.574,737.637 809.07,737.637 809.565,737.637 810.061,737.637 810.556,737.637 811.052,737.637 811.547,737.637 812.043,737.637 812.538,737.637 813.034,737.637 813.529,737.637 814.025,737.637 814.52,737.637 815.016,737.637 815.511,737.637 816.007,737.637 816.502,737.637 816.997,737.637 817.493,737.637 817.988,737.637 818.484,737.637 818.979,737.637 819.475,737.637 819.97,737.637 820.466,737.637 820.961,737.637 821.457,737.637 821.952,737.637 822.448,737.637 822.943,737.637 823.439,737.637 823.934,737.637 824.43,737.637 824.925,737.637 825.421,737.637 825.916,737.637 826.412,737.637 826.907,737.637 827.402,737.637 827.898,737.637 828.393,737.637 828.889,737.637 829.384,737.637 829.88,737.637 830.375,737.637 830.871,737.637 831.366,737.637 831.862,737.637 832.357,737.637 832.853,737.637 833.348,737.637 833.844,737.637 834.339,737.637 834.835,737.637 835.33,737.637 835.826,737.637 836.321,737.637 836.817,737.637 837.312,737.637 837.808,737.637 838.303,737.637 838.798,737.637 839.294,737.637 839.789,737.637 840.285,737.637 840.78,737.637 841.276,737.637 841.771,737.637 842.267,737.637 842.762,737.637 843.258,737.637 843.753,737.637 844.249,737.637 844.744,737.637 845.24,737.637 845.735,737.637 846.231,737.637 846.726,737.637 847.222,737.637 847.717,737.637 848.213,737.637 848.708,737.637 849.203,737.637 849.699,737.637 850.194,737.637 850.69,737.637 851.185,737.637 851.681,737.637 852.176,737.637 852.672,737.637 853.167,737.637 853.663,737.637 854.158,737.637 854.654,737.637 855.149,737.637 855.645,737.637 856.14,737.637 856.636,737.637 857.131,737.637 857.627,737.637 858.122,737.637 858.618,737.637 859.113,737.637 859.608,737.637 860.104,737.637 860.599,737.637 861.095,737.637 861.59,737.637 862.086,737.637 862.581,737.637 863.077,737.637 863.572,737.637 864.068,737.637 864.563,737.637 865.059,737.637 865.554,737.637 866.05,737.637 866.545,737.637 867.041,737.637 867.536,737.637 868.032,737.637 868.527,737.637 869.023,737.637 869.518,737.637 870.014,737.637 870.509,737.637 871.004,737.637 871.5,737.637 871.995,737.637 872.491,737.637 872.986,737.637 873.482,737.637 873.977,737.637 874.473,737.637 874.968,737.637 875.464,737.637 875.959,737.637 876.455,737.637 876.95,737.637 877.446,737.637 877.941,737.637 878.437,737.637 878.932,737.637 879.428,737.637 879.923,737.637 880.419,737.637 880.914,737.637 881.409,737.637 881.905,737.637 882.4,737.637 882.896,737.637 883.391,737.637 883.887,737.637 884.382,737.637 884.878,737.637 885.373,737.637 885.869,737.637 886.364,737.637 886.86,737.637 887.355,737.637 887.851,737.637 888.346,737.637 888.842,737.637 889.337,737.637 889.833,737.637 890.328,737.637 890.824,737.637 891.319,737.637 891.815,737.637 892.31,737.637 892.805,737.637 893.301,737.637 893.796,737.637 894.292,737.637 894.787,737.637 895.283,737.637 895.778,737.637 896.274,737.637 896.769,737.637 897.265,737.637 897.76,737.637 898.256,737.637 898.751,737.637 899.247,737.637 899.742,737.637 900.238,737.637 900.733,737.637 901.229,737.637 901.724,737.637 902.22,737.637 902.715,737.637 903.21,737.637 903.706,737.637 904.201,737.637 904.697,737.637 905.192,737.637 905.688,737.637 906.183,737.637 906.679,737.637 907.174,737.637 907.67,737.637 908.165,737.637 908.661,737.637 909.156,737.637 909.652,737.637 910.147,737.637 910.643,737.637 911.138,737.637 911.634,737.637 912.129,737.637 912.625,737.637 913.12,737.637 913.616,737.637 914.111,737.637 914.606,737.637 915.102,737.637 915.597,737.637 916.093,737.637 916.588,737.637 917.084,737.637 917.579,737.637 918.075,737.637 918.57,737.637 919.066,737.637 919.561,737.637 920.057,737.637 920.552,737.637 921.048,737.637 921.543,737.637 922.039,737.637 922.534,737.637 923.03,737.637 923.525,737.637 924.021,737.637 924.516,737.637 925.011,737.637 925.507,737.637 926.002,737.637 926.498,737.637 926.993,737.637 927.489,737.637 927.984,737.637 928.48,737.637 928.975,737.637 929.471,737.637 929.966,737.637 930.462,737.637 930.957,737.637 931.453,737.637 931.948,737.637 932.444,737.637 932.939,737.637 933.435,737.637 933.93,737.637 934.426,737.637 934.921,737.637 935.417,737.637 935.912,737.637 936.407,737.637 936.903,737.637 937.398,737.637 937.894,737.637 938.389,737.637 938.885,737.637 939.38,737.637 939.876,737.637 940.371,737.637 940.867,737.637 941.362,737.637 941.858,737.637 942.353,737.637 942.849,737.637 943.344,737.637 943.84,737.637 944.335,737.637 944.831,737.637 945.326,737.637 945.822,737.637 946.317,737.637 946.812,737.637 947.308,737.637 947.803,737.637 948.299,737.637 948.794,737.637 949.29,737.637 949.785,737.637 950.281,737.637 950.776,737.637 951.272,737.637 951.767,737.637 952.263,737.637 952.758,737.637 953.254,737.637 953.749,737.637 954.245,737.637 954.74,737.637 955.236,737.637 955.731,737.637 956.227,737.637 956.722,737.637 957.217,737.637 957.713,737.637 958.208,737.637 958.704,737.637 959.199,737.637 959.695,737.637 960.19,737.637 960.686,737.637 961.181,737.637 961.677,737.637 962.172,737.637 962.668,737.637 963.163,737.637 963.659,737.637 964.154,737.637 964.65,737.637 965.145,737.637 965.641,737.637 966.136,737.637 966.632,737.637 967.127,737.637 967.623,737.637 968.118,737.637 968.613,737.637 969.109,737.637 969.604,737.637 970.1,737.637 970.595,737.637 971.091,737.637 971.586,737.637 972.082,737.637 972.577,737.637 973.073,737.637 973.568,737.637 974.064,737.637 974.559,737.637 975.055,737.637 975.55,737.637 976.046,737.637 976.541,737.637 977.037,737.637 977.532,737.637 978.028,737.637 978.523,737.637 979.018,737.637 979.514,737.637 980.009,737.637 980.505,737.637 981,737.637 981.496,737.637 981.991,737.637 982.487,737.637 982.982,737.637 983.478,737.637 983.973,737.637 984.469,737.637 984.964,737.637 985.46,737.637 985.955,737.637 986.451,737.637 986.946,737.637 987.442,737.637 987.937,737.637 988.433,737.637 988.928,737.637 989.424,737.637 989.919,737.637 990.414,737.637 990.91,737.637 991.405,737.637 991.901,737.637 992.396,737.637 992.892,737.637 993.387,737.637 993.883,737.637 994.378,737.637 994.874,737.637 995.369,737.637 995.865,737.637 996.36,737.637 996.856,737.637 997.351,737.637 997.847,737.637 998.342,737.637 998.838,737.637 999.333,737.637 999.829,737.637 1000.32,737.637 1000.82,737.637 1001.31,737.637 1001.81,737.637 1002.31,737.637 1002.8,737.637 1003.3,737.637 1003.79,737.637 1004.29,737.637 1004.78,737.637 1005.28,737.637 1005.77,737.637 1006.27,737.637 1006.77,737.637 1007.26,737.637 1007.76,737.637 1008.25,737.637 1008.75,737.637 1009.24,737.637 1009.74,737.637 1010.23,737.637 1010.73,737.637 1011.22,737.637 1011.72,737.637 1012.22,737.637 1012.71,737.637 1013.21,737.637 1013.7,737.637 1014.2,737.637 1014.69,737.637 1015.19,737.637 1015.68,737.637 1016.18,737.637 1016.67,737.637 1017.17,737.637 1017.67,737.637 1018.16,737.637 1018.66,737.637 1019.15,737.637 1019.65,737.637 1020.14,737.637 1020.64,737.637 1021.13,737.637 1021.63,737.637 1022.13,737.637 1022.62,737.637 1023.12,737.637 1023.61,737.637 1024.11,737.637 1024.6,737.637 1025.1,737.637 1025.59,737.637 1026.09,737.637 1026.58,737.637 1027.08,737.637 1027.58,737.637 1028.07,737.637 1028.57,737.637 1029.06,737.637 1029.56,737.637 1030.05,737.637 1030.55,737.637 1031.04,737.637 1031.54,737.637 1032.03,737.637 1032.53,737.637 1033.03,737.637 1033.52,737.637 1034.02,737.637 1034.51,737.637 1035.01,737.637 1035.5,737.637 1036,737.637 1036.49,737.637 1036.99,737.637 1037.48,737.637 1037.98,737.637 1038.48,737.637 1038.97,737.637 1039.47,737.637 1039.96,737.637 1040.46,737.637 1040.95,737.637 1041.45,737.637 1041.94,737.637 1042.44,737.637 1042.94,737.637 1043.43,737.637 1043.93,737.637 1044.42,737.637 1044.92,737.637 1045.41,737.637 1045.91,737.637 1046.4,737.637 1046.9,737.637 1047.39,737.637 1047.89,737.637 1048.39,737.637 1048.88,737.637 1049.38,737.637 1049.87,737.637 1050.37,737.637 1050.86,737.637 1051.36,737.637 1051.85,737.637 1052.35,737.637 1052.84,737.637 1053.34,737.637 1053.84,737.637 1054.33,737.637 1054.83,737.637 1055.32,737.637 1055.82,737.637 1056.31,737.637 1056.81,737.637 1057.3,737.637 1057.8,737.637 1058.29,737.637 1058.79,737.637 1059.29,737.637 1059.78,737.637 1060.28,737.637 1060.77,737.637 1061.27,737.637 1061.76,737.637 1062.26,737.637 1062.75,737.637 1063.25,737.637 1063.75,737.637 1064.24,737.637 1064.74,737.637 1065.23,737.637 1065.73,737.637 1066.22,737.637 1066.72,737.637 1067.21,737.637 1067.71,737.637 1068.2,737.637 1068.7,737.637 1069.2,737.637 1069.69,737.637 1070.19,737.637 1070.68,737.637 1071.18,737.637 1071.67,737.637 1072.17,737.637 1072.66,737.637 1073.16,737.637 1073.65,737.637 1074.15,737.637 1074.65,737.637 1075.14,737.637 1075.64,737.637 1076.13,737.637 1076.63,737.637 1077.12,737.637 1077.62,737.637 1078.11,737.637 1078.61,737.637 1079.1,737.637 1079.6,737.637 1080.1,737.637 1080.59,737.637 1081.09,737.637 1081.58,737.637 1082.08,737.637 1082.57,737.637 1083.07,737.637 1083.56,737.637 1084.06,737.637 1084.56,737.637 1085.05,737.637 1085.55,737.637 1086.04,737.637 1086.54,737.637 1087.03,737.637 1087.53,737.637 1088.02,737.637 1088.52,737.637 1089.01,737.637 1089.51,737.637 1090.01,737.637 1090.5,737.637 1091,737.637 1091.49,737.637 1091.99,737.637 1092.48,737.637 1092.98,737.637 1093.47,737.637 1093.97,737.637 1094.46,737.637 1094.96,737.637 1095.46,737.637 1095.95,737.637 1096.45,737.637 1096.94,737.637 1097.44,737.637 1097.93,737.637 1098.43,737.637 1098.92,737.637 1099.42,737.637 1099.91,737.637 1100.41,737.637 1100.91,737.637 1101.4,737.637 1101.9,737.637 1102.39,737.637 1102.89,737.637 1103.38,737.637 1103.88,737.637 1104.37,737.637 1104.87,737.637 1105.37,737.637 1105.86,737.637 1106.36,737.637 1106.85,737.637 1107.35,737.637 1107.84,737.637 1108.34,737.637 1108.83,737.637 1109.33,737.637 1109.82,737.637 1110.32,737.637 1110.82,737.637 1111.31,737.637 1111.81,737.637 1112.3,737.637 1112.8,737.637 1113.29,737.637 1113.79,737.637 1114.28,737.637 1114.78,737.637 1115.27,737.637 1115.77,737.637 1116.27,737.637 1116.76,737.637 1117.26,737.637 1117.75,737.637 1118.25,737.637 1118.74,737.637 1119.24,737.637 1119.73,737.637 1120.23,737.637 1120.72,737.637 1121.22,737.637 1121.72,737.637 1122.21,737.637 1122.71,737.637 1123.2,737.637 1123.7,737.637 1124.19,737.637 1124.69,737.637 1125.18,737.637 1125.68,737.637 1126.18,737.637 1126.67,737.637 1127.17,737.637 1127.66,737.637 1128.16,737.637 1128.65,737.637 1129.15,737.637 1129.64,737.637 1130.14,737.637 1130.63,737.637 1131.13,737.637 1131.63,737.637 1132.12,737.637 1132.62,737.637 1133.11,737.637 1133.61,737.637 1134.1,737.637 1134.6,737.637 1135.09,737.637 1135.59,737.637 1136.08,737.637 1136.58,737.637 1137.08,737.637 1137.57,737.637 1138.07,737.637 1138.56,737.637 1139.06,737.637 1139.55,737.637 1140.05,737.637 1140.54,737.637 1141.04,737.637 1141.54,737.637 1142.03,737.637 1142.53,737.637 1143.02,737.637 1143.52,737.637 1144.01,737.637 1144.51,737.637 1145,737.637 1145.5,737.637 1145.99,737.637 1146.49,737.637 1146.99,737.637 1147.48,737.637 1147.98,737.637 1148.47,737.637 1148.97,737.637 1149.46,737.637 1149.96,737.637 1150.45,737.637 1150.95,737.637 1151.44,737.637 1151.94,737.637 1152.44,737.637 1152.93,737.637 1153.43,737.637 1153.92,737.637 1154.42,737.637 1154.91,737.637 1155.41,737.637 1155.9,737.637 1156.4,737.637 1156.89,737.637 1157.39,737.637 1157.89,737.637 1158.38,737.637 1158.88,737.637 1159.37,737.637 1159.87,737.637 1160.36,737.637 1160.86,737.637 1161.35,737.637 1161.85,737.637 1162.35,737.637 1162.84,737.637 1163.34,737.637 1163.83,737.637 1164.33,737.637 1164.82,737.637 1165.32,737.637 1165.81,737.637 1166.31,737.637 1166.8,737.637 1167.3,737.637 1167.8,737.637 1168.29,737.637 1168.79,737.637 1169.28,737.637 1169.78,737.637 1170.27,737.637 1170.77,737.637 1171.26,737.637 1171.76,737.637 1172.25,737.637 1172.75,737.637 1173.25,737.637 1173.74,737.637 1174.24,737.637 1174.73,737.637 1175.23,737.637 1175.72,737.637 1176.22,737.637 1176.71,737.637 1177.21,737.637 1177.7,737.637 1178.2,737.637 1178.7,737.637 1179.19,737.637 1179.69,737.637 1180.18,737.637 1180.68,737.637 1181.17,737.637 1181.67,737.637 1182.16,737.637 1182.66,737.637 1183.16,737.637 1183.65,737.637 1184.15,737.637 1184.64,737.637 1185.14,737.637 1185.63,737.637 1186.13,737.637 1186.62,737.637 1187.12,737.637 1187.61,737.637 1188.11,737.637 1188.61,737.637 1189.1,737.637 1189.6,737.637 1190.09,737.637 1190.59,737.637 1191.08,737.637 1191.58,737.637 1192.07,737.637 1192.57,737.637 1193.06,737.637 1193.56,737.637 1194.06,737.637 1194.55,737.637 1195.05,737.637 1195.54,737.637 1196.04,737.637 1196.53,737.637 1197.03,737.637 1197.52,737.637 1198.02,737.637 1198.51,737.637 1199.01,737.637 1199.51,737.637 1200,737.637 1200.5,737.637 1200.99,737.637 1201.49,737.637 1201.98,737.637 1202.48,737.637 1202.97,737.637 1203.47,737.637 1203.97,737.637 1204.46,737.637 1204.96,737.637 1205.45,737.637 1205.95,737.637 1206.44,737.637 1206.94,737.637 1207.43,737.637 1207.93,737.637 1208.42,737.637 1208.92,737.637 1209.42,737.637 1209.91,737.637 1210.41,737.637 1210.9,737.637 1211.4,737.637 1211.89,737.637 1212.39,737.637 1212.88,737.637 1213.38,737.637 1213.87,737.637 1214.37,737.637 1214.87,737.637 1215.36,737.637 1215.86,737.637 1216.35,737.637 1216.85,737.637 1217.34,737.637 1217.84,737.637 1218.33,737.637 1218.83,737.637 1219.32,737.637 1219.82,737.637 1220.32,737.637 1220.81,737.637 1221.31,737.637 1221.8,737.637 1222.3,737.637 1222.79,737.637 1223.29,737.637 1223.78,737.637 1224.28,737.637 1224.78,737.637 1225.27,737.637 1225.77,737.637 1226.26,737.637 1226.76,737.637 1227.25,737.637 1227.75,737.637 1228.24,737.637 1228.74,737.637 1229.23,737.637 1229.73,737.637 1230.23,737.637 1230.72,737.637 1231.22,737.637 1231.71,737.637 1232.21,737.637 1232.7,737.637 1233.2,737.637 1233.69,737.637 1234.19,737.637 1234.68,737.637 1235.18,737.637 1235.68,737.637 1236.17,737.637 1236.67,737.637 1237.16,737.637 1237.66,737.637 1238.15,737.637 1238.65,737.637 1239.14,737.637 1239.64,737.637 1240.13,737.637 1240.63,737.637 1241.13,737.637 1241.62,737.637 1242.12,737.637 1242.61,737.637 1243.11,737.637 1243.6,737.637 1244.1,737.637 1244.59,737.637 1245.09,737.637 1245.59,737.637 1246.08,737.637 1246.58,737.637 1247.07,737.637 1247.57,737.637 1248.06,737.637 1248.56,737.637 1249.05,737.637 1249.55,737.637 1250.04,737.637 1250.54,737.637 1251.04,737.637 1251.53,737.637 1252.03,737.637 1252.52,737.637 1253.02,737.637 1253.51,737.637 1254.01,737.637 1254.5,737.637 1255,737.637 1255.49,737.637 1255.99,737.637 1256.49,737.637 1256.98,737.637 1257.48,737.637 1257.97,737.637 1258.47,737.637 1258.96,737.637 1259.46,737.637 1259.95,737.637 1260.45,737.637 1260.95,737.637 1261.44,737.637 1261.94,737.637 1262.43,737.637 1262.93,737.637 1263.42,737.637 1263.92,737.637 1264.41,737.637 1264.91,737.637 1265.4,737.637 1265.9,737.637 1266.4,737.637 1266.89,737.637 1267.39,737.637 1267.88,737.637 1268.38,737.637 1268.87,737.637 1269.37,737.637 1269.86,737.637 1270.36,737.637 1270.85,737.637 1271.35,737.637 1271.85,737.637 1272.34,737.637 1272.84,737.637 1273.33,737.637 1273.83,737.637 1274.32,737.637 1274.82,737.637 1275.31,737.637 1275.81,737.637 1276.3,737.637 1276.8,737.637 1277.3,737.637 1277.79,737.637 1278.29,737.637 1278.78,737.637 1279.28,737.637 1279.77,737.637 1280.27,737.637 1280.76,737.637 1281.26,737.637 1281.76,737.637 1282.25,737.637 1282.75,737.637 1283.24,737.637 1283.74,737.637 1284.23,737.637 1284.73,737.637 1285.22,737.637 1285.72,737.637 1286.21,737.637 1286.71,737.637 1287.21,737.637 1287.7,737.637 1288.2,737.637 1288.69,737.637 1289.19,737.637 1289.68,737.637 1290.18,737.637 1290.67,737.637 1291.17,737.637 1291.66,737.637 1292.16,737.637 1292.66,737.637 1293.15,737.637 1293.65,737.637 1294.14,737.637 1294.64,737.637 1295.13,737.637 1295.63,737.637 1296.12,737.637 1296.62,737.637 1297.11,737.637 1297.61,737.637 1298.11,737.637 1298.6,737.637 1299.1,737.637 1299.59,737.637 1300.09,737.637 1300.58,737.637 1301.08,737.637 1301.57,737.637 1302.07,737.637 1302.57,737.637 1303.06,737.637 1303.56,737.637 1304.05,737.637 1304.55,737.637 1305.04,737.637 1305.54,737.637 1306.03,737.637 1306.53,737.637 1307.02,737.637 1307.52,737.637 1308.02,737.637 1308.51,737.637 1309.01,737.637 1309.5,737.637 1310,737.637 1310.49,737.637 1310.99,737.637 1311.48,737.637 1311.98,737.637 1312.47,737.637 1312.97,737.637 1313.47,737.637 1313.96,737.637 1314.46,737.637 1314.95,737.637 1315.45,737.637 1315.94,737.637 1316.44,737.637 1316.93,737.637 1317.43,737.637 1317.92,737.637 1318.42,737.637 1318.92,737.637 1319.41,737.637 1319.91,737.637 1320.4,737.637 1320.9,737.637 1321.39,737.637 1321.89,737.637 1322.38,737.637 1322.88,737.637 1323.38,737.637 1323.87,737.637 1324.37,737.637 1324.86,737.637 1325.36,737.637 1325.85,737.637 1326.35,737.637 1326.84,737.637 1327.34,737.637 1327.83,737.637 1328.33,737.637 1328.83,737.637 1329.32,737.637 1329.82,737.637 1330.31,737.637 1330.81,737.637 1331.3,737.637 1331.8,737.637 1332.29,737.637 1332.79,737.637 1333.28,737.637 1333.78,737.637 1334.28,737.637 1334.77,737.637 1335.27,737.637 1335.76,737.637 1336.26,737.637 1336.75,737.637 1337.25,737.637 1337.74,737.637 1338.24,737.637 1338.73,737.637 1339.23,737.637 1339.73,737.637 1340.22,737.637 1340.72,737.637 1341.21,737.637 1341.71,737.637 1342.2,737.637 1342.7,737.637 1343.19,737.637 1343.69,737.637 1344.19,737.637 1344.68,737.637 1345.18,737.637 1345.67,737.637 1346.17,737.637 1346.66,737.637 1347.16,737.637 1347.65,737.637 1348.15,737.637 1348.64,737.637 1349.14,737.637 1349.64,737.637 1350.13,737.637 1350.63,737.637 1351.12,737.637 1351.62,737.637 1352.11,737.637 1352.61,737.637 1353.1,737.637 1353.6,737.637 1354.09,737.637 1354.59,737.637 1355.09,737.637 1355.58,737.637 1356.08,737.637 1356.57,737.637 1357.07,737.637 1357.56,737.637 1358.06,737.637 1358.55,737.637 1359.05,737.637 1359.54,737.637 1360.04,737.637 1360.54,737.637 1361.03,737.637 1361.53,737.637 1362.02,737.637 1362.52,737.637 1363.01,737.637 1363.51,737.637 1364,737.637 1364.5,737.637 1365,737.637 1365.49,737.637 1365.99,737.637 1366.48,737.637 1366.98,737.637 1367.47,737.637 1367.97,737.637 1368.46,737.637 1368.96,737.637 1369.45,737.637 1369.95,737.637 1370.45,737.637 1370.94,737.637 1371.44,737.637 1371.93,737.637 1372.43,737.637 1372.92,737.637 1373.42,737.637 1373.91,737.637 1374.41,737.637 1374.9,737.637 1375.4,737.637 1375.9,737.637 1376.39,737.637 1376.89,737.637 1377.38,737.637 1377.88,737.637 1378.37,737.637 1378.87,737.637 1379.36,737.637 1379.86,737.637 1380.35,737.637 1380.85,737.637 1381.35,737.637 1381.84,737.637 1382.34,737.637 1382.83,737.637 1383.33,737.637 1383.82,737.637 1384.32,737.637 1384.81,737.637 1385.31,737.637 1385.81,737.637 1386.3,737.637 1386.8,737.637 1387.29,737.637 1387.79,737.637 1388.28,737.637 1388.78,737.637 1389.27,737.637 1389.77,737.637 1390.26,737.637 1390.76,737.637 1391.26,737.637 1391.75,737.637 1392.25,737.637 1392.74,737.637 1393.24,737.637 1393.73,737.637 1394.23,737.637 1394.72,737.637 1395.22,737.637 1395.71,737.637 1396.21,737.637 1396.71,737.637 1397.2,737.637 1397.7,737.637 1398.19,737.637 1398.69,737.637 1399.18,737.637 1399.68,737.637 1400.17,737.637 1400.67,737.637 1401.17,737.637 1401.66,737.637 1402.16,737.637 1402.65,737.637 1403.15,737.637 1403.64,737.637 1404.14,737.637 1404.63,737.637 1405.13,737.637 1405.62,737.637 1406.12,737.637 1406.62,737.637 1407.11,737.637 1407.61,737.637 1408.1,737.637 1408.6,737.637 1409.09,737.637 1409.59,737.637 1410.08,737.637 1410.58,737.637 1411.07,737.637 1411.57,737.637 1412.07,737.637 1412.56,737.637 1413.06,737.637 1413.55,737.637 1414.05,737.637 1414.54,737.637 1415.04,737.637 1415.53,737.637 1416.03,737.637 1416.52,737.637 1417.02,737.637 1417.52,737.637 1418.01,737.637 1418.51,737.637 1419,737.637 1419.5,737.637 1419.99,737.637 1420.49,737.637 1420.98,737.637 1421.48,737.637 1421.98,737.637 1422.47,737.637 1422.97,737.637 1423.46,737.637 1423.96,737.637 1424.45,737.637 1424.95,737.637 1425.44,737.637 1425.94,737.637 1426.43,737.637 1426.93,737.637 1427.43,737.637 1427.92,737.637 1428.42,737.637 1428.91,737.637 1429.41,737.637 1429.9,737.637 1430.4,737.637 1430.89,737.637 1431.39,737.637 1431.88,737.637 1432.38,737.637 1432.88,737.637 1433.37,737.637 1433.87,737.637 1434.36,737.637 1434.86,737.637 1435.35,737.637 1435.85,737.637 1436.34,737.637 1436.84,737.637 1437.33,737.637 1437.83,737.637 1438.33,737.637 1438.82,737.637 1439.32,737.637 1439.81,737.637 1440.31,737.637 1440.8,737.637 1441.3,737.637 1441.79,737.637 1442.29,737.637 1442.79,737.637 1443.28,737.637 1443.78,737.637 1444.27,737.637 1444.77,737.637 1445.26,737.637 1445.76,737.637 1446.25,737.637 1446.75,737.637 1447.24,737.637 1447.74,737.637 1448.24,737.637 1448.73,737.637 1449.23,737.637 1449.72,737.637 1450.22,737.637 1450.71,737.637 1451.21,737.637 1451.7,737.637 1452.2,737.637 1452.69,737.637 1453.19,737.637 1453.69,737.637 1454.18,737.637 1454.68,737.637 1455.17,737.637 1455.67,737.637 1456.16,737.637 1456.66,737.637 1457.15,737.637 1457.65,737.637 1458.14,737.637 1458.64,737.637 1459.14,737.637 1459.63,737.637 1460.13,737.637 1460.62,737.637 1461.12,737.637 1461.61,737.637 1462.11,737.637 1462.6,737.637 1463.1,737.637 1463.6,737.637 1464.09,737.637 1464.59,737.637 1465.08,737.637 1465.58,737.637 1466.07,737.637 1466.57,737.637 1467.06,737.637 1467.56,737.637 1468.05,737.637 1468.55,737.637 1469.05,737.637 1469.54,737.637 1470.04,737.637 1470.53,737.637 1471.03,737.637 1471.52,737.637 1472.02,737.637 1472.51,737.637 1473.01,737.637 1473.5,737.637 1474,737.637 1474.5,737.637 1474.99,737.637 1475.49,737.637 1475.98,737.637 1476.48,737.637 1476.97,737.637 1477.47,737.637 1477.96,737.637 1478.46,737.637 1478.95,737.637 1479.45,737.637 1479.95,737.637 1480.44,737.637 1480.94,737.637 1481.43,737.637 1481.93,737.637 1482.42,737.637 1482.92,737.637 1483.41,737.637 1483.91,737.637 1484.41,737.637 1484.9,737.637 1485.4,737.637 1485.89,737.637 1486.39,737.637 1486.88,737.637 1487.38,737.637 1487.87,737.637 1488.37,737.637 1488.86,737.637 1489.36,737.637 1489.86,737.637 1490.35,737.637 1490.85,737.637 1491.34,737.637 1491.84,737.637 1492.33,737.637 1492.83,737.637 1493.32,737.637 1493.82,737.637 1494.31,737.637 1494.81,737.637 1495.31,737.637 1495.8,737.637 1496.3,737.637 1496.79,737.637 1497.29,737.637 1497.78,737.637 1498.28,737.637 1498.77,737.637 1499.27,737.637 1499.76,737.637 1500.26,737.637 1500.76,737.637 1501.25,737.637 1501.75,737.637 1502.24,737.637 1502.74,737.637 1503.23,737.637 1503.73,737.637 1504.22,737.637 1504.72,737.637 1505.22,737.637 1505.71,737.637 1506.21,737.637 1506.7,737.637 1507.2,737.637 1507.69,737.637 1508.19,737.637 1508.68,737.637 1509.18,737.637 1509.67,737.637 1510.17,737.637 1510.67,737.637 1511.16,737.637 1511.66,737.637 1512.15,737.637 1512.65,737.637 1513.14,737.637 1513.64,737.637 1514.13,737.637 1514.63,737.637 1515.12,737.637 1515.62,737.637 1516.12,737.637 1516.61,737.637 1517.11,737.637 1517.6,737.637 1518.1,737.637 1518.59,737.637 1519.09,737.637 1519.58,737.637 1520.08,737.637 1520.58,737.637 1521.07,737.637 1521.57,737.637 1522.06,737.637 1522.56,737.637 1523.05,737.637 1523.55,737.637 1524.04,737.637 1524.54,737.637 1525.03,737.637 1525.53,737.637 1526.03,737.637 1526.52,737.637 1527.02,737.637 1527.51,737.637 1528.01,737.637 1528.5,737.637 1529,737.637 1529.49,737.637 1529.99,737.637 1530.48,737.637 1530.98,737.637 1531.48,737.637 1531.97,737.637 1532.47,737.637 1532.96,737.637 1533.46,737.637 1533.95,737.637 1534.45,737.637 1534.94,737.637 1535.44,737.637 1535.93,737.637 1536.43,737.637 1536.93,737.637 1537.42,737.637 1537.92,737.637 1538.41,737.637 1538.91,737.637 1539.4,737.637 1539.9,737.637 1540.39,737.637 1540.89,737.637 1541.39,737.637 1541.88,737.637 1542.38,737.637 1542.87,737.637 1543.37,737.637 1543.86,737.637 1544.36,737.637 1544.85,737.637 1545.35,737.637 1545.84,737.637 1546.34,737.637 1546.84,737.637 1547.33,737.637 1547.83,737.637 1548.32,737.637 1548.82,737.637 1549.31,737.637 1549.81,737.637 1550.3,737.637 1550.8,737.637 1551.29,737.637 1551.79,737.637 1552.29,737.637 1552.78,737.637 1553.28,737.637 1553.77,737.637 1554.27,737.637 1554.76,737.637 1555.26,737.637 1555.75,737.637 1556.25,737.637 1556.74,737.637 1557.24,737.637 1557.74,737.637 1558.23,737.637 1558.73,737.637 1559.22,737.637 1559.72,737.637 1560.21,737.637 1560.71,737.637 1561.2,737.637 1561.7,737.637 1562.2,737.637 1562.69,737.637 1563.19,737.637 1563.68,737.637 1564.18,737.637 1564.67,737.637 1565.17,737.637 1565.66,737.637 1566.16,737.637 1566.65,737.637 1567.15,737.637 1567.65,737.637 1568.14,737.637 1568.64,737.637 1569.13,737.637 1569.63,737.637 1570.12,737.637 1570.62,737.637 1571.11,737.637 1571.61,737.637 1572.1,737.637 1572.6,737.637 1573.1,737.637 1573.59,737.637 1574.09,737.637 1574.58,737.637 1575.08,737.637 1575.57,737.637 1576.07,737.637 1576.56,737.637 1577.06,737.637 1577.55,737.637 1578.05,737.637 1578.55,737.637 1579.04,737.637 1579.54,737.637 1580.03,737.637 1580.53,737.637 1581.02,737.637 1581.52,737.637 1582.01,737.637 1582.51,737.637 1583.01,737.637 1583.5,737.637 1584,737.637 1584.49,737.637 1584.99,737.637 1585.48,737.637 1585.98,737.637 1586.47,737.637 1586.97,737.637 1587.46,737.637 1587.96,737.637 1588.46,737.637 1588.95,737.637 1589.45,737.637 1589.94,737.637 1590.44,737.637 1590.93,737.637 1591.43,737.637 1591.92,737.637 1592.42,737.637 1592.91,737.637 1593.41,737.637 1593.91,737.637 1594.4,737.637 1594.9,737.637 1595.39,737.637 1595.89,737.637 1596.38,737.637 1596.88,737.637 1597.37,737.637 1597.87,737.637 1598.36,737.637 1598.86,737.637 1599.36,737.637 1599.85,737.637 1600.35,737.637 1600.84,737.637 1601.34,737.637 1601.83,737.637 1602.33,737.637 1602.82,737.637 1603.32,737.637 1603.82,737.637 1604.31,737.637 1604.81,737.637 1605.3,737.637 1605.8,737.637 1606.29,737.637 1606.79,737.637 1607.28,737.637 1607.78,737.637 1608.27,737.637 1608.77,737.637 1609.27,737.637 1609.76,737.637 1610.26,737.637 1610.75,737.637 1611.25,737.637 1611.74,737.637 1612.24,737.637 1612.73,737.637 1613.23,737.637 1613.72,737.637 1614.22,737.637 1614.72,737.637 1615.21,737.637 1615.71,737.637 1616.2,737.637 1616.7,737.637 1617.19,737.637 1617.69,737.637 1618.18,737.637 1618.68,737.637 1619.17,737.637 1619.67,737.637 1620.17,737.637 1620.66,737.637 1621.16,737.637 1621.65,737.637 1622.15,737.637 1622.64,737.637 1623.14,737.637 1623.63,737.637 1624.13,737.637 1624.63,737.637 1625.12,737.637 1625.62,737.637 1626.11,737.637 1626.61,737.637 1627.1,737.637 1627.6,737.637 1628.09,737.637 1628.59,737.637 1629.08,737.637 1629.58,737.637 1630.08,737.637 1630.57,737.637 1631.07,737.637 1631.56,737.637 1632.06,737.637 1632.55,737.637 1633.05,737.637 1633.54,737.637 1634.04,737.637 1634.53,737.637 1635.03,737.637 1635.53,737.637 1636.02,737.637 1636.52,737.637 1637.01,737.637 1637.51,737.637 1638,737.637 1638.5,737.637 1638.99,737.637 1639.49,737.637 1639.99,737.637 1640.48,737.637 1640.98,737.637 1641.47,737.637 1641.97,737.637 1642.46,737.637 1642.96,737.637 1643.45,737.637 1643.95,737.637 1644.44,737.637 1644.94,737.637 1645.44,737.637 1645.93,737.637 1646.43,737.637 1646.92,737.637 1647.42,737.637 1647.91,737.637 1648.41,737.637 1648.9,737.637 1649.4,737.637 1649.89,737.637 1650.39,737.637 1650.89,737.637 1651.38,737.637 1651.88,737.637 1652.37,737.637 1652.87,737.637 1653.36,737.637 1653.86,737.637 1654.35,737.637 1654.85,737.637 1655.34,737.637 1655.84,737.637 1656.34,737.637 1656.83,737.637 1657.33,737.637 1657.82,737.637 1658.32,737.637 1658.81,737.637 1659.31,737.637 1659.8,737.637 1660.3,737.637 1660.8,737.637 1661.29,737.637 1661.79,737.637 1662.28,737.637 1662.78,737.637 1663.27,737.637 1663.77,737.637 1664.26,737.637 1664.76,737.637 1665.25,737.637 1665.75,737.637 1666.25,737.637 1666.74,737.637 1667.24,737.637 1667.73,737.637 1668.23,737.637 1668.72,737.637 1669.22,737.637 1669.71,737.637 1670.21,737.637 1670.7,737.637 1671.2,737.637 1671.7,737.637 1672.19,737.637 1672.69,737.637 1673.18,737.637 1673.68,737.637 1674.17,737.637 1674.67,737.637 1675.16,737.637 1675.66,737.637 1676.15,737.637 1676.65,737.637 1677.15,737.637 1677.64,737.637 1678.14,737.637 1678.63,737.637 1679.13,737.637 1679.62,737.637 1680.12,737.637 1680.61,737.637 1681.11,737.637 1681.61,737.637 1682.1,737.637 1682.6,737.637 1683.09,737.637 1683.59,737.637 1684.08,737.637 1684.58,737.637 1685.07,737.637 1685.57,737.637 1686.06,737.637 1686.56,737.637 1687.06,737.637 1687.55,737.637 1688.05,737.637 1688.54,737.637 1689.04,737.637 1689.53,737.637 1690.03,737.637 1690.52,737.637 1691.02,737.637 1691.51,737.637 1692.01,737.637 1692.51,737.637 1693,737.637 1693.5,737.637 1693.99,737.637 1694.49,737.637 1694.98,737.637 1695.48,737.637 1695.97,737.637 1696.47,737.637 1696.96,737.637 1697.46,737.637 1697.96,737.637 1698.45,737.637 1698.95,737.637 1699.44,737.637 1699.94,737.637 1700.43,737.637 1700.93,737.637 1701.42,737.637 1701.92,737.637 1702.42,737.637 1702.91,737.637 1703.41,737.637 1703.9,737.637 1704.4,737.637 1704.89,737.637 1705.39,737.637 1705.88,737.637 1706.38,737.637 1706.87,737.637 1707.37,737.637 1707.87,737.637 1708.36,737.637 1708.86,737.637 1709.35,737.637 1709.85,737.637 1710.34,737.637 1710.84,737.637 1711.33,737.637 1711.83,737.637 1712.32,737.637 1712.82,737.637 1713.32,737.637 1713.81,737.637 1714.31,737.637 1714.8,737.637 1715.3,737.637 1715.79,737.637 1716.29,737.637 1716.78,737.637 1717.28,737.637 1717.77,737.637 1718.27,737.637 1718.77,737.637 1719.26,737.637 1719.76,737.637 1720.25,737.637 1720.75,737.637 1721.24,737.637 1721.74,737.637 1722.23,737.637 1722.73,737.637 1723.23,737.637 \"/>\n<path clip-path=\"url(#clip293)\" d=\"M732.766 736.495 L733.262 736.495 L733.757 736.495 L734.253 736.495 L734.748 736.495 L735.244 736.495 L735.739 736.495 L736.235 736.495 L736.73 736.495 L737.226 736.495 L737.721 736.495 L738.217 736.495 L738.712 736.495 L739.208 736.495 L739.703 736.495 L740.199 736.495 L740.694 736.495 L741.189 736.495 L741.685 736.495 L742.18 736.495 L742.676 736.495 L743.171 736.495 L743.667 736.495 L744.162 736.495 L744.658 736.495 L745.153 736.495 L745.649 736.495 L746.144 736.495 L746.64 736.495 L747.135 736.495 L747.631 736.495 L748.126 736.495 L748.622 736.495 L749.117 736.495 L749.613 736.495 L750.108 736.495 L750.604 736.495 L751.099 736.495 L751.594 736.495 L752.09 736.495 L752.585 736.495 L753.081 736.495 L753.576 736.495 L754.072 736.495 L754.567 736.495 L755.063 736.495 L755.558 736.495 L756.054 736.495 L756.549 736.495 L757.045 736.495 L757.54 736.495 L758.036 736.495 L758.531 736.495 L759.027 736.495 L759.522 736.495 L760.018 736.495 L760.513 736.495 L761.009 736.495 L761.504 736.495 L761.999 736.495 L762.495 736.495 L762.99 736.495 L763.486 736.495 L763.981 736.495 L764.477 736.495 L764.972 736.495 L765.468 736.495 L765.963 736.495 L766.459 736.495 L766.954 736.495 L767.45 736.495 L767.945 736.495 L768.441 736.495 L768.936 736.495 L769.432 736.495 L769.927 736.495 L770.423 736.495 L770.918 736.495 L771.414 736.495 L771.909 736.495 L772.405 736.495 L772.9 736.495 L773.395 736.495 L773.891 736.495 L774.386 736.495 L774.882 736.495 L775.377 736.495 L775.873 736.495 L776.368 736.495 L776.864 736.495 L777.359 736.495 L777.855 736.495 L778.35 736.495 L778.846 736.495 L779.341 736.495 L779.837 736.495 L780.332 736.495 L780.828 736.495 L781.323 736.495 L781.819 736.495 L782.314 736.495 L782.81 736.495 L783.305 736.495 L783.8 736.495 L784.296 736.495 L784.791 736.495 L785.287 736.495 L785.782 736.495 L786.278 736.495 L786.773 736.495 L787.269 736.495 L787.764 736.495 L788.26 736.495 L788.755 736.495 L789.251 736.495 L789.746 736.495 L790.242 736.495 L790.737 736.495 L791.233 736.495 L791.728 736.495 L792.224 736.495 L792.719 736.495 L793.215 736.495 L793.71 736.495 L794.206 736.495 L794.701 736.495 L795.196 736.495 L795.692 736.495 L796.187 736.495 L796.683 736.495 L797.178 736.495 L797.674 736.495 L798.169 736.495 L798.665 736.495 L799.16 736.495 L799.656 736.495 L800.151 736.495 L800.647 736.495 L801.142 736.495 L801.638 736.495 L802.133 736.495 L802.629 736.495 L803.124 736.495 L803.62 736.495 L804.115 736.495 L804.611 736.495 L805.106 736.495 L805.601 736.495 L806.097 736.495 L806.592 736.495 L807.088 736.495 L807.583 736.495 L808.079 736.495 L808.574 736.495 L809.07 736.495 L809.565 736.495 L810.061 736.495 L810.556 736.495 L811.052 736.495 L811.547 736.495 L812.043 736.495 L812.538 736.495 L813.034 736.495 L813.529 736.495 L814.025 736.495 L814.52 736.495 L815.016 736.495 L815.511 736.495 L816.007 736.495 L816.502 736.495 L816.997 736.495 L817.493 736.495 L817.988 736.495 L818.484 736.495 L818.979 736.495 L819.475 736.495 L819.97 736.495 L820.466 736.495 L820.961 736.495 L821.457 736.495 L821.952 736.495 L822.448 736.495 L822.943 736.495 L823.439 736.495 L823.934 736.495 L824.43 736.495 L824.925 736.495 L825.421 736.495 L825.916 736.495 L826.412 736.495 L826.907 736.495 L827.402 736.495 L827.898 736.495 L828.393 736.495 L828.889 736.495 L829.384 736.495 L829.88 736.495 L830.375 736.495 L830.871 736.495 L831.366 736.495 L831.862 736.495 L832.357 736.495 L832.853 736.495 L833.348 736.495 L833.844 736.495 L834.339 736.495 L834.835 736.495 L835.33 736.495 L835.826 736.495 L836.321 736.495 L836.817 736.495 L837.312 736.495 L837.808 736.495 L838.303 736.495 L838.798 736.495 L839.294 736.495 L839.789 736.495 L840.285 736.495 L840.78 736.495 L841.276 736.495 L841.771 736.495 L842.267 736.495 L842.762 736.495 L843.258 736.495 L843.753 736.495 L844.249 736.495 L844.744 736.495 L845.24 736.495 L845.735 736.495 L846.231 736.495 L846.726 736.495 L847.222 736.495 L847.717 736.495 L848.213 736.495 L848.708 736.495 L849.203 736.495 L849.699 736.495 L850.194 736.495 L850.69 736.495 L851.185 736.495 L851.681 736.495 L852.176 736.495 L852.672 736.495 L853.167 736.495 L853.663 736.495 L854.158 736.495 L854.654 736.495 L855.149 736.495 L855.645 736.495 L856.14 736.495 L856.636 736.495 L857.131 736.495 L857.627 736.495 L858.122 736.495 L858.618 736.495 L859.113 736.495 L859.608 736.495 L860.104 736.495 L860.599 736.495 L861.095 736.495 L861.59 736.495 L862.086 736.495 L862.581 736.495 L863.077 736.495 L863.572 736.495 L864.068 736.495 L864.563 736.495 L865.059 736.495 L865.554 736.495 L866.05 736.495 L866.545 736.495 L867.041 736.495 L867.536 736.495 L868.032 736.495 L868.527 736.495 L869.023 736.495 L869.518 736.495 L870.014 736.495 L870.509 736.495 L871.004 736.495 L871.5 736.495 L871.995 736.495 L872.491 736.495 L872.986 736.495 L873.482 736.495 L873.977 736.495 L874.473 736.495 L874.968 736.495 L875.464 736.495 L875.959 736.495 L876.455 736.495 L876.95 736.495 L877.446 736.495 L877.941 736.495 L878.437 736.495 L878.932 736.495 L879.428 736.495 L879.923 736.495 L880.419 736.495 L880.914 736.495 L881.409 736.495 L881.905 736.495 L882.4 736.495 L882.896 736.495 L883.391 736.495 L883.887 736.495 L884.382 736.495 L884.878 736.495 L885.373 736.495 L885.869 736.495 L886.364 736.495 L886.86 736.495 L887.355 736.495 L887.851 736.495 L888.346 736.495 L888.842 736.495 L889.337 736.495 L889.833 736.495 L890.328 736.495 L890.824 736.495 L891.319 736.495 L891.815 736.495 L892.31 736.495 L892.805 736.495 L893.301 736.495 L893.796 736.495 L894.292 736.495 L894.787 736.495 L895.283 736.495 L895.778 736.495 L896.274 736.495 L896.769 736.495 L897.265 736.495 L897.76 736.495 L898.256 736.495 L898.751 736.495 L899.247 736.495 L899.742 736.495 L900.238 736.495 L900.733 736.495 L901.229 736.495 L901.724 736.495 L902.22 736.495 L902.715 736.495 L903.21 736.495 L903.706 736.495 L904.201 736.495 L904.697 736.495 L905.192 736.495 L905.688 736.495 L906.183 736.495 L906.679 736.495 L907.174 736.495 L907.67 736.495 L908.165 736.495 L908.661 736.495 L909.156 736.495 L909.652 736.495 L910.147 736.495 L910.643 736.495 L911.138 736.495 L911.634 736.495 L912.129 736.495 L912.625 736.495 L913.12 736.495 L913.616 736.495 L914.111 736.495 L914.606 736.495 L915.102 736.495 L915.597 736.495 L916.093 736.495 L916.588 736.495 L917.084 736.495 L917.579 736.495 L918.075 736.495 L918.57 736.495 L919.066 736.495 L919.561 736.495 L920.057 736.495 L920.552 736.495 L921.048 736.495 L921.543 736.495 L922.039 736.495 L922.534 736.495 L923.03 736.495 L923.525 736.495 L924.021 736.495 L924.516 736.495 L925.011 736.495 L925.507 736.495 L926.002 736.495 L926.498 736.495 L926.993 736.495 L927.489 736.495 L927.984 736.495 L928.48 736.495 L928.975 736.495 L929.471 736.495 L929.966 736.495 L930.462 736.495 L930.957 736.495 L931.453 736.495 L931.948 736.495 L932.444 736.495 L932.939 736.495 L933.435 736.495 L933.93 736.495 L934.426 736.495 L934.921 736.495 L935.417 736.495 L935.912 736.495 L936.407 736.495 L936.903 736.495 L937.398 736.495 L937.894 736.495 L938.389 736.495 L938.885 736.495 L939.38 736.495 L939.876 736.495 L940.371 736.495 L940.867 736.495 L941.362 736.495 L941.858 736.495 L942.353 736.495 L942.849 736.495 L943.344 736.495 L943.84 736.495 L944.335 736.495 L944.831 736.495 L945.326 736.495 L945.822 736.495 L946.317 736.495 L946.812 736.495 L947.308 736.495 L947.803 736.495 L948.299 736.495 L948.794 736.495 L949.29 736.495 L949.785 736.495 L950.281 736.495 L950.776 736.495 L951.272 736.495 L951.767 736.495 L952.263 736.495 L952.758 736.495 L953.254 736.495 L953.749 736.495 L954.245 736.495 L954.74 736.495 L955.236 736.495 L955.731 736.495 L956.227 736.495 L956.722 736.495 L957.217 736.495 L957.713 736.495 L958.208 736.495 L958.704 736.495 L959.199 736.495 L959.695 736.495 L960.19 736.495 L960.686 736.495 L961.181 736.495 L961.677 736.495 L962.172 736.495 L962.668 736.495 L963.163 736.495 L963.659 736.495 L964.154 736.495 L964.65 736.495 L965.145 736.495 L965.641 736.495 L966.136 736.495 L966.632 736.495 L967.127 736.495 L967.623 736.495 L968.118 736.495 L968.613 736.495 L969.109 736.495 L969.604 736.495 L970.1 736.495 L970.595 736.495 L971.091 736.495 L971.586 736.495 L972.082 736.495 L972.577 736.495 L973.073 736.495 L973.568 736.495 L974.064 736.495 L974.559 736.495 L975.055 736.495 L975.55 736.495 L976.046 736.495 L976.541 736.495 L977.037 736.495 L977.532 736.495 L978.028 736.495 L978.523 736.495 L979.018 736.495 L979.514 736.495 L980.009 736.495 L980.505 736.495 L981 736.495 L981.496 736.495 L981.991 736.495 L982.487 736.495 L982.982 736.495 L983.478 736.495 L983.973 736.495 L984.469 736.495 L984.964 736.495 L985.46 736.495 L985.955 736.495 L986.451 736.495 L986.946 736.495 L987.442 736.495 L987.937 736.495 L988.433 736.495 L988.928 736.495 L989.424 736.495 L989.919 736.495 L990.414 736.495 L990.91 736.495 L991.405 736.495 L991.901 736.495 L992.396 736.495 L992.892 736.495 L993.387 736.495 L993.883 736.495 L994.378 736.495 L994.874 736.495 L995.369 736.495 L995.865 736.495 L996.36 736.495 L996.856 736.495 L997.351 736.495 L997.847 736.495 L998.342 736.495 L998.838 736.495 L999.333 736.495 L999.829 736.495 L1000.32 736.495 L1000.82 736.495 L1001.31 736.495 L1001.81 736.495 L1002.31 736.495 L1002.8 736.495 L1003.3 736.495 L1003.79 736.495 L1004.29 736.495 L1004.78 736.495 L1005.28 736.495 L1005.77 736.495 L1006.27 736.495 L1006.77 736.495 L1007.26 736.495 L1007.76 736.495 L1008.25 736.495 L1008.75 736.495 L1009.24 736.495 L1009.74 736.495 L1010.23 736.495 L1010.73 736.495 L1011.22 736.495 L1011.72 736.495 L1012.22 736.495 L1012.71 736.495 L1013.21 736.495 L1013.7 736.495 L1014.2 736.495 L1014.69 736.495 L1015.19 736.495 L1015.68 736.495 L1016.18 736.495 L1016.67 736.495 L1017.17 736.495 L1017.67 736.495 L1018.16 736.495 L1018.66 736.495 L1019.15 736.495 L1019.65 736.495 L1020.14 736.495 L1020.64 736.495 L1021.13 736.495 L1021.63 736.495 L1022.13 736.495 L1022.62 736.495 L1023.12 736.495 L1023.61 736.495 L1024.11 736.495 L1024.6 736.495 L1025.1 736.495 L1025.59 736.495 L1026.09 736.495 L1026.58 736.495 L1027.08 736.495 L1027.58 736.495 L1028.07 736.495 L1028.57 736.495 L1029.06 736.495 L1029.56 736.495 L1030.05 736.495 L1030.55 736.495 L1031.04 736.495 L1031.54 736.495 L1032.03 736.495 L1032.53 736.495 L1033.03 736.495 L1033.52 736.495 L1034.02 736.495 L1034.51 736.495 L1035.01 736.495 L1035.5 736.495 L1036 736.495 L1036.49 736.495 L1036.99 736.495 L1037.48 736.495 L1037.98 736.495 L1038.48 736.495 L1038.97 736.495 L1039.47 736.495 L1039.96 736.495 L1040.46 736.495 L1040.95 736.495 L1041.45 736.495 L1041.94 736.495 L1042.44 736.495 L1042.94 736.495 L1043.43 736.495 L1043.93 736.495 L1044.42 736.495 L1044.92 736.495 L1045.41 736.495 L1045.91 736.495 L1046.4 736.495 L1046.9 736.495 L1047.39 736.495 L1047.89 736.495 L1048.39 736.495 L1048.88 736.495 L1049.38 736.495 L1049.87 736.495 L1050.37 736.495 L1050.86 736.495 L1051.36 736.495 L1051.85 736.495 L1052.35 736.495 L1052.84 736.495 L1053.34 736.495 L1053.84 736.495 L1054.33 736.495 L1054.83 736.495 L1055.32 736.495 L1055.82 736.495 L1056.31 736.495 L1056.81 736.495 L1057.3 736.495 L1057.8 736.495 L1058.29 736.495 L1058.79 736.495 L1059.29 736.495 L1059.78 736.495 L1060.28 736.495 L1060.77 736.495 L1061.27 736.495 L1061.76 736.495 L1062.26 736.495 L1062.75 736.495 L1063.25 736.495 L1063.75 736.495 L1064.24 736.495 L1064.74 736.495 L1065.23 736.495 L1065.73 736.495 L1066.22 736.495 L1066.72 736.495 L1067.21 736.495 L1067.71 736.495 L1068.2 736.495 L1068.7 736.495 L1069.2 736.495 L1069.69 736.495 L1070.19 736.495 L1070.68 736.495 L1071.18 736.495 L1071.67 736.495 L1072.17 736.495 L1072.66 736.495 L1073.16 736.495 L1073.65 736.495 L1074.15 736.495 L1074.65 736.495 L1075.14 736.495 L1075.64 736.495 L1076.13 736.495 L1076.63 736.495 L1077.12 736.495 L1077.62 736.495 L1078.11 736.495 L1078.61 736.495 L1079.1 736.495 L1079.6 736.495 L1080.1 736.495 L1080.59 736.495 L1081.09 736.495 L1081.58 736.495 L1082.08 736.495 L1082.57 736.495 L1083.07 736.495 L1083.56 736.495 L1084.06 736.495 L1084.56 736.495 L1085.05 736.495 L1085.55 736.495 L1086.04 736.495 L1086.54 736.495 L1087.03 736.495 L1087.53 736.495 L1088.02 736.495 L1088.52 736.495 L1089.01 736.495 L1089.51 736.495 L1090.01 736.495 L1090.5 736.495 L1091 736.495 L1091.49 736.495 L1091.99 736.495 L1092.48 736.495 L1092.98 736.495 L1093.47 736.495 L1093.97 736.495 L1094.46 736.495 L1094.96 736.495 L1095.46 736.495 L1095.95 736.495 L1096.45 736.495 L1096.94 736.495 L1097.44 736.495 L1097.93 736.495 L1098.43 736.495 L1098.92 736.495 L1099.42 736.495 L1099.91 736.495 L1100.41 736.495 L1100.91 736.495 L1101.4 736.495 L1101.9 736.495 L1102.39 736.495 L1102.89 736.495 L1103.38 736.495 L1103.88 736.495 L1104.37 736.495 L1104.87 736.495 L1105.37 736.495 L1105.86 736.495 L1106.36 736.495 L1106.85 736.495 L1107.35 736.495 L1107.84 736.495 L1108.34 736.495 L1108.83 736.495 L1109.33 736.495 L1109.82 736.495 L1110.32 736.495 L1110.82 736.495 L1111.31 736.495 L1111.81 736.495 L1112.3 736.495 L1112.8 736.495 L1113.29 736.495 L1113.79 736.495 L1114.28 736.495 L1114.78 736.495 L1115.27 736.495 L1115.77 736.495 L1116.27 736.495 L1116.76 736.495 L1117.26 736.495 L1117.75 736.495 L1118.25 736.495 L1118.74 736.495 L1119.24 736.495 L1119.73 736.495 L1120.23 736.495 L1120.72 736.495 L1121.22 736.495 L1121.72 736.495 L1122.21 736.495 L1122.71 736.495 L1123.2 736.495 L1123.7 736.495 L1124.19 736.495 L1124.69 736.495 L1125.18 736.495 L1125.68 736.495 L1126.18 736.495 L1126.67 736.495 L1127.17 736.495 L1127.66 736.495 L1128.16 736.495 L1128.65 736.495 L1129.15 736.495 L1129.64 736.495 L1130.14 736.495 L1130.63 736.495 L1131.13 736.495 L1131.63 736.495 L1132.12 736.495 L1132.62 736.495 L1133.11 736.495 L1133.61 736.495 L1134.1 736.495 L1134.6 736.495 L1135.09 736.495 L1135.59 736.495 L1136.08 736.495 L1136.58 736.495 L1137.08 736.495 L1137.57 736.495 L1138.07 736.495 L1138.56 736.495 L1139.06 736.495 L1139.55 736.495 L1140.05 736.495 L1140.54 736.495 L1141.04 736.495 L1141.54 736.495 L1142.03 736.495 L1142.53 736.495 L1143.02 736.495 L1143.52 736.495 L1144.01 736.495 L1144.51 736.495 L1145 736.495 L1145.5 736.495 L1145.99 736.495 L1146.49 736.495 L1146.99 736.495 L1147.48 736.495 L1147.98 736.495 L1148.47 736.495 L1148.97 736.495 L1149.46 736.495 L1149.96 736.495 L1150.45 736.495 L1150.95 736.495 L1151.44 736.495 L1151.94 736.495 L1152.44 736.495 L1152.93 736.495 L1153.43 736.495 L1153.92 736.495 L1154.42 736.495 L1154.91 736.495 L1155.41 736.495 L1155.9 736.495 L1156.4 736.495 L1156.89 736.495 L1157.39 736.495 L1157.89 736.495 L1158.38 736.495 L1158.88 736.495 L1159.37 736.495 L1159.87 736.495 L1160.36 736.495 L1160.86 736.495 L1161.35 736.495 L1161.85 736.495 L1162.35 736.495 L1162.84 736.495 L1163.34 736.495 L1163.83 736.495 L1164.33 736.495 L1164.82 736.495 L1165.32 736.495 L1165.81 736.495 L1166.31 736.495 L1166.8 736.495 L1167.3 736.495 L1167.8 736.495 L1168.29 736.495 L1168.79 736.495 L1169.28 736.495 L1169.78 736.495 L1170.27 736.495 L1170.77 736.495 L1171.26 736.495 L1171.76 736.495 L1172.25 736.495 L1172.75 736.495 L1173.25 736.495 L1173.74 736.495 L1174.24 736.495 L1174.73 736.495 L1175.23 736.495 L1175.72 736.495 L1176.22 736.495 L1176.71 736.495 L1177.21 736.495 L1177.7 736.495 L1178.2 736.495 L1178.7 736.495 L1179.19 736.495 L1179.69 736.495 L1180.18 736.495 L1180.68 736.495 L1181.17 736.495 L1181.67 736.495 L1182.16 736.495 L1182.66 736.495 L1183.16 736.495 L1183.65 736.495 L1184.15 736.495 L1184.64 736.495 L1185.14 736.495 L1185.63 736.495 L1186.13 736.495 L1186.62 736.495 L1187.12 736.495 L1187.61 736.495 L1188.11 736.495 L1188.61 736.495 L1189.1 736.495 L1189.6 736.495 L1190.09 736.495 L1190.59 736.495 L1191.08 736.495 L1191.58 736.495 L1192.07 736.495 L1192.57 736.495 L1193.06 736.495 L1193.56 736.495 L1194.06 736.495 L1194.55 736.495 L1195.05 736.495 L1195.54 736.495 L1196.04 736.495 L1196.53 736.495 L1197.03 736.495 L1197.52 736.495 L1198.02 736.495 L1198.51 736.495 L1199.01 736.495 L1199.51 736.495 L1200 736.495 L1200.5 736.495 L1200.99 736.495 L1201.49 736.495 L1201.98 736.495 L1202.48 736.495 L1202.97 736.495 L1203.47 736.495 L1203.97 736.495 L1204.46 736.495 L1204.96 736.495 L1205.45 736.495 L1205.95 736.495 L1206.44 736.495 L1206.94 736.495 L1207.43 736.495 L1207.93 736.495 L1208.42 736.495 L1208.92 736.495 L1209.42 736.495 L1209.91 736.495 L1210.41 736.495 L1210.9 736.495 L1211.4 736.495 L1211.89 736.495 L1212.39 736.495 L1212.88 736.495 L1213.38 736.495 L1213.87 736.495 L1214.37 736.495 L1214.87 736.495 L1215.36 736.495 L1215.86 736.495 L1216.35 736.495 L1216.85 736.495 L1217.34 736.495 L1217.84 736.495 L1218.33 736.495 L1218.83 736.495 L1219.32 736.495 L1219.82 736.495 L1220.32 736.495 L1220.81 736.495 L1221.31 736.495 L1221.8 736.495 L1222.3 736.495 L1222.79 736.495 L1223.29 736.495 L1223.78 736.495 L1224.28 736.495 L1224.78 736.495 L1225.27 736.495 L1225.77 736.495 L1226.26 736.495 L1226.76 736.495 L1227.25 736.495 L1227.75 736.495 L1228.24 736.495 L1228.74 736.495 L1229.23 736.495 L1229.73 736.495 L1230.23 736.495 L1230.72 736.495 L1231.22 736.495 L1231.71 736.495 L1232.21 736.495 L1232.7 736.495 L1233.2 736.495 L1233.69 736.495 L1234.19 736.495 L1234.68 736.495 L1235.18 736.495 L1235.68 736.495 L1236.17 736.495 L1236.67 736.495 L1237.16 736.495 L1237.66 736.495 L1238.15 736.495 L1238.65 736.495 L1239.14 736.495 L1239.64 736.495 L1240.13 736.495 L1240.63 736.495 L1241.13 736.495 L1241.62 736.495 L1242.12 736.495 L1242.61 736.495 L1243.11 736.495 L1243.6 736.495 L1244.1 736.495 L1244.59 736.495 L1245.09 736.495 L1245.59 736.495 L1246.08 736.495 L1246.58 736.495 L1247.07 736.495 L1247.57 736.495 L1248.06 736.495 L1248.56 736.495 L1249.05 736.495 L1249.55 736.495 L1250.04 736.495 L1250.54 736.495 L1251.04 736.495 L1251.53 736.495 L1252.03 736.495 L1252.52 736.495 L1253.02 736.495 L1253.51 736.495 L1254.01 736.495 L1254.5 736.495 L1255 736.495 L1255.49 736.495 L1255.99 736.495 L1256.49 736.495 L1256.98 736.495 L1257.48 736.495 L1257.97 736.495 L1258.47 736.495 L1258.96 736.495 L1259.46 736.495 L1259.95 736.495 L1260.45 736.495 L1260.95 736.495 L1261.44 736.495 L1261.94 736.495 L1262.43 736.495 L1262.93 736.495 L1263.42 736.495 L1263.92 736.495 L1264.41 736.495 L1264.91 736.495 L1265.4 736.495 L1265.9 736.495 L1266.4 736.495 L1266.89 736.495 L1267.39 736.495 L1267.88 736.495 L1268.38 736.495 L1268.87 736.495 L1269.37 736.495 L1269.86 736.495 L1270.36 736.495 L1270.85 736.495 L1271.35 736.495 L1271.85 736.495 L1272.34 736.495 L1272.84 736.495 L1273.33 736.495 L1273.83 736.495 L1274.32 736.495 L1274.82 736.495 L1275.31 736.495 L1275.81 736.495 L1276.3 736.495 L1276.8 736.495 L1277.3 736.495 L1277.79 736.495 L1278.29 736.495 L1278.78 736.495 L1279.28 736.495 L1279.77 736.495 L1280.27 736.495 L1280.76 736.495 L1281.26 736.495 L1281.76 736.495 L1282.25 736.495 L1282.75 736.495 L1283.24 736.495 L1283.74 736.495 L1284.23 736.495 L1284.73 736.495 L1285.22 736.495 L1285.72 736.495 L1286.21 736.495 L1286.71 736.495 L1287.21 736.495 L1287.7 736.495 L1288.2 736.495 L1288.69 736.495 L1289.19 736.495 L1289.68 736.495 L1290.18 736.495 L1290.67 736.495 L1291.17 736.495 L1291.66 736.495 L1292.16 736.495 L1292.66 736.495 L1293.15 736.495 L1293.65 736.495 L1294.14 736.495 L1294.64 736.495 L1295.13 736.495 L1295.63 736.495 L1296.12 736.495 L1296.62 736.495 L1297.11 736.495 L1297.61 736.495 L1298.11 736.495 L1298.6 736.495 L1299.1 736.495 L1299.59 736.495 L1300.09 736.495 L1300.58 736.495 L1301.08 736.495 L1301.57 736.495 L1302.07 736.495 L1302.57 736.495 L1303.06 736.495 L1303.56 736.495 L1304.05 736.495 L1304.55 736.495 L1305.04 736.495 L1305.54 736.495 L1306.03 736.495 L1306.53 736.495 L1307.02 736.495 L1307.52 736.495 L1308.02 736.495 L1308.51 736.495 L1309.01 736.495 L1309.5 736.495 L1310 736.495 L1310.49 736.495 L1310.99 736.495 L1311.48 736.495 L1311.98 736.495 L1312.47 736.495 L1312.97 736.495 L1313.47 736.495 L1313.96 736.495 L1314.46 736.495 L1314.95 736.495 L1315.45 736.495 L1315.94 736.495 L1316.44 736.495 L1316.93 736.495 L1317.43 736.495 L1317.92 736.495 L1318.42 736.495 L1318.92 736.495 L1319.41 736.495 L1319.91 736.495 L1320.4 736.495 L1320.9 736.495 L1321.39 736.495 L1321.89 736.495 L1322.38 736.495 L1322.88 736.495 L1323.38 736.495 L1323.87 736.495 L1324.37 736.495 L1324.86 736.495 L1325.36 736.495 L1325.85 736.495 L1326.35 736.495 L1326.84 736.495 L1327.34 736.495 L1327.83 736.495 L1328.33 736.495 L1328.83 736.495 L1329.32 736.495 L1329.82 736.495 L1330.31 736.495 L1330.81 736.495 L1331.3 736.495 L1331.8 736.495 L1332.29 736.495 L1332.79 736.495 L1333.28 736.495 L1333.78 736.495 L1334.28 736.495 L1334.77 736.495 L1335.27 736.495 L1335.76 736.495 L1336.26 736.495 L1336.75 736.495 L1337.25 736.495 L1337.74 736.495 L1338.24 736.495 L1338.73 736.495 L1339.23 736.495 L1339.73 736.495 L1340.22 736.495 L1340.72 736.495 L1341.21 736.495 L1341.71 736.495 L1342.2 736.495 L1342.7 736.495 L1343.19 736.495 L1343.69 736.495 L1344.19 736.495 L1344.68 736.495 L1345.18 736.495 L1345.67 736.495 L1346.17 736.495 L1346.66 736.495 L1347.16 736.495 L1347.65 736.495 L1348.15 736.495 L1348.64 736.495 L1349.14 736.495 L1349.64 736.495 L1350.13 736.495 L1350.63 736.495 L1351.12 736.495 L1351.62 736.495 L1352.11 736.495 L1352.61 736.495 L1353.1 736.495 L1353.6 736.495 L1354.09 736.495 L1354.59 736.495 L1355.09 736.495 L1355.58 736.495 L1356.08 736.495 L1356.57 736.495 L1357.07 736.495 L1357.56 736.495 L1358.06 736.495 L1358.55 736.495 L1359.05 736.495 L1359.54 736.495 L1360.04 736.495 L1360.54 736.495 L1361.03 736.495 L1361.53 736.495 L1362.02 736.495 L1362.52 736.495 L1363.01 736.495 L1363.51 736.495 L1364 736.495 L1364.5 736.495 L1365 736.495 L1365.49 736.495 L1365.99 736.495 L1366.48 736.495 L1366.98 736.495 L1367.47 736.495 L1367.97 736.495 L1368.46 736.495 L1368.96 736.495 L1369.45 736.495 L1369.95 736.495 L1370.45 736.495 L1370.94 736.495 L1371.44 736.495 L1371.93 736.495 L1372.43 736.495 L1372.92 736.495 L1373.42 736.495 L1373.91 736.495 L1374.41 736.495 L1374.9 736.495 L1375.4 736.495 L1375.9 736.495 L1376.39 736.495 L1376.89 736.495 L1377.38 736.495 L1377.88 736.495 L1378.37 736.495 L1378.87 736.495 L1379.36 736.495 L1379.86 736.495 L1380.35 736.495 L1380.85 736.495 L1381.35 736.495 L1381.84 736.495 L1382.34 736.495 L1382.83 736.495 L1383.33 736.495 L1383.82 736.495 L1384.32 736.495 L1384.81 736.495 L1385.31 736.495 L1385.81 736.495 L1386.3 736.495 L1386.8 736.495 L1387.29 736.495 L1387.79 736.495 L1388.28 736.495 L1388.78 736.495 L1389.27 736.495 L1389.77 736.495 L1390.26 736.495 L1390.76 736.495 L1391.26 736.495 L1391.75 736.495 L1392.25 736.495 L1392.74 736.495 L1393.24 736.495 L1393.73 736.495 L1394.23 736.495 L1394.72 736.495 L1395.22 736.495 L1395.71 736.495 L1396.21 736.495 L1396.71 736.495 L1397.2 736.495 L1397.7 736.495 L1398.19 736.495 L1398.69 736.495 L1399.18 736.495 L1399.68 736.495 L1400.17 736.495 L1400.67 736.495 L1401.17 736.495 L1401.66 736.495 L1402.16 736.495 L1402.65 736.495 L1403.15 736.495 L1403.64 736.495 L1404.14 736.495 L1404.63 736.495 L1405.13 736.495 L1405.62 736.495 L1406.12 736.495 L1406.62 736.495 L1407.11 736.495 L1407.61 736.495 L1408.1 736.495 L1408.6 736.495 L1409.09 736.495 L1409.59 736.495 L1410.08 736.495 L1410.58 736.495 L1411.07 736.495 L1411.57 736.495 L1412.07 736.495 L1412.56 736.495 L1413.06 736.495 L1413.55 736.495 L1414.05 736.495 L1414.54 736.495 L1415.04 736.495 L1415.53 736.495 L1416.03 736.495 L1416.52 736.495 L1417.02 736.495 L1417.52 736.495 L1418.01 736.495 L1418.51 736.495 L1419 736.495 L1419.5 736.495 L1419.99 736.495 L1420.49 736.495 L1420.98 736.495 L1421.48 736.495 L1421.98 736.495 L1422.47 736.495 L1422.97 736.495 L1423.46 736.495 L1423.96 736.495 L1424.45 736.495 L1424.95 736.495 L1425.44 736.495 L1425.94 736.495 L1426.43 736.495 L1426.93 736.495 L1427.43 736.495 L1427.92 736.495 L1428.42 736.495 L1428.91 736.495 L1429.41 736.495 L1429.9 736.495 L1430.4 736.495 L1430.89 736.495 L1431.39 736.495 L1431.88 736.495 L1432.38 736.495 L1432.88 736.495 L1433.37 736.495 L1433.87 736.495 L1434.36 736.495 L1434.86 736.495 L1435.35 736.495 L1435.85 736.495 L1436.34 736.495 L1436.84 736.495 L1437.33 736.495 L1437.83 736.495 L1438.33 736.495 L1438.82 736.495 L1439.32 736.495 L1439.81 736.495 L1440.31 736.495 L1440.8 736.495 L1441.3 736.495 L1441.79 736.495 L1442.29 736.495 L1442.79 736.495 L1443.28 736.495 L1443.78 736.495 L1444.27 736.495 L1444.77 736.495 L1445.26 736.495 L1445.76 736.495 L1446.25 736.495 L1446.75 736.495 L1447.24 736.495 L1447.74 736.495 L1448.24 736.495 L1448.73 736.495 L1449.23 736.495 L1449.72 736.495 L1450.22 736.495 L1450.71 736.495 L1451.21 736.495 L1451.7 736.495 L1452.2 736.495 L1452.69 736.495 L1453.19 736.495 L1453.69 736.495 L1454.18 736.495 L1454.68 736.495 L1455.17 736.495 L1455.67 736.495 L1456.16 736.495 L1456.66 736.495 L1457.15 736.495 L1457.65 736.495 L1458.14 736.495 L1458.64 736.495 L1459.14 736.495 L1459.63 736.495 L1460.13 736.495 L1460.62 736.495 L1461.12 736.495 L1461.61 736.495 L1462.11 736.495 L1462.6 736.495 L1463.1 736.495 L1463.6 736.495 L1464.09 736.495 L1464.59 736.495 L1465.08 736.495 L1465.58 736.495 L1466.07 736.495 L1466.57 736.495 L1467.06 736.495 L1467.56 736.495 L1468.05 736.495 L1468.55 736.495 L1469.05 736.495 L1469.54 736.495 L1470.04 736.495 L1470.53 736.495 L1471.03 736.495 L1471.52 736.495 L1472.02 736.495 L1472.51 736.495 L1473.01 736.495 L1473.5 736.495 L1474 736.495 L1474.5 736.495 L1474.99 736.495 L1475.49 736.495 L1475.98 736.495 L1476.48 736.495 L1476.97 736.495 L1477.47 736.495 L1477.96 736.495 L1478.46 736.495 L1478.95 736.495 L1479.45 736.495 L1479.95 736.495 L1480.44 736.495 L1480.94 736.495 L1481.43 736.495 L1481.93 736.495 L1482.42 736.495 L1482.92 736.495 L1483.41 736.495 L1483.91 736.495 L1484.41 736.495 L1484.9 736.495 L1485.4 736.495 L1485.89 736.495 L1486.39 736.495 L1486.88 736.495 L1487.38 736.495 L1487.87 736.495 L1488.37 736.495 L1488.86 736.495 L1489.36 736.495 L1489.86 736.495 L1490.35 736.495 L1490.85 736.495 L1491.34 736.495 L1491.84 736.495 L1492.33 736.495 L1492.83 736.495 L1493.32 736.495 L1493.82 736.495 L1494.31 736.495 L1494.81 736.495 L1495.31 736.495 L1495.8 736.495 L1496.3 736.495 L1496.79 736.495 L1497.29 736.495 L1497.78 736.495 L1498.28 736.495 L1498.77 736.495 L1499.27 736.495 L1499.76 736.495 L1500.26 736.495 L1500.76 736.495 L1501.25 736.495 L1501.75 736.495 L1502.24 736.495 L1502.74 736.495 L1503.23 736.495 L1503.73 736.495 L1504.22 736.495 L1504.72 736.495 L1505.22 736.495 L1505.71 736.495 L1506.21 736.495 L1506.7 736.495 L1507.2 736.495 L1507.69 736.495 L1508.19 736.495 L1508.68 736.495 L1509.18 736.495 L1509.67 736.495 L1510.17 736.495 L1510.67 736.495 L1511.16 736.495 L1511.66 736.495 L1512.15 736.495 L1512.65 736.495 L1513.14 736.495 L1513.64 736.495 L1514.13 736.495 L1514.63 736.495 L1515.12 736.495 L1515.62 736.495 L1516.12 736.495 L1516.61 736.495 L1517.11 736.495 L1517.6 736.495 L1518.1 736.495 L1518.59 736.495 L1519.09 736.495 L1519.58 736.495 L1520.08 736.495 L1520.58 736.495 L1521.07 736.495 L1521.57 736.495 L1522.06 736.495 L1522.56 736.495 L1523.05 736.495 L1523.55 736.495 L1524.04 736.495 L1524.54 736.495 L1525.03 736.495 L1525.53 736.495 L1526.03 736.495 L1526.52 736.495 L1527.02 736.495 L1527.51 736.495 L1528.01 736.495 L1528.5 736.495 L1529 736.495 L1529.49 736.495 L1529.99 736.495 L1530.48 736.495 L1530.98 736.495 L1531.48 736.495 L1531.97 736.495 L1532.47 736.495 L1532.96 736.495 L1533.46 736.495 L1533.95 736.495 L1534.45 736.495 L1534.94 736.495 L1535.44 736.495 L1535.93 736.495 L1536.43 736.495 L1536.93 736.495 L1537.42 736.495 L1537.92 736.495 L1538.41 736.495 L1538.91 736.495 L1539.4 736.495 L1539.9 736.495 L1540.39 736.495 L1540.89 736.495 L1541.39 736.495 L1541.88 736.495 L1542.38 736.495 L1542.87 736.495 L1543.37 736.495 L1543.86 736.495 L1544.36 736.495 L1544.85 736.495 L1545.35 736.495 L1545.84 736.495 L1546.34 736.495 L1546.84 736.495 L1547.33 736.495 L1547.83 736.495 L1548.32 736.495 L1548.82 736.495 L1549.31 736.495 L1549.81 736.495 L1550.3 736.495 L1550.8 736.495 L1551.29 736.495 L1551.79 736.495 L1552.29 736.495 L1552.78 736.495 L1553.28 736.495 L1553.77 736.495 L1554.27 736.495 L1554.76 736.495 L1555.26 736.495 L1555.75 736.495 L1556.25 736.495 L1556.74 736.495 L1557.24 736.495 L1557.74 736.495 L1558.23 736.495 L1558.73 736.495 L1559.22 736.495 L1559.72 736.495 L1560.21 736.495 L1560.71 736.495 L1561.2 736.495 L1561.7 736.495 L1562.2 736.495 L1562.69 736.495 L1563.19 736.495 L1563.68 736.495 L1564.18 736.495 L1564.67 736.495 L1565.17 736.495 L1565.66 736.495 L1566.16 736.495 L1566.65 736.495 L1567.15 736.495 L1567.65 736.495 L1568.14 736.495 L1568.64 736.495 L1569.13 736.495 L1569.63 736.495 L1570.12 736.495 L1570.62 736.495 L1571.11 736.495 L1571.61 736.495 L1572.1 736.495 L1572.6 736.495 L1573.1 736.495 L1573.59 736.495 L1574.09 736.495 L1574.58 736.495 L1575.08 736.495 L1575.57 736.495 L1576.07 736.495 L1576.56 736.495 L1577.06 736.495 L1577.55 736.495 L1578.05 736.495 L1578.55 736.495 L1579.04 736.495 L1579.54 736.495 L1580.03 736.495 L1580.53 736.495 L1581.02 736.495 L1581.52 736.495 L1582.01 736.495 L1582.51 736.495 L1583.01 736.495 L1583.5 736.495 L1584 736.495 L1584.49 736.495 L1584.99 736.495 L1585.48 736.495 L1585.98 736.495 L1586.47 736.495 L1586.97 736.495 L1587.46 736.495 L1587.96 736.495 L1588.46 736.495 L1588.95 736.495 L1589.45 736.495 L1589.94 736.495 L1590.44 736.495 L1590.93 736.495 L1591.43 736.495 L1591.92 736.495 L1592.42 736.495 L1592.91 736.495 L1593.41 736.495 L1593.91 736.495 L1594.4 736.495 L1594.9 736.495 L1595.39 736.495 L1595.89 736.495 L1596.38 736.495 L1596.88 736.495 L1597.37 736.495 L1597.87 736.495 L1598.36 736.495 L1598.86 736.495 L1599.36 736.495 L1599.85 736.495 L1600.35 736.495 L1600.84 736.495 L1601.34 736.495 L1601.83 736.495 L1602.33 736.495 L1602.82 736.495 L1603.32 736.495 L1603.82 736.495 L1604.31 736.495 L1604.81 736.495 L1605.3 736.495 L1605.8 736.495 L1606.29 736.495 L1606.79 736.495 L1607.28 736.495 L1607.78 736.495 L1608.27 736.495 L1608.77 736.495 L1609.27 736.495 L1609.76 736.495 L1610.26 736.495 L1610.75 736.495 L1611.25 736.495 L1611.74 736.495 L1612.24 736.495 L1612.73 736.495 L1613.23 736.495 L1613.72 736.495 L1614.22 736.495 L1614.72 736.495 L1615.21 736.495 L1615.71 736.495 L1616.2 736.495 L1616.7 736.495 L1617.19 736.495 L1617.69 736.495 L1618.18 736.495 L1618.68 736.495 L1619.17 736.495 L1619.67 736.495 L1620.17 736.495 L1620.66 736.495 L1621.16 736.495 L1621.65 736.495 L1622.15 736.495 L1622.64 736.495 L1623.14 736.495 L1623.63 736.495 L1624.13 736.495 L1624.63 736.495 L1625.12 736.495 L1625.62 736.495 L1626.11 736.495 L1626.61 736.495 L1627.1 736.495 L1627.6 736.495 L1628.09 736.495 L1628.59 736.495 L1629.08 736.495 L1629.58 736.495 L1630.08 736.495 L1630.57 736.495 L1631.07 736.495 L1631.56 736.495 L1632.06 736.495 L1632.55 736.495 L1633.05 736.495 L1633.54 736.495 L1634.04 736.495 L1634.53 736.495 L1635.03 736.495 L1635.53 736.495 L1636.02 736.495 L1636.52 736.495 L1637.01 736.495 L1637.51 736.495 L1638 736.495 L1638.5 736.495 L1638.99 736.495 L1639.49 736.495 L1639.99 736.495 L1640.48 736.495 L1640.98 736.495 L1641.47 736.495 L1641.97 736.495 L1642.46 736.495 L1642.96 736.495 L1643.45 736.495 L1643.95 736.495 L1644.44 736.495 L1644.94 736.495 L1645.44 736.495 L1645.93 736.495 L1646.43 736.495 L1646.92 736.495 L1647.42 736.495 L1647.91 736.495 L1648.41 736.495 L1648.9 736.495 L1649.4 736.495 L1649.89 736.495 L1650.39 736.495 L1650.89 736.495 L1651.38 736.495 L1651.88 736.495 L1652.37 736.495 L1652.87 736.495 L1653.36 736.495 L1653.86 736.495 L1654.35 736.495 L1654.85 736.495 L1655.34 736.495 L1655.84 736.495 L1656.34 736.495 L1656.83 736.495 L1657.33 736.495 L1657.82 736.495 L1658.32 736.495 L1658.81 736.495 L1659.31 736.495 L1659.8 736.495 L1660.3 736.495 L1660.8 736.495 L1661.29 736.495 L1661.79 736.495 L1662.28 736.495 L1662.78 736.495 L1663.27 736.495 L1663.77 736.495 L1664.26 736.495 L1664.76 736.495 L1665.25 736.495 L1665.75 736.495 L1666.25 736.495 L1666.74 736.495 L1667.24 736.495 L1667.73 736.495 L1668.23 736.495 L1668.72 736.495 L1669.22 736.495 L1669.71 736.495 L1670.21 736.495 L1670.7 736.495 L1671.2 736.495 L1671.7 736.495 L1672.19 736.495 L1672.69 736.495 L1673.18 736.495 L1673.68 736.495 L1674.17 736.495 L1674.67 736.495 L1675.16 736.495 L1675.66 736.495 L1676.15 736.495 L1676.65 736.495 L1677.15 736.495 L1677.64 736.495 L1678.14 736.495 L1678.63 736.495 L1679.13 736.495 L1679.62 736.495 L1680.12 736.495 L1680.61 736.495 L1681.11 736.495 L1681.61 736.495 L1682.1 736.495 L1682.6 736.495 L1683.09 736.495 L1683.59 736.495 L1684.08 736.495 L1684.58 736.495 L1685.07 736.495 L1685.57 736.495 L1686.06 736.495 L1686.56 736.495 L1687.06 736.495 L1687.55 736.495 L1688.05 736.495 L1688.54 736.495 L1689.04 736.495 L1689.53 736.495 L1690.03 736.495 L1690.52 736.495 L1691.02 736.495 L1691.51 736.495 L1692.01 736.495 L1692.51 736.495 L1693 736.495 L1693.5 736.495 L1693.99 736.495 L1694.49 736.495 L1694.98 736.495 L1695.48 736.495 L1695.97 736.495 L1696.47 736.495 L1696.96 736.495 L1697.46 736.495 L1697.96 736.495 L1698.45 736.495 L1698.95 736.495 L1699.44 736.495 L1699.94 736.495 L1700.43 736.495 L1700.93 736.495 L1701.42 736.495 L1701.92 736.495 L1702.42 736.495 L1702.91 736.495 L1703.41 736.495 L1703.9 736.495 L1704.4 736.495 L1704.89 736.495 L1705.39 736.495 L1705.88 736.495 L1706.38 736.495 L1706.87 736.495 L1707.37 736.495 L1707.87 736.495 L1708.36 736.495 L1708.86 736.495 L1709.35 736.495 L1709.85 736.495 L1710.34 736.495 L1710.84 736.495 L1711.33 736.495 L1711.83 736.495 L1712.32 736.495 L1712.82 736.495 L1713.32 736.495 L1713.81 736.495 L1714.31 736.495 L1714.8 736.495 L1715.3 736.495 L1715.79 736.495 L1716.29 736.495 L1716.78 736.495 L1717.28 736.495 L1717.77 736.495 L1718.27 736.495 L1718.77 736.495 L1719.26 736.495 L1719.76 736.495 L1720.25 736.495 L1720.75 736.495 L1721.24 736.495 L1721.74 736.495 L1722.23 736.495 L1722.73 736.495 L1723.23 736.495 L1723.23 735.166 L1722.73 735.166 L1722.23 735.166 L1721.74 735.166 L1721.24 735.166 L1720.75 735.166 L1720.25 735.166 L1719.76 735.166 L1719.26 735.166 L1718.77 735.166 L1718.27 735.166 L1717.77 735.166 L1717.28 735.166 L1716.78 735.166 L1716.29 735.166 L1715.79 735.166 L1715.3 735.166 L1714.8 735.166 L1714.31 735.166 L1713.81 735.166 L1713.32 735.166 L1712.82 735.166 L1712.32 735.166 L1711.83 735.166 L1711.33 735.166 L1710.84 735.166 L1710.34 735.166 L1709.85 735.166 L1709.35 735.166 L1708.86 735.166 L1708.36 735.166 L1707.87 735.166 L1707.37 735.166 L1706.87 735.166 L1706.38 735.166 L1705.88 735.166 L1705.39 735.166 L1704.89 735.166 L1704.4 735.166 L1703.9 735.166 L1703.41 735.166 L1702.91 735.166 L1702.42 735.166 L1701.92 735.166 L1701.42 735.166 L1700.93 735.166 L1700.43 735.166 L1699.94 735.166 L1699.44 735.166 L1698.95 735.166 L1698.45 735.166 L1697.96 735.166 L1697.46 735.166 L1696.96 735.166 L1696.47 735.166 L1695.97 735.166 L1695.48 735.166 L1694.98 735.166 L1694.49 735.166 L1693.99 735.166 L1693.5 735.166 L1693 735.166 L1692.51 735.166 L1692.01 735.166 L1691.51 735.166 L1691.02 735.166 L1690.52 735.166 L1690.03 735.166 L1689.53 735.166 L1689.04 735.166 L1688.54 735.166 L1688.05 735.166 L1687.55 735.166 L1687.06 735.166 L1686.56 735.166 L1686.06 735.166 L1685.57 735.166 L1685.07 735.166 L1684.58 735.166 L1684.08 735.166 L1683.59 735.166 L1683.09 735.166 L1682.6 735.166 L1682.1 735.166 L1681.61 735.166 L1681.11 735.166 L1680.61 735.166 L1680.12 735.166 L1679.62 735.166 L1679.13 735.166 L1678.63 735.166 L1678.14 735.166 L1677.64 735.166 L1677.15 735.166 L1676.65 735.166 L1676.15 735.166 L1675.66 735.166 L1675.16 735.166 L1674.67 735.166 L1674.17 735.166 L1673.68 735.166 L1673.18 735.166 L1672.69 735.166 L1672.19 735.166 L1671.7 735.166 L1671.2 735.166 L1670.7 735.166 L1670.21 735.166 L1669.71 735.166 L1669.22 735.166 L1668.72 735.166 L1668.23 735.166 L1667.73 735.166 L1667.24 735.166 L1666.74 735.166 L1666.25 735.166 L1665.75 735.166 L1665.25 735.166 L1664.76 735.166 L1664.26 735.166 L1663.77 735.166 L1663.27 735.166 L1662.78 735.166 L1662.28 735.166 L1661.79 735.166 L1661.29 735.166 L1660.8 735.166 L1660.3 735.166 L1659.8 735.166 L1659.31 735.166 L1658.81 735.166 L1658.32 735.166 L1657.82 735.166 L1657.33 735.166 L1656.83 735.166 L1656.34 735.166 L1655.84 735.166 L1655.34 735.166 L1654.85 735.166 L1654.35 735.166 L1653.86 735.166 L1653.36 735.166 L1652.87 735.166 L1652.37 735.166 L1651.88 735.166 L1651.38 735.166 L1650.89 735.166 L1650.39 735.166 L1649.89 735.166 L1649.4 735.166 L1648.9 735.166 L1648.41 735.166 L1647.91 735.166 L1647.42 735.166 L1646.92 735.166 L1646.43 735.166 L1645.93 735.166 L1645.44 735.166 L1644.94 735.166 L1644.44 735.166 L1643.95 735.166 L1643.45 735.166 L1642.96 735.166 L1642.46 735.166 L1641.97 735.166 L1641.47 735.166 L1640.98 735.166 L1640.48 735.166 L1639.99 735.166 L1639.49 735.166 L1638.99 735.166 L1638.5 735.166 L1638 735.166 L1637.51 735.166 L1637.01 735.166 L1636.52 735.166 L1636.02 735.166 L1635.53 735.166 L1635.03 735.166 L1634.53 735.166 L1634.04 735.166 L1633.54 735.166 L1633.05 735.166 L1632.55 735.166 L1632.06 735.166 L1631.56 735.166 L1631.07 735.166 L1630.57 735.166 L1630.08 735.166 L1629.58 735.166 L1629.08 735.166 L1628.59 735.166 L1628.09 735.166 L1627.6 735.166 L1627.1 735.166 L1626.61 735.166 L1626.11 735.166 L1625.62 735.166 L1625.12 735.166 L1624.63 735.166 L1624.13 735.166 L1623.63 735.166 L1623.14 735.166 L1622.64 735.166 L1622.15 735.166 L1621.65 735.166 L1621.16 735.166 L1620.66 735.166 L1620.17 735.166 L1619.67 735.166 L1619.17 735.166 L1618.68 735.166 L1618.18 735.166 L1617.69 735.166 L1617.19 735.166 L1616.7 735.166 L1616.2 735.166 L1615.71 735.166 L1615.21 735.166 L1614.72 735.166 L1614.22 735.166 L1613.72 735.166 L1613.23 735.166 L1612.73 735.166 L1612.24 735.166 L1611.74 735.166 L1611.25 735.166 L1610.75 735.166 L1610.26 735.166 L1609.76 735.166 L1609.27 735.166 L1608.77 735.166 L1608.27 735.166 L1607.78 735.166 L1607.28 735.166 L1606.79 735.166 L1606.29 735.166 L1605.8 735.166 L1605.3 735.166 L1604.81 735.166 L1604.31 735.166 L1603.82 735.166 L1603.32 735.166 L1602.82 735.166 L1602.33 735.166 L1601.83 735.166 L1601.34 735.166 L1600.84 735.166 L1600.35 735.166 L1599.85 735.166 L1599.36 735.166 L1598.86 735.166 L1598.36 735.166 L1597.87 735.166 L1597.37 735.166 L1596.88 735.166 L1596.38 735.166 L1595.89 735.166 L1595.39 735.166 L1594.9 735.166 L1594.4 735.166 L1593.91 735.166 L1593.41 735.166 L1592.91 735.166 L1592.42 735.166 L1591.92 735.166 L1591.43 735.166 L1590.93 735.166 L1590.44 735.166 L1589.94 735.166 L1589.45 735.166 L1588.95 735.166 L1588.46 735.166 L1587.96 735.166 L1587.46 735.166 L1586.97 735.166 L1586.47 735.166 L1585.98 735.166 L1585.48 735.166 L1584.99 735.166 L1584.49 735.166 L1584 735.166 L1583.5 735.166 L1583.01 735.166 L1582.51 735.166 L1582.01 735.166 L1581.52 735.166 L1581.02 735.166 L1580.53 735.166 L1580.03 735.166 L1579.54 735.166 L1579.04 735.166 L1578.55 735.166 L1578.05 735.166 L1577.55 735.166 L1577.06 735.166 L1576.56 735.166 L1576.07 735.166 L1575.57 735.166 L1575.08 735.166 L1574.58 735.166 L1574.09 735.166 L1573.59 735.166 L1573.1 735.166 L1572.6 735.166 L1572.1 735.166 L1571.61 735.166 L1571.11 735.166 L1570.62 735.166 L1570.12 735.166 L1569.63 735.166 L1569.13 735.166 L1568.64 735.166 L1568.14 735.166 L1567.65 735.166 L1567.15 735.166 L1566.65 735.166 L1566.16 735.166 L1565.66 735.166 L1565.17 735.166 L1564.67 735.166 L1564.18 735.166 L1563.68 735.166 L1563.19 735.166 L1562.69 735.166 L1562.2 735.166 L1561.7 735.166 L1561.2 735.166 L1560.71 735.166 L1560.21 735.166 L1559.72 735.166 L1559.22 735.166 L1558.73 735.166 L1558.23 735.166 L1557.74 735.166 L1557.24 735.166 L1556.74 735.166 L1556.25 735.166 L1555.75 735.166 L1555.26 735.166 L1554.76 735.166 L1554.27 735.166 L1553.77 735.166 L1553.28 735.166 L1552.78 735.166 L1552.29 735.166 L1551.79 735.166 L1551.29 735.166 L1550.8 735.166 L1550.3 735.166 L1549.81 735.166 L1549.31 735.166 L1548.82 735.166 L1548.32 735.166 L1547.83 735.166 L1547.33 735.166 L1546.84 735.166 L1546.34 735.166 L1545.84 735.166 L1545.35 735.166 L1544.85 735.166 L1544.36 735.166 L1543.86 735.166 L1543.37 735.166 L1542.87 735.166 L1542.38 735.166 L1541.88 735.166 L1541.39 735.166 L1540.89 735.166 L1540.39 735.166 L1539.9 735.166 L1539.4 735.166 L1538.91 735.166 L1538.41 735.166 L1537.92 735.166 L1537.42 735.166 L1536.93 735.166 L1536.43 735.166 L1535.93 735.166 L1535.44 735.166 L1534.94 735.166 L1534.45 735.166 L1533.95 735.166 L1533.46 735.166 L1532.96 735.166 L1532.47 735.166 L1531.97 735.166 L1531.48 735.166 L1530.98 735.166 L1530.48 735.166 L1529.99 735.166 L1529.49 735.166 L1529 735.166 L1528.5 735.166 L1528.01 735.166 L1527.51 735.166 L1527.02 735.166 L1526.52 735.166 L1526.03 735.166 L1525.53 735.166 L1525.03 735.166 L1524.54 735.166 L1524.04 735.166 L1523.55 735.166 L1523.05 735.166 L1522.56 735.166 L1522.06 735.166 L1521.57 735.166 L1521.07 735.166 L1520.58 735.166 L1520.08 735.166 L1519.58 735.166 L1519.09 735.166 L1518.59 735.166 L1518.1 735.166 L1517.6 735.166 L1517.11 735.166 L1516.61 735.166 L1516.12 735.166 L1515.62 735.166 L1515.12 735.166 L1514.63 735.166 L1514.13 735.166 L1513.64 735.166 L1513.14 735.166 L1512.65 735.166 L1512.15 735.166 L1511.66 735.166 L1511.16 735.166 L1510.67 735.166 L1510.17 735.166 L1509.67 735.166 L1509.18 735.166 L1508.68 735.166 L1508.19 735.166 L1507.69 735.166 L1507.2 735.166 L1506.7 735.166 L1506.21 735.166 L1505.71 735.166 L1505.22 735.166 L1504.72 735.166 L1504.22 735.166 L1503.73 735.166 L1503.23 735.166 L1502.74 735.166 L1502.24 735.166 L1501.75 735.166 L1501.25 735.166 L1500.76 735.166 L1500.26 735.166 L1499.76 735.166 L1499.27 735.166 L1498.77 735.166 L1498.28 735.166 L1497.78 735.166 L1497.29 735.166 L1496.79 735.166 L1496.3 735.166 L1495.8 735.166 L1495.31 735.166 L1494.81 735.166 L1494.31 735.166 L1493.82 735.166 L1493.32 735.166 L1492.83 735.166 L1492.33 735.166 L1491.84 735.166 L1491.34 735.166 L1490.85 735.166 L1490.35 735.166 L1489.86 735.166 L1489.36 735.166 L1488.86 735.166 L1488.37 735.166 L1487.87 735.166 L1487.38 735.166 L1486.88 735.166 L1486.39 735.166 L1485.89 735.166 L1485.4 735.166 L1484.9 735.166 L1484.41 735.166 L1483.91 735.166 L1483.41 735.166 L1482.92 735.166 L1482.42 735.166 L1481.93 735.166 L1481.43 735.166 L1480.94 735.166 L1480.44 735.166 L1479.95 735.166 L1479.45 735.166 L1478.95 735.166 L1478.46 735.166 L1477.96 735.166 L1477.47 735.166 L1476.97 735.166 L1476.48 735.166 L1475.98 735.166 L1475.49 735.166 L1474.99 735.166 L1474.5 735.166 L1474 735.166 L1473.5 735.166 L1473.01 735.166 L1472.51 735.166 L1472.02 735.166 L1471.52 735.166 L1471.03 735.166 L1470.53 735.166 L1470.04 735.166 L1469.54 735.166 L1469.05 735.166 L1468.55 735.166 L1468.05 735.166 L1467.56 735.166 L1467.06 735.166 L1466.57 735.166 L1466.07 735.166 L1465.58 735.166 L1465.08 735.166 L1464.59 735.166 L1464.09 735.166 L1463.6 735.166 L1463.1 735.166 L1462.6 735.166 L1462.11 735.166 L1461.61 735.166 L1461.12 735.166 L1460.62 735.166 L1460.13 735.166 L1459.63 735.166 L1459.14 735.166 L1458.64 735.166 L1458.14 735.166 L1457.65 735.166 L1457.15 735.166 L1456.66 735.166 L1456.16 735.166 L1455.67 735.166 L1455.17 735.166 L1454.68 735.166 L1454.18 735.166 L1453.69 735.166 L1453.19 735.166 L1452.69 735.166 L1452.2 735.166 L1451.7 735.166 L1451.21 735.166 L1450.71 735.166 L1450.22 735.166 L1449.72 735.166 L1449.23 735.166 L1448.73 735.166 L1448.24 735.166 L1447.74 735.166 L1447.24 735.166 L1446.75 735.166 L1446.25 735.166 L1445.76 735.166 L1445.26 735.166 L1444.77 735.166 L1444.27 735.166 L1443.78 735.166 L1443.28 735.166 L1442.79 735.166 L1442.29 735.166 L1441.79 735.166 L1441.3 735.166 L1440.8 735.166 L1440.31 735.166 L1439.81 735.166 L1439.32 735.166 L1438.82 735.166 L1438.33 735.166 L1437.83 735.166 L1437.33 735.166 L1436.84 735.166 L1436.34 735.166 L1435.85 735.166 L1435.35 735.166 L1434.86 735.166 L1434.36 735.166 L1433.87 735.166 L1433.37 735.166 L1432.88 735.166 L1432.38 735.166 L1431.88 735.166 L1431.39 735.166 L1430.89 735.166 L1430.4 735.166 L1429.9 735.166 L1429.41 735.166 L1428.91 735.166 L1428.42 735.166 L1427.92 735.166 L1427.43 735.166 L1426.93 735.166 L1426.43 735.166 L1425.94 735.166 L1425.44 735.166 L1424.95 735.166 L1424.45 735.166 L1423.96 735.166 L1423.46 735.166 L1422.97 735.166 L1422.47 735.166 L1421.98 735.166 L1421.48 735.166 L1420.98 735.166 L1420.49 735.166 L1419.99 735.166 L1419.5 735.166 L1419 735.166 L1418.51 735.166 L1418.01 735.166 L1417.52 735.166 L1417.02 735.166 L1416.52 735.166 L1416.03 735.166 L1415.53 735.166 L1415.04 735.166 L1414.54 735.166 L1414.05 735.166 L1413.55 735.166 L1413.06 735.166 L1412.56 735.166 L1412.07 735.166 L1411.57 735.166 L1411.07 735.166 L1410.58 735.166 L1410.08 735.166 L1409.59 735.166 L1409.09 735.166 L1408.6 735.166 L1408.1 735.166 L1407.61 735.166 L1407.11 735.166 L1406.62 735.166 L1406.12 735.166 L1405.62 735.166 L1405.13 735.166 L1404.63 735.166 L1404.14 735.166 L1403.64 735.166 L1403.15 735.166 L1402.65 735.166 L1402.16 735.166 L1401.66 735.166 L1401.17 735.166 L1400.67 735.166 L1400.17 735.166 L1399.68 735.166 L1399.18 735.166 L1398.69 735.166 L1398.19 735.166 L1397.7 735.166 L1397.2 735.166 L1396.71 735.166 L1396.21 735.166 L1395.71 735.166 L1395.22 735.166 L1394.72 735.166 L1394.23 735.166 L1393.73 735.166 L1393.24 735.166 L1392.74 735.166 L1392.25 735.166 L1391.75 735.166 L1391.26 735.166 L1390.76 735.166 L1390.26 735.166 L1389.77 735.166 L1389.27 735.166 L1388.78 735.166 L1388.28 735.166 L1387.79 735.166 L1387.29 735.166 L1386.8 735.166 L1386.3 735.166 L1385.81 735.166 L1385.31 735.166 L1384.81 735.166 L1384.32 735.166 L1383.82 735.166 L1383.33 735.166 L1382.83 735.166 L1382.34 735.166 L1381.84 735.166 L1381.35 735.166 L1380.85 735.166 L1380.35 735.166 L1379.86 735.166 L1379.36 735.166 L1378.87 735.166 L1378.37 735.166 L1377.88 735.166 L1377.38 735.166 L1376.89 735.166 L1376.39 735.166 L1375.9 735.166 L1375.4 735.166 L1374.9 735.166 L1374.41 735.166 L1373.91 735.166 L1373.42 735.166 L1372.92 735.166 L1372.43 735.166 L1371.93 735.166 L1371.44 735.166 L1370.94 735.166 L1370.45 735.166 L1369.95 735.166 L1369.45 735.166 L1368.96 735.166 L1368.46 735.166 L1367.97 735.166 L1367.47 735.166 L1366.98 735.166 L1366.48 735.166 L1365.99 735.166 L1365.49 735.166 L1365 735.166 L1364.5 735.166 L1364 735.166 L1363.51 735.166 L1363.01 735.166 L1362.52 735.166 L1362.02 735.166 L1361.53 735.166 L1361.03 735.166 L1360.54 735.166 L1360.04 735.166 L1359.54 735.166 L1359.05 735.166 L1358.55 735.166 L1358.06 735.166 L1357.56 735.166 L1357.07 735.166 L1356.57 735.166 L1356.08 735.166 L1355.58 735.166 L1355.09 735.166 L1354.59 735.166 L1354.09 735.166 L1353.6 735.166 L1353.1 735.166 L1352.61 735.166 L1352.11 735.166 L1351.62 735.166 L1351.12 735.166 L1350.63 735.166 L1350.13 735.166 L1349.64 735.166 L1349.14 735.166 L1348.64 735.166 L1348.15 735.166 L1347.65 735.166 L1347.16 735.166 L1346.66 735.166 L1346.17 735.166 L1345.67 735.166 L1345.18 735.166 L1344.68 735.166 L1344.19 735.166 L1343.69 735.166 L1343.19 735.166 L1342.7 735.166 L1342.2 735.166 L1341.71 735.166 L1341.21 735.166 L1340.72 735.166 L1340.22 735.166 L1339.73 735.166 L1339.23 735.166 L1338.73 735.166 L1338.24 735.166 L1337.74 735.166 L1337.25 735.166 L1336.75 735.166 L1336.26 735.166 L1335.76 735.166 L1335.27 735.166 L1334.77 735.166 L1334.28 735.166 L1333.78 735.166 L1333.28 735.166 L1332.79 735.166 L1332.29 735.166 L1331.8 735.166 L1331.3 735.166 L1330.81 735.166 L1330.31 735.166 L1329.82 735.166 L1329.32 735.166 L1328.83 735.166 L1328.33 735.166 L1327.83 735.166 L1327.34 735.166 L1326.84 735.166 L1326.35 735.166 L1325.85 735.166 L1325.36 735.166 L1324.86 735.166 L1324.37 735.166 L1323.87 735.166 L1323.38 735.166 L1322.88 735.166 L1322.38 735.166 L1321.89 735.166 L1321.39 735.166 L1320.9 735.166 L1320.4 735.166 L1319.91 735.166 L1319.41 735.166 L1318.92 735.166 L1318.42 735.166 L1317.92 735.166 L1317.43 735.166 L1316.93 735.166 L1316.44 735.166 L1315.94 735.166 L1315.45 735.166 L1314.95 735.166 L1314.46 735.166 L1313.96 735.166 L1313.47 735.166 L1312.97 735.166 L1312.47 735.166 L1311.98 735.166 L1311.48 735.166 L1310.99 735.166 L1310.49 735.166 L1310 735.166 L1309.5 735.166 L1309.01 735.166 L1308.51 735.166 L1308.02 735.166 L1307.52 735.166 L1307.02 735.166 L1306.53 735.166 L1306.03 735.166 L1305.54 735.166 L1305.04 735.166 L1304.55 735.166 L1304.05 735.166 L1303.56 735.166 L1303.06 735.166 L1302.57 735.166 L1302.07 735.166 L1301.57 735.166 L1301.08 735.166 L1300.58 735.166 L1300.09 735.166 L1299.59 735.166 L1299.1 735.166 L1298.6 735.166 L1298.11 735.166 L1297.61 735.166 L1297.11 735.166 L1296.62 735.166 L1296.12 735.166 L1295.63 735.166 L1295.13 735.166 L1294.64 735.166 L1294.14 735.166 L1293.65 735.166 L1293.15 735.166 L1292.66 735.166 L1292.16 735.166 L1291.66 735.166 L1291.17 735.166 L1290.67 735.166 L1290.18 735.166 L1289.68 735.166 L1289.19 735.166 L1288.69 735.166 L1288.2 735.166 L1287.7 735.166 L1287.21 735.166 L1286.71 735.166 L1286.21 735.166 L1285.72 735.166 L1285.22 735.166 L1284.73 735.166 L1284.23 735.166 L1283.74 735.166 L1283.24 735.166 L1282.75 735.166 L1282.25 735.166 L1281.76 735.166 L1281.26 735.166 L1280.76 735.166 L1280.27 735.166 L1279.77 735.166 L1279.28 735.166 L1278.78 735.166 L1278.29 735.166 L1277.79 735.166 L1277.3 735.166 L1276.8 735.166 L1276.3 735.166 L1275.81 735.166 L1275.31 735.166 L1274.82 735.166 L1274.32 735.166 L1273.83 735.166 L1273.33 735.166 L1272.84 735.166 L1272.34 735.166 L1271.85 735.166 L1271.35 735.166 L1270.85 735.166 L1270.36 735.166 L1269.86 735.166 L1269.37 735.166 L1268.87 735.166 L1268.38 735.166 L1267.88 735.166 L1267.39 735.166 L1266.89 735.166 L1266.4 735.166 L1265.9 735.166 L1265.4 735.166 L1264.91 735.166 L1264.41 735.166 L1263.92 735.166 L1263.42 735.166 L1262.93 735.166 L1262.43 735.166 L1261.94 735.166 L1261.44 735.166 L1260.95 735.166 L1260.45 735.166 L1259.95 735.166 L1259.46 735.166 L1258.96 735.166 L1258.47 735.166 L1257.97 735.166 L1257.48 735.166 L1256.98 735.166 L1256.49 735.166 L1255.99 735.166 L1255.49 735.166 L1255 735.166 L1254.5 735.166 L1254.01 735.166 L1253.51 735.166 L1253.02 735.166 L1252.52 735.166 L1252.03 735.166 L1251.53 735.166 L1251.04 735.166 L1250.54 735.166 L1250.04 735.166 L1249.55 735.166 L1249.05 735.166 L1248.56 735.166 L1248.06 735.166 L1247.57 735.166 L1247.07 735.166 L1246.58 735.166 L1246.08 735.166 L1245.59 735.166 L1245.09 735.166 L1244.59 735.166 L1244.1 735.166 L1243.6 735.166 L1243.11 735.166 L1242.61 735.166 L1242.12 735.166 L1241.62 735.166 L1241.13 735.166 L1240.63 735.166 L1240.13 735.166 L1239.64 735.166 L1239.14 735.166 L1238.65 735.166 L1238.15 735.166 L1237.66 735.166 L1237.16 735.166 L1236.67 735.166 L1236.17 735.166 L1235.68 735.166 L1235.18 735.166 L1234.68 735.166 L1234.19 735.166 L1233.69 735.166 L1233.2 735.166 L1232.7 735.166 L1232.21 735.166 L1231.71 735.166 L1231.22 735.166 L1230.72 735.166 L1230.23 735.166 L1229.73 735.166 L1229.23 735.166 L1228.74 735.166 L1228.24 735.166 L1227.75 735.166 L1227.25 735.166 L1226.76 735.166 L1226.26 735.166 L1225.77 735.166 L1225.27 735.166 L1224.78 735.166 L1224.28 735.166 L1223.78 735.166 L1223.29 735.166 L1222.79 735.166 L1222.3 735.166 L1221.8 735.166 L1221.31 735.166 L1220.81 735.166 L1220.32 735.166 L1219.82 735.166 L1219.32 735.166 L1218.83 735.166 L1218.33 735.166 L1217.84 735.166 L1217.34 735.166 L1216.85 735.166 L1216.35 735.166 L1215.86 735.166 L1215.36 735.166 L1214.87 735.166 L1214.37 735.166 L1213.87 735.166 L1213.38 735.166 L1212.88 735.166 L1212.39 735.166 L1211.89 735.166 L1211.4 735.166 L1210.9 735.166 L1210.41 735.166 L1209.91 735.166 L1209.42 735.166 L1208.92 735.166 L1208.42 735.166 L1207.93 735.166 L1207.43 735.166 L1206.94 735.166 L1206.44 735.166 L1205.95 735.166 L1205.45 735.166 L1204.96 735.166 L1204.46 735.166 L1203.97 735.166 L1203.47 735.166 L1202.97 735.166 L1202.48 735.166 L1201.98 735.166 L1201.49 735.166 L1200.99 735.166 L1200.5 735.166 L1200 735.166 L1199.51 735.166 L1199.01 735.166 L1198.51 735.166 L1198.02 735.166 L1197.52 735.166 L1197.03 735.166 L1196.53 735.166 L1196.04 735.166 L1195.54 735.166 L1195.05 735.166 L1194.55 735.166 L1194.06 735.166 L1193.56 735.166 L1193.06 735.166 L1192.57 735.166 L1192.07 735.166 L1191.58 735.166 L1191.08 735.166 L1190.59 735.166 L1190.09 735.166 L1189.6 735.166 L1189.1 735.166 L1188.61 735.166 L1188.11 735.166 L1187.61 735.166 L1187.12 735.166 L1186.62 735.166 L1186.13 735.166 L1185.63 735.166 L1185.14 735.166 L1184.64 735.166 L1184.15 735.166 L1183.65 735.166 L1183.16 735.166 L1182.66 735.166 L1182.16 735.166 L1181.67 735.166 L1181.17 735.166 L1180.68 735.166 L1180.18 735.166 L1179.69 735.166 L1179.19 735.166 L1178.7 735.166 L1178.2 735.166 L1177.7 735.166 L1177.21 735.166 L1176.71 735.166 L1176.22 735.166 L1175.72 735.166 L1175.23 735.166 L1174.73 735.166 L1174.24 735.166 L1173.74 735.166 L1173.25 735.166 L1172.75 735.166 L1172.25 735.166 L1171.76 735.166 L1171.26 735.166 L1170.77 735.166 L1170.27 735.166 L1169.78 735.166 L1169.28 735.166 L1168.79 735.166 L1168.29 735.166 L1167.8 735.166 L1167.3 735.166 L1166.8 735.166 L1166.31 735.166 L1165.81 735.166 L1165.32 735.166 L1164.82 735.166 L1164.33 735.166 L1163.83 735.166 L1163.34 735.166 L1162.84 735.166 L1162.35 735.166 L1161.85 735.166 L1161.35 735.166 L1160.86 735.166 L1160.36 735.166 L1159.87 735.166 L1159.37 735.166 L1158.88 735.166 L1158.38 735.166 L1157.89 735.166 L1157.39 735.166 L1156.89 735.166 L1156.4 735.166 L1155.9 735.166 L1155.41 735.166 L1154.91 735.166 L1154.42 735.166 L1153.92 735.166 L1153.43 735.166 L1152.93 735.166 L1152.44 735.166 L1151.94 735.166 L1151.44 735.166 L1150.95 735.166 L1150.45 735.166 L1149.96 735.166 L1149.46 735.166 L1148.97 735.166 L1148.47 735.166 L1147.98 735.166 L1147.48 735.166 L1146.99 735.166 L1146.49 735.166 L1145.99 735.166 L1145.5 735.166 L1145 735.166 L1144.51 735.166 L1144.01 735.166 L1143.52 735.166 L1143.02 735.166 L1142.53 735.166 L1142.03 735.166 L1141.54 735.166 L1141.04 735.166 L1140.54 735.166 L1140.05 735.166 L1139.55 735.166 L1139.06 735.166 L1138.56 735.166 L1138.07 735.166 L1137.57 735.166 L1137.08 735.166 L1136.58 735.166 L1136.08 735.166 L1135.59 735.166 L1135.09 735.166 L1134.6 735.166 L1134.1 735.166 L1133.61 735.166 L1133.11 735.166 L1132.62 735.166 L1132.12 735.166 L1131.63 735.166 L1131.13 735.166 L1130.63 735.166 L1130.14 735.166 L1129.64 735.166 L1129.15 735.166 L1128.65 735.166 L1128.16 735.166 L1127.66 735.166 L1127.17 735.166 L1126.67 735.166 L1126.18 735.166 L1125.68 735.166 L1125.18 735.166 L1124.69 735.166 L1124.19 735.166 L1123.7 735.166 L1123.2 735.166 L1122.71 735.166 L1122.21 735.166 L1121.72 735.166 L1121.22 735.166 L1120.72 735.166 L1120.23 735.166 L1119.73 735.166 L1119.24 735.166 L1118.74 735.166 L1118.25 735.166 L1117.75 735.166 L1117.26 735.166 L1116.76 735.166 L1116.27 735.166 L1115.77 735.166 L1115.27 735.166 L1114.78 735.166 L1114.28 735.166 L1113.79 735.166 L1113.29 735.166 L1112.8 735.166 L1112.3 735.166 L1111.81 735.166 L1111.31 735.166 L1110.82 735.166 L1110.32 735.166 L1109.82 735.166 L1109.33 735.166 L1108.83 735.166 L1108.34 735.166 L1107.84 735.166 L1107.35 735.166 L1106.85 735.166 L1106.36 735.166 L1105.86 735.166 L1105.37 735.166 L1104.87 735.166 L1104.37 735.166 L1103.88 735.166 L1103.38 735.166 L1102.89 735.166 L1102.39 735.166 L1101.9 735.166 L1101.4 735.166 L1100.91 735.166 L1100.41 735.166 L1099.91 735.166 L1099.42 735.166 L1098.92 735.166 L1098.43 735.166 L1097.93 735.166 L1097.44 735.166 L1096.94 735.166 L1096.45 735.166 L1095.95 735.166 L1095.46 735.166 L1094.96 735.166 L1094.46 735.166 L1093.97 735.166 L1093.47 735.166 L1092.98 735.166 L1092.48 735.166 L1091.99 735.166 L1091.49 735.166 L1091 735.166 L1090.5 735.166 L1090.01 735.166 L1089.51 735.166 L1089.01 735.166 L1088.52 735.166 L1088.02 735.166 L1087.53 735.166 L1087.03 735.166 L1086.54 735.166 L1086.04 735.166 L1085.55 735.166 L1085.05 735.166 L1084.56 735.166 L1084.06 735.166 L1083.56 735.166 L1083.07 735.166 L1082.57 735.166 L1082.08 735.166 L1081.58 735.166 L1081.09 735.166 L1080.59 735.166 L1080.1 735.166 L1079.6 735.166 L1079.1 735.166 L1078.61 735.166 L1078.11 735.166 L1077.62 735.166 L1077.12 735.166 L1076.63 735.166 L1076.13 735.166 L1075.64 735.166 L1075.14 735.166 L1074.65 735.166 L1074.15 735.166 L1073.65 735.166 L1073.16 735.166 L1072.66 735.166 L1072.17 735.166 L1071.67 735.166 L1071.18 735.166 L1070.68 735.166 L1070.19 735.166 L1069.69 735.166 L1069.2 735.166 L1068.7 735.166 L1068.2 735.166 L1067.71 735.166 L1067.21 735.166 L1066.72 735.166 L1066.22 735.166 L1065.73 735.166 L1065.23 735.166 L1064.74 735.166 L1064.24 735.166 L1063.75 735.166 L1063.25 735.166 L1062.75 735.166 L1062.26 735.166 L1061.76 735.166 L1061.27 735.166 L1060.77 735.166 L1060.28 735.166 L1059.78 735.166 L1059.29 735.166 L1058.79 735.166 L1058.29 735.166 L1057.8 735.166 L1057.3 735.166 L1056.81 735.166 L1056.31 735.166 L1055.82 735.166 L1055.32 735.166 L1054.83 735.166 L1054.33 735.166 L1053.84 735.166 L1053.34 735.166 L1052.84 735.166 L1052.35 735.166 L1051.85 735.166 L1051.36 735.166 L1050.86 735.166 L1050.37 735.166 L1049.87 735.166 L1049.38 735.166 L1048.88 735.166 L1048.39 735.166 L1047.89 735.166 L1047.39 735.166 L1046.9 735.166 L1046.4 735.166 L1045.91 735.166 L1045.41 735.166 L1044.92 735.166 L1044.42 735.166 L1043.93 735.166 L1043.43 735.166 L1042.94 735.166 L1042.44 735.166 L1041.94 735.166 L1041.45 735.166 L1040.95 735.166 L1040.46 735.166 L1039.96 735.166 L1039.47 735.166 L1038.97 735.166 L1038.48 735.166 L1037.98 735.166 L1037.48 735.166 L1036.99 735.166 L1036.49 735.166 L1036 735.166 L1035.5 735.166 L1035.01 735.166 L1034.51 735.166 L1034.02 735.166 L1033.52 735.166 L1033.03 735.166 L1032.53 735.166 L1032.03 735.166 L1031.54 735.166 L1031.04 735.166 L1030.55 735.166 L1030.05 735.166 L1029.56 735.166 L1029.06 735.166 L1028.57 735.166 L1028.07 735.166 L1027.58 735.166 L1027.08 735.166 L1026.58 735.166 L1026.09 735.166 L1025.59 735.166 L1025.1 735.166 L1024.6 735.166 L1024.11 735.166 L1023.61 735.166 L1023.12 735.166 L1022.62 735.166 L1022.13 735.166 L1021.63 735.166 L1021.13 735.166 L1020.64 735.166 L1020.14 735.166 L1019.65 735.166 L1019.15 735.166 L1018.66 735.166 L1018.16 735.166 L1017.67 735.166 L1017.17 735.166 L1016.67 735.166 L1016.18 735.166 L1015.68 735.166 L1015.19 735.166 L1014.69 735.166 L1014.2 735.166 L1013.7 735.166 L1013.21 735.166 L1012.71 735.166 L1012.22 735.166 L1011.72 735.166 L1011.22 735.166 L1010.73 735.166 L1010.23 735.166 L1009.74 735.166 L1009.24 735.166 L1008.75 735.166 L1008.25 735.166 L1007.76 735.166 L1007.26 735.166 L1006.77 735.166 L1006.27 735.166 L1005.77 735.166 L1005.28 735.166 L1004.78 735.166 L1004.29 735.166 L1003.79 735.166 L1003.3 735.166 L1002.8 735.166 L1002.31 735.166 L1001.81 735.166 L1001.31 735.166 L1000.82 735.166 L1000.32 735.166 L999.829 735.166 L999.333 735.166 L998.838 735.166 L998.342 735.166 L997.847 735.166 L997.351 735.166 L996.856 735.166 L996.36 735.166 L995.865 735.166 L995.369 735.166 L994.874 735.166 L994.378 735.166 L993.883 735.166 L993.387 735.166 L992.892 735.166 L992.396 735.166 L991.901 735.166 L991.405 735.166 L990.91 735.166 L990.414 735.166 L989.919 735.166 L989.424 735.166 L988.928 735.166 L988.433 735.166 L987.937 735.166 L987.442 735.166 L986.946 735.166 L986.451 735.166 L985.955 735.166 L985.46 735.166 L984.964 735.166 L984.469 735.166 L983.973 735.166 L983.478 735.166 L982.982 735.166 L982.487 735.166 L981.991 735.166 L981.496 735.166 L981 735.166 L980.505 735.166 L980.009 735.166 L979.514 735.166 L979.018 735.166 L978.523 735.166 L978.028 735.166 L977.532 735.166 L977.037 735.166 L976.541 735.166 L976.046 735.166 L975.55 735.166 L975.055 735.166 L974.559 735.166 L974.064 735.166 L973.568 735.166 L973.073 735.166 L972.577 735.166 L972.082 735.166 L971.586 735.166 L971.091 735.166 L970.595 735.166 L970.1 735.166 L969.604 735.166 L969.109 735.166 L968.613 735.166 L968.118 735.166 L967.623 735.166 L967.127 735.166 L966.632 735.166 L966.136 735.166 L965.641 735.166 L965.145 735.166 L964.65 735.166 L964.154 735.166 L963.659 735.166 L963.163 735.166 L962.668 735.166 L962.172 735.166 L961.677 735.166 L961.181 735.166 L960.686 735.166 L960.19 735.166 L959.695 735.166 L959.199 735.166 L958.704 735.166 L958.208 735.166 L957.713 735.166 L957.217 735.166 L956.722 735.166 L956.227 735.166 L955.731 735.166 L955.236 735.166 L954.74 735.166 L954.245 735.166 L953.749 735.166 L953.254 735.166 L952.758 735.166 L952.263 735.166 L951.767 735.166 L951.272 735.166 L950.776 735.166 L950.281 735.166 L949.785 735.166 L949.29 735.166 L948.794 735.166 L948.299 735.166 L947.803 735.166 L947.308 735.166 L946.812 735.166 L946.317 735.166 L945.822 735.166 L945.326 735.166 L944.831 735.166 L944.335 735.166 L943.84 735.166 L943.344 735.166 L942.849 735.166 L942.353 735.166 L941.858 735.166 L941.362 735.166 L940.867 735.166 L940.371 735.166 L939.876 735.166 L939.38 735.166 L938.885 735.166 L938.389 735.166 L937.894 735.166 L937.398 735.166 L936.903 735.166 L936.407 735.166 L935.912 735.166 L935.417 735.166 L934.921 735.166 L934.426 735.166 L933.93 735.166 L933.435 735.166 L932.939 735.166 L932.444 735.166 L931.948 735.166 L931.453 735.166 L930.957 735.166 L930.462 735.166 L929.966 735.166 L929.471 735.166 L928.975 735.166 L928.48 735.166 L927.984 735.166 L927.489 735.166 L926.993 735.166 L926.498 735.166 L926.002 735.166 L925.507 735.166 L925.011 735.166 L924.516 735.166 L924.021 735.166 L923.525 735.166 L923.03 735.166 L922.534 735.166 L922.039 735.166 L921.543 735.166 L921.048 735.166 L920.552 735.166 L920.057 735.166 L919.561 735.166 L919.066 735.166 L918.57 735.166 L918.075 735.166 L917.579 735.166 L917.084 735.166 L916.588 735.166 L916.093 735.166 L915.597 735.166 L915.102 735.166 L914.606 735.166 L914.111 735.166 L913.616 735.166 L913.12 735.166 L912.625 735.166 L912.129 735.166 L911.634 735.166 L911.138 735.166 L910.643 735.166 L910.147 735.166 L909.652 735.166 L909.156 735.166 L908.661 735.166 L908.165 735.166 L907.67 735.166 L907.174 735.166 L906.679 735.166 L906.183 735.166 L905.688 735.166 L905.192 735.166 L904.697 735.166 L904.201 735.166 L903.706 735.166 L903.21 735.166 L902.715 735.166 L902.22 735.166 L901.724 735.166 L901.229 735.166 L900.733 735.166 L900.238 735.166 L899.742 735.166 L899.247 735.166 L898.751 735.166 L898.256 735.166 L897.76 735.166 L897.265 735.166 L896.769 735.166 L896.274 735.166 L895.778 735.166 L895.283 735.166 L894.787 735.166 L894.292 735.166 L893.796 735.166 L893.301 735.166 L892.805 735.166 L892.31 735.166 L891.815 735.166 L891.319 735.166 L890.824 735.166 L890.328 735.166 L889.833 735.166 L889.337 735.166 L888.842 735.166 L888.346 735.166 L887.851 735.166 L887.355 735.166 L886.86 735.166 L886.364 735.166 L885.869 735.166 L885.373 735.166 L884.878 735.166 L884.382 735.166 L883.887 735.166 L883.391 735.166 L882.896 735.166 L882.4 735.166 L881.905 735.166 L881.409 735.166 L880.914 735.166 L880.419 735.166 L879.923 735.166 L879.428 735.166 L878.932 735.166 L878.437 735.166 L877.941 735.166 L877.446 735.166 L876.95 735.166 L876.455 735.166 L875.959 735.166 L875.464 735.166 L874.968 735.166 L874.473 735.166 L873.977 735.166 L873.482 735.166 L872.986 735.166 L872.491 735.166 L871.995 735.166 L871.5 735.166 L871.004 735.166 L870.509 735.166 L870.014 735.166 L869.518 735.166 L869.023 735.166 L868.527 735.166 L868.032 735.166 L867.536 735.166 L867.041 735.166 L866.545 735.166 L866.05 735.166 L865.554 735.166 L865.059 735.166 L864.563 735.166 L864.068 735.166 L863.572 735.166 L863.077 735.166 L862.581 735.166 L862.086 735.166 L861.59 735.166 L861.095 735.166 L860.599 735.166 L860.104 735.166 L859.608 735.166 L859.113 735.166 L858.618 735.166 L858.122 735.166 L857.627 735.166 L857.131 735.166 L856.636 735.166 L856.14 735.166 L855.645 735.166 L855.149 735.166 L854.654 735.166 L854.158 735.166 L853.663 735.166 L853.167 735.166 L852.672 735.166 L852.176 735.166 L851.681 735.166 L851.185 735.166 L850.69 735.166 L850.194 735.166 L849.699 735.166 L849.203 735.166 L848.708 735.166 L848.213 735.166 L847.717 735.166 L847.222 735.166 L846.726 735.166 L846.231 735.166 L845.735 735.166 L845.24 735.166 L844.744 735.166 L844.249 735.166 L843.753 735.166 L843.258 735.166 L842.762 735.166 L842.267 735.166 L841.771 735.166 L841.276 735.166 L840.78 735.166 L840.285 735.166 L839.789 735.166 L839.294 735.166 L838.798 735.166 L838.303 735.166 L837.808 735.166 L837.312 735.166 L836.817 735.166 L836.321 735.166 L835.826 735.166 L835.33 735.166 L834.835 735.166 L834.339 735.166 L833.844 735.166 L833.348 735.166 L832.853 735.166 L832.357 735.166 L831.862 735.166 L831.366 735.166 L830.871 735.166 L830.375 735.166 L829.88 735.166 L829.384 735.166 L828.889 735.166 L828.393 735.166 L827.898 735.166 L827.402 735.166 L826.907 735.166 L826.412 735.166 L825.916 735.166 L825.421 735.166 L824.925 735.166 L824.43 735.166 L823.934 735.166 L823.439 735.166 L822.943 735.166 L822.448 735.166 L821.952 735.166 L821.457 735.166 L820.961 735.166 L820.466 735.166 L819.97 735.166 L819.475 735.166 L818.979 735.166 L818.484 735.166 L817.988 735.166 L817.493 735.166 L816.997 735.166 L816.502 735.166 L816.007 735.166 L815.511 735.166 L815.016 735.166 L814.52 735.166 L814.025 735.166 L813.529 735.166 L813.034 735.166 L812.538 735.166 L812.043 735.166 L811.547 735.166 L811.052 735.166 L810.556 735.166 L810.061 735.166 L809.565 735.166 L809.07 735.166 L808.574 735.166 L808.079 735.166 L807.583 735.166 L807.088 735.166 L806.592 735.166 L806.097 735.166 L805.601 735.166 L805.106 735.166 L804.611 735.166 L804.115 735.166 L803.62 735.166 L803.124 735.166 L802.629 735.166 L802.133 735.166 L801.638 735.166 L801.142 735.166 L800.647 735.166 L800.151 735.166 L799.656 735.166 L799.16 735.166 L798.665 735.166 L798.169 735.166 L797.674 735.166 L797.178 735.166 L796.683 735.166 L796.187 735.166 L795.692 735.166 L795.196 735.166 L794.701 735.166 L794.206 735.166 L793.71 735.166 L793.215 735.166 L792.719 735.166 L792.224 735.166 L791.728 735.166 L791.233 735.166 L790.737 735.166 L790.242 735.166 L789.746 735.166 L789.251 735.166 L788.755 735.166 L788.26 735.166 L787.764 735.166 L787.269 735.166 L786.773 735.166 L786.278 735.166 L785.782 735.166 L785.287 735.166 L784.791 735.166 L784.296 735.166 L783.8 735.166 L783.305 735.166 L782.81 735.166 L782.314 735.166 L781.819 735.166 L781.323 735.166 L780.828 735.166 L780.332 735.166 L779.837 735.166 L779.341 735.166 L778.846 735.166 L778.35 735.166 L777.855 735.166 L777.359 735.166 L776.864 735.166 L776.368 735.166 L775.873 735.166 L775.377 735.166 L774.882 735.166 L774.386 735.166 L773.891 735.166 L773.395 735.166 L772.9 735.166 L772.405 735.166 L771.909 735.166 L771.414 735.166 L770.918 735.166 L770.423 735.166 L769.927 735.166 L769.432 735.166 L768.936 735.166 L768.441 735.166 L767.945 735.166 L767.45 735.166 L766.954 735.166 L766.459 735.166 L765.963 735.166 L765.468 735.166 L764.972 735.166 L764.477 735.166 L763.981 735.166 L763.486 735.166 L762.99 735.166 L762.495 735.166 L761.999 735.166 L761.504 735.166 L761.009 735.166 L760.513 735.166 L760.018 735.166 L759.522 735.166 L759.027 735.166 L758.531 735.166 L758.036 735.166 L757.54 735.166 L757.045 735.166 L756.549 735.166 L756.054 735.166 L755.558 735.166 L755.063 735.166 L754.567 735.166 L754.072 735.166 L753.576 735.166 L753.081 735.166 L752.585 735.166 L752.09 735.166 L751.594 735.166 L751.099 735.166 L750.604 735.166 L750.108 735.166 L749.613 735.166 L749.117 735.166 L748.622 735.166 L748.126 735.166 L747.631 735.166 L747.135 735.166 L746.64 735.166 L746.144 735.166 L745.649 735.166 L745.153 735.166 L744.658 735.166 L744.162 735.166 L743.667 735.166 L743.171 735.166 L742.676 735.166 L742.18 735.166 L741.685 735.166 L741.189 735.166 L740.694 735.166 L740.199 735.166 L739.703 735.166 L739.208 735.166 L738.712 735.166 L738.217 735.166 L737.721 735.166 L737.226 735.166 L736.73 735.166 L736.235 735.166 L735.739 735.166 L735.244 735.166 L734.748 735.166 L734.253 735.166 L733.757 735.166 L733.262 735.166 L732.766 735.166  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip293)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"732.766,735.822 733.262,735.822 733.757,735.822 734.253,735.822 734.748,735.822 735.244,735.822 735.739,735.822 736.235,735.822 736.73,735.822 737.226,735.822 737.721,735.822 738.217,735.822 738.712,735.822 739.208,735.822 739.703,735.822 740.199,735.822 740.694,735.822 741.189,735.822 741.685,735.822 742.18,735.822 742.676,735.822 743.171,735.822 743.667,735.822 744.162,735.822 744.658,735.822 745.153,735.822 745.649,735.822 746.144,735.822 746.64,735.822 747.135,735.822 747.631,735.822 748.126,735.822 748.622,735.822 749.117,735.822 749.613,735.822 750.108,735.822 750.604,735.822 751.099,735.822 751.594,735.822 752.09,735.822 752.585,735.822 753.081,735.822 753.576,735.822 754.072,735.822 754.567,735.822 755.063,735.822 755.558,735.822 756.054,735.822 756.549,735.822 757.045,735.822 757.54,735.822 758.036,735.822 758.531,735.822 759.027,735.822 759.522,735.822 760.018,735.822 760.513,735.822 761.009,735.822 761.504,735.822 761.999,735.822 762.495,735.822 762.99,735.822 763.486,735.822 763.981,735.822 764.477,735.822 764.972,735.822 765.468,735.822 765.963,735.822 766.459,735.822 766.954,735.822 767.45,735.822 767.945,735.822 768.441,735.822 768.936,735.822 769.432,735.822 769.927,735.822 770.423,735.822 770.918,735.822 771.414,735.822 771.909,735.822 772.405,735.822 772.9,735.822 773.395,735.822 773.891,735.822 774.386,735.822 774.882,735.822 775.377,735.822 775.873,735.822 776.368,735.822 776.864,735.822 777.359,735.822 777.855,735.822 778.35,735.822 778.846,735.822 779.341,735.822 779.837,735.822 780.332,735.822 780.828,735.822 781.323,735.822 781.819,735.822 782.314,735.822 782.81,735.822 783.305,735.822 783.8,735.822 784.296,735.822 784.791,735.822 785.287,735.822 785.782,735.822 786.278,735.822 786.773,735.822 787.269,735.822 787.764,735.822 788.26,735.822 788.755,735.822 789.251,735.822 789.746,735.822 790.242,735.822 790.737,735.822 791.233,735.822 791.728,735.822 792.224,735.822 792.719,735.822 793.215,735.822 793.71,735.822 794.206,735.822 794.701,735.822 795.196,735.822 795.692,735.822 796.187,735.822 796.683,735.822 797.178,735.822 797.674,735.822 798.169,735.822 798.665,735.822 799.16,735.822 799.656,735.822 800.151,735.822 800.647,735.822 801.142,735.822 801.638,735.822 802.133,735.822 802.629,735.822 803.124,735.822 803.62,735.822 804.115,735.822 804.611,735.822 805.106,735.822 805.601,735.822 806.097,735.822 806.592,735.822 807.088,735.822 807.583,735.822 808.079,735.822 808.574,735.822 809.07,735.822 809.565,735.822 810.061,735.822 810.556,735.822 811.052,735.822 811.547,735.822 812.043,735.822 812.538,735.822 813.034,735.822 813.529,735.822 814.025,735.822 814.52,735.822 815.016,735.822 815.511,735.822 816.007,735.822 816.502,735.822 816.997,735.822 817.493,735.822 817.988,735.822 818.484,735.822 818.979,735.822 819.475,735.822 819.97,735.822 820.466,735.822 820.961,735.822 821.457,735.822 821.952,735.822 822.448,735.822 822.943,735.822 823.439,735.822 823.934,735.822 824.43,735.822 824.925,735.822 825.421,735.822 825.916,735.822 826.412,735.822 826.907,735.822 827.402,735.822 827.898,735.822 828.393,735.822 828.889,735.822 829.384,735.822 829.88,735.822 830.375,735.822 830.871,735.822 831.366,735.822 831.862,735.822 832.357,735.822 832.853,735.822 833.348,735.822 833.844,735.822 834.339,735.822 834.835,735.822 835.33,735.822 835.826,735.822 836.321,735.822 836.817,735.822 837.312,735.822 837.808,735.822 838.303,735.822 838.798,735.822 839.294,735.822 839.789,735.822 840.285,735.822 840.78,735.822 841.276,735.822 841.771,735.822 842.267,735.822 842.762,735.822 843.258,735.822 843.753,735.822 844.249,735.822 844.744,735.822 845.24,735.822 845.735,735.822 846.231,735.822 846.726,735.822 847.222,735.822 847.717,735.822 848.213,735.822 848.708,735.822 849.203,735.822 849.699,735.822 850.194,735.822 850.69,735.822 851.185,735.822 851.681,735.822 852.176,735.822 852.672,735.822 853.167,735.822 853.663,735.822 854.158,735.822 854.654,735.822 855.149,735.822 855.645,735.822 856.14,735.822 856.636,735.822 857.131,735.822 857.627,735.822 858.122,735.822 858.618,735.822 859.113,735.822 859.608,735.822 860.104,735.822 860.599,735.822 861.095,735.822 861.59,735.822 862.086,735.822 862.581,735.822 863.077,735.822 863.572,735.822 864.068,735.822 864.563,735.822 865.059,735.822 865.554,735.822 866.05,735.822 866.545,735.822 867.041,735.822 867.536,735.822 868.032,735.822 868.527,735.822 869.023,735.822 869.518,735.822 870.014,735.822 870.509,735.822 871.004,735.822 871.5,735.822 871.995,735.822 872.491,735.822 872.986,735.822 873.482,735.822 873.977,735.822 874.473,735.822 874.968,735.822 875.464,735.822 875.959,735.822 876.455,735.822 876.95,735.822 877.446,735.822 877.941,735.822 878.437,735.822 878.932,735.822 879.428,735.822 879.923,735.822 880.419,735.822 880.914,735.822 881.409,735.822 881.905,735.822 882.4,735.822 882.896,735.822 883.391,735.822 883.887,735.822 884.382,735.822 884.878,735.822 885.373,735.822 885.869,735.822 886.364,735.822 886.86,735.822 887.355,735.822 887.851,735.822 888.346,735.822 888.842,735.822 889.337,735.822 889.833,735.822 890.328,735.822 890.824,735.822 891.319,735.822 891.815,735.822 892.31,735.822 892.805,735.822 893.301,735.822 893.796,735.822 894.292,735.822 894.787,735.822 895.283,735.822 895.778,735.822 896.274,735.822 896.769,735.822 897.265,735.822 897.76,735.822 898.256,735.822 898.751,735.822 899.247,735.822 899.742,735.822 900.238,735.822 900.733,735.822 901.229,735.822 901.724,735.822 902.22,735.822 902.715,735.822 903.21,735.822 903.706,735.822 904.201,735.822 904.697,735.822 905.192,735.822 905.688,735.822 906.183,735.822 906.679,735.822 907.174,735.822 907.67,735.822 908.165,735.822 908.661,735.822 909.156,735.822 909.652,735.822 910.147,735.822 910.643,735.822 911.138,735.822 911.634,735.822 912.129,735.822 912.625,735.822 913.12,735.822 913.616,735.822 914.111,735.822 914.606,735.822 915.102,735.822 915.597,735.822 916.093,735.822 916.588,735.822 917.084,735.822 917.579,735.822 918.075,735.822 918.57,735.822 919.066,735.822 919.561,735.822 920.057,735.822 920.552,735.822 921.048,735.822 921.543,735.822 922.039,735.822 922.534,735.822 923.03,735.822 923.525,735.822 924.021,735.822 924.516,735.822 925.011,735.822 925.507,735.822 926.002,735.822 926.498,735.822 926.993,735.822 927.489,735.822 927.984,735.822 928.48,735.822 928.975,735.822 929.471,735.822 929.966,735.822 930.462,735.822 930.957,735.822 931.453,735.822 931.948,735.822 932.444,735.822 932.939,735.822 933.435,735.822 933.93,735.822 934.426,735.822 934.921,735.822 935.417,735.822 935.912,735.822 936.407,735.822 936.903,735.822 937.398,735.822 937.894,735.822 938.389,735.822 938.885,735.822 939.38,735.822 939.876,735.822 940.371,735.822 940.867,735.822 941.362,735.822 941.858,735.822 942.353,735.822 942.849,735.822 943.344,735.822 943.84,735.822 944.335,735.822 944.831,735.822 945.326,735.822 945.822,735.822 946.317,735.822 946.812,735.822 947.308,735.822 947.803,735.822 948.299,735.822 948.794,735.822 949.29,735.822 949.785,735.822 950.281,735.822 950.776,735.822 951.272,735.822 951.767,735.822 952.263,735.822 952.758,735.822 953.254,735.822 953.749,735.822 954.245,735.822 954.74,735.822 955.236,735.822 955.731,735.822 956.227,735.822 956.722,735.822 957.217,735.822 957.713,735.822 958.208,735.822 958.704,735.822 959.199,735.822 959.695,735.822 960.19,735.822 960.686,735.822 961.181,735.822 961.677,735.822 962.172,735.822 962.668,735.822 963.163,735.822 963.659,735.822 964.154,735.822 964.65,735.822 965.145,735.822 965.641,735.822 966.136,735.822 966.632,735.822 967.127,735.822 967.623,735.822 968.118,735.822 968.613,735.822 969.109,735.822 969.604,735.822 970.1,735.822 970.595,735.822 971.091,735.822 971.586,735.822 972.082,735.822 972.577,735.822 973.073,735.822 973.568,735.822 974.064,735.822 974.559,735.822 975.055,735.822 975.55,735.822 976.046,735.822 976.541,735.822 977.037,735.822 977.532,735.822 978.028,735.822 978.523,735.822 979.018,735.822 979.514,735.822 980.009,735.822 980.505,735.822 981,735.822 981.496,735.822 981.991,735.822 982.487,735.822 982.982,735.822 983.478,735.822 983.973,735.822 984.469,735.822 984.964,735.822 985.46,735.822 985.955,735.822 986.451,735.822 986.946,735.822 987.442,735.822 987.937,735.822 988.433,735.822 988.928,735.822 989.424,735.822 989.919,735.822 990.414,735.822 990.91,735.822 991.405,735.822 991.901,735.822 992.396,735.822 992.892,735.822 993.387,735.822 993.883,735.822 994.378,735.822 994.874,735.822 995.369,735.822 995.865,735.822 996.36,735.822 996.856,735.822 997.351,735.822 997.847,735.822 998.342,735.822 998.838,735.822 999.333,735.822 999.829,735.822 1000.32,735.822 1000.82,735.822 1001.31,735.822 1001.81,735.822 1002.31,735.822 1002.8,735.822 1003.3,735.822 1003.79,735.822 1004.29,735.822 1004.78,735.822 1005.28,735.822 1005.77,735.822 1006.27,735.822 1006.77,735.822 1007.26,735.822 1007.76,735.822 1008.25,735.822 1008.75,735.822 1009.24,735.822 1009.74,735.822 1010.23,735.822 1010.73,735.822 1011.22,735.822 1011.72,735.822 1012.22,735.822 1012.71,735.822 1013.21,735.822 1013.7,735.822 1014.2,735.822 1014.69,735.822 1015.19,735.822 1015.68,735.822 1016.18,735.822 1016.67,735.822 1017.17,735.822 1017.67,735.822 1018.16,735.822 1018.66,735.822 1019.15,735.822 1019.65,735.822 1020.14,735.822 1020.64,735.822 1021.13,735.822 1021.63,735.822 1022.13,735.822 1022.62,735.822 1023.12,735.822 1023.61,735.822 1024.11,735.822 1024.6,735.822 1025.1,735.822 1025.59,735.822 1026.09,735.822 1026.58,735.822 1027.08,735.822 1027.58,735.822 1028.07,735.822 1028.57,735.822 1029.06,735.822 1029.56,735.822 1030.05,735.822 1030.55,735.822 1031.04,735.822 1031.54,735.822 1032.03,735.822 1032.53,735.822 1033.03,735.822 1033.52,735.822 1034.02,735.822 1034.51,735.822 1035.01,735.822 1035.5,735.822 1036,735.822 1036.49,735.822 1036.99,735.822 1037.48,735.822 1037.98,735.822 1038.48,735.822 1038.97,735.822 1039.47,735.822 1039.96,735.822 1040.46,735.822 1040.95,735.822 1041.45,735.822 1041.94,735.822 1042.44,735.822 1042.94,735.822 1043.43,735.822 1043.93,735.822 1044.42,735.822 1044.92,735.822 1045.41,735.822 1045.91,735.822 1046.4,735.822 1046.9,735.822 1047.39,735.822 1047.89,735.822 1048.39,735.822 1048.88,735.822 1049.38,735.822 1049.87,735.822 1050.37,735.822 1050.86,735.822 1051.36,735.822 1051.85,735.822 1052.35,735.822 1052.84,735.822 1053.34,735.822 1053.84,735.822 1054.33,735.822 1054.83,735.822 1055.32,735.822 1055.82,735.822 1056.31,735.822 1056.81,735.822 1057.3,735.822 1057.8,735.822 1058.29,735.822 1058.79,735.822 1059.29,735.822 1059.78,735.822 1060.28,735.822 1060.77,735.822 1061.27,735.822 1061.76,735.822 1062.26,735.822 1062.75,735.822 1063.25,735.822 1063.75,735.822 1064.24,735.822 1064.74,735.822 1065.23,735.822 1065.73,735.822 1066.22,735.822 1066.72,735.822 1067.21,735.822 1067.71,735.822 1068.2,735.822 1068.7,735.822 1069.2,735.822 1069.69,735.822 1070.19,735.822 1070.68,735.822 1071.18,735.822 1071.67,735.822 1072.17,735.822 1072.66,735.822 1073.16,735.822 1073.65,735.822 1074.15,735.822 1074.65,735.822 1075.14,735.822 1075.64,735.822 1076.13,735.822 1076.63,735.822 1077.12,735.822 1077.62,735.822 1078.11,735.822 1078.61,735.822 1079.1,735.822 1079.6,735.822 1080.1,735.822 1080.59,735.822 1081.09,735.822 1081.58,735.822 1082.08,735.822 1082.57,735.822 1083.07,735.822 1083.56,735.822 1084.06,735.822 1084.56,735.822 1085.05,735.822 1085.55,735.822 1086.04,735.822 1086.54,735.822 1087.03,735.822 1087.53,735.822 1088.02,735.822 1088.52,735.822 1089.01,735.822 1089.51,735.822 1090.01,735.822 1090.5,735.822 1091,735.822 1091.49,735.822 1091.99,735.822 1092.48,735.822 1092.98,735.822 1093.47,735.822 1093.97,735.822 1094.46,735.822 1094.96,735.822 1095.46,735.822 1095.95,735.822 1096.45,735.822 1096.94,735.822 1097.44,735.822 1097.93,735.822 1098.43,735.822 1098.92,735.822 1099.42,735.822 1099.91,735.822 1100.41,735.822 1100.91,735.822 1101.4,735.822 1101.9,735.822 1102.39,735.822 1102.89,735.822 1103.38,735.822 1103.88,735.822 1104.37,735.822 1104.87,735.822 1105.37,735.822 1105.86,735.822 1106.36,735.822 1106.85,735.822 1107.35,735.822 1107.84,735.822 1108.34,735.822 1108.83,735.822 1109.33,735.822 1109.82,735.822 1110.32,735.822 1110.82,735.822 1111.31,735.822 1111.81,735.822 1112.3,735.822 1112.8,735.822 1113.29,735.822 1113.79,735.822 1114.28,735.822 1114.78,735.822 1115.27,735.822 1115.77,735.822 1116.27,735.822 1116.76,735.822 1117.26,735.822 1117.75,735.822 1118.25,735.822 1118.74,735.822 1119.24,735.822 1119.73,735.822 1120.23,735.822 1120.72,735.822 1121.22,735.822 1121.72,735.822 1122.21,735.822 1122.71,735.822 1123.2,735.822 1123.7,735.822 1124.19,735.822 1124.69,735.822 1125.18,735.822 1125.68,735.822 1126.18,735.822 1126.67,735.822 1127.17,735.822 1127.66,735.822 1128.16,735.822 1128.65,735.822 1129.15,735.822 1129.64,735.822 1130.14,735.822 1130.63,735.822 1131.13,735.822 1131.63,735.822 1132.12,735.822 1132.62,735.822 1133.11,735.822 1133.61,735.822 1134.1,735.822 1134.6,735.822 1135.09,735.822 1135.59,735.822 1136.08,735.822 1136.58,735.822 1137.08,735.822 1137.57,735.822 1138.07,735.822 1138.56,735.822 1139.06,735.822 1139.55,735.822 1140.05,735.822 1140.54,735.822 1141.04,735.822 1141.54,735.822 1142.03,735.822 1142.53,735.822 1143.02,735.822 1143.52,735.822 1144.01,735.822 1144.51,735.822 1145,735.822 1145.5,735.822 1145.99,735.822 1146.49,735.822 1146.99,735.822 1147.48,735.822 1147.98,735.822 1148.47,735.822 1148.97,735.822 1149.46,735.822 1149.96,735.822 1150.45,735.822 1150.95,735.822 1151.44,735.822 1151.94,735.822 1152.44,735.822 1152.93,735.822 1153.43,735.822 1153.92,735.822 1154.42,735.822 1154.91,735.822 1155.41,735.822 1155.9,735.822 1156.4,735.822 1156.89,735.822 1157.39,735.822 1157.89,735.822 1158.38,735.822 1158.88,735.822 1159.37,735.822 1159.87,735.822 1160.36,735.822 1160.86,735.822 1161.35,735.822 1161.85,735.822 1162.35,735.822 1162.84,735.822 1163.34,735.822 1163.83,735.822 1164.33,735.822 1164.82,735.822 1165.32,735.822 1165.81,735.822 1166.31,735.822 1166.8,735.822 1167.3,735.822 1167.8,735.822 1168.29,735.822 1168.79,735.822 1169.28,735.822 1169.78,735.822 1170.27,735.822 1170.77,735.822 1171.26,735.822 1171.76,735.822 1172.25,735.822 1172.75,735.822 1173.25,735.822 1173.74,735.822 1174.24,735.822 1174.73,735.822 1175.23,735.822 1175.72,735.822 1176.22,735.822 1176.71,735.822 1177.21,735.822 1177.7,735.822 1178.2,735.822 1178.7,735.822 1179.19,735.822 1179.69,735.822 1180.18,735.822 1180.68,735.822 1181.17,735.822 1181.67,735.822 1182.16,735.822 1182.66,735.822 1183.16,735.822 1183.65,735.822 1184.15,735.822 1184.64,735.822 1185.14,735.822 1185.63,735.822 1186.13,735.822 1186.62,735.822 1187.12,735.822 1187.61,735.822 1188.11,735.822 1188.61,735.822 1189.1,735.822 1189.6,735.822 1190.09,735.822 1190.59,735.822 1191.08,735.822 1191.58,735.822 1192.07,735.822 1192.57,735.822 1193.06,735.822 1193.56,735.822 1194.06,735.822 1194.55,735.822 1195.05,735.822 1195.54,735.822 1196.04,735.822 1196.53,735.822 1197.03,735.822 1197.52,735.822 1198.02,735.822 1198.51,735.822 1199.01,735.822 1199.51,735.822 1200,735.822 1200.5,735.822 1200.99,735.822 1201.49,735.822 1201.98,735.822 1202.48,735.822 1202.97,735.822 1203.47,735.822 1203.97,735.822 1204.46,735.822 1204.96,735.822 1205.45,735.822 1205.95,735.822 1206.44,735.822 1206.94,735.822 1207.43,735.822 1207.93,735.822 1208.42,735.822 1208.92,735.822 1209.42,735.822 1209.91,735.822 1210.41,735.822 1210.9,735.822 1211.4,735.822 1211.89,735.822 1212.39,735.822 1212.88,735.822 1213.38,735.822 1213.87,735.822 1214.37,735.822 1214.87,735.822 1215.36,735.822 1215.86,735.822 1216.35,735.822 1216.85,735.822 1217.34,735.822 1217.84,735.822 1218.33,735.822 1218.83,735.822 1219.32,735.822 1219.82,735.822 1220.32,735.822 1220.81,735.822 1221.31,735.822 1221.8,735.822 1222.3,735.822 1222.79,735.822 1223.29,735.822 1223.78,735.822 1224.28,735.822 1224.78,735.822 1225.27,735.822 1225.77,735.822 1226.26,735.822 1226.76,735.822 1227.25,735.822 1227.75,735.822 1228.24,735.822 1228.74,735.822 1229.23,735.822 1229.73,735.822 1230.23,735.822 1230.72,735.822 1231.22,735.822 1231.71,735.822 1232.21,735.822 1232.7,735.822 1233.2,735.822 1233.69,735.822 1234.19,735.822 1234.68,735.822 1235.18,735.822 1235.68,735.822 1236.17,735.822 1236.67,735.822 1237.16,735.822 1237.66,735.822 1238.15,735.822 1238.65,735.822 1239.14,735.822 1239.64,735.822 1240.13,735.822 1240.63,735.822 1241.13,735.822 1241.62,735.822 1242.12,735.822 1242.61,735.822 1243.11,735.822 1243.6,735.822 1244.1,735.822 1244.59,735.822 1245.09,735.822 1245.59,735.822 1246.08,735.822 1246.58,735.822 1247.07,735.822 1247.57,735.822 1248.06,735.822 1248.56,735.822 1249.05,735.822 1249.55,735.822 1250.04,735.822 1250.54,735.822 1251.04,735.822 1251.53,735.822 1252.03,735.822 1252.52,735.822 1253.02,735.822 1253.51,735.822 1254.01,735.822 1254.5,735.822 1255,735.822 1255.49,735.822 1255.99,735.822 1256.49,735.822 1256.98,735.822 1257.48,735.822 1257.97,735.822 1258.47,735.822 1258.96,735.822 1259.46,735.822 1259.95,735.822 1260.45,735.822 1260.95,735.822 1261.44,735.822 1261.94,735.822 1262.43,735.822 1262.93,735.822 1263.42,735.822 1263.92,735.822 1264.41,735.822 1264.91,735.822 1265.4,735.822 1265.9,735.822 1266.4,735.822 1266.89,735.822 1267.39,735.822 1267.88,735.822 1268.38,735.822 1268.87,735.822 1269.37,735.822 1269.86,735.822 1270.36,735.822 1270.85,735.822 1271.35,735.822 1271.85,735.822 1272.34,735.822 1272.84,735.822 1273.33,735.822 1273.83,735.822 1274.32,735.822 1274.82,735.822 1275.31,735.822 1275.81,735.822 1276.3,735.822 1276.8,735.822 1277.3,735.822 1277.79,735.822 1278.29,735.822 1278.78,735.822 1279.28,735.822 1279.77,735.822 1280.27,735.822 1280.76,735.822 1281.26,735.822 1281.76,735.822 1282.25,735.822 1282.75,735.822 1283.24,735.822 1283.74,735.822 1284.23,735.822 1284.73,735.822 1285.22,735.822 1285.72,735.822 1286.21,735.822 1286.71,735.822 1287.21,735.822 1287.7,735.822 1288.2,735.822 1288.69,735.822 1289.19,735.822 1289.68,735.822 1290.18,735.822 1290.67,735.822 1291.17,735.822 1291.66,735.822 1292.16,735.822 1292.66,735.822 1293.15,735.822 1293.65,735.822 1294.14,735.822 1294.64,735.822 1295.13,735.822 1295.63,735.822 1296.12,735.822 1296.62,735.822 1297.11,735.822 1297.61,735.822 1298.11,735.822 1298.6,735.822 1299.1,735.822 1299.59,735.822 1300.09,735.822 1300.58,735.822 1301.08,735.822 1301.57,735.822 1302.07,735.822 1302.57,735.822 1303.06,735.822 1303.56,735.822 1304.05,735.822 1304.55,735.822 1305.04,735.822 1305.54,735.822 1306.03,735.822 1306.53,735.822 1307.02,735.822 1307.52,735.822 1308.02,735.822 1308.51,735.822 1309.01,735.822 1309.5,735.822 1310,735.822 1310.49,735.822 1310.99,735.822 1311.48,735.822 1311.98,735.822 1312.47,735.822 1312.97,735.822 1313.47,735.822 1313.96,735.822 1314.46,735.822 1314.95,735.822 1315.45,735.822 1315.94,735.822 1316.44,735.822 1316.93,735.822 1317.43,735.822 1317.92,735.822 1318.42,735.822 1318.92,735.822 1319.41,735.822 1319.91,735.822 1320.4,735.822 1320.9,735.822 1321.39,735.822 1321.89,735.822 1322.38,735.822 1322.88,735.822 1323.38,735.822 1323.87,735.822 1324.37,735.822 1324.86,735.822 1325.36,735.822 1325.85,735.822 1326.35,735.822 1326.84,735.822 1327.34,735.822 1327.83,735.822 1328.33,735.822 1328.83,735.822 1329.32,735.822 1329.82,735.822 1330.31,735.822 1330.81,735.822 1331.3,735.822 1331.8,735.822 1332.29,735.822 1332.79,735.822 1333.28,735.822 1333.78,735.822 1334.28,735.822 1334.77,735.822 1335.27,735.822 1335.76,735.822 1336.26,735.822 1336.75,735.822 1337.25,735.822 1337.74,735.822 1338.24,735.822 1338.73,735.822 1339.23,735.822 1339.73,735.822 1340.22,735.822 1340.72,735.822 1341.21,735.822 1341.71,735.822 1342.2,735.822 1342.7,735.822 1343.19,735.822 1343.69,735.822 1344.19,735.822 1344.68,735.822 1345.18,735.822 1345.67,735.822 1346.17,735.822 1346.66,735.822 1347.16,735.822 1347.65,735.822 1348.15,735.822 1348.64,735.822 1349.14,735.822 1349.64,735.822 1350.13,735.822 1350.63,735.822 1351.12,735.822 1351.62,735.822 1352.11,735.822 1352.61,735.822 1353.1,735.822 1353.6,735.822 1354.09,735.822 1354.59,735.822 1355.09,735.822 1355.58,735.822 1356.08,735.822 1356.57,735.822 1357.07,735.822 1357.56,735.822 1358.06,735.822 1358.55,735.822 1359.05,735.822 1359.54,735.822 1360.04,735.822 1360.54,735.822 1361.03,735.822 1361.53,735.822 1362.02,735.822 1362.52,735.822 1363.01,735.822 1363.51,735.822 1364,735.822 1364.5,735.822 1365,735.822 1365.49,735.822 1365.99,735.822 1366.48,735.822 1366.98,735.822 1367.47,735.822 1367.97,735.822 1368.46,735.822 1368.96,735.822 1369.45,735.822 1369.95,735.822 1370.45,735.822 1370.94,735.822 1371.44,735.822 1371.93,735.822 1372.43,735.822 1372.92,735.822 1373.42,735.822 1373.91,735.822 1374.41,735.822 1374.9,735.822 1375.4,735.822 1375.9,735.822 1376.39,735.822 1376.89,735.822 1377.38,735.822 1377.88,735.822 1378.37,735.822 1378.87,735.822 1379.36,735.822 1379.86,735.822 1380.35,735.822 1380.85,735.822 1381.35,735.822 1381.84,735.822 1382.34,735.822 1382.83,735.822 1383.33,735.822 1383.82,735.822 1384.32,735.822 1384.81,735.822 1385.31,735.822 1385.81,735.822 1386.3,735.822 1386.8,735.822 1387.29,735.822 1387.79,735.822 1388.28,735.822 1388.78,735.822 1389.27,735.822 1389.77,735.822 1390.26,735.822 1390.76,735.822 1391.26,735.822 1391.75,735.822 1392.25,735.822 1392.74,735.822 1393.24,735.822 1393.73,735.822 1394.23,735.822 1394.72,735.822 1395.22,735.822 1395.71,735.822 1396.21,735.822 1396.71,735.822 1397.2,735.822 1397.7,735.822 1398.19,735.822 1398.69,735.822 1399.18,735.822 1399.68,735.822 1400.17,735.822 1400.67,735.822 1401.17,735.822 1401.66,735.822 1402.16,735.822 1402.65,735.822 1403.15,735.822 1403.64,735.822 1404.14,735.822 1404.63,735.822 1405.13,735.822 1405.62,735.822 1406.12,735.822 1406.62,735.822 1407.11,735.822 1407.61,735.822 1408.1,735.822 1408.6,735.822 1409.09,735.822 1409.59,735.822 1410.08,735.822 1410.58,735.822 1411.07,735.822 1411.57,735.822 1412.07,735.822 1412.56,735.822 1413.06,735.822 1413.55,735.822 1414.05,735.822 1414.54,735.822 1415.04,735.822 1415.53,735.822 1416.03,735.822 1416.52,735.822 1417.02,735.822 1417.52,735.822 1418.01,735.822 1418.51,735.822 1419,735.822 1419.5,735.822 1419.99,735.822 1420.49,735.822 1420.98,735.822 1421.48,735.822 1421.98,735.822 1422.47,735.822 1422.97,735.822 1423.46,735.822 1423.96,735.822 1424.45,735.822 1424.95,735.822 1425.44,735.822 1425.94,735.822 1426.43,735.822 1426.93,735.822 1427.43,735.822 1427.92,735.822 1428.42,735.822 1428.91,735.822 1429.41,735.822 1429.9,735.822 1430.4,735.822 1430.89,735.822 1431.39,735.822 1431.88,735.822 1432.38,735.822 1432.88,735.822 1433.37,735.822 1433.87,735.822 1434.36,735.822 1434.86,735.822 1435.35,735.822 1435.85,735.822 1436.34,735.822 1436.84,735.822 1437.33,735.822 1437.83,735.822 1438.33,735.822 1438.82,735.822 1439.32,735.822 1439.81,735.822 1440.31,735.822 1440.8,735.822 1441.3,735.822 1441.79,735.822 1442.29,735.822 1442.79,735.822 1443.28,735.822 1443.78,735.822 1444.27,735.822 1444.77,735.822 1445.26,735.822 1445.76,735.822 1446.25,735.822 1446.75,735.822 1447.24,735.822 1447.74,735.822 1448.24,735.822 1448.73,735.822 1449.23,735.822 1449.72,735.822 1450.22,735.822 1450.71,735.822 1451.21,735.822 1451.7,735.822 1452.2,735.822 1452.69,735.822 1453.19,735.822 1453.69,735.822 1454.18,735.822 1454.68,735.822 1455.17,735.822 1455.67,735.822 1456.16,735.822 1456.66,735.822 1457.15,735.822 1457.65,735.822 1458.14,735.822 1458.64,735.822 1459.14,735.822 1459.63,735.822 1460.13,735.822 1460.62,735.822 1461.12,735.822 1461.61,735.822 1462.11,735.822 1462.6,735.822 1463.1,735.822 1463.6,735.822 1464.09,735.822 1464.59,735.822 1465.08,735.822 1465.58,735.822 1466.07,735.822 1466.57,735.822 1467.06,735.822 1467.56,735.822 1468.05,735.822 1468.55,735.822 1469.05,735.822 1469.54,735.822 1470.04,735.822 1470.53,735.822 1471.03,735.822 1471.52,735.822 1472.02,735.822 1472.51,735.822 1473.01,735.822 1473.5,735.822 1474,735.822 1474.5,735.822 1474.99,735.822 1475.49,735.822 1475.98,735.822 1476.48,735.822 1476.97,735.822 1477.47,735.822 1477.96,735.822 1478.46,735.822 1478.95,735.822 1479.45,735.822 1479.95,735.822 1480.44,735.822 1480.94,735.822 1481.43,735.822 1481.93,735.822 1482.42,735.822 1482.92,735.822 1483.41,735.822 1483.91,735.822 1484.41,735.822 1484.9,735.822 1485.4,735.822 1485.89,735.822 1486.39,735.822 1486.88,735.822 1487.38,735.822 1487.87,735.822 1488.37,735.822 1488.86,735.822 1489.36,735.822 1489.86,735.822 1490.35,735.822 1490.85,735.822 1491.34,735.822 1491.84,735.822 1492.33,735.822 1492.83,735.822 1493.32,735.822 1493.82,735.822 1494.31,735.822 1494.81,735.822 1495.31,735.822 1495.8,735.822 1496.3,735.822 1496.79,735.822 1497.29,735.822 1497.78,735.822 1498.28,735.822 1498.77,735.822 1499.27,735.822 1499.76,735.822 1500.26,735.822 1500.76,735.822 1501.25,735.822 1501.75,735.822 1502.24,735.822 1502.74,735.822 1503.23,735.822 1503.73,735.822 1504.22,735.822 1504.72,735.822 1505.22,735.822 1505.71,735.822 1506.21,735.822 1506.7,735.822 1507.2,735.822 1507.69,735.822 1508.19,735.822 1508.68,735.822 1509.18,735.822 1509.67,735.822 1510.17,735.822 1510.67,735.822 1511.16,735.822 1511.66,735.822 1512.15,735.822 1512.65,735.822 1513.14,735.822 1513.64,735.822 1514.13,735.822 1514.63,735.822 1515.12,735.822 1515.62,735.822 1516.12,735.822 1516.61,735.822 1517.11,735.822 1517.6,735.822 1518.1,735.822 1518.59,735.822 1519.09,735.822 1519.58,735.822 1520.08,735.822 1520.58,735.822 1521.07,735.822 1521.57,735.822 1522.06,735.822 1522.56,735.822 1523.05,735.822 1523.55,735.822 1524.04,735.822 1524.54,735.822 1525.03,735.822 1525.53,735.822 1526.03,735.822 1526.52,735.822 1527.02,735.822 1527.51,735.822 1528.01,735.822 1528.5,735.822 1529,735.822 1529.49,735.822 1529.99,735.822 1530.48,735.822 1530.98,735.822 1531.48,735.822 1531.97,735.822 1532.47,735.822 1532.96,735.822 1533.46,735.822 1533.95,735.822 1534.45,735.822 1534.94,735.822 1535.44,735.822 1535.93,735.822 1536.43,735.822 1536.93,735.822 1537.42,735.822 1537.92,735.822 1538.41,735.822 1538.91,735.822 1539.4,735.822 1539.9,735.822 1540.39,735.822 1540.89,735.822 1541.39,735.822 1541.88,735.822 1542.38,735.822 1542.87,735.822 1543.37,735.822 1543.86,735.822 1544.36,735.822 1544.85,735.822 1545.35,735.822 1545.84,735.822 1546.34,735.822 1546.84,735.822 1547.33,735.822 1547.83,735.822 1548.32,735.822 1548.82,735.822 1549.31,735.822 1549.81,735.822 1550.3,735.822 1550.8,735.822 1551.29,735.822 1551.79,735.822 1552.29,735.822 1552.78,735.822 1553.28,735.822 1553.77,735.822 1554.27,735.822 1554.76,735.822 1555.26,735.822 1555.75,735.822 1556.25,735.822 1556.74,735.822 1557.24,735.822 1557.74,735.822 1558.23,735.822 1558.73,735.822 1559.22,735.822 1559.72,735.822 1560.21,735.822 1560.71,735.822 1561.2,735.822 1561.7,735.822 1562.2,735.822 1562.69,735.822 1563.19,735.822 1563.68,735.822 1564.18,735.822 1564.67,735.822 1565.17,735.822 1565.66,735.822 1566.16,735.822 1566.65,735.822 1567.15,735.822 1567.65,735.822 1568.14,735.822 1568.64,735.822 1569.13,735.822 1569.63,735.822 1570.12,735.822 1570.62,735.822 1571.11,735.822 1571.61,735.822 1572.1,735.822 1572.6,735.822 1573.1,735.822 1573.59,735.822 1574.09,735.822 1574.58,735.822 1575.08,735.822 1575.57,735.822 1576.07,735.822 1576.56,735.822 1577.06,735.822 1577.55,735.822 1578.05,735.822 1578.55,735.822 1579.04,735.822 1579.54,735.822 1580.03,735.822 1580.53,735.822 1581.02,735.822 1581.52,735.822 1582.01,735.822 1582.51,735.822 1583.01,735.822 1583.5,735.822 1584,735.822 1584.49,735.822 1584.99,735.822 1585.48,735.822 1585.98,735.822 1586.47,735.822 1586.97,735.822 1587.46,735.822 1587.96,735.822 1588.46,735.822 1588.95,735.822 1589.45,735.822 1589.94,735.822 1590.44,735.822 1590.93,735.822 1591.43,735.822 1591.92,735.822 1592.42,735.822 1592.91,735.822 1593.41,735.822 1593.91,735.822 1594.4,735.822 1594.9,735.822 1595.39,735.822 1595.89,735.822 1596.38,735.822 1596.88,735.822 1597.37,735.822 1597.87,735.822 1598.36,735.822 1598.86,735.822 1599.36,735.822 1599.85,735.822 1600.35,735.822 1600.84,735.822 1601.34,735.822 1601.83,735.822 1602.33,735.822 1602.82,735.822 1603.32,735.822 1603.82,735.822 1604.31,735.822 1604.81,735.822 1605.3,735.822 1605.8,735.822 1606.29,735.822 1606.79,735.822 1607.28,735.822 1607.78,735.822 1608.27,735.822 1608.77,735.822 1609.27,735.822 1609.76,735.822 1610.26,735.822 1610.75,735.822 1611.25,735.822 1611.74,735.822 1612.24,735.822 1612.73,735.822 1613.23,735.822 1613.72,735.822 1614.22,735.822 1614.72,735.822 1615.21,735.822 1615.71,735.822 1616.2,735.822 1616.7,735.822 1617.19,735.822 1617.69,735.822 1618.18,735.822 1618.68,735.822 1619.17,735.822 1619.67,735.822 1620.17,735.822 1620.66,735.822 1621.16,735.822 1621.65,735.822 1622.15,735.822 1622.64,735.822 1623.14,735.822 1623.63,735.822 1624.13,735.822 1624.63,735.822 1625.12,735.822 1625.62,735.822 1626.11,735.822 1626.61,735.822 1627.1,735.822 1627.6,735.822 1628.09,735.822 1628.59,735.822 1629.08,735.822 1629.58,735.822 1630.08,735.822 1630.57,735.822 1631.07,735.822 1631.56,735.822 1632.06,735.822 1632.55,735.822 1633.05,735.822 1633.54,735.822 1634.04,735.822 1634.53,735.822 1635.03,735.822 1635.53,735.822 1636.02,735.822 1636.52,735.822 1637.01,735.822 1637.51,735.822 1638,735.822 1638.5,735.822 1638.99,735.822 1639.49,735.822 1639.99,735.822 1640.48,735.822 1640.98,735.822 1641.47,735.822 1641.97,735.822 1642.46,735.822 1642.96,735.822 1643.45,735.822 1643.95,735.822 1644.44,735.822 1644.94,735.822 1645.44,735.822 1645.93,735.822 1646.43,735.822 1646.92,735.822 1647.42,735.822 1647.91,735.822 1648.41,735.822 1648.9,735.822 1649.4,735.822 1649.89,735.822 1650.39,735.822 1650.89,735.822 1651.38,735.822 1651.88,735.822 1652.37,735.822 1652.87,735.822 1653.36,735.822 1653.86,735.822 1654.35,735.822 1654.85,735.822 1655.34,735.822 1655.84,735.822 1656.34,735.822 1656.83,735.822 1657.33,735.822 1657.82,735.822 1658.32,735.822 1658.81,735.822 1659.31,735.822 1659.8,735.822 1660.3,735.822 1660.8,735.822 1661.29,735.822 1661.79,735.822 1662.28,735.822 1662.78,735.822 1663.27,735.822 1663.77,735.822 1664.26,735.822 1664.76,735.822 1665.25,735.822 1665.75,735.822 1666.25,735.822 1666.74,735.822 1667.24,735.822 1667.73,735.822 1668.23,735.822 1668.72,735.822 1669.22,735.822 1669.71,735.822 1670.21,735.822 1670.7,735.822 1671.2,735.822 1671.7,735.822 1672.19,735.822 1672.69,735.822 1673.18,735.822 1673.68,735.822 1674.17,735.822 1674.67,735.822 1675.16,735.822 1675.66,735.822 1676.15,735.822 1676.65,735.822 1677.15,735.822 1677.64,735.822 1678.14,735.822 1678.63,735.822 1679.13,735.822 1679.62,735.822 1680.12,735.822 1680.61,735.822 1681.11,735.822 1681.61,735.822 1682.1,735.822 1682.6,735.822 1683.09,735.822 1683.59,735.822 1684.08,735.822 1684.58,735.822 1685.07,735.822 1685.57,735.822 1686.06,735.822 1686.56,735.822 1687.06,735.822 1687.55,735.822 1688.05,735.822 1688.54,735.822 1689.04,735.822 1689.53,735.822 1690.03,735.822 1690.52,735.822 1691.02,735.822 1691.51,735.822 1692.01,735.822 1692.51,735.822 1693,735.822 1693.5,735.822 1693.99,735.822 1694.49,735.822 1694.98,735.822 1695.48,735.822 1695.97,735.822 1696.47,735.822 1696.96,735.822 1697.46,735.822 1697.96,735.822 1698.45,735.822 1698.95,735.822 1699.44,735.822 1699.94,735.822 1700.43,735.822 1700.93,735.822 1701.42,735.822 1701.92,735.822 1702.42,735.822 1702.91,735.822 1703.41,735.822 1703.9,735.822 1704.4,735.822 1704.89,735.822 1705.39,735.822 1705.88,735.822 1706.38,735.822 1706.87,735.822 1707.37,735.822 1707.87,735.822 1708.36,735.822 1708.86,735.822 1709.35,735.822 1709.85,735.822 1710.34,735.822 1710.84,735.822 1711.33,735.822 1711.83,735.822 1712.32,735.822 1712.82,735.822 1713.32,735.822 1713.81,735.822 1714.31,735.822 1714.8,735.822 1715.3,735.822 1715.79,735.822 1716.29,735.822 1716.78,735.822 1717.28,735.822 1717.77,735.822 1718.27,735.822 1718.77,735.822 1719.26,735.822 1719.76,735.822 1720.25,735.822 1720.75,735.822 1721.24,735.822 1721.74,735.822 1722.23,735.822 1722.73,735.822 1723.23,735.822 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalisation in the example \"Exact diagonalisation\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using LinearAlgebra\nexact_energy = eigvals(Matrix(H))[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906392","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ± $(se.err)\n    Projected Energy: $(v.val) ± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.027923810504714 ± 0.027645123065160745\nProjected Energy: -4.016314467689392 ± (0.004304544683139788, 0.00419639764247659)\nExact Energy: -4.021502406906392\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-Rimu/StatsTools","page":"StatsTools","title":"Module Rimu/StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module Rimu/StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from lomc! as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; α = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-α.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ± 0.0029\n  with uncertainty of ± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13×6 DataFrame\n Row │ blocks  mean      std_err      std_err_err  p_cov       mj\n     │ Int64   Float64   Float64      Float64      Float64     Float64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 │   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 │   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 │   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 │    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 │    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 │    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 │     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 │     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 │     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 │      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 │      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 │      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ⠀⠀⠀⠀⠀⠀⠀⠀⠀std err vs blocking steps⠀⠀⠀⠀⠀⠀⠀⠀\n               ┌────────────────────────────────────────┐\n    0.00423501 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀│ m test\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢸⠀⠀⠀⠀│ std err\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⡠⢺⠒⠒⢺⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⡀⠀⠀⡆⣀⠤⡗⠉⠀⢸⠀⠀⢸⡆⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡧⠤⠔⡗⠊⠉⡏⠀⠀⡇⠀⠀⢸⠀⠀⢸⢣⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⡇⠀⠀⠁⠀⠀⠁⠀⠀⠁⠀⠀⠀⠀⠀⢸⠸⡀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠁⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⡇⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠊⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣦⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀│\n               │⠀⠀⠀⢀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n               │⠀⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n   -0.00012335 │⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠧⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤│\n               └────────────────────────────────────────┘\n               ⠀0.64⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀k⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀13.36⠀\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; α = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; α=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.σ_f using x_by_y_linear. The standard error estimate r.σ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.δ_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*σ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3×3 DataFrame\n Row │ res      res_l    res_u\n     │ Float64  Float64  Float64\n─────┼───────────────────────────\n   1 │    11.5  1.7282   1.7282\n   2 │    13.0  1.7282   1.7282\n   3 │    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dτ=df.dτ[end], skip=0)\n\nCalculate the growth witness directly from a DataFrame returned by lomc!. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0) -> g\ngrowth_witness(df::DataFrame, [b]; skip=0) -> g\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ≥ 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n) -> r::RatioBlockingResult\ngrowth_estimator(\n    df::DataFrame, h; \n    shift_name=:shift, \n    norm_name=:norm, \n    dτ=df.dτ[end], \n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively. Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin().\n\nE_gr = E_r - frac1dτln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the (biased) shift estimator. Error propagation is done with MonteCarloMeasurements. Progagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a DataFrame returned by lomc!. The keyword arguments shift_name and norm_name can be used to change the names  of the relevant columns.\n\nSee also mixed_estimator() and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{DataFrames.DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\n-> (;df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj, \n    vproj_name=:vproj, \n    shift_name=:shift, \n    dτ=df.dτ[end], \n    kwargs...\n)\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the unweighted ratio. Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame  returned by lomc!. The keyword arguments hproj_name, vproj_name, and  shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrames.DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{DataFrames.DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(\n    df::DataFrame;\n    skip=0, hproj=:hproj, vproj=:vproj, kwargs...\n) -> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step =ProjectedEnergy() to set these up in lomc!()). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\", \n    vec_name=\"dot\", \n    h=0,\n    skip=0, \n    Anorm=1,\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)  \n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas. \n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n)  and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector  holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector  holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame returned by  lomc!. The keyword arguments shift_name, op_name and vec_name can be used to  change the names of the relevant columns, see AllOverlaps for default  formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific  reweighting depth can be set with keyword argument h. The default is h = 0 which  calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique  described in Umrigar et al. (1993).  Reweighting is done over h time steps and length(shift) - skip time steps are used  for the blocking analysis done with ratio_of_means().  dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{DataFrames.DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ... \nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{DataFrames.DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...) -> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{DataFrames.DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the result of replica lomc! passed as  argument df, using replicas _1 and _2. Calls ratio_of_means() to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |ψ⟩ and |ϕ⟩ is defined as\n\nF(ψϕ) = fracψϕ^2ψψϕϕ \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v⋅v == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame version can extract the relevant information from the result of lomc!. Set up lomc! with the keyword argument replica = AllOverlaps(R) and R ≥ 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ± 0.029\n  with uncertainty of ± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; α = 0.01) -> k\nmtest(table::NamedTuple; α = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-α after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, σ_f, δ_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nσ_f::T: std from linear propagation\nδ_y::T: coefficient of variation for denominator (≤ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, μ, σ)\nparticles(samples, μ::AbstractVector, Σ::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, σ_f, δ_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nσ_f standard deviation of f from linear error propagation (normal approximation)\nδ_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(μ_x,μ_y,σ_x,σ_y,ρ) -> f, σ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013).\n\nσ_f = sqrtfracσ_xμ_y^2 + fracμ_x σ_yμ_y^2^2 - frac2 ρ μ_xμ_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3×7 DataFrame\n Row │ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     │ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 │    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 │    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1×9 DataFrame\n Row │ val       val_l      val_u      val_f     val_σ_f    val_δ_y    val_k  val_blocks  val_success\n     │ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n─────┼────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7×6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS…</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple…</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.363834</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.3285e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">9.638e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">9.227e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">2.344e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.885e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">7.865e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ≠ basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10×10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999989\n -0.9999999999999982\n -0.9999999999999973\n  1.0\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10×10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.526707-0.23646im       2.77556e-17-0.204124im             0.0+0.0im          0.526707+0.23646im       2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.372438+0.167202im              0.0-0.288675im             0.0+0.0im         -0.372438-0.167202im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+2.77556e-17im   -1.2326e-32+2.77556e-17im          0.0+0.353553im          0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      1.11022e-16+1.66533e-16im           0.0-0.612372im             0.0+0.0im       5.55112e-17+2.77556e-17im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   1.11022e-16-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im          0.0-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im               0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im               0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.167202-0.372438im         0.288675-1.95105e-16im          0.0+0.0im         -0.167202+0.372438im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im       0.23646+0.526707im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.23646-0.526707im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im               0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nΔE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 7.155734338400866e-18\n 2.7755575615628883e-17\n 0.15915494309189537\n 0.15915494309189543\n 0.15915494309189548","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ΔE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalisation","page":"Exact diagonalisation","title":"Example 4: Exact diagonalisation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalisation method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalisation","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"HubbardMom1D(BoseFS{4,5}(0, 0, 4, 0, 0); u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"Before performing exact diagonalisation, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalisation and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRep","page":"Exact diagonalisation","title":"The BasisSetRep","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRep under the hood. The BasisSetRep, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRep only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"bsr = BasisSetRep(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"To access the matrix or basis, access the sm and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"bsr.sm","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0⟩\"\n fs\"|0 1 2 1 0⟩\"\n fs\"|1 0 2 0 1⟩\"\n fs\"|1 0 1 2 0⟩\"\n fs\"|0 0 1 1 2⟩\"\n fs\"|0 2 1 0 1⟩\"\n fs\"|2 1 1 0 0⟩\"\n fs\"|0 2 0 2 0⟩\"\n fs\"|1 1 0 1 1⟩\"\n fs\"|2 0 0 0 2⟩\"\n fs\"|0 0 0 3 1⟩\"\n fs\"|3 0 0 1 0⟩\"\n fs\"|0 1 0 0 3⟩\"\n fs\"|1 3 0 0 0⟩\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"14×14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalisation","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalisation","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770728\n  0.1358418221962303\n  0.15789998694609153\n  0.8767114411781431\n  1.5305929970973349\n  1.583573261186749\n  3.072870330325868\n  3.1256726539518525\n  4.862107221562181\n  6.260694850380592\n  6.402671211183115\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"14×14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -5.46153e-15  -0.0221221  -0.0697193   3.30753e-15  -0.0314466   -3.25591e-16  -0.0360987   -0.0161557  -1.08119e-16  -0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     5.97476e-14   0.225254   -0.132826   -3.44233e-17   0.00292026  -2.22083e-15  -0.0861158   -0.0907789  -2.63831e-16  -0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -1.1734e-13   -0.447424   -0.63969     4.40954e-14  -0.383444    -7.21042e-15  -0.431051    -0.181167   -5.40614e-16  -0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234       0.122119    -0.123629     -0.106455    -0.126661    0.0829132    -0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773      -0.0584554   -0.601232     -0.467179    -0.215841   -0.140166     -0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234       0.122119     0.123629     -0.106455    -0.126661   -0.0829132    -0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773      -0.0584554    0.601232     -0.467179    -0.215841    0.140166     -0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     2.5354e-14    0.1111     -0.172508   -2.60229e-14   0.207974     2.57978e-15   0.0848902   -0.149153   -5.57509e-16  -0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -2.14419e-14  -0.0847116   0.082999    3.13063e-14  -0.274424     5.10554e-15   0.575786    -0.61385    -1.11262e-15  -0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   1.10167e-14   0.0427486   0.0110863  -7.64953e-15   0.0663108    1.04296e-15   0.00167015   0.0832916   1.47632e-15   0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627      0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536   -0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631     0.012992    -0.111668      0.0393523    0.423534    0.688046     -0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631     0.012992     0.111668      0.0393523    0.423534   -0.688046     -0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627      0.588225     0.332816     -0.0472302   -0.18528     0.00844536   -0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalisation","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"using Arpack\n\nnum_eigvals = 3\n\nsm = sparse(ham)\nvals_ar, vecs_ar = eigs(sm; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.363124291613358\n -0.759019192277075","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sm, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"14-element Vector{Float64}:\n -6.979863998321608\n -3.363124291613371\n -0.759019192277087\n  0.13584182219620722\n  0.15789998694609686\n  0.8767114411781343\n  1.5305929970973162\n  1.5835732611867481\n  3.072870330325869\n  3.1256726539518374\n  4.862107221562164\n  6.260694850380595\n  6.402671211183113\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"If diagonalisation takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalisation","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalisation.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0⟩\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalisation","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"10-element Vector{Float64}:\n -6.97986399832162\n -3.363124291613361\n -0.7590191922770769\n  0.15789998694608018\n  0.8767114411781443\n  1.5835732611867421\n  3.125672653951844\n  4.862107221562177\n  6.402671211183111\n  9.093371706203955","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"4-element Vector{Float64}:\n 0.13584182219621782\n 1.5305929970973278\n 3.0728703303258604\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"sort([even_eigs; odd_eigs]) ≈ all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalisation","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0⟩\" => -0.0214153\n  fs\"|2 0 0 0 2⟩\" => -0.00237613\n  fs\"|0 0 4 0 0⟩\" => -0.980348\n  fs\"|0 0 0 3 1⟩\" => 0.00363555\n  fs\"|2 1 1 0 0⟩\" => -0.0119687\n  fs\"|1 0 2 0 1⟩\" => 0.0768085\n  fs\"|1 3 0 0 0⟩\" => 0.00363555\n  fs\"|0 1 2 1 0⟩\" => 0.177701\n  fs\"|0 0 1 1 2⟩\" => -0.0119687\n  fs\"|3 0 0 1 0⟩\" => 0.00195478\n  fs\"|0 2 0 2 0⟩\" => -0.0138439\n  fs\"|1 1 0 1 1⟩\" => -0.00234782\n  fs\"|0 1 0 0 3⟩\" => 0.00195478\n  fs\"|0 2 1 0 1⟩\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"5-element Vector{Float64}:\n 0.006686138945087796\n 0.033070399772041674\n 3.920486922565741\n 0.03307039977204166\n 0.0066861389450878495","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\nRimuIO.save_dvec(filename, dv) Save dict vector in BSON format.\nRimuIO.load_dvec(filename) Load BSON file into dict vector.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.load_dvec-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_dvec","text":"RimuIO.load_dvec(filename) -> AbstractDVec\n\nLoad AbstractDVec stored in BSON.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrames.DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_dvec-Tuple{Any, Any}","page":"I/O","title":"Rimu.RimuIO.save_dvec","text":"RimuIO.save_dvec(filename, dvec)\n\nSave dvec in BSON format.\n\nNotes\n\nOnly the localpart is saved. You may need to re-wrap the result in MPIData if using MPI.\nWhen using this function with MPI, make sure to save the vectors from different ranks to different files, e.g. by saving as RimuIO.save_dvec(\"filename-$(mpi_rank()).bson\", dvec).\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"module Hamiltonians\n\nThis module defines Hamiltonian types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nG2MomCorrelator\nG2RealCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Usage-with-FCIQMC-and-exact-diagonalisation","page":"Hamiltonians","title":"Usage with FCIQMC and exact diagonalisation","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"In order to define a specific model Hamiltonian with relevant parameters for the model, instantiate the model like this in the input file:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"hubb = HubbardReal1D(BoseFS((1,2,0,3)); u=1.0, t=1.0)","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonian hubb is now ready to be used for FCIQMC in lomc! and for exact diagonalisation with KrylovKit.jl directly, or after transforming into a sparse matrix first with","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"using SparseArrays\nsh = sparse(hubb)","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"or into a full matrix with","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"using LinearAlgebra\nfh = Matrix(hubb)","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This functionality relies on","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.BasisSetRep\nsparse\nMatrix","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BasisSetRep","page":"Hamiltonians","title":"Rimu.Hamiltonians.BasisSetRep","text":"BasisSetRep(\n    h::AbstractHamiltonian, addr=starting_address(h);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRep(h::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator h with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(h) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsm: sparse matrix representing h in the basis basis\nbasis: vector of addresses\nh: the Hamiltonian\n\nExample\n\njulia> h = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRep(h)\nBasisSetRep(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3×3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:\n  0.0  -1.0  -1.0\n -1.0   0.0  -1.0\n -1.0  -1.0   0.0\n\njulia> BasisSetRep(h, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating\nBasisSetRep(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2×2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:\n  0.0  -1.0\n -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues\n3-element Vector{Float64}:\n -1.9999999999999996\n  0.9999999999999997\n  1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector\n3-element Vector{Float64}:\n -0.5773502691896257\n -0.5773502691896255\n -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec\nDVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()\n  fs\"|0 0 1⟩\" => -0.57735\n  fs\"|0 1 0⟩\" => -0.57735\n  fs\"|1 0 0⟩\" => -0.57735\n\nHas methods for dimension, sparse, Matrix, starting_address.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#SparseArrays.sparse","page":"Hamiltonians","title":"SparseArrays.sparse","text":"sparse(h::AbstractHamiltonian, addr=starting_address(h); kwargs...)\nsparse(bsr::BasisSetRep)\n\nReturn a sparse matrix representation of h or bsr. kwargs are passed to BasisSetRep.\n\nSee BasisSetRep.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Base.Matrix","page":"Hamiltonians","title":"Base.Matrix","text":"Matrix(h::AbstractHamiltonian, addr=starting_address(h); sizelim=10^4, kwargs...)\nMatrix(bsr::BasisSetRep)\n\nReturn a dense matrix representation of h or bsr. kwargs are passed to BasisSetRep.\n\nSee BasisSetRep.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"If only the basis is required and not the matrix representation it is more efficient to use","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.build_basis","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.build_basis","page":"Hamiltonians","title":"Rimu.Hamiltonians.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRep.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i ϵ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential ϵ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleσ t_σ a^_iσ a_jσ +\n  frac12sum_iσ u_σσ n_iσ (n_iσ - 1) +\n  sum_iστu_στ n_iσ n_iτ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iσd v_σd x_di^2 n_iσ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented LatticeGeometrys for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C × D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(add::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k δ_r+qp+k\n\nArguments\n\nadd: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, η, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl \n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order  degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl \n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and  the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between  basis states of any noninteracting energy level, leading to many more offdiagonals and  fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger  restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The    allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make    the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the    interactions. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without    comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building  a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, η, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i ϵ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that  conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using  first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d) \n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, see four_oscillator_integral_general, with the additional restriction  that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to    make the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function  potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi ϵ_mathbfi n_mathbfi \n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix  representation of this Hamiltonian for a single particle is completely dense in the even-parity  subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nηs = (): a tuple of aspect ratios for the remaining dimensions (η_y, ...). Should be empty    for a 1D trap or contain values greater than 1.0. The maximum index    in other dimensions will be the largest even number less than M/η_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,    including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if    only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of \nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kσk^2 n_kσ \n    quad + sum_pqkσσ T_pqk a^_p-kσ a^_q+kσ a_qσ a_pσ \n    quad + sum_pqskkσσ Q_kka^_p-kσ a^_q+kσ a^_s+k-kσ\n                                       a_sσ a_qσ a_pσ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M÷2, M÷2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M÷2, M÷2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address α is replaced by frac12(α  α) for even and odd parity, respectively, where ᾱ == reverse(α).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(BoseFS{3,3}(0, 2, 1); u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ≈ eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ≈ eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ≤ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"G2MomCorrelator\nG2RealCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s b^_p  b_q a_r δ_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s a^_p  a_q a_r δ_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ≤ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ≤ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with  AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see  G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice  separated by a distance d with 0 ≤ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling  number and barn = NM is the mean filling number of lattice sites with N particles and  M lattice sites (or modes). \n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iσ = hat a^_iσ hat a_iσ\n\nwhere i is the mode and σ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0⟩\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0⟩\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nMethods that need to be implemented:\n\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer)\ndiagonal_element(::AbstractHamiltonian, address)\nstarting_address(::AbstractHamiltonian)\n\nOptional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x⋅(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRep: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over reachable off-diagonal matrix elements of type <:AbstractOffdiagonals. Defaults to returning Offdiagonals(h, a)\n\nSee also\n\nOffdiagonals\nAbstractOffdiagonals\n\njulia> addr = BoseFS((3,2,1));\n\n\njulia> H = HubbardReal1D(addr);\n\n\njulia> h = offdiagonals(H, addr)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1⟩\", -3.0)\n (fs\"|2 2 2⟩\", -2.449489742783178)\n (fs\"|3 1 2⟩\", -2.0)\n (fs\"|4 1 1⟩\", -2.8284271247461903)\n (fs\"|4 2 0⟩\", -2.0)\n (fs\"|3 3 0⟩\", -1.7320508075688772)\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, add)\n\nCompute the diagonal matrix element of the linear operator ham at address add.\n\nExample\n\njulia> addr = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(addr);\n\n\njulia> diagonal_element(H, addr)\n8.666666666666664\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. Part of the AbstractHamiltonian interface. When called on an AbstractMatrix return the index of the lowest diagonal element.\n\nExample\n\njulia> addr = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(addr);\n\n\njulia> addr == starting_address(H)\ntrue\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, add)\n\nCompute the number of number of reachable configurations from address add.\n\nExample\n\njulia> addr = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(addr);\n\n\njulia> num_offdiagonals(H, addr)\n10\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nLOStructure speficies properties of the linear operator op. If a special structure is known this can speed up calculations. Implemented structures are:\n\nIsDiagonal: The operator is diagonal.\nIsHermitian: The operator is complex and Hermitian or real and symmetric.\nAdjointKnown: The operator is not Hermitian, but its adjoint is implemented.\nAdjointUnknown: adjoint for this operator is not implemented.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ….\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(BoseFS((1,2,3)))\n28\n\njulia> dimension(HubbardReal1D(BoseFS((1,2,3))))\n28\n\njulia> dimension(HubbardReal1D(near_uniform(BoseFS{200,100})))\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> dimension(HubbardReal1D(near_uniform(BoseFS{200,100})))|>Float64\n1.3860838210861882e81\n\nSee also BasisSetRep.\n\nExtended Help\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). When extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h. Part of the AbstractHamiltonian interface. Defaults to typeof(starting_address(h)).\n\nOverload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb⋅(1:7) == onr(b)⋅(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w⋅op(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ⋅ A ⋅ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address)\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the possibly non-zero off-diagonal matrix elements of the column of ham indexed by add.\n\nThis is the default implementation defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also\n\noffdiagonals\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"LatticeGeometry\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\nnum_neighbours\nnum_dimensions\nneighbour_site","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LatticeGeometry","page":"Hamiltonians","title":"Rimu.Hamiltonians.LatticeGeometry","text":"abstract type LatticeGeometry{D}\n\nA LatticeGeometry controls which sites in an AbstractFockAddress are considered to be neighbours.\n\nCurrently only supported by HubbardRealSpace.\n\nAvailable implementations\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nInterface to implement\n\nBase.size: return the lattice size.\nneighbour_site(::LatticeGeometry, ::Int, ::Int)\nnum_dimensions(::LatticeGeometry)\nnum_neighbours(::LatticeGeometry)\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(size...) <: LatticeGeometry\n\nRectangular lattice with periodic boundary conditions of size size.\n\nThe dimension of the lattice is controlled by the number of arguments given to its constructor.\n\nThis is the default geometry used by HubbardRealSpace.\n\nExample\n\njulia> lattice = PeriodicBoundaries(5, 4) # 2D lattice of size 5 × 4\nPeriodicBoundaries(5, 4)\n\njulia> num_neighbours(lattice)\n4\n\njulia> neighbour_site(lattice, 1, 1)\n2\n\njulia> neighbour_site(lattice, 1, 2)\n5\n\njulia> neighbour_site(lattice, 1, 3)\n6\n\njulia> neighbour_site(lattice, 1, 4)\n16\n\nSee also\n\nLatticeGeometry\nHardwallBoundaries\nLadderBoundaries\nnum_neighbours\nneighbour_site\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries\n\nRectangular lattice with hard wall boundary conditions of size size. neighbour_site() will return 0 for some neighbours of boundary sites.\n\nThe dimension of the lattice is controlled by the number of arguments given to its constructor.\n\nExample\n\njulia> lattice = HardwallBoundaries(5) # 1D lattice of size 5\nHardwallBoundaries(5)\n\njulia> neighbour_site(lattice, 1, 1)\n2\n\njulia> neighbour_site(lattice, 1, 2)\n0\n\n\nSee also\n\nLatticeGeometry\nPeriodicBoundaries\nLadderBoundaries\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(size...; subgeometry=PeriodicBoundaries) <: LatticeGeometry\n\nLattice geometry where the first dimension is of size 2 and has hardwall boundary conditions. Using this geometry is more efficient than using HardwallBoundaries with a size of 2, as it does not generate rejected neighbours.\n\nIn other dimensions, it behaves like its subgeometry, which can be any LatticeGeometry.\n\nExample\n\njulia> lattice = LadderBoundaries(2, 3, 4) # 3D lattice of size 2 × 3 × 4\nLadderBoundaries(2, 3, 4)\n\njulia> num_neighbours(lattice)\n5\n\njulia> neighbour_site(lattice, 1, 1)\n2\n\njulia> neighbour_site(lattice, 1, 2)\n3\n\njulia> neighbour_site(lattice, 1, 3)\n5\n\njulia> neighbour_site(lattice, 1, 4)\n7\n\njulia> neighbour_site(lattice, 1, 5)\n19\n\nSee also\n\nLatticeGeometry\nPeriodicBoundaries\nHardwallBoundaries\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.num_neighbours","page":"Hamiltonians","title":"Rimu.Hamiltonians.num_neighbours","text":"num_neighbours(geom::LatticeGeometry)\n\nReturn the number of neighbours each lattice site has in this geometry.\n\nNote that for efficiency reasons, all sites are expected to have the same number of neighbours. If some of the neighbours are invalid, this is handled by having neighbour_site return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.num_dimensions","page":"Hamiltonians","title":"Rimu.Hamiltonians.num_dimensions","text":"num_dimensions(geom::LatticeGeometry)\n\nReturn the number of dimensions of the lattice in this geometry.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbour_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbour_site","text":"neighbour_site(geom::LatticeGeometry, site, i)\n\nFind the i-th neighbour of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions  and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions, \n\n    mathcalI(ijkl) = int_-infty^infty dx  \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function,  and is non-zero unless i+j+k+l is odd. See e.g.  Titchmarsh (1948). This is a generalisation of the closed form in  Papenbrock (2002), which is is the special  case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin, \n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state  corresponds to a D-tuple of harmonic oscillator indices mathbfn_i.  S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of  phi_i(0) to speed-up the calculation. The values can be calculated with  log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D  harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"testing.html#Modifying-the-Project.toml-file","page":"Code testing","title":"Modifying the Project.toml file","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"In order for the testing code to be able to run on the cloud server, external packages that are accessed in the code with using or import need to be installed first. This is done in the script actions.yml via the package manager, based on the information contained in the file test/Project.toml. More packages can be added to this file using the package manager in the following way: Say we want to install the package DelimitedFiles. At the Julia REPL, type the following:","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"julia> cd(\"test\")\njulia> ]\n(v1.0) pkg> activate .\n(test) pkg> add DelimitedFiles","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"This will a new line to the file Project.toml with the name of the package and the corresponding uuid. When Pipelines now runs the commands in yml script, it will install the package DelimitedFiles before running the runtest.jl script.","category":"page"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nαmathrmnaddrrangle\n\nReturns the new address naddr and the factor α. The value of α is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0⟩\" => 1\n\njulia> fs\"|0 1 2 0⟩\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3⟩⊗|0 1 0⟩\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|↑↓↑⟩\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0⟩{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0⟩{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ≤ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Σ_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen)\n\nCompute the new address of a hopping event for the Bose-Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic.\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ≤ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|⋅↑↑↑⋅⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|↑↓↓⟩\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3⟩{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s11\"}} where var\"#s11\", Tuple{Vararg{Int64, var\"#s10\"}} where var\"#s10\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n→ (nadd, α)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of α is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3⟩{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, α = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.11.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (\\hat{A}_1, ..., \\hat{A}_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dτ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ after projecting onto projector.\n\nS^n+1 = S^n -fracζdτlnleft(fracPΨ^(n+1)PΨ^(n)right)-fracξdτlnleft(fracPΨ^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4, α = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracξdτlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-α)*walkernumber() + α*UniformProjector()⋅ψ computed with walkernumber() and UniformProjector(). When ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)-fracξdτlnleft(fracΨ_1^n+1Ψ_1^texttargetright)\n\nWhen ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08, ξ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ and ξ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dτ) <: AbstractHamiltonian\n\nFirst order transition operator\n\n𝐓 = 1 + dτ(S - 𝐇)\n\nwhere 𝐇 is the hamiltonian and S is the shift.\n\n𝐓 represents the first order expansion of the exponential evolution operator of the imaginary-time Schrödinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a replica after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step(::PostStepStrategy, ::ReplicaState).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.QMCState","page":"API","title":"Rimu.QMCState","text":"QMCState\n\nHolds all information needed to run lomc!, except the dataframe. Holds an NTuple of ReplicaStates, the Hamiltonian, and various strategies that control the algorithm. Constructed and returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState(v, wm, pnorm, params, id)\n\nStruct that holds all information needed for an independent run of the algorithm.\n\nCan be advanced a step forward with advance!.\n\nFields\n\nhamiltonian: the model Hamiltonian.\nv: vector.\npv: vector from the previous step.\nwm: working memory.\npnorm: previous walker number (see walkernumber).\nparams: the FciqmcRunStrategy.\nid: string ID appended to reported column names.\n\nSee also QMCState, ReplicaStrategy, replica_stats, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\n\nInternal structure that holds the temporary reported values as well as metadata.\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_r_strat\nreport!\nreport_after_step\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dτ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"Abstract type for defining the strategy for updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(⋅,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dτ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TripleLogUpdate","page":"API","title":"Rimu.TripleLogUpdate","text":"TripleLogUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4, η = 0.01) <: ShiftStrategy\n\nStrategy for updating the shift according to the extended log formula with damping parameters ζ, ξ, and η.\n\nS^n+1 = S^n -fracζdτlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracξdτlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n- fracηdτlnleft(fracℜ(Ψ^n+1)_1^2 + ℑ(Ψ^n+1)_1^2\nℜ(Ψ^n)_1^2 + ℑ(Ψ^n)_1^2right)\n\nwhere N_mathrmw is the walkernumber(). When ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, s_strat)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{Any, Rimu.QMCState, Rimu.ReplicaState}","page":"API","title":"Rimu.advance!","text":"advance!(report::Report, state::QMCState, replica::ReplicaState)\n\nAdvance the replica by one step. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsStochasticInteger(),\n    initiator=NonInitiator(),\n    threading=nothing\n)\n\nReturn a default starting vector for lomc!. The default choice for the starting vector is\n\nv = PDVec(address => 10; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => 10; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => 10; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and [InitiatorRule].\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::QMCState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a QMCState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndτ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nreplica::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy.\nr_strat::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a QMCState that can be used for continuations.\n\nExample\n\njulia> add = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(add);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 11)\n\njulia> size(df2)\n(200, 11)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(BoseFS{6,3}(1, 2, 3); u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nτ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, ζ = 0.08, ξ = ζ^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nparams::FciqmcRunStrategy = RunTillLastStep(laststep = 100, dτ = 0.01, shift = diagonal_element(ham, address) - basic parameters of simulation state, see FciqmcRunStrategy. Parameter values are overridden by explicit keyword arguments laststep, dτ, shift; is mutated.\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step","page":"API","title":"Rimu.post_step","text":"post_step(::PostStepStrategy, ::ReplicaState) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_r_strat-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_r_strat","text":"refine_r_strat(r_strat::ReportingStrategy) -> r_strat\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, replicas::NTuple{N,ReplicaState}) -> (names, values)\n\nReturn the names and values of statistics related to N replicas consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also ReplicaState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step-Tuple{ReportingStrategy, Vararg{Any}}","page":"API","title":"Rimu.report_after_step","text":"report_after_step(::ReportingStrategy, step, report, state)\n\nThis function is called at the very end of a step, after reporting_interval steps. For example, it can be used to print some information to stdout.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nThrows an error if key already exists.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ≈ num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|⋅↑⇅↓⋅⟩\" => 1.0, fs\"|↓↓⋅↑↑⟩\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|↓↓⋅↑↑⟩\" => 0.5\n  fs\"|⋅↑⇅↓⋅⟩\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dτ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dτ","text":"update_dτ(s<:TimeStepStrategy, dτ, tnorm) -> new dτ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift","page":"API","title":"Rimu.update_shift","text":"update_shift(s <: ShiftStrategy, shift, shiftMode, tnorm, pnorm, dτ, step, df, v_new, v_old)\n\nUpdate the shift according to strategy s. See ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Rimu/StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with mpirun julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Next, we construct the starting vector. We use a PDVec, which is automatically MPI-distributed if MPI is available. We set the vector's stochastic style to IsDynamicSemistochastic, which improves statistics and reduces the sign problem.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails. Setting save_if=is_mpi_root() will ensure only the root MPI rank will write to the file. The chunk_size parameter determines how often the data is saved to the file. Progress messages are suppressed with io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"r_strat = ReportToFile(\n    filename=\"result.arrow\",\n    save_if=is_mpi_root(),\n    reporting_interval=1,\n    chunk_size=1000,\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10_000 walkers. We will also compute the projected energy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"s_strat = DoubleLogUpdate(targetwalkers=10_000)\npost_step = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ProjectedEnergy{HubbardMom1D{Float64, 10, BoseFS{10, 10, BitString{19, 1, UInt32}}, 6.0, 1.0}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}}(:vproj, :hproj, HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}((Pair{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64}[fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 1.0],)), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}((Pair{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64}[fs\"|1 0 0 0 8 0 0 0 1 0⟩\" => 5.692099788303083, fs\"|0 0 0 0 8 0 0 0 0 2⟩\" => 4.024922359499621, fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 7.0, fs\"|0 0 1 0 8 0 1 0 0 0⟩\" => 5.692099788303083, fs\"|0 0 0 1 8 1 0 0 0 0⟩\" => 5.692099788303083, fs\"|0 1 0 0 8 0 0 1 0 0⟩\" => 5.692099788303083],)))","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"lomc!(H, initial_vector; r_strat, s_strat, post_step, dτ=1e-4, laststep=10_000);\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schrödinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Blöte PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schrödinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija Čufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. lomc!.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main lomc!() computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI for use in lomc!() is enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. Čufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelmüller, D. Huber, M. Čufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/π^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↑↓↓⟩\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => 4.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => -1.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => -1.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => -1.0\n  fs\"|↑↑↓↓⟩\" => -4.0\n  fs\"|↓↑↓↑⟩\" => -1.0\n  fs\"|↓↑↑↓⟩\" => 1.0\n  fs\"|⇅⋅⋅⇅⟩\" => -1.0\n  fs\"|↑↓↓↑⟩\" => 1.0\n  fs\"|⋅⇅⇅⋅⟩\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => -2.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => 3.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => 3.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\ndeposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\nwalkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()⋅v == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
