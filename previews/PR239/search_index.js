var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndτ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dτ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ± $(r.σ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ± 0.0029454115601256865\n   G2(1) = 0.9179375998196901 ± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ± 0.0008078855891766442\n   G2(3) = 0.9888034965386578 ± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ± 0.0008078855891766442\n   G2(5) = 0.9179375998196901 ± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ± 0.1374885675286172\n   Replica 2: -3.974753826250174 ± 0.12466355058904437\n   Replica 3: -4.011054302602587 ± 0.12438161612595744\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlaststep = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dτ = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1⟩\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the lomc! function with the post_step keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0), Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}(Pair{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}[fs\"|1 1 1 1 1 1⟩\" => 10.0]), Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}(Pair{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}[fs\"|1 1 1 1 2 0⟩\" => -14.142135623730951, fs\"|0 2 1 1 1 1⟩\" => -14.142135623730951, fs\"|1 1 1 1 0 2⟩\" => -14.142135623730951, fs\"|1 2 0 1 1 1⟩\" => -14.142135623730951, fs\"|2 0 1 1 1 1⟩\" => -14.142135623730951, fs\"|1 1 1 2 0 1⟩\" => -14.142135623730951, fs\"|1 1 2 0 1 1⟩\" => -14.142135623730951, fs\"|1 1 0 2 1 1⟩\" => -14.142135623730951, fs\"|1 1 1 0 2 1⟩\" => -14.142135623730951, fs\"|1 0 2 1 1 1⟩\" => -14.142135623730951, fs\"|2 1 1 1 1 0⟩\" => -14.142135623730951, fs\"|0 1 1 1 1 2⟩\" => -14.142135623730951]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this example, we seed the random number generator in order to get reproducible results. This should not be done for actual computations.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Random\nRandom.seed!(17);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Finally, we can start the FCIQMC run.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df, state = lomc!(\n    H, initial_vector;\n    laststep,\n    dτ,\n    targetwalkers,\n    post_step,\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, df is a DataFrame containing the time series data, while state contains the internal state of FCIQMC, which can be used to continue computations.","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash,\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip570\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip570)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip571\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip570)\" d=\"M102.74 1505.26 L2352.76 1505.26 L2352.76 47.2441 L102.74 47.2441  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip572\">\n    <rect x=\"102\" y=\"47\" width=\"2251\" height=\"1459\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip572)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"165.712,1505.26 165.712,47.2441 \"/>\n<polyline clip-path=\"url(#clip572)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"873.5,1505.26 873.5,47.2441 \"/>\n<polyline clip-path=\"url(#clip572)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1581.29,1505.26 1581.29,47.2441 \"/>\n<polyline clip-path=\"url(#clip572)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2289.08,1505.26 2289.08,47.2441 \"/>\n<polyline clip-path=\"url(#clip570)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"102.74,1505.26 2352.76,1505.26 \"/>\n<polyline clip-path=\"url(#clip570)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"165.712,1505.26 165.712,1486.36 \"/>\n<polyline clip-path=\"url(#clip570)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"873.5,1505.26 873.5,1486.36 \"/>\n<polyline clip-path=\"url(#clip570)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1581.29,1505.26 1581.29,1486.36 \"/>\n<polyline clip-path=\"url(#clip570)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2289.08,1505.26 2289.08,1486.36 \"/>\n<path clip-path=\"url(#clip570)\" d=\"M165.712 1536.18 Q162.101 1536.18 160.272 1539.74 Q158.467 1543.28 158.467 1550.41 Q158.467 1557.52 160.272 1561.09 Q162.101 1564.63 165.712 1564.63 Q169.346 1564.63 171.152 1561.09 Q172.981 1557.52 172.981 1550.41 Q172.981 1543.28 171.152 1539.74 Q169.346 1536.18 165.712 1536.18 M165.712 1532.47 Q171.522 1532.47 174.578 1537.08 Q177.656 1541.66 177.656 1550.41 Q177.656 1559.14 174.578 1563.75 Q171.522 1568.33 165.712 1568.33 Q159.902 1568.33 156.823 1563.75 Q153.768 1559.14 153.768 1550.41 Q153.768 1541.66 156.823 1537.08 Q159.902 1532.47 165.712 1532.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M818.026 1563.72 L825.665 1563.72 L825.665 1537.36 L817.355 1539.03 L817.355 1534.77 L825.618 1533.1 L830.294 1533.1 L830.294 1563.72 L837.933 1563.72 L837.933 1567.66 L818.026 1567.66 L818.026 1563.72 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M857.378 1536.18 Q853.766 1536.18 851.938 1539.74 Q850.132 1543.28 850.132 1550.41 Q850.132 1557.52 851.938 1561.09 Q853.766 1564.63 857.378 1564.63 Q861.012 1564.63 862.817 1561.09 Q864.646 1557.52 864.646 1550.41 Q864.646 1543.28 862.817 1539.74 Q861.012 1536.18 857.378 1536.18 M857.378 1532.47 Q863.188 1532.47 866.243 1537.08 Q869.322 1541.66 869.322 1550.41 Q869.322 1559.14 866.243 1563.75 Q863.188 1568.33 857.378 1568.33 Q851.567 1568.33 848.489 1563.75 Q845.433 1559.14 845.433 1550.41 Q845.433 1541.66 848.489 1537.08 Q851.567 1532.47 857.378 1532.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M887.539 1536.18 Q883.928 1536.18 882.1 1539.74 Q880.294 1543.28 880.294 1550.41 Q880.294 1557.52 882.1 1561.09 Q883.928 1564.63 887.539 1564.63 Q891.174 1564.63 892.979 1561.09 Q894.808 1557.52 894.808 1550.41 Q894.808 1543.28 892.979 1539.74 Q891.174 1536.18 887.539 1536.18 M887.539 1532.47 Q893.35 1532.47 896.405 1537.08 Q899.484 1541.66 899.484 1550.41 Q899.484 1559.14 896.405 1563.75 Q893.35 1568.33 887.539 1568.33 Q881.729 1568.33 878.651 1563.75 Q875.595 1559.14 875.595 1550.41 Q875.595 1541.66 878.651 1537.08 Q881.729 1532.47 887.539 1532.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M917.701 1536.18 Q914.09 1536.18 912.261 1539.74 Q910.456 1543.28 910.456 1550.41 Q910.456 1557.52 912.261 1561.09 Q914.09 1564.63 917.701 1564.63 Q921.336 1564.63 923.141 1561.09 Q924.97 1557.52 924.97 1550.41 Q924.97 1543.28 923.141 1539.74 Q921.336 1536.18 917.701 1536.18 M917.701 1532.47 Q923.511 1532.47 926.567 1537.08 Q929.646 1541.66 929.646 1550.41 Q929.646 1559.14 926.567 1563.75 Q923.511 1568.33 917.701 1568.33 Q911.891 1568.33 908.812 1563.75 Q905.757 1559.14 905.757 1550.41 Q905.757 1541.66 908.812 1537.08 Q911.891 1532.47 917.701 1532.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M1529.9 1563.72 L1546.22 1563.72 L1546.22 1567.66 L1524.27 1567.66 L1524.27 1563.72 Q1526.94 1560.97 1531.52 1556.34 Q1536.13 1551.69 1537.31 1550.35 Q1539.55 1547.82 1540.43 1546.09 Q1541.33 1544.33 1541.33 1542.64 Q1541.33 1539.88 1539.39 1538.15 Q1537.47 1536.41 1534.37 1536.41 Q1532.17 1536.41 1529.71 1537.17 Q1527.28 1537.94 1524.51 1539.49 L1524.51 1534.77 Q1527.33 1533.63 1529.78 1533.05 Q1532.24 1532.47 1534.27 1532.47 Q1539.64 1532.47 1542.84 1535.16 Q1546.03 1537.85 1546.03 1542.34 Q1546.03 1544.47 1545.22 1546.39 Q1544.44 1548.28 1542.33 1550.88 Q1541.75 1551.55 1538.65 1554.77 Q1535.55 1557.96 1529.9 1563.72 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M1566.03 1536.18 Q1562.42 1536.18 1560.59 1539.74 Q1558.79 1543.28 1558.79 1550.41 Q1558.79 1557.52 1560.59 1561.09 Q1562.42 1564.63 1566.03 1564.63 Q1569.67 1564.63 1571.47 1561.09 Q1573.3 1557.52 1573.3 1550.41 Q1573.3 1543.28 1571.47 1539.74 Q1569.67 1536.18 1566.03 1536.18 M1566.03 1532.47 Q1571.84 1532.47 1574.9 1537.08 Q1577.98 1541.66 1577.98 1550.41 Q1577.98 1559.14 1574.9 1563.75 Q1571.84 1568.33 1566.03 1568.33 Q1560.22 1568.33 1557.14 1563.75 Q1554.09 1559.14 1554.09 1550.41 Q1554.09 1541.66 1557.14 1537.08 Q1560.22 1532.47 1566.03 1532.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M1596.2 1536.18 Q1592.58 1536.18 1590.76 1539.74 Q1588.95 1543.28 1588.95 1550.41 Q1588.95 1557.52 1590.76 1561.09 Q1592.58 1564.63 1596.2 1564.63 Q1599.83 1564.63 1601.64 1561.09 Q1603.46 1557.52 1603.46 1550.41 Q1603.46 1543.28 1601.64 1539.74 Q1599.83 1536.18 1596.2 1536.18 M1596.2 1532.47 Q1602.01 1532.47 1605.06 1537.08 Q1608.14 1541.66 1608.14 1550.41 Q1608.14 1559.14 1605.06 1563.75 Q1602.01 1568.33 1596.2 1568.33 Q1590.39 1568.33 1587.31 1563.75 Q1584.25 1559.14 1584.25 1550.41 Q1584.25 1541.66 1587.31 1537.08 Q1590.39 1532.47 1596.2 1532.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M1626.36 1536.18 Q1622.75 1536.18 1620.92 1539.74 Q1619.11 1543.28 1619.11 1550.41 Q1619.11 1557.52 1620.92 1561.09 Q1622.75 1564.63 1626.36 1564.63 Q1629.99 1564.63 1631.8 1561.09 Q1633.63 1557.52 1633.63 1550.41 Q1633.63 1543.28 1631.8 1539.74 Q1629.99 1536.18 1626.36 1536.18 M1626.36 1532.47 Q1632.17 1532.47 1635.22 1537.08 Q1638.3 1541.66 1638.3 1550.41 Q1638.3 1559.14 1635.22 1563.75 Q1632.17 1568.33 1626.36 1568.33 Q1620.55 1568.33 1617.47 1563.75 Q1614.41 1559.14 1614.41 1550.41 Q1614.41 1541.66 1617.47 1537.08 Q1620.55 1532.47 1626.36 1532.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M2247.76 1549.03 Q2251.11 1549.74 2252.99 1552.01 Q2254.89 1554.28 2254.89 1557.61 Q2254.89 1562.73 2251.37 1565.53 Q2247.85 1568.33 2241.37 1568.33 Q2239.19 1568.33 2236.88 1567.89 Q2234.59 1567.47 2232.13 1566.62 L2232.13 1562.1 Q2234.08 1563.24 2236.39 1563.82 Q2238.71 1564.4 2241.23 1564.4 Q2245.63 1564.4 2247.92 1562.66 Q2250.23 1560.92 2250.23 1557.61 Q2250.23 1554.56 2248.08 1552.85 Q2245.95 1551.11 2242.13 1551.11 L2238.1 1551.11 L2238.1 1547.27 L2242.32 1547.27 Q2245.77 1547.27 2247.59 1545.9 Q2249.42 1544.51 2249.42 1541.92 Q2249.42 1539.26 2247.53 1537.85 Q2245.65 1536.41 2242.13 1536.41 Q2240.21 1536.41 2238.01 1536.83 Q2235.81 1537.24 2233.17 1538.12 L2233.17 1533.96 Q2235.84 1533.22 2238.15 1532.85 Q2240.49 1532.47 2242.55 1532.47 Q2247.87 1532.47 2250.97 1534.91 Q2254.08 1537.31 2254.08 1541.43 Q2254.08 1544.3 2252.43 1546.29 Q2250.79 1548.26 2247.76 1549.03 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M2273.75 1536.18 Q2270.14 1536.18 2268.31 1539.74 Q2266.51 1543.28 2266.51 1550.41 Q2266.51 1557.52 2268.31 1561.09 Q2270.14 1564.63 2273.75 1564.63 Q2277.39 1564.63 2279.19 1561.09 Q2281.02 1557.52 2281.02 1550.41 Q2281.02 1543.28 2279.19 1539.74 Q2277.39 1536.18 2273.75 1536.18 M2273.75 1532.47 Q2279.56 1532.47 2282.62 1537.08 Q2285.7 1541.66 2285.7 1550.41 Q2285.7 1559.14 2282.62 1563.75 Q2279.56 1568.33 2273.75 1568.33 Q2267.94 1568.33 2264.86 1563.75 Q2261.81 1559.14 2261.81 1550.41 Q2261.81 1541.66 2264.86 1537.08 Q2267.94 1532.47 2273.75 1532.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M2303.91 1536.18 Q2300.3 1536.18 2298.47 1539.74 Q2296.67 1543.28 2296.67 1550.41 Q2296.67 1557.52 2298.47 1561.09 Q2300.3 1564.63 2303.91 1564.63 Q2307.55 1564.63 2309.35 1561.09 Q2311.18 1557.52 2311.18 1550.41 Q2311.18 1543.28 2309.35 1539.74 Q2307.55 1536.18 2303.91 1536.18 M2303.91 1532.47 Q2309.72 1532.47 2312.78 1537.08 Q2315.86 1541.66 2315.86 1550.41 Q2315.86 1559.14 2312.78 1563.75 Q2309.72 1568.33 2303.91 1568.33 Q2298.1 1568.33 2295.03 1563.75 Q2291.97 1559.14 2291.97 1550.41 Q2291.97 1541.66 2295.03 1537.08 Q2298.1 1532.47 2303.91 1532.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M2334.08 1536.18 Q2330.46 1536.18 2328.64 1539.74 Q2326.83 1543.28 2326.83 1550.41 Q2326.83 1557.52 2328.64 1561.09 Q2330.46 1564.63 2334.08 1564.63 Q2337.71 1564.63 2339.52 1561.09 Q2341.34 1557.52 2341.34 1550.41 Q2341.34 1543.28 2339.52 1539.74 Q2337.71 1536.18 2334.08 1536.18 M2334.08 1532.47 Q2339.89 1532.47 2342.94 1537.08 Q2346.02 1541.66 2346.02 1550.41 Q2346.02 1559.14 2342.94 1563.75 Q2339.89 1568.33 2334.08 1568.33 Q2328.27 1568.33 2325.19 1563.75 Q2322.13 1559.14 2322.13 1550.41 Q2322.13 1541.66 2325.19 1537.08 Q2328.27 1532.47 2334.08 1532.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M1168.96 1615.53 L1168.96 1621.06 Q1166.48 1619.79 1163.8 1619.15 Q1161.13 1618.52 1158.27 1618.52 Q1153.91 1618.52 1151.71 1619.85 Q1149.55 1621.19 1149.55 1623.87 Q1149.55 1625.9 1151.1 1627.08 Q1152.66 1628.23 1157.38 1629.28 L1159.38 1629.72 Q1165.62 1631.06 1168.23 1633.51 Q1170.87 1635.93 1170.87 1640.29 Q1170.87 1645.25 1166.92 1648.15 Q1163.01 1651.05 1156.13 1651.05 Q1153.27 1651.05 1150.15 1650.47 Q1147.06 1649.93 1143.63 1648.82 L1143.63 1642.77 Q1146.87 1644.46 1150.02 1645.32 Q1153.17 1646.15 1156.26 1646.15 Q1160.4 1646.15 1162.63 1644.74 Q1164.85 1643.31 1164.85 1640.73 Q1164.85 1638.35 1163.23 1637.07 Q1161.64 1635.8 1156.2 1634.62 L1154.16 1634.15 Q1148.72 1633 1146.3 1630.64 Q1143.88 1628.26 1143.88 1624.12 Q1143.88 1619.09 1147.44 1616.35 Q1151.01 1613.62 1157.57 1613.62 Q1160.81 1613.62 1163.68 1614.09 Q1166.54 1614.57 1168.96 1615.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M1185.99 1604.35 L1185.99 1614.48 L1198.05 1614.48 L1198.05 1619.03 L1185.99 1619.03 L1185.99 1638.38 Q1185.99 1642.74 1187.17 1643.98 Q1188.38 1645.22 1192.04 1645.22 L1198.05 1645.22 L1198.05 1650.12 L1192.04 1650.12 Q1185.26 1650.12 1182.68 1647.61 Q1180.1 1645.06 1180.1 1638.38 L1180.1 1619.03 L1175.8 1619.03 L1175.8 1614.48 L1180.1 1614.48 L1180.1 1604.35 L1185.99 1604.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M1236.25 1630.84 L1236.25 1633.7 L1209.32 1633.7 Q1209.7 1639.75 1212.95 1642.93 Q1216.23 1646.08 1222.05 1646.08 Q1225.42 1646.08 1228.58 1645.25 Q1231.76 1644.43 1234.88 1642.77 L1234.88 1648.31 Q1231.73 1649.65 1228.42 1650.35 Q1225.11 1651.05 1221.7 1651.05 Q1213.17 1651.05 1208.17 1646.08 Q1203.21 1641.12 1203.21 1632.65 Q1203.21 1623.9 1207.92 1618.77 Q1212.66 1613.62 1220.68 1613.62 Q1227.88 1613.62 1232.04 1618.26 Q1236.25 1622.88 1236.25 1630.84 M1230.39 1629.12 Q1230.33 1624.31 1227.68 1621.45 Q1225.07 1618.58 1220.75 1618.58 Q1215.84 1618.58 1212.88 1621.35 Q1209.96 1624.12 1209.51 1629.15 L1230.39 1629.12 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M1251.52 1644.78 L1251.52 1663.68 L1245.64 1663.68 L1245.64 1614.48 L1251.52 1614.48 L1251.52 1619.89 Q1253.37 1616.7 1256.17 1615.18 Q1259 1613.62 1262.92 1613.62 Q1269.41 1613.62 1273.45 1618.77 Q1277.53 1623.93 1277.53 1632.33 Q1277.53 1640.73 1273.45 1645.89 Q1269.41 1651.05 1262.92 1651.05 Q1259 1651.05 1256.17 1649.52 Q1253.37 1647.96 1251.52 1644.78 M1271.45 1632.33 Q1271.45 1625.87 1268.78 1622.21 Q1266.13 1618.52 1261.49 1618.52 Q1256.84 1618.52 1254.17 1622.21 Q1251.52 1625.87 1251.52 1632.33 Q1251.52 1638.79 1254.17 1642.48 Q1256.84 1646.15 1261.49 1646.15 Q1266.13 1646.15 1268.78 1642.48 Q1271.45 1638.79 1271.45 1632.33 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M1309.96 1615.53 L1309.96 1621.06 Q1307.48 1619.79 1304.8 1619.15 Q1302.13 1618.52 1299.27 1618.52 Q1294.91 1618.52 1292.71 1619.85 Q1290.55 1621.19 1290.55 1623.87 Q1290.55 1625.9 1292.11 1627.08 Q1293.66 1628.23 1298.38 1629.28 L1300.38 1629.72 Q1306.62 1631.06 1309.23 1633.51 Q1311.87 1635.93 1311.87 1640.29 Q1311.87 1645.25 1307.92 1648.15 Q1304.01 1651.05 1297.13 1651.05 Q1294.27 1651.05 1291.15 1650.47 Q1288.06 1649.93 1284.63 1648.82 L1284.63 1642.77 Q1287.87 1644.46 1291.02 1645.32 Q1294.17 1646.15 1297.26 1646.15 Q1301.4 1646.15 1303.63 1644.74 Q1305.86 1643.31 1305.86 1640.73 Q1305.86 1638.35 1304.23 1637.07 Q1302.64 1635.8 1297.2 1634.62 L1295.16 1634.15 Q1289.72 1633 1287.3 1630.64 Q1284.88 1628.26 1284.88 1624.12 Q1284.88 1619.09 1288.45 1616.35 Q1292.01 1613.62 1298.57 1613.62 Q1301.81 1613.62 1304.68 1614.09 Q1307.54 1614.57 1309.96 1615.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip572)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"102.74,1477.74 2352.76,1477.74 \"/>\n<polyline clip-path=\"url(#clip572)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"102.74,1134.18 2352.76,1134.18 \"/>\n<polyline clip-path=\"url(#clip572)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"102.74,790.629 2352.76,790.629 \"/>\n<polyline clip-path=\"url(#clip572)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"102.74,447.075 2352.76,447.075 \"/>\n<polyline clip-path=\"url(#clip572)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"102.74,103.521 2352.76,103.521 \"/>\n<polyline clip-path=\"url(#clip570)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"102.74,1505.26 102.74,47.2441 \"/>\n<polyline clip-path=\"url(#clip570)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"102.74,1477.74 121.638,1477.74 \"/>\n<polyline clip-path=\"url(#clip570)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"102.74,1134.18 121.638,1134.18 \"/>\n<polyline clip-path=\"url(#clip570)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"102.74,790.629 121.638,790.629 \"/>\n<polyline clip-path=\"url(#clip570)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"102.74,447.075 121.638,447.075 \"/>\n<polyline clip-path=\"url(#clip570)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"102.74,103.521 121.638,103.521 \"/>\n<path clip-path=\"url(#clip570)\" d=\"M54.7958 1463.54 Q51.1847 1463.54 49.356 1467.1 Q47.5504 1470.64 47.5504 1477.77 Q47.5504 1484.88 49.356 1488.44 Q51.1847 1491.99 54.7958 1491.99 Q58.43 1491.99 60.2356 1488.44 Q62.0643 1484.88 62.0643 1477.77 Q62.0643 1470.64 60.2356 1467.1 Q58.43 1463.54 54.7958 1463.54 M54.7958 1459.83 Q60.6059 1459.83 63.6615 1464.44 Q66.7402 1469.02 66.7402 1477.77 Q66.7402 1486.5 63.6615 1491.11 Q60.6059 1495.69 54.7958 1495.69 Q48.9856 1495.69 45.9069 1491.11 Q42.8514 1486.5 42.8514 1477.77 Q42.8514 1469.02 45.9069 1464.44 Q48.9856 1459.83 54.7958 1459.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M-11.5002 1147.53 L4.81919 1147.53 L4.81919 1151.46 L-17.1251 1151.46 L-17.1251 1147.53 Q-14.4631 1144.77 -9.8798 1140.14 Q-5.27335 1135.49 -4.0928 1134.15 Q-1.84744 1131.63 -0.967813 1129.89 Q-0.0650401 1128.13 -0.0650401 1126.44 Q-0.0650401 1123.69 -2.00947 1121.95 Q-3.93076 1120.21 -7.0326 1120.21 Q-9.23166 1120.21 -11.6853 1120.98 Q-14.1159 1121.74 -16.8937 1123.29 L-16.8937 1118.57 Q-14.0696 1117.44 -11.6159 1116.86 Q-9.16221 1116.28 -7.12519 1116.28 Q-1.75485 1116.28 1.43958 1118.96 Q4.63401 1121.65 4.63401 1126.14 Q4.63401 1128.27 3.82383 1130.19 Q3.0368 1132.09 0.930325 1134.68 Q0.351624 1135.35 -2.75021 1138.57 Q-5.85205 1141.76 -11.5002 1147.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M14.6803 1116.9 L33.0366 1116.9 L33.0366 1120.84 L18.9626 1120.84 L18.9626 1129.31 Q19.9811 1128.96 20.9997 1128.8 Q22.0182 1128.62 23.0367 1128.62 Q28.8237 1128.62 32.2033 1131.79 Q35.5829 1134.96 35.5829 1140.38 Q35.5829 1145.95 32.1107 1149.06 Q28.6385 1152.13 22.3191 1152.13 Q20.1432 1152.13 17.8747 1151.76 Q15.6293 1151.39 13.2219 1150.65 L13.2219 1145.95 Q15.3052 1147.09 17.5275 1147.64 Q19.7497 1148.2 22.2265 1148.2 Q26.2311 1148.2 28.5691 1146.09 Q30.907 1143.99 30.907 1140.38 Q30.907 1136.76 28.5691 1134.66 Q26.2311 1132.55 22.2265 1132.55 Q20.3515 1132.55 18.4765 1132.97 Q16.6247 1133.38 14.6803 1134.26 L14.6803 1116.9 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M54.7958 1119.98 Q51.1847 1119.98 49.356 1123.55 Q47.5504 1127.09 47.5504 1134.22 Q47.5504 1141.32 49.356 1144.89 Q51.1847 1148.43 54.7958 1148.43 Q58.43 1148.43 60.2356 1144.89 Q62.0643 1141.32 62.0643 1134.22 Q62.0643 1127.09 60.2356 1123.55 Q58.43 1119.98 54.7958 1119.98 M54.7958 1116.28 Q60.6059 1116.28 63.6615 1120.88 Q66.7402 1125.47 66.7402 1134.22 Q66.7402 1142.94 63.6615 1147.55 Q60.6059 1152.13 54.7958 1152.13 Q48.9856 1152.13 45.9069 1147.55 Q42.8514 1142.94 42.8514 1134.22 Q42.8514 1125.47 45.9069 1120.88 Q48.9856 1116.28 54.7958 1116.28 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M-15.4816 773.349 L2.87476 773.349 L2.87476 777.284 L-11.1992 777.284 L-11.1992 785.757 Q-10.1807 785.409 -9.16221 785.247 Q-8.1437 785.062 -7.12519 785.062 Q-1.33818 785.062 2.04143 788.234 Q5.42104 791.405 5.42104 796.821 Q5.42104 802.4 1.94884 805.502 Q-1.52337 808.581 -7.84278 808.581 Q-10.0187 808.581 -12.2872 808.21 Q-14.5326 807.84 -16.9399 807.099 L-16.9399 802.4 Q-14.8566 803.534 -12.6344 804.09 Q-10.4122 804.645 -7.93537 804.645 Q-3.93076 804.645 -1.59281 802.539 Q0.745141 800.433 0.745141 796.821 Q0.745141 793.21 -1.59281 791.104 Q-3.93076 788.997 -7.93537 788.997 Q-9.81036 788.997 -11.6853 789.414 Q-13.5372 789.831 -15.4816 790.71 L-15.4816 773.349 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M24.6339 776.428 Q21.0228 776.428 19.1941 779.993 Q17.3886 783.534 17.3886 790.664 Q17.3886 797.77 19.1941 801.335 Q21.0228 804.877 24.6339 804.877 Q28.2681 804.877 30.0737 801.335 Q31.9024 797.77 31.9024 790.664 Q31.9024 783.534 30.0737 779.993 Q28.2681 776.428 24.6339 776.428 M24.6339 772.724 Q30.4441 772.724 33.4996 777.331 Q36.5783 781.914 36.5783 790.664 Q36.5783 799.391 33.4996 803.997 Q30.4441 808.581 24.6339 808.581 Q18.8237 808.581 15.7451 803.997 Q12.6895 799.391 12.6895 790.664 Q12.6895 781.914 15.7451 777.331 Q18.8237 772.724 24.6339 772.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M54.7958 776.428 Q51.1847 776.428 49.356 779.993 Q47.5504 783.534 47.5504 790.664 Q47.5504 797.77 49.356 801.335 Q51.1847 804.877 54.7958 804.877 Q58.43 804.877 60.2356 801.335 Q62.0643 797.77 62.0643 790.664 Q62.0643 783.534 60.2356 779.993 Q58.43 776.428 54.7958 776.428 M54.7958 772.724 Q60.6059 772.724 63.6615 777.331 Q66.7402 781.914 66.7402 790.664 Q66.7402 799.391 63.6615 803.997 Q60.6059 808.581 54.7958 808.581 Q48.9856 808.581 45.9069 803.997 Q42.8514 799.391 42.8514 790.664 Q42.8514 781.914 45.9069 777.331 Q48.9856 772.724 54.7958 772.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M-16.7085 429.795 L5.51363 429.795 L5.51363 431.786 L-7.0326 464.355 L-11.9168 464.355 L-0.111336 433.73 L-16.7085 433.73 L-16.7085 429.795 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M14.6803 429.795 L33.0366 429.795 L33.0366 433.73 L18.9626 433.73 L18.9626 442.203 Q19.9811 441.855 20.9997 441.693 Q22.0182 441.508 23.0367 441.508 Q28.8237 441.508 32.2033 444.679 Q35.5829 447.851 35.5829 453.267 Q35.5829 458.846 32.1107 461.948 Q28.6385 465.027 22.3191 465.027 Q20.1432 465.027 17.8747 464.656 Q15.6293 464.286 13.2219 463.545 L13.2219 458.846 Q15.3052 459.98 17.5275 460.536 Q19.7497 461.091 22.2265 461.091 Q26.2311 461.091 28.5691 458.985 Q30.907 456.878 30.907 453.267 Q30.907 449.656 28.5691 447.55 Q26.2311 445.443 22.2265 445.443 Q20.3515 445.443 18.4765 445.86 Q16.6247 446.277 14.6803 447.156 L14.6803 429.795 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M54.7958 432.874 Q51.1847 432.874 49.356 436.439 Q47.5504 439.98 47.5504 447.11 Q47.5504 454.216 49.356 457.781 Q51.1847 461.323 54.7958 461.323 Q58.43 461.323 60.2356 457.781 Q62.0643 454.216 62.0643 447.11 Q62.0643 439.98 60.2356 436.439 Q58.43 432.874 54.7958 432.874 M54.7958 429.17 Q60.6059 429.17 63.6615 433.777 Q66.7402 438.36 66.7402 447.11 Q66.7402 455.837 63.6615 460.443 Q60.6059 465.027 54.7958 465.027 Q48.9856 465.027 45.9069 460.443 Q42.8514 455.837 42.8514 447.11 Q42.8514 438.36 45.9069 433.777 Q48.9856 429.17 54.7958 429.17 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M-44.8796 116.866 L-37.2408 116.866 L-37.2408 90.5005 L-45.5509 92.1671 L-45.5509 87.9079 L-37.2871 86.2413 L-32.6112 86.2413 L-32.6112 116.866 L-24.9723 116.866 L-24.9723 120.801 L-44.8796 120.801 L-44.8796 116.866 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M-5.52797 89.3199 Q-9.13907 89.3199 -10.9678 92.8847 Q-12.7733 96.4264 -12.7733 103.556 Q-12.7733 110.662 -10.9678 114.227 Q-9.13907 117.769 -5.52797 117.769 Q-1.89373 117.769 -0.0881881 114.227 Q1.74051 110.662 1.74051 103.556 Q1.74051 96.4264 -0.0881881 92.8847 Q-1.89373 89.3199 -5.52797 89.3199 M-5.52797 85.6163 Q0.28218 85.6163 3.33772 90.2227 Q6.41641 94.806 6.41641 103.556 Q6.41641 112.283 3.33772 116.889 Q0.28218 121.473 -5.52797 121.473 Q-11.3381 121.473 -14.4168 116.889 Q-17.4724 112.283 -17.4724 103.556 Q-17.4724 94.806 -14.4168 90.2227 Q-11.3381 85.6163 -5.52797 85.6163 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M24.6339 89.3199 Q21.0228 89.3199 19.1941 92.8847 Q17.3886 96.4264 17.3886 103.556 Q17.3886 110.662 19.1941 114.227 Q21.0228 117.769 24.6339 117.769 Q28.2681 117.769 30.0737 114.227 Q31.9024 110.662 31.9024 103.556 Q31.9024 96.4264 30.0737 92.8847 Q28.2681 89.3199 24.6339 89.3199 M24.6339 85.6163 Q30.4441 85.6163 33.4996 90.2227 Q36.5783 94.806 36.5783 103.556 Q36.5783 112.283 33.4996 116.889 Q30.4441 121.473 24.6339 121.473 Q18.8237 121.473 15.7451 116.889 Q12.6895 112.283 12.6895 103.556 Q12.6895 94.806 15.7451 90.2227 Q18.8237 85.6163 24.6339 85.6163 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M54.7958 89.3199 Q51.1847 89.3199 49.356 92.8847 Q47.5504 96.4264 47.5504 103.556 Q47.5504 110.662 49.356 114.227 Q51.1847 117.769 54.7958 117.769 Q58.43 117.769 60.2356 114.227 Q62.0643 110.662 62.0643 103.556 Q62.0643 96.4264 60.2356 92.8847 Q58.43 89.3199 54.7958 89.3199 M54.7958 85.6163 Q60.6059 85.6163 63.6615 90.2227 Q66.7402 94.806 66.7402 103.556 Q66.7402 112.283 63.6615 116.889 Q60.6059 121.473 54.7958 121.473 Q48.9856 121.473 45.9069 116.889 Q42.8514 112.283 42.8514 103.556 Q42.8514 94.806 45.9069 90.2227 Q48.9856 85.6163 54.7958 85.6163 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M-117.323 825.841 L-95.8069 825.841 L-95.8069 831.697 L-117.132 831.697 Q-122.193 831.697 -124.707 833.671 Q-127.222 835.644 -127.222 839.591 Q-127.222 844.333 -124.198 847.07 Q-121.174 849.808 -115.954 849.808 L-95.8069 849.808 L-95.8069 855.696 L-131.455 855.696 L-131.455 849.808 L-125.917 849.808 Q-129.131 847.707 -130.723 844.874 Q-132.314 842.01 -132.314 838.286 Q-132.314 832.143 -128.495 828.992 Q-124.707 825.841 -117.323 825.841 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M-127.349 800.346 Q-127.349 805.057 -123.657 807.794 Q-119.997 810.531 -113.599 810.531 Q-107.202 810.531 -103.509 807.826 Q-99.8491 805.089 -99.8491 800.346 Q-99.8491 795.667 -103.541 792.93 Q-107.233 790.193 -113.599 790.193 Q-119.933 790.193 -123.625 792.93 Q-127.349 795.667 -127.349 800.346 M-132.314 800.346 Q-132.314 792.707 -127.349 788.347 Q-122.384 783.986 -113.599 783.986 Q-104.846 783.986 -99.8491 788.347 Q-94.8839 792.707 -94.8839 800.346 Q-94.8839 808.017 -99.8491 812.377 Q-104.846 816.706 -113.599 816.706 Q-122.384 816.706 -127.349 812.377 Q-132.314 808.017 -132.314 800.346 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M-125.98 753.622 Q-126.553 754.609 -126.808 755.786 Q-127.094 756.932 -127.094 758.333 Q-127.094 763.298 -123.848 765.971 Q-120.633 768.613 -114.586 768.613 L-95.8069 768.613 L-95.8069 774.501 L-131.455 774.501 L-131.455 768.613 L-125.917 768.613 Q-129.163 766.767 -130.723 763.807 Q-132.314 760.847 -132.314 756.614 Q-132.314 756.009 -132.219 755.277 Q-132.155 754.545 -131.996 753.654 L-125.98 753.622 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M-124.612 720.87 Q-128.558 718.674 -130.436 715.619 Q-132.314 712.563 -132.314 708.425 Q-132.314 702.855 -128.399 699.832 Q-124.516 696.808 -117.323 696.808 L-95.8069 696.808 L-95.8069 702.696 L-117.132 702.696 Q-122.256 702.696 -124.739 704.51 Q-127.222 706.325 -127.222 710.049 Q-127.222 714.6 -124.198 717.242 Q-121.174 719.884 -115.954 719.884 L-95.8069 719.884 L-95.8069 725.772 L-117.132 725.772 Q-122.288 725.772 -124.739 727.586 Q-127.222 729.4 -127.222 733.188 Q-127.222 737.676 -124.166 740.318 Q-121.142 742.959 -115.954 742.959 L-95.8069 742.959 L-95.8069 748.848 L-131.455 748.848 L-131.455 742.959 L-125.917 742.959 Q-129.195 740.954 -130.755 738.153 Q-132.314 735.352 -132.314 731.501 Q-132.314 727.618 -130.341 724.913 Q-128.367 722.175 -124.612 720.87 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip572)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-2147.28,103.521 4602.77,103.521 \"/>\n<polyline clip-path=\"url(#clip572)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"166.42,1464 167.128,1462.52 167.835,1462.38 168.543,1462.19 169.251,1461.89 169.959,1461.45 170.667,1459.58 171.374,1459.05 172.082,1458.39 172.79,1457.68 173.498,1456.85 174.206,1454.53 174.913,1452.17 175.621,1451.14 176.329,1449.96 177.037,1448.66 177.744,1447.21 178.452,1445.62 179.16,1443.88 179.868,1441.99 180.576,1439.94 181.283,1437.75 181.991,1433.98 182.699,1430.06 183.407,1427.37 184.115,1424.47 184.822,1421.4 185.53,1418.09 186.238,1414.5 186.946,1410.7 187.653,1406.7 188.361,1402.42 189.069,1397.81 189.777,1390.29 190.485,1385.21 191.192,1378.38 191.9,1372.63 192.608,1365.24 193.316,1357.6 194.024,1349.6 194.731,1341.03 195.439,1333.66 196.147,1325.89 196.855,1317.83 197.563,1309.44 198.27,1300.86 198.978,1291.99 199.686,1275.86 200.394,1266.41 201.101,1256.69 201.809,1245.28 202.517,1232.3 203.225,1220.23 203.933,1208.14 204.64,1195.74 205.348,1183.11 206.056,1170.38 206.764,1158.67 207.472,1144.11 208.179,1129.56 208.887,1116.07 209.595,1102.58 210.303,1088.94 211.01,1076.61 211.718,1063.99 212.426,1049.92 213.134,1034.26 213.842,1017.33 214.549,1003.37 215.257,987.805 215.965,973.417 216.673,956.368 217.381,940.961 218.088,926.894 218.796,908.758 219.504,893.61 220.212,878.738 220.92,863.882 221.627,849.262 222.335,831.961 223.043,820.246 223.751,805.784 224.458,792.73 225.166,777.117 225.874,761.539 226.582,747.398 227.29,735.213 227.997,725.645 228.705,714.671 229.413,700.738 230.121,687.23 230.829,675.101 231.536,663.051 232.244,648.337 232.952,634.033 233.66,621.447 234.368,608.85 235.075,597.914 235.783,588.533 236.491,578.177 237.199,569.127 237.906,556.032 238.614,544.524 239.322,535.958 240.03,525.901 240.738,517.523 241.445,507.881 242.153,496.543 242.861,488.603 243.569,480.574 244.277,471.427 244.984,460.929 245.692,452.173 246.4,444.774 247.108,436.008 247.815,426.273 248.523,419.606 249.231,408.846 249.939,402.46 250.647,394.891 251.354,390.094 252.062,381.411 252.77,375.359 253.478,365.64 254.186,357.481 254.893,352.567 255.601,345.984 256.309,341.058 257.017,334.748 257.725,330.09 258.432,325.553 259.14,320.942 259.848,313.537 260.556,307.869 261.263,305.096 261.971,300.78 262.679,296.698 263.387,288.633 264.095,284.745 264.802,280.863 265.51,275.708 266.218,268.109 266.926,263.787 267.634,256.689 268.341,253.877 269.049,249.936 269.757,244.68 270.465,243.753 271.172,238.64 271.88,237.497 272.588,236.752 273.296,235.687 274.004,231.834 274.711,228.125 275.419,225.894 276.127,222.212 276.835,216.033 277.543,212.881 278.25,210.117 278.958,207.118 279.666,202.653 280.374,201.001 281.082,198.441 281.789,195.718 282.497,194.227 283.205,187.701 283.913,185.543 284.62,184.814 285.328,183.937 286.036,183.364 286.744,182.447 287.452,180.165 288.159,179.293 288.867,178.488 289.575,178.938 290.283,176.534 290.991,175.488 291.698,173.508 292.406,171.396 293.114,173.328 293.822,170.73 294.529,168.694 295.237,167.738 295.945,165.663 296.653,164.63 297.361,159.657 298.068,157.9 298.776,156.049 299.484,155.7 300.192,155.322 300.9,153.634 301.607,150.696 302.315,150.779 303.023,149.393 303.731,146.79 304.439,144.342 305.146,144.4 305.854,144.517 306.562,144.779 307.27,144.893 307.977,142.256 308.685,143.87 309.393,141.09 310.101,141.215 310.809,141.254 311.516,141.047 312.224,139.625 312.932,139.87 313.64,138.564 314.348,135.951 315.055,139.302 315.763,134.952 316.471,134.343 317.179,133.351 317.886,133.944 318.594,134.199 319.302,132.72 320.01,132.991 320.718,135.963 321.425,135.707 322.133,131.769 322.841,131.932 323.549,128.057 324.257,128.556 324.964,131.934 325.672,132.215 326.38,131.075 327.088,132.655 327.796,131.365 328.503,130.192 329.211,130.184 329.919,128.996 330.627,129.225 331.334,131.761 332.042,134.5 332.75,135.109 333.458,136.348 334.166,134.395 334.873,134.278 335.581,136.719 336.289,136.069 336.997,134.185 337.705,133.796 338.412,129.362 339.12,128.883 339.828,130.478 340.536,129.214 341.243,126.166 341.951,125.944 342.659,124.503 343.367,123.239 344.075,124.444 344.782,124.323 345.49,125.716 346.198,122.742 346.906,122.727 347.614,124.181 348.321,126.589 349.029,126.625 349.737,126.47 350.445,126.332 351.153,128.832 351.86,128.654 352.568,126.766 353.276,125.047 353.984,123.234 354.691,122.882 355.399,122.665 356.107,122.381 356.815,124.929 357.523,123.246 358.23,121.908 358.938,120.321 359.646,116.073 360.354,116.548 361.062,116.498 361.769,116.592 362.477,116.673 363.185,113.87 363.893,114.149 364.601,114.629 365.308,113.727 366.016,113.895 366.724,112.896 367.432,111.702 368.139,109.119 368.847,110.799 369.555,109.889 370.263,110.566 370.971,111.301 371.678,109.196 372.386,111.336 373.094,111.772 373.802,112.054 374.51,112.555 375.217,110.393 375.925,110.891 376.633,111.717 377.341,112.14 378.048,108.541 378.756,110.123 379.464,110.702 380.172,111 380.88,111.247 381.587,111.556 382.295,112.028 383.003,112.258 383.711,112.741 384.419,116.014 385.126,114.707 385.834,112.35 386.542,111.399 387.25,111.73 387.958,113.616 388.665,111.228 389.373,111.754 390.081,113.368 390.789,113.643 391.496,115.24 392.204,112.489 392.912,106.147 393.62,108.577 394.328,109.262 395.035,106.845 395.743,108.719 396.451,110.6 397.159,109.192 397.867,108.227 398.574,108.818 399.282,110.578 399.99,110.709 400.698,111.035 401.405,108.653 402.113,106.609 402.821,105.892 403.529,105.223 404.237,105.916 404.944,104.994 405.652,103.134 406.36,109.493 407.068,111.267 407.776,110.167 408.483,110.44 409.191,111.799 409.899,112.088 410.607,114.993 411.315,115.267 412.022,116.617 412.73,115.157 413.438,112.636 414.146,108.903 414.853,110.694 415.561,109.466 416.269,109.904 416.977,107.838 417.685,108.158 418.392,109.97 419.1,108.845 419.808,110.793 420.516,109.621 421.224,109.97 421.931,113.109 422.639,114.542 423.347,114.811 424.055,115.987 424.762,115.74 425.47,115.393 426.178,115.3 426.886,113.674 427.594,112.351 428.301,112.312 429.009,112.52 429.717,115.223 430.425,109.524 431.133,109.885 431.84,110.069 432.548,107.628 433.256,109.339 433.964,109.787 434.672,105.843 435.379,106.464 436.087,106.565 436.795,107.138 437.503,107.384 438.21,105.342 438.918,105.688 439.626,106.661 440.334,105.636 441.042,104.562 441.749,103.935 442.457,104.258 443.165,102.356 443.873,103.127 444.581,103.902 445.288,103.227 445.996,101.112 446.704,103.313 447.412,106.896 448.119,108.553 448.827,111.576 449.535,111.698 450.243,113.363 450.951,113.275 451.658,113.045 452.366,114.561 453.074,114.548 453.782,110.141 454.49,108.926 455.197,110.425 455.905,107.767 456.613,110.926 457.321,112.242 458.029,111.027 458.736,108.287 459.444,108.788 460.152,110.121 460.86,108.932 461.567,108.956 462.275,110.444 462.983,109.126 463.691,110.657 464.399,110.654 465.106,110.54 465.814,111.945 466.522,111.706 467.23,111.762 467.938,113.304 468.645,111.623 469.353,111.798 470.061,111.572 470.769,107.453 471.476,107.763 472.184,107.643 472.892,107.75 473.6,106.569 474.308,108.406 475.015,108.645 475.723,111.388 476.431,112.675 477.139,113.506 477.847,115.951 478.554,115.45 479.262,115.139 479.97,114.514 480.678,114.133 481.386,112.614 482.093,113.792 482.801,113.483 483.509,111.75 484.217,108.755 484.924,108.627 485.632,108.514 486.34,108.588 487.048,107.216 487.756,108.602 488.463,108.518 489.171,112.509 489.879,110.845 490.587,111.949 491.295,114.31 492.002,113.727 492.71,110.511 493.418,111.722 494.126,111.23 494.834,110.705 495.541,107.77 496.249,104.807 496.957,105.922 497.665,107.258 498.372,106.989 499.08,108.234 499.788,108.115 500.496,109.261 501.204,109.064 501.911,110.476 502.619,111.506 503.327,109.535 504.035,110.445 504.743,107.405 505.45,106.161 506.158,103.589 506.866,104.171 507.574,104.479 508.281,107.288 508.989,104.566 509.697,103.625 510.405,102.489 511.113,102.68 511.82,103.163 512.528,103.245 513.236,103.522 513.944,107.625 514.652,107.841 515.359,107.768 516.067,109.074 516.775,110.442 517.483,108.807 518.191,106 518.898,104.408 519.606,107.339 520.314,105.748 521.022,107.364 521.729,105.995 522.437,106.105 523.145,108.883 523.853,105.867 524.561,104.383 525.268,103.117 525.976,103.387 526.684,102.235 527.392,102.728 528.1,107.056 528.807,101.741 529.515,99.3613 530.223,98.2168 530.931,97.616 531.638,99.8425 532.346,100.374 533.054,99.5043 533.762,100.293 534.47,95.3808 535.177,96.1456 535.885,96.9641 536.593,93.6641 537.301,91.7873 538.009,95.63 538.716,96.5419 539.424,97.1941 540.132,100.839 540.84,101.587 541.548,103.071 542.255,104.967 542.963,105.259 543.671,105.363 544.379,104.07 545.086,108.41 545.794,105.569 546.502,105.801 547.21,105.837 547.918,107.305 548.625,106.38 549.333,109.536 550.041,110.951 550.749,110.738 551.457,111.786 552.164,111.363 552.872,110.899 553.58,107.602 554.288,109.076 554.995,109.062 555.703,107.71 556.411,107.543 557.119,106.299 557.827,103.54 558.534,108.313 559.242,105.485 559.95,107.044 560.658,106.965 561.366,109.639 562.073,110.688 562.781,109.122 563.489,107.486 564.197,104.405 564.905,104.36 565.612,103.411 566.32,104.869 567.028,106.367 567.736,106.724 568.443,108.031 569.151,112.096 569.859,111.477 570.567,111.118 571.275,109.35 571.982,109.191 572.69,107.249 573.398,103.223 574.106,104.63 574.814,104.633 575.521,104.419 576.229,103.14 576.937,102.334 577.645,105.506 578.352,107.03 579.06,109.684 579.768,109.336 580.476,108.848 581.184,109.889 581.891,109.587 582.599,108.225 583.307,108.224 584.015,107.96 584.723,107.879 585.43,106.213 586.138,103.514 586.846,100.899 587.554,101.371 588.262,101.72 588.969,102.052 589.677,103.837 590.385,102.64 591.093,102.871 591.8,103.259 592.508,106.135 593.216,106.167 593.924,106.248 594.632,106.09 595.339,105.975 596.047,103.474 596.755,106.325 597.463,107.383 598.171,107.334 598.878,107.239 599.586,105.865 600.294,109.8 601.002,112.33 601.71,108.931 602.417,110.058 603.125,109.964 603.833,106.088 604.541,104.607 605.248,104.492 605.956,100.256 606.664,100.682 607.372,102.129 608.08,103.937 608.787,102.373 609.495,102.877 610.203,102.929 610.911,104.343 611.619,101.83 612.326,102.06 613.034,102.263 613.742,102.364 614.45,100.996 615.157,98.3059 615.865,99.6773 616.573,97.3179 617.281,96.3159 617.989,94.4462 618.696,95.3879 619.404,98.6467 620.112,97.5936 620.82,102.151 621.528,106.354 622.235,106.427 622.943,107.87 623.651,107.283 624.359,105.617 625.067,105.727 625.774,107.244 626.482,109.883 627.19,108.368 627.898,106.615 628.605,107.927 629.313,107.866 630.021,106.192 630.729,107.541 631.437,105.92 632.144,107.283 632.852,110.028 633.56,109.819 634.268,110.327 634.976,110.205 635.683,110.323 636.391,109.848 637.099,110.934 637.807,110.3 638.514,114.335 639.222,112.103 639.93,110.186 640.638,108.621 641.346,109.649 642.053,109.616 642.761,110.655 643.469,110.301 644.177,108.678 644.885,109.743 645.592,107.568 646.3,108.548 647.008,112.407 647.716,111.739 648.424,113.824 649.131,111.919 649.839,111.236 650.547,108.973 651.255,110.152 651.962,108.544 652.67,108.166 653.378,106.294 654.086,103.571 654.794,106.218 655.501,107.523 656.209,108.532 656.917,108.183 657.625,107.594 658.333,104.433 659.04,104.064 659.748,103.89 660.456,103.821 661.164,102.393 661.871,101.22 662.579,100.051 663.287,96.1188 663.995,96.5966 664.703,97.1647 665.41,96.2368 666.118,99.3515 666.826,98.511 667.534,97.2624 668.242,99.1799 668.949,100.963 669.657,99.4679 670.365,98.0066 671.073,97.0235 671.781,100.073 672.488,103.404 673.196,103.455 673.904,100.683 674.612,103.478 675.319,102.162 676.027,99.6109 676.735,101.166 677.443,100.09 678.151,100.451 678.858,102.022 679.566,102.407 680.274,101.235 680.982,102.71 681.69,105.688 682.397,106.856 683.105,109.246 683.813,108.65 684.521,105.727 685.228,106.88 685.936,104.144 686.644,102.869 687.352,102.964 688.06,104.625 688.767,108.82 689.475,104.357 690.183,104.393 690.891,102.929 691.599,103.288 692.306,100.764 693.014,101.045 693.722,101.186 694.43,101.485 695.138,105.625 695.845,102.564 696.553,102.866 697.261,105.721 697.969,103.134 698.676,103.258 699.384,103.276 700.092,106.008 700.8,105.886 701.508,104.468 702.215,102.99 702.923,104.634 703.631,105.884 704.339,103.044 705.047,100.309 705.754,103.287 706.462,100.599 707.17,104.984 707.878,104.881 708.585,103.375 709.293,106.032 710.001,105.871 710.709,105.747 711.417,107.305 712.124,107.045 712.832,104.115 713.54,102.467 714.248,100.03 714.956,104.654 715.663,104.691 716.371,104.642 717.079,104.558 717.787,104.736 718.495,107.444 719.202,104.441 719.91,104.573 720.618,103.445 721.326,102.134 722.033,103.472 722.741,102.347 723.449,100.907 724.157,99.3723 724.865,99.6426 725.572,101.198 726.28,99.9716 726.988,100.391 727.696,97.9323 728.404,99.5267 729.111,99.9536 729.819,98.9962 730.527,99.4846 731.235,101.045 731.943,99.7188 732.65,97.5285 733.358,96.6934 734.066,98.9729 734.774,98.0708 735.481,98.7079 736.189,100.657 736.897,95.6081 737.605,96.162 738.313,98.2968 739.02,100.15 739.728,102.02 740.436,109.29 741.144,106.027 741.852,107.12 742.559,105.739 743.267,105.78 743.975,107.1 744.683,107.386 745.39,107.071 746.098,105.507 746.806,108.338 747.514,104.05 748.222,104.159 748.929,103.175 749.637,104.876 750.345,103.557 751.053,103.21 751.761,106.347 752.468,106.386 753.176,107.769 753.884,106.123 754.592,104.339 755.3,105.986 756.007,107.036 756.715,109.601 757.423,109.174 758.131,112.802 758.838,110.825 759.546,111.7 760.254,111.302 760.962,108.339 761.67,109.68 762.377,107.982 763.085,107.781 763.793,107.789 764.501,105.84 765.209,108.709 765.916,107.121 766.624,108.208 767.332,109.209 768.04,109.056 768.747,106.214 769.455,105.885 770.163,105.705 770.871,107.012 771.579,103.951 772.286,102.756 772.994,101.375 773.702,101.662 774.41,101.796 775.118,100.656 775.825,101.976 776.533,104.703 777.241,103.498 777.949,100.775 778.657,99.6379 779.364,101.035 780.072,101.162 780.78,101.711 781.488,104.559 782.195,103.51 782.903,100.982 783.611,101.639 784.319,101.778 785.027,104.713 785.734,104.868 786.442,104.95 787.15,105.027 787.858,106.393 788.566,106.189 789.273,108.818 789.981,106.85 790.689,106.822 791.397,106.513 792.104,106.236 792.812,107.725 793.52,107.328 794.228,107.041 794.936,105.376 795.643,100.877 796.351,102.48 797.059,101.304 797.767,104.083 798.475,104.051 799.182,103.798 799.89,102.442 800.598,102.596 801.306,106.878 802.014,100.504 802.721,103.435 803.429,100.894 804.137,98.4779 804.845,97.8818 805.552,95.6324 806.26,94.8232 806.968,92.8061 807.676,93.4688 808.384,94.0313 809.091,96.0606 809.799,95.3683 810.507,94.8254 811.215,96.6957 811.923,98.9436 812.63,101.91 813.338,102.171 814.046,102.398 814.754,105.085 815.461,103.619 816.169,98.1045 816.877,96.1141 817.585,95.1433 818.293,97.053 819,96.1448 819.708,97.9783 820.416,97.2241 821.124,96.3374 821.832,97.1198 822.539,97.844 823.247,102.455 823.955,101.126 824.663,100.028 825.371,97.6431 826.078,96.7119 826.786,97.2421 827.494,99.2349 828.202,102.657 828.909,100.144 829.617,100.488 830.325,102.119 831.033,99.953 831.741,99.1534 832.448,101.118 833.156,101.457 833.864,103.16 834.572,104.762 835.28,103.843 835.987,106.499 836.695,107.88 837.403,107.884 838.111,109.321 838.818,109.181 839.526,111.861 840.234,111.423 840.942,109.684 841.65,112.174 842.357,113.017 843.065,112.872 843.773,113.827 844.481,110.79 845.189,112.894 845.896,112.592 846.604,114.416 847.312,116.599 848.02,114.435 848.728,115.068 849.435,113.011 850.143,111.098 850.851,110.796 851.559,113.165 852.266,115.099 852.974,114.302 853.682,116.415 854.39,111.362 855.098,109.177 855.805,110.347 856.513,108.409 857.221,109.498 857.929,107.744 858.637,108.765 859.344,108.608 860.052,109.324 860.76,110.032 861.468,106.751 862.176,106.552 862.883,104.905 863.591,103.28 864.299,104.489 865.007,107.129 865.714,106.473 866.422,104.873 867.13,107.018 867.838,106.416 868.546,105.997 869.253,105.796 869.961,105.402 870.669,104.205 871.377,104.229 872.085,105.307 872.792,103.957 873.5,106.216 874.208,107.326 874.916,104.522 875.623,103.097 876.331,99.0379 877.039,100.674 877.747,99.625 878.455,102.657 879.162,102.327 879.87,103.548 880.578,103.233 881.286,103.278 881.994,99.0605 882.701,99.0942 883.409,100.467 884.117,100.312 884.825,97.8386 885.533,98.2097 886.24,95.7576 886.948,96.1163 887.656,95.2607 888.364,95.6144 889.071,96.452 889.779,96.8334 890.487,100.101 891.195,100.153 891.903,97.7456 892.61,98.2481 893.318,98.7043 894.026,98.932 894.734,99.2613 895.442,99.5279 896.149,102.879 896.857,107.218 897.565,107.24 898.273,106.932 898.98,106.873 899.688,105.422 900.396,103.827 901.104,106.819 901.812,106.715 902.519,107.839 903.227,108.992 903.935,108.719 904.643,108.163 905.351,107.816 906.058,108.907 906.766,108.348 907.474,111.912 908.182,110.044 908.89,109.429 909.597,108.767 910.305,106.986 911.013,104.903 911.721,100.359 912.428,99.4079 913.136,98.4543 913.844,97.3192 914.552,97.6983 915.26,97.9187 915.967,98.3089 916.675,101.285 917.383,101.434 918.091,103.118 918.799,103.144 919.506,103.153 920.214,101.837 920.922,100.511 921.63,99.2963 922.337,98.3342 923.045,99.7595 923.753,102.733 924.461,101.474 925.169,101.625 925.876,103.15 926.584,104.573 927.292,104.625 928,102.102 928.708,102.587 929.415,102.666 930.123,102.761 930.831,101.474 931.539,103.285 932.247,104.785 932.954,103.566 933.662,104.98 934.37,106.152 935.078,105.78 935.785,104.35 936.493,106.688 937.201,108.038 937.909,106.272 938.617,108.956 939.324,110.217 940.032,109.546 940.74,110.475 941.448,109.886 942.156,109.455 942.863,108.733 943.571,111.287 944.279,110.746 944.987,111.517 945.694,112.396 946.402,108.677 947.11,106.873 947.818,106.677 948.526,105.125 949.233,104.966 949.941,101.995 950.649,103.614 951.357,103.455 952.065,103.313 952.772,106.827 953.48,107.868 954.188,105.996 954.896,105.621 955.604,106.865 956.311,105.198 957.019,107.905 957.727,108.621 958.435,109.683 959.142,109.422 959.85,107.361 960.558,107.149 961.266,106.734 961.974,107.785 962.681,107.019 963.389,105.375 964.097,105.11 964.805,107.526 965.513,104.365 966.22,104.171 966.928,103.621 967.636,103.334 968.344,101.978 969.051,98.0802 969.759,93.0289 970.467,92.1599 971.175,91.6691 971.883,93.7269 972.59,94.4466 973.298,95.1495 974.006,94.2645 974.714,93.5673 975.422,93.1665 976.129,93.6178 976.837,95.6219 977.545,96.009 978.253,97.8979 978.961,98.5077 979.668,93.5295 980.376,94.3506 981.084,95.0911 981.792,95.8506 982.499,98.991 983.207,99.2979 983.915,97.0469 984.623,95.0218 985.331,95.8292 986.038,96.614 986.746,95.8928 987.454,94.8133 988.162,95.439 988.87,96.046 989.577,99.2502 990.285,98.4224 990.993,97.6078 991.701,99.4092 992.409,99.9202 993.116,103.163 993.824,103.504 994.532,107.725 995.24,106.569 995.947,107.946 996.655,110.875 997.363,107.718 998.071,106.252 998.779,104.802 999.486,104.992 1000.19,105.023 1000.9,104.994 1001.61,106.492 1002.32,108.654 1003.03,109.593 1003.73,110.552 1004.44,113.129 1005.15,112.598 1005.86,111.825 1006.56,111.175 1007.27,109.051 1007.98,109.078 1008.69,109.713 1009.4,109.425 1010.1,109.096 1010.81,107.462 1011.52,107.294 1012.23,108.391 1012.93,106.609 1013.64,109.125 1014.35,110.103 1015.06,108.109 1015.77,107.89 1016.47,104.935 1017.18,99.522 1017.89,97.1666 1018.6,101.638 1019.3,101.635 1020.01,102.995 1020.72,93.5652 1021.43,91.6974 1022.14,93.7053 1022.84,95.7077 1023.55,96.2014 1024.26,95.2697 1024.97,95.8856 1025.67,93.9892 1026.38,97.5579 1027.09,99.2741 1027.8,98.2547 1028.51,98.6737 1029.21,99.0929 1029.92,101.169 1030.63,101.262 1031.34,102.695 1032.04,102.92 1032.75,104.296 1033.46,105.611 1034.17,105.694 1034.88,109.871 1035.58,109.48 1036.29,109.399 1037,109.044 1037.71,107.422 1038.41,108.645 1039.12,109.848 1039.83,109.433 1040.54,110.395 1041.25,111.165 1041.95,109.269 1042.66,112.916 1043.37,110.937 1044.08,105.08 1044.78,106.246 1045.49,106.003 1046.2,106.136 1046.91,104.949 1047.62,105.141 1048.32,105.161 1049.03,107.765 1049.74,108.989 1050.45,108.645 1051.15,106.996 1051.86,103.871 1052.57,105.096 1053.28,106.332 1053.99,104.851 1054.69,106.377 1055.4,109.187 1056.11,109.971 1056.82,109.479 1057.53,107.677 1058.23,104.544 1058.94,104.405 1059.65,104.044 1060.36,102.448 1061.06,101.058 1061.77,99.9828 1062.48,101.66 1063.19,101.935 1063.9,103.253 1064.6,105.845 1065.31,105.474 1066.02,102.832 1066.73,104.52 1067.43,101.942 1068.14,99.6233 1068.85,98.6857 1069.56,99.0808 1070.27,98.1497 1070.97,95.8141 1071.68,92.4137 1072.39,94.2922 1073.1,94.8957 1073.8,96.6987 1074.51,94.2866 1075.22,97.5233 1075.93,99.1947 1076.64,102.532 1077.34,102.434 1078.05,104.001 1078.76,102.618 1079.47,105.495 1080.17,102.521 1080.88,102.41 1081.59,99.8011 1082.3,103.942 1083.01,102.695 1083.71,104.407 1084.42,103.291 1085.13,99.1378 1085.84,102.305 1086.54,100.753 1087.25,102.356 1087.96,103.801 1088.67,102.745 1089.38,102.736 1090.08,104.417 1090.79,103.082 1091.5,100.547 1092.21,96.7821 1092.91,97.2736 1093.62,95.283 1094.33,95.9804 1095.04,96.466 1095.75,95.7122 1096.45,96.261 1097.16,97.045 1097.87,94.6421 1098.58,94.1197 1099.28,94.9824 1099.99,92.8928 1100.7,91.1776 1101.41,96.5348 1102.12,96.0704 1102.82,99.438 1103.53,99.71 1104.24,102.942 1104.95,102.902 1105.65,107.187 1106.36,107.09 1107.07,107.066 1107.78,108.471 1108.49,106.903 1109.19,107.996 1109.9,107.792 1110.61,113.184 1111.32,115.582 1112.02,110.697 1112.73,108.984 1113.44,108.762 1114.15,108.449 1114.86,106.972 1115.56,108.503 1116.27,109.085 1116.98,109.039 1117.69,110.145 1118.39,105.747 1119.1,105.493 1119.81,105.274 1120.52,108.032 1121.23,107.987 1121.93,109.182 1122.64,107.823 1123.35,110.327 1124.06,112.397 1124.76,111.842 1125.47,111.419 1126.18,109.36 1126.89,109.153 1127.6,108.586 1128.3,108.063 1129.01,110.598 1129.72,108.616 1130.43,105.556 1131.13,103.827 1131.84,105.185 1132.55,105.248 1133.26,105.078 1133.97,105.047 1134.67,103.596 1135.38,106.361 1136.09,106.109 1136.8,107.391 1137.51,109.768 1138.21,109.252 1138.92,108.931 1139.63,108.485 1140.34,107.923 1141.04,107.613 1141.75,107.13 1142.46,102.913 1143.17,102.608 1143.88,101.151 1144.58,101.047 1145.29,101.132 1146,101.164 1146.71,101.367 1147.41,98.802 1148.12,99.0009 1148.83,99.1358 1149.54,100.908 1150.25,99.8441 1150.95,98.815 1151.66,99.0718 1152.37,98.2673 1153.08,99.6643 1153.78,99.8087 1154.49,100.055 1155.2,99.304 1155.91,99.322 1156.62,99.7152 1157.32,99.8596 1158.03,100.17 1158.74,96.4575 1159.45,98.2741 1160.15,97.369 1160.86,96.5015 1161.57,101.033 1162.28,98.4012 1162.99,93.2476 1163.69,95.2704 1164.4,96.2816 1165.11,96.9896 1165.82,96.0881 1166.52,96.7365 1167.23,100 1167.94,101.722 1168.65,99.1063 1169.36,101.063 1170.06,102.675 1170.77,102.751 1171.48,103.03 1172.19,105.933 1172.89,104.329 1173.6,102.975 1174.31,108.621 1175.02,107.067 1175.73,103.043 1176.43,101.995 1177.14,101.062 1177.85,105.463 1178.56,105.572 1179.26,105.593 1179.97,107.24 1180.68,107.173 1181.39,110.088 1182.1,112.541 1182.8,110.951 1183.51,110.264 1184.22,109.757 1184.93,109.135 1185.63,103.512 1186.34,105.337 1187.05,107.925 1187.76,106.307 1188.47,107.807 1189.17,107.586 1189.88,108.73 1190.59,105.59 1191.3,105.227 1192,106.453 1192.71,107.477 1193.42,110.226 1194.13,111.138 1194.84,110.359 1195.54,109.559 1196.25,106.255 1196.96,104.559 1197.67,105.901 1198.37,105.571 1199.08,103.956 1199.79,102.691 1200.5,105.416 1201.21,103.726 1201.91,100.867 1202.62,100.87 1203.33,99.4388 1204.04,95.2851 1204.74,95.679 1205.45,97.6406 1206.16,96.9229 1206.87,97.386 1207.58,100.29 1208.28,100.667 1208.99,102.481 1209.7,102.44 1210.41,102.482 1211.12,103.778 1211.82,103.614 1212.53,102.165 1213.24,102.361 1213.95,103.873 1214.65,102.352 1215.36,99.5239 1216.07,99.6709 1216.78,104.069 1217.49,104.116 1218.19,104.323 1218.9,103.198 1219.61,101.653 1220.32,106.005 1221.02,105.757 1221.73,104.481 1222.44,103.218 1223.15,103.26 1223.86,104.672 1224.56,106.227 1225.27,108.7 1225.98,108.088 1226.69,108.849 1227.39,104.465 1228.1,105.617 1228.81,104.038 1229.52,104.273 1230.23,104.185 1230.93,101.865 1231.64,102.084 1232.35,102.131 1233.06,102.561 1233.76,105.175 1234.47,106.457 1235.18,106.382 1235.89,110.374 1236.6,108.811 1237.3,105.726 1238.01,104.515 1238.72,100.206 1239.43,99.3591 1240.13,98.2108 1240.84,100.171 1241.55,103.386 1242.26,103.604 1242.97,103.646 1243.67,104.807 1244.38,104.704 1245.09,104.77 1245.8,104.579 1246.5,105.793 1247.21,108.708 1247.92,113.816 1248.63,112.959 1249.34,113.763 1250.04,114.407 1250.75,111.987 1251.46,114.085 1252.17,117.294 1252.87,117.363 1253.58,116.306 1254.29,115.213 1255,118.429 1255.71,113.121 1256.41,115.036 1257.12,113.834 1257.83,112.795 1258.54,111.977 1259.24,111.221 1259.95,108.887 1260.66,109.614 1261.37,110.713 1262.08,111.36 1262.78,110.535 1263.49,109.794 1264.2,107.766 1264.91,105.795 1265.61,101.103 1266.32,101.127 1267.03,102.409 1267.74,105.228 1268.45,106.222 1269.15,105.624 1269.86,103.786 1270.57,105.019 1271.28,105.924 1271.98,107.125 1272.69,106.519 1273.4,105.823 1274.11,108.096 1274.82,107.36 1275.52,105.686 1276.23,106.708 1276.94,106.524 1277.65,105.825 1278.35,104.042 1279.06,102.5 1279.77,102.122 1280.48,103.214 1281.19,101.624 1281.89,101.406 1282.6,101.046 1283.31,101.234 1284.02,99.7286 1284.72,97.1659 1285.43,94.6138 1286.14,93.648 1286.85,94.5154 1287.56,95.0053 1288.26,93.7608 1288.97,91.4858 1289.68,90.8193 1290.39,91.3612 1291.1,94.8148 1291.8,95.0241 1292.51,95.8388 1293.22,96.1969 1293.93,95.6054 1294.63,96.0249 1295.34,90.8692 1296.05,91.6503 1296.76,90.9782 1297.47,91.6903 1298.17,88.5087 1298.88,89.5947 1299.59,90.595 1300.3,91.3452 1301,91.2078 1301.71,89.3887 1302.42,90.4952 1303.13,95.4764 1303.84,95.8565 1304.54,93.6646 1305.25,97.3259 1305.96,100.583 1306.67,103.544 1307.37,103.629 1308.08,102.65 1308.79,101.508 1309.5,103.173 1310.21,104.657 1310.91,106.029 1311.62,103.178 1312.33,104.905 1313.04,106.169 1313.74,100.871 1314.45,101.119 1315.16,99.8438 1315.87,101.456 1316.58,103.036 1317.28,104.777 1317.99,102.078 1318.7,103.836 1319.41,105.35 1320.11,102.855 1320.82,104.536 1321.53,104.334 1322.24,101.554 1322.95,102.941 1323.65,101.72 1324.36,102.054 1325.07,103.961 1325.78,102.773 1326.48,101.542 1327.19,104.467 1327.9,107.141 1328.61,109.506 1329.32,110.679 1330.02,110.103 1330.73,109.542 1331.44,107.884 1332.15,107.625 1332.85,107.37 1333.56,109.923 1334.27,109.586 1334.98,107.785 1335.69,107.218 1336.39,105.651 1337.1,105.494 1337.81,105.636 1338.52,108.183 1339.22,106.521 1339.93,106.142 1340.64,101.844 1341.35,103.334 1342.06,104.857 1342.76,102.468 1343.47,101.149 1344.18,102.624 1344.89,102.671 1345.59,102.838 1346.3,104.509 1347.01,105.773 1347.72,104.402 1348.43,100.357 1349.13,100.665 1349.84,102.135 1350.55,100.899 1351.26,99.6878 1351.96,102.55 1352.67,102.648 1353.38,101.557 1354.09,102.821 1354.8,106.876 1355.5,108.062 1356.21,106.402 1356.92,106.173 1357.63,107.458 1358.33,107.128 1359.04,107.06 1359.75,102.706 1360.46,101.293 1361.17,102.861 1361.87,104.497 1362.58,104.39 1363.29,105.65 1364,108.593 1364.71,108.438 1365.41,109.495 1366.12,107.602 1366.83,106.074 1367.54,104.784 1368.24,104.769 1368.95,101.671 1369.66,104.491 1370.37,106.941 1371.08,109.345 1371.78,106.156 1372.49,107.245 1373.2,105.645 1373.91,104.201 1374.61,105.185 1375.32,107.834 1376.03,107.906 1376.74,111.64 1377.45,106.878 1378.15,108.098 1378.86,106.45 1379.57,107.189 1380.28,106.587 1380.98,107.33 1381.69,107.11 1382.4,106.958 1383.11,108.205 1383.82,107.638 1384.52,107.348 1385.23,105.49 1385.94,105.487 1386.65,104.162 1387.35,105.059 1388.06,103.194 1388.77,102.772 1389.48,102.805 1390.19,102.684 1390.89,102.963 1391.6,101.425 1392.31,101.552 1393.02,100.001 1393.72,99.9903 1394.43,102.807 1395.14,104.014 1395.85,105.277 1396.56,106.733 1397.26,107.778 1397.97,107.128 1398.68,105.454 1399.39,105.303 1400.09,103.868 1400.8,102.456 1401.51,102.283 1402.22,103.768 1402.93,104.82 1403.63,106.075 1404.34,107.097 1405.05,106.569 1405.76,105.641 1406.46,102.907 1407.17,105.521 1407.88,105.486 1408.59,103.931 1409.3,103.565 1410,103.045 1410.71,103.031 1411.42,103.013 1412.13,103.02 1412.83,102.891 1413.54,102.793 1414.25,102.664 1414.96,99.623 1415.67,98.4533 1416.37,97.2841 1417.08,96.0433 1417.79,97.8692 1418.5,99.3844 1419.2,98.4082 1419.91,101.259 1420.62,96.868 1421.33,95.8801 1422.04,93.5684 1422.74,91.5229 1423.45,92.253 1424.16,94.5939 1424.87,94.7606 1425.57,96.8454 1426.28,97.1132 1426.99,101.648 1427.7,105.987 1428.41,104.293 1429.11,101.466 1429.82,97.659 1430.53,96.7881 1431.24,97.4661 1431.94,98.0926 1432.65,93.0058 1433.36,92.4712 1434.07,94.6391 1434.78,96.6266 1435.48,101.373 1436.19,102.882 1436.9,100.449 1437.61,102.207 1438.31,104.117 1439.02,104.154 1439.73,104.479 1440.44,102.931 1441.15,101.686 1441.85,99.234 1442.56,97.9707 1443.27,98.407 1443.98,97.7548 1444.69,98.081 1445.39,98.5115 1446.1,96.2934 1446.81,98.6539 1447.52,98.0153 1448.22,102.872 1448.93,101.843 1449.64,102.029 1450.35,102.167 1451.06,105.161 1451.76,105.289 1452.47,108.094 1453.18,109.035 1453.89,108.676 1454.59,108.581 1455.3,109.988 1456.01,112.61 1456.72,112.144 1457.43,110.54 1458.13,109.96 1458.84,112.729 1459.55,115.098 1460.26,114.347 1460.96,115.223 1461.67,113.024 1462.38,113.433 1463.09,114.049 1463.8,117.361 1464.5,114.939 1465.21,114.286 1465.92,113.568 1466.63,107.602 1467.33,107.418 1468.04,107.029 1468.75,106.818 1469.46,106.334 1470.17,101.73 1470.87,100.733 1471.58,97.8392 1472.29,99.4301 1473,97.3749 1473.7,99.2487 1474.41,96.8503 1475.12,97.455 1475.83,96.1605 1476.54,96.7195 1477.24,97.1888 1477.95,99.1564 1478.66,96.8374 1479.37,96.0741 1480.07,95.1144 1480.78,96.9818 1481.49,99.0099 1482.2,98.051 1482.91,98.3417 1483.61,100.085 1484.32,98.7123 1485.03,100.683 1485.74,101.138 1486.44,102.581 1487.15,102.649 1487.86,104.012 1488.57,102.479 1489.28,100.983 1489.98,102.601 1490.69,102.777 1491.4,103.024 1492.11,105.736 1492.81,105.934 1493.52,104.314 1494.23,104.335 1494.94,105.682 1495.65,104.122 1496.35,104.139 1497.06,102.8 1497.77,104.042 1498.48,106.543 1499.18,106.51 1499.89,107.613 1500.6,109.954 1501.31,111.04 1502.02,108.841 1502.72,106.983 1503.43,103.897 1504.14,105.311 1504.85,105.077 1505.55,103.735 1506.26,102.399 1506.97,102.707 1507.68,101.433 1508.39,101.781 1509.09,99.4094 1509.8,101.346 1510.51,100.291 1511.22,99.6371 1511.92,98.537 1512.63,97.7404 1513.34,91.3666 1514.05,92.1663 1514.76,93.0782 1515.46,97.0438 1516.17,97.9705 1516.88,94.3558 1517.59,96.1766 1518.3,97.9338 1519,94.1605 1519.71,96.3028 1520.42,97.0909 1521.13,98.893 1521.83,99.6901 1522.54,96.1776 1523.25,96.6015 1523.96,97.5244 1524.67,96.8807 1525.37,97.6812 1526.08,101.293 1526.79,101.382 1527.5,101.957 1528.2,103.653 1528.91,106.279 1529.62,105.207 1530.33,108.264 1531.04,107.029 1531.74,108.583 1532.45,105.657 1533.16,106.875 1533.87,112.412 1534.57,113.402 1535.28,111.11 1535.99,109.447 1536.7,112.15 1537.41,114.127 1538.11,113.144 1538.82,111.168 1539.53,111.934 1540.24,112.944 1540.94,113.524 1541.65,116.006 1542.36,113.773 1543.07,113.018 1543.78,116.583 1544.48,118.158 1545.19,116.867 1545.9,115.891 1546.61,114.755 1547.31,115.386 1548.02,116.118 1548.73,112.165 1549.44,108.841 1550.15,108.478 1550.85,108.235 1551.56,107.999 1552.27,104.935 1552.98,104.563 1553.68,104.144 1554.39,106.438 1555.1,104.97 1555.81,104.888 1556.52,104.782 1557.22,103.363 1557.93,103.636 1558.64,102.231 1559.35,100.743 1560.05,100.893 1560.76,98.4385 1561.47,97.0401 1562.18,97.5284 1562.89,100.681 1563.59,99.36 1564.3,99.6073 1565.01,99.8449 1565.72,99.9093 1566.42,101.336 1567.13,102.877 1567.84,104.201 1568.55,103.908 1569.26,103.699 1569.96,106.104 1570.67,104.333 1571.38,108.274 1572.09,106.5 1572.79,103.594 1573.5,102.089 1574.21,100.45 1574.92,99.2458 1575.63,100.694 1576.33,101.117 1577.04,98.6101 1577.75,98.8033 1578.46,101.53 1579.16,100.462 1579.87,97.9811 1580.58,98.5271 1581.29,100.48 1582,97.8415 1582.7,95.5048 1583.41,97.3716 1584.12,97.8408 1584.83,102.245 1585.53,101.152 1586.24,100.96 1586.95,98.213 1587.66,96.0618 1588.37,93.8862 1589.07,93.503 1589.78,93.8354 1590.49,98.5926 1591.2,99.2894 1591.9,99.4721 1592.61,102.493 1593.32,100.049 1594.03,100.648 1594.74,100.965 1595.44,99.7697 1596.15,99.9728 1596.86,98.8059 1597.57,97.793 1598.28,96.9616 1598.98,94.7563 1599.69,95.7526 1600.4,96.552 1601.11,101.508 1601.81,106.021 1602.52,106.152 1603.23,106.019 1603.94,107.503 1604.65,104.309 1605.35,104.291 1606.06,101.402 1606.77,104.537 1607.48,101.786 1608.18,101.762 1608.89,100.55 1609.6,102.405 1610.31,102.669 1611.02,101.523 1611.72,101.684 1612.43,101.931 1613.14,104.758 1613.85,104.8 1614.55,104.555 1615.26,104.488 1615.97,104.585 1616.68,103.395 1617.39,105.036 1618.09,105.082 1618.8,105.327 1619.51,105.408 1620.22,104.083 1620.92,100.183 1621.63,106.286 1622.34,107.607 1623.05,109.025 1623.76,108.965 1624.46,107.311 1625.17,106.904 1625.88,106.927 1626.59,106.737 1627.29,108.095 1628,107.868 1628.71,107.416 1629.42,107.033 1630.13,108.104 1630.83,107.979 1631.54,110.879 1632.25,113.392 1632.96,112.651 1633.66,113.203 1634.37,112.794 1635.08,114.654 1635.79,112.49 1636.5,113.37 1637.2,111.347 1637.91,112.583 1638.62,110.591 1639.33,109.775 1640.03,107.998 1640.74,107.809 1641.45,108.84 1642.16,109.624 1642.87,107.63 1643.57,107.033 1644.28,105.244 1644.99,106.156 1645.7,107.245 1646.4,104.26 1647.11,102.655 1647.82,105.101 1648.53,102.293 1649.24,103.628 1649.94,103.655 1650.65,103.538 1651.36,102.215 1652.07,104.752 1652.77,105.821 1653.48,106.841 1654.19,107.967 1654.9,108.888 1655.61,109.887 1656.31,107.743 1657.02,108.774 1657.73,108.388 1658.44,106.819 1659.14,104.912 1659.85,103.491 1660.56,100.923 1661.27,102.154 1661.98,102.031 1662.68,97.9064 1663.39,99.8038 1664.1,101.251 1664.81,101.481 1665.51,101.737 1666.22,100.46 1666.93,101.698 1667.64,104.444 1668.35,102.624 1669.05,101.19 1669.76,101.456 1670.47,102.861 1671.18,101.447 1671.89,99.7531 1672.59,101.147 1673.3,98.204 1674.01,101.059 1674.72,99.7719 1675.42,98.5958 1676.13,97.519 1676.84,101.678 1677.55,107.421 1678.26,108.081 1678.96,106.034 1679.67,107.253 1680.38,107.073 1681.09,106.642 1681.79,107.514 1682.5,107.152 1683.21,106.674 1683.92,104.648 1684.63,107.136 1685.33,105.443 1686.04,105.387 1686.75,105.232 1687.46,100.816 1688.16,99.789 1688.87,97.199 1689.58,97.5519 1690.29,98.9271 1691,98.9724 1691.7,100.653 1692.41,99.4448 1693.12,98.6911 1693.83,100.299 1694.53,100.721 1695.24,99.2537 1695.95,99.3226 1696.66,98.1501 1697.37,98.4383 1698.07,98.9207 1698.78,100.473 1699.49,104.91 1700.2,101.998 1700.9,102.032 1701.61,100.754 1702.32,104.881 1703.03,104.779 1703.74,104.482 1704.44,101.616 1705.15,101.805 1705.86,106.017 1706.57,104.604 1707.27,104.628 1707.98,104.343 1708.69,103.912 1709.4,105.2 1710.11,102.301 1710.81,100.948 1711.52,101.22 1712.23,104.208 1712.94,102.994 1713.64,101.343 1714.35,98.6839 1715.06,100.298 1715.77,96.3827 1716.48,98.0426 1717.18,94.1484 1717.89,97.7193 1718.6,99.5639 1719.31,98.4499 1720.01,100.164 1720.72,100.457 1721.43,101.916 1722.14,106.009 1722.85,106.059 1723.55,107.562 1724.26,108.519 1724.97,107.032 1725.68,106.668 1726.38,104.796 1727.09,104.849 1727.8,103.139 1728.51,103.281 1729.22,100.408 1729.92,100.523 1730.63,100.613 1731.34,100.977 1732.05,103.901 1732.75,101.38 1733.46,100.401 1734.17,98.9295 1734.88,100.668 1735.59,102.214 1736.29,100.965 1737,101.5 1737.71,101.615 1738.42,103.034 1739.12,101.872 1739.83,103.436 1740.54,103.686 1741.25,106.596 1741.96,109.136 1742.66,107.532 1743.37,107.15 1744.08,107.331 1744.79,108.536 1745.49,110.939 1746.2,110.478 1746.91,110.188 1747.62,109.377 1748.33,109.061 1749.03,108.556 1749.74,108.093 1750.45,107.792 1751.16,104.885 1751.87,104.891 1752.57,105.962 1753.28,103.077 1753.99,101.563 1754.7,100.274 1755.4,97.9264 1756.11,99.5969 1756.82,98.0832 1757.53,97.0351 1758.24,96.4677 1758.94,98.1339 1759.65,98.3905 1760.36,98.925 1761.07,100.629 1761.77,102.564 1762.48,105.53 1763.19,105.536 1763.9,106.767 1764.61,105.129 1765.31,103.679 1766.02,99.5929 1766.73,100.057 1767.44,100.528 1768.14,102.292 1768.85,101.333 1769.56,101.534 1770.27,101.906 1770.98,105.001 1771.68,103.46 1772.39,103.666 1773.1,103.941 1773.81,102.755 1774.51,102.78 1775.22,103.023 1775.93,101.482 1776.64,104.315 1777.35,103.072 1778.05,104.414 1778.76,104.247 1779.47,101.193 1780.18,101.464 1780.88,105.762 1781.59,104.44 1782.3,104.818 1783.01,104.66 1783.72,102.104 1784.42,103.687 1785.13,103.873 1785.84,103.647 1786.55,106.466 1787.25,106.373 1787.96,104.963 1788.67,106.257 1789.38,108.845 1790.09,109.99 1790.79,110.793 1791.5,109.131 1792.21,107.078 1792.92,106.688 1793.62,110.648 1794.33,110.128 1795.04,112.252 1795.75,113 1796.46,112.574 1797.16,111.936 1797.87,114.249 1798.58,111.513 1799.29,112.501 1799.99,111.66 1800.7,109.622 1801.41,105.886 1802.12,102.876 1802.83,104.184 1803.53,102.614 1804.24,103.895 1804.95,101.034 1805.66,103.765 1806.36,103.851 1807.07,100.843 1807.78,100.83 1808.49,103.624 1809.2,102.452 1809.9,102.204 1810.61,102.482 1811.32,102.477 1812.03,101.158 1812.73,101.234 1813.44,101.316 1814.15,101.801 1814.86,100.87 1815.57,101.083 1816.27,102.475 1816.98,106.429 1817.69,104.675 1818.4,105.506 1819.1,105.367 1819.81,102.482 1820.52,102.551 1821.23,101.127 1821.94,97.3802 1822.64,99.2097 1823.35,99.5848 1824.06,101.229 1824.77,101.188 1825.48,104.077 1826.18,103.9 1826.89,105.011 1827.6,102.263 1828.31,103.775 1829.01,104.892 1829.72,104.894 1830.43,105.884 1831.14,104.4 1831.85,104.167 1832.55,104.142 1833.26,105.714 1833.97,104.19 1834.68,105.496 1835.38,105.212 1836.09,104.766 1836.8,104.235 1837.51,102.544 1838.22,101.047 1838.92,102.806 1839.63,102.644 1840.34,101.15 1841.05,99.7333 1841.75,102.801 1842.46,101.144 1843.17,99.8118 1843.88,100.06 1844.59,101.581 1845.29,97.4848 1846,97.7699 1846.71,102.349 1847.42,103.833 1848.12,102.256 1848.83,102.207 1849.54,102.167 1850.25,103.584 1850.96,102.285 1851.66,102.099 1852.37,100.96 1853.08,98.4358 1853.79,100.27 1854.49,97.7241 1855.2,97.007 1855.91,94.4933 1856.62,95.183 1857.33,98.4312 1858.03,100.331 1858.74,97.793 1859.45,98.2908 1860.16,96.0245 1860.86,97.9061 1861.57,98.334 1862.28,101.545 1862.99,105.852 1863.7,108.466 1864.4,109.498 1865.11,110.142 1865.82,112.396 1866.53,108.062 1867.23,109.021 1867.94,105.88 1868.65,104.056 1869.36,103.855 1870.07,103.902 1870.77,105.128 1871.48,107.63 1872.19,107.219 1872.9,108.243 1873.6,109.112 1874.31,107.005 1875.02,109.574 1875.73,110.616 1876.44,107.16 1877.14,108.216 1877.85,110.612 1878.56,108.604 1879.27,106.692 1879.97,106.42 1880.68,106.059 1881.39,107.239 1882.1,108.311 1882.81,106.475 1883.51,103.668 1884.22,107.441 1884.93,105.78 1885.64,102.805 1886.34,104.043 1887.05,104.319 1887.76,106.947 1888.47,106.663 1889.18,106.564 1889.88,107.65 1890.59,107.373 1891.3,108.156 1892.01,103.649 1892.71,104.666 1893.42,101.586 1894.13,100.352 1894.84,101.554 1895.55,100.123 1896.25,97.3723 1896.96,96.3335 1897.67,101.042 1898.38,100.875 1899.08,98.0853 1899.79,101.014 1900.5,99.6728 1901.21,100.13 1901.92,100.565 1902.62,100.856 1903.33,102.459 1904.04,99.7597 1904.75,100.472 1905.46,102.226 1906.16,104.832 1906.87,103.186 1907.58,103.067 1908.29,104.362 1908.99,104.49 1909.7,104.565 1910.41,106.049 1911.12,108.463 1911.83,110.979 1912.53,107.733 1913.24,110.016 1913.95,108.108 1914.66,107.497 1915.36,107.304 1916.07,107.102 1916.78,106.474 1917.49,106.111 1918.2,111.377 1918.9,110.667 1919.61,109.941 1920.32,106.582 1921.03,106.134 1921.73,106.128 1922.44,107.226 1923.15,105.53 1923.86,105.206 1924.57,102.091 1925.27,97.9396 1925.98,102.208 1926.69,101.919 1927.4,101.768 1928.1,100.119 1928.81,100.114 1929.52,100.241 1930.23,99.095 1930.94,98.1129 1931.64,101.218 1932.35,102.667 1933.06,102.606 1933.77,101.287 1934.47,97.1849 1935.18,98.852 1935.89,98.0858 1936.6,101.048 1937.31,102.567 1938.01,102.386 1938.72,106.742 1939.43,105.233 1940.14,102.317 1940.84,102.23 1941.55,102.428 1942.26,100.965 1942.97,102.414 1943.68,103.943 1944.38,102.307 1945.09,102.071 1945.8,102.022 1946.51,102.186 1947.21,100.842 1947.92,99.3524 1948.63,93.9282 1949.34,96.4194 1950.05,94.5432 1950.75,90.9912 1951.46,89.1051 1952.17,88.9541 1952.88,92.5703 1953.58,96.1382 1954.29,98.0847 1955,101.111 1955.71,101.247 1956.42,101.321 1957.12,101.806 1957.83,100.884 1958.54,102.275 1959.25,103.867 1959.95,101.22 1960.66,102.945 1961.37,104.413 1962.08,104.588 1962.79,102.987 1963.49,98.4481 1964.2,101.595 1964.91,103.22 1965.62,106.211 1966.32,103.147 1967.03,104.564 1967.74,103.089 1968.45,103.113 1969.16,104.489 1969.86,105.77 1970.57,104.372 1971.28,102.902 1971.99,102.952 1972.69,107.073 1973.4,103.053 1974.11,101.649 1974.82,100.711 1975.53,99.614 1976.23,99.9163 1976.94,100.221 1977.65,100.223 1978.36,100.291 1979.07,100.404 1979.77,100.755 1980.48,103.813 1981.19,101.083 1981.9,101.171 1982.6,101.345 1983.31,101.867 1984.02,103.581 1984.73,103.825 1985.44,105.509 1986.14,105.346 1986.85,105.337 1987.56,103.955 1988.27,101.271 1988.97,104.406 1989.68,107.162 1990.39,106.877 1991.1,106.65 1991.81,107.511 1992.51,107.265 1993.22,105.698 1993.93,105.618 1994.64,104.06 1995.34,106.842 1996.05,106.483 1996.76,106.534 1997.47,106.471 1998.18,104.735 1998.88,103.244 1999.59,101.845 2000.3,102.024 2001.01,103.56 2001.71,103.321 2002.42,103.462 2003.13,102.064 2003.84,101.93 2004.55,104.534 2005.25,101.446 2005.96,100.273 2006.67,99.2546 2007.38,99.5819 2008.08,101.34 2008.79,100.305 2009.5,99.1856 2010.21,100.885 2010.92,101.075 2011.62,100.109 2012.33,99.3973 2013.04,101.227 2013.75,103.01 2014.45,101.899 2015.16,100.576 2015.87,102.347 2016.58,100.887 2017.29,98.1596 2017.99,98.7179 2018.7,96.5509 2019.41,98.5366 2020.12,100.177 2020.82,103.088 2021.53,103.233 2022.24,103.52 2022.95,103.702 2023.66,106.457 2024.36,106.423 2025.07,107.834 2025.78,102.434 2026.49,101.118 2027.19,101.302 2027.9,102.816 2028.61,104.625 2029.32,103.418 2030.03,102.026 2030.73,102.683 2031.44,100.056 2032.15,100.512 2032.86,102.056 2033.56,100.951 2034.27,102.744 2034.98,98.9242 2035.69,105.144 2036.4,105.041 2037.1,105.009 2037.81,106.425 2038.52,102.438 2039.23,99.4805 2039.93,101.272 2040.64,101.52 2041.35,102.013 2042.06,104.693 2042.77,106.01 2043.47,105.807 2044.18,106.91 2044.89,107.967 2045.6,109.233 2046.3,106.132 2047.01,106.125 2047.72,103.209 2048.43,105.999 2049.14,103.058 2049.84,102.971 2050.55,104.395 2051.26,102.657 2051.97,104.29 2052.68,105.777 2053.38,109.776 2054.09,113.713 2054.8,109.068 2055.51,110.186 2056.21,113.689 2056.92,114.619 2057.63,116.631 2058.34,115.719 2059.05,113.498 2059.75,112.831 2060.46,110.98 2061.17,110.322 2061.88,112.708 2062.58,113.463 2063.29,111.656 2064,113.849 2064.71,111.458 2065.42,107.904 2066.12,113.015 2066.83,112.038 2067.54,111.372 2068.25,112.2 2068.95,112.704 2069.66,113.268 2070.37,112.243 2071.08,112.693 2071.79,110.718 2072.49,109.902 2073.2,110.99 2073.91,110.074 2074.62,106.73 2075.32,104.92 2076.03,106.086 2076.74,106.932 2077.45,106.548 2078.16,106.304 2078.86,101.852 2079.57,101.796 2080.28,102.87 2080.99,103.015 2081.69,101.739 2082.4,103.068 2083.11,101.764 2083.82,104.801 2084.53,104.418 2085.23,104.233 2085.94,102.335 2086.65,103.662 2087.36,102.257 2088.06,103.615 2088.77,100.592 2089.48,100.68 2090.19,99.6321 2090.9,99.5983 2091.6,98.5985 2092.31,100.046 2093.02,98.5185 2093.73,100.073 2094.43,100.172 2095.14,100.037 2095.85,100.211 2096.56,103.054 2097.27,101.578 2097.97,101.422 2098.68,102.759 2099.39,102.53 2100.1,102.418 2100.8,103.625 2101.51,102.198 2102.22,102.257 2102.93,100.906 2103.64,100.985 2104.34,101.211 2105.05,99.6846 2105.76,100.904 2106.47,101.144 2107.17,100.14 2107.88,100.34 2108.59,97.9451 2109.3,98.3803 2110.01,99.9361 2110.71,96.1769 2111.42,96.4245 2112.13,96.651 2112.84,94.2248 2113.54,96.1294 2114.25,99.0468 2114.96,102.184 2115.67,106.234 2116.38,103.339 2117.08,100.578 2117.79,97.6712 2118.5,98.0581 2119.21,95.6045 2119.91,95.0294 2120.62,95.5895 2121.33,99.2351 2122.04,102.157 2122.75,100.733 2123.45,100.851 2124.16,102.567 2124.87,105.433 2125.58,106.774 2126.28,104.969 2126.99,103.564 2127.7,102.14 2128.41,106.398 2129.12,107.61 2129.82,108.331 2130.53,106.843 2131.24,103.801 2131.95,103.366 2132.66,101.769 2133.36,100.794 2134.07,99.7095 2134.78,100.981 2135.49,104.145 2136.19,102.856 2136.9,101.175 2137.61,102.852 2138.32,100.288 2139.03,101.854 2139.73,100.929 2140.44,99.7898 2141.15,98.5579 2141.86,99.1794 2142.56,99.6436 2143.27,97.0587 2143.98,94.5929 2144.69,95.4084 2145.4,96.2528 2146.1,95.7013 2146.81,97.8339 2147.52,98.3866 2148.23,98.8278 2148.93,103.477 2149.64,102.033 2150.35,101.981 2151.06,102.143 2151.77,102.197 2152.47,100.734 2153.18,98.2749 2153.89,98.6663 2154.6,97.5442 2155.3,99.2427 2156.01,99.6571 2156.72,101.525 2157.43,98.9678 2158.14,100.671 2158.84,101.119 2159.55,101.475 2160.26,102.005 2160.97,103.605 2161.67,99.4966 2162.38,98.098 2163.09,95.8233 2163.8,93.8836 2164.51,96.1597 2165.21,96.6857 2165.92,98.6299 2166.63,97.4722 2167.34,101.003 2168.04,101.374 2168.75,102.885 2169.46,101.639 2170.17,104.708 2170.88,104.998 2171.58,105.36 2172.29,106.842 2173,105.359 2173.71,103.006 2174.41,103.326 2175.12,103.53 2175.83,106.459 2176.54,106.571 2177.25,107.7 2177.95,108.758 2178.66,109.732 2179.37,108.163 2180.08,110.774 2180.78,114.35 2181.49,112.372 2182.2,113.34 2182.91,112.909 2183.62,113.689 2184.32,113.294 2185.03,114.193 2185.74,116.238 2186.45,117.134 2187.15,117.378 2187.86,116.93 2188.57,120.435 2189.28,120.455 2189.99,120.617 2190.69,119.313 2191.4,118.274 2192.11,115.751 2192.82,114.564 2193.52,114.028 2194.23,110.419 2194.94,111.292 2195.65,110.617 2196.36,108.438 2197.06,107.872 2197.77,110.113 2198.48,112.33 2199.19,112.795 2199.89,110.484 2200.6,108.318 2201.31,106.544 2202.02,103.278 2202.73,98.8951 2203.43,100.304 2204.14,100.322 2204.85,100.257 2205.56,99.0077 2206.27,99.0549 2206.97,100.807 2207.68,98.4065 2208.39,97.5462 2209.1,96.3672 2209.8,98.1027 2210.51,98.3725 2211.22,96.9371 2211.93,95.7637 2212.64,94.8694 2213.34,95.43 2214.05,94.7953 2214.76,95.0252 2215.47,96.8889 2216.17,100.259 2216.88,100.447 2217.59,99.2697 2218.3,99.353 2219.01,99.6002 2219.71,97.1226 2220.42,96.3587 2221.13,95.127 2221.84,97.0072 2222.54,100.397 2223.25,100.711 2223.96,98.0678 2224.67,98.3963 2225.38,96.0539 2226.08,96.4145 2226.79,97.0105 2227.5,101.593 2228.21,103.128 2228.91,101.593 2229.62,101.629 2230.33,97.5343 2231.04,98.112 2231.75,97.1703 2232.45,99.1058 2233.16,100.985 2233.87,104.176 2234.58,105.349 2235.28,105.136 2235.99,103.791 2236.7,102.533 2237.41,101.168 2238.12,99.7402 2238.82,102.93 2239.53,106.872 2240.24,109.417 2240.95,109.162 2241.65,110.215 2242.36,108.466 2243.07,108.074 2243.78,106.56 2244.49,107.516 2245.19,107.225 2245.9,108.303 2246.61,107.969 2247.32,111.84 2248.02,112.662 2248.73,111.99 2249.44,111.696 2250.15,112.634 2250.86,110.636 2251.56,107.501 2252.27,107.397 2252.98,101.705 2253.69,98.9666 2254.39,96.829 2255.1,100.185 2255.81,100.29 2256.52,101.519 2257.23,102.867 2257.93,102.637 2258.64,101.401 2259.35,102.807 2260.06,102.682 2260.76,101.273 2261.47,104.314 2262.18,102.98 2262.89,99.1418 2263.6,100.982 2264.3,101.272 2265.01,101.201 2265.72,98.9173 2266.43,99.3536 2267.13,100.724 2267.84,102.324 2268.55,102.289 2269.26,103.802 2269.97,106.561 2270.67,107.875 2271.38,110.24 2272.09,105.562 2272.8,105.438 2273.5,102.809 2274.21,104.075 2274.92,108.108 2275.63,107.939 2276.34,109.138 2277.04,108.504 2277.75,107.911 2278.46,107.608 2279.17,110.228 2279.87,109.719 2280.58,106.738 2281.29,106.566 2282,106.443 2282.71,106.11 2283.41,105.997 2284.12,107.236 2284.83,105.576 2285.54,103.657 2286.25,102.184 2286.95,101.662 2287.66,103.024 2288.37,104.352 2289.08,102.737 \"/>\n<path clip-path=\"url(#clip570)\" d=\"M1732.08 1456.66 L2277.76 1456.66 L2277.76 1301.14 L1732.08 1301.14  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip570)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1732.08,1456.66 2277.76,1456.66 2277.76,1301.14 1732.08,1301.14 1732.08,1456.66 \"/>\n<polyline clip-path=\"url(#clip570)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1757.08,1352.98 1907.09,1352.98 \"/>\n<path clip-path=\"url(#clip570)\" d=\"M1939.49 1336.97 L1939.49 1344.33 L1948.27 1344.33 L1948.27 1347.64 L1939.49 1347.64 L1939.49 1361.72 Q1939.49 1364.89 1940.35 1365.79 Q1941.23 1366.69 1943.89 1366.69 L1948.27 1366.69 L1948.27 1370.26 L1943.89 1370.26 Q1938.96 1370.26 1937.09 1368.43 Q1935.21 1366.58 1935.21 1361.72 L1935.21 1347.64 L1932.09 1347.64 L1932.09 1344.33 L1935.21 1344.33 L1935.21 1336.97 L1939.49 1336.97 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M1965.65 1357.23 Q1960.49 1357.23 1958.5 1358.41 Q1956.51 1359.59 1956.51 1362.44 Q1956.51 1364.7 1957.99 1366.05 Q1959.49 1367.37 1962.06 1367.37 Q1965.6 1367.37 1967.73 1364.87 Q1969.89 1362.34 1969.89 1358.18 L1969.89 1357.23 L1965.65 1357.23 M1974.15 1355.47 L1974.15 1370.26 L1969.89 1370.26 L1969.89 1366.32 Q1968.43 1368.69 1966.25 1369.82 Q1964.08 1370.93 1960.93 1370.93 Q1956.95 1370.93 1954.59 1368.71 Q1952.25 1366.46 1952.25 1362.71 Q1952.25 1358.34 1955.16 1356.12 Q1958.1 1353.89 1963.91 1353.89 L1969.89 1353.89 L1969.89 1353.48 Q1969.89 1350.54 1967.94 1348.94 Q1966.02 1347.32 1962.53 1347.32 Q1960.3 1347.32 1958.2 1347.85 Q1956.09 1348.38 1954.15 1349.45 L1954.15 1345.51 Q1956.48 1344.61 1958.68 1344.17 Q1960.88 1343.71 1962.97 1343.71 Q1968.59 1343.71 1971.37 1346.63 Q1974.15 1349.54 1974.15 1355.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M1997.94 1348.31 Q1997.22 1347.9 1996.37 1347.71 Q1995.53 1347.5 1994.52 1347.5 Q1990.9 1347.5 1988.96 1349.87 Q1987.04 1352.2 1987.04 1356.6 L1987.04 1370.26 L1982.76 1370.26 L1982.76 1344.33 L1987.04 1344.33 L1987.04 1348.36 Q1988.38 1346 1990.53 1344.87 Q1992.69 1343.71 1995.77 1343.71 Q1996.21 1343.71 1996.74 1343.78 Q1997.27 1343.82 1997.92 1343.94 L1997.94 1348.31 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M2018.64 1357 Q2018.64 1352.37 2016.71 1349.82 Q2014.82 1347.27 2011.37 1347.27 Q2007.94 1347.27 2006.02 1349.82 Q2004.12 1352.37 2004.12 1357 Q2004.12 1361.6 2006.02 1364.15 Q2007.94 1366.69 2011.37 1366.69 Q2014.82 1366.69 2016.71 1364.15 Q2018.64 1361.6 2018.64 1357 M2022.9 1367.04 Q2022.9 1373.66 2019.96 1376.88 Q2017.02 1380.12 2010.95 1380.12 Q2008.71 1380.12 2006.71 1379.77 Q2004.72 1379.45 2002.85 1378.75 L2002.85 1374.61 Q2004.72 1375.63 2006.55 1376.12 Q2008.38 1376.6 2010.28 1376.6 Q2014.47 1376.6 2016.55 1374.4 Q2018.64 1372.23 2018.64 1367.81 L2018.64 1365.7 Q2017.32 1367.99 2015.26 1369.13 Q2013.2 1370.26 2010.33 1370.26 Q2005.56 1370.26 2002.64 1366.63 Q1999.72 1362.99 1999.72 1357 Q1999.72 1350.98 2002.64 1347.34 Q2005.56 1343.71 2010.33 1343.71 Q2013.2 1343.71 2015.26 1344.84 Q2017.32 1345.98 2018.64 1348.27 L2018.64 1344.33 L2022.9 1344.33 L2022.9 1367.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M2053.84 1356.23 L2053.84 1358.31 L2034.26 1358.31 Q2034.54 1362.71 2036.9 1365.03 Q2039.28 1367.32 2043.52 1367.32 Q2045.97 1367.32 2048.27 1366.72 Q2050.58 1366.12 2052.85 1364.91 L2052.85 1368.94 Q2050.56 1369.91 2048.15 1370.42 Q2045.74 1370.93 2043.27 1370.93 Q2037.06 1370.93 2033.43 1367.32 Q2029.82 1363.71 2029.82 1357.55 Q2029.82 1351.19 2033.24 1347.46 Q2036.69 1343.71 2042.52 1343.71 Q2047.76 1343.71 2050.79 1347.09 Q2053.84 1350.44 2053.84 1356.23 M2049.58 1354.98 Q2049.54 1351.49 2047.62 1349.4 Q2045.72 1347.32 2042.57 1347.32 Q2039.01 1347.32 2036.85 1349.33 Q2034.72 1351.35 2034.4 1355 L2049.58 1354.98 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M2065.05 1336.97 L2065.05 1344.33 L2073.82 1344.33 L2073.82 1347.64 L2065.05 1347.64 L2065.05 1361.72 Q2065.05 1364.89 2065.9 1365.79 Q2066.78 1366.69 2069.45 1366.69 L2073.82 1366.69 L2073.82 1370.26 L2069.45 1370.26 Q2064.52 1370.26 2062.64 1368.43 Q2060.77 1366.58 2060.77 1361.72 L2060.77 1347.64 L2057.64 1347.64 L2057.64 1344.33 L2060.77 1344.33 L2060.77 1336.97 L2065.05 1336.97 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M2076.95 1344.33 L2081.21 1344.33 L2086.53 1364.56 L2091.83 1344.33 L2096.85 1344.33 L2102.18 1364.56 L2107.48 1344.33 L2111.74 1344.33 L2104.96 1370.26 L2099.93 1370.26 L2094.35 1349.01 L2088.75 1370.26 L2083.73 1370.26 L2076.95 1344.33 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M2129.98 1357.23 Q2124.82 1357.23 2122.83 1358.41 Q2120.83 1359.59 2120.83 1362.44 Q2120.83 1364.7 2122.32 1366.05 Q2123.82 1367.37 2126.39 1367.37 Q2129.93 1367.37 2132.06 1364.87 Q2134.21 1362.34 2134.21 1358.18 L2134.21 1357.23 L2129.98 1357.23 M2138.47 1355.47 L2138.47 1370.26 L2134.21 1370.26 L2134.21 1366.32 Q2132.76 1368.69 2130.58 1369.82 Q2128.4 1370.93 2125.26 1370.93 Q2121.27 1370.93 2118.91 1368.71 Q2116.58 1366.46 2116.58 1362.71 Q2116.58 1358.34 2119.49 1356.12 Q2122.43 1353.89 2128.24 1353.89 L2134.21 1353.89 L2134.21 1353.48 Q2134.21 1350.54 2132.27 1348.94 Q2130.35 1347.32 2126.85 1347.32 Q2124.63 1347.32 2122.52 1347.85 Q2120.42 1348.38 2118.47 1349.45 L2118.47 1345.51 Q2120.81 1344.61 2123.01 1344.17 Q2125.21 1343.71 2127.29 1343.71 Q2132.92 1343.71 2135.7 1346.63 Q2138.47 1349.54 2138.47 1355.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M2147.25 1334.24 L2151.51 1334.24 L2151.51 1370.26 L2147.25 1370.26 L2147.25 1334.24 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M2160.26 1334.24 L2164.54 1334.24 L2164.54 1355.51 L2177.25 1344.33 L2182.69 1344.33 L2168.94 1356.46 L2183.26 1370.26 L2177.71 1370.26 L2164.54 1357.6 L2164.54 1370.26 L2160.26 1370.26 L2160.26 1334.24 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M2208.36 1356.23 L2208.36 1358.31 L2188.77 1358.31 Q2189.05 1362.71 2191.41 1365.03 Q2193.8 1367.32 2198.03 1367.32 Q2200.49 1367.32 2202.78 1366.72 Q2205.09 1366.12 2207.36 1364.91 L2207.36 1368.94 Q2205.07 1369.91 2202.66 1370.42 Q2200.26 1370.93 2197.78 1370.93 Q2191.57 1370.93 2187.94 1367.32 Q2184.33 1363.71 2184.33 1357.55 Q2184.33 1351.19 2187.76 1347.46 Q2191.2 1343.71 2197.04 1343.71 Q2202.27 1343.71 2205.3 1347.09 Q2208.36 1350.44 2208.36 1356.23 M2204.1 1354.98 Q2204.05 1351.49 2202.13 1349.4 Q2200.23 1347.32 2197.08 1347.32 Q2193.52 1347.32 2191.37 1349.33 Q2189.24 1351.35 2188.91 1355 L2204.1 1354.98 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M2230.37 1348.31 Q2229.65 1347.9 2228.8 1347.71 Q2227.96 1347.5 2226.95 1347.5 Q2223.33 1347.5 2221.39 1349.87 Q2219.47 1352.2 2219.47 1356.6 L2219.47 1370.26 L2215.19 1370.26 L2215.19 1344.33 L2219.47 1344.33 L2219.47 1348.36 Q2220.81 1346 2222.96 1344.87 Q2225.12 1343.71 2228.2 1343.71 Q2228.63 1343.71 2229.17 1343.78 Q2229.7 1343.82 2230.35 1343.94 L2230.37 1348.31 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M2251.37 1345.1 L2251.37 1349.13 Q2249.56 1348.2 2247.62 1347.74 Q2245.67 1347.27 2243.59 1347.27 Q2240.42 1347.27 2238.82 1348.25 Q2237.25 1349.22 2237.25 1351.16 Q2237.25 1352.64 2238.38 1353.5 Q2239.51 1354.33 2242.94 1355.1 L2244.4 1355.42 Q2248.94 1356.39 2250.83 1358.18 Q2252.76 1359.94 2252.76 1363.11 Q2252.76 1366.72 2249.88 1368.82 Q2247.04 1370.93 2242.04 1370.93 Q2239.95 1370.93 2237.69 1370.51 Q2235.44 1370.12 2232.94 1369.31 L2232.94 1364.91 Q2235.3 1366.14 2237.59 1366.76 Q2239.88 1367.37 2242.13 1367.37 Q2245.14 1367.37 2246.76 1366.35 Q2248.38 1365.31 2248.38 1363.43 Q2248.38 1361.69 2247.2 1360.77 Q2246.04 1359.84 2242.08 1358.99 L2240.6 1358.64 Q2236.64 1357.81 2234.88 1356.09 Q2233.13 1354.36 2233.13 1351.35 Q2233.13 1347.69 2235.72 1345.7 Q2238.31 1343.71 2243.08 1343.71 Q2245.44 1343.71 2247.52 1344.06 Q2249.61 1344.4 2251.37 1345.1 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip570)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1757.08,1404.82 1907.09,1404.82 \"/>\n<path clip-path=\"url(#clip570)\" d=\"M1953.8 1406.45 L1953.8 1422.1 L1949.54 1422.1 L1949.54 1406.59 Q1949.54 1402.91 1948.1 1401.08 Q1946.67 1399.25 1943.8 1399.25 Q1940.35 1399.25 1938.36 1401.45 Q1936.37 1403.65 1936.37 1407.45 L1936.37 1422.1 L1932.09 1422.1 L1932.09 1396.17 L1936.37 1396.17 L1936.37 1400.2 Q1937.9 1397.86 1939.96 1396.71 Q1942.04 1395.55 1944.75 1395.55 Q1949.22 1395.55 1951.51 1398.33 Q1953.8 1401.08 1953.8 1406.45 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M1972.34 1399.16 Q1968.91 1399.16 1966.92 1401.84 Q1964.93 1404.51 1964.93 1409.16 Q1964.93 1413.81 1966.9 1416.5 Q1968.89 1419.16 1972.34 1419.16 Q1975.74 1419.16 1977.73 1416.47 Q1979.72 1413.79 1979.72 1409.16 Q1979.72 1404.55 1977.73 1401.87 Q1975.74 1399.16 1972.34 1399.16 M1972.34 1395.55 Q1977.9 1395.55 1981.07 1399.16 Q1984.24 1402.77 1984.24 1409.16 Q1984.24 1415.53 1981.07 1419.16 Q1977.9 1422.77 1972.34 1422.77 Q1966.76 1422.77 1963.59 1419.16 Q1960.44 1415.53 1960.44 1409.16 Q1960.44 1402.77 1963.59 1399.16 Q1966.76 1395.55 1972.34 1395.55 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M2006.32 1400.15 Q2005.6 1399.74 2004.75 1399.55 Q2003.91 1399.34 2002.9 1399.34 Q1999.28 1399.34 1997.34 1401.71 Q1995.42 1404.04 1995.42 1408.44 L1995.42 1422.1 L1991.14 1422.1 L1991.14 1396.17 L1995.42 1396.17 L1995.42 1400.2 Q1996.76 1397.84 1998.91 1396.71 Q2001.07 1395.55 2004.15 1395.55 Q2004.59 1395.55 2005.12 1395.62 Q2005.65 1395.66 2006.3 1395.78 L2006.32 1400.15 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip570)\" d=\"M2030.14 1401.15 Q2031.74 1398.28 2033.96 1396.91 Q2036.18 1395.55 2039.19 1395.55 Q2043.24 1395.55 2045.44 1398.4 Q2047.64 1401.22 2047.64 1406.45 L2047.64 1422.1 L2043.36 1422.1 L2043.36 1406.59 Q2043.36 1402.86 2042.04 1401.06 Q2040.72 1399.25 2038.01 1399.25 Q2034.7 1399.25 2032.78 1401.45 Q2030.86 1403.65 2030.86 1407.45 L2030.86 1422.1 L2026.58 1422.1 L2026.58 1406.59 Q2026.58 1402.84 2025.26 1401.06 Q2023.94 1399.25 2021.18 1399.25 Q2017.92 1399.25 2016 1401.47 Q2014.08 1403.67 2014.08 1407.45 L2014.08 1422.1 L2009.79 1422.1 L2009.79 1396.17 L2014.08 1396.17 L2014.08 1400.2 Q2015.53 1397.82 2017.57 1396.68 Q2019.61 1395.55 2022.41 1395.55 Q2025.23 1395.55 2027.2 1396.98 Q2029.19 1398.42 2030.14 1401.15 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.028 ± 0.028\n  with uncertainty of ± 0.0025028718411415646\n  from 62 blocks after 5 transformations (k = 6).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables. Thankfully, the complications are handled by the following function.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01631 ± (0.00212832, 0.00206379) (MC)\n  95% confidence interval: [-4.02062, -4.01212]) (MC)\n  linear error propagation: -4.01637 ± 0.00215589\n  |δ_y| = |0.00243897| (≤ 0.1 for normal approx)\n  Blocking successful with 15 blocks after 7 transformations (k = 8).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.016314467689392, val_l = 0.004304544683139788, val_u = 0.00419639764247659)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"energy\")\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, laststep], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip600\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip600)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip601\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip600)\" d=\"M102.74 1505.26 L2352.76 1505.26 L2352.76 47.2441 L102.74 47.2441  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip602\">\n    <rect x=\"102\" y=\"47\" width=\"2251\" height=\"1459\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip602)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"165.712,1505.26 165.712,47.2441 \"/>\n<polyline clip-path=\"url(#clip602)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"873.5,1505.26 873.5,47.2441 \"/>\n<polyline clip-path=\"url(#clip602)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1581.29,1505.26 1581.29,47.2441 \"/>\n<polyline clip-path=\"url(#clip602)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2289.08,1505.26 2289.08,47.2441 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"102.74,1505.26 2352.76,1505.26 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"165.712,1505.26 165.712,1486.36 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"873.5,1505.26 873.5,1486.36 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1581.29,1505.26 1581.29,1486.36 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2289.08,1505.26 2289.08,1486.36 \"/>\n<path clip-path=\"url(#clip600)\" d=\"M165.712 1536.18 Q162.101 1536.18 160.272 1539.74 Q158.467 1543.28 158.467 1550.41 Q158.467 1557.52 160.272 1561.09 Q162.101 1564.63 165.712 1564.63 Q169.346 1564.63 171.152 1561.09 Q172.981 1557.52 172.981 1550.41 Q172.981 1543.28 171.152 1539.74 Q169.346 1536.18 165.712 1536.18 M165.712 1532.47 Q171.522 1532.47 174.578 1537.08 Q177.656 1541.66 177.656 1550.41 Q177.656 1559.14 174.578 1563.75 Q171.522 1568.33 165.712 1568.33 Q159.902 1568.33 156.823 1563.75 Q153.768 1559.14 153.768 1550.41 Q153.768 1541.66 156.823 1537.08 Q159.902 1532.47 165.712 1532.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M818.026 1563.72 L825.665 1563.72 L825.665 1537.36 L817.355 1539.03 L817.355 1534.77 L825.618 1533.1 L830.294 1533.1 L830.294 1563.72 L837.933 1563.72 L837.933 1567.66 L818.026 1567.66 L818.026 1563.72 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M857.378 1536.18 Q853.766 1536.18 851.938 1539.74 Q850.132 1543.28 850.132 1550.41 Q850.132 1557.52 851.938 1561.09 Q853.766 1564.63 857.378 1564.63 Q861.012 1564.63 862.817 1561.09 Q864.646 1557.52 864.646 1550.41 Q864.646 1543.28 862.817 1539.74 Q861.012 1536.18 857.378 1536.18 M857.378 1532.47 Q863.188 1532.47 866.243 1537.08 Q869.322 1541.66 869.322 1550.41 Q869.322 1559.14 866.243 1563.75 Q863.188 1568.33 857.378 1568.33 Q851.567 1568.33 848.489 1563.75 Q845.433 1559.14 845.433 1550.41 Q845.433 1541.66 848.489 1537.08 Q851.567 1532.47 857.378 1532.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M887.539 1536.18 Q883.928 1536.18 882.1 1539.74 Q880.294 1543.28 880.294 1550.41 Q880.294 1557.52 882.1 1561.09 Q883.928 1564.63 887.539 1564.63 Q891.174 1564.63 892.979 1561.09 Q894.808 1557.52 894.808 1550.41 Q894.808 1543.28 892.979 1539.74 Q891.174 1536.18 887.539 1536.18 M887.539 1532.47 Q893.35 1532.47 896.405 1537.08 Q899.484 1541.66 899.484 1550.41 Q899.484 1559.14 896.405 1563.75 Q893.35 1568.33 887.539 1568.33 Q881.729 1568.33 878.651 1563.75 Q875.595 1559.14 875.595 1550.41 Q875.595 1541.66 878.651 1537.08 Q881.729 1532.47 887.539 1532.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M917.701 1536.18 Q914.09 1536.18 912.261 1539.74 Q910.456 1543.28 910.456 1550.41 Q910.456 1557.52 912.261 1561.09 Q914.09 1564.63 917.701 1564.63 Q921.336 1564.63 923.141 1561.09 Q924.97 1557.52 924.97 1550.41 Q924.97 1543.28 923.141 1539.74 Q921.336 1536.18 917.701 1536.18 M917.701 1532.47 Q923.511 1532.47 926.567 1537.08 Q929.646 1541.66 929.646 1550.41 Q929.646 1559.14 926.567 1563.75 Q923.511 1568.33 917.701 1568.33 Q911.891 1568.33 908.812 1563.75 Q905.757 1559.14 905.757 1550.41 Q905.757 1541.66 908.812 1537.08 Q911.891 1532.47 917.701 1532.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1529.9 1563.72 L1546.22 1563.72 L1546.22 1567.66 L1524.27 1567.66 L1524.27 1563.72 Q1526.94 1560.97 1531.52 1556.34 Q1536.13 1551.69 1537.31 1550.35 Q1539.55 1547.82 1540.43 1546.09 Q1541.33 1544.33 1541.33 1542.64 Q1541.33 1539.88 1539.39 1538.15 Q1537.47 1536.41 1534.37 1536.41 Q1532.17 1536.41 1529.71 1537.17 Q1527.28 1537.94 1524.51 1539.49 L1524.51 1534.77 Q1527.33 1533.63 1529.78 1533.05 Q1532.24 1532.47 1534.27 1532.47 Q1539.64 1532.47 1542.84 1535.16 Q1546.03 1537.85 1546.03 1542.34 Q1546.03 1544.47 1545.22 1546.39 Q1544.44 1548.28 1542.33 1550.88 Q1541.75 1551.55 1538.65 1554.77 Q1535.55 1557.96 1529.9 1563.72 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1566.03 1536.18 Q1562.42 1536.18 1560.59 1539.74 Q1558.79 1543.28 1558.79 1550.41 Q1558.79 1557.52 1560.59 1561.09 Q1562.42 1564.63 1566.03 1564.63 Q1569.67 1564.63 1571.47 1561.09 Q1573.3 1557.52 1573.3 1550.41 Q1573.3 1543.28 1571.47 1539.74 Q1569.67 1536.18 1566.03 1536.18 M1566.03 1532.47 Q1571.84 1532.47 1574.9 1537.08 Q1577.98 1541.66 1577.98 1550.41 Q1577.98 1559.14 1574.9 1563.75 Q1571.84 1568.33 1566.03 1568.33 Q1560.22 1568.33 1557.14 1563.75 Q1554.09 1559.14 1554.09 1550.41 Q1554.09 1541.66 1557.14 1537.08 Q1560.22 1532.47 1566.03 1532.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1596.2 1536.18 Q1592.58 1536.18 1590.76 1539.74 Q1588.95 1543.28 1588.95 1550.41 Q1588.95 1557.52 1590.76 1561.09 Q1592.58 1564.63 1596.2 1564.63 Q1599.83 1564.63 1601.64 1561.09 Q1603.46 1557.52 1603.46 1550.41 Q1603.46 1543.28 1601.64 1539.74 Q1599.83 1536.18 1596.2 1536.18 M1596.2 1532.47 Q1602.01 1532.47 1605.06 1537.08 Q1608.14 1541.66 1608.14 1550.41 Q1608.14 1559.14 1605.06 1563.75 Q1602.01 1568.33 1596.2 1568.33 Q1590.39 1568.33 1587.31 1563.75 Q1584.25 1559.14 1584.25 1550.41 Q1584.25 1541.66 1587.31 1537.08 Q1590.39 1532.47 1596.2 1532.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1626.36 1536.18 Q1622.75 1536.18 1620.92 1539.74 Q1619.11 1543.28 1619.11 1550.41 Q1619.11 1557.52 1620.92 1561.09 Q1622.75 1564.63 1626.36 1564.63 Q1629.99 1564.63 1631.8 1561.09 Q1633.63 1557.52 1633.63 1550.41 Q1633.63 1543.28 1631.8 1539.74 Q1629.99 1536.18 1626.36 1536.18 M1626.36 1532.47 Q1632.17 1532.47 1635.22 1537.08 Q1638.3 1541.66 1638.3 1550.41 Q1638.3 1559.14 1635.22 1563.75 Q1632.17 1568.33 1626.36 1568.33 Q1620.55 1568.33 1617.47 1563.75 Q1614.41 1559.14 1614.41 1550.41 Q1614.41 1541.66 1617.47 1537.08 Q1620.55 1532.47 1626.36 1532.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M2247.76 1549.03 Q2251.11 1549.74 2252.99 1552.01 Q2254.89 1554.28 2254.89 1557.61 Q2254.89 1562.73 2251.37 1565.53 Q2247.85 1568.33 2241.37 1568.33 Q2239.19 1568.33 2236.88 1567.89 Q2234.59 1567.47 2232.13 1566.62 L2232.13 1562.1 Q2234.08 1563.24 2236.39 1563.82 Q2238.71 1564.4 2241.23 1564.4 Q2245.63 1564.4 2247.92 1562.66 Q2250.23 1560.92 2250.23 1557.61 Q2250.23 1554.56 2248.08 1552.85 Q2245.95 1551.11 2242.13 1551.11 L2238.1 1551.11 L2238.1 1547.27 L2242.32 1547.27 Q2245.77 1547.27 2247.59 1545.9 Q2249.42 1544.51 2249.42 1541.92 Q2249.42 1539.26 2247.53 1537.85 Q2245.65 1536.41 2242.13 1536.41 Q2240.21 1536.41 2238.01 1536.83 Q2235.81 1537.24 2233.17 1538.12 L2233.17 1533.96 Q2235.84 1533.22 2238.15 1532.85 Q2240.49 1532.47 2242.55 1532.47 Q2247.87 1532.47 2250.97 1534.91 Q2254.08 1537.31 2254.08 1541.43 Q2254.08 1544.3 2252.43 1546.29 Q2250.79 1548.26 2247.76 1549.03 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M2273.75 1536.18 Q2270.14 1536.18 2268.31 1539.74 Q2266.51 1543.28 2266.51 1550.41 Q2266.51 1557.52 2268.31 1561.09 Q2270.14 1564.63 2273.75 1564.63 Q2277.39 1564.63 2279.19 1561.09 Q2281.02 1557.52 2281.02 1550.41 Q2281.02 1543.28 2279.19 1539.74 Q2277.39 1536.18 2273.75 1536.18 M2273.75 1532.47 Q2279.56 1532.47 2282.62 1537.08 Q2285.7 1541.66 2285.7 1550.41 Q2285.7 1559.14 2282.62 1563.75 Q2279.56 1568.33 2273.75 1568.33 Q2267.94 1568.33 2264.86 1563.75 Q2261.81 1559.14 2261.81 1550.41 Q2261.81 1541.66 2264.86 1537.08 Q2267.94 1532.47 2273.75 1532.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M2303.91 1536.18 Q2300.3 1536.18 2298.47 1539.74 Q2296.67 1543.28 2296.67 1550.41 Q2296.67 1557.52 2298.47 1561.09 Q2300.3 1564.63 2303.91 1564.63 Q2307.55 1564.63 2309.35 1561.09 Q2311.18 1557.52 2311.18 1550.41 Q2311.18 1543.28 2309.35 1539.74 Q2307.55 1536.18 2303.91 1536.18 M2303.91 1532.47 Q2309.72 1532.47 2312.78 1537.08 Q2315.86 1541.66 2315.86 1550.41 Q2315.86 1559.14 2312.78 1563.75 Q2309.72 1568.33 2303.91 1568.33 Q2298.1 1568.33 2295.03 1563.75 Q2291.97 1559.14 2291.97 1550.41 Q2291.97 1541.66 2295.03 1537.08 Q2298.1 1532.47 2303.91 1532.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M2334.08 1536.18 Q2330.46 1536.18 2328.64 1539.74 Q2326.83 1543.28 2326.83 1550.41 Q2326.83 1557.52 2328.64 1561.09 Q2330.46 1564.63 2334.08 1564.63 Q2337.71 1564.63 2339.52 1561.09 Q2341.34 1557.52 2341.34 1550.41 Q2341.34 1543.28 2339.52 1539.74 Q2337.71 1536.18 2334.08 1536.18 M2334.08 1532.47 Q2339.89 1532.47 2342.94 1537.08 Q2346.02 1541.66 2346.02 1550.41 Q2346.02 1559.14 2342.94 1563.75 Q2339.89 1568.33 2334.08 1568.33 Q2328.27 1568.33 2325.19 1563.75 Q2322.13 1559.14 2322.13 1550.41 Q2322.13 1541.66 2325.19 1537.08 Q2328.27 1532.47 2334.08 1532.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1168.96 1615.53 L1168.96 1621.06 Q1166.48 1619.79 1163.8 1619.15 Q1161.13 1618.52 1158.27 1618.52 Q1153.91 1618.52 1151.71 1619.85 Q1149.55 1621.19 1149.55 1623.87 Q1149.55 1625.9 1151.1 1627.08 Q1152.66 1628.23 1157.38 1629.28 L1159.38 1629.72 Q1165.62 1631.06 1168.23 1633.51 Q1170.87 1635.93 1170.87 1640.29 Q1170.87 1645.25 1166.92 1648.15 Q1163.01 1651.05 1156.13 1651.05 Q1153.27 1651.05 1150.15 1650.47 Q1147.06 1649.93 1143.63 1648.82 L1143.63 1642.77 Q1146.87 1644.46 1150.02 1645.32 Q1153.17 1646.15 1156.26 1646.15 Q1160.4 1646.15 1162.63 1644.74 Q1164.85 1643.31 1164.85 1640.73 Q1164.85 1638.35 1163.23 1637.07 Q1161.64 1635.8 1156.2 1634.62 L1154.16 1634.15 Q1148.72 1633 1146.3 1630.64 Q1143.88 1628.26 1143.88 1624.12 Q1143.88 1619.09 1147.44 1616.35 Q1151.01 1613.62 1157.57 1613.62 Q1160.81 1613.62 1163.68 1614.09 Q1166.54 1614.57 1168.96 1615.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1185.99 1604.35 L1185.99 1614.48 L1198.05 1614.48 L1198.05 1619.03 L1185.99 1619.03 L1185.99 1638.38 Q1185.99 1642.74 1187.17 1643.98 Q1188.38 1645.22 1192.04 1645.22 L1198.05 1645.22 L1198.05 1650.12 L1192.04 1650.12 Q1185.26 1650.12 1182.68 1647.61 Q1180.1 1645.06 1180.1 1638.38 L1180.1 1619.03 L1175.8 1619.03 L1175.8 1614.48 L1180.1 1614.48 L1180.1 1604.35 L1185.99 1604.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1236.25 1630.84 L1236.25 1633.7 L1209.32 1633.7 Q1209.7 1639.75 1212.95 1642.93 Q1216.23 1646.08 1222.05 1646.08 Q1225.42 1646.08 1228.58 1645.25 Q1231.76 1644.43 1234.88 1642.77 L1234.88 1648.31 Q1231.73 1649.65 1228.42 1650.35 Q1225.11 1651.05 1221.7 1651.05 Q1213.17 1651.05 1208.17 1646.08 Q1203.21 1641.12 1203.21 1632.65 Q1203.21 1623.9 1207.92 1618.77 Q1212.66 1613.62 1220.68 1613.62 Q1227.88 1613.62 1232.04 1618.26 Q1236.25 1622.88 1236.25 1630.84 M1230.39 1629.12 Q1230.33 1624.31 1227.68 1621.45 Q1225.07 1618.58 1220.75 1618.58 Q1215.84 1618.58 1212.88 1621.35 Q1209.96 1624.12 1209.51 1629.15 L1230.39 1629.12 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1251.52 1644.78 L1251.52 1663.68 L1245.64 1663.68 L1245.64 1614.48 L1251.52 1614.48 L1251.52 1619.89 Q1253.37 1616.7 1256.17 1615.18 Q1259 1613.62 1262.92 1613.62 Q1269.41 1613.62 1273.45 1618.77 Q1277.53 1623.93 1277.53 1632.33 Q1277.53 1640.73 1273.45 1645.89 Q1269.41 1651.05 1262.92 1651.05 Q1259 1651.05 1256.17 1649.52 Q1253.37 1647.96 1251.52 1644.78 M1271.45 1632.33 Q1271.45 1625.87 1268.78 1622.21 Q1266.13 1618.52 1261.49 1618.52 Q1256.84 1618.52 1254.17 1622.21 Q1251.52 1625.87 1251.52 1632.33 Q1251.52 1638.79 1254.17 1642.48 Q1256.84 1646.15 1261.49 1646.15 Q1266.13 1646.15 1268.78 1642.48 Q1271.45 1638.79 1271.45 1632.33 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1309.96 1615.53 L1309.96 1621.06 Q1307.48 1619.79 1304.8 1619.15 Q1302.13 1618.52 1299.27 1618.52 Q1294.91 1618.52 1292.71 1619.85 Q1290.55 1621.19 1290.55 1623.87 Q1290.55 1625.9 1292.11 1627.08 Q1293.66 1628.23 1298.38 1629.28 L1300.38 1629.72 Q1306.62 1631.06 1309.23 1633.51 Q1311.87 1635.93 1311.87 1640.29 Q1311.87 1645.25 1307.92 1648.15 Q1304.01 1651.05 1297.13 1651.05 Q1294.27 1651.05 1291.15 1650.47 Q1288.06 1649.93 1284.63 1648.82 L1284.63 1642.77 Q1287.87 1644.46 1291.02 1645.32 Q1294.17 1646.15 1297.26 1646.15 Q1301.4 1646.15 1303.63 1644.74 Q1305.86 1643.31 1305.86 1640.73 Q1305.86 1638.35 1304.23 1637.07 Q1302.64 1635.8 1297.2 1634.62 L1295.16 1634.15 Q1289.72 1633 1287.3 1630.64 Q1284.88 1628.26 1284.88 1624.12 Q1284.88 1619.09 1288.45 1616.35 Q1292.01 1613.62 1298.57 1613.62 Q1301.81 1613.62 1304.68 1614.09 Q1307.54 1614.57 1309.96 1615.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip602)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"102.74,1327.19 2352.76,1327.19 \"/>\n<polyline clip-path=\"url(#clip602)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"102.74,1116.36 2352.76,1116.36 \"/>\n<polyline clip-path=\"url(#clip602)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"102.74,905.536 2352.76,905.536 \"/>\n<polyline clip-path=\"url(#clip602)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"102.74,694.712 2352.76,694.712 \"/>\n<polyline clip-path=\"url(#clip602)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"102.74,483.887 2352.76,483.887 \"/>\n<polyline clip-path=\"url(#clip602)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"102.74,273.062 2352.76,273.062 \"/>\n<polyline clip-path=\"url(#clip602)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"102.74,62.2376 2352.76,62.2376 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"102.74,1505.26 102.74,47.2441 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"102.74,1327.19 121.638,1327.19 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"102.74,1116.36 121.638,1116.36 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"102.74,905.536 121.638,905.536 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"102.74,694.712 121.638,694.712 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"102.74,483.887 121.638,483.887 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"102.74,273.062 121.638,273.062 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"102.74,62.2376 121.638,62.2376 \"/>\n<path clip-path=\"url(#clip600)\" d=\"M54.7958 1312.98 Q51.1847 1312.98 49.356 1316.55 Q47.5504 1320.09 47.5504 1327.22 Q47.5504 1334.33 49.356 1337.89 Q51.1847 1341.43 54.7958 1341.43 Q58.43 1341.43 60.2356 1337.89 Q62.0643 1334.33 62.0643 1327.22 Q62.0643 1320.09 60.2356 1316.55 Q58.43 1312.98 54.7958 1312.98 M54.7958 1309.28 Q60.6059 1309.28 63.6615 1313.89 Q66.7402 1318.47 66.7402 1327.22 Q66.7402 1335.95 63.6615 1340.55 Q60.6059 1345.14 54.7958 1345.14 Q48.9856 1345.14 45.9069 1340.55 Q42.8514 1335.95 42.8514 1327.22 Q42.8514 1318.47 45.9069 1313.89 Q48.9856 1309.28 54.7958 1309.28 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M15.4441 1129.71 L23.083 1129.71 L23.083 1103.34 L14.7728 1105.01 L14.7728 1100.75 L23.0367 1099.08 L27.7126 1099.08 L27.7126 1129.71 L35.3514 1129.71 L35.3514 1133.64 L15.4441 1133.64 L15.4441 1129.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M54.7958 1102.16 Q51.1847 1102.16 49.356 1105.72 Q47.5504 1109.27 47.5504 1116.4 Q47.5504 1123.5 49.356 1127.07 Q51.1847 1130.61 54.7958 1130.61 Q58.43 1130.61 60.2356 1127.07 Q62.0643 1123.5 62.0643 1116.4 Q62.0643 1109.27 60.2356 1105.72 Q58.43 1102.16 54.7958 1102.16 M54.7958 1098.46 Q60.6059 1098.46 63.6615 1103.06 Q66.7402 1107.65 66.7402 1116.4 Q66.7402 1125.12 63.6615 1129.73 Q60.6059 1134.31 54.7958 1134.31 Q48.9856 1134.31 45.9069 1129.73 Q42.8514 1125.12 42.8514 1116.4 Q42.8514 1107.65 45.9069 1103.06 Q48.9856 1098.46 54.7958 1098.46 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M18.6617 918.881 L34.9811 918.881 L34.9811 922.816 L13.0367 922.816 L13.0367 918.881 Q15.6988 916.126 20.2821 911.497 Q24.8885 906.844 26.0691 905.501 Q28.3144 902.978 29.1941 901.242 Q30.0968 899.483 30.0968 897.793 Q30.0968 895.038 28.1524 893.302 Q26.2311 891.566 23.1293 891.566 Q20.9302 891.566 18.4765 892.33 Q16.046 893.094 13.2682 894.645 L13.2682 889.923 Q16.0923 888.789 18.546 888.21 Q20.9997 887.631 23.0367 887.631 Q28.407 887.631 31.6015 890.316 Q34.7959 893.001 34.7959 897.492 Q34.7959 899.622 33.9857 901.543 Q33.1987 903.441 31.0922 906.034 Q30.5135 906.705 27.4117 909.923 Q24.3098 913.117 18.6617 918.881 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M54.7958 891.335 Q51.1847 891.335 49.356 894.9 Q47.5504 898.441 47.5504 905.571 Q47.5504 912.677 49.356 916.242 Q51.1847 919.784 54.7958 919.784 Q58.43 919.784 60.2356 916.242 Q62.0643 912.677 62.0643 905.571 Q62.0643 898.441 60.2356 894.9 Q58.43 891.335 54.7958 891.335 M54.7958 887.631 Q60.6059 887.631 63.6615 892.238 Q66.7402 896.821 66.7402 905.571 Q66.7402 914.298 63.6615 918.904 Q60.6059 923.487 54.7958 923.487 Q48.9856 923.487 45.9069 918.904 Q42.8514 914.298 42.8514 905.571 Q42.8514 896.821 45.9069 892.238 Q48.9856 887.631 54.7958 887.631 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M28.8005 693.357 Q32.157 694.075 34.032 696.343 Q35.9301 698.612 35.9301 701.945 Q35.9301 707.061 32.4116 709.862 Q28.8931 712.663 22.4117 712.663 Q20.2358 712.663 17.921 712.223 Q15.6293 711.806 13.1756 710.95 L13.1756 706.436 Q15.1201 707.57 17.4349 708.149 Q19.7497 708.728 22.2728 708.728 Q26.6709 708.728 28.9626 706.992 Q31.2774 705.255 31.2774 701.945 Q31.2774 698.89 29.1246 697.177 Q26.995 695.441 23.1756 695.441 L19.1478 695.441 L19.1478 691.598 L23.3608 691.598 Q26.8098 691.598 28.6385 690.232 Q30.4672 688.843 30.4672 686.251 Q30.4672 683.589 28.5691 682.177 Q26.6941 680.742 23.1756 680.742 Q21.2543 680.742 19.0552 681.158 Q16.8562 681.575 14.2173 682.455 L14.2173 678.288 Q16.8793 677.547 19.1941 677.177 Q21.5321 676.807 23.5922 676.807 Q28.9163 676.807 32.0181 679.237 Q35.12 681.644 35.12 685.765 Q35.12 688.635 33.4764 690.626 Q31.8329 692.593 28.8005 693.357 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M54.7958 680.51 Q51.1847 680.51 49.356 684.075 Q47.5504 687.617 47.5504 694.746 Q47.5504 701.853 49.356 705.417 Q51.1847 708.959 54.7958 708.959 Q58.43 708.959 60.2356 705.417 Q62.0643 701.853 62.0643 694.746 Q62.0643 687.617 60.2356 684.075 Q58.43 680.51 54.7958 680.51 M54.7958 676.807 Q60.6059 676.807 63.6615 681.413 Q66.7402 685.996 66.7402 694.746 Q66.7402 703.473 63.6615 708.079 Q60.6059 712.663 54.7958 712.663 Q48.9856 712.663 45.9069 708.079 Q42.8514 703.473 42.8514 694.746 Q42.8514 685.996 45.9069 681.413 Q48.9856 676.807 54.7958 676.807 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M27.4811 470.681 L15.6756 489.13 L27.4811 489.13 L27.4811 470.681 M26.2543 466.607 L32.1339 466.607 L32.1339 489.13 L37.0644 489.13 L37.0644 493.019 L32.1339 493.019 L32.1339 501.167 L27.4811 501.167 L27.4811 493.019 L11.8793 493.019 L11.8793 488.505 L26.2543 466.607 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M54.7958 469.686 Q51.1847 469.686 49.356 473.25 Q47.5504 476.792 47.5504 483.922 Q47.5504 491.028 49.356 494.593 Q51.1847 498.134 54.7958 498.134 Q58.43 498.134 60.2356 494.593 Q62.0643 491.028 62.0643 483.922 Q62.0643 476.792 60.2356 473.25 Q58.43 469.686 54.7958 469.686 M54.7958 465.982 Q60.6059 465.982 63.6615 470.588 Q66.7402 475.172 66.7402 483.922 Q66.7402 492.648 63.6615 497.255 Q60.6059 501.838 54.7958 501.838 Q48.9856 501.838 45.9069 497.255 Q42.8514 492.648 42.8514 483.922 Q42.8514 475.172 45.9069 470.588 Q48.9856 465.982 54.7958 465.982 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M14.6803 255.782 L33.0366 255.782 L33.0366 259.717 L18.9626 259.717 L18.9626 268.19 Q19.9811 267.842 20.9997 267.68 Q22.0182 267.495 23.0367 267.495 Q28.8237 267.495 32.2033 270.666 Q35.5829 273.838 35.5829 279.254 Q35.5829 284.833 32.1107 287.935 Q28.6385 291.014 22.3191 291.014 Q20.1432 291.014 17.8747 290.643 Q15.6293 290.273 13.2219 289.532 L13.2219 284.833 Q15.3052 285.967 17.5275 286.523 Q19.7497 287.078 22.2265 287.078 Q26.2311 287.078 28.5691 284.972 Q30.907 282.865 30.907 279.254 Q30.907 275.643 28.5691 273.537 Q26.2311 271.43 22.2265 271.43 Q20.3515 271.43 18.4765 271.847 Q16.6247 272.264 14.6803 273.143 L14.6803 255.782 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M54.7958 258.861 Q51.1847 258.861 49.356 262.426 Q47.5504 265.967 47.5504 273.097 Q47.5504 280.203 49.356 283.768 Q51.1847 287.31 54.7958 287.31 Q58.43 287.31 60.2356 283.768 Q62.0643 280.203 62.0643 273.097 Q62.0643 265.967 60.2356 262.426 Q58.43 258.861 54.7958 258.861 M54.7958 255.157 Q60.6059 255.157 63.6615 259.764 Q66.7402 264.347 66.7402 273.097 Q66.7402 281.824 63.6615 286.43 Q60.6059 291.014 54.7958 291.014 Q48.9856 291.014 45.9069 286.43 Q42.8514 281.824 42.8514 273.097 Q42.8514 264.347 45.9069 259.764 Q48.9856 255.157 54.7958 255.157 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M25.2126 60.3742 Q22.0645 60.3742 20.2126 62.527 Q18.3839 64.6797 18.3839 68.4297 Q18.3839 72.1566 20.2126 74.3325 Q22.0645 76.4852 25.2126 76.4852 Q28.3607 76.4852 30.1894 74.3325 Q32.0413 72.1566 32.0413 68.4297 Q32.0413 64.6797 30.1894 62.527 Q28.3607 60.3742 25.2126 60.3742 M34.495 45.7215 L34.495 49.9807 Q32.7357 49.1474 30.9302 48.7076 Q29.1478 48.2678 27.3885 48.2678 Q22.7589 48.2678 20.3052 51.3928 Q17.8747 54.5178 17.5275 60.8372 Q18.8932 58.8233 20.9534 57.7585 Q23.0135 56.6705 25.4904 56.6705 Q30.6987 56.6705 33.7079 59.8418 Q36.7403 62.9899 36.7403 68.4297 Q36.7403 73.7538 33.5922 76.9713 Q30.4441 80.1889 25.2126 80.1889 Q19.2173 80.1889 16.046 75.6056 Q12.8747 70.9992 12.8747 62.2723 Q12.8747 54.0779 16.7636 49.2169 Q20.6524 44.3326 27.2033 44.3326 Q28.9626 44.3326 30.745 44.6799 Q32.5505 45.0271 34.495 45.7215 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M54.7958 48.0363 Q51.1847 48.0363 49.356 51.6011 Q47.5504 55.1428 47.5504 62.2723 Q47.5504 69.3788 49.356 72.9436 Q51.1847 76.4852 54.7958 76.4852 Q58.43 76.4852 60.2356 72.9436 Q62.0643 69.3788 62.0643 62.2723 Q62.0643 55.1428 60.2356 51.6011 Q58.43 48.0363 54.7958 48.0363 M54.7958 44.3326 Q60.6059 44.3326 63.6615 48.9391 Q66.7402 53.5224 66.7402 62.2723 Q66.7402 70.9992 63.6615 75.6056 Q60.6059 80.1889 54.7958 80.1889 Q48.9856 80.1889 45.9069 75.6056 Q42.8514 70.9992 42.8514 62.2723 Q42.8514 53.5224 45.9069 48.9391 Q48.9856 44.3326 54.7958 44.3326 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M-57.6648 854.009 L-54.8002 854.009 L-54.8002 880.936 Q-48.7528 880.554 -45.5699 877.308 Q-42.4189 874.029 -42.4189 868.205 Q-42.4189 864.831 -43.2464 861.68 Q-44.074 858.497 -45.7291 855.378 L-40.1909 855.378 Q-38.8541 858.529 -38.1539 861.839 Q-37.4536 865.149 -37.4536 868.555 Q-37.4536 877.085 -42.4189 882.082 Q-47.3841 887.047 -55.8505 887.047 Q-64.6034 887.047 -69.7278 882.336 Q-74.884 877.594 -74.884 869.573 Q-74.884 862.38 -70.237 858.21 Q-65.6219 854.009 -57.6648 854.009 M-59.3835 859.866 Q-64.1896 859.929 -67.0542 862.571 Q-69.9187 865.181 -69.9187 869.51 Q-69.9187 874.411 -67.1497 877.371 Q-64.3806 880.299 -59.3517 880.745 L-59.3835 859.866 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M-59.8927 814.764 L-38.3767 814.764 L-38.3767 820.621 L-59.7018 820.621 Q-64.7625 820.621 -67.277 822.594 Q-69.7914 824.568 -69.7914 828.514 Q-69.7914 833.257 -66.7677 835.994 Q-63.744 838.731 -58.5241 838.731 L-38.3767 838.731 L-38.3767 844.62 L-74.0246 844.62 L-74.0246 838.731 L-68.4865 838.731 Q-71.7011 836.631 -73.2926 833.798 Q-74.884 830.933 -74.884 827.209 Q-74.884 821.067 -71.0646 817.916 Q-67.277 814.764 -59.8927 814.764 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M-57.6648 772.592 L-54.8002 772.592 L-54.8002 799.519 Q-48.7528 799.137 -45.5699 795.89 Q-42.4189 792.612 -42.4189 786.787 Q-42.4189 783.413 -43.2464 780.262 Q-44.074 777.08 -45.7291 773.96 L-40.1909 773.96 Q-38.8541 777.111 -38.1539 780.422 Q-37.4536 783.732 -37.4536 787.137 Q-37.4536 795.667 -42.4189 800.664 Q-47.3841 805.63 -55.8505 805.63 Q-64.6034 805.63 -69.7278 800.919 Q-74.884 796.177 -74.884 788.156 Q-74.884 780.963 -70.237 776.793 Q-65.6219 772.592 -57.6648 772.592 M-59.3835 778.448 Q-64.1896 778.512 -67.0542 781.154 Q-69.9187 783.764 -69.9187 788.092 Q-69.9187 792.994 -67.1497 795.954 Q-64.3806 798.882 -59.3517 799.328 L-59.3835 778.448 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M-68.5501 742.323 Q-69.123 743.309 -69.3777 744.487 Q-69.6641 745.633 -69.6641 747.033 Q-69.6641 751.999 -66.4176 754.672 Q-63.2029 757.314 -57.1555 757.314 L-38.3767 757.314 L-38.3767 763.202 L-74.0246 763.202 L-74.0246 757.314 L-68.4865 757.314 Q-71.733 755.468 -73.2926 752.508 Q-74.884 749.548 -74.884 745.315 Q-74.884 744.71 -74.7885 743.978 Q-74.7248 743.246 -74.5657 742.355 L-68.5501 742.323 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M-56.6144 713.868 Q-62.9801 713.868 -66.4813 716.51 Q-69.9824 719.12 -69.9824 723.862 Q-69.9824 728.573 -66.4813 731.215 Q-62.9801 733.825 -56.6144 733.825 Q-50.2805 733.825 -46.7794 731.215 Q-43.2783 728.573 -43.2783 723.862 Q-43.2783 719.12 -46.7794 716.51 Q-50.2805 713.868 -56.6144 713.868 M-42.8008 708.012 Q-33.6979 708.012 -29.2737 712.054 Q-24.8177 716.096 -24.8177 724.435 Q-24.8177 727.522 -25.2951 730.26 Q-25.7407 732.997 -26.6956 735.575 L-32.3929 735.575 Q-30.9924 732.997 -30.324 730.483 Q-29.6556 727.968 -29.6556 725.358 Q-29.6556 719.597 -32.6794 716.733 Q-35.6712 713.868 -41.7505 713.868 L-44.6469 713.868 Q-41.4959 715.682 -39.9363 718.515 Q-38.3767 721.348 -38.3767 725.294 Q-38.3767 731.851 -43.3737 735.862 Q-48.3708 739.872 -56.6144 739.872 Q-64.8898 739.872 -69.8869 735.862 Q-74.884 731.851 -74.884 725.294 Q-74.884 721.348 -73.3244 718.515 Q-71.7648 715.682 -68.6138 713.868 L-74.0246 713.868 L-74.0246 708.012 L-42.8008 708.012 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M-35.0665 681.116 Q-28.7008 683.599 -26.7592 685.954 Q-24.8177 688.31 -24.8177 692.256 L-24.8177 696.935 L-29.7193 696.935 L-29.7193 693.498 Q-29.7193 691.079 -30.8651 689.742 Q-32.011 688.405 -36.276 686.782 L-38.9496 685.732 L-74.0246 700.15 L-74.0246 693.943 L-46.1428 682.803 L-74.0246 671.663 L-74.0246 665.457 L-35.0665 681.116 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip602)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"166.42,1171.84 167.128,1191.95 167.835,1055.4 168.543,924.889 169.251,807.486 169.959,703.106 170.667,740.713 171.374,644.649 172.082,559.183 172.79,477.334 173.498,405.006 174.206,444.699 174.913,473.557 175.621,407.26 176.329,348.525 177.037,295.826 177.744,249.642 178.452,208.54 179.16,172.364 179.868,140.946 180.576,113.783 181.283,89.6034 181.991,125.03 182.699,156.598 183.407,137.398 184.115,122.194 184.822,109.174 185.53,99.6579 186.238,94.3247 186.946,90.8706 187.653,88.5087 188.361,89.2956 189.069,93.6077 189.777,152.231 190.485,156.542 191.192,188.062 191.9,196.254 192.608,226.413 193.316,255.037 194.024,283.654 194.731,315.039 195.439,327.487 196.147,341.794 196.855,356.524 197.563,371.881 198.27,386.667 198.978,401.626 199.686,477.406 200.394,491.362 201.101,505.621 201.809,530.53 202.517,564.061 203.225,588.552 203.933,611.012 204.64,633.444 205.348,655.355 206.056,676.206 206.764,690.003 207.472,717.537 208.179,743.219 208.887,762.277 209.595,780.272 210.303,797.9 211.01,809.012 211.718,820.779 212.426,837.828 213.134,860.317 213.842,886.599 214.549,901.112 215.257,920.762 215.965,935.767 216.673,959.15 217.381,976.557 218.088,989.35 218.796,1014.24 219.504,1029.7 220.212,1044.09 220.92,1058.23 221.627,1071.54 222.335,1091.86 223.043,1097.32 223.751,1109.88 224.458,1118.85 225.166,1134.13 225.874,1149.24 226.582,1160.89 227.29,1168.04 227.997,1169.3 228.705,1173.89 229.413,1185.17 230.121,1195.59 230.829,1203.13 231.536,1210.63 232.244,1223.78 232.952,1236.17 233.66,1245.18 234.368,1254.35 235.075,1260.4 235.783,1263.61 236.491,1268.85 237.199,1271.77 237.906,1282.43 238.614,1290.31 239.322,1292.97 240.03,1298.5 240.738,1301.19 241.445,1306.28 242.153,1314.52 242.861,1317.02 243.569,1319.84 244.277,1324.73 244.984,1332.07 245.692,1336.66 246.4,1339.16 247.108,1344.07 247.815,1350.73 248.523,1352.57 249.231,1361.16 249.939,1362.93 250.647,1366.72 251.354,1366.29 252.062,1372.08 252.77,1373.93 253.478,1381.6 254.186,1387.03 254.893,1387.67 255.601,1390.96 256.309,1391.88 257.017,1395.01 257.725,1395.79 258.432,1396.5 259.14,1397.42 259.848,1402.59 260.556,1405.35 261.263,1404 261.971,1404.96 262.679,1405.69 263.387,1412.29 264.095,1413.03 264.802,1413.85 265.51,1416.58 266.218,1422.9 266.926,1424.74 267.634,1430.58 268.341,1430.55 269.049,1432.18 269.757,1435.72 270.465,1433.36 271.172,1436.84 271.88,1434.94 272.588,1432.51 273.296,1430.55 274.004,1432.47 274.711,1434.27 275.419,1434.14 276.127,1436.04 276.835,1441.44 277.543,1442.85 278.25,1443.81 278.958,1445.15 279.666,1448.54 280.374,1448.24 281.082,1449.21 281.789,1450.45 282.497,1450.11 283.205,1456.53 283.913,1457.27 284.62,1456.17 285.328,1455.28 286.036,1454 286.744,1453.2 287.452,1454.24 288.159,1453.46 288.867,1452.61 289.575,1450.12 290.283,1451.4 290.991,1450.94 291.698,1451.74 292.406,1452.76 293.114,1448.51 293.822,1450.17 294.529,1451.16 295.237,1450.77 295.945,1451.88 296.653,1451.67 297.361,1456.64 298.068,1457.53 298.776,1458.58 299.484,1457.72 300.192,1456.9 300.9,1457.8 301.607,1460.36 302.315,1459.07 303.023,1459.69 303.731,1461.91 304.439,1464 305.146,1462.9 305.854,1461.73 306.562,1460.37 307.27,1459.2 307.977,1461.57 308.685,1458.52 309.393,1461.1 310.101,1460 310.809,1459.01 311.516,1458.34 312.224,1459.24 312.932,1458.02 313.64,1458.8 314.348,1461.28 315.055,1456.17 315.763,1460.86 316.471,1460.86 317.179,1461.37 317.886,1459.87 318.594,1458.79 319.302,1459.92 320.01,1458.85 320.718,1454.31 321.425,1453.83 322.133,1458.08 322.841,1457.17 323.549,1461.41 324.257,1460.16 324.964,1455.23 325.672,1454.17 326.38,1454.91 327.088,1452.21 327.796,1453.14 328.503,1453.94 329.211,1453.29 329.919,1454.15 330.627,1453.22 331.334,1449.35 332.042,1445.14 332.75,1443.59 333.458,1441.22 334.166,1442.91 334.873,1442.29 335.581,1438.4 336.289,1438.41 336.997,1440.01 337.705,1439.75 338.412,1444.67 339.12,1444.64 339.828,1441.97 340.536,1442.92 341.243,1446.17 341.951,1445.89 342.659,1447.17 343.367,1448.25 344.075,1446.23 344.782,1445.87 345.49,1443.59 346.198,1446.82 346.906,1446.36 347.614,1444.04 348.321,1440.46 349.029,1439.85 349.737,1439.47 350.445,1439.08 351.153,1435.33 351.86,1434.93 352.568,1436.71 353.276,1438.33 353.984,1440.1 354.691,1440.06 355.399,1439.85 356.107,1439.74 356.815,1436.04 357.523,1437.65 358.23,1438.86 358.938,1440.42 359.646,1445.38 360.354,1444.47 361.062,1444.21 361.769,1443.77 362.477,1443.34 363.185,1446.56 363.893,1445.95 364.601,1445.08 365.308,1445.95 366.016,1445.49 366.724,1446.49 367.432,1447.76 368.139,1450.81 368.847,1448.56 369.555,1449.53 370.263,1448.52 370.971,1447.42 371.678,1449.88 372.386,1447.04 373.094,1446.3 373.802,1445.74 374.51,1444.9 375.217,1447.4 375.925,1446.61 376.633,1445.39 377.341,1444.65 378.048,1448.97 378.756,1446.85 379.464,1445.96 380.172,1445.41 380.88,1444.92 381.587,1444.34 382.295,1443.54 383.003,1443.05 383.711,1442.22 384.419,1437.87 385.126,1439.21 385.834,1441.9 386.542,1442.89 387.25,1442.27 387.958,1439.7 388.665,1442.46 389.373,1441.6 390.081,1439.37 390.789,1438.78 391.496,1436.51 392.204,1439.69 392.912,1447.45 393.62,1444.33 394.328,1443.35 395.035,1446.24 395.743,1443.81 396.451,1441.31 397.159,1442.91 397.867,1443.98 398.574,1443.12 399.282,1440.78 399.99,1440.44 400.698,1439.85 401.405,1442.67 402.113,1445.11 402.821,1445.93 403.529,1446.71 404.237,1445.8 404.944,1446.9 405.652,1449.19 406.36,1441.22 407.068,1438.84 407.776,1440.04 408.483,1439.53 409.191,1437.65 409.899,1437.08 410.607,1433.21 411.315,1432.58 412.022,1430.58 412.73,1432.1 413.438,1435 414.146,1439.47 414.853,1437.09 415.561,1438.45 416.269,1437.76 416.977,1440.2 417.685,1439.69 418.392,1437.3 419.1,1438.55 419.808,1435.97 420.516,1437.27 421.224,1436.68 421.931,1432.57 422.639,1430.52 423.347,1429.91 424.055,1428.15 424.762,1428.15 425.47,1428.29 426.178,1428.12 426.886,1429.88 427.594,1431.29 428.301,1431.13 429.009,1430.65 429.717,1427.02 430.425,1433.91 431.133,1433.31 431.84,1432.92 432.548,1435.83 433.256,1433.58 433.964,1432.87 434.672,1437.67 435.379,1436.83 436.087,1436.63 436.795,1435.84 437.503,1435.44 438.21,1437.91 438.918,1437.43 439.626,1436.16 440.334,1437.36 441.042,1438.66 441.749,1439.42 442.457,1439 443.165,1441.37 443.873,1440.43 444.581,1439.47 445.288,1440.3 445.996,1442.96 446.704,1440.26 447.412,1435.78 448.119,1433.61 448.827,1429.69 449.535,1429.34 450.243,1427.04 450.951,1426.91 451.658,1426.96 452.366,1424.81 453.074,1424.55 453.782,1429.83 454.49,1431.2 455.197,1429.18 455.905,1432.35 456.613,1428.27 457.321,1426.44 458.029,1427.75 458.736,1431.01 459.444,1430.27 460.152,1428.46 460.86,1429.79 461.567,1429.63 462.275,1427.63 462.983,1429.11 463.691,1427.05 464.399,1426.88 465.106,1426.84 465.814,1424.9 466.522,1425 467.23,1424.72 467.938,1422.58 468.645,1424.45 469.353,1424.04 470.061,1424.12 470.769,1429.1 471.476,1428.61 472.184,1428.66 472.892,1428.42 473.6,1429.8 474.308,1427.42 475.015,1427 475.723,1423.42 476.431,1421.61 477.139,1420.33 477.847,1417 478.554,1417.33 479.262,1417.43 479.97,1417.93 480.678,1418.14 481.386,1419.79 482.093,1418.08 482.801,1418.22 483.509,1420.16 484.217,1423.73 484.924,1423.76 485.632,1423.77 486.34,1423.56 487.048,1425.16 487.756,1423.33 488.463,1423.31 489.171,1418.16 489.879,1420.03 490.587,1418.46 491.295,1415.28 492.002,1415.75 492.71,1419.55 493.418,1417.85 494.126,1418.27 494.834,1418.74 495.541,1422.25 496.249,1425.87 496.957,1424.44 497.665,1422.7 498.372,1422.95 499.08,1421.3 499.788,1421.33 500.496,1419.78 501.204,1419.89 501.911,1417.98 502.619,1416.51 503.327,1418.79 504.035,1417.5 504.743,1421.15 505.45,1422.62 506.158,1425.77 506.866,1425.04 507.574,1424.64 508.281,1421.1 508.989,1424.42 509.697,1425.57 510.405,1426.99 511.113,1426.77 511.82,1426.19 512.528,1426.1 513.236,1425.76 513.944,1420.61 514.652,1420.24 515.359,1420.23 516.067,1418.48 516.775,1416.62 517.483,1418.51 518.191,1421.9 518.898,1423.84 519.606,1420.14 520.314,1422.04 521.022,1419.96 521.729,1421.58 522.437,1421.38 523.145,1417.83 523.853,1421.49 524.561,1423.29 525.268,1424.85 525.976,1424.53 526.684,1425.97 527.392,1425.39 528.1,1419.98 528.807,1426.55 529.515,1429.57 530.223,1431.1 530.931,1431.98 531.638,1429.35 532.346,1428.77 533.054,1429.93 533.762,1429.05 534.47,1435.25 535.177,1434.5 535.885,1433.66 536.593,1437.93 537.301,1440.5 538.009,1436.01 538.716,1435.07 539.424,1434.43 540.132,1430.03 540.84,1429.16 541.548,1427.35 542.255,1424.99 542.963,1424.59 543.671,1424.42 544.379,1425.99 545.086,1420.53 545.794,1423.98 546.502,1423.64 547.21,1423.54 547.918,1421.64 548.625,1422.71 549.333,1418.67 550.041,1416.74 550.749,1416.83 551.457,1415.33 552.164,1415.66 552.872,1416.05 553.58,1420.02 554.288,1418.06 554.995,1417.94 555.703,1419.51 556.411,1419.61 557.119,1421.08 557.827,1424.47 558.534,1418.48 559.242,1421.91 559.95,1419.91 560.658,1419.92 561.366,1416.48 562.073,1415.01 562.781,1416.8 563.489,1418.72 564.197,1422.48 564.905,1422.52 565.612,1423.68 566.32,1421.86 567.028,1419.95 567.736,1419.43 568.443,1417.71 569.151,1412.49 569.859,1413.06 570.567,1413.31 571.275,1415.35 571.982,1415.41 572.69,1417.71 573.398,1422.66 574.106,1420.91 574.814,1420.88 575.521,1421.12 576.229,1422.7 576.937,1423.71 577.645,1419.77 578.352,1417.81 579.06,1414.39 579.768,1414.68 580.476,1415.15 581.184,1413.71 581.891,1413.93 582.599,1415.49 583.307,1415.38 584.015,1415.59 584.723,1415.59 585.43,1417.57 586.138,1420.89 586.846,1424.16 587.554,1423.63 588.262,1423.25 588.969,1422.88 589.677,1420.68 590.385,1422.17 591.093,1421.9 591.8,1421.43 592.508,1417.84 593.216,1417.73 593.924,1417.56 594.632,1417.7 595.339,1417.78 596.047,1420.85 596.755,1417.28 597.463,1415.88 598.171,1415.85 598.878,1415.87 599.586,1417.51 600.294,1412.51 601.002,1409.17 601.71,1413.23 602.417,1411.68 603.125,1411.64 603.833,1416.35 604.541,1418.14 605.248,1418.26 605.956,1423.53 606.664,1423.08 607.372,1421.34 608.08,1419.11 608.787,1421.06 609.495,1420.46 610.203,1420.41 610.911,1418.65 611.619,1421.78 612.326,1421.53 613.034,1421.31 613.742,1421.22 614.45,1422.96 615.157,1426.38 615.865,1424.79 616.573,1427.83 617.281,1429.23 617.989,1431.73 618.696,1430.78 619.404,1426.92 620.112,1428.35 620.82,1422.81 621.528,1417.58 622.235,1417.42 622.943,1415.53 623.651,1416.17 624.359,1418.16 625.067,1417.97 625.774,1416.02 626.482,1412.61 627.19,1414.36 627.898,1416.44 628.605,1414.72 629.313,1414.68 630.021,1416.68 630.729,1414.92 631.437,1416.85 632.144,1415.09 632.852,1411.54 633.56,1411.65 634.268,1410.85 634.976,1410.84 635.683,1410.53 636.391,1410.96 637.099,1409.43 637.807,1410.05 638.514,1404.8 639.222,1407.35 639.93,1409.55 640.638,1411.35 641.346,1409.93 642.053,1409.82 642.761,1408.37 643.469,1408.64 644.177,1410.51 644.885,1409.05 645.592,1411.63 646.3,1410.3 647.008,1405.32 647.716,1405.94 648.424,1403.11 649.131,1405.26 649.839,1405.91 650.547,1408.57 651.255,1406.95 651.962,1408.81 652.67,1409.16 653.378,1411.4 654.086,1414.74 654.794,1411.42 655.501,1409.72 656.209,1408.35 656.917,1408.67 657.625,1409.29 658.333,1413.16 659.04,1413.6 659.748,1413.8 660.456,1413.88 661.164,1415.66 661.871,1417.15 662.579,1418.67 663.287,1423.66 663.995,1423.24 664.703,1422.7 665.41,1424.02 666.118,1420.31 666.826,1421.46 667.534,1423.14 668.242,1420.9 668.949,1418.78 669.657,1420.71 670.365,1422.64 671.073,1424 671.781,1420.35 672.488,1416.27 673.196,1416.21 673.904,1419.68 674.612,1416.25 675.319,1417.9 676.027,1421.12 676.735,1419.28 677.443,1420.68 678.151,1420.31 678.858,1418.42 679.566,1417.98 680.274,1419.47 680.982,1417.68 681.69,1413.97 682.397,1412.45 683.105,1409.37 683.813,1409.98 684.521,1413.52 685.228,1412.02 685.936,1415.37 686.644,1416.95 687.352,1416.85 688.06,1414.78 688.767,1409.49 689.475,1414.96 690.183,1414.89 690.891,1416.7 691.599,1416.27 692.306,1419.43 693.014,1419.15 693.722,1419.03 694.43,1418.72 695.138,1413.58 695.845,1417.36 696.553,1417.01 697.261,1413.45 697.969,1416.64 698.676,1416.49 699.384,1416.48 700.092,1413.06 700.8,1413.15 701.508,1414.87 702.215,1416.7 702.923,1414.65 703.631,1413.06 704.339,1416.56 705.047,1419.99 705.754,1416.34 706.462,1419.71 707.17,1414.3 707.878,1414.39 708.585,1416.24 709.293,1412.92 710.001,1413.06 710.709,1413.15 711.417,1411.14 712.124,1411.38 712.832,1414.96 713.54,1417.01 714.248,1420.08 714.956,1414.39 715.663,1414.31 716.371,1414.35 717.079,1414.42 717.787,1414.17 718.495,1410.75 719.202,1414.42 719.91,1414.23 720.618,1415.62 721.326,1417.26 722.033,1415.62 722.741,1417.03 723.449,1418.86 724.157,1420.84 724.865,1420.6 725.572,1418.75 726.28,1420.34 726.988,1419.91 727.696,1423.05 728.404,1421.2 729.111,1420.76 729.819,1422.05 730.527,1421.55 731.235,1419.7 731.943,1421.41 732.65,1424.24 733.358,1425.43 734.066,1422.75 734.774,1423.99 735.481,1423.33 736.189,1421.01 736.897,1427.38 737.605,1426.88 738.313,1424.4 739.02,1422.22 739.728,1419.96 740.436,1410.89 741.144,1414.84 741.852,1413.41 742.559,1415.05 743.267,1414.95 743.975,1413.24 744.683,1412.79 745.39,1413.09 746.098,1414.96 746.806,1411.36 747.514,1416.62 748.222,1416.47 748.929,1417.69 749.637,1415.57 750.345,1417.18 751.053,1417.62 751.761,1413.7 752.468,1413.58 753.176,1411.77 753.884,1413.73 754.592,1415.91 755.3,1413.82 756.007,1412.44 756.715,1409.13 757.423,1409.52 758.131,1404.82 758.838,1407.08 759.546,1405.8 760.254,1406.1 760.962,1409.63 761.67,1407.83 762.377,1409.81 763.085,1409.95 763.793,1409.84 764.501,1412.18 765.209,1408.52 765.916,1410.39 766.624,1408.93 767.332,1407.56 768.04,1407.61 768.747,1411.04 769.455,1411.39 770.163,1411.56 770.871,1409.86 771.579,1413.62 772.286,1415.1 772.994,1416.85 773.702,1416.54 774.41,1416.42 775.118,1417.89 775.825,1416.31 776.533,1412.93 777.241,1414.41 777.949,1417.82 778.657,1419.3 779.364,1417.65 780.072,1417.56 780.78,1416.93 781.488,1413.41 782.195,1414.7 782.903,1417.86 783.611,1417.1 784.319,1416.97 785.027,1413.34 785.734,1413.12 786.442,1412.98 787.15,1412.85 787.858,1411.1 788.566,1411.29 789.273,1407.92 789.981,1410.26 790.689,1410.21 791.397,1410.52 792.104,1410.8 792.812,1408.86 793.52,1409.26 794.228,1409.52 794.936,1411.52 795.643,1417.11 796.351,1415.17 797.059,1416.67 797.767,1413.24 798.475,1413.27 799.182,1413.57 799.89,1415.26 800.598,1415.1 801.306,1409.76 802.014,1417.65 802.721,1414.06 803.429,1417.24 804.137,1420.32 804.845,1421.19 805.552,1424.13 806.26,1425.33 806.968,1428.05 807.676,1427.49 808.384,1427.03 809.091,1424.74 809.799,1425.79 810.507,1426.66 811.215,1424.55 811.923,1421.91 812.63,1418.32 813.338,1418.03 814.046,1417.78 814.754,1414.44 815.461,1416.24 816.169,1423.13 816.877,1425.74 817.585,1427.13 818.293,1424.96 819,1426.25 819.708,1424.14 820.416,1425.22 821.124,1426.48 821.832,1425.68 822.539,1424.93 823.247,1419.32 823.955,1421 824.663,1422.43 825.371,1425.49 826.078,1426.8 826.786,1426.31 827.494,1423.97 828.202,1419.8 828.909,1422.97 829.617,1422.62 830.325,1420.65 831.033,1423.4 831.741,1424.48 832.448,1422.13 833.156,1421.77 833.864,1419.69 834.572,1417.69 835.28,1418.81 835.987,1415.48 836.695,1413.67 837.403,1413.56 838.111,1411.64 838.818,1411.68 839.526,1408.17 840.234,1408.51 840.942,1410.51 841.65,1407.22 842.357,1405.95 843.065,1405.89 843.773,1404.46 844.481,1408.03 845.189,1405.2 845.896,1405.35 846.604,1402.83 847.312,1399.81 848.02,1402.22 848.728,1401.15 849.435,1403.46 850.143,1405.63 850.851,1405.83 851.559,1402.66 852.266,1399.99 852.974,1400.71 853.682,1397.77 854.39,1403.83 855.098,1406.38 855.805,1404.77 856.513,1407.04 857.221,1405.55 857.929,1407.61 858.637,1406.23 859.344,1406.29 860.052,1405.27 860.76,1404.23 861.468,1408.2 862.176,1408.37 862.883,1410.36 863.591,1412.36 864.299,1410.85 865.007,1407.52 865.714,1408.25 866.422,1410.19 867.13,1407.46 867.838,1408.13 868.546,1408.59 869.253,1408.78 869.961,1409.22 870.669,1410.67 871.377,1410.62 872.085,1409.25 872.792,1410.9 873.5,1408.06 874.208,1406.6 874.916,1410.02 875.623,1411.78 876.331,1416.87 877.039,1414.93 877.747,1416.31 878.455,1412.62 879.162,1413.05 879.87,1411.55 880.578,1411.95 881.286,1411.9 881.994,1417.18 882.701,1417.24 883.409,1415.64 884.117,1415.91 884.825,1419.07 885.533,1418.75 886.24,1421.93 886.948,1421.68 887.656,1422.92 888.364,1422.68 889.071,1421.84 889.779,1421.53 890.487,1417.62 891.195,1417.64 891.903,1420.73 892.61,1420.24 893.318,1419.8 894.026,1419.64 894.734,1419.34 895.442,1419.11 896.149,1415.02 896.857,1409.6 897.565,1409.48 898.273,1409.77 898.98,1409.76 899.688,1411.5 900.396,1413.45 901.104,1409.69 901.812,1409.74 902.519,1408.25 903.227,1406.7 903.935,1406.91 904.643,1407.48 905.351,1407.8 906.058,1406.32 906.766,1406.89 907.474,1402.29 908.182,1404.44 908.89,1405.05 909.597,1405.74 910.305,1407.84 911.013,1410.37 911.721,1416.02 912.428,1417.29 913.136,1418.58 913.844,1420.12 914.552,1419.8 915.26,1419.66 915.967,1419.32 916.675,1415.73 917.383,1415.6 918.091,1413.54 918.799,1413.52 919.506,1413.52 920.214,1415.17 920.922,1416.87 921.63,1418.46 922.337,1419.76 923.045,1418.11 923.753,1414.49 924.461,1416.08 925.169,1415.94 925.876,1414.08 926.584,1412.31 927.292,1412.22 928,1415.35 928.708,1414.78 929.415,1414.7 930.123,1414.61 930.831,1416.23 931.539,1414.02 932.247,1412.15 932.954,1413.64 933.662,1411.87 934.37,1410.36 935.078,1410.77 935.785,1412.5 936.493,1409.55 937.201,1407.78 937.909,1409.88 938.617,1406.45 939.324,1404.73 940.032,1405.41 940.74,1404.09 941.448,1404.66 942.156,1405.04 942.863,1405.81 943.571,1402.47 944.279,1402.96 944.987,1401.81 945.694,1400.5 946.402,1404.96 947.11,1407.1 947.818,1407.27 948.526,1409.13 949.233,1409.29 949.941,1412.98 950.649,1410.99 951.357,1411.19 952.065,1411.37 952.772,1406.97 953.48,1405.58 954.188,1407.82 954.896,1408.23 955.604,1406.62 956.311,1408.63 957.019,1405.19 957.727,1404.18 958.435,1402.72 959.142,1402.9 959.85,1405.34 960.558,1405.52 961.266,1405.95 961.974,1404.55 962.681,1405.41 963.389,1407.38 964.097,1407.67 964.805,1404.6 965.513,1408.46 966.22,1408.69 966.928,1409.36 967.636,1409.72 968.344,1411.42 969.051,1416.32 969.759,1422.74 970.467,1424.08 971.175,1424.97 971.883,1422.7 972.59,1422.04 973.298,1421.39 974.006,1422.7 974.714,1423.79 975.422,1424.53 976.129,1424.22 976.837,1421.97 977.545,1421.69 978.253,1419.52 978.961,1418.89 979.668,1425.21 980.376,1424.44 981.084,1423.74 981.792,1423 982.499,1419.28 983.207,1419 983.915,1421.91 984.623,1424.59 985.331,1423.8 986.038,1423.01 986.746,1424.08 987.454,1425.61 988.162,1425.04 988.87,1424.48 989.577,1420.67 990.285,1421.81 990.993,1422.95 991.701,1420.85 992.409,1420.31 993.116,1416.34 993.824,1415.93 994.532,1410.64 995.24,1411.98 995.947,1410.18 996.655,1406.39 997.363,1410.18 998.071,1411.91 998.779,1413.66 999.486,1413.39 1000.19,1413.32 1000.9,1413.32 1001.61,1411.4 1002.32,1408.62 1003.03,1407.31 1003.73,1405.95 1004.44,1402.54 1005.15,1402.97 1005.86,1403.72 1006.56,1404.33 1007.27,1406.82 1007.98,1406.65 1008.69,1405.71 1009.4,1405.92 1010.1,1406.19 1010.81,1408.1 1011.52,1408.22 1012.23,1406.75 1012.93,1408.87 1013.64,1405.63 1014.35,1404.26 1015.06,1406.61 1015.77,1406.77 1016.47,1410.37 1017.18,1417.1 1017.89,1420.14 1018.6,1414.71 1019.3,1414.76 1020.01,1413.11 1020.72,1424.88 1021.43,1427.45 1022.14,1425.24 1022.84,1422.99 1023.55,1422.57 1024.26,1423.91 1024.97,1423.34 1025.67,1425.89 1026.38,1421.68 1027.09,1419.68 1027.8,1421.06 1028.51,1420.67 1029.21,1420.26 1029.92,1417.78 1030.63,1417.72 1031.34,1415.98 1032.04,1415.72 1032.75,1414.01 1033.46,1412.35 1034.17,1412.19 1034.88,1406.89 1035.58,1407.23 1036.29,1407.18 1037,1407.48 1037.71,1409.39 1038.41,1407.75 1039.12,1406.12 1039.83,1406.48 1040.54,1405.13 1041.25,1403.99 1041.95,1406.19 1042.66,1401.45 1043.37,1403.72 1044.08,1410.89 1044.78,1409.39 1045.49,1409.63 1046.2,1409.4 1046.91,1410.82 1047.62,1410.55 1048.32,1410.48 1049.03,1407.17 1049.74,1405.53 1050.45,1405.83 1051.15,1407.78 1051.86,1411.61 1052.57,1410.06 1053.28,1408.48 1053.99,1410.26 1054.69,1408.32 1055.4,1404.72 1056.11,1403.59 1056.82,1404.05 1057.53,1406.17 1058.23,1410 1058.94,1410.15 1059.65,1410.58 1060.36,1412.56 1061.06,1414.33 1061.77,1415.73 1062.48,1413.72 1063.19,1413.42 1063.9,1411.81 1064.6,1408.57 1065.31,1408.98 1066.02,1412.24 1066.73,1410.14 1067.43,1413.35 1068.14,1416.28 1068.85,1417.55 1069.56,1417.17 1070.27,1418.44 1070.97,1421.49 1071.68,1425.9 1072.39,1423.84 1073.1,1423.31 1073.8,1421.28 1074.51,1424.45 1075.22,1420.65 1075.93,1418.71 1076.64,1414.65 1077.34,1414.79 1078.05,1412.86 1078.76,1414.58 1079.47,1411 1080.17,1414.67 1080.88,1414.84 1081.59,1418.12 1082.3,1413.04 1083.01,1414.59 1083.71,1412.46 1084.42,1413.84 1085.13,1419.04 1085.84,1415.19 1086.54,1417.16 1087.25,1415.22 1087.96,1413.44 1088.67,1414.76 1089.38,1414.79 1090.08,1412.7 1090.79,1414.35 1091.5,1417.53 1092.21,1422.3 1092.91,1421.85 1093.62,1424.48 1094.33,1423.82 1095.04,1423.4 1095.75,1424.51 1096.45,1424.02 1097.16,1423.22 1097.87,1426.37 1098.58,1427.24 1099.28,1426.39 1099.99,1429.2 1100.7,1431.59 1101.41,1425.23 1102.12,1425.98 1102.82,1421.96 1103.53,1421.72 1104.24,1417.78 1104.95,1417.84 1105.65,1412.49 1106.36,1412.52 1107.07,1412.46 1107.78,1410.61 1108.49,1412.46 1109.19,1411 1109.9,1411.15 1110.61,1404.26 1111.32,1400.99 1112.02,1406.86 1112.73,1408.83 1113.44,1408.98 1114.15,1409.24 1114.86,1410.98 1115.56,1408.97 1116.27,1408.12 1116.98,1408.04 1117.69,1406.51 1118.39,1411.87 1119.1,1412.13 1119.81,1412.36 1120.52,1408.86 1121.23,1408.8 1121.93,1407.19 1122.64,1408.76 1123.35,1405.51 1124.06,1402.73 1124.76,1403.21 1125.47,1403.54 1126.18,1405.94 1126.89,1406.05 1127.6,1406.63 1128.3,1407.16 1129.01,1403.86 1129.72,1406.18 1130.43,1409.89 1131.13,1412.01 1131.84,1410.3 1132.55,1410.18 1133.26,1410.35 1133.97,1410.35 1134.67,1412.13 1135.38,1408.67 1136.09,1408.91 1136.8,1407.24 1137.51,1404.16 1138.21,1404.65 1138.92,1404.92 1139.63,1405.34 1140.34,1405.93 1141.04,1406.21 1141.75,1406.71 1142.46,1411.91 1143.17,1412.31 1143.88,1414.15 1144.58,1414.34 1145.29,1414.29 1146,1414.31 1146.71,1414.12 1147.41,1417.37 1148.12,1417.24 1148.83,1417.18 1149.54,1415.08 1150.25,1416.47 1150.95,1417.84 1151.66,1417.64 1152.37,1418.75 1153.08,1417.14 1153.78,1417.05 1154.49,1416.84 1155.2,1417.86 1155.91,1417.94 1156.62,1417.55 1157.32,1417.46 1158.03,1417.17 1158.74,1421.88 1159.45,1419.79 1160.15,1421.04 1160.86,1422.28 1161.57,1416.79 1162.28,1420.14 1162.99,1426.68 1163.69,1424.42 1164.4,1423.36 1165.11,1422.66 1165.82,1423.94 1166.52,1423.31 1167.23,1419.41 1167.94,1417.34 1168.65,1420.66 1169.36,1418.32 1170.06,1416.37 1170.77,1416.29 1171.48,1415.96 1172.19,1412.34 1172.89,1414.29 1173.6,1415.96 1174.31,1408.9 1175.02,1410.72 1175.73,1415.68 1176.43,1417 1177.14,1418.21 1177.85,1412.76 1178.56,1412.57 1179.26,1412.5 1179.97,1410.38 1180.68,1410.37 1181.39,1406.62 1182.1,1403.37 1182.8,1405.15 1183.51,1405.83 1184.22,1406.3 1184.93,1406.93 1185.63,1413.85 1186.34,1411.56 1187.05,1408.27 1187.76,1410.19 1188.47,1408.24 1189.17,1408.41 1189.88,1406.88 1190.59,1410.69 1191.3,1411.09 1192,1409.51 1192.71,1408.16 1193.42,1404.6 1194.13,1403.29 1194.84,1404.08 1195.54,1404.92 1196.25,1408.92 1196.96,1410.98 1197.67,1409.28 1198.37,1409.63 1199.08,1411.6 1199.79,1413.18 1200.5,1409.78 1201.21,1411.85 1201.91,1415.43 1202.62,1415.49 1203.33,1417.34 1204.04,1422.62 1204.74,1422.33 1205.45,1420.08 1206.16,1421.11 1206.87,1420.7 1207.58,1417.23 1208.28,1416.83 1208.99,1414.64 1209.7,1414.71 1210.41,1414.69 1211.12,1413.09 1211.82,1413.29 1212.53,1415.1 1213.24,1414.89 1213.95,1413.03 1214.65,1414.92 1215.36,1418.48 1216.07,1418.4 1216.78,1412.99 1217.49,1412.92 1218.19,1412.65 1218.9,1414.03 1219.61,1415.98 1220.32,1410.57 1221.02,1410.82 1221.73,1412.37 1222.44,1413.92 1223.15,1413.88 1223.86,1412.12 1224.56,1410.14 1225.27,1406.97 1225.98,1407.61 1226.69,1406.54 1227.39,1411.91 1228.1,1410.44 1228.81,1412.37 1229.52,1412.06 1230.23,1412.16 1230.93,1415.04 1231.64,1414.81 1232.35,1414.79 1233.06,1414.28 1233.76,1411.03 1234.47,1409.38 1235.18,1409.41 1235.89,1404.32 1236.6,1406.12 1237.3,1409.86 1238.01,1411.32 1238.72,1416.69 1239.43,1417.83 1240.13,1419.36 1240.84,1417.05 1241.55,1413.11 1242.26,1412.84 1242.97,1412.78 1243.67,1411.33 1244.38,1411.43 1245.09,1411.31 1245.8,1411.52 1246.5,1409.97 1247.21,1406.26 1247.92,1399.7 1248.63,1400.53 1249.34,1399.28 1250.04,1398.22 1250.75,1401 1251.46,1398.15 1252.17,1393.83 1252.87,1393.41 1253.58,1394.4 1254.29,1395.47 1255,1391.11 1255.71,1397.45 1256.41,1394.8 1257.12,1396.03 1257.83,1397.09 1258.54,1397.89 1259.24,1398.63 1259.95,1401.38 1260.66,1400.33 1261.37,1398.8 1262.08,1397.81 1262.78,1398.65 1263.49,1399.41 1264.2,1401.81 1264.91,1404.18 1265.61,1409.99 1266.32,1410.02 1267.03,1408.48 1267.74,1404.98 1268.45,1403.69 1269.15,1404.37 1269.86,1406.62 1270.57,1405.07 1271.28,1403.9 1271.98,1402.33 1272.69,1403.01 1273.4,1403.81 1274.11,1400.9 1274.82,1401.71 1275.52,1403.71 1276.23,1402.38 1276.94,1402.53 1277.65,1403.34 1278.35,1405.51 1279.06,1407.43 1279.77,1407.93 1280.48,1406.6 1281.19,1408.59 1281.89,1408.91 1282.6,1409.41 1283.31,1409.24 1284.02,1411.18 1284.72,1414.47 1285.43,1417.8 1286.14,1419.22 1286.85,1418.38 1287.56,1417.99 1288.26,1419.75 1288.97,1422.81 1289.68,1423.93 1290.39,1423.57 1291.1,1419.58 1291.8,1419.53 1292.51,1418.72 1293.22,1418.47 1293.93,1419.38 1294.63,1419.05 1295.34,1425.64 1296.05,1424.98 1296.76,1426.11 1297.47,1425.53 1298.17,1429.76 1298.88,1428.78 1299.59,1427.88 1300.3,1427.27 1301,1427.74 1301.71,1430.29 1302.42,1429.27 1303.13,1423.4 1303.84,1423.12 1304.54,1426.04 1305.25,1421.72 1305.96,1417.81 1306.67,1414.18 1307.37,1414.07 1308.08,1415.29 1308.79,1416.74 1309.5,1414.71 1310.21,1412.86 1310.91,1411.11 1311.62,1414.62 1312.33,1412.47 1313.04,1410.85 1313.74,1417.42 1314.45,1417.17 1315.16,1418.82 1315.87,1416.9 1316.58,1414.97 1317.28,1412.81 1317.99,1416.15 1318.7,1413.99 1319.41,1412.08 1320.11,1415.16 1320.82,1413.08 1321.53,1413.3 1322.24,1416.76 1322.95,1415.08 1323.65,1416.62 1324.36,1416.24 1325.07,1413.89 1325.78,1415.37 1326.48,1416.93 1327.19,1413.32 1327.9,1409.94 1328.61,1406.88 1329.32,1405.26 1330.02,1405.81 1330.73,1406.35 1331.44,1408.28 1332.15,1408.5 1332.85,1408.72 1333.56,1405.42 1334.27,1405.69 1334.98,1407.8 1335.69,1408.41 1336.39,1410.28 1337.1,1410.43 1337.81,1410.2 1338.52,1406.95 1339.22,1408.92 1339.93,1409.32 1340.64,1414.64 1341.35,1412.82 1342.06,1410.92 1342.76,1413.88 1343.47,1415.55 1344.18,1413.76 1344.89,1413.73 1345.59,1413.54 1346.3,1411.46 1347.01,1409.86 1347.72,1411.52 1348.43,1416.56 1349.13,1416.25 1349.84,1414.48 1350.55,1416.06 1351.26,1417.64 1351.96,1414.15 1352.67,1414.06 1353.38,1415.44 1354.09,1413.91 1354.8,1408.85 1355.5,1407.27 1356.21,1409.25 1356.92,1409.46 1357.63,1407.78 1358.33,1408.1 1359.04,1408.1 1359.75,1413.47 1360.46,1415.26 1361.17,1413.35 1361.87,1411.32 1362.58,1411.43 1363.29,1409.83 1364,1406.08 1364.71,1406.15 1365.41,1404.7 1366.12,1406.93 1366.83,1408.75 1367.54,1410.3 1368.24,1410.29 1368.95,1414.14 1369.66,1410.65 1370.37,1407.56 1371.08,1404.46 1371.78,1408.32 1372.49,1406.89 1373.2,1408.8 1373.91,1410.56 1374.61,1409.31 1375.32,1405.94 1376.03,1405.75 1376.74,1400.95 1377.45,1406.73 1378.15,1405.12 1378.86,1407.07 1379.57,1406.07 1380.28,1406.74 1380.98,1405.73 1381.69,1405.91 1382.4,1406.02 1383.11,1404.37 1383.82,1404.96 1384.52,1405.23 1385.23,1407.46 1385.94,1407.42 1386.65,1409.03 1387.35,1407.89 1388.06,1410.19 1388.77,1410.72 1389.48,1410.7 1390.19,1410.87 1390.89,1410.54 1391.6,1412.48 1392.31,1412.37 1393.02,1414.36 1393.72,1414.46 1394.43,1411.02 1395.14,1409.53 1395.85,1407.94 1396.56,1406.07 1397.26,1404.68 1397.97,1405.39 1398.68,1407.4 1399.39,1407.54 1400.09,1409.3 1400.8,1411.05 1401.51,1411.3 1402.22,1409.47 1402.93,1408.14 1403.63,1406.54 1404.34,1405.19 1405.05,1405.77 1405.76,1406.86 1406.46,1410.23 1407.17,1406.97 1407.88,1406.97 1408.59,1408.87 1409.3,1409.31 1410,1409.96 1410.71,1409.99 1411.42,1410.03 1412.13,1410.03 1412.83,1410.2 1413.54,1410.34 1414.25,1410.52 1414.96,1414.34 1415.67,1415.9 1416.37,1417.48 1417.08,1419.18 1417.79,1417.09 1418.5,1415.34 1419.2,1416.65 1419.91,1413.22 1420.62,1418.76 1421.33,1420.15 1422.04,1423.21 1422.74,1426 1423.45,1425.38 1424.16,1422.75 1424.87,1422.76 1425.57,1420.38 1426.28,1420.21 1426.99,1414.71 1427.7,1409.32 1428.41,1411.38 1429.11,1414.9 1429.82,1419.7 1430.53,1420.93 1431.24,1420.25 1431.94,1419.62 1432.65,1426.08 1433.36,1427 1434.07,1424.58 1434.78,1422.32 1435.48,1416.57 1436.19,1414.74 1436.9,1417.79 1437.61,1415.67 1438.31,1413.31 1439.02,1413.25 1439.73,1412.83 1440.44,1414.74 1441.15,1416.31 1441.85,1419.42 1442.56,1421.1 1443.27,1420.7 1443.98,1421.63 1444.69,1421.37 1445.39,1420.96 1446.1,1423.85 1446.81,1421.09 1447.52,1422 1448.22,1416.07 1448.93,1417.37 1449.64,1417.18 1450.35,1417.05 1451.06,1413.33 1451.76,1413.13 1452.47,1409.57 1453.18,1408.27 1453.89,1408.59 1454.59,1408.58 1455.3,1406.69 1456.01,1403.23 1456.72,1403.59 1457.43,1405.4 1458.13,1405.96 1458.84,1402.31 1459.55,1399.09 1460.26,1399.76 1460.96,1398.39 1461.67,1400.87 1462.38,1400.12 1463.09,1399.1 1463.8,1394.66 1464.5,1397.38 1465.21,1397.92 1465.92,1398.56 1466.63,1405.82 1467.33,1405.95 1468.04,1406.34 1468.75,1406.52 1469.46,1407.05 1470.17,1412.74 1470.87,1414.03 1471.58,1417.71 1472.29,1415.87 1473,1418.53 1473.7,1416.35 1474.41,1419.44 1475.12,1418.85 1475.83,1420.61 1476.54,1420.1 1477.24,1419.68 1477.95,1417.38 1478.66,1420.38 1479.37,1421.49 1480.07,1422.87 1480.78,1420.75 1481.49,1418.38 1482.2,1419.69 1482.91,1419.46 1483.61,1417.41 1484.32,1419.21 1485.03,1416.87 1485.74,1416.37 1486.44,1414.62 1487.15,1414.56 1487.86,1412.87 1488.57,1414.78 1489.28,1416.68 1489.98,1414.72 1490.69,1414.52 1491.4,1414.23 1492.11,1410.84 1492.81,1410.54 1493.52,1412.51 1494.23,1412.46 1494.94,1410.76 1495.65,1412.66 1496.35,1412.62 1497.06,1414.28 1497.77,1412.75 1498.48,1409.6 1499.18,1409.57 1499.89,1408.11 1500.6,1405.07 1501.31,1403.54 1502.02,1406.12 1502.72,1408.32 1503.43,1412.11 1504.14,1410.33 1504.85,1410.58 1505.55,1412.22 1506.26,1413.89 1506.97,1413.53 1507.68,1415.14 1508.39,1414.76 1509.09,1417.76 1509.8,1415.44 1510.51,1416.82 1511.22,1417.71 1511.92,1419.18 1512.63,1420.3 1513.34,1428.36 1514.05,1427.67 1514.76,1426.81 1515.46,1422.14 1516.17,1421.14 1516.88,1425.78 1517.59,1423.73 1518.3,1421.72 1519,1426.56 1519.71,1424.12 1520.42,1423.32 1521.13,1421.23 1521.83,1420.35 1522.54,1424.82 1523.25,1424.47 1523.96,1423.49 1524.67,1424.44 1525.37,1423.61 1526.08,1419.24 1526.79,1419.18 1527.5,1418.52 1528.2,1416.43 1528.91,1413.14 1529.62,1414.42 1530.33,1410.54 1531.04,1411.97 1531.74,1409.94 1532.45,1413.48 1533.16,1411.9 1533.87,1404.86 1534.57,1403.39 1535.28,1406.04 1535.99,1407.94 1536.7,1404.39 1537.41,1401.69 1538.11,1402.67 1538.82,1404.92 1539.53,1403.77 1540.24,1402.29 1540.94,1401.32 1541.65,1397.94 1542.36,1400.45 1543.07,1401.15 1543.78,1396.42 1544.48,1394.11 1545.19,1395.38 1545.9,1396.28 1546.61,1397.41 1547.31,1396.34 1548.02,1395.12 1548.73,1399.8 1549.44,1403.77 1550.15,1404.09 1550.85,1404.28 1551.56,1404.46 1552.27,1408.19 1552.98,1408.62 1553.68,1409.12 1554.39,1406.23 1555.1,1408 1555.81,1408.07 1556.52,1408.17 1557.22,1409.91 1557.93,1409.57 1558.64,1411.33 1559.35,1413.22 1560.05,1413.1 1560.76,1416.23 1561.47,1418.1 1562.18,1417.65 1562.89,1413.86 1563.59,1415.58 1564.3,1415.37 1565.01,1415.17 1565.72,1415.18 1566.42,1413.49 1567.13,1411.61 1567.84,1409.97 1568.55,1410.32 1569.26,1410.58 1569.96,1407.56 1570.67,1409.71 1571.38,1404.75 1572.09,1406.86 1572.79,1410.43 1573.5,1412.31 1574.21,1414.4 1574.92,1415.97 1575.63,1414.27 1576.33,1413.81 1577.04,1417 1577.75,1416.88 1578.46,1413.59 1579.16,1414.97 1579.87,1418.14 1580.58,1417.6 1581.29,1415.28 1582,1418.65 1582.7,1421.7 1583.41,1419.57 1584.12,1419.14 1584.83,1413.78 1585.53,1415.17 1586.24,1415.47 1586.95,1418.96 1587.66,1421.78 1588.37,1424.66 1589.07,1425.38 1589.78,1425.21 1590.49,1419.52 1591.2,1418.77 1591.9,1418.65 1592.61,1414.97 1593.32,1418.05 1594.03,1417.39 1594.74,1417.06 1595.44,1418.62 1596.15,1418.46 1596.86,1420 1597.57,1421.38 1598.28,1422.56 1598.98,1425.46 1599.69,1424.44 1600.4,1423.63 1601.11,1417.62 1601.81,1412.02 1602.52,1411.79 1603.23,1411.89 1603.94,1409.97 1604.65,1413.88 1605.35,1413.88 1606.06,1417.48 1606.77,1413.61 1607.48,1417.02 1608.18,1417.1 1608.89,1418.65 1609.6,1416.41 1610.31,1416.11 1611.02,1417.56 1611.72,1417.41 1612.43,1417.14 1613.14,1413.64 1613.85,1413.56 1614.55,1413.84 1615.26,1413.9 1615.97,1413.75 1616.68,1415.21 1617.39,1413.16 1618.09,1413.07 1618.8,1412.72 1619.51,1412.58 1620.22,1414.19 1620.92,1419.05 1621.63,1411.5 1622.34,1409.77 1623.05,1407.89 1623.76,1407.83 1624.46,1409.77 1625.17,1410.19 1625.88,1410.08 1626.59,1410.23 1627.29,1408.45 1628,1408.62 1628.71,1409.08 1629.42,1409.47 1630.13,1408.04 1630.83,1408.08 1631.54,1404.32 1632.25,1400.98 1632.96,1401.67 1633.66,1400.75 1634.37,1401.03 1635.08,1398.45 1635.79,1400.91 1636.5,1399.58 1637.2,1401.88 1637.91,1400.13 1638.62,1402.42 1639.33,1403.27 1640.03,1405.35 1640.74,1405.48 1641.45,1404.08 1642.16,1402.96 1642.87,1405.32 1643.57,1405.96 1644.28,1408.12 1644.99,1406.94 1645.7,1405.51 1646.4,1409.16 1647.11,1411.15 1647.82,1408.11 1648.53,1411.58 1649.24,1409.94 1649.94,1409.9 1650.65,1410.05 1651.36,1411.7 1652.07,1408.56 1652.77,1407.19 1653.48,1405.85 1654.19,1404.36 1654.9,1403.09 1655.61,1401.7 1656.31,1404.24 1657.02,1402.84 1657.73,1403.2 1658.44,1405.05 1659.14,1407.36 1659.85,1409.11 1660.56,1412.32 1661.27,1410.84 1661.98,1411.03 1662.68,1416.22 1663.39,1413.99 1664.1,1412.27 1664.81,1412.04 1665.51,1411.77 1666.22,1413.41 1666.93,1411.94 1667.64,1408.54 1668.35,1410.8 1669.05,1412.62 1669.76,1412.34 1670.47,1410.63 1671.18,1412.42 1671.89,1414.58 1672.59,1412.94 1673.3,1416.67 1674.01,1413.23 1674.72,1414.9 1675.42,1416.46 1676.13,1417.93 1676.84,1412.88 1677.55,1405.73 1678.26,1404.81 1678.96,1407.26 1679.67,1405.67 1680.38,1405.81 1681.09,1406.26 1681.79,1405.09 1682.5,1405.44 1683.21,1405.96 1683.92,1408.42 1684.63,1405.27 1685.33,1407.31 1686.04,1407.33 1686.75,1407.48 1687.46,1412.96 1688.16,1414.31 1688.87,1417.63 1689.58,1417.35 1690.29,1415.78 1691,1415.83 1691.7,1413.85 1692.41,1415.43 1693.12,1416.47 1693.83,1414.58 1694.53,1414.13 1695.24,1416.03 1695.95,1416.05 1696.66,1417.62 1697.37,1417.39 1698.07,1416.91 1698.78,1415.09 1699.49,1409.61 1700.2,1413.22 1700.9,1413.21 1701.61,1414.85 1702.32,1409.75 1703.03,1409.85 1703.74,1410.19 1704.44,1413.75 1705.15,1413.56 1705.86,1408.33 1706.57,1410.04 1707.27,1409.98 1707.98,1410.31 1708.69,1410.83 1709.4,1409.21 1710.11,1412.8 1710.81,1414.52 1711.52,1414.24 1712.23,1410.56 1712.94,1412.06 1713.64,1414.14 1714.35,1417.52 1715.06,1415.62 1715.77,1420.58 1716.48,1418.69 1717.18,1423.67 1717.89,1419.45 1718.6,1417.29 1719.31,1418.78 1720.01,1416.77 1720.72,1416.48 1721.43,1414.74 1722.14,1409.65 1722.85,1409.53 1723.55,1407.58 1724.26,1406.28 1724.97,1408.02 1725.68,1408.39 1726.38,1410.66 1727.09,1410.56 1727.8,1412.67 1728.51,1412.5 1729.22,1416.1 1729.92,1416.03 1730.63,1415.99 1731.34,1415.61 1732.05,1412.02 1732.75,1415.16 1733.46,1416.44 1734.17,1418.35 1734.88,1416.29 1735.59,1414.43 1736.29,1416.02 1737,1415.42 1737.71,1415.32 1738.42,1413.59 1739.12,1415.06 1739.83,1413.14 1740.54,1412.83 1741.25,1409.18 1741.96,1405.92 1742.66,1407.79 1743.37,1408.17 1744.08,1407.86 1744.79,1406.25 1745.49,1403.11 1746.2,1403.5 1746.91,1403.7 1747.62,1404.55 1748.33,1404.81 1749.03,1405.3 1749.74,1405.76 1750.45,1406.03 1751.16,1409.57 1751.87,1409.53 1752.57,1408.15 1753.28,1411.71 1753.99,1413.61 1754.7,1415.27 1755.4,1418.28 1756.11,1416.33 1756.82,1418.32 1757.53,1419.76 1758.24,1420.62 1758.94,1418.72 1759.65,1418.53 1760.36,1417.99 1761.07,1415.97 1761.77,1413.63 1762.48,1409.94 1763.19,1409.88 1763.9,1408.29 1764.61,1410.26 1765.31,1412.04 1766.02,1417.14 1766.73,1416.66 1767.44,1416.15 1768.14,1414.02 1768.85,1415.25 1769.56,1415.05 1770.27,1414.64 1770.98,1410.8 1771.68,1412.7 1772.39,1412.44 1773.1,1412.09 1773.81,1413.57 1774.51,1413.55 1775.22,1413.27 1775.93,1415.21 1776.64,1411.71 1777.35,1413.25 1778.05,1411.58 1778.76,1411.77 1779.47,1415.57 1780.18,1415.29 1780.88,1409.96 1781.59,1411.56 1782.3,1411.06 1783.01,1411.23 1783.72,1414.4 1784.42,1412.46 1785.13,1412.22 1785.84,1412.49 1786.55,1408.96 1787.25,1409 1787.96,1410.7 1788.67,1409.04 1789.38,1405.73 1790.09,1404.15 1790.79,1402.99 1791.5,1404.9 1792.21,1407.34 1792.92,1407.74 1793.62,1402.69 1794.33,1403.17 1795.04,1400.33 1795.75,1399.17 1796.46,1399.47 1797.16,1400.05 1797.87,1396.93 1798.58,1400.12 1799.29,1398.67 1799.99,1399.51 1800.7,1401.88 1801.41,1406.42 1802.12,1410.13 1802.83,1408.51 1803.53,1410.46 1804.24,1408.88 1804.95,1412.45 1805.66,1409.09 1806.36,1408.98 1807.07,1412.73 1807.78,1412.81 1808.49,1409.39 1809.2,1410.85 1809.9,1411.19 1810.61,1410.87 1811.32,1410.9 1812.03,1412.58 1812.73,1412.54 1813.44,1412.49 1814.15,1411.94 1814.86,1413.15 1815.57,1412.95 1816.27,1411.27 1816.98,1406.34 1817.69,1408.47 1818.4,1407.4 1819.1,1407.52 1819.81,1411.09 1820.52,1411.03 1821.23,1412.83 1821.94,1417.57 1822.64,1415.44 1823.35,1415.07 1824.06,1413.12 1824.77,1413.22 1825.48,1409.67 1826.18,1409.87 1826.89,1408.47 1827.6,1411.88 1828.31,1410.02 1829.01,1408.61 1829.72,1408.58 1830.43,1407.3 1831.14,1409.1 1831.85,1409.37 1832.55,1409.39 1833.26,1407.4 1833.97,1409.26 1834.68,1407.61 1835.38,1407.91 1836.09,1408.43 1836.8,1409.07 1837.51,1411.16 1838.22,1413.06 1838.92,1410.92 1839.63,1411.14 1840.34,1413.03 1841.05,1414.86 1841.75,1411.12 1842.46,1413.21 1843.17,1414.93 1843.88,1414.71 1844.59,1412.89 1845.29,1418.06 1846,1417.85 1846.71,1412.27 1847.42,1410.44 1848.12,1412.41 1848.83,1412.5 1849.54,1412.58 1850.25,1410.84 1850.96,1412.47 1851.66,1412.73 1852.37,1414.19 1853.08,1417.4 1853.79,1415.24 1854.49,1418.49 1855.2,1419.53 1855.91,1422.82 1856.62,1422.18 1857.33,1418.34 1858.03,1416.09 1858.74,1419.34 1859.45,1418.86 1860.16,1421.81 1860.86,1419.65 1861.57,1419.25 1862.28,1415.37 1862.99,1410.03 1863.7,1406.69 1864.4,1405.27 1865.11,1404.31 1865.82,1401.31 1866.53,1406.55 1867.23,1405.23 1867.94,1409.04 1868.65,1411.27 1869.36,1411.5 1870.07,1411.44 1870.77,1409.89 1871.48,1406.71 1872.19,1407.13 1872.9,1405.75 1873.6,1404.54 1874.31,1407.05 1875.02,1403.74 1875.73,1402.28 1876.44,1406.45 1877.14,1405.03 1877.85,1401.91 1878.56,1404.26 1879.27,1406.53 1879.97,1406.8 1880.68,1407.18 1881.39,1405.63 1882.1,1404.2 1882.81,1406.38 1883.51,1409.83 1884.22,1405.09 1884.93,1407.08 1885.64,1410.75 1886.34,1409.22 1887.05,1408.86 1887.76,1405.55 1888.47,1405.82 1889.18,1405.87 1889.88,1404.43 1890.59,1404.68 1891.3,1403.6 1892.01,1409.14 1892.71,1407.86 1893.42,1411.69 1894.13,1413.28 1894.84,1411.85 1895.55,1413.69 1896.25,1417.2 1896.96,1418.65 1897.67,1412.95 1898.38,1413.22 1899.08,1416.77 1899.79,1413.24 1900.5,1414.98 1901.21,1414.5 1901.92,1414.04 1902.62,1413.75 1903.33,1411.81 1904.04,1415.21 1904.75,1414.42 1905.46,1412.3 1906.16,1409.07 1906.87,1411.1 1907.58,1411.25 1908.29,1409.64 1908.99,1409.46 1909.7,1409.34 1910.41,1407.46 1911.12,1404.37 1911.83,1401.08 1912.53,1404.98 1913.24,1402 1913.95,1404.24 1914.66,1404.9 1915.36,1405.04 1916.07,1405.2 1916.78,1405.9 1917.49,1406.29 1918.2,1399.6 1918.9,1400.31 1919.61,1401.04 1920.32,1405.1 1921.03,1405.59 1921.73,1405.53 1922.44,1404.09 1923.15,1406.13 1923.86,1406.49 1924.57,1410.34 1925.27,1415.56 1925.98,1410.37 1926.69,1410.76 1927.4,1410.99 1928.1,1413.09 1928.81,1413.19 1929.52,1413.11 1930.23,1414.62 1930.94,1415.95 1931.64,1412.21 1932.35,1410.46 1933.06,1410.55 1933.77,1412.22 1934.47,1417.4 1935.18,1415.48 1935.89,1416.55 1936.6,1412.98 1937.31,1411.14 1938.01,1411.39 1938.72,1405.96 1939.43,1407.78 1940.14,1411.38 1940.84,1411.52 1941.55,1411.31 1942.26,1413.16 1942.97,1411.41 1943.68,1409.53 1944.38,1411.56 1945.09,1411.89 1945.8,1411.99 1946.51,1411.82 1947.21,1413.53 1947.92,1415.46 1948.63,1422.32 1949.34,1419.45 1950.05,1421.96 1950.75,1426.59 1951.46,1429.24 1952.17,1429.77 1952.88,1425.65 1953.58,1421.48 1954.29,1419.23 1955,1415.59 1955.71,1415.48 1956.42,1415.44 1957.12,1414.89 1957.83,1416.08 1958.54,1414.41 1959.25,1412.45 1959.95,1415.75 1960.66,1413.65 1961.37,1411.82 1962.08,1411.58 1962.79,1413.56 1963.49,1419.24 1964.2,1415.44 1964.91,1413.45 1965.62,1409.71 1966.32,1413.49 1967.03,1411.72 1967.74,1413.54 1968.45,1413.52 1969.16,1411.81 1969.86,1410.18 1970.57,1411.88 1971.28,1413.7 1971.99,1413.65 1972.69,1408.5 1973.4,1413.45 1974.11,1415.22 1974.82,1416.44 1975.53,1417.88 1976.23,1417.59 1976.94,1417.3 1977.65,1417.38 1978.36,1417.38 1979.07,1417.31 1979.77,1416.95 1980.48,1413.2 1981.19,1416.6 1981.9,1416.55 1982.6,1416.39 1983.31,1415.79 1984.02,1413.69 1984.73,1413.38 1985.44,1411.26 1986.14,1411.42 1986.85,1411.39 1987.56,1413.07 1988.27,1416.42 1988.97,1412.55 1989.68,1409.08 1990.39,1409.34 1991.1,1409.55 1991.81,1408.39 1992.51,1408.6 1993.22,1410.47 1993.93,1410.52 1994.64,1412.42 1995.34,1408.92 1996.05,1409.29 1996.76,1409.15 1997.47,1409.16 1998.18,1411.26 1998.88,1413.1 1999.59,1414.86 2000.3,1414.67 2001.01,1412.79 2001.71,1413.09 2002.42,1412.92 2003.13,1414.67 2003.84,1414.87 2004.55,1411.65 2005.25,1415.49 2005.96,1417 2006.67,1418.36 2007.38,1418.05 2008.08,1415.95 2008.79,1417.3 2009.5,1418.78 2010.21,1416.76 2010.92,1416.59 2011.62,1417.85 2012.33,1418.83 2013.04,1416.64 2013.75,1414.47 2014.45,1415.87 2015.16,1417.56 2015.87,1415.42 2016.58,1417.28 2017.29,1420.75 2017.99,1420.18 2018.7,1423 2019.41,1420.69 2020.12,1418.77 2020.82,1415.21 2021.53,1415.04 2022.24,1414.69 2022.95,1414.46 2023.66,1411 2024.36,1410.98 2025.07,1409.13 2025.78,1415.79 2026.49,1417.47 2027.19,1417.29 2027.9,1415.46 2028.61,1413.21 2029.32,1414.69 2030.03,1416.44 2030.73,1415.65 2031.44,1418.96 2032.15,1418.47 2032.86,1416.62 2033.56,1418.03 2034.27,1415.85 2034.98,1420.65 2035.69,1412.98 2036.4,1413.07 2037.1,1413.07 2037.81,1411.26 2038.52,1416.18 2039.23,1419.91 2039.93,1417.77 2040.64,1417.51 2041.35,1416.95 2042.06,1413.63 2042.77,1411.95 2043.47,1412.14 2044.18,1410.7 2044.89,1409.29 2045.6,1407.59 2046.3,1411.35 2047.01,1411.29 2047.72,1414.88 2048.43,1411.39 2049.14,1415.01 2049.84,1415.13 2050.55,1413.36 2051.26,1415.52 2051.97,1413.5 2052.68,1411.61 2053.38,1406.54 2054.09,1401.43 2054.8,1407.02 2055.51,1405.48 2056.21,1400.9 2056.92,1399.48 2057.63,1396.67 2058.34,1397.49 2059.05,1400 2059.75,1400.59 2060.46,1402.69 2061.17,1403.34 2061.88,1400.17 2062.58,1398.99 2063.29,1401.02 2064,1398.06 2064.71,1400.81 2065.42,1405.09 2066.12,1398.55 2066.83,1399.55 2067.54,1400.18 2068.25,1398.94 2068.95,1398.09 2069.66,1397.15 2070.37,1398.21 2071.08,1397.42 2071.79,1399.69 2072.49,1400.54 2073.2,1399.01 2073.91,1399.98 2074.62,1404.02 2075.32,1406.21 2076.03,1404.71 2076.74,1403.59 2077.45,1403.99 2078.16,1404.22 2078.86,1409.73 2079.57,1409.84 2080.28,1408.54 2080.99,1408.37 2081.69,1409.98 2082.4,1408.36 2083.11,1410 2083.82,1406.24 2084.53,1406.69 2085.23,1406.9 2085.94,1409.26 2086.65,1407.63 2087.36,1409.38 2088.06,1407.71 2088.77,1411.49 2089.48,1411.45 2090.19,1412.83 2090.9,1412.97 2091.6,1414.31 2092.31,1412.63 2093.02,1414.62 2093.73,1412.8 2094.43,1412.76 2095.14,1413.01 2095.85,1412.88 2096.56,1409.41 2097.27,1411.27 2097.97,1411.51 2098.68,1409.89 2099.39,1410.19 2100.1,1410.36 2100.8,1408.88 2101.51,1410.66 2102.22,1410.62 2102.93,1412.34 2103.64,1412.3 2104.34,1412.08 2105.05,1414.05 2105.76,1412.62 2106.47,1412.38 2107.17,1413.69 2107.88,1413.53 2108.59,1416.59 2109.3,1416.19 2110.01,1414.37 2110.71,1419.15 2111.42,1419.02 2112.13,1418.91 2112.84,1422.1 2113.54,1419.96 2114.25,1416.5 2114.96,1412.69 2115.67,1407.65 2116.38,1411.21 2117.08,1414.67 2117.79,1418.37 2118.5,1418.03 2119.21,1421.22 2119.91,1422.13 2120.62,1421.64 2121.33,1417.29 2122.04,1413.74 2122.75,1415.56 2123.45,1415.48 2124.16,1413.4 2124.87,1409.83 2125.58,1408.11 2126.28,1410.29 2126.99,1412.01 2127.7,1413.79 2128.41,1408.49 2129.12,1406.9 2129.82,1405.9 2130.53,1407.65 2131.24,1411.38 2131.95,1411.92 2132.66,1413.92 2133.36,1415.18 2134.07,1416.6 2134.78,1415.11 2135.49,1411.21 2136.19,1412.81 2136.9,1414.93 2137.61,1412.89 2138.32,1416.11 2139.03,1414.23 2139.73,1415.43 2140.44,1416.91 2141.15,1418.54 2141.86,1417.89 2142.56,1417.42 2143.27,1420.73 2143.98,1423.96 2144.69,1423.17 2145.4,1422.31 2146.1,1423.18 2146.81,1420.71 2147.52,1420.16 2148.23,1419.74 2148.93,1414.04 2149.64,1415.85 2150.35,1415.95 2151.06,1415.79 2151.77,1415.75 2152.47,1417.62 2153.18,1420.75 2153.89,1420.39 2154.6,1421.91 2155.3,1419.94 2156.01,1419.53 2156.72,1417.29 2157.43,1420.53 2158.14,1418.52 2158.84,1418.03 2159.55,1417.64 2160.26,1417.03 2160.97,1415.06 2161.67,1420.2 2162.38,1422.04 2163.09,1425.01 2163.8,1427.61 2164.51,1425.01 2165.21,1424.54 2165.92,1422.28 2166.63,1423.85 2167.34,1419.59 2168.04,1419.19 2168.75,1417.35 2169.46,1418.92 2170.17,1415.13 2170.88,1414.73 2171.58,1414.24 2172.29,1412.34 2173,1414.12 2173.71,1417.02 2174.41,1416.63 2175.12,1416.38 2175.83,1412.71 2176.54,1412.5 2177.25,1411.01 2177.95,1409.58 2178.66,1408.22 2179.37,1410.04 2180.08,1406.65 2180.78,1401.96 2181.49,1404.19 2182.2,1402.75 2182.91,1403.05 2183.62,1401.84 2184.32,1402.08 2185.03,1400.71 2185.74,1397.86 2186.45,1396.42 2187.15,1395.77 2187.86,1396 2188.57,1391.23 2189.28,1390.79 2189.99,1390.16 2190.69,1391.39 2191.4,1392.32 2192.11,1395.14 2192.82,1396.34 2193.52,1396.75 2194.23,1401.03 2194.94,1399.77 2195.65,1400.42 2196.36,1402.99 2197.06,1403.58 2197.77,1400.66 2198.48,1397.7 2199.19,1396.9 2199.89,1399.58 2200.6,1402.13 2201.31,1404.24 2202.02,1408.26 2202.73,1413.74 2203.43,1412.1 2204.14,1412.15 2204.85,1412.31 2205.56,1413.95 2206.27,1414.01 2206.97,1411.93 2207.68,1414.99 2208.39,1416.19 2209.1,1417.8 2209.8,1415.82 2210.51,1415.61 2211.22,1417.53 2211.93,1419.15 2212.64,1420.45 2213.34,1419.97 2214.05,1420.96 2214.76,1420.88 2215.47,1418.77 2216.17,1414.73 2216.88,1414.57 2217.59,1416.12 2218.3,1416.12 2219.01,1415.91 2219.71,1419.1 2220.42,1420.21 2221.13,1421.92 2221.84,1419.78 2222.54,1415.71 2223.25,1415.4 2223.96,1418.76 2224.67,1418.49 2225.38,1421.53 2226.08,1421.27 2226.79,1420.7 2227.5,1415.14 2228.21,1413.27 2228.91,1415.2 2229.62,1415.2 2230.33,1420.35 2231.04,1419.78 2231.75,1421.09 2232.45,1418.83 2233.16,1416.59 2233.87,1412.66 2234.58,1411.18 2235.28,1411.4 2235.99,1413.04 2236.7,1414.61 2237.41,1416.34 2238.12,1418.18 2238.82,1414.29 2239.53,1409.36 2240.24,1406.08 2240.95,1406.26 2241.65,1404.8 2242.36,1406.83 2243.07,1407.2 2243.78,1408.99 2244.49,1407.72 2245.19,1407.98 2245.9,1406.54 2246.61,1406.84 2247.32,1401.86 2248.02,1400.62 2248.73,1401.24 2249.44,1401.41 2250.15,1400.02 2250.86,1402.31 2251.56,1406.08 2252.27,1406.11 2252.98,1413.15 2253.69,1416.61 2254.39,1419.39 2255.1,1415.37 2255.81,1415.32 2256.52,1413.86 2257.23,1412.22 2257.93,1412.53 2258.64,1414.1 2259.35,1412.39 2260.06,1412.56 2260.76,1414.35 2261.47,1410.6 2262.18,1412.25 2262.89,1417.06 2263.6,1414.87 2264.3,1414.57 2265.01,1414.71 2265.72,1417.62 2266.43,1417.19 2267.13,1415.58 2267.84,1413.65 2268.55,1413.72 2269.26,1411.86 2269.97,1408.39 2270.67,1406.67 2271.38,1403.59 2272.09,1409.3 2272.8,1409.4 2273.5,1412.65 2274.21,1411.08 2274.92,1406.01 2275.63,1406.11 2276.34,1404.49 2277.04,1405.15 2277.75,1405.77 2278.46,1406.05 2279.17,1402.65 2279.87,1403.13 2280.58,1406.72 2281.29,1406.86 2282,1406.94 2282.71,1407.28 2283.41,1407.36 2284.12,1405.75 2284.83,1407.74 2285.54,1410.09 2286.25,1411.93 2286.95,1412.62 2287.66,1410.96 2288.37,1409.31 2289.08,1411.31 \"/>\n<path clip-path=\"url(#clip602)\" d=\"M874.208 1412.69 L874.916 1412.69 L875.623 1412.69 L876.331 1412.69 L877.039 1412.69 L877.747 1412.69 L878.455 1412.69 L879.162 1412.69 L879.87 1412.69 L880.578 1412.69 L881.286 1412.69 L881.994 1412.69 L882.701 1412.69 L883.409 1412.69 L884.117 1412.69 L884.825 1412.69 L885.533 1412.69 L886.24 1412.69 L886.948 1412.69 L887.656 1412.69 L888.364 1412.69 L889.071 1412.69 L889.779 1412.69 L890.487 1412.69 L891.195 1412.69 L891.903 1412.69 L892.61 1412.69 L893.318 1412.69 L894.026 1412.69 L894.734 1412.69 L895.442 1412.69 L896.149 1412.69 L896.857 1412.69 L897.565 1412.69 L898.273 1412.69 L898.98 1412.69 L899.688 1412.69 L900.396 1412.69 L901.104 1412.69 L901.812 1412.69 L902.519 1412.69 L903.227 1412.69 L903.935 1412.69 L904.643 1412.69 L905.351 1412.69 L906.058 1412.69 L906.766 1412.69 L907.474 1412.69 L908.182 1412.69 L908.89 1412.69 L909.597 1412.69 L910.305 1412.69 L911.013 1412.69 L911.721 1412.69 L912.428 1412.69 L913.136 1412.69 L913.844 1412.69 L914.552 1412.69 L915.26 1412.69 L915.967 1412.69 L916.675 1412.69 L917.383 1412.69 L918.091 1412.69 L918.799 1412.69 L919.506 1412.69 L920.214 1412.69 L920.922 1412.69 L921.63 1412.69 L922.337 1412.69 L923.045 1412.69 L923.753 1412.69 L924.461 1412.69 L925.169 1412.69 L925.876 1412.69 L926.584 1412.69 L927.292 1412.69 L928 1412.69 L928.708 1412.69 L929.415 1412.69 L930.123 1412.69 L930.831 1412.69 L931.539 1412.69 L932.247 1412.69 L932.954 1412.69 L933.662 1412.69 L934.37 1412.69 L935.078 1412.69 L935.785 1412.69 L936.493 1412.69 L937.201 1412.69 L937.909 1412.69 L938.617 1412.69 L939.324 1412.69 L940.032 1412.69 L940.74 1412.69 L941.448 1412.69 L942.156 1412.69 L942.863 1412.69 L943.571 1412.69 L944.279 1412.69 L944.987 1412.69 L945.694 1412.69 L946.402 1412.69 L947.11 1412.69 L947.818 1412.69 L948.526 1412.69 L949.233 1412.69 L949.941 1412.69 L950.649 1412.69 L951.357 1412.69 L952.065 1412.69 L952.772 1412.69 L953.48 1412.69 L954.188 1412.69 L954.896 1412.69 L955.604 1412.69 L956.311 1412.69 L957.019 1412.69 L957.727 1412.69 L958.435 1412.69 L959.142 1412.69 L959.85 1412.69 L960.558 1412.69 L961.266 1412.69 L961.974 1412.69 L962.681 1412.69 L963.389 1412.69 L964.097 1412.69 L964.805 1412.69 L965.513 1412.69 L966.22 1412.69 L966.928 1412.69 L967.636 1412.69 L968.344 1412.69 L969.051 1412.69 L969.759 1412.69 L970.467 1412.69 L971.175 1412.69 L971.883 1412.69 L972.59 1412.69 L973.298 1412.69 L974.006 1412.69 L974.714 1412.69 L975.422 1412.69 L976.129 1412.69 L976.837 1412.69 L977.545 1412.69 L978.253 1412.69 L978.961 1412.69 L979.668 1412.69 L980.376 1412.69 L981.084 1412.69 L981.792 1412.69 L982.499 1412.69 L983.207 1412.69 L983.915 1412.69 L984.623 1412.69 L985.331 1412.69 L986.038 1412.69 L986.746 1412.69 L987.454 1412.69 L988.162 1412.69 L988.87 1412.69 L989.577 1412.69 L990.285 1412.69 L990.993 1412.69 L991.701 1412.69 L992.409 1412.69 L993.116 1412.69 L993.824 1412.69 L994.532 1412.69 L995.24 1412.69 L995.947 1412.69 L996.655 1412.69 L997.363 1412.69 L998.071 1412.69 L998.779 1412.69 L999.486 1412.69 L1000.19 1412.69 L1000.9 1412.69 L1001.61 1412.69 L1002.32 1412.69 L1003.03 1412.69 L1003.73 1412.69 L1004.44 1412.69 L1005.15 1412.69 L1005.86 1412.69 L1006.56 1412.69 L1007.27 1412.69 L1007.98 1412.69 L1008.69 1412.69 L1009.4 1412.69 L1010.1 1412.69 L1010.81 1412.69 L1011.52 1412.69 L1012.23 1412.69 L1012.93 1412.69 L1013.64 1412.69 L1014.35 1412.69 L1015.06 1412.69 L1015.77 1412.69 L1016.47 1412.69 L1017.18 1412.69 L1017.89 1412.69 L1018.6 1412.69 L1019.3 1412.69 L1020.01 1412.69 L1020.72 1412.69 L1021.43 1412.69 L1022.14 1412.69 L1022.84 1412.69 L1023.55 1412.69 L1024.26 1412.69 L1024.97 1412.69 L1025.67 1412.69 L1026.38 1412.69 L1027.09 1412.69 L1027.8 1412.69 L1028.51 1412.69 L1029.21 1412.69 L1029.92 1412.69 L1030.63 1412.69 L1031.34 1412.69 L1032.04 1412.69 L1032.75 1412.69 L1033.46 1412.69 L1034.17 1412.69 L1034.88 1412.69 L1035.58 1412.69 L1036.29 1412.69 L1037 1412.69 L1037.71 1412.69 L1038.41 1412.69 L1039.12 1412.69 L1039.83 1412.69 L1040.54 1412.69 L1041.25 1412.69 L1041.95 1412.69 L1042.66 1412.69 L1043.37 1412.69 L1044.08 1412.69 L1044.78 1412.69 L1045.49 1412.69 L1046.2 1412.69 L1046.91 1412.69 L1047.62 1412.69 L1048.32 1412.69 L1049.03 1412.69 L1049.74 1412.69 L1050.45 1412.69 L1051.15 1412.69 L1051.86 1412.69 L1052.57 1412.69 L1053.28 1412.69 L1053.99 1412.69 L1054.69 1412.69 L1055.4 1412.69 L1056.11 1412.69 L1056.82 1412.69 L1057.53 1412.69 L1058.23 1412.69 L1058.94 1412.69 L1059.65 1412.69 L1060.36 1412.69 L1061.06 1412.69 L1061.77 1412.69 L1062.48 1412.69 L1063.19 1412.69 L1063.9 1412.69 L1064.6 1412.69 L1065.31 1412.69 L1066.02 1412.69 L1066.73 1412.69 L1067.43 1412.69 L1068.14 1412.69 L1068.85 1412.69 L1069.56 1412.69 L1070.27 1412.69 L1070.97 1412.69 L1071.68 1412.69 L1072.39 1412.69 L1073.1 1412.69 L1073.8 1412.69 L1074.51 1412.69 L1075.22 1412.69 L1075.93 1412.69 L1076.64 1412.69 L1077.34 1412.69 L1078.05 1412.69 L1078.76 1412.69 L1079.47 1412.69 L1080.17 1412.69 L1080.88 1412.69 L1081.59 1412.69 L1082.3 1412.69 L1083.01 1412.69 L1083.71 1412.69 L1084.42 1412.69 L1085.13 1412.69 L1085.84 1412.69 L1086.54 1412.69 L1087.25 1412.69 L1087.96 1412.69 L1088.67 1412.69 L1089.38 1412.69 L1090.08 1412.69 L1090.79 1412.69 L1091.5 1412.69 L1092.21 1412.69 L1092.91 1412.69 L1093.62 1412.69 L1094.33 1412.69 L1095.04 1412.69 L1095.75 1412.69 L1096.45 1412.69 L1097.16 1412.69 L1097.87 1412.69 L1098.58 1412.69 L1099.28 1412.69 L1099.99 1412.69 L1100.7 1412.69 L1101.41 1412.69 L1102.12 1412.69 L1102.82 1412.69 L1103.53 1412.69 L1104.24 1412.69 L1104.95 1412.69 L1105.65 1412.69 L1106.36 1412.69 L1107.07 1412.69 L1107.78 1412.69 L1108.49 1412.69 L1109.19 1412.69 L1109.9 1412.69 L1110.61 1412.69 L1111.32 1412.69 L1112.02 1412.69 L1112.73 1412.69 L1113.44 1412.69 L1114.15 1412.69 L1114.86 1412.69 L1115.56 1412.69 L1116.27 1412.69 L1116.98 1412.69 L1117.69 1412.69 L1118.39 1412.69 L1119.1 1412.69 L1119.81 1412.69 L1120.52 1412.69 L1121.23 1412.69 L1121.93 1412.69 L1122.64 1412.69 L1123.35 1412.69 L1124.06 1412.69 L1124.76 1412.69 L1125.47 1412.69 L1126.18 1412.69 L1126.89 1412.69 L1127.6 1412.69 L1128.3 1412.69 L1129.01 1412.69 L1129.72 1412.69 L1130.43 1412.69 L1131.13 1412.69 L1131.84 1412.69 L1132.55 1412.69 L1133.26 1412.69 L1133.97 1412.69 L1134.67 1412.69 L1135.38 1412.69 L1136.09 1412.69 L1136.8 1412.69 L1137.51 1412.69 L1138.21 1412.69 L1138.92 1412.69 L1139.63 1412.69 L1140.34 1412.69 L1141.04 1412.69 L1141.75 1412.69 L1142.46 1412.69 L1143.17 1412.69 L1143.88 1412.69 L1144.58 1412.69 L1145.29 1412.69 L1146 1412.69 L1146.71 1412.69 L1147.41 1412.69 L1148.12 1412.69 L1148.83 1412.69 L1149.54 1412.69 L1150.25 1412.69 L1150.95 1412.69 L1151.66 1412.69 L1152.37 1412.69 L1153.08 1412.69 L1153.78 1412.69 L1154.49 1412.69 L1155.2 1412.69 L1155.91 1412.69 L1156.62 1412.69 L1157.32 1412.69 L1158.03 1412.69 L1158.74 1412.69 L1159.45 1412.69 L1160.15 1412.69 L1160.86 1412.69 L1161.57 1412.69 L1162.28 1412.69 L1162.99 1412.69 L1163.69 1412.69 L1164.4 1412.69 L1165.11 1412.69 L1165.82 1412.69 L1166.52 1412.69 L1167.23 1412.69 L1167.94 1412.69 L1168.65 1412.69 L1169.36 1412.69 L1170.06 1412.69 L1170.77 1412.69 L1171.48 1412.69 L1172.19 1412.69 L1172.89 1412.69 L1173.6 1412.69 L1174.31 1412.69 L1175.02 1412.69 L1175.73 1412.69 L1176.43 1412.69 L1177.14 1412.69 L1177.85 1412.69 L1178.56 1412.69 L1179.26 1412.69 L1179.97 1412.69 L1180.68 1412.69 L1181.39 1412.69 L1182.1 1412.69 L1182.8 1412.69 L1183.51 1412.69 L1184.22 1412.69 L1184.93 1412.69 L1185.63 1412.69 L1186.34 1412.69 L1187.05 1412.69 L1187.76 1412.69 L1188.47 1412.69 L1189.17 1412.69 L1189.88 1412.69 L1190.59 1412.69 L1191.3 1412.69 L1192 1412.69 L1192.71 1412.69 L1193.42 1412.69 L1194.13 1412.69 L1194.84 1412.69 L1195.54 1412.69 L1196.25 1412.69 L1196.96 1412.69 L1197.67 1412.69 L1198.37 1412.69 L1199.08 1412.69 L1199.79 1412.69 L1200.5 1412.69 L1201.21 1412.69 L1201.91 1412.69 L1202.62 1412.69 L1203.33 1412.69 L1204.04 1412.69 L1204.74 1412.69 L1205.45 1412.69 L1206.16 1412.69 L1206.87 1412.69 L1207.58 1412.69 L1208.28 1412.69 L1208.99 1412.69 L1209.7 1412.69 L1210.41 1412.69 L1211.12 1412.69 L1211.82 1412.69 L1212.53 1412.69 L1213.24 1412.69 L1213.95 1412.69 L1214.65 1412.69 L1215.36 1412.69 L1216.07 1412.69 L1216.78 1412.69 L1217.49 1412.69 L1218.19 1412.69 L1218.9 1412.69 L1219.61 1412.69 L1220.32 1412.69 L1221.02 1412.69 L1221.73 1412.69 L1222.44 1412.69 L1223.15 1412.69 L1223.86 1412.69 L1224.56 1412.69 L1225.27 1412.69 L1225.98 1412.69 L1226.69 1412.69 L1227.39 1412.69 L1228.1 1412.69 L1228.81 1412.69 L1229.52 1412.69 L1230.23 1412.69 L1230.93 1412.69 L1231.64 1412.69 L1232.35 1412.69 L1233.06 1412.69 L1233.76 1412.69 L1234.47 1412.69 L1235.18 1412.69 L1235.89 1412.69 L1236.6 1412.69 L1237.3 1412.69 L1238.01 1412.69 L1238.72 1412.69 L1239.43 1412.69 L1240.13 1412.69 L1240.84 1412.69 L1241.55 1412.69 L1242.26 1412.69 L1242.97 1412.69 L1243.67 1412.69 L1244.38 1412.69 L1245.09 1412.69 L1245.8 1412.69 L1246.5 1412.69 L1247.21 1412.69 L1247.92 1412.69 L1248.63 1412.69 L1249.34 1412.69 L1250.04 1412.69 L1250.75 1412.69 L1251.46 1412.69 L1252.17 1412.69 L1252.87 1412.69 L1253.58 1412.69 L1254.29 1412.69 L1255 1412.69 L1255.71 1412.69 L1256.41 1412.69 L1257.12 1412.69 L1257.83 1412.69 L1258.54 1412.69 L1259.24 1412.69 L1259.95 1412.69 L1260.66 1412.69 L1261.37 1412.69 L1262.08 1412.69 L1262.78 1412.69 L1263.49 1412.69 L1264.2 1412.69 L1264.91 1412.69 L1265.61 1412.69 L1266.32 1412.69 L1267.03 1412.69 L1267.74 1412.69 L1268.45 1412.69 L1269.15 1412.69 L1269.86 1412.69 L1270.57 1412.69 L1271.28 1412.69 L1271.98 1412.69 L1272.69 1412.69 L1273.4 1412.69 L1274.11 1412.69 L1274.82 1412.69 L1275.52 1412.69 L1276.23 1412.69 L1276.94 1412.69 L1277.65 1412.69 L1278.35 1412.69 L1279.06 1412.69 L1279.77 1412.69 L1280.48 1412.69 L1281.19 1412.69 L1281.89 1412.69 L1282.6 1412.69 L1283.31 1412.69 L1284.02 1412.69 L1284.72 1412.69 L1285.43 1412.69 L1286.14 1412.69 L1286.85 1412.69 L1287.56 1412.69 L1288.26 1412.69 L1288.97 1412.69 L1289.68 1412.69 L1290.39 1412.69 L1291.1 1412.69 L1291.8 1412.69 L1292.51 1412.69 L1293.22 1412.69 L1293.93 1412.69 L1294.63 1412.69 L1295.34 1412.69 L1296.05 1412.69 L1296.76 1412.69 L1297.47 1412.69 L1298.17 1412.69 L1298.88 1412.69 L1299.59 1412.69 L1300.3 1412.69 L1301 1412.69 L1301.71 1412.69 L1302.42 1412.69 L1303.13 1412.69 L1303.84 1412.69 L1304.54 1412.69 L1305.25 1412.69 L1305.96 1412.69 L1306.67 1412.69 L1307.37 1412.69 L1308.08 1412.69 L1308.79 1412.69 L1309.5 1412.69 L1310.21 1412.69 L1310.91 1412.69 L1311.62 1412.69 L1312.33 1412.69 L1313.04 1412.69 L1313.74 1412.69 L1314.45 1412.69 L1315.16 1412.69 L1315.87 1412.69 L1316.58 1412.69 L1317.28 1412.69 L1317.99 1412.69 L1318.7 1412.69 L1319.41 1412.69 L1320.11 1412.69 L1320.82 1412.69 L1321.53 1412.69 L1322.24 1412.69 L1322.95 1412.69 L1323.65 1412.69 L1324.36 1412.69 L1325.07 1412.69 L1325.78 1412.69 L1326.48 1412.69 L1327.19 1412.69 L1327.9 1412.69 L1328.61 1412.69 L1329.32 1412.69 L1330.02 1412.69 L1330.73 1412.69 L1331.44 1412.69 L1332.15 1412.69 L1332.85 1412.69 L1333.56 1412.69 L1334.27 1412.69 L1334.98 1412.69 L1335.69 1412.69 L1336.39 1412.69 L1337.1 1412.69 L1337.81 1412.69 L1338.52 1412.69 L1339.22 1412.69 L1339.93 1412.69 L1340.64 1412.69 L1341.35 1412.69 L1342.06 1412.69 L1342.76 1412.69 L1343.47 1412.69 L1344.18 1412.69 L1344.89 1412.69 L1345.59 1412.69 L1346.3 1412.69 L1347.01 1412.69 L1347.72 1412.69 L1348.43 1412.69 L1349.13 1412.69 L1349.84 1412.69 L1350.55 1412.69 L1351.26 1412.69 L1351.96 1412.69 L1352.67 1412.69 L1353.38 1412.69 L1354.09 1412.69 L1354.8 1412.69 L1355.5 1412.69 L1356.21 1412.69 L1356.92 1412.69 L1357.63 1412.69 L1358.33 1412.69 L1359.04 1412.69 L1359.75 1412.69 L1360.46 1412.69 L1361.17 1412.69 L1361.87 1412.69 L1362.58 1412.69 L1363.29 1412.69 L1364 1412.69 L1364.71 1412.69 L1365.41 1412.69 L1366.12 1412.69 L1366.83 1412.69 L1367.54 1412.69 L1368.24 1412.69 L1368.95 1412.69 L1369.66 1412.69 L1370.37 1412.69 L1371.08 1412.69 L1371.78 1412.69 L1372.49 1412.69 L1373.2 1412.69 L1373.91 1412.69 L1374.61 1412.69 L1375.32 1412.69 L1376.03 1412.69 L1376.74 1412.69 L1377.45 1412.69 L1378.15 1412.69 L1378.86 1412.69 L1379.57 1412.69 L1380.28 1412.69 L1380.98 1412.69 L1381.69 1412.69 L1382.4 1412.69 L1383.11 1412.69 L1383.82 1412.69 L1384.52 1412.69 L1385.23 1412.69 L1385.94 1412.69 L1386.65 1412.69 L1387.35 1412.69 L1388.06 1412.69 L1388.77 1412.69 L1389.48 1412.69 L1390.19 1412.69 L1390.89 1412.69 L1391.6 1412.69 L1392.31 1412.69 L1393.02 1412.69 L1393.72 1412.69 L1394.43 1412.69 L1395.14 1412.69 L1395.85 1412.69 L1396.56 1412.69 L1397.26 1412.69 L1397.97 1412.69 L1398.68 1412.69 L1399.39 1412.69 L1400.09 1412.69 L1400.8 1412.69 L1401.51 1412.69 L1402.22 1412.69 L1402.93 1412.69 L1403.63 1412.69 L1404.34 1412.69 L1405.05 1412.69 L1405.76 1412.69 L1406.46 1412.69 L1407.17 1412.69 L1407.88 1412.69 L1408.59 1412.69 L1409.3 1412.69 L1410 1412.69 L1410.71 1412.69 L1411.42 1412.69 L1412.13 1412.69 L1412.83 1412.69 L1413.54 1412.69 L1414.25 1412.69 L1414.96 1412.69 L1415.67 1412.69 L1416.37 1412.69 L1417.08 1412.69 L1417.79 1412.69 L1418.5 1412.69 L1419.2 1412.69 L1419.91 1412.69 L1420.62 1412.69 L1421.33 1412.69 L1422.04 1412.69 L1422.74 1412.69 L1423.45 1412.69 L1424.16 1412.69 L1424.87 1412.69 L1425.57 1412.69 L1426.28 1412.69 L1426.99 1412.69 L1427.7 1412.69 L1428.41 1412.69 L1429.11 1412.69 L1429.82 1412.69 L1430.53 1412.69 L1431.24 1412.69 L1431.94 1412.69 L1432.65 1412.69 L1433.36 1412.69 L1434.07 1412.69 L1434.78 1412.69 L1435.48 1412.69 L1436.19 1412.69 L1436.9 1412.69 L1437.61 1412.69 L1438.31 1412.69 L1439.02 1412.69 L1439.73 1412.69 L1440.44 1412.69 L1441.15 1412.69 L1441.85 1412.69 L1442.56 1412.69 L1443.27 1412.69 L1443.98 1412.69 L1444.69 1412.69 L1445.39 1412.69 L1446.1 1412.69 L1446.81 1412.69 L1447.52 1412.69 L1448.22 1412.69 L1448.93 1412.69 L1449.64 1412.69 L1450.35 1412.69 L1451.06 1412.69 L1451.76 1412.69 L1452.47 1412.69 L1453.18 1412.69 L1453.89 1412.69 L1454.59 1412.69 L1455.3 1412.69 L1456.01 1412.69 L1456.72 1412.69 L1457.43 1412.69 L1458.13 1412.69 L1458.84 1412.69 L1459.55 1412.69 L1460.26 1412.69 L1460.96 1412.69 L1461.67 1412.69 L1462.38 1412.69 L1463.09 1412.69 L1463.8 1412.69 L1464.5 1412.69 L1465.21 1412.69 L1465.92 1412.69 L1466.63 1412.69 L1467.33 1412.69 L1468.04 1412.69 L1468.75 1412.69 L1469.46 1412.69 L1470.17 1412.69 L1470.87 1412.69 L1471.58 1412.69 L1472.29 1412.69 L1473 1412.69 L1473.7 1412.69 L1474.41 1412.69 L1475.12 1412.69 L1475.83 1412.69 L1476.54 1412.69 L1477.24 1412.69 L1477.95 1412.69 L1478.66 1412.69 L1479.37 1412.69 L1480.07 1412.69 L1480.78 1412.69 L1481.49 1412.69 L1482.2 1412.69 L1482.91 1412.69 L1483.61 1412.69 L1484.32 1412.69 L1485.03 1412.69 L1485.74 1412.69 L1486.44 1412.69 L1487.15 1412.69 L1487.86 1412.69 L1488.57 1412.69 L1489.28 1412.69 L1489.98 1412.69 L1490.69 1412.69 L1491.4 1412.69 L1492.11 1412.69 L1492.81 1412.69 L1493.52 1412.69 L1494.23 1412.69 L1494.94 1412.69 L1495.65 1412.69 L1496.35 1412.69 L1497.06 1412.69 L1497.77 1412.69 L1498.48 1412.69 L1499.18 1412.69 L1499.89 1412.69 L1500.6 1412.69 L1501.31 1412.69 L1502.02 1412.69 L1502.72 1412.69 L1503.43 1412.69 L1504.14 1412.69 L1504.85 1412.69 L1505.55 1412.69 L1506.26 1412.69 L1506.97 1412.69 L1507.68 1412.69 L1508.39 1412.69 L1509.09 1412.69 L1509.8 1412.69 L1510.51 1412.69 L1511.22 1412.69 L1511.92 1412.69 L1512.63 1412.69 L1513.34 1412.69 L1514.05 1412.69 L1514.76 1412.69 L1515.46 1412.69 L1516.17 1412.69 L1516.88 1412.69 L1517.59 1412.69 L1518.3 1412.69 L1519 1412.69 L1519.71 1412.69 L1520.42 1412.69 L1521.13 1412.69 L1521.83 1412.69 L1522.54 1412.69 L1523.25 1412.69 L1523.96 1412.69 L1524.67 1412.69 L1525.37 1412.69 L1526.08 1412.69 L1526.79 1412.69 L1527.5 1412.69 L1528.2 1412.69 L1528.91 1412.69 L1529.62 1412.69 L1530.33 1412.69 L1531.04 1412.69 L1531.74 1412.69 L1532.45 1412.69 L1533.16 1412.69 L1533.87 1412.69 L1534.57 1412.69 L1535.28 1412.69 L1535.99 1412.69 L1536.7 1412.69 L1537.41 1412.69 L1538.11 1412.69 L1538.82 1412.69 L1539.53 1412.69 L1540.24 1412.69 L1540.94 1412.69 L1541.65 1412.69 L1542.36 1412.69 L1543.07 1412.69 L1543.78 1412.69 L1544.48 1412.69 L1545.19 1412.69 L1545.9 1412.69 L1546.61 1412.69 L1547.31 1412.69 L1548.02 1412.69 L1548.73 1412.69 L1549.44 1412.69 L1550.15 1412.69 L1550.85 1412.69 L1551.56 1412.69 L1552.27 1412.69 L1552.98 1412.69 L1553.68 1412.69 L1554.39 1412.69 L1555.1 1412.69 L1555.81 1412.69 L1556.52 1412.69 L1557.22 1412.69 L1557.93 1412.69 L1558.64 1412.69 L1559.35 1412.69 L1560.05 1412.69 L1560.76 1412.69 L1561.47 1412.69 L1562.18 1412.69 L1562.89 1412.69 L1563.59 1412.69 L1564.3 1412.69 L1565.01 1412.69 L1565.72 1412.69 L1566.42 1412.69 L1567.13 1412.69 L1567.84 1412.69 L1568.55 1412.69 L1569.26 1412.69 L1569.96 1412.69 L1570.67 1412.69 L1571.38 1412.69 L1572.09 1412.69 L1572.79 1412.69 L1573.5 1412.69 L1574.21 1412.69 L1574.92 1412.69 L1575.63 1412.69 L1576.33 1412.69 L1577.04 1412.69 L1577.75 1412.69 L1578.46 1412.69 L1579.16 1412.69 L1579.87 1412.69 L1580.58 1412.69 L1581.29 1412.69 L1582 1412.69 L1582.7 1412.69 L1583.41 1412.69 L1584.12 1412.69 L1584.83 1412.69 L1585.53 1412.69 L1586.24 1412.69 L1586.95 1412.69 L1587.66 1412.69 L1588.37 1412.69 L1589.07 1412.69 L1589.78 1412.69 L1590.49 1412.69 L1591.2 1412.69 L1591.9 1412.69 L1592.61 1412.69 L1593.32 1412.69 L1594.03 1412.69 L1594.74 1412.69 L1595.44 1412.69 L1596.15 1412.69 L1596.86 1412.69 L1597.57 1412.69 L1598.28 1412.69 L1598.98 1412.69 L1599.69 1412.69 L1600.4 1412.69 L1601.11 1412.69 L1601.81 1412.69 L1602.52 1412.69 L1603.23 1412.69 L1603.94 1412.69 L1604.65 1412.69 L1605.35 1412.69 L1606.06 1412.69 L1606.77 1412.69 L1607.48 1412.69 L1608.18 1412.69 L1608.89 1412.69 L1609.6 1412.69 L1610.31 1412.69 L1611.02 1412.69 L1611.72 1412.69 L1612.43 1412.69 L1613.14 1412.69 L1613.85 1412.69 L1614.55 1412.69 L1615.26 1412.69 L1615.97 1412.69 L1616.68 1412.69 L1617.39 1412.69 L1618.09 1412.69 L1618.8 1412.69 L1619.51 1412.69 L1620.22 1412.69 L1620.92 1412.69 L1621.63 1412.69 L1622.34 1412.69 L1623.05 1412.69 L1623.76 1412.69 L1624.46 1412.69 L1625.17 1412.69 L1625.88 1412.69 L1626.59 1412.69 L1627.29 1412.69 L1628 1412.69 L1628.71 1412.69 L1629.42 1412.69 L1630.13 1412.69 L1630.83 1412.69 L1631.54 1412.69 L1632.25 1412.69 L1632.96 1412.69 L1633.66 1412.69 L1634.37 1412.69 L1635.08 1412.69 L1635.79 1412.69 L1636.5 1412.69 L1637.2 1412.69 L1637.91 1412.69 L1638.62 1412.69 L1639.33 1412.69 L1640.03 1412.69 L1640.74 1412.69 L1641.45 1412.69 L1642.16 1412.69 L1642.87 1412.69 L1643.57 1412.69 L1644.28 1412.69 L1644.99 1412.69 L1645.7 1412.69 L1646.4 1412.69 L1647.11 1412.69 L1647.82 1412.69 L1648.53 1412.69 L1649.24 1412.69 L1649.94 1412.69 L1650.65 1412.69 L1651.36 1412.69 L1652.07 1412.69 L1652.77 1412.69 L1653.48 1412.69 L1654.19 1412.69 L1654.9 1412.69 L1655.61 1412.69 L1656.31 1412.69 L1657.02 1412.69 L1657.73 1412.69 L1658.44 1412.69 L1659.14 1412.69 L1659.85 1412.69 L1660.56 1412.69 L1661.27 1412.69 L1661.98 1412.69 L1662.68 1412.69 L1663.39 1412.69 L1664.1 1412.69 L1664.81 1412.69 L1665.51 1412.69 L1666.22 1412.69 L1666.93 1412.69 L1667.64 1412.69 L1668.35 1412.69 L1669.05 1412.69 L1669.76 1412.69 L1670.47 1412.69 L1671.18 1412.69 L1671.89 1412.69 L1672.59 1412.69 L1673.3 1412.69 L1674.01 1412.69 L1674.72 1412.69 L1675.42 1412.69 L1676.13 1412.69 L1676.84 1412.69 L1677.55 1412.69 L1678.26 1412.69 L1678.96 1412.69 L1679.67 1412.69 L1680.38 1412.69 L1681.09 1412.69 L1681.79 1412.69 L1682.5 1412.69 L1683.21 1412.69 L1683.92 1412.69 L1684.63 1412.69 L1685.33 1412.69 L1686.04 1412.69 L1686.75 1412.69 L1687.46 1412.69 L1688.16 1412.69 L1688.87 1412.69 L1689.58 1412.69 L1690.29 1412.69 L1691 1412.69 L1691.7 1412.69 L1692.41 1412.69 L1693.12 1412.69 L1693.83 1412.69 L1694.53 1412.69 L1695.24 1412.69 L1695.95 1412.69 L1696.66 1412.69 L1697.37 1412.69 L1698.07 1412.69 L1698.78 1412.69 L1699.49 1412.69 L1700.2 1412.69 L1700.9 1412.69 L1701.61 1412.69 L1702.32 1412.69 L1703.03 1412.69 L1703.74 1412.69 L1704.44 1412.69 L1705.15 1412.69 L1705.86 1412.69 L1706.57 1412.69 L1707.27 1412.69 L1707.98 1412.69 L1708.69 1412.69 L1709.4 1412.69 L1710.11 1412.69 L1710.81 1412.69 L1711.52 1412.69 L1712.23 1412.69 L1712.94 1412.69 L1713.64 1412.69 L1714.35 1412.69 L1715.06 1412.69 L1715.77 1412.69 L1716.48 1412.69 L1717.18 1412.69 L1717.89 1412.69 L1718.6 1412.69 L1719.31 1412.69 L1720.01 1412.69 L1720.72 1412.69 L1721.43 1412.69 L1722.14 1412.69 L1722.85 1412.69 L1723.55 1412.69 L1724.26 1412.69 L1724.97 1412.69 L1725.68 1412.69 L1726.38 1412.69 L1727.09 1412.69 L1727.8 1412.69 L1728.51 1412.69 L1729.22 1412.69 L1729.92 1412.69 L1730.63 1412.69 L1731.34 1412.69 L1732.05 1412.69 L1732.75 1412.69 L1733.46 1412.69 L1734.17 1412.69 L1734.88 1412.69 L1735.59 1412.69 L1736.29 1412.69 L1737 1412.69 L1737.71 1412.69 L1738.42 1412.69 L1739.12 1412.69 L1739.83 1412.69 L1740.54 1412.69 L1741.25 1412.69 L1741.96 1412.69 L1742.66 1412.69 L1743.37 1412.69 L1744.08 1412.69 L1744.79 1412.69 L1745.49 1412.69 L1746.2 1412.69 L1746.91 1412.69 L1747.62 1412.69 L1748.33 1412.69 L1749.03 1412.69 L1749.74 1412.69 L1750.45 1412.69 L1751.16 1412.69 L1751.87 1412.69 L1752.57 1412.69 L1753.28 1412.69 L1753.99 1412.69 L1754.7 1412.69 L1755.4 1412.69 L1756.11 1412.69 L1756.82 1412.69 L1757.53 1412.69 L1758.24 1412.69 L1758.94 1412.69 L1759.65 1412.69 L1760.36 1412.69 L1761.07 1412.69 L1761.77 1412.69 L1762.48 1412.69 L1763.19 1412.69 L1763.9 1412.69 L1764.61 1412.69 L1765.31 1412.69 L1766.02 1412.69 L1766.73 1412.69 L1767.44 1412.69 L1768.14 1412.69 L1768.85 1412.69 L1769.56 1412.69 L1770.27 1412.69 L1770.98 1412.69 L1771.68 1412.69 L1772.39 1412.69 L1773.1 1412.69 L1773.81 1412.69 L1774.51 1412.69 L1775.22 1412.69 L1775.93 1412.69 L1776.64 1412.69 L1777.35 1412.69 L1778.05 1412.69 L1778.76 1412.69 L1779.47 1412.69 L1780.18 1412.69 L1780.88 1412.69 L1781.59 1412.69 L1782.3 1412.69 L1783.01 1412.69 L1783.72 1412.69 L1784.42 1412.69 L1785.13 1412.69 L1785.84 1412.69 L1786.55 1412.69 L1787.25 1412.69 L1787.96 1412.69 L1788.67 1412.69 L1789.38 1412.69 L1790.09 1412.69 L1790.79 1412.69 L1791.5 1412.69 L1792.21 1412.69 L1792.92 1412.69 L1793.62 1412.69 L1794.33 1412.69 L1795.04 1412.69 L1795.75 1412.69 L1796.46 1412.69 L1797.16 1412.69 L1797.87 1412.69 L1798.58 1412.69 L1799.29 1412.69 L1799.99 1412.69 L1800.7 1412.69 L1801.41 1412.69 L1802.12 1412.69 L1802.83 1412.69 L1803.53 1412.69 L1804.24 1412.69 L1804.95 1412.69 L1805.66 1412.69 L1806.36 1412.69 L1807.07 1412.69 L1807.78 1412.69 L1808.49 1412.69 L1809.2 1412.69 L1809.9 1412.69 L1810.61 1412.69 L1811.32 1412.69 L1812.03 1412.69 L1812.73 1412.69 L1813.44 1412.69 L1814.15 1412.69 L1814.86 1412.69 L1815.57 1412.69 L1816.27 1412.69 L1816.98 1412.69 L1817.69 1412.69 L1818.4 1412.69 L1819.1 1412.69 L1819.81 1412.69 L1820.52 1412.69 L1821.23 1412.69 L1821.94 1412.69 L1822.64 1412.69 L1823.35 1412.69 L1824.06 1412.69 L1824.77 1412.69 L1825.48 1412.69 L1826.18 1412.69 L1826.89 1412.69 L1827.6 1412.69 L1828.31 1412.69 L1829.01 1412.69 L1829.72 1412.69 L1830.43 1412.69 L1831.14 1412.69 L1831.85 1412.69 L1832.55 1412.69 L1833.26 1412.69 L1833.97 1412.69 L1834.68 1412.69 L1835.38 1412.69 L1836.09 1412.69 L1836.8 1412.69 L1837.51 1412.69 L1838.22 1412.69 L1838.92 1412.69 L1839.63 1412.69 L1840.34 1412.69 L1841.05 1412.69 L1841.75 1412.69 L1842.46 1412.69 L1843.17 1412.69 L1843.88 1412.69 L1844.59 1412.69 L1845.29 1412.69 L1846 1412.69 L1846.71 1412.69 L1847.42 1412.69 L1848.12 1412.69 L1848.83 1412.69 L1849.54 1412.69 L1850.25 1412.69 L1850.96 1412.69 L1851.66 1412.69 L1852.37 1412.69 L1853.08 1412.69 L1853.79 1412.69 L1854.49 1412.69 L1855.2 1412.69 L1855.91 1412.69 L1856.62 1412.69 L1857.33 1412.69 L1858.03 1412.69 L1858.74 1412.69 L1859.45 1412.69 L1860.16 1412.69 L1860.86 1412.69 L1861.57 1412.69 L1862.28 1412.69 L1862.99 1412.69 L1863.7 1412.69 L1864.4 1412.69 L1865.11 1412.69 L1865.82 1412.69 L1866.53 1412.69 L1867.23 1412.69 L1867.94 1412.69 L1868.65 1412.69 L1869.36 1412.69 L1870.07 1412.69 L1870.77 1412.69 L1871.48 1412.69 L1872.19 1412.69 L1872.9 1412.69 L1873.6 1412.69 L1874.31 1412.69 L1875.02 1412.69 L1875.73 1412.69 L1876.44 1412.69 L1877.14 1412.69 L1877.85 1412.69 L1878.56 1412.69 L1879.27 1412.69 L1879.97 1412.69 L1880.68 1412.69 L1881.39 1412.69 L1882.1 1412.69 L1882.81 1412.69 L1883.51 1412.69 L1884.22 1412.69 L1884.93 1412.69 L1885.64 1412.69 L1886.34 1412.69 L1887.05 1412.69 L1887.76 1412.69 L1888.47 1412.69 L1889.18 1412.69 L1889.88 1412.69 L1890.59 1412.69 L1891.3 1412.69 L1892.01 1412.69 L1892.71 1412.69 L1893.42 1412.69 L1894.13 1412.69 L1894.84 1412.69 L1895.55 1412.69 L1896.25 1412.69 L1896.96 1412.69 L1897.67 1412.69 L1898.38 1412.69 L1899.08 1412.69 L1899.79 1412.69 L1900.5 1412.69 L1901.21 1412.69 L1901.92 1412.69 L1902.62 1412.69 L1903.33 1412.69 L1904.04 1412.69 L1904.75 1412.69 L1905.46 1412.69 L1906.16 1412.69 L1906.87 1412.69 L1907.58 1412.69 L1908.29 1412.69 L1908.99 1412.69 L1909.7 1412.69 L1910.41 1412.69 L1911.12 1412.69 L1911.83 1412.69 L1912.53 1412.69 L1913.24 1412.69 L1913.95 1412.69 L1914.66 1412.69 L1915.36 1412.69 L1916.07 1412.69 L1916.78 1412.69 L1917.49 1412.69 L1918.2 1412.69 L1918.9 1412.69 L1919.61 1412.69 L1920.32 1412.69 L1921.03 1412.69 L1921.73 1412.69 L1922.44 1412.69 L1923.15 1412.69 L1923.86 1412.69 L1924.57 1412.69 L1925.27 1412.69 L1925.98 1412.69 L1926.69 1412.69 L1927.4 1412.69 L1928.1 1412.69 L1928.81 1412.69 L1929.52 1412.69 L1930.23 1412.69 L1930.94 1412.69 L1931.64 1412.69 L1932.35 1412.69 L1933.06 1412.69 L1933.77 1412.69 L1934.47 1412.69 L1935.18 1412.69 L1935.89 1412.69 L1936.6 1412.69 L1937.31 1412.69 L1938.01 1412.69 L1938.72 1412.69 L1939.43 1412.69 L1940.14 1412.69 L1940.84 1412.69 L1941.55 1412.69 L1942.26 1412.69 L1942.97 1412.69 L1943.68 1412.69 L1944.38 1412.69 L1945.09 1412.69 L1945.8 1412.69 L1946.51 1412.69 L1947.21 1412.69 L1947.92 1412.69 L1948.63 1412.69 L1949.34 1412.69 L1950.05 1412.69 L1950.75 1412.69 L1951.46 1412.69 L1952.17 1412.69 L1952.88 1412.69 L1953.58 1412.69 L1954.29 1412.69 L1955 1412.69 L1955.71 1412.69 L1956.42 1412.69 L1957.12 1412.69 L1957.83 1412.69 L1958.54 1412.69 L1959.25 1412.69 L1959.95 1412.69 L1960.66 1412.69 L1961.37 1412.69 L1962.08 1412.69 L1962.79 1412.69 L1963.49 1412.69 L1964.2 1412.69 L1964.91 1412.69 L1965.62 1412.69 L1966.32 1412.69 L1967.03 1412.69 L1967.74 1412.69 L1968.45 1412.69 L1969.16 1412.69 L1969.86 1412.69 L1970.57 1412.69 L1971.28 1412.69 L1971.99 1412.69 L1972.69 1412.69 L1973.4 1412.69 L1974.11 1412.69 L1974.82 1412.69 L1975.53 1412.69 L1976.23 1412.69 L1976.94 1412.69 L1977.65 1412.69 L1978.36 1412.69 L1979.07 1412.69 L1979.77 1412.69 L1980.48 1412.69 L1981.19 1412.69 L1981.9 1412.69 L1982.6 1412.69 L1983.31 1412.69 L1984.02 1412.69 L1984.73 1412.69 L1985.44 1412.69 L1986.14 1412.69 L1986.85 1412.69 L1987.56 1412.69 L1988.27 1412.69 L1988.97 1412.69 L1989.68 1412.69 L1990.39 1412.69 L1991.1 1412.69 L1991.81 1412.69 L1992.51 1412.69 L1993.22 1412.69 L1993.93 1412.69 L1994.64 1412.69 L1995.34 1412.69 L1996.05 1412.69 L1996.76 1412.69 L1997.47 1412.69 L1998.18 1412.69 L1998.88 1412.69 L1999.59 1412.69 L2000.3 1412.69 L2001.01 1412.69 L2001.71 1412.69 L2002.42 1412.69 L2003.13 1412.69 L2003.84 1412.69 L2004.55 1412.69 L2005.25 1412.69 L2005.96 1412.69 L2006.67 1412.69 L2007.38 1412.69 L2008.08 1412.69 L2008.79 1412.69 L2009.5 1412.69 L2010.21 1412.69 L2010.92 1412.69 L2011.62 1412.69 L2012.33 1412.69 L2013.04 1412.69 L2013.75 1412.69 L2014.45 1412.69 L2015.16 1412.69 L2015.87 1412.69 L2016.58 1412.69 L2017.29 1412.69 L2017.99 1412.69 L2018.7 1412.69 L2019.41 1412.69 L2020.12 1412.69 L2020.82 1412.69 L2021.53 1412.69 L2022.24 1412.69 L2022.95 1412.69 L2023.66 1412.69 L2024.36 1412.69 L2025.07 1412.69 L2025.78 1412.69 L2026.49 1412.69 L2027.19 1412.69 L2027.9 1412.69 L2028.61 1412.69 L2029.32 1412.69 L2030.03 1412.69 L2030.73 1412.69 L2031.44 1412.69 L2032.15 1412.69 L2032.86 1412.69 L2033.56 1412.69 L2034.27 1412.69 L2034.98 1412.69 L2035.69 1412.69 L2036.4 1412.69 L2037.1 1412.69 L2037.81 1412.69 L2038.52 1412.69 L2039.23 1412.69 L2039.93 1412.69 L2040.64 1412.69 L2041.35 1412.69 L2042.06 1412.69 L2042.77 1412.69 L2043.47 1412.69 L2044.18 1412.69 L2044.89 1412.69 L2045.6 1412.69 L2046.3 1412.69 L2047.01 1412.69 L2047.72 1412.69 L2048.43 1412.69 L2049.14 1412.69 L2049.84 1412.69 L2050.55 1412.69 L2051.26 1412.69 L2051.97 1412.69 L2052.68 1412.69 L2053.38 1412.69 L2054.09 1412.69 L2054.8 1412.69 L2055.51 1412.69 L2056.21 1412.69 L2056.92 1412.69 L2057.63 1412.69 L2058.34 1412.69 L2059.05 1412.69 L2059.75 1412.69 L2060.46 1412.69 L2061.17 1412.69 L2061.88 1412.69 L2062.58 1412.69 L2063.29 1412.69 L2064 1412.69 L2064.71 1412.69 L2065.42 1412.69 L2066.12 1412.69 L2066.83 1412.69 L2067.54 1412.69 L2068.25 1412.69 L2068.95 1412.69 L2069.66 1412.69 L2070.37 1412.69 L2071.08 1412.69 L2071.79 1412.69 L2072.49 1412.69 L2073.2 1412.69 L2073.91 1412.69 L2074.62 1412.69 L2075.32 1412.69 L2076.03 1412.69 L2076.74 1412.69 L2077.45 1412.69 L2078.16 1412.69 L2078.86 1412.69 L2079.57 1412.69 L2080.28 1412.69 L2080.99 1412.69 L2081.69 1412.69 L2082.4 1412.69 L2083.11 1412.69 L2083.82 1412.69 L2084.53 1412.69 L2085.23 1412.69 L2085.94 1412.69 L2086.65 1412.69 L2087.36 1412.69 L2088.06 1412.69 L2088.77 1412.69 L2089.48 1412.69 L2090.19 1412.69 L2090.9 1412.69 L2091.6 1412.69 L2092.31 1412.69 L2093.02 1412.69 L2093.73 1412.69 L2094.43 1412.69 L2095.14 1412.69 L2095.85 1412.69 L2096.56 1412.69 L2097.27 1412.69 L2097.97 1412.69 L2098.68 1412.69 L2099.39 1412.69 L2100.1 1412.69 L2100.8 1412.69 L2101.51 1412.69 L2102.22 1412.69 L2102.93 1412.69 L2103.64 1412.69 L2104.34 1412.69 L2105.05 1412.69 L2105.76 1412.69 L2106.47 1412.69 L2107.17 1412.69 L2107.88 1412.69 L2108.59 1412.69 L2109.3 1412.69 L2110.01 1412.69 L2110.71 1412.69 L2111.42 1412.69 L2112.13 1412.69 L2112.84 1412.69 L2113.54 1412.69 L2114.25 1412.69 L2114.96 1412.69 L2115.67 1412.69 L2116.38 1412.69 L2117.08 1412.69 L2117.79 1412.69 L2118.5 1412.69 L2119.21 1412.69 L2119.91 1412.69 L2120.62 1412.69 L2121.33 1412.69 L2122.04 1412.69 L2122.75 1412.69 L2123.45 1412.69 L2124.16 1412.69 L2124.87 1412.69 L2125.58 1412.69 L2126.28 1412.69 L2126.99 1412.69 L2127.7 1412.69 L2128.41 1412.69 L2129.12 1412.69 L2129.82 1412.69 L2130.53 1412.69 L2131.24 1412.69 L2131.95 1412.69 L2132.66 1412.69 L2133.36 1412.69 L2134.07 1412.69 L2134.78 1412.69 L2135.49 1412.69 L2136.19 1412.69 L2136.9 1412.69 L2137.61 1412.69 L2138.32 1412.69 L2139.03 1412.69 L2139.73 1412.69 L2140.44 1412.69 L2141.15 1412.69 L2141.86 1412.69 L2142.56 1412.69 L2143.27 1412.69 L2143.98 1412.69 L2144.69 1412.69 L2145.4 1412.69 L2146.1 1412.69 L2146.81 1412.69 L2147.52 1412.69 L2148.23 1412.69 L2148.93 1412.69 L2149.64 1412.69 L2150.35 1412.69 L2151.06 1412.69 L2151.77 1412.69 L2152.47 1412.69 L2153.18 1412.69 L2153.89 1412.69 L2154.6 1412.69 L2155.3 1412.69 L2156.01 1412.69 L2156.72 1412.69 L2157.43 1412.69 L2158.14 1412.69 L2158.84 1412.69 L2159.55 1412.69 L2160.26 1412.69 L2160.97 1412.69 L2161.67 1412.69 L2162.38 1412.69 L2163.09 1412.69 L2163.8 1412.69 L2164.51 1412.69 L2165.21 1412.69 L2165.92 1412.69 L2166.63 1412.69 L2167.34 1412.69 L2168.04 1412.69 L2168.75 1412.69 L2169.46 1412.69 L2170.17 1412.69 L2170.88 1412.69 L2171.58 1412.69 L2172.29 1412.69 L2173 1412.69 L2173.71 1412.69 L2174.41 1412.69 L2175.12 1412.69 L2175.83 1412.69 L2176.54 1412.69 L2177.25 1412.69 L2177.95 1412.69 L2178.66 1412.69 L2179.37 1412.69 L2180.08 1412.69 L2180.78 1412.69 L2181.49 1412.69 L2182.2 1412.69 L2182.91 1412.69 L2183.62 1412.69 L2184.32 1412.69 L2185.03 1412.69 L2185.74 1412.69 L2186.45 1412.69 L2187.15 1412.69 L2187.86 1412.69 L2188.57 1412.69 L2189.28 1412.69 L2189.99 1412.69 L2190.69 1412.69 L2191.4 1412.69 L2192.11 1412.69 L2192.82 1412.69 L2193.52 1412.69 L2194.23 1412.69 L2194.94 1412.69 L2195.65 1412.69 L2196.36 1412.69 L2197.06 1412.69 L2197.77 1412.69 L2198.48 1412.69 L2199.19 1412.69 L2199.89 1412.69 L2200.6 1412.69 L2201.31 1412.69 L2202.02 1412.69 L2202.73 1412.69 L2203.43 1412.69 L2204.14 1412.69 L2204.85 1412.69 L2205.56 1412.69 L2206.27 1412.69 L2206.97 1412.69 L2207.68 1412.69 L2208.39 1412.69 L2209.1 1412.69 L2209.8 1412.69 L2210.51 1412.69 L2211.22 1412.69 L2211.93 1412.69 L2212.64 1412.69 L2213.34 1412.69 L2214.05 1412.69 L2214.76 1412.69 L2215.47 1412.69 L2216.17 1412.69 L2216.88 1412.69 L2217.59 1412.69 L2218.3 1412.69 L2219.01 1412.69 L2219.71 1412.69 L2220.42 1412.69 L2221.13 1412.69 L2221.84 1412.69 L2222.54 1412.69 L2223.25 1412.69 L2223.96 1412.69 L2224.67 1412.69 L2225.38 1412.69 L2226.08 1412.69 L2226.79 1412.69 L2227.5 1412.69 L2228.21 1412.69 L2228.91 1412.69 L2229.62 1412.69 L2230.33 1412.69 L2231.04 1412.69 L2231.75 1412.69 L2232.45 1412.69 L2233.16 1412.69 L2233.87 1412.69 L2234.58 1412.69 L2235.28 1412.69 L2235.99 1412.69 L2236.7 1412.69 L2237.41 1412.69 L2238.12 1412.69 L2238.82 1412.69 L2239.53 1412.69 L2240.24 1412.69 L2240.95 1412.69 L2241.65 1412.69 L2242.36 1412.69 L2243.07 1412.69 L2243.78 1412.69 L2244.49 1412.69 L2245.19 1412.69 L2245.9 1412.69 L2246.61 1412.69 L2247.32 1412.69 L2248.02 1412.69 L2248.73 1412.69 L2249.44 1412.69 L2250.15 1412.69 L2250.86 1412.69 L2251.56 1412.69 L2252.27 1412.69 L2252.98 1412.69 L2253.69 1412.69 L2254.39 1412.69 L2255.1 1412.69 L2255.81 1412.69 L2256.52 1412.69 L2257.23 1412.69 L2257.93 1412.69 L2258.64 1412.69 L2259.35 1412.69 L2260.06 1412.69 L2260.76 1412.69 L2261.47 1412.69 L2262.18 1412.69 L2262.89 1412.69 L2263.6 1412.69 L2264.3 1412.69 L2265.01 1412.69 L2265.72 1412.69 L2266.43 1412.69 L2267.13 1412.69 L2267.84 1412.69 L2268.55 1412.69 L2269.26 1412.69 L2269.97 1412.69 L2270.67 1412.69 L2271.38 1412.69 L2272.09 1412.69 L2272.8 1412.69 L2273.5 1412.69 L2274.21 1412.69 L2274.92 1412.69 L2275.63 1412.69 L2276.34 1412.69 L2277.04 1412.69 L2277.75 1412.69 L2278.46 1412.69 L2279.17 1412.69 L2279.87 1412.69 L2280.58 1412.69 L2281.29 1412.69 L2282 1412.69 L2282.71 1412.69 L2283.41 1412.69 L2284.12 1412.69 L2284.83 1412.69 L2285.54 1412.69 L2286.25 1412.69 L2286.95 1412.69 L2287.66 1412.69 L2288.37 1412.69 L2289.08 1412.69 L2289.08 1411.52 L2288.37 1411.52 L2287.66 1411.52 L2286.95 1411.52 L2286.25 1411.52 L2285.54 1411.52 L2284.83 1411.52 L2284.12 1411.52 L2283.41 1411.52 L2282.71 1411.52 L2282 1411.52 L2281.29 1411.52 L2280.58 1411.52 L2279.87 1411.52 L2279.17 1411.52 L2278.46 1411.52 L2277.75 1411.52 L2277.04 1411.52 L2276.34 1411.52 L2275.63 1411.52 L2274.92 1411.52 L2274.21 1411.52 L2273.5 1411.52 L2272.8 1411.52 L2272.09 1411.52 L2271.38 1411.52 L2270.67 1411.52 L2269.97 1411.52 L2269.26 1411.52 L2268.55 1411.52 L2267.84 1411.52 L2267.13 1411.52 L2266.43 1411.52 L2265.72 1411.52 L2265.01 1411.52 L2264.3 1411.52 L2263.6 1411.52 L2262.89 1411.52 L2262.18 1411.52 L2261.47 1411.52 L2260.76 1411.52 L2260.06 1411.52 L2259.35 1411.52 L2258.64 1411.52 L2257.93 1411.52 L2257.23 1411.52 L2256.52 1411.52 L2255.81 1411.52 L2255.1 1411.52 L2254.39 1411.52 L2253.69 1411.52 L2252.98 1411.52 L2252.27 1411.52 L2251.56 1411.52 L2250.86 1411.52 L2250.15 1411.52 L2249.44 1411.52 L2248.73 1411.52 L2248.02 1411.52 L2247.32 1411.52 L2246.61 1411.52 L2245.9 1411.52 L2245.19 1411.52 L2244.49 1411.52 L2243.78 1411.52 L2243.07 1411.52 L2242.36 1411.52 L2241.65 1411.52 L2240.95 1411.52 L2240.24 1411.52 L2239.53 1411.52 L2238.82 1411.52 L2238.12 1411.52 L2237.41 1411.52 L2236.7 1411.52 L2235.99 1411.52 L2235.28 1411.52 L2234.58 1411.52 L2233.87 1411.52 L2233.16 1411.52 L2232.45 1411.52 L2231.75 1411.52 L2231.04 1411.52 L2230.33 1411.52 L2229.62 1411.52 L2228.91 1411.52 L2228.21 1411.52 L2227.5 1411.52 L2226.79 1411.52 L2226.08 1411.52 L2225.38 1411.52 L2224.67 1411.52 L2223.96 1411.52 L2223.25 1411.52 L2222.54 1411.52 L2221.84 1411.52 L2221.13 1411.52 L2220.42 1411.52 L2219.71 1411.52 L2219.01 1411.52 L2218.3 1411.52 L2217.59 1411.52 L2216.88 1411.52 L2216.17 1411.52 L2215.47 1411.52 L2214.76 1411.52 L2214.05 1411.52 L2213.34 1411.52 L2212.64 1411.52 L2211.93 1411.52 L2211.22 1411.52 L2210.51 1411.52 L2209.8 1411.52 L2209.1 1411.52 L2208.39 1411.52 L2207.68 1411.52 L2206.97 1411.52 L2206.27 1411.52 L2205.56 1411.52 L2204.85 1411.52 L2204.14 1411.52 L2203.43 1411.52 L2202.73 1411.52 L2202.02 1411.52 L2201.31 1411.52 L2200.6 1411.52 L2199.89 1411.52 L2199.19 1411.52 L2198.48 1411.52 L2197.77 1411.52 L2197.06 1411.52 L2196.36 1411.52 L2195.65 1411.52 L2194.94 1411.52 L2194.23 1411.52 L2193.52 1411.52 L2192.82 1411.52 L2192.11 1411.52 L2191.4 1411.52 L2190.69 1411.52 L2189.99 1411.52 L2189.28 1411.52 L2188.57 1411.52 L2187.86 1411.52 L2187.15 1411.52 L2186.45 1411.52 L2185.74 1411.52 L2185.03 1411.52 L2184.32 1411.52 L2183.62 1411.52 L2182.91 1411.52 L2182.2 1411.52 L2181.49 1411.52 L2180.78 1411.52 L2180.08 1411.52 L2179.37 1411.52 L2178.66 1411.52 L2177.95 1411.52 L2177.25 1411.52 L2176.54 1411.52 L2175.83 1411.52 L2175.12 1411.52 L2174.41 1411.52 L2173.71 1411.52 L2173 1411.52 L2172.29 1411.52 L2171.58 1411.52 L2170.88 1411.52 L2170.17 1411.52 L2169.46 1411.52 L2168.75 1411.52 L2168.04 1411.52 L2167.34 1411.52 L2166.63 1411.52 L2165.92 1411.52 L2165.21 1411.52 L2164.51 1411.52 L2163.8 1411.52 L2163.09 1411.52 L2162.38 1411.52 L2161.67 1411.52 L2160.97 1411.52 L2160.26 1411.52 L2159.55 1411.52 L2158.84 1411.52 L2158.14 1411.52 L2157.43 1411.52 L2156.72 1411.52 L2156.01 1411.52 L2155.3 1411.52 L2154.6 1411.52 L2153.89 1411.52 L2153.18 1411.52 L2152.47 1411.52 L2151.77 1411.52 L2151.06 1411.52 L2150.35 1411.52 L2149.64 1411.52 L2148.93 1411.52 L2148.23 1411.52 L2147.52 1411.52 L2146.81 1411.52 L2146.1 1411.52 L2145.4 1411.52 L2144.69 1411.52 L2143.98 1411.52 L2143.27 1411.52 L2142.56 1411.52 L2141.86 1411.52 L2141.15 1411.52 L2140.44 1411.52 L2139.73 1411.52 L2139.03 1411.52 L2138.32 1411.52 L2137.61 1411.52 L2136.9 1411.52 L2136.19 1411.52 L2135.49 1411.52 L2134.78 1411.52 L2134.07 1411.52 L2133.36 1411.52 L2132.66 1411.52 L2131.95 1411.52 L2131.24 1411.52 L2130.53 1411.52 L2129.82 1411.52 L2129.12 1411.52 L2128.41 1411.52 L2127.7 1411.52 L2126.99 1411.52 L2126.28 1411.52 L2125.58 1411.52 L2124.87 1411.52 L2124.16 1411.52 L2123.45 1411.52 L2122.75 1411.52 L2122.04 1411.52 L2121.33 1411.52 L2120.62 1411.52 L2119.91 1411.52 L2119.21 1411.52 L2118.5 1411.52 L2117.79 1411.52 L2117.08 1411.52 L2116.38 1411.52 L2115.67 1411.52 L2114.96 1411.52 L2114.25 1411.52 L2113.54 1411.52 L2112.84 1411.52 L2112.13 1411.52 L2111.42 1411.52 L2110.71 1411.52 L2110.01 1411.52 L2109.3 1411.52 L2108.59 1411.52 L2107.88 1411.52 L2107.17 1411.52 L2106.47 1411.52 L2105.76 1411.52 L2105.05 1411.52 L2104.34 1411.52 L2103.64 1411.52 L2102.93 1411.52 L2102.22 1411.52 L2101.51 1411.52 L2100.8 1411.52 L2100.1 1411.52 L2099.39 1411.52 L2098.68 1411.52 L2097.97 1411.52 L2097.27 1411.52 L2096.56 1411.52 L2095.85 1411.52 L2095.14 1411.52 L2094.43 1411.52 L2093.73 1411.52 L2093.02 1411.52 L2092.31 1411.52 L2091.6 1411.52 L2090.9 1411.52 L2090.19 1411.52 L2089.48 1411.52 L2088.77 1411.52 L2088.06 1411.52 L2087.36 1411.52 L2086.65 1411.52 L2085.94 1411.52 L2085.23 1411.52 L2084.53 1411.52 L2083.82 1411.52 L2083.11 1411.52 L2082.4 1411.52 L2081.69 1411.52 L2080.99 1411.52 L2080.28 1411.52 L2079.57 1411.52 L2078.86 1411.52 L2078.16 1411.52 L2077.45 1411.52 L2076.74 1411.52 L2076.03 1411.52 L2075.32 1411.52 L2074.62 1411.52 L2073.91 1411.52 L2073.2 1411.52 L2072.49 1411.52 L2071.79 1411.52 L2071.08 1411.52 L2070.37 1411.52 L2069.66 1411.52 L2068.95 1411.52 L2068.25 1411.52 L2067.54 1411.52 L2066.83 1411.52 L2066.12 1411.52 L2065.42 1411.52 L2064.71 1411.52 L2064 1411.52 L2063.29 1411.52 L2062.58 1411.52 L2061.88 1411.52 L2061.17 1411.52 L2060.46 1411.52 L2059.75 1411.52 L2059.05 1411.52 L2058.34 1411.52 L2057.63 1411.52 L2056.92 1411.52 L2056.21 1411.52 L2055.51 1411.52 L2054.8 1411.52 L2054.09 1411.52 L2053.38 1411.52 L2052.68 1411.52 L2051.97 1411.52 L2051.26 1411.52 L2050.55 1411.52 L2049.84 1411.52 L2049.14 1411.52 L2048.43 1411.52 L2047.72 1411.52 L2047.01 1411.52 L2046.3 1411.52 L2045.6 1411.52 L2044.89 1411.52 L2044.18 1411.52 L2043.47 1411.52 L2042.77 1411.52 L2042.06 1411.52 L2041.35 1411.52 L2040.64 1411.52 L2039.93 1411.52 L2039.23 1411.52 L2038.52 1411.52 L2037.81 1411.52 L2037.1 1411.52 L2036.4 1411.52 L2035.69 1411.52 L2034.98 1411.52 L2034.27 1411.52 L2033.56 1411.52 L2032.86 1411.52 L2032.15 1411.52 L2031.44 1411.52 L2030.73 1411.52 L2030.03 1411.52 L2029.32 1411.52 L2028.61 1411.52 L2027.9 1411.52 L2027.19 1411.52 L2026.49 1411.52 L2025.78 1411.52 L2025.07 1411.52 L2024.36 1411.52 L2023.66 1411.52 L2022.95 1411.52 L2022.24 1411.52 L2021.53 1411.52 L2020.82 1411.52 L2020.12 1411.52 L2019.41 1411.52 L2018.7 1411.52 L2017.99 1411.52 L2017.29 1411.52 L2016.58 1411.52 L2015.87 1411.52 L2015.16 1411.52 L2014.45 1411.52 L2013.75 1411.52 L2013.04 1411.52 L2012.33 1411.52 L2011.62 1411.52 L2010.92 1411.52 L2010.21 1411.52 L2009.5 1411.52 L2008.79 1411.52 L2008.08 1411.52 L2007.38 1411.52 L2006.67 1411.52 L2005.96 1411.52 L2005.25 1411.52 L2004.55 1411.52 L2003.84 1411.52 L2003.13 1411.52 L2002.42 1411.52 L2001.71 1411.52 L2001.01 1411.52 L2000.3 1411.52 L1999.59 1411.52 L1998.88 1411.52 L1998.18 1411.52 L1997.47 1411.52 L1996.76 1411.52 L1996.05 1411.52 L1995.34 1411.52 L1994.64 1411.52 L1993.93 1411.52 L1993.22 1411.52 L1992.51 1411.52 L1991.81 1411.52 L1991.1 1411.52 L1990.39 1411.52 L1989.68 1411.52 L1988.97 1411.52 L1988.27 1411.52 L1987.56 1411.52 L1986.85 1411.52 L1986.14 1411.52 L1985.44 1411.52 L1984.73 1411.52 L1984.02 1411.52 L1983.31 1411.52 L1982.6 1411.52 L1981.9 1411.52 L1981.19 1411.52 L1980.48 1411.52 L1979.77 1411.52 L1979.07 1411.52 L1978.36 1411.52 L1977.65 1411.52 L1976.94 1411.52 L1976.23 1411.52 L1975.53 1411.52 L1974.82 1411.52 L1974.11 1411.52 L1973.4 1411.52 L1972.69 1411.52 L1971.99 1411.52 L1971.28 1411.52 L1970.57 1411.52 L1969.86 1411.52 L1969.16 1411.52 L1968.45 1411.52 L1967.74 1411.52 L1967.03 1411.52 L1966.32 1411.52 L1965.62 1411.52 L1964.91 1411.52 L1964.2 1411.52 L1963.49 1411.52 L1962.79 1411.52 L1962.08 1411.52 L1961.37 1411.52 L1960.66 1411.52 L1959.95 1411.52 L1959.25 1411.52 L1958.54 1411.52 L1957.83 1411.52 L1957.12 1411.52 L1956.42 1411.52 L1955.71 1411.52 L1955 1411.52 L1954.29 1411.52 L1953.58 1411.52 L1952.88 1411.52 L1952.17 1411.52 L1951.46 1411.52 L1950.75 1411.52 L1950.05 1411.52 L1949.34 1411.52 L1948.63 1411.52 L1947.92 1411.52 L1947.21 1411.52 L1946.51 1411.52 L1945.8 1411.52 L1945.09 1411.52 L1944.38 1411.52 L1943.68 1411.52 L1942.97 1411.52 L1942.26 1411.52 L1941.55 1411.52 L1940.84 1411.52 L1940.14 1411.52 L1939.43 1411.52 L1938.72 1411.52 L1938.01 1411.52 L1937.31 1411.52 L1936.6 1411.52 L1935.89 1411.52 L1935.18 1411.52 L1934.47 1411.52 L1933.77 1411.52 L1933.06 1411.52 L1932.35 1411.52 L1931.64 1411.52 L1930.94 1411.52 L1930.23 1411.52 L1929.52 1411.52 L1928.81 1411.52 L1928.1 1411.52 L1927.4 1411.52 L1926.69 1411.52 L1925.98 1411.52 L1925.27 1411.52 L1924.57 1411.52 L1923.86 1411.52 L1923.15 1411.52 L1922.44 1411.52 L1921.73 1411.52 L1921.03 1411.52 L1920.32 1411.52 L1919.61 1411.52 L1918.9 1411.52 L1918.2 1411.52 L1917.49 1411.52 L1916.78 1411.52 L1916.07 1411.52 L1915.36 1411.52 L1914.66 1411.52 L1913.95 1411.52 L1913.24 1411.52 L1912.53 1411.52 L1911.83 1411.52 L1911.12 1411.52 L1910.41 1411.52 L1909.7 1411.52 L1908.99 1411.52 L1908.29 1411.52 L1907.58 1411.52 L1906.87 1411.52 L1906.16 1411.52 L1905.46 1411.52 L1904.75 1411.52 L1904.04 1411.52 L1903.33 1411.52 L1902.62 1411.52 L1901.92 1411.52 L1901.21 1411.52 L1900.5 1411.52 L1899.79 1411.52 L1899.08 1411.52 L1898.38 1411.52 L1897.67 1411.52 L1896.96 1411.52 L1896.25 1411.52 L1895.55 1411.52 L1894.84 1411.52 L1894.13 1411.52 L1893.42 1411.52 L1892.71 1411.52 L1892.01 1411.52 L1891.3 1411.52 L1890.59 1411.52 L1889.88 1411.52 L1889.18 1411.52 L1888.47 1411.52 L1887.76 1411.52 L1887.05 1411.52 L1886.34 1411.52 L1885.64 1411.52 L1884.93 1411.52 L1884.22 1411.52 L1883.51 1411.52 L1882.81 1411.52 L1882.1 1411.52 L1881.39 1411.52 L1880.68 1411.52 L1879.97 1411.52 L1879.27 1411.52 L1878.56 1411.52 L1877.85 1411.52 L1877.14 1411.52 L1876.44 1411.52 L1875.73 1411.52 L1875.02 1411.52 L1874.31 1411.52 L1873.6 1411.52 L1872.9 1411.52 L1872.19 1411.52 L1871.48 1411.52 L1870.77 1411.52 L1870.07 1411.52 L1869.36 1411.52 L1868.65 1411.52 L1867.94 1411.52 L1867.23 1411.52 L1866.53 1411.52 L1865.82 1411.52 L1865.11 1411.52 L1864.4 1411.52 L1863.7 1411.52 L1862.99 1411.52 L1862.28 1411.52 L1861.57 1411.52 L1860.86 1411.52 L1860.16 1411.52 L1859.45 1411.52 L1858.74 1411.52 L1858.03 1411.52 L1857.33 1411.52 L1856.62 1411.52 L1855.91 1411.52 L1855.2 1411.52 L1854.49 1411.52 L1853.79 1411.52 L1853.08 1411.52 L1852.37 1411.52 L1851.66 1411.52 L1850.96 1411.52 L1850.25 1411.52 L1849.54 1411.52 L1848.83 1411.52 L1848.12 1411.52 L1847.42 1411.52 L1846.71 1411.52 L1846 1411.52 L1845.29 1411.52 L1844.59 1411.52 L1843.88 1411.52 L1843.17 1411.52 L1842.46 1411.52 L1841.75 1411.52 L1841.05 1411.52 L1840.34 1411.52 L1839.63 1411.52 L1838.92 1411.52 L1838.22 1411.52 L1837.51 1411.52 L1836.8 1411.52 L1836.09 1411.52 L1835.38 1411.52 L1834.68 1411.52 L1833.97 1411.52 L1833.26 1411.52 L1832.55 1411.52 L1831.85 1411.52 L1831.14 1411.52 L1830.43 1411.52 L1829.72 1411.52 L1829.01 1411.52 L1828.31 1411.52 L1827.6 1411.52 L1826.89 1411.52 L1826.18 1411.52 L1825.48 1411.52 L1824.77 1411.52 L1824.06 1411.52 L1823.35 1411.52 L1822.64 1411.52 L1821.94 1411.52 L1821.23 1411.52 L1820.52 1411.52 L1819.81 1411.52 L1819.1 1411.52 L1818.4 1411.52 L1817.69 1411.52 L1816.98 1411.52 L1816.27 1411.52 L1815.57 1411.52 L1814.86 1411.52 L1814.15 1411.52 L1813.44 1411.52 L1812.73 1411.52 L1812.03 1411.52 L1811.32 1411.52 L1810.61 1411.52 L1809.9 1411.52 L1809.2 1411.52 L1808.49 1411.52 L1807.78 1411.52 L1807.07 1411.52 L1806.36 1411.52 L1805.66 1411.52 L1804.95 1411.52 L1804.24 1411.52 L1803.53 1411.52 L1802.83 1411.52 L1802.12 1411.52 L1801.41 1411.52 L1800.7 1411.52 L1799.99 1411.52 L1799.29 1411.52 L1798.58 1411.52 L1797.87 1411.52 L1797.16 1411.52 L1796.46 1411.52 L1795.75 1411.52 L1795.04 1411.52 L1794.33 1411.52 L1793.62 1411.52 L1792.92 1411.52 L1792.21 1411.52 L1791.5 1411.52 L1790.79 1411.52 L1790.09 1411.52 L1789.38 1411.52 L1788.67 1411.52 L1787.96 1411.52 L1787.25 1411.52 L1786.55 1411.52 L1785.84 1411.52 L1785.13 1411.52 L1784.42 1411.52 L1783.72 1411.52 L1783.01 1411.52 L1782.3 1411.52 L1781.59 1411.52 L1780.88 1411.52 L1780.18 1411.52 L1779.47 1411.52 L1778.76 1411.52 L1778.05 1411.52 L1777.35 1411.52 L1776.64 1411.52 L1775.93 1411.52 L1775.22 1411.52 L1774.51 1411.52 L1773.81 1411.52 L1773.1 1411.52 L1772.39 1411.52 L1771.68 1411.52 L1770.98 1411.52 L1770.27 1411.52 L1769.56 1411.52 L1768.85 1411.52 L1768.14 1411.52 L1767.44 1411.52 L1766.73 1411.52 L1766.02 1411.52 L1765.31 1411.52 L1764.61 1411.52 L1763.9 1411.52 L1763.19 1411.52 L1762.48 1411.52 L1761.77 1411.52 L1761.07 1411.52 L1760.36 1411.52 L1759.65 1411.52 L1758.94 1411.52 L1758.24 1411.52 L1757.53 1411.52 L1756.82 1411.52 L1756.11 1411.52 L1755.4 1411.52 L1754.7 1411.52 L1753.99 1411.52 L1753.28 1411.52 L1752.57 1411.52 L1751.87 1411.52 L1751.16 1411.52 L1750.45 1411.52 L1749.74 1411.52 L1749.03 1411.52 L1748.33 1411.52 L1747.62 1411.52 L1746.91 1411.52 L1746.2 1411.52 L1745.49 1411.52 L1744.79 1411.52 L1744.08 1411.52 L1743.37 1411.52 L1742.66 1411.52 L1741.96 1411.52 L1741.25 1411.52 L1740.54 1411.52 L1739.83 1411.52 L1739.12 1411.52 L1738.42 1411.52 L1737.71 1411.52 L1737 1411.52 L1736.29 1411.52 L1735.59 1411.52 L1734.88 1411.52 L1734.17 1411.52 L1733.46 1411.52 L1732.75 1411.52 L1732.05 1411.52 L1731.34 1411.52 L1730.63 1411.52 L1729.92 1411.52 L1729.22 1411.52 L1728.51 1411.52 L1727.8 1411.52 L1727.09 1411.52 L1726.38 1411.52 L1725.68 1411.52 L1724.97 1411.52 L1724.26 1411.52 L1723.55 1411.52 L1722.85 1411.52 L1722.14 1411.52 L1721.43 1411.52 L1720.72 1411.52 L1720.01 1411.52 L1719.31 1411.52 L1718.6 1411.52 L1717.89 1411.52 L1717.18 1411.52 L1716.48 1411.52 L1715.77 1411.52 L1715.06 1411.52 L1714.35 1411.52 L1713.64 1411.52 L1712.94 1411.52 L1712.23 1411.52 L1711.52 1411.52 L1710.81 1411.52 L1710.11 1411.52 L1709.4 1411.52 L1708.69 1411.52 L1707.98 1411.52 L1707.27 1411.52 L1706.57 1411.52 L1705.86 1411.52 L1705.15 1411.52 L1704.44 1411.52 L1703.74 1411.52 L1703.03 1411.52 L1702.32 1411.52 L1701.61 1411.52 L1700.9 1411.52 L1700.2 1411.52 L1699.49 1411.52 L1698.78 1411.52 L1698.07 1411.52 L1697.37 1411.52 L1696.66 1411.52 L1695.95 1411.52 L1695.24 1411.52 L1694.53 1411.52 L1693.83 1411.52 L1693.12 1411.52 L1692.41 1411.52 L1691.7 1411.52 L1691 1411.52 L1690.29 1411.52 L1689.58 1411.52 L1688.87 1411.52 L1688.16 1411.52 L1687.46 1411.52 L1686.75 1411.52 L1686.04 1411.52 L1685.33 1411.52 L1684.63 1411.52 L1683.92 1411.52 L1683.21 1411.52 L1682.5 1411.52 L1681.79 1411.52 L1681.09 1411.52 L1680.38 1411.52 L1679.67 1411.52 L1678.96 1411.52 L1678.26 1411.52 L1677.55 1411.52 L1676.84 1411.52 L1676.13 1411.52 L1675.42 1411.52 L1674.72 1411.52 L1674.01 1411.52 L1673.3 1411.52 L1672.59 1411.52 L1671.89 1411.52 L1671.18 1411.52 L1670.47 1411.52 L1669.76 1411.52 L1669.05 1411.52 L1668.35 1411.52 L1667.64 1411.52 L1666.93 1411.52 L1666.22 1411.52 L1665.51 1411.52 L1664.81 1411.52 L1664.1 1411.52 L1663.39 1411.52 L1662.68 1411.52 L1661.98 1411.52 L1661.27 1411.52 L1660.56 1411.52 L1659.85 1411.52 L1659.14 1411.52 L1658.44 1411.52 L1657.73 1411.52 L1657.02 1411.52 L1656.31 1411.52 L1655.61 1411.52 L1654.9 1411.52 L1654.19 1411.52 L1653.48 1411.52 L1652.77 1411.52 L1652.07 1411.52 L1651.36 1411.52 L1650.65 1411.52 L1649.94 1411.52 L1649.24 1411.52 L1648.53 1411.52 L1647.82 1411.52 L1647.11 1411.52 L1646.4 1411.52 L1645.7 1411.52 L1644.99 1411.52 L1644.28 1411.52 L1643.57 1411.52 L1642.87 1411.52 L1642.16 1411.52 L1641.45 1411.52 L1640.74 1411.52 L1640.03 1411.52 L1639.33 1411.52 L1638.62 1411.52 L1637.91 1411.52 L1637.2 1411.52 L1636.5 1411.52 L1635.79 1411.52 L1635.08 1411.52 L1634.37 1411.52 L1633.66 1411.52 L1632.96 1411.52 L1632.25 1411.52 L1631.54 1411.52 L1630.83 1411.52 L1630.13 1411.52 L1629.42 1411.52 L1628.71 1411.52 L1628 1411.52 L1627.29 1411.52 L1626.59 1411.52 L1625.88 1411.52 L1625.17 1411.52 L1624.46 1411.52 L1623.76 1411.52 L1623.05 1411.52 L1622.34 1411.52 L1621.63 1411.52 L1620.92 1411.52 L1620.22 1411.52 L1619.51 1411.52 L1618.8 1411.52 L1618.09 1411.52 L1617.39 1411.52 L1616.68 1411.52 L1615.97 1411.52 L1615.26 1411.52 L1614.55 1411.52 L1613.85 1411.52 L1613.14 1411.52 L1612.43 1411.52 L1611.72 1411.52 L1611.02 1411.52 L1610.31 1411.52 L1609.6 1411.52 L1608.89 1411.52 L1608.18 1411.52 L1607.48 1411.52 L1606.77 1411.52 L1606.06 1411.52 L1605.35 1411.52 L1604.65 1411.52 L1603.94 1411.52 L1603.23 1411.52 L1602.52 1411.52 L1601.81 1411.52 L1601.11 1411.52 L1600.4 1411.52 L1599.69 1411.52 L1598.98 1411.52 L1598.28 1411.52 L1597.57 1411.52 L1596.86 1411.52 L1596.15 1411.52 L1595.44 1411.52 L1594.74 1411.52 L1594.03 1411.52 L1593.32 1411.52 L1592.61 1411.52 L1591.9 1411.52 L1591.2 1411.52 L1590.49 1411.52 L1589.78 1411.52 L1589.07 1411.52 L1588.37 1411.52 L1587.66 1411.52 L1586.95 1411.52 L1586.24 1411.52 L1585.53 1411.52 L1584.83 1411.52 L1584.12 1411.52 L1583.41 1411.52 L1582.7 1411.52 L1582 1411.52 L1581.29 1411.52 L1580.58 1411.52 L1579.87 1411.52 L1579.16 1411.52 L1578.46 1411.52 L1577.75 1411.52 L1577.04 1411.52 L1576.33 1411.52 L1575.63 1411.52 L1574.92 1411.52 L1574.21 1411.52 L1573.5 1411.52 L1572.79 1411.52 L1572.09 1411.52 L1571.38 1411.52 L1570.67 1411.52 L1569.96 1411.52 L1569.26 1411.52 L1568.55 1411.52 L1567.84 1411.52 L1567.13 1411.52 L1566.42 1411.52 L1565.72 1411.52 L1565.01 1411.52 L1564.3 1411.52 L1563.59 1411.52 L1562.89 1411.52 L1562.18 1411.52 L1561.47 1411.52 L1560.76 1411.52 L1560.05 1411.52 L1559.35 1411.52 L1558.64 1411.52 L1557.93 1411.52 L1557.22 1411.52 L1556.52 1411.52 L1555.81 1411.52 L1555.1 1411.52 L1554.39 1411.52 L1553.68 1411.52 L1552.98 1411.52 L1552.27 1411.52 L1551.56 1411.52 L1550.85 1411.52 L1550.15 1411.52 L1549.44 1411.52 L1548.73 1411.52 L1548.02 1411.52 L1547.31 1411.52 L1546.61 1411.52 L1545.9 1411.52 L1545.19 1411.52 L1544.48 1411.52 L1543.78 1411.52 L1543.07 1411.52 L1542.36 1411.52 L1541.65 1411.52 L1540.94 1411.52 L1540.24 1411.52 L1539.53 1411.52 L1538.82 1411.52 L1538.11 1411.52 L1537.41 1411.52 L1536.7 1411.52 L1535.99 1411.52 L1535.28 1411.52 L1534.57 1411.52 L1533.87 1411.52 L1533.16 1411.52 L1532.45 1411.52 L1531.74 1411.52 L1531.04 1411.52 L1530.33 1411.52 L1529.62 1411.52 L1528.91 1411.52 L1528.2 1411.52 L1527.5 1411.52 L1526.79 1411.52 L1526.08 1411.52 L1525.37 1411.52 L1524.67 1411.52 L1523.96 1411.52 L1523.25 1411.52 L1522.54 1411.52 L1521.83 1411.52 L1521.13 1411.52 L1520.42 1411.52 L1519.71 1411.52 L1519 1411.52 L1518.3 1411.52 L1517.59 1411.52 L1516.88 1411.52 L1516.17 1411.52 L1515.46 1411.52 L1514.76 1411.52 L1514.05 1411.52 L1513.34 1411.52 L1512.63 1411.52 L1511.92 1411.52 L1511.22 1411.52 L1510.51 1411.52 L1509.8 1411.52 L1509.09 1411.52 L1508.39 1411.52 L1507.68 1411.52 L1506.97 1411.52 L1506.26 1411.52 L1505.55 1411.52 L1504.85 1411.52 L1504.14 1411.52 L1503.43 1411.52 L1502.72 1411.52 L1502.02 1411.52 L1501.31 1411.52 L1500.6 1411.52 L1499.89 1411.52 L1499.18 1411.52 L1498.48 1411.52 L1497.77 1411.52 L1497.06 1411.52 L1496.35 1411.52 L1495.65 1411.52 L1494.94 1411.52 L1494.23 1411.52 L1493.52 1411.52 L1492.81 1411.52 L1492.11 1411.52 L1491.4 1411.52 L1490.69 1411.52 L1489.98 1411.52 L1489.28 1411.52 L1488.57 1411.52 L1487.86 1411.52 L1487.15 1411.52 L1486.44 1411.52 L1485.74 1411.52 L1485.03 1411.52 L1484.32 1411.52 L1483.61 1411.52 L1482.91 1411.52 L1482.2 1411.52 L1481.49 1411.52 L1480.78 1411.52 L1480.07 1411.52 L1479.37 1411.52 L1478.66 1411.52 L1477.95 1411.52 L1477.24 1411.52 L1476.54 1411.52 L1475.83 1411.52 L1475.12 1411.52 L1474.41 1411.52 L1473.7 1411.52 L1473 1411.52 L1472.29 1411.52 L1471.58 1411.52 L1470.87 1411.52 L1470.17 1411.52 L1469.46 1411.52 L1468.75 1411.52 L1468.04 1411.52 L1467.33 1411.52 L1466.63 1411.52 L1465.92 1411.52 L1465.21 1411.52 L1464.5 1411.52 L1463.8 1411.52 L1463.09 1411.52 L1462.38 1411.52 L1461.67 1411.52 L1460.96 1411.52 L1460.26 1411.52 L1459.55 1411.52 L1458.84 1411.52 L1458.13 1411.52 L1457.43 1411.52 L1456.72 1411.52 L1456.01 1411.52 L1455.3 1411.52 L1454.59 1411.52 L1453.89 1411.52 L1453.18 1411.52 L1452.47 1411.52 L1451.76 1411.52 L1451.06 1411.52 L1450.35 1411.52 L1449.64 1411.52 L1448.93 1411.52 L1448.22 1411.52 L1447.52 1411.52 L1446.81 1411.52 L1446.1 1411.52 L1445.39 1411.52 L1444.69 1411.52 L1443.98 1411.52 L1443.27 1411.52 L1442.56 1411.52 L1441.85 1411.52 L1441.15 1411.52 L1440.44 1411.52 L1439.73 1411.52 L1439.02 1411.52 L1438.31 1411.52 L1437.61 1411.52 L1436.9 1411.52 L1436.19 1411.52 L1435.48 1411.52 L1434.78 1411.52 L1434.07 1411.52 L1433.36 1411.52 L1432.65 1411.52 L1431.94 1411.52 L1431.24 1411.52 L1430.53 1411.52 L1429.82 1411.52 L1429.11 1411.52 L1428.41 1411.52 L1427.7 1411.52 L1426.99 1411.52 L1426.28 1411.52 L1425.57 1411.52 L1424.87 1411.52 L1424.16 1411.52 L1423.45 1411.52 L1422.74 1411.52 L1422.04 1411.52 L1421.33 1411.52 L1420.62 1411.52 L1419.91 1411.52 L1419.2 1411.52 L1418.5 1411.52 L1417.79 1411.52 L1417.08 1411.52 L1416.37 1411.52 L1415.67 1411.52 L1414.96 1411.52 L1414.25 1411.52 L1413.54 1411.52 L1412.83 1411.52 L1412.13 1411.52 L1411.42 1411.52 L1410.71 1411.52 L1410 1411.52 L1409.3 1411.52 L1408.59 1411.52 L1407.88 1411.52 L1407.17 1411.52 L1406.46 1411.52 L1405.76 1411.52 L1405.05 1411.52 L1404.34 1411.52 L1403.63 1411.52 L1402.93 1411.52 L1402.22 1411.52 L1401.51 1411.52 L1400.8 1411.52 L1400.09 1411.52 L1399.39 1411.52 L1398.68 1411.52 L1397.97 1411.52 L1397.26 1411.52 L1396.56 1411.52 L1395.85 1411.52 L1395.14 1411.52 L1394.43 1411.52 L1393.72 1411.52 L1393.02 1411.52 L1392.31 1411.52 L1391.6 1411.52 L1390.89 1411.52 L1390.19 1411.52 L1389.48 1411.52 L1388.77 1411.52 L1388.06 1411.52 L1387.35 1411.52 L1386.65 1411.52 L1385.94 1411.52 L1385.23 1411.52 L1384.52 1411.52 L1383.82 1411.52 L1383.11 1411.52 L1382.4 1411.52 L1381.69 1411.52 L1380.98 1411.52 L1380.28 1411.52 L1379.57 1411.52 L1378.86 1411.52 L1378.15 1411.52 L1377.45 1411.52 L1376.74 1411.52 L1376.03 1411.52 L1375.32 1411.52 L1374.61 1411.52 L1373.91 1411.52 L1373.2 1411.52 L1372.49 1411.52 L1371.78 1411.52 L1371.08 1411.52 L1370.37 1411.52 L1369.66 1411.52 L1368.95 1411.52 L1368.24 1411.52 L1367.54 1411.52 L1366.83 1411.52 L1366.12 1411.52 L1365.41 1411.52 L1364.71 1411.52 L1364 1411.52 L1363.29 1411.52 L1362.58 1411.52 L1361.87 1411.52 L1361.17 1411.52 L1360.46 1411.52 L1359.75 1411.52 L1359.04 1411.52 L1358.33 1411.52 L1357.63 1411.52 L1356.92 1411.52 L1356.21 1411.52 L1355.5 1411.52 L1354.8 1411.52 L1354.09 1411.52 L1353.38 1411.52 L1352.67 1411.52 L1351.96 1411.52 L1351.26 1411.52 L1350.55 1411.52 L1349.84 1411.52 L1349.13 1411.52 L1348.43 1411.52 L1347.72 1411.52 L1347.01 1411.52 L1346.3 1411.52 L1345.59 1411.52 L1344.89 1411.52 L1344.18 1411.52 L1343.47 1411.52 L1342.76 1411.52 L1342.06 1411.52 L1341.35 1411.52 L1340.64 1411.52 L1339.93 1411.52 L1339.22 1411.52 L1338.52 1411.52 L1337.81 1411.52 L1337.1 1411.52 L1336.39 1411.52 L1335.69 1411.52 L1334.98 1411.52 L1334.27 1411.52 L1333.56 1411.52 L1332.85 1411.52 L1332.15 1411.52 L1331.44 1411.52 L1330.73 1411.52 L1330.02 1411.52 L1329.32 1411.52 L1328.61 1411.52 L1327.9 1411.52 L1327.19 1411.52 L1326.48 1411.52 L1325.78 1411.52 L1325.07 1411.52 L1324.36 1411.52 L1323.65 1411.52 L1322.95 1411.52 L1322.24 1411.52 L1321.53 1411.52 L1320.82 1411.52 L1320.11 1411.52 L1319.41 1411.52 L1318.7 1411.52 L1317.99 1411.52 L1317.28 1411.52 L1316.58 1411.52 L1315.87 1411.52 L1315.16 1411.52 L1314.45 1411.52 L1313.74 1411.52 L1313.04 1411.52 L1312.33 1411.52 L1311.62 1411.52 L1310.91 1411.52 L1310.21 1411.52 L1309.5 1411.52 L1308.79 1411.52 L1308.08 1411.52 L1307.37 1411.52 L1306.67 1411.52 L1305.96 1411.52 L1305.25 1411.52 L1304.54 1411.52 L1303.84 1411.52 L1303.13 1411.52 L1302.42 1411.52 L1301.71 1411.52 L1301 1411.52 L1300.3 1411.52 L1299.59 1411.52 L1298.88 1411.52 L1298.17 1411.52 L1297.47 1411.52 L1296.76 1411.52 L1296.05 1411.52 L1295.34 1411.52 L1294.63 1411.52 L1293.93 1411.52 L1293.22 1411.52 L1292.51 1411.52 L1291.8 1411.52 L1291.1 1411.52 L1290.39 1411.52 L1289.68 1411.52 L1288.97 1411.52 L1288.26 1411.52 L1287.56 1411.52 L1286.85 1411.52 L1286.14 1411.52 L1285.43 1411.52 L1284.72 1411.52 L1284.02 1411.52 L1283.31 1411.52 L1282.6 1411.52 L1281.89 1411.52 L1281.19 1411.52 L1280.48 1411.52 L1279.77 1411.52 L1279.06 1411.52 L1278.35 1411.52 L1277.65 1411.52 L1276.94 1411.52 L1276.23 1411.52 L1275.52 1411.52 L1274.82 1411.52 L1274.11 1411.52 L1273.4 1411.52 L1272.69 1411.52 L1271.98 1411.52 L1271.28 1411.52 L1270.57 1411.52 L1269.86 1411.52 L1269.15 1411.52 L1268.45 1411.52 L1267.74 1411.52 L1267.03 1411.52 L1266.32 1411.52 L1265.61 1411.52 L1264.91 1411.52 L1264.2 1411.52 L1263.49 1411.52 L1262.78 1411.52 L1262.08 1411.52 L1261.37 1411.52 L1260.66 1411.52 L1259.95 1411.52 L1259.24 1411.52 L1258.54 1411.52 L1257.83 1411.52 L1257.12 1411.52 L1256.41 1411.52 L1255.71 1411.52 L1255 1411.52 L1254.29 1411.52 L1253.58 1411.52 L1252.87 1411.52 L1252.17 1411.52 L1251.46 1411.52 L1250.75 1411.52 L1250.04 1411.52 L1249.34 1411.52 L1248.63 1411.52 L1247.92 1411.52 L1247.21 1411.52 L1246.5 1411.52 L1245.8 1411.52 L1245.09 1411.52 L1244.38 1411.52 L1243.67 1411.52 L1242.97 1411.52 L1242.26 1411.52 L1241.55 1411.52 L1240.84 1411.52 L1240.13 1411.52 L1239.43 1411.52 L1238.72 1411.52 L1238.01 1411.52 L1237.3 1411.52 L1236.6 1411.52 L1235.89 1411.52 L1235.18 1411.52 L1234.47 1411.52 L1233.76 1411.52 L1233.06 1411.52 L1232.35 1411.52 L1231.64 1411.52 L1230.93 1411.52 L1230.23 1411.52 L1229.52 1411.52 L1228.81 1411.52 L1228.1 1411.52 L1227.39 1411.52 L1226.69 1411.52 L1225.98 1411.52 L1225.27 1411.52 L1224.56 1411.52 L1223.86 1411.52 L1223.15 1411.52 L1222.44 1411.52 L1221.73 1411.52 L1221.02 1411.52 L1220.32 1411.52 L1219.61 1411.52 L1218.9 1411.52 L1218.19 1411.52 L1217.49 1411.52 L1216.78 1411.52 L1216.07 1411.52 L1215.36 1411.52 L1214.65 1411.52 L1213.95 1411.52 L1213.24 1411.52 L1212.53 1411.52 L1211.82 1411.52 L1211.12 1411.52 L1210.41 1411.52 L1209.7 1411.52 L1208.99 1411.52 L1208.28 1411.52 L1207.58 1411.52 L1206.87 1411.52 L1206.16 1411.52 L1205.45 1411.52 L1204.74 1411.52 L1204.04 1411.52 L1203.33 1411.52 L1202.62 1411.52 L1201.91 1411.52 L1201.21 1411.52 L1200.5 1411.52 L1199.79 1411.52 L1199.08 1411.52 L1198.37 1411.52 L1197.67 1411.52 L1196.96 1411.52 L1196.25 1411.52 L1195.54 1411.52 L1194.84 1411.52 L1194.13 1411.52 L1193.42 1411.52 L1192.71 1411.52 L1192 1411.52 L1191.3 1411.52 L1190.59 1411.52 L1189.88 1411.52 L1189.17 1411.52 L1188.47 1411.52 L1187.76 1411.52 L1187.05 1411.52 L1186.34 1411.52 L1185.63 1411.52 L1184.93 1411.52 L1184.22 1411.52 L1183.51 1411.52 L1182.8 1411.52 L1182.1 1411.52 L1181.39 1411.52 L1180.68 1411.52 L1179.97 1411.52 L1179.26 1411.52 L1178.56 1411.52 L1177.85 1411.52 L1177.14 1411.52 L1176.43 1411.52 L1175.73 1411.52 L1175.02 1411.52 L1174.31 1411.52 L1173.6 1411.52 L1172.89 1411.52 L1172.19 1411.52 L1171.48 1411.52 L1170.77 1411.52 L1170.06 1411.52 L1169.36 1411.52 L1168.65 1411.52 L1167.94 1411.52 L1167.23 1411.52 L1166.52 1411.52 L1165.82 1411.52 L1165.11 1411.52 L1164.4 1411.52 L1163.69 1411.52 L1162.99 1411.52 L1162.28 1411.52 L1161.57 1411.52 L1160.86 1411.52 L1160.15 1411.52 L1159.45 1411.52 L1158.74 1411.52 L1158.03 1411.52 L1157.32 1411.52 L1156.62 1411.52 L1155.91 1411.52 L1155.2 1411.52 L1154.49 1411.52 L1153.78 1411.52 L1153.08 1411.52 L1152.37 1411.52 L1151.66 1411.52 L1150.95 1411.52 L1150.25 1411.52 L1149.54 1411.52 L1148.83 1411.52 L1148.12 1411.52 L1147.41 1411.52 L1146.71 1411.52 L1146 1411.52 L1145.29 1411.52 L1144.58 1411.52 L1143.88 1411.52 L1143.17 1411.52 L1142.46 1411.52 L1141.75 1411.52 L1141.04 1411.52 L1140.34 1411.52 L1139.63 1411.52 L1138.92 1411.52 L1138.21 1411.52 L1137.51 1411.52 L1136.8 1411.52 L1136.09 1411.52 L1135.38 1411.52 L1134.67 1411.52 L1133.97 1411.52 L1133.26 1411.52 L1132.55 1411.52 L1131.84 1411.52 L1131.13 1411.52 L1130.43 1411.52 L1129.72 1411.52 L1129.01 1411.52 L1128.3 1411.52 L1127.6 1411.52 L1126.89 1411.52 L1126.18 1411.52 L1125.47 1411.52 L1124.76 1411.52 L1124.06 1411.52 L1123.35 1411.52 L1122.64 1411.52 L1121.93 1411.52 L1121.23 1411.52 L1120.52 1411.52 L1119.81 1411.52 L1119.1 1411.52 L1118.39 1411.52 L1117.69 1411.52 L1116.98 1411.52 L1116.27 1411.52 L1115.56 1411.52 L1114.86 1411.52 L1114.15 1411.52 L1113.44 1411.52 L1112.73 1411.52 L1112.02 1411.52 L1111.32 1411.52 L1110.61 1411.52 L1109.9 1411.52 L1109.19 1411.52 L1108.49 1411.52 L1107.78 1411.52 L1107.07 1411.52 L1106.36 1411.52 L1105.65 1411.52 L1104.95 1411.52 L1104.24 1411.52 L1103.53 1411.52 L1102.82 1411.52 L1102.12 1411.52 L1101.41 1411.52 L1100.7 1411.52 L1099.99 1411.52 L1099.28 1411.52 L1098.58 1411.52 L1097.87 1411.52 L1097.16 1411.52 L1096.45 1411.52 L1095.75 1411.52 L1095.04 1411.52 L1094.33 1411.52 L1093.62 1411.52 L1092.91 1411.52 L1092.21 1411.52 L1091.5 1411.52 L1090.79 1411.52 L1090.08 1411.52 L1089.38 1411.52 L1088.67 1411.52 L1087.96 1411.52 L1087.25 1411.52 L1086.54 1411.52 L1085.84 1411.52 L1085.13 1411.52 L1084.42 1411.52 L1083.71 1411.52 L1083.01 1411.52 L1082.3 1411.52 L1081.59 1411.52 L1080.88 1411.52 L1080.17 1411.52 L1079.47 1411.52 L1078.76 1411.52 L1078.05 1411.52 L1077.34 1411.52 L1076.64 1411.52 L1075.93 1411.52 L1075.22 1411.52 L1074.51 1411.52 L1073.8 1411.52 L1073.1 1411.52 L1072.39 1411.52 L1071.68 1411.52 L1070.97 1411.52 L1070.27 1411.52 L1069.56 1411.52 L1068.85 1411.52 L1068.14 1411.52 L1067.43 1411.52 L1066.73 1411.52 L1066.02 1411.52 L1065.31 1411.52 L1064.6 1411.52 L1063.9 1411.52 L1063.19 1411.52 L1062.48 1411.52 L1061.77 1411.52 L1061.06 1411.52 L1060.36 1411.52 L1059.65 1411.52 L1058.94 1411.52 L1058.23 1411.52 L1057.53 1411.52 L1056.82 1411.52 L1056.11 1411.52 L1055.4 1411.52 L1054.69 1411.52 L1053.99 1411.52 L1053.28 1411.52 L1052.57 1411.52 L1051.86 1411.52 L1051.15 1411.52 L1050.45 1411.52 L1049.74 1411.52 L1049.03 1411.52 L1048.32 1411.52 L1047.62 1411.52 L1046.91 1411.52 L1046.2 1411.52 L1045.49 1411.52 L1044.78 1411.52 L1044.08 1411.52 L1043.37 1411.52 L1042.66 1411.52 L1041.95 1411.52 L1041.25 1411.52 L1040.54 1411.52 L1039.83 1411.52 L1039.12 1411.52 L1038.41 1411.52 L1037.71 1411.52 L1037 1411.52 L1036.29 1411.52 L1035.58 1411.52 L1034.88 1411.52 L1034.17 1411.52 L1033.46 1411.52 L1032.75 1411.52 L1032.04 1411.52 L1031.34 1411.52 L1030.63 1411.52 L1029.92 1411.52 L1029.21 1411.52 L1028.51 1411.52 L1027.8 1411.52 L1027.09 1411.52 L1026.38 1411.52 L1025.67 1411.52 L1024.97 1411.52 L1024.26 1411.52 L1023.55 1411.52 L1022.84 1411.52 L1022.14 1411.52 L1021.43 1411.52 L1020.72 1411.52 L1020.01 1411.52 L1019.3 1411.52 L1018.6 1411.52 L1017.89 1411.52 L1017.18 1411.52 L1016.47 1411.52 L1015.77 1411.52 L1015.06 1411.52 L1014.35 1411.52 L1013.64 1411.52 L1012.93 1411.52 L1012.23 1411.52 L1011.52 1411.52 L1010.81 1411.52 L1010.1 1411.52 L1009.4 1411.52 L1008.69 1411.52 L1007.98 1411.52 L1007.27 1411.52 L1006.56 1411.52 L1005.86 1411.52 L1005.15 1411.52 L1004.44 1411.52 L1003.73 1411.52 L1003.03 1411.52 L1002.32 1411.52 L1001.61 1411.52 L1000.9 1411.52 L1000.19 1411.52 L999.486 1411.52 L998.779 1411.52 L998.071 1411.52 L997.363 1411.52 L996.655 1411.52 L995.947 1411.52 L995.24 1411.52 L994.532 1411.52 L993.824 1411.52 L993.116 1411.52 L992.409 1411.52 L991.701 1411.52 L990.993 1411.52 L990.285 1411.52 L989.577 1411.52 L988.87 1411.52 L988.162 1411.52 L987.454 1411.52 L986.746 1411.52 L986.038 1411.52 L985.331 1411.52 L984.623 1411.52 L983.915 1411.52 L983.207 1411.52 L982.499 1411.52 L981.792 1411.52 L981.084 1411.52 L980.376 1411.52 L979.668 1411.52 L978.961 1411.52 L978.253 1411.52 L977.545 1411.52 L976.837 1411.52 L976.129 1411.52 L975.422 1411.52 L974.714 1411.52 L974.006 1411.52 L973.298 1411.52 L972.59 1411.52 L971.883 1411.52 L971.175 1411.52 L970.467 1411.52 L969.759 1411.52 L969.051 1411.52 L968.344 1411.52 L967.636 1411.52 L966.928 1411.52 L966.22 1411.52 L965.513 1411.52 L964.805 1411.52 L964.097 1411.52 L963.389 1411.52 L962.681 1411.52 L961.974 1411.52 L961.266 1411.52 L960.558 1411.52 L959.85 1411.52 L959.142 1411.52 L958.435 1411.52 L957.727 1411.52 L957.019 1411.52 L956.311 1411.52 L955.604 1411.52 L954.896 1411.52 L954.188 1411.52 L953.48 1411.52 L952.772 1411.52 L952.065 1411.52 L951.357 1411.52 L950.649 1411.52 L949.941 1411.52 L949.233 1411.52 L948.526 1411.52 L947.818 1411.52 L947.11 1411.52 L946.402 1411.52 L945.694 1411.52 L944.987 1411.52 L944.279 1411.52 L943.571 1411.52 L942.863 1411.52 L942.156 1411.52 L941.448 1411.52 L940.74 1411.52 L940.032 1411.52 L939.324 1411.52 L938.617 1411.52 L937.909 1411.52 L937.201 1411.52 L936.493 1411.52 L935.785 1411.52 L935.078 1411.52 L934.37 1411.52 L933.662 1411.52 L932.954 1411.52 L932.247 1411.52 L931.539 1411.52 L930.831 1411.52 L930.123 1411.52 L929.415 1411.52 L928.708 1411.52 L928 1411.52 L927.292 1411.52 L926.584 1411.52 L925.876 1411.52 L925.169 1411.52 L924.461 1411.52 L923.753 1411.52 L923.045 1411.52 L922.337 1411.52 L921.63 1411.52 L920.922 1411.52 L920.214 1411.52 L919.506 1411.52 L918.799 1411.52 L918.091 1411.52 L917.383 1411.52 L916.675 1411.52 L915.967 1411.52 L915.26 1411.52 L914.552 1411.52 L913.844 1411.52 L913.136 1411.52 L912.428 1411.52 L911.721 1411.52 L911.013 1411.52 L910.305 1411.52 L909.597 1411.52 L908.89 1411.52 L908.182 1411.52 L907.474 1411.52 L906.766 1411.52 L906.058 1411.52 L905.351 1411.52 L904.643 1411.52 L903.935 1411.52 L903.227 1411.52 L902.519 1411.52 L901.812 1411.52 L901.104 1411.52 L900.396 1411.52 L899.688 1411.52 L898.98 1411.52 L898.273 1411.52 L897.565 1411.52 L896.857 1411.52 L896.149 1411.52 L895.442 1411.52 L894.734 1411.52 L894.026 1411.52 L893.318 1411.52 L892.61 1411.52 L891.903 1411.52 L891.195 1411.52 L890.487 1411.52 L889.779 1411.52 L889.071 1411.52 L888.364 1411.52 L887.656 1411.52 L886.948 1411.52 L886.24 1411.52 L885.533 1411.52 L884.825 1411.52 L884.117 1411.52 L883.409 1411.52 L882.701 1411.52 L881.994 1411.52 L881.286 1411.52 L880.578 1411.52 L879.87 1411.52 L879.162 1411.52 L878.455 1411.52 L877.747 1411.52 L877.039 1411.52 L876.331 1411.52 L875.623 1411.52 L874.916 1411.52 L874.208 1411.52  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip602)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"874.208,1412.1 874.916,1412.1 875.623,1412.1 876.331,1412.1 877.039,1412.1 877.747,1412.1 878.455,1412.1 879.162,1412.1 879.87,1412.1 880.578,1412.1 881.286,1412.1 881.994,1412.1 882.701,1412.1 883.409,1412.1 884.117,1412.1 884.825,1412.1 885.533,1412.1 886.24,1412.1 886.948,1412.1 887.656,1412.1 888.364,1412.1 889.071,1412.1 889.779,1412.1 890.487,1412.1 891.195,1412.1 891.903,1412.1 892.61,1412.1 893.318,1412.1 894.026,1412.1 894.734,1412.1 895.442,1412.1 896.149,1412.1 896.857,1412.1 897.565,1412.1 898.273,1412.1 898.98,1412.1 899.688,1412.1 900.396,1412.1 901.104,1412.1 901.812,1412.1 902.519,1412.1 903.227,1412.1 903.935,1412.1 904.643,1412.1 905.351,1412.1 906.058,1412.1 906.766,1412.1 907.474,1412.1 908.182,1412.1 908.89,1412.1 909.597,1412.1 910.305,1412.1 911.013,1412.1 911.721,1412.1 912.428,1412.1 913.136,1412.1 913.844,1412.1 914.552,1412.1 915.26,1412.1 915.967,1412.1 916.675,1412.1 917.383,1412.1 918.091,1412.1 918.799,1412.1 919.506,1412.1 920.214,1412.1 920.922,1412.1 921.63,1412.1 922.337,1412.1 923.045,1412.1 923.753,1412.1 924.461,1412.1 925.169,1412.1 925.876,1412.1 926.584,1412.1 927.292,1412.1 928,1412.1 928.708,1412.1 929.415,1412.1 930.123,1412.1 930.831,1412.1 931.539,1412.1 932.247,1412.1 932.954,1412.1 933.662,1412.1 934.37,1412.1 935.078,1412.1 935.785,1412.1 936.493,1412.1 937.201,1412.1 937.909,1412.1 938.617,1412.1 939.324,1412.1 940.032,1412.1 940.74,1412.1 941.448,1412.1 942.156,1412.1 942.863,1412.1 943.571,1412.1 944.279,1412.1 944.987,1412.1 945.694,1412.1 946.402,1412.1 947.11,1412.1 947.818,1412.1 948.526,1412.1 949.233,1412.1 949.941,1412.1 950.649,1412.1 951.357,1412.1 952.065,1412.1 952.772,1412.1 953.48,1412.1 954.188,1412.1 954.896,1412.1 955.604,1412.1 956.311,1412.1 957.019,1412.1 957.727,1412.1 958.435,1412.1 959.142,1412.1 959.85,1412.1 960.558,1412.1 961.266,1412.1 961.974,1412.1 962.681,1412.1 963.389,1412.1 964.097,1412.1 964.805,1412.1 965.513,1412.1 966.22,1412.1 966.928,1412.1 967.636,1412.1 968.344,1412.1 969.051,1412.1 969.759,1412.1 970.467,1412.1 971.175,1412.1 971.883,1412.1 972.59,1412.1 973.298,1412.1 974.006,1412.1 974.714,1412.1 975.422,1412.1 976.129,1412.1 976.837,1412.1 977.545,1412.1 978.253,1412.1 978.961,1412.1 979.668,1412.1 980.376,1412.1 981.084,1412.1 981.792,1412.1 982.499,1412.1 983.207,1412.1 983.915,1412.1 984.623,1412.1 985.331,1412.1 986.038,1412.1 986.746,1412.1 987.454,1412.1 988.162,1412.1 988.87,1412.1 989.577,1412.1 990.285,1412.1 990.993,1412.1 991.701,1412.1 992.409,1412.1 993.116,1412.1 993.824,1412.1 994.532,1412.1 995.24,1412.1 995.947,1412.1 996.655,1412.1 997.363,1412.1 998.071,1412.1 998.779,1412.1 999.486,1412.1 1000.19,1412.1 1000.9,1412.1 1001.61,1412.1 1002.32,1412.1 1003.03,1412.1 1003.73,1412.1 1004.44,1412.1 1005.15,1412.1 1005.86,1412.1 1006.56,1412.1 1007.27,1412.1 1007.98,1412.1 1008.69,1412.1 1009.4,1412.1 1010.1,1412.1 1010.81,1412.1 1011.52,1412.1 1012.23,1412.1 1012.93,1412.1 1013.64,1412.1 1014.35,1412.1 1015.06,1412.1 1015.77,1412.1 1016.47,1412.1 1017.18,1412.1 1017.89,1412.1 1018.6,1412.1 1019.3,1412.1 1020.01,1412.1 1020.72,1412.1 1021.43,1412.1 1022.14,1412.1 1022.84,1412.1 1023.55,1412.1 1024.26,1412.1 1024.97,1412.1 1025.67,1412.1 1026.38,1412.1 1027.09,1412.1 1027.8,1412.1 1028.51,1412.1 1029.21,1412.1 1029.92,1412.1 1030.63,1412.1 1031.34,1412.1 1032.04,1412.1 1032.75,1412.1 1033.46,1412.1 1034.17,1412.1 1034.88,1412.1 1035.58,1412.1 1036.29,1412.1 1037,1412.1 1037.71,1412.1 1038.41,1412.1 1039.12,1412.1 1039.83,1412.1 1040.54,1412.1 1041.25,1412.1 1041.95,1412.1 1042.66,1412.1 1043.37,1412.1 1044.08,1412.1 1044.78,1412.1 1045.49,1412.1 1046.2,1412.1 1046.91,1412.1 1047.62,1412.1 1048.32,1412.1 1049.03,1412.1 1049.74,1412.1 1050.45,1412.1 1051.15,1412.1 1051.86,1412.1 1052.57,1412.1 1053.28,1412.1 1053.99,1412.1 1054.69,1412.1 1055.4,1412.1 1056.11,1412.1 1056.82,1412.1 1057.53,1412.1 1058.23,1412.1 1058.94,1412.1 1059.65,1412.1 1060.36,1412.1 1061.06,1412.1 1061.77,1412.1 1062.48,1412.1 1063.19,1412.1 1063.9,1412.1 1064.6,1412.1 1065.31,1412.1 1066.02,1412.1 1066.73,1412.1 1067.43,1412.1 1068.14,1412.1 1068.85,1412.1 1069.56,1412.1 1070.27,1412.1 1070.97,1412.1 1071.68,1412.1 1072.39,1412.1 1073.1,1412.1 1073.8,1412.1 1074.51,1412.1 1075.22,1412.1 1075.93,1412.1 1076.64,1412.1 1077.34,1412.1 1078.05,1412.1 1078.76,1412.1 1079.47,1412.1 1080.17,1412.1 1080.88,1412.1 1081.59,1412.1 1082.3,1412.1 1083.01,1412.1 1083.71,1412.1 1084.42,1412.1 1085.13,1412.1 1085.84,1412.1 1086.54,1412.1 1087.25,1412.1 1087.96,1412.1 1088.67,1412.1 1089.38,1412.1 1090.08,1412.1 1090.79,1412.1 1091.5,1412.1 1092.21,1412.1 1092.91,1412.1 1093.62,1412.1 1094.33,1412.1 1095.04,1412.1 1095.75,1412.1 1096.45,1412.1 1097.16,1412.1 1097.87,1412.1 1098.58,1412.1 1099.28,1412.1 1099.99,1412.1 1100.7,1412.1 1101.41,1412.1 1102.12,1412.1 1102.82,1412.1 1103.53,1412.1 1104.24,1412.1 1104.95,1412.1 1105.65,1412.1 1106.36,1412.1 1107.07,1412.1 1107.78,1412.1 1108.49,1412.1 1109.19,1412.1 1109.9,1412.1 1110.61,1412.1 1111.32,1412.1 1112.02,1412.1 1112.73,1412.1 1113.44,1412.1 1114.15,1412.1 1114.86,1412.1 1115.56,1412.1 1116.27,1412.1 1116.98,1412.1 1117.69,1412.1 1118.39,1412.1 1119.1,1412.1 1119.81,1412.1 1120.52,1412.1 1121.23,1412.1 1121.93,1412.1 1122.64,1412.1 1123.35,1412.1 1124.06,1412.1 1124.76,1412.1 1125.47,1412.1 1126.18,1412.1 1126.89,1412.1 1127.6,1412.1 1128.3,1412.1 1129.01,1412.1 1129.72,1412.1 1130.43,1412.1 1131.13,1412.1 1131.84,1412.1 1132.55,1412.1 1133.26,1412.1 1133.97,1412.1 1134.67,1412.1 1135.38,1412.1 1136.09,1412.1 1136.8,1412.1 1137.51,1412.1 1138.21,1412.1 1138.92,1412.1 1139.63,1412.1 1140.34,1412.1 1141.04,1412.1 1141.75,1412.1 1142.46,1412.1 1143.17,1412.1 1143.88,1412.1 1144.58,1412.1 1145.29,1412.1 1146,1412.1 1146.71,1412.1 1147.41,1412.1 1148.12,1412.1 1148.83,1412.1 1149.54,1412.1 1150.25,1412.1 1150.95,1412.1 1151.66,1412.1 1152.37,1412.1 1153.08,1412.1 1153.78,1412.1 1154.49,1412.1 1155.2,1412.1 1155.91,1412.1 1156.62,1412.1 1157.32,1412.1 1158.03,1412.1 1158.74,1412.1 1159.45,1412.1 1160.15,1412.1 1160.86,1412.1 1161.57,1412.1 1162.28,1412.1 1162.99,1412.1 1163.69,1412.1 1164.4,1412.1 1165.11,1412.1 1165.82,1412.1 1166.52,1412.1 1167.23,1412.1 1167.94,1412.1 1168.65,1412.1 1169.36,1412.1 1170.06,1412.1 1170.77,1412.1 1171.48,1412.1 1172.19,1412.1 1172.89,1412.1 1173.6,1412.1 1174.31,1412.1 1175.02,1412.1 1175.73,1412.1 1176.43,1412.1 1177.14,1412.1 1177.85,1412.1 1178.56,1412.1 1179.26,1412.1 1179.97,1412.1 1180.68,1412.1 1181.39,1412.1 1182.1,1412.1 1182.8,1412.1 1183.51,1412.1 1184.22,1412.1 1184.93,1412.1 1185.63,1412.1 1186.34,1412.1 1187.05,1412.1 1187.76,1412.1 1188.47,1412.1 1189.17,1412.1 1189.88,1412.1 1190.59,1412.1 1191.3,1412.1 1192,1412.1 1192.71,1412.1 1193.42,1412.1 1194.13,1412.1 1194.84,1412.1 1195.54,1412.1 1196.25,1412.1 1196.96,1412.1 1197.67,1412.1 1198.37,1412.1 1199.08,1412.1 1199.79,1412.1 1200.5,1412.1 1201.21,1412.1 1201.91,1412.1 1202.62,1412.1 1203.33,1412.1 1204.04,1412.1 1204.74,1412.1 1205.45,1412.1 1206.16,1412.1 1206.87,1412.1 1207.58,1412.1 1208.28,1412.1 1208.99,1412.1 1209.7,1412.1 1210.41,1412.1 1211.12,1412.1 1211.82,1412.1 1212.53,1412.1 1213.24,1412.1 1213.95,1412.1 1214.65,1412.1 1215.36,1412.1 1216.07,1412.1 1216.78,1412.1 1217.49,1412.1 1218.19,1412.1 1218.9,1412.1 1219.61,1412.1 1220.32,1412.1 1221.02,1412.1 1221.73,1412.1 1222.44,1412.1 1223.15,1412.1 1223.86,1412.1 1224.56,1412.1 1225.27,1412.1 1225.98,1412.1 1226.69,1412.1 1227.39,1412.1 1228.1,1412.1 1228.81,1412.1 1229.52,1412.1 1230.23,1412.1 1230.93,1412.1 1231.64,1412.1 1232.35,1412.1 1233.06,1412.1 1233.76,1412.1 1234.47,1412.1 1235.18,1412.1 1235.89,1412.1 1236.6,1412.1 1237.3,1412.1 1238.01,1412.1 1238.72,1412.1 1239.43,1412.1 1240.13,1412.1 1240.84,1412.1 1241.55,1412.1 1242.26,1412.1 1242.97,1412.1 1243.67,1412.1 1244.38,1412.1 1245.09,1412.1 1245.8,1412.1 1246.5,1412.1 1247.21,1412.1 1247.92,1412.1 1248.63,1412.1 1249.34,1412.1 1250.04,1412.1 1250.75,1412.1 1251.46,1412.1 1252.17,1412.1 1252.87,1412.1 1253.58,1412.1 1254.29,1412.1 1255,1412.1 1255.71,1412.1 1256.41,1412.1 1257.12,1412.1 1257.83,1412.1 1258.54,1412.1 1259.24,1412.1 1259.95,1412.1 1260.66,1412.1 1261.37,1412.1 1262.08,1412.1 1262.78,1412.1 1263.49,1412.1 1264.2,1412.1 1264.91,1412.1 1265.61,1412.1 1266.32,1412.1 1267.03,1412.1 1267.74,1412.1 1268.45,1412.1 1269.15,1412.1 1269.86,1412.1 1270.57,1412.1 1271.28,1412.1 1271.98,1412.1 1272.69,1412.1 1273.4,1412.1 1274.11,1412.1 1274.82,1412.1 1275.52,1412.1 1276.23,1412.1 1276.94,1412.1 1277.65,1412.1 1278.35,1412.1 1279.06,1412.1 1279.77,1412.1 1280.48,1412.1 1281.19,1412.1 1281.89,1412.1 1282.6,1412.1 1283.31,1412.1 1284.02,1412.1 1284.72,1412.1 1285.43,1412.1 1286.14,1412.1 1286.85,1412.1 1287.56,1412.1 1288.26,1412.1 1288.97,1412.1 1289.68,1412.1 1290.39,1412.1 1291.1,1412.1 1291.8,1412.1 1292.51,1412.1 1293.22,1412.1 1293.93,1412.1 1294.63,1412.1 1295.34,1412.1 1296.05,1412.1 1296.76,1412.1 1297.47,1412.1 1298.17,1412.1 1298.88,1412.1 1299.59,1412.1 1300.3,1412.1 1301,1412.1 1301.71,1412.1 1302.42,1412.1 1303.13,1412.1 1303.84,1412.1 1304.54,1412.1 1305.25,1412.1 1305.96,1412.1 1306.67,1412.1 1307.37,1412.1 1308.08,1412.1 1308.79,1412.1 1309.5,1412.1 1310.21,1412.1 1310.91,1412.1 1311.62,1412.1 1312.33,1412.1 1313.04,1412.1 1313.74,1412.1 1314.45,1412.1 1315.16,1412.1 1315.87,1412.1 1316.58,1412.1 1317.28,1412.1 1317.99,1412.1 1318.7,1412.1 1319.41,1412.1 1320.11,1412.1 1320.82,1412.1 1321.53,1412.1 1322.24,1412.1 1322.95,1412.1 1323.65,1412.1 1324.36,1412.1 1325.07,1412.1 1325.78,1412.1 1326.48,1412.1 1327.19,1412.1 1327.9,1412.1 1328.61,1412.1 1329.32,1412.1 1330.02,1412.1 1330.73,1412.1 1331.44,1412.1 1332.15,1412.1 1332.85,1412.1 1333.56,1412.1 1334.27,1412.1 1334.98,1412.1 1335.69,1412.1 1336.39,1412.1 1337.1,1412.1 1337.81,1412.1 1338.52,1412.1 1339.22,1412.1 1339.93,1412.1 1340.64,1412.1 1341.35,1412.1 1342.06,1412.1 1342.76,1412.1 1343.47,1412.1 1344.18,1412.1 1344.89,1412.1 1345.59,1412.1 1346.3,1412.1 1347.01,1412.1 1347.72,1412.1 1348.43,1412.1 1349.13,1412.1 1349.84,1412.1 1350.55,1412.1 1351.26,1412.1 1351.96,1412.1 1352.67,1412.1 1353.38,1412.1 1354.09,1412.1 1354.8,1412.1 1355.5,1412.1 1356.21,1412.1 1356.92,1412.1 1357.63,1412.1 1358.33,1412.1 1359.04,1412.1 1359.75,1412.1 1360.46,1412.1 1361.17,1412.1 1361.87,1412.1 1362.58,1412.1 1363.29,1412.1 1364,1412.1 1364.71,1412.1 1365.41,1412.1 1366.12,1412.1 1366.83,1412.1 1367.54,1412.1 1368.24,1412.1 1368.95,1412.1 1369.66,1412.1 1370.37,1412.1 1371.08,1412.1 1371.78,1412.1 1372.49,1412.1 1373.2,1412.1 1373.91,1412.1 1374.61,1412.1 1375.32,1412.1 1376.03,1412.1 1376.74,1412.1 1377.45,1412.1 1378.15,1412.1 1378.86,1412.1 1379.57,1412.1 1380.28,1412.1 1380.98,1412.1 1381.69,1412.1 1382.4,1412.1 1383.11,1412.1 1383.82,1412.1 1384.52,1412.1 1385.23,1412.1 1385.94,1412.1 1386.65,1412.1 1387.35,1412.1 1388.06,1412.1 1388.77,1412.1 1389.48,1412.1 1390.19,1412.1 1390.89,1412.1 1391.6,1412.1 1392.31,1412.1 1393.02,1412.1 1393.72,1412.1 1394.43,1412.1 1395.14,1412.1 1395.85,1412.1 1396.56,1412.1 1397.26,1412.1 1397.97,1412.1 1398.68,1412.1 1399.39,1412.1 1400.09,1412.1 1400.8,1412.1 1401.51,1412.1 1402.22,1412.1 1402.93,1412.1 1403.63,1412.1 1404.34,1412.1 1405.05,1412.1 1405.76,1412.1 1406.46,1412.1 1407.17,1412.1 1407.88,1412.1 1408.59,1412.1 1409.3,1412.1 1410,1412.1 1410.71,1412.1 1411.42,1412.1 1412.13,1412.1 1412.83,1412.1 1413.54,1412.1 1414.25,1412.1 1414.96,1412.1 1415.67,1412.1 1416.37,1412.1 1417.08,1412.1 1417.79,1412.1 1418.5,1412.1 1419.2,1412.1 1419.91,1412.1 1420.62,1412.1 1421.33,1412.1 1422.04,1412.1 1422.74,1412.1 1423.45,1412.1 1424.16,1412.1 1424.87,1412.1 1425.57,1412.1 1426.28,1412.1 1426.99,1412.1 1427.7,1412.1 1428.41,1412.1 1429.11,1412.1 1429.82,1412.1 1430.53,1412.1 1431.24,1412.1 1431.94,1412.1 1432.65,1412.1 1433.36,1412.1 1434.07,1412.1 1434.78,1412.1 1435.48,1412.1 1436.19,1412.1 1436.9,1412.1 1437.61,1412.1 1438.31,1412.1 1439.02,1412.1 1439.73,1412.1 1440.44,1412.1 1441.15,1412.1 1441.85,1412.1 1442.56,1412.1 1443.27,1412.1 1443.98,1412.1 1444.69,1412.1 1445.39,1412.1 1446.1,1412.1 1446.81,1412.1 1447.52,1412.1 1448.22,1412.1 1448.93,1412.1 1449.64,1412.1 1450.35,1412.1 1451.06,1412.1 1451.76,1412.1 1452.47,1412.1 1453.18,1412.1 1453.89,1412.1 1454.59,1412.1 1455.3,1412.1 1456.01,1412.1 1456.72,1412.1 1457.43,1412.1 1458.13,1412.1 1458.84,1412.1 1459.55,1412.1 1460.26,1412.1 1460.96,1412.1 1461.67,1412.1 1462.38,1412.1 1463.09,1412.1 1463.8,1412.1 1464.5,1412.1 1465.21,1412.1 1465.92,1412.1 1466.63,1412.1 1467.33,1412.1 1468.04,1412.1 1468.75,1412.1 1469.46,1412.1 1470.17,1412.1 1470.87,1412.1 1471.58,1412.1 1472.29,1412.1 1473,1412.1 1473.7,1412.1 1474.41,1412.1 1475.12,1412.1 1475.83,1412.1 1476.54,1412.1 1477.24,1412.1 1477.95,1412.1 1478.66,1412.1 1479.37,1412.1 1480.07,1412.1 1480.78,1412.1 1481.49,1412.1 1482.2,1412.1 1482.91,1412.1 1483.61,1412.1 1484.32,1412.1 1485.03,1412.1 1485.74,1412.1 1486.44,1412.1 1487.15,1412.1 1487.86,1412.1 1488.57,1412.1 1489.28,1412.1 1489.98,1412.1 1490.69,1412.1 1491.4,1412.1 1492.11,1412.1 1492.81,1412.1 1493.52,1412.1 1494.23,1412.1 1494.94,1412.1 1495.65,1412.1 1496.35,1412.1 1497.06,1412.1 1497.77,1412.1 1498.48,1412.1 1499.18,1412.1 1499.89,1412.1 1500.6,1412.1 1501.31,1412.1 1502.02,1412.1 1502.72,1412.1 1503.43,1412.1 1504.14,1412.1 1504.85,1412.1 1505.55,1412.1 1506.26,1412.1 1506.97,1412.1 1507.68,1412.1 1508.39,1412.1 1509.09,1412.1 1509.8,1412.1 1510.51,1412.1 1511.22,1412.1 1511.92,1412.1 1512.63,1412.1 1513.34,1412.1 1514.05,1412.1 1514.76,1412.1 1515.46,1412.1 1516.17,1412.1 1516.88,1412.1 1517.59,1412.1 1518.3,1412.1 1519,1412.1 1519.71,1412.1 1520.42,1412.1 1521.13,1412.1 1521.83,1412.1 1522.54,1412.1 1523.25,1412.1 1523.96,1412.1 1524.67,1412.1 1525.37,1412.1 1526.08,1412.1 1526.79,1412.1 1527.5,1412.1 1528.2,1412.1 1528.91,1412.1 1529.62,1412.1 1530.33,1412.1 1531.04,1412.1 1531.74,1412.1 1532.45,1412.1 1533.16,1412.1 1533.87,1412.1 1534.57,1412.1 1535.28,1412.1 1535.99,1412.1 1536.7,1412.1 1537.41,1412.1 1538.11,1412.1 1538.82,1412.1 1539.53,1412.1 1540.24,1412.1 1540.94,1412.1 1541.65,1412.1 1542.36,1412.1 1543.07,1412.1 1543.78,1412.1 1544.48,1412.1 1545.19,1412.1 1545.9,1412.1 1546.61,1412.1 1547.31,1412.1 1548.02,1412.1 1548.73,1412.1 1549.44,1412.1 1550.15,1412.1 1550.85,1412.1 1551.56,1412.1 1552.27,1412.1 1552.98,1412.1 1553.68,1412.1 1554.39,1412.1 1555.1,1412.1 1555.81,1412.1 1556.52,1412.1 1557.22,1412.1 1557.93,1412.1 1558.64,1412.1 1559.35,1412.1 1560.05,1412.1 1560.76,1412.1 1561.47,1412.1 1562.18,1412.1 1562.89,1412.1 1563.59,1412.1 1564.3,1412.1 1565.01,1412.1 1565.72,1412.1 1566.42,1412.1 1567.13,1412.1 1567.84,1412.1 1568.55,1412.1 1569.26,1412.1 1569.96,1412.1 1570.67,1412.1 1571.38,1412.1 1572.09,1412.1 1572.79,1412.1 1573.5,1412.1 1574.21,1412.1 1574.92,1412.1 1575.63,1412.1 1576.33,1412.1 1577.04,1412.1 1577.75,1412.1 1578.46,1412.1 1579.16,1412.1 1579.87,1412.1 1580.58,1412.1 1581.29,1412.1 1582,1412.1 1582.7,1412.1 1583.41,1412.1 1584.12,1412.1 1584.83,1412.1 1585.53,1412.1 1586.24,1412.1 1586.95,1412.1 1587.66,1412.1 1588.37,1412.1 1589.07,1412.1 1589.78,1412.1 1590.49,1412.1 1591.2,1412.1 1591.9,1412.1 1592.61,1412.1 1593.32,1412.1 1594.03,1412.1 1594.74,1412.1 1595.44,1412.1 1596.15,1412.1 1596.86,1412.1 1597.57,1412.1 1598.28,1412.1 1598.98,1412.1 1599.69,1412.1 1600.4,1412.1 1601.11,1412.1 1601.81,1412.1 1602.52,1412.1 1603.23,1412.1 1603.94,1412.1 1604.65,1412.1 1605.35,1412.1 1606.06,1412.1 1606.77,1412.1 1607.48,1412.1 1608.18,1412.1 1608.89,1412.1 1609.6,1412.1 1610.31,1412.1 1611.02,1412.1 1611.72,1412.1 1612.43,1412.1 1613.14,1412.1 1613.85,1412.1 1614.55,1412.1 1615.26,1412.1 1615.97,1412.1 1616.68,1412.1 1617.39,1412.1 1618.09,1412.1 1618.8,1412.1 1619.51,1412.1 1620.22,1412.1 1620.92,1412.1 1621.63,1412.1 1622.34,1412.1 1623.05,1412.1 1623.76,1412.1 1624.46,1412.1 1625.17,1412.1 1625.88,1412.1 1626.59,1412.1 1627.29,1412.1 1628,1412.1 1628.71,1412.1 1629.42,1412.1 1630.13,1412.1 1630.83,1412.1 1631.54,1412.1 1632.25,1412.1 1632.96,1412.1 1633.66,1412.1 1634.37,1412.1 1635.08,1412.1 1635.79,1412.1 1636.5,1412.1 1637.2,1412.1 1637.91,1412.1 1638.62,1412.1 1639.33,1412.1 1640.03,1412.1 1640.74,1412.1 1641.45,1412.1 1642.16,1412.1 1642.87,1412.1 1643.57,1412.1 1644.28,1412.1 1644.99,1412.1 1645.7,1412.1 1646.4,1412.1 1647.11,1412.1 1647.82,1412.1 1648.53,1412.1 1649.24,1412.1 1649.94,1412.1 1650.65,1412.1 1651.36,1412.1 1652.07,1412.1 1652.77,1412.1 1653.48,1412.1 1654.19,1412.1 1654.9,1412.1 1655.61,1412.1 1656.31,1412.1 1657.02,1412.1 1657.73,1412.1 1658.44,1412.1 1659.14,1412.1 1659.85,1412.1 1660.56,1412.1 1661.27,1412.1 1661.98,1412.1 1662.68,1412.1 1663.39,1412.1 1664.1,1412.1 1664.81,1412.1 1665.51,1412.1 1666.22,1412.1 1666.93,1412.1 1667.64,1412.1 1668.35,1412.1 1669.05,1412.1 1669.76,1412.1 1670.47,1412.1 1671.18,1412.1 1671.89,1412.1 1672.59,1412.1 1673.3,1412.1 1674.01,1412.1 1674.72,1412.1 1675.42,1412.1 1676.13,1412.1 1676.84,1412.1 1677.55,1412.1 1678.26,1412.1 1678.96,1412.1 1679.67,1412.1 1680.38,1412.1 1681.09,1412.1 1681.79,1412.1 1682.5,1412.1 1683.21,1412.1 1683.92,1412.1 1684.63,1412.1 1685.33,1412.1 1686.04,1412.1 1686.75,1412.1 1687.46,1412.1 1688.16,1412.1 1688.87,1412.1 1689.58,1412.1 1690.29,1412.1 1691,1412.1 1691.7,1412.1 1692.41,1412.1 1693.12,1412.1 1693.83,1412.1 1694.53,1412.1 1695.24,1412.1 1695.95,1412.1 1696.66,1412.1 1697.37,1412.1 1698.07,1412.1 1698.78,1412.1 1699.49,1412.1 1700.2,1412.1 1700.9,1412.1 1701.61,1412.1 1702.32,1412.1 1703.03,1412.1 1703.74,1412.1 1704.44,1412.1 1705.15,1412.1 1705.86,1412.1 1706.57,1412.1 1707.27,1412.1 1707.98,1412.1 1708.69,1412.1 1709.4,1412.1 1710.11,1412.1 1710.81,1412.1 1711.52,1412.1 1712.23,1412.1 1712.94,1412.1 1713.64,1412.1 1714.35,1412.1 1715.06,1412.1 1715.77,1412.1 1716.48,1412.1 1717.18,1412.1 1717.89,1412.1 1718.6,1412.1 1719.31,1412.1 1720.01,1412.1 1720.72,1412.1 1721.43,1412.1 1722.14,1412.1 1722.85,1412.1 1723.55,1412.1 1724.26,1412.1 1724.97,1412.1 1725.68,1412.1 1726.38,1412.1 1727.09,1412.1 1727.8,1412.1 1728.51,1412.1 1729.22,1412.1 1729.92,1412.1 1730.63,1412.1 1731.34,1412.1 1732.05,1412.1 1732.75,1412.1 1733.46,1412.1 1734.17,1412.1 1734.88,1412.1 1735.59,1412.1 1736.29,1412.1 1737,1412.1 1737.71,1412.1 1738.42,1412.1 1739.12,1412.1 1739.83,1412.1 1740.54,1412.1 1741.25,1412.1 1741.96,1412.1 1742.66,1412.1 1743.37,1412.1 1744.08,1412.1 1744.79,1412.1 1745.49,1412.1 1746.2,1412.1 1746.91,1412.1 1747.62,1412.1 1748.33,1412.1 1749.03,1412.1 1749.74,1412.1 1750.45,1412.1 1751.16,1412.1 1751.87,1412.1 1752.57,1412.1 1753.28,1412.1 1753.99,1412.1 1754.7,1412.1 1755.4,1412.1 1756.11,1412.1 1756.82,1412.1 1757.53,1412.1 1758.24,1412.1 1758.94,1412.1 1759.65,1412.1 1760.36,1412.1 1761.07,1412.1 1761.77,1412.1 1762.48,1412.1 1763.19,1412.1 1763.9,1412.1 1764.61,1412.1 1765.31,1412.1 1766.02,1412.1 1766.73,1412.1 1767.44,1412.1 1768.14,1412.1 1768.85,1412.1 1769.56,1412.1 1770.27,1412.1 1770.98,1412.1 1771.68,1412.1 1772.39,1412.1 1773.1,1412.1 1773.81,1412.1 1774.51,1412.1 1775.22,1412.1 1775.93,1412.1 1776.64,1412.1 1777.35,1412.1 1778.05,1412.1 1778.76,1412.1 1779.47,1412.1 1780.18,1412.1 1780.88,1412.1 1781.59,1412.1 1782.3,1412.1 1783.01,1412.1 1783.72,1412.1 1784.42,1412.1 1785.13,1412.1 1785.84,1412.1 1786.55,1412.1 1787.25,1412.1 1787.96,1412.1 1788.67,1412.1 1789.38,1412.1 1790.09,1412.1 1790.79,1412.1 1791.5,1412.1 1792.21,1412.1 1792.92,1412.1 1793.62,1412.1 1794.33,1412.1 1795.04,1412.1 1795.75,1412.1 1796.46,1412.1 1797.16,1412.1 1797.87,1412.1 1798.58,1412.1 1799.29,1412.1 1799.99,1412.1 1800.7,1412.1 1801.41,1412.1 1802.12,1412.1 1802.83,1412.1 1803.53,1412.1 1804.24,1412.1 1804.95,1412.1 1805.66,1412.1 1806.36,1412.1 1807.07,1412.1 1807.78,1412.1 1808.49,1412.1 1809.2,1412.1 1809.9,1412.1 1810.61,1412.1 1811.32,1412.1 1812.03,1412.1 1812.73,1412.1 1813.44,1412.1 1814.15,1412.1 1814.86,1412.1 1815.57,1412.1 1816.27,1412.1 1816.98,1412.1 1817.69,1412.1 1818.4,1412.1 1819.1,1412.1 1819.81,1412.1 1820.52,1412.1 1821.23,1412.1 1821.94,1412.1 1822.64,1412.1 1823.35,1412.1 1824.06,1412.1 1824.77,1412.1 1825.48,1412.1 1826.18,1412.1 1826.89,1412.1 1827.6,1412.1 1828.31,1412.1 1829.01,1412.1 1829.72,1412.1 1830.43,1412.1 1831.14,1412.1 1831.85,1412.1 1832.55,1412.1 1833.26,1412.1 1833.97,1412.1 1834.68,1412.1 1835.38,1412.1 1836.09,1412.1 1836.8,1412.1 1837.51,1412.1 1838.22,1412.1 1838.92,1412.1 1839.63,1412.1 1840.34,1412.1 1841.05,1412.1 1841.75,1412.1 1842.46,1412.1 1843.17,1412.1 1843.88,1412.1 1844.59,1412.1 1845.29,1412.1 1846,1412.1 1846.71,1412.1 1847.42,1412.1 1848.12,1412.1 1848.83,1412.1 1849.54,1412.1 1850.25,1412.1 1850.96,1412.1 1851.66,1412.1 1852.37,1412.1 1853.08,1412.1 1853.79,1412.1 1854.49,1412.1 1855.2,1412.1 1855.91,1412.1 1856.62,1412.1 1857.33,1412.1 1858.03,1412.1 1858.74,1412.1 1859.45,1412.1 1860.16,1412.1 1860.86,1412.1 1861.57,1412.1 1862.28,1412.1 1862.99,1412.1 1863.7,1412.1 1864.4,1412.1 1865.11,1412.1 1865.82,1412.1 1866.53,1412.1 1867.23,1412.1 1867.94,1412.1 1868.65,1412.1 1869.36,1412.1 1870.07,1412.1 1870.77,1412.1 1871.48,1412.1 1872.19,1412.1 1872.9,1412.1 1873.6,1412.1 1874.31,1412.1 1875.02,1412.1 1875.73,1412.1 1876.44,1412.1 1877.14,1412.1 1877.85,1412.1 1878.56,1412.1 1879.27,1412.1 1879.97,1412.1 1880.68,1412.1 1881.39,1412.1 1882.1,1412.1 1882.81,1412.1 1883.51,1412.1 1884.22,1412.1 1884.93,1412.1 1885.64,1412.1 1886.34,1412.1 1887.05,1412.1 1887.76,1412.1 1888.47,1412.1 1889.18,1412.1 1889.88,1412.1 1890.59,1412.1 1891.3,1412.1 1892.01,1412.1 1892.71,1412.1 1893.42,1412.1 1894.13,1412.1 1894.84,1412.1 1895.55,1412.1 1896.25,1412.1 1896.96,1412.1 1897.67,1412.1 1898.38,1412.1 1899.08,1412.1 1899.79,1412.1 1900.5,1412.1 1901.21,1412.1 1901.92,1412.1 1902.62,1412.1 1903.33,1412.1 1904.04,1412.1 1904.75,1412.1 1905.46,1412.1 1906.16,1412.1 1906.87,1412.1 1907.58,1412.1 1908.29,1412.1 1908.99,1412.1 1909.7,1412.1 1910.41,1412.1 1911.12,1412.1 1911.83,1412.1 1912.53,1412.1 1913.24,1412.1 1913.95,1412.1 1914.66,1412.1 1915.36,1412.1 1916.07,1412.1 1916.78,1412.1 1917.49,1412.1 1918.2,1412.1 1918.9,1412.1 1919.61,1412.1 1920.32,1412.1 1921.03,1412.1 1921.73,1412.1 1922.44,1412.1 1923.15,1412.1 1923.86,1412.1 1924.57,1412.1 1925.27,1412.1 1925.98,1412.1 1926.69,1412.1 1927.4,1412.1 1928.1,1412.1 1928.81,1412.1 1929.52,1412.1 1930.23,1412.1 1930.94,1412.1 1931.64,1412.1 1932.35,1412.1 1933.06,1412.1 1933.77,1412.1 1934.47,1412.1 1935.18,1412.1 1935.89,1412.1 1936.6,1412.1 1937.31,1412.1 1938.01,1412.1 1938.72,1412.1 1939.43,1412.1 1940.14,1412.1 1940.84,1412.1 1941.55,1412.1 1942.26,1412.1 1942.97,1412.1 1943.68,1412.1 1944.38,1412.1 1945.09,1412.1 1945.8,1412.1 1946.51,1412.1 1947.21,1412.1 1947.92,1412.1 1948.63,1412.1 1949.34,1412.1 1950.05,1412.1 1950.75,1412.1 1951.46,1412.1 1952.17,1412.1 1952.88,1412.1 1953.58,1412.1 1954.29,1412.1 1955,1412.1 1955.71,1412.1 1956.42,1412.1 1957.12,1412.1 1957.83,1412.1 1958.54,1412.1 1959.25,1412.1 1959.95,1412.1 1960.66,1412.1 1961.37,1412.1 1962.08,1412.1 1962.79,1412.1 1963.49,1412.1 1964.2,1412.1 1964.91,1412.1 1965.62,1412.1 1966.32,1412.1 1967.03,1412.1 1967.74,1412.1 1968.45,1412.1 1969.16,1412.1 1969.86,1412.1 1970.57,1412.1 1971.28,1412.1 1971.99,1412.1 1972.69,1412.1 1973.4,1412.1 1974.11,1412.1 1974.82,1412.1 1975.53,1412.1 1976.23,1412.1 1976.94,1412.1 1977.65,1412.1 1978.36,1412.1 1979.07,1412.1 1979.77,1412.1 1980.48,1412.1 1981.19,1412.1 1981.9,1412.1 1982.6,1412.1 1983.31,1412.1 1984.02,1412.1 1984.73,1412.1 1985.44,1412.1 1986.14,1412.1 1986.85,1412.1 1987.56,1412.1 1988.27,1412.1 1988.97,1412.1 1989.68,1412.1 1990.39,1412.1 1991.1,1412.1 1991.81,1412.1 1992.51,1412.1 1993.22,1412.1 1993.93,1412.1 1994.64,1412.1 1995.34,1412.1 1996.05,1412.1 1996.76,1412.1 1997.47,1412.1 1998.18,1412.1 1998.88,1412.1 1999.59,1412.1 2000.3,1412.1 2001.01,1412.1 2001.71,1412.1 2002.42,1412.1 2003.13,1412.1 2003.84,1412.1 2004.55,1412.1 2005.25,1412.1 2005.96,1412.1 2006.67,1412.1 2007.38,1412.1 2008.08,1412.1 2008.79,1412.1 2009.5,1412.1 2010.21,1412.1 2010.92,1412.1 2011.62,1412.1 2012.33,1412.1 2013.04,1412.1 2013.75,1412.1 2014.45,1412.1 2015.16,1412.1 2015.87,1412.1 2016.58,1412.1 2017.29,1412.1 2017.99,1412.1 2018.7,1412.1 2019.41,1412.1 2020.12,1412.1 2020.82,1412.1 2021.53,1412.1 2022.24,1412.1 2022.95,1412.1 2023.66,1412.1 2024.36,1412.1 2025.07,1412.1 2025.78,1412.1 2026.49,1412.1 2027.19,1412.1 2027.9,1412.1 2028.61,1412.1 2029.32,1412.1 2030.03,1412.1 2030.73,1412.1 2031.44,1412.1 2032.15,1412.1 2032.86,1412.1 2033.56,1412.1 2034.27,1412.1 2034.98,1412.1 2035.69,1412.1 2036.4,1412.1 2037.1,1412.1 2037.81,1412.1 2038.52,1412.1 2039.23,1412.1 2039.93,1412.1 2040.64,1412.1 2041.35,1412.1 2042.06,1412.1 2042.77,1412.1 2043.47,1412.1 2044.18,1412.1 2044.89,1412.1 2045.6,1412.1 2046.3,1412.1 2047.01,1412.1 2047.72,1412.1 2048.43,1412.1 2049.14,1412.1 2049.84,1412.1 2050.55,1412.1 2051.26,1412.1 2051.97,1412.1 2052.68,1412.1 2053.38,1412.1 2054.09,1412.1 2054.8,1412.1 2055.51,1412.1 2056.21,1412.1 2056.92,1412.1 2057.63,1412.1 2058.34,1412.1 2059.05,1412.1 2059.75,1412.1 2060.46,1412.1 2061.17,1412.1 2061.88,1412.1 2062.58,1412.1 2063.29,1412.1 2064,1412.1 2064.71,1412.1 2065.42,1412.1 2066.12,1412.1 2066.83,1412.1 2067.54,1412.1 2068.25,1412.1 2068.95,1412.1 2069.66,1412.1 2070.37,1412.1 2071.08,1412.1 2071.79,1412.1 2072.49,1412.1 2073.2,1412.1 2073.91,1412.1 2074.62,1412.1 2075.32,1412.1 2076.03,1412.1 2076.74,1412.1 2077.45,1412.1 2078.16,1412.1 2078.86,1412.1 2079.57,1412.1 2080.28,1412.1 2080.99,1412.1 2081.69,1412.1 2082.4,1412.1 2083.11,1412.1 2083.82,1412.1 2084.53,1412.1 2085.23,1412.1 2085.94,1412.1 2086.65,1412.1 2087.36,1412.1 2088.06,1412.1 2088.77,1412.1 2089.48,1412.1 2090.19,1412.1 2090.9,1412.1 2091.6,1412.1 2092.31,1412.1 2093.02,1412.1 2093.73,1412.1 2094.43,1412.1 2095.14,1412.1 2095.85,1412.1 2096.56,1412.1 2097.27,1412.1 2097.97,1412.1 2098.68,1412.1 2099.39,1412.1 2100.1,1412.1 2100.8,1412.1 2101.51,1412.1 2102.22,1412.1 2102.93,1412.1 2103.64,1412.1 2104.34,1412.1 2105.05,1412.1 2105.76,1412.1 2106.47,1412.1 2107.17,1412.1 2107.88,1412.1 2108.59,1412.1 2109.3,1412.1 2110.01,1412.1 2110.71,1412.1 2111.42,1412.1 2112.13,1412.1 2112.84,1412.1 2113.54,1412.1 2114.25,1412.1 2114.96,1412.1 2115.67,1412.1 2116.38,1412.1 2117.08,1412.1 2117.79,1412.1 2118.5,1412.1 2119.21,1412.1 2119.91,1412.1 2120.62,1412.1 2121.33,1412.1 2122.04,1412.1 2122.75,1412.1 2123.45,1412.1 2124.16,1412.1 2124.87,1412.1 2125.58,1412.1 2126.28,1412.1 2126.99,1412.1 2127.7,1412.1 2128.41,1412.1 2129.12,1412.1 2129.82,1412.1 2130.53,1412.1 2131.24,1412.1 2131.95,1412.1 2132.66,1412.1 2133.36,1412.1 2134.07,1412.1 2134.78,1412.1 2135.49,1412.1 2136.19,1412.1 2136.9,1412.1 2137.61,1412.1 2138.32,1412.1 2139.03,1412.1 2139.73,1412.1 2140.44,1412.1 2141.15,1412.1 2141.86,1412.1 2142.56,1412.1 2143.27,1412.1 2143.98,1412.1 2144.69,1412.1 2145.4,1412.1 2146.1,1412.1 2146.81,1412.1 2147.52,1412.1 2148.23,1412.1 2148.93,1412.1 2149.64,1412.1 2150.35,1412.1 2151.06,1412.1 2151.77,1412.1 2152.47,1412.1 2153.18,1412.1 2153.89,1412.1 2154.6,1412.1 2155.3,1412.1 2156.01,1412.1 2156.72,1412.1 2157.43,1412.1 2158.14,1412.1 2158.84,1412.1 2159.55,1412.1 2160.26,1412.1 2160.97,1412.1 2161.67,1412.1 2162.38,1412.1 2163.09,1412.1 2163.8,1412.1 2164.51,1412.1 2165.21,1412.1 2165.92,1412.1 2166.63,1412.1 2167.34,1412.1 2168.04,1412.1 2168.75,1412.1 2169.46,1412.1 2170.17,1412.1 2170.88,1412.1 2171.58,1412.1 2172.29,1412.1 2173,1412.1 2173.71,1412.1 2174.41,1412.1 2175.12,1412.1 2175.83,1412.1 2176.54,1412.1 2177.25,1412.1 2177.95,1412.1 2178.66,1412.1 2179.37,1412.1 2180.08,1412.1 2180.78,1412.1 2181.49,1412.1 2182.2,1412.1 2182.91,1412.1 2183.62,1412.1 2184.32,1412.1 2185.03,1412.1 2185.74,1412.1 2186.45,1412.1 2187.15,1412.1 2187.86,1412.1 2188.57,1412.1 2189.28,1412.1 2189.99,1412.1 2190.69,1412.1 2191.4,1412.1 2192.11,1412.1 2192.82,1412.1 2193.52,1412.1 2194.23,1412.1 2194.94,1412.1 2195.65,1412.1 2196.36,1412.1 2197.06,1412.1 2197.77,1412.1 2198.48,1412.1 2199.19,1412.1 2199.89,1412.1 2200.6,1412.1 2201.31,1412.1 2202.02,1412.1 2202.73,1412.1 2203.43,1412.1 2204.14,1412.1 2204.85,1412.1 2205.56,1412.1 2206.27,1412.1 2206.97,1412.1 2207.68,1412.1 2208.39,1412.1 2209.1,1412.1 2209.8,1412.1 2210.51,1412.1 2211.22,1412.1 2211.93,1412.1 2212.64,1412.1 2213.34,1412.1 2214.05,1412.1 2214.76,1412.1 2215.47,1412.1 2216.17,1412.1 2216.88,1412.1 2217.59,1412.1 2218.3,1412.1 2219.01,1412.1 2219.71,1412.1 2220.42,1412.1 2221.13,1412.1 2221.84,1412.1 2222.54,1412.1 2223.25,1412.1 2223.96,1412.1 2224.67,1412.1 2225.38,1412.1 2226.08,1412.1 2226.79,1412.1 2227.5,1412.1 2228.21,1412.1 2228.91,1412.1 2229.62,1412.1 2230.33,1412.1 2231.04,1412.1 2231.75,1412.1 2232.45,1412.1 2233.16,1412.1 2233.87,1412.1 2234.58,1412.1 2235.28,1412.1 2235.99,1412.1 2236.7,1412.1 2237.41,1412.1 2238.12,1412.1 2238.82,1412.1 2239.53,1412.1 2240.24,1412.1 2240.95,1412.1 2241.65,1412.1 2242.36,1412.1 2243.07,1412.1 2243.78,1412.1 2244.49,1412.1 2245.19,1412.1 2245.9,1412.1 2246.61,1412.1 2247.32,1412.1 2248.02,1412.1 2248.73,1412.1 2249.44,1412.1 2250.15,1412.1 2250.86,1412.1 2251.56,1412.1 2252.27,1412.1 2252.98,1412.1 2253.69,1412.1 2254.39,1412.1 2255.1,1412.1 2255.81,1412.1 2256.52,1412.1 2257.23,1412.1 2257.93,1412.1 2258.64,1412.1 2259.35,1412.1 2260.06,1412.1 2260.76,1412.1 2261.47,1412.1 2262.18,1412.1 2262.89,1412.1 2263.6,1412.1 2264.3,1412.1 2265.01,1412.1 2265.72,1412.1 2266.43,1412.1 2267.13,1412.1 2267.84,1412.1 2268.55,1412.1 2269.26,1412.1 2269.97,1412.1 2270.67,1412.1 2271.38,1412.1 2272.09,1412.1 2272.8,1412.1 2273.5,1412.1 2274.21,1412.1 2274.92,1412.1 2275.63,1412.1 2276.34,1412.1 2277.04,1412.1 2277.75,1412.1 2278.46,1412.1 2279.17,1412.1 2279.87,1412.1 2280.58,1412.1 2281.29,1412.1 2282,1412.1 2282.71,1412.1 2283.41,1412.1 2284.12,1412.1 2284.83,1412.1 2285.54,1412.1 2286.25,1412.1 2286.95,1412.1 2287.66,1412.1 2288.37,1412.1 2289.08,1412.1 \"/>\n<path clip-path=\"url(#clip602)\" d=\"M874.208 1411.95 L874.916 1411.95 L875.623 1411.95 L876.331 1411.95 L877.039 1411.95 L877.747 1411.95 L878.455 1411.95 L879.162 1411.95 L879.87 1411.95 L880.578 1411.95 L881.286 1411.95 L881.994 1411.95 L882.701 1411.95 L883.409 1411.95 L884.117 1411.95 L884.825 1411.95 L885.533 1411.95 L886.24 1411.95 L886.948 1411.95 L887.656 1411.95 L888.364 1411.95 L889.071 1411.95 L889.779 1411.95 L890.487 1411.95 L891.195 1411.95 L891.903 1411.95 L892.61 1411.95 L893.318 1411.95 L894.026 1411.95 L894.734 1411.95 L895.442 1411.95 L896.149 1411.95 L896.857 1411.95 L897.565 1411.95 L898.273 1411.95 L898.98 1411.95 L899.688 1411.95 L900.396 1411.95 L901.104 1411.95 L901.812 1411.95 L902.519 1411.95 L903.227 1411.95 L903.935 1411.95 L904.643 1411.95 L905.351 1411.95 L906.058 1411.95 L906.766 1411.95 L907.474 1411.95 L908.182 1411.95 L908.89 1411.95 L909.597 1411.95 L910.305 1411.95 L911.013 1411.95 L911.721 1411.95 L912.428 1411.95 L913.136 1411.95 L913.844 1411.95 L914.552 1411.95 L915.26 1411.95 L915.967 1411.95 L916.675 1411.95 L917.383 1411.95 L918.091 1411.95 L918.799 1411.95 L919.506 1411.95 L920.214 1411.95 L920.922 1411.95 L921.63 1411.95 L922.337 1411.95 L923.045 1411.95 L923.753 1411.95 L924.461 1411.95 L925.169 1411.95 L925.876 1411.95 L926.584 1411.95 L927.292 1411.95 L928 1411.95 L928.708 1411.95 L929.415 1411.95 L930.123 1411.95 L930.831 1411.95 L931.539 1411.95 L932.247 1411.95 L932.954 1411.95 L933.662 1411.95 L934.37 1411.95 L935.078 1411.95 L935.785 1411.95 L936.493 1411.95 L937.201 1411.95 L937.909 1411.95 L938.617 1411.95 L939.324 1411.95 L940.032 1411.95 L940.74 1411.95 L941.448 1411.95 L942.156 1411.95 L942.863 1411.95 L943.571 1411.95 L944.279 1411.95 L944.987 1411.95 L945.694 1411.95 L946.402 1411.95 L947.11 1411.95 L947.818 1411.95 L948.526 1411.95 L949.233 1411.95 L949.941 1411.95 L950.649 1411.95 L951.357 1411.95 L952.065 1411.95 L952.772 1411.95 L953.48 1411.95 L954.188 1411.95 L954.896 1411.95 L955.604 1411.95 L956.311 1411.95 L957.019 1411.95 L957.727 1411.95 L958.435 1411.95 L959.142 1411.95 L959.85 1411.95 L960.558 1411.95 L961.266 1411.95 L961.974 1411.95 L962.681 1411.95 L963.389 1411.95 L964.097 1411.95 L964.805 1411.95 L965.513 1411.95 L966.22 1411.95 L966.928 1411.95 L967.636 1411.95 L968.344 1411.95 L969.051 1411.95 L969.759 1411.95 L970.467 1411.95 L971.175 1411.95 L971.883 1411.95 L972.59 1411.95 L973.298 1411.95 L974.006 1411.95 L974.714 1411.95 L975.422 1411.95 L976.129 1411.95 L976.837 1411.95 L977.545 1411.95 L978.253 1411.95 L978.961 1411.95 L979.668 1411.95 L980.376 1411.95 L981.084 1411.95 L981.792 1411.95 L982.499 1411.95 L983.207 1411.95 L983.915 1411.95 L984.623 1411.95 L985.331 1411.95 L986.038 1411.95 L986.746 1411.95 L987.454 1411.95 L988.162 1411.95 L988.87 1411.95 L989.577 1411.95 L990.285 1411.95 L990.993 1411.95 L991.701 1411.95 L992.409 1411.95 L993.116 1411.95 L993.824 1411.95 L994.532 1411.95 L995.24 1411.95 L995.947 1411.95 L996.655 1411.95 L997.363 1411.95 L998.071 1411.95 L998.779 1411.95 L999.486 1411.95 L1000.19 1411.95 L1000.9 1411.95 L1001.61 1411.95 L1002.32 1411.95 L1003.03 1411.95 L1003.73 1411.95 L1004.44 1411.95 L1005.15 1411.95 L1005.86 1411.95 L1006.56 1411.95 L1007.27 1411.95 L1007.98 1411.95 L1008.69 1411.95 L1009.4 1411.95 L1010.1 1411.95 L1010.81 1411.95 L1011.52 1411.95 L1012.23 1411.95 L1012.93 1411.95 L1013.64 1411.95 L1014.35 1411.95 L1015.06 1411.95 L1015.77 1411.95 L1016.47 1411.95 L1017.18 1411.95 L1017.89 1411.95 L1018.6 1411.95 L1019.3 1411.95 L1020.01 1411.95 L1020.72 1411.95 L1021.43 1411.95 L1022.14 1411.95 L1022.84 1411.95 L1023.55 1411.95 L1024.26 1411.95 L1024.97 1411.95 L1025.67 1411.95 L1026.38 1411.95 L1027.09 1411.95 L1027.8 1411.95 L1028.51 1411.95 L1029.21 1411.95 L1029.92 1411.95 L1030.63 1411.95 L1031.34 1411.95 L1032.04 1411.95 L1032.75 1411.95 L1033.46 1411.95 L1034.17 1411.95 L1034.88 1411.95 L1035.58 1411.95 L1036.29 1411.95 L1037 1411.95 L1037.71 1411.95 L1038.41 1411.95 L1039.12 1411.95 L1039.83 1411.95 L1040.54 1411.95 L1041.25 1411.95 L1041.95 1411.95 L1042.66 1411.95 L1043.37 1411.95 L1044.08 1411.95 L1044.78 1411.95 L1045.49 1411.95 L1046.2 1411.95 L1046.91 1411.95 L1047.62 1411.95 L1048.32 1411.95 L1049.03 1411.95 L1049.74 1411.95 L1050.45 1411.95 L1051.15 1411.95 L1051.86 1411.95 L1052.57 1411.95 L1053.28 1411.95 L1053.99 1411.95 L1054.69 1411.95 L1055.4 1411.95 L1056.11 1411.95 L1056.82 1411.95 L1057.53 1411.95 L1058.23 1411.95 L1058.94 1411.95 L1059.65 1411.95 L1060.36 1411.95 L1061.06 1411.95 L1061.77 1411.95 L1062.48 1411.95 L1063.19 1411.95 L1063.9 1411.95 L1064.6 1411.95 L1065.31 1411.95 L1066.02 1411.95 L1066.73 1411.95 L1067.43 1411.95 L1068.14 1411.95 L1068.85 1411.95 L1069.56 1411.95 L1070.27 1411.95 L1070.97 1411.95 L1071.68 1411.95 L1072.39 1411.95 L1073.1 1411.95 L1073.8 1411.95 L1074.51 1411.95 L1075.22 1411.95 L1075.93 1411.95 L1076.64 1411.95 L1077.34 1411.95 L1078.05 1411.95 L1078.76 1411.95 L1079.47 1411.95 L1080.17 1411.95 L1080.88 1411.95 L1081.59 1411.95 L1082.3 1411.95 L1083.01 1411.95 L1083.71 1411.95 L1084.42 1411.95 L1085.13 1411.95 L1085.84 1411.95 L1086.54 1411.95 L1087.25 1411.95 L1087.96 1411.95 L1088.67 1411.95 L1089.38 1411.95 L1090.08 1411.95 L1090.79 1411.95 L1091.5 1411.95 L1092.21 1411.95 L1092.91 1411.95 L1093.62 1411.95 L1094.33 1411.95 L1095.04 1411.95 L1095.75 1411.95 L1096.45 1411.95 L1097.16 1411.95 L1097.87 1411.95 L1098.58 1411.95 L1099.28 1411.95 L1099.99 1411.95 L1100.7 1411.95 L1101.41 1411.95 L1102.12 1411.95 L1102.82 1411.95 L1103.53 1411.95 L1104.24 1411.95 L1104.95 1411.95 L1105.65 1411.95 L1106.36 1411.95 L1107.07 1411.95 L1107.78 1411.95 L1108.49 1411.95 L1109.19 1411.95 L1109.9 1411.95 L1110.61 1411.95 L1111.32 1411.95 L1112.02 1411.95 L1112.73 1411.95 L1113.44 1411.95 L1114.15 1411.95 L1114.86 1411.95 L1115.56 1411.95 L1116.27 1411.95 L1116.98 1411.95 L1117.69 1411.95 L1118.39 1411.95 L1119.1 1411.95 L1119.81 1411.95 L1120.52 1411.95 L1121.23 1411.95 L1121.93 1411.95 L1122.64 1411.95 L1123.35 1411.95 L1124.06 1411.95 L1124.76 1411.95 L1125.47 1411.95 L1126.18 1411.95 L1126.89 1411.95 L1127.6 1411.95 L1128.3 1411.95 L1129.01 1411.95 L1129.72 1411.95 L1130.43 1411.95 L1131.13 1411.95 L1131.84 1411.95 L1132.55 1411.95 L1133.26 1411.95 L1133.97 1411.95 L1134.67 1411.95 L1135.38 1411.95 L1136.09 1411.95 L1136.8 1411.95 L1137.51 1411.95 L1138.21 1411.95 L1138.92 1411.95 L1139.63 1411.95 L1140.34 1411.95 L1141.04 1411.95 L1141.75 1411.95 L1142.46 1411.95 L1143.17 1411.95 L1143.88 1411.95 L1144.58 1411.95 L1145.29 1411.95 L1146 1411.95 L1146.71 1411.95 L1147.41 1411.95 L1148.12 1411.95 L1148.83 1411.95 L1149.54 1411.95 L1150.25 1411.95 L1150.95 1411.95 L1151.66 1411.95 L1152.37 1411.95 L1153.08 1411.95 L1153.78 1411.95 L1154.49 1411.95 L1155.2 1411.95 L1155.91 1411.95 L1156.62 1411.95 L1157.32 1411.95 L1158.03 1411.95 L1158.74 1411.95 L1159.45 1411.95 L1160.15 1411.95 L1160.86 1411.95 L1161.57 1411.95 L1162.28 1411.95 L1162.99 1411.95 L1163.69 1411.95 L1164.4 1411.95 L1165.11 1411.95 L1165.82 1411.95 L1166.52 1411.95 L1167.23 1411.95 L1167.94 1411.95 L1168.65 1411.95 L1169.36 1411.95 L1170.06 1411.95 L1170.77 1411.95 L1171.48 1411.95 L1172.19 1411.95 L1172.89 1411.95 L1173.6 1411.95 L1174.31 1411.95 L1175.02 1411.95 L1175.73 1411.95 L1176.43 1411.95 L1177.14 1411.95 L1177.85 1411.95 L1178.56 1411.95 L1179.26 1411.95 L1179.97 1411.95 L1180.68 1411.95 L1181.39 1411.95 L1182.1 1411.95 L1182.8 1411.95 L1183.51 1411.95 L1184.22 1411.95 L1184.93 1411.95 L1185.63 1411.95 L1186.34 1411.95 L1187.05 1411.95 L1187.76 1411.95 L1188.47 1411.95 L1189.17 1411.95 L1189.88 1411.95 L1190.59 1411.95 L1191.3 1411.95 L1192 1411.95 L1192.71 1411.95 L1193.42 1411.95 L1194.13 1411.95 L1194.84 1411.95 L1195.54 1411.95 L1196.25 1411.95 L1196.96 1411.95 L1197.67 1411.95 L1198.37 1411.95 L1199.08 1411.95 L1199.79 1411.95 L1200.5 1411.95 L1201.21 1411.95 L1201.91 1411.95 L1202.62 1411.95 L1203.33 1411.95 L1204.04 1411.95 L1204.74 1411.95 L1205.45 1411.95 L1206.16 1411.95 L1206.87 1411.95 L1207.58 1411.95 L1208.28 1411.95 L1208.99 1411.95 L1209.7 1411.95 L1210.41 1411.95 L1211.12 1411.95 L1211.82 1411.95 L1212.53 1411.95 L1213.24 1411.95 L1213.95 1411.95 L1214.65 1411.95 L1215.36 1411.95 L1216.07 1411.95 L1216.78 1411.95 L1217.49 1411.95 L1218.19 1411.95 L1218.9 1411.95 L1219.61 1411.95 L1220.32 1411.95 L1221.02 1411.95 L1221.73 1411.95 L1222.44 1411.95 L1223.15 1411.95 L1223.86 1411.95 L1224.56 1411.95 L1225.27 1411.95 L1225.98 1411.95 L1226.69 1411.95 L1227.39 1411.95 L1228.1 1411.95 L1228.81 1411.95 L1229.52 1411.95 L1230.23 1411.95 L1230.93 1411.95 L1231.64 1411.95 L1232.35 1411.95 L1233.06 1411.95 L1233.76 1411.95 L1234.47 1411.95 L1235.18 1411.95 L1235.89 1411.95 L1236.6 1411.95 L1237.3 1411.95 L1238.01 1411.95 L1238.72 1411.95 L1239.43 1411.95 L1240.13 1411.95 L1240.84 1411.95 L1241.55 1411.95 L1242.26 1411.95 L1242.97 1411.95 L1243.67 1411.95 L1244.38 1411.95 L1245.09 1411.95 L1245.8 1411.95 L1246.5 1411.95 L1247.21 1411.95 L1247.92 1411.95 L1248.63 1411.95 L1249.34 1411.95 L1250.04 1411.95 L1250.75 1411.95 L1251.46 1411.95 L1252.17 1411.95 L1252.87 1411.95 L1253.58 1411.95 L1254.29 1411.95 L1255 1411.95 L1255.71 1411.95 L1256.41 1411.95 L1257.12 1411.95 L1257.83 1411.95 L1258.54 1411.95 L1259.24 1411.95 L1259.95 1411.95 L1260.66 1411.95 L1261.37 1411.95 L1262.08 1411.95 L1262.78 1411.95 L1263.49 1411.95 L1264.2 1411.95 L1264.91 1411.95 L1265.61 1411.95 L1266.32 1411.95 L1267.03 1411.95 L1267.74 1411.95 L1268.45 1411.95 L1269.15 1411.95 L1269.86 1411.95 L1270.57 1411.95 L1271.28 1411.95 L1271.98 1411.95 L1272.69 1411.95 L1273.4 1411.95 L1274.11 1411.95 L1274.82 1411.95 L1275.52 1411.95 L1276.23 1411.95 L1276.94 1411.95 L1277.65 1411.95 L1278.35 1411.95 L1279.06 1411.95 L1279.77 1411.95 L1280.48 1411.95 L1281.19 1411.95 L1281.89 1411.95 L1282.6 1411.95 L1283.31 1411.95 L1284.02 1411.95 L1284.72 1411.95 L1285.43 1411.95 L1286.14 1411.95 L1286.85 1411.95 L1287.56 1411.95 L1288.26 1411.95 L1288.97 1411.95 L1289.68 1411.95 L1290.39 1411.95 L1291.1 1411.95 L1291.8 1411.95 L1292.51 1411.95 L1293.22 1411.95 L1293.93 1411.95 L1294.63 1411.95 L1295.34 1411.95 L1296.05 1411.95 L1296.76 1411.95 L1297.47 1411.95 L1298.17 1411.95 L1298.88 1411.95 L1299.59 1411.95 L1300.3 1411.95 L1301 1411.95 L1301.71 1411.95 L1302.42 1411.95 L1303.13 1411.95 L1303.84 1411.95 L1304.54 1411.95 L1305.25 1411.95 L1305.96 1411.95 L1306.67 1411.95 L1307.37 1411.95 L1308.08 1411.95 L1308.79 1411.95 L1309.5 1411.95 L1310.21 1411.95 L1310.91 1411.95 L1311.62 1411.95 L1312.33 1411.95 L1313.04 1411.95 L1313.74 1411.95 L1314.45 1411.95 L1315.16 1411.95 L1315.87 1411.95 L1316.58 1411.95 L1317.28 1411.95 L1317.99 1411.95 L1318.7 1411.95 L1319.41 1411.95 L1320.11 1411.95 L1320.82 1411.95 L1321.53 1411.95 L1322.24 1411.95 L1322.95 1411.95 L1323.65 1411.95 L1324.36 1411.95 L1325.07 1411.95 L1325.78 1411.95 L1326.48 1411.95 L1327.19 1411.95 L1327.9 1411.95 L1328.61 1411.95 L1329.32 1411.95 L1330.02 1411.95 L1330.73 1411.95 L1331.44 1411.95 L1332.15 1411.95 L1332.85 1411.95 L1333.56 1411.95 L1334.27 1411.95 L1334.98 1411.95 L1335.69 1411.95 L1336.39 1411.95 L1337.1 1411.95 L1337.81 1411.95 L1338.52 1411.95 L1339.22 1411.95 L1339.93 1411.95 L1340.64 1411.95 L1341.35 1411.95 L1342.06 1411.95 L1342.76 1411.95 L1343.47 1411.95 L1344.18 1411.95 L1344.89 1411.95 L1345.59 1411.95 L1346.3 1411.95 L1347.01 1411.95 L1347.72 1411.95 L1348.43 1411.95 L1349.13 1411.95 L1349.84 1411.95 L1350.55 1411.95 L1351.26 1411.95 L1351.96 1411.95 L1352.67 1411.95 L1353.38 1411.95 L1354.09 1411.95 L1354.8 1411.95 L1355.5 1411.95 L1356.21 1411.95 L1356.92 1411.95 L1357.63 1411.95 L1358.33 1411.95 L1359.04 1411.95 L1359.75 1411.95 L1360.46 1411.95 L1361.17 1411.95 L1361.87 1411.95 L1362.58 1411.95 L1363.29 1411.95 L1364 1411.95 L1364.71 1411.95 L1365.41 1411.95 L1366.12 1411.95 L1366.83 1411.95 L1367.54 1411.95 L1368.24 1411.95 L1368.95 1411.95 L1369.66 1411.95 L1370.37 1411.95 L1371.08 1411.95 L1371.78 1411.95 L1372.49 1411.95 L1373.2 1411.95 L1373.91 1411.95 L1374.61 1411.95 L1375.32 1411.95 L1376.03 1411.95 L1376.74 1411.95 L1377.45 1411.95 L1378.15 1411.95 L1378.86 1411.95 L1379.57 1411.95 L1380.28 1411.95 L1380.98 1411.95 L1381.69 1411.95 L1382.4 1411.95 L1383.11 1411.95 L1383.82 1411.95 L1384.52 1411.95 L1385.23 1411.95 L1385.94 1411.95 L1386.65 1411.95 L1387.35 1411.95 L1388.06 1411.95 L1388.77 1411.95 L1389.48 1411.95 L1390.19 1411.95 L1390.89 1411.95 L1391.6 1411.95 L1392.31 1411.95 L1393.02 1411.95 L1393.72 1411.95 L1394.43 1411.95 L1395.14 1411.95 L1395.85 1411.95 L1396.56 1411.95 L1397.26 1411.95 L1397.97 1411.95 L1398.68 1411.95 L1399.39 1411.95 L1400.09 1411.95 L1400.8 1411.95 L1401.51 1411.95 L1402.22 1411.95 L1402.93 1411.95 L1403.63 1411.95 L1404.34 1411.95 L1405.05 1411.95 L1405.76 1411.95 L1406.46 1411.95 L1407.17 1411.95 L1407.88 1411.95 L1408.59 1411.95 L1409.3 1411.95 L1410 1411.95 L1410.71 1411.95 L1411.42 1411.95 L1412.13 1411.95 L1412.83 1411.95 L1413.54 1411.95 L1414.25 1411.95 L1414.96 1411.95 L1415.67 1411.95 L1416.37 1411.95 L1417.08 1411.95 L1417.79 1411.95 L1418.5 1411.95 L1419.2 1411.95 L1419.91 1411.95 L1420.62 1411.95 L1421.33 1411.95 L1422.04 1411.95 L1422.74 1411.95 L1423.45 1411.95 L1424.16 1411.95 L1424.87 1411.95 L1425.57 1411.95 L1426.28 1411.95 L1426.99 1411.95 L1427.7 1411.95 L1428.41 1411.95 L1429.11 1411.95 L1429.82 1411.95 L1430.53 1411.95 L1431.24 1411.95 L1431.94 1411.95 L1432.65 1411.95 L1433.36 1411.95 L1434.07 1411.95 L1434.78 1411.95 L1435.48 1411.95 L1436.19 1411.95 L1436.9 1411.95 L1437.61 1411.95 L1438.31 1411.95 L1439.02 1411.95 L1439.73 1411.95 L1440.44 1411.95 L1441.15 1411.95 L1441.85 1411.95 L1442.56 1411.95 L1443.27 1411.95 L1443.98 1411.95 L1444.69 1411.95 L1445.39 1411.95 L1446.1 1411.95 L1446.81 1411.95 L1447.52 1411.95 L1448.22 1411.95 L1448.93 1411.95 L1449.64 1411.95 L1450.35 1411.95 L1451.06 1411.95 L1451.76 1411.95 L1452.47 1411.95 L1453.18 1411.95 L1453.89 1411.95 L1454.59 1411.95 L1455.3 1411.95 L1456.01 1411.95 L1456.72 1411.95 L1457.43 1411.95 L1458.13 1411.95 L1458.84 1411.95 L1459.55 1411.95 L1460.26 1411.95 L1460.96 1411.95 L1461.67 1411.95 L1462.38 1411.95 L1463.09 1411.95 L1463.8 1411.95 L1464.5 1411.95 L1465.21 1411.95 L1465.92 1411.95 L1466.63 1411.95 L1467.33 1411.95 L1468.04 1411.95 L1468.75 1411.95 L1469.46 1411.95 L1470.17 1411.95 L1470.87 1411.95 L1471.58 1411.95 L1472.29 1411.95 L1473 1411.95 L1473.7 1411.95 L1474.41 1411.95 L1475.12 1411.95 L1475.83 1411.95 L1476.54 1411.95 L1477.24 1411.95 L1477.95 1411.95 L1478.66 1411.95 L1479.37 1411.95 L1480.07 1411.95 L1480.78 1411.95 L1481.49 1411.95 L1482.2 1411.95 L1482.91 1411.95 L1483.61 1411.95 L1484.32 1411.95 L1485.03 1411.95 L1485.74 1411.95 L1486.44 1411.95 L1487.15 1411.95 L1487.86 1411.95 L1488.57 1411.95 L1489.28 1411.95 L1489.98 1411.95 L1490.69 1411.95 L1491.4 1411.95 L1492.11 1411.95 L1492.81 1411.95 L1493.52 1411.95 L1494.23 1411.95 L1494.94 1411.95 L1495.65 1411.95 L1496.35 1411.95 L1497.06 1411.95 L1497.77 1411.95 L1498.48 1411.95 L1499.18 1411.95 L1499.89 1411.95 L1500.6 1411.95 L1501.31 1411.95 L1502.02 1411.95 L1502.72 1411.95 L1503.43 1411.95 L1504.14 1411.95 L1504.85 1411.95 L1505.55 1411.95 L1506.26 1411.95 L1506.97 1411.95 L1507.68 1411.95 L1508.39 1411.95 L1509.09 1411.95 L1509.8 1411.95 L1510.51 1411.95 L1511.22 1411.95 L1511.92 1411.95 L1512.63 1411.95 L1513.34 1411.95 L1514.05 1411.95 L1514.76 1411.95 L1515.46 1411.95 L1516.17 1411.95 L1516.88 1411.95 L1517.59 1411.95 L1518.3 1411.95 L1519 1411.95 L1519.71 1411.95 L1520.42 1411.95 L1521.13 1411.95 L1521.83 1411.95 L1522.54 1411.95 L1523.25 1411.95 L1523.96 1411.95 L1524.67 1411.95 L1525.37 1411.95 L1526.08 1411.95 L1526.79 1411.95 L1527.5 1411.95 L1528.2 1411.95 L1528.91 1411.95 L1529.62 1411.95 L1530.33 1411.95 L1531.04 1411.95 L1531.74 1411.95 L1532.45 1411.95 L1533.16 1411.95 L1533.87 1411.95 L1534.57 1411.95 L1535.28 1411.95 L1535.99 1411.95 L1536.7 1411.95 L1537.41 1411.95 L1538.11 1411.95 L1538.82 1411.95 L1539.53 1411.95 L1540.24 1411.95 L1540.94 1411.95 L1541.65 1411.95 L1542.36 1411.95 L1543.07 1411.95 L1543.78 1411.95 L1544.48 1411.95 L1545.19 1411.95 L1545.9 1411.95 L1546.61 1411.95 L1547.31 1411.95 L1548.02 1411.95 L1548.73 1411.95 L1549.44 1411.95 L1550.15 1411.95 L1550.85 1411.95 L1551.56 1411.95 L1552.27 1411.95 L1552.98 1411.95 L1553.68 1411.95 L1554.39 1411.95 L1555.1 1411.95 L1555.81 1411.95 L1556.52 1411.95 L1557.22 1411.95 L1557.93 1411.95 L1558.64 1411.95 L1559.35 1411.95 L1560.05 1411.95 L1560.76 1411.95 L1561.47 1411.95 L1562.18 1411.95 L1562.89 1411.95 L1563.59 1411.95 L1564.3 1411.95 L1565.01 1411.95 L1565.72 1411.95 L1566.42 1411.95 L1567.13 1411.95 L1567.84 1411.95 L1568.55 1411.95 L1569.26 1411.95 L1569.96 1411.95 L1570.67 1411.95 L1571.38 1411.95 L1572.09 1411.95 L1572.79 1411.95 L1573.5 1411.95 L1574.21 1411.95 L1574.92 1411.95 L1575.63 1411.95 L1576.33 1411.95 L1577.04 1411.95 L1577.75 1411.95 L1578.46 1411.95 L1579.16 1411.95 L1579.87 1411.95 L1580.58 1411.95 L1581.29 1411.95 L1582 1411.95 L1582.7 1411.95 L1583.41 1411.95 L1584.12 1411.95 L1584.83 1411.95 L1585.53 1411.95 L1586.24 1411.95 L1586.95 1411.95 L1587.66 1411.95 L1588.37 1411.95 L1589.07 1411.95 L1589.78 1411.95 L1590.49 1411.95 L1591.2 1411.95 L1591.9 1411.95 L1592.61 1411.95 L1593.32 1411.95 L1594.03 1411.95 L1594.74 1411.95 L1595.44 1411.95 L1596.15 1411.95 L1596.86 1411.95 L1597.57 1411.95 L1598.28 1411.95 L1598.98 1411.95 L1599.69 1411.95 L1600.4 1411.95 L1601.11 1411.95 L1601.81 1411.95 L1602.52 1411.95 L1603.23 1411.95 L1603.94 1411.95 L1604.65 1411.95 L1605.35 1411.95 L1606.06 1411.95 L1606.77 1411.95 L1607.48 1411.95 L1608.18 1411.95 L1608.89 1411.95 L1609.6 1411.95 L1610.31 1411.95 L1611.02 1411.95 L1611.72 1411.95 L1612.43 1411.95 L1613.14 1411.95 L1613.85 1411.95 L1614.55 1411.95 L1615.26 1411.95 L1615.97 1411.95 L1616.68 1411.95 L1617.39 1411.95 L1618.09 1411.95 L1618.8 1411.95 L1619.51 1411.95 L1620.22 1411.95 L1620.92 1411.95 L1621.63 1411.95 L1622.34 1411.95 L1623.05 1411.95 L1623.76 1411.95 L1624.46 1411.95 L1625.17 1411.95 L1625.88 1411.95 L1626.59 1411.95 L1627.29 1411.95 L1628 1411.95 L1628.71 1411.95 L1629.42 1411.95 L1630.13 1411.95 L1630.83 1411.95 L1631.54 1411.95 L1632.25 1411.95 L1632.96 1411.95 L1633.66 1411.95 L1634.37 1411.95 L1635.08 1411.95 L1635.79 1411.95 L1636.5 1411.95 L1637.2 1411.95 L1637.91 1411.95 L1638.62 1411.95 L1639.33 1411.95 L1640.03 1411.95 L1640.74 1411.95 L1641.45 1411.95 L1642.16 1411.95 L1642.87 1411.95 L1643.57 1411.95 L1644.28 1411.95 L1644.99 1411.95 L1645.7 1411.95 L1646.4 1411.95 L1647.11 1411.95 L1647.82 1411.95 L1648.53 1411.95 L1649.24 1411.95 L1649.94 1411.95 L1650.65 1411.95 L1651.36 1411.95 L1652.07 1411.95 L1652.77 1411.95 L1653.48 1411.95 L1654.19 1411.95 L1654.9 1411.95 L1655.61 1411.95 L1656.31 1411.95 L1657.02 1411.95 L1657.73 1411.95 L1658.44 1411.95 L1659.14 1411.95 L1659.85 1411.95 L1660.56 1411.95 L1661.27 1411.95 L1661.98 1411.95 L1662.68 1411.95 L1663.39 1411.95 L1664.1 1411.95 L1664.81 1411.95 L1665.51 1411.95 L1666.22 1411.95 L1666.93 1411.95 L1667.64 1411.95 L1668.35 1411.95 L1669.05 1411.95 L1669.76 1411.95 L1670.47 1411.95 L1671.18 1411.95 L1671.89 1411.95 L1672.59 1411.95 L1673.3 1411.95 L1674.01 1411.95 L1674.72 1411.95 L1675.42 1411.95 L1676.13 1411.95 L1676.84 1411.95 L1677.55 1411.95 L1678.26 1411.95 L1678.96 1411.95 L1679.67 1411.95 L1680.38 1411.95 L1681.09 1411.95 L1681.79 1411.95 L1682.5 1411.95 L1683.21 1411.95 L1683.92 1411.95 L1684.63 1411.95 L1685.33 1411.95 L1686.04 1411.95 L1686.75 1411.95 L1687.46 1411.95 L1688.16 1411.95 L1688.87 1411.95 L1689.58 1411.95 L1690.29 1411.95 L1691 1411.95 L1691.7 1411.95 L1692.41 1411.95 L1693.12 1411.95 L1693.83 1411.95 L1694.53 1411.95 L1695.24 1411.95 L1695.95 1411.95 L1696.66 1411.95 L1697.37 1411.95 L1698.07 1411.95 L1698.78 1411.95 L1699.49 1411.95 L1700.2 1411.95 L1700.9 1411.95 L1701.61 1411.95 L1702.32 1411.95 L1703.03 1411.95 L1703.74 1411.95 L1704.44 1411.95 L1705.15 1411.95 L1705.86 1411.95 L1706.57 1411.95 L1707.27 1411.95 L1707.98 1411.95 L1708.69 1411.95 L1709.4 1411.95 L1710.11 1411.95 L1710.81 1411.95 L1711.52 1411.95 L1712.23 1411.95 L1712.94 1411.95 L1713.64 1411.95 L1714.35 1411.95 L1715.06 1411.95 L1715.77 1411.95 L1716.48 1411.95 L1717.18 1411.95 L1717.89 1411.95 L1718.6 1411.95 L1719.31 1411.95 L1720.01 1411.95 L1720.72 1411.95 L1721.43 1411.95 L1722.14 1411.95 L1722.85 1411.95 L1723.55 1411.95 L1724.26 1411.95 L1724.97 1411.95 L1725.68 1411.95 L1726.38 1411.95 L1727.09 1411.95 L1727.8 1411.95 L1728.51 1411.95 L1729.22 1411.95 L1729.92 1411.95 L1730.63 1411.95 L1731.34 1411.95 L1732.05 1411.95 L1732.75 1411.95 L1733.46 1411.95 L1734.17 1411.95 L1734.88 1411.95 L1735.59 1411.95 L1736.29 1411.95 L1737 1411.95 L1737.71 1411.95 L1738.42 1411.95 L1739.12 1411.95 L1739.83 1411.95 L1740.54 1411.95 L1741.25 1411.95 L1741.96 1411.95 L1742.66 1411.95 L1743.37 1411.95 L1744.08 1411.95 L1744.79 1411.95 L1745.49 1411.95 L1746.2 1411.95 L1746.91 1411.95 L1747.62 1411.95 L1748.33 1411.95 L1749.03 1411.95 L1749.74 1411.95 L1750.45 1411.95 L1751.16 1411.95 L1751.87 1411.95 L1752.57 1411.95 L1753.28 1411.95 L1753.99 1411.95 L1754.7 1411.95 L1755.4 1411.95 L1756.11 1411.95 L1756.82 1411.95 L1757.53 1411.95 L1758.24 1411.95 L1758.94 1411.95 L1759.65 1411.95 L1760.36 1411.95 L1761.07 1411.95 L1761.77 1411.95 L1762.48 1411.95 L1763.19 1411.95 L1763.9 1411.95 L1764.61 1411.95 L1765.31 1411.95 L1766.02 1411.95 L1766.73 1411.95 L1767.44 1411.95 L1768.14 1411.95 L1768.85 1411.95 L1769.56 1411.95 L1770.27 1411.95 L1770.98 1411.95 L1771.68 1411.95 L1772.39 1411.95 L1773.1 1411.95 L1773.81 1411.95 L1774.51 1411.95 L1775.22 1411.95 L1775.93 1411.95 L1776.64 1411.95 L1777.35 1411.95 L1778.05 1411.95 L1778.76 1411.95 L1779.47 1411.95 L1780.18 1411.95 L1780.88 1411.95 L1781.59 1411.95 L1782.3 1411.95 L1783.01 1411.95 L1783.72 1411.95 L1784.42 1411.95 L1785.13 1411.95 L1785.84 1411.95 L1786.55 1411.95 L1787.25 1411.95 L1787.96 1411.95 L1788.67 1411.95 L1789.38 1411.95 L1790.09 1411.95 L1790.79 1411.95 L1791.5 1411.95 L1792.21 1411.95 L1792.92 1411.95 L1793.62 1411.95 L1794.33 1411.95 L1795.04 1411.95 L1795.75 1411.95 L1796.46 1411.95 L1797.16 1411.95 L1797.87 1411.95 L1798.58 1411.95 L1799.29 1411.95 L1799.99 1411.95 L1800.7 1411.95 L1801.41 1411.95 L1802.12 1411.95 L1802.83 1411.95 L1803.53 1411.95 L1804.24 1411.95 L1804.95 1411.95 L1805.66 1411.95 L1806.36 1411.95 L1807.07 1411.95 L1807.78 1411.95 L1808.49 1411.95 L1809.2 1411.95 L1809.9 1411.95 L1810.61 1411.95 L1811.32 1411.95 L1812.03 1411.95 L1812.73 1411.95 L1813.44 1411.95 L1814.15 1411.95 L1814.86 1411.95 L1815.57 1411.95 L1816.27 1411.95 L1816.98 1411.95 L1817.69 1411.95 L1818.4 1411.95 L1819.1 1411.95 L1819.81 1411.95 L1820.52 1411.95 L1821.23 1411.95 L1821.94 1411.95 L1822.64 1411.95 L1823.35 1411.95 L1824.06 1411.95 L1824.77 1411.95 L1825.48 1411.95 L1826.18 1411.95 L1826.89 1411.95 L1827.6 1411.95 L1828.31 1411.95 L1829.01 1411.95 L1829.72 1411.95 L1830.43 1411.95 L1831.14 1411.95 L1831.85 1411.95 L1832.55 1411.95 L1833.26 1411.95 L1833.97 1411.95 L1834.68 1411.95 L1835.38 1411.95 L1836.09 1411.95 L1836.8 1411.95 L1837.51 1411.95 L1838.22 1411.95 L1838.92 1411.95 L1839.63 1411.95 L1840.34 1411.95 L1841.05 1411.95 L1841.75 1411.95 L1842.46 1411.95 L1843.17 1411.95 L1843.88 1411.95 L1844.59 1411.95 L1845.29 1411.95 L1846 1411.95 L1846.71 1411.95 L1847.42 1411.95 L1848.12 1411.95 L1848.83 1411.95 L1849.54 1411.95 L1850.25 1411.95 L1850.96 1411.95 L1851.66 1411.95 L1852.37 1411.95 L1853.08 1411.95 L1853.79 1411.95 L1854.49 1411.95 L1855.2 1411.95 L1855.91 1411.95 L1856.62 1411.95 L1857.33 1411.95 L1858.03 1411.95 L1858.74 1411.95 L1859.45 1411.95 L1860.16 1411.95 L1860.86 1411.95 L1861.57 1411.95 L1862.28 1411.95 L1862.99 1411.95 L1863.7 1411.95 L1864.4 1411.95 L1865.11 1411.95 L1865.82 1411.95 L1866.53 1411.95 L1867.23 1411.95 L1867.94 1411.95 L1868.65 1411.95 L1869.36 1411.95 L1870.07 1411.95 L1870.77 1411.95 L1871.48 1411.95 L1872.19 1411.95 L1872.9 1411.95 L1873.6 1411.95 L1874.31 1411.95 L1875.02 1411.95 L1875.73 1411.95 L1876.44 1411.95 L1877.14 1411.95 L1877.85 1411.95 L1878.56 1411.95 L1879.27 1411.95 L1879.97 1411.95 L1880.68 1411.95 L1881.39 1411.95 L1882.1 1411.95 L1882.81 1411.95 L1883.51 1411.95 L1884.22 1411.95 L1884.93 1411.95 L1885.64 1411.95 L1886.34 1411.95 L1887.05 1411.95 L1887.76 1411.95 L1888.47 1411.95 L1889.18 1411.95 L1889.88 1411.95 L1890.59 1411.95 L1891.3 1411.95 L1892.01 1411.95 L1892.71 1411.95 L1893.42 1411.95 L1894.13 1411.95 L1894.84 1411.95 L1895.55 1411.95 L1896.25 1411.95 L1896.96 1411.95 L1897.67 1411.95 L1898.38 1411.95 L1899.08 1411.95 L1899.79 1411.95 L1900.5 1411.95 L1901.21 1411.95 L1901.92 1411.95 L1902.62 1411.95 L1903.33 1411.95 L1904.04 1411.95 L1904.75 1411.95 L1905.46 1411.95 L1906.16 1411.95 L1906.87 1411.95 L1907.58 1411.95 L1908.29 1411.95 L1908.99 1411.95 L1909.7 1411.95 L1910.41 1411.95 L1911.12 1411.95 L1911.83 1411.95 L1912.53 1411.95 L1913.24 1411.95 L1913.95 1411.95 L1914.66 1411.95 L1915.36 1411.95 L1916.07 1411.95 L1916.78 1411.95 L1917.49 1411.95 L1918.2 1411.95 L1918.9 1411.95 L1919.61 1411.95 L1920.32 1411.95 L1921.03 1411.95 L1921.73 1411.95 L1922.44 1411.95 L1923.15 1411.95 L1923.86 1411.95 L1924.57 1411.95 L1925.27 1411.95 L1925.98 1411.95 L1926.69 1411.95 L1927.4 1411.95 L1928.1 1411.95 L1928.81 1411.95 L1929.52 1411.95 L1930.23 1411.95 L1930.94 1411.95 L1931.64 1411.95 L1932.35 1411.95 L1933.06 1411.95 L1933.77 1411.95 L1934.47 1411.95 L1935.18 1411.95 L1935.89 1411.95 L1936.6 1411.95 L1937.31 1411.95 L1938.01 1411.95 L1938.72 1411.95 L1939.43 1411.95 L1940.14 1411.95 L1940.84 1411.95 L1941.55 1411.95 L1942.26 1411.95 L1942.97 1411.95 L1943.68 1411.95 L1944.38 1411.95 L1945.09 1411.95 L1945.8 1411.95 L1946.51 1411.95 L1947.21 1411.95 L1947.92 1411.95 L1948.63 1411.95 L1949.34 1411.95 L1950.05 1411.95 L1950.75 1411.95 L1951.46 1411.95 L1952.17 1411.95 L1952.88 1411.95 L1953.58 1411.95 L1954.29 1411.95 L1955 1411.95 L1955.71 1411.95 L1956.42 1411.95 L1957.12 1411.95 L1957.83 1411.95 L1958.54 1411.95 L1959.25 1411.95 L1959.95 1411.95 L1960.66 1411.95 L1961.37 1411.95 L1962.08 1411.95 L1962.79 1411.95 L1963.49 1411.95 L1964.2 1411.95 L1964.91 1411.95 L1965.62 1411.95 L1966.32 1411.95 L1967.03 1411.95 L1967.74 1411.95 L1968.45 1411.95 L1969.16 1411.95 L1969.86 1411.95 L1970.57 1411.95 L1971.28 1411.95 L1971.99 1411.95 L1972.69 1411.95 L1973.4 1411.95 L1974.11 1411.95 L1974.82 1411.95 L1975.53 1411.95 L1976.23 1411.95 L1976.94 1411.95 L1977.65 1411.95 L1978.36 1411.95 L1979.07 1411.95 L1979.77 1411.95 L1980.48 1411.95 L1981.19 1411.95 L1981.9 1411.95 L1982.6 1411.95 L1983.31 1411.95 L1984.02 1411.95 L1984.73 1411.95 L1985.44 1411.95 L1986.14 1411.95 L1986.85 1411.95 L1987.56 1411.95 L1988.27 1411.95 L1988.97 1411.95 L1989.68 1411.95 L1990.39 1411.95 L1991.1 1411.95 L1991.81 1411.95 L1992.51 1411.95 L1993.22 1411.95 L1993.93 1411.95 L1994.64 1411.95 L1995.34 1411.95 L1996.05 1411.95 L1996.76 1411.95 L1997.47 1411.95 L1998.18 1411.95 L1998.88 1411.95 L1999.59 1411.95 L2000.3 1411.95 L2001.01 1411.95 L2001.71 1411.95 L2002.42 1411.95 L2003.13 1411.95 L2003.84 1411.95 L2004.55 1411.95 L2005.25 1411.95 L2005.96 1411.95 L2006.67 1411.95 L2007.38 1411.95 L2008.08 1411.95 L2008.79 1411.95 L2009.5 1411.95 L2010.21 1411.95 L2010.92 1411.95 L2011.62 1411.95 L2012.33 1411.95 L2013.04 1411.95 L2013.75 1411.95 L2014.45 1411.95 L2015.16 1411.95 L2015.87 1411.95 L2016.58 1411.95 L2017.29 1411.95 L2017.99 1411.95 L2018.7 1411.95 L2019.41 1411.95 L2020.12 1411.95 L2020.82 1411.95 L2021.53 1411.95 L2022.24 1411.95 L2022.95 1411.95 L2023.66 1411.95 L2024.36 1411.95 L2025.07 1411.95 L2025.78 1411.95 L2026.49 1411.95 L2027.19 1411.95 L2027.9 1411.95 L2028.61 1411.95 L2029.32 1411.95 L2030.03 1411.95 L2030.73 1411.95 L2031.44 1411.95 L2032.15 1411.95 L2032.86 1411.95 L2033.56 1411.95 L2034.27 1411.95 L2034.98 1411.95 L2035.69 1411.95 L2036.4 1411.95 L2037.1 1411.95 L2037.81 1411.95 L2038.52 1411.95 L2039.23 1411.95 L2039.93 1411.95 L2040.64 1411.95 L2041.35 1411.95 L2042.06 1411.95 L2042.77 1411.95 L2043.47 1411.95 L2044.18 1411.95 L2044.89 1411.95 L2045.6 1411.95 L2046.3 1411.95 L2047.01 1411.95 L2047.72 1411.95 L2048.43 1411.95 L2049.14 1411.95 L2049.84 1411.95 L2050.55 1411.95 L2051.26 1411.95 L2051.97 1411.95 L2052.68 1411.95 L2053.38 1411.95 L2054.09 1411.95 L2054.8 1411.95 L2055.51 1411.95 L2056.21 1411.95 L2056.92 1411.95 L2057.63 1411.95 L2058.34 1411.95 L2059.05 1411.95 L2059.75 1411.95 L2060.46 1411.95 L2061.17 1411.95 L2061.88 1411.95 L2062.58 1411.95 L2063.29 1411.95 L2064 1411.95 L2064.71 1411.95 L2065.42 1411.95 L2066.12 1411.95 L2066.83 1411.95 L2067.54 1411.95 L2068.25 1411.95 L2068.95 1411.95 L2069.66 1411.95 L2070.37 1411.95 L2071.08 1411.95 L2071.79 1411.95 L2072.49 1411.95 L2073.2 1411.95 L2073.91 1411.95 L2074.62 1411.95 L2075.32 1411.95 L2076.03 1411.95 L2076.74 1411.95 L2077.45 1411.95 L2078.16 1411.95 L2078.86 1411.95 L2079.57 1411.95 L2080.28 1411.95 L2080.99 1411.95 L2081.69 1411.95 L2082.4 1411.95 L2083.11 1411.95 L2083.82 1411.95 L2084.53 1411.95 L2085.23 1411.95 L2085.94 1411.95 L2086.65 1411.95 L2087.36 1411.95 L2088.06 1411.95 L2088.77 1411.95 L2089.48 1411.95 L2090.19 1411.95 L2090.9 1411.95 L2091.6 1411.95 L2092.31 1411.95 L2093.02 1411.95 L2093.73 1411.95 L2094.43 1411.95 L2095.14 1411.95 L2095.85 1411.95 L2096.56 1411.95 L2097.27 1411.95 L2097.97 1411.95 L2098.68 1411.95 L2099.39 1411.95 L2100.1 1411.95 L2100.8 1411.95 L2101.51 1411.95 L2102.22 1411.95 L2102.93 1411.95 L2103.64 1411.95 L2104.34 1411.95 L2105.05 1411.95 L2105.76 1411.95 L2106.47 1411.95 L2107.17 1411.95 L2107.88 1411.95 L2108.59 1411.95 L2109.3 1411.95 L2110.01 1411.95 L2110.71 1411.95 L2111.42 1411.95 L2112.13 1411.95 L2112.84 1411.95 L2113.54 1411.95 L2114.25 1411.95 L2114.96 1411.95 L2115.67 1411.95 L2116.38 1411.95 L2117.08 1411.95 L2117.79 1411.95 L2118.5 1411.95 L2119.21 1411.95 L2119.91 1411.95 L2120.62 1411.95 L2121.33 1411.95 L2122.04 1411.95 L2122.75 1411.95 L2123.45 1411.95 L2124.16 1411.95 L2124.87 1411.95 L2125.58 1411.95 L2126.28 1411.95 L2126.99 1411.95 L2127.7 1411.95 L2128.41 1411.95 L2129.12 1411.95 L2129.82 1411.95 L2130.53 1411.95 L2131.24 1411.95 L2131.95 1411.95 L2132.66 1411.95 L2133.36 1411.95 L2134.07 1411.95 L2134.78 1411.95 L2135.49 1411.95 L2136.19 1411.95 L2136.9 1411.95 L2137.61 1411.95 L2138.32 1411.95 L2139.03 1411.95 L2139.73 1411.95 L2140.44 1411.95 L2141.15 1411.95 L2141.86 1411.95 L2142.56 1411.95 L2143.27 1411.95 L2143.98 1411.95 L2144.69 1411.95 L2145.4 1411.95 L2146.1 1411.95 L2146.81 1411.95 L2147.52 1411.95 L2148.23 1411.95 L2148.93 1411.95 L2149.64 1411.95 L2150.35 1411.95 L2151.06 1411.95 L2151.77 1411.95 L2152.47 1411.95 L2153.18 1411.95 L2153.89 1411.95 L2154.6 1411.95 L2155.3 1411.95 L2156.01 1411.95 L2156.72 1411.95 L2157.43 1411.95 L2158.14 1411.95 L2158.84 1411.95 L2159.55 1411.95 L2160.26 1411.95 L2160.97 1411.95 L2161.67 1411.95 L2162.38 1411.95 L2163.09 1411.95 L2163.8 1411.95 L2164.51 1411.95 L2165.21 1411.95 L2165.92 1411.95 L2166.63 1411.95 L2167.34 1411.95 L2168.04 1411.95 L2168.75 1411.95 L2169.46 1411.95 L2170.17 1411.95 L2170.88 1411.95 L2171.58 1411.95 L2172.29 1411.95 L2173 1411.95 L2173.71 1411.95 L2174.41 1411.95 L2175.12 1411.95 L2175.83 1411.95 L2176.54 1411.95 L2177.25 1411.95 L2177.95 1411.95 L2178.66 1411.95 L2179.37 1411.95 L2180.08 1411.95 L2180.78 1411.95 L2181.49 1411.95 L2182.2 1411.95 L2182.91 1411.95 L2183.62 1411.95 L2184.32 1411.95 L2185.03 1411.95 L2185.74 1411.95 L2186.45 1411.95 L2187.15 1411.95 L2187.86 1411.95 L2188.57 1411.95 L2189.28 1411.95 L2189.99 1411.95 L2190.69 1411.95 L2191.4 1411.95 L2192.11 1411.95 L2192.82 1411.95 L2193.52 1411.95 L2194.23 1411.95 L2194.94 1411.95 L2195.65 1411.95 L2196.36 1411.95 L2197.06 1411.95 L2197.77 1411.95 L2198.48 1411.95 L2199.19 1411.95 L2199.89 1411.95 L2200.6 1411.95 L2201.31 1411.95 L2202.02 1411.95 L2202.73 1411.95 L2203.43 1411.95 L2204.14 1411.95 L2204.85 1411.95 L2205.56 1411.95 L2206.27 1411.95 L2206.97 1411.95 L2207.68 1411.95 L2208.39 1411.95 L2209.1 1411.95 L2209.8 1411.95 L2210.51 1411.95 L2211.22 1411.95 L2211.93 1411.95 L2212.64 1411.95 L2213.34 1411.95 L2214.05 1411.95 L2214.76 1411.95 L2215.47 1411.95 L2216.17 1411.95 L2216.88 1411.95 L2217.59 1411.95 L2218.3 1411.95 L2219.01 1411.95 L2219.71 1411.95 L2220.42 1411.95 L2221.13 1411.95 L2221.84 1411.95 L2222.54 1411.95 L2223.25 1411.95 L2223.96 1411.95 L2224.67 1411.95 L2225.38 1411.95 L2226.08 1411.95 L2226.79 1411.95 L2227.5 1411.95 L2228.21 1411.95 L2228.91 1411.95 L2229.62 1411.95 L2230.33 1411.95 L2231.04 1411.95 L2231.75 1411.95 L2232.45 1411.95 L2233.16 1411.95 L2233.87 1411.95 L2234.58 1411.95 L2235.28 1411.95 L2235.99 1411.95 L2236.7 1411.95 L2237.41 1411.95 L2238.12 1411.95 L2238.82 1411.95 L2239.53 1411.95 L2240.24 1411.95 L2240.95 1411.95 L2241.65 1411.95 L2242.36 1411.95 L2243.07 1411.95 L2243.78 1411.95 L2244.49 1411.95 L2245.19 1411.95 L2245.9 1411.95 L2246.61 1411.95 L2247.32 1411.95 L2248.02 1411.95 L2248.73 1411.95 L2249.44 1411.95 L2250.15 1411.95 L2250.86 1411.95 L2251.56 1411.95 L2252.27 1411.95 L2252.98 1411.95 L2253.69 1411.95 L2254.39 1411.95 L2255.1 1411.95 L2255.81 1411.95 L2256.52 1411.95 L2257.23 1411.95 L2257.93 1411.95 L2258.64 1411.95 L2259.35 1411.95 L2260.06 1411.95 L2260.76 1411.95 L2261.47 1411.95 L2262.18 1411.95 L2262.89 1411.95 L2263.6 1411.95 L2264.3 1411.95 L2265.01 1411.95 L2265.72 1411.95 L2266.43 1411.95 L2267.13 1411.95 L2267.84 1411.95 L2268.55 1411.95 L2269.26 1411.95 L2269.97 1411.95 L2270.67 1411.95 L2271.38 1411.95 L2272.09 1411.95 L2272.8 1411.95 L2273.5 1411.95 L2274.21 1411.95 L2274.92 1411.95 L2275.63 1411.95 L2276.34 1411.95 L2277.04 1411.95 L2277.75 1411.95 L2278.46 1411.95 L2279.17 1411.95 L2279.87 1411.95 L2280.58 1411.95 L2281.29 1411.95 L2282 1411.95 L2282.71 1411.95 L2283.41 1411.95 L2284.12 1411.95 L2284.83 1411.95 L2285.54 1411.95 L2286.25 1411.95 L2286.95 1411.95 L2287.66 1411.95 L2288.37 1411.95 L2289.08 1411.95 L2289.08 1411.77 L2288.37 1411.77 L2287.66 1411.77 L2286.95 1411.77 L2286.25 1411.77 L2285.54 1411.77 L2284.83 1411.77 L2284.12 1411.77 L2283.41 1411.77 L2282.71 1411.77 L2282 1411.77 L2281.29 1411.77 L2280.58 1411.77 L2279.87 1411.77 L2279.17 1411.77 L2278.46 1411.77 L2277.75 1411.77 L2277.04 1411.77 L2276.34 1411.77 L2275.63 1411.77 L2274.92 1411.77 L2274.21 1411.77 L2273.5 1411.77 L2272.8 1411.77 L2272.09 1411.77 L2271.38 1411.77 L2270.67 1411.77 L2269.97 1411.77 L2269.26 1411.77 L2268.55 1411.77 L2267.84 1411.77 L2267.13 1411.77 L2266.43 1411.77 L2265.72 1411.77 L2265.01 1411.77 L2264.3 1411.77 L2263.6 1411.77 L2262.89 1411.77 L2262.18 1411.77 L2261.47 1411.77 L2260.76 1411.77 L2260.06 1411.77 L2259.35 1411.77 L2258.64 1411.77 L2257.93 1411.77 L2257.23 1411.77 L2256.52 1411.77 L2255.81 1411.77 L2255.1 1411.77 L2254.39 1411.77 L2253.69 1411.77 L2252.98 1411.77 L2252.27 1411.77 L2251.56 1411.77 L2250.86 1411.77 L2250.15 1411.77 L2249.44 1411.77 L2248.73 1411.77 L2248.02 1411.77 L2247.32 1411.77 L2246.61 1411.77 L2245.9 1411.77 L2245.19 1411.77 L2244.49 1411.77 L2243.78 1411.77 L2243.07 1411.77 L2242.36 1411.77 L2241.65 1411.77 L2240.95 1411.77 L2240.24 1411.77 L2239.53 1411.77 L2238.82 1411.77 L2238.12 1411.77 L2237.41 1411.77 L2236.7 1411.77 L2235.99 1411.77 L2235.28 1411.77 L2234.58 1411.77 L2233.87 1411.77 L2233.16 1411.77 L2232.45 1411.77 L2231.75 1411.77 L2231.04 1411.77 L2230.33 1411.77 L2229.62 1411.77 L2228.91 1411.77 L2228.21 1411.77 L2227.5 1411.77 L2226.79 1411.77 L2226.08 1411.77 L2225.38 1411.77 L2224.67 1411.77 L2223.96 1411.77 L2223.25 1411.77 L2222.54 1411.77 L2221.84 1411.77 L2221.13 1411.77 L2220.42 1411.77 L2219.71 1411.77 L2219.01 1411.77 L2218.3 1411.77 L2217.59 1411.77 L2216.88 1411.77 L2216.17 1411.77 L2215.47 1411.77 L2214.76 1411.77 L2214.05 1411.77 L2213.34 1411.77 L2212.64 1411.77 L2211.93 1411.77 L2211.22 1411.77 L2210.51 1411.77 L2209.8 1411.77 L2209.1 1411.77 L2208.39 1411.77 L2207.68 1411.77 L2206.97 1411.77 L2206.27 1411.77 L2205.56 1411.77 L2204.85 1411.77 L2204.14 1411.77 L2203.43 1411.77 L2202.73 1411.77 L2202.02 1411.77 L2201.31 1411.77 L2200.6 1411.77 L2199.89 1411.77 L2199.19 1411.77 L2198.48 1411.77 L2197.77 1411.77 L2197.06 1411.77 L2196.36 1411.77 L2195.65 1411.77 L2194.94 1411.77 L2194.23 1411.77 L2193.52 1411.77 L2192.82 1411.77 L2192.11 1411.77 L2191.4 1411.77 L2190.69 1411.77 L2189.99 1411.77 L2189.28 1411.77 L2188.57 1411.77 L2187.86 1411.77 L2187.15 1411.77 L2186.45 1411.77 L2185.74 1411.77 L2185.03 1411.77 L2184.32 1411.77 L2183.62 1411.77 L2182.91 1411.77 L2182.2 1411.77 L2181.49 1411.77 L2180.78 1411.77 L2180.08 1411.77 L2179.37 1411.77 L2178.66 1411.77 L2177.95 1411.77 L2177.25 1411.77 L2176.54 1411.77 L2175.83 1411.77 L2175.12 1411.77 L2174.41 1411.77 L2173.71 1411.77 L2173 1411.77 L2172.29 1411.77 L2171.58 1411.77 L2170.88 1411.77 L2170.17 1411.77 L2169.46 1411.77 L2168.75 1411.77 L2168.04 1411.77 L2167.34 1411.77 L2166.63 1411.77 L2165.92 1411.77 L2165.21 1411.77 L2164.51 1411.77 L2163.8 1411.77 L2163.09 1411.77 L2162.38 1411.77 L2161.67 1411.77 L2160.97 1411.77 L2160.26 1411.77 L2159.55 1411.77 L2158.84 1411.77 L2158.14 1411.77 L2157.43 1411.77 L2156.72 1411.77 L2156.01 1411.77 L2155.3 1411.77 L2154.6 1411.77 L2153.89 1411.77 L2153.18 1411.77 L2152.47 1411.77 L2151.77 1411.77 L2151.06 1411.77 L2150.35 1411.77 L2149.64 1411.77 L2148.93 1411.77 L2148.23 1411.77 L2147.52 1411.77 L2146.81 1411.77 L2146.1 1411.77 L2145.4 1411.77 L2144.69 1411.77 L2143.98 1411.77 L2143.27 1411.77 L2142.56 1411.77 L2141.86 1411.77 L2141.15 1411.77 L2140.44 1411.77 L2139.73 1411.77 L2139.03 1411.77 L2138.32 1411.77 L2137.61 1411.77 L2136.9 1411.77 L2136.19 1411.77 L2135.49 1411.77 L2134.78 1411.77 L2134.07 1411.77 L2133.36 1411.77 L2132.66 1411.77 L2131.95 1411.77 L2131.24 1411.77 L2130.53 1411.77 L2129.82 1411.77 L2129.12 1411.77 L2128.41 1411.77 L2127.7 1411.77 L2126.99 1411.77 L2126.28 1411.77 L2125.58 1411.77 L2124.87 1411.77 L2124.16 1411.77 L2123.45 1411.77 L2122.75 1411.77 L2122.04 1411.77 L2121.33 1411.77 L2120.62 1411.77 L2119.91 1411.77 L2119.21 1411.77 L2118.5 1411.77 L2117.79 1411.77 L2117.08 1411.77 L2116.38 1411.77 L2115.67 1411.77 L2114.96 1411.77 L2114.25 1411.77 L2113.54 1411.77 L2112.84 1411.77 L2112.13 1411.77 L2111.42 1411.77 L2110.71 1411.77 L2110.01 1411.77 L2109.3 1411.77 L2108.59 1411.77 L2107.88 1411.77 L2107.17 1411.77 L2106.47 1411.77 L2105.76 1411.77 L2105.05 1411.77 L2104.34 1411.77 L2103.64 1411.77 L2102.93 1411.77 L2102.22 1411.77 L2101.51 1411.77 L2100.8 1411.77 L2100.1 1411.77 L2099.39 1411.77 L2098.68 1411.77 L2097.97 1411.77 L2097.27 1411.77 L2096.56 1411.77 L2095.85 1411.77 L2095.14 1411.77 L2094.43 1411.77 L2093.73 1411.77 L2093.02 1411.77 L2092.31 1411.77 L2091.6 1411.77 L2090.9 1411.77 L2090.19 1411.77 L2089.48 1411.77 L2088.77 1411.77 L2088.06 1411.77 L2087.36 1411.77 L2086.65 1411.77 L2085.94 1411.77 L2085.23 1411.77 L2084.53 1411.77 L2083.82 1411.77 L2083.11 1411.77 L2082.4 1411.77 L2081.69 1411.77 L2080.99 1411.77 L2080.28 1411.77 L2079.57 1411.77 L2078.86 1411.77 L2078.16 1411.77 L2077.45 1411.77 L2076.74 1411.77 L2076.03 1411.77 L2075.32 1411.77 L2074.62 1411.77 L2073.91 1411.77 L2073.2 1411.77 L2072.49 1411.77 L2071.79 1411.77 L2071.08 1411.77 L2070.37 1411.77 L2069.66 1411.77 L2068.95 1411.77 L2068.25 1411.77 L2067.54 1411.77 L2066.83 1411.77 L2066.12 1411.77 L2065.42 1411.77 L2064.71 1411.77 L2064 1411.77 L2063.29 1411.77 L2062.58 1411.77 L2061.88 1411.77 L2061.17 1411.77 L2060.46 1411.77 L2059.75 1411.77 L2059.05 1411.77 L2058.34 1411.77 L2057.63 1411.77 L2056.92 1411.77 L2056.21 1411.77 L2055.51 1411.77 L2054.8 1411.77 L2054.09 1411.77 L2053.38 1411.77 L2052.68 1411.77 L2051.97 1411.77 L2051.26 1411.77 L2050.55 1411.77 L2049.84 1411.77 L2049.14 1411.77 L2048.43 1411.77 L2047.72 1411.77 L2047.01 1411.77 L2046.3 1411.77 L2045.6 1411.77 L2044.89 1411.77 L2044.18 1411.77 L2043.47 1411.77 L2042.77 1411.77 L2042.06 1411.77 L2041.35 1411.77 L2040.64 1411.77 L2039.93 1411.77 L2039.23 1411.77 L2038.52 1411.77 L2037.81 1411.77 L2037.1 1411.77 L2036.4 1411.77 L2035.69 1411.77 L2034.98 1411.77 L2034.27 1411.77 L2033.56 1411.77 L2032.86 1411.77 L2032.15 1411.77 L2031.44 1411.77 L2030.73 1411.77 L2030.03 1411.77 L2029.32 1411.77 L2028.61 1411.77 L2027.9 1411.77 L2027.19 1411.77 L2026.49 1411.77 L2025.78 1411.77 L2025.07 1411.77 L2024.36 1411.77 L2023.66 1411.77 L2022.95 1411.77 L2022.24 1411.77 L2021.53 1411.77 L2020.82 1411.77 L2020.12 1411.77 L2019.41 1411.77 L2018.7 1411.77 L2017.99 1411.77 L2017.29 1411.77 L2016.58 1411.77 L2015.87 1411.77 L2015.16 1411.77 L2014.45 1411.77 L2013.75 1411.77 L2013.04 1411.77 L2012.33 1411.77 L2011.62 1411.77 L2010.92 1411.77 L2010.21 1411.77 L2009.5 1411.77 L2008.79 1411.77 L2008.08 1411.77 L2007.38 1411.77 L2006.67 1411.77 L2005.96 1411.77 L2005.25 1411.77 L2004.55 1411.77 L2003.84 1411.77 L2003.13 1411.77 L2002.42 1411.77 L2001.71 1411.77 L2001.01 1411.77 L2000.3 1411.77 L1999.59 1411.77 L1998.88 1411.77 L1998.18 1411.77 L1997.47 1411.77 L1996.76 1411.77 L1996.05 1411.77 L1995.34 1411.77 L1994.64 1411.77 L1993.93 1411.77 L1993.22 1411.77 L1992.51 1411.77 L1991.81 1411.77 L1991.1 1411.77 L1990.39 1411.77 L1989.68 1411.77 L1988.97 1411.77 L1988.27 1411.77 L1987.56 1411.77 L1986.85 1411.77 L1986.14 1411.77 L1985.44 1411.77 L1984.73 1411.77 L1984.02 1411.77 L1983.31 1411.77 L1982.6 1411.77 L1981.9 1411.77 L1981.19 1411.77 L1980.48 1411.77 L1979.77 1411.77 L1979.07 1411.77 L1978.36 1411.77 L1977.65 1411.77 L1976.94 1411.77 L1976.23 1411.77 L1975.53 1411.77 L1974.82 1411.77 L1974.11 1411.77 L1973.4 1411.77 L1972.69 1411.77 L1971.99 1411.77 L1971.28 1411.77 L1970.57 1411.77 L1969.86 1411.77 L1969.16 1411.77 L1968.45 1411.77 L1967.74 1411.77 L1967.03 1411.77 L1966.32 1411.77 L1965.62 1411.77 L1964.91 1411.77 L1964.2 1411.77 L1963.49 1411.77 L1962.79 1411.77 L1962.08 1411.77 L1961.37 1411.77 L1960.66 1411.77 L1959.95 1411.77 L1959.25 1411.77 L1958.54 1411.77 L1957.83 1411.77 L1957.12 1411.77 L1956.42 1411.77 L1955.71 1411.77 L1955 1411.77 L1954.29 1411.77 L1953.58 1411.77 L1952.88 1411.77 L1952.17 1411.77 L1951.46 1411.77 L1950.75 1411.77 L1950.05 1411.77 L1949.34 1411.77 L1948.63 1411.77 L1947.92 1411.77 L1947.21 1411.77 L1946.51 1411.77 L1945.8 1411.77 L1945.09 1411.77 L1944.38 1411.77 L1943.68 1411.77 L1942.97 1411.77 L1942.26 1411.77 L1941.55 1411.77 L1940.84 1411.77 L1940.14 1411.77 L1939.43 1411.77 L1938.72 1411.77 L1938.01 1411.77 L1937.31 1411.77 L1936.6 1411.77 L1935.89 1411.77 L1935.18 1411.77 L1934.47 1411.77 L1933.77 1411.77 L1933.06 1411.77 L1932.35 1411.77 L1931.64 1411.77 L1930.94 1411.77 L1930.23 1411.77 L1929.52 1411.77 L1928.81 1411.77 L1928.1 1411.77 L1927.4 1411.77 L1926.69 1411.77 L1925.98 1411.77 L1925.27 1411.77 L1924.57 1411.77 L1923.86 1411.77 L1923.15 1411.77 L1922.44 1411.77 L1921.73 1411.77 L1921.03 1411.77 L1920.32 1411.77 L1919.61 1411.77 L1918.9 1411.77 L1918.2 1411.77 L1917.49 1411.77 L1916.78 1411.77 L1916.07 1411.77 L1915.36 1411.77 L1914.66 1411.77 L1913.95 1411.77 L1913.24 1411.77 L1912.53 1411.77 L1911.83 1411.77 L1911.12 1411.77 L1910.41 1411.77 L1909.7 1411.77 L1908.99 1411.77 L1908.29 1411.77 L1907.58 1411.77 L1906.87 1411.77 L1906.16 1411.77 L1905.46 1411.77 L1904.75 1411.77 L1904.04 1411.77 L1903.33 1411.77 L1902.62 1411.77 L1901.92 1411.77 L1901.21 1411.77 L1900.5 1411.77 L1899.79 1411.77 L1899.08 1411.77 L1898.38 1411.77 L1897.67 1411.77 L1896.96 1411.77 L1896.25 1411.77 L1895.55 1411.77 L1894.84 1411.77 L1894.13 1411.77 L1893.42 1411.77 L1892.71 1411.77 L1892.01 1411.77 L1891.3 1411.77 L1890.59 1411.77 L1889.88 1411.77 L1889.18 1411.77 L1888.47 1411.77 L1887.76 1411.77 L1887.05 1411.77 L1886.34 1411.77 L1885.64 1411.77 L1884.93 1411.77 L1884.22 1411.77 L1883.51 1411.77 L1882.81 1411.77 L1882.1 1411.77 L1881.39 1411.77 L1880.68 1411.77 L1879.97 1411.77 L1879.27 1411.77 L1878.56 1411.77 L1877.85 1411.77 L1877.14 1411.77 L1876.44 1411.77 L1875.73 1411.77 L1875.02 1411.77 L1874.31 1411.77 L1873.6 1411.77 L1872.9 1411.77 L1872.19 1411.77 L1871.48 1411.77 L1870.77 1411.77 L1870.07 1411.77 L1869.36 1411.77 L1868.65 1411.77 L1867.94 1411.77 L1867.23 1411.77 L1866.53 1411.77 L1865.82 1411.77 L1865.11 1411.77 L1864.4 1411.77 L1863.7 1411.77 L1862.99 1411.77 L1862.28 1411.77 L1861.57 1411.77 L1860.86 1411.77 L1860.16 1411.77 L1859.45 1411.77 L1858.74 1411.77 L1858.03 1411.77 L1857.33 1411.77 L1856.62 1411.77 L1855.91 1411.77 L1855.2 1411.77 L1854.49 1411.77 L1853.79 1411.77 L1853.08 1411.77 L1852.37 1411.77 L1851.66 1411.77 L1850.96 1411.77 L1850.25 1411.77 L1849.54 1411.77 L1848.83 1411.77 L1848.12 1411.77 L1847.42 1411.77 L1846.71 1411.77 L1846 1411.77 L1845.29 1411.77 L1844.59 1411.77 L1843.88 1411.77 L1843.17 1411.77 L1842.46 1411.77 L1841.75 1411.77 L1841.05 1411.77 L1840.34 1411.77 L1839.63 1411.77 L1838.92 1411.77 L1838.22 1411.77 L1837.51 1411.77 L1836.8 1411.77 L1836.09 1411.77 L1835.38 1411.77 L1834.68 1411.77 L1833.97 1411.77 L1833.26 1411.77 L1832.55 1411.77 L1831.85 1411.77 L1831.14 1411.77 L1830.43 1411.77 L1829.72 1411.77 L1829.01 1411.77 L1828.31 1411.77 L1827.6 1411.77 L1826.89 1411.77 L1826.18 1411.77 L1825.48 1411.77 L1824.77 1411.77 L1824.06 1411.77 L1823.35 1411.77 L1822.64 1411.77 L1821.94 1411.77 L1821.23 1411.77 L1820.52 1411.77 L1819.81 1411.77 L1819.1 1411.77 L1818.4 1411.77 L1817.69 1411.77 L1816.98 1411.77 L1816.27 1411.77 L1815.57 1411.77 L1814.86 1411.77 L1814.15 1411.77 L1813.44 1411.77 L1812.73 1411.77 L1812.03 1411.77 L1811.32 1411.77 L1810.61 1411.77 L1809.9 1411.77 L1809.2 1411.77 L1808.49 1411.77 L1807.78 1411.77 L1807.07 1411.77 L1806.36 1411.77 L1805.66 1411.77 L1804.95 1411.77 L1804.24 1411.77 L1803.53 1411.77 L1802.83 1411.77 L1802.12 1411.77 L1801.41 1411.77 L1800.7 1411.77 L1799.99 1411.77 L1799.29 1411.77 L1798.58 1411.77 L1797.87 1411.77 L1797.16 1411.77 L1796.46 1411.77 L1795.75 1411.77 L1795.04 1411.77 L1794.33 1411.77 L1793.62 1411.77 L1792.92 1411.77 L1792.21 1411.77 L1791.5 1411.77 L1790.79 1411.77 L1790.09 1411.77 L1789.38 1411.77 L1788.67 1411.77 L1787.96 1411.77 L1787.25 1411.77 L1786.55 1411.77 L1785.84 1411.77 L1785.13 1411.77 L1784.42 1411.77 L1783.72 1411.77 L1783.01 1411.77 L1782.3 1411.77 L1781.59 1411.77 L1780.88 1411.77 L1780.18 1411.77 L1779.47 1411.77 L1778.76 1411.77 L1778.05 1411.77 L1777.35 1411.77 L1776.64 1411.77 L1775.93 1411.77 L1775.22 1411.77 L1774.51 1411.77 L1773.81 1411.77 L1773.1 1411.77 L1772.39 1411.77 L1771.68 1411.77 L1770.98 1411.77 L1770.27 1411.77 L1769.56 1411.77 L1768.85 1411.77 L1768.14 1411.77 L1767.44 1411.77 L1766.73 1411.77 L1766.02 1411.77 L1765.31 1411.77 L1764.61 1411.77 L1763.9 1411.77 L1763.19 1411.77 L1762.48 1411.77 L1761.77 1411.77 L1761.07 1411.77 L1760.36 1411.77 L1759.65 1411.77 L1758.94 1411.77 L1758.24 1411.77 L1757.53 1411.77 L1756.82 1411.77 L1756.11 1411.77 L1755.4 1411.77 L1754.7 1411.77 L1753.99 1411.77 L1753.28 1411.77 L1752.57 1411.77 L1751.87 1411.77 L1751.16 1411.77 L1750.45 1411.77 L1749.74 1411.77 L1749.03 1411.77 L1748.33 1411.77 L1747.62 1411.77 L1746.91 1411.77 L1746.2 1411.77 L1745.49 1411.77 L1744.79 1411.77 L1744.08 1411.77 L1743.37 1411.77 L1742.66 1411.77 L1741.96 1411.77 L1741.25 1411.77 L1740.54 1411.77 L1739.83 1411.77 L1739.12 1411.77 L1738.42 1411.77 L1737.71 1411.77 L1737 1411.77 L1736.29 1411.77 L1735.59 1411.77 L1734.88 1411.77 L1734.17 1411.77 L1733.46 1411.77 L1732.75 1411.77 L1732.05 1411.77 L1731.34 1411.77 L1730.63 1411.77 L1729.92 1411.77 L1729.22 1411.77 L1728.51 1411.77 L1727.8 1411.77 L1727.09 1411.77 L1726.38 1411.77 L1725.68 1411.77 L1724.97 1411.77 L1724.26 1411.77 L1723.55 1411.77 L1722.85 1411.77 L1722.14 1411.77 L1721.43 1411.77 L1720.72 1411.77 L1720.01 1411.77 L1719.31 1411.77 L1718.6 1411.77 L1717.89 1411.77 L1717.18 1411.77 L1716.48 1411.77 L1715.77 1411.77 L1715.06 1411.77 L1714.35 1411.77 L1713.64 1411.77 L1712.94 1411.77 L1712.23 1411.77 L1711.52 1411.77 L1710.81 1411.77 L1710.11 1411.77 L1709.4 1411.77 L1708.69 1411.77 L1707.98 1411.77 L1707.27 1411.77 L1706.57 1411.77 L1705.86 1411.77 L1705.15 1411.77 L1704.44 1411.77 L1703.74 1411.77 L1703.03 1411.77 L1702.32 1411.77 L1701.61 1411.77 L1700.9 1411.77 L1700.2 1411.77 L1699.49 1411.77 L1698.78 1411.77 L1698.07 1411.77 L1697.37 1411.77 L1696.66 1411.77 L1695.95 1411.77 L1695.24 1411.77 L1694.53 1411.77 L1693.83 1411.77 L1693.12 1411.77 L1692.41 1411.77 L1691.7 1411.77 L1691 1411.77 L1690.29 1411.77 L1689.58 1411.77 L1688.87 1411.77 L1688.16 1411.77 L1687.46 1411.77 L1686.75 1411.77 L1686.04 1411.77 L1685.33 1411.77 L1684.63 1411.77 L1683.92 1411.77 L1683.21 1411.77 L1682.5 1411.77 L1681.79 1411.77 L1681.09 1411.77 L1680.38 1411.77 L1679.67 1411.77 L1678.96 1411.77 L1678.26 1411.77 L1677.55 1411.77 L1676.84 1411.77 L1676.13 1411.77 L1675.42 1411.77 L1674.72 1411.77 L1674.01 1411.77 L1673.3 1411.77 L1672.59 1411.77 L1671.89 1411.77 L1671.18 1411.77 L1670.47 1411.77 L1669.76 1411.77 L1669.05 1411.77 L1668.35 1411.77 L1667.64 1411.77 L1666.93 1411.77 L1666.22 1411.77 L1665.51 1411.77 L1664.81 1411.77 L1664.1 1411.77 L1663.39 1411.77 L1662.68 1411.77 L1661.98 1411.77 L1661.27 1411.77 L1660.56 1411.77 L1659.85 1411.77 L1659.14 1411.77 L1658.44 1411.77 L1657.73 1411.77 L1657.02 1411.77 L1656.31 1411.77 L1655.61 1411.77 L1654.9 1411.77 L1654.19 1411.77 L1653.48 1411.77 L1652.77 1411.77 L1652.07 1411.77 L1651.36 1411.77 L1650.65 1411.77 L1649.94 1411.77 L1649.24 1411.77 L1648.53 1411.77 L1647.82 1411.77 L1647.11 1411.77 L1646.4 1411.77 L1645.7 1411.77 L1644.99 1411.77 L1644.28 1411.77 L1643.57 1411.77 L1642.87 1411.77 L1642.16 1411.77 L1641.45 1411.77 L1640.74 1411.77 L1640.03 1411.77 L1639.33 1411.77 L1638.62 1411.77 L1637.91 1411.77 L1637.2 1411.77 L1636.5 1411.77 L1635.79 1411.77 L1635.08 1411.77 L1634.37 1411.77 L1633.66 1411.77 L1632.96 1411.77 L1632.25 1411.77 L1631.54 1411.77 L1630.83 1411.77 L1630.13 1411.77 L1629.42 1411.77 L1628.71 1411.77 L1628 1411.77 L1627.29 1411.77 L1626.59 1411.77 L1625.88 1411.77 L1625.17 1411.77 L1624.46 1411.77 L1623.76 1411.77 L1623.05 1411.77 L1622.34 1411.77 L1621.63 1411.77 L1620.92 1411.77 L1620.22 1411.77 L1619.51 1411.77 L1618.8 1411.77 L1618.09 1411.77 L1617.39 1411.77 L1616.68 1411.77 L1615.97 1411.77 L1615.26 1411.77 L1614.55 1411.77 L1613.85 1411.77 L1613.14 1411.77 L1612.43 1411.77 L1611.72 1411.77 L1611.02 1411.77 L1610.31 1411.77 L1609.6 1411.77 L1608.89 1411.77 L1608.18 1411.77 L1607.48 1411.77 L1606.77 1411.77 L1606.06 1411.77 L1605.35 1411.77 L1604.65 1411.77 L1603.94 1411.77 L1603.23 1411.77 L1602.52 1411.77 L1601.81 1411.77 L1601.11 1411.77 L1600.4 1411.77 L1599.69 1411.77 L1598.98 1411.77 L1598.28 1411.77 L1597.57 1411.77 L1596.86 1411.77 L1596.15 1411.77 L1595.44 1411.77 L1594.74 1411.77 L1594.03 1411.77 L1593.32 1411.77 L1592.61 1411.77 L1591.9 1411.77 L1591.2 1411.77 L1590.49 1411.77 L1589.78 1411.77 L1589.07 1411.77 L1588.37 1411.77 L1587.66 1411.77 L1586.95 1411.77 L1586.24 1411.77 L1585.53 1411.77 L1584.83 1411.77 L1584.12 1411.77 L1583.41 1411.77 L1582.7 1411.77 L1582 1411.77 L1581.29 1411.77 L1580.58 1411.77 L1579.87 1411.77 L1579.16 1411.77 L1578.46 1411.77 L1577.75 1411.77 L1577.04 1411.77 L1576.33 1411.77 L1575.63 1411.77 L1574.92 1411.77 L1574.21 1411.77 L1573.5 1411.77 L1572.79 1411.77 L1572.09 1411.77 L1571.38 1411.77 L1570.67 1411.77 L1569.96 1411.77 L1569.26 1411.77 L1568.55 1411.77 L1567.84 1411.77 L1567.13 1411.77 L1566.42 1411.77 L1565.72 1411.77 L1565.01 1411.77 L1564.3 1411.77 L1563.59 1411.77 L1562.89 1411.77 L1562.18 1411.77 L1561.47 1411.77 L1560.76 1411.77 L1560.05 1411.77 L1559.35 1411.77 L1558.64 1411.77 L1557.93 1411.77 L1557.22 1411.77 L1556.52 1411.77 L1555.81 1411.77 L1555.1 1411.77 L1554.39 1411.77 L1553.68 1411.77 L1552.98 1411.77 L1552.27 1411.77 L1551.56 1411.77 L1550.85 1411.77 L1550.15 1411.77 L1549.44 1411.77 L1548.73 1411.77 L1548.02 1411.77 L1547.31 1411.77 L1546.61 1411.77 L1545.9 1411.77 L1545.19 1411.77 L1544.48 1411.77 L1543.78 1411.77 L1543.07 1411.77 L1542.36 1411.77 L1541.65 1411.77 L1540.94 1411.77 L1540.24 1411.77 L1539.53 1411.77 L1538.82 1411.77 L1538.11 1411.77 L1537.41 1411.77 L1536.7 1411.77 L1535.99 1411.77 L1535.28 1411.77 L1534.57 1411.77 L1533.87 1411.77 L1533.16 1411.77 L1532.45 1411.77 L1531.74 1411.77 L1531.04 1411.77 L1530.33 1411.77 L1529.62 1411.77 L1528.91 1411.77 L1528.2 1411.77 L1527.5 1411.77 L1526.79 1411.77 L1526.08 1411.77 L1525.37 1411.77 L1524.67 1411.77 L1523.96 1411.77 L1523.25 1411.77 L1522.54 1411.77 L1521.83 1411.77 L1521.13 1411.77 L1520.42 1411.77 L1519.71 1411.77 L1519 1411.77 L1518.3 1411.77 L1517.59 1411.77 L1516.88 1411.77 L1516.17 1411.77 L1515.46 1411.77 L1514.76 1411.77 L1514.05 1411.77 L1513.34 1411.77 L1512.63 1411.77 L1511.92 1411.77 L1511.22 1411.77 L1510.51 1411.77 L1509.8 1411.77 L1509.09 1411.77 L1508.39 1411.77 L1507.68 1411.77 L1506.97 1411.77 L1506.26 1411.77 L1505.55 1411.77 L1504.85 1411.77 L1504.14 1411.77 L1503.43 1411.77 L1502.72 1411.77 L1502.02 1411.77 L1501.31 1411.77 L1500.6 1411.77 L1499.89 1411.77 L1499.18 1411.77 L1498.48 1411.77 L1497.77 1411.77 L1497.06 1411.77 L1496.35 1411.77 L1495.65 1411.77 L1494.94 1411.77 L1494.23 1411.77 L1493.52 1411.77 L1492.81 1411.77 L1492.11 1411.77 L1491.4 1411.77 L1490.69 1411.77 L1489.98 1411.77 L1489.28 1411.77 L1488.57 1411.77 L1487.86 1411.77 L1487.15 1411.77 L1486.44 1411.77 L1485.74 1411.77 L1485.03 1411.77 L1484.32 1411.77 L1483.61 1411.77 L1482.91 1411.77 L1482.2 1411.77 L1481.49 1411.77 L1480.78 1411.77 L1480.07 1411.77 L1479.37 1411.77 L1478.66 1411.77 L1477.95 1411.77 L1477.24 1411.77 L1476.54 1411.77 L1475.83 1411.77 L1475.12 1411.77 L1474.41 1411.77 L1473.7 1411.77 L1473 1411.77 L1472.29 1411.77 L1471.58 1411.77 L1470.87 1411.77 L1470.17 1411.77 L1469.46 1411.77 L1468.75 1411.77 L1468.04 1411.77 L1467.33 1411.77 L1466.63 1411.77 L1465.92 1411.77 L1465.21 1411.77 L1464.5 1411.77 L1463.8 1411.77 L1463.09 1411.77 L1462.38 1411.77 L1461.67 1411.77 L1460.96 1411.77 L1460.26 1411.77 L1459.55 1411.77 L1458.84 1411.77 L1458.13 1411.77 L1457.43 1411.77 L1456.72 1411.77 L1456.01 1411.77 L1455.3 1411.77 L1454.59 1411.77 L1453.89 1411.77 L1453.18 1411.77 L1452.47 1411.77 L1451.76 1411.77 L1451.06 1411.77 L1450.35 1411.77 L1449.64 1411.77 L1448.93 1411.77 L1448.22 1411.77 L1447.52 1411.77 L1446.81 1411.77 L1446.1 1411.77 L1445.39 1411.77 L1444.69 1411.77 L1443.98 1411.77 L1443.27 1411.77 L1442.56 1411.77 L1441.85 1411.77 L1441.15 1411.77 L1440.44 1411.77 L1439.73 1411.77 L1439.02 1411.77 L1438.31 1411.77 L1437.61 1411.77 L1436.9 1411.77 L1436.19 1411.77 L1435.48 1411.77 L1434.78 1411.77 L1434.07 1411.77 L1433.36 1411.77 L1432.65 1411.77 L1431.94 1411.77 L1431.24 1411.77 L1430.53 1411.77 L1429.82 1411.77 L1429.11 1411.77 L1428.41 1411.77 L1427.7 1411.77 L1426.99 1411.77 L1426.28 1411.77 L1425.57 1411.77 L1424.87 1411.77 L1424.16 1411.77 L1423.45 1411.77 L1422.74 1411.77 L1422.04 1411.77 L1421.33 1411.77 L1420.62 1411.77 L1419.91 1411.77 L1419.2 1411.77 L1418.5 1411.77 L1417.79 1411.77 L1417.08 1411.77 L1416.37 1411.77 L1415.67 1411.77 L1414.96 1411.77 L1414.25 1411.77 L1413.54 1411.77 L1412.83 1411.77 L1412.13 1411.77 L1411.42 1411.77 L1410.71 1411.77 L1410 1411.77 L1409.3 1411.77 L1408.59 1411.77 L1407.88 1411.77 L1407.17 1411.77 L1406.46 1411.77 L1405.76 1411.77 L1405.05 1411.77 L1404.34 1411.77 L1403.63 1411.77 L1402.93 1411.77 L1402.22 1411.77 L1401.51 1411.77 L1400.8 1411.77 L1400.09 1411.77 L1399.39 1411.77 L1398.68 1411.77 L1397.97 1411.77 L1397.26 1411.77 L1396.56 1411.77 L1395.85 1411.77 L1395.14 1411.77 L1394.43 1411.77 L1393.72 1411.77 L1393.02 1411.77 L1392.31 1411.77 L1391.6 1411.77 L1390.89 1411.77 L1390.19 1411.77 L1389.48 1411.77 L1388.77 1411.77 L1388.06 1411.77 L1387.35 1411.77 L1386.65 1411.77 L1385.94 1411.77 L1385.23 1411.77 L1384.52 1411.77 L1383.82 1411.77 L1383.11 1411.77 L1382.4 1411.77 L1381.69 1411.77 L1380.98 1411.77 L1380.28 1411.77 L1379.57 1411.77 L1378.86 1411.77 L1378.15 1411.77 L1377.45 1411.77 L1376.74 1411.77 L1376.03 1411.77 L1375.32 1411.77 L1374.61 1411.77 L1373.91 1411.77 L1373.2 1411.77 L1372.49 1411.77 L1371.78 1411.77 L1371.08 1411.77 L1370.37 1411.77 L1369.66 1411.77 L1368.95 1411.77 L1368.24 1411.77 L1367.54 1411.77 L1366.83 1411.77 L1366.12 1411.77 L1365.41 1411.77 L1364.71 1411.77 L1364 1411.77 L1363.29 1411.77 L1362.58 1411.77 L1361.87 1411.77 L1361.17 1411.77 L1360.46 1411.77 L1359.75 1411.77 L1359.04 1411.77 L1358.33 1411.77 L1357.63 1411.77 L1356.92 1411.77 L1356.21 1411.77 L1355.5 1411.77 L1354.8 1411.77 L1354.09 1411.77 L1353.38 1411.77 L1352.67 1411.77 L1351.96 1411.77 L1351.26 1411.77 L1350.55 1411.77 L1349.84 1411.77 L1349.13 1411.77 L1348.43 1411.77 L1347.72 1411.77 L1347.01 1411.77 L1346.3 1411.77 L1345.59 1411.77 L1344.89 1411.77 L1344.18 1411.77 L1343.47 1411.77 L1342.76 1411.77 L1342.06 1411.77 L1341.35 1411.77 L1340.64 1411.77 L1339.93 1411.77 L1339.22 1411.77 L1338.52 1411.77 L1337.81 1411.77 L1337.1 1411.77 L1336.39 1411.77 L1335.69 1411.77 L1334.98 1411.77 L1334.27 1411.77 L1333.56 1411.77 L1332.85 1411.77 L1332.15 1411.77 L1331.44 1411.77 L1330.73 1411.77 L1330.02 1411.77 L1329.32 1411.77 L1328.61 1411.77 L1327.9 1411.77 L1327.19 1411.77 L1326.48 1411.77 L1325.78 1411.77 L1325.07 1411.77 L1324.36 1411.77 L1323.65 1411.77 L1322.95 1411.77 L1322.24 1411.77 L1321.53 1411.77 L1320.82 1411.77 L1320.11 1411.77 L1319.41 1411.77 L1318.7 1411.77 L1317.99 1411.77 L1317.28 1411.77 L1316.58 1411.77 L1315.87 1411.77 L1315.16 1411.77 L1314.45 1411.77 L1313.74 1411.77 L1313.04 1411.77 L1312.33 1411.77 L1311.62 1411.77 L1310.91 1411.77 L1310.21 1411.77 L1309.5 1411.77 L1308.79 1411.77 L1308.08 1411.77 L1307.37 1411.77 L1306.67 1411.77 L1305.96 1411.77 L1305.25 1411.77 L1304.54 1411.77 L1303.84 1411.77 L1303.13 1411.77 L1302.42 1411.77 L1301.71 1411.77 L1301 1411.77 L1300.3 1411.77 L1299.59 1411.77 L1298.88 1411.77 L1298.17 1411.77 L1297.47 1411.77 L1296.76 1411.77 L1296.05 1411.77 L1295.34 1411.77 L1294.63 1411.77 L1293.93 1411.77 L1293.22 1411.77 L1292.51 1411.77 L1291.8 1411.77 L1291.1 1411.77 L1290.39 1411.77 L1289.68 1411.77 L1288.97 1411.77 L1288.26 1411.77 L1287.56 1411.77 L1286.85 1411.77 L1286.14 1411.77 L1285.43 1411.77 L1284.72 1411.77 L1284.02 1411.77 L1283.31 1411.77 L1282.6 1411.77 L1281.89 1411.77 L1281.19 1411.77 L1280.48 1411.77 L1279.77 1411.77 L1279.06 1411.77 L1278.35 1411.77 L1277.65 1411.77 L1276.94 1411.77 L1276.23 1411.77 L1275.52 1411.77 L1274.82 1411.77 L1274.11 1411.77 L1273.4 1411.77 L1272.69 1411.77 L1271.98 1411.77 L1271.28 1411.77 L1270.57 1411.77 L1269.86 1411.77 L1269.15 1411.77 L1268.45 1411.77 L1267.74 1411.77 L1267.03 1411.77 L1266.32 1411.77 L1265.61 1411.77 L1264.91 1411.77 L1264.2 1411.77 L1263.49 1411.77 L1262.78 1411.77 L1262.08 1411.77 L1261.37 1411.77 L1260.66 1411.77 L1259.95 1411.77 L1259.24 1411.77 L1258.54 1411.77 L1257.83 1411.77 L1257.12 1411.77 L1256.41 1411.77 L1255.71 1411.77 L1255 1411.77 L1254.29 1411.77 L1253.58 1411.77 L1252.87 1411.77 L1252.17 1411.77 L1251.46 1411.77 L1250.75 1411.77 L1250.04 1411.77 L1249.34 1411.77 L1248.63 1411.77 L1247.92 1411.77 L1247.21 1411.77 L1246.5 1411.77 L1245.8 1411.77 L1245.09 1411.77 L1244.38 1411.77 L1243.67 1411.77 L1242.97 1411.77 L1242.26 1411.77 L1241.55 1411.77 L1240.84 1411.77 L1240.13 1411.77 L1239.43 1411.77 L1238.72 1411.77 L1238.01 1411.77 L1237.3 1411.77 L1236.6 1411.77 L1235.89 1411.77 L1235.18 1411.77 L1234.47 1411.77 L1233.76 1411.77 L1233.06 1411.77 L1232.35 1411.77 L1231.64 1411.77 L1230.93 1411.77 L1230.23 1411.77 L1229.52 1411.77 L1228.81 1411.77 L1228.1 1411.77 L1227.39 1411.77 L1226.69 1411.77 L1225.98 1411.77 L1225.27 1411.77 L1224.56 1411.77 L1223.86 1411.77 L1223.15 1411.77 L1222.44 1411.77 L1221.73 1411.77 L1221.02 1411.77 L1220.32 1411.77 L1219.61 1411.77 L1218.9 1411.77 L1218.19 1411.77 L1217.49 1411.77 L1216.78 1411.77 L1216.07 1411.77 L1215.36 1411.77 L1214.65 1411.77 L1213.95 1411.77 L1213.24 1411.77 L1212.53 1411.77 L1211.82 1411.77 L1211.12 1411.77 L1210.41 1411.77 L1209.7 1411.77 L1208.99 1411.77 L1208.28 1411.77 L1207.58 1411.77 L1206.87 1411.77 L1206.16 1411.77 L1205.45 1411.77 L1204.74 1411.77 L1204.04 1411.77 L1203.33 1411.77 L1202.62 1411.77 L1201.91 1411.77 L1201.21 1411.77 L1200.5 1411.77 L1199.79 1411.77 L1199.08 1411.77 L1198.37 1411.77 L1197.67 1411.77 L1196.96 1411.77 L1196.25 1411.77 L1195.54 1411.77 L1194.84 1411.77 L1194.13 1411.77 L1193.42 1411.77 L1192.71 1411.77 L1192 1411.77 L1191.3 1411.77 L1190.59 1411.77 L1189.88 1411.77 L1189.17 1411.77 L1188.47 1411.77 L1187.76 1411.77 L1187.05 1411.77 L1186.34 1411.77 L1185.63 1411.77 L1184.93 1411.77 L1184.22 1411.77 L1183.51 1411.77 L1182.8 1411.77 L1182.1 1411.77 L1181.39 1411.77 L1180.68 1411.77 L1179.97 1411.77 L1179.26 1411.77 L1178.56 1411.77 L1177.85 1411.77 L1177.14 1411.77 L1176.43 1411.77 L1175.73 1411.77 L1175.02 1411.77 L1174.31 1411.77 L1173.6 1411.77 L1172.89 1411.77 L1172.19 1411.77 L1171.48 1411.77 L1170.77 1411.77 L1170.06 1411.77 L1169.36 1411.77 L1168.65 1411.77 L1167.94 1411.77 L1167.23 1411.77 L1166.52 1411.77 L1165.82 1411.77 L1165.11 1411.77 L1164.4 1411.77 L1163.69 1411.77 L1162.99 1411.77 L1162.28 1411.77 L1161.57 1411.77 L1160.86 1411.77 L1160.15 1411.77 L1159.45 1411.77 L1158.74 1411.77 L1158.03 1411.77 L1157.32 1411.77 L1156.62 1411.77 L1155.91 1411.77 L1155.2 1411.77 L1154.49 1411.77 L1153.78 1411.77 L1153.08 1411.77 L1152.37 1411.77 L1151.66 1411.77 L1150.95 1411.77 L1150.25 1411.77 L1149.54 1411.77 L1148.83 1411.77 L1148.12 1411.77 L1147.41 1411.77 L1146.71 1411.77 L1146 1411.77 L1145.29 1411.77 L1144.58 1411.77 L1143.88 1411.77 L1143.17 1411.77 L1142.46 1411.77 L1141.75 1411.77 L1141.04 1411.77 L1140.34 1411.77 L1139.63 1411.77 L1138.92 1411.77 L1138.21 1411.77 L1137.51 1411.77 L1136.8 1411.77 L1136.09 1411.77 L1135.38 1411.77 L1134.67 1411.77 L1133.97 1411.77 L1133.26 1411.77 L1132.55 1411.77 L1131.84 1411.77 L1131.13 1411.77 L1130.43 1411.77 L1129.72 1411.77 L1129.01 1411.77 L1128.3 1411.77 L1127.6 1411.77 L1126.89 1411.77 L1126.18 1411.77 L1125.47 1411.77 L1124.76 1411.77 L1124.06 1411.77 L1123.35 1411.77 L1122.64 1411.77 L1121.93 1411.77 L1121.23 1411.77 L1120.52 1411.77 L1119.81 1411.77 L1119.1 1411.77 L1118.39 1411.77 L1117.69 1411.77 L1116.98 1411.77 L1116.27 1411.77 L1115.56 1411.77 L1114.86 1411.77 L1114.15 1411.77 L1113.44 1411.77 L1112.73 1411.77 L1112.02 1411.77 L1111.32 1411.77 L1110.61 1411.77 L1109.9 1411.77 L1109.19 1411.77 L1108.49 1411.77 L1107.78 1411.77 L1107.07 1411.77 L1106.36 1411.77 L1105.65 1411.77 L1104.95 1411.77 L1104.24 1411.77 L1103.53 1411.77 L1102.82 1411.77 L1102.12 1411.77 L1101.41 1411.77 L1100.7 1411.77 L1099.99 1411.77 L1099.28 1411.77 L1098.58 1411.77 L1097.87 1411.77 L1097.16 1411.77 L1096.45 1411.77 L1095.75 1411.77 L1095.04 1411.77 L1094.33 1411.77 L1093.62 1411.77 L1092.91 1411.77 L1092.21 1411.77 L1091.5 1411.77 L1090.79 1411.77 L1090.08 1411.77 L1089.38 1411.77 L1088.67 1411.77 L1087.96 1411.77 L1087.25 1411.77 L1086.54 1411.77 L1085.84 1411.77 L1085.13 1411.77 L1084.42 1411.77 L1083.71 1411.77 L1083.01 1411.77 L1082.3 1411.77 L1081.59 1411.77 L1080.88 1411.77 L1080.17 1411.77 L1079.47 1411.77 L1078.76 1411.77 L1078.05 1411.77 L1077.34 1411.77 L1076.64 1411.77 L1075.93 1411.77 L1075.22 1411.77 L1074.51 1411.77 L1073.8 1411.77 L1073.1 1411.77 L1072.39 1411.77 L1071.68 1411.77 L1070.97 1411.77 L1070.27 1411.77 L1069.56 1411.77 L1068.85 1411.77 L1068.14 1411.77 L1067.43 1411.77 L1066.73 1411.77 L1066.02 1411.77 L1065.31 1411.77 L1064.6 1411.77 L1063.9 1411.77 L1063.19 1411.77 L1062.48 1411.77 L1061.77 1411.77 L1061.06 1411.77 L1060.36 1411.77 L1059.65 1411.77 L1058.94 1411.77 L1058.23 1411.77 L1057.53 1411.77 L1056.82 1411.77 L1056.11 1411.77 L1055.4 1411.77 L1054.69 1411.77 L1053.99 1411.77 L1053.28 1411.77 L1052.57 1411.77 L1051.86 1411.77 L1051.15 1411.77 L1050.45 1411.77 L1049.74 1411.77 L1049.03 1411.77 L1048.32 1411.77 L1047.62 1411.77 L1046.91 1411.77 L1046.2 1411.77 L1045.49 1411.77 L1044.78 1411.77 L1044.08 1411.77 L1043.37 1411.77 L1042.66 1411.77 L1041.95 1411.77 L1041.25 1411.77 L1040.54 1411.77 L1039.83 1411.77 L1039.12 1411.77 L1038.41 1411.77 L1037.71 1411.77 L1037 1411.77 L1036.29 1411.77 L1035.58 1411.77 L1034.88 1411.77 L1034.17 1411.77 L1033.46 1411.77 L1032.75 1411.77 L1032.04 1411.77 L1031.34 1411.77 L1030.63 1411.77 L1029.92 1411.77 L1029.21 1411.77 L1028.51 1411.77 L1027.8 1411.77 L1027.09 1411.77 L1026.38 1411.77 L1025.67 1411.77 L1024.97 1411.77 L1024.26 1411.77 L1023.55 1411.77 L1022.84 1411.77 L1022.14 1411.77 L1021.43 1411.77 L1020.72 1411.77 L1020.01 1411.77 L1019.3 1411.77 L1018.6 1411.77 L1017.89 1411.77 L1017.18 1411.77 L1016.47 1411.77 L1015.77 1411.77 L1015.06 1411.77 L1014.35 1411.77 L1013.64 1411.77 L1012.93 1411.77 L1012.23 1411.77 L1011.52 1411.77 L1010.81 1411.77 L1010.1 1411.77 L1009.4 1411.77 L1008.69 1411.77 L1007.98 1411.77 L1007.27 1411.77 L1006.56 1411.77 L1005.86 1411.77 L1005.15 1411.77 L1004.44 1411.77 L1003.73 1411.77 L1003.03 1411.77 L1002.32 1411.77 L1001.61 1411.77 L1000.9 1411.77 L1000.19 1411.77 L999.486 1411.77 L998.779 1411.77 L998.071 1411.77 L997.363 1411.77 L996.655 1411.77 L995.947 1411.77 L995.24 1411.77 L994.532 1411.77 L993.824 1411.77 L993.116 1411.77 L992.409 1411.77 L991.701 1411.77 L990.993 1411.77 L990.285 1411.77 L989.577 1411.77 L988.87 1411.77 L988.162 1411.77 L987.454 1411.77 L986.746 1411.77 L986.038 1411.77 L985.331 1411.77 L984.623 1411.77 L983.915 1411.77 L983.207 1411.77 L982.499 1411.77 L981.792 1411.77 L981.084 1411.77 L980.376 1411.77 L979.668 1411.77 L978.961 1411.77 L978.253 1411.77 L977.545 1411.77 L976.837 1411.77 L976.129 1411.77 L975.422 1411.77 L974.714 1411.77 L974.006 1411.77 L973.298 1411.77 L972.59 1411.77 L971.883 1411.77 L971.175 1411.77 L970.467 1411.77 L969.759 1411.77 L969.051 1411.77 L968.344 1411.77 L967.636 1411.77 L966.928 1411.77 L966.22 1411.77 L965.513 1411.77 L964.805 1411.77 L964.097 1411.77 L963.389 1411.77 L962.681 1411.77 L961.974 1411.77 L961.266 1411.77 L960.558 1411.77 L959.85 1411.77 L959.142 1411.77 L958.435 1411.77 L957.727 1411.77 L957.019 1411.77 L956.311 1411.77 L955.604 1411.77 L954.896 1411.77 L954.188 1411.77 L953.48 1411.77 L952.772 1411.77 L952.065 1411.77 L951.357 1411.77 L950.649 1411.77 L949.941 1411.77 L949.233 1411.77 L948.526 1411.77 L947.818 1411.77 L947.11 1411.77 L946.402 1411.77 L945.694 1411.77 L944.987 1411.77 L944.279 1411.77 L943.571 1411.77 L942.863 1411.77 L942.156 1411.77 L941.448 1411.77 L940.74 1411.77 L940.032 1411.77 L939.324 1411.77 L938.617 1411.77 L937.909 1411.77 L937.201 1411.77 L936.493 1411.77 L935.785 1411.77 L935.078 1411.77 L934.37 1411.77 L933.662 1411.77 L932.954 1411.77 L932.247 1411.77 L931.539 1411.77 L930.831 1411.77 L930.123 1411.77 L929.415 1411.77 L928.708 1411.77 L928 1411.77 L927.292 1411.77 L926.584 1411.77 L925.876 1411.77 L925.169 1411.77 L924.461 1411.77 L923.753 1411.77 L923.045 1411.77 L922.337 1411.77 L921.63 1411.77 L920.922 1411.77 L920.214 1411.77 L919.506 1411.77 L918.799 1411.77 L918.091 1411.77 L917.383 1411.77 L916.675 1411.77 L915.967 1411.77 L915.26 1411.77 L914.552 1411.77 L913.844 1411.77 L913.136 1411.77 L912.428 1411.77 L911.721 1411.77 L911.013 1411.77 L910.305 1411.77 L909.597 1411.77 L908.89 1411.77 L908.182 1411.77 L907.474 1411.77 L906.766 1411.77 L906.058 1411.77 L905.351 1411.77 L904.643 1411.77 L903.935 1411.77 L903.227 1411.77 L902.519 1411.77 L901.812 1411.77 L901.104 1411.77 L900.396 1411.77 L899.688 1411.77 L898.98 1411.77 L898.273 1411.77 L897.565 1411.77 L896.857 1411.77 L896.149 1411.77 L895.442 1411.77 L894.734 1411.77 L894.026 1411.77 L893.318 1411.77 L892.61 1411.77 L891.903 1411.77 L891.195 1411.77 L890.487 1411.77 L889.779 1411.77 L889.071 1411.77 L888.364 1411.77 L887.656 1411.77 L886.948 1411.77 L886.24 1411.77 L885.533 1411.77 L884.825 1411.77 L884.117 1411.77 L883.409 1411.77 L882.701 1411.77 L881.994 1411.77 L881.286 1411.77 L880.578 1411.77 L879.87 1411.77 L879.162 1411.77 L878.455 1411.77 L877.747 1411.77 L877.039 1411.77 L876.331 1411.77 L875.623 1411.77 L874.916 1411.77 L874.208 1411.77  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip602)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"874.208,1411.86 874.916,1411.86 875.623,1411.86 876.331,1411.86 877.039,1411.86 877.747,1411.86 878.455,1411.86 879.162,1411.86 879.87,1411.86 880.578,1411.86 881.286,1411.86 881.994,1411.86 882.701,1411.86 883.409,1411.86 884.117,1411.86 884.825,1411.86 885.533,1411.86 886.24,1411.86 886.948,1411.86 887.656,1411.86 888.364,1411.86 889.071,1411.86 889.779,1411.86 890.487,1411.86 891.195,1411.86 891.903,1411.86 892.61,1411.86 893.318,1411.86 894.026,1411.86 894.734,1411.86 895.442,1411.86 896.149,1411.86 896.857,1411.86 897.565,1411.86 898.273,1411.86 898.98,1411.86 899.688,1411.86 900.396,1411.86 901.104,1411.86 901.812,1411.86 902.519,1411.86 903.227,1411.86 903.935,1411.86 904.643,1411.86 905.351,1411.86 906.058,1411.86 906.766,1411.86 907.474,1411.86 908.182,1411.86 908.89,1411.86 909.597,1411.86 910.305,1411.86 911.013,1411.86 911.721,1411.86 912.428,1411.86 913.136,1411.86 913.844,1411.86 914.552,1411.86 915.26,1411.86 915.967,1411.86 916.675,1411.86 917.383,1411.86 918.091,1411.86 918.799,1411.86 919.506,1411.86 920.214,1411.86 920.922,1411.86 921.63,1411.86 922.337,1411.86 923.045,1411.86 923.753,1411.86 924.461,1411.86 925.169,1411.86 925.876,1411.86 926.584,1411.86 927.292,1411.86 928,1411.86 928.708,1411.86 929.415,1411.86 930.123,1411.86 930.831,1411.86 931.539,1411.86 932.247,1411.86 932.954,1411.86 933.662,1411.86 934.37,1411.86 935.078,1411.86 935.785,1411.86 936.493,1411.86 937.201,1411.86 937.909,1411.86 938.617,1411.86 939.324,1411.86 940.032,1411.86 940.74,1411.86 941.448,1411.86 942.156,1411.86 942.863,1411.86 943.571,1411.86 944.279,1411.86 944.987,1411.86 945.694,1411.86 946.402,1411.86 947.11,1411.86 947.818,1411.86 948.526,1411.86 949.233,1411.86 949.941,1411.86 950.649,1411.86 951.357,1411.86 952.065,1411.86 952.772,1411.86 953.48,1411.86 954.188,1411.86 954.896,1411.86 955.604,1411.86 956.311,1411.86 957.019,1411.86 957.727,1411.86 958.435,1411.86 959.142,1411.86 959.85,1411.86 960.558,1411.86 961.266,1411.86 961.974,1411.86 962.681,1411.86 963.389,1411.86 964.097,1411.86 964.805,1411.86 965.513,1411.86 966.22,1411.86 966.928,1411.86 967.636,1411.86 968.344,1411.86 969.051,1411.86 969.759,1411.86 970.467,1411.86 971.175,1411.86 971.883,1411.86 972.59,1411.86 973.298,1411.86 974.006,1411.86 974.714,1411.86 975.422,1411.86 976.129,1411.86 976.837,1411.86 977.545,1411.86 978.253,1411.86 978.961,1411.86 979.668,1411.86 980.376,1411.86 981.084,1411.86 981.792,1411.86 982.499,1411.86 983.207,1411.86 983.915,1411.86 984.623,1411.86 985.331,1411.86 986.038,1411.86 986.746,1411.86 987.454,1411.86 988.162,1411.86 988.87,1411.86 989.577,1411.86 990.285,1411.86 990.993,1411.86 991.701,1411.86 992.409,1411.86 993.116,1411.86 993.824,1411.86 994.532,1411.86 995.24,1411.86 995.947,1411.86 996.655,1411.86 997.363,1411.86 998.071,1411.86 998.779,1411.86 999.486,1411.86 1000.19,1411.86 1000.9,1411.86 1001.61,1411.86 1002.32,1411.86 1003.03,1411.86 1003.73,1411.86 1004.44,1411.86 1005.15,1411.86 1005.86,1411.86 1006.56,1411.86 1007.27,1411.86 1007.98,1411.86 1008.69,1411.86 1009.4,1411.86 1010.1,1411.86 1010.81,1411.86 1011.52,1411.86 1012.23,1411.86 1012.93,1411.86 1013.64,1411.86 1014.35,1411.86 1015.06,1411.86 1015.77,1411.86 1016.47,1411.86 1017.18,1411.86 1017.89,1411.86 1018.6,1411.86 1019.3,1411.86 1020.01,1411.86 1020.72,1411.86 1021.43,1411.86 1022.14,1411.86 1022.84,1411.86 1023.55,1411.86 1024.26,1411.86 1024.97,1411.86 1025.67,1411.86 1026.38,1411.86 1027.09,1411.86 1027.8,1411.86 1028.51,1411.86 1029.21,1411.86 1029.92,1411.86 1030.63,1411.86 1031.34,1411.86 1032.04,1411.86 1032.75,1411.86 1033.46,1411.86 1034.17,1411.86 1034.88,1411.86 1035.58,1411.86 1036.29,1411.86 1037,1411.86 1037.71,1411.86 1038.41,1411.86 1039.12,1411.86 1039.83,1411.86 1040.54,1411.86 1041.25,1411.86 1041.95,1411.86 1042.66,1411.86 1043.37,1411.86 1044.08,1411.86 1044.78,1411.86 1045.49,1411.86 1046.2,1411.86 1046.91,1411.86 1047.62,1411.86 1048.32,1411.86 1049.03,1411.86 1049.74,1411.86 1050.45,1411.86 1051.15,1411.86 1051.86,1411.86 1052.57,1411.86 1053.28,1411.86 1053.99,1411.86 1054.69,1411.86 1055.4,1411.86 1056.11,1411.86 1056.82,1411.86 1057.53,1411.86 1058.23,1411.86 1058.94,1411.86 1059.65,1411.86 1060.36,1411.86 1061.06,1411.86 1061.77,1411.86 1062.48,1411.86 1063.19,1411.86 1063.9,1411.86 1064.6,1411.86 1065.31,1411.86 1066.02,1411.86 1066.73,1411.86 1067.43,1411.86 1068.14,1411.86 1068.85,1411.86 1069.56,1411.86 1070.27,1411.86 1070.97,1411.86 1071.68,1411.86 1072.39,1411.86 1073.1,1411.86 1073.8,1411.86 1074.51,1411.86 1075.22,1411.86 1075.93,1411.86 1076.64,1411.86 1077.34,1411.86 1078.05,1411.86 1078.76,1411.86 1079.47,1411.86 1080.17,1411.86 1080.88,1411.86 1081.59,1411.86 1082.3,1411.86 1083.01,1411.86 1083.71,1411.86 1084.42,1411.86 1085.13,1411.86 1085.84,1411.86 1086.54,1411.86 1087.25,1411.86 1087.96,1411.86 1088.67,1411.86 1089.38,1411.86 1090.08,1411.86 1090.79,1411.86 1091.5,1411.86 1092.21,1411.86 1092.91,1411.86 1093.62,1411.86 1094.33,1411.86 1095.04,1411.86 1095.75,1411.86 1096.45,1411.86 1097.16,1411.86 1097.87,1411.86 1098.58,1411.86 1099.28,1411.86 1099.99,1411.86 1100.7,1411.86 1101.41,1411.86 1102.12,1411.86 1102.82,1411.86 1103.53,1411.86 1104.24,1411.86 1104.95,1411.86 1105.65,1411.86 1106.36,1411.86 1107.07,1411.86 1107.78,1411.86 1108.49,1411.86 1109.19,1411.86 1109.9,1411.86 1110.61,1411.86 1111.32,1411.86 1112.02,1411.86 1112.73,1411.86 1113.44,1411.86 1114.15,1411.86 1114.86,1411.86 1115.56,1411.86 1116.27,1411.86 1116.98,1411.86 1117.69,1411.86 1118.39,1411.86 1119.1,1411.86 1119.81,1411.86 1120.52,1411.86 1121.23,1411.86 1121.93,1411.86 1122.64,1411.86 1123.35,1411.86 1124.06,1411.86 1124.76,1411.86 1125.47,1411.86 1126.18,1411.86 1126.89,1411.86 1127.6,1411.86 1128.3,1411.86 1129.01,1411.86 1129.72,1411.86 1130.43,1411.86 1131.13,1411.86 1131.84,1411.86 1132.55,1411.86 1133.26,1411.86 1133.97,1411.86 1134.67,1411.86 1135.38,1411.86 1136.09,1411.86 1136.8,1411.86 1137.51,1411.86 1138.21,1411.86 1138.92,1411.86 1139.63,1411.86 1140.34,1411.86 1141.04,1411.86 1141.75,1411.86 1142.46,1411.86 1143.17,1411.86 1143.88,1411.86 1144.58,1411.86 1145.29,1411.86 1146,1411.86 1146.71,1411.86 1147.41,1411.86 1148.12,1411.86 1148.83,1411.86 1149.54,1411.86 1150.25,1411.86 1150.95,1411.86 1151.66,1411.86 1152.37,1411.86 1153.08,1411.86 1153.78,1411.86 1154.49,1411.86 1155.2,1411.86 1155.91,1411.86 1156.62,1411.86 1157.32,1411.86 1158.03,1411.86 1158.74,1411.86 1159.45,1411.86 1160.15,1411.86 1160.86,1411.86 1161.57,1411.86 1162.28,1411.86 1162.99,1411.86 1163.69,1411.86 1164.4,1411.86 1165.11,1411.86 1165.82,1411.86 1166.52,1411.86 1167.23,1411.86 1167.94,1411.86 1168.65,1411.86 1169.36,1411.86 1170.06,1411.86 1170.77,1411.86 1171.48,1411.86 1172.19,1411.86 1172.89,1411.86 1173.6,1411.86 1174.31,1411.86 1175.02,1411.86 1175.73,1411.86 1176.43,1411.86 1177.14,1411.86 1177.85,1411.86 1178.56,1411.86 1179.26,1411.86 1179.97,1411.86 1180.68,1411.86 1181.39,1411.86 1182.1,1411.86 1182.8,1411.86 1183.51,1411.86 1184.22,1411.86 1184.93,1411.86 1185.63,1411.86 1186.34,1411.86 1187.05,1411.86 1187.76,1411.86 1188.47,1411.86 1189.17,1411.86 1189.88,1411.86 1190.59,1411.86 1191.3,1411.86 1192,1411.86 1192.71,1411.86 1193.42,1411.86 1194.13,1411.86 1194.84,1411.86 1195.54,1411.86 1196.25,1411.86 1196.96,1411.86 1197.67,1411.86 1198.37,1411.86 1199.08,1411.86 1199.79,1411.86 1200.5,1411.86 1201.21,1411.86 1201.91,1411.86 1202.62,1411.86 1203.33,1411.86 1204.04,1411.86 1204.74,1411.86 1205.45,1411.86 1206.16,1411.86 1206.87,1411.86 1207.58,1411.86 1208.28,1411.86 1208.99,1411.86 1209.7,1411.86 1210.41,1411.86 1211.12,1411.86 1211.82,1411.86 1212.53,1411.86 1213.24,1411.86 1213.95,1411.86 1214.65,1411.86 1215.36,1411.86 1216.07,1411.86 1216.78,1411.86 1217.49,1411.86 1218.19,1411.86 1218.9,1411.86 1219.61,1411.86 1220.32,1411.86 1221.02,1411.86 1221.73,1411.86 1222.44,1411.86 1223.15,1411.86 1223.86,1411.86 1224.56,1411.86 1225.27,1411.86 1225.98,1411.86 1226.69,1411.86 1227.39,1411.86 1228.1,1411.86 1228.81,1411.86 1229.52,1411.86 1230.23,1411.86 1230.93,1411.86 1231.64,1411.86 1232.35,1411.86 1233.06,1411.86 1233.76,1411.86 1234.47,1411.86 1235.18,1411.86 1235.89,1411.86 1236.6,1411.86 1237.3,1411.86 1238.01,1411.86 1238.72,1411.86 1239.43,1411.86 1240.13,1411.86 1240.84,1411.86 1241.55,1411.86 1242.26,1411.86 1242.97,1411.86 1243.67,1411.86 1244.38,1411.86 1245.09,1411.86 1245.8,1411.86 1246.5,1411.86 1247.21,1411.86 1247.92,1411.86 1248.63,1411.86 1249.34,1411.86 1250.04,1411.86 1250.75,1411.86 1251.46,1411.86 1252.17,1411.86 1252.87,1411.86 1253.58,1411.86 1254.29,1411.86 1255,1411.86 1255.71,1411.86 1256.41,1411.86 1257.12,1411.86 1257.83,1411.86 1258.54,1411.86 1259.24,1411.86 1259.95,1411.86 1260.66,1411.86 1261.37,1411.86 1262.08,1411.86 1262.78,1411.86 1263.49,1411.86 1264.2,1411.86 1264.91,1411.86 1265.61,1411.86 1266.32,1411.86 1267.03,1411.86 1267.74,1411.86 1268.45,1411.86 1269.15,1411.86 1269.86,1411.86 1270.57,1411.86 1271.28,1411.86 1271.98,1411.86 1272.69,1411.86 1273.4,1411.86 1274.11,1411.86 1274.82,1411.86 1275.52,1411.86 1276.23,1411.86 1276.94,1411.86 1277.65,1411.86 1278.35,1411.86 1279.06,1411.86 1279.77,1411.86 1280.48,1411.86 1281.19,1411.86 1281.89,1411.86 1282.6,1411.86 1283.31,1411.86 1284.02,1411.86 1284.72,1411.86 1285.43,1411.86 1286.14,1411.86 1286.85,1411.86 1287.56,1411.86 1288.26,1411.86 1288.97,1411.86 1289.68,1411.86 1290.39,1411.86 1291.1,1411.86 1291.8,1411.86 1292.51,1411.86 1293.22,1411.86 1293.93,1411.86 1294.63,1411.86 1295.34,1411.86 1296.05,1411.86 1296.76,1411.86 1297.47,1411.86 1298.17,1411.86 1298.88,1411.86 1299.59,1411.86 1300.3,1411.86 1301,1411.86 1301.71,1411.86 1302.42,1411.86 1303.13,1411.86 1303.84,1411.86 1304.54,1411.86 1305.25,1411.86 1305.96,1411.86 1306.67,1411.86 1307.37,1411.86 1308.08,1411.86 1308.79,1411.86 1309.5,1411.86 1310.21,1411.86 1310.91,1411.86 1311.62,1411.86 1312.33,1411.86 1313.04,1411.86 1313.74,1411.86 1314.45,1411.86 1315.16,1411.86 1315.87,1411.86 1316.58,1411.86 1317.28,1411.86 1317.99,1411.86 1318.7,1411.86 1319.41,1411.86 1320.11,1411.86 1320.82,1411.86 1321.53,1411.86 1322.24,1411.86 1322.95,1411.86 1323.65,1411.86 1324.36,1411.86 1325.07,1411.86 1325.78,1411.86 1326.48,1411.86 1327.19,1411.86 1327.9,1411.86 1328.61,1411.86 1329.32,1411.86 1330.02,1411.86 1330.73,1411.86 1331.44,1411.86 1332.15,1411.86 1332.85,1411.86 1333.56,1411.86 1334.27,1411.86 1334.98,1411.86 1335.69,1411.86 1336.39,1411.86 1337.1,1411.86 1337.81,1411.86 1338.52,1411.86 1339.22,1411.86 1339.93,1411.86 1340.64,1411.86 1341.35,1411.86 1342.06,1411.86 1342.76,1411.86 1343.47,1411.86 1344.18,1411.86 1344.89,1411.86 1345.59,1411.86 1346.3,1411.86 1347.01,1411.86 1347.72,1411.86 1348.43,1411.86 1349.13,1411.86 1349.84,1411.86 1350.55,1411.86 1351.26,1411.86 1351.96,1411.86 1352.67,1411.86 1353.38,1411.86 1354.09,1411.86 1354.8,1411.86 1355.5,1411.86 1356.21,1411.86 1356.92,1411.86 1357.63,1411.86 1358.33,1411.86 1359.04,1411.86 1359.75,1411.86 1360.46,1411.86 1361.17,1411.86 1361.87,1411.86 1362.58,1411.86 1363.29,1411.86 1364,1411.86 1364.71,1411.86 1365.41,1411.86 1366.12,1411.86 1366.83,1411.86 1367.54,1411.86 1368.24,1411.86 1368.95,1411.86 1369.66,1411.86 1370.37,1411.86 1371.08,1411.86 1371.78,1411.86 1372.49,1411.86 1373.2,1411.86 1373.91,1411.86 1374.61,1411.86 1375.32,1411.86 1376.03,1411.86 1376.74,1411.86 1377.45,1411.86 1378.15,1411.86 1378.86,1411.86 1379.57,1411.86 1380.28,1411.86 1380.98,1411.86 1381.69,1411.86 1382.4,1411.86 1383.11,1411.86 1383.82,1411.86 1384.52,1411.86 1385.23,1411.86 1385.94,1411.86 1386.65,1411.86 1387.35,1411.86 1388.06,1411.86 1388.77,1411.86 1389.48,1411.86 1390.19,1411.86 1390.89,1411.86 1391.6,1411.86 1392.31,1411.86 1393.02,1411.86 1393.72,1411.86 1394.43,1411.86 1395.14,1411.86 1395.85,1411.86 1396.56,1411.86 1397.26,1411.86 1397.97,1411.86 1398.68,1411.86 1399.39,1411.86 1400.09,1411.86 1400.8,1411.86 1401.51,1411.86 1402.22,1411.86 1402.93,1411.86 1403.63,1411.86 1404.34,1411.86 1405.05,1411.86 1405.76,1411.86 1406.46,1411.86 1407.17,1411.86 1407.88,1411.86 1408.59,1411.86 1409.3,1411.86 1410,1411.86 1410.71,1411.86 1411.42,1411.86 1412.13,1411.86 1412.83,1411.86 1413.54,1411.86 1414.25,1411.86 1414.96,1411.86 1415.67,1411.86 1416.37,1411.86 1417.08,1411.86 1417.79,1411.86 1418.5,1411.86 1419.2,1411.86 1419.91,1411.86 1420.62,1411.86 1421.33,1411.86 1422.04,1411.86 1422.74,1411.86 1423.45,1411.86 1424.16,1411.86 1424.87,1411.86 1425.57,1411.86 1426.28,1411.86 1426.99,1411.86 1427.7,1411.86 1428.41,1411.86 1429.11,1411.86 1429.82,1411.86 1430.53,1411.86 1431.24,1411.86 1431.94,1411.86 1432.65,1411.86 1433.36,1411.86 1434.07,1411.86 1434.78,1411.86 1435.48,1411.86 1436.19,1411.86 1436.9,1411.86 1437.61,1411.86 1438.31,1411.86 1439.02,1411.86 1439.73,1411.86 1440.44,1411.86 1441.15,1411.86 1441.85,1411.86 1442.56,1411.86 1443.27,1411.86 1443.98,1411.86 1444.69,1411.86 1445.39,1411.86 1446.1,1411.86 1446.81,1411.86 1447.52,1411.86 1448.22,1411.86 1448.93,1411.86 1449.64,1411.86 1450.35,1411.86 1451.06,1411.86 1451.76,1411.86 1452.47,1411.86 1453.18,1411.86 1453.89,1411.86 1454.59,1411.86 1455.3,1411.86 1456.01,1411.86 1456.72,1411.86 1457.43,1411.86 1458.13,1411.86 1458.84,1411.86 1459.55,1411.86 1460.26,1411.86 1460.96,1411.86 1461.67,1411.86 1462.38,1411.86 1463.09,1411.86 1463.8,1411.86 1464.5,1411.86 1465.21,1411.86 1465.92,1411.86 1466.63,1411.86 1467.33,1411.86 1468.04,1411.86 1468.75,1411.86 1469.46,1411.86 1470.17,1411.86 1470.87,1411.86 1471.58,1411.86 1472.29,1411.86 1473,1411.86 1473.7,1411.86 1474.41,1411.86 1475.12,1411.86 1475.83,1411.86 1476.54,1411.86 1477.24,1411.86 1477.95,1411.86 1478.66,1411.86 1479.37,1411.86 1480.07,1411.86 1480.78,1411.86 1481.49,1411.86 1482.2,1411.86 1482.91,1411.86 1483.61,1411.86 1484.32,1411.86 1485.03,1411.86 1485.74,1411.86 1486.44,1411.86 1487.15,1411.86 1487.86,1411.86 1488.57,1411.86 1489.28,1411.86 1489.98,1411.86 1490.69,1411.86 1491.4,1411.86 1492.11,1411.86 1492.81,1411.86 1493.52,1411.86 1494.23,1411.86 1494.94,1411.86 1495.65,1411.86 1496.35,1411.86 1497.06,1411.86 1497.77,1411.86 1498.48,1411.86 1499.18,1411.86 1499.89,1411.86 1500.6,1411.86 1501.31,1411.86 1502.02,1411.86 1502.72,1411.86 1503.43,1411.86 1504.14,1411.86 1504.85,1411.86 1505.55,1411.86 1506.26,1411.86 1506.97,1411.86 1507.68,1411.86 1508.39,1411.86 1509.09,1411.86 1509.8,1411.86 1510.51,1411.86 1511.22,1411.86 1511.92,1411.86 1512.63,1411.86 1513.34,1411.86 1514.05,1411.86 1514.76,1411.86 1515.46,1411.86 1516.17,1411.86 1516.88,1411.86 1517.59,1411.86 1518.3,1411.86 1519,1411.86 1519.71,1411.86 1520.42,1411.86 1521.13,1411.86 1521.83,1411.86 1522.54,1411.86 1523.25,1411.86 1523.96,1411.86 1524.67,1411.86 1525.37,1411.86 1526.08,1411.86 1526.79,1411.86 1527.5,1411.86 1528.2,1411.86 1528.91,1411.86 1529.62,1411.86 1530.33,1411.86 1531.04,1411.86 1531.74,1411.86 1532.45,1411.86 1533.16,1411.86 1533.87,1411.86 1534.57,1411.86 1535.28,1411.86 1535.99,1411.86 1536.7,1411.86 1537.41,1411.86 1538.11,1411.86 1538.82,1411.86 1539.53,1411.86 1540.24,1411.86 1540.94,1411.86 1541.65,1411.86 1542.36,1411.86 1543.07,1411.86 1543.78,1411.86 1544.48,1411.86 1545.19,1411.86 1545.9,1411.86 1546.61,1411.86 1547.31,1411.86 1548.02,1411.86 1548.73,1411.86 1549.44,1411.86 1550.15,1411.86 1550.85,1411.86 1551.56,1411.86 1552.27,1411.86 1552.98,1411.86 1553.68,1411.86 1554.39,1411.86 1555.1,1411.86 1555.81,1411.86 1556.52,1411.86 1557.22,1411.86 1557.93,1411.86 1558.64,1411.86 1559.35,1411.86 1560.05,1411.86 1560.76,1411.86 1561.47,1411.86 1562.18,1411.86 1562.89,1411.86 1563.59,1411.86 1564.3,1411.86 1565.01,1411.86 1565.72,1411.86 1566.42,1411.86 1567.13,1411.86 1567.84,1411.86 1568.55,1411.86 1569.26,1411.86 1569.96,1411.86 1570.67,1411.86 1571.38,1411.86 1572.09,1411.86 1572.79,1411.86 1573.5,1411.86 1574.21,1411.86 1574.92,1411.86 1575.63,1411.86 1576.33,1411.86 1577.04,1411.86 1577.75,1411.86 1578.46,1411.86 1579.16,1411.86 1579.87,1411.86 1580.58,1411.86 1581.29,1411.86 1582,1411.86 1582.7,1411.86 1583.41,1411.86 1584.12,1411.86 1584.83,1411.86 1585.53,1411.86 1586.24,1411.86 1586.95,1411.86 1587.66,1411.86 1588.37,1411.86 1589.07,1411.86 1589.78,1411.86 1590.49,1411.86 1591.2,1411.86 1591.9,1411.86 1592.61,1411.86 1593.32,1411.86 1594.03,1411.86 1594.74,1411.86 1595.44,1411.86 1596.15,1411.86 1596.86,1411.86 1597.57,1411.86 1598.28,1411.86 1598.98,1411.86 1599.69,1411.86 1600.4,1411.86 1601.11,1411.86 1601.81,1411.86 1602.52,1411.86 1603.23,1411.86 1603.94,1411.86 1604.65,1411.86 1605.35,1411.86 1606.06,1411.86 1606.77,1411.86 1607.48,1411.86 1608.18,1411.86 1608.89,1411.86 1609.6,1411.86 1610.31,1411.86 1611.02,1411.86 1611.72,1411.86 1612.43,1411.86 1613.14,1411.86 1613.85,1411.86 1614.55,1411.86 1615.26,1411.86 1615.97,1411.86 1616.68,1411.86 1617.39,1411.86 1618.09,1411.86 1618.8,1411.86 1619.51,1411.86 1620.22,1411.86 1620.92,1411.86 1621.63,1411.86 1622.34,1411.86 1623.05,1411.86 1623.76,1411.86 1624.46,1411.86 1625.17,1411.86 1625.88,1411.86 1626.59,1411.86 1627.29,1411.86 1628,1411.86 1628.71,1411.86 1629.42,1411.86 1630.13,1411.86 1630.83,1411.86 1631.54,1411.86 1632.25,1411.86 1632.96,1411.86 1633.66,1411.86 1634.37,1411.86 1635.08,1411.86 1635.79,1411.86 1636.5,1411.86 1637.2,1411.86 1637.91,1411.86 1638.62,1411.86 1639.33,1411.86 1640.03,1411.86 1640.74,1411.86 1641.45,1411.86 1642.16,1411.86 1642.87,1411.86 1643.57,1411.86 1644.28,1411.86 1644.99,1411.86 1645.7,1411.86 1646.4,1411.86 1647.11,1411.86 1647.82,1411.86 1648.53,1411.86 1649.24,1411.86 1649.94,1411.86 1650.65,1411.86 1651.36,1411.86 1652.07,1411.86 1652.77,1411.86 1653.48,1411.86 1654.19,1411.86 1654.9,1411.86 1655.61,1411.86 1656.31,1411.86 1657.02,1411.86 1657.73,1411.86 1658.44,1411.86 1659.14,1411.86 1659.85,1411.86 1660.56,1411.86 1661.27,1411.86 1661.98,1411.86 1662.68,1411.86 1663.39,1411.86 1664.1,1411.86 1664.81,1411.86 1665.51,1411.86 1666.22,1411.86 1666.93,1411.86 1667.64,1411.86 1668.35,1411.86 1669.05,1411.86 1669.76,1411.86 1670.47,1411.86 1671.18,1411.86 1671.89,1411.86 1672.59,1411.86 1673.3,1411.86 1674.01,1411.86 1674.72,1411.86 1675.42,1411.86 1676.13,1411.86 1676.84,1411.86 1677.55,1411.86 1678.26,1411.86 1678.96,1411.86 1679.67,1411.86 1680.38,1411.86 1681.09,1411.86 1681.79,1411.86 1682.5,1411.86 1683.21,1411.86 1683.92,1411.86 1684.63,1411.86 1685.33,1411.86 1686.04,1411.86 1686.75,1411.86 1687.46,1411.86 1688.16,1411.86 1688.87,1411.86 1689.58,1411.86 1690.29,1411.86 1691,1411.86 1691.7,1411.86 1692.41,1411.86 1693.12,1411.86 1693.83,1411.86 1694.53,1411.86 1695.24,1411.86 1695.95,1411.86 1696.66,1411.86 1697.37,1411.86 1698.07,1411.86 1698.78,1411.86 1699.49,1411.86 1700.2,1411.86 1700.9,1411.86 1701.61,1411.86 1702.32,1411.86 1703.03,1411.86 1703.74,1411.86 1704.44,1411.86 1705.15,1411.86 1705.86,1411.86 1706.57,1411.86 1707.27,1411.86 1707.98,1411.86 1708.69,1411.86 1709.4,1411.86 1710.11,1411.86 1710.81,1411.86 1711.52,1411.86 1712.23,1411.86 1712.94,1411.86 1713.64,1411.86 1714.35,1411.86 1715.06,1411.86 1715.77,1411.86 1716.48,1411.86 1717.18,1411.86 1717.89,1411.86 1718.6,1411.86 1719.31,1411.86 1720.01,1411.86 1720.72,1411.86 1721.43,1411.86 1722.14,1411.86 1722.85,1411.86 1723.55,1411.86 1724.26,1411.86 1724.97,1411.86 1725.68,1411.86 1726.38,1411.86 1727.09,1411.86 1727.8,1411.86 1728.51,1411.86 1729.22,1411.86 1729.92,1411.86 1730.63,1411.86 1731.34,1411.86 1732.05,1411.86 1732.75,1411.86 1733.46,1411.86 1734.17,1411.86 1734.88,1411.86 1735.59,1411.86 1736.29,1411.86 1737,1411.86 1737.71,1411.86 1738.42,1411.86 1739.12,1411.86 1739.83,1411.86 1740.54,1411.86 1741.25,1411.86 1741.96,1411.86 1742.66,1411.86 1743.37,1411.86 1744.08,1411.86 1744.79,1411.86 1745.49,1411.86 1746.2,1411.86 1746.91,1411.86 1747.62,1411.86 1748.33,1411.86 1749.03,1411.86 1749.74,1411.86 1750.45,1411.86 1751.16,1411.86 1751.87,1411.86 1752.57,1411.86 1753.28,1411.86 1753.99,1411.86 1754.7,1411.86 1755.4,1411.86 1756.11,1411.86 1756.82,1411.86 1757.53,1411.86 1758.24,1411.86 1758.94,1411.86 1759.65,1411.86 1760.36,1411.86 1761.07,1411.86 1761.77,1411.86 1762.48,1411.86 1763.19,1411.86 1763.9,1411.86 1764.61,1411.86 1765.31,1411.86 1766.02,1411.86 1766.73,1411.86 1767.44,1411.86 1768.14,1411.86 1768.85,1411.86 1769.56,1411.86 1770.27,1411.86 1770.98,1411.86 1771.68,1411.86 1772.39,1411.86 1773.1,1411.86 1773.81,1411.86 1774.51,1411.86 1775.22,1411.86 1775.93,1411.86 1776.64,1411.86 1777.35,1411.86 1778.05,1411.86 1778.76,1411.86 1779.47,1411.86 1780.18,1411.86 1780.88,1411.86 1781.59,1411.86 1782.3,1411.86 1783.01,1411.86 1783.72,1411.86 1784.42,1411.86 1785.13,1411.86 1785.84,1411.86 1786.55,1411.86 1787.25,1411.86 1787.96,1411.86 1788.67,1411.86 1789.38,1411.86 1790.09,1411.86 1790.79,1411.86 1791.5,1411.86 1792.21,1411.86 1792.92,1411.86 1793.62,1411.86 1794.33,1411.86 1795.04,1411.86 1795.75,1411.86 1796.46,1411.86 1797.16,1411.86 1797.87,1411.86 1798.58,1411.86 1799.29,1411.86 1799.99,1411.86 1800.7,1411.86 1801.41,1411.86 1802.12,1411.86 1802.83,1411.86 1803.53,1411.86 1804.24,1411.86 1804.95,1411.86 1805.66,1411.86 1806.36,1411.86 1807.07,1411.86 1807.78,1411.86 1808.49,1411.86 1809.2,1411.86 1809.9,1411.86 1810.61,1411.86 1811.32,1411.86 1812.03,1411.86 1812.73,1411.86 1813.44,1411.86 1814.15,1411.86 1814.86,1411.86 1815.57,1411.86 1816.27,1411.86 1816.98,1411.86 1817.69,1411.86 1818.4,1411.86 1819.1,1411.86 1819.81,1411.86 1820.52,1411.86 1821.23,1411.86 1821.94,1411.86 1822.64,1411.86 1823.35,1411.86 1824.06,1411.86 1824.77,1411.86 1825.48,1411.86 1826.18,1411.86 1826.89,1411.86 1827.6,1411.86 1828.31,1411.86 1829.01,1411.86 1829.72,1411.86 1830.43,1411.86 1831.14,1411.86 1831.85,1411.86 1832.55,1411.86 1833.26,1411.86 1833.97,1411.86 1834.68,1411.86 1835.38,1411.86 1836.09,1411.86 1836.8,1411.86 1837.51,1411.86 1838.22,1411.86 1838.92,1411.86 1839.63,1411.86 1840.34,1411.86 1841.05,1411.86 1841.75,1411.86 1842.46,1411.86 1843.17,1411.86 1843.88,1411.86 1844.59,1411.86 1845.29,1411.86 1846,1411.86 1846.71,1411.86 1847.42,1411.86 1848.12,1411.86 1848.83,1411.86 1849.54,1411.86 1850.25,1411.86 1850.96,1411.86 1851.66,1411.86 1852.37,1411.86 1853.08,1411.86 1853.79,1411.86 1854.49,1411.86 1855.2,1411.86 1855.91,1411.86 1856.62,1411.86 1857.33,1411.86 1858.03,1411.86 1858.74,1411.86 1859.45,1411.86 1860.16,1411.86 1860.86,1411.86 1861.57,1411.86 1862.28,1411.86 1862.99,1411.86 1863.7,1411.86 1864.4,1411.86 1865.11,1411.86 1865.82,1411.86 1866.53,1411.86 1867.23,1411.86 1867.94,1411.86 1868.65,1411.86 1869.36,1411.86 1870.07,1411.86 1870.77,1411.86 1871.48,1411.86 1872.19,1411.86 1872.9,1411.86 1873.6,1411.86 1874.31,1411.86 1875.02,1411.86 1875.73,1411.86 1876.44,1411.86 1877.14,1411.86 1877.85,1411.86 1878.56,1411.86 1879.27,1411.86 1879.97,1411.86 1880.68,1411.86 1881.39,1411.86 1882.1,1411.86 1882.81,1411.86 1883.51,1411.86 1884.22,1411.86 1884.93,1411.86 1885.64,1411.86 1886.34,1411.86 1887.05,1411.86 1887.76,1411.86 1888.47,1411.86 1889.18,1411.86 1889.88,1411.86 1890.59,1411.86 1891.3,1411.86 1892.01,1411.86 1892.71,1411.86 1893.42,1411.86 1894.13,1411.86 1894.84,1411.86 1895.55,1411.86 1896.25,1411.86 1896.96,1411.86 1897.67,1411.86 1898.38,1411.86 1899.08,1411.86 1899.79,1411.86 1900.5,1411.86 1901.21,1411.86 1901.92,1411.86 1902.62,1411.86 1903.33,1411.86 1904.04,1411.86 1904.75,1411.86 1905.46,1411.86 1906.16,1411.86 1906.87,1411.86 1907.58,1411.86 1908.29,1411.86 1908.99,1411.86 1909.7,1411.86 1910.41,1411.86 1911.12,1411.86 1911.83,1411.86 1912.53,1411.86 1913.24,1411.86 1913.95,1411.86 1914.66,1411.86 1915.36,1411.86 1916.07,1411.86 1916.78,1411.86 1917.49,1411.86 1918.2,1411.86 1918.9,1411.86 1919.61,1411.86 1920.32,1411.86 1921.03,1411.86 1921.73,1411.86 1922.44,1411.86 1923.15,1411.86 1923.86,1411.86 1924.57,1411.86 1925.27,1411.86 1925.98,1411.86 1926.69,1411.86 1927.4,1411.86 1928.1,1411.86 1928.81,1411.86 1929.52,1411.86 1930.23,1411.86 1930.94,1411.86 1931.64,1411.86 1932.35,1411.86 1933.06,1411.86 1933.77,1411.86 1934.47,1411.86 1935.18,1411.86 1935.89,1411.86 1936.6,1411.86 1937.31,1411.86 1938.01,1411.86 1938.72,1411.86 1939.43,1411.86 1940.14,1411.86 1940.84,1411.86 1941.55,1411.86 1942.26,1411.86 1942.97,1411.86 1943.68,1411.86 1944.38,1411.86 1945.09,1411.86 1945.8,1411.86 1946.51,1411.86 1947.21,1411.86 1947.92,1411.86 1948.63,1411.86 1949.34,1411.86 1950.05,1411.86 1950.75,1411.86 1951.46,1411.86 1952.17,1411.86 1952.88,1411.86 1953.58,1411.86 1954.29,1411.86 1955,1411.86 1955.71,1411.86 1956.42,1411.86 1957.12,1411.86 1957.83,1411.86 1958.54,1411.86 1959.25,1411.86 1959.95,1411.86 1960.66,1411.86 1961.37,1411.86 1962.08,1411.86 1962.79,1411.86 1963.49,1411.86 1964.2,1411.86 1964.91,1411.86 1965.62,1411.86 1966.32,1411.86 1967.03,1411.86 1967.74,1411.86 1968.45,1411.86 1969.16,1411.86 1969.86,1411.86 1970.57,1411.86 1971.28,1411.86 1971.99,1411.86 1972.69,1411.86 1973.4,1411.86 1974.11,1411.86 1974.82,1411.86 1975.53,1411.86 1976.23,1411.86 1976.94,1411.86 1977.65,1411.86 1978.36,1411.86 1979.07,1411.86 1979.77,1411.86 1980.48,1411.86 1981.19,1411.86 1981.9,1411.86 1982.6,1411.86 1983.31,1411.86 1984.02,1411.86 1984.73,1411.86 1985.44,1411.86 1986.14,1411.86 1986.85,1411.86 1987.56,1411.86 1988.27,1411.86 1988.97,1411.86 1989.68,1411.86 1990.39,1411.86 1991.1,1411.86 1991.81,1411.86 1992.51,1411.86 1993.22,1411.86 1993.93,1411.86 1994.64,1411.86 1995.34,1411.86 1996.05,1411.86 1996.76,1411.86 1997.47,1411.86 1998.18,1411.86 1998.88,1411.86 1999.59,1411.86 2000.3,1411.86 2001.01,1411.86 2001.71,1411.86 2002.42,1411.86 2003.13,1411.86 2003.84,1411.86 2004.55,1411.86 2005.25,1411.86 2005.96,1411.86 2006.67,1411.86 2007.38,1411.86 2008.08,1411.86 2008.79,1411.86 2009.5,1411.86 2010.21,1411.86 2010.92,1411.86 2011.62,1411.86 2012.33,1411.86 2013.04,1411.86 2013.75,1411.86 2014.45,1411.86 2015.16,1411.86 2015.87,1411.86 2016.58,1411.86 2017.29,1411.86 2017.99,1411.86 2018.7,1411.86 2019.41,1411.86 2020.12,1411.86 2020.82,1411.86 2021.53,1411.86 2022.24,1411.86 2022.95,1411.86 2023.66,1411.86 2024.36,1411.86 2025.07,1411.86 2025.78,1411.86 2026.49,1411.86 2027.19,1411.86 2027.9,1411.86 2028.61,1411.86 2029.32,1411.86 2030.03,1411.86 2030.73,1411.86 2031.44,1411.86 2032.15,1411.86 2032.86,1411.86 2033.56,1411.86 2034.27,1411.86 2034.98,1411.86 2035.69,1411.86 2036.4,1411.86 2037.1,1411.86 2037.81,1411.86 2038.52,1411.86 2039.23,1411.86 2039.93,1411.86 2040.64,1411.86 2041.35,1411.86 2042.06,1411.86 2042.77,1411.86 2043.47,1411.86 2044.18,1411.86 2044.89,1411.86 2045.6,1411.86 2046.3,1411.86 2047.01,1411.86 2047.72,1411.86 2048.43,1411.86 2049.14,1411.86 2049.84,1411.86 2050.55,1411.86 2051.26,1411.86 2051.97,1411.86 2052.68,1411.86 2053.38,1411.86 2054.09,1411.86 2054.8,1411.86 2055.51,1411.86 2056.21,1411.86 2056.92,1411.86 2057.63,1411.86 2058.34,1411.86 2059.05,1411.86 2059.75,1411.86 2060.46,1411.86 2061.17,1411.86 2061.88,1411.86 2062.58,1411.86 2063.29,1411.86 2064,1411.86 2064.71,1411.86 2065.42,1411.86 2066.12,1411.86 2066.83,1411.86 2067.54,1411.86 2068.25,1411.86 2068.95,1411.86 2069.66,1411.86 2070.37,1411.86 2071.08,1411.86 2071.79,1411.86 2072.49,1411.86 2073.2,1411.86 2073.91,1411.86 2074.62,1411.86 2075.32,1411.86 2076.03,1411.86 2076.74,1411.86 2077.45,1411.86 2078.16,1411.86 2078.86,1411.86 2079.57,1411.86 2080.28,1411.86 2080.99,1411.86 2081.69,1411.86 2082.4,1411.86 2083.11,1411.86 2083.82,1411.86 2084.53,1411.86 2085.23,1411.86 2085.94,1411.86 2086.65,1411.86 2087.36,1411.86 2088.06,1411.86 2088.77,1411.86 2089.48,1411.86 2090.19,1411.86 2090.9,1411.86 2091.6,1411.86 2092.31,1411.86 2093.02,1411.86 2093.73,1411.86 2094.43,1411.86 2095.14,1411.86 2095.85,1411.86 2096.56,1411.86 2097.27,1411.86 2097.97,1411.86 2098.68,1411.86 2099.39,1411.86 2100.1,1411.86 2100.8,1411.86 2101.51,1411.86 2102.22,1411.86 2102.93,1411.86 2103.64,1411.86 2104.34,1411.86 2105.05,1411.86 2105.76,1411.86 2106.47,1411.86 2107.17,1411.86 2107.88,1411.86 2108.59,1411.86 2109.3,1411.86 2110.01,1411.86 2110.71,1411.86 2111.42,1411.86 2112.13,1411.86 2112.84,1411.86 2113.54,1411.86 2114.25,1411.86 2114.96,1411.86 2115.67,1411.86 2116.38,1411.86 2117.08,1411.86 2117.79,1411.86 2118.5,1411.86 2119.21,1411.86 2119.91,1411.86 2120.62,1411.86 2121.33,1411.86 2122.04,1411.86 2122.75,1411.86 2123.45,1411.86 2124.16,1411.86 2124.87,1411.86 2125.58,1411.86 2126.28,1411.86 2126.99,1411.86 2127.7,1411.86 2128.41,1411.86 2129.12,1411.86 2129.82,1411.86 2130.53,1411.86 2131.24,1411.86 2131.95,1411.86 2132.66,1411.86 2133.36,1411.86 2134.07,1411.86 2134.78,1411.86 2135.49,1411.86 2136.19,1411.86 2136.9,1411.86 2137.61,1411.86 2138.32,1411.86 2139.03,1411.86 2139.73,1411.86 2140.44,1411.86 2141.15,1411.86 2141.86,1411.86 2142.56,1411.86 2143.27,1411.86 2143.98,1411.86 2144.69,1411.86 2145.4,1411.86 2146.1,1411.86 2146.81,1411.86 2147.52,1411.86 2148.23,1411.86 2148.93,1411.86 2149.64,1411.86 2150.35,1411.86 2151.06,1411.86 2151.77,1411.86 2152.47,1411.86 2153.18,1411.86 2153.89,1411.86 2154.6,1411.86 2155.3,1411.86 2156.01,1411.86 2156.72,1411.86 2157.43,1411.86 2158.14,1411.86 2158.84,1411.86 2159.55,1411.86 2160.26,1411.86 2160.97,1411.86 2161.67,1411.86 2162.38,1411.86 2163.09,1411.86 2163.8,1411.86 2164.51,1411.86 2165.21,1411.86 2165.92,1411.86 2166.63,1411.86 2167.34,1411.86 2168.04,1411.86 2168.75,1411.86 2169.46,1411.86 2170.17,1411.86 2170.88,1411.86 2171.58,1411.86 2172.29,1411.86 2173,1411.86 2173.71,1411.86 2174.41,1411.86 2175.12,1411.86 2175.83,1411.86 2176.54,1411.86 2177.25,1411.86 2177.95,1411.86 2178.66,1411.86 2179.37,1411.86 2180.08,1411.86 2180.78,1411.86 2181.49,1411.86 2182.2,1411.86 2182.91,1411.86 2183.62,1411.86 2184.32,1411.86 2185.03,1411.86 2185.74,1411.86 2186.45,1411.86 2187.15,1411.86 2187.86,1411.86 2188.57,1411.86 2189.28,1411.86 2189.99,1411.86 2190.69,1411.86 2191.4,1411.86 2192.11,1411.86 2192.82,1411.86 2193.52,1411.86 2194.23,1411.86 2194.94,1411.86 2195.65,1411.86 2196.36,1411.86 2197.06,1411.86 2197.77,1411.86 2198.48,1411.86 2199.19,1411.86 2199.89,1411.86 2200.6,1411.86 2201.31,1411.86 2202.02,1411.86 2202.73,1411.86 2203.43,1411.86 2204.14,1411.86 2204.85,1411.86 2205.56,1411.86 2206.27,1411.86 2206.97,1411.86 2207.68,1411.86 2208.39,1411.86 2209.1,1411.86 2209.8,1411.86 2210.51,1411.86 2211.22,1411.86 2211.93,1411.86 2212.64,1411.86 2213.34,1411.86 2214.05,1411.86 2214.76,1411.86 2215.47,1411.86 2216.17,1411.86 2216.88,1411.86 2217.59,1411.86 2218.3,1411.86 2219.01,1411.86 2219.71,1411.86 2220.42,1411.86 2221.13,1411.86 2221.84,1411.86 2222.54,1411.86 2223.25,1411.86 2223.96,1411.86 2224.67,1411.86 2225.38,1411.86 2226.08,1411.86 2226.79,1411.86 2227.5,1411.86 2228.21,1411.86 2228.91,1411.86 2229.62,1411.86 2230.33,1411.86 2231.04,1411.86 2231.75,1411.86 2232.45,1411.86 2233.16,1411.86 2233.87,1411.86 2234.58,1411.86 2235.28,1411.86 2235.99,1411.86 2236.7,1411.86 2237.41,1411.86 2238.12,1411.86 2238.82,1411.86 2239.53,1411.86 2240.24,1411.86 2240.95,1411.86 2241.65,1411.86 2242.36,1411.86 2243.07,1411.86 2243.78,1411.86 2244.49,1411.86 2245.19,1411.86 2245.9,1411.86 2246.61,1411.86 2247.32,1411.86 2248.02,1411.86 2248.73,1411.86 2249.44,1411.86 2250.15,1411.86 2250.86,1411.86 2251.56,1411.86 2252.27,1411.86 2252.98,1411.86 2253.69,1411.86 2254.39,1411.86 2255.1,1411.86 2255.81,1411.86 2256.52,1411.86 2257.23,1411.86 2257.93,1411.86 2258.64,1411.86 2259.35,1411.86 2260.06,1411.86 2260.76,1411.86 2261.47,1411.86 2262.18,1411.86 2262.89,1411.86 2263.6,1411.86 2264.3,1411.86 2265.01,1411.86 2265.72,1411.86 2266.43,1411.86 2267.13,1411.86 2267.84,1411.86 2268.55,1411.86 2269.26,1411.86 2269.97,1411.86 2270.67,1411.86 2271.38,1411.86 2272.09,1411.86 2272.8,1411.86 2273.5,1411.86 2274.21,1411.86 2274.92,1411.86 2275.63,1411.86 2276.34,1411.86 2277.04,1411.86 2277.75,1411.86 2278.46,1411.86 2279.17,1411.86 2279.87,1411.86 2280.58,1411.86 2281.29,1411.86 2282,1411.86 2282.71,1411.86 2283.41,1411.86 2284.12,1411.86 2284.83,1411.86 2285.54,1411.86 2286.25,1411.86 2286.95,1411.86 2287.66,1411.86 2288.37,1411.86 2289.08,1411.86 \"/>\n<polyline clip-path=\"url(#clip602)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1569.71,1388.32 1373.33,994.954 \"/>\n<polyline clip-path=\"url(#clip602)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"873.5,1434.71 873.5,1388.32 2289.08,1388.32 2289.08,1434.71 873.5,1434.71 \"/>\n<path clip-path=\"url(#clip600)\" d=\"M1654.42 303.205 L2277.76 303.205 L2277.76 95.8446 L1654.42 95.8446  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1654.42,303.205 2277.76,303.205 2277.76,95.8446 1654.42,95.8446 1654.42,303.205 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1679.42,147.685 1829.42,147.685 \"/>\n<path clip-path=\"url(#clip600)\" d=\"M1878.45 150.937 L1878.45 153.02 L1858.87 153.02 Q1859.15 157.418 1861.51 159.733 Q1863.89 162.025 1868.13 162.025 Q1870.58 162.025 1872.87 161.423 Q1875.19 160.821 1877.46 159.617 L1877.46 163.645 Q1875.16 164.617 1872.76 165.127 Q1870.35 165.636 1867.87 165.636 Q1861.67 165.636 1858.04 162.025 Q1854.42 158.414 1854.42 152.256 Q1854.42 145.891 1857.85 142.164 Q1861.3 138.414 1867.13 138.414 Q1872.36 138.414 1875.4 141.793 Q1878.45 145.15 1878.45 150.937 M1874.19 149.687 Q1874.15 146.192 1872.22 144.108 Q1870.33 142.025 1867.18 142.025 Q1863.61 142.025 1861.46 144.039 Q1859.33 146.053 1859.01 149.71 L1874.19 149.687 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1906.99 149.317 L1906.99 164.965 L1902.73 164.965 L1902.73 149.455 Q1902.73 145.775 1901.3 143.946 Q1899.86 142.118 1896.99 142.118 Q1893.54 142.118 1891.55 144.317 Q1889.56 146.516 1889.56 150.312 L1889.56 164.965 L1885.28 164.965 L1885.28 139.039 L1889.56 139.039 L1889.56 143.067 Q1891.09 140.729 1893.15 139.571 Q1895.23 138.414 1897.94 138.414 Q1902.41 138.414 1904.7 141.192 Q1906.99 143.946 1906.99 149.317 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1937.66 150.937 L1937.66 153.02 L1918.08 153.02 Q1918.36 157.418 1920.72 159.733 Q1923.1 162.025 1927.34 162.025 Q1929.79 162.025 1932.09 161.423 Q1934.4 160.821 1936.67 159.617 L1936.67 163.645 Q1934.38 164.617 1931.97 165.127 Q1929.56 165.636 1927.09 165.636 Q1920.88 165.636 1917.25 162.025 Q1913.64 158.414 1913.64 152.256 Q1913.64 145.891 1917.06 142.164 Q1920.51 138.414 1926.34 138.414 Q1931.58 138.414 1934.61 141.793 Q1937.66 145.15 1937.66 150.937 M1933.41 149.687 Q1933.36 146.192 1931.44 144.108 Q1929.54 142.025 1926.39 142.025 Q1922.83 142.025 1920.67 144.039 Q1918.54 146.053 1918.22 149.71 L1933.41 149.687 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1959.68 143.02 Q1958.96 142.604 1958.1 142.418 Q1957.27 142.21 1956.25 142.21 Q1952.64 142.21 1950.7 144.571 Q1948.78 146.909 1948.78 151.307 L1948.78 164.965 L1944.49 164.965 L1944.49 139.039 L1948.78 139.039 L1948.78 143.067 Q1950.12 140.705 1952.27 139.571 Q1954.42 138.414 1957.5 138.414 Q1957.94 138.414 1958.47 138.483 Q1959.01 138.53 1959.65 138.645 L1959.68 143.02 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1980.37 151.701 Q1980.37 147.071 1978.45 144.525 Q1976.55 141.979 1973.1 141.979 Q1969.68 141.979 1967.76 144.525 Q1965.86 147.071 1965.86 151.701 Q1965.86 156.307 1967.76 158.854 Q1969.68 161.4 1973.1 161.4 Q1976.55 161.4 1978.45 158.854 Q1980.37 156.307 1980.37 151.701 M1984.63 161.747 Q1984.63 168.367 1981.69 171.585 Q1978.75 174.826 1972.69 174.826 Q1970.44 174.826 1968.45 174.478 Q1966.46 174.154 1964.59 173.46 L1964.59 169.316 Q1966.46 170.335 1968.29 170.821 Q1970.12 171.307 1972.02 171.307 Q1976.21 171.307 1978.29 169.108 Q1980.37 166.932 1980.37 162.511 L1980.37 160.404 Q1979.05 162.696 1976.99 163.83 Q1974.93 164.965 1972.06 164.965 Q1967.29 164.965 1964.38 161.33 Q1961.46 157.696 1961.46 151.701 Q1961.46 145.682 1964.38 142.048 Q1967.29 138.414 1972.06 138.414 Q1974.93 138.414 1976.99 139.548 Q1979.05 140.682 1980.37 142.974 L1980.37 139.039 L1984.63 139.039 L1984.63 161.747 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M2004.19 167.372 Q2002.39 172.002 2000.67 173.414 Q1998.96 174.826 1996.09 174.826 L1992.69 174.826 L1992.69 171.261 L1995.19 171.261 Q1996.95 171.261 1997.92 170.428 Q1998.89 169.594 2000.07 166.492 L2000.84 164.548 L1990.35 139.039 L1994.86 139.039 L2002.96 159.317 L2011.07 139.039 L2015.58 139.039 L2004.19 167.372 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip600)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1679.42,199.525 1829.42,199.525 \"/>\n<path clip-path=\"url(#clip600)\" d=\"M1872.85 191.643 L1872.85 195.67 Q1871.04 194.745 1869.1 194.282 Q1867.16 193.819 1865.07 193.819 Q1861.9 193.819 1860.3 194.791 Q1858.73 195.763 1858.73 197.707 Q1858.73 199.189 1859.86 200.045 Q1861 200.879 1864.42 201.643 L1865.88 201.967 Q1870.42 202.939 1872.32 204.721 Q1874.24 206.481 1874.24 209.652 Q1874.24 213.263 1871.37 215.369 Q1868.52 217.476 1863.52 217.476 Q1861.44 217.476 1859.17 217.059 Q1856.92 216.666 1854.42 215.856 L1854.42 211.457 Q1856.79 212.684 1859.08 213.309 Q1861.37 213.911 1863.61 213.911 Q1866.62 213.911 1868.24 212.893 Q1869.86 211.851 1869.86 209.976 Q1869.86 208.24 1868.68 207.314 Q1867.53 206.388 1863.57 205.532 L1862.09 205.184 Q1858.13 204.351 1856.37 202.638 Q1854.61 200.902 1854.61 197.893 Q1854.61 194.235 1857.2 192.245 Q1859.79 190.254 1864.56 190.254 Q1866.92 190.254 1869.01 190.601 Q1871.09 190.948 1872.85 191.643 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1902.57 201.157 L1902.57 216.805 L1898.31 216.805 L1898.31 201.295 Q1898.31 197.615 1896.88 195.786 Q1895.44 193.958 1892.57 193.958 Q1889.12 193.958 1887.13 196.157 Q1885.14 198.356 1885.14 202.152 L1885.14 216.805 L1880.86 216.805 L1880.86 180.786 L1885.14 180.786 L1885.14 194.907 Q1886.67 192.569 1888.73 191.411 Q1890.81 190.254 1893.52 190.254 Q1897.99 190.254 1900.28 193.032 Q1902.57 195.786 1902.57 201.157 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1911.07 190.879 L1915.33 190.879 L1915.33 216.805 L1911.07 216.805 L1911.07 190.879 M1911.07 180.786 L1915.33 180.786 L1915.33 186.18 L1911.07 186.18 L1911.07 180.786 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1937.36 180.786 L1937.36 184.328 L1933.29 184.328 Q1931 184.328 1930.09 185.254 Q1929.22 186.18 1929.22 188.587 L1929.22 190.879 L1936.23 190.879 L1936.23 194.189 L1929.22 194.189 L1929.22 216.805 L1924.93 216.805 L1924.93 194.189 L1920.86 194.189 L1920.86 190.879 L1924.93 190.879 L1924.93 189.073 Q1924.93 184.745 1926.95 182.777 Q1928.96 180.786 1933.34 180.786 L1937.36 180.786 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1944.31 183.518 L1944.31 190.879 L1953.08 190.879 L1953.08 194.189 L1944.31 194.189 L1944.31 208.263 Q1944.31 211.434 1945.16 212.337 Q1946.04 213.24 1948.71 213.24 L1953.08 213.24 L1953.08 216.805 L1948.71 216.805 Q1943.78 216.805 1941.9 214.976 Q1940.03 213.124 1940.03 208.263 L1940.03 194.189 L1936.9 194.189 L1936.9 190.879 L1940.03 190.879 L1940.03 183.518 L1944.31 183.518 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1993.94 195.856 Q1995.53 192.985 1997.76 191.62 Q1999.98 190.254 2002.99 190.254 Q2007.04 190.254 2009.24 193.101 Q2011.44 195.925 2011.44 201.157 L2011.44 216.805 L2007.15 216.805 L2007.15 201.295 Q2007.15 197.569 2005.84 195.763 Q2004.52 193.958 2001.81 193.958 Q1998.5 193.958 1996.58 196.157 Q1994.65 198.356 1994.65 202.152 L1994.65 216.805 L1990.37 216.805 L1990.37 201.295 Q1990.37 197.545 1989.05 195.763 Q1987.73 193.958 1984.98 193.958 Q1981.71 193.958 1979.79 196.18 Q1977.87 198.379 1977.87 202.152 L1977.87 216.805 L1973.59 216.805 L1973.59 190.879 L1977.87 190.879 L1977.87 194.907 Q1979.33 192.522 1981.37 191.388 Q1983.4 190.254 1986.21 190.254 Q1989.03 190.254 1991 191.689 Q1992.99 193.124 1993.94 195.856 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M2042.11 202.777 L2042.11 204.86 L2022.52 204.86 Q2022.8 209.258 2025.16 211.573 Q2027.55 213.865 2031.78 213.865 Q2034.24 213.865 2036.53 213.263 Q2038.84 212.661 2041.11 211.457 L2041.11 215.485 Q2038.82 216.457 2036.41 216.967 Q2034.01 217.476 2031.53 217.476 Q2025.33 217.476 2021.69 213.865 Q2018.08 210.254 2018.08 204.096 Q2018.08 197.731 2021.51 194.004 Q2024.96 190.254 2030.79 190.254 Q2036.02 190.254 2039.05 193.633 Q2042.11 196.99 2042.11 202.777 M2037.85 201.527 Q2037.8 198.032 2035.88 195.948 Q2033.98 193.865 2030.84 193.865 Q2027.27 193.865 2025.12 195.879 Q2022.99 197.893 2022.66 201.55 L2037.85 201.527 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M2060.88 203.772 Q2055.72 203.772 2053.73 204.953 Q2051.74 206.133 2051.74 208.981 Q2051.74 211.249 2053.22 212.592 Q2054.72 213.911 2057.29 213.911 Q2060.83 213.911 2062.96 211.411 Q2065.12 208.888 2065.12 204.721 L2065.12 203.772 L2060.88 203.772 M2069.38 202.013 L2069.38 216.805 L2065.12 216.805 L2065.12 212.869 Q2063.66 215.231 2061.48 216.365 Q2059.31 217.476 2056.16 217.476 Q2052.18 217.476 2049.82 215.254 Q2047.48 213.008 2047.48 209.258 Q2047.48 204.883 2050.4 202.661 Q2053.33 200.439 2059.15 200.439 L2065.12 200.439 L2065.12 200.022 Q2065.12 197.083 2063.17 195.485 Q2061.25 193.865 2057.76 193.865 Q2055.53 193.865 2053.43 194.397 Q2051.32 194.93 2049.38 195.995 L2049.38 192.059 Q2051.71 191.157 2053.91 190.717 Q2056.11 190.254 2058.2 190.254 Q2063.82 190.254 2066.6 193.17 Q2069.38 196.087 2069.38 202.013 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M2099.7 201.157 L2099.7 216.805 L2095.44 216.805 L2095.44 201.295 Q2095.44 197.615 2094.01 195.786 Q2092.57 193.958 2089.7 193.958 Q2086.25 193.958 2084.26 196.157 Q2082.27 198.356 2082.27 202.152 L2082.27 216.805 L2077.99 216.805 L2077.99 190.879 L2082.27 190.879 L2082.27 194.907 Q2083.8 192.569 2085.86 191.411 Q2087.94 190.254 2090.65 190.254 Q2095.12 190.254 2097.41 193.032 Q2099.7 195.786 2099.7 201.157 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip600)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1679.42,251.365 1829.42,251.365 \"/>\n<path clip-path=\"url(#clip600)\" d=\"M1858.71 264.756 L1858.71 278.506 L1854.42 278.506 L1854.42 242.719 L1858.71 242.719 L1858.71 246.654 Q1860.05 244.339 1862.09 243.228 Q1864.15 242.094 1866.99 242.094 Q1871.72 242.094 1874.66 245.844 Q1877.62 249.594 1877.62 255.705 Q1877.62 261.816 1874.66 265.566 Q1871.72 269.316 1866.99 269.316 Q1864.15 269.316 1862.09 268.205 Q1860.05 267.071 1858.71 264.756 M1873.2 255.705 Q1873.2 251.006 1871.25 248.344 Q1869.33 245.659 1865.95 245.659 Q1862.57 245.659 1860.63 248.344 Q1858.71 251.006 1858.71 255.705 Q1858.71 260.404 1860.63 263.089 Q1862.57 265.751 1865.95 265.751 Q1869.33 265.751 1871.25 263.089 Q1873.2 260.404 1873.2 255.705 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1899.7 246.7 Q1898.98 246.284 1898.13 246.098 Q1897.29 245.89 1896.28 245.89 Q1892.66 245.89 1890.72 248.251 Q1888.8 250.589 1888.8 254.987 L1888.8 268.645 L1884.52 268.645 L1884.52 242.719 L1888.8 242.719 L1888.8 246.747 Q1890.14 244.385 1892.29 243.251 Q1894.45 242.094 1897.53 242.094 Q1897.97 242.094 1898.5 242.163 Q1899.03 242.21 1899.68 242.325 L1899.7 246.7 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1913.17 245.705 Q1909.75 245.705 1907.76 248.39 Q1905.77 251.052 1905.77 255.705 Q1905.77 260.358 1907.73 263.043 Q1909.72 265.705 1913.17 265.705 Q1916.58 265.705 1918.57 263.02 Q1920.56 260.334 1920.56 255.705 Q1920.56 251.098 1918.57 248.413 Q1916.58 245.705 1913.17 245.705 M1913.17 242.094 Q1918.73 242.094 1921.9 245.705 Q1925.07 249.316 1925.07 255.705 Q1925.07 262.071 1921.9 265.705 Q1918.73 269.316 1913.17 269.316 Q1907.6 269.316 1904.42 265.705 Q1901.28 262.071 1901.28 255.705 Q1901.28 249.316 1904.42 245.705 Q1907.6 242.094 1913.17 242.094 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1932.13 242.719 L1936.39 242.719 L1936.39 269.108 Q1936.39 274.061 1934.49 276.283 Q1932.62 278.506 1928.43 278.506 L1926.81 278.506 L1926.81 274.895 L1927.94 274.895 Q1930.37 274.895 1931.25 273.76 Q1932.13 272.649 1932.13 269.108 L1932.13 242.719 M1932.13 232.626 L1936.39 232.626 L1936.39 238.02 L1932.13 238.02 L1932.13 232.626 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1967.48 254.617 L1967.48 256.7 L1947.9 256.7 Q1948.17 261.098 1950.53 263.413 Q1952.92 265.705 1957.15 265.705 Q1959.61 265.705 1961.9 265.103 Q1964.22 264.501 1966.48 263.297 L1966.48 267.325 Q1964.19 268.297 1961.78 268.807 Q1959.38 269.316 1956.9 269.316 Q1950.7 269.316 1947.06 265.705 Q1943.45 262.094 1943.45 255.936 Q1943.45 249.571 1946.88 245.844 Q1950.33 242.094 1956.16 242.094 Q1961.39 242.094 1964.42 245.473 Q1967.48 248.83 1967.48 254.617 M1963.22 253.367 Q1963.17 249.872 1961.25 247.788 Q1959.35 245.705 1956.21 245.705 Q1952.64 245.705 1950.49 247.719 Q1948.36 249.733 1948.03 253.39 L1963.22 253.367 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1993.13 243.714 L1993.13 247.696 Q1991.32 246.7 1989.49 246.214 Q1987.69 245.705 1985.84 245.705 Q1981.69 245.705 1979.4 248.344 Q1977.11 250.96 1977.11 255.705 Q1977.11 260.45 1979.4 263.089 Q1981.69 265.705 1985.84 265.705 Q1987.69 265.705 1989.49 265.219 Q1991.32 264.709 1993.13 263.714 L1993.13 267.649 Q1991.34 268.483 1989.42 268.899 Q1987.53 269.316 1985.37 269.316 Q1979.52 269.316 1976.07 265.635 Q1972.62 261.955 1972.62 255.705 Q1972.62 249.362 1976.09 245.728 Q1979.59 242.094 1985.65 242.094 Q1987.62 242.094 1989.49 242.511 Q1991.37 242.904 1993.13 243.714 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M2004.75 235.358 L2004.75 242.719 L2013.52 242.719 L2013.52 246.029 L2004.75 246.029 L2004.75 260.103 Q2004.75 263.274 2005.6 264.177 Q2006.48 265.08 2009.15 265.08 L2013.52 265.08 L2013.52 268.645 L2009.15 268.645 Q2004.21 268.645 2002.34 266.816 Q2000.46 264.964 2000.46 260.103 L2000.46 246.029 L1997.34 246.029 L1997.34 242.719 L2000.46 242.719 L2000.46 235.358 L2004.75 235.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M2041.3 254.617 L2041.3 256.7 L2021.71 256.7 Q2021.99 261.098 2024.35 263.413 Q2026.74 265.705 2030.97 265.705 Q2033.43 265.705 2035.72 265.103 Q2038.03 264.501 2040.3 263.297 L2040.3 267.325 Q2038.01 268.297 2035.6 268.807 Q2033.2 269.316 2030.72 269.316 Q2024.52 269.316 2020.88 265.705 Q2017.27 262.094 2017.27 255.936 Q2017.27 249.571 2020.7 245.844 Q2024.15 242.094 2029.98 242.094 Q2035.21 242.094 2038.24 245.473 Q2041.3 248.83 2041.3 254.617 M2037.04 253.367 Q2036.99 249.872 2035.07 247.788 Q2033.17 245.705 2030.02 245.705 Q2026.46 245.705 2024.31 247.719 Q2022.18 249.733 2021.85 253.39 L2037.04 253.367 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M2065.35 246.654 L2065.35 232.626 L2069.61 232.626 L2069.61 268.645 L2065.35 268.645 L2065.35 264.756 Q2064.01 267.071 2061.95 268.205 Q2059.91 269.316 2057.04 269.316 Q2052.34 269.316 2049.38 265.566 Q2046.44 261.816 2046.44 255.705 Q2046.44 249.594 2049.38 245.844 Q2052.34 242.094 2057.04 242.094 Q2059.91 242.094 2061.95 243.228 Q2064.01 244.339 2065.35 246.654 M2050.83 255.705 Q2050.83 260.404 2052.76 263.089 Q2054.7 265.751 2058.08 265.751 Q2061.46 265.751 2063.4 263.089 Q2065.35 260.404 2065.35 255.705 Q2065.35 251.006 2063.4 248.344 Q2061.46 245.659 2058.08 245.659 Q2054.7 245.659 2052.76 248.344 Q2050.83 251.006 2050.83 255.705 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M2115.63 254.617 L2115.63 256.7 L2096.04 256.7 Q2096.32 261.098 2098.68 263.413 Q2101.07 265.705 2105.3 265.705 Q2107.76 265.705 2110.05 265.103 Q2112.36 264.501 2114.63 263.297 L2114.63 267.325 Q2112.34 268.297 2109.93 268.807 Q2107.52 269.316 2105.05 269.316 Q2098.84 269.316 2095.21 265.705 Q2091.6 262.094 2091.6 255.936 Q2091.6 249.571 2095.02 245.844 Q2098.47 242.094 2104.31 242.094 Q2109.54 242.094 2112.57 245.473 Q2115.63 248.83 2115.63 254.617 M2111.37 253.367 Q2111.32 249.872 2109.4 247.788 Q2107.5 245.705 2104.35 245.705 Q2100.79 245.705 2098.64 247.719 Q2096.51 249.733 2096.18 253.39 L2111.37 253.367 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M2144.17 252.997 L2144.17 268.645 L2139.91 268.645 L2139.91 253.135 Q2139.91 249.455 2138.47 247.626 Q2137.04 245.798 2134.17 245.798 Q2130.72 245.798 2128.73 247.997 Q2126.74 250.196 2126.74 253.992 L2126.74 268.645 L2122.45 268.645 L2122.45 242.719 L2126.74 242.719 L2126.74 246.747 Q2128.27 244.409 2130.33 243.251 Q2132.41 242.094 2135.12 242.094 Q2139.58 242.094 2141.88 244.872 Q2144.17 247.626 2144.17 252.997 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M2174.84 254.617 L2174.84 256.7 L2155.26 256.7 Q2155.53 261.098 2157.89 263.413 Q2160.28 265.705 2164.51 265.705 Q2166.97 265.705 2169.26 265.103 Q2171.58 264.501 2173.84 263.297 L2173.84 267.325 Q2171.55 268.297 2169.14 268.807 Q2166.74 269.316 2164.26 269.316 Q2158.06 269.316 2154.42 265.705 Q2150.81 262.094 2150.81 255.936 Q2150.81 249.571 2154.24 245.844 Q2157.69 242.094 2163.52 242.094 Q2168.75 242.094 2171.78 245.473 Q2174.84 248.83 2174.84 254.617 M2170.58 253.367 Q2170.53 249.872 2168.61 247.788 Q2166.71 245.705 2163.57 245.705 Q2160 245.705 2157.85 247.719 Q2155.72 249.733 2155.39 253.39 L2170.58 253.367 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M2196.85 246.7 Q2196.14 246.284 2195.28 246.098 Q2194.45 245.89 2193.43 245.89 Q2189.82 245.89 2187.87 248.251 Q2185.95 250.589 2185.95 254.987 L2185.95 268.645 L2181.67 268.645 L2181.67 242.719 L2185.95 242.719 L2185.95 246.747 Q2187.29 244.385 2189.45 243.251 Q2191.6 242.094 2194.68 242.094 Q2195.12 242.094 2195.65 242.163 Q2196.18 242.21 2196.83 242.325 L2196.85 246.7 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M2217.55 255.381 Q2217.55 250.751 2215.63 248.205 Q2213.73 245.659 2210.28 245.659 Q2206.85 245.659 2204.93 248.205 Q2203.03 250.751 2203.03 255.381 Q2203.03 259.987 2204.93 262.534 Q2206.85 265.08 2210.28 265.08 Q2213.73 265.08 2215.63 262.534 Q2217.55 259.987 2217.55 255.381 M2221.81 265.427 Q2221.81 272.047 2218.87 275.265 Q2215.93 278.506 2209.86 278.506 Q2207.62 278.506 2205.63 278.158 Q2203.64 277.834 2201.76 277.14 L2201.76 272.996 Q2203.64 274.015 2205.46 274.501 Q2207.29 274.987 2209.19 274.987 Q2213.38 274.987 2215.46 272.788 Q2217.55 270.612 2217.55 266.191 L2217.55 264.084 Q2216.23 266.376 2214.17 267.51 Q2212.11 268.645 2209.24 268.645 Q2204.47 268.645 2201.55 265.01 Q2198.64 261.376 2198.64 255.381 Q2198.64 249.362 2201.55 245.728 Q2204.47 242.094 2209.24 242.094 Q2212.11 242.094 2214.17 243.228 Q2216.23 244.362 2217.55 246.654 L2217.55 242.719 L2221.81 242.719 L2221.81 265.427 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M2241.37 271.052 Q2239.56 275.682 2237.85 277.094 Q2236.13 278.506 2233.26 278.506 L2229.86 278.506 L2229.86 274.941 L2232.36 274.941 Q2234.12 274.941 2235.09 274.108 Q2236.07 273.274 2237.25 270.172 L2238.01 268.228 L2227.52 242.719 L2232.04 242.719 L2240.14 262.997 L2248.24 242.719 L2252.76 242.719 L2241.37 271.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M552.743 994.954 L1902.75 994.954 L1902.75 411.748 L552.743 411.748  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip603\">\n    <rect x=\"552\" y=\"411\" width=\"1351\" height=\"584\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip603)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"552.743,994.954 552.743,411.748 \"/>\n<polyline clip-path=\"url(#clip603)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"890.246,994.954 890.246,411.748 \"/>\n<polyline clip-path=\"url(#clip603)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1227.75,994.954 1227.75,411.748 \"/>\n<polyline clip-path=\"url(#clip603)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1565.25,994.954 1565.25,411.748 \"/>\n<polyline clip-path=\"url(#clip603)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1902.75,994.954 1902.75,411.748 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"552.743,994.954 1902.75,994.954 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"552.743,994.954 552.743,976.057 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"890.246,994.954 890.246,976.057 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1227.75,994.954 1227.75,976.057 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1565.25,994.954 1565.25,976.057 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1902.75,994.954 1902.75,976.057 \"/>\n<path clip-path=\"url(#clip600)\" d=\"M497.269 1053.42 L504.908 1053.42 L504.908 1027.05 L496.598 1028.72 L496.598 1024.46 L504.862 1022.79 L509.538 1022.79 L509.538 1053.42 L517.176 1053.42 L517.176 1057.35 L497.269 1057.35 L497.269 1053.42 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M536.621 1025.87 Q533.01 1025.87 531.181 1029.44 Q529.375 1032.98 529.375 1040.11 Q529.375 1047.22 531.181 1050.78 Q533.01 1054.32 536.621 1054.32 Q540.255 1054.32 542.06 1050.78 Q543.889 1047.22 543.889 1040.11 Q543.889 1032.98 542.06 1029.44 Q540.255 1025.87 536.621 1025.87 M536.621 1022.17 Q542.431 1022.17 545.486 1026.78 Q548.565 1031.36 548.565 1040.11 Q548.565 1048.84 545.486 1053.44 Q542.431 1058.03 536.621 1058.03 Q530.811 1058.03 527.732 1053.44 Q524.676 1048.84 524.676 1040.11 Q524.676 1031.36 527.732 1026.78 Q530.811 1022.17 536.621 1022.17 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M566.783 1025.87 Q563.171 1025.87 561.343 1029.44 Q559.537 1032.98 559.537 1040.11 Q559.537 1047.22 561.343 1050.78 Q563.171 1054.32 566.783 1054.32 Q570.417 1054.32 572.222 1050.78 Q574.051 1047.22 574.051 1040.11 Q574.051 1032.98 572.222 1029.44 Q570.417 1025.87 566.783 1025.87 M566.783 1022.17 Q572.593 1022.17 575.648 1026.78 Q578.727 1031.36 578.727 1040.11 Q578.727 1048.84 575.648 1053.44 Q572.593 1058.03 566.783 1058.03 Q560.972 1058.03 557.894 1053.44 Q554.838 1048.84 554.838 1040.11 Q554.838 1031.36 557.894 1026.78 Q560.972 1022.17 566.783 1022.17 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M596.944 1025.87 Q593.333 1025.87 591.505 1029.44 Q589.699 1032.98 589.699 1040.11 Q589.699 1047.22 591.505 1050.78 Q593.333 1054.32 596.944 1054.32 Q600.579 1054.32 602.384 1050.78 Q604.213 1047.22 604.213 1040.11 Q604.213 1032.98 602.384 1029.44 Q600.579 1025.87 596.944 1025.87 M596.944 1022.17 Q602.755 1022.17 605.81 1026.78 Q608.889 1031.36 608.889 1040.11 Q608.889 1048.84 605.81 1053.44 Q602.755 1058.03 596.944 1058.03 Q591.134 1058.03 588.056 1053.44 Q585 1048.84 585 1040.11 Q585 1031.36 588.056 1026.78 Q591.134 1022.17 596.944 1022.17 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M834.771 1053.42 L842.41 1053.42 L842.41 1027.05 L834.1 1028.72 L834.1 1024.46 L842.364 1022.79 L847.04 1022.79 L847.04 1053.42 L854.679 1053.42 L854.679 1057.35 L834.771 1057.35 L834.771 1053.42 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M864.169 1022.79 L882.526 1022.79 L882.526 1026.73 L868.452 1026.73 L868.452 1035.2 Q869.47 1034.85 870.489 1034.69 Q871.507 1034.51 872.526 1034.51 Q878.313 1034.51 881.692 1037.68 Q885.072 1040.85 885.072 1046.27 Q885.072 1051.85 881.6 1054.95 Q878.128 1058.03 871.808 1058.03 Q869.632 1058.03 867.364 1057.66 Q865.118 1057.28 862.711 1056.54 L862.711 1051.85 Q864.794 1052.98 867.017 1053.53 Q869.239 1054.09 871.716 1054.09 Q875.72 1054.09 878.058 1051.98 Q880.396 1049.88 880.396 1046.27 Q880.396 1042.66 878.058 1040.55 Q875.72 1038.44 871.716 1038.44 Q869.841 1038.44 867.966 1038.86 Q866.114 1039.28 864.169 1040.16 L864.169 1022.79 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M904.285 1025.87 Q900.674 1025.87 898.845 1029.44 Q897.04 1032.98 897.04 1040.11 Q897.04 1047.22 898.845 1050.78 Q900.674 1054.32 904.285 1054.32 Q907.919 1054.32 909.725 1050.78 Q911.553 1047.22 911.553 1040.11 Q911.553 1032.98 909.725 1029.44 Q907.919 1025.87 904.285 1025.87 M904.285 1022.17 Q910.095 1022.17 913.151 1026.78 Q916.229 1031.36 916.229 1040.11 Q916.229 1048.84 913.151 1053.44 Q910.095 1058.03 904.285 1058.03 Q898.475 1058.03 895.396 1053.44 Q892.341 1048.84 892.341 1040.11 Q892.341 1031.36 895.396 1026.78 Q898.475 1022.17 904.285 1022.17 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M934.447 1025.87 Q930.836 1025.87 929.007 1029.44 Q927.201 1032.98 927.201 1040.11 Q927.201 1047.22 929.007 1050.78 Q930.836 1054.32 934.447 1054.32 Q938.081 1054.32 939.887 1050.78 Q941.715 1047.22 941.715 1040.11 Q941.715 1032.98 939.887 1029.44 Q938.081 1025.87 934.447 1025.87 M934.447 1022.17 Q940.257 1022.17 943.313 1026.78 Q946.391 1031.36 946.391 1040.11 Q946.391 1048.84 943.313 1053.44 Q940.257 1058.03 934.447 1058.03 Q928.637 1058.03 925.558 1053.44 Q922.502 1048.84 922.502 1040.11 Q922.502 1031.36 925.558 1026.78 Q928.637 1022.17 934.447 1022.17 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1176.36 1053.42 L1192.68 1053.42 L1192.68 1057.35 L1170.73 1057.35 L1170.73 1053.42 Q1173.4 1050.66 1177.98 1046.03 Q1182.59 1041.38 1183.77 1040.04 Q1186.01 1037.52 1186.89 1035.78 Q1187.79 1034.02 1187.79 1032.33 Q1187.79 1029.58 1185.85 1027.84 Q1183.93 1026.1 1180.83 1026.1 Q1178.63 1026.1 1176.17 1026.87 Q1173.74 1027.63 1170.97 1029.18 L1170.97 1024.46 Q1173.79 1023.33 1176.24 1022.75 Q1178.7 1022.17 1180.73 1022.17 Q1186.1 1022.17 1189.3 1024.85 Q1192.49 1027.54 1192.49 1032.03 Q1192.49 1034.16 1191.68 1036.08 Q1190.9 1037.98 1188.79 1040.57 Q1188.21 1041.24 1185.11 1044.46 Q1182.01 1047.66 1176.36 1053.42 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1212.49 1025.87 Q1208.88 1025.87 1207.05 1029.44 Q1205.25 1032.98 1205.25 1040.11 Q1205.25 1047.22 1207.05 1050.78 Q1208.88 1054.32 1212.49 1054.32 Q1216.13 1054.32 1217.93 1050.78 Q1219.76 1047.22 1219.76 1040.11 Q1219.76 1032.98 1217.93 1029.44 Q1216.13 1025.87 1212.49 1025.87 M1212.49 1022.17 Q1218.3 1022.17 1221.36 1026.78 Q1224.44 1031.36 1224.44 1040.11 Q1224.44 1048.84 1221.36 1053.44 Q1218.3 1058.03 1212.49 1058.03 Q1206.68 1058.03 1203.6 1053.44 Q1200.55 1048.84 1200.55 1040.11 Q1200.55 1031.36 1203.6 1026.78 Q1206.68 1022.17 1212.49 1022.17 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1242.66 1025.87 Q1239.04 1025.87 1237.22 1029.44 Q1235.41 1032.98 1235.41 1040.11 Q1235.41 1047.22 1237.22 1050.78 Q1239.04 1054.32 1242.66 1054.32 Q1246.29 1054.32 1248.1 1050.78 Q1249.92 1047.22 1249.92 1040.11 Q1249.92 1032.98 1248.1 1029.44 Q1246.29 1025.87 1242.66 1025.87 M1242.66 1022.17 Q1248.47 1022.17 1251.52 1026.78 Q1254.6 1031.36 1254.6 1040.11 Q1254.6 1048.84 1251.52 1053.44 Q1248.47 1058.03 1242.66 1058.03 Q1236.85 1058.03 1233.77 1053.44 Q1230.71 1048.84 1230.71 1040.11 Q1230.71 1031.36 1233.77 1026.78 Q1236.85 1022.17 1242.66 1022.17 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1272.82 1025.87 Q1269.21 1025.87 1267.38 1029.44 Q1265.57 1032.98 1265.57 1040.11 Q1265.57 1047.22 1267.38 1050.78 Q1269.21 1054.32 1272.82 1054.32 Q1276.45 1054.32 1278.26 1050.78 Q1280.09 1047.22 1280.09 1040.11 Q1280.09 1032.98 1278.26 1029.44 Q1276.45 1025.87 1272.82 1025.87 M1272.82 1022.17 Q1278.63 1022.17 1281.68 1026.78 Q1284.76 1031.36 1284.76 1040.11 Q1284.76 1048.84 1281.68 1053.44 Q1278.63 1058.03 1272.82 1058.03 Q1267.01 1058.03 1263.93 1053.44 Q1260.87 1048.84 1260.87 1040.11 Q1260.87 1031.36 1263.93 1026.78 Q1267.01 1022.17 1272.82 1022.17 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1513.86 1053.42 L1530.18 1053.42 L1530.18 1057.35 L1508.24 1057.35 L1508.24 1053.42 Q1510.9 1050.66 1515.48 1046.03 Q1520.09 1041.38 1521.27 1040.04 Q1523.51 1037.52 1524.39 1035.78 Q1525.3 1034.02 1525.3 1032.33 Q1525.3 1029.58 1523.35 1027.84 Q1521.43 1026.1 1518.33 1026.1 Q1516.13 1026.1 1513.68 1026.87 Q1511.25 1027.63 1508.47 1029.18 L1508.47 1024.46 Q1511.29 1023.33 1513.75 1022.75 Q1516.2 1022.17 1518.24 1022.17 Q1523.61 1022.17 1526.8 1024.85 Q1530 1027.54 1530 1032.03 Q1530 1034.16 1529.19 1036.08 Q1528.4 1037.98 1526.29 1040.57 Q1525.71 1041.24 1522.61 1044.46 Q1519.51 1047.66 1513.86 1053.42 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1540.04 1022.79 L1558.4 1022.79 L1558.4 1026.73 L1544.32 1026.73 L1544.32 1035.2 Q1545.34 1034.85 1546.36 1034.69 Q1547.38 1034.51 1548.4 1034.51 Q1554.19 1034.51 1557.57 1037.68 Q1560.94 1040.85 1560.94 1046.27 Q1560.94 1051.85 1557.47 1054.95 Q1554 1058.03 1547.68 1058.03 Q1545.51 1058.03 1543.24 1057.66 Q1540.99 1057.28 1538.58 1056.54 L1538.58 1051.85 Q1540.67 1052.98 1542.89 1053.53 Q1545.11 1054.09 1547.59 1054.09 Q1551.59 1054.09 1553.93 1051.98 Q1556.27 1049.88 1556.27 1046.27 Q1556.27 1042.66 1553.93 1040.55 Q1551.59 1038.44 1547.59 1038.44 Q1545.71 1038.44 1543.84 1038.86 Q1541.99 1039.28 1540.04 1040.16 L1540.04 1022.79 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1580.16 1025.87 Q1576.55 1025.87 1574.72 1029.44 Q1572.91 1032.98 1572.91 1040.11 Q1572.91 1047.22 1574.72 1050.78 Q1576.55 1054.32 1580.16 1054.32 Q1583.79 1054.32 1585.6 1050.78 Q1587.43 1047.22 1587.43 1040.11 Q1587.43 1032.98 1585.6 1029.44 Q1583.79 1025.87 1580.16 1025.87 M1580.16 1022.17 Q1585.97 1022.17 1589.02 1026.78 Q1592.1 1031.36 1592.1 1040.11 Q1592.1 1048.84 1589.02 1053.44 Q1585.97 1058.03 1580.16 1058.03 Q1574.35 1058.03 1571.27 1053.44 Q1568.21 1048.84 1568.21 1040.11 Q1568.21 1031.36 1571.27 1026.78 Q1574.35 1022.17 1580.16 1022.17 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1610.32 1025.87 Q1606.71 1025.87 1604.88 1029.44 Q1603.07 1032.98 1603.07 1040.11 Q1603.07 1047.22 1604.88 1050.78 Q1606.71 1054.32 1610.32 1054.32 Q1613.95 1054.32 1615.76 1050.78 Q1617.59 1047.22 1617.59 1040.11 Q1617.59 1032.98 1615.76 1029.44 Q1613.95 1025.87 1610.32 1025.87 M1610.32 1022.17 Q1616.13 1022.17 1619.19 1026.78 Q1622.26 1031.36 1622.26 1040.11 Q1622.26 1048.84 1619.19 1053.44 Q1616.13 1058.03 1610.32 1058.03 Q1604.51 1058.03 1601.43 1053.44 Q1598.38 1048.84 1598.38 1040.11 Q1598.38 1031.36 1601.43 1026.78 Q1604.51 1022.17 1610.32 1022.17 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1861.43 1038.72 Q1864.79 1039.44 1866.66 1041.71 Q1868.56 1043.97 1868.56 1047.31 Q1868.56 1052.42 1865.04 1055.22 Q1861.53 1058.03 1855.04 1058.03 Q1852.87 1058.03 1850.55 1057.59 Q1848.26 1057.17 1845.81 1056.31 L1845.81 1051.8 Q1847.75 1052.93 1850.07 1053.51 Q1852.38 1054.09 1854.91 1054.09 Q1859.3 1054.09 1861.6 1052.35 Q1863.91 1050.62 1863.91 1047.31 Q1863.91 1044.25 1861.76 1042.54 Q1859.63 1040.8 1855.81 1040.8 L1851.78 1040.8 L1851.78 1036.96 L1855.99 1036.96 Q1859.44 1036.96 1861.27 1035.6 Q1863.1 1034.21 1863.1 1031.61 Q1863.1 1028.95 1861.2 1027.54 Q1859.33 1026.1 1855.81 1026.1 Q1853.89 1026.1 1851.69 1026.52 Q1849.49 1026.94 1846.85 1027.82 L1846.85 1023.65 Q1849.51 1022.91 1851.83 1022.54 Q1854.17 1022.17 1856.23 1022.17 Q1861.55 1022.17 1864.65 1024.6 Q1867.75 1027.01 1867.75 1031.13 Q1867.75 1034 1866.11 1035.99 Q1864.47 1037.96 1861.43 1038.72 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1887.43 1025.87 Q1883.82 1025.87 1881.99 1029.44 Q1880.18 1032.98 1880.18 1040.11 Q1880.18 1047.22 1881.99 1050.78 Q1883.82 1054.32 1887.43 1054.32 Q1891.06 1054.32 1892.87 1050.78 Q1894.7 1047.22 1894.7 1040.11 Q1894.7 1032.98 1892.87 1029.44 Q1891.06 1025.87 1887.43 1025.87 M1887.43 1022.17 Q1893.24 1022.17 1896.29 1026.78 Q1899.37 1031.36 1899.37 1040.11 Q1899.37 1048.84 1896.29 1053.44 Q1893.24 1058.03 1887.43 1058.03 Q1881.62 1058.03 1878.54 1053.44 Q1875.48 1048.84 1875.48 1040.11 Q1875.48 1031.36 1878.54 1026.78 Q1881.62 1022.17 1887.43 1022.17 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1917.59 1025.87 Q1913.98 1025.87 1912.15 1029.44 Q1910.35 1032.98 1910.35 1040.11 Q1910.35 1047.22 1912.15 1050.78 Q1913.98 1054.32 1917.59 1054.32 Q1921.22 1054.32 1923.03 1050.78 Q1924.86 1047.22 1924.86 1040.11 Q1924.86 1032.98 1923.03 1029.44 Q1921.22 1025.87 1917.59 1025.87 M1917.59 1022.17 Q1923.4 1022.17 1926.46 1026.78 Q1929.54 1031.36 1929.54 1040.11 Q1929.54 1048.84 1926.46 1053.44 Q1923.4 1058.03 1917.59 1058.03 Q1911.78 1058.03 1908.7 1053.44 Q1905.65 1048.84 1905.65 1040.11 Q1905.65 1031.36 1908.7 1026.78 Q1911.78 1022.17 1917.59 1022.17 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1947.75 1025.87 Q1944.14 1025.87 1942.31 1029.44 Q1940.51 1032.98 1940.51 1040.11 Q1940.51 1047.22 1942.31 1050.78 Q1944.14 1054.32 1947.75 1054.32 Q1951.39 1054.32 1953.19 1050.78 Q1955.02 1047.22 1955.02 1040.11 Q1955.02 1032.98 1953.19 1029.44 Q1951.39 1025.87 1947.75 1025.87 M1947.75 1022.17 Q1953.56 1022.17 1956.62 1026.78 Q1959.7 1031.36 1959.7 1040.11 Q1959.7 1048.84 1956.62 1053.44 Q1953.56 1058.03 1947.75 1058.03 Q1941.94 1058.03 1938.86 1053.44 Q1935.81 1048.84 1935.81 1040.11 Q1935.81 1031.36 1938.86 1026.78 Q1941.94 1022.17 1947.75 1022.17 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip603)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"552.743,968.445 1902.75,968.445 \"/>\n<polyline clip-path=\"url(#clip603)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"552.743,835.898 1902.75,835.898 \"/>\n<polyline clip-path=\"url(#clip603)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"552.743,703.351 1902.75,703.351 \"/>\n<polyline clip-path=\"url(#clip603)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"552.743,570.804 1902.75,570.804 \"/>\n<polyline clip-path=\"url(#clip603)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"552.743,438.257 1902.75,438.257 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"552.743,994.954 552.743,411.748 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"552.743,968.445 571.641,968.445 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"552.743,835.898 571.641,835.898 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"552.743,703.351 571.641,703.351 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"552.743,570.804 571.641,570.804 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"552.743,438.257 571.641,438.257 \"/>\n<path clip-path=\"url(#clip600)\" d=\"M409.799 968.896 L439.475 968.896 L439.475 972.832 L409.799 972.832 L409.799 968.896 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M449.614 951.165 L467.97 951.165 L467.97 955.1 L453.896 955.1 L453.896 963.572 Q454.915 963.225 455.933 963.063 Q456.952 962.878 457.97 962.878 Q463.757 962.878 467.137 966.049 Q470.517 969.22 470.517 974.637 Q470.517 980.216 467.044 983.318 Q463.572 986.396 457.253 986.396 Q455.077 986.396 452.808 986.026 Q450.563 985.656 448.156 984.915 L448.156 980.216 Q450.239 981.35 452.461 981.906 Q454.683 982.461 457.16 982.461 Q461.165 982.461 463.503 980.355 Q465.841 978.248 465.841 974.637 Q465.841 971.026 463.503 968.919 Q461.165 966.813 457.16 966.813 Q455.285 966.813 453.41 967.23 Q451.558 967.646 449.614 968.526 L449.614 951.165 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M479.73 979.845 L484.614 979.845 L484.614 985.725 L479.73 985.725 L479.73 979.845 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M504.799 954.244 Q501.188 954.244 499.359 957.808 Q497.554 961.35 497.554 968.48 Q497.554 975.586 499.359 979.151 Q501.188 982.693 504.799 982.693 Q508.433 982.693 510.239 979.151 Q512.067 975.586 512.067 968.48 Q512.067 961.35 510.239 957.808 Q508.433 954.244 504.799 954.244 M504.799 950.54 Q510.609 950.54 513.665 955.146 Q516.743 959.73 516.743 968.48 Q516.743 977.206 513.665 981.813 Q510.609 986.396 504.799 986.396 Q498.989 986.396 495.91 981.813 Q492.855 977.206 492.855 968.48 Q492.855 959.73 495.91 955.146 Q498.989 950.54 504.799 950.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M410.795 836.349 L440.471 836.349 L440.471 840.285 L410.795 840.285 L410.795 836.349 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M463.41 822.692 L451.605 841.141 L463.41 841.141 L463.41 822.692 M462.183 818.618 L468.063 818.618 L468.063 841.141 L472.994 841.141 L472.994 845.03 L468.063 845.03 L468.063 853.178 L463.41 853.178 L463.41 845.03 L447.808 845.03 L447.808 840.516 L462.183 818.618 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M480.725 847.298 L485.609 847.298 L485.609 853.178 L480.725 853.178 L480.725 847.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M495.841 818.618 L514.197 818.618 L514.197 822.553 L500.123 822.553 L500.123 831.025 Q501.142 830.678 502.16 830.516 Q503.179 830.331 504.197 830.331 Q509.984 830.331 513.364 833.502 Q516.743 836.674 516.743 842.09 Q516.743 847.669 513.271 850.771 Q509.799 853.849 503.479 853.849 Q501.304 853.849 499.035 853.479 Q496.79 853.109 494.382 852.368 L494.382 847.669 Q496.466 848.803 498.688 849.359 Q500.91 849.914 503.387 849.914 Q507.392 849.914 509.729 847.808 Q512.067 845.701 512.067 842.09 Q512.067 838.479 509.729 836.373 Q507.392 834.266 503.387 834.266 Q501.512 834.266 499.637 834.683 Q497.785 835.099 495.841 835.979 L495.841 818.618 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M409.799 703.803 L439.475 703.803 L439.475 707.738 L409.799 707.738 L409.799 703.803 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M462.415 690.145 L450.609 708.594 L462.415 708.594 L462.415 690.145 M461.188 686.071 L467.068 686.071 L467.068 708.594 L471.998 708.594 L471.998 712.483 L467.068 712.483 L467.068 720.631 L462.415 720.631 L462.415 712.483 L446.813 712.483 L446.813 707.969 L461.188 686.071 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M479.73 714.752 L484.614 714.752 L484.614 720.631 L479.73 720.631 L479.73 714.752 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M504.799 689.15 Q501.188 689.15 499.359 692.715 Q497.554 696.256 497.554 703.386 Q497.554 710.492 499.359 714.057 Q501.188 717.599 504.799 717.599 Q508.433 717.599 510.239 714.057 Q512.067 710.492 512.067 703.386 Q512.067 696.256 510.239 692.715 Q508.433 689.15 504.799 689.15 M504.799 685.446 Q510.609 685.446 513.665 690.053 Q516.743 694.636 516.743 703.386 Q516.743 712.113 513.665 716.719 Q510.609 721.302 504.799 721.302 Q498.989 721.302 495.91 716.719 Q492.855 712.113 492.855 703.386 Q492.855 694.636 495.91 690.053 Q498.989 685.446 504.799 685.446 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M410.795 571.256 L440.471 571.256 L440.471 575.191 L410.795 575.191 L410.795 571.256 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M464.73 569.45 Q468.086 570.168 469.961 572.436 Q471.859 574.705 471.859 578.038 Q471.859 583.154 468.341 585.955 Q464.822 588.756 458.341 588.756 Q456.165 588.756 453.85 588.316 Q451.558 587.899 449.105 587.043 L449.105 582.529 Q451.049 583.663 453.364 584.242 Q455.679 584.82 458.202 584.82 Q462.6 584.82 464.892 583.084 Q467.207 581.348 467.207 578.038 Q467.207 574.983 465.054 573.27 Q462.924 571.533 459.105 571.533 L455.077 571.533 L455.077 567.691 L459.29 567.691 Q462.739 567.691 464.568 566.325 Q466.396 564.936 466.396 562.344 Q466.396 559.682 464.498 558.27 Q462.623 556.834 459.105 556.834 Q457.183 556.834 454.984 557.251 Q452.785 557.668 450.146 558.547 L450.146 554.381 Q452.808 553.64 455.123 553.27 Q457.461 552.899 459.521 552.899 Q464.845 552.899 467.947 555.33 Q471.049 557.737 471.049 561.858 Q471.049 564.728 469.406 566.719 Q467.762 568.686 464.73 569.45 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M480.725 582.205 L485.609 582.205 L485.609 588.084 L480.725 588.084 L480.725 582.205 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M495.841 553.524 L514.197 553.524 L514.197 557.459 L500.123 557.459 L500.123 565.932 Q501.142 565.584 502.16 565.422 Q503.179 565.237 504.197 565.237 Q509.984 565.237 513.364 568.408 Q516.743 571.58 516.743 576.996 Q516.743 582.575 513.271 585.677 Q509.799 588.756 503.479 588.756 Q501.304 588.756 499.035 588.385 Q496.79 588.015 494.382 587.274 L494.382 582.575 Q496.466 583.709 498.688 584.265 Q500.91 584.82 503.387 584.82 Q507.392 584.82 509.729 582.714 Q512.067 580.607 512.067 576.996 Q512.067 573.385 509.729 571.279 Q507.392 569.172 503.387 569.172 Q501.512 569.172 499.637 569.589 Q497.785 570.006 495.841 570.885 L495.841 553.524 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M409.799 438.709 L439.475 438.709 L439.475 442.644 L409.799 442.644 L409.799 438.709 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M463.734 436.903 Q467.091 437.621 468.966 439.889 Q470.864 442.158 470.864 445.491 Q470.864 450.607 467.345 453.408 Q463.827 456.209 457.345 456.209 Q455.17 456.209 452.855 455.769 Q450.563 455.352 448.109 454.496 L448.109 449.982 Q450.054 451.116 452.369 451.695 Q454.683 452.274 457.207 452.274 Q461.605 452.274 463.896 450.537 Q466.211 448.801 466.211 445.491 Q466.211 442.436 464.058 440.723 Q461.929 438.987 458.109 438.987 L454.082 438.987 L454.082 435.144 L458.295 435.144 Q461.744 435.144 463.572 433.778 Q465.401 432.389 465.401 429.797 Q465.401 427.135 463.503 425.723 Q461.628 424.288 458.109 424.288 Q456.188 424.288 453.989 424.704 Q451.79 425.121 449.151 426.001 L449.151 421.834 Q451.813 421.093 454.128 420.723 Q456.466 420.352 458.526 420.352 Q463.85 420.352 466.952 422.783 Q470.054 425.19 470.054 429.311 Q470.054 432.181 468.41 434.172 Q466.767 436.139 463.734 436.903 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M479.73 449.658 L484.614 449.658 L484.614 455.537 L479.73 455.537 L479.73 449.658 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M504.799 424.056 Q501.188 424.056 499.359 427.621 Q497.554 431.163 497.554 438.292 Q497.554 445.399 499.359 448.963 Q501.188 452.505 504.799 452.505 Q508.433 452.505 510.239 448.963 Q512.067 445.399 512.067 438.292 Q512.067 431.163 510.239 427.621 Q508.433 424.056 504.799 424.056 M504.799 420.352 Q510.609 420.352 513.665 424.959 Q516.743 429.542 516.743 438.292 Q516.743 447.019 513.665 451.625 Q510.609 456.209 504.799 456.209 Q498.989 456.209 495.91 451.625 Q492.855 447.019 492.855 438.292 Q492.855 429.542 495.91 424.959 Q498.989 420.352 504.799 420.352 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip603)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"-121.586,-2310.31 -120.911,-2057.46 -120.236,-3774.52 -119.561,-5415.55 -118.886,-6891.79 -118.211,-8204.29 -117.536,-7731.4 -116.861,-8939.32 -116.186,-10014 -115.511,-11043.2 -114.836,-11952.6 -114.161,-11453.5 -113.486,-11090.7 -112.811,-11924.3 -112.136,-12662.8 -111.461,-13325.5 -110.786,-13906.2 -110.111,-14423 -109.436,-14877.9 -108.761,-15273 -108.086,-15614.5 -107.411,-15918.5 -106.736,-15473.1 -106.061,-15076.1 -105.386,-15317.6 -104.711,-15508.7 -104.036,-15672.5 -103.361,-15792.1 -102.686,-15859.2 -102.011,-15902.6 -101.336,-15932.3 -100.661,-15922.4 -99.9863,-15868.2 -99.3113,-15131.1 -98.6363,-15076.9 -97.9612,-14680.5 -97.2862,-14577.5 -96.6112,-14198.3 -95.9362,-13838.4 -95.2612,-13478.5 -94.5862,-13083.9 -93.9112,-12927.4 -93.2362,-12747.5 -92.5612,-12562.3 -91.8862,-12369.2 -91.2112,-12183.2 -90.5362,-11995.1 -89.8612,-11042.3 -89.1862,-10866.8 -88.5112,-10687.5 -87.8362,-10374.3 -87.1612,-9952.65 -86.4862,-9644.7 -85.8112,-9362.29 -85.1362,-9080.22 -84.4612,-8804.71 -83.7861,-8542.53 -83.1111,-8369.05 -82.4361,-8022.83 -81.7611,-7699.89 -81.0861,-7460.25 -80.4111,-7233.99 -79.7361,-7012.33 -79.0611,-6872.61 -78.3861,-6724.65 -77.7111,-6510.27 -77.0361,-6227.49 -76.3611,-5897.01 -75.6861,-5714.53 -75.0111,-5467.44 -74.3361,-5278.77 -73.6611,-4984.76 -72.9861,-4765.87 -72.3111,-4605.01 -71.6361,-4292.03 -70.9611,-4097.68 -70.2861,-3916.68 -69.611,-3738.95 -68.936,-3571.6 -68.261,-3315.99 -67.586,-3247.43 -66.911,-3089.44 -66.236,-2976.69 -65.561,-2784.49 -64.886,-2594.54 -64.211,-2448 -63.536,-2358.19 -62.861,-2342.34 -62.186,-2284.63 -61.511,-2142.76 -60.836,-2011.78 -60.161,-1916.93 -59.486,-1822.66 -58.811,-1657.22 -58.136,-1501.52 -57.461,-1388.13 -56.786,-1272.86 -56.111,-1196.73 -55.4359,-1156.44 -54.7609,-1090.6 -54.0859,-1053.79 -53.4109,-919.741 -52.7359,-820.739 -52.0609,-787.248 -51.3859,-717.747 -50.7109,-683.935 -50.0359,-619.853 -49.3609,-516.264 -48.6859,-484.797 -48.0109,-449.371 -47.3359,-387.894 -46.6609,-295.566 -45.9859,-237.831 -45.3109,-206.459 -44.6359,-144.744 -43.9609,-61.02 -43.2859,-37.8425 -42.6109,70.1597 -41.9359,92.4433 -41.2609,140.13 -40.5858,134.68 -39.9108,207.479 -39.2358,230.734 -38.5608,327.131 -37.8858,395.489 -37.2108,403.505 -36.5358,444.882 -35.8608,456.494 -35.1858,495.761 -34.5108,505.583 -33.8358,514.515 -33.1608,526.165 -32.4858,591.143 -31.8108,625.86 -31.1358,608.8 -30.4608,620.982 -29.7858,630.148 -29.1108,713.108 -28.4358,722.371 -27.7608,732.647 -27.0858,767.01 -26.4107,846.561 -25.7357,869.596 -25.0607,943.113 -24.3857,942.756 -23.7107,963.154 -23.0357,1007.77 -22.3607,978.053 -21.6857,1021.85 -21.0107,997.895 -20.3357,967.376 -19.6607,942.681 -18.9857,966.781 -18.3107,989.515 -17.6357,987.783 -16.9607,1011.76 -16.2857,1079.64 -15.6107,1097.38 -14.9357,1109.43 -14.2607,1126.29 -13.5857,1168.93 -12.9107,1165.18 -12.2356,1177.3 -11.5606,1192.95 -10.8856,1188.63 -10.2106,1269.38 -9.53563,1278.72 -8.86062,1264.81 -8.18562,1253.62 -7.51061,1237.62 -6.83561,1227.55 -6.1606,1240.54 -5.4856,1230.73 -4.8106,1220.08 -4.13559,1188.79 -3.46059,1204.86 -2.78558,1199.08 -2.11058,1209.14 -1.43557,1221.96 -0.760567,1168.47 -0.0855622,1189.39 0.589443,1201.8 1.26445,1196.97 1.93945,1210.92 2.61446,1208.32 3.28946,1270.78 3.96447,1281.92 4.63947,1295.11 5.31448,1284.28 5.98948,1274.05 6.66449,1285.35 7.33949,1317.53 8.01449,1301.37 8.6895,1309.11 9.3645,1337.06 10.0395,1363.24 10.7145,1349.51 11.3895,1334.8 12.0645,1317.7 12.7395,1302.91 13.4145,1332.72 14.0895,1294.43 14.7645,1326.82 15.4395,1313.05 16.1146,1300.61 16.7896,1292.16 17.4646,1303.42 18.1396,1288.15 18.8146,1297.9 19.4896,1329.1 20.1646,1264.88 20.8396,1323.88 21.5146,1323.87 22.1896,1330.23 22.8646,1311.38 23.5396,1297.78 24.2146,1312 24.8896,1298.54 25.5646,1241.47 26.2396,1235.46 26.9146,1288.8 27.5896,1277.37 28.2646,1330.7 28.9396,1315.07 29.6146,1253.04 30.2897,1239.65 30.9647,1249.03 31.6397,1215.04 32.3147,1226.69 32.9897,1236.85 33.6647,1228.65 34.3397,1239.41 35.0147,1227.81 35.6897,1179.07 36.3647,1126.21 37.0397,1106.73 37.7147,1076.88 38.3897,1098.11 39.0647,1090.35 39.7397,1041.42 40.4147,1041.53 41.0897,1061.71 41.7647,1058.4 42.4397,1120.21 43.1147,1119.83 43.7897,1086.34 44.4647,1098.21 45.1398,1139.05 45.8148,1135.56 46.4898,1151.63 47.1648,1165.3 47.8398,1139.91 48.5148,1135.35 49.1898,1106.6 49.8648,1147.23 50.5398,1141.49 51.2148,1112.29 51.8898,1067.35 52.5648,1059.59 53.2398,1054.88 53.9148,1049.94 54.5898,1002.79 55.2648,997.761 55.9398,1020.18 56.6148,1040.46 57.2898,1062.73 57.9648,1062.22 58.6398,1059.67 59.3149,1058.25 59.9899,1011.69 60.6649,1031.92 61.3399,1047.15 62.0149,1066.75 62.6899,1129.12 63.3649,1117.68 64.0399,1114.42 64.7149,1108.92 65.3899,1103.57 66.0649,1144 66.7399,1136.36 67.4149,1125.46 68.0899,1136.33 68.7649,1130.5 69.4399,1143.12 70.1149,1159.14 70.7899,1197.46 71.4649,1169.16 72.1399,1181.31 72.8149,1168.63 73.49,1154.82 74.165,1185.71 74.84,1150.1 75.515,1140.78 76.19,1133.75 76.865,1123.17 77.54,1154.61 78.215,1144.6 78.89,1129.24 79.565,1120.01 80.24,1174.27 80.915,1147.71 81.59,1136.52 82.265,1129.58 82.94,1123.36 83.615,1116.06 84.29,1106.1 84.965,1099.83 85.64,1089.47 86.315,1034.69 86.99,1051.56 87.6651,1085.46 88.3401,1097.8 89.0151,1090.12 89.6901,1057.7 90.3651,1092.4 91.0401,1081.69 91.7151,1053.57 92.3901,1046.15 93.0651,1017.68 93.7401,1057.68 94.4151,1155.16 95.0901,1115.99 95.7651,1103.59 96.4401,1140 97.1151,1109.37 97.7901,1078.03 98.4651,1098.11 99.1401,1111.59 99.8151,1100.8 100.49,1071.34 101.165,1067.07 101.84,1059.69 102.515,1095.04 103.19,1125.72 103.865,1136.08 104.54,1145.89 105.215,1134.44 105.89,1148.23 106.565,1177.07 107.24,1076.89 107.915,1046.98 108.59,1061.98 109.265,1055.62 109.94,1031.96 110.615,1024.82 111.29,976.1 111.965,968.202 112.64,943.11 113.315,962.242 113.99,998.616 114.665,1054.87 115.34,1024.89 116.015,1042.09 116.69,1033.32 117.365,1064 118.04,1057.61 118.715,1027.54 119.39,1043.32 120.065,1010.87 120.74,1027.16 121.415,1019.75 122.09,968.056 122.765,942.361 123.44,934.683 124.115,912.508 124.79,912.567 125.465,914.295 126.14,912.08 126.815,934.232 127.49,952.064 128.165,949.946 128.84,943.926 129.515,898.27 130.19,984.93 130.865,977.361 131.54,972.495 132.215,1009.03 132.89,980.742 133.565,971.848 134.24,1032.2 134.915,1021.67 135.59,1019.18 136.265,1009.2 136.94,1004.19 137.615,1035.21 138.29,1029.2 138.965,1013.19 139.64,1028.37 140.315,1044.65 140.99,1054.21 141.665,1048.99 142.34,1078.7 143.015,1066.92 143.69,1054.84 144.365,1065.35 145.04,1098.7 145.715,1064.84 146.39,1008.43 147.065,981.224 147.74,931.854 148.415,927.429 149.09,898.514 149.765,896.868 150.44,897.494 151.115,870.5 151.791,867.286 152.466,933.681 153.141,950.843 153.816,925.48 154.491,965.353 155.166,914.09 155.841,890.962 156.516,907.51 157.191,948.505 157.866,939.119 158.541,916.424 159.216,933.165 159.891,931.121 160.566,905.919 161.241,924.613 161.916,898.664 162.591,896.511 163.266,896.109 163.941,871.689 164.616,872.863 165.291,869.449 165.966,842.464 166.641,866.058 167.316,860.782 167.991,861.802 168.666,924.428 169.341,918.317 170.016,918.9 170.691,915.944 171.366,933.269 172.041,903.326 172.716,898.043 173.391,853.077 174.066,830.258 174.741,814.245 175.416,772.358 176.091,776.462 176.766,777.695 177.441,784.023 178.116,786.66 178.791,807.455 179.466,785.956 180.141,787.685 180.816,812.048 181.491,856.883 182.166,857.294 182.841,857.491 183.516,854.776 184.191,874.876 184.866,851.85 185.541,851.601 186.216,786.911 186.891,810.476 187.566,790.735 188.241,750.705 188.916,756.602 189.591,804.392 190.266,783.051 190.941,788.309 191.616,794.223 192.291,838.392 192.966,883.819 193.641,865.848 194.316,844.037 194.991,847.12 195.666,826.387 196.341,826.813 197.016,807.295 197.691,808.627 198.366,784.582 199.041,766.135 199.716,794.849 200.391,778.595 201.066,824.49 201.741,842.922 202.416,882.624 203.091,873.441 203.766,868.385 204.441,823.81 205.116,865.562 205.791,880.056 206.466,897.908 207.141,895.211 207.816,887.882 208.491,886.696 209.166,882.417 209.841,817.741 210.516,813.067 211.191,812.879 211.866,790.926 212.541,767.583 213.216,791.294 213.891,833.969 214.566,858.29 215.241,811.804 215.916,835.73 216.591,809.541 217.266,829.96 217.941,827.45 218.616,782.8 219.291,828.757 219.966,851.42 220.641,871.086 221.316,866.959 221.991,885.114 222.666,877.761 223.341,809.818 224.016,892.437 224.691,930.364 225.366,949.6 226.041,960.654 226.716,927.547 227.391,920.335 228.066,934.96 228.741,923.818 229.416,1001.81 230.091,992.349 230.766,981.801 231.441,1035.46 232.116,1067.8 232.791,1011.35 233.466,999.499 234.141,991.432 234.816,936.198 235.491,925.269 236.166,902.52 236.841,872.798 237.516,867.751 238.191,865.577 238.866,885.381 239.541,816.756 240.216,860.082 240.891,855.796 241.566,854.521 242.241,830.644 242.916,844.066 243.591,793.342 244.266,769.1 244.941,770.171 245.616,751.361 246.291,755.491 246.966,760.407 247.641,810.243 248.316,785.702 248.991,784.196 249.666,803.844 250.341,805.184 251.016,823.578 251.691,866.187 252.366,790.927 253.041,834.065 253.716,808.873 254.391,809.024 255.066,765.731 255.741,747.24 256.416,769.778 257.091,793.899 257.766,841.261 258.441,841.69 259.116,856.367 259.791,833.448 260.466,809.422 261.141,802.901 261.816,781.285 262.491,715.594 263.166,722.739 263.841,725.958 264.516,751.58 265.191,752.286 265.866,781.215 266.541,843.514 267.216,821.448 267.891,821.066 268.566,824.092 269.241,843.941 269.916,856.748 270.591,807.159 271.266,782.513 271.941,739.513 272.616,743.105 273.291,749.009 273.966,730.905 274.641,733.718 275.316,753.359 275.991,751.927 276.666,754.64 277.341,754.556 278.016,779.486 278.691,821.185 279.366,862.308 280.041,855.702 280.716,850.883 281.391,846.22 282.066,818.588 282.741,837.333 283.416,833.957 284.091,828.057 284.766,782.826 285.441,781.524 286.116,779.416 286.791,781.077 287.466,782.093 288.141,820.744 288.816,775.832 289.491,758.261 290.166,757.846 290.841,758.164 291.516,778.692 292.191,715.837 292.866,673.848 293.541,724.905 294.216,705.413 294.892,704.875 295.567,764.101 296.242,786.649 296.917,788.131 297.592,854.447 298.267,848.757 298.942,826.904 299.617,798.882 300.292,823.357 300.967,815.788 301.642,815.167 302.317,793.094 302.992,832.387 303.667,829.282 304.342,826.55 305.017,825.34 305.692,847.214 306.367,890.212 307.042,870.302 307.717,908.492 308.392,926.098 309.067,957.574 309.742,945.635 310.417,897.081 311.092,915.096 311.767,845.378 312.442,779.6 313.117,777.569 313.792,753.895 314.467,761.826 315.142,786.946 315.817,784.559 316.492,759.951 317.167,717.1 317.842,739.078 318.517,765.265 319.192,743.591 319.867,743.197 320.542,768.265 321.217,746.161 321.892,770.494 322.567,748.248 323.242,703.716 323.917,705.003 324.592,695.018 325.267,694.852 325.942,690.904 326.617,696.324 327.292,677.185 327.967,684.916 328.642,618.892 329.317,650.923 329.992,678.609 330.667,701.293 331.342,683.462 332.017,682.092 332.692,663.773 333.367,667.168 334.042,690.737 334.717,672.299 335.392,704.747 336.067,688.021 336.742,625.402 337.417,633.234 338.092,597.65 338.767,624.656 339.442,632.872 340.117,666.275 340.792,645.947 341.467,669.311 342.142,673.722 342.817,701.846 343.492,743.897 344.167,702.17 344.842,680.744 345.517,663.571 346.192,667.54 346.867,675.401 347.542,723.987 348.217,729.513 348.892,732.078 349.567,733.052 350.242,755.429 350.917,774.223 351.592,793.306 352.267,856.021 352.942,850.818 353.617,844.05 354.292,860.542 354.967,813.959 355.642,828.43 356.317,849.547 356.992,821.407 357.667,794.752 358.342,819.016 359.017,843.187 359.692,860.293 360.367,814.463 361.042,763.157 361.717,762.397 362.392,806.002 363.067,762.923 363.742,783.646 364.417,824.146 365.092,800.929 365.767,818.561 366.442,813.949 367.117,790.202 367.792,784.604 368.467,803.387 369.142,780.893 369.817,734.237 370.492,715.147 371.167,676.379 371.842,684.025 372.517,728.579 373.192,709.699 373.867,751.791 374.542,771.671 375.217,770.384 375.892,744.406 376.567,677.873 377.242,746.65 377.917,745.819 378.592,768.601 379.267,763.125 379.942,802.888 380.617,799.332 381.292,797.867 381.967,793.897 382.642,729.347 383.317,776.903 383.992,772.445 384.667,727.681 385.342,767.758 386.017,765.918 386.692,765.721 387.367,722.759 388.042,723.92 388.717,745.531 389.392,768.504 390.067,742.788 390.742,722.739 391.417,766.752 392.092,809.89 392.767,764.055 393.442,806.401 394.117,738.305 394.792,739.475 395.467,762.785 396.142,720.967 396.817,722.731 397.492,723.957 398.167,698.684 398.842,701.626 399.517,746.721 400.192,772.479 400.867,811.098 401.542,739.461 402.217,738.52 402.892,738.939 403.567,739.904 404.242,736.784 404.917,693.699 405.592,739.844 406.267,737.485 406.942,754.914 407.617,775.569 408.292,754.94 408.967,772.656 409.642,795.667 410.317,820.564 410.992,817.601 411.667,794.363 412.342,814.347 413.017,808.855 413.692,848.401 414.367,825.112 415.042,819.641 415.717,835.767 416.392,829.498 417.067,806.237 417.742,827.83 418.417,863.357 419.092,878.287 419.767,844.655 420.442,860.206 421.117,851.893 421.792,822.776 422.467,902.829 423.142,896.594 423.817,865.407 424.492,837.933 425.167,809.587 425.842,695.431 426.517,745.17 427.192,727.151 427.867,747.822 428.542,746.489 429.217,724.981 429.892,719.361 430.567,723.135 431.242,746.711 431.917,701.415 432.592,767.564 433.267,765.671 433.942,780.966 434.617,754.294 435.292,774.643 435.967,780.094 436.642,730.77 437.317,729.288 437.993,706.562 438.668,731.231 439.343,758.549 440.018,732.339 440.693,715.005 441.368,673.401 442.043,678.274 442.718,619.103 443.393,647.545 444.068,631.431 444.743,635.202 445.418,679.65 446.093,656.968 446.768,681.895 447.443,683.686 448.118,682.25 448.793,711.672 449.468,665.674 450.143,689.142 450.818,670.877 451.493,653.605 452.168,654.263 452.843,697.419 453.518,701.78 454.193,703.892 454.868,682.601 455.543,729.777 456.218,748.454 456.893,770.395 457.568,766.543 458.243,765.011 458.918,783.46 459.593,763.609 460.268,721.153 460.943,739.771 461.618,782.591 462.293,801.3 462.968,780.552 463.643,779.32 464.318,771.424 464.993,727.168 465.668,743.358 466.343,783.126 467.018,773.578 467.693,771.976 468.368,726.324 469.043,723.516 469.718,721.801 470.393,720.147 471.068,698.145 471.743,700.484 472.418,658.15 473.093,687.589 473.768,686.997 474.443,690.864 475.118,694.307 475.793,669.969 476.468,674.934 477.143,678.281 477.818,703.466 478.493,773.694 479.168,749.306 479.843,768.111 480.518,725.078 481.193,725.408 481.868,729.232 482.543,750.486 483.218,748.387 483.893,681.223 484.568,780.519 485.243,735.367 485.918,775.352 486.593,814.092 487.268,824.993 487.943,861.965 488.618,877.053 489.293,911.259 489.968,904.199 490.643,898.498 491.318,869.67 491.993,882.803 492.668,893.806 493.343,867.206 494.018,834.07 494.693,788.89 495.368,785.278 496.043,782.137 496.718,740.181 497.393,762.782 498.068,849.388 498.743,882.242 499.418,899.716 500.093,872.394 500.768,888.61 501.443,862.155 502.118,875.684 502.793,891.513 503.468,881.468 504.143,872.09 504.818,801.435 505.493,822.664 506.168,840.642 506.843,879.132 507.518,895.534 508.193,889.324 508.868,860.009 509.543,807.567 510.218,847.332 510.893,842.958 511.568,818.265 512.243,852.734 512.918,866.384 513.593,836.876 514.268,832.296 514.943,806.147 515.618,781.031 516.293,795.118 516.968,753.169 517.643,730.446 518.318,729.035 518.993,704.979 519.668,705.411 520.343,661.254 521.018,665.614 521.693,690.67 522.368,649.369 523.043,633.324 523.718,632.676 524.393,614.642 525.068,659.568 525.743,624 526.418,625.883 527.093,594.149 527.768,556.112 528.443,586.41 529.118,572.987 529.793,602.029 530.468,629.402 531.143,631.827 531.818,592.06 532.493,558.386 533.168,567.455 533.843,530.563 534.518,606.704 535.193,638.837 535.868,618.593 536.543,647.116 537.218,628.392 537.893,654.256 538.568,636.834 539.243,637.681 539.918,624.799 540.593,611.807 541.268,661.624 541.943,663.762 542.618,688.8 543.293,713.957 543.968,694.992 544.643,653.075 545.318,662.316 545.993,686.626 546.668,652.385 547.343,660.807 548.018,666.513 548.693,668.912 549.368,674.43 550.043,692.701 550.718,692.123 551.393,674.921 552.068,695.633 552.743,659.903 553.418,641.55 554.093,684.589 554.768,706.716 555.443,770.627 556.118,746.33 556.793,763.674 557.468,717.226 558.143,722.689 558.818,703.838 559.493,708.796 560.168,708.178 560.843,774.524 561.518,775.37 562.193,755.189 562.868,758.553 563.543,798.357 564.218,794.29 564.893,834.341 565.568,831.115 566.243,846.787 566.918,843.793 567.593,833.114 568.268,829.317 568.943,780.129 569.618,780.371 570.293,819.173 570.968,813.075 571.643,807.545 572.318,805.456 572.993,801.704 573.668,798.832 574.343,747.395 575.018,679.222 575.693,677.734 576.368,681.452 577.043,681.323 577.718,703.165 578.393,727.712 579.068,680.457 579.743,681.08 580.419,662.344 581.094,642.802 581.769,645.431 582.444,652.595 583.119,656.651 583.794,638.084 584.469,645.253 585.144,587.387 585.819,614.347 586.494,622.058 587.169,630.694 587.844,657.193 588.519,688.967 589.194,760.033 589.869,775.933 590.544,792.162 591.219,811.517 591.894,807.486 592.569,805.824 593.244,801.431 593.919,756.321 594.594,754.661 595.269,728.832 595.944,728.545 596.619,728.511 597.294,749.322 597.969,770.684 598.644,790.683 599.319,807.079 599.994,786.313 600.669,740.743 601.344,760.781 602.019,759.042 602.694,735.643 603.369,713.345 604.044,712.205 604.719,751.582 605.394,744.383 606.069,743.436 606.744,742.207 607.419,762.667 608.094,734.822 608.769,711.277 609.444,730.089 610.119,707.794 610.794,688.877 611.469,693.92 612.144,715.756 612.819,678.643 613.494,656.356 614.169,682.845 614.844,639.619 615.519,617.99 616.194,626.536 616.869,609.977 617.544,617.141 618.219,621.988 618.894,631.564 619.569,589.558 620.244,595.724 620.919,581.28 621.594,564.882 622.269,620.969 622.944,647.862 623.619,649.918 624.294,673.413 624.969,675.434 625.644,721.757 626.319,696.751 626.994,699.225 627.669,701.482 628.344,646.168 629.019,628.714 629.694,656.906 630.369,662.054 631.044,641.781 631.719,667.041 632.394,623.817 633.069,611.156 633.744,592.799 634.419,595.015 635.094,625.753 635.769,627.906 636.444,633.327 637.119,615.747 637.794,626.531 638.469,651.372 639.144,654.975 639.819,616.381 640.494,664.986 641.169,667.774 641.844,676.245 642.519,680.727 643.194,702.111 643.869,763.791 644.544,844.522 645.219,861.321 645.894,872.473 646.569,843.977 647.244,835.737 647.919,827.535 648.594,843.953 649.269,857.699 649.944,867.022 650.619,863.154 651.294,834.857 651.969,831.229 652.644,803.949 653.319,796.118 653.994,875.601 654.669,865.838 655.344,857.076 656.019,847.785 656.694,800.931 657.369,797.512 658.044,834.109 658.719,867.807 659.394,857.788 660.069,847.866 660.744,861.286 661.419,880.526 662.094,873.416 662.769,866.402 663.444,818.48 664.119,832.782 664.794,847.125 665.469,820.693 666.144,813.939 666.819,764.079 667.494,758.823 668.169,692.288 668.844,709.225 669.519,686.547 670.194,638.874 670.869,686.514 671.544,708.34 672.219,730.363 672.894,726.971 673.569,726.031 674.244,726.017 674.919,701.947 675.594,666.901 676.269,650.47 676.944,633.421 677.619,590.434 678.294,595.882 678.969,605.311 679.644,613.037 680.319,644.263 680.994,642.127 681.669,630.364 682.344,632.996 683.019,636.375 683.694,660.457 684.369,661.888 685.044,643.406 685.719,670.032 686.394,629.35 687.069,612.156 687.744,641.63 688.419,643.672 689.094,688.937 689.769,773.624 690.444,811.794 691.119,743.573 691.794,744.211 692.469,723.403 693.144,871.432 693.819,903.663 694.494,875.937 695.169,847.637 695.844,842.313 696.519,859.15 697.194,852.05 697.869,884.067 698.544,831.139 699.219,806.059 699.894,823.36 700.569,818.411 701.244,813.328 701.919,782.1 702.594,781.356 703.269,759.53 703.944,756.234 704.619,734.766 705.294,713.799 705.969,711.85 706.644,645.219 707.319,649.442 707.994,648.883 708.669,652.666 709.344,676.574 710.019,656.059 710.694,635.468 711.369,640.073 712.044,623.029 712.719,608.712 713.394,636.338 714.069,576.832 714.744,605.275 715.419,695.474 716.094,676.601 716.769,679.596 717.444,676.73 718.119,694.63 718.794,691.168 719.469,690.349 720.144,648.77 720.819,628.117 721.494,631.874 722.169,656.322 722.844,704.505 723.52,685.1 724.195,665.13 724.87,687.601 725.545,663.142 726.22,617.886 726.895,603.735 727.57,609.523 728.245,636.154 728.92,684.285 729.595,686.157 730.27,691.563 730.945,716.517 731.62,738.697 732.295,756.35 732.97,731.09 733.645,727.341 734.32,707.102 734.995,666.349 735.67,671.488 736.345,712.492 737.02,686.119 737.695,726.388 738.37,763.302 739.045,779.215 739.72,774.506 740.395,790.48 741.07,828.726 741.745,884.259 742.42,858.321 743.095,851.721 743.77,826.153 744.445,866.003 745.12,818.175 745.795,793.811 746.47,742.706 747.145,744.563 747.82,720.238 748.495,741.848 749.17,696.826 749.845,743.046 750.52,745.1 751.195,786.439 751.87,722.481 752.545,741.978 753.22,715.278 753.895,732.588 754.57,797.919 755.245,749.522 755.92,774.291 756.595,749.945 757.27,727.567 757.945,744.095 758.62,744.479 759.295,718.254 759.97,738.996 760.645,778.996 761.32,838.961 761.995,833.336 762.67,866.429 763.345,858.049 764.02,852.768 764.695,866.742 765.37,860.554 766.045,850.509 766.72,890.118 767.395,901.018 768.07,890.417 768.745,925.71 769.42,955.753 770.095,875.806 770.77,885.229 771.445,834.735 772.12,831.725 772.795,782.103 773.47,782.909 774.145,715.574 774.82,715.969 775.495,715.252 776.17,691.975 776.845,715.195 777.52,696.896 778.195,698.741 778.87,612.101 779.545,571.063 780.22,644.772 780.895,669.641 781.57,671.458 782.245,674.777 782.92,696.579 783.595,671.327 784.27,660.599 784.945,659.607 785.62,640.407 786.295,707.814 786.97,711.132 787.645,713.966 788.32,669.92 788.995,669.228 789.67,648.976 790.345,668.691 791.02,627.783 791.695,592.916 792.37,598.947 793.045,603.074 793.72,633.207 794.395,634.675 795.07,641.887 795.745,648.591 796.42,607.102 797.095,636.254 797.77,682.975 798.445,709.582 799.12,688.102 799.795,686.597 800.47,688.739 801.145,688.751 801.82,711.13 802.495,667.537 803.17,670.636 803.845,649.598 804.52,610.85 805.195,617.077 805.87,620.373 806.545,625.755 807.22,633.098 807.895,636.637 808.57,642.991 809.245,708.326 809.92,713.315 810.595,736.504 811.27,738.873 811.945,738.302 812.62,738.534 813.295,736.059 813.97,777.006 814.645,775.339 815.32,774.616 815.995,748.139 816.67,765.656 817.345,782.938 818.02,780.361 818.695,794.35 819.37,774.051 820.045,772.974 820.72,770.256 821.395,783.108 822.07,784.125 822.745,779.248 823.42,778.154 824.095,774.407 824.77,833.661 825.445,807.368 826.12,823.173 826.795,838.658 827.47,769.727 828.145,811.814 828.82,894.063 829.495,865.594 830.17,852.304 830.845,843.445 831.52,859.574 832.195,851.708 832.87,802.612 833.545,776.649 834.22,818.286 834.895,788.927 835.57,764.342 836.245,763.405 836.92,759.245 837.595,713.673 838.27,738.2 838.945,759.279 839.62,670.421 840.295,693.386 840.97,755.701 841.645,772.328 842.32,787.473 842.995,718.956 843.67,716.644 844.345,715.684 845.02,689.065 845.695,688.96 846.37,641.785 847.045,600.918 847.72,623.302 848.395,631.869 849.07,637.804 849.745,645.704 850.42,732.666 851.095,703.923 851.77,662.529 852.445,686.703 853.12,662.181 853.795,664.344 854.47,645.012 855.145,692.967 855.82,698.045 856.495,678.178 857.17,661.115 857.845,616.45 858.52,599.946 859.195,609.915 859.87,620.462 860.545,670.765 861.22,696.646 861.895,675.187 862.57,679.646 863.245,704.469 863.92,724.245 864.595,681.576 865.27,707.62 865.945,752.523 866.621,753.293 867.296,776.583 867.971,842.933 868.646,839.304 869.321,810.992 869.996,824.05 870.671,818.826 871.346,775.152 872.021,770.228 872.696,742.6 873.371,743.571 874.046,743.243 874.721,723.167 875.396,725.66 876.071,748.44 876.746,745.765 877.421,722.34 878.096,746.161 878.771,790.958 879.446,789.883 880.121,721.914 880.796,721.007 881.471,717.568 882.146,735.027 882.821,759.43 883.496,691.491 884.171,694.631 884.846,714.055 885.521,733.643 886.196,733.067 886.871,710.925 887.546,686.051 888.221,646.175 888.896,654.25 889.571,640.811 890.246,708.322 890.921,689.879 891.596,714.115 892.271,710.253 892.946,711.414 893.621,747.71 894.296,744.78 894.971,744.474 895.646,738.144 896.321,697.287 896.996,676.565 897.671,676.844 898.346,612.89 899.021,635.487 899.696,682.544 900.371,700.953 901.046,768.403 901.721,782.727 902.396,802.023 903.071,772.9 903.746,723.396 904.421,719.997 905.096,719.309 905.771,700.988 906.446,702.222 907.121,700.818 907.796,703.429 908.471,683.979 909.146,637.265 909.821,554.799 910.496,565.204 911.171,549.522 911.846,536.134 912.521,571.12 913.196,535.247 913.871,481.019 914.546,475.646 915.221,488.153 915.896,501.553 916.571,446.801 917.246,526.481 917.921,493.138 918.596,508.639 919.271,521.912 919.946,531.999 920.621,541.353 921.296,575.892 921.971,562.738 922.646,543.475 923.321,531.006 923.996,541.638 924.671,551.177 925.346,581.286 926.021,611.068 926.696,684.232 927.371,684.592 928.046,665.184 928.721,621.13 929.396,604.944 930.071,613.531 930.746,641.839 931.421,622.341 932.096,607.61 932.771,587.916 933.446,596.367 934.121,606.423 934.796,569.836 935.471,580.045 936.146,605.265 936.821,588.485 937.496,590.393 938.171,600.494 938.846,627.875 939.521,651.99 940.196,658.252 940.871,641.496 941.546,666.606 942.221,670.61 942.896,676.92 943.571,674.732 944.246,699.083 944.921,740.443 945.596,782.352 946.271,800.192 946.946,789.666 947.621,784.774 948.296,806.856 948.971,845.386 949.646,859.483 950.321,854.932 950.996,804.714 951.671,804.119 952.346,793.984 953.021,790.743 953.696,802.258 954.371,798.127 955.046,880.999 955.721,872.7 956.396,886.834 957.071,879.579 957.746,932.812 958.421,920.504 959.096,909.187 959.771,901.455 960.446,907.341 961.121,939.486 961.796,926.58 962.471,852.767 963.146,849.295 963.821,885.937 964.496,831.671 965.171,782.481 965.846,736.824 966.521,735.487 967.196,750.859 967.871,769.071 968.546,743.508 969.221,720.254 969.896,698.283 970.571,742.423 971.246,715.334 971.921,694.978 972.596,777.551 973.271,774.478 973.946,795.242 974.621,771.052 975.296,746.848 975.971,719.57 976.646,761.674 977.321,734.458 977.996,710.514 978.671,749.235 979.346,722.976 980.021,725.847 980.696,769.329 981.371,748.132 982.046,767.518 982.721,762.812 983.396,733.265 984.071,751.82 984.746,771.415 985.421,725.995 986.096,683.545 986.771,645.062 987.446,624.666 988.121,631.558 988.796,638.396 989.471,662.724 990.146,665.466 990.821,668.226 991.496,626.709 992.171,630.057 992.846,656.623 993.521,664.256 994.196,687.834 994.871,689.652 995.546,686.816 996.221,645.959 996.896,670.752 997.571,675.805 998.246,742.685 998.921,719.754 999.596,695.83 1000.27,733.026 1000.95,754.086 1001.62,731.63 1002.3,731.172 1002.97,728.806 1003.65,702.7 1004.32,682.487 1005,703.398 1005.67,766.738 1006.35,762.886 1007.02,740.653 1007.7,760.505 1008.37,780.339 1009.05,736.541 1009.72,735.299 1010.4,752.729 1011.07,733.456 1011.75,669.779 1012.42,650.02 1013.1,674.816 1013.77,677.548 1014.45,656.44 1015.12,660.437 1015.8,660.392 1016.47,727.903 1017.15,750.376 1017.82,726.406 1018.5,700.849 1019.17,702.244 1019.85,682.119 1020.52,635.011 1021.2,635.891 1021.87,617.668 1022.55,645.729 1023.22,668.573 1023.9,688.115 1024.57,687.973 1025.25,736.343 1025.92,692.531 1026.6,653.607 1027.27,614.58 1027.95,663.124 1028.62,645.132 1029.3,669.218 1029.97,691.317 1030.65,675.605 1031.32,633.304 1032,630.83 1032.67,570.441 1033.35,643.196 1034.02,622.894 1034.7,647.493 1035.37,634.922 1036.05,643.289 1036.72,630.62 1037.4,632.922 1038.07,634.212 1038.75,613.457 1039.42,620.962 1040.1,624.274 1040.77,652.402 1041.45,651.833 1042.12,672.098 1042.8,657.781 1043.47,686.67 1044.15,693.411 1044.82,693.122 1045.5,695.243 1046.17,691.109 1046.85,715.47 1047.52,714.13 1048.2,739.095 1048.87,740.353 1049.55,697.177 1050.22,678.4 1050.9,658.346 1051.57,634.843 1052.25,617.349 1052.92,626.308 1053.6,651.583 1054.27,653.379 1054.95,675.435 1055.62,697.545 1056.3,700.585 1056.97,677.613 1057.65,660.961 1058.32,640.785 1059,623.861 1059.67,631.09 1060.35,644.779 1061.02,687.191 1061.7,646.205 1062.37,646.152 1063.05,670.044 1063.72,675.678 1064.4,683.838 1065.07,684.205 1065.75,684.64 1066.42,684.697 1067.1,686.875 1067.77,688.611 1068.45,690.864 1069.12,738.917 1069.8,758.472 1070.47,778.361 1071.15,799.718 1071.82,773.414 1072.5,751.388 1073.17,767.979 1073.85,724.805 1074.52,794.392 1075.2,811.911 1075.87,850.421 1076.55,885.424 1077.22,877.715 1077.9,844.6 1078.57,844.739 1079.25,814.801 1079.92,812.66 1080.6,743.471 1081.27,675.733 1081.95,701.666 1082.62,745.904 1083.3,806.293 1083.97,821.745 1084.65,813.195 1085.32,805.239 1086,886.52 1086.67,898.103 1087.35,867.621 1088.02,839.246 1088.7,766.894 1089.37,743.841 1090.05,782.282 1090.72,755.597 1091.4,725.94 1092.07,725.176 1092.75,719.858 1093.42,743.938 1094.1,763.698 1094.77,802.779 1095.45,823.914 1096.12,818.783 1096.8,830.584 1097.47,827.246 1098.15,822.171 1098.82,858.476 1099.5,823.706 1100.17,835.22 1100.85,760.641 1101.52,777.026 1102.2,774.607 1102.87,772.897 1103.55,726.189 1104.22,723.667 1104.9,678.858 1105.57,662.584 1106.25,666.558 1106.92,666.462 1107.6,642.657 1108.27,599.145 1108.95,603.705 1109.62,626.437 1110.3,633.445 1110.97,587.605 1111.65,547.176 1112.32,555.521 1113,538.25 1113.67,569.518 1114.35,560.085 1115.02,547.251 1115.7,491.39 1116.37,525.562 1117.05,532.39 1117.72,540.442 1118.4,631.725 1119.07,633.374 1119.75,638.301 1120.42,640.548 1121.1,647.166 1121.77,718.801 1122.45,735.015 1123.12,781.291 1123.8,758.087 1124.47,791.58 1125.15,764.089 1125.82,803.009 1126.5,795.588 1127.17,817.733 1127.85,811.246 1128.52,805.988 1129.2,777.086 1129.87,814.788 1130.55,828.8 1131.22,846.113 1131.9,819.463 1132.57,789.681 1133.25,806.11 1133.92,803.237 1134.6,777.482 1135.27,800.079 1135.95,770.63 1136.62,764.345 1137.3,742.396 1137.97,741.618 1138.65,720.438 1139.32,744.417 1140,768.259 1140.67,743.594 1141.35,741.116 1142.02,737.462 1142.7,694.893 1143.37,691.085 1144.05,715.865 1144.72,715.29 1145.4,693.818 1146.07,717.733 1146.75,717.275 1147.42,738.158 1148.1,718.833 1148.77,679.258 1149.45,678.845 1150.12,660.512 1150.8,622.265 1151.47,603.08 1152.15,635.534 1152.82,663.235 1153.5,710.804 1154.17,688.413 1154.85,691.543 1155.52,712.205 1156.2,733.167 1156.87,728.659 1157.55,748.949 1158.22,744.131 1158.9,781.913 1159.57,752.765 1160.25,770.01 1160.92,781.273 1161.6,799.732 1162.27,813.758 1162.95,915.218 1163.62,906.471 1164.3,895.721 1164.97,836.891 1165.65,824.362 1166.32,882.669 1167,856.997 1167.67,831.727 1168.35,892.524 1169.02,861.882 1169.7,851.76 1170.37,825.487 1171.05,814.404 1171.72,870.653 1172.4,866.275 1173.07,853.945 1173.75,865.879 1174.42,855.38 1175.1,800.486 1175.77,799.785 1176.45,791.399 1177.12,765.198 1177.8,723.783 1178.47,739.834 1179.15,691.072 1179.82,709.102 1180.5,683.493 1181.17,728.098 1181.85,708.223 1182.52,619.649 1183.2,601.195 1183.87,634.456 1184.55,658.413 1185.22,613.807 1185.9,579.781 1186.57,592.087 1187.25,620.417 1187.92,605.919 1188.6,587.307 1189.27,575.203 1189.95,532.704 1190.62,564.276 1191.3,573.068 1191.97,513.554 1192.65,484.448 1193.32,500.438 1194,511.811 1194.67,526.017 1195.35,512.518 1196.02,497.219 1196.7,556.02 1197.37,605.929 1198.05,610.026 1198.72,612.329 1199.4,614.601 1200.07,661.553 1200.75,666.974 1201.42,673.252 1202.1,636.905 1202.77,659.142 1203.45,659.986 1204.12,661.241 1204.8,683.193 1205.47,678.943 1206.15,701.012 1206.82,724.801 1207.5,723.299 1208.17,762.639 1208.85,786.126 1209.52,780.47 1210.2,732.842 1210.87,754.465 1211.55,751.867 1212.22,749.343 1212.9,749.466 1213.57,728.176 1214.25,704.605 1214.92,683.962 1215.6,688.366 1216.27,691.54 1216.95,653.592 1217.62,680.713 1218.3,618.291 1218.97,644.828 1219.65,689.695 1220.32,713.354 1221,739.565 1221.67,759.41 1222.35,737.987 1223.02,732.211 1223.7,772.314 1224.37,770.796 1225.05,729.433 1225.72,746.825 1226.4,786.701 1227.07,779.845 1227.75,750.734 1228.42,793.072 1229.1,831.421 1229.77,804.655 1230.45,799.193 1231.12,731.785 1231.8,749.361 1232.47,753.118 1233.15,797.022 1233.82,832.362 1234.5,868.694 1235.17,877.646 1235.85,875.531 1236.52,804.023 1237.2,794.611 1237.87,793.047 1238.55,746.834 1239.22,785.55 1239.9,777.217 1240.57,773.131 1241.25,792.685 1241.92,790.653 1242.6,810.061 1243.27,827.396 1243.95,842.191 1244.62,878.732 1245.3,865.84 1245.97,855.714 1246.65,780.101 1247.32,709.675 1248,706.833 1248.67,708.109 1249.35,683.922 1250.02,733.059 1250.7,733.108 1251.37,778.316 1252.05,729.651 1252.72,772.622 1253.4,773.528 1254.07,793.116 1254.75,764.882 1255.42,761.073 1256.1,779.358 1256.77,777.438 1257.45,774.13 1258.12,730.122 1258.8,729.077 1259.47,732.544 1260.15,733.287 1260.82,731.458 1261.5,749.867 1262.17,724.055 1262.85,722.869 1263.52,718.519 1264.2,716.688 1264.87,736.976 1265.55,798.143 1266.22,703.116 1266.9,681.419 1267.57,657.748 1268.25,657.001 1268.92,681.435 1269.6,686.694 1270.27,685.281 1270.95,687.234 1271.62,664.799 1272.3,666.967 1272.97,672.76 1273.65,677.597 1274.32,659.606 1275,660.162 1275.67,612.939 1276.35,570.851 1277.02,579.548 1277.7,567.972 1278.37,571.456 1279.05,539.089 1279.72,569.952 1280.4,553.222 1281.07,582.223 1281.75,560.225 1282.42,588.969 1283.1,599.677 1283.77,625.83 1284.45,627.43 1285.12,609.81 1285.8,595.773 1286.47,625.398 1287.15,633.55 1287.82,660.673 1288.5,645.775 1289.17,627.778 1289.85,673.68 1290.52,698.72 1291.2,660.479 1291.87,704.187 1292.55,683.567 1293.22,683.103 1293.9,684.905 1294.57,705.713 1295.25,666.182 1295.92,648.96 1296.6,632.165 1297.27,613.366 1297.95,597.435 1298.62,579.988 1299.3,611.89 1299.97,594.305 1300.65,598.774 1301.32,622.039 1302,651.091 1302.67,673.05 1303.35,713.438 1304.02,694.886 1304.7,697.251 1305.37,762.465 1306.05,734.428 1306.72,712.846 1307.4,709.925 1308.07,706.535 1308.75,727.151 1309.42,708.634 1310.1,665.995 1310.77,694.361 1311.45,717.183 1312.12,713.719 1312.8,692.262 1313.47,714.693 1314.15,741.947 1314.82,721.221 1315.5,768.144 1316.17,724.965 1316.85,745.943 1317.52,765.553 1318.2,783.954 1318.87,720.527 1319.55,630.628 1320.22,619.001 1320.9,649.887 1321.57,629.885 1322.25,631.562 1322.92,637.276 1323.6,622.55 1324.27,627.021 1324.95,633.439 1325.62,664.419 1326.3,624.842 1326.97,650.424 1327.65,650.707 1328.32,652.581 1329,721.533 1329.67,738.499 1330.35,780.27 1331.02,776.686 1331.7,756.96 1332.37,757.665 1333.05,732.685 1333.72,752.539 1334.4,765.62 1335.07,741.879 1335.75,736.242 1336.42,760.14 1337.1,760.373 1337.77,780.059 1338.45,777.194 1339.12,771.194 1339.8,748.248 1340.47,679.383 1341.15,724.796 1341.82,724.72 1342.5,745.269 1343.17,681.2 1343.85,682.377 1344.52,686.672 1345.2,731.475 1345.87,729.082 1346.55,663.293 1347.22,684.803 1347.9,684.085 1348.57,688.239 1349.25,694.773 1349.92,674.354 1350.6,719.481 1351.27,741.132 1351.95,737.649 1352.62,691.35 1353.3,710.248 1353.97,736.372 1354.65,778.794 1355.32,754.951 1356,817.344 1356.67,793.532 1357.35,856.19 1358.02,803.171 1358.7,776.026 1359.37,794.724 1360.05,769.394 1360.72,765.818 1361.4,743.844 1362.07,679.881 1362.75,678.328 1363.42,653.826 1364.1,637.467 1364.77,659.397 1365.45,664.055 1366.12,692.598 1366.8,691.375 1367.47,717.894 1368.15,715.774 1368.82,761.015 1369.5,760.172 1370.17,759.673 1370.85,754.853 1371.52,709.645 1372.2,749.193 1372.87,765.226 1373.55,789.293 1374.22,763.408 1374.9,739.992 1375.57,760.03 1376.25,752.407 1376.92,751.229 1377.6,729.496 1378.27,747.934 1378.95,723.837 1379.62,719.928 1380.3,674.019 1380.97,632.947 1381.65,656.547 1382.32,661.343 1383,657.362 1383.67,637.166 1384.35,597.614 1385.02,602.603 1385.7,605.042 1386.37,615.807 1387.05,618.988 1387.72,625.256 1388.4,631.008 1389.07,634.345 1389.75,678.885 1390.42,678.372 1391.1,661.062 1391.77,705.764 1392.45,729.709 1393.12,750.558 1393.8,788.398 1394.47,763.916 1395.15,788.873 1395.82,806.974 1396.5,817.859 1397.17,793.922 1397.85,791.558 1398.52,784.754 1399.2,759.415 1399.87,729.89 1400.55,683.49 1401.22,682.765 1401.9,662.74 1402.57,687.555 1403.25,709.9 1403.92,774.085 1404.6,768.009 1405.27,761.679 1405.95,734.884 1406.62,750.339 1407.3,747.847 1407.97,742.61 1408.65,694.398 1409.32,718.216 1410,714.985 1410.67,710.615 1411.35,729.153 1412.02,728.992 1412.7,725.406 1413.37,749.782 1414.05,705.846 1414.72,725.163 1415.4,704.17 1416.07,706.527 1416.75,754.351 1417.42,750.815 1418.1,683.791 1418.77,703.932 1419.45,697.688 1420.12,699.777 1420.8,739.663 1421.47,715.184 1422.15,712.204 1422.82,715.658 1423.5,671.194 1424.17,671.751 1424.85,693.096 1425.52,672.249 1426.2,630.551 1426.87,610.798 1427.55,596.097 1428.22,620.141 1428.9,650.821 1429.57,655.878 1430.25,592.33 1430.92,598.357 1431.6,562.69 1432.27,548.136 1432.95,551.942 1433.62,559.241 1434.3,519.977 1434.97,560.013 1435.65,541.889 1436.32,552.441 1437,582.156 1437.67,639.27 1438.35,685.949 1439.02,665.549 1439.7,690.059 1440.37,670.182 1441.05,715.074 1441.72,672.881 1442.4,671.452 1443.07,718.666 1443.75,719.684 1444.42,676.585 1445.1,694.992 1445.77,699.212 1446.45,695.249 1447.12,695.648 1447.8,716.715 1448.47,716.25 1449.15,715.658 1449.82,708.722 1450.5,723.876 1451.17,721.349 1451.85,700.22 1452.52,638.255 1453.2,665.008 1453.87,651.554 1454.55,653.144 1455.22,697.989 1455.9,697.228 1456.57,719.921 1457.25,779.452 1457.92,752.654 1458.6,748.096 1459.27,723.48 1459.95,724.844 1460.62,680.117 1461.3,682.722 1461.97,665.107 1462.65,707.904 1463.32,684.507 1464,666.841 1464.67,666.384 1465.35,650.35 1466.02,673.008 1466.7,676.402 1467.37,676.596 1468.05,651.641 1468.72,674.983 1469.4,654.193 1470.07,658.054 1470.75,664.559 1471.42,672.551 1472.1,698.938 1472.77,722.782 1473.45,695.876 1474.12,698.655 1474.8,722.413 1475.47,745.394 1476.15,698.344 1476.82,724.626 1477.5,746.284 1478.17,743.534 1478.85,720.697 1479.52,785.593 1480.2,782.982 1480.87,712.863 1481.55,689.872 1482.22,714.579 1482.9,715.742 1483.57,716.783 1484.25,694.907 1484.92,715.316 1485.6,718.631 1486.27,736.972 1486.95,777.383 1487.62,750.165 1488.3,791.112 1488.97,804.135 1489.65,845.486 1490.32,837.474 1491,789.159 1491.67,760.908 1492.35,801.718 1493.02,795.677 1493.7,832.797 1494.37,805.627 1495.05,800.647 1495.72,751.835 1496.4,684.632 1497.07,642.663 1497.75,624.827 1498.42,612.786 1499.1,575.063 1499.77,640.875 1500.45,624.318 1501.12,672.199 1501.8,700.212 1502.47,703.217 1503.15,702.367 1503.82,682.945 1504.5,642.979 1505.17,648.191 1505.85,630.885 1506.52,615.697 1507.2,647.235 1507.87,605.578 1508.55,587.224 1509.23,639.654 1509.9,621.852 1510.58,582.527 1511.25,612.072 1511.93,640.691 1512.6,644.002 1513.28,648.808 1513.95,629.399 1514.63,611.328 1515.3,638.822 1515.98,682.147 1516.65,622.616 1517.33,647.61 1518,693.778 1518.68,674.516 1519.35,670.009 1520.03,628.32 1520.7,631.74 1521.38,632.334 1522.05,614.251 1522.73,617.355 1523.4,603.798 1524.08,673.437 1524.75,657.384 1525.43,705.488 1526.1,725.484 1526.78,707.577 1527.45,730.662 1528.13,774.857 1528.8,793.024 1529.48,721.374 1530.15,724.767 1530.83,769.368 1531.5,725.071 1532.18,746.911 1532.85,740.925 1533.53,735.14 1534.2,731.475 1534.88,707.089 1535.55,749.839 1536.23,739.813 1536.9,713.19 1537.58,672.56 1538.25,698.081 1538.93,700.057 1539.6,679.814 1540.28,677.537 1540.95,676.054 1541.63,652.337 1542.3,613.453 1542.98,572.144 1543.65,621.151 1544.33,583.766 1545,611.917 1545.68,620.152 1546.35,621.961 1547.03,623.98 1547.7,632.79 1548.38,637.598 1549.05,553.584 1549.73,562.398 1550.4,571.668 1551.08,622.746 1551.75,628.868 1552.43,628.144 1553.1,610.026 1553.78,635.626 1554.45,640.11 1555.13,688.633 1555.8,754.255 1556.48,688.952 1557.15,693.907 1557.83,696.775 1558.5,723.212 1559.18,724.353 1559.85,723.404 1560.53,742.403 1561.2,759.171 1561.88,712.102 1562.55,690.029 1563.23,691.245 1563.9,712.266 1564.58,777.329 1565.25,753.143 1565.93,766.598 1566.6,721.781 1567.28,698.666 1567.95,701.797 1568.63,633.527 1569.3,656.328 1569.98,701.71 1570.65,703.453 1571.33,700.734 1572,724.067 1572.68,702.086 1573.35,678.36 1574.03,703.973 1574.7,708.064 1575.38,709.286 1576.05,707.157 1576.73,728.707 1577.4,752.916 1578.08,839.159 1578.75,803.132 1579.43,834.681 1580.1,892.92 1580.78,926.171 1581.45,932.949 1582.13,881.022 1582.8,828.599 1583.48,800.374 1584.15,754.553 1584.83,753.151 1585.5,752.695 1586.18,745.745 1586.85,760.771 1587.53,739.722 1588.2,715.044 1588.88,756.579 1589.55,730.167 1590.23,707.236 1590.9,704.198 1591.58,729.082 1592.25,800.541 1592.93,752.688 1593.6,727.732 1594.28,680.697 1594.95,728.143 1595.63,705.941 1596.3,728.848 1596.98,728.61 1597.65,707.057 1598.33,686.581 1599,707.909 1599.68,730.8 1600.35,730.2 1601.03,665.434 1601.7,727.692 1602.38,749.91 1603.05,765.23 1603.73,783.323 1604.4,779.78 1605.08,776.101 1605.75,777.087 1606.43,777.036 1607.1,776.259 1607.78,771.707 1608.45,724.478 1609.13,767.327 1609.8,766.695 1610.48,764.677 1611.15,757.147 1611.83,730.695 1612.5,726.826 1613.18,700.203 1613.85,702.157 1614.53,701.745 1615.2,722.954 1615.88,765.04 1616.55,716.417 1617.23,672.683 1617.9,676.049 1618.58,678.602 1619.25,664.038 1619.93,666.701 1620.6,690.263 1621.28,690.849 1621.95,714.746 1622.63,670.721 1623.3,675.364 1623.98,673.642 1624.65,673.703 1625.33,700.166 1626,723.266 1626.68,745.355 1627.35,743.059 1628.03,719.365 1628.7,723.115 1629.38,720.957 1630.05,742.96 1630.73,745.528 1631.4,705.033 1632.08,753.312 1632.75,772.379 1633.43,789.365 1634.1,785.542 1634.78,759.15 1635.45,776.079 1636.13,794.64 1636.8,769.299 1637.48,767.126 1638.15,783.043 1638.83,795.274 1639.5,767.811 1640.18,740.48 1640.85,758.115 1641.53,779.403 1642.2,752.47 1642.88,775.791 1643.55,819.409 1644.23,812.304 1644.9,847.749 1645.58,818.775 1646.25,794.566 1646.93,749.842 1647.6,747.695 1648.28,743.261 1648.95,740.395 1649.63,696.927 1650.3,696.56 1650.98,673.392 1651.65,757.156 1652.33,778.177 1653,776.026 1653.68,752.903 1654.35,724.652 1655.03,743.311 1655.7,765.245 1656.38,755.373 1657.05,796.921 1657.73,790.829 1658.4,767.494 1659.08,785.311 1659.75,757.919 1660.43,818.162 1661.1,721.781 1661.78,722.896 1662.45,722.937 1663.13,700.154 1663.8,762.047 1664.48,808.856 1665.15,781.958 1665.83,778.766 1666.5,771.634 1667.18,729.915 1667.85,708.797 1668.53,711.227 1669.2,693.126 1669.88,675.381 1670.55,654.015 1671.23,701.212 1671.9,700.511 1672.58,745.638 1673.25,701.788 1673.93,747.354 1674.6,748.862 1675.28,726.609 1675.95,753.702 1676.63,728.27 1677.3,704.594 1677.98,640.749 1678.65,576.477 1679.33,646.852 1680,627.463 1680.68,569.926 1681.35,552.01 1682.03,516.627 1682.7,527.048 1683.38,558.509 1684.05,566.002 1684.73,592.421 1685.4,600.528 1686.08,560.645 1686.75,545.837 1687.43,571.386 1688.1,534.115 1688.78,568.805 1689.45,622.551 1690.13,540.333 1690.8,552.872 1691.48,560.777 1692.15,545.238 1692.83,534.568 1693.5,522.776 1694.18,536.011 1694.85,526.17 1695.53,554.609 1696.2,565.286 1696.88,546.104 1697.55,558.292 1698.23,609.089 1698.9,636.637 1699.58,617.825 1700.25,603.683 1700.93,608.691 1701.6,611.6 1702.28,680.844 1702.95,682.243 1703.63,665.878 1704.3,663.8 1704.98,684.034 1705.65,663.674 1706.33,684.324 1707,637.068 1707.68,642.707 1708.35,645.34 1709.03,675 1709.7,654.48 1710.38,676.54 1711.05,655.561 1711.73,703.081 1712.4,702.591 1713.08,719.926 1713.75,721.656 1714.43,738.552 1715.1,717.358 1715.78,742.396 1716.45,719.544 1717.13,719.051 1717.8,722.198 1718.48,720.55 1719.15,676.871 1719.83,700.238 1720.5,703.288 1721.18,682.908 1721.85,686.74 1722.53,688.807 1723.2,670.157 1723.88,692.578 1724.55,692.066 1725.23,713.687 1725.9,713.254 1726.58,710.478 1727.25,735.168 1727.93,717.208 1728.6,714.236 1729.28,730.743 1729.95,728.648 1730.63,767.204 1731.3,762.098 1731.98,739.268 1732.65,799.312 1733.33,797.697 1734,796.334 1734.68,836.417 1735.35,809.476 1736.03,766.027 1736.7,718.134 1737.38,654.763 1738.05,699.533 1738.73,743.006 1739.4,789.516 1740.08,785.253 1740.75,825.371 1741.43,836.807 1742.1,830.656 1742.78,775.964 1743.45,731.382 1744.13,754.182 1744.8,753.202 1745.48,727.048 1746.15,682.202 1746.83,660.473 1747.5,687.917 1748.18,709.607 1748.85,731.997 1749.53,665.352 1750.2,645.349 1750.88,632.687 1751.55,654.694 1752.23,701.617 1752.9,708.383 1753.58,733.543 1754.25,749.414 1754.93,767.284 1755.6,748.491 1756.28,699.5 1756.95,719.598 1757.63,746.235 1758.3,720.585 1758.98,761.097 1759.65,737.487 1760.33,752.547 1761,771.234 1761.68,791.715 1762.35,783.494 1763.03,777.547 1763.7,819.279 1764.38,859.868 1765.05,849.856 1765.73,839.135 1766.4,850.007 1767.08,819.008 1767.75,812.093 1768.43,806.756 1769.1,735.151 1769.78,757.881 1770.45,759.146 1771.13,757.073 1771.8,756.649 1772.48,780.06 1773.15,819.515 1773.83,814.992 1774.5,834.082 1775.18,809.286 1775.85,804.1 1776.53,775.949 1777.2,816.723 1777.88,791.383 1778.55,785.223 1779.23,780.377 1779.9,772.671 1780.58,747.974 1781.25,812.521 1781.93,835.702 1782.6,873.009 1783.28,905.72 1783.95,873.075 1784.63,867.104 1785.3,838.735 1785.98,858.393 1786.65,804.855 1787.33,799.804 1788,776.692 1788.68,796.495 1789.35,748.775 1790.03,743.836 1790.7,737.674 1791.38,713.731 1792.05,736.105 1792.73,772.592 1793.4,767.717 1794.08,764.559 1794.75,718.402 1795.43,715.723 1796.1,696.968 1796.78,678.966 1797.45,661.952 1798.13,684.819 1798.8,642.115 1799.48,583.2 1800.15,611.211 1800.83,593.124 1801.5,596.911 1802.18,581.649 1802.85,584.75 1803.53,567.473 1804.2,531.698 1804.88,513.515 1805.55,505.417 1806.23,508.228 1806.9,448.288 1807.58,442.715 1808.25,434.881 1808.93,450.344 1809.6,461.979 1810.28,497.502 1810.95,512.558 1811.63,517.637 1812.3,571.561 1812.98,555.606 1813.65,563.885 1814.33,596.148 1815,603.557 1815.68,566.802 1816.35,529.659 1817.03,519.569 1817.7,553.286 1818.38,585.383 1819.05,611.905 1819.73,662.424 1820.4,731.373 1821.08,710.677 1821.75,711.394 1822.43,713.407 1823.1,734.016 1823.78,734.666 1824.45,708.536 1825.13,747.05 1825.8,762.114 1826.48,782.425 1827.15,757.432 1827.83,754.872 1828.5,778.955 1829.18,799.357 1829.85,815.739 1830.53,809.631 1831.2,822.05 1831.88,821.138 1832.55,794.577 1833.23,743.767 1833.9,741.811 1834.58,761.243 1835.25,761.247 1835.93,758.652 1836.6,798.714 1837.28,812.65 1837.95,834.134 1838.63,807.281 1839.3,756.114 1839.98,752.142 1840.65,794.493 1841.33,791.023 1842,829.306 1842.68,825.957 1843.35,818.809 1844.03,748.897 1844.7,725.36 1845.38,749.624 1846.05,749.643 1846.73,814.501 1847.4,807.289 1848.08,823.716 1848.75,795.324 1849.43,767.172 1850.1,717.758 1850.78,699.084 1851.45,701.867 1852.13,722.563 1852.8,742.275 1853.48,764.04 1854.15,787.191 1854.83,738.23 1855.5,676.292 1856.18,635.061 1856.85,637.268 1857.53,618.869 1858.2,644.449 1858.88,649.121 1859.55,671.608 1860.23,655.58 1860.9,658.942 1861.58,640.77 1862.25,644.565 1862.93,581.973 1863.6,566.373 1864.28,574.199 1864.95,576.227 1865.63,558.832 1866.3,587.651 1866.98,635.003 1867.65,635.41 1868.33,723.873 1869,767.446 1869.68,802.36 1870.35,751.786 1871.03,751.172 1871.7,732.857 1872.38,712.273 1873.05,716.084 1873.73,735.792 1874.4,714.342 1875.08,716.536 1875.75,738.941 1876.43,691.788 1877.1,712.554 1877.78,773.027 1878.45,745.475 1879.13,741.701 1879.8,743.51 1880.48,780.091 1881.15,774.664 1881.83,754.428 1882.5,730.142 1883.18,731.068 1883.85,707.629 1884.53,664.063 1885.2,642.388 1885.88,603.665 1886.55,675.459 1887.23,676.778 1887.9,717.592 1888.58,697.883 1889.25,634.11 1889.93,635.364 1890.6,615.053 1891.28,623.341 1891.95,631.161 1892.63,634.587 1893.3,591.926 1893.98,597.896 1894.65,643.068 1895.33,644.782 1896,645.788 1896.68,650.132 1897.35,651.121 1898.03,630.802 1898.7,655.841 1899.38,685.434 1900.05,708.563 1900.73,717.184 1901.4,696.347 1902.08,675.596 1902.75,700.753 \"/>\n<path clip-path=\"url(#clip603)\" d=\"M553.418 718.082 L554.093 718.082 L554.768 718.082 L555.443 718.082 L556.118 718.082 L556.793 718.082 L557.468 718.082 L558.143 718.082 L558.818 718.082 L559.493 718.082 L560.168 718.082 L560.843 718.082 L561.518 718.082 L562.193 718.082 L562.868 718.082 L563.543 718.082 L564.218 718.082 L564.893 718.082 L565.568 718.082 L566.243 718.082 L566.918 718.082 L567.593 718.082 L568.268 718.082 L568.943 718.082 L569.618 718.082 L570.293 718.082 L570.968 718.082 L571.643 718.082 L572.318 718.082 L572.993 718.082 L573.668 718.082 L574.343 718.082 L575.018 718.082 L575.693 718.082 L576.368 718.082 L577.043 718.082 L577.718 718.082 L578.393 718.082 L579.068 718.082 L579.743 718.082 L580.419 718.082 L581.094 718.082 L581.769 718.082 L582.444 718.082 L583.119 718.082 L583.794 718.082 L584.469 718.082 L585.144 718.082 L585.819 718.082 L586.494 718.082 L587.169 718.082 L587.844 718.082 L588.519 718.082 L589.194 718.082 L589.869 718.082 L590.544 718.082 L591.219 718.082 L591.894 718.082 L592.569 718.082 L593.244 718.082 L593.919 718.082 L594.594 718.082 L595.269 718.082 L595.944 718.082 L596.619 718.082 L597.294 718.082 L597.969 718.082 L598.644 718.082 L599.319 718.082 L599.994 718.082 L600.669 718.082 L601.344 718.082 L602.019 718.082 L602.694 718.082 L603.369 718.082 L604.044 718.082 L604.719 718.082 L605.394 718.082 L606.069 718.082 L606.744 718.082 L607.419 718.082 L608.094 718.082 L608.769 718.082 L609.444 718.082 L610.119 718.082 L610.794 718.082 L611.469 718.082 L612.144 718.082 L612.819 718.082 L613.494 718.082 L614.169 718.082 L614.844 718.082 L615.519 718.082 L616.194 718.082 L616.869 718.082 L617.544 718.082 L618.219 718.082 L618.894 718.082 L619.569 718.082 L620.244 718.082 L620.919 718.082 L621.594 718.082 L622.269 718.082 L622.944 718.082 L623.619 718.082 L624.294 718.082 L624.969 718.082 L625.644 718.082 L626.319 718.082 L626.994 718.082 L627.669 718.082 L628.344 718.082 L629.019 718.082 L629.694 718.082 L630.369 718.082 L631.044 718.082 L631.719 718.082 L632.394 718.082 L633.069 718.082 L633.744 718.082 L634.419 718.082 L635.094 718.082 L635.769 718.082 L636.444 718.082 L637.119 718.082 L637.794 718.082 L638.469 718.082 L639.144 718.082 L639.819 718.082 L640.494 718.082 L641.169 718.082 L641.844 718.082 L642.519 718.082 L643.194 718.082 L643.869 718.082 L644.544 718.082 L645.219 718.082 L645.894 718.082 L646.569 718.082 L647.244 718.082 L647.919 718.082 L648.594 718.082 L649.269 718.082 L649.944 718.082 L650.619 718.082 L651.294 718.082 L651.969 718.082 L652.644 718.082 L653.319 718.082 L653.994 718.082 L654.669 718.082 L655.344 718.082 L656.019 718.082 L656.694 718.082 L657.369 718.082 L658.044 718.082 L658.719 718.082 L659.394 718.082 L660.069 718.082 L660.744 718.082 L661.419 718.082 L662.094 718.082 L662.769 718.082 L663.444 718.082 L664.119 718.082 L664.794 718.082 L665.469 718.082 L666.144 718.082 L666.819 718.082 L667.494 718.082 L668.169 718.082 L668.844 718.082 L669.519 718.082 L670.194 718.082 L670.869 718.082 L671.544 718.082 L672.219 718.082 L672.894 718.082 L673.569 718.082 L674.244 718.082 L674.919 718.082 L675.594 718.082 L676.269 718.082 L676.944 718.082 L677.619 718.082 L678.294 718.082 L678.969 718.082 L679.644 718.082 L680.319 718.082 L680.994 718.082 L681.669 718.082 L682.344 718.082 L683.019 718.082 L683.694 718.082 L684.369 718.082 L685.044 718.082 L685.719 718.082 L686.394 718.082 L687.069 718.082 L687.744 718.082 L688.419 718.082 L689.094 718.082 L689.769 718.082 L690.444 718.082 L691.119 718.082 L691.794 718.082 L692.469 718.082 L693.144 718.082 L693.819 718.082 L694.494 718.082 L695.169 718.082 L695.844 718.082 L696.519 718.082 L697.194 718.082 L697.869 718.082 L698.544 718.082 L699.219 718.082 L699.894 718.082 L700.569 718.082 L701.244 718.082 L701.919 718.082 L702.594 718.082 L703.269 718.082 L703.944 718.082 L704.619 718.082 L705.294 718.082 L705.969 718.082 L706.644 718.082 L707.319 718.082 L707.994 718.082 L708.669 718.082 L709.344 718.082 L710.019 718.082 L710.694 718.082 L711.369 718.082 L712.044 718.082 L712.719 718.082 L713.394 718.082 L714.069 718.082 L714.744 718.082 L715.419 718.082 L716.094 718.082 L716.769 718.082 L717.444 718.082 L718.119 718.082 L718.794 718.082 L719.469 718.082 L720.144 718.082 L720.819 718.082 L721.494 718.082 L722.169 718.082 L722.844 718.082 L723.52 718.082 L724.195 718.082 L724.87 718.082 L725.545 718.082 L726.22 718.082 L726.895 718.082 L727.57 718.082 L728.245 718.082 L728.92 718.082 L729.595 718.082 L730.27 718.082 L730.945 718.082 L731.62 718.082 L732.295 718.082 L732.97 718.082 L733.645 718.082 L734.32 718.082 L734.995 718.082 L735.67 718.082 L736.345 718.082 L737.02 718.082 L737.695 718.082 L738.37 718.082 L739.045 718.082 L739.72 718.082 L740.395 718.082 L741.07 718.082 L741.745 718.082 L742.42 718.082 L743.095 718.082 L743.77 718.082 L744.445 718.082 L745.12 718.082 L745.795 718.082 L746.47 718.082 L747.145 718.082 L747.82 718.082 L748.495 718.082 L749.17 718.082 L749.845 718.082 L750.52 718.082 L751.195 718.082 L751.87 718.082 L752.545 718.082 L753.22 718.082 L753.895 718.082 L754.57 718.082 L755.245 718.082 L755.92 718.082 L756.595 718.082 L757.27 718.082 L757.945 718.082 L758.62 718.082 L759.295 718.082 L759.97 718.082 L760.645 718.082 L761.32 718.082 L761.995 718.082 L762.67 718.082 L763.345 718.082 L764.02 718.082 L764.695 718.082 L765.37 718.082 L766.045 718.082 L766.72 718.082 L767.395 718.082 L768.07 718.082 L768.745 718.082 L769.42 718.082 L770.095 718.082 L770.77 718.082 L771.445 718.082 L772.12 718.082 L772.795 718.082 L773.47 718.082 L774.145 718.082 L774.82 718.082 L775.495 718.082 L776.17 718.082 L776.845 718.082 L777.52 718.082 L778.195 718.082 L778.87 718.082 L779.545 718.082 L780.22 718.082 L780.895 718.082 L781.57 718.082 L782.245 718.082 L782.92 718.082 L783.595 718.082 L784.27 718.082 L784.945 718.082 L785.62 718.082 L786.295 718.082 L786.97 718.082 L787.645 718.082 L788.32 718.082 L788.995 718.082 L789.67 718.082 L790.345 718.082 L791.02 718.082 L791.695 718.082 L792.37 718.082 L793.045 718.082 L793.72 718.082 L794.395 718.082 L795.07 718.082 L795.745 718.082 L796.42 718.082 L797.095 718.082 L797.77 718.082 L798.445 718.082 L799.12 718.082 L799.795 718.082 L800.47 718.082 L801.145 718.082 L801.82 718.082 L802.495 718.082 L803.17 718.082 L803.845 718.082 L804.52 718.082 L805.195 718.082 L805.87 718.082 L806.545 718.082 L807.22 718.082 L807.895 718.082 L808.57 718.082 L809.245 718.082 L809.92 718.082 L810.595 718.082 L811.27 718.082 L811.945 718.082 L812.62 718.082 L813.295 718.082 L813.97 718.082 L814.645 718.082 L815.32 718.082 L815.995 718.082 L816.67 718.082 L817.345 718.082 L818.02 718.082 L818.695 718.082 L819.37 718.082 L820.045 718.082 L820.72 718.082 L821.395 718.082 L822.07 718.082 L822.745 718.082 L823.42 718.082 L824.095 718.082 L824.77 718.082 L825.445 718.082 L826.12 718.082 L826.795 718.082 L827.47 718.082 L828.145 718.082 L828.82 718.082 L829.495 718.082 L830.17 718.082 L830.845 718.082 L831.52 718.082 L832.195 718.082 L832.87 718.082 L833.545 718.082 L834.22 718.082 L834.895 718.082 L835.57 718.082 L836.245 718.082 L836.92 718.082 L837.595 718.082 L838.27 718.082 L838.945 718.082 L839.62 718.082 L840.295 718.082 L840.97 718.082 L841.645 718.082 L842.32 718.082 L842.995 718.082 L843.67 718.082 L844.345 718.082 L845.02 718.082 L845.695 718.082 L846.37 718.082 L847.045 718.082 L847.72 718.082 L848.395 718.082 L849.07 718.082 L849.745 718.082 L850.42 718.082 L851.095 718.082 L851.77 718.082 L852.445 718.082 L853.12 718.082 L853.795 718.082 L854.47 718.082 L855.145 718.082 L855.82 718.082 L856.495 718.082 L857.17 718.082 L857.845 718.082 L858.52 718.082 L859.195 718.082 L859.87 718.082 L860.545 718.082 L861.22 718.082 L861.895 718.082 L862.57 718.082 L863.245 718.082 L863.92 718.082 L864.595 718.082 L865.27 718.082 L865.945 718.082 L866.621 718.082 L867.296 718.082 L867.971 718.082 L868.646 718.082 L869.321 718.082 L869.996 718.082 L870.671 718.082 L871.346 718.082 L872.021 718.082 L872.696 718.082 L873.371 718.082 L874.046 718.082 L874.721 718.082 L875.396 718.082 L876.071 718.082 L876.746 718.082 L877.421 718.082 L878.096 718.082 L878.771 718.082 L879.446 718.082 L880.121 718.082 L880.796 718.082 L881.471 718.082 L882.146 718.082 L882.821 718.082 L883.496 718.082 L884.171 718.082 L884.846 718.082 L885.521 718.082 L886.196 718.082 L886.871 718.082 L887.546 718.082 L888.221 718.082 L888.896 718.082 L889.571 718.082 L890.246 718.082 L890.921 718.082 L891.596 718.082 L892.271 718.082 L892.946 718.082 L893.621 718.082 L894.296 718.082 L894.971 718.082 L895.646 718.082 L896.321 718.082 L896.996 718.082 L897.671 718.082 L898.346 718.082 L899.021 718.082 L899.696 718.082 L900.371 718.082 L901.046 718.082 L901.721 718.082 L902.396 718.082 L903.071 718.082 L903.746 718.082 L904.421 718.082 L905.096 718.082 L905.771 718.082 L906.446 718.082 L907.121 718.082 L907.796 718.082 L908.471 718.082 L909.146 718.082 L909.821 718.082 L910.496 718.082 L911.171 718.082 L911.846 718.082 L912.521 718.082 L913.196 718.082 L913.871 718.082 L914.546 718.082 L915.221 718.082 L915.896 718.082 L916.571 718.082 L917.246 718.082 L917.921 718.082 L918.596 718.082 L919.271 718.082 L919.946 718.082 L920.621 718.082 L921.296 718.082 L921.971 718.082 L922.646 718.082 L923.321 718.082 L923.996 718.082 L924.671 718.082 L925.346 718.082 L926.021 718.082 L926.696 718.082 L927.371 718.082 L928.046 718.082 L928.721 718.082 L929.396 718.082 L930.071 718.082 L930.746 718.082 L931.421 718.082 L932.096 718.082 L932.771 718.082 L933.446 718.082 L934.121 718.082 L934.796 718.082 L935.471 718.082 L936.146 718.082 L936.821 718.082 L937.496 718.082 L938.171 718.082 L938.846 718.082 L939.521 718.082 L940.196 718.082 L940.871 718.082 L941.546 718.082 L942.221 718.082 L942.896 718.082 L943.571 718.082 L944.246 718.082 L944.921 718.082 L945.596 718.082 L946.271 718.082 L946.946 718.082 L947.621 718.082 L948.296 718.082 L948.971 718.082 L949.646 718.082 L950.321 718.082 L950.996 718.082 L951.671 718.082 L952.346 718.082 L953.021 718.082 L953.696 718.082 L954.371 718.082 L955.046 718.082 L955.721 718.082 L956.396 718.082 L957.071 718.082 L957.746 718.082 L958.421 718.082 L959.096 718.082 L959.771 718.082 L960.446 718.082 L961.121 718.082 L961.796 718.082 L962.471 718.082 L963.146 718.082 L963.821 718.082 L964.496 718.082 L965.171 718.082 L965.846 718.082 L966.521 718.082 L967.196 718.082 L967.871 718.082 L968.546 718.082 L969.221 718.082 L969.896 718.082 L970.571 718.082 L971.246 718.082 L971.921 718.082 L972.596 718.082 L973.271 718.082 L973.946 718.082 L974.621 718.082 L975.296 718.082 L975.971 718.082 L976.646 718.082 L977.321 718.082 L977.996 718.082 L978.671 718.082 L979.346 718.082 L980.021 718.082 L980.696 718.082 L981.371 718.082 L982.046 718.082 L982.721 718.082 L983.396 718.082 L984.071 718.082 L984.746 718.082 L985.421 718.082 L986.096 718.082 L986.771 718.082 L987.446 718.082 L988.121 718.082 L988.796 718.082 L989.471 718.082 L990.146 718.082 L990.821 718.082 L991.496 718.082 L992.171 718.082 L992.846 718.082 L993.521 718.082 L994.196 718.082 L994.871 718.082 L995.546 718.082 L996.221 718.082 L996.896 718.082 L997.571 718.082 L998.246 718.082 L998.921 718.082 L999.596 718.082 L1000.27 718.082 L1000.95 718.082 L1001.62 718.082 L1002.3 718.082 L1002.97 718.082 L1003.65 718.082 L1004.32 718.082 L1005 718.082 L1005.67 718.082 L1006.35 718.082 L1007.02 718.082 L1007.7 718.082 L1008.37 718.082 L1009.05 718.082 L1009.72 718.082 L1010.4 718.082 L1011.07 718.082 L1011.75 718.082 L1012.42 718.082 L1013.1 718.082 L1013.77 718.082 L1014.45 718.082 L1015.12 718.082 L1015.8 718.082 L1016.47 718.082 L1017.15 718.082 L1017.82 718.082 L1018.5 718.082 L1019.17 718.082 L1019.85 718.082 L1020.52 718.082 L1021.2 718.082 L1021.87 718.082 L1022.55 718.082 L1023.22 718.082 L1023.9 718.082 L1024.57 718.082 L1025.25 718.082 L1025.92 718.082 L1026.6 718.082 L1027.27 718.082 L1027.95 718.082 L1028.62 718.082 L1029.3 718.082 L1029.97 718.082 L1030.65 718.082 L1031.32 718.082 L1032 718.082 L1032.67 718.082 L1033.35 718.082 L1034.02 718.082 L1034.7 718.082 L1035.37 718.082 L1036.05 718.082 L1036.72 718.082 L1037.4 718.082 L1038.07 718.082 L1038.75 718.082 L1039.42 718.082 L1040.1 718.082 L1040.77 718.082 L1041.45 718.082 L1042.12 718.082 L1042.8 718.082 L1043.47 718.082 L1044.15 718.082 L1044.82 718.082 L1045.5 718.082 L1046.17 718.082 L1046.85 718.082 L1047.52 718.082 L1048.2 718.082 L1048.87 718.082 L1049.55 718.082 L1050.22 718.082 L1050.9 718.082 L1051.57 718.082 L1052.25 718.082 L1052.92 718.082 L1053.6 718.082 L1054.27 718.082 L1054.95 718.082 L1055.62 718.082 L1056.3 718.082 L1056.97 718.082 L1057.65 718.082 L1058.32 718.082 L1059 718.082 L1059.67 718.082 L1060.35 718.082 L1061.02 718.082 L1061.7 718.082 L1062.37 718.082 L1063.05 718.082 L1063.72 718.082 L1064.4 718.082 L1065.07 718.082 L1065.75 718.082 L1066.42 718.082 L1067.1 718.082 L1067.77 718.082 L1068.45 718.082 L1069.12 718.082 L1069.8 718.082 L1070.47 718.082 L1071.15 718.082 L1071.82 718.082 L1072.5 718.082 L1073.17 718.082 L1073.85 718.082 L1074.52 718.082 L1075.2 718.082 L1075.87 718.082 L1076.55 718.082 L1077.22 718.082 L1077.9 718.082 L1078.57 718.082 L1079.25 718.082 L1079.92 718.082 L1080.6 718.082 L1081.27 718.082 L1081.95 718.082 L1082.62 718.082 L1083.3 718.082 L1083.97 718.082 L1084.65 718.082 L1085.32 718.082 L1086 718.082 L1086.67 718.082 L1087.35 718.082 L1088.02 718.082 L1088.7 718.082 L1089.37 718.082 L1090.05 718.082 L1090.72 718.082 L1091.4 718.082 L1092.07 718.082 L1092.75 718.082 L1093.42 718.082 L1094.1 718.082 L1094.77 718.082 L1095.45 718.082 L1096.12 718.082 L1096.8 718.082 L1097.47 718.082 L1098.15 718.082 L1098.82 718.082 L1099.5 718.082 L1100.17 718.082 L1100.85 718.082 L1101.52 718.082 L1102.2 718.082 L1102.87 718.082 L1103.55 718.082 L1104.22 718.082 L1104.9 718.082 L1105.57 718.082 L1106.25 718.082 L1106.92 718.082 L1107.6 718.082 L1108.27 718.082 L1108.95 718.082 L1109.62 718.082 L1110.3 718.082 L1110.97 718.082 L1111.65 718.082 L1112.32 718.082 L1113 718.082 L1113.67 718.082 L1114.35 718.082 L1115.02 718.082 L1115.7 718.082 L1116.37 718.082 L1117.05 718.082 L1117.72 718.082 L1118.4 718.082 L1119.07 718.082 L1119.75 718.082 L1120.42 718.082 L1121.1 718.082 L1121.77 718.082 L1122.45 718.082 L1123.12 718.082 L1123.8 718.082 L1124.47 718.082 L1125.15 718.082 L1125.82 718.082 L1126.5 718.082 L1127.17 718.082 L1127.85 718.082 L1128.52 718.082 L1129.2 718.082 L1129.87 718.082 L1130.55 718.082 L1131.22 718.082 L1131.9 718.082 L1132.57 718.082 L1133.25 718.082 L1133.92 718.082 L1134.6 718.082 L1135.27 718.082 L1135.95 718.082 L1136.62 718.082 L1137.3 718.082 L1137.97 718.082 L1138.65 718.082 L1139.32 718.082 L1140 718.082 L1140.67 718.082 L1141.35 718.082 L1142.02 718.082 L1142.7 718.082 L1143.37 718.082 L1144.05 718.082 L1144.72 718.082 L1145.4 718.082 L1146.07 718.082 L1146.75 718.082 L1147.42 718.082 L1148.1 718.082 L1148.77 718.082 L1149.45 718.082 L1150.12 718.082 L1150.8 718.082 L1151.47 718.082 L1152.15 718.082 L1152.82 718.082 L1153.5 718.082 L1154.17 718.082 L1154.85 718.082 L1155.52 718.082 L1156.2 718.082 L1156.87 718.082 L1157.55 718.082 L1158.22 718.082 L1158.9 718.082 L1159.57 718.082 L1160.25 718.082 L1160.92 718.082 L1161.6 718.082 L1162.27 718.082 L1162.95 718.082 L1163.62 718.082 L1164.3 718.082 L1164.97 718.082 L1165.65 718.082 L1166.32 718.082 L1167 718.082 L1167.67 718.082 L1168.35 718.082 L1169.02 718.082 L1169.7 718.082 L1170.37 718.082 L1171.05 718.082 L1171.72 718.082 L1172.4 718.082 L1173.07 718.082 L1173.75 718.082 L1174.42 718.082 L1175.1 718.082 L1175.77 718.082 L1176.45 718.082 L1177.12 718.082 L1177.8 718.082 L1178.47 718.082 L1179.15 718.082 L1179.82 718.082 L1180.5 718.082 L1181.17 718.082 L1181.85 718.082 L1182.52 718.082 L1183.2 718.082 L1183.87 718.082 L1184.55 718.082 L1185.22 718.082 L1185.9 718.082 L1186.57 718.082 L1187.25 718.082 L1187.92 718.082 L1188.6 718.082 L1189.27 718.082 L1189.95 718.082 L1190.62 718.082 L1191.3 718.082 L1191.97 718.082 L1192.65 718.082 L1193.32 718.082 L1194 718.082 L1194.67 718.082 L1195.35 718.082 L1196.02 718.082 L1196.7 718.082 L1197.37 718.082 L1198.05 718.082 L1198.72 718.082 L1199.4 718.082 L1200.07 718.082 L1200.75 718.082 L1201.42 718.082 L1202.1 718.082 L1202.77 718.082 L1203.45 718.082 L1204.12 718.082 L1204.8 718.082 L1205.47 718.082 L1206.15 718.082 L1206.82 718.082 L1207.5 718.082 L1208.17 718.082 L1208.85 718.082 L1209.52 718.082 L1210.2 718.082 L1210.87 718.082 L1211.55 718.082 L1212.22 718.082 L1212.9 718.082 L1213.57 718.082 L1214.25 718.082 L1214.92 718.082 L1215.6 718.082 L1216.27 718.082 L1216.95 718.082 L1217.62 718.082 L1218.3 718.082 L1218.97 718.082 L1219.65 718.082 L1220.32 718.082 L1221 718.082 L1221.67 718.082 L1222.35 718.082 L1223.02 718.082 L1223.7 718.082 L1224.37 718.082 L1225.05 718.082 L1225.72 718.082 L1226.4 718.082 L1227.07 718.082 L1227.75 718.082 L1228.42 718.082 L1229.1 718.082 L1229.77 718.082 L1230.45 718.082 L1231.12 718.082 L1231.8 718.082 L1232.47 718.082 L1233.15 718.082 L1233.82 718.082 L1234.5 718.082 L1235.17 718.082 L1235.85 718.082 L1236.52 718.082 L1237.2 718.082 L1237.87 718.082 L1238.55 718.082 L1239.22 718.082 L1239.9 718.082 L1240.57 718.082 L1241.25 718.082 L1241.92 718.082 L1242.6 718.082 L1243.27 718.082 L1243.95 718.082 L1244.62 718.082 L1245.3 718.082 L1245.97 718.082 L1246.65 718.082 L1247.32 718.082 L1248 718.082 L1248.67 718.082 L1249.35 718.082 L1250.02 718.082 L1250.7 718.082 L1251.37 718.082 L1252.05 718.082 L1252.72 718.082 L1253.4 718.082 L1254.07 718.082 L1254.75 718.082 L1255.42 718.082 L1256.1 718.082 L1256.77 718.082 L1257.45 718.082 L1258.12 718.082 L1258.8 718.082 L1259.47 718.082 L1260.15 718.082 L1260.82 718.082 L1261.5 718.082 L1262.17 718.082 L1262.85 718.082 L1263.52 718.082 L1264.2 718.082 L1264.87 718.082 L1265.55 718.082 L1266.22 718.082 L1266.9 718.082 L1267.57 718.082 L1268.25 718.082 L1268.92 718.082 L1269.6 718.082 L1270.27 718.082 L1270.95 718.082 L1271.62 718.082 L1272.3 718.082 L1272.97 718.082 L1273.65 718.082 L1274.32 718.082 L1275 718.082 L1275.67 718.082 L1276.35 718.082 L1277.02 718.082 L1277.7 718.082 L1278.37 718.082 L1279.05 718.082 L1279.72 718.082 L1280.4 718.082 L1281.07 718.082 L1281.75 718.082 L1282.42 718.082 L1283.1 718.082 L1283.77 718.082 L1284.45 718.082 L1285.12 718.082 L1285.8 718.082 L1286.47 718.082 L1287.15 718.082 L1287.82 718.082 L1288.5 718.082 L1289.17 718.082 L1289.85 718.082 L1290.52 718.082 L1291.2 718.082 L1291.87 718.082 L1292.55 718.082 L1293.22 718.082 L1293.9 718.082 L1294.57 718.082 L1295.25 718.082 L1295.92 718.082 L1296.6 718.082 L1297.27 718.082 L1297.95 718.082 L1298.62 718.082 L1299.3 718.082 L1299.97 718.082 L1300.65 718.082 L1301.32 718.082 L1302 718.082 L1302.67 718.082 L1303.35 718.082 L1304.02 718.082 L1304.7 718.082 L1305.37 718.082 L1306.05 718.082 L1306.72 718.082 L1307.4 718.082 L1308.07 718.082 L1308.75 718.082 L1309.42 718.082 L1310.1 718.082 L1310.77 718.082 L1311.45 718.082 L1312.12 718.082 L1312.8 718.082 L1313.47 718.082 L1314.15 718.082 L1314.82 718.082 L1315.5 718.082 L1316.17 718.082 L1316.85 718.082 L1317.52 718.082 L1318.2 718.082 L1318.87 718.082 L1319.55 718.082 L1320.22 718.082 L1320.9 718.082 L1321.57 718.082 L1322.25 718.082 L1322.92 718.082 L1323.6 718.082 L1324.27 718.082 L1324.95 718.082 L1325.62 718.082 L1326.3 718.082 L1326.97 718.082 L1327.65 718.082 L1328.32 718.082 L1329 718.082 L1329.67 718.082 L1330.35 718.082 L1331.02 718.082 L1331.7 718.082 L1332.37 718.082 L1333.05 718.082 L1333.72 718.082 L1334.4 718.082 L1335.07 718.082 L1335.75 718.082 L1336.42 718.082 L1337.1 718.082 L1337.77 718.082 L1338.45 718.082 L1339.12 718.082 L1339.8 718.082 L1340.47 718.082 L1341.15 718.082 L1341.82 718.082 L1342.5 718.082 L1343.17 718.082 L1343.85 718.082 L1344.52 718.082 L1345.2 718.082 L1345.87 718.082 L1346.55 718.082 L1347.22 718.082 L1347.9 718.082 L1348.57 718.082 L1349.25 718.082 L1349.92 718.082 L1350.6 718.082 L1351.27 718.082 L1351.95 718.082 L1352.62 718.082 L1353.3 718.082 L1353.97 718.082 L1354.65 718.082 L1355.32 718.082 L1356 718.082 L1356.67 718.082 L1357.35 718.082 L1358.02 718.082 L1358.7 718.082 L1359.37 718.082 L1360.05 718.082 L1360.72 718.082 L1361.4 718.082 L1362.07 718.082 L1362.75 718.082 L1363.42 718.082 L1364.1 718.082 L1364.77 718.082 L1365.45 718.082 L1366.12 718.082 L1366.8 718.082 L1367.47 718.082 L1368.15 718.082 L1368.82 718.082 L1369.5 718.082 L1370.17 718.082 L1370.85 718.082 L1371.52 718.082 L1372.2 718.082 L1372.87 718.082 L1373.55 718.082 L1374.22 718.082 L1374.9 718.082 L1375.57 718.082 L1376.25 718.082 L1376.92 718.082 L1377.6 718.082 L1378.27 718.082 L1378.95 718.082 L1379.62 718.082 L1380.3 718.082 L1380.97 718.082 L1381.65 718.082 L1382.32 718.082 L1383 718.082 L1383.67 718.082 L1384.35 718.082 L1385.02 718.082 L1385.7 718.082 L1386.37 718.082 L1387.05 718.082 L1387.72 718.082 L1388.4 718.082 L1389.07 718.082 L1389.75 718.082 L1390.42 718.082 L1391.1 718.082 L1391.77 718.082 L1392.45 718.082 L1393.12 718.082 L1393.8 718.082 L1394.47 718.082 L1395.15 718.082 L1395.82 718.082 L1396.5 718.082 L1397.17 718.082 L1397.85 718.082 L1398.52 718.082 L1399.2 718.082 L1399.87 718.082 L1400.55 718.082 L1401.22 718.082 L1401.9 718.082 L1402.57 718.082 L1403.25 718.082 L1403.92 718.082 L1404.6 718.082 L1405.27 718.082 L1405.95 718.082 L1406.62 718.082 L1407.3 718.082 L1407.97 718.082 L1408.65 718.082 L1409.32 718.082 L1410 718.082 L1410.67 718.082 L1411.35 718.082 L1412.02 718.082 L1412.7 718.082 L1413.37 718.082 L1414.05 718.082 L1414.72 718.082 L1415.4 718.082 L1416.07 718.082 L1416.75 718.082 L1417.42 718.082 L1418.1 718.082 L1418.77 718.082 L1419.45 718.082 L1420.12 718.082 L1420.8 718.082 L1421.47 718.082 L1422.15 718.082 L1422.82 718.082 L1423.5 718.082 L1424.17 718.082 L1424.85 718.082 L1425.52 718.082 L1426.2 718.082 L1426.87 718.082 L1427.55 718.082 L1428.22 718.082 L1428.9 718.082 L1429.57 718.082 L1430.25 718.082 L1430.92 718.082 L1431.6 718.082 L1432.27 718.082 L1432.95 718.082 L1433.62 718.082 L1434.3 718.082 L1434.97 718.082 L1435.65 718.082 L1436.32 718.082 L1437 718.082 L1437.67 718.082 L1438.35 718.082 L1439.02 718.082 L1439.7 718.082 L1440.37 718.082 L1441.05 718.082 L1441.72 718.082 L1442.4 718.082 L1443.07 718.082 L1443.75 718.082 L1444.42 718.082 L1445.1 718.082 L1445.77 718.082 L1446.45 718.082 L1447.12 718.082 L1447.8 718.082 L1448.47 718.082 L1449.15 718.082 L1449.82 718.082 L1450.5 718.082 L1451.17 718.082 L1451.85 718.082 L1452.52 718.082 L1453.2 718.082 L1453.87 718.082 L1454.55 718.082 L1455.22 718.082 L1455.9 718.082 L1456.57 718.082 L1457.25 718.082 L1457.92 718.082 L1458.6 718.082 L1459.27 718.082 L1459.95 718.082 L1460.62 718.082 L1461.3 718.082 L1461.97 718.082 L1462.65 718.082 L1463.32 718.082 L1464 718.082 L1464.67 718.082 L1465.35 718.082 L1466.02 718.082 L1466.7 718.082 L1467.37 718.082 L1468.05 718.082 L1468.72 718.082 L1469.4 718.082 L1470.07 718.082 L1470.75 718.082 L1471.42 718.082 L1472.1 718.082 L1472.77 718.082 L1473.45 718.082 L1474.12 718.082 L1474.8 718.082 L1475.47 718.082 L1476.15 718.082 L1476.82 718.082 L1477.5 718.082 L1478.17 718.082 L1478.85 718.082 L1479.52 718.082 L1480.2 718.082 L1480.87 718.082 L1481.55 718.082 L1482.22 718.082 L1482.9 718.082 L1483.57 718.082 L1484.25 718.082 L1484.92 718.082 L1485.6 718.082 L1486.27 718.082 L1486.95 718.082 L1487.62 718.082 L1488.3 718.082 L1488.97 718.082 L1489.65 718.082 L1490.32 718.082 L1491 718.082 L1491.67 718.082 L1492.35 718.082 L1493.02 718.082 L1493.7 718.082 L1494.37 718.082 L1495.05 718.082 L1495.72 718.082 L1496.4 718.082 L1497.07 718.082 L1497.75 718.082 L1498.42 718.082 L1499.1 718.082 L1499.77 718.082 L1500.45 718.082 L1501.12 718.082 L1501.8 718.082 L1502.47 718.082 L1503.15 718.082 L1503.82 718.082 L1504.5 718.082 L1505.17 718.082 L1505.85 718.082 L1506.52 718.082 L1507.2 718.082 L1507.87 718.082 L1508.55 718.082 L1509.23 718.082 L1509.9 718.082 L1510.58 718.082 L1511.25 718.082 L1511.93 718.082 L1512.6 718.082 L1513.28 718.082 L1513.95 718.082 L1514.63 718.082 L1515.3 718.082 L1515.98 718.082 L1516.65 718.082 L1517.33 718.082 L1518 718.082 L1518.68 718.082 L1519.35 718.082 L1520.03 718.082 L1520.7 718.082 L1521.38 718.082 L1522.05 718.082 L1522.73 718.082 L1523.4 718.082 L1524.08 718.082 L1524.75 718.082 L1525.43 718.082 L1526.1 718.082 L1526.78 718.082 L1527.45 718.082 L1528.13 718.082 L1528.8 718.082 L1529.48 718.082 L1530.15 718.082 L1530.83 718.082 L1531.5 718.082 L1532.18 718.082 L1532.85 718.082 L1533.53 718.082 L1534.2 718.082 L1534.88 718.082 L1535.55 718.082 L1536.23 718.082 L1536.9 718.082 L1537.58 718.082 L1538.25 718.082 L1538.93 718.082 L1539.6 718.082 L1540.28 718.082 L1540.95 718.082 L1541.63 718.082 L1542.3 718.082 L1542.98 718.082 L1543.65 718.082 L1544.33 718.082 L1545 718.082 L1545.68 718.082 L1546.35 718.082 L1547.03 718.082 L1547.7 718.082 L1548.38 718.082 L1549.05 718.082 L1549.73 718.082 L1550.4 718.082 L1551.08 718.082 L1551.75 718.082 L1552.43 718.082 L1553.1 718.082 L1553.78 718.082 L1554.45 718.082 L1555.13 718.082 L1555.8 718.082 L1556.48 718.082 L1557.15 718.082 L1557.83 718.082 L1558.5 718.082 L1559.18 718.082 L1559.85 718.082 L1560.53 718.082 L1561.2 718.082 L1561.88 718.082 L1562.55 718.082 L1563.23 718.082 L1563.9 718.082 L1564.58 718.082 L1565.25 718.082 L1565.93 718.082 L1566.6 718.082 L1567.28 718.082 L1567.95 718.082 L1568.63 718.082 L1569.3 718.082 L1569.98 718.082 L1570.65 718.082 L1571.33 718.082 L1572 718.082 L1572.68 718.082 L1573.35 718.082 L1574.03 718.082 L1574.7 718.082 L1575.38 718.082 L1576.05 718.082 L1576.73 718.082 L1577.4 718.082 L1578.08 718.082 L1578.75 718.082 L1579.43 718.082 L1580.1 718.082 L1580.78 718.082 L1581.45 718.082 L1582.13 718.082 L1582.8 718.082 L1583.48 718.082 L1584.15 718.082 L1584.83 718.082 L1585.5 718.082 L1586.18 718.082 L1586.85 718.082 L1587.53 718.082 L1588.2 718.082 L1588.88 718.082 L1589.55 718.082 L1590.23 718.082 L1590.9 718.082 L1591.58 718.082 L1592.25 718.082 L1592.93 718.082 L1593.6 718.082 L1594.28 718.082 L1594.95 718.082 L1595.63 718.082 L1596.3 718.082 L1596.98 718.082 L1597.65 718.082 L1598.33 718.082 L1599 718.082 L1599.68 718.082 L1600.35 718.082 L1601.03 718.082 L1601.7 718.082 L1602.38 718.082 L1603.05 718.082 L1603.73 718.082 L1604.4 718.082 L1605.08 718.082 L1605.75 718.082 L1606.43 718.082 L1607.1 718.082 L1607.78 718.082 L1608.45 718.082 L1609.13 718.082 L1609.8 718.082 L1610.48 718.082 L1611.15 718.082 L1611.83 718.082 L1612.5 718.082 L1613.18 718.082 L1613.85 718.082 L1614.53 718.082 L1615.2 718.082 L1615.88 718.082 L1616.55 718.082 L1617.23 718.082 L1617.9 718.082 L1618.58 718.082 L1619.25 718.082 L1619.93 718.082 L1620.6 718.082 L1621.28 718.082 L1621.95 718.082 L1622.63 718.082 L1623.3 718.082 L1623.98 718.082 L1624.65 718.082 L1625.33 718.082 L1626 718.082 L1626.68 718.082 L1627.35 718.082 L1628.03 718.082 L1628.7 718.082 L1629.38 718.082 L1630.05 718.082 L1630.73 718.082 L1631.4 718.082 L1632.08 718.082 L1632.75 718.082 L1633.43 718.082 L1634.1 718.082 L1634.78 718.082 L1635.45 718.082 L1636.13 718.082 L1636.8 718.082 L1637.48 718.082 L1638.15 718.082 L1638.83 718.082 L1639.5 718.082 L1640.18 718.082 L1640.85 718.082 L1641.53 718.082 L1642.2 718.082 L1642.88 718.082 L1643.55 718.082 L1644.23 718.082 L1644.9 718.082 L1645.58 718.082 L1646.25 718.082 L1646.93 718.082 L1647.6 718.082 L1648.28 718.082 L1648.95 718.082 L1649.63 718.082 L1650.3 718.082 L1650.98 718.082 L1651.65 718.082 L1652.33 718.082 L1653 718.082 L1653.68 718.082 L1654.35 718.082 L1655.03 718.082 L1655.7 718.082 L1656.38 718.082 L1657.05 718.082 L1657.73 718.082 L1658.4 718.082 L1659.08 718.082 L1659.75 718.082 L1660.43 718.082 L1661.1 718.082 L1661.78 718.082 L1662.45 718.082 L1663.13 718.082 L1663.8 718.082 L1664.48 718.082 L1665.15 718.082 L1665.83 718.082 L1666.5 718.082 L1667.18 718.082 L1667.85 718.082 L1668.53 718.082 L1669.2 718.082 L1669.88 718.082 L1670.55 718.082 L1671.23 718.082 L1671.9 718.082 L1672.58 718.082 L1673.25 718.082 L1673.93 718.082 L1674.6 718.082 L1675.28 718.082 L1675.95 718.082 L1676.63 718.082 L1677.3 718.082 L1677.98 718.082 L1678.65 718.082 L1679.33 718.082 L1680 718.082 L1680.68 718.082 L1681.35 718.082 L1682.03 718.082 L1682.7 718.082 L1683.38 718.082 L1684.05 718.082 L1684.73 718.082 L1685.4 718.082 L1686.08 718.082 L1686.75 718.082 L1687.43 718.082 L1688.1 718.082 L1688.78 718.082 L1689.45 718.082 L1690.13 718.082 L1690.8 718.082 L1691.48 718.082 L1692.15 718.082 L1692.83 718.082 L1693.5 718.082 L1694.18 718.082 L1694.85 718.082 L1695.53 718.082 L1696.2 718.082 L1696.88 718.082 L1697.55 718.082 L1698.23 718.082 L1698.9 718.082 L1699.58 718.082 L1700.25 718.082 L1700.93 718.082 L1701.6 718.082 L1702.28 718.082 L1702.95 718.082 L1703.63 718.082 L1704.3 718.082 L1704.98 718.082 L1705.65 718.082 L1706.33 718.082 L1707 718.082 L1707.68 718.082 L1708.35 718.082 L1709.03 718.082 L1709.7 718.082 L1710.38 718.082 L1711.05 718.082 L1711.73 718.082 L1712.4 718.082 L1713.08 718.082 L1713.75 718.082 L1714.43 718.082 L1715.1 718.082 L1715.78 718.082 L1716.45 718.082 L1717.13 718.082 L1717.8 718.082 L1718.48 718.082 L1719.15 718.082 L1719.83 718.082 L1720.5 718.082 L1721.18 718.082 L1721.85 718.082 L1722.53 718.082 L1723.2 718.082 L1723.88 718.082 L1724.55 718.082 L1725.23 718.082 L1725.9 718.082 L1726.58 718.082 L1727.25 718.082 L1727.93 718.082 L1728.6 718.082 L1729.28 718.082 L1729.95 718.082 L1730.63 718.082 L1731.3 718.082 L1731.98 718.082 L1732.65 718.082 L1733.33 718.082 L1734 718.082 L1734.68 718.082 L1735.35 718.082 L1736.03 718.082 L1736.7 718.082 L1737.38 718.082 L1738.05 718.082 L1738.73 718.082 L1739.4 718.082 L1740.08 718.082 L1740.75 718.082 L1741.43 718.082 L1742.1 718.082 L1742.78 718.082 L1743.45 718.082 L1744.13 718.082 L1744.8 718.082 L1745.48 718.082 L1746.15 718.082 L1746.83 718.082 L1747.5 718.082 L1748.18 718.082 L1748.85 718.082 L1749.53 718.082 L1750.2 718.082 L1750.88 718.082 L1751.55 718.082 L1752.23 718.082 L1752.9 718.082 L1753.58 718.082 L1754.25 718.082 L1754.93 718.082 L1755.6 718.082 L1756.28 718.082 L1756.95 718.082 L1757.63 718.082 L1758.3 718.082 L1758.98 718.082 L1759.65 718.082 L1760.33 718.082 L1761 718.082 L1761.68 718.082 L1762.35 718.082 L1763.03 718.082 L1763.7 718.082 L1764.38 718.082 L1765.05 718.082 L1765.73 718.082 L1766.4 718.082 L1767.08 718.082 L1767.75 718.082 L1768.43 718.082 L1769.1 718.082 L1769.78 718.082 L1770.45 718.082 L1771.13 718.082 L1771.8 718.082 L1772.48 718.082 L1773.15 718.082 L1773.83 718.082 L1774.5 718.082 L1775.18 718.082 L1775.85 718.082 L1776.53 718.082 L1777.2 718.082 L1777.88 718.082 L1778.55 718.082 L1779.23 718.082 L1779.9 718.082 L1780.58 718.082 L1781.25 718.082 L1781.93 718.082 L1782.6 718.082 L1783.28 718.082 L1783.95 718.082 L1784.63 718.082 L1785.3 718.082 L1785.98 718.082 L1786.65 718.082 L1787.33 718.082 L1788 718.082 L1788.68 718.082 L1789.35 718.082 L1790.03 718.082 L1790.7 718.082 L1791.38 718.082 L1792.05 718.082 L1792.73 718.082 L1793.4 718.082 L1794.08 718.082 L1794.75 718.082 L1795.43 718.082 L1796.1 718.082 L1796.78 718.082 L1797.45 718.082 L1798.13 718.082 L1798.8 718.082 L1799.48 718.082 L1800.15 718.082 L1800.83 718.082 L1801.5 718.082 L1802.18 718.082 L1802.85 718.082 L1803.53 718.082 L1804.2 718.082 L1804.88 718.082 L1805.55 718.082 L1806.23 718.082 L1806.9 718.082 L1807.58 718.082 L1808.25 718.082 L1808.93 718.082 L1809.6 718.082 L1810.28 718.082 L1810.95 718.082 L1811.63 718.082 L1812.3 718.082 L1812.98 718.082 L1813.65 718.082 L1814.33 718.082 L1815 718.082 L1815.68 718.082 L1816.35 718.082 L1817.03 718.082 L1817.7 718.082 L1818.38 718.082 L1819.05 718.082 L1819.73 718.082 L1820.4 718.082 L1821.08 718.082 L1821.75 718.082 L1822.43 718.082 L1823.1 718.082 L1823.78 718.082 L1824.45 718.082 L1825.13 718.082 L1825.8 718.082 L1826.48 718.082 L1827.15 718.082 L1827.83 718.082 L1828.5 718.082 L1829.18 718.082 L1829.85 718.082 L1830.53 718.082 L1831.2 718.082 L1831.88 718.082 L1832.55 718.082 L1833.23 718.082 L1833.9 718.082 L1834.58 718.082 L1835.25 718.082 L1835.93 718.082 L1836.6 718.082 L1837.28 718.082 L1837.95 718.082 L1838.63 718.082 L1839.3 718.082 L1839.98 718.082 L1840.65 718.082 L1841.33 718.082 L1842 718.082 L1842.68 718.082 L1843.35 718.082 L1844.03 718.082 L1844.7 718.082 L1845.38 718.082 L1846.05 718.082 L1846.73 718.082 L1847.4 718.082 L1848.08 718.082 L1848.75 718.082 L1849.43 718.082 L1850.1 718.082 L1850.78 718.082 L1851.45 718.082 L1852.13 718.082 L1852.8 718.082 L1853.48 718.082 L1854.15 718.082 L1854.83 718.082 L1855.5 718.082 L1856.18 718.082 L1856.85 718.082 L1857.53 718.082 L1858.2 718.082 L1858.88 718.082 L1859.55 718.082 L1860.23 718.082 L1860.9 718.082 L1861.58 718.082 L1862.25 718.082 L1862.93 718.082 L1863.6 718.082 L1864.28 718.082 L1864.95 718.082 L1865.63 718.082 L1866.3 718.082 L1866.98 718.082 L1867.65 718.082 L1868.33 718.082 L1869 718.082 L1869.68 718.082 L1870.35 718.082 L1871.03 718.082 L1871.7 718.082 L1872.38 718.082 L1873.05 718.082 L1873.73 718.082 L1874.4 718.082 L1875.08 718.082 L1875.75 718.082 L1876.43 718.082 L1877.1 718.082 L1877.78 718.082 L1878.45 718.082 L1879.13 718.082 L1879.8 718.082 L1880.48 718.082 L1881.15 718.082 L1881.83 718.082 L1882.5 718.082 L1883.18 718.082 L1883.85 718.082 L1884.53 718.082 L1885.2 718.082 L1885.88 718.082 L1886.55 718.082 L1887.23 718.082 L1887.9 718.082 L1888.58 718.082 L1889.25 718.082 L1889.93 718.082 L1890.6 718.082 L1891.28 718.082 L1891.95 718.082 L1892.63 718.082 L1893.3 718.082 L1893.98 718.082 L1894.65 718.082 L1895.33 718.082 L1896 718.082 L1896.68 718.082 L1897.35 718.082 L1898.03 718.082 L1898.7 718.082 L1899.38 718.082 L1900.05 718.082 L1900.73 718.082 L1901.4 718.082 L1902.08 718.082 L1902.75 718.082 L1902.75 703.425 L1902.08 703.425 L1901.4 703.425 L1900.73 703.425 L1900.05 703.425 L1899.38 703.425 L1898.7 703.425 L1898.03 703.425 L1897.35 703.425 L1896.68 703.425 L1896 703.425 L1895.33 703.425 L1894.65 703.425 L1893.98 703.425 L1893.3 703.425 L1892.63 703.425 L1891.95 703.425 L1891.28 703.425 L1890.6 703.425 L1889.93 703.425 L1889.25 703.425 L1888.58 703.425 L1887.9 703.425 L1887.23 703.425 L1886.55 703.425 L1885.88 703.425 L1885.2 703.425 L1884.53 703.425 L1883.85 703.425 L1883.18 703.425 L1882.5 703.425 L1881.83 703.425 L1881.15 703.425 L1880.48 703.425 L1879.8 703.425 L1879.13 703.425 L1878.45 703.425 L1877.78 703.425 L1877.1 703.425 L1876.43 703.425 L1875.75 703.425 L1875.08 703.425 L1874.4 703.425 L1873.73 703.425 L1873.05 703.425 L1872.38 703.425 L1871.7 703.425 L1871.03 703.425 L1870.35 703.425 L1869.68 703.425 L1869 703.425 L1868.33 703.425 L1867.65 703.425 L1866.98 703.425 L1866.3 703.425 L1865.63 703.425 L1864.95 703.425 L1864.28 703.425 L1863.6 703.425 L1862.93 703.425 L1862.25 703.425 L1861.58 703.425 L1860.9 703.425 L1860.23 703.425 L1859.55 703.425 L1858.88 703.425 L1858.2 703.425 L1857.53 703.425 L1856.85 703.425 L1856.18 703.425 L1855.5 703.425 L1854.83 703.425 L1854.15 703.425 L1853.48 703.425 L1852.8 703.425 L1852.13 703.425 L1851.45 703.425 L1850.78 703.425 L1850.1 703.425 L1849.43 703.425 L1848.75 703.425 L1848.08 703.425 L1847.4 703.425 L1846.73 703.425 L1846.05 703.425 L1845.38 703.425 L1844.7 703.425 L1844.03 703.425 L1843.35 703.425 L1842.68 703.425 L1842 703.425 L1841.33 703.425 L1840.65 703.425 L1839.98 703.425 L1839.3 703.425 L1838.63 703.425 L1837.95 703.425 L1837.28 703.425 L1836.6 703.425 L1835.93 703.425 L1835.25 703.425 L1834.58 703.425 L1833.9 703.425 L1833.23 703.425 L1832.55 703.425 L1831.88 703.425 L1831.2 703.425 L1830.53 703.425 L1829.85 703.425 L1829.18 703.425 L1828.5 703.425 L1827.83 703.425 L1827.15 703.425 L1826.48 703.425 L1825.8 703.425 L1825.13 703.425 L1824.45 703.425 L1823.78 703.425 L1823.1 703.425 L1822.43 703.425 L1821.75 703.425 L1821.08 703.425 L1820.4 703.425 L1819.73 703.425 L1819.05 703.425 L1818.38 703.425 L1817.7 703.425 L1817.03 703.425 L1816.35 703.425 L1815.68 703.425 L1815 703.425 L1814.33 703.425 L1813.65 703.425 L1812.98 703.425 L1812.3 703.425 L1811.63 703.425 L1810.95 703.425 L1810.28 703.425 L1809.6 703.425 L1808.93 703.425 L1808.25 703.425 L1807.58 703.425 L1806.9 703.425 L1806.23 703.425 L1805.55 703.425 L1804.88 703.425 L1804.2 703.425 L1803.53 703.425 L1802.85 703.425 L1802.18 703.425 L1801.5 703.425 L1800.83 703.425 L1800.15 703.425 L1799.48 703.425 L1798.8 703.425 L1798.13 703.425 L1797.45 703.425 L1796.78 703.425 L1796.1 703.425 L1795.43 703.425 L1794.75 703.425 L1794.08 703.425 L1793.4 703.425 L1792.73 703.425 L1792.05 703.425 L1791.38 703.425 L1790.7 703.425 L1790.03 703.425 L1789.35 703.425 L1788.68 703.425 L1788 703.425 L1787.33 703.425 L1786.65 703.425 L1785.98 703.425 L1785.3 703.425 L1784.63 703.425 L1783.95 703.425 L1783.28 703.425 L1782.6 703.425 L1781.93 703.425 L1781.25 703.425 L1780.58 703.425 L1779.9 703.425 L1779.23 703.425 L1778.55 703.425 L1777.88 703.425 L1777.2 703.425 L1776.53 703.425 L1775.85 703.425 L1775.18 703.425 L1774.5 703.425 L1773.83 703.425 L1773.15 703.425 L1772.48 703.425 L1771.8 703.425 L1771.13 703.425 L1770.45 703.425 L1769.78 703.425 L1769.1 703.425 L1768.43 703.425 L1767.75 703.425 L1767.08 703.425 L1766.4 703.425 L1765.73 703.425 L1765.05 703.425 L1764.38 703.425 L1763.7 703.425 L1763.03 703.425 L1762.35 703.425 L1761.68 703.425 L1761 703.425 L1760.33 703.425 L1759.65 703.425 L1758.98 703.425 L1758.3 703.425 L1757.63 703.425 L1756.95 703.425 L1756.28 703.425 L1755.6 703.425 L1754.93 703.425 L1754.25 703.425 L1753.58 703.425 L1752.9 703.425 L1752.23 703.425 L1751.55 703.425 L1750.88 703.425 L1750.2 703.425 L1749.53 703.425 L1748.85 703.425 L1748.18 703.425 L1747.5 703.425 L1746.83 703.425 L1746.15 703.425 L1745.48 703.425 L1744.8 703.425 L1744.13 703.425 L1743.45 703.425 L1742.78 703.425 L1742.1 703.425 L1741.43 703.425 L1740.75 703.425 L1740.08 703.425 L1739.4 703.425 L1738.73 703.425 L1738.05 703.425 L1737.38 703.425 L1736.7 703.425 L1736.03 703.425 L1735.35 703.425 L1734.68 703.425 L1734 703.425 L1733.33 703.425 L1732.65 703.425 L1731.98 703.425 L1731.3 703.425 L1730.63 703.425 L1729.95 703.425 L1729.28 703.425 L1728.6 703.425 L1727.93 703.425 L1727.25 703.425 L1726.58 703.425 L1725.9 703.425 L1725.23 703.425 L1724.55 703.425 L1723.88 703.425 L1723.2 703.425 L1722.53 703.425 L1721.85 703.425 L1721.18 703.425 L1720.5 703.425 L1719.83 703.425 L1719.15 703.425 L1718.48 703.425 L1717.8 703.425 L1717.13 703.425 L1716.45 703.425 L1715.78 703.425 L1715.1 703.425 L1714.43 703.425 L1713.75 703.425 L1713.08 703.425 L1712.4 703.425 L1711.73 703.425 L1711.05 703.425 L1710.38 703.425 L1709.7 703.425 L1709.03 703.425 L1708.35 703.425 L1707.68 703.425 L1707 703.425 L1706.33 703.425 L1705.65 703.425 L1704.98 703.425 L1704.3 703.425 L1703.63 703.425 L1702.95 703.425 L1702.28 703.425 L1701.6 703.425 L1700.93 703.425 L1700.25 703.425 L1699.58 703.425 L1698.9 703.425 L1698.23 703.425 L1697.55 703.425 L1696.88 703.425 L1696.2 703.425 L1695.53 703.425 L1694.85 703.425 L1694.18 703.425 L1693.5 703.425 L1692.83 703.425 L1692.15 703.425 L1691.48 703.425 L1690.8 703.425 L1690.13 703.425 L1689.45 703.425 L1688.78 703.425 L1688.1 703.425 L1687.43 703.425 L1686.75 703.425 L1686.08 703.425 L1685.4 703.425 L1684.73 703.425 L1684.05 703.425 L1683.38 703.425 L1682.7 703.425 L1682.03 703.425 L1681.35 703.425 L1680.68 703.425 L1680 703.425 L1679.33 703.425 L1678.65 703.425 L1677.98 703.425 L1677.3 703.425 L1676.63 703.425 L1675.95 703.425 L1675.28 703.425 L1674.6 703.425 L1673.93 703.425 L1673.25 703.425 L1672.58 703.425 L1671.9 703.425 L1671.23 703.425 L1670.55 703.425 L1669.88 703.425 L1669.2 703.425 L1668.53 703.425 L1667.85 703.425 L1667.18 703.425 L1666.5 703.425 L1665.83 703.425 L1665.15 703.425 L1664.48 703.425 L1663.8 703.425 L1663.13 703.425 L1662.45 703.425 L1661.78 703.425 L1661.1 703.425 L1660.43 703.425 L1659.75 703.425 L1659.08 703.425 L1658.4 703.425 L1657.73 703.425 L1657.05 703.425 L1656.38 703.425 L1655.7 703.425 L1655.03 703.425 L1654.35 703.425 L1653.68 703.425 L1653 703.425 L1652.33 703.425 L1651.65 703.425 L1650.98 703.425 L1650.3 703.425 L1649.63 703.425 L1648.95 703.425 L1648.28 703.425 L1647.6 703.425 L1646.93 703.425 L1646.25 703.425 L1645.58 703.425 L1644.9 703.425 L1644.23 703.425 L1643.55 703.425 L1642.88 703.425 L1642.2 703.425 L1641.53 703.425 L1640.85 703.425 L1640.18 703.425 L1639.5 703.425 L1638.83 703.425 L1638.15 703.425 L1637.48 703.425 L1636.8 703.425 L1636.13 703.425 L1635.45 703.425 L1634.78 703.425 L1634.1 703.425 L1633.43 703.425 L1632.75 703.425 L1632.08 703.425 L1631.4 703.425 L1630.73 703.425 L1630.05 703.425 L1629.38 703.425 L1628.7 703.425 L1628.03 703.425 L1627.35 703.425 L1626.68 703.425 L1626 703.425 L1625.33 703.425 L1624.65 703.425 L1623.98 703.425 L1623.3 703.425 L1622.63 703.425 L1621.95 703.425 L1621.28 703.425 L1620.6 703.425 L1619.93 703.425 L1619.25 703.425 L1618.58 703.425 L1617.9 703.425 L1617.23 703.425 L1616.55 703.425 L1615.88 703.425 L1615.2 703.425 L1614.53 703.425 L1613.85 703.425 L1613.18 703.425 L1612.5 703.425 L1611.83 703.425 L1611.15 703.425 L1610.48 703.425 L1609.8 703.425 L1609.13 703.425 L1608.45 703.425 L1607.78 703.425 L1607.1 703.425 L1606.43 703.425 L1605.75 703.425 L1605.08 703.425 L1604.4 703.425 L1603.73 703.425 L1603.05 703.425 L1602.38 703.425 L1601.7 703.425 L1601.03 703.425 L1600.35 703.425 L1599.68 703.425 L1599 703.425 L1598.33 703.425 L1597.65 703.425 L1596.98 703.425 L1596.3 703.425 L1595.63 703.425 L1594.95 703.425 L1594.28 703.425 L1593.6 703.425 L1592.93 703.425 L1592.25 703.425 L1591.58 703.425 L1590.9 703.425 L1590.23 703.425 L1589.55 703.425 L1588.88 703.425 L1588.2 703.425 L1587.53 703.425 L1586.85 703.425 L1586.18 703.425 L1585.5 703.425 L1584.83 703.425 L1584.15 703.425 L1583.48 703.425 L1582.8 703.425 L1582.13 703.425 L1581.45 703.425 L1580.78 703.425 L1580.1 703.425 L1579.43 703.425 L1578.75 703.425 L1578.08 703.425 L1577.4 703.425 L1576.73 703.425 L1576.05 703.425 L1575.38 703.425 L1574.7 703.425 L1574.03 703.425 L1573.35 703.425 L1572.68 703.425 L1572 703.425 L1571.33 703.425 L1570.65 703.425 L1569.98 703.425 L1569.3 703.425 L1568.63 703.425 L1567.95 703.425 L1567.28 703.425 L1566.6 703.425 L1565.93 703.425 L1565.25 703.425 L1564.58 703.425 L1563.9 703.425 L1563.23 703.425 L1562.55 703.425 L1561.88 703.425 L1561.2 703.425 L1560.53 703.425 L1559.85 703.425 L1559.18 703.425 L1558.5 703.425 L1557.83 703.425 L1557.15 703.425 L1556.48 703.425 L1555.8 703.425 L1555.13 703.425 L1554.45 703.425 L1553.78 703.425 L1553.1 703.425 L1552.43 703.425 L1551.75 703.425 L1551.08 703.425 L1550.4 703.425 L1549.73 703.425 L1549.05 703.425 L1548.38 703.425 L1547.7 703.425 L1547.03 703.425 L1546.35 703.425 L1545.68 703.425 L1545 703.425 L1544.33 703.425 L1543.65 703.425 L1542.98 703.425 L1542.3 703.425 L1541.63 703.425 L1540.95 703.425 L1540.28 703.425 L1539.6 703.425 L1538.93 703.425 L1538.25 703.425 L1537.58 703.425 L1536.9 703.425 L1536.23 703.425 L1535.55 703.425 L1534.88 703.425 L1534.2 703.425 L1533.53 703.425 L1532.85 703.425 L1532.18 703.425 L1531.5 703.425 L1530.83 703.425 L1530.15 703.425 L1529.48 703.425 L1528.8 703.425 L1528.13 703.425 L1527.45 703.425 L1526.78 703.425 L1526.1 703.425 L1525.43 703.425 L1524.75 703.425 L1524.08 703.425 L1523.4 703.425 L1522.73 703.425 L1522.05 703.425 L1521.38 703.425 L1520.7 703.425 L1520.03 703.425 L1519.35 703.425 L1518.68 703.425 L1518 703.425 L1517.33 703.425 L1516.65 703.425 L1515.98 703.425 L1515.3 703.425 L1514.63 703.425 L1513.95 703.425 L1513.28 703.425 L1512.6 703.425 L1511.93 703.425 L1511.25 703.425 L1510.58 703.425 L1509.9 703.425 L1509.23 703.425 L1508.55 703.425 L1507.87 703.425 L1507.2 703.425 L1506.52 703.425 L1505.85 703.425 L1505.17 703.425 L1504.5 703.425 L1503.82 703.425 L1503.15 703.425 L1502.47 703.425 L1501.8 703.425 L1501.12 703.425 L1500.45 703.425 L1499.77 703.425 L1499.1 703.425 L1498.42 703.425 L1497.75 703.425 L1497.07 703.425 L1496.4 703.425 L1495.72 703.425 L1495.05 703.425 L1494.37 703.425 L1493.7 703.425 L1493.02 703.425 L1492.35 703.425 L1491.67 703.425 L1491 703.425 L1490.32 703.425 L1489.65 703.425 L1488.97 703.425 L1488.3 703.425 L1487.62 703.425 L1486.95 703.425 L1486.27 703.425 L1485.6 703.425 L1484.92 703.425 L1484.25 703.425 L1483.57 703.425 L1482.9 703.425 L1482.22 703.425 L1481.55 703.425 L1480.87 703.425 L1480.2 703.425 L1479.52 703.425 L1478.85 703.425 L1478.17 703.425 L1477.5 703.425 L1476.82 703.425 L1476.15 703.425 L1475.47 703.425 L1474.8 703.425 L1474.12 703.425 L1473.45 703.425 L1472.77 703.425 L1472.1 703.425 L1471.42 703.425 L1470.75 703.425 L1470.07 703.425 L1469.4 703.425 L1468.72 703.425 L1468.05 703.425 L1467.37 703.425 L1466.7 703.425 L1466.02 703.425 L1465.35 703.425 L1464.67 703.425 L1464 703.425 L1463.32 703.425 L1462.65 703.425 L1461.97 703.425 L1461.3 703.425 L1460.62 703.425 L1459.95 703.425 L1459.27 703.425 L1458.6 703.425 L1457.92 703.425 L1457.25 703.425 L1456.57 703.425 L1455.9 703.425 L1455.22 703.425 L1454.55 703.425 L1453.87 703.425 L1453.2 703.425 L1452.52 703.425 L1451.85 703.425 L1451.17 703.425 L1450.5 703.425 L1449.82 703.425 L1449.15 703.425 L1448.47 703.425 L1447.8 703.425 L1447.12 703.425 L1446.45 703.425 L1445.77 703.425 L1445.1 703.425 L1444.42 703.425 L1443.75 703.425 L1443.07 703.425 L1442.4 703.425 L1441.72 703.425 L1441.05 703.425 L1440.37 703.425 L1439.7 703.425 L1439.02 703.425 L1438.35 703.425 L1437.67 703.425 L1437 703.425 L1436.32 703.425 L1435.65 703.425 L1434.97 703.425 L1434.3 703.425 L1433.62 703.425 L1432.95 703.425 L1432.27 703.425 L1431.6 703.425 L1430.92 703.425 L1430.25 703.425 L1429.57 703.425 L1428.9 703.425 L1428.22 703.425 L1427.55 703.425 L1426.87 703.425 L1426.2 703.425 L1425.52 703.425 L1424.85 703.425 L1424.17 703.425 L1423.5 703.425 L1422.82 703.425 L1422.15 703.425 L1421.47 703.425 L1420.8 703.425 L1420.12 703.425 L1419.45 703.425 L1418.77 703.425 L1418.1 703.425 L1417.42 703.425 L1416.75 703.425 L1416.07 703.425 L1415.4 703.425 L1414.72 703.425 L1414.05 703.425 L1413.37 703.425 L1412.7 703.425 L1412.02 703.425 L1411.35 703.425 L1410.67 703.425 L1410 703.425 L1409.32 703.425 L1408.65 703.425 L1407.97 703.425 L1407.3 703.425 L1406.62 703.425 L1405.95 703.425 L1405.27 703.425 L1404.6 703.425 L1403.92 703.425 L1403.25 703.425 L1402.57 703.425 L1401.9 703.425 L1401.22 703.425 L1400.55 703.425 L1399.87 703.425 L1399.2 703.425 L1398.52 703.425 L1397.85 703.425 L1397.17 703.425 L1396.5 703.425 L1395.82 703.425 L1395.15 703.425 L1394.47 703.425 L1393.8 703.425 L1393.12 703.425 L1392.45 703.425 L1391.77 703.425 L1391.1 703.425 L1390.42 703.425 L1389.75 703.425 L1389.07 703.425 L1388.4 703.425 L1387.72 703.425 L1387.05 703.425 L1386.37 703.425 L1385.7 703.425 L1385.02 703.425 L1384.35 703.425 L1383.67 703.425 L1383 703.425 L1382.32 703.425 L1381.65 703.425 L1380.97 703.425 L1380.3 703.425 L1379.62 703.425 L1378.95 703.425 L1378.27 703.425 L1377.6 703.425 L1376.92 703.425 L1376.25 703.425 L1375.57 703.425 L1374.9 703.425 L1374.22 703.425 L1373.55 703.425 L1372.87 703.425 L1372.2 703.425 L1371.52 703.425 L1370.85 703.425 L1370.17 703.425 L1369.5 703.425 L1368.82 703.425 L1368.15 703.425 L1367.47 703.425 L1366.8 703.425 L1366.12 703.425 L1365.45 703.425 L1364.77 703.425 L1364.1 703.425 L1363.42 703.425 L1362.75 703.425 L1362.07 703.425 L1361.4 703.425 L1360.72 703.425 L1360.05 703.425 L1359.37 703.425 L1358.7 703.425 L1358.02 703.425 L1357.35 703.425 L1356.67 703.425 L1356 703.425 L1355.32 703.425 L1354.65 703.425 L1353.97 703.425 L1353.3 703.425 L1352.62 703.425 L1351.95 703.425 L1351.27 703.425 L1350.6 703.425 L1349.92 703.425 L1349.25 703.425 L1348.57 703.425 L1347.9 703.425 L1347.22 703.425 L1346.55 703.425 L1345.87 703.425 L1345.2 703.425 L1344.52 703.425 L1343.85 703.425 L1343.17 703.425 L1342.5 703.425 L1341.82 703.425 L1341.15 703.425 L1340.47 703.425 L1339.8 703.425 L1339.12 703.425 L1338.45 703.425 L1337.77 703.425 L1337.1 703.425 L1336.42 703.425 L1335.75 703.425 L1335.07 703.425 L1334.4 703.425 L1333.72 703.425 L1333.05 703.425 L1332.37 703.425 L1331.7 703.425 L1331.02 703.425 L1330.35 703.425 L1329.67 703.425 L1329 703.425 L1328.32 703.425 L1327.65 703.425 L1326.97 703.425 L1326.3 703.425 L1325.62 703.425 L1324.95 703.425 L1324.27 703.425 L1323.6 703.425 L1322.92 703.425 L1322.25 703.425 L1321.57 703.425 L1320.9 703.425 L1320.22 703.425 L1319.55 703.425 L1318.87 703.425 L1318.2 703.425 L1317.52 703.425 L1316.85 703.425 L1316.17 703.425 L1315.5 703.425 L1314.82 703.425 L1314.15 703.425 L1313.47 703.425 L1312.8 703.425 L1312.12 703.425 L1311.45 703.425 L1310.77 703.425 L1310.1 703.425 L1309.42 703.425 L1308.75 703.425 L1308.07 703.425 L1307.4 703.425 L1306.72 703.425 L1306.05 703.425 L1305.37 703.425 L1304.7 703.425 L1304.02 703.425 L1303.35 703.425 L1302.67 703.425 L1302 703.425 L1301.32 703.425 L1300.65 703.425 L1299.97 703.425 L1299.3 703.425 L1298.62 703.425 L1297.95 703.425 L1297.27 703.425 L1296.6 703.425 L1295.92 703.425 L1295.25 703.425 L1294.57 703.425 L1293.9 703.425 L1293.22 703.425 L1292.55 703.425 L1291.87 703.425 L1291.2 703.425 L1290.52 703.425 L1289.85 703.425 L1289.17 703.425 L1288.5 703.425 L1287.82 703.425 L1287.15 703.425 L1286.47 703.425 L1285.8 703.425 L1285.12 703.425 L1284.45 703.425 L1283.77 703.425 L1283.1 703.425 L1282.42 703.425 L1281.75 703.425 L1281.07 703.425 L1280.4 703.425 L1279.72 703.425 L1279.05 703.425 L1278.37 703.425 L1277.7 703.425 L1277.02 703.425 L1276.35 703.425 L1275.67 703.425 L1275 703.425 L1274.32 703.425 L1273.65 703.425 L1272.97 703.425 L1272.3 703.425 L1271.62 703.425 L1270.95 703.425 L1270.27 703.425 L1269.6 703.425 L1268.92 703.425 L1268.25 703.425 L1267.57 703.425 L1266.9 703.425 L1266.22 703.425 L1265.55 703.425 L1264.87 703.425 L1264.2 703.425 L1263.52 703.425 L1262.85 703.425 L1262.17 703.425 L1261.5 703.425 L1260.82 703.425 L1260.15 703.425 L1259.47 703.425 L1258.8 703.425 L1258.12 703.425 L1257.45 703.425 L1256.77 703.425 L1256.1 703.425 L1255.42 703.425 L1254.75 703.425 L1254.07 703.425 L1253.4 703.425 L1252.72 703.425 L1252.05 703.425 L1251.37 703.425 L1250.7 703.425 L1250.02 703.425 L1249.35 703.425 L1248.67 703.425 L1248 703.425 L1247.32 703.425 L1246.65 703.425 L1245.97 703.425 L1245.3 703.425 L1244.62 703.425 L1243.95 703.425 L1243.27 703.425 L1242.6 703.425 L1241.92 703.425 L1241.25 703.425 L1240.57 703.425 L1239.9 703.425 L1239.22 703.425 L1238.55 703.425 L1237.87 703.425 L1237.2 703.425 L1236.52 703.425 L1235.85 703.425 L1235.17 703.425 L1234.5 703.425 L1233.82 703.425 L1233.15 703.425 L1232.47 703.425 L1231.8 703.425 L1231.12 703.425 L1230.45 703.425 L1229.77 703.425 L1229.1 703.425 L1228.42 703.425 L1227.75 703.425 L1227.07 703.425 L1226.4 703.425 L1225.72 703.425 L1225.05 703.425 L1224.37 703.425 L1223.7 703.425 L1223.02 703.425 L1222.35 703.425 L1221.67 703.425 L1221 703.425 L1220.32 703.425 L1219.65 703.425 L1218.97 703.425 L1218.3 703.425 L1217.62 703.425 L1216.95 703.425 L1216.27 703.425 L1215.6 703.425 L1214.92 703.425 L1214.25 703.425 L1213.57 703.425 L1212.9 703.425 L1212.22 703.425 L1211.55 703.425 L1210.87 703.425 L1210.2 703.425 L1209.52 703.425 L1208.85 703.425 L1208.17 703.425 L1207.5 703.425 L1206.82 703.425 L1206.15 703.425 L1205.47 703.425 L1204.8 703.425 L1204.12 703.425 L1203.45 703.425 L1202.77 703.425 L1202.1 703.425 L1201.42 703.425 L1200.75 703.425 L1200.07 703.425 L1199.4 703.425 L1198.72 703.425 L1198.05 703.425 L1197.37 703.425 L1196.7 703.425 L1196.02 703.425 L1195.35 703.425 L1194.67 703.425 L1194 703.425 L1193.32 703.425 L1192.65 703.425 L1191.97 703.425 L1191.3 703.425 L1190.62 703.425 L1189.95 703.425 L1189.27 703.425 L1188.6 703.425 L1187.92 703.425 L1187.25 703.425 L1186.57 703.425 L1185.9 703.425 L1185.22 703.425 L1184.55 703.425 L1183.87 703.425 L1183.2 703.425 L1182.52 703.425 L1181.85 703.425 L1181.17 703.425 L1180.5 703.425 L1179.82 703.425 L1179.15 703.425 L1178.47 703.425 L1177.8 703.425 L1177.12 703.425 L1176.45 703.425 L1175.77 703.425 L1175.1 703.425 L1174.42 703.425 L1173.75 703.425 L1173.07 703.425 L1172.4 703.425 L1171.72 703.425 L1171.05 703.425 L1170.37 703.425 L1169.7 703.425 L1169.02 703.425 L1168.35 703.425 L1167.67 703.425 L1167 703.425 L1166.32 703.425 L1165.65 703.425 L1164.97 703.425 L1164.3 703.425 L1163.62 703.425 L1162.95 703.425 L1162.27 703.425 L1161.6 703.425 L1160.92 703.425 L1160.25 703.425 L1159.57 703.425 L1158.9 703.425 L1158.22 703.425 L1157.55 703.425 L1156.87 703.425 L1156.2 703.425 L1155.52 703.425 L1154.85 703.425 L1154.17 703.425 L1153.5 703.425 L1152.82 703.425 L1152.15 703.425 L1151.47 703.425 L1150.8 703.425 L1150.12 703.425 L1149.45 703.425 L1148.77 703.425 L1148.1 703.425 L1147.42 703.425 L1146.75 703.425 L1146.07 703.425 L1145.4 703.425 L1144.72 703.425 L1144.05 703.425 L1143.37 703.425 L1142.7 703.425 L1142.02 703.425 L1141.35 703.425 L1140.67 703.425 L1140 703.425 L1139.32 703.425 L1138.65 703.425 L1137.97 703.425 L1137.3 703.425 L1136.62 703.425 L1135.95 703.425 L1135.27 703.425 L1134.6 703.425 L1133.92 703.425 L1133.25 703.425 L1132.57 703.425 L1131.9 703.425 L1131.22 703.425 L1130.55 703.425 L1129.87 703.425 L1129.2 703.425 L1128.52 703.425 L1127.85 703.425 L1127.17 703.425 L1126.5 703.425 L1125.82 703.425 L1125.15 703.425 L1124.47 703.425 L1123.8 703.425 L1123.12 703.425 L1122.45 703.425 L1121.77 703.425 L1121.1 703.425 L1120.42 703.425 L1119.75 703.425 L1119.07 703.425 L1118.4 703.425 L1117.72 703.425 L1117.05 703.425 L1116.37 703.425 L1115.7 703.425 L1115.02 703.425 L1114.35 703.425 L1113.67 703.425 L1113 703.425 L1112.32 703.425 L1111.65 703.425 L1110.97 703.425 L1110.3 703.425 L1109.62 703.425 L1108.95 703.425 L1108.27 703.425 L1107.6 703.425 L1106.92 703.425 L1106.25 703.425 L1105.57 703.425 L1104.9 703.425 L1104.22 703.425 L1103.55 703.425 L1102.87 703.425 L1102.2 703.425 L1101.52 703.425 L1100.85 703.425 L1100.17 703.425 L1099.5 703.425 L1098.82 703.425 L1098.15 703.425 L1097.47 703.425 L1096.8 703.425 L1096.12 703.425 L1095.45 703.425 L1094.77 703.425 L1094.1 703.425 L1093.42 703.425 L1092.75 703.425 L1092.07 703.425 L1091.4 703.425 L1090.72 703.425 L1090.05 703.425 L1089.37 703.425 L1088.7 703.425 L1088.02 703.425 L1087.35 703.425 L1086.67 703.425 L1086 703.425 L1085.32 703.425 L1084.65 703.425 L1083.97 703.425 L1083.3 703.425 L1082.62 703.425 L1081.95 703.425 L1081.27 703.425 L1080.6 703.425 L1079.92 703.425 L1079.25 703.425 L1078.57 703.425 L1077.9 703.425 L1077.22 703.425 L1076.55 703.425 L1075.87 703.425 L1075.2 703.425 L1074.52 703.425 L1073.85 703.425 L1073.17 703.425 L1072.5 703.425 L1071.82 703.425 L1071.15 703.425 L1070.47 703.425 L1069.8 703.425 L1069.12 703.425 L1068.45 703.425 L1067.77 703.425 L1067.1 703.425 L1066.42 703.425 L1065.75 703.425 L1065.07 703.425 L1064.4 703.425 L1063.72 703.425 L1063.05 703.425 L1062.37 703.425 L1061.7 703.425 L1061.02 703.425 L1060.35 703.425 L1059.67 703.425 L1059 703.425 L1058.32 703.425 L1057.65 703.425 L1056.97 703.425 L1056.3 703.425 L1055.62 703.425 L1054.95 703.425 L1054.27 703.425 L1053.6 703.425 L1052.92 703.425 L1052.25 703.425 L1051.57 703.425 L1050.9 703.425 L1050.22 703.425 L1049.55 703.425 L1048.87 703.425 L1048.2 703.425 L1047.52 703.425 L1046.85 703.425 L1046.17 703.425 L1045.5 703.425 L1044.82 703.425 L1044.15 703.425 L1043.47 703.425 L1042.8 703.425 L1042.12 703.425 L1041.45 703.425 L1040.77 703.425 L1040.1 703.425 L1039.42 703.425 L1038.75 703.425 L1038.07 703.425 L1037.4 703.425 L1036.72 703.425 L1036.05 703.425 L1035.37 703.425 L1034.7 703.425 L1034.02 703.425 L1033.35 703.425 L1032.67 703.425 L1032 703.425 L1031.32 703.425 L1030.65 703.425 L1029.97 703.425 L1029.3 703.425 L1028.62 703.425 L1027.95 703.425 L1027.27 703.425 L1026.6 703.425 L1025.92 703.425 L1025.25 703.425 L1024.57 703.425 L1023.9 703.425 L1023.22 703.425 L1022.55 703.425 L1021.87 703.425 L1021.2 703.425 L1020.52 703.425 L1019.85 703.425 L1019.17 703.425 L1018.5 703.425 L1017.82 703.425 L1017.15 703.425 L1016.47 703.425 L1015.8 703.425 L1015.12 703.425 L1014.45 703.425 L1013.77 703.425 L1013.1 703.425 L1012.42 703.425 L1011.75 703.425 L1011.07 703.425 L1010.4 703.425 L1009.72 703.425 L1009.05 703.425 L1008.37 703.425 L1007.7 703.425 L1007.02 703.425 L1006.35 703.425 L1005.67 703.425 L1005 703.425 L1004.32 703.425 L1003.65 703.425 L1002.97 703.425 L1002.3 703.425 L1001.62 703.425 L1000.95 703.425 L1000.27 703.425 L999.596 703.425 L998.921 703.425 L998.246 703.425 L997.571 703.425 L996.896 703.425 L996.221 703.425 L995.546 703.425 L994.871 703.425 L994.196 703.425 L993.521 703.425 L992.846 703.425 L992.171 703.425 L991.496 703.425 L990.821 703.425 L990.146 703.425 L989.471 703.425 L988.796 703.425 L988.121 703.425 L987.446 703.425 L986.771 703.425 L986.096 703.425 L985.421 703.425 L984.746 703.425 L984.071 703.425 L983.396 703.425 L982.721 703.425 L982.046 703.425 L981.371 703.425 L980.696 703.425 L980.021 703.425 L979.346 703.425 L978.671 703.425 L977.996 703.425 L977.321 703.425 L976.646 703.425 L975.971 703.425 L975.296 703.425 L974.621 703.425 L973.946 703.425 L973.271 703.425 L972.596 703.425 L971.921 703.425 L971.246 703.425 L970.571 703.425 L969.896 703.425 L969.221 703.425 L968.546 703.425 L967.871 703.425 L967.196 703.425 L966.521 703.425 L965.846 703.425 L965.171 703.425 L964.496 703.425 L963.821 703.425 L963.146 703.425 L962.471 703.425 L961.796 703.425 L961.121 703.425 L960.446 703.425 L959.771 703.425 L959.096 703.425 L958.421 703.425 L957.746 703.425 L957.071 703.425 L956.396 703.425 L955.721 703.425 L955.046 703.425 L954.371 703.425 L953.696 703.425 L953.021 703.425 L952.346 703.425 L951.671 703.425 L950.996 703.425 L950.321 703.425 L949.646 703.425 L948.971 703.425 L948.296 703.425 L947.621 703.425 L946.946 703.425 L946.271 703.425 L945.596 703.425 L944.921 703.425 L944.246 703.425 L943.571 703.425 L942.896 703.425 L942.221 703.425 L941.546 703.425 L940.871 703.425 L940.196 703.425 L939.521 703.425 L938.846 703.425 L938.171 703.425 L937.496 703.425 L936.821 703.425 L936.146 703.425 L935.471 703.425 L934.796 703.425 L934.121 703.425 L933.446 703.425 L932.771 703.425 L932.096 703.425 L931.421 703.425 L930.746 703.425 L930.071 703.425 L929.396 703.425 L928.721 703.425 L928.046 703.425 L927.371 703.425 L926.696 703.425 L926.021 703.425 L925.346 703.425 L924.671 703.425 L923.996 703.425 L923.321 703.425 L922.646 703.425 L921.971 703.425 L921.296 703.425 L920.621 703.425 L919.946 703.425 L919.271 703.425 L918.596 703.425 L917.921 703.425 L917.246 703.425 L916.571 703.425 L915.896 703.425 L915.221 703.425 L914.546 703.425 L913.871 703.425 L913.196 703.425 L912.521 703.425 L911.846 703.425 L911.171 703.425 L910.496 703.425 L909.821 703.425 L909.146 703.425 L908.471 703.425 L907.796 703.425 L907.121 703.425 L906.446 703.425 L905.771 703.425 L905.096 703.425 L904.421 703.425 L903.746 703.425 L903.071 703.425 L902.396 703.425 L901.721 703.425 L901.046 703.425 L900.371 703.425 L899.696 703.425 L899.021 703.425 L898.346 703.425 L897.671 703.425 L896.996 703.425 L896.321 703.425 L895.646 703.425 L894.971 703.425 L894.296 703.425 L893.621 703.425 L892.946 703.425 L892.271 703.425 L891.596 703.425 L890.921 703.425 L890.246 703.425 L889.571 703.425 L888.896 703.425 L888.221 703.425 L887.546 703.425 L886.871 703.425 L886.196 703.425 L885.521 703.425 L884.846 703.425 L884.171 703.425 L883.496 703.425 L882.821 703.425 L882.146 703.425 L881.471 703.425 L880.796 703.425 L880.121 703.425 L879.446 703.425 L878.771 703.425 L878.096 703.425 L877.421 703.425 L876.746 703.425 L876.071 703.425 L875.396 703.425 L874.721 703.425 L874.046 703.425 L873.371 703.425 L872.696 703.425 L872.021 703.425 L871.346 703.425 L870.671 703.425 L869.996 703.425 L869.321 703.425 L868.646 703.425 L867.971 703.425 L867.296 703.425 L866.621 703.425 L865.945 703.425 L865.27 703.425 L864.595 703.425 L863.92 703.425 L863.245 703.425 L862.57 703.425 L861.895 703.425 L861.22 703.425 L860.545 703.425 L859.87 703.425 L859.195 703.425 L858.52 703.425 L857.845 703.425 L857.17 703.425 L856.495 703.425 L855.82 703.425 L855.145 703.425 L854.47 703.425 L853.795 703.425 L853.12 703.425 L852.445 703.425 L851.77 703.425 L851.095 703.425 L850.42 703.425 L849.745 703.425 L849.07 703.425 L848.395 703.425 L847.72 703.425 L847.045 703.425 L846.37 703.425 L845.695 703.425 L845.02 703.425 L844.345 703.425 L843.67 703.425 L842.995 703.425 L842.32 703.425 L841.645 703.425 L840.97 703.425 L840.295 703.425 L839.62 703.425 L838.945 703.425 L838.27 703.425 L837.595 703.425 L836.92 703.425 L836.245 703.425 L835.57 703.425 L834.895 703.425 L834.22 703.425 L833.545 703.425 L832.87 703.425 L832.195 703.425 L831.52 703.425 L830.845 703.425 L830.17 703.425 L829.495 703.425 L828.82 703.425 L828.145 703.425 L827.47 703.425 L826.795 703.425 L826.12 703.425 L825.445 703.425 L824.77 703.425 L824.095 703.425 L823.42 703.425 L822.745 703.425 L822.07 703.425 L821.395 703.425 L820.72 703.425 L820.045 703.425 L819.37 703.425 L818.695 703.425 L818.02 703.425 L817.345 703.425 L816.67 703.425 L815.995 703.425 L815.32 703.425 L814.645 703.425 L813.97 703.425 L813.295 703.425 L812.62 703.425 L811.945 703.425 L811.27 703.425 L810.595 703.425 L809.92 703.425 L809.245 703.425 L808.57 703.425 L807.895 703.425 L807.22 703.425 L806.545 703.425 L805.87 703.425 L805.195 703.425 L804.52 703.425 L803.845 703.425 L803.17 703.425 L802.495 703.425 L801.82 703.425 L801.145 703.425 L800.47 703.425 L799.795 703.425 L799.12 703.425 L798.445 703.425 L797.77 703.425 L797.095 703.425 L796.42 703.425 L795.745 703.425 L795.07 703.425 L794.395 703.425 L793.72 703.425 L793.045 703.425 L792.37 703.425 L791.695 703.425 L791.02 703.425 L790.345 703.425 L789.67 703.425 L788.995 703.425 L788.32 703.425 L787.645 703.425 L786.97 703.425 L786.295 703.425 L785.62 703.425 L784.945 703.425 L784.27 703.425 L783.595 703.425 L782.92 703.425 L782.245 703.425 L781.57 703.425 L780.895 703.425 L780.22 703.425 L779.545 703.425 L778.87 703.425 L778.195 703.425 L777.52 703.425 L776.845 703.425 L776.17 703.425 L775.495 703.425 L774.82 703.425 L774.145 703.425 L773.47 703.425 L772.795 703.425 L772.12 703.425 L771.445 703.425 L770.77 703.425 L770.095 703.425 L769.42 703.425 L768.745 703.425 L768.07 703.425 L767.395 703.425 L766.72 703.425 L766.045 703.425 L765.37 703.425 L764.695 703.425 L764.02 703.425 L763.345 703.425 L762.67 703.425 L761.995 703.425 L761.32 703.425 L760.645 703.425 L759.97 703.425 L759.295 703.425 L758.62 703.425 L757.945 703.425 L757.27 703.425 L756.595 703.425 L755.92 703.425 L755.245 703.425 L754.57 703.425 L753.895 703.425 L753.22 703.425 L752.545 703.425 L751.87 703.425 L751.195 703.425 L750.52 703.425 L749.845 703.425 L749.17 703.425 L748.495 703.425 L747.82 703.425 L747.145 703.425 L746.47 703.425 L745.795 703.425 L745.12 703.425 L744.445 703.425 L743.77 703.425 L743.095 703.425 L742.42 703.425 L741.745 703.425 L741.07 703.425 L740.395 703.425 L739.72 703.425 L739.045 703.425 L738.37 703.425 L737.695 703.425 L737.02 703.425 L736.345 703.425 L735.67 703.425 L734.995 703.425 L734.32 703.425 L733.645 703.425 L732.97 703.425 L732.295 703.425 L731.62 703.425 L730.945 703.425 L730.27 703.425 L729.595 703.425 L728.92 703.425 L728.245 703.425 L727.57 703.425 L726.895 703.425 L726.22 703.425 L725.545 703.425 L724.87 703.425 L724.195 703.425 L723.52 703.425 L722.844 703.425 L722.169 703.425 L721.494 703.425 L720.819 703.425 L720.144 703.425 L719.469 703.425 L718.794 703.425 L718.119 703.425 L717.444 703.425 L716.769 703.425 L716.094 703.425 L715.419 703.425 L714.744 703.425 L714.069 703.425 L713.394 703.425 L712.719 703.425 L712.044 703.425 L711.369 703.425 L710.694 703.425 L710.019 703.425 L709.344 703.425 L708.669 703.425 L707.994 703.425 L707.319 703.425 L706.644 703.425 L705.969 703.425 L705.294 703.425 L704.619 703.425 L703.944 703.425 L703.269 703.425 L702.594 703.425 L701.919 703.425 L701.244 703.425 L700.569 703.425 L699.894 703.425 L699.219 703.425 L698.544 703.425 L697.869 703.425 L697.194 703.425 L696.519 703.425 L695.844 703.425 L695.169 703.425 L694.494 703.425 L693.819 703.425 L693.144 703.425 L692.469 703.425 L691.794 703.425 L691.119 703.425 L690.444 703.425 L689.769 703.425 L689.094 703.425 L688.419 703.425 L687.744 703.425 L687.069 703.425 L686.394 703.425 L685.719 703.425 L685.044 703.425 L684.369 703.425 L683.694 703.425 L683.019 703.425 L682.344 703.425 L681.669 703.425 L680.994 703.425 L680.319 703.425 L679.644 703.425 L678.969 703.425 L678.294 703.425 L677.619 703.425 L676.944 703.425 L676.269 703.425 L675.594 703.425 L674.919 703.425 L674.244 703.425 L673.569 703.425 L672.894 703.425 L672.219 703.425 L671.544 703.425 L670.869 703.425 L670.194 703.425 L669.519 703.425 L668.844 703.425 L668.169 703.425 L667.494 703.425 L666.819 703.425 L666.144 703.425 L665.469 703.425 L664.794 703.425 L664.119 703.425 L663.444 703.425 L662.769 703.425 L662.094 703.425 L661.419 703.425 L660.744 703.425 L660.069 703.425 L659.394 703.425 L658.719 703.425 L658.044 703.425 L657.369 703.425 L656.694 703.425 L656.019 703.425 L655.344 703.425 L654.669 703.425 L653.994 703.425 L653.319 703.425 L652.644 703.425 L651.969 703.425 L651.294 703.425 L650.619 703.425 L649.944 703.425 L649.269 703.425 L648.594 703.425 L647.919 703.425 L647.244 703.425 L646.569 703.425 L645.894 703.425 L645.219 703.425 L644.544 703.425 L643.869 703.425 L643.194 703.425 L642.519 703.425 L641.844 703.425 L641.169 703.425 L640.494 703.425 L639.819 703.425 L639.144 703.425 L638.469 703.425 L637.794 703.425 L637.119 703.425 L636.444 703.425 L635.769 703.425 L635.094 703.425 L634.419 703.425 L633.744 703.425 L633.069 703.425 L632.394 703.425 L631.719 703.425 L631.044 703.425 L630.369 703.425 L629.694 703.425 L629.019 703.425 L628.344 703.425 L627.669 703.425 L626.994 703.425 L626.319 703.425 L625.644 703.425 L624.969 703.425 L624.294 703.425 L623.619 703.425 L622.944 703.425 L622.269 703.425 L621.594 703.425 L620.919 703.425 L620.244 703.425 L619.569 703.425 L618.894 703.425 L618.219 703.425 L617.544 703.425 L616.869 703.425 L616.194 703.425 L615.519 703.425 L614.844 703.425 L614.169 703.425 L613.494 703.425 L612.819 703.425 L612.144 703.425 L611.469 703.425 L610.794 703.425 L610.119 703.425 L609.444 703.425 L608.769 703.425 L608.094 703.425 L607.419 703.425 L606.744 703.425 L606.069 703.425 L605.394 703.425 L604.719 703.425 L604.044 703.425 L603.369 703.425 L602.694 703.425 L602.019 703.425 L601.344 703.425 L600.669 703.425 L599.994 703.425 L599.319 703.425 L598.644 703.425 L597.969 703.425 L597.294 703.425 L596.619 703.425 L595.944 703.425 L595.269 703.425 L594.594 703.425 L593.919 703.425 L593.244 703.425 L592.569 703.425 L591.894 703.425 L591.219 703.425 L590.544 703.425 L589.869 703.425 L589.194 703.425 L588.519 703.425 L587.844 703.425 L587.169 703.425 L586.494 703.425 L585.819 703.425 L585.144 703.425 L584.469 703.425 L583.794 703.425 L583.119 703.425 L582.444 703.425 L581.769 703.425 L581.094 703.425 L580.419 703.425 L579.743 703.425 L579.068 703.425 L578.393 703.425 L577.718 703.425 L577.043 703.425 L576.368 703.425 L575.693 703.425 L575.018 703.425 L574.343 703.425 L573.668 703.425 L572.993 703.425 L572.318 703.425 L571.643 703.425 L570.968 703.425 L570.293 703.425 L569.618 703.425 L568.943 703.425 L568.268 703.425 L567.593 703.425 L566.918 703.425 L566.243 703.425 L565.568 703.425 L564.893 703.425 L564.218 703.425 L563.543 703.425 L562.868 703.425 L562.193 703.425 L561.518 703.425 L560.843 703.425 L560.168 703.425 L559.493 703.425 L558.818 703.425 L558.143 703.425 L557.468 703.425 L556.793 703.425 L556.118 703.425 L555.443 703.425 L554.768 703.425 L554.093 703.425 L553.418 703.425  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip603)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"553.418,710.754 554.093,710.754 554.768,710.754 555.443,710.754 556.118,710.754 556.793,710.754 557.468,710.754 558.143,710.754 558.818,710.754 559.493,710.754 560.168,710.754 560.843,710.754 561.518,710.754 562.193,710.754 562.868,710.754 563.543,710.754 564.218,710.754 564.893,710.754 565.568,710.754 566.243,710.754 566.918,710.754 567.593,710.754 568.268,710.754 568.943,710.754 569.618,710.754 570.293,710.754 570.968,710.754 571.643,710.754 572.318,710.754 572.993,710.754 573.668,710.754 574.343,710.754 575.018,710.754 575.693,710.754 576.368,710.754 577.043,710.754 577.718,710.754 578.393,710.754 579.068,710.754 579.743,710.754 580.419,710.754 581.094,710.754 581.769,710.754 582.444,710.754 583.119,710.754 583.794,710.754 584.469,710.754 585.144,710.754 585.819,710.754 586.494,710.754 587.169,710.754 587.844,710.754 588.519,710.754 589.194,710.754 589.869,710.754 590.544,710.754 591.219,710.754 591.894,710.754 592.569,710.754 593.244,710.754 593.919,710.754 594.594,710.754 595.269,710.754 595.944,710.754 596.619,710.754 597.294,710.754 597.969,710.754 598.644,710.754 599.319,710.754 599.994,710.754 600.669,710.754 601.344,710.754 602.019,710.754 602.694,710.754 603.369,710.754 604.044,710.754 604.719,710.754 605.394,710.754 606.069,710.754 606.744,710.754 607.419,710.754 608.094,710.754 608.769,710.754 609.444,710.754 610.119,710.754 610.794,710.754 611.469,710.754 612.144,710.754 612.819,710.754 613.494,710.754 614.169,710.754 614.844,710.754 615.519,710.754 616.194,710.754 616.869,710.754 617.544,710.754 618.219,710.754 618.894,710.754 619.569,710.754 620.244,710.754 620.919,710.754 621.594,710.754 622.269,710.754 622.944,710.754 623.619,710.754 624.294,710.754 624.969,710.754 625.644,710.754 626.319,710.754 626.994,710.754 627.669,710.754 628.344,710.754 629.019,710.754 629.694,710.754 630.369,710.754 631.044,710.754 631.719,710.754 632.394,710.754 633.069,710.754 633.744,710.754 634.419,710.754 635.094,710.754 635.769,710.754 636.444,710.754 637.119,710.754 637.794,710.754 638.469,710.754 639.144,710.754 639.819,710.754 640.494,710.754 641.169,710.754 641.844,710.754 642.519,710.754 643.194,710.754 643.869,710.754 644.544,710.754 645.219,710.754 645.894,710.754 646.569,710.754 647.244,710.754 647.919,710.754 648.594,710.754 649.269,710.754 649.944,710.754 650.619,710.754 651.294,710.754 651.969,710.754 652.644,710.754 653.319,710.754 653.994,710.754 654.669,710.754 655.344,710.754 656.019,710.754 656.694,710.754 657.369,710.754 658.044,710.754 658.719,710.754 659.394,710.754 660.069,710.754 660.744,710.754 661.419,710.754 662.094,710.754 662.769,710.754 663.444,710.754 664.119,710.754 664.794,710.754 665.469,710.754 666.144,710.754 666.819,710.754 667.494,710.754 668.169,710.754 668.844,710.754 669.519,710.754 670.194,710.754 670.869,710.754 671.544,710.754 672.219,710.754 672.894,710.754 673.569,710.754 674.244,710.754 674.919,710.754 675.594,710.754 676.269,710.754 676.944,710.754 677.619,710.754 678.294,710.754 678.969,710.754 679.644,710.754 680.319,710.754 680.994,710.754 681.669,710.754 682.344,710.754 683.019,710.754 683.694,710.754 684.369,710.754 685.044,710.754 685.719,710.754 686.394,710.754 687.069,710.754 687.744,710.754 688.419,710.754 689.094,710.754 689.769,710.754 690.444,710.754 691.119,710.754 691.794,710.754 692.469,710.754 693.144,710.754 693.819,710.754 694.494,710.754 695.169,710.754 695.844,710.754 696.519,710.754 697.194,710.754 697.869,710.754 698.544,710.754 699.219,710.754 699.894,710.754 700.569,710.754 701.244,710.754 701.919,710.754 702.594,710.754 703.269,710.754 703.944,710.754 704.619,710.754 705.294,710.754 705.969,710.754 706.644,710.754 707.319,710.754 707.994,710.754 708.669,710.754 709.344,710.754 710.019,710.754 710.694,710.754 711.369,710.754 712.044,710.754 712.719,710.754 713.394,710.754 714.069,710.754 714.744,710.754 715.419,710.754 716.094,710.754 716.769,710.754 717.444,710.754 718.119,710.754 718.794,710.754 719.469,710.754 720.144,710.754 720.819,710.754 721.494,710.754 722.169,710.754 722.844,710.754 723.52,710.754 724.195,710.754 724.87,710.754 725.545,710.754 726.22,710.754 726.895,710.754 727.57,710.754 728.245,710.754 728.92,710.754 729.595,710.754 730.27,710.754 730.945,710.754 731.62,710.754 732.295,710.754 732.97,710.754 733.645,710.754 734.32,710.754 734.995,710.754 735.67,710.754 736.345,710.754 737.02,710.754 737.695,710.754 738.37,710.754 739.045,710.754 739.72,710.754 740.395,710.754 741.07,710.754 741.745,710.754 742.42,710.754 743.095,710.754 743.77,710.754 744.445,710.754 745.12,710.754 745.795,710.754 746.47,710.754 747.145,710.754 747.82,710.754 748.495,710.754 749.17,710.754 749.845,710.754 750.52,710.754 751.195,710.754 751.87,710.754 752.545,710.754 753.22,710.754 753.895,710.754 754.57,710.754 755.245,710.754 755.92,710.754 756.595,710.754 757.27,710.754 757.945,710.754 758.62,710.754 759.295,710.754 759.97,710.754 760.645,710.754 761.32,710.754 761.995,710.754 762.67,710.754 763.345,710.754 764.02,710.754 764.695,710.754 765.37,710.754 766.045,710.754 766.72,710.754 767.395,710.754 768.07,710.754 768.745,710.754 769.42,710.754 770.095,710.754 770.77,710.754 771.445,710.754 772.12,710.754 772.795,710.754 773.47,710.754 774.145,710.754 774.82,710.754 775.495,710.754 776.17,710.754 776.845,710.754 777.52,710.754 778.195,710.754 778.87,710.754 779.545,710.754 780.22,710.754 780.895,710.754 781.57,710.754 782.245,710.754 782.92,710.754 783.595,710.754 784.27,710.754 784.945,710.754 785.62,710.754 786.295,710.754 786.97,710.754 787.645,710.754 788.32,710.754 788.995,710.754 789.67,710.754 790.345,710.754 791.02,710.754 791.695,710.754 792.37,710.754 793.045,710.754 793.72,710.754 794.395,710.754 795.07,710.754 795.745,710.754 796.42,710.754 797.095,710.754 797.77,710.754 798.445,710.754 799.12,710.754 799.795,710.754 800.47,710.754 801.145,710.754 801.82,710.754 802.495,710.754 803.17,710.754 803.845,710.754 804.52,710.754 805.195,710.754 805.87,710.754 806.545,710.754 807.22,710.754 807.895,710.754 808.57,710.754 809.245,710.754 809.92,710.754 810.595,710.754 811.27,710.754 811.945,710.754 812.62,710.754 813.295,710.754 813.97,710.754 814.645,710.754 815.32,710.754 815.995,710.754 816.67,710.754 817.345,710.754 818.02,710.754 818.695,710.754 819.37,710.754 820.045,710.754 820.72,710.754 821.395,710.754 822.07,710.754 822.745,710.754 823.42,710.754 824.095,710.754 824.77,710.754 825.445,710.754 826.12,710.754 826.795,710.754 827.47,710.754 828.145,710.754 828.82,710.754 829.495,710.754 830.17,710.754 830.845,710.754 831.52,710.754 832.195,710.754 832.87,710.754 833.545,710.754 834.22,710.754 834.895,710.754 835.57,710.754 836.245,710.754 836.92,710.754 837.595,710.754 838.27,710.754 838.945,710.754 839.62,710.754 840.295,710.754 840.97,710.754 841.645,710.754 842.32,710.754 842.995,710.754 843.67,710.754 844.345,710.754 845.02,710.754 845.695,710.754 846.37,710.754 847.045,710.754 847.72,710.754 848.395,710.754 849.07,710.754 849.745,710.754 850.42,710.754 851.095,710.754 851.77,710.754 852.445,710.754 853.12,710.754 853.795,710.754 854.47,710.754 855.145,710.754 855.82,710.754 856.495,710.754 857.17,710.754 857.845,710.754 858.52,710.754 859.195,710.754 859.87,710.754 860.545,710.754 861.22,710.754 861.895,710.754 862.57,710.754 863.245,710.754 863.92,710.754 864.595,710.754 865.27,710.754 865.945,710.754 866.621,710.754 867.296,710.754 867.971,710.754 868.646,710.754 869.321,710.754 869.996,710.754 870.671,710.754 871.346,710.754 872.021,710.754 872.696,710.754 873.371,710.754 874.046,710.754 874.721,710.754 875.396,710.754 876.071,710.754 876.746,710.754 877.421,710.754 878.096,710.754 878.771,710.754 879.446,710.754 880.121,710.754 880.796,710.754 881.471,710.754 882.146,710.754 882.821,710.754 883.496,710.754 884.171,710.754 884.846,710.754 885.521,710.754 886.196,710.754 886.871,710.754 887.546,710.754 888.221,710.754 888.896,710.754 889.571,710.754 890.246,710.754 890.921,710.754 891.596,710.754 892.271,710.754 892.946,710.754 893.621,710.754 894.296,710.754 894.971,710.754 895.646,710.754 896.321,710.754 896.996,710.754 897.671,710.754 898.346,710.754 899.021,710.754 899.696,710.754 900.371,710.754 901.046,710.754 901.721,710.754 902.396,710.754 903.071,710.754 903.746,710.754 904.421,710.754 905.096,710.754 905.771,710.754 906.446,710.754 907.121,710.754 907.796,710.754 908.471,710.754 909.146,710.754 909.821,710.754 910.496,710.754 911.171,710.754 911.846,710.754 912.521,710.754 913.196,710.754 913.871,710.754 914.546,710.754 915.221,710.754 915.896,710.754 916.571,710.754 917.246,710.754 917.921,710.754 918.596,710.754 919.271,710.754 919.946,710.754 920.621,710.754 921.296,710.754 921.971,710.754 922.646,710.754 923.321,710.754 923.996,710.754 924.671,710.754 925.346,710.754 926.021,710.754 926.696,710.754 927.371,710.754 928.046,710.754 928.721,710.754 929.396,710.754 930.071,710.754 930.746,710.754 931.421,710.754 932.096,710.754 932.771,710.754 933.446,710.754 934.121,710.754 934.796,710.754 935.471,710.754 936.146,710.754 936.821,710.754 937.496,710.754 938.171,710.754 938.846,710.754 939.521,710.754 940.196,710.754 940.871,710.754 941.546,710.754 942.221,710.754 942.896,710.754 943.571,710.754 944.246,710.754 944.921,710.754 945.596,710.754 946.271,710.754 946.946,710.754 947.621,710.754 948.296,710.754 948.971,710.754 949.646,710.754 950.321,710.754 950.996,710.754 951.671,710.754 952.346,710.754 953.021,710.754 953.696,710.754 954.371,710.754 955.046,710.754 955.721,710.754 956.396,710.754 957.071,710.754 957.746,710.754 958.421,710.754 959.096,710.754 959.771,710.754 960.446,710.754 961.121,710.754 961.796,710.754 962.471,710.754 963.146,710.754 963.821,710.754 964.496,710.754 965.171,710.754 965.846,710.754 966.521,710.754 967.196,710.754 967.871,710.754 968.546,710.754 969.221,710.754 969.896,710.754 970.571,710.754 971.246,710.754 971.921,710.754 972.596,710.754 973.271,710.754 973.946,710.754 974.621,710.754 975.296,710.754 975.971,710.754 976.646,710.754 977.321,710.754 977.996,710.754 978.671,710.754 979.346,710.754 980.021,710.754 980.696,710.754 981.371,710.754 982.046,710.754 982.721,710.754 983.396,710.754 984.071,710.754 984.746,710.754 985.421,710.754 986.096,710.754 986.771,710.754 987.446,710.754 988.121,710.754 988.796,710.754 989.471,710.754 990.146,710.754 990.821,710.754 991.496,710.754 992.171,710.754 992.846,710.754 993.521,710.754 994.196,710.754 994.871,710.754 995.546,710.754 996.221,710.754 996.896,710.754 997.571,710.754 998.246,710.754 998.921,710.754 999.596,710.754 1000.27,710.754 1000.95,710.754 1001.62,710.754 1002.3,710.754 1002.97,710.754 1003.65,710.754 1004.32,710.754 1005,710.754 1005.67,710.754 1006.35,710.754 1007.02,710.754 1007.7,710.754 1008.37,710.754 1009.05,710.754 1009.72,710.754 1010.4,710.754 1011.07,710.754 1011.75,710.754 1012.42,710.754 1013.1,710.754 1013.77,710.754 1014.45,710.754 1015.12,710.754 1015.8,710.754 1016.47,710.754 1017.15,710.754 1017.82,710.754 1018.5,710.754 1019.17,710.754 1019.85,710.754 1020.52,710.754 1021.2,710.754 1021.87,710.754 1022.55,710.754 1023.22,710.754 1023.9,710.754 1024.57,710.754 1025.25,710.754 1025.92,710.754 1026.6,710.754 1027.27,710.754 1027.95,710.754 1028.62,710.754 1029.3,710.754 1029.97,710.754 1030.65,710.754 1031.32,710.754 1032,710.754 1032.67,710.754 1033.35,710.754 1034.02,710.754 1034.7,710.754 1035.37,710.754 1036.05,710.754 1036.72,710.754 1037.4,710.754 1038.07,710.754 1038.75,710.754 1039.42,710.754 1040.1,710.754 1040.77,710.754 1041.45,710.754 1042.12,710.754 1042.8,710.754 1043.47,710.754 1044.15,710.754 1044.82,710.754 1045.5,710.754 1046.17,710.754 1046.85,710.754 1047.52,710.754 1048.2,710.754 1048.87,710.754 1049.55,710.754 1050.22,710.754 1050.9,710.754 1051.57,710.754 1052.25,710.754 1052.92,710.754 1053.6,710.754 1054.27,710.754 1054.95,710.754 1055.62,710.754 1056.3,710.754 1056.97,710.754 1057.65,710.754 1058.32,710.754 1059,710.754 1059.67,710.754 1060.35,710.754 1061.02,710.754 1061.7,710.754 1062.37,710.754 1063.05,710.754 1063.72,710.754 1064.4,710.754 1065.07,710.754 1065.75,710.754 1066.42,710.754 1067.1,710.754 1067.77,710.754 1068.45,710.754 1069.12,710.754 1069.8,710.754 1070.47,710.754 1071.15,710.754 1071.82,710.754 1072.5,710.754 1073.17,710.754 1073.85,710.754 1074.52,710.754 1075.2,710.754 1075.87,710.754 1076.55,710.754 1077.22,710.754 1077.9,710.754 1078.57,710.754 1079.25,710.754 1079.92,710.754 1080.6,710.754 1081.27,710.754 1081.95,710.754 1082.62,710.754 1083.3,710.754 1083.97,710.754 1084.65,710.754 1085.32,710.754 1086,710.754 1086.67,710.754 1087.35,710.754 1088.02,710.754 1088.7,710.754 1089.37,710.754 1090.05,710.754 1090.72,710.754 1091.4,710.754 1092.07,710.754 1092.75,710.754 1093.42,710.754 1094.1,710.754 1094.77,710.754 1095.45,710.754 1096.12,710.754 1096.8,710.754 1097.47,710.754 1098.15,710.754 1098.82,710.754 1099.5,710.754 1100.17,710.754 1100.85,710.754 1101.52,710.754 1102.2,710.754 1102.87,710.754 1103.55,710.754 1104.22,710.754 1104.9,710.754 1105.57,710.754 1106.25,710.754 1106.92,710.754 1107.6,710.754 1108.27,710.754 1108.95,710.754 1109.62,710.754 1110.3,710.754 1110.97,710.754 1111.65,710.754 1112.32,710.754 1113,710.754 1113.67,710.754 1114.35,710.754 1115.02,710.754 1115.7,710.754 1116.37,710.754 1117.05,710.754 1117.72,710.754 1118.4,710.754 1119.07,710.754 1119.75,710.754 1120.42,710.754 1121.1,710.754 1121.77,710.754 1122.45,710.754 1123.12,710.754 1123.8,710.754 1124.47,710.754 1125.15,710.754 1125.82,710.754 1126.5,710.754 1127.17,710.754 1127.85,710.754 1128.52,710.754 1129.2,710.754 1129.87,710.754 1130.55,710.754 1131.22,710.754 1131.9,710.754 1132.57,710.754 1133.25,710.754 1133.92,710.754 1134.6,710.754 1135.27,710.754 1135.95,710.754 1136.62,710.754 1137.3,710.754 1137.97,710.754 1138.65,710.754 1139.32,710.754 1140,710.754 1140.67,710.754 1141.35,710.754 1142.02,710.754 1142.7,710.754 1143.37,710.754 1144.05,710.754 1144.72,710.754 1145.4,710.754 1146.07,710.754 1146.75,710.754 1147.42,710.754 1148.1,710.754 1148.77,710.754 1149.45,710.754 1150.12,710.754 1150.8,710.754 1151.47,710.754 1152.15,710.754 1152.82,710.754 1153.5,710.754 1154.17,710.754 1154.85,710.754 1155.52,710.754 1156.2,710.754 1156.87,710.754 1157.55,710.754 1158.22,710.754 1158.9,710.754 1159.57,710.754 1160.25,710.754 1160.92,710.754 1161.6,710.754 1162.27,710.754 1162.95,710.754 1163.62,710.754 1164.3,710.754 1164.97,710.754 1165.65,710.754 1166.32,710.754 1167,710.754 1167.67,710.754 1168.35,710.754 1169.02,710.754 1169.7,710.754 1170.37,710.754 1171.05,710.754 1171.72,710.754 1172.4,710.754 1173.07,710.754 1173.75,710.754 1174.42,710.754 1175.1,710.754 1175.77,710.754 1176.45,710.754 1177.12,710.754 1177.8,710.754 1178.47,710.754 1179.15,710.754 1179.82,710.754 1180.5,710.754 1181.17,710.754 1181.85,710.754 1182.52,710.754 1183.2,710.754 1183.87,710.754 1184.55,710.754 1185.22,710.754 1185.9,710.754 1186.57,710.754 1187.25,710.754 1187.92,710.754 1188.6,710.754 1189.27,710.754 1189.95,710.754 1190.62,710.754 1191.3,710.754 1191.97,710.754 1192.65,710.754 1193.32,710.754 1194,710.754 1194.67,710.754 1195.35,710.754 1196.02,710.754 1196.7,710.754 1197.37,710.754 1198.05,710.754 1198.72,710.754 1199.4,710.754 1200.07,710.754 1200.75,710.754 1201.42,710.754 1202.1,710.754 1202.77,710.754 1203.45,710.754 1204.12,710.754 1204.8,710.754 1205.47,710.754 1206.15,710.754 1206.82,710.754 1207.5,710.754 1208.17,710.754 1208.85,710.754 1209.52,710.754 1210.2,710.754 1210.87,710.754 1211.55,710.754 1212.22,710.754 1212.9,710.754 1213.57,710.754 1214.25,710.754 1214.92,710.754 1215.6,710.754 1216.27,710.754 1216.95,710.754 1217.62,710.754 1218.3,710.754 1218.97,710.754 1219.65,710.754 1220.32,710.754 1221,710.754 1221.67,710.754 1222.35,710.754 1223.02,710.754 1223.7,710.754 1224.37,710.754 1225.05,710.754 1225.72,710.754 1226.4,710.754 1227.07,710.754 1227.75,710.754 1228.42,710.754 1229.1,710.754 1229.77,710.754 1230.45,710.754 1231.12,710.754 1231.8,710.754 1232.47,710.754 1233.15,710.754 1233.82,710.754 1234.5,710.754 1235.17,710.754 1235.85,710.754 1236.52,710.754 1237.2,710.754 1237.87,710.754 1238.55,710.754 1239.22,710.754 1239.9,710.754 1240.57,710.754 1241.25,710.754 1241.92,710.754 1242.6,710.754 1243.27,710.754 1243.95,710.754 1244.62,710.754 1245.3,710.754 1245.97,710.754 1246.65,710.754 1247.32,710.754 1248,710.754 1248.67,710.754 1249.35,710.754 1250.02,710.754 1250.7,710.754 1251.37,710.754 1252.05,710.754 1252.72,710.754 1253.4,710.754 1254.07,710.754 1254.75,710.754 1255.42,710.754 1256.1,710.754 1256.77,710.754 1257.45,710.754 1258.12,710.754 1258.8,710.754 1259.47,710.754 1260.15,710.754 1260.82,710.754 1261.5,710.754 1262.17,710.754 1262.85,710.754 1263.52,710.754 1264.2,710.754 1264.87,710.754 1265.55,710.754 1266.22,710.754 1266.9,710.754 1267.57,710.754 1268.25,710.754 1268.92,710.754 1269.6,710.754 1270.27,710.754 1270.95,710.754 1271.62,710.754 1272.3,710.754 1272.97,710.754 1273.65,710.754 1274.32,710.754 1275,710.754 1275.67,710.754 1276.35,710.754 1277.02,710.754 1277.7,710.754 1278.37,710.754 1279.05,710.754 1279.72,710.754 1280.4,710.754 1281.07,710.754 1281.75,710.754 1282.42,710.754 1283.1,710.754 1283.77,710.754 1284.45,710.754 1285.12,710.754 1285.8,710.754 1286.47,710.754 1287.15,710.754 1287.82,710.754 1288.5,710.754 1289.17,710.754 1289.85,710.754 1290.52,710.754 1291.2,710.754 1291.87,710.754 1292.55,710.754 1293.22,710.754 1293.9,710.754 1294.57,710.754 1295.25,710.754 1295.92,710.754 1296.6,710.754 1297.27,710.754 1297.95,710.754 1298.62,710.754 1299.3,710.754 1299.97,710.754 1300.65,710.754 1301.32,710.754 1302,710.754 1302.67,710.754 1303.35,710.754 1304.02,710.754 1304.7,710.754 1305.37,710.754 1306.05,710.754 1306.72,710.754 1307.4,710.754 1308.07,710.754 1308.75,710.754 1309.42,710.754 1310.1,710.754 1310.77,710.754 1311.45,710.754 1312.12,710.754 1312.8,710.754 1313.47,710.754 1314.15,710.754 1314.82,710.754 1315.5,710.754 1316.17,710.754 1316.85,710.754 1317.52,710.754 1318.2,710.754 1318.87,710.754 1319.55,710.754 1320.22,710.754 1320.9,710.754 1321.57,710.754 1322.25,710.754 1322.92,710.754 1323.6,710.754 1324.27,710.754 1324.95,710.754 1325.62,710.754 1326.3,710.754 1326.97,710.754 1327.65,710.754 1328.32,710.754 1329,710.754 1329.67,710.754 1330.35,710.754 1331.02,710.754 1331.7,710.754 1332.37,710.754 1333.05,710.754 1333.72,710.754 1334.4,710.754 1335.07,710.754 1335.75,710.754 1336.42,710.754 1337.1,710.754 1337.77,710.754 1338.45,710.754 1339.12,710.754 1339.8,710.754 1340.47,710.754 1341.15,710.754 1341.82,710.754 1342.5,710.754 1343.17,710.754 1343.85,710.754 1344.52,710.754 1345.2,710.754 1345.87,710.754 1346.55,710.754 1347.22,710.754 1347.9,710.754 1348.57,710.754 1349.25,710.754 1349.92,710.754 1350.6,710.754 1351.27,710.754 1351.95,710.754 1352.62,710.754 1353.3,710.754 1353.97,710.754 1354.65,710.754 1355.32,710.754 1356,710.754 1356.67,710.754 1357.35,710.754 1358.02,710.754 1358.7,710.754 1359.37,710.754 1360.05,710.754 1360.72,710.754 1361.4,710.754 1362.07,710.754 1362.75,710.754 1363.42,710.754 1364.1,710.754 1364.77,710.754 1365.45,710.754 1366.12,710.754 1366.8,710.754 1367.47,710.754 1368.15,710.754 1368.82,710.754 1369.5,710.754 1370.17,710.754 1370.85,710.754 1371.52,710.754 1372.2,710.754 1372.87,710.754 1373.55,710.754 1374.22,710.754 1374.9,710.754 1375.57,710.754 1376.25,710.754 1376.92,710.754 1377.6,710.754 1378.27,710.754 1378.95,710.754 1379.62,710.754 1380.3,710.754 1380.97,710.754 1381.65,710.754 1382.32,710.754 1383,710.754 1383.67,710.754 1384.35,710.754 1385.02,710.754 1385.7,710.754 1386.37,710.754 1387.05,710.754 1387.72,710.754 1388.4,710.754 1389.07,710.754 1389.75,710.754 1390.42,710.754 1391.1,710.754 1391.77,710.754 1392.45,710.754 1393.12,710.754 1393.8,710.754 1394.47,710.754 1395.15,710.754 1395.82,710.754 1396.5,710.754 1397.17,710.754 1397.85,710.754 1398.52,710.754 1399.2,710.754 1399.87,710.754 1400.55,710.754 1401.22,710.754 1401.9,710.754 1402.57,710.754 1403.25,710.754 1403.92,710.754 1404.6,710.754 1405.27,710.754 1405.95,710.754 1406.62,710.754 1407.3,710.754 1407.97,710.754 1408.65,710.754 1409.32,710.754 1410,710.754 1410.67,710.754 1411.35,710.754 1412.02,710.754 1412.7,710.754 1413.37,710.754 1414.05,710.754 1414.72,710.754 1415.4,710.754 1416.07,710.754 1416.75,710.754 1417.42,710.754 1418.1,710.754 1418.77,710.754 1419.45,710.754 1420.12,710.754 1420.8,710.754 1421.47,710.754 1422.15,710.754 1422.82,710.754 1423.5,710.754 1424.17,710.754 1424.85,710.754 1425.52,710.754 1426.2,710.754 1426.87,710.754 1427.55,710.754 1428.22,710.754 1428.9,710.754 1429.57,710.754 1430.25,710.754 1430.92,710.754 1431.6,710.754 1432.27,710.754 1432.95,710.754 1433.62,710.754 1434.3,710.754 1434.97,710.754 1435.65,710.754 1436.32,710.754 1437,710.754 1437.67,710.754 1438.35,710.754 1439.02,710.754 1439.7,710.754 1440.37,710.754 1441.05,710.754 1441.72,710.754 1442.4,710.754 1443.07,710.754 1443.75,710.754 1444.42,710.754 1445.1,710.754 1445.77,710.754 1446.45,710.754 1447.12,710.754 1447.8,710.754 1448.47,710.754 1449.15,710.754 1449.82,710.754 1450.5,710.754 1451.17,710.754 1451.85,710.754 1452.52,710.754 1453.2,710.754 1453.87,710.754 1454.55,710.754 1455.22,710.754 1455.9,710.754 1456.57,710.754 1457.25,710.754 1457.92,710.754 1458.6,710.754 1459.27,710.754 1459.95,710.754 1460.62,710.754 1461.3,710.754 1461.97,710.754 1462.65,710.754 1463.32,710.754 1464,710.754 1464.67,710.754 1465.35,710.754 1466.02,710.754 1466.7,710.754 1467.37,710.754 1468.05,710.754 1468.72,710.754 1469.4,710.754 1470.07,710.754 1470.75,710.754 1471.42,710.754 1472.1,710.754 1472.77,710.754 1473.45,710.754 1474.12,710.754 1474.8,710.754 1475.47,710.754 1476.15,710.754 1476.82,710.754 1477.5,710.754 1478.17,710.754 1478.85,710.754 1479.52,710.754 1480.2,710.754 1480.87,710.754 1481.55,710.754 1482.22,710.754 1482.9,710.754 1483.57,710.754 1484.25,710.754 1484.92,710.754 1485.6,710.754 1486.27,710.754 1486.95,710.754 1487.62,710.754 1488.3,710.754 1488.97,710.754 1489.65,710.754 1490.32,710.754 1491,710.754 1491.67,710.754 1492.35,710.754 1493.02,710.754 1493.7,710.754 1494.37,710.754 1495.05,710.754 1495.72,710.754 1496.4,710.754 1497.07,710.754 1497.75,710.754 1498.42,710.754 1499.1,710.754 1499.77,710.754 1500.45,710.754 1501.12,710.754 1501.8,710.754 1502.47,710.754 1503.15,710.754 1503.82,710.754 1504.5,710.754 1505.17,710.754 1505.85,710.754 1506.52,710.754 1507.2,710.754 1507.87,710.754 1508.55,710.754 1509.23,710.754 1509.9,710.754 1510.58,710.754 1511.25,710.754 1511.93,710.754 1512.6,710.754 1513.28,710.754 1513.95,710.754 1514.63,710.754 1515.3,710.754 1515.98,710.754 1516.65,710.754 1517.33,710.754 1518,710.754 1518.68,710.754 1519.35,710.754 1520.03,710.754 1520.7,710.754 1521.38,710.754 1522.05,710.754 1522.73,710.754 1523.4,710.754 1524.08,710.754 1524.75,710.754 1525.43,710.754 1526.1,710.754 1526.78,710.754 1527.45,710.754 1528.13,710.754 1528.8,710.754 1529.48,710.754 1530.15,710.754 1530.83,710.754 1531.5,710.754 1532.18,710.754 1532.85,710.754 1533.53,710.754 1534.2,710.754 1534.88,710.754 1535.55,710.754 1536.23,710.754 1536.9,710.754 1537.58,710.754 1538.25,710.754 1538.93,710.754 1539.6,710.754 1540.28,710.754 1540.95,710.754 1541.63,710.754 1542.3,710.754 1542.98,710.754 1543.65,710.754 1544.33,710.754 1545,710.754 1545.68,710.754 1546.35,710.754 1547.03,710.754 1547.7,710.754 1548.38,710.754 1549.05,710.754 1549.73,710.754 1550.4,710.754 1551.08,710.754 1551.75,710.754 1552.43,710.754 1553.1,710.754 1553.78,710.754 1554.45,710.754 1555.13,710.754 1555.8,710.754 1556.48,710.754 1557.15,710.754 1557.83,710.754 1558.5,710.754 1559.18,710.754 1559.85,710.754 1560.53,710.754 1561.2,710.754 1561.88,710.754 1562.55,710.754 1563.23,710.754 1563.9,710.754 1564.58,710.754 1565.25,710.754 1565.93,710.754 1566.6,710.754 1567.28,710.754 1567.95,710.754 1568.63,710.754 1569.3,710.754 1569.98,710.754 1570.65,710.754 1571.33,710.754 1572,710.754 1572.68,710.754 1573.35,710.754 1574.03,710.754 1574.7,710.754 1575.38,710.754 1576.05,710.754 1576.73,710.754 1577.4,710.754 1578.08,710.754 1578.75,710.754 1579.43,710.754 1580.1,710.754 1580.78,710.754 1581.45,710.754 1582.13,710.754 1582.8,710.754 1583.48,710.754 1584.15,710.754 1584.83,710.754 1585.5,710.754 1586.18,710.754 1586.85,710.754 1587.53,710.754 1588.2,710.754 1588.88,710.754 1589.55,710.754 1590.23,710.754 1590.9,710.754 1591.58,710.754 1592.25,710.754 1592.93,710.754 1593.6,710.754 1594.28,710.754 1594.95,710.754 1595.63,710.754 1596.3,710.754 1596.98,710.754 1597.65,710.754 1598.33,710.754 1599,710.754 1599.68,710.754 1600.35,710.754 1601.03,710.754 1601.7,710.754 1602.38,710.754 1603.05,710.754 1603.73,710.754 1604.4,710.754 1605.08,710.754 1605.75,710.754 1606.43,710.754 1607.1,710.754 1607.78,710.754 1608.45,710.754 1609.13,710.754 1609.8,710.754 1610.48,710.754 1611.15,710.754 1611.83,710.754 1612.5,710.754 1613.18,710.754 1613.85,710.754 1614.53,710.754 1615.2,710.754 1615.88,710.754 1616.55,710.754 1617.23,710.754 1617.9,710.754 1618.58,710.754 1619.25,710.754 1619.93,710.754 1620.6,710.754 1621.28,710.754 1621.95,710.754 1622.63,710.754 1623.3,710.754 1623.98,710.754 1624.65,710.754 1625.33,710.754 1626,710.754 1626.68,710.754 1627.35,710.754 1628.03,710.754 1628.7,710.754 1629.38,710.754 1630.05,710.754 1630.73,710.754 1631.4,710.754 1632.08,710.754 1632.75,710.754 1633.43,710.754 1634.1,710.754 1634.78,710.754 1635.45,710.754 1636.13,710.754 1636.8,710.754 1637.48,710.754 1638.15,710.754 1638.83,710.754 1639.5,710.754 1640.18,710.754 1640.85,710.754 1641.53,710.754 1642.2,710.754 1642.88,710.754 1643.55,710.754 1644.23,710.754 1644.9,710.754 1645.58,710.754 1646.25,710.754 1646.93,710.754 1647.6,710.754 1648.28,710.754 1648.95,710.754 1649.63,710.754 1650.3,710.754 1650.98,710.754 1651.65,710.754 1652.33,710.754 1653,710.754 1653.68,710.754 1654.35,710.754 1655.03,710.754 1655.7,710.754 1656.38,710.754 1657.05,710.754 1657.73,710.754 1658.4,710.754 1659.08,710.754 1659.75,710.754 1660.43,710.754 1661.1,710.754 1661.78,710.754 1662.45,710.754 1663.13,710.754 1663.8,710.754 1664.48,710.754 1665.15,710.754 1665.83,710.754 1666.5,710.754 1667.18,710.754 1667.85,710.754 1668.53,710.754 1669.2,710.754 1669.88,710.754 1670.55,710.754 1671.23,710.754 1671.9,710.754 1672.58,710.754 1673.25,710.754 1673.93,710.754 1674.6,710.754 1675.28,710.754 1675.95,710.754 1676.63,710.754 1677.3,710.754 1677.98,710.754 1678.65,710.754 1679.33,710.754 1680,710.754 1680.68,710.754 1681.35,710.754 1682.03,710.754 1682.7,710.754 1683.38,710.754 1684.05,710.754 1684.73,710.754 1685.4,710.754 1686.08,710.754 1686.75,710.754 1687.43,710.754 1688.1,710.754 1688.78,710.754 1689.45,710.754 1690.13,710.754 1690.8,710.754 1691.48,710.754 1692.15,710.754 1692.83,710.754 1693.5,710.754 1694.18,710.754 1694.85,710.754 1695.53,710.754 1696.2,710.754 1696.88,710.754 1697.55,710.754 1698.23,710.754 1698.9,710.754 1699.58,710.754 1700.25,710.754 1700.93,710.754 1701.6,710.754 1702.28,710.754 1702.95,710.754 1703.63,710.754 1704.3,710.754 1704.98,710.754 1705.65,710.754 1706.33,710.754 1707,710.754 1707.68,710.754 1708.35,710.754 1709.03,710.754 1709.7,710.754 1710.38,710.754 1711.05,710.754 1711.73,710.754 1712.4,710.754 1713.08,710.754 1713.75,710.754 1714.43,710.754 1715.1,710.754 1715.78,710.754 1716.45,710.754 1717.13,710.754 1717.8,710.754 1718.48,710.754 1719.15,710.754 1719.83,710.754 1720.5,710.754 1721.18,710.754 1721.85,710.754 1722.53,710.754 1723.2,710.754 1723.88,710.754 1724.55,710.754 1725.23,710.754 1725.9,710.754 1726.58,710.754 1727.25,710.754 1727.93,710.754 1728.6,710.754 1729.28,710.754 1729.95,710.754 1730.63,710.754 1731.3,710.754 1731.98,710.754 1732.65,710.754 1733.33,710.754 1734,710.754 1734.68,710.754 1735.35,710.754 1736.03,710.754 1736.7,710.754 1737.38,710.754 1738.05,710.754 1738.73,710.754 1739.4,710.754 1740.08,710.754 1740.75,710.754 1741.43,710.754 1742.1,710.754 1742.78,710.754 1743.45,710.754 1744.13,710.754 1744.8,710.754 1745.48,710.754 1746.15,710.754 1746.83,710.754 1747.5,710.754 1748.18,710.754 1748.85,710.754 1749.53,710.754 1750.2,710.754 1750.88,710.754 1751.55,710.754 1752.23,710.754 1752.9,710.754 1753.58,710.754 1754.25,710.754 1754.93,710.754 1755.6,710.754 1756.28,710.754 1756.95,710.754 1757.63,710.754 1758.3,710.754 1758.98,710.754 1759.65,710.754 1760.33,710.754 1761,710.754 1761.68,710.754 1762.35,710.754 1763.03,710.754 1763.7,710.754 1764.38,710.754 1765.05,710.754 1765.73,710.754 1766.4,710.754 1767.08,710.754 1767.75,710.754 1768.43,710.754 1769.1,710.754 1769.78,710.754 1770.45,710.754 1771.13,710.754 1771.8,710.754 1772.48,710.754 1773.15,710.754 1773.83,710.754 1774.5,710.754 1775.18,710.754 1775.85,710.754 1776.53,710.754 1777.2,710.754 1777.88,710.754 1778.55,710.754 1779.23,710.754 1779.9,710.754 1780.58,710.754 1781.25,710.754 1781.93,710.754 1782.6,710.754 1783.28,710.754 1783.95,710.754 1784.63,710.754 1785.3,710.754 1785.98,710.754 1786.65,710.754 1787.33,710.754 1788,710.754 1788.68,710.754 1789.35,710.754 1790.03,710.754 1790.7,710.754 1791.38,710.754 1792.05,710.754 1792.73,710.754 1793.4,710.754 1794.08,710.754 1794.75,710.754 1795.43,710.754 1796.1,710.754 1796.78,710.754 1797.45,710.754 1798.13,710.754 1798.8,710.754 1799.48,710.754 1800.15,710.754 1800.83,710.754 1801.5,710.754 1802.18,710.754 1802.85,710.754 1803.53,710.754 1804.2,710.754 1804.88,710.754 1805.55,710.754 1806.23,710.754 1806.9,710.754 1807.58,710.754 1808.25,710.754 1808.93,710.754 1809.6,710.754 1810.28,710.754 1810.95,710.754 1811.63,710.754 1812.3,710.754 1812.98,710.754 1813.65,710.754 1814.33,710.754 1815,710.754 1815.68,710.754 1816.35,710.754 1817.03,710.754 1817.7,710.754 1818.38,710.754 1819.05,710.754 1819.73,710.754 1820.4,710.754 1821.08,710.754 1821.75,710.754 1822.43,710.754 1823.1,710.754 1823.78,710.754 1824.45,710.754 1825.13,710.754 1825.8,710.754 1826.48,710.754 1827.15,710.754 1827.83,710.754 1828.5,710.754 1829.18,710.754 1829.85,710.754 1830.53,710.754 1831.2,710.754 1831.88,710.754 1832.55,710.754 1833.23,710.754 1833.9,710.754 1834.58,710.754 1835.25,710.754 1835.93,710.754 1836.6,710.754 1837.28,710.754 1837.95,710.754 1838.63,710.754 1839.3,710.754 1839.98,710.754 1840.65,710.754 1841.33,710.754 1842,710.754 1842.68,710.754 1843.35,710.754 1844.03,710.754 1844.7,710.754 1845.38,710.754 1846.05,710.754 1846.73,710.754 1847.4,710.754 1848.08,710.754 1848.75,710.754 1849.43,710.754 1850.1,710.754 1850.78,710.754 1851.45,710.754 1852.13,710.754 1852.8,710.754 1853.48,710.754 1854.15,710.754 1854.83,710.754 1855.5,710.754 1856.18,710.754 1856.85,710.754 1857.53,710.754 1858.2,710.754 1858.88,710.754 1859.55,710.754 1860.23,710.754 1860.9,710.754 1861.58,710.754 1862.25,710.754 1862.93,710.754 1863.6,710.754 1864.28,710.754 1864.95,710.754 1865.63,710.754 1866.3,710.754 1866.98,710.754 1867.65,710.754 1868.33,710.754 1869,710.754 1869.68,710.754 1870.35,710.754 1871.03,710.754 1871.7,710.754 1872.38,710.754 1873.05,710.754 1873.73,710.754 1874.4,710.754 1875.08,710.754 1875.75,710.754 1876.43,710.754 1877.1,710.754 1877.78,710.754 1878.45,710.754 1879.13,710.754 1879.8,710.754 1880.48,710.754 1881.15,710.754 1881.83,710.754 1882.5,710.754 1883.18,710.754 1883.85,710.754 1884.53,710.754 1885.2,710.754 1885.88,710.754 1886.55,710.754 1887.23,710.754 1887.9,710.754 1888.58,710.754 1889.25,710.754 1889.93,710.754 1890.6,710.754 1891.28,710.754 1891.95,710.754 1892.63,710.754 1893.3,710.754 1893.98,710.754 1894.65,710.754 1895.33,710.754 1896,710.754 1896.68,710.754 1897.35,710.754 1898.03,710.754 1898.7,710.754 1899.38,710.754 1900.05,710.754 1900.73,710.754 1901.4,710.754 1902.08,710.754 1902.75,710.754 \"/>\n<path clip-path=\"url(#clip603)\" d=\"M553.418 708.817 L554.093 708.817 L554.768 708.817 L555.443 708.817 L556.118 708.817 L556.793 708.817 L557.468 708.817 L558.143 708.817 L558.818 708.817 L559.493 708.817 L560.168 708.817 L560.843 708.817 L561.518 708.817 L562.193 708.817 L562.868 708.817 L563.543 708.817 L564.218 708.817 L564.893 708.817 L565.568 708.817 L566.243 708.817 L566.918 708.817 L567.593 708.817 L568.268 708.817 L568.943 708.817 L569.618 708.817 L570.293 708.817 L570.968 708.817 L571.643 708.817 L572.318 708.817 L572.993 708.817 L573.668 708.817 L574.343 708.817 L575.018 708.817 L575.693 708.817 L576.368 708.817 L577.043 708.817 L577.718 708.817 L578.393 708.817 L579.068 708.817 L579.743 708.817 L580.419 708.817 L581.094 708.817 L581.769 708.817 L582.444 708.817 L583.119 708.817 L583.794 708.817 L584.469 708.817 L585.144 708.817 L585.819 708.817 L586.494 708.817 L587.169 708.817 L587.844 708.817 L588.519 708.817 L589.194 708.817 L589.869 708.817 L590.544 708.817 L591.219 708.817 L591.894 708.817 L592.569 708.817 L593.244 708.817 L593.919 708.817 L594.594 708.817 L595.269 708.817 L595.944 708.817 L596.619 708.817 L597.294 708.817 L597.969 708.817 L598.644 708.817 L599.319 708.817 L599.994 708.817 L600.669 708.817 L601.344 708.817 L602.019 708.817 L602.694 708.817 L603.369 708.817 L604.044 708.817 L604.719 708.817 L605.394 708.817 L606.069 708.817 L606.744 708.817 L607.419 708.817 L608.094 708.817 L608.769 708.817 L609.444 708.817 L610.119 708.817 L610.794 708.817 L611.469 708.817 L612.144 708.817 L612.819 708.817 L613.494 708.817 L614.169 708.817 L614.844 708.817 L615.519 708.817 L616.194 708.817 L616.869 708.817 L617.544 708.817 L618.219 708.817 L618.894 708.817 L619.569 708.817 L620.244 708.817 L620.919 708.817 L621.594 708.817 L622.269 708.817 L622.944 708.817 L623.619 708.817 L624.294 708.817 L624.969 708.817 L625.644 708.817 L626.319 708.817 L626.994 708.817 L627.669 708.817 L628.344 708.817 L629.019 708.817 L629.694 708.817 L630.369 708.817 L631.044 708.817 L631.719 708.817 L632.394 708.817 L633.069 708.817 L633.744 708.817 L634.419 708.817 L635.094 708.817 L635.769 708.817 L636.444 708.817 L637.119 708.817 L637.794 708.817 L638.469 708.817 L639.144 708.817 L639.819 708.817 L640.494 708.817 L641.169 708.817 L641.844 708.817 L642.519 708.817 L643.194 708.817 L643.869 708.817 L644.544 708.817 L645.219 708.817 L645.894 708.817 L646.569 708.817 L647.244 708.817 L647.919 708.817 L648.594 708.817 L649.269 708.817 L649.944 708.817 L650.619 708.817 L651.294 708.817 L651.969 708.817 L652.644 708.817 L653.319 708.817 L653.994 708.817 L654.669 708.817 L655.344 708.817 L656.019 708.817 L656.694 708.817 L657.369 708.817 L658.044 708.817 L658.719 708.817 L659.394 708.817 L660.069 708.817 L660.744 708.817 L661.419 708.817 L662.094 708.817 L662.769 708.817 L663.444 708.817 L664.119 708.817 L664.794 708.817 L665.469 708.817 L666.144 708.817 L666.819 708.817 L667.494 708.817 L668.169 708.817 L668.844 708.817 L669.519 708.817 L670.194 708.817 L670.869 708.817 L671.544 708.817 L672.219 708.817 L672.894 708.817 L673.569 708.817 L674.244 708.817 L674.919 708.817 L675.594 708.817 L676.269 708.817 L676.944 708.817 L677.619 708.817 L678.294 708.817 L678.969 708.817 L679.644 708.817 L680.319 708.817 L680.994 708.817 L681.669 708.817 L682.344 708.817 L683.019 708.817 L683.694 708.817 L684.369 708.817 L685.044 708.817 L685.719 708.817 L686.394 708.817 L687.069 708.817 L687.744 708.817 L688.419 708.817 L689.094 708.817 L689.769 708.817 L690.444 708.817 L691.119 708.817 L691.794 708.817 L692.469 708.817 L693.144 708.817 L693.819 708.817 L694.494 708.817 L695.169 708.817 L695.844 708.817 L696.519 708.817 L697.194 708.817 L697.869 708.817 L698.544 708.817 L699.219 708.817 L699.894 708.817 L700.569 708.817 L701.244 708.817 L701.919 708.817 L702.594 708.817 L703.269 708.817 L703.944 708.817 L704.619 708.817 L705.294 708.817 L705.969 708.817 L706.644 708.817 L707.319 708.817 L707.994 708.817 L708.669 708.817 L709.344 708.817 L710.019 708.817 L710.694 708.817 L711.369 708.817 L712.044 708.817 L712.719 708.817 L713.394 708.817 L714.069 708.817 L714.744 708.817 L715.419 708.817 L716.094 708.817 L716.769 708.817 L717.444 708.817 L718.119 708.817 L718.794 708.817 L719.469 708.817 L720.144 708.817 L720.819 708.817 L721.494 708.817 L722.169 708.817 L722.844 708.817 L723.52 708.817 L724.195 708.817 L724.87 708.817 L725.545 708.817 L726.22 708.817 L726.895 708.817 L727.57 708.817 L728.245 708.817 L728.92 708.817 L729.595 708.817 L730.27 708.817 L730.945 708.817 L731.62 708.817 L732.295 708.817 L732.97 708.817 L733.645 708.817 L734.32 708.817 L734.995 708.817 L735.67 708.817 L736.345 708.817 L737.02 708.817 L737.695 708.817 L738.37 708.817 L739.045 708.817 L739.72 708.817 L740.395 708.817 L741.07 708.817 L741.745 708.817 L742.42 708.817 L743.095 708.817 L743.77 708.817 L744.445 708.817 L745.12 708.817 L745.795 708.817 L746.47 708.817 L747.145 708.817 L747.82 708.817 L748.495 708.817 L749.17 708.817 L749.845 708.817 L750.52 708.817 L751.195 708.817 L751.87 708.817 L752.545 708.817 L753.22 708.817 L753.895 708.817 L754.57 708.817 L755.245 708.817 L755.92 708.817 L756.595 708.817 L757.27 708.817 L757.945 708.817 L758.62 708.817 L759.295 708.817 L759.97 708.817 L760.645 708.817 L761.32 708.817 L761.995 708.817 L762.67 708.817 L763.345 708.817 L764.02 708.817 L764.695 708.817 L765.37 708.817 L766.045 708.817 L766.72 708.817 L767.395 708.817 L768.07 708.817 L768.745 708.817 L769.42 708.817 L770.095 708.817 L770.77 708.817 L771.445 708.817 L772.12 708.817 L772.795 708.817 L773.47 708.817 L774.145 708.817 L774.82 708.817 L775.495 708.817 L776.17 708.817 L776.845 708.817 L777.52 708.817 L778.195 708.817 L778.87 708.817 L779.545 708.817 L780.22 708.817 L780.895 708.817 L781.57 708.817 L782.245 708.817 L782.92 708.817 L783.595 708.817 L784.27 708.817 L784.945 708.817 L785.62 708.817 L786.295 708.817 L786.97 708.817 L787.645 708.817 L788.32 708.817 L788.995 708.817 L789.67 708.817 L790.345 708.817 L791.02 708.817 L791.695 708.817 L792.37 708.817 L793.045 708.817 L793.72 708.817 L794.395 708.817 L795.07 708.817 L795.745 708.817 L796.42 708.817 L797.095 708.817 L797.77 708.817 L798.445 708.817 L799.12 708.817 L799.795 708.817 L800.47 708.817 L801.145 708.817 L801.82 708.817 L802.495 708.817 L803.17 708.817 L803.845 708.817 L804.52 708.817 L805.195 708.817 L805.87 708.817 L806.545 708.817 L807.22 708.817 L807.895 708.817 L808.57 708.817 L809.245 708.817 L809.92 708.817 L810.595 708.817 L811.27 708.817 L811.945 708.817 L812.62 708.817 L813.295 708.817 L813.97 708.817 L814.645 708.817 L815.32 708.817 L815.995 708.817 L816.67 708.817 L817.345 708.817 L818.02 708.817 L818.695 708.817 L819.37 708.817 L820.045 708.817 L820.72 708.817 L821.395 708.817 L822.07 708.817 L822.745 708.817 L823.42 708.817 L824.095 708.817 L824.77 708.817 L825.445 708.817 L826.12 708.817 L826.795 708.817 L827.47 708.817 L828.145 708.817 L828.82 708.817 L829.495 708.817 L830.17 708.817 L830.845 708.817 L831.52 708.817 L832.195 708.817 L832.87 708.817 L833.545 708.817 L834.22 708.817 L834.895 708.817 L835.57 708.817 L836.245 708.817 L836.92 708.817 L837.595 708.817 L838.27 708.817 L838.945 708.817 L839.62 708.817 L840.295 708.817 L840.97 708.817 L841.645 708.817 L842.32 708.817 L842.995 708.817 L843.67 708.817 L844.345 708.817 L845.02 708.817 L845.695 708.817 L846.37 708.817 L847.045 708.817 L847.72 708.817 L848.395 708.817 L849.07 708.817 L849.745 708.817 L850.42 708.817 L851.095 708.817 L851.77 708.817 L852.445 708.817 L853.12 708.817 L853.795 708.817 L854.47 708.817 L855.145 708.817 L855.82 708.817 L856.495 708.817 L857.17 708.817 L857.845 708.817 L858.52 708.817 L859.195 708.817 L859.87 708.817 L860.545 708.817 L861.22 708.817 L861.895 708.817 L862.57 708.817 L863.245 708.817 L863.92 708.817 L864.595 708.817 L865.27 708.817 L865.945 708.817 L866.621 708.817 L867.296 708.817 L867.971 708.817 L868.646 708.817 L869.321 708.817 L869.996 708.817 L870.671 708.817 L871.346 708.817 L872.021 708.817 L872.696 708.817 L873.371 708.817 L874.046 708.817 L874.721 708.817 L875.396 708.817 L876.071 708.817 L876.746 708.817 L877.421 708.817 L878.096 708.817 L878.771 708.817 L879.446 708.817 L880.121 708.817 L880.796 708.817 L881.471 708.817 L882.146 708.817 L882.821 708.817 L883.496 708.817 L884.171 708.817 L884.846 708.817 L885.521 708.817 L886.196 708.817 L886.871 708.817 L887.546 708.817 L888.221 708.817 L888.896 708.817 L889.571 708.817 L890.246 708.817 L890.921 708.817 L891.596 708.817 L892.271 708.817 L892.946 708.817 L893.621 708.817 L894.296 708.817 L894.971 708.817 L895.646 708.817 L896.321 708.817 L896.996 708.817 L897.671 708.817 L898.346 708.817 L899.021 708.817 L899.696 708.817 L900.371 708.817 L901.046 708.817 L901.721 708.817 L902.396 708.817 L903.071 708.817 L903.746 708.817 L904.421 708.817 L905.096 708.817 L905.771 708.817 L906.446 708.817 L907.121 708.817 L907.796 708.817 L908.471 708.817 L909.146 708.817 L909.821 708.817 L910.496 708.817 L911.171 708.817 L911.846 708.817 L912.521 708.817 L913.196 708.817 L913.871 708.817 L914.546 708.817 L915.221 708.817 L915.896 708.817 L916.571 708.817 L917.246 708.817 L917.921 708.817 L918.596 708.817 L919.271 708.817 L919.946 708.817 L920.621 708.817 L921.296 708.817 L921.971 708.817 L922.646 708.817 L923.321 708.817 L923.996 708.817 L924.671 708.817 L925.346 708.817 L926.021 708.817 L926.696 708.817 L927.371 708.817 L928.046 708.817 L928.721 708.817 L929.396 708.817 L930.071 708.817 L930.746 708.817 L931.421 708.817 L932.096 708.817 L932.771 708.817 L933.446 708.817 L934.121 708.817 L934.796 708.817 L935.471 708.817 L936.146 708.817 L936.821 708.817 L937.496 708.817 L938.171 708.817 L938.846 708.817 L939.521 708.817 L940.196 708.817 L940.871 708.817 L941.546 708.817 L942.221 708.817 L942.896 708.817 L943.571 708.817 L944.246 708.817 L944.921 708.817 L945.596 708.817 L946.271 708.817 L946.946 708.817 L947.621 708.817 L948.296 708.817 L948.971 708.817 L949.646 708.817 L950.321 708.817 L950.996 708.817 L951.671 708.817 L952.346 708.817 L953.021 708.817 L953.696 708.817 L954.371 708.817 L955.046 708.817 L955.721 708.817 L956.396 708.817 L957.071 708.817 L957.746 708.817 L958.421 708.817 L959.096 708.817 L959.771 708.817 L960.446 708.817 L961.121 708.817 L961.796 708.817 L962.471 708.817 L963.146 708.817 L963.821 708.817 L964.496 708.817 L965.171 708.817 L965.846 708.817 L966.521 708.817 L967.196 708.817 L967.871 708.817 L968.546 708.817 L969.221 708.817 L969.896 708.817 L970.571 708.817 L971.246 708.817 L971.921 708.817 L972.596 708.817 L973.271 708.817 L973.946 708.817 L974.621 708.817 L975.296 708.817 L975.971 708.817 L976.646 708.817 L977.321 708.817 L977.996 708.817 L978.671 708.817 L979.346 708.817 L980.021 708.817 L980.696 708.817 L981.371 708.817 L982.046 708.817 L982.721 708.817 L983.396 708.817 L984.071 708.817 L984.746 708.817 L985.421 708.817 L986.096 708.817 L986.771 708.817 L987.446 708.817 L988.121 708.817 L988.796 708.817 L989.471 708.817 L990.146 708.817 L990.821 708.817 L991.496 708.817 L992.171 708.817 L992.846 708.817 L993.521 708.817 L994.196 708.817 L994.871 708.817 L995.546 708.817 L996.221 708.817 L996.896 708.817 L997.571 708.817 L998.246 708.817 L998.921 708.817 L999.596 708.817 L1000.27 708.817 L1000.95 708.817 L1001.62 708.817 L1002.3 708.817 L1002.97 708.817 L1003.65 708.817 L1004.32 708.817 L1005 708.817 L1005.67 708.817 L1006.35 708.817 L1007.02 708.817 L1007.7 708.817 L1008.37 708.817 L1009.05 708.817 L1009.72 708.817 L1010.4 708.817 L1011.07 708.817 L1011.75 708.817 L1012.42 708.817 L1013.1 708.817 L1013.77 708.817 L1014.45 708.817 L1015.12 708.817 L1015.8 708.817 L1016.47 708.817 L1017.15 708.817 L1017.82 708.817 L1018.5 708.817 L1019.17 708.817 L1019.85 708.817 L1020.52 708.817 L1021.2 708.817 L1021.87 708.817 L1022.55 708.817 L1023.22 708.817 L1023.9 708.817 L1024.57 708.817 L1025.25 708.817 L1025.92 708.817 L1026.6 708.817 L1027.27 708.817 L1027.95 708.817 L1028.62 708.817 L1029.3 708.817 L1029.97 708.817 L1030.65 708.817 L1031.32 708.817 L1032 708.817 L1032.67 708.817 L1033.35 708.817 L1034.02 708.817 L1034.7 708.817 L1035.37 708.817 L1036.05 708.817 L1036.72 708.817 L1037.4 708.817 L1038.07 708.817 L1038.75 708.817 L1039.42 708.817 L1040.1 708.817 L1040.77 708.817 L1041.45 708.817 L1042.12 708.817 L1042.8 708.817 L1043.47 708.817 L1044.15 708.817 L1044.82 708.817 L1045.5 708.817 L1046.17 708.817 L1046.85 708.817 L1047.52 708.817 L1048.2 708.817 L1048.87 708.817 L1049.55 708.817 L1050.22 708.817 L1050.9 708.817 L1051.57 708.817 L1052.25 708.817 L1052.92 708.817 L1053.6 708.817 L1054.27 708.817 L1054.95 708.817 L1055.62 708.817 L1056.3 708.817 L1056.97 708.817 L1057.65 708.817 L1058.32 708.817 L1059 708.817 L1059.67 708.817 L1060.35 708.817 L1061.02 708.817 L1061.7 708.817 L1062.37 708.817 L1063.05 708.817 L1063.72 708.817 L1064.4 708.817 L1065.07 708.817 L1065.75 708.817 L1066.42 708.817 L1067.1 708.817 L1067.77 708.817 L1068.45 708.817 L1069.12 708.817 L1069.8 708.817 L1070.47 708.817 L1071.15 708.817 L1071.82 708.817 L1072.5 708.817 L1073.17 708.817 L1073.85 708.817 L1074.52 708.817 L1075.2 708.817 L1075.87 708.817 L1076.55 708.817 L1077.22 708.817 L1077.9 708.817 L1078.57 708.817 L1079.25 708.817 L1079.92 708.817 L1080.6 708.817 L1081.27 708.817 L1081.95 708.817 L1082.62 708.817 L1083.3 708.817 L1083.97 708.817 L1084.65 708.817 L1085.32 708.817 L1086 708.817 L1086.67 708.817 L1087.35 708.817 L1088.02 708.817 L1088.7 708.817 L1089.37 708.817 L1090.05 708.817 L1090.72 708.817 L1091.4 708.817 L1092.07 708.817 L1092.75 708.817 L1093.42 708.817 L1094.1 708.817 L1094.77 708.817 L1095.45 708.817 L1096.12 708.817 L1096.8 708.817 L1097.47 708.817 L1098.15 708.817 L1098.82 708.817 L1099.5 708.817 L1100.17 708.817 L1100.85 708.817 L1101.52 708.817 L1102.2 708.817 L1102.87 708.817 L1103.55 708.817 L1104.22 708.817 L1104.9 708.817 L1105.57 708.817 L1106.25 708.817 L1106.92 708.817 L1107.6 708.817 L1108.27 708.817 L1108.95 708.817 L1109.62 708.817 L1110.3 708.817 L1110.97 708.817 L1111.65 708.817 L1112.32 708.817 L1113 708.817 L1113.67 708.817 L1114.35 708.817 L1115.02 708.817 L1115.7 708.817 L1116.37 708.817 L1117.05 708.817 L1117.72 708.817 L1118.4 708.817 L1119.07 708.817 L1119.75 708.817 L1120.42 708.817 L1121.1 708.817 L1121.77 708.817 L1122.45 708.817 L1123.12 708.817 L1123.8 708.817 L1124.47 708.817 L1125.15 708.817 L1125.82 708.817 L1126.5 708.817 L1127.17 708.817 L1127.85 708.817 L1128.52 708.817 L1129.2 708.817 L1129.87 708.817 L1130.55 708.817 L1131.22 708.817 L1131.9 708.817 L1132.57 708.817 L1133.25 708.817 L1133.92 708.817 L1134.6 708.817 L1135.27 708.817 L1135.95 708.817 L1136.62 708.817 L1137.3 708.817 L1137.97 708.817 L1138.65 708.817 L1139.32 708.817 L1140 708.817 L1140.67 708.817 L1141.35 708.817 L1142.02 708.817 L1142.7 708.817 L1143.37 708.817 L1144.05 708.817 L1144.72 708.817 L1145.4 708.817 L1146.07 708.817 L1146.75 708.817 L1147.42 708.817 L1148.1 708.817 L1148.77 708.817 L1149.45 708.817 L1150.12 708.817 L1150.8 708.817 L1151.47 708.817 L1152.15 708.817 L1152.82 708.817 L1153.5 708.817 L1154.17 708.817 L1154.85 708.817 L1155.52 708.817 L1156.2 708.817 L1156.87 708.817 L1157.55 708.817 L1158.22 708.817 L1158.9 708.817 L1159.57 708.817 L1160.25 708.817 L1160.92 708.817 L1161.6 708.817 L1162.27 708.817 L1162.95 708.817 L1163.62 708.817 L1164.3 708.817 L1164.97 708.817 L1165.65 708.817 L1166.32 708.817 L1167 708.817 L1167.67 708.817 L1168.35 708.817 L1169.02 708.817 L1169.7 708.817 L1170.37 708.817 L1171.05 708.817 L1171.72 708.817 L1172.4 708.817 L1173.07 708.817 L1173.75 708.817 L1174.42 708.817 L1175.1 708.817 L1175.77 708.817 L1176.45 708.817 L1177.12 708.817 L1177.8 708.817 L1178.47 708.817 L1179.15 708.817 L1179.82 708.817 L1180.5 708.817 L1181.17 708.817 L1181.85 708.817 L1182.52 708.817 L1183.2 708.817 L1183.87 708.817 L1184.55 708.817 L1185.22 708.817 L1185.9 708.817 L1186.57 708.817 L1187.25 708.817 L1187.92 708.817 L1188.6 708.817 L1189.27 708.817 L1189.95 708.817 L1190.62 708.817 L1191.3 708.817 L1191.97 708.817 L1192.65 708.817 L1193.32 708.817 L1194 708.817 L1194.67 708.817 L1195.35 708.817 L1196.02 708.817 L1196.7 708.817 L1197.37 708.817 L1198.05 708.817 L1198.72 708.817 L1199.4 708.817 L1200.07 708.817 L1200.75 708.817 L1201.42 708.817 L1202.1 708.817 L1202.77 708.817 L1203.45 708.817 L1204.12 708.817 L1204.8 708.817 L1205.47 708.817 L1206.15 708.817 L1206.82 708.817 L1207.5 708.817 L1208.17 708.817 L1208.85 708.817 L1209.52 708.817 L1210.2 708.817 L1210.87 708.817 L1211.55 708.817 L1212.22 708.817 L1212.9 708.817 L1213.57 708.817 L1214.25 708.817 L1214.92 708.817 L1215.6 708.817 L1216.27 708.817 L1216.95 708.817 L1217.62 708.817 L1218.3 708.817 L1218.97 708.817 L1219.65 708.817 L1220.32 708.817 L1221 708.817 L1221.67 708.817 L1222.35 708.817 L1223.02 708.817 L1223.7 708.817 L1224.37 708.817 L1225.05 708.817 L1225.72 708.817 L1226.4 708.817 L1227.07 708.817 L1227.75 708.817 L1228.42 708.817 L1229.1 708.817 L1229.77 708.817 L1230.45 708.817 L1231.12 708.817 L1231.8 708.817 L1232.47 708.817 L1233.15 708.817 L1233.82 708.817 L1234.5 708.817 L1235.17 708.817 L1235.85 708.817 L1236.52 708.817 L1237.2 708.817 L1237.87 708.817 L1238.55 708.817 L1239.22 708.817 L1239.9 708.817 L1240.57 708.817 L1241.25 708.817 L1241.92 708.817 L1242.6 708.817 L1243.27 708.817 L1243.95 708.817 L1244.62 708.817 L1245.3 708.817 L1245.97 708.817 L1246.65 708.817 L1247.32 708.817 L1248 708.817 L1248.67 708.817 L1249.35 708.817 L1250.02 708.817 L1250.7 708.817 L1251.37 708.817 L1252.05 708.817 L1252.72 708.817 L1253.4 708.817 L1254.07 708.817 L1254.75 708.817 L1255.42 708.817 L1256.1 708.817 L1256.77 708.817 L1257.45 708.817 L1258.12 708.817 L1258.8 708.817 L1259.47 708.817 L1260.15 708.817 L1260.82 708.817 L1261.5 708.817 L1262.17 708.817 L1262.85 708.817 L1263.52 708.817 L1264.2 708.817 L1264.87 708.817 L1265.55 708.817 L1266.22 708.817 L1266.9 708.817 L1267.57 708.817 L1268.25 708.817 L1268.92 708.817 L1269.6 708.817 L1270.27 708.817 L1270.95 708.817 L1271.62 708.817 L1272.3 708.817 L1272.97 708.817 L1273.65 708.817 L1274.32 708.817 L1275 708.817 L1275.67 708.817 L1276.35 708.817 L1277.02 708.817 L1277.7 708.817 L1278.37 708.817 L1279.05 708.817 L1279.72 708.817 L1280.4 708.817 L1281.07 708.817 L1281.75 708.817 L1282.42 708.817 L1283.1 708.817 L1283.77 708.817 L1284.45 708.817 L1285.12 708.817 L1285.8 708.817 L1286.47 708.817 L1287.15 708.817 L1287.82 708.817 L1288.5 708.817 L1289.17 708.817 L1289.85 708.817 L1290.52 708.817 L1291.2 708.817 L1291.87 708.817 L1292.55 708.817 L1293.22 708.817 L1293.9 708.817 L1294.57 708.817 L1295.25 708.817 L1295.92 708.817 L1296.6 708.817 L1297.27 708.817 L1297.95 708.817 L1298.62 708.817 L1299.3 708.817 L1299.97 708.817 L1300.65 708.817 L1301.32 708.817 L1302 708.817 L1302.67 708.817 L1303.35 708.817 L1304.02 708.817 L1304.7 708.817 L1305.37 708.817 L1306.05 708.817 L1306.72 708.817 L1307.4 708.817 L1308.07 708.817 L1308.75 708.817 L1309.42 708.817 L1310.1 708.817 L1310.77 708.817 L1311.45 708.817 L1312.12 708.817 L1312.8 708.817 L1313.47 708.817 L1314.15 708.817 L1314.82 708.817 L1315.5 708.817 L1316.17 708.817 L1316.85 708.817 L1317.52 708.817 L1318.2 708.817 L1318.87 708.817 L1319.55 708.817 L1320.22 708.817 L1320.9 708.817 L1321.57 708.817 L1322.25 708.817 L1322.92 708.817 L1323.6 708.817 L1324.27 708.817 L1324.95 708.817 L1325.62 708.817 L1326.3 708.817 L1326.97 708.817 L1327.65 708.817 L1328.32 708.817 L1329 708.817 L1329.67 708.817 L1330.35 708.817 L1331.02 708.817 L1331.7 708.817 L1332.37 708.817 L1333.05 708.817 L1333.72 708.817 L1334.4 708.817 L1335.07 708.817 L1335.75 708.817 L1336.42 708.817 L1337.1 708.817 L1337.77 708.817 L1338.45 708.817 L1339.12 708.817 L1339.8 708.817 L1340.47 708.817 L1341.15 708.817 L1341.82 708.817 L1342.5 708.817 L1343.17 708.817 L1343.85 708.817 L1344.52 708.817 L1345.2 708.817 L1345.87 708.817 L1346.55 708.817 L1347.22 708.817 L1347.9 708.817 L1348.57 708.817 L1349.25 708.817 L1349.92 708.817 L1350.6 708.817 L1351.27 708.817 L1351.95 708.817 L1352.62 708.817 L1353.3 708.817 L1353.97 708.817 L1354.65 708.817 L1355.32 708.817 L1356 708.817 L1356.67 708.817 L1357.35 708.817 L1358.02 708.817 L1358.7 708.817 L1359.37 708.817 L1360.05 708.817 L1360.72 708.817 L1361.4 708.817 L1362.07 708.817 L1362.75 708.817 L1363.42 708.817 L1364.1 708.817 L1364.77 708.817 L1365.45 708.817 L1366.12 708.817 L1366.8 708.817 L1367.47 708.817 L1368.15 708.817 L1368.82 708.817 L1369.5 708.817 L1370.17 708.817 L1370.85 708.817 L1371.52 708.817 L1372.2 708.817 L1372.87 708.817 L1373.55 708.817 L1374.22 708.817 L1374.9 708.817 L1375.57 708.817 L1376.25 708.817 L1376.92 708.817 L1377.6 708.817 L1378.27 708.817 L1378.95 708.817 L1379.62 708.817 L1380.3 708.817 L1380.97 708.817 L1381.65 708.817 L1382.32 708.817 L1383 708.817 L1383.67 708.817 L1384.35 708.817 L1385.02 708.817 L1385.7 708.817 L1386.37 708.817 L1387.05 708.817 L1387.72 708.817 L1388.4 708.817 L1389.07 708.817 L1389.75 708.817 L1390.42 708.817 L1391.1 708.817 L1391.77 708.817 L1392.45 708.817 L1393.12 708.817 L1393.8 708.817 L1394.47 708.817 L1395.15 708.817 L1395.82 708.817 L1396.5 708.817 L1397.17 708.817 L1397.85 708.817 L1398.52 708.817 L1399.2 708.817 L1399.87 708.817 L1400.55 708.817 L1401.22 708.817 L1401.9 708.817 L1402.57 708.817 L1403.25 708.817 L1403.92 708.817 L1404.6 708.817 L1405.27 708.817 L1405.95 708.817 L1406.62 708.817 L1407.3 708.817 L1407.97 708.817 L1408.65 708.817 L1409.32 708.817 L1410 708.817 L1410.67 708.817 L1411.35 708.817 L1412.02 708.817 L1412.7 708.817 L1413.37 708.817 L1414.05 708.817 L1414.72 708.817 L1415.4 708.817 L1416.07 708.817 L1416.75 708.817 L1417.42 708.817 L1418.1 708.817 L1418.77 708.817 L1419.45 708.817 L1420.12 708.817 L1420.8 708.817 L1421.47 708.817 L1422.15 708.817 L1422.82 708.817 L1423.5 708.817 L1424.17 708.817 L1424.85 708.817 L1425.52 708.817 L1426.2 708.817 L1426.87 708.817 L1427.55 708.817 L1428.22 708.817 L1428.9 708.817 L1429.57 708.817 L1430.25 708.817 L1430.92 708.817 L1431.6 708.817 L1432.27 708.817 L1432.95 708.817 L1433.62 708.817 L1434.3 708.817 L1434.97 708.817 L1435.65 708.817 L1436.32 708.817 L1437 708.817 L1437.67 708.817 L1438.35 708.817 L1439.02 708.817 L1439.7 708.817 L1440.37 708.817 L1441.05 708.817 L1441.72 708.817 L1442.4 708.817 L1443.07 708.817 L1443.75 708.817 L1444.42 708.817 L1445.1 708.817 L1445.77 708.817 L1446.45 708.817 L1447.12 708.817 L1447.8 708.817 L1448.47 708.817 L1449.15 708.817 L1449.82 708.817 L1450.5 708.817 L1451.17 708.817 L1451.85 708.817 L1452.52 708.817 L1453.2 708.817 L1453.87 708.817 L1454.55 708.817 L1455.22 708.817 L1455.9 708.817 L1456.57 708.817 L1457.25 708.817 L1457.92 708.817 L1458.6 708.817 L1459.27 708.817 L1459.95 708.817 L1460.62 708.817 L1461.3 708.817 L1461.97 708.817 L1462.65 708.817 L1463.32 708.817 L1464 708.817 L1464.67 708.817 L1465.35 708.817 L1466.02 708.817 L1466.7 708.817 L1467.37 708.817 L1468.05 708.817 L1468.72 708.817 L1469.4 708.817 L1470.07 708.817 L1470.75 708.817 L1471.42 708.817 L1472.1 708.817 L1472.77 708.817 L1473.45 708.817 L1474.12 708.817 L1474.8 708.817 L1475.47 708.817 L1476.15 708.817 L1476.82 708.817 L1477.5 708.817 L1478.17 708.817 L1478.85 708.817 L1479.52 708.817 L1480.2 708.817 L1480.87 708.817 L1481.55 708.817 L1482.22 708.817 L1482.9 708.817 L1483.57 708.817 L1484.25 708.817 L1484.92 708.817 L1485.6 708.817 L1486.27 708.817 L1486.95 708.817 L1487.62 708.817 L1488.3 708.817 L1488.97 708.817 L1489.65 708.817 L1490.32 708.817 L1491 708.817 L1491.67 708.817 L1492.35 708.817 L1493.02 708.817 L1493.7 708.817 L1494.37 708.817 L1495.05 708.817 L1495.72 708.817 L1496.4 708.817 L1497.07 708.817 L1497.75 708.817 L1498.42 708.817 L1499.1 708.817 L1499.77 708.817 L1500.45 708.817 L1501.12 708.817 L1501.8 708.817 L1502.47 708.817 L1503.15 708.817 L1503.82 708.817 L1504.5 708.817 L1505.17 708.817 L1505.85 708.817 L1506.52 708.817 L1507.2 708.817 L1507.87 708.817 L1508.55 708.817 L1509.23 708.817 L1509.9 708.817 L1510.58 708.817 L1511.25 708.817 L1511.93 708.817 L1512.6 708.817 L1513.28 708.817 L1513.95 708.817 L1514.63 708.817 L1515.3 708.817 L1515.98 708.817 L1516.65 708.817 L1517.33 708.817 L1518 708.817 L1518.68 708.817 L1519.35 708.817 L1520.03 708.817 L1520.7 708.817 L1521.38 708.817 L1522.05 708.817 L1522.73 708.817 L1523.4 708.817 L1524.08 708.817 L1524.75 708.817 L1525.43 708.817 L1526.1 708.817 L1526.78 708.817 L1527.45 708.817 L1528.13 708.817 L1528.8 708.817 L1529.48 708.817 L1530.15 708.817 L1530.83 708.817 L1531.5 708.817 L1532.18 708.817 L1532.85 708.817 L1533.53 708.817 L1534.2 708.817 L1534.88 708.817 L1535.55 708.817 L1536.23 708.817 L1536.9 708.817 L1537.58 708.817 L1538.25 708.817 L1538.93 708.817 L1539.6 708.817 L1540.28 708.817 L1540.95 708.817 L1541.63 708.817 L1542.3 708.817 L1542.98 708.817 L1543.65 708.817 L1544.33 708.817 L1545 708.817 L1545.68 708.817 L1546.35 708.817 L1547.03 708.817 L1547.7 708.817 L1548.38 708.817 L1549.05 708.817 L1549.73 708.817 L1550.4 708.817 L1551.08 708.817 L1551.75 708.817 L1552.43 708.817 L1553.1 708.817 L1553.78 708.817 L1554.45 708.817 L1555.13 708.817 L1555.8 708.817 L1556.48 708.817 L1557.15 708.817 L1557.83 708.817 L1558.5 708.817 L1559.18 708.817 L1559.85 708.817 L1560.53 708.817 L1561.2 708.817 L1561.88 708.817 L1562.55 708.817 L1563.23 708.817 L1563.9 708.817 L1564.58 708.817 L1565.25 708.817 L1565.93 708.817 L1566.6 708.817 L1567.28 708.817 L1567.95 708.817 L1568.63 708.817 L1569.3 708.817 L1569.98 708.817 L1570.65 708.817 L1571.33 708.817 L1572 708.817 L1572.68 708.817 L1573.35 708.817 L1574.03 708.817 L1574.7 708.817 L1575.38 708.817 L1576.05 708.817 L1576.73 708.817 L1577.4 708.817 L1578.08 708.817 L1578.75 708.817 L1579.43 708.817 L1580.1 708.817 L1580.78 708.817 L1581.45 708.817 L1582.13 708.817 L1582.8 708.817 L1583.48 708.817 L1584.15 708.817 L1584.83 708.817 L1585.5 708.817 L1586.18 708.817 L1586.85 708.817 L1587.53 708.817 L1588.2 708.817 L1588.88 708.817 L1589.55 708.817 L1590.23 708.817 L1590.9 708.817 L1591.58 708.817 L1592.25 708.817 L1592.93 708.817 L1593.6 708.817 L1594.28 708.817 L1594.95 708.817 L1595.63 708.817 L1596.3 708.817 L1596.98 708.817 L1597.65 708.817 L1598.33 708.817 L1599 708.817 L1599.68 708.817 L1600.35 708.817 L1601.03 708.817 L1601.7 708.817 L1602.38 708.817 L1603.05 708.817 L1603.73 708.817 L1604.4 708.817 L1605.08 708.817 L1605.75 708.817 L1606.43 708.817 L1607.1 708.817 L1607.78 708.817 L1608.45 708.817 L1609.13 708.817 L1609.8 708.817 L1610.48 708.817 L1611.15 708.817 L1611.83 708.817 L1612.5 708.817 L1613.18 708.817 L1613.85 708.817 L1614.53 708.817 L1615.2 708.817 L1615.88 708.817 L1616.55 708.817 L1617.23 708.817 L1617.9 708.817 L1618.58 708.817 L1619.25 708.817 L1619.93 708.817 L1620.6 708.817 L1621.28 708.817 L1621.95 708.817 L1622.63 708.817 L1623.3 708.817 L1623.98 708.817 L1624.65 708.817 L1625.33 708.817 L1626 708.817 L1626.68 708.817 L1627.35 708.817 L1628.03 708.817 L1628.7 708.817 L1629.38 708.817 L1630.05 708.817 L1630.73 708.817 L1631.4 708.817 L1632.08 708.817 L1632.75 708.817 L1633.43 708.817 L1634.1 708.817 L1634.78 708.817 L1635.45 708.817 L1636.13 708.817 L1636.8 708.817 L1637.48 708.817 L1638.15 708.817 L1638.83 708.817 L1639.5 708.817 L1640.18 708.817 L1640.85 708.817 L1641.53 708.817 L1642.2 708.817 L1642.88 708.817 L1643.55 708.817 L1644.23 708.817 L1644.9 708.817 L1645.58 708.817 L1646.25 708.817 L1646.93 708.817 L1647.6 708.817 L1648.28 708.817 L1648.95 708.817 L1649.63 708.817 L1650.3 708.817 L1650.98 708.817 L1651.65 708.817 L1652.33 708.817 L1653 708.817 L1653.68 708.817 L1654.35 708.817 L1655.03 708.817 L1655.7 708.817 L1656.38 708.817 L1657.05 708.817 L1657.73 708.817 L1658.4 708.817 L1659.08 708.817 L1659.75 708.817 L1660.43 708.817 L1661.1 708.817 L1661.78 708.817 L1662.45 708.817 L1663.13 708.817 L1663.8 708.817 L1664.48 708.817 L1665.15 708.817 L1665.83 708.817 L1666.5 708.817 L1667.18 708.817 L1667.85 708.817 L1668.53 708.817 L1669.2 708.817 L1669.88 708.817 L1670.55 708.817 L1671.23 708.817 L1671.9 708.817 L1672.58 708.817 L1673.25 708.817 L1673.93 708.817 L1674.6 708.817 L1675.28 708.817 L1675.95 708.817 L1676.63 708.817 L1677.3 708.817 L1677.98 708.817 L1678.65 708.817 L1679.33 708.817 L1680 708.817 L1680.68 708.817 L1681.35 708.817 L1682.03 708.817 L1682.7 708.817 L1683.38 708.817 L1684.05 708.817 L1684.73 708.817 L1685.4 708.817 L1686.08 708.817 L1686.75 708.817 L1687.43 708.817 L1688.1 708.817 L1688.78 708.817 L1689.45 708.817 L1690.13 708.817 L1690.8 708.817 L1691.48 708.817 L1692.15 708.817 L1692.83 708.817 L1693.5 708.817 L1694.18 708.817 L1694.85 708.817 L1695.53 708.817 L1696.2 708.817 L1696.88 708.817 L1697.55 708.817 L1698.23 708.817 L1698.9 708.817 L1699.58 708.817 L1700.25 708.817 L1700.93 708.817 L1701.6 708.817 L1702.28 708.817 L1702.95 708.817 L1703.63 708.817 L1704.3 708.817 L1704.98 708.817 L1705.65 708.817 L1706.33 708.817 L1707 708.817 L1707.68 708.817 L1708.35 708.817 L1709.03 708.817 L1709.7 708.817 L1710.38 708.817 L1711.05 708.817 L1711.73 708.817 L1712.4 708.817 L1713.08 708.817 L1713.75 708.817 L1714.43 708.817 L1715.1 708.817 L1715.78 708.817 L1716.45 708.817 L1717.13 708.817 L1717.8 708.817 L1718.48 708.817 L1719.15 708.817 L1719.83 708.817 L1720.5 708.817 L1721.18 708.817 L1721.85 708.817 L1722.53 708.817 L1723.2 708.817 L1723.88 708.817 L1724.55 708.817 L1725.23 708.817 L1725.9 708.817 L1726.58 708.817 L1727.25 708.817 L1727.93 708.817 L1728.6 708.817 L1729.28 708.817 L1729.95 708.817 L1730.63 708.817 L1731.3 708.817 L1731.98 708.817 L1732.65 708.817 L1733.33 708.817 L1734 708.817 L1734.68 708.817 L1735.35 708.817 L1736.03 708.817 L1736.7 708.817 L1737.38 708.817 L1738.05 708.817 L1738.73 708.817 L1739.4 708.817 L1740.08 708.817 L1740.75 708.817 L1741.43 708.817 L1742.1 708.817 L1742.78 708.817 L1743.45 708.817 L1744.13 708.817 L1744.8 708.817 L1745.48 708.817 L1746.15 708.817 L1746.83 708.817 L1747.5 708.817 L1748.18 708.817 L1748.85 708.817 L1749.53 708.817 L1750.2 708.817 L1750.88 708.817 L1751.55 708.817 L1752.23 708.817 L1752.9 708.817 L1753.58 708.817 L1754.25 708.817 L1754.93 708.817 L1755.6 708.817 L1756.28 708.817 L1756.95 708.817 L1757.63 708.817 L1758.3 708.817 L1758.98 708.817 L1759.65 708.817 L1760.33 708.817 L1761 708.817 L1761.68 708.817 L1762.35 708.817 L1763.03 708.817 L1763.7 708.817 L1764.38 708.817 L1765.05 708.817 L1765.73 708.817 L1766.4 708.817 L1767.08 708.817 L1767.75 708.817 L1768.43 708.817 L1769.1 708.817 L1769.78 708.817 L1770.45 708.817 L1771.13 708.817 L1771.8 708.817 L1772.48 708.817 L1773.15 708.817 L1773.83 708.817 L1774.5 708.817 L1775.18 708.817 L1775.85 708.817 L1776.53 708.817 L1777.2 708.817 L1777.88 708.817 L1778.55 708.817 L1779.23 708.817 L1779.9 708.817 L1780.58 708.817 L1781.25 708.817 L1781.93 708.817 L1782.6 708.817 L1783.28 708.817 L1783.95 708.817 L1784.63 708.817 L1785.3 708.817 L1785.98 708.817 L1786.65 708.817 L1787.33 708.817 L1788 708.817 L1788.68 708.817 L1789.35 708.817 L1790.03 708.817 L1790.7 708.817 L1791.38 708.817 L1792.05 708.817 L1792.73 708.817 L1793.4 708.817 L1794.08 708.817 L1794.75 708.817 L1795.43 708.817 L1796.1 708.817 L1796.78 708.817 L1797.45 708.817 L1798.13 708.817 L1798.8 708.817 L1799.48 708.817 L1800.15 708.817 L1800.83 708.817 L1801.5 708.817 L1802.18 708.817 L1802.85 708.817 L1803.53 708.817 L1804.2 708.817 L1804.88 708.817 L1805.55 708.817 L1806.23 708.817 L1806.9 708.817 L1807.58 708.817 L1808.25 708.817 L1808.93 708.817 L1809.6 708.817 L1810.28 708.817 L1810.95 708.817 L1811.63 708.817 L1812.3 708.817 L1812.98 708.817 L1813.65 708.817 L1814.33 708.817 L1815 708.817 L1815.68 708.817 L1816.35 708.817 L1817.03 708.817 L1817.7 708.817 L1818.38 708.817 L1819.05 708.817 L1819.73 708.817 L1820.4 708.817 L1821.08 708.817 L1821.75 708.817 L1822.43 708.817 L1823.1 708.817 L1823.78 708.817 L1824.45 708.817 L1825.13 708.817 L1825.8 708.817 L1826.48 708.817 L1827.15 708.817 L1827.83 708.817 L1828.5 708.817 L1829.18 708.817 L1829.85 708.817 L1830.53 708.817 L1831.2 708.817 L1831.88 708.817 L1832.55 708.817 L1833.23 708.817 L1833.9 708.817 L1834.58 708.817 L1835.25 708.817 L1835.93 708.817 L1836.6 708.817 L1837.28 708.817 L1837.95 708.817 L1838.63 708.817 L1839.3 708.817 L1839.98 708.817 L1840.65 708.817 L1841.33 708.817 L1842 708.817 L1842.68 708.817 L1843.35 708.817 L1844.03 708.817 L1844.7 708.817 L1845.38 708.817 L1846.05 708.817 L1846.73 708.817 L1847.4 708.817 L1848.08 708.817 L1848.75 708.817 L1849.43 708.817 L1850.1 708.817 L1850.78 708.817 L1851.45 708.817 L1852.13 708.817 L1852.8 708.817 L1853.48 708.817 L1854.15 708.817 L1854.83 708.817 L1855.5 708.817 L1856.18 708.817 L1856.85 708.817 L1857.53 708.817 L1858.2 708.817 L1858.88 708.817 L1859.55 708.817 L1860.23 708.817 L1860.9 708.817 L1861.58 708.817 L1862.25 708.817 L1862.93 708.817 L1863.6 708.817 L1864.28 708.817 L1864.95 708.817 L1865.63 708.817 L1866.3 708.817 L1866.98 708.817 L1867.65 708.817 L1868.33 708.817 L1869 708.817 L1869.68 708.817 L1870.35 708.817 L1871.03 708.817 L1871.7 708.817 L1872.38 708.817 L1873.05 708.817 L1873.73 708.817 L1874.4 708.817 L1875.08 708.817 L1875.75 708.817 L1876.43 708.817 L1877.1 708.817 L1877.78 708.817 L1878.45 708.817 L1879.13 708.817 L1879.8 708.817 L1880.48 708.817 L1881.15 708.817 L1881.83 708.817 L1882.5 708.817 L1883.18 708.817 L1883.85 708.817 L1884.53 708.817 L1885.2 708.817 L1885.88 708.817 L1886.55 708.817 L1887.23 708.817 L1887.9 708.817 L1888.58 708.817 L1889.25 708.817 L1889.93 708.817 L1890.6 708.817 L1891.28 708.817 L1891.95 708.817 L1892.63 708.817 L1893.3 708.817 L1893.98 708.817 L1894.65 708.817 L1895.33 708.817 L1896 708.817 L1896.68 708.817 L1897.35 708.817 L1898.03 708.817 L1898.7 708.817 L1899.38 708.817 L1900.05 708.817 L1900.73 708.817 L1901.4 708.817 L1902.08 708.817 L1902.75 708.817 L1902.75 706.564 L1902.08 706.564 L1901.4 706.564 L1900.73 706.564 L1900.05 706.564 L1899.38 706.564 L1898.7 706.564 L1898.03 706.564 L1897.35 706.564 L1896.68 706.564 L1896 706.564 L1895.33 706.564 L1894.65 706.564 L1893.98 706.564 L1893.3 706.564 L1892.63 706.564 L1891.95 706.564 L1891.28 706.564 L1890.6 706.564 L1889.93 706.564 L1889.25 706.564 L1888.58 706.564 L1887.9 706.564 L1887.23 706.564 L1886.55 706.564 L1885.88 706.564 L1885.2 706.564 L1884.53 706.564 L1883.85 706.564 L1883.18 706.564 L1882.5 706.564 L1881.83 706.564 L1881.15 706.564 L1880.48 706.564 L1879.8 706.564 L1879.13 706.564 L1878.45 706.564 L1877.78 706.564 L1877.1 706.564 L1876.43 706.564 L1875.75 706.564 L1875.08 706.564 L1874.4 706.564 L1873.73 706.564 L1873.05 706.564 L1872.38 706.564 L1871.7 706.564 L1871.03 706.564 L1870.35 706.564 L1869.68 706.564 L1869 706.564 L1868.33 706.564 L1867.65 706.564 L1866.98 706.564 L1866.3 706.564 L1865.63 706.564 L1864.95 706.564 L1864.28 706.564 L1863.6 706.564 L1862.93 706.564 L1862.25 706.564 L1861.58 706.564 L1860.9 706.564 L1860.23 706.564 L1859.55 706.564 L1858.88 706.564 L1858.2 706.564 L1857.53 706.564 L1856.85 706.564 L1856.18 706.564 L1855.5 706.564 L1854.83 706.564 L1854.15 706.564 L1853.48 706.564 L1852.8 706.564 L1852.13 706.564 L1851.45 706.564 L1850.78 706.564 L1850.1 706.564 L1849.43 706.564 L1848.75 706.564 L1848.08 706.564 L1847.4 706.564 L1846.73 706.564 L1846.05 706.564 L1845.38 706.564 L1844.7 706.564 L1844.03 706.564 L1843.35 706.564 L1842.68 706.564 L1842 706.564 L1841.33 706.564 L1840.65 706.564 L1839.98 706.564 L1839.3 706.564 L1838.63 706.564 L1837.95 706.564 L1837.28 706.564 L1836.6 706.564 L1835.93 706.564 L1835.25 706.564 L1834.58 706.564 L1833.9 706.564 L1833.23 706.564 L1832.55 706.564 L1831.88 706.564 L1831.2 706.564 L1830.53 706.564 L1829.85 706.564 L1829.18 706.564 L1828.5 706.564 L1827.83 706.564 L1827.15 706.564 L1826.48 706.564 L1825.8 706.564 L1825.13 706.564 L1824.45 706.564 L1823.78 706.564 L1823.1 706.564 L1822.43 706.564 L1821.75 706.564 L1821.08 706.564 L1820.4 706.564 L1819.73 706.564 L1819.05 706.564 L1818.38 706.564 L1817.7 706.564 L1817.03 706.564 L1816.35 706.564 L1815.68 706.564 L1815 706.564 L1814.33 706.564 L1813.65 706.564 L1812.98 706.564 L1812.3 706.564 L1811.63 706.564 L1810.95 706.564 L1810.28 706.564 L1809.6 706.564 L1808.93 706.564 L1808.25 706.564 L1807.58 706.564 L1806.9 706.564 L1806.23 706.564 L1805.55 706.564 L1804.88 706.564 L1804.2 706.564 L1803.53 706.564 L1802.85 706.564 L1802.18 706.564 L1801.5 706.564 L1800.83 706.564 L1800.15 706.564 L1799.48 706.564 L1798.8 706.564 L1798.13 706.564 L1797.45 706.564 L1796.78 706.564 L1796.1 706.564 L1795.43 706.564 L1794.75 706.564 L1794.08 706.564 L1793.4 706.564 L1792.73 706.564 L1792.05 706.564 L1791.38 706.564 L1790.7 706.564 L1790.03 706.564 L1789.35 706.564 L1788.68 706.564 L1788 706.564 L1787.33 706.564 L1786.65 706.564 L1785.98 706.564 L1785.3 706.564 L1784.63 706.564 L1783.95 706.564 L1783.28 706.564 L1782.6 706.564 L1781.93 706.564 L1781.25 706.564 L1780.58 706.564 L1779.9 706.564 L1779.23 706.564 L1778.55 706.564 L1777.88 706.564 L1777.2 706.564 L1776.53 706.564 L1775.85 706.564 L1775.18 706.564 L1774.5 706.564 L1773.83 706.564 L1773.15 706.564 L1772.48 706.564 L1771.8 706.564 L1771.13 706.564 L1770.45 706.564 L1769.78 706.564 L1769.1 706.564 L1768.43 706.564 L1767.75 706.564 L1767.08 706.564 L1766.4 706.564 L1765.73 706.564 L1765.05 706.564 L1764.38 706.564 L1763.7 706.564 L1763.03 706.564 L1762.35 706.564 L1761.68 706.564 L1761 706.564 L1760.33 706.564 L1759.65 706.564 L1758.98 706.564 L1758.3 706.564 L1757.63 706.564 L1756.95 706.564 L1756.28 706.564 L1755.6 706.564 L1754.93 706.564 L1754.25 706.564 L1753.58 706.564 L1752.9 706.564 L1752.23 706.564 L1751.55 706.564 L1750.88 706.564 L1750.2 706.564 L1749.53 706.564 L1748.85 706.564 L1748.18 706.564 L1747.5 706.564 L1746.83 706.564 L1746.15 706.564 L1745.48 706.564 L1744.8 706.564 L1744.13 706.564 L1743.45 706.564 L1742.78 706.564 L1742.1 706.564 L1741.43 706.564 L1740.75 706.564 L1740.08 706.564 L1739.4 706.564 L1738.73 706.564 L1738.05 706.564 L1737.38 706.564 L1736.7 706.564 L1736.03 706.564 L1735.35 706.564 L1734.68 706.564 L1734 706.564 L1733.33 706.564 L1732.65 706.564 L1731.98 706.564 L1731.3 706.564 L1730.63 706.564 L1729.95 706.564 L1729.28 706.564 L1728.6 706.564 L1727.93 706.564 L1727.25 706.564 L1726.58 706.564 L1725.9 706.564 L1725.23 706.564 L1724.55 706.564 L1723.88 706.564 L1723.2 706.564 L1722.53 706.564 L1721.85 706.564 L1721.18 706.564 L1720.5 706.564 L1719.83 706.564 L1719.15 706.564 L1718.48 706.564 L1717.8 706.564 L1717.13 706.564 L1716.45 706.564 L1715.78 706.564 L1715.1 706.564 L1714.43 706.564 L1713.75 706.564 L1713.08 706.564 L1712.4 706.564 L1711.73 706.564 L1711.05 706.564 L1710.38 706.564 L1709.7 706.564 L1709.03 706.564 L1708.35 706.564 L1707.68 706.564 L1707 706.564 L1706.33 706.564 L1705.65 706.564 L1704.98 706.564 L1704.3 706.564 L1703.63 706.564 L1702.95 706.564 L1702.28 706.564 L1701.6 706.564 L1700.93 706.564 L1700.25 706.564 L1699.58 706.564 L1698.9 706.564 L1698.23 706.564 L1697.55 706.564 L1696.88 706.564 L1696.2 706.564 L1695.53 706.564 L1694.85 706.564 L1694.18 706.564 L1693.5 706.564 L1692.83 706.564 L1692.15 706.564 L1691.48 706.564 L1690.8 706.564 L1690.13 706.564 L1689.45 706.564 L1688.78 706.564 L1688.1 706.564 L1687.43 706.564 L1686.75 706.564 L1686.08 706.564 L1685.4 706.564 L1684.73 706.564 L1684.05 706.564 L1683.38 706.564 L1682.7 706.564 L1682.03 706.564 L1681.35 706.564 L1680.68 706.564 L1680 706.564 L1679.33 706.564 L1678.65 706.564 L1677.98 706.564 L1677.3 706.564 L1676.63 706.564 L1675.95 706.564 L1675.28 706.564 L1674.6 706.564 L1673.93 706.564 L1673.25 706.564 L1672.58 706.564 L1671.9 706.564 L1671.23 706.564 L1670.55 706.564 L1669.88 706.564 L1669.2 706.564 L1668.53 706.564 L1667.85 706.564 L1667.18 706.564 L1666.5 706.564 L1665.83 706.564 L1665.15 706.564 L1664.48 706.564 L1663.8 706.564 L1663.13 706.564 L1662.45 706.564 L1661.78 706.564 L1661.1 706.564 L1660.43 706.564 L1659.75 706.564 L1659.08 706.564 L1658.4 706.564 L1657.73 706.564 L1657.05 706.564 L1656.38 706.564 L1655.7 706.564 L1655.03 706.564 L1654.35 706.564 L1653.68 706.564 L1653 706.564 L1652.33 706.564 L1651.65 706.564 L1650.98 706.564 L1650.3 706.564 L1649.63 706.564 L1648.95 706.564 L1648.28 706.564 L1647.6 706.564 L1646.93 706.564 L1646.25 706.564 L1645.58 706.564 L1644.9 706.564 L1644.23 706.564 L1643.55 706.564 L1642.88 706.564 L1642.2 706.564 L1641.53 706.564 L1640.85 706.564 L1640.18 706.564 L1639.5 706.564 L1638.83 706.564 L1638.15 706.564 L1637.48 706.564 L1636.8 706.564 L1636.13 706.564 L1635.45 706.564 L1634.78 706.564 L1634.1 706.564 L1633.43 706.564 L1632.75 706.564 L1632.08 706.564 L1631.4 706.564 L1630.73 706.564 L1630.05 706.564 L1629.38 706.564 L1628.7 706.564 L1628.03 706.564 L1627.35 706.564 L1626.68 706.564 L1626 706.564 L1625.33 706.564 L1624.65 706.564 L1623.98 706.564 L1623.3 706.564 L1622.63 706.564 L1621.95 706.564 L1621.28 706.564 L1620.6 706.564 L1619.93 706.564 L1619.25 706.564 L1618.58 706.564 L1617.9 706.564 L1617.23 706.564 L1616.55 706.564 L1615.88 706.564 L1615.2 706.564 L1614.53 706.564 L1613.85 706.564 L1613.18 706.564 L1612.5 706.564 L1611.83 706.564 L1611.15 706.564 L1610.48 706.564 L1609.8 706.564 L1609.13 706.564 L1608.45 706.564 L1607.78 706.564 L1607.1 706.564 L1606.43 706.564 L1605.75 706.564 L1605.08 706.564 L1604.4 706.564 L1603.73 706.564 L1603.05 706.564 L1602.38 706.564 L1601.7 706.564 L1601.03 706.564 L1600.35 706.564 L1599.68 706.564 L1599 706.564 L1598.33 706.564 L1597.65 706.564 L1596.98 706.564 L1596.3 706.564 L1595.63 706.564 L1594.95 706.564 L1594.28 706.564 L1593.6 706.564 L1592.93 706.564 L1592.25 706.564 L1591.58 706.564 L1590.9 706.564 L1590.23 706.564 L1589.55 706.564 L1588.88 706.564 L1588.2 706.564 L1587.53 706.564 L1586.85 706.564 L1586.18 706.564 L1585.5 706.564 L1584.83 706.564 L1584.15 706.564 L1583.48 706.564 L1582.8 706.564 L1582.13 706.564 L1581.45 706.564 L1580.78 706.564 L1580.1 706.564 L1579.43 706.564 L1578.75 706.564 L1578.08 706.564 L1577.4 706.564 L1576.73 706.564 L1576.05 706.564 L1575.38 706.564 L1574.7 706.564 L1574.03 706.564 L1573.35 706.564 L1572.68 706.564 L1572 706.564 L1571.33 706.564 L1570.65 706.564 L1569.98 706.564 L1569.3 706.564 L1568.63 706.564 L1567.95 706.564 L1567.28 706.564 L1566.6 706.564 L1565.93 706.564 L1565.25 706.564 L1564.58 706.564 L1563.9 706.564 L1563.23 706.564 L1562.55 706.564 L1561.88 706.564 L1561.2 706.564 L1560.53 706.564 L1559.85 706.564 L1559.18 706.564 L1558.5 706.564 L1557.83 706.564 L1557.15 706.564 L1556.48 706.564 L1555.8 706.564 L1555.13 706.564 L1554.45 706.564 L1553.78 706.564 L1553.1 706.564 L1552.43 706.564 L1551.75 706.564 L1551.08 706.564 L1550.4 706.564 L1549.73 706.564 L1549.05 706.564 L1548.38 706.564 L1547.7 706.564 L1547.03 706.564 L1546.35 706.564 L1545.68 706.564 L1545 706.564 L1544.33 706.564 L1543.65 706.564 L1542.98 706.564 L1542.3 706.564 L1541.63 706.564 L1540.95 706.564 L1540.28 706.564 L1539.6 706.564 L1538.93 706.564 L1538.25 706.564 L1537.58 706.564 L1536.9 706.564 L1536.23 706.564 L1535.55 706.564 L1534.88 706.564 L1534.2 706.564 L1533.53 706.564 L1532.85 706.564 L1532.18 706.564 L1531.5 706.564 L1530.83 706.564 L1530.15 706.564 L1529.48 706.564 L1528.8 706.564 L1528.13 706.564 L1527.45 706.564 L1526.78 706.564 L1526.1 706.564 L1525.43 706.564 L1524.75 706.564 L1524.08 706.564 L1523.4 706.564 L1522.73 706.564 L1522.05 706.564 L1521.38 706.564 L1520.7 706.564 L1520.03 706.564 L1519.35 706.564 L1518.68 706.564 L1518 706.564 L1517.33 706.564 L1516.65 706.564 L1515.98 706.564 L1515.3 706.564 L1514.63 706.564 L1513.95 706.564 L1513.28 706.564 L1512.6 706.564 L1511.93 706.564 L1511.25 706.564 L1510.58 706.564 L1509.9 706.564 L1509.23 706.564 L1508.55 706.564 L1507.87 706.564 L1507.2 706.564 L1506.52 706.564 L1505.85 706.564 L1505.17 706.564 L1504.5 706.564 L1503.82 706.564 L1503.15 706.564 L1502.47 706.564 L1501.8 706.564 L1501.12 706.564 L1500.45 706.564 L1499.77 706.564 L1499.1 706.564 L1498.42 706.564 L1497.75 706.564 L1497.07 706.564 L1496.4 706.564 L1495.72 706.564 L1495.05 706.564 L1494.37 706.564 L1493.7 706.564 L1493.02 706.564 L1492.35 706.564 L1491.67 706.564 L1491 706.564 L1490.32 706.564 L1489.65 706.564 L1488.97 706.564 L1488.3 706.564 L1487.62 706.564 L1486.95 706.564 L1486.27 706.564 L1485.6 706.564 L1484.92 706.564 L1484.25 706.564 L1483.57 706.564 L1482.9 706.564 L1482.22 706.564 L1481.55 706.564 L1480.87 706.564 L1480.2 706.564 L1479.52 706.564 L1478.85 706.564 L1478.17 706.564 L1477.5 706.564 L1476.82 706.564 L1476.15 706.564 L1475.47 706.564 L1474.8 706.564 L1474.12 706.564 L1473.45 706.564 L1472.77 706.564 L1472.1 706.564 L1471.42 706.564 L1470.75 706.564 L1470.07 706.564 L1469.4 706.564 L1468.72 706.564 L1468.05 706.564 L1467.37 706.564 L1466.7 706.564 L1466.02 706.564 L1465.35 706.564 L1464.67 706.564 L1464 706.564 L1463.32 706.564 L1462.65 706.564 L1461.97 706.564 L1461.3 706.564 L1460.62 706.564 L1459.95 706.564 L1459.27 706.564 L1458.6 706.564 L1457.92 706.564 L1457.25 706.564 L1456.57 706.564 L1455.9 706.564 L1455.22 706.564 L1454.55 706.564 L1453.87 706.564 L1453.2 706.564 L1452.52 706.564 L1451.85 706.564 L1451.17 706.564 L1450.5 706.564 L1449.82 706.564 L1449.15 706.564 L1448.47 706.564 L1447.8 706.564 L1447.12 706.564 L1446.45 706.564 L1445.77 706.564 L1445.1 706.564 L1444.42 706.564 L1443.75 706.564 L1443.07 706.564 L1442.4 706.564 L1441.72 706.564 L1441.05 706.564 L1440.37 706.564 L1439.7 706.564 L1439.02 706.564 L1438.35 706.564 L1437.67 706.564 L1437 706.564 L1436.32 706.564 L1435.65 706.564 L1434.97 706.564 L1434.3 706.564 L1433.62 706.564 L1432.95 706.564 L1432.27 706.564 L1431.6 706.564 L1430.92 706.564 L1430.25 706.564 L1429.57 706.564 L1428.9 706.564 L1428.22 706.564 L1427.55 706.564 L1426.87 706.564 L1426.2 706.564 L1425.52 706.564 L1424.85 706.564 L1424.17 706.564 L1423.5 706.564 L1422.82 706.564 L1422.15 706.564 L1421.47 706.564 L1420.8 706.564 L1420.12 706.564 L1419.45 706.564 L1418.77 706.564 L1418.1 706.564 L1417.42 706.564 L1416.75 706.564 L1416.07 706.564 L1415.4 706.564 L1414.72 706.564 L1414.05 706.564 L1413.37 706.564 L1412.7 706.564 L1412.02 706.564 L1411.35 706.564 L1410.67 706.564 L1410 706.564 L1409.32 706.564 L1408.65 706.564 L1407.97 706.564 L1407.3 706.564 L1406.62 706.564 L1405.95 706.564 L1405.27 706.564 L1404.6 706.564 L1403.92 706.564 L1403.25 706.564 L1402.57 706.564 L1401.9 706.564 L1401.22 706.564 L1400.55 706.564 L1399.87 706.564 L1399.2 706.564 L1398.52 706.564 L1397.85 706.564 L1397.17 706.564 L1396.5 706.564 L1395.82 706.564 L1395.15 706.564 L1394.47 706.564 L1393.8 706.564 L1393.12 706.564 L1392.45 706.564 L1391.77 706.564 L1391.1 706.564 L1390.42 706.564 L1389.75 706.564 L1389.07 706.564 L1388.4 706.564 L1387.72 706.564 L1387.05 706.564 L1386.37 706.564 L1385.7 706.564 L1385.02 706.564 L1384.35 706.564 L1383.67 706.564 L1383 706.564 L1382.32 706.564 L1381.65 706.564 L1380.97 706.564 L1380.3 706.564 L1379.62 706.564 L1378.95 706.564 L1378.27 706.564 L1377.6 706.564 L1376.92 706.564 L1376.25 706.564 L1375.57 706.564 L1374.9 706.564 L1374.22 706.564 L1373.55 706.564 L1372.87 706.564 L1372.2 706.564 L1371.52 706.564 L1370.85 706.564 L1370.17 706.564 L1369.5 706.564 L1368.82 706.564 L1368.15 706.564 L1367.47 706.564 L1366.8 706.564 L1366.12 706.564 L1365.45 706.564 L1364.77 706.564 L1364.1 706.564 L1363.42 706.564 L1362.75 706.564 L1362.07 706.564 L1361.4 706.564 L1360.72 706.564 L1360.05 706.564 L1359.37 706.564 L1358.7 706.564 L1358.02 706.564 L1357.35 706.564 L1356.67 706.564 L1356 706.564 L1355.32 706.564 L1354.65 706.564 L1353.97 706.564 L1353.3 706.564 L1352.62 706.564 L1351.95 706.564 L1351.27 706.564 L1350.6 706.564 L1349.92 706.564 L1349.25 706.564 L1348.57 706.564 L1347.9 706.564 L1347.22 706.564 L1346.55 706.564 L1345.87 706.564 L1345.2 706.564 L1344.52 706.564 L1343.85 706.564 L1343.17 706.564 L1342.5 706.564 L1341.82 706.564 L1341.15 706.564 L1340.47 706.564 L1339.8 706.564 L1339.12 706.564 L1338.45 706.564 L1337.77 706.564 L1337.1 706.564 L1336.42 706.564 L1335.75 706.564 L1335.07 706.564 L1334.4 706.564 L1333.72 706.564 L1333.05 706.564 L1332.37 706.564 L1331.7 706.564 L1331.02 706.564 L1330.35 706.564 L1329.67 706.564 L1329 706.564 L1328.32 706.564 L1327.65 706.564 L1326.97 706.564 L1326.3 706.564 L1325.62 706.564 L1324.95 706.564 L1324.27 706.564 L1323.6 706.564 L1322.92 706.564 L1322.25 706.564 L1321.57 706.564 L1320.9 706.564 L1320.22 706.564 L1319.55 706.564 L1318.87 706.564 L1318.2 706.564 L1317.52 706.564 L1316.85 706.564 L1316.17 706.564 L1315.5 706.564 L1314.82 706.564 L1314.15 706.564 L1313.47 706.564 L1312.8 706.564 L1312.12 706.564 L1311.45 706.564 L1310.77 706.564 L1310.1 706.564 L1309.42 706.564 L1308.75 706.564 L1308.07 706.564 L1307.4 706.564 L1306.72 706.564 L1306.05 706.564 L1305.37 706.564 L1304.7 706.564 L1304.02 706.564 L1303.35 706.564 L1302.67 706.564 L1302 706.564 L1301.32 706.564 L1300.65 706.564 L1299.97 706.564 L1299.3 706.564 L1298.62 706.564 L1297.95 706.564 L1297.27 706.564 L1296.6 706.564 L1295.92 706.564 L1295.25 706.564 L1294.57 706.564 L1293.9 706.564 L1293.22 706.564 L1292.55 706.564 L1291.87 706.564 L1291.2 706.564 L1290.52 706.564 L1289.85 706.564 L1289.17 706.564 L1288.5 706.564 L1287.82 706.564 L1287.15 706.564 L1286.47 706.564 L1285.8 706.564 L1285.12 706.564 L1284.45 706.564 L1283.77 706.564 L1283.1 706.564 L1282.42 706.564 L1281.75 706.564 L1281.07 706.564 L1280.4 706.564 L1279.72 706.564 L1279.05 706.564 L1278.37 706.564 L1277.7 706.564 L1277.02 706.564 L1276.35 706.564 L1275.67 706.564 L1275 706.564 L1274.32 706.564 L1273.65 706.564 L1272.97 706.564 L1272.3 706.564 L1271.62 706.564 L1270.95 706.564 L1270.27 706.564 L1269.6 706.564 L1268.92 706.564 L1268.25 706.564 L1267.57 706.564 L1266.9 706.564 L1266.22 706.564 L1265.55 706.564 L1264.87 706.564 L1264.2 706.564 L1263.52 706.564 L1262.85 706.564 L1262.17 706.564 L1261.5 706.564 L1260.82 706.564 L1260.15 706.564 L1259.47 706.564 L1258.8 706.564 L1258.12 706.564 L1257.45 706.564 L1256.77 706.564 L1256.1 706.564 L1255.42 706.564 L1254.75 706.564 L1254.07 706.564 L1253.4 706.564 L1252.72 706.564 L1252.05 706.564 L1251.37 706.564 L1250.7 706.564 L1250.02 706.564 L1249.35 706.564 L1248.67 706.564 L1248 706.564 L1247.32 706.564 L1246.65 706.564 L1245.97 706.564 L1245.3 706.564 L1244.62 706.564 L1243.95 706.564 L1243.27 706.564 L1242.6 706.564 L1241.92 706.564 L1241.25 706.564 L1240.57 706.564 L1239.9 706.564 L1239.22 706.564 L1238.55 706.564 L1237.87 706.564 L1237.2 706.564 L1236.52 706.564 L1235.85 706.564 L1235.17 706.564 L1234.5 706.564 L1233.82 706.564 L1233.15 706.564 L1232.47 706.564 L1231.8 706.564 L1231.12 706.564 L1230.45 706.564 L1229.77 706.564 L1229.1 706.564 L1228.42 706.564 L1227.75 706.564 L1227.07 706.564 L1226.4 706.564 L1225.72 706.564 L1225.05 706.564 L1224.37 706.564 L1223.7 706.564 L1223.02 706.564 L1222.35 706.564 L1221.67 706.564 L1221 706.564 L1220.32 706.564 L1219.65 706.564 L1218.97 706.564 L1218.3 706.564 L1217.62 706.564 L1216.95 706.564 L1216.27 706.564 L1215.6 706.564 L1214.92 706.564 L1214.25 706.564 L1213.57 706.564 L1212.9 706.564 L1212.22 706.564 L1211.55 706.564 L1210.87 706.564 L1210.2 706.564 L1209.52 706.564 L1208.85 706.564 L1208.17 706.564 L1207.5 706.564 L1206.82 706.564 L1206.15 706.564 L1205.47 706.564 L1204.8 706.564 L1204.12 706.564 L1203.45 706.564 L1202.77 706.564 L1202.1 706.564 L1201.42 706.564 L1200.75 706.564 L1200.07 706.564 L1199.4 706.564 L1198.72 706.564 L1198.05 706.564 L1197.37 706.564 L1196.7 706.564 L1196.02 706.564 L1195.35 706.564 L1194.67 706.564 L1194 706.564 L1193.32 706.564 L1192.65 706.564 L1191.97 706.564 L1191.3 706.564 L1190.62 706.564 L1189.95 706.564 L1189.27 706.564 L1188.6 706.564 L1187.92 706.564 L1187.25 706.564 L1186.57 706.564 L1185.9 706.564 L1185.22 706.564 L1184.55 706.564 L1183.87 706.564 L1183.2 706.564 L1182.52 706.564 L1181.85 706.564 L1181.17 706.564 L1180.5 706.564 L1179.82 706.564 L1179.15 706.564 L1178.47 706.564 L1177.8 706.564 L1177.12 706.564 L1176.45 706.564 L1175.77 706.564 L1175.1 706.564 L1174.42 706.564 L1173.75 706.564 L1173.07 706.564 L1172.4 706.564 L1171.72 706.564 L1171.05 706.564 L1170.37 706.564 L1169.7 706.564 L1169.02 706.564 L1168.35 706.564 L1167.67 706.564 L1167 706.564 L1166.32 706.564 L1165.65 706.564 L1164.97 706.564 L1164.3 706.564 L1163.62 706.564 L1162.95 706.564 L1162.27 706.564 L1161.6 706.564 L1160.92 706.564 L1160.25 706.564 L1159.57 706.564 L1158.9 706.564 L1158.22 706.564 L1157.55 706.564 L1156.87 706.564 L1156.2 706.564 L1155.52 706.564 L1154.85 706.564 L1154.17 706.564 L1153.5 706.564 L1152.82 706.564 L1152.15 706.564 L1151.47 706.564 L1150.8 706.564 L1150.12 706.564 L1149.45 706.564 L1148.77 706.564 L1148.1 706.564 L1147.42 706.564 L1146.75 706.564 L1146.07 706.564 L1145.4 706.564 L1144.72 706.564 L1144.05 706.564 L1143.37 706.564 L1142.7 706.564 L1142.02 706.564 L1141.35 706.564 L1140.67 706.564 L1140 706.564 L1139.32 706.564 L1138.65 706.564 L1137.97 706.564 L1137.3 706.564 L1136.62 706.564 L1135.95 706.564 L1135.27 706.564 L1134.6 706.564 L1133.92 706.564 L1133.25 706.564 L1132.57 706.564 L1131.9 706.564 L1131.22 706.564 L1130.55 706.564 L1129.87 706.564 L1129.2 706.564 L1128.52 706.564 L1127.85 706.564 L1127.17 706.564 L1126.5 706.564 L1125.82 706.564 L1125.15 706.564 L1124.47 706.564 L1123.8 706.564 L1123.12 706.564 L1122.45 706.564 L1121.77 706.564 L1121.1 706.564 L1120.42 706.564 L1119.75 706.564 L1119.07 706.564 L1118.4 706.564 L1117.72 706.564 L1117.05 706.564 L1116.37 706.564 L1115.7 706.564 L1115.02 706.564 L1114.35 706.564 L1113.67 706.564 L1113 706.564 L1112.32 706.564 L1111.65 706.564 L1110.97 706.564 L1110.3 706.564 L1109.62 706.564 L1108.95 706.564 L1108.27 706.564 L1107.6 706.564 L1106.92 706.564 L1106.25 706.564 L1105.57 706.564 L1104.9 706.564 L1104.22 706.564 L1103.55 706.564 L1102.87 706.564 L1102.2 706.564 L1101.52 706.564 L1100.85 706.564 L1100.17 706.564 L1099.5 706.564 L1098.82 706.564 L1098.15 706.564 L1097.47 706.564 L1096.8 706.564 L1096.12 706.564 L1095.45 706.564 L1094.77 706.564 L1094.1 706.564 L1093.42 706.564 L1092.75 706.564 L1092.07 706.564 L1091.4 706.564 L1090.72 706.564 L1090.05 706.564 L1089.37 706.564 L1088.7 706.564 L1088.02 706.564 L1087.35 706.564 L1086.67 706.564 L1086 706.564 L1085.32 706.564 L1084.65 706.564 L1083.97 706.564 L1083.3 706.564 L1082.62 706.564 L1081.95 706.564 L1081.27 706.564 L1080.6 706.564 L1079.92 706.564 L1079.25 706.564 L1078.57 706.564 L1077.9 706.564 L1077.22 706.564 L1076.55 706.564 L1075.87 706.564 L1075.2 706.564 L1074.52 706.564 L1073.85 706.564 L1073.17 706.564 L1072.5 706.564 L1071.82 706.564 L1071.15 706.564 L1070.47 706.564 L1069.8 706.564 L1069.12 706.564 L1068.45 706.564 L1067.77 706.564 L1067.1 706.564 L1066.42 706.564 L1065.75 706.564 L1065.07 706.564 L1064.4 706.564 L1063.72 706.564 L1063.05 706.564 L1062.37 706.564 L1061.7 706.564 L1061.02 706.564 L1060.35 706.564 L1059.67 706.564 L1059 706.564 L1058.32 706.564 L1057.65 706.564 L1056.97 706.564 L1056.3 706.564 L1055.62 706.564 L1054.95 706.564 L1054.27 706.564 L1053.6 706.564 L1052.92 706.564 L1052.25 706.564 L1051.57 706.564 L1050.9 706.564 L1050.22 706.564 L1049.55 706.564 L1048.87 706.564 L1048.2 706.564 L1047.52 706.564 L1046.85 706.564 L1046.17 706.564 L1045.5 706.564 L1044.82 706.564 L1044.15 706.564 L1043.47 706.564 L1042.8 706.564 L1042.12 706.564 L1041.45 706.564 L1040.77 706.564 L1040.1 706.564 L1039.42 706.564 L1038.75 706.564 L1038.07 706.564 L1037.4 706.564 L1036.72 706.564 L1036.05 706.564 L1035.37 706.564 L1034.7 706.564 L1034.02 706.564 L1033.35 706.564 L1032.67 706.564 L1032 706.564 L1031.32 706.564 L1030.65 706.564 L1029.97 706.564 L1029.3 706.564 L1028.62 706.564 L1027.95 706.564 L1027.27 706.564 L1026.6 706.564 L1025.92 706.564 L1025.25 706.564 L1024.57 706.564 L1023.9 706.564 L1023.22 706.564 L1022.55 706.564 L1021.87 706.564 L1021.2 706.564 L1020.52 706.564 L1019.85 706.564 L1019.17 706.564 L1018.5 706.564 L1017.82 706.564 L1017.15 706.564 L1016.47 706.564 L1015.8 706.564 L1015.12 706.564 L1014.45 706.564 L1013.77 706.564 L1013.1 706.564 L1012.42 706.564 L1011.75 706.564 L1011.07 706.564 L1010.4 706.564 L1009.72 706.564 L1009.05 706.564 L1008.37 706.564 L1007.7 706.564 L1007.02 706.564 L1006.35 706.564 L1005.67 706.564 L1005 706.564 L1004.32 706.564 L1003.65 706.564 L1002.97 706.564 L1002.3 706.564 L1001.62 706.564 L1000.95 706.564 L1000.27 706.564 L999.596 706.564 L998.921 706.564 L998.246 706.564 L997.571 706.564 L996.896 706.564 L996.221 706.564 L995.546 706.564 L994.871 706.564 L994.196 706.564 L993.521 706.564 L992.846 706.564 L992.171 706.564 L991.496 706.564 L990.821 706.564 L990.146 706.564 L989.471 706.564 L988.796 706.564 L988.121 706.564 L987.446 706.564 L986.771 706.564 L986.096 706.564 L985.421 706.564 L984.746 706.564 L984.071 706.564 L983.396 706.564 L982.721 706.564 L982.046 706.564 L981.371 706.564 L980.696 706.564 L980.021 706.564 L979.346 706.564 L978.671 706.564 L977.996 706.564 L977.321 706.564 L976.646 706.564 L975.971 706.564 L975.296 706.564 L974.621 706.564 L973.946 706.564 L973.271 706.564 L972.596 706.564 L971.921 706.564 L971.246 706.564 L970.571 706.564 L969.896 706.564 L969.221 706.564 L968.546 706.564 L967.871 706.564 L967.196 706.564 L966.521 706.564 L965.846 706.564 L965.171 706.564 L964.496 706.564 L963.821 706.564 L963.146 706.564 L962.471 706.564 L961.796 706.564 L961.121 706.564 L960.446 706.564 L959.771 706.564 L959.096 706.564 L958.421 706.564 L957.746 706.564 L957.071 706.564 L956.396 706.564 L955.721 706.564 L955.046 706.564 L954.371 706.564 L953.696 706.564 L953.021 706.564 L952.346 706.564 L951.671 706.564 L950.996 706.564 L950.321 706.564 L949.646 706.564 L948.971 706.564 L948.296 706.564 L947.621 706.564 L946.946 706.564 L946.271 706.564 L945.596 706.564 L944.921 706.564 L944.246 706.564 L943.571 706.564 L942.896 706.564 L942.221 706.564 L941.546 706.564 L940.871 706.564 L940.196 706.564 L939.521 706.564 L938.846 706.564 L938.171 706.564 L937.496 706.564 L936.821 706.564 L936.146 706.564 L935.471 706.564 L934.796 706.564 L934.121 706.564 L933.446 706.564 L932.771 706.564 L932.096 706.564 L931.421 706.564 L930.746 706.564 L930.071 706.564 L929.396 706.564 L928.721 706.564 L928.046 706.564 L927.371 706.564 L926.696 706.564 L926.021 706.564 L925.346 706.564 L924.671 706.564 L923.996 706.564 L923.321 706.564 L922.646 706.564 L921.971 706.564 L921.296 706.564 L920.621 706.564 L919.946 706.564 L919.271 706.564 L918.596 706.564 L917.921 706.564 L917.246 706.564 L916.571 706.564 L915.896 706.564 L915.221 706.564 L914.546 706.564 L913.871 706.564 L913.196 706.564 L912.521 706.564 L911.846 706.564 L911.171 706.564 L910.496 706.564 L909.821 706.564 L909.146 706.564 L908.471 706.564 L907.796 706.564 L907.121 706.564 L906.446 706.564 L905.771 706.564 L905.096 706.564 L904.421 706.564 L903.746 706.564 L903.071 706.564 L902.396 706.564 L901.721 706.564 L901.046 706.564 L900.371 706.564 L899.696 706.564 L899.021 706.564 L898.346 706.564 L897.671 706.564 L896.996 706.564 L896.321 706.564 L895.646 706.564 L894.971 706.564 L894.296 706.564 L893.621 706.564 L892.946 706.564 L892.271 706.564 L891.596 706.564 L890.921 706.564 L890.246 706.564 L889.571 706.564 L888.896 706.564 L888.221 706.564 L887.546 706.564 L886.871 706.564 L886.196 706.564 L885.521 706.564 L884.846 706.564 L884.171 706.564 L883.496 706.564 L882.821 706.564 L882.146 706.564 L881.471 706.564 L880.796 706.564 L880.121 706.564 L879.446 706.564 L878.771 706.564 L878.096 706.564 L877.421 706.564 L876.746 706.564 L876.071 706.564 L875.396 706.564 L874.721 706.564 L874.046 706.564 L873.371 706.564 L872.696 706.564 L872.021 706.564 L871.346 706.564 L870.671 706.564 L869.996 706.564 L869.321 706.564 L868.646 706.564 L867.971 706.564 L867.296 706.564 L866.621 706.564 L865.945 706.564 L865.27 706.564 L864.595 706.564 L863.92 706.564 L863.245 706.564 L862.57 706.564 L861.895 706.564 L861.22 706.564 L860.545 706.564 L859.87 706.564 L859.195 706.564 L858.52 706.564 L857.845 706.564 L857.17 706.564 L856.495 706.564 L855.82 706.564 L855.145 706.564 L854.47 706.564 L853.795 706.564 L853.12 706.564 L852.445 706.564 L851.77 706.564 L851.095 706.564 L850.42 706.564 L849.745 706.564 L849.07 706.564 L848.395 706.564 L847.72 706.564 L847.045 706.564 L846.37 706.564 L845.695 706.564 L845.02 706.564 L844.345 706.564 L843.67 706.564 L842.995 706.564 L842.32 706.564 L841.645 706.564 L840.97 706.564 L840.295 706.564 L839.62 706.564 L838.945 706.564 L838.27 706.564 L837.595 706.564 L836.92 706.564 L836.245 706.564 L835.57 706.564 L834.895 706.564 L834.22 706.564 L833.545 706.564 L832.87 706.564 L832.195 706.564 L831.52 706.564 L830.845 706.564 L830.17 706.564 L829.495 706.564 L828.82 706.564 L828.145 706.564 L827.47 706.564 L826.795 706.564 L826.12 706.564 L825.445 706.564 L824.77 706.564 L824.095 706.564 L823.42 706.564 L822.745 706.564 L822.07 706.564 L821.395 706.564 L820.72 706.564 L820.045 706.564 L819.37 706.564 L818.695 706.564 L818.02 706.564 L817.345 706.564 L816.67 706.564 L815.995 706.564 L815.32 706.564 L814.645 706.564 L813.97 706.564 L813.295 706.564 L812.62 706.564 L811.945 706.564 L811.27 706.564 L810.595 706.564 L809.92 706.564 L809.245 706.564 L808.57 706.564 L807.895 706.564 L807.22 706.564 L806.545 706.564 L805.87 706.564 L805.195 706.564 L804.52 706.564 L803.845 706.564 L803.17 706.564 L802.495 706.564 L801.82 706.564 L801.145 706.564 L800.47 706.564 L799.795 706.564 L799.12 706.564 L798.445 706.564 L797.77 706.564 L797.095 706.564 L796.42 706.564 L795.745 706.564 L795.07 706.564 L794.395 706.564 L793.72 706.564 L793.045 706.564 L792.37 706.564 L791.695 706.564 L791.02 706.564 L790.345 706.564 L789.67 706.564 L788.995 706.564 L788.32 706.564 L787.645 706.564 L786.97 706.564 L786.295 706.564 L785.62 706.564 L784.945 706.564 L784.27 706.564 L783.595 706.564 L782.92 706.564 L782.245 706.564 L781.57 706.564 L780.895 706.564 L780.22 706.564 L779.545 706.564 L778.87 706.564 L778.195 706.564 L777.52 706.564 L776.845 706.564 L776.17 706.564 L775.495 706.564 L774.82 706.564 L774.145 706.564 L773.47 706.564 L772.795 706.564 L772.12 706.564 L771.445 706.564 L770.77 706.564 L770.095 706.564 L769.42 706.564 L768.745 706.564 L768.07 706.564 L767.395 706.564 L766.72 706.564 L766.045 706.564 L765.37 706.564 L764.695 706.564 L764.02 706.564 L763.345 706.564 L762.67 706.564 L761.995 706.564 L761.32 706.564 L760.645 706.564 L759.97 706.564 L759.295 706.564 L758.62 706.564 L757.945 706.564 L757.27 706.564 L756.595 706.564 L755.92 706.564 L755.245 706.564 L754.57 706.564 L753.895 706.564 L753.22 706.564 L752.545 706.564 L751.87 706.564 L751.195 706.564 L750.52 706.564 L749.845 706.564 L749.17 706.564 L748.495 706.564 L747.82 706.564 L747.145 706.564 L746.47 706.564 L745.795 706.564 L745.12 706.564 L744.445 706.564 L743.77 706.564 L743.095 706.564 L742.42 706.564 L741.745 706.564 L741.07 706.564 L740.395 706.564 L739.72 706.564 L739.045 706.564 L738.37 706.564 L737.695 706.564 L737.02 706.564 L736.345 706.564 L735.67 706.564 L734.995 706.564 L734.32 706.564 L733.645 706.564 L732.97 706.564 L732.295 706.564 L731.62 706.564 L730.945 706.564 L730.27 706.564 L729.595 706.564 L728.92 706.564 L728.245 706.564 L727.57 706.564 L726.895 706.564 L726.22 706.564 L725.545 706.564 L724.87 706.564 L724.195 706.564 L723.52 706.564 L722.844 706.564 L722.169 706.564 L721.494 706.564 L720.819 706.564 L720.144 706.564 L719.469 706.564 L718.794 706.564 L718.119 706.564 L717.444 706.564 L716.769 706.564 L716.094 706.564 L715.419 706.564 L714.744 706.564 L714.069 706.564 L713.394 706.564 L712.719 706.564 L712.044 706.564 L711.369 706.564 L710.694 706.564 L710.019 706.564 L709.344 706.564 L708.669 706.564 L707.994 706.564 L707.319 706.564 L706.644 706.564 L705.969 706.564 L705.294 706.564 L704.619 706.564 L703.944 706.564 L703.269 706.564 L702.594 706.564 L701.919 706.564 L701.244 706.564 L700.569 706.564 L699.894 706.564 L699.219 706.564 L698.544 706.564 L697.869 706.564 L697.194 706.564 L696.519 706.564 L695.844 706.564 L695.169 706.564 L694.494 706.564 L693.819 706.564 L693.144 706.564 L692.469 706.564 L691.794 706.564 L691.119 706.564 L690.444 706.564 L689.769 706.564 L689.094 706.564 L688.419 706.564 L687.744 706.564 L687.069 706.564 L686.394 706.564 L685.719 706.564 L685.044 706.564 L684.369 706.564 L683.694 706.564 L683.019 706.564 L682.344 706.564 L681.669 706.564 L680.994 706.564 L680.319 706.564 L679.644 706.564 L678.969 706.564 L678.294 706.564 L677.619 706.564 L676.944 706.564 L676.269 706.564 L675.594 706.564 L674.919 706.564 L674.244 706.564 L673.569 706.564 L672.894 706.564 L672.219 706.564 L671.544 706.564 L670.869 706.564 L670.194 706.564 L669.519 706.564 L668.844 706.564 L668.169 706.564 L667.494 706.564 L666.819 706.564 L666.144 706.564 L665.469 706.564 L664.794 706.564 L664.119 706.564 L663.444 706.564 L662.769 706.564 L662.094 706.564 L661.419 706.564 L660.744 706.564 L660.069 706.564 L659.394 706.564 L658.719 706.564 L658.044 706.564 L657.369 706.564 L656.694 706.564 L656.019 706.564 L655.344 706.564 L654.669 706.564 L653.994 706.564 L653.319 706.564 L652.644 706.564 L651.969 706.564 L651.294 706.564 L650.619 706.564 L649.944 706.564 L649.269 706.564 L648.594 706.564 L647.919 706.564 L647.244 706.564 L646.569 706.564 L645.894 706.564 L645.219 706.564 L644.544 706.564 L643.869 706.564 L643.194 706.564 L642.519 706.564 L641.844 706.564 L641.169 706.564 L640.494 706.564 L639.819 706.564 L639.144 706.564 L638.469 706.564 L637.794 706.564 L637.119 706.564 L636.444 706.564 L635.769 706.564 L635.094 706.564 L634.419 706.564 L633.744 706.564 L633.069 706.564 L632.394 706.564 L631.719 706.564 L631.044 706.564 L630.369 706.564 L629.694 706.564 L629.019 706.564 L628.344 706.564 L627.669 706.564 L626.994 706.564 L626.319 706.564 L625.644 706.564 L624.969 706.564 L624.294 706.564 L623.619 706.564 L622.944 706.564 L622.269 706.564 L621.594 706.564 L620.919 706.564 L620.244 706.564 L619.569 706.564 L618.894 706.564 L618.219 706.564 L617.544 706.564 L616.869 706.564 L616.194 706.564 L615.519 706.564 L614.844 706.564 L614.169 706.564 L613.494 706.564 L612.819 706.564 L612.144 706.564 L611.469 706.564 L610.794 706.564 L610.119 706.564 L609.444 706.564 L608.769 706.564 L608.094 706.564 L607.419 706.564 L606.744 706.564 L606.069 706.564 L605.394 706.564 L604.719 706.564 L604.044 706.564 L603.369 706.564 L602.694 706.564 L602.019 706.564 L601.344 706.564 L600.669 706.564 L599.994 706.564 L599.319 706.564 L598.644 706.564 L597.969 706.564 L597.294 706.564 L596.619 706.564 L595.944 706.564 L595.269 706.564 L594.594 706.564 L593.919 706.564 L593.244 706.564 L592.569 706.564 L591.894 706.564 L591.219 706.564 L590.544 706.564 L589.869 706.564 L589.194 706.564 L588.519 706.564 L587.844 706.564 L587.169 706.564 L586.494 706.564 L585.819 706.564 L585.144 706.564 L584.469 706.564 L583.794 706.564 L583.119 706.564 L582.444 706.564 L581.769 706.564 L581.094 706.564 L580.419 706.564 L579.743 706.564 L579.068 706.564 L578.393 706.564 L577.718 706.564 L577.043 706.564 L576.368 706.564 L575.693 706.564 L575.018 706.564 L574.343 706.564 L573.668 706.564 L572.993 706.564 L572.318 706.564 L571.643 706.564 L570.968 706.564 L570.293 706.564 L569.618 706.564 L568.943 706.564 L568.268 706.564 L567.593 706.564 L566.918 706.564 L566.243 706.564 L565.568 706.564 L564.893 706.564 L564.218 706.564 L563.543 706.564 L562.868 706.564 L562.193 706.564 L561.518 706.564 L560.843 706.564 L560.168 706.564 L559.493 706.564 L558.818 706.564 L558.143 706.564 L557.468 706.564 L556.793 706.564 L556.118 706.564 L555.443 706.564 L554.768 706.564 L554.093 706.564 L553.418 706.564  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip603)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"553.418,707.676 554.093,707.676 554.768,707.676 555.443,707.676 556.118,707.676 556.793,707.676 557.468,707.676 558.143,707.676 558.818,707.676 559.493,707.676 560.168,707.676 560.843,707.676 561.518,707.676 562.193,707.676 562.868,707.676 563.543,707.676 564.218,707.676 564.893,707.676 565.568,707.676 566.243,707.676 566.918,707.676 567.593,707.676 568.268,707.676 568.943,707.676 569.618,707.676 570.293,707.676 570.968,707.676 571.643,707.676 572.318,707.676 572.993,707.676 573.668,707.676 574.343,707.676 575.018,707.676 575.693,707.676 576.368,707.676 577.043,707.676 577.718,707.676 578.393,707.676 579.068,707.676 579.743,707.676 580.419,707.676 581.094,707.676 581.769,707.676 582.444,707.676 583.119,707.676 583.794,707.676 584.469,707.676 585.144,707.676 585.819,707.676 586.494,707.676 587.169,707.676 587.844,707.676 588.519,707.676 589.194,707.676 589.869,707.676 590.544,707.676 591.219,707.676 591.894,707.676 592.569,707.676 593.244,707.676 593.919,707.676 594.594,707.676 595.269,707.676 595.944,707.676 596.619,707.676 597.294,707.676 597.969,707.676 598.644,707.676 599.319,707.676 599.994,707.676 600.669,707.676 601.344,707.676 602.019,707.676 602.694,707.676 603.369,707.676 604.044,707.676 604.719,707.676 605.394,707.676 606.069,707.676 606.744,707.676 607.419,707.676 608.094,707.676 608.769,707.676 609.444,707.676 610.119,707.676 610.794,707.676 611.469,707.676 612.144,707.676 612.819,707.676 613.494,707.676 614.169,707.676 614.844,707.676 615.519,707.676 616.194,707.676 616.869,707.676 617.544,707.676 618.219,707.676 618.894,707.676 619.569,707.676 620.244,707.676 620.919,707.676 621.594,707.676 622.269,707.676 622.944,707.676 623.619,707.676 624.294,707.676 624.969,707.676 625.644,707.676 626.319,707.676 626.994,707.676 627.669,707.676 628.344,707.676 629.019,707.676 629.694,707.676 630.369,707.676 631.044,707.676 631.719,707.676 632.394,707.676 633.069,707.676 633.744,707.676 634.419,707.676 635.094,707.676 635.769,707.676 636.444,707.676 637.119,707.676 637.794,707.676 638.469,707.676 639.144,707.676 639.819,707.676 640.494,707.676 641.169,707.676 641.844,707.676 642.519,707.676 643.194,707.676 643.869,707.676 644.544,707.676 645.219,707.676 645.894,707.676 646.569,707.676 647.244,707.676 647.919,707.676 648.594,707.676 649.269,707.676 649.944,707.676 650.619,707.676 651.294,707.676 651.969,707.676 652.644,707.676 653.319,707.676 653.994,707.676 654.669,707.676 655.344,707.676 656.019,707.676 656.694,707.676 657.369,707.676 658.044,707.676 658.719,707.676 659.394,707.676 660.069,707.676 660.744,707.676 661.419,707.676 662.094,707.676 662.769,707.676 663.444,707.676 664.119,707.676 664.794,707.676 665.469,707.676 666.144,707.676 666.819,707.676 667.494,707.676 668.169,707.676 668.844,707.676 669.519,707.676 670.194,707.676 670.869,707.676 671.544,707.676 672.219,707.676 672.894,707.676 673.569,707.676 674.244,707.676 674.919,707.676 675.594,707.676 676.269,707.676 676.944,707.676 677.619,707.676 678.294,707.676 678.969,707.676 679.644,707.676 680.319,707.676 680.994,707.676 681.669,707.676 682.344,707.676 683.019,707.676 683.694,707.676 684.369,707.676 685.044,707.676 685.719,707.676 686.394,707.676 687.069,707.676 687.744,707.676 688.419,707.676 689.094,707.676 689.769,707.676 690.444,707.676 691.119,707.676 691.794,707.676 692.469,707.676 693.144,707.676 693.819,707.676 694.494,707.676 695.169,707.676 695.844,707.676 696.519,707.676 697.194,707.676 697.869,707.676 698.544,707.676 699.219,707.676 699.894,707.676 700.569,707.676 701.244,707.676 701.919,707.676 702.594,707.676 703.269,707.676 703.944,707.676 704.619,707.676 705.294,707.676 705.969,707.676 706.644,707.676 707.319,707.676 707.994,707.676 708.669,707.676 709.344,707.676 710.019,707.676 710.694,707.676 711.369,707.676 712.044,707.676 712.719,707.676 713.394,707.676 714.069,707.676 714.744,707.676 715.419,707.676 716.094,707.676 716.769,707.676 717.444,707.676 718.119,707.676 718.794,707.676 719.469,707.676 720.144,707.676 720.819,707.676 721.494,707.676 722.169,707.676 722.844,707.676 723.52,707.676 724.195,707.676 724.87,707.676 725.545,707.676 726.22,707.676 726.895,707.676 727.57,707.676 728.245,707.676 728.92,707.676 729.595,707.676 730.27,707.676 730.945,707.676 731.62,707.676 732.295,707.676 732.97,707.676 733.645,707.676 734.32,707.676 734.995,707.676 735.67,707.676 736.345,707.676 737.02,707.676 737.695,707.676 738.37,707.676 739.045,707.676 739.72,707.676 740.395,707.676 741.07,707.676 741.745,707.676 742.42,707.676 743.095,707.676 743.77,707.676 744.445,707.676 745.12,707.676 745.795,707.676 746.47,707.676 747.145,707.676 747.82,707.676 748.495,707.676 749.17,707.676 749.845,707.676 750.52,707.676 751.195,707.676 751.87,707.676 752.545,707.676 753.22,707.676 753.895,707.676 754.57,707.676 755.245,707.676 755.92,707.676 756.595,707.676 757.27,707.676 757.945,707.676 758.62,707.676 759.295,707.676 759.97,707.676 760.645,707.676 761.32,707.676 761.995,707.676 762.67,707.676 763.345,707.676 764.02,707.676 764.695,707.676 765.37,707.676 766.045,707.676 766.72,707.676 767.395,707.676 768.07,707.676 768.745,707.676 769.42,707.676 770.095,707.676 770.77,707.676 771.445,707.676 772.12,707.676 772.795,707.676 773.47,707.676 774.145,707.676 774.82,707.676 775.495,707.676 776.17,707.676 776.845,707.676 777.52,707.676 778.195,707.676 778.87,707.676 779.545,707.676 780.22,707.676 780.895,707.676 781.57,707.676 782.245,707.676 782.92,707.676 783.595,707.676 784.27,707.676 784.945,707.676 785.62,707.676 786.295,707.676 786.97,707.676 787.645,707.676 788.32,707.676 788.995,707.676 789.67,707.676 790.345,707.676 791.02,707.676 791.695,707.676 792.37,707.676 793.045,707.676 793.72,707.676 794.395,707.676 795.07,707.676 795.745,707.676 796.42,707.676 797.095,707.676 797.77,707.676 798.445,707.676 799.12,707.676 799.795,707.676 800.47,707.676 801.145,707.676 801.82,707.676 802.495,707.676 803.17,707.676 803.845,707.676 804.52,707.676 805.195,707.676 805.87,707.676 806.545,707.676 807.22,707.676 807.895,707.676 808.57,707.676 809.245,707.676 809.92,707.676 810.595,707.676 811.27,707.676 811.945,707.676 812.62,707.676 813.295,707.676 813.97,707.676 814.645,707.676 815.32,707.676 815.995,707.676 816.67,707.676 817.345,707.676 818.02,707.676 818.695,707.676 819.37,707.676 820.045,707.676 820.72,707.676 821.395,707.676 822.07,707.676 822.745,707.676 823.42,707.676 824.095,707.676 824.77,707.676 825.445,707.676 826.12,707.676 826.795,707.676 827.47,707.676 828.145,707.676 828.82,707.676 829.495,707.676 830.17,707.676 830.845,707.676 831.52,707.676 832.195,707.676 832.87,707.676 833.545,707.676 834.22,707.676 834.895,707.676 835.57,707.676 836.245,707.676 836.92,707.676 837.595,707.676 838.27,707.676 838.945,707.676 839.62,707.676 840.295,707.676 840.97,707.676 841.645,707.676 842.32,707.676 842.995,707.676 843.67,707.676 844.345,707.676 845.02,707.676 845.695,707.676 846.37,707.676 847.045,707.676 847.72,707.676 848.395,707.676 849.07,707.676 849.745,707.676 850.42,707.676 851.095,707.676 851.77,707.676 852.445,707.676 853.12,707.676 853.795,707.676 854.47,707.676 855.145,707.676 855.82,707.676 856.495,707.676 857.17,707.676 857.845,707.676 858.52,707.676 859.195,707.676 859.87,707.676 860.545,707.676 861.22,707.676 861.895,707.676 862.57,707.676 863.245,707.676 863.92,707.676 864.595,707.676 865.27,707.676 865.945,707.676 866.621,707.676 867.296,707.676 867.971,707.676 868.646,707.676 869.321,707.676 869.996,707.676 870.671,707.676 871.346,707.676 872.021,707.676 872.696,707.676 873.371,707.676 874.046,707.676 874.721,707.676 875.396,707.676 876.071,707.676 876.746,707.676 877.421,707.676 878.096,707.676 878.771,707.676 879.446,707.676 880.121,707.676 880.796,707.676 881.471,707.676 882.146,707.676 882.821,707.676 883.496,707.676 884.171,707.676 884.846,707.676 885.521,707.676 886.196,707.676 886.871,707.676 887.546,707.676 888.221,707.676 888.896,707.676 889.571,707.676 890.246,707.676 890.921,707.676 891.596,707.676 892.271,707.676 892.946,707.676 893.621,707.676 894.296,707.676 894.971,707.676 895.646,707.676 896.321,707.676 896.996,707.676 897.671,707.676 898.346,707.676 899.021,707.676 899.696,707.676 900.371,707.676 901.046,707.676 901.721,707.676 902.396,707.676 903.071,707.676 903.746,707.676 904.421,707.676 905.096,707.676 905.771,707.676 906.446,707.676 907.121,707.676 907.796,707.676 908.471,707.676 909.146,707.676 909.821,707.676 910.496,707.676 911.171,707.676 911.846,707.676 912.521,707.676 913.196,707.676 913.871,707.676 914.546,707.676 915.221,707.676 915.896,707.676 916.571,707.676 917.246,707.676 917.921,707.676 918.596,707.676 919.271,707.676 919.946,707.676 920.621,707.676 921.296,707.676 921.971,707.676 922.646,707.676 923.321,707.676 923.996,707.676 924.671,707.676 925.346,707.676 926.021,707.676 926.696,707.676 927.371,707.676 928.046,707.676 928.721,707.676 929.396,707.676 930.071,707.676 930.746,707.676 931.421,707.676 932.096,707.676 932.771,707.676 933.446,707.676 934.121,707.676 934.796,707.676 935.471,707.676 936.146,707.676 936.821,707.676 937.496,707.676 938.171,707.676 938.846,707.676 939.521,707.676 940.196,707.676 940.871,707.676 941.546,707.676 942.221,707.676 942.896,707.676 943.571,707.676 944.246,707.676 944.921,707.676 945.596,707.676 946.271,707.676 946.946,707.676 947.621,707.676 948.296,707.676 948.971,707.676 949.646,707.676 950.321,707.676 950.996,707.676 951.671,707.676 952.346,707.676 953.021,707.676 953.696,707.676 954.371,707.676 955.046,707.676 955.721,707.676 956.396,707.676 957.071,707.676 957.746,707.676 958.421,707.676 959.096,707.676 959.771,707.676 960.446,707.676 961.121,707.676 961.796,707.676 962.471,707.676 963.146,707.676 963.821,707.676 964.496,707.676 965.171,707.676 965.846,707.676 966.521,707.676 967.196,707.676 967.871,707.676 968.546,707.676 969.221,707.676 969.896,707.676 970.571,707.676 971.246,707.676 971.921,707.676 972.596,707.676 973.271,707.676 973.946,707.676 974.621,707.676 975.296,707.676 975.971,707.676 976.646,707.676 977.321,707.676 977.996,707.676 978.671,707.676 979.346,707.676 980.021,707.676 980.696,707.676 981.371,707.676 982.046,707.676 982.721,707.676 983.396,707.676 984.071,707.676 984.746,707.676 985.421,707.676 986.096,707.676 986.771,707.676 987.446,707.676 988.121,707.676 988.796,707.676 989.471,707.676 990.146,707.676 990.821,707.676 991.496,707.676 992.171,707.676 992.846,707.676 993.521,707.676 994.196,707.676 994.871,707.676 995.546,707.676 996.221,707.676 996.896,707.676 997.571,707.676 998.246,707.676 998.921,707.676 999.596,707.676 1000.27,707.676 1000.95,707.676 1001.62,707.676 1002.3,707.676 1002.97,707.676 1003.65,707.676 1004.32,707.676 1005,707.676 1005.67,707.676 1006.35,707.676 1007.02,707.676 1007.7,707.676 1008.37,707.676 1009.05,707.676 1009.72,707.676 1010.4,707.676 1011.07,707.676 1011.75,707.676 1012.42,707.676 1013.1,707.676 1013.77,707.676 1014.45,707.676 1015.12,707.676 1015.8,707.676 1016.47,707.676 1017.15,707.676 1017.82,707.676 1018.5,707.676 1019.17,707.676 1019.85,707.676 1020.52,707.676 1021.2,707.676 1021.87,707.676 1022.55,707.676 1023.22,707.676 1023.9,707.676 1024.57,707.676 1025.25,707.676 1025.92,707.676 1026.6,707.676 1027.27,707.676 1027.95,707.676 1028.62,707.676 1029.3,707.676 1029.97,707.676 1030.65,707.676 1031.32,707.676 1032,707.676 1032.67,707.676 1033.35,707.676 1034.02,707.676 1034.7,707.676 1035.37,707.676 1036.05,707.676 1036.72,707.676 1037.4,707.676 1038.07,707.676 1038.75,707.676 1039.42,707.676 1040.1,707.676 1040.77,707.676 1041.45,707.676 1042.12,707.676 1042.8,707.676 1043.47,707.676 1044.15,707.676 1044.82,707.676 1045.5,707.676 1046.17,707.676 1046.85,707.676 1047.52,707.676 1048.2,707.676 1048.87,707.676 1049.55,707.676 1050.22,707.676 1050.9,707.676 1051.57,707.676 1052.25,707.676 1052.92,707.676 1053.6,707.676 1054.27,707.676 1054.95,707.676 1055.62,707.676 1056.3,707.676 1056.97,707.676 1057.65,707.676 1058.32,707.676 1059,707.676 1059.67,707.676 1060.35,707.676 1061.02,707.676 1061.7,707.676 1062.37,707.676 1063.05,707.676 1063.72,707.676 1064.4,707.676 1065.07,707.676 1065.75,707.676 1066.42,707.676 1067.1,707.676 1067.77,707.676 1068.45,707.676 1069.12,707.676 1069.8,707.676 1070.47,707.676 1071.15,707.676 1071.82,707.676 1072.5,707.676 1073.17,707.676 1073.85,707.676 1074.52,707.676 1075.2,707.676 1075.87,707.676 1076.55,707.676 1077.22,707.676 1077.9,707.676 1078.57,707.676 1079.25,707.676 1079.92,707.676 1080.6,707.676 1081.27,707.676 1081.95,707.676 1082.62,707.676 1083.3,707.676 1083.97,707.676 1084.65,707.676 1085.32,707.676 1086,707.676 1086.67,707.676 1087.35,707.676 1088.02,707.676 1088.7,707.676 1089.37,707.676 1090.05,707.676 1090.72,707.676 1091.4,707.676 1092.07,707.676 1092.75,707.676 1093.42,707.676 1094.1,707.676 1094.77,707.676 1095.45,707.676 1096.12,707.676 1096.8,707.676 1097.47,707.676 1098.15,707.676 1098.82,707.676 1099.5,707.676 1100.17,707.676 1100.85,707.676 1101.52,707.676 1102.2,707.676 1102.87,707.676 1103.55,707.676 1104.22,707.676 1104.9,707.676 1105.57,707.676 1106.25,707.676 1106.92,707.676 1107.6,707.676 1108.27,707.676 1108.95,707.676 1109.62,707.676 1110.3,707.676 1110.97,707.676 1111.65,707.676 1112.32,707.676 1113,707.676 1113.67,707.676 1114.35,707.676 1115.02,707.676 1115.7,707.676 1116.37,707.676 1117.05,707.676 1117.72,707.676 1118.4,707.676 1119.07,707.676 1119.75,707.676 1120.42,707.676 1121.1,707.676 1121.77,707.676 1122.45,707.676 1123.12,707.676 1123.8,707.676 1124.47,707.676 1125.15,707.676 1125.82,707.676 1126.5,707.676 1127.17,707.676 1127.85,707.676 1128.52,707.676 1129.2,707.676 1129.87,707.676 1130.55,707.676 1131.22,707.676 1131.9,707.676 1132.57,707.676 1133.25,707.676 1133.92,707.676 1134.6,707.676 1135.27,707.676 1135.95,707.676 1136.62,707.676 1137.3,707.676 1137.97,707.676 1138.65,707.676 1139.32,707.676 1140,707.676 1140.67,707.676 1141.35,707.676 1142.02,707.676 1142.7,707.676 1143.37,707.676 1144.05,707.676 1144.72,707.676 1145.4,707.676 1146.07,707.676 1146.75,707.676 1147.42,707.676 1148.1,707.676 1148.77,707.676 1149.45,707.676 1150.12,707.676 1150.8,707.676 1151.47,707.676 1152.15,707.676 1152.82,707.676 1153.5,707.676 1154.17,707.676 1154.85,707.676 1155.52,707.676 1156.2,707.676 1156.87,707.676 1157.55,707.676 1158.22,707.676 1158.9,707.676 1159.57,707.676 1160.25,707.676 1160.92,707.676 1161.6,707.676 1162.27,707.676 1162.95,707.676 1163.62,707.676 1164.3,707.676 1164.97,707.676 1165.65,707.676 1166.32,707.676 1167,707.676 1167.67,707.676 1168.35,707.676 1169.02,707.676 1169.7,707.676 1170.37,707.676 1171.05,707.676 1171.72,707.676 1172.4,707.676 1173.07,707.676 1173.75,707.676 1174.42,707.676 1175.1,707.676 1175.77,707.676 1176.45,707.676 1177.12,707.676 1177.8,707.676 1178.47,707.676 1179.15,707.676 1179.82,707.676 1180.5,707.676 1181.17,707.676 1181.85,707.676 1182.52,707.676 1183.2,707.676 1183.87,707.676 1184.55,707.676 1185.22,707.676 1185.9,707.676 1186.57,707.676 1187.25,707.676 1187.92,707.676 1188.6,707.676 1189.27,707.676 1189.95,707.676 1190.62,707.676 1191.3,707.676 1191.97,707.676 1192.65,707.676 1193.32,707.676 1194,707.676 1194.67,707.676 1195.35,707.676 1196.02,707.676 1196.7,707.676 1197.37,707.676 1198.05,707.676 1198.72,707.676 1199.4,707.676 1200.07,707.676 1200.75,707.676 1201.42,707.676 1202.1,707.676 1202.77,707.676 1203.45,707.676 1204.12,707.676 1204.8,707.676 1205.47,707.676 1206.15,707.676 1206.82,707.676 1207.5,707.676 1208.17,707.676 1208.85,707.676 1209.52,707.676 1210.2,707.676 1210.87,707.676 1211.55,707.676 1212.22,707.676 1212.9,707.676 1213.57,707.676 1214.25,707.676 1214.92,707.676 1215.6,707.676 1216.27,707.676 1216.95,707.676 1217.62,707.676 1218.3,707.676 1218.97,707.676 1219.65,707.676 1220.32,707.676 1221,707.676 1221.67,707.676 1222.35,707.676 1223.02,707.676 1223.7,707.676 1224.37,707.676 1225.05,707.676 1225.72,707.676 1226.4,707.676 1227.07,707.676 1227.75,707.676 1228.42,707.676 1229.1,707.676 1229.77,707.676 1230.45,707.676 1231.12,707.676 1231.8,707.676 1232.47,707.676 1233.15,707.676 1233.82,707.676 1234.5,707.676 1235.17,707.676 1235.85,707.676 1236.52,707.676 1237.2,707.676 1237.87,707.676 1238.55,707.676 1239.22,707.676 1239.9,707.676 1240.57,707.676 1241.25,707.676 1241.92,707.676 1242.6,707.676 1243.27,707.676 1243.95,707.676 1244.62,707.676 1245.3,707.676 1245.97,707.676 1246.65,707.676 1247.32,707.676 1248,707.676 1248.67,707.676 1249.35,707.676 1250.02,707.676 1250.7,707.676 1251.37,707.676 1252.05,707.676 1252.72,707.676 1253.4,707.676 1254.07,707.676 1254.75,707.676 1255.42,707.676 1256.1,707.676 1256.77,707.676 1257.45,707.676 1258.12,707.676 1258.8,707.676 1259.47,707.676 1260.15,707.676 1260.82,707.676 1261.5,707.676 1262.17,707.676 1262.85,707.676 1263.52,707.676 1264.2,707.676 1264.87,707.676 1265.55,707.676 1266.22,707.676 1266.9,707.676 1267.57,707.676 1268.25,707.676 1268.92,707.676 1269.6,707.676 1270.27,707.676 1270.95,707.676 1271.62,707.676 1272.3,707.676 1272.97,707.676 1273.65,707.676 1274.32,707.676 1275,707.676 1275.67,707.676 1276.35,707.676 1277.02,707.676 1277.7,707.676 1278.37,707.676 1279.05,707.676 1279.72,707.676 1280.4,707.676 1281.07,707.676 1281.75,707.676 1282.42,707.676 1283.1,707.676 1283.77,707.676 1284.45,707.676 1285.12,707.676 1285.8,707.676 1286.47,707.676 1287.15,707.676 1287.82,707.676 1288.5,707.676 1289.17,707.676 1289.85,707.676 1290.52,707.676 1291.2,707.676 1291.87,707.676 1292.55,707.676 1293.22,707.676 1293.9,707.676 1294.57,707.676 1295.25,707.676 1295.92,707.676 1296.6,707.676 1297.27,707.676 1297.95,707.676 1298.62,707.676 1299.3,707.676 1299.97,707.676 1300.65,707.676 1301.32,707.676 1302,707.676 1302.67,707.676 1303.35,707.676 1304.02,707.676 1304.7,707.676 1305.37,707.676 1306.05,707.676 1306.72,707.676 1307.4,707.676 1308.07,707.676 1308.75,707.676 1309.42,707.676 1310.1,707.676 1310.77,707.676 1311.45,707.676 1312.12,707.676 1312.8,707.676 1313.47,707.676 1314.15,707.676 1314.82,707.676 1315.5,707.676 1316.17,707.676 1316.85,707.676 1317.52,707.676 1318.2,707.676 1318.87,707.676 1319.55,707.676 1320.22,707.676 1320.9,707.676 1321.57,707.676 1322.25,707.676 1322.92,707.676 1323.6,707.676 1324.27,707.676 1324.95,707.676 1325.62,707.676 1326.3,707.676 1326.97,707.676 1327.65,707.676 1328.32,707.676 1329,707.676 1329.67,707.676 1330.35,707.676 1331.02,707.676 1331.7,707.676 1332.37,707.676 1333.05,707.676 1333.72,707.676 1334.4,707.676 1335.07,707.676 1335.75,707.676 1336.42,707.676 1337.1,707.676 1337.77,707.676 1338.45,707.676 1339.12,707.676 1339.8,707.676 1340.47,707.676 1341.15,707.676 1341.82,707.676 1342.5,707.676 1343.17,707.676 1343.85,707.676 1344.52,707.676 1345.2,707.676 1345.87,707.676 1346.55,707.676 1347.22,707.676 1347.9,707.676 1348.57,707.676 1349.25,707.676 1349.92,707.676 1350.6,707.676 1351.27,707.676 1351.95,707.676 1352.62,707.676 1353.3,707.676 1353.97,707.676 1354.65,707.676 1355.32,707.676 1356,707.676 1356.67,707.676 1357.35,707.676 1358.02,707.676 1358.7,707.676 1359.37,707.676 1360.05,707.676 1360.72,707.676 1361.4,707.676 1362.07,707.676 1362.75,707.676 1363.42,707.676 1364.1,707.676 1364.77,707.676 1365.45,707.676 1366.12,707.676 1366.8,707.676 1367.47,707.676 1368.15,707.676 1368.82,707.676 1369.5,707.676 1370.17,707.676 1370.85,707.676 1371.52,707.676 1372.2,707.676 1372.87,707.676 1373.55,707.676 1374.22,707.676 1374.9,707.676 1375.57,707.676 1376.25,707.676 1376.92,707.676 1377.6,707.676 1378.27,707.676 1378.95,707.676 1379.62,707.676 1380.3,707.676 1380.97,707.676 1381.65,707.676 1382.32,707.676 1383,707.676 1383.67,707.676 1384.35,707.676 1385.02,707.676 1385.7,707.676 1386.37,707.676 1387.05,707.676 1387.72,707.676 1388.4,707.676 1389.07,707.676 1389.75,707.676 1390.42,707.676 1391.1,707.676 1391.77,707.676 1392.45,707.676 1393.12,707.676 1393.8,707.676 1394.47,707.676 1395.15,707.676 1395.82,707.676 1396.5,707.676 1397.17,707.676 1397.85,707.676 1398.52,707.676 1399.2,707.676 1399.87,707.676 1400.55,707.676 1401.22,707.676 1401.9,707.676 1402.57,707.676 1403.25,707.676 1403.92,707.676 1404.6,707.676 1405.27,707.676 1405.95,707.676 1406.62,707.676 1407.3,707.676 1407.97,707.676 1408.65,707.676 1409.32,707.676 1410,707.676 1410.67,707.676 1411.35,707.676 1412.02,707.676 1412.7,707.676 1413.37,707.676 1414.05,707.676 1414.72,707.676 1415.4,707.676 1416.07,707.676 1416.75,707.676 1417.42,707.676 1418.1,707.676 1418.77,707.676 1419.45,707.676 1420.12,707.676 1420.8,707.676 1421.47,707.676 1422.15,707.676 1422.82,707.676 1423.5,707.676 1424.17,707.676 1424.85,707.676 1425.52,707.676 1426.2,707.676 1426.87,707.676 1427.55,707.676 1428.22,707.676 1428.9,707.676 1429.57,707.676 1430.25,707.676 1430.92,707.676 1431.6,707.676 1432.27,707.676 1432.95,707.676 1433.62,707.676 1434.3,707.676 1434.97,707.676 1435.65,707.676 1436.32,707.676 1437,707.676 1437.67,707.676 1438.35,707.676 1439.02,707.676 1439.7,707.676 1440.37,707.676 1441.05,707.676 1441.72,707.676 1442.4,707.676 1443.07,707.676 1443.75,707.676 1444.42,707.676 1445.1,707.676 1445.77,707.676 1446.45,707.676 1447.12,707.676 1447.8,707.676 1448.47,707.676 1449.15,707.676 1449.82,707.676 1450.5,707.676 1451.17,707.676 1451.85,707.676 1452.52,707.676 1453.2,707.676 1453.87,707.676 1454.55,707.676 1455.22,707.676 1455.9,707.676 1456.57,707.676 1457.25,707.676 1457.92,707.676 1458.6,707.676 1459.27,707.676 1459.95,707.676 1460.62,707.676 1461.3,707.676 1461.97,707.676 1462.65,707.676 1463.32,707.676 1464,707.676 1464.67,707.676 1465.35,707.676 1466.02,707.676 1466.7,707.676 1467.37,707.676 1468.05,707.676 1468.72,707.676 1469.4,707.676 1470.07,707.676 1470.75,707.676 1471.42,707.676 1472.1,707.676 1472.77,707.676 1473.45,707.676 1474.12,707.676 1474.8,707.676 1475.47,707.676 1476.15,707.676 1476.82,707.676 1477.5,707.676 1478.17,707.676 1478.85,707.676 1479.52,707.676 1480.2,707.676 1480.87,707.676 1481.55,707.676 1482.22,707.676 1482.9,707.676 1483.57,707.676 1484.25,707.676 1484.92,707.676 1485.6,707.676 1486.27,707.676 1486.95,707.676 1487.62,707.676 1488.3,707.676 1488.97,707.676 1489.65,707.676 1490.32,707.676 1491,707.676 1491.67,707.676 1492.35,707.676 1493.02,707.676 1493.7,707.676 1494.37,707.676 1495.05,707.676 1495.72,707.676 1496.4,707.676 1497.07,707.676 1497.75,707.676 1498.42,707.676 1499.1,707.676 1499.77,707.676 1500.45,707.676 1501.12,707.676 1501.8,707.676 1502.47,707.676 1503.15,707.676 1503.82,707.676 1504.5,707.676 1505.17,707.676 1505.85,707.676 1506.52,707.676 1507.2,707.676 1507.87,707.676 1508.55,707.676 1509.23,707.676 1509.9,707.676 1510.58,707.676 1511.25,707.676 1511.93,707.676 1512.6,707.676 1513.28,707.676 1513.95,707.676 1514.63,707.676 1515.3,707.676 1515.98,707.676 1516.65,707.676 1517.33,707.676 1518,707.676 1518.68,707.676 1519.35,707.676 1520.03,707.676 1520.7,707.676 1521.38,707.676 1522.05,707.676 1522.73,707.676 1523.4,707.676 1524.08,707.676 1524.75,707.676 1525.43,707.676 1526.1,707.676 1526.78,707.676 1527.45,707.676 1528.13,707.676 1528.8,707.676 1529.48,707.676 1530.15,707.676 1530.83,707.676 1531.5,707.676 1532.18,707.676 1532.85,707.676 1533.53,707.676 1534.2,707.676 1534.88,707.676 1535.55,707.676 1536.23,707.676 1536.9,707.676 1537.58,707.676 1538.25,707.676 1538.93,707.676 1539.6,707.676 1540.28,707.676 1540.95,707.676 1541.63,707.676 1542.3,707.676 1542.98,707.676 1543.65,707.676 1544.33,707.676 1545,707.676 1545.68,707.676 1546.35,707.676 1547.03,707.676 1547.7,707.676 1548.38,707.676 1549.05,707.676 1549.73,707.676 1550.4,707.676 1551.08,707.676 1551.75,707.676 1552.43,707.676 1553.1,707.676 1553.78,707.676 1554.45,707.676 1555.13,707.676 1555.8,707.676 1556.48,707.676 1557.15,707.676 1557.83,707.676 1558.5,707.676 1559.18,707.676 1559.85,707.676 1560.53,707.676 1561.2,707.676 1561.88,707.676 1562.55,707.676 1563.23,707.676 1563.9,707.676 1564.58,707.676 1565.25,707.676 1565.93,707.676 1566.6,707.676 1567.28,707.676 1567.95,707.676 1568.63,707.676 1569.3,707.676 1569.98,707.676 1570.65,707.676 1571.33,707.676 1572,707.676 1572.68,707.676 1573.35,707.676 1574.03,707.676 1574.7,707.676 1575.38,707.676 1576.05,707.676 1576.73,707.676 1577.4,707.676 1578.08,707.676 1578.75,707.676 1579.43,707.676 1580.1,707.676 1580.78,707.676 1581.45,707.676 1582.13,707.676 1582.8,707.676 1583.48,707.676 1584.15,707.676 1584.83,707.676 1585.5,707.676 1586.18,707.676 1586.85,707.676 1587.53,707.676 1588.2,707.676 1588.88,707.676 1589.55,707.676 1590.23,707.676 1590.9,707.676 1591.58,707.676 1592.25,707.676 1592.93,707.676 1593.6,707.676 1594.28,707.676 1594.95,707.676 1595.63,707.676 1596.3,707.676 1596.98,707.676 1597.65,707.676 1598.33,707.676 1599,707.676 1599.68,707.676 1600.35,707.676 1601.03,707.676 1601.7,707.676 1602.38,707.676 1603.05,707.676 1603.73,707.676 1604.4,707.676 1605.08,707.676 1605.75,707.676 1606.43,707.676 1607.1,707.676 1607.78,707.676 1608.45,707.676 1609.13,707.676 1609.8,707.676 1610.48,707.676 1611.15,707.676 1611.83,707.676 1612.5,707.676 1613.18,707.676 1613.85,707.676 1614.53,707.676 1615.2,707.676 1615.88,707.676 1616.55,707.676 1617.23,707.676 1617.9,707.676 1618.58,707.676 1619.25,707.676 1619.93,707.676 1620.6,707.676 1621.28,707.676 1621.95,707.676 1622.63,707.676 1623.3,707.676 1623.98,707.676 1624.65,707.676 1625.33,707.676 1626,707.676 1626.68,707.676 1627.35,707.676 1628.03,707.676 1628.7,707.676 1629.38,707.676 1630.05,707.676 1630.73,707.676 1631.4,707.676 1632.08,707.676 1632.75,707.676 1633.43,707.676 1634.1,707.676 1634.78,707.676 1635.45,707.676 1636.13,707.676 1636.8,707.676 1637.48,707.676 1638.15,707.676 1638.83,707.676 1639.5,707.676 1640.18,707.676 1640.85,707.676 1641.53,707.676 1642.2,707.676 1642.88,707.676 1643.55,707.676 1644.23,707.676 1644.9,707.676 1645.58,707.676 1646.25,707.676 1646.93,707.676 1647.6,707.676 1648.28,707.676 1648.95,707.676 1649.63,707.676 1650.3,707.676 1650.98,707.676 1651.65,707.676 1652.33,707.676 1653,707.676 1653.68,707.676 1654.35,707.676 1655.03,707.676 1655.7,707.676 1656.38,707.676 1657.05,707.676 1657.73,707.676 1658.4,707.676 1659.08,707.676 1659.75,707.676 1660.43,707.676 1661.1,707.676 1661.78,707.676 1662.45,707.676 1663.13,707.676 1663.8,707.676 1664.48,707.676 1665.15,707.676 1665.83,707.676 1666.5,707.676 1667.18,707.676 1667.85,707.676 1668.53,707.676 1669.2,707.676 1669.88,707.676 1670.55,707.676 1671.23,707.676 1671.9,707.676 1672.58,707.676 1673.25,707.676 1673.93,707.676 1674.6,707.676 1675.28,707.676 1675.95,707.676 1676.63,707.676 1677.3,707.676 1677.98,707.676 1678.65,707.676 1679.33,707.676 1680,707.676 1680.68,707.676 1681.35,707.676 1682.03,707.676 1682.7,707.676 1683.38,707.676 1684.05,707.676 1684.73,707.676 1685.4,707.676 1686.08,707.676 1686.75,707.676 1687.43,707.676 1688.1,707.676 1688.78,707.676 1689.45,707.676 1690.13,707.676 1690.8,707.676 1691.48,707.676 1692.15,707.676 1692.83,707.676 1693.5,707.676 1694.18,707.676 1694.85,707.676 1695.53,707.676 1696.2,707.676 1696.88,707.676 1697.55,707.676 1698.23,707.676 1698.9,707.676 1699.58,707.676 1700.25,707.676 1700.93,707.676 1701.6,707.676 1702.28,707.676 1702.95,707.676 1703.63,707.676 1704.3,707.676 1704.98,707.676 1705.65,707.676 1706.33,707.676 1707,707.676 1707.68,707.676 1708.35,707.676 1709.03,707.676 1709.7,707.676 1710.38,707.676 1711.05,707.676 1711.73,707.676 1712.4,707.676 1713.08,707.676 1713.75,707.676 1714.43,707.676 1715.1,707.676 1715.78,707.676 1716.45,707.676 1717.13,707.676 1717.8,707.676 1718.48,707.676 1719.15,707.676 1719.83,707.676 1720.5,707.676 1721.18,707.676 1721.85,707.676 1722.53,707.676 1723.2,707.676 1723.88,707.676 1724.55,707.676 1725.23,707.676 1725.9,707.676 1726.58,707.676 1727.25,707.676 1727.93,707.676 1728.6,707.676 1729.28,707.676 1729.95,707.676 1730.63,707.676 1731.3,707.676 1731.98,707.676 1732.65,707.676 1733.33,707.676 1734,707.676 1734.68,707.676 1735.35,707.676 1736.03,707.676 1736.7,707.676 1737.38,707.676 1738.05,707.676 1738.73,707.676 1739.4,707.676 1740.08,707.676 1740.75,707.676 1741.43,707.676 1742.1,707.676 1742.78,707.676 1743.45,707.676 1744.13,707.676 1744.8,707.676 1745.48,707.676 1746.15,707.676 1746.83,707.676 1747.5,707.676 1748.18,707.676 1748.85,707.676 1749.53,707.676 1750.2,707.676 1750.88,707.676 1751.55,707.676 1752.23,707.676 1752.9,707.676 1753.58,707.676 1754.25,707.676 1754.93,707.676 1755.6,707.676 1756.28,707.676 1756.95,707.676 1757.63,707.676 1758.3,707.676 1758.98,707.676 1759.65,707.676 1760.33,707.676 1761,707.676 1761.68,707.676 1762.35,707.676 1763.03,707.676 1763.7,707.676 1764.38,707.676 1765.05,707.676 1765.73,707.676 1766.4,707.676 1767.08,707.676 1767.75,707.676 1768.43,707.676 1769.1,707.676 1769.78,707.676 1770.45,707.676 1771.13,707.676 1771.8,707.676 1772.48,707.676 1773.15,707.676 1773.83,707.676 1774.5,707.676 1775.18,707.676 1775.85,707.676 1776.53,707.676 1777.2,707.676 1777.88,707.676 1778.55,707.676 1779.23,707.676 1779.9,707.676 1780.58,707.676 1781.25,707.676 1781.93,707.676 1782.6,707.676 1783.28,707.676 1783.95,707.676 1784.63,707.676 1785.3,707.676 1785.98,707.676 1786.65,707.676 1787.33,707.676 1788,707.676 1788.68,707.676 1789.35,707.676 1790.03,707.676 1790.7,707.676 1791.38,707.676 1792.05,707.676 1792.73,707.676 1793.4,707.676 1794.08,707.676 1794.75,707.676 1795.43,707.676 1796.1,707.676 1796.78,707.676 1797.45,707.676 1798.13,707.676 1798.8,707.676 1799.48,707.676 1800.15,707.676 1800.83,707.676 1801.5,707.676 1802.18,707.676 1802.85,707.676 1803.53,707.676 1804.2,707.676 1804.88,707.676 1805.55,707.676 1806.23,707.676 1806.9,707.676 1807.58,707.676 1808.25,707.676 1808.93,707.676 1809.6,707.676 1810.28,707.676 1810.95,707.676 1811.63,707.676 1812.3,707.676 1812.98,707.676 1813.65,707.676 1814.33,707.676 1815,707.676 1815.68,707.676 1816.35,707.676 1817.03,707.676 1817.7,707.676 1818.38,707.676 1819.05,707.676 1819.73,707.676 1820.4,707.676 1821.08,707.676 1821.75,707.676 1822.43,707.676 1823.1,707.676 1823.78,707.676 1824.45,707.676 1825.13,707.676 1825.8,707.676 1826.48,707.676 1827.15,707.676 1827.83,707.676 1828.5,707.676 1829.18,707.676 1829.85,707.676 1830.53,707.676 1831.2,707.676 1831.88,707.676 1832.55,707.676 1833.23,707.676 1833.9,707.676 1834.58,707.676 1835.25,707.676 1835.93,707.676 1836.6,707.676 1837.28,707.676 1837.95,707.676 1838.63,707.676 1839.3,707.676 1839.98,707.676 1840.65,707.676 1841.33,707.676 1842,707.676 1842.68,707.676 1843.35,707.676 1844.03,707.676 1844.7,707.676 1845.38,707.676 1846.05,707.676 1846.73,707.676 1847.4,707.676 1848.08,707.676 1848.75,707.676 1849.43,707.676 1850.1,707.676 1850.78,707.676 1851.45,707.676 1852.13,707.676 1852.8,707.676 1853.48,707.676 1854.15,707.676 1854.83,707.676 1855.5,707.676 1856.18,707.676 1856.85,707.676 1857.53,707.676 1858.2,707.676 1858.88,707.676 1859.55,707.676 1860.23,707.676 1860.9,707.676 1861.58,707.676 1862.25,707.676 1862.93,707.676 1863.6,707.676 1864.28,707.676 1864.95,707.676 1865.63,707.676 1866.3,707.676 1866.98,707.676 1867.65,707.676 1868.33,707.676 1869,707.676 1869.68,707.676 1870.35,707.676 1871.03,707.676 1871.7,707.676 1872.38,707.676 1873.05,707.676 1873.73,707.676 1874.4,707.676 1875.08,707.676 1875.75,707.676 1876.43,707.676 1877.1,707.676 1877.78,707.676 1878.45,707.676 1879.13,707.676 1879.8,707.676 1880.48,707.676 1881.15,707.676 1881.83,707.676 1882.5,707.676 1883.18,707.676 1883.85,707.676 1884.53,707.676 1885.2,707.676 1885.88,707.676 1886.55,707.676 1887.23,707.676 1887.9,707.676 1888.58,707.676 1889.25,707.676 1889.93,707.676 1890.6,707.676 1891.28,707.676 1891.95,707.676 1892.63,707.676 1893.3,707.676 1893.98,707.676 1894.65,707.676 1895.33,707.676 1896,707.676 1896.68,707.676 1897.35,707.676 1898.03,707.676 1898.7,707.676 1899.38,707.676 1900.05,707.676 1900.73,707.676 1901.4,707.676 1902.08,707.676 1902.75,707.676 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalisation in the example \"Exact diagonalisation\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using LinearAlgebra\nexact_energy = eigvals(Matrix(H))[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906392","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ± $(se.err)\n    Projected Energy: $(v.val) ± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.027923810504714 ± 0.027645123065160745\nProjected Energy: -4.016314467689392 ± (0.004304544683139788, 0.00419639764247659)\nExact Energy: -4.021502406906392\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-Rimu/StatsTools","page":"StatsTools","title":"Module Rimu/StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module Rimu/StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from lomc! as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; α = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-α.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ± 0.0029\n  with uncertainty of ± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13×6 DataFrame\n Row │ blocks  mean      std_err      std_err_err  p_cov       mj\n     │ Int64   Float64   Float64      Float64      Float64     Float64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 │   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 │   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 │   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 │    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 │    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 │    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 │     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 │     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 │     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 │      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 │      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 │      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ⠀⠀⠀⠀⠀⠀⠀⠀⠀std err vs blocking steps⠀⠀⠀⠀⠀⠀⠀⠀\n               ┌────────────────────────────────────────┐\n    0.00423501 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀│ m test\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢸⠀⠀⠀⠀│ std err\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⡠⢺⠒⠒⢺⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⡀⠀⠀⡆⣀⠤⡗⠉⠀⢸⠀⠀⢸⡆⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡧⠤⠔⡗⠊⠉⡏⠀⠀⡇⠀⠀⢸⠀⠀⢸⢣⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⡇⠀⠀⠁⠀⠀⠁⠀⠀⠁⠀⠀⠀⠀⠀⢸⠸⡀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠁⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⡇⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠊⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣦⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀│\n               │⠀⠀⠀⢀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n               │⠀⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n   -0.00012335 │⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠧⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤│\n               └────────────────────────────────────────┘\n               ⠀0.64⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀k⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀13.36⠀\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; α = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; α=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.σ_f using x_by_y_linear. The standard error estimate r.σ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.δ_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*σ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3×3 DataFrame\n Row │ res      res_l    res_u\n     │ Float64  Float64  Float64\n─────┼───────────────────────────\n   1 │    11.5  1.7282   1.7282\n   2 │    13.0  1.7282   1.7282\n   3 │    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dτ=df.dτ[end], skip=0)\n\nCalculate the growth witness directly from a DataFrame returned by lomc!. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0) -> g\ngrowth_witness(df::DataFrame, [b]; skip=0) -> g\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ≥ 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n) -> r::RatioBlockingResult\ngrowth_estimator(\n    df::DataFrame, h; \n    shift_name=:shift, \n    norm_name=:norm, \n    dτ=df.dτ[end], \n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively. Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin().\n\nE_gr = E_r - frac1dτln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the (biased) shift estimator. Error propagation is done with MonteCarloMeasurements. Progagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a DataFrame returned by lomc!. The keyword arguments shift_name and norm_name can be used to change the names  of the relevant columns.\n\nSee also mixed_estimator() and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{DataFrames.DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\n-> (;df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj, \n    vproj_name=:vproj, \n    shift_name=:shift, \n    dτ=df.dτ[end], \n    kwargs...\n)\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the unweighted ratio. Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame  returned by lomc!. The keyword arguments hproj_name, vproj_name, and  shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrames.DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{DataFrames.DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(\n    df::DataFrame;\n    skip=0, hproj=:hproj, vproj=:vproj, kwargs...\n) -> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step =ProjectedEnergy() to set these up in lomc!()). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\", \n    vec_name=\"dot\", \n    h=0,\n    skip=0, \n    Anorm=1,\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)  \n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas. \n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n)  and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector  holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector  holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame returned by  lomc!. The keyword arguments shift_name, op_name and vec_name can be used to  change the names of the relevant columns, see AllOverlaps for default  formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific  reweighting depth can be set with keyword argument h. The default is h = 0 which  calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique  described in Umrigar et al. (1993).  Reweighting is done over h time steps and length(shift) - skip time steps are used  for the blocking analysis done with ratio_of_means().  dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{DataFrames.DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ... \nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{DataFrames.DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...) -> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{DataFrames.DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the result of replica lomc! passed as  argument df, using replicas _1 and _2. Calls ratio_of_means() to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |ψ⟩ and |ϕ⟩ is defined as\n\nF(ψϕ) = fracψϕ^2ψψϕϕ \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v⋅v == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame version can extract the relevant information from the result of lomc!. Set up lomc! with the keyword argument replica = AllOverlaps(R) and R ≥ 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ± 0.029\n  with uncertainty of ± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; α = 0.01) -> k\nmtest(table::NamedTuple; α = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-α after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, σ_f, δ_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nσ_f::T: std from linear propagation\nδ_y::T: coefficient of variation for denominator (≤ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, μ, σ)\nparticles(samples, μ::AbstractVector, Σ::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, σ_f, δ_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nσ_f standard deviation of f from linear error propagation (normal approximation)\nδ_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(μ_x,μ_y,σ_x,σ_y,ρ) -> f, σ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013).\n\nσ_f = sqrtfracσ_xμ_y^2 + fracμ_x σ_yμ_y^2^2 - frac2 ρ μ_xμ_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3×7 DataFrame\n Row │ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     │ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 │    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 │    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1×9 DataFrame\n Row │ val       val_l      val_u      val_f     val_σ_f    val_δ_y    val_k  val_blocks  val_success\n     │ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n─────┼────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7×6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS…</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple…</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.402041</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.4387e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">1.066e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">8.797e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">2.986e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.865e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">7.965e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ≠ basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10×10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999989\n -0.9999999999999982\n -0.9999999999999973\n  1.0\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10×10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.526707-0.23646im       2.77556e-17-0.204124im             0.0+0.0im          0.526707+0.23646im       2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.372438+0.167202im              0.0-0.288675im             0.0+0.0im         -0.372438-0.167202im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+2.77556e-17im   -1.2326e-32+2.77556e-17im          0.0+0.353553im          0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      1.11022e-16+1.66533e-16im           0.0-0.612372im             0.0+0.0im       5.55112e-17+2.77556e-17im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   1.11022e-16-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im          0.0-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im               0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im               0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.167202-0.372438im         0.288675-1.95105e-16im          0.0+0.0im         -0.167202+0.372438im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im       0.23646+0.526707im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.23646-0.526707im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im               0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nΔE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 7.155734338400866e-18\n 2.7755575615628883e-17\n 0.15915494309189537\n 0.15915494309189543\n 0.15915494309189548","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ΔE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalisation","page":"Exact diagonalisation","title":"Example 4: Exact diagonalisation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalisation method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalisation","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"HubbardMom1D(BoseFS{4,5}(0, 0, 4, 0, 0); u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"Before performing exact diagonalisation, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalisation and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRep","page":"Exact diagonalisation","title":"The BasisSetRep","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRep under the hood. The BasisSetRep, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRep only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"bsr = BasisSetRep(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"To access the matrix or basis, access the sm and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"bsr.sm","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0⟩\"\n fs\"|0 1 2 1 0⟩\"\n fs\"|1 0 2 0 1⟩\"\n fs\"|1 0 1 2 0⟩\"\n fs\"|0 0 1 1 2⟩\"\n fs\"|0 2 1 0 1⟩\"\n fs\"|2 1 1 0 0⟩\"\n fs\"|0 2 0 2 0⟩\"\n fs\"|1 1 0 1 1⟩\"\n fs\"|2 0 0 0 2⟩\"\n fs\"|0 0 0 3 1⟩\"\n fs\"|3 0 0 1 0⟩\"\n fs\"|0 1 0 0 3⟩\"\n fs\"|1 3 0 0 0⟩\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"14×14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalisation","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalisation","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770728\n  0.1358418221962303\n  0.15789998694609153\n  0.8767114411781431\n  1.5305929970973349\n  1.583573261186749\n  3.072870330325868\n  3.1256726539518525\n  4.862107221562181\n  6.260694850380592\n  6.402671211183115\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"14×14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -5.46153e-15  -0.0221221  -0.0697193   3.30753e-15  -0.0314466   -3.25591e-16  -0.0360987   -0.0161557  -1.08119e-16  -0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     5.97476e-14   0.225254   -0.132826   -3.44233e-17   0.00292026  -2.22083e-15  -0.0861158   -0.0907789  -2.63831e-16  -0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -1.1734e-13   -0.447424   -0.63969     4.40954e-14  -0.383444    -7.21042e-15  -0.431051    -0.181167   -5.40614e-16  -0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234       0.122119    -0.123629     -0.106455    -0.126661    0.0829132    -0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773      -0.0584554   -0.601232     -0.467179    -0.215841   -0.140166     -0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234       0.122119     0.123629     -0.106455    -0.126661   -0.0829132    -0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773      -0.0584554    0.601232     -0.467179    -0.215841    0.140166     -0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     2.5354e-14    0.1111     -0.172508   -2.60229e-14   0.207974     2.57978e-15   0.0848902   -0.149153   -5.57509e-16  -0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -2.14419e-14  -0.0847116   0.082999    3.13063e-14  -0.274424     5.10554e-15   0.575786    -0.61385    -1.11262e-15  -0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   1.10167e-14   0.0427486   0.0110863  -7.64953e-15   0.0663108    1.04296e-15   0.00167015   0.0832916   1.47632e-15   0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627      0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536   -0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631     0.012992    -0.111668      0.0393523    0.423534    0.688046     -0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631     0.012992     0.111668      0.0393523    0.423534   -0.688046     -0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627      0.588225     0.332816     -0.0472302   -0.18528     0.00844536   -0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalisation","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"using Arpack\n\nnum_eigvals = 3\n\nsm = sparse(ham)\nvals_ar, vecs_ar = eigs(sm; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.363124291613358\n -0.759019192277075","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sm, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"14-element Vector{Float64}:\n -6.979863998321608\n -3.363124291613371\n -0.759019192277087\n  0.13584182219620722\n  0.15789998694609686\n  0.8767114411781343\n  1.5305929970973162\n  1.5835732611867481\n  3.072870330325869\n  3.1256726539518374\n  4.862107221562164\n  6.260694850380595\n  6.402671211183113\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"If diagonalisation takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalisation","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalisation.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0⟩\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalisation","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"10-element Vector{Float64}:\n -6.97986399832162\n -3.363124291613361\n -0.7590191922770769\n  0.15789998694608018\n  0.8767114411781443\n  1.5835732611867421\n  3.125672653951844\n  4.862107221562177\n  6.402671211183111\n  9.093371706203955","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"4-element Vector{Float64}:\n 0.13584182219621782\n 1.5305929970973278\n 3.0728703303258604\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"sort([even_eigs; odd_eigs]) ≈ all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalisation","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0⟩\" => -0.0214153\n  fs\"|2 0 0 0 2⟩\" => -0.00237613\n  fs\"|0 0 4 0 0⟩\" => -0.980348\n  fs\"|0 0 0 3 1⟩\" => 0.00363555\n  fs\"|2 1 1 0 0⟩\" => -0.0119687\n  fs\"|1 0 2 0 1⟩\" => 0.0768085\n  fs\"|1 3 0 0 0⟩\" => 0.00363555\n  fs\"|0 1 2 1 0⟩\" => 0.177701\n  fs\"|0 0 1 1 2⟩\" => -0.0119687\n  fs\"|3 0 0 1 0⟩\" => 0.00195478\n  fs\"|0 2 0 2 0⟩\" => -0.0138439\n  fs\"|1 1 0 1 1⟩\" => -0.00234782\n  fs\"|0 1 0 0 3⟩\" => 0.00195478\n  fs\"|0 2 1 0 1⟩\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"5-element Vector{Float64}:\n 0.006686138945087796\n 0.033070399772041674\n 3.920486922565741\n 0.03307039977204166\n 0.0066861389450878495","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalisation","title":"Exact diagonalisation","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\nRimuIO.save_dvec(filename, dv) Save dict vector in BSON format.\nRimuIO.load_dvec(filename) Load BSON file into dict vector.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.load_dvec-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_dvec","text":"RimuIO.load_dvec(filename) -> AbstractDVec\n\nLoad AbstractDVec stored in BSON.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrames.DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_dvec-Tuple{Any, Any}","page":"I/O","title":"Rimu.RimuIO.save_dvec","text":"RimuIO.save_dvec(filename, dvec)\n\nSave dvec in BSON format.\n\nNotes\n\nOnly the localpart is saved. You may need to re-wrap the result in MPIData if using MPI.\nWhen using this function with MPI, make sure to save the vectors from different ranks to different files, e.g. by saving as RimuIO.save_dvec(\"filename-$(mpi_rank()).bson\", dvec).\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"module Hamiltonians\n\nThis module defines Hamiltonian types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nG2MomCorrelator\nG2RealCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Usage-with-FCIQMC-and-exact-diagonalisation","page":"Hamiltonians","title":"Usage with FCIQMC and exact diagonalisation","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"In order to define a specific model Hamiltonian with relevant parameters for the model, instantiate the model like this in the input file:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"hubb = HubbardReal1D(BoseFS((1,2,0,3)); u=1.0, t=1.0)","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonian hubb is now ready to be used for FCIQMC in lomc! and for exact diagonalisation with KrylovKit.jl directly, or after transforming into a sparse matrix first with","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"using SparseArrays\nsh = sparse(hubb)","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"or into a full matrix with","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"using LinearAlgebra\nfh = Matrix(hubb)","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This functionality relies on","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.BasisSetRep\nsparse\nMatrix","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BasisSetRep","page":"Hamiltonians","title":"Rimu.Hamiltonians.BasisSetRep","text":"BasisSetRep(\n    h::AbstractHamiltonian, addr=starting_address(h);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRep(h::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator h with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(h) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsm: sparse matrix representing h in the basis basis\nbasis: vector of addresses\nh: the Hamiltonian\n\nExample\n\njulia> h = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRep(h)\nBasisSetRep(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3×3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:\n  0.0  -1.0  -1.0\n -1.0   0.0  -1.0\n -1.0  -1.0   0.0\n\njulia> BasisSetRep(h, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating\nBasisSetRep(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2×2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:\n  0.0  -1.0\n -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues\n3-element Vector{Float64}:\n -1.9999999999999996\n  0.9999999999999997\n  1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector\n3-element Vector{Float64}:\n -0.5773502691896257\n -0.5773502691896255\n -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec\nDVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()\n  fs\"|0 0 1⟩\" => -0.57735\n  fs\"|0 1 0⟩\" => -0.57735\n  fs\"|1 0 0⟩\" => -0.57735\n\nHas methods for dimension, sparse, Matrix, starting_address.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#SparseArrays.sparse","page":"Hamiltonians","title":"SparseArrays.sparse","text":"sparse(h::AbstractHamiltonian, addr=starting_address(h); kwargs...)\nsparse(bsr::BasisSetRep)\n\nReturn a sparse matrix representation of h or bsr. kwargs are passed to BasisSetRep.\n\nSee BasisSetRep.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Base.Matrix","page":"Hamiltonians","title":"Base.Matrix","text":"Matrix(h::AbstractHamiltonian, addr=starting_address(h); sizelim=10^4, kwargs...)\nMatrix(bsr::BasisSetRep)\n\nReturn a dense matrix representation of h or bsr. kwargs are passed to BasisSetRep.\n\nSee BasisSetRep.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"If only the basis is required and not the matrix representation it is more efficient to use","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.build_basis","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.build_basis","page":"Hamiltonians","title":"Rimu.Hamiltonians.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRep.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i ϵ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential ϵ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleσ t_σ a^_iσ a_jσ +\n  frac12sum_iσ u_σσ n_iσ (n_iσ - 1) +\n  sum_iστu_στ n_iσ n_iτ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iσd v_σd x_di^2 n_iσ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented LatticeGeometrys for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C × D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(add::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k δ_r+qp+k\n\nArguments\n\nadd: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, η, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl \n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order  degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl \n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and  the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between  basis states of any noninteracting energy level, leading to many more offdiagonals and  fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger  restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The    allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make    the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the    interactions. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without    comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building  a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, η, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i ϵ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that  conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using  first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d) \n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, see four_oscillator_integral_general, with the additional restriction  that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to    make the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function  potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi ϵ_mathbfi n_mathbfi \n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix  representation of this Hamiltonian for a single particle is completely dense in the even-parity  subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nηs = (): a tuple of aspect ratios for the remaining dimensions (η_y, ...). Should be empty    for a 1D trap or contain values greater than 1.0. The maximum index    in other dimensions will be the largest even number less than M/η_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,    including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if    only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of \nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kσk^2 n_kσ \n    quad + sum_pqkσσ T_pqk a^_p-kσ a^_q+kσ a_qσ a_pσ \n    quad + sum_pqskkσσ Q_kka^_p-kσ a^_q+kσ a^_s+k-kσ\n                                       a_sσ a_qσ a_pσ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M÷2, M÷2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M÷2, M÷2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address α is replaced by frac12(α  α) for even and odd parity, respectively, where ᾱ == reverse(α).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(BoseFS{3,3}(0, 2, 1); u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ≈ eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ≈ eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ≤ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"G2MomCorrelator\nG2RealCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s b^_p  b_q a_r δ_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s a^_p  a_q a_r δ_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ≤ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ≤ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with  AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see  G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice  separated by a distance d with 0 ≤ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling  number and barn = NM is the mean filling number of lattice sites with N particles and  M lattice sites (or modes). \n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iσ = hat a^_iσ hat a_iσ\n\nwhere i is the mode and σ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0⟩\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0⟩\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nMethods that need to be implemented:\n\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer)\ndiagonal_element(::AbstractHamiltonian, address)\nstarting_address(::AbstractHamiltonian)\n\nOptional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x⋅(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRep: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over reachable off-diagonal matrix elements of type <:AbstractOffdiagonals. Defaults to returning Offdiagonals(h, a)\n\nSee also\n\nOffdiagonals\nAbstractOffdiagonals\n\njulia> addr = BoseFS((3,2,1));\n\n\njulia> H = HubbardReal1D(addr);\n\n\njulia> h = offdiagonals(H, addr)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1⟩\", -3.0)\n (fs\"|2 2 2⟩\", -2.449489742783178)\n (fs\"|3 1 2⟩\", -2.0)\n (fs\"|4 1 1⟩\", -2.8284271247461903)\n (fs\"|4 2 0⟩\", -2.0)\n (fs\"|3 3 0⟩\", -1.7320508075688772)\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, add)\n\nCompute the diagonal matrix element of the linear operator ham at address add.\n\nExample\n\njulia> addr = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(addr);\n\n\njulia> diagonal_element(H, addr)\n8.666666666666664\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. Part of the AbstractHamiltonian interface. When called on an AbstractMatrix return the index of the lowest diagonal element.\n\nExample\n\njulia> addr = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(addr);\n\n\njulia> addr == starting_address(H)\ntrue\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, add)\n\nCompute the number of number of reachable configurations from address add.\n\nExample\n\njulia> addr = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(addr);\n\n\njulia> num_offdiagonals(H, addr)\n10\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nLOStructure speficies properties of the linear operator op. If a special structure is known this can speed up calculations. Implemented structures are:\n\nIsDiagonal: The operator is diagonal.\nIsHermitian: The operator is complex and Hermitian or real and symmetric.\nAdjointKnown: The operator is not Hermitian, but its adjoint is implemented.\nAdjointUnknown: adjoint for this operator is not implemented.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ….\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(BoseFS((1,2,3)))\n28\n\njulia> dimension(HubbardReal1D(BoseFS((1,2,3))))\n28\n\njulia> dimension(HubbardReal1D(near_uniform(BoseFS{200,100})))\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> dimension(HubbardReal1D(near_uniform(BoseFS{200,100})))|>Float64\n1.3860838210861882e81\n\nSee also BasisSetRep.\n\nExtended Help\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). When extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h. Part of the AbstractHamiltonian interface. Defaults to typeof(starting_address(h)).\n\nOverload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb⋅(1:7) == onr(b)⋅(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w⋅op(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ⋅ A ⋅ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address)\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the possibly non-zero off-diagonal matrix elements of the column of ham indexed by add.\n\nThis is the default implementation defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also\n\noffdiagonals\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"LatticeGeometry\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\nnum_neighbours\nnum_dimensions\nneighbour_site","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LatticeGeometry","page":"Hamiltonians","title":"Rimu.Hamiltonians.LatticeGeometry","text":"abstract type LatticeGeometry{D}\n\nA LatticeGeometry controls which sites in an AbstractFockAddress are considered to be neighbours.\n\nCurrently only supported by HubbardRealSpace.\n\nAvailable implementations\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nInterface to implement\n\nBase.size: return the lattice size.\nneighbour_site(::LatticeGeometry, ::Int, ::Int)\nnum_dimensions(::LatticeGeometry)\nnum_neighbours(::LatticeGeometry)\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(size...) <: LatticeGeometry\n\nRectangular lattice with periodic boundary conditions of size size.\n\nThe dimension of the lattice is controlled by the number of arguments given to its constructor.\n\nThis is the default geometry used by HubbardRealSpace.\n\nExample\n\njulia> lattice = PeriodicBoundaries(5, 4) # 2D lattice of size 5 × 4\nPeriodicBoundaries(5, 4)\n\njulia> num_neighbours(lattice)\n4\n\njulia> neighbour_site(lattice, 1, 1)\n2\n\njulia> neighbour_site(lattice, 1, 2)\n5\n\njulia> neighbour_site(lattice, 1, 3)\n6\n\njulia> neighbour_site(lattice, 1, 4)\n16\n\nSee also\n\nLatticeGeometry\nHardwallBoundaries\nLadderBoundaries\nnum_neighbours\nneighbour_site\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries\n\nRectangular lattice with hard wall boundary conditions of size size. neighbour_site() will return 0 for some neighbours of boundary sites.\n\nThe dimension of the lattice is controlled by the number of arguments given to its constructor.\n\nExample\n\njulia> lattice = HardwallBoundaries(5) # 1D lattice of size 5\nHardwallBoundaries(5)\n\njulia> neighbour_site(lattice, 1, 1)\n2\n\njulia> neighbour_site(lattice, 1, 2)\n0\n\n\nSee also\n\nLatticeGeometry\nPeriodicBoundaries\nLadderBoundaries\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(size...; subgeometry=PeriodicBoundaries) <: LatticeGeometry\n\nLattice geometry where the first dimension is of size 2 and has hardwall boundary conditions. Using this geometry is more efficient than using HardwallBoundaries with a size of 2, as it does not generate rejected neighbours.\n\nIn other dimensions, it behaves like its subgeometry, which can be any LatticeGeometry.\n\nExample\n\njulia> lattice = LadderBoundaries(2, 3, 4) # 3D lattice of size 2 × 3 × 4\nLadderBoundaries(2, 3, 4)\n\njulia> num_neighbours(lattice)\n5\n\njulia> neighbour_site(lattice, 1, 1)\n2\n\njulia> neighbour_site(lattice, 1, 2)\n3\n\njulia> neighbour_site(lattice, 1, 3)\n5\n\njulia> neighbour_site(lattice, 1, 4)\n7\n\njulia> neighbour_site(lattice, 1, 5)\n19\n\nSee also\n\nLatticeGeometry\nPeriodicBoundaries\nHardwallBoundaries\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.num_neighbours","page":"Hamiltonians","title":"Rimu.Hamiltonians.num_neighbours","text":"num_neighbours(geom::LatticeGeometry)\n\nReturn the number of neighbours each lattice site has in this geometry.\n\nNote that for efficiency reasons, all sites are expected to have the same number of neighbours. If some of the neighbours are invalid, this is handled by having neighbour_site return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.num_dimensions","page":"Hamiltonians","title":"Rimu.Hamiltonians.num_dimensions","text":"num_dimensions(geom::LatticeGeometry)\n\nReturn the number of dimensions of the lattice in this geometry.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbour_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbour_site","text":"neighbour_site(geom::LatticeGeometry, site, i)\n\nFind the i-th neighbour of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions  and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions, \n\n    mathcalI(ijkl) = int_-infty^infty dx  \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function,  and is non-zero unless i+j+k+l is odd. See e.g.  Titchmarsh (1948). This is a generalisation of the closed form in  Papenbrock (2002), which is is the special  case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin, \n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state  corresponds to a D-tuple of harmonic oscillator indices mathbfn_i.  S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of  phi_i(0) to speed-up the calculation. The values can be calculated with  log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D  harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"testing.html#Modifying-the-Project.toml-file","page":"Code testing","title":"Modifying the Project.toml file","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"In order for the testing code to be able to run on the cloud server, external packages that are accessed in the code with using or import need to be installed first. This is done in the script actions.yml via the package manager, based on the information contained in the file test/Project.toml. More packages can be added to this file using the package manager in the following way: Say we want to install the package DelimitedFiles. At the Julia REPL, type the following:","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"julia> cd(\"test\")\njulia> ]\n(v1.0) pkg> activate .\n(test) pkg> add DelimitedFiles","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"This will a new line to the file Project.toml with the name of the package and the corresponding uuid. When Pipelines now runs the commands in yml script, it will install the package DelimitedFiles before running the runtest.jl script.","category":"page"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nαmathrmnaddrrangle\n\nReturns the new address naddr and the factor α. The value of α is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0⟩\" => 1\n\njulia> fs\"|0 1 2 0⟩\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3⟩⊗|0 1 0⟩\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|↑↓↑⟩\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0⟩{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0⟩{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ≤ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Σ_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen)\n\nCompute the new address of a hopping event for the Bose-Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic.\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ≤ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|⋅↑↑↑⋅⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|↑↓↓⟩\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3⟩{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s11\"}} where var\"#s11\", Tuple{Vararg{Int64, var\"#s10\"}} where var\"#s10\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n→ (nadd, α)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of α is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3⟩{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, α = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.11.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (\\hat{A}_1, ..., \\hat{A}_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dτ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ after projecting onto projector.\n\nS^n+1 = S^n -fracζdτlnleft(fracPΨ^(n+1)PΨ^(n)right)-fracξdτlnleft(fracPΨ^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4, α = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracξdτlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-α)*walkernumber() + α*UniformProjector()⋅ψ computed with walkernumber() and UniformProjector(). When ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)-fracξdτlnleft(fracΨ_1^n+1Ψ_1^texttargetright)\n\nWhen ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08, ξ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ and ξ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dτ) <: AbstractHamiltonian\n\nFirst order transition operator\n\n𝐓 = 1 + dτ(S - 𝐇)\n\nwhere 𝐇 is the hamiltonian and S is the shift.\n\n𝐓 represents the first order expansion of the exponential evolution operator of the imaginary-time Schrödinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a replica after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step(::PostStepStrategy, ::ReplicaState).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.QMCState","page":"API","title":"Rimu.QMCState","text":"QMCState\n\nHolds all information needed to run lomc!, except the dataframe. Holds an NTuple of ReplicaStates, the Hamiltonian, and various strategies that control the algorithm. Constructed and returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState(v, wm, pnorm, params, id)\n\nStruct that holds all information needed for an independent run of the algorithm.\n\nCan be advanced a step forward with advance!.\n\nFields\n\nhamiltonian: the model Hamiltonian.\nv: vector.\npv: vector from the previous step.\nwm: working memory.\npnorm: previous walker number (see walkernumber).\nparams: the FciqmcRunStrategy.\nid: string ID appended to reported column names.\n\nSee also QMCState, ReplicaStrategy, replica_stats, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\n\nInternal structure that holds the temporary reported values as well as metadata.\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_r_strat\nreport!\nreport_after_step\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dτ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"Abstract type for defining the strategy for updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(⋅,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dτ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TripleLogUpdate","page":"API","title":"Rimu.TripleLogUpdate","text":"TripleLogUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4, η = 0.01) <: ShiftStrategy\n\nStrategy for updating the shift according to the extended log formula with damping parameters ζ, ξ, and η.\n\nS^n+1 = S^n -fracζdτlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracξdτlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n- fracηdτlnleft(fracℜ(Ψ^n+1)_1^2 + ℑ(Ψ^n+1)_1^2\nℜ(Ψ^n)_1^2 + ℑ(Ψ^n)_1^2right)\n\nwhere N_mathrmw is the walkernumber(). When ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, s_strat)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{Any, Rimu.QMCState, Rimu.ReplicaState}","page":"API","title":"Rimu.advance!","text":"advance!(report::Report, state::QMCState, replica::ReplicaState)\n\nAdvance the replica by one step. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsStochasticInteger(),\n    initiator=NonInitiator(),\n    threading=nothing\n)\n\nReturn a default starting vector for lomc!. The default choice for the starting vector is\n\nv = PDVec(address => 10; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => 10; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => 10; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and [InitiatorRule].\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::QMCState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a QMCState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndτ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nreplica::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy.\nr_strat::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a QMCState that can be used for continuations.\n\nExample\n\njulia> add = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(add);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 11)\n\njulia> size(df2)\n(200, 11)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(BoseFS{6,3}(1, 2, 3); u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nτ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, ζ = 0.08, ξ = ζ^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nparams::FciqmcRunStrategy = RunTillLastStep(laststep = 100, dτ = 0.01, shift = diagonal_element(ham, address) - basic parameters of simulation state, see FciqmcRunStrategy. Parameter values are overridden by explicit keyword arguments laststep, dτ, shift; is mutated.\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step","page":"API","title":"Rimu.post_step","text":"post_step(::PostStepStrategy, ::ReplicaState) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_r_strat-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_r_strat","text":"refine_r_strat(r_strat::ReportingStrategy) -> r_strat\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, replicas::NTuple{N,ReplicaState}) -> (names, values)\n\nReturn the names and values of statistics related to N replicas consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also ReplicaState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step-Tuple{ReportingStrategy, Vararg{Any}}","page":"API","title":"Rimu.report_after_step","text":"report_after_step(::ReportingStrategy, step, report, state)\n\nThis function is called at the very end of a step, after reporting_interval steps. For example, it can be used to print some information to stdout.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nThrows an error if key already exists.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ≈ num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|⋅↑⇅↓⋅⟩\" => 1.0, fs\"|↓↓⋅↑↑⟩\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|↓↓⋅↑↑⟩\" => 0.5\n  fs\"|⋅↑⇅↓⋅⟩\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dτ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dτ","text":"update_dτ(s<:TimeStepStrategy, dτ, tnorm) -> new dτ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift","page":"API","title":"Rimu.update_shift","text":"update_shift(s <: ShiftStrategy, shift, shiftMode, tnorm, pnorm, dτ, step, df, v_new, v_old)\n\nUpdate the shift according to strategy s. See ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Rimu/StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with mpirun julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Next, we construct the starting vector. We use a PDVec, which is automatically MPI-distributed if MPI is available. We set the vector's stochastic style to IsDynamicSemistochastic, which improves statistics and reduces the sign problem.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails. Setting save_if=is_mpi_root() will ensure only the root MPI rank will write to the file. The chunk_size parameter determines how often the data is saved to the file. Progress messages are suppressed with io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"r_strat = ReportToFile(\n    filename=\"result.arrow\",\n    save_if=is_mpi_root(),\n    reporting_interval=1,\n    chunk_size=1000,\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10_000 walkers. We will also compute the projected energy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"s_strat = DoubleLogUpdate(targetwalkers=10_000)\npost_step = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ProjectedEnergy{HubbardMom1D{Float64, 10, BoseFS{10, 10, BitString{19, 1, UInt32}}, 6.0, 1.0}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}}(:vproj, :hproj, HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}((Pair{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64}[fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 1.0],)), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}((Pair{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64}[fs\"|1 0 0 0 8 0 0 0 1 0⟩\" => 5.692099788303083, fs\"|0 0 0 0 8 0 0 0 0 2⟩\" => 4.024922359499621, fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 7.0, fs\"|0 0 1 0 8 0 1 0 0 0⟩\" => 5.692099788303083, fs\"|0 0 0 1 8 1 0 0 0 0⟩\" => 5.692099788303083, fs\"|0 1 0 0 8 0 0 1 0 0⟩\" => 5.692099788303083],)))","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"lomc!(H, initial_vector; r_strat, s_strat, post_step, dτ=1e-4, laststep=10_000);\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schrödinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Blöte PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schrödinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija Čufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. lomc!.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main lomc!() computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI for use in lomc!() is enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. Čufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelmüller, D. Huber, M. Čufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/π^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↑↓↓⟩\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => 4.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => -1.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => -1.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => -1.0\n  fs\"|↑↑↓↓⟩\" => -4.0\n  fs\"|↓↑↓↑⟩\" => -1.0\n  fs\"|↓↑↑↓⟩\" => 1.0\n  fs\"|⇅⋅⋅⇅⟩\" => -1.0\n  fs\"|↑↓↓↑⟩\" => 1.0\n  fs\"|⋅⇅⇅⋅⟩\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => -2.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => 3.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => 3.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\ndeposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\nwalkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()⋅v == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
